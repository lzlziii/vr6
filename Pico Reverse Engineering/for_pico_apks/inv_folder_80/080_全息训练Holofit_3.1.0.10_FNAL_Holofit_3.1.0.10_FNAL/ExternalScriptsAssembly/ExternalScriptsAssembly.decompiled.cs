using System;
using System.Collections;
using System.Collections.Concurrent;
using System.Collections.Generic;
using System.Diagnostics;
using System.Drawing;
using System.Drawing.Imaging;
using System.Globalization;
using System.IO;
using System.Net;
using System.Net.Security;
using System.Net.Sockets;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Security.Cryptography.X509Certificates;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using System.Threading.Tasks;
using System.Xml;
using Boxophobic.StyledGUI;
using CurvedUI;
using DG.Tweening;
using DG.Tweening.Core;
using DG.Tweening.Plugins.Core.PathCore;
using DG.Tweening.Plugins.Options;
using DigitalOpus.MB.Core;
using Facebook.WitAi;
using Facebook.WitAi.Lib;
using Google.ProtocolBuffers;
using Google.ProtocolBuffers.Collections;
using GoogleARCore;
using GoogleARCore.CrossPlatform;
using GoogleARCoreInternal;
using GoogleARCoreInternal.CrossPlatform;
using GoogleVR.Beta;
using GoogleVR.Demos;
using Gvr.Internal;
using Il2CppDummyDll;
using LSToolKit.Helpers;
using Oculus.Platform;
using Oculus.Platform.Models;
using RootMotion.FinalIK;
using SWS;
using TMPro;
using Unity.Collections;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Animations;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Networking;
using UnityEngine.Playables;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.Scripting;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityEngine.XR.Interaction.Toolkit;
using UnityStandardAssets.Utility;
using proto;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class LSAudioCapture : MonoBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int outputRate;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string fileName;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int headerSize;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool recOutput;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private FileStream fileStream;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private KeyCode captureKey;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0x2211F3C", Offset = "0x2211F3C", VA = "0x2211F3C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0x2211F48", Offset = "0x2211F48", VA = "0x2211F48")]
	private void Start()
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x22120DC", Offset = "0x22120DC", VA = "0x22120DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x2212284", Offset = "0x2212284", VA = "0x2212284")]
	private void StartWriting(string name)
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x221272C", Offset = "0x221272C", VA = "0x221272C")]
	private void OnAudioFilterRead(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0x221273C", Offset = "0x221273C", VA = "0x221273C")]
	private void ConvertAndWrite(float[] dataSource)
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x2212348", Offset = "0x2212348", VA = "0x2212348")]
	private void WriteHeader()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x22128F8", Offset = "0x22128F8", VA = "0x22128F8")]
	public LSAudioCapture()
	{
	}
}
[Token(Token = "0x2000003")]
public class LSVRMouseController : MonoBehaviour
{
	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float rotationAmount;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool disableMouseRotation;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool autoReCenter;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public KeyCode mouseLookKey;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float dampingTime;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Camera DebugCamera;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 m_TargetAngles;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 m_FollowAngles;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 m_FollowVelocity;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Quaternion m_OriginalRotation;

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x1D80194", Offset = "0x1D80194", VA = "0x1D80194")]
	private void Awake()
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x1D801F4", Offset = "0x1D801F4", VA = "0x1D801F4")]
	private void Start()
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0x1D80230", Offset = "0x1D80230", VA = "0x1D80230")]
	private void Update()
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0x1D80578", Offset = "0x1D80578", VA = "0x1D80578")]
	public LSVRMouseController()
	{
	}
}
[Token(Token = "0x2000004")]
public class Amplitude
{
	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly string UnityLibraryName;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly string UnityLibraryVersion;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Dictionary<string, Amplitude> instances;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly object instanceLock;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly string androidPluginName;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private AndroidJavaClass pluginClass;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool logging;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string instanceName;

	[Token(Token = "0x17000001")]
	public static Amplitude Instance
	{
		[Token(Token = "0x600000F")]
		[Address(RVA = "0x1EC5ECC", Offset = "0x1EC5ECC", VA = "0x1EC5ECC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x1EC5AD8", Offset = "0x1EC5AD8", VA = "0x1EC5AD8")]
	public static Amplitude getInstance()
	{
		return null;
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x1EC5B38", Offset = "0x1EC5B38", VA = "0x1EC5B38")]
	public static Amplitude getInstance(string instanceName)
	{
		return null;
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x1EC5D80", Offset = "0x1EC5D80", VA = "0x1EC5D80")]
	public Amplitude(string instanceName)
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x1EC61C8", Offset = "0x1EC61C8", VA = "0x1EC61C8")]
	protected void Log(string message)
	{
	}

	[Token(Token = "0x6000012")]
	protected void Log<T>(string message, string property, IEnumerable<T> array)
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x1EC6254", Offset = "0x1EC6254", VA = "0x1EC6254")]
	public void init(string apiKey)
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x1EC6800", Offset = "0x1EC6800", VA = "0x1EC6800")]
	public void init(string apiKey, string userId)
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x1EC6E04", Offset = "0x1EC6E04", VA = "0x1EC6E04")]
	public void setTrackingOptions(IDictionary<string, bool> trackingOptions)
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x1EC6F6C", Offset = "0x1EC6F6C", VA = "0x1EC6F6C")]
	public void logEvent(string evt)
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x1EC70BC", Offset = "0x1EC70BC", VA = "0x1EC70BC")]
	public void logEvent(string evt, IDictionary<string, object> properties)
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x1EC7288", Offset = "0x1EC7288", VA = "0x1EC7288")]
	public void logEvent(string evt, IDictionary<string, object> properties, bool outOfSession)
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x1EC74B8", Offset = "0x1EC74B8", VA = "0x1EC74B8")]
	public void setOffline(bool offline)
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x1EC7634", Offset = "0x1EC7634", VA = "0x1EC7634")]
	public void setUserId(string userId)
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x1EC7784", Offset = "0x1EC7784", VA = "0x1EC7784")]
	public void setUserProperties(IDictionary<string, object> properties)
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x1EC7908", Offset = "0x1EC7908", VA = "0x1EC7908")]
	public void setGroup(string groupType, string groupName)
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x1EC7B24", Offset = "0x1EC7B24", VA = "0x1EC7B24")]
	public void setGroup(string groupType, string[] groupName)
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x1EC7D40", Offset = "0x1EC7D40", VA = "0x1EC7D40")]
	public void setOptOut(bool enabled)
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x1EC7EBC", Offset = "0x1EC7EBC", VA = "0x1EC7EBC")]
	public void setMinTimeBetweenSessionsMillis(long minTimeBetweenSessionsMillis)
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x1EC8038", Offset = "0x1EC8038", VA = "0x1EC8038")]
	public void setEventUploadPeriodSeconds(int eventUploadPeriodSeconds)
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x1EC81BC", Offset = "0x1EC81BC", VA = "0x1EC81BC")]
	public void setDeviceId(string deviceId)
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x1EC830C", Offset = "0x1EC830C", VA = "0x1EC830C")]
	public void enableCoppaControl()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x1EC8414", Offset = "0x1EC8414", VA = "0x1EC8414")]
	public void disableCoppaControl()
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x1EC85B4", Offset = "0x1EC85B4", VA = "0x1EC85B4")]
	public void setServerUrl(string serverUrl)
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x1EC878C", Offset = "0x1EC878C", VA = "0x1EC878C")]
	public void setUseDynamicConfig(bool useDynamicConfig)
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x1EC8980", Offset = "0x1EC8980", VA = "0x1EC8980")]
	public void setServerZone(AmplitudeServerZone serverZone, bool updateServerUrl = true)
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x1EC8BE8", Offset = "0x1EC8BE8", VA = "0x1EC8BE8")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x147E810", Offset = "0x147E810")]
	public void setGlobalUserProperties(IDictionary<string, object> properties)
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x1EC8BEC", Offset = "0x1EC8BEC", VA = "0x1EC8BEC")]
	public void logRevenue(double amount)
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x1EC8D68", Offset = "0x1EC8D68", VA = "0x1EC8D68")]
	public void logRevenue(string productId, int quantity, double price)
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x1EC8FA4", Offset = "0x1EC8FA4", VA = "0x1EC8FA4")]
	public void logRevenue(string productId, int quantity, double price, string receipt, string receiptSignature)
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x1EC9258", Offset = "0x1EC9258", VA = "0x1EC9258")]
	public void logRevenue(string productId, int quantity, double price, string receipt, string receiptSignature, string revenueType, IDictionary<string, object> eventProperties)
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x1EC96CC", Offset = "0x1EC96CC", VA = "0x1EC96CC")]
	public string getDeviceId()
	{
		return null;
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x1EC97C0", Offset = "0x1EC97C0", VA = "0x1EC97C0")]
	public void regenerateDeviceId()
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x1EC98B4", Offset = "0x1EC98B4", VA = "0x1EC98B4")]
	public void useAdvertisingIdForDeviceId()
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x1EC99A8", Offset = "0x1EC99A8", VA = "0x1EC99A8")]
	public void useAppSetIdForDeviceId()
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x1EC9A9C", Offset = "0x1EC9A9C", VA = "0x1EC9A9C")]
	public void trackSessionEvents(bool enabled)
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x1EC9C18", Offset = "0x1EC9C18", VA = "0x1EC9C18")]
	public long getSessionId()
	{
		return default(long);
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x1EC9D18", Offset = "0x1EC9D18", VA = "0x1EC9D18")]
	public void uploadEvents()
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x1EC9E0C", Offset = "0x1EC9E0C", VA = "0x1EC9E0C")]
	public void clearUserProperties()
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x1EC9FAC", Offset = "0x1EC9FAC", VA = "0x1EC9FAC")]
	public void unsetUserProperty(string property)
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x1ECA0FC", Offset = "0x1ECA0FC", VA = "0x1ECA0FC")]
	public void setOnceUserProperty(string property, bool value)
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x1ECA2BC", Offset = "0x1ECA2BC", VA = "0x1ECA2BC")]
	public void setOnceUserProperty(string property, double value)
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x1ECA484", Offset = "0x1ECA484", VA = "0x1ECA484")]
	public void setOnceUserProperty(string property, float value)
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x1ECA64C", Offset = "0x1ECA64C", VA = "0x1ECA64C")]
	public void setOnceUserProperty(string property, int value)
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x1ECA80C", Offset = "0x1ECA80C", VA = "0x1ECA80C")]
	public void setOnceUserProperty(string property, long value)
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x1ECA9CC", Offset = "0x1ECA9CC", VA = "0x1ECA9CC")]
	public void setOnceUserProperty(string property, string value)
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x1ECAB64", Offset = "0x1ECAB64", VA = "0x1ECAB64")]
	public void setOnceUserProperty(string property, IDictionary<string, object> values)
	{
	}

	[Token(Token = "0x600003C")]
	public void setOnceUserProperty<T>(string property, IList<T> values)
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x1ECAD10", Offset = "0x1ECAD10", VA = "0x1ECAD10")]
	public void setOnceUserProperty(string property, bool[] array)
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x1ECAEA8", Offset = "0x1ECAEA8", VA = "0x1ECAEA8")]
	public void setOnceUserProperty(string property, double[] array)
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x1ECB040", Offset = "0x1ECB040", VA = "0x1ECB040")]
	public void setOnceUserProperty(string property, float[] array)
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x1ECB1D8", Offset = "0x1ECB1D8", VA = "0x1ECB1D8")]
	public void setOnceUserProperty(string property, int[] array)
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x1ECB370", Offset = "0x1ECB370", VA = "0x1ECB370")]
	public void setOnceUserProperty(string property, long[] array)
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x1ECB508", Offset = "0x1ECB508", VA = "0x1ECB508")]
	public void setOnceUserProperty(string property, string[] array)
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x1ECB6A0", Offset = "0x1ECB6A0", VA = "0x1ECB6A0")]
	public void setUserProperty(string property, bool value)
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x1ECB860", Offset = "0x1ECB860", VA = "0x1ECB860")]
	public void setUserProperty(string property, double value)
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x1ECBA28", Offset = "0x1ECBA28", VA = "0x1ECBA28")]
	public void setUserProperty(string property, float value)
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x1ECBBF0", Offset = "0x1ECBBF0", VA = "0x1ECBBF0")]
	public void setUserProperty(string property, int value)
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x1ECBDB0", Offset = "0x1ECBDB0", VA = "0x1ECBDB0")]
	public void setUserProperty(string property, long value)
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x1ECBF70", Offset = "0x1ECBF70", VA = "0x1ECBF70")]
	public void setUserProperty(string property, string value)
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x1ECC108", Offset = "0x1ECC108", VA = "0x1ECC108")]
	public void setUserProperty(string property, IDictionary<string, object> values)
	{
	}

	[Token(Token = "0x600004A")]
	public void setUserProperty<T>(string property, IList<T> values)
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0x1ECC2B4", Offset = "0x1ECC2B4", VA = "0x1ECC2B4")]
	public void setUserProperty(string property, bool[] array)
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0x1ECC44C", Offset = "0x1ECC44C", VA = "0x1ECC44C")]
	public void setUserProperty(string property, double[] array)
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0x1ECC5E4", Offset = "0x1ECC5E4", VA = "0x1ECC5E4")]
	public void setUserProperty(string property, float[] array)
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x1ECC77C", Offset = "0x1ECC77C", VA = "0x1ECC77C")]
	public void setUserProperty(string property, int[] array)
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x1ECC914", Offset = "0x1ECC914", VA = "0x1ECC914")]
	public void setUserProperty(string property, long[] array)
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x1ECCAAC", Offset = "0x1ECCAAC", VA = "0x1ECCAAC")]
	public void setUserProperty(string property, string[] array)
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x1ECCC44", Offset = "0x1ECCC44", VA = "0x1ECCC44")]
	public void addUserProperty(string property, double value)
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x1ECCE0C", Offset = "0x1ECCE0C", VA = "0x1ECCE0C")]
	public void addUserProperty(string property, float value)
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0x1ECCFD4", Offset = "0x1ECCFD4", VA = "0x1ECCFD4")]
	public void addUserProperty(string property, int value)
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x1ECD194", Offset = "0x1ECD194", VA = "0x1ECD194")]
	public void addUserProperty(string property, long value)
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x1ECD354", Offset = "0x1ECD354", VA = "0x1ECD354")]
	public void addUserProperty(string property, string value)
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x1ECD4EC", Offset = "0x1ECD4EC", VA = "0x1ECD4EC")]
	public void addUserProperty(string property, IDictionary<string, object> values)
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0x1ECD698", Offset = "0x1ECD698", VA = "0x1ECD698")]
	public void appendUserProperty(string property, bool value)
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x1ECD858", Offset = "0x1ECD858", VA = "0x1ECD858")]
	public void appendUserProperty(string property, double value)
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x1ECDA20", Offset = "0x1ECDA20", VA = "0x1ECDA20")]
	public void appendUserProperty(string property, float value)
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x1ECDBE8", Offset = "0x1ECDBE8", VA = "0x1ECDBE8")]
	public void appendUserProperty(string property, int value)
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0x1ECDDA8", Offset = "0x1ECDDA8", VA = "0x1ECDDA8")]
	public void appendUserProperty(string property, long value)
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0x1ECDF68", Offset = "0x1ECDF68", VA = "0x1ECDF68")]
	public void appendUserProperty(string property, string value)
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0x1ECE100", Offset = "0x1ECE100", VA = "0x1ECE100")]
	public void appendUserProperty(string property, IDictionary<string, object> values)
	{
	}

	[Token(Token = "0x600005E")]
	public void appendUserProperty<T>(string property, IList<T> values)
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x1ECE2AC", Offset = "0x1ECE2AC", VA = "0x1ECE2AC")]
	public void appendUserProperty(string property, bool[] array)
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x1ECE444", Offset = "0x1ECE444", VA = "0x1ECE444")]
	public void appendUserProperty(string property, double[] array)
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x1ECE5DC", Offset = "0x1ECE5DC", VA = "0x1ECE5DC")]
	public void appendUserProperty(string property, float[] array)
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x1ECE774", Offset = "0x1ECE774", VA = "0x1ECE774")]
	public void appendUserProperty(string property, int[] array)
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0x1ECE90C", Offset = "0x1ECE90C", VA = "0x1ECE90C")]
	public void appendUserProperty(string property, long[] array)
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0x1ECEAA4", Offset = "0x1ECEAA4", VA = "0x1ECEAA4")]
	public void appendUserProperty(string property, string[] array)
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0x1ECEC3C", Offset = "0x1ECEC3C", VA = "0x1ECEC3C")]
	public void prependUserProperty(string property, bool value)
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0x1ECEDFC", Offset = "0x1ECEDFC", VA = "0x1ECEDFC")]
	public void prependUserProperty(string property, double value)
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0x1ECEFC4", Offset = "0x1ECEFC4", VA = "0x1ECEFC4")]
	public void prependUserProperty(string property, float value)
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0x1ECF18C", Offset = "0x1ECF18C", VA = "0x1ECF18C")]
	public void prependUserProperty(string property, int value)
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0x1ECF34C", Offset = "0x1ECF34C", VA = "0x1ECF34C")]
	public void prependUserProperty(string property, long value)
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x1ECF50C", Offset = "0x1ECF50C", VA = "0x1ECF50C")]
	public void prependUserProperty(string property, string value)
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x1ECF6A4", Offset = "0x1ECF6A4", VA = "0x1ECF6A4")]
	public void prependUserProperty(string property, IDictionary<string, object> values)
	{
	}

	[Token(Token = "0x600006C")]
	public void prependUserProperty<T>(string property, IList<T> values)
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x1ECF850", Offset = "0x1ECF850", VA = "0x1ECF850")]
	public void prependUserProperty(string property, bool[] array)
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x1ECF9E8", Offset = "0x1ECF9E8", VA = "0x1ECF9E8")]
	public void prependUserProperty(string property, double[] array)
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x1ECFB80", Offset = "0x1ECFB80", VA = "0x1ECFB80")]
	public void prependUserProperty(string property, float[] array)
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x1ECFD18", Offset = "0x1ECFD18", VA = "0x1ECFD18")]
	public void prependUserProperty(string property, int[] array)
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x1ECFEB0", Offset = "0x1ECFEB0", VA = "0x1ECFEB0")]
	public void prependUserProperty(string property, long[] array)
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x1ED0048", Offset = "0x1ED0048", VA = "0x1ED0048")]
	public void prependUserProperty(string property, string[] array)
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x1ED01E0", Offset = "0x1ED01E0", VA = "0x1ED01E0")]
	public void preInsertUserProperty(string property, bool value)
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x1ED03A0", Offset = "0x1ED03A0", VA = "0x1ED03A0")]
	public void preInsertUserProperty(string property, double value)
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x1ED0568", Offset = "0x1ED0568", VA = "0x1ED0568")]
	public void preInsertUserProperty(string property, float value)
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x1ED0730", Offset = "0x1ED0730", VA = "0x1ED0730")]
	public void preInsertUserProperty(string property, int value)
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x1ED08F0", Offset = "0x1ED08F0", VA = "0x1ED08F0")]
	public void preInsertUserProperty(string property, long value)
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x1ED0AB0", Offset = "0x1ED0AB0", VA = "0x1ED0AB0")]
	public void preInsertUserProperty(string property, string value)
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x1ED0C48", Offset = "0x1ED0C48", VA = "0x1ED0C48")]
	public void preInsertUserProperty(string property, IDictionary<string, object> values)
	{
	}

	[Token(Token = "0x600007A")]
	public void preInsertUserProperty<T>(string property, IList<T> values)
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x1ED0DF4", Offset = "0x1ED0DF4", VA = "0x1ED0DF4")]
	public void preInsertUserProperty(string property, bool[] array)
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x1ED0F8C", Offset = "0x1ED0F8C", VA = "0x1ED0F8C")]
	public void preInsertUserProperty(string property, double[] array)
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x1ED1124", Offset = "0x1ED1124", VA = "0x1ED1124")]
	public void preInsertUserProperty(string property, float[] array)
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x1ED12BC", Offset = "0x1ED12BC", VA = "0x1ED12BC")]
	public void preInsertUserProperty(string property, int[] array)
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x1ED1454", Offset = "0x1ED1454", VA = "0x1ED1454")]
	public void preInsertUserProperty(string property, long[] array)
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x1ED15EC", Offset = "0x1ED15EC", VA = "0x1ED15EC")]
	public void preInsertUserProperty(string property, string[] array)
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x1ED1784", Offset = "0x1ED1784", VA = "0x1ED1784")]
	public void postInsertUserProperty(string property, bool value)
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x1ED1944", Offset = "0x1ED1944", VA = "0x1ED1944")]
	public void postInsertUserProperty(string property, double value)
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x1ED1B0C", Offset = "0x1ED1B0C", VA = "0x1ED1B0C")]
	public void postInsertUserProperty(string property, float value)
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x1ED1CD4", Offset = "0x1ED1CD4", VA = "0x1ED1CD4")]
	public void postInsertUserProperty(string property, int value)
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x1ED1E94", Offset = "0x1ED1E94", VA = "0x1ED1E94")]
	public void postInsertUserProperty(string property, long value)
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x1ED2054", Offset = "0x1ED2054", VA = "0x1ED2054")]
	public void postInsertUserProperty(string property, string value)
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x1ED21EC", Offset = "0x1ED21EC", VA = "0x1ED21EC")]
	public void postInsertUserProperty(string property, IDictionary<string, object> values)
	{
	}

	[Token(Token = "0x6000088")]
	public void postInsertUserProperty<T>(string property, IList<T> values)
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x1ED2398", Offset = "0x1ED2398", VA = "0x1ED2398")]
	public void postInsertUserProperty(string property, bool[] array)
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x1ED2530", Offset = "0x1ED2530", VA = "0x1ED2530")]
	public void postInsertUserProperty(string property, double[] array)
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x1ED26C8", Offset = "0x1ED26C8", VA = "0x1ED26C8")]
	public void postInsertUserProperty(string property, float[] array)
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x1ED2860", Offset = "0x1ED2860", VA = "0x1ED2860")]
	public void postInsertUserProperty(string property, int[] array)
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x1ED29F8", Offset = "0x1ED29F8", VA = "0x1ED29F8")]
	public void postInsertUserProperty(string property, long[] array)
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x1ED2B90", Offset = "0x1ED2B90", VA = "0x1ED2B90")]
	public void postInsertUserProperty(string property, string[] array)
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x1ED2D28", Offset = "0x1ED2D28", VA = "0x1ED2D28")]
	public void removeUserProperty(string property, bool value)
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x1ED2EE8", Offset = "0x1ED2EE8", VA = "0x1ED2EE8")]
	public void removeUserProperty(string property, double value)
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x1ED30B0", Offset = "0x1ED30B0", VA = "0x1ED30B0")]
	public void removeUserProperty(string property, float value)
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x1ED3278", Offset = "0x1ED3278", VA = "0x1ED3278")]
	public void removeUserProperty(string property, int value)
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x1ED3438", Offset = "0x1ED3438", VA = "0x1ED3438")]
	public void removeUserProperty(string property, long value)
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x1ED35F8", Offset = "0x1ED35F8", VA = "0x1ED35F8")]
	public void removeUserProperty(string property, string value)
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0x1ED3790", Offset = "0x1ED3790", VA = "0x1ED3790")]
	public void removeUserProperty(string property, IDictionary<string, object> values)
	{
	}

	[Token(Token = "0x6000096")]
	public void removeUserProperty<T>(string property, IList<T> values)
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x1ED393C", Offset = "0x1ED393C", VA = "0x1ED393C")]
	public void removeUserProperty(string property, bool[] array)
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0x1ED3AD4", Offset = "0x1ED3AD4", VA = "0x1ED3AD4")]
	public void removeUserProperty(string property, double[] array)
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x1ED3C6C", Offset = "0x1ED3C6C", VA = "0x1ED3C6C")]
	public void removeUserProperty(string property, float[] array)
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0x1ED3E04", Offset = "0x1ED3E04", VA = "0x1ED3E04")]
	public void removeUserProperty(string property, int[] array)
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x1ED3F9C", Offset = "0x1ED3F9C", VA = "0x1ED3F9C")]
	public void removeUserProperty(string property, long[] array)
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x1ED4134", Offset = "0x1ED4134", VA = "0x1ED4134")]
	public void removeUserProperty(string property, string[] array)
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x1EC5F28", Offset = "0x1EC5F28", VA = "0x1EC5F28")]
	private void setLibraryName(string libraryName)
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x1EC6078", Offset = "0x1EC6078", VA = "0x1EC6078")]
	private void setLibraryVersion(string libraryVersion)
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x1ED42CC", Offset = "0x1ED42CC", VA = "0x1ED42CC")]
	public void startSession()
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x1ED42D0", Offset = "0x1ED42D0", VA = "0x1ED42D0")]
	public void endSession()
	{
	}
}
[Token(Token = "0x2000005")]
public enum AmplitudeServerZone
{
	[Token(Token = "0x400001A")]
	US,
	[Token(Token = "0x400001B")]
	EU
}
[Token(Token = "0x2000006")]
[DisallowMultipleComponent]
[ExecuteInEditMode]
public class PolyverseProp : StyledMonoBehaviour
{
	[Token(Token = "0x2000485")]
	public enum GradientMaskEnum
	{
		[Token(Token = "0x4001DAC")]
		VertexPosX,
		[Token(Token = "0x4001DAD")]
		VertexPosY,
		[Token(Token = "0x4001DAE")]
		VertexPosZ
	}

	[Token(Token = "0x2000486")]
	public enum MotionMaskEnum
	{
		[Token(Token = "0x4001DB0")]
		VertexPosX,
		[Token(Token = "0x4001DB1")]
		VertexPosY,
		[Token(Token = "0x4001DB2")]
		VertexPosZ,
		[Token(Token = "0x4001DB3")]
		VertexRed,
		[Token(Token = "0x4001DB4")]
		VertexGreen,
		[Token(Token = "0x4001DB5")]
		VertexBlue,
		[Token(Token = "0x4001DB6")]
		VertexAlpha
	}

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "StyledBanner", RVA = "0x146B25C", Offset = "0x146B25C")]
	public bool styledBanner;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "StyledMessage", RVA = "0x146B2DC", Offset = "0x146B2DC")]
	public bool warningMissingMesh;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GradientMaskEnum gradientMask;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public GradientMaskEnum gradientMaskOld;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public MotionMaskEnum motionMask;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public MotionMaskEnum motionMaskOld;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public MotionMaskEnum detailMask;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public MotionMaskEnum detailMaskOld;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "StyledSpace", RVA = "0x146B360", Offset = "0x146B360")]
	public bool styledSpace;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public Mesh sharedMesh;

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x20BF560", Offset = "0x20BF560", VA = "0x20BF560")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x20C0240", Offset = "0x20C0240", VA = "0x20C0240")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x20BF734", Offset = "0x20BF734", VA = "0x20BF734")]
	private void MaskDataToTexCoord(Mesh inputMesh, bool changeName)
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x20C030C", Offset = "0x20C030C", VA = "0x20C030C")]
	private void UpdatePropsWithSharedMesh()
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x20C042C", Offset = "0x20C042C", VA = "0x20C042C")]
	public PolyverseProp()
	{
	}
}
[Token(Token = "0x2000007")]
[DisallowMultipleComponent]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x14654C0", Offset = "0x14654C0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x14654C0", Offset = "0x14654C0")]
public class PolyverseWind : StyledMonoBehaviour
{
	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "StyledBanner", RVA = "0x146B384", Offset = "0x146B384")]
	public bool styledBanner;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float windAmplitude;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float windSpeed;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float turbulenceSpeed;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "StyledSpace", RVA = "0x146B404", Offset = "0x146B404")]
	public bool styledSpace;

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x20C0444", Offset = "0x20C0444", VA = "0x20C0444")]
	private void Start()
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x20C04F8", Offset = "0x20C04F8", VA = "0x20C04F8")]
	private void SetGlobalShaderProperties()
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x20C0614", Offset = "0x20C0614", VA = "0x20C0614")]
	public PolyverseWind()
	{
	}
}
[Token(Token = "0x2000008")]
[StyledMonoHideScriptField]
public class StyledMonoBehaviour : MonoBehaviour
{
	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x1F08FC4", Offset = "0x1F08FC4", VA = "0x1F08FC4")]
	public StyledMonoBehaviour()
	{
	}
}
[Token(Token = "0x2000009")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x146557C", Offset = "0x146557C")]
[ExecuteInEditMode]
public class CameraPath : MonoBehaviour
{
	[Token(Token = "0x2000487")]
	public enum PointModes
	{
		[Token(Token = "0x4001DB8")]
		Transform,
		[Token(Token = "0x4001DB9")]
		ControlPoints,
		[Token(Token = "0x4001DBA")]
		FOV,
		[Token(Token = "0x4001DBB")]
		Events,
		[Token(Token = "0x4001DBC")]
		Speed,
		[Token(Token = "0x4001DBD")]
		Delay,
		[Token(Token = "0x4001DBE")]
		Ease,
		[Token(Token = "0x4001DBF")]
		Orientations,
		[Token(Token = "0x4001DC0")]
		Tilt,
		[Token(Token = "0x4001DC1")]
		AddPathPoints,
		[Token(Token = "0x4001DC2")]
		RemovePathPoints,
		[Token(Token = "0x4001DC3")]
		AddOrientations,
		[Token(Token = "0x4001DC4")]
		RemoveOrientations,
		[Token(Token = "0x4001DC5")]
		TargetOrientation,
		[Token(Token = "0x4001DC6")]
		AddFovs,
		[Token(Token = "0x4001DC7")]
		RemoveFovs,
		[Token(Token = "0x4001DC8")]
		AddTilts,
		[Token(Token = "0x4001DC9")]
		RemoveTilts,
		[Token(Token = "0x4001DCA")]
		AddEvents,
		[Token(Token = "0x4001DCB")]
		RemoveEvents,
		[Token(Token = "0x4001DCC")]
		AddSpeeds,
		[Token(Token = "0x4001DCD")]
		RemoveSpeeds,
		[Token(Token = "0x4001DCE")]
		AddDelays,
		[Token(Token = "0x4001DCF")]
		RemoveDelays,
		[Token(Token = "0x4001DD0")]
		Options
	}

	[Token(Token = "0x2000488")]
	public enum Interpolation
	{
		[Token(Token = "0x4001DD2")]
		Linear,
		[Token(Token = "0x4001DD3")]
		SmoothStep,
		[Token(Token = "0x4001DD4")]
		CatmullRom,
		[Token(Token = "0x4001DD5")]
		Hermite,
		[Token(Token = "0x4001DD6")]
		Bezier
	}

	[Token(Token = "0x2000489")]
	public delegate void RecalculateCurvesHandler();

	[Token(Token = "0x200048A")]
	public delegate void PathPointAddedHandler(CameraPathControlPoint point);

	[Token(Token = "0x200048B")]
	public delegate void PathPointRemovedHandler(CameraPathControlPoint point);

	[Token(Token = "0x200048C")]
	public delegate void CheckStartPointCullHandler(float percentage);

	[Token(Token = "0x200048D")]
	public delegate void CheckEndPointCullHandler(float percentage);

	[Token(Token = "0x200048E")]
	public delegate void CleanUpListsHandler();

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float CURRENT_VERSION_NUMBER;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float version;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<CameraPathControlPoint> _points;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Interpolation _interpolation;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private bool initialised;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float _storedTotalArcLength;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float[] _storedArcLengths;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float[] _storedArcLengthsFull;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Vector3[] _storedPoints;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private float[] _normalisedPercentages;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float _storedPointResolution;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private int _storedValueArraySize;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Vector3[] _storedPathDirections;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private float _directionWidth;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private CameraPathControlPoint[] _pointALink;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private CameraPathControlPoint[] _pointBLink;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private CameraPathOrientationList _orientationList;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private CameraPathFOVList _fovList;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private CameraPathTiltList _tiltList;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private CameraPathSpeedList _speedList;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private CameraPathEventList _eventList;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private CameraPathDelayList _delayList;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private bool _addOrientationsWithPoints;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	[SerializeField]
	private bool _looped;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB2")]
	[SerializeField]
	private bool _normalised;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[SerializeField]
	private Bounds _pathBounds;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float hermiteTension;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float hermiteBias;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject editorPreview;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public int selectedPoint;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public PointModes pointMode;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float addPointAtPercent;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	[SerializeField]
	private float _aspect;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private int _previewResolution;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public float drawDistance;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private int _displayHeight;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Texture2D previewOverlay;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public bool ruleOfThirds;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public UnityEngine.Color ruleOfThirdsColour;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Texture2D ruleOfThirdsOverlay;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private CameraPath _nextPath;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private bool _interpolateNextPath;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x131")]
	public bool showGizmos;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public UnityEngine.Color selectedPathColour;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public UnityEngine.Color unselectedPathColour;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public UnityEngine.Color selectedPointColour;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	public UnityEngine.Color unselectedPointColour;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	public UnityEngine.Color textColour;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	public bool showOrientationIndicators;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public float orientationIndicatorUnitLength;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	public UnityEngine.Color orientationIndicatorColours;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	public bool autoSetStoedPointRes;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19D")]
	public bool enableUndo;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19E")]
	public bool showPreview;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19F")]
	public bool enablePreviews;

	[Token(Token = "0x17000002")]
	public CameraPathControlPoint Item
	{
		[Token(Token = "0x60000B7")]
		[Address(RVA = "0x2CF9D44", Offset = "0x2CF9D44", VA = "0x2CF9D44")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000003")]
	public int numberOfPoints
	{
		[Token(Token = "0x60000B8")]
		[Address(RVA = "0x2CF9F3C", Offset = "0x2CF9F3C", VA = "0x2CF9F3C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000004")]
	public int realNumberOfPoints
	{
		[Token(Token = "0x60000B9")]
		[Address(RVA = "0x2CF9FB0", Offset = "0x2CF9FB0", VA = "0x2CF9FB0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000005")]
	public int numberOfCurves
	{
		[Token(Token = "0x60000BA")]
		[Address(RVA = "0x2CFA000", Offset = "0x2CFA000", VA = "0x2CFA000")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000006")]
	public bool loop
	{
		[Token(Token = "0x60000BB")]
		[Address(RVA = "0x2CFA06C", Offset = "0x2CFA06C", VA = "0x2CFA06C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000BC")]
		[Address(RVA = "0x2CFA074", Offset = "0x2CFA074", VA = "0x2CFA074")]
		set
		{
		}
	}

	[Token(Token = "0x17000007")]
	public float pathLength
	{
		[Token(Token = "0x60000BD")]
		[Address(RVA = "0x2CFABE4", Offset = "0x2CFABE4", VA = "0x2CFABE4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000008")]
	public CameraPathOrientationList orientationList
	{
		[Token(Token = "0x60000BE")]
		[Address(RVA = "0x2CFABEC", Offset = "0x2CFABEC", VA = "0x2CFABEC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000009")]
	public CameraPathFOVList fovList
	{
		[Token(Token = "0x60000BF")]
		[Address(RVA = "0x2CFABF4", Offset = "0x2CFABF4", VA = "0x2CFABF4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000A")]
	public CameraPathTiltList tiltList
	{
		[Token(Token = "0x60000C0")]
		[Address(RVA = "0x2CFABFC", Offset = "0x2CFABFC", VA = "0x2CFABFC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000B")]
	public CameraPathSpeedList speedList
	{
		[Token(Token = "0x60000C1")]
		[Address(RVA = "0x2CFAC04", Offset = "0x2CFAC04", VA = "0x2CFAC04")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000C")]
	public CameraPathEventList eventList
	{
		[Token(Token = "0x60000C2")]
		[Address(RVA = "0x2CFAC0C", Offset = "0x2CFAC0C", VA = "0x2CFAC0C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000D")]
	public CameraPathDelayList delayList
	{
		[Token(Token = "0x60000C3")]
		[Address(RVA = "0x2CFAC14", Offset = "0x2CFAC14", VA = "0x2CFAC14")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000E")]
	public Bounds bounds
	{
		[Token(Token = "0x60000C4")]
		[Address(RVA = "0x2CFAC1C", Offset = "0x2CFAC1C", VA = "0x2CFAC1C")]
		get
		{
			return default(Bounds);
		}
	}

	[Token(Token = "0x1700000F")]
	public int storedValueArraySize
	{
		[Token(Token = "0x60000C6")]
		[Address(RVA = "0x2CFAD44", Offset = "0x2CFAD44", VA = "0x2CFAD44")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000010")]
	public CameraPathControlPoint[] pointALink
	{
		[Token(Token = "0x60000C7")]
		[Address(RVA = "0x2CFAD4C", Offset = "0x2CFAD4C", VA = "0x2CFAD4C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000011")]
	public CameraPathControlPoint[] pointBLink
	{
		[Token(Token = "0x60000C8")]
		[Address(RVA = "0x2CFAD54", Offset = "0x2CFAD54", VA = "0x2CFAD54")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000012")]
	public Vector3[] storedPoints
	{
		[Token(Token = "0x60000C9")]
		[Address(RVA = "0x2CFAD5C", Offset = "0x2CFAD5C", VA = "0x2CFAD5C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000013")]
	public bool normalised
	{
		[Token(Token = "0x60000CA")]
		[Address(RVA = "0x2CFAD64", Offset = "0x2CFAD64", VA = "0x2CFAD64")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000CB")]
		[Address(RVA = "0x2CFAD6C", Offset = "0x2CFAD6C", VA = "0x2CFAD6C")]
		set
		{
		}
	}

	[Token(Token = "0x17000014")]
	public Interpolation interpolation
	{
		[Token(Token = "0x60000CC")]
		[Address(RVA = "0x2CFAD78", Offset = "0x2CFAD78", VA = "0x2CFAD78")]
		get
		{
			return default(Interpolation);
		}
		[Token(Token = "0x60000CD")]
		[Address(RVA = "0x2CFAD80", Offset = "0x2CFAD80", VA = "0x2CFAD80")]
		set
		{
		}
	}

	[Token(Token = "0x17000015")]
	public CameraPath nextPath
	{
		[Token(Token = "0x60000CE")]
		[Address(RVA = "0x2CFAD98", Offset = "0x2CFAD98", VA = "0x2CFAD98")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000CF")]
		[Address(RVA = "0x2CFADA0", Offset = "0x2CFADA0", VA = "0x2CFADA0")]
		set
		{
		}
	}

	[Token(Token = "0x17000016")]
	public bool interpolateNextPath
	{
		[Token(Token = "0x60000D0")]
		[Address(RVA = "0x2CFAEDC", Offset = "0x2CFAEDC", VA = "0x2CFAEDC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000D1")]
		[Address(RVA = "0x2CFAEE4", Offset = "0x2CFAEE4", VA = "0x2CFAEE4")]
		set
		{
		}
	}

	[Token(Token = "0x17000017")]
	public bool shouldInterpolateNextPath
	{
		[Token(Token = "0x60000D2")]
		[Address(RVA = "0x2CF9EB0", Offset = "0x2CF9EB0", VA = "0x2CF9EB0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000018")]
	public float storedPointResolution
	{
		[Token(Token = "0x60000D3")]
		[Address(RVA = "0x2CFAF08", Offset = "0x2CFAF08", VA = "0x2CFAF08")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60000D4")]
		[Address(RVA = "0x2CFAF10", Offset = "0x2CFAF10", VA = "0x2CFAF10")]
		set
		{
		}
	}

	[Token(Token = "0x17000019")]
	public float directionWidth
	{
		[Token(Token = "0x60000D5")]
		[Address(RVA = "0x2CFAFA0", Offset = "0x2CFAFA0", VA = "0x2CFAFA0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60000D6")]
		[Address(RVA = "0x2CFAFA8", Offset = "0x2CFAFA8", VA = "0x2CFAFA8")]
		set
		{
		}
	}

	[Token(Token = "0x1700001A")]
	public int displayHeight
	{
		[Token(Token = "0x60000D7")]
		[Address(RVA = "0x2CFAFB0", Offset = "0x2CFAFB0", VA = "0x2CFAFB0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60000D8")]
		[Address(RVA = "0x2CFAFB8", Offset = "0x2CFAFB8", VA = "0x2CFAFB8")]
		set
		{
		}
	}

	[Token(Token = "0x1700001B")]
	public float aspect
	{
		[Token(Token = "0x60000D9")]
		[Address(RVA = "0x2CFB03C", Offset = "0x2CFB03C", VA = "0x2CFB03C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60000DA")]
		[Address(RVA = "0x2CFB044", Offset = "0x2CFB044", VA = "0x2CFB044")]
		set
		{
		}
	}

	[Token(Token = "0x1700001C")]
	public int previewResolution
	{
		[Token(Token = "0x60000DB")]
		[Address(RVA = "0x2CFB0CC", Offset = "0x2CFB0CC", VA = "0x2CFB0CC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60000DC")]
		[Address(RVA = "0x2CFB0D4", Offset = "0x2CFB0D4", VA = "0x2CFB0D4")]
		set
		{
		}
	}

	[Token(Token = "0x14000001")]
	public event RecalculateCurvesHandler RecalculateCurvesEvent
	{
		[Token(Token = "0x60000AB")]
		[Address(RVA = "0x2CF9564", Offset = "0x2CF9564", VA = "0x2CF9564")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147E84C", Offset = "0x147E84C")]
		add
		{
		}
		[Token(Token = "0x60000AC")]
		[Address(RVA = "0x2CF960C", Offset = "0x2CF960C", VA = "0x2CF960C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147E85C", Offset = "0x147E85C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event PathPointAddedHandler PathPointAddedEvent
	{
		[Token(Token = "0x60000AD")]
		[Address(RVA = "0x2CF96B4", Offset = "0x2CF96B4", VA = "0x2CF96B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147E86C", Offset = "0x147E86C")]
		add
		{
		}
		[Token(Token = "0x60000AE")]
		[Address(RVA = "0x2CF975C", Offset = "0x2CF975C", VA = "0x2CF975C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147E87C", Offset = "0x147E87C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event PathPointRemovedHandler PathPointRemovedEvent
	{
		[Token(Token = "0x60000AF")]
		[Address(RVA = "0x2CF9804", Offset = "0x2CF9804", VA = "0x2CF9804")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147E88C", Offset = "0x147E88C")]
		add
		{
		}
		[Token(Token = "0x60000B0")]
		[Address(RVA = "0x2CF98AC", Offset = "0x2CF98AC", VA = "0x2CF98AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147E89C", Offset = "0x147E89C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event CheckStartPointCullHandler CheckStartPointCullEvent
	{
		[Token(Token = "0x60000B1")]
		[Address(RVA = "0x2CF9954", Offset = "0x2CF9954", VA = "0x2CF9954")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147E8AC", Offset = "0x147E8AC")]
		add
		{
		}
		[Token(Token = "0x60000B2")]
		[Address(RVA = "0x2CF99FC", Offset = "0x2CF99FC", VA = "0x2CF99FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147E8BC", Offset = "0x147E8BC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event CheckEndPointCullHandler CheckEndPointCullEvent
	{
		[Token(Token = "0x60000B3")]
		[Address(RVA = "0x2CF9AA4", Offset = "0x2CF9AA4", VA = "0x2CF9AA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147E8CC", Offset = "0x147E8CC")]
		add
		{
		}
		[Token(Token = "0x60000B4")]
		[Address(RVA = "0x2CF9B4C", Offset = "0x2CF9B4C", VA = "0x2CF9B4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147E8DC", Offset = "0x147E8DC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event CleanUpListsHandler CleanUpListsEvent
	{
		[Token(Token = "0x60000B5")]
		[Address(RVA = "0x2CF9BF4", Offset = "0x2CF9BF4", VA = "0x2CF9BF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147E8EC", Offset = "0x147E8EC")]
		add
		{
		}
		[Token(Token = "0x60000B6")]
		[Address(RVA = "0x2CF9C9C", Offset = "0x2CF9C9C", VA = "0x2CF9C9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147E8FC", Offset = "0x147E8FC")]
		remove
		{
		}
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x2CFAC30", Offset = "0x2CFAC30", VA = "0x2CFAC30")]
	public float StoredArcLength(int curve)
	{
		return default(float);
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0x2CFB158", Offset = "0x2CFB158", VA = "0x2CFB158")]
	public int StoredValueIndex(float percentage)
	{
		return default(int);
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0x2CFB1E8", Offset = "0x2CFB1E8", VA = "0x2CFB1E8")]
	public CameraPathControlPoint AddPoint(Vector3 position)
	{
		return null;
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0x2CFB8E0", Offset = "0x2CFB8E0", VA = "0x2CFB8E0")]
	public void AddPoint(CameraPathControlPoint point)
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0x2CFB960", Offset = "0x2CFB960", VA = "0x2CFB960")]
	public void InsertPoint(CameraPathControlPoint point, int index)
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0x2CFB9E8", Offset = "0x2CFB9E8", VA = "0x2CFB9E8")]
	public CameraPathControlPoint InsertPoint(int index)
	{
		return null;
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0x2CFBAA8", Offset = "0x2CFBAA8", VA = "0x2CFBAA8")]
	public void RemovePoint(int index)
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0x2CFBC34", Offset = "0x2CFBC34", VA = "0x2CFBC34")]
	public bool RemovePoint(string pointName)
	{
		return default(bool);
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0x2CFBDD4", Offset = "0x2CFBDD4", VA = "0x2CFBDD4")]
	public void RemovePoint(Vector3 pointPosition)
	{
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0x2CFBAD0", Offset = "0x2CFBAD0", VA = "0x2CFBAD0")]
	public void RemovePoint(CameraPathControlPoint point)
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x2CFC8D4", Offset = "0x2CFC8D4", VA = "0x2CFC8D4")]
	private float ParsePercentage(float percentage)
	{
		return default(float);
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0x2CFCAB0", Offset = "0x2CFCAB0", VA = "0x2CFCAB0")]
	public float CalculateNormalisedPercentage(float percentage)
	{
		return default(float);
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x2CFCC18", Offset = "0x2CFCC18", VA = "0x2CFCC18")]
	public float DeNormalisePercentage(float normalisedPercent)
	{
		return default(float);
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x2CFCD38", Offset = "0x2CFCD38", VA = "0x2CFCD38")]
	public int GetPointNumber(float percentage)
	{
		return default(int);
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x2CFCDF4", Offset = "0x2CFCDF4", VA = "0x2CFCDF4")]
	public Vector3 GetPathPosition(double percentage)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x2CFCE00", Offset = "0x2CFCE00", VA = "0x2CFCE00")]
	public Vector3 GetPathPosition(float percentage, bool ignoreNormalisation)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x2CFD5D4", Offset = "0x2CFD5D4", VA = "0x2CFD5D4")]
	public Quaternion GetPathRotation(float percentage, bool ignoreNormalisation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x2CFD898", Offset = "0x2CFD898", VA = "0x2CFD898")]
	public Vector3 GetPathDirection(float percentage)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x2CFD8A0", Offset = "0x2CFD8A0", VA = "0x2CFD8A0")]
	public Vector3 GetPathDirection(float percentage, bool normalisePercent)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x2CFDA60", Offset = "0x2CFDA60", VA = "0x2CFDA60")]
	public float GetPathTilt(float percentage)
	{
		return default(float);
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x2CFDBDC", Offset = "0x2CFDBDC", VA = "0x2CFDBDC")]
	public float GetPathFOV(float percentage)
	{
		return default(float);
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x2CFDD64", Offset = "0x2CFDD64", VA = "0x2CFDD64")]
	public float GetPathOrthographicSize(float percentage)
	{
		return default(float);
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x2CFDD94", Offset = "0x2CFDD94", VA = "0x2CFDD94")]
	public float GetPathSpeed(float percentage)
	{
		return default(float);
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x2CFE26C", Offset = "0x2CFE26C", VA = "0x2CFE26C")]
	public float GetPathEase(float percentage)
	{
		return default(float);
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x2CFE298", Offset = "0x2CFE298", VA = "0x2CFE298")]
	public void CheckEvents(float percentage)
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x2CFE5CC", Offset = "0x2CFE5CC", VA = "0x2CFE5CC")]
	public float GetPathPercentage(CameraPathControlPoint point)
	{
		return default(float);
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x2CFC3E8", Offset = "0x2CFC3E8", VA = "0x2CFC3E8")]
	public float GetPathPercentage(int pointIndex)
	{
		return default(float);
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x2CFBFBC", Offset = "0x2CFBFBC", VA = "0x2CFBFBC")]
	public int GetNearestPointIndex(float percentage)
	{
		return default(int);
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x2CFE650", Offset = "0x2CFE650", VA = "0x2CFE650")]
	public int GetLastPointIndex(float percentage, bool isNormalised)
	{
		return default(int);
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x2CFE6F8", Offset = "0x2CFE6F8", VA = "0x2CFE6F8")]
	public int GetNextPointIndex(float percentage, bool isNormalised)
	{
		return default(int);
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x2CFE7A0", Offset = "0x2CFE7A0", VA = "0x2CFE7A0")]
	public float GetCurvePercentage(CameraPathControlPoint pointA, CameraPathControlPoint pointB, float percentage)
	{
		return default(float);
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x2CFE87C", Offset = "0x2CFE87C", VA = "0x2CFE87C")]
	public float GetCurvePercentage(CameraPathPoint pointA, CameraPathPoint pointB, float percentage)
	{
		return default(float);
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x2CFE974", Offset = "0x2CFE974", VA = "0x2CFE974")]
	public float GetCurvePercentage(CameraPathPoint point)
	{
		return default(float);
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x2CFEA44", Offset = "0x2CFEA44", VA = "0x2CFEA44")]
	public float GetOutroEasePercentage(CameraPathDelay point)
	{
		return default(float);
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x2CFEE74", Offset = "0x2CFEE74", VA = "0x2CFEE74")]
	public float GetIntroEasePercentage(CameraPathDelay point)
	{
		return default(float);
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x2CFEF3C", Offset = "0x2CFEF3C", VA = "0x2CFEF3C")]
	public float GetPathPercentage(CameraPathControlPoint pointA, CameraPathControlPoint pointB, float curvePercentage)
	{
		return default(float);
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x2CFEFF0", Offset = "0x2CFEFF0", VA = "0x2CFEFF0")]
	public float GetPathPercentage(float pointA, float pointB, float curvePercentage)
	{
		return default(float);
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x2CFF078", Offset = "0x2CFF078", VA = "0x2CFF078")]
	public int GetStoredPoint(float percentage)
	{
		return default(int);
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x2CFF118", Offset = "0x2CFF118", VA = "0x2CFF118")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x2CFF420", Offset = "0x2CFF420", VA = "0x2CFF420")]
	private void Start()
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x2CFF880", Offset = "0x2CFF880", VA = "0x2CFF880")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x2CFFBFC", Offset = "0x2CFFBFC", VA = "0x2CFFBFC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x2CFA098", Offset = "0x2CFA098", VA = "0x2CFA098")]
	public void RecalculateStoredValues()
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x2D000A0", Offset = "0x2D000A0", VA = "0x2D000A0")]
	public float GetNearestPoint(Vector3 fromPostition)
	{
		return default(float);
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0x2CFBFB0", Offset = "0x2CFBFB0", VA = "0x2CFBFB0")]
	public float GetNearestPoint(Vector3 fromPostition, bool ignoreNormalisation)
	{
		return default(float);
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x2D000AC", Offset = "0x2D000AC", VA = "0x2D000AC")]
	public float GetNearestPoint(Vector3 fromPostition, bool ignoreNormalisation, int refinments)
	{
		return default(float);
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0x2D0032C", Offset = "0x2D0032C", VA = "0x2D0032C")]
	public float GetNearestPointNear(Vector3 fromPostition, float prevPercentage, Vector3 prevPosition, bool ignoreNormalisation, int refinments)
	{
		return default(float);
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0x2CFFC30", Offset = "0x2CFFC30", VA = "0x2CFFC30")]
	public void Clear()
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x2CFD40C", Offset = "0x2CFD40C", VA = "0x2CFD40C")]
	public CameraPathControlPoint GetPoint(int index)
	{
		return null;
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0x2D00578", Offset = "0x2D00578", VA = "0x2D00578")]
	public int GetPointIndex(int index)
	{
		return default(int);
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x2D0065C", Offset = "0x2D0065C", VA = "0x2D0065C")]
	public int GetCurveIndex(int startPointIndex)
	{
		return default(int);
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x2CFF11C", Offset = "0x2CFF11C", VA = "0x2CFF11C")]
	private void Init()
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x2CFF8BC", Offset = "0x2CFF8BC", VA = "0x2CFF8BC")]
	private void InitialiseLists()
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x2D008A0", Offset = "0x2D008A0", VA = "0x2D008A0")]
	public CameraPath()
	{
	}
}
[Token(Token = "0x200000A")]
public class CameraPathAnimator : MonoBehaviour
{
	[Token(Token = "0x200048F")]
	public enum animationModes
	{
		[Token(Token = "0x4001DD8")]
		once,
		[Token(Token = "0x4001DD9")]
		loop,
		[Token(Token = "0x4001DDA")]
		reverse,
		[Token(Token = "0x4001DDB")]
		reverseLoop,
		[Token(Token = "0x4001DDC")]
		pingPong,
		[Token(Token = "0x4001DDD")]
		still
	}

	[Token(Token = "0x2000490")]
	public enum orientationModes
	{
		[Token(Token = "0x4001DDF")]
		custom,
		[Token(Token = "0x4001DE0")]
		target,
		[Token(Token = "0x4001DE1")]
		mouselook,
		[Token(Token = "0x4001DE2")]
		followpath,
		[Token(Token = "0x4001DE3")]
		reverseFollowpath,
		[Token(Token = "0x4001DE4")]
		followTransform,
		[Token(Token = "0x4001DE5")]
		twoDimentions,
		[Token(Token = "0x4001DE6")]
		fixedOrientation,
		[Token(Token = "0x4001DE7")]
		none
	}

	[Token(Token = "0x2000491")]
	public delegate void AnimationStartedEventHandler();

	[Token(Token = "0x2000492")]
	public delegate void AnimationPausedEventHandler();

	[Token(Token = "0x2000493")]
	public delegate void AnimationStoppedEventHandler();

	[Token(Token = "0x2000494")]
	public delegate void AnimationFinishedEventHandler();

	[Token(Token = "0x2000495")]
	public delegate void AnimationLoopedEventHandler();

	[Token(Token = "0x2000496")]
	public delegate void AnimationPingPongEventHandler();

	[Token(Token = "0x2000497")]
	public delegate void AnimationPointReachedEventHandler();

	[Token(Token = "0x2000498")]
	public delegate void AnimationCustomEventHandler(string eventName);

	[Token(Token = "0x2000499")]
	public delegate void AnimationPointReachedWithNumberEventHandler(int pointNumber);

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minimumCameraSpeed;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform orientationTarget;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private CameraPath _cameraPath;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool playOnStart;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform animationObject;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Camera animationObjectCamera;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _isCamera;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool _playing;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public animationModes animationMode;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private orientationModes _orientationMode;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool smoothOrientationModeChanges;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float orientationModeLerpTime;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float _orientationModeLerpTimer;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private orientationModes _previousOrientationMode;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float pingPongDirection;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Vector3 fixedOrientaion;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public Vector3 fixedPosition;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool normalised;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	[SerializeField]
	private bool _dynamicNormalisation;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float editorPercentage;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private float _pathTime;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[SerializeField]
	private float _pathSpeed;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float _percentage;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float _lastPercentage;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float nearestOffset;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float _delayTime;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float startPercent;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public bool animateFOV;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Vector3 targetModeUp;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float sensitivity;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float minX;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float maxX;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool _animateSceneObjectInEditor;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public Vector3 animatedObjectStartPosition;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Quaternion animatedObjectStartRotation;

	[Token(Token = "0x1700001D")]
	public virtual float pathSpeed
	{
		[Token(Token = "0x6000125")]
		[Address(RVA = "0x2D018D0", Offset = "0x2D018D0", VA = "0x2D018D0", Slot = "4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000126")]
		[Address(RVA = "0x2D018D8", Offset = "0x2D018D8", VA = "0x2D018D8", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x1700001E")]
	public virtual float animationTime
	{
		[Token(Token = "0x6000127")]
		[Address(RVA = "0x2D019E4", Offset = "0x2D019E4", VA = "0x2D019E4", Slot = "6")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000128")]
		[Address(RVA = "0x2D019EC", Offset = "0x2D019EC", VA = "0x2D019EC", Slot = "7")]
		set
		{
		}
	}

	[Token(Token = "0x1700001F")]
	public virtual float currentTime
	{
		[Token(Token = "0x6000129")]
		[Address(RVA = "0x2D01AAC", Offset = "0x2D01AAC", VA = "0x2D01AAC", Slot = "8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000020")]
	public virtual bool isPlaying
	{
		[Token(Token = "0x600012E")]
		[Address(RVA = "0x2D022A4", Offset = "0x2D022A4", VA = "0x2D022A4", Slot = "13")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000021")]
	public virtual float percentage
	{
		[Token(Token = "0x600012F")]
		[Address(RVA = "0x2D022AC", Offset = "0x2D022AC", VA = "0x2D022AC", Slot = "14")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000022")]
	public virtual bool pingPongGoingForward
	{
		[Token(Token = "0x6000130")]
		[Address(RVA = "0x2D022B4", Offset = "0x2D022B4", VA = "0x2D022B4", Slot = "15")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000023")]
	public virtual CameraPath cameraPath
	{
		[Token(Token = "0x6000132")]
		[Address(RVA = "0x2D02328", Offset = "0x2D02328", VA = "0x2D02328", Slot = "17")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000024")]
	public virtual bool dynamicNormalisation
	{
		[Token(Token = "0x6000133")]
		[Address(RVA = "0x2D023D0", Offset = "0x2D023D0", VA = "0x2D023D0", Slot = "18")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000134")]
		[Address(RVA = "0x2D023D8", Offset = "0x2D023D8", VA = "0x2D023D8", Slot = "19")]
		set
		{
		}
	}

	[Token(Token = "0x17000025")]
	public virtual orientationModes orientationMode
	{
		[Token(Token = "0x6000135")]
		[Address(RVA = "0x2D02408", Offset = "0x2D02408", VA = "0x2D02408", Slot = "20")]
		get
		{
			return default(orientationModes);
		}
		[Token(Token = "0x6000136")]
		[Address(RVA = "0x2D02410", Offset = "0x2D02410", VA = "0x2D02410", Slot = "21")]
		set
		{
		}
	}

	[Token(Token = "0x17000026")]
	public virtual bool isCamera
	{
		[Token(Token = "0x6000139")]
		[Address(RVA = "0x2D02D50", Offset = "0x2D02D50", VA = "0x2D02D50", Slot = "24")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000027")]
	public virtual bool animateSceneObjectInEditor
	{
		[Token(Token = "0x600013A")]
		[Address(RVA = "0x2D02E14", Offset = "0x2D02E14", VA = "0x2D02E14", Slot = "25")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600013B")]
		[Address(RVA = "0x2D02E1C", Offset = "0x2D02E1C", VA = "0x2D02E1C", Slot = "26")]
		set
		{
		}
	}

	[Token(Token = "0x17000028")]
	protected virtual bool isReversed
	{
		[Token(Token = "0x600014A")]
		[Address(RVA = "0x2D04C00", Offset = "0x2D04C00", VA = "0x2D04C00", Slot = "41")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000007")]
	public event AnimationStartedEventHandler AnimationStartedEvent
	{
		[Token(Token = "0x6000113")]
		[Address(RVA = "0x2D00D20", Offset = "0x2D00D20", VA = "0x2D00D20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147E90C", Offset = "0x147E90C")]
		add
		{
		}
		[Token(Token = "0x6000114")]
		[Address(RVA = "0x2D00DC4", Offset = "0x2D00DC4", VA = "0x2D00DC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147E91C", Offset = "0x147E91C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event AnimationPausedEventHandler AnimationPausedEvent
	{
		[Token(Token = "0x6000115")]
		[Address(RVA = "0x2D00E68", Offset = "0x2D00E68", VA = "0x2D00E68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147E92C", Offset = "0x147E92C")]
		add
		{
		}
		[Token(Token = "0x6000116")]
		[Address(RVA = "0x2D00F0C", Offset = "0x2D00F0C", VA = "0x2D00F0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147E93C", Offset = "0x147E93C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event AnimationStoppedEventHandler AnimationStoppedEvent
	{
		[Token(Token = "0x6000117")]
		[Address(RVA = "0x2D00FB0", Offset = "0x2D00FB0", VA = "0x2D00FB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147E94C", Offset = "0x147E94C")]
		add
		{
		}
		[Token(Token = "0x6000118")]
		[Address(RVA = "0x2D01054", Offset = "0x2D01054", VA = "0x2D01054")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147E95C", Offset = "0x147E95C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event AnimationFinishedEventHandler AnimationFinishedEvent
	{
		[Token(Token = "0x6000119")]
		[Address(RVA = "0x2D010F8", Offset = "0x2D010F8", VA = "0x2D010F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147E96C", Offset = "0x147E96C")]
		add
		{
		}
		[Token(Token = "0x600011A")]
		[Address(RVA = "0x2D0119C", Offset = "0x2D0119C", VA = "0x2D0119C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147E97C", Offset = "0x147E97C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event AnimationLoopedEventHandler AnimationLoopedEvent
	{
		[Token(Token = "0x600011B")]
		[Address(RVA = "0x2D01240", Offset = "0x2D01240", VA = "0x2D01240")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147E98C", Offset = "0x147E98C")]
		add
		{
		}
		[Token(Token = "0x600011C")]
		[Address(RVA = "0x2D012E8", Offset = "0x2D012E8", VA = "0x2D012E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147E99C", Offset = "0x147E99C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public event AnimationPingPongEventHandler AnimationPingPongEvent
	{
		[Token(Token = "0x600011D")]
		[Address(RVA = "0x2D01390", Offset = "0x2D01390", VA = "0x2D01390")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147E9AC", Offset = "0x147E9AC")]
		add
		{
		}
		[Token(Token = "0x600011E")]
		[Address(RVA = "0x2D01438", Offset = "0x2D01438", VA = "0x2D01438")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147E9BC", Offset = "0x147E9BC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event AnimationPointReachedEventHandler AnimationPointReachedEvent
	{
		[Token(Token = "0x600011F")]
		[Address(RVA = "0x2D014E0", Offset = "0x2D014E0", VA = "0x2D014E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147E9CC", Offset = "0x147E9CC")]
		add
		{
		}
		[Token(Token = "0x6000120")]
		[Address(RVA = "0x2D01588", Offset = "0x2D01588", VA = "0x2D01588")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147E9DC", Offset = "0x147E9DC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event AnimationPointReachedWithNumberEventHandler AnimationPointReachedWithNumberEvent
	{
		[Token(Token = "0x6000121")]
		[Address(RVA = "0x2D01630", Offset = "0x2D01630", VA = "0x2D01630")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147E9EC", Offset = "0x147E9EC")]
		add
		{
		}
		[Token(Token = "0x6000122")]
		[Address(RVA = "0x2D016D8", Offset = "0x2D016D8", VA = "0x2D016D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147E9FC", Offset = "0x147E9FC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000F")]
	public event AnimationCustomEventHandler AnimationCustomEvent
	{
		[Token(Token = "0x6000123")]
		[Address(RVA = "0x2D01780", Offset = "0x2D01780", VA = "0x2D01780")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147EA0C", Offset = "0x147EA0C")]
		add
		{
		}
		[Token(Token = "0x6000124")]
		[Address(RVA = "0x2D01828", Offset = "0x2D01828", VA = "0x2D01828")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147EA1C", Offset = "0x147EA1C")]
		remove
		{
		}
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x2D01ABC", Offset = "0x2D01ABC", VA = "0x2D01ABC", Slot = "9")]
	public virtual void Play()
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x2D01D8C", Offset = "0x2D01D8C", VA = "0x2D01D8C", Slot = "10")]
	public virtual void Stop()
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x2D01FB4", Offset = "0x2D01FB4", VA = "0x2D01FB4", Slot = "11")]
	public virtual void Pause()
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x2D021D8", Offset = "0x2D021D8", VA = "0x2D021D8", Slot = "12")]
	public virtual void Seek(float value)
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x2D022C8", Offset = "0x2D022C8", VA = "0x2D022C8", Slot = "16")]
	public virtual void Reverse()
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x2D02428", Offset = "0x2D02428", VA = "0x2D02428", Slot = "22")]
	public virtual Quaternion GetOrientation(orientationModes mode, float percent, bool ignoreNormalisation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x2D02B58", Offset = "0x2D02B58", VA = "0x2D02B58", Slot = "23")]
	public virtual Quaternion GetAnimatedOrientation(float percent, bool ignoreNormalisation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x2D02F5C", Offset = "0x2D02F5C", VA = "0x2D02F5C", Slot = "27")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x2D030C8", Offset = "0x2D030C8", VA = "0x2D030C8", Slot = "28")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x2D033B0", Offset = "0x2D033B0", VA = "0x2D033B0", Slot = "29")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x2D034B0", Offset = "0x2D034B0", VA = "0x2D034B0", Slot = "30")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x2D035B8", Offset = "0x2D035B8", VA = "0x2D035B8", Slot = "31")]
	protected virtual void LateUpdate()
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x2D036C0", Offset = "0x2D036C0", VA = "0x2D036C0", Slot = "32")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x2D036D0", Offset = "0x2D036D0", VA = "0x2D036D0", Slot = "33")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x2D036E0", Offset = "0x2D036E0", VA = "0x2D036E0", Slot = "34")]
	protected virtual void PlayNextAnimation()
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x2D037E8", Offset = "0x2D037E8", VA = "0x2D037E8", Slot = "35")]
	protected virtual void UpdateAnimation()
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x2D03B20", Offset = "0x2D03B20", VA = "0x2D03B20", Slot = "36")]
	protected virtual void UpdatePointReached()
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x2D04134", Offset = "0x2D04134", VA = "0x2D04134", Slot = "37")]
	protected virtual void UpdateAnimationTime()
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x2D04148", Offset = "0x2D04148", VA = "0x2D04148", Slot = "38")]
	protected virtual void UpdateAnimationTime(bool advance)
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x2D049F4", Offset = "0x2D049F4", VA = "0x2D049F4", Slot = "39")]
	protected virtual Quaternion GetMouseLook()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0x2D04BC8", Offset = "0x2D04BC8", VA = "0x2D04BC8", Slot = "40")]
	protected virtual void CheckEvents()
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x2D04C28", Offset = "0x2D04C28", VA = "0x2D04C28", Slot = "42")]
	protected virtual void CleanUp()
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0x2D04D30", Offset = "0x2D04D30", VA = "0x2D04D30", Slot = "43")]
	protected virtual void OnDelayEvent(float time)
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0x2D04D4C", Offset = "0x2D04D4C", VA = "0x2D04D4C", Slot = "44")]
	protected virtual void OnCustomEvent(string eventName)
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0x2D050F0", Offset = "0x2D050F0", VA = "0x2D050F0")]
	public CameraPathAnimator()
	{
	}
}
[Token(Token = "0x200000B")]
[ExecuteInEditMode]
public class CameraPathControlPoint : MonoBehaviour
{
	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string givenName;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string customName;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string fullName;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Vector3 _position;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private bool _splitControlPoints;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Vector3 _forwardControlPoint;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private Vector3 _backwardControlPoint;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Vector3 _pathDirection;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int index;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float percentage;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float normalisedPercentage;

	[Token(Token = "0x17000029")]
	public Vector3 localPosition
	{
		[Token(Token = "0x6000150")]
		[Address(RVA = "0x2D0571C", Offset = "0x2D0571C", VA = "0x2D0571C")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000151")]
		[Address(RVA = "0x2CFB2E0", Offset = "0x2CFB2E0", VA = "0x2CFB2E0")]
		set
		{
		}
	}

	[Token(Token = "0x1700002A")]
	public Vector3 worldPosition
	{
		[Token(Token = "0x6000152")]
		[Address(RVA = "0x2CFBFA4", Offset = "0x2CFBFA4", VA = "0x2CFBFA4")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000153")]
		[Address(RVA = "0x2D05938", Offset = "0x2D05938", VA = "0x2D05938")]
		set
		{
		}
	}

	[Token(Token = "0x1700002B")]
	public Vector3 forwardControlPointWorld
	{
		[Token(Token = "0x6000157")]
		[Address(RVA = "0x2CFD434", Offset = "0x2CFD434", VA = "0x2CFD434")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000156")]
		[Address(RVA = "0x2D05AB0", Offset = "0x2D05AB0", VA = "0x2D05AB0")]
		set
		{
		}
	}

	[Token(Token = "0x1700002C")]
	public Vector3 forwardControlPoint
	{
		[Token(Token = "0x6000158")]
		[Address(RVA = "0x2D05B80", Offset = "0x2D05B80", VA = "0x2D05B80")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000159")]
		[Address(RVA = "0x2D0074C", Offset = "0x2D0074C", VA = "0x2D0074C")]
		set
		{
		}
	}

	[Token(Token = "0x1700002D")]
	public Vector3 forwardControlPointLocal
	{
		[Token(Token = "0x600015A")]
		[Address(RVA = "0x2D05CA8", Offset = "0x2D05CA8", VA = "0x2D05CA8")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600015B")]
		[Address(RVA = "0x2D05D7C", Offset = "0x2D05D7C", VA = "0x2D05D7C")]
		set
		{
		}
	}

	[Token(Token = "0x1700002E")]
	public Vector3 backwardControlPointWorld
	{
		[Token(Token = "0x600015D")]
		[Address(RVA = "0x2CFD504", Offset = "0x2CFD504", VA = "0x2CFD504")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600015C")]
		[Address(RVA = "0x2D05E68", Offset = "0x2D05E68", VA = "0x2D05E68")]
		set
		{
		}
	}

	[Token(Token = "0x1700002F")]
	public Vector3 backwardControlPoint
	{
		[Token(Token = "0x600015E")]
		[Address(RVA = "0x2D060D8", Offset = "0x2D060D8", VA = "0x2D060D8")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600015F")]
		[Address(RVA = "0x2D05F38", Offset = "0x2D05F38", VA = "0x2D05F38")]
		set
		{
		}
	}

	[Token(Token = "0x17000030")]
	public bool splitControlPoints
	{
		[Token(Token = "0x6000160")]
		[Address(RVA = "0x2D0625C", Offset = "0x2D0625C", VA = "0x2D0625C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000161")]
		[Address(RVA = "0x2D06264", Offset = "0x2D06264", VA = "0x2D06264")]
		set
		{
		}
	}

	[Token(Token = "0x17000031")]
	public Vector3 trackDirection
	{
		[Token(Token = "0x6000162")]
		[Address(RVA = "0x2D06320", Offset = "0x2D06320", VA = "0x2D06320")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000163")]
		[Address(RVA = "0x2D0632C", Offset = "0x2D0632C", VA = "0x2D0632C")]
		set
		{
		}
	}

	[Token(Token = "0x17000032")]
	public string displayName
	{
		[Token(Token = "0x6000164")]
		[Address(RVA = "0x2CFBD68", Offset = "0x2CFBD68", VA = "0x2CFBD68")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0x2D05710", Offset = "0x2D05710", VA = "0x2D05710")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0x2D05960", Offset = "0x2D05960", VA = "0x2D05960")]
	public Vector3 WorldToLocalPosition(Vector3 _worldPosition)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x2D057F0", Offset = "0x2D057F0", VA = "0x2D057F0")]
	public Vector3 LocalToWorldPosition(Vector3 _localPosition)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x2D063F8", Offset = "0x2D063F8", VA = "0x2D063F8")]
	public void CopyData(CameraPathControlPoint to)
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x2D06490", Offset = "0x2D06490", VA = "0x2D06490")]
	public CameraPathControlPoint()
	{
	}
}
[Token(Token = "0x200000C")]
public class CameraPathDelay : CameraPathPoint
{
	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float time;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float introStartEasePercentage;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AnimationCurve introCurve;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float outroEndEasePercentage;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AnimationCurve outroCurve;

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x2D0654C", Offset = "0x2D0654C", VA = "0x2D0654C")]
	public CameraPathDelay()
	{
	}
}
[Token(Token = "0x200000D")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x14655D8", Offset = "0x14655D8")]
[ExecuteInEditMode]
public class CameraPathDelayList : CameraPathPointList
{
	[Token(Token = "0x200049A")]
	public delegate void CameraPathDelayEventHandler(float time);

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float MINIMUM_EASE_VALUE;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _lastPercentage;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private CameraPathDelay _introPoint;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private CameraPathDelay _outroPoint;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private bool delayInitialised;

	[Token(Token = "0x17000033")]
	public new CameraPathDelay Item
	{
		[Token(Token = "0x600016B")]
		[Address(RVA = "0x2D06708", Offset = "0x2D06708", VA = "0x2D06708")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000034")]
	public CameraPathDelay introPoint
	{
		[Token(Token = "0x600016C")]
		[Address(RVA = "0x2D068C4", Offset = "0x2D068C4", VA = "0x2D068C4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000035")]
	public CameraPathDelay outroPoint
	{
		[Token(Token = "0x600016D")]
		[Address(RVA = "0x2D068CC", Offset = "0x2D068CC", VA = "0x2D068CC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000010")]
	public event CameraPathDelayEventHandler CameraPathDelayEvent
	{
		[Token(Token = "0x6000168")]
		[Address(RVA = "0x2D0330C", Offset = "0x2D0330C", VA = "0x2D0330C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147EA2C", Offset = "0x147EA2C")]
		add
		{
		}
		[Token(Token = "0x6000169")]
		[Address(RVA = "0x2D06658", Offset = "0x2D06658", VA = "0x2D06658")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147EA3C", Offset = "0x147EA3C")]
		remove
		{
		}
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0x2D066FC", Offset = "0x2D066FC", VA = "0x2D066FC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0x2D068D4", Offset = "0x2D068D4", VA = "0x2D068D4", Slot = "4")]
	public override void Init(CameraPath _cameraPath)
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0x2D06CE4", Offset = "0x2D06CE4", VA = "0x2D06CE4")]
	public void AddDelayPoint(CameraPathControlPoint atPoint)
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0x2D06E1C", Offset = "0x2D06E1C", VA = "0x2D06E1C")]
	public CameraPathDelay AddDelayPoint(CameraPathControlPoint curvePointA, CameraPathControlPoint curvePointB, float curvePercetage)
	{
		return null;
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0x2D06FA0", Offset = "0x2D06FA0", VA = "0x2D06FA0")]
	public void OnAnimationStart(float startPercentage)
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0x2CFE41C", Offset = "0x2CFE41C", VA = "0x2CFE41C")]
	public void CheckEvents(float percentage)
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0x2CFDF90", Offset = "0x2CFDF90", VA = "0x2CFDF90")]
	public float CheckEase(float percent)
	{
		return default(float);
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x2D06FA8", Offset = "0x2D06FA8", VA = "0x2D06FA8")]
	public void FireDelay(CameraPathDelay eventPoint)
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x2D0727C", Offset = "0x2D0727C", VA = "0x2D0727C")]
	public CameraPathDelayList()
	{
	}
}
[Token(Token = "0x200000E")]
public class CameraPathEvent : CameraPathPoint
{
	[Token(Token = "0x200049B")]
	public enum Types
	{
		[Token(Token = "0x4001DE9")]
		Broadcast,
		[Token(Token = "0x4001DEA")]
		Call
	}

	[Token(Token = "0x200049C")]
	public enum ArgumentTypes
	{
		[Token(Token = "0x4001DEC")]
		None,
		[Token(Token = "0x4001DED")]
		Float,
		[Token(Token = "0x4001DEE")]
		Int,
		[Token(Token = "0x4001DEF")]
		String
	}

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public Types type;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string eventName;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject target;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public string methodName;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public string methodArgument;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public ArgumentTypes argumentType;

	[Token(Token = "0x6000176")]
	[Address(RVA = "0x2D073B8", Offset = "0x2D073B8", VA = "0x2D073B8")]
	public CameraPathEvent()
	{
	}
}
[Token(Token = "0x200000F")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x1465624", Offset = "0x1465624")]
[ExecuteInEditMode]
public class CameraPathEventList : CameraPathPointList
{
	[Token(Token = "0x200049D")]
	public delegate void CameraPathEventPointHandler(string name);

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _lastPercentage;

	[Token(Token = "0x17000036")]
	public new CameraPathEvent Item
	{
		[Token(Token = "0x600017A")]
		[Address(RVA = "0x2D074C4", Offset = "0x2D074C4", VA = "0x2D074C4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000011")]
	public event CameraPathEventPointHandler CameraPathEventPoint
	{
		[Token(Token = "0x6000177")]
		[Address(RVA = "0x2D03254", Offset = "0x2D03254", VA = "0x2D03254")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147EA4C", Offset = "0x147EA4C")]
		add
		{
		}
		[Token(Token = "0x6000178")]
		[Address(RVA = "0x2D07414", Offset = "0x2D07414", VA = "0x2D07414")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147EA5C", Offset = "0x147EA5C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0x2D074B8", Offset = "0x2D074B8", VA = "0x2D074B8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0x2D07558", Offset = "0x2D07558", VA = "0x2D07558", Slot = "4")]
	public override void Init(CameraPath _cameraPath)
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0x2D075DC", Offset = "0x2D075DC", VA = "0x2D075DC")]
	public void AddEvent(CameraPathControlPoint atPoint)
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0x2D0767C", Offset = "0x2D0767C", VA = "0x2D0767C")]
	public CameraPathEvent AddEvent(CameraPathControlPoint curvePointA, CameraPathControlPoint curvePointB, float curvePercetage)
	{
		return null;
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0x2D0773C", Offset = "0x2D0773C", VA = "0x2D0773C")]
	public void OnAnimationStart(float startPercentage)
	{
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0x2CFE2E0", Offset = "0x2CFE2E0", VA = "0x2CFE2E0")]
	public void CheckEvents(float percentage)
	{
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x2D07744", Offset = "0x2D07744", VA = "0x2D07744")]
	public void BroadCast(CameraPathEvent eventPoint)
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0x2D07768", Offset = "0x2D07768", VA = "0x2D07768")]
	public void Call(CameraPathEvent eventPoint)
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0x2D07DB0", Offset = "0x2D07DB0", VA = "0x2D07DB0")]
	public CameraPathEventList()
	{
	}
}
[Token(Token = "0x2000010")]
public class CameraPathFOV : CameraPathPoint
{
	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float FOV;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float Size;

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x2D07DE4", Offset = "0x2D07DE4", VA = "0x2D07DE4")]
	public CameraPathFOV()
	{
	}
}
[Token(Token = "0x2000011")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x1465670", Offset = "0x1465670")]
[ExecuteInEditMode]
public class CameraPathFOVList : CameraPathPointList
{
	[Token(Token = "0x200049E")]
	public enum ProjectionType
	{
		[Token(Token = "0x4001DF1")]
		FOV,
		[Token(Token = "0x4001DF2")]
		Orthographic
	}

	[Token(Token = "0x200049F")]
	public enum Interpolation
	{
		[Token(Token = "0x4001DF4")]
		None,
		[Token(Token = "0x4001DF5")]
		Linear,
		[Token(Token = "0x4001DF6")]
		SmoothStep
	}

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Interpolation interpolation;

	[Token(Token = "0x40000B5")]
	private const float DEFAULT_FOV = 60f;

	[Token(Token = "0x40000B6")]
	private const float DEFAULT_SIZE = 5f;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool listEnabled;

	[Token(Token = "0x17000037")]
	public new CameraPathFOV Item
	{
		[Token(Token = "0x6000187")]
		[Address(RVA = "0x2D0813C", Offset = "0x2D0813C", VA = "0x2D0813C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000038")]
	private float defaultFOV
	{
		[Token(Token = "0x600018D")]
		[Address(RVA = "0x2D08284", Offset = "0x2D08284", VA = "0x2D08284")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000039")]
	private float defaultSize
	{
		[Token(Token = "0x600018E")]
		[Address(RVA = "0x2D08348", Offset = "0x2D08348", VA = "0x2D08348")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0x2D07DF4", Offset = "0x2D07DF4", VA = "0x2D07DF4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0x2D07E00", Offset = "0x2D07E00", VA = "0x2D07E00", Slot = "4")]
	public override void Init(CameraPath _cameraPath)
	{
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0x2D07ED0", Offset = "0x2D07ED0", VA = "0x2D07ED0", Slot = "5")]
	public override void CleanUp()
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0x2D081D0", Offset = "0x2D081D0", VA = "0x2D081D0")]
	public void AddFOV(CameraPathControlPoint atPoint)
	{
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0x2D08408", Offset = "0x2D08408", VA = "0x2D08408")]
	public CameraPathFOV AddFOV(CameraPathControlPoint curvePointA, CameraPathControlPoint curvePointB, float curvePercetage, float fov, float size)
	{
		return null;
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0x2CFDC0C", Offset = "0x2CFDC0C", VA = "0x2CFDC0C")]
	public float GetValue(float percentage, ProjectionType type)
	{
		return default(float);
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0x2D08684", Offset = "0x2D08684", VA = "0x2D08684")]
	private float LinearInterpolation(float percentage, ProjectionType projectionType)
	{
		return default(float);
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0x2D084E4", Offset = "0x2D084E4", VA = "0x2D084E4")]
	private float SmoothStepInterpolation(float percentage, ProjectionType projectionType)
	{
		return default(float);
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x2D08978", Offset = "0x2D08978", VA = "0x2D08978")]
	public CameraPathFOVList()
	{
	}
}
[Token(Token = "0x2000012")]
[ExecuteInEditMode]
public class CameraPathOrientation : CameraPathPoint
{
	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public Quaternion rotation;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform lookAt;

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x2D08984", Offset = "0x2D08984", VA = "0x2D08984")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x2D08990", Offset = "0x2D08990", VA = "0x2D08990")]
	public CameraPathOrientation()
	{
	}
}
[Token(Token = "0x2000013")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x14656CC", Offset = "0x14656CC")]
[ExecuteInEditMode]
public class CameraPathOrientationList : CameraPathPointList
{
	[Token(Token = "0x20004A0")]
	public enum Interpolation
	{
		[Token(Token = "0x4001DF8")]
		None,
		[Token(Token = "0x4001DF9")]
		Linear,
		[Token(Token = "0x4001DFA")]
		SmoothStep,
		[Token(Token = "0x4001DFB")]
		Hermite,
		[Token(Token = "0x4001DFC")]
		Cubic
	}

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Interpolation interpolation;

	[Token(Token = "0x1700003A")]
	public new CameraPathOrientation Item
	{
		[Token(Token = "0x6000195")]
		[Address(RVA = "0x2D08B84", Offset = "0x2D08B84", VA = "0x2D08B84")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0x2D08A04", Offset = "0x2D08A04", VA = "0x2D08A04")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0x2D08A10", Offset = "0x2D08A10", VA = "0x2D08A10", Slot = "4")]
	public override void Init(CameraPath _cameraPath)
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0x2D08AE0", Offset = "0x2D08AE0", VA = "0x2D08AE0", Slot = "5")]
	public override void CleanUp()
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0x2CFB3CC", Offset = "0x2CFB3CC", VA = "0x2CFB3CC")]
	public void AddOrientation(CameraPathControlPoint atPoint)
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0x2D08C18", Offset = "0x2D08C18", VA = "0x2D08C18")]
	public CameraPathOrientation AddOrientation(CameraPathControlPoint curvePointA, CameraPathControlPoint curvePointB, float curvePercetage, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0x2D08D00", Offset = "0x2D08D00", VA = "0x2D08D00")]
	public void RemovePoint(CameraPathOrientation orientation)
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0x2CFD608", Offset = "0x2CFD608", VA = "0x2CFD608")]
	public Quaternion GetOrientation(float percentage)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0x2D09464", Offset = "0x2D09464", VA = "0x2D09464")]
	private Quaternion LinearInterpolation(float percentage)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0x2D092AC", Offset = "0x2D092AC", VA = "0x2D092AC")]
	private Quaternion SmootStepInterpolation(float percentage)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0x2D08DA4", Offset = "0x2D08DA4", VA = "0x2D08DA4")]
	private Quaternion CubicInterpolation(float percentage)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0x2D09744", Offset = "0x2D09744", VA = "0x2D09744", Slot = "6")]
	protected override void RecalculatePoints()
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0x2D0A0EC", Offset = "0x2D0A0EC", VA = "0x2D0A0EC")]
	public CameraPathOrientationList()
	{
	}
}
[Token(Token = "0x2000014")]
[ExecuteInEditMode]
public class CameraPathPoint : MonoBehaviour
{
	[Token(Token = "0x20004A1")]
	public enum PositionModes
	{
		[Token(Token = "0x4001DFE")]
		Free,
		[Token(Token = "0x4001DFF")]
		FixedToPoint,
		[Token(Token = "0x4001E00")]
		FixedToPercent
	}

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PositionModes positionModes;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string givenName;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string customName;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string fullName;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected float _percent;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	protected float _animationPercentage;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public CameraPathControlPoint point;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int index;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public CameraPathControlPoint cpointA;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public CameraPathControlPoint cpointB;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float curvePercentage;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Vector3 worldPosition;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool lockPoint;

	[Token(Token = "0x1700003B")]
	public float percent
	{
		[Token(Token = "0x60001A0")]
		[Address(RVA = "0x2CFE938", Offset = "0x2CFE938", VA = "0x2CFE938")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60001A1")]
		[Address(RVA = "0x2D0A104", Offset = "0x2D0A104", VA = "0x2D0A104")]
		set
		{
		}
	}

	[Token(Token = "0x1700003C")]
	public float rawPercent
	{
		[Token(Token = "0x60001A2")]
		[Address(RVA = "0x2D0A10C", Offset = "0x2D0A10C", VA = "0x2D0A10C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700003D")]
	public float animationPercentage
	{
		[Token(Token = "0x60001A3")]
		[Address(RVA = "0x2D0A114", Offset = "0x2D0A114", VA = "0x2D0A114")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60001A4")]
		[Address(RVA = "0x2D0A15C", Offset = "0x2D0A15C", VA = "0x2D0A15C")]
		set
		{
		}
	}

	[Token(Token = "0x1700003E")]
	public string displayName
	{
		[Token(Token = "0x60001A5")]
		[Address(RVA = "0x2D07D44", Offset = "0x2D07D44", VA = "0x2D07D44")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0x2D0A0F8", Offset = "0x2D0A0F8", VA = "0x2D0A0F8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0x2D065D8", Offset = "0x2D065D8", VA = "0x2D065D8")]
	public CameraPathPoint()
	{
	}
}
[Token(Token = "0x2000015")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x1465728", Offset = "0x1465728")]
[ExecuteInEditMode]
public class CameraPathPointList : MonoBehaviour
{
	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<CameraPathPoint> _points;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected CameraPath cameraPath;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected string pointTypeName;

	[NonSerialized]
	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected bool initialised;

	[Token(Token = "0x1700003F")]
	public CameraPathPoint Item
	{
		[Token(Token = "0x60001AA")]
		[Address(RVA = "0x2D0679C", Offset = "0x2D0679C", VA = "0x2D0679C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000040")]
	public int numberOfPoints
	{
		[Token(Token = "0x60001AB")]
		[Address(RVA = "0x2D0A1F4", Offset = "0x2D0A1F4", VA = "0x2D0A1F4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000041")]
	public int realNumberOfPoints
	{
		[Token(Token = "0x60001AC")]
		[Address(RVA = "0x2D06FCC", Offset = "0x2D06FCC", VA = "0x2D06FCC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0x2D0A164", Offset = "0x2D0A164", VA = "0x2D0A164")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0x2D06A50", Offset = "0x2D06A50", VA = "0x2D06A50", Slot = "4")]
	public virtual void Init(CameraPath _cameraPath)
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0x2D07F74", Offset = "0x2D07F74", VA = "0x2D07F74", Slot = "5")]
	public virtual void CleanUp()
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0x2D0A260", Offset = "0x2D0A260", VA = "0x2D0A260")]
	public int IndexOf(CameraPathPoint point)
	{
		return default(int);
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0x2D06EDC", Offset = "0x2D06EDC", VA = "0x2D06EDC")]
	public void AddPoint(CameraPathPoint newPoint, CameraPathControlPoint curvePointA, CameraPathControlPoint curvePointB, float curvePercetage)
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0x2D06C50", Offset = "0x2D06C50", VA = "0x2D06C50")]
	public void AddPoint(CameraPathPoint newPoint, float fixPercent)
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0x2D06D84", Offset = "0x2D06D84", VA = "0x2D06D84")]
	public void AddPoint(CameraPathPoint newPoint, CameraPathControlPoint atPoint)
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0x2D08D2C", Offset = "0x2D08D2C", VA = "0x2D08D2C")]
	public void RemovePoint(CameraPathPoint newPoint)
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0x2D0A2C8", Offset = "0x2D0A2C8", VA = "0x2D0A2C8")]
	public void PathPointAddedEvent(CameraPathControlPoint addedPoint)
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0x2D0A3F8", Offset = "0x2D0A3F8", VA = "0x2D0A3F8")]
	public void PathPointRemovedEvent(CameraPathControlPoint removedPathPoint)
	{
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0x2D0A61C", Offset = "0x2D0A61C", VA = "0x2D0A61C")]
	public void CheckPointCullEventFromStart(float percent)
	{
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0x2D0A718", Offset = "0x2D0A718", VA = "0x2D0A718")]
	public void CheckPointCullEventFromEnd(float percent)
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x2D09620", Offset = "0x2D09620", VA = "0x2D09620")]
	protected int GetNextPointIndex(float percent)
	{
		return default(int);
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0x2D08818", Offset = "0x2D08818", VA = "0x2D08818")]
	protected int GetLastPointIndex(float percent)
	{
		return default(int);
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0x2CFEB10", Offset = "0x2CFEB10", VA = "0x2CFEB10")]
	public CameraPathPoint GetPoint(int index)
	{
		return null;
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0x2D0A814", Offset = "0x2D0A814", VA = "0x2D0A814")]
	public CameraPathPoint GetPoint(CameraPathControlPoint atPoint)
	{
		return null;
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0x2D0A978", Offset = "0x2D0A978", VA = "0x2D0A978")]
	public void Clear()
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x2D0A9D0", Offset = "0x2D0A9D0", VA = "0x2D0A9D0")]
	public CameraPathPoint DuplicatePointCheck()
	{
		return null;
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0x2D098EC", Offset = "0x2D098EC", VA = "0x2D098EC", Slot = "6")]
	protected virtual void RecalculatePoints()
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x2D0AC90", Offset = "0x2D0AC90", VA = "0x2D0AC90")]
	public void ReassignCP(CameraPathControlPoint from, CameraPathControlPoint to)
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x2D0A170", Offset = "0x2D0A170", VA = "0x2D0A170")]
	protected void CheckListIsNull()
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x2D0728C", Offset = "0x2D0728C", VA = "0x2D0728C")]
	public CameraPathPointList()
	{
	}
}
[Token(Token = "0x2000016")]
public class CameraPathSpeed : CameraPathPoint
{
	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float _speed;

	[Token(Token = "0x17000042")]
	public float speed
	{
		[Token(Token = "0x60001C0")]
		[Address(RVA = "0x2D0AEF8", Offset = "0x2D0AEF8", VA = "0x2D0AEF8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60001C1")]
		[Address(RVA = "0x2D0AF00", Offset = "0x2D0AF00", VA = "0x2D0AF00")]
		set
		{
		}
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x2D0AF84", Offset = "0x2D0AF84", VA = "0x2D0AF84")]
	public CameraPathSpeed()
	{
	}
}
[Token(Token = "0x2000017")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x1465774", Offset = "0x1465774")]
[ExecuteInEditMode]
public class CameraPathSpeedList : CameraPathPointList
{
	[Token(Token = "0x20004A2")]
	public enum Interpolation
	{
		[Token(Token = "0x4001E02")]
		None,
		[Token(Token = "0x4001E03")]
		Linear,
		[Token(Token = "0x4001E04")]
		SmoothStep
	}

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Interpolation interpolation;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private bool _enabled;

	[Token(Token = "0x17000043")]
	public new CameraPathSpeed Item
	{
		[Token(Token = "0x60001C4")]
		[Address(RVA = "0x2D0AF9C", Offset = "0x2D0AF9C", VA = "0x2D0AF9C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000044")]
	public bool listEnabled
	{
		[Token(Token = "0x60001C6")]
		[Address(RVA = "0x2D019B8", Offset = "0x2D019B8", VA = "0x2D019B8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001C7")]
		[Address(RVA = "0x2D0B0B4", Offset = "0x2D0B0B4", VA = "0x2D0B0B4")]
		set
		{
		}
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0x2D0AF90", Offset = "0x2D0AF90", VA = "0x2D0AF90")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0x2D0B030", Offset = "0x2D0B030", VA = "0x2D0B030", Slot = "4")]
	public override void Init(CameraPath _cameraPath)
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0x2D0B0C0", Offset = "0x2D0B0C0", VA = "0x2D0B0C0")]
	public void AddSpeedPoint(CameraPathControlPoint atPoint)
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x2D0B160", Offset = "0x2D0B160", VA = "0x2D0B160")]
	public CameraPathSpeed AddSpeedPoint(CameraPathControlPoint curvePointA, CameraPathControlPoint curvePointB, float curvePercetage)
	{
		return null;
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0x2D0B248", Offset = "0x2D0B248", VA = "0x2D0B248")]
	public float GetLowesetSpeed()
	{
		return default(float);
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x2CFDDE8", Offset = "0x2CFDDE8", VA = "0x2CFDDE8")]
	public float GetSpeed(float percentage)
	{
		return default(float);
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x2D0B4A4", Offset = "0x2D0B4A4", VA = "0x2D0B4A4")]
	private float LinearInterpolation(float percentage)
	{
		return default(float);
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0x2D0B2DC", Offset = "0x2D0B2DC", VA = "0x2D0B2DC")]
	private float SmoothStepInterpolation(float percentage)
	{
		return default(float);
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x2D0B660", Offset = "0x2D0B660", VA = "0x2D0B660")]
	public CameraPathSpeedList()
	{
	}
}
[Token(Token = "0x2000018")]
public class CameraPathTilt : CameraPathPoint
{
	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float tilt;

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0x2D0B674", Offset = "0x2D0B674", VA = "0x2D0B674")]
	public CameraPathTilt()
	{
	}
}
[Token(Token = "0x2000019")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x14657C0", Offset = "0x14657C0")]
[ExecuteInEditMode]
public class CameraPathTiltList : CameraPathPointList
{
	[Token(Token = "0x20004A3")]
	public enum Interpolation
	{
		[Token(Token = "0x4001E06")]
		None,
		[Token(Token = "0x4001E07")]
		Linear,
		[Token(Token = "0x4001E08")]
		SmoothStep
	}

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Interpolation interpolation;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool listEnabled;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float autoSensitivity;

	[Token(Token = "0x17000045")]
	public new CameraPathTilt Item
	{
		[Token(Token = "0x60001D3")]
		[Address(RVA = "0x2D0B800", Offset = "0x2D0B800", VA = "0x2D0B800")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0x2D0B680", Offset = "0x2D0B680", VA = "0x2D0B680")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0x2D0B68C", Offset = "0x2D0B68C", VA = "0x2D0B68C", Slot = "4")]
	public override void Init(CameraPath _cameraPath)
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0x2D0B75C", Offset = "0x2D0B75C", VA = "0x2D0B75C", Slot = "5")]
	public override void CleanUp()
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0x2D0B894", Offset = "0x2D0B894", VA = "0x2D0B894")]
	public void AddTilt(CameraPathControlPoint atPoint)
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0x2D0B938", Offset = "0x2D0B938", VA = "0x2D0B938")]
	public CameraPathTilt AddTilt(CameraPathControlPoint curvePointA, CameraPathControlPoint curvePointB, float curvePercetage, float tilt)
	{
		return null;
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0x2CFDA8C", Offset = "0x2CFDA8C", VA = "0x2CFDA8C")]
	public float GetTilt(float percentage)
	{
		return default(float);
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x2D0BCEC", Offset = "0x2D0BCEC", VA = "0x2D0BCEC")]
	public void AutoSetTilts()
	{
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0x2D0BD44", Offset = "0x2D0BD44", VA = "0x2D0BD44")]
	public void AutoSetTilt(CameraPathTilt point)
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0x2D0BB7C", Offset = "0x2D0BB7C", VA = "0x2D0BB7C")]
	private float LinearInterpolation(float percentage)
	{
		return default(float);
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x2D0BA00", Offset = "0x2D0BA00", VA = "0x2D0BA00")]
	private float SmoothStepInterpolation(float percentage)
	{
		return default(float);
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0x2D0C044", Offset = "0x2D0C044", VA = "0x2D0C044")]
	public CameraPathTiltList()
	{
	}
}
[Token(Token = "0x200001A")]
public class CameraPathColours
{
	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static UnityEngine.Color RED;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static UnityEngine.Color GREEN;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static UnityEngine.Color DARKGREEN;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static UnityEngine.Color BLUE;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static UnityEngine.Color GREY;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static UnityEngine.Color DARKGREY;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static UnityEngine.Color CYAN;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static UnityEngine.Color PURPLE;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static UnityEngine.Color MAGENTA;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static UnityEngine.Color WHITE;

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x2D054CC", Offset = "0x2D054CC", VA = "0x2D054CC")]
	public CameraPathColours()
	{
	}
}
[Token(Token = "0x200001B")]
public class CPMath
{
	[Token(Token = "0x60001DE")]
	[Address(RVA = "0x362925C", Offset = "0x362925C", VA = "0x362925C")]
	public static Vector3 CalculateBezier(float t, Vector3 p, Vector3 a, Vector3 b, Vector3 q)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0x3629424", Offset = "0x3629424", VA = "0x3629424")]
	public static Vector3 CalculateHermite(Vector3 p, Vector3 a, Vector3 b, Vector3 q, float t, float tension, float bias)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0x36297C8", Offset = "0x36297C8", VA = "0x36297C8")]
	public static Vector3 CalculateCatmullRom(Vector3 p, Vector3 a, Vector3 b, Vector3 q, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0x3629B94", Offset = "0x3629B94", VA = "0x3629B94")]
	public static Vector2 CalculateBezier(float t, Vector2 p, Vector2 a, Vector2 b, Vector2 q)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0x3629D08", Offset = "0x3629D08", VA = "0x3629D08")]
	public static Vector2 CalculateHermite(Vector2 p, Vector2 a, Vector2 b, Vector2 q, float t, float tension, float bias)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x362A000", Offset = "0x362A000", VA = "0x362A000")]
	public static Vector2 CalculateCatmullRom(Vector2 p, Vector2 a, Vector2 b, Vector2 q, float t)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x362A2FC", Offset = "0x362A2FC", VA = "0x362A2FC")]
	public static Quaternion CalculateCubic(Quaternion p, Quaternion a, Quaternion b, Quaternion q, float t)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0x362A9E4", Offset = "0x362A9E4", VA = "0x362A9E4")]
	public static float CalculateCubic(float p, float a, float b, float q, float t)
	{
		return default(float);
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0x362AA30", Offset = "0x362AA30", VA = "0x362AA30")]
	public static float CalculateHermite(float p, float a, float b, float q, float t, float tension, float bias)
	{
		return default(float);
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x362AAD8", Offset = "0x362AAD8", VA = "0x362AAD8")]
	public static float CalculateCatmullRom(float p, float a, float b, float q, float t)
	{
		return default(float);
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x362AB44", Offset = "0x362AB44", VA = "0x362AB44")]
	public static float SmoothStep(float val)
	{
		return default(float);
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0x362A5F0", Offset = "0x362A5F0", VA = "0x362A5F0")]
	public static Quaternion SquadTangent(Quaternion before, Quaternion center, Quaternion after)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0x362AB5C", Offset = "0x362AB5C", VA = "0x362AB5C")]
	public static Quaternion LnDif(Quaternion a, Quaternion b)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x362AE8C", Offset = "0x362AE8C", VA = "0x362AE8C")]
	public static Quaternion Normalize(Quaternion q)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x362AC4C", Offset = "0x362AC4C", VA = "0x362AC4C")]
	public static Quaternion Exp(Quaternion q)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x362AF64", Offset = "0x362AF64", VA = "0x362AF64")]
	public static Quaternion Log(Quaternion q)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x362A7C4", Offset = "0x362A7C4", VA = "0x362A7C4")]
	public static Quaternion Slerp(Quaternion p, Quaternion q, float t)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x362B188", Offset = "0x362B188", VA = "0x362B188")]
	public static Quaternion Nlerp(Quaternion p, Quaternion q, float t)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0x362B208", Offset = "0x362B208", VA = "0x362B208")]
	public static Quaternion GetQuatConjugate(Quaternion q)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x362B244", Offset = "0x362B244", VA = "0x362B244")]
	public static float SignedAngle(Vector3 from, Vector3 to, Vector3 up)
	{
		return default(float);
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x362B3C0", Offset = "0x362B3C0", VA = "0x362B3C0")]
	public static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x362B470", Offset = "0x362B470", VA = "0x362B470")]
	public CPMath()
	{
	}
}
[Token(Token = "0x200001C")]
public class CameraDeAlpha : MonoBehaviour
{
	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Material mat;

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x2CF90FC", Offset = "0x2CF90FC", VA = "0x2CF90FC")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x2CF92A8", Offset = "0x2CF92A8", VA = "0x2CF92A8")]
	public CameraDeAlpha()
	{
	}
}
[Token(Token = "0x200001D")]
public class CameraPathPreviewSupport
{
	[Token(Token = "0x17000046")]
	public static bool previewSupported
	{
		[Token(Token = "0x60001F6")]
		[Address(RVA = "0x2D0AEA0", Offset = "0x2D0AEA0", VA = "0x2D0AEA0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000047")]
	public static string previewSupportedText
	{
		[Token(Token = "0x60001F7")]
		[Address(RVA = "0x2D0AEA8", Offset = "0x2D0AEA8", VA = "0x2D0AEA8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x2D0AEF0", Offset = "0x2D0AEF0", VA = "0x2D0AEF0")]
	public CameraPathPreviewSupport()
	{
	}
}
[Token(Token = "0x200001E")]
public class XMLVariableConverter
{
	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x2A86678", Offset = "0x2A86678", VA = "0x2A86678")]
	public XMLVariableConverter()
	{
	}
}
[Token(Token = "0x200001F")]
public class CUI_CameraRotationOnButtonHeld : MonoBehaviour
{
	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float Sensitivity;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 oldMousePos;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool move;

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x2CF8810", Offset = "0x2CF8810", VA = "0x2CF8810")]
	private void Start()
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x2CF883C", Offset = "0x2CF883C", VA = "0x2CF883C")]
	public CUI_CameraRotationOnButtonHeld()
	{
	}
}
[Token(Token = "0x2000020")]
public class CUI_MoveAlong : MonoBehaviour
{
	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x2CF8854", Offset = "0x2CF8854", VA = "0x2CF8854")]
	private void Start()
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x2CF8858", Offset = "0x2CF8858", VA = "0x2CF8858")]
	private void Update()
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x2CF8AAC", Offset = "0x2CF8AAC", VA = "0x2CF8AAC")]
	public CUI_MoveAlong()
	{
	}
}
[Token(Token = "0x2000021")]
public class CUI_MoveHeartbeat : MonoBehaviour
{
	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool wrapAroundParent;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform rectie;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform parentRectie;

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x2CF8AB4", Offset = "0x2CF8AB4", VA = "0x2CF8AB4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x2CF8B78", Offset = "0x2CF8B78", VA = "0x2CF8B78")]
	private void Update()
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x2CF8CC4", Offset = "0x2CF8CC4", VA = "0x2CF8CC4")]
	public CUI_MoveHeartbeat()
	{
	}
}
[Token(Token = "0x2000022")]
public class CUI_ShowParentCoordinates : MonoBehaviour
{
	[Token(Token = "0x6000202")]
	[Address(RVA = "0x2CF8CD4", Offset = "0x2CF8CD4", VA = "0x2CF8CD4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x2CF8DA0", Offset = "0x2CF8DA0", VA = "0x2CF8DA0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x2CF8DA4", Offset = "0x2CF8DA4", VA = "0x2CF8DA4")]
	public CUI_ShowParentCoordinates()
	{
	}
}
[Token(Token = "0x2000023")]
public class CUI_rotation_anim : MonoBehaviour
{
	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 Rotation;

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x2CF8DAC", Offset = "0x2CF8DAC", VA = "0x2CF8DAC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x2CF8DB0", Offset = "0x2CF8DB0", VA = "0x2CF8DB0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x2CF8F98", Offset = "0x2CF8F98", VA = "0x2CF8F98")]
	public CUI_rotation_anim()
	{
	}
}
[Token(Token = "0x2000024")]
public class CUI_touchpad : MonoBehaviour
{
	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform container;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform dot;

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x2CF8FA0", Offset = "0x2CF8FA0", VA = "0x2CF8FA0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x2CF9018", Offset = "0x2CF9018", VA = "0x2CF9018")]
	private void MoveDotOnTouchpadAxisChanged(object o, ViveInputArgs args)
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0x2CF90F4", Offset = "0x2CF90F4", VA = "0x2CF90F4")]
	public CUI_touchpad()
	{
	}
}
[Token(Token = "0x2000025")]
[ExecuteInEditMode]
public class CurvedUIInputModule : StandaloneInputModule
{
	[Token(Token = "0x20004A4")]
	public enum CUIControlMethod
	{
		[Token(Token = "0x4001E0A")]
		MOUSE = 0,
		[Token(Token = "0x4001E0B")]
		GAZE = 1,
		[Token(Token = "0x4001E0C")]
		WORLD_MOUSE = 2,
		[Token(Token = "0x4001E0D")]
		CUSTOM_RAY = 3,
		[Token(Token = "0x4001E0E")]
		STEAMVR_LEGACY = 4,
		[Token(Token = "0x4001E0F")]
		OCULUSVR = 5,
		[Token(Token = "0x4001E10")]
		GOOGLEVR = 7,
		[Token(Token = "0x4001E11")]
		STEAMVR_2 = 8,
		[Token(Token = "0x4001E12")]
		UNITY_XR = 9
	}

	[Token(Token = "0x20004A5")]
	public enum Hand
	{
		[Token(Token = "0x4001E14")]
		Both,
		[Token(Token = "0x4001E15")]
		Right,
		[Token(Token = "0x4001E16")]
		Left
	}

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[SerializeField]
	private CUIControlMethod controlMethod;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private string submitButtonName;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private Camera mainEventCamera;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private LayerMask raycastLayerMask;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[SerializeField]
	private bool gazeUseTimedClick;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private float gazeClickTimer;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[SerializeField]
	private float gazeClickTimerDelay;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private UnityEngine.UI.Image gazeTimedClickProgressImage;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private float worldSpaceMouseSensitivity;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	[SerializeField]
	private Hand usedHand;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x146B8D8", Offset = "0x146B8D8")]
	[SerializeField]
	private Transform pointerTransformOverride;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool disableOtherInputModulesOnStart;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static CurvedUIInputModule instance;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private GameObject currentDragging;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private GameObject currentPointedAt;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private GameObject m_rightController;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private GameObject m_leftController;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private float gazeTimerProgress;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private Ray customControllerRay;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private float dragThreshold;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private bool pressedDown;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x131")]
	private bool pressedLastFrame;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private Vector3 lastMouseOnScreenPos;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Vector2 worldSpaceMouseInCanvasSpace;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Vector2 lastWorldSpaceMouseOnCanvas;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Vector2 worldSpaceMouseOnCanvasDelta;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[SerializeField]
	private XRController rightXRController;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[SerializeField]
	private XRController leftXRController;

	[Token(Token = "0x17000048")]
	public static CurvedUIInputModule Instance
	{
		[Token(Token = "0x6000219")]
		[Address(RVA = "0x1BF7AF4", Offset = "0x1BF7AF4", VA = "0x1BF7AF4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600021A")]
		[Address(RVA = "0x1C0A8B4", Offset = "0x1C0A8B4", VA = "0x1C0A8B4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000049")]
	public static CUIControlMethod ControlMethod
	{
		[Token(Token = "0x600021B")]
		[Address(RVA = "0x1BF9470", Offset = "0x1BF9470", VA = "0x1BF9470")]
		get
		{
			return default(CUIControlMethod);
		}
		[Token(Token = "0x600021C")]
		[Address(RVA = "0x1C02EF8", Offset = "0x1C02EF8", VA = "0x1C02EF8")]
		set
		{
		}
	}

	[Token(Token = "0x1700004A")]
	public LayerMask RaycastLayerMask
	{
		[Token(Token = "0x600021D")]
		[Address(RVA = "0x1C0A924", Offset = "0x1C0A924", VA = "0x1C0A924")]
		get
		{
			return default(LayerMask);
		}
		[Token(Token = "0x600021E")]
		[Address(RVA = "0x1C0A92C", Offset = "0x1C0A92C", VA = "0x1C0A92C")]
		set
		{
		}
	}

	[Token(Token = "0x1700004B")]
	public Hand UsedHand
	{
		[Token(Token = "0x600021F")]
		[Address(RVA = "0x1C0A934", Offset = "0x1C0A934", VA = "0x1C0A934")]
		get
		{
			return default(Hand);
		}
		[Token(Token = "0x6000220")]
		[Address(RVA = "0x1C0A93C", Offset = "0x1C0A93C", VA = "0x1C0A93C")]
		set
		{
		}
	}

	[Token(Token = "0x1700004C")]
	public Transform ControllerTransform
	{
		[Token(Token = "0x6000221")]
		[Address(RVA = "0x1C0A6FC", Offset = "0x1C0A6FC", VA = "0x1C0A6FC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700004D")]
	public Vector3 ControllerPointingDirection
	{
		[Token(Token = "0x6000222")]
		[Address(RVA = "0x1C0A9B8", Offset = "0x1C0A9B8", VA = "0x1C0A9B8")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700004E")]
	public Vector3 ControllerPointingOrigin
	{
		[Token(Token = "0x6000223")]
		[Address(RVA = "0x1C0A9D8", Offset = "0x1C0A9D8", VA = "0x1C0A9D8")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700004F")]
	public Transform PointerTransformOverride
	{
		[Token(Token = "0x6000224")]
		[Address(RVA = "0x1C0A944", Offset = "0x1C0A944", VA = "0x1C0A944")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000225")]
		[Address(RVA = "0x1C0A9F8", Offset = "0x1C0A9F8", VA = "0x1C0A9F8")]
		set
		{
		}
	}

	[Token(Token = "0x17000050")]
	public GameObject CurrentPointedAt
	{
		[Token(Token = "0x6000226")]
		[Address(RVA = "0x1C0AA74", Offset = "0x1C0AA74", VA = "0x1C0AA74")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000051")]
	public Camera EventCamera
	{
		[Token(Token = "0x6000227")]
		[Address(RVA = "0x1C0AA7C", Offset = "0x1C0AA7C", VA = "0x1C0AA7C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000228")]
		[Address(RVA = "0x1C098B8", Offset = "0x1C098B8", VA = "0x1C098B8")]
		set
		{
		}
	}

	[Token(Token = "0x17000052")]
	public static Ray CustomControllerRay
	{
		[Token(Token = "0x600022A")]
		[Address(RVA = "0x1C0AA84", Offset = "0x1C0AA84", VA = "0x1C0AA84")]
		get
		{
			return default(Ray);
		}
		[Token(Token = "0x600022B")]
		[Address(RVA = "0x1C0A7AC", Offset = "0x1C0A7AC", VA = "0x1C0A7AC")]
		set
		{
		}
	}

	[Token(Token = "0x17000053")]
	public static bool CustomControllerButtonState
	{
		[Token(Token = "0x600022C")]
		[Address(RVA = "0x1C0A848", Offset = "0x1C0A848", VA = "0x1C0A848")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600022D")]
		[Address(RVA = "0x1C0A688", Offset = "0x1C0A688", VA = "0x1C0A688")]
		set
		{
		}
	}

	[Token(Token = "0x17000054")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1489C5C", Offset = "0x1489C5C")]
	public static bool CustomControllerButtonDown
	{
		[Token(Token = "0x600022E")]
		[Address(RVA = "0x1C0AB08", Offset = "0x1C0AB08", VA = "0x1C0AB08")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600022F")]
		[Address(RVA = "0x1C0AB74", Offset = "0x1C0AB74", VA = "0x1C0AB74")]
		set
		{
		}
	}

	[Token(Token = "0x17000055")]
	public Vector2 WorldSpaceMouseInCanvasSpace
	{
		[Token(Token = "0x6000230")]
		[Address(RVA = "0x1C0ABE8", Offset = "0x1C0ABE8", VA = "0x1C0ABE8")]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x6000231")]
		[Address(RVA = "0x1C0ABF4", Offset = "0x1C0ABF4", VA = "0x1C0ABF4")]
		set
		{
		}
	}

	[Token(Token = "0x17000056")]
	public Vector2 WorldSpaceMouseInCanvasSpaceDelta
	{
		[Token(Token = "0x6000232")]
		[Address(RVA = "0x1C0AC08", Offset = "0x1C0AC08", VA = "0x1C0AC08")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x17000057")]
	public float WorldSpaceMouseSensitivity
	{
		[Token(Token = "0x6000233")]
		[Address(RVA = "0x1C0AC9C", Offset = "0x1C0AC9C", VA = "0x1C0AC9C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000234")]
		[Address(RVA = "0x1C0ACA4", Offset = "0x1C0ACA4", VA = "0x1C0ACA4")]
		set
		{
		}
	}

	[Token(Token = "0x17000058")]
	public bool GazeUseTimedClick
	{
		[Token(Token = "0x6000235")]
		[Address(RVA = "0x1C0ACAC", Offset = "0x1C0ACAC", VA = "0x1C0ACAC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000236")]
		[Address(RVA = "0x1C0ACB4", Offset = "0x1C0ACB4", VA = "0x1C0ACB4")]
		set
		{
		}
	}

	[Token(Token = "0x17000059")]
	public float GazeClickTimer
	{
		[Token(Token = "0x6000237")]
		[Address(RVA = "0x1C0ACC0", Offset = "0x1C0ACC0", VA = "0x1C0ACC0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000238")]
		[Address(RVA = "0x1C033B0", Offset = "0x1C033B0", VA = "0x1C033B0")]
		set
		{
		}
	}

	[Token(Token = "0x1700005A")]
	public float GazeClickTimerDelay
	{
		[Token(Token = "0x6000239")]
		[Address(RVA = "0x1C0ACC8", Offset = "0x1C0ACC8", VA = "0x1C0ACC8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600023A")]
		[Address(RVA = "0x1C03514", Offset = "0x1C03514", VA = "0x1C03514")]
		set
		{
		}
	}

	[Token(Token = "0x1700005B")]
	public float GazeTimerProgress
	{
		[Token(Token = "0x600023B")]
		[Address(RVA = "0x1C0ACD0", Offset = "0x1C0ACD0", VA = "0x1C0ACD0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700005C")]
	public UnityEngine.UI.Image GazeTimedClickProgressImage
	{
		[Token(Token = "0x600023C")]
		[Address(RVA = "0x1C0ACD8", Offset = "0x1C0ACD8", VA = "0x1C0ACD8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600023D")]
		[Address(RVA = "0x1C0ACE0", Offset = "0x1C0ACE0", VA = "0x1C0ACE0")]
		set
		{
		}
	}

	[Token(Token = "0x1700005D")]
	public XRController RightXRController
	{
		[Token(Token = "0x600023E")]
		[Address(RVA = "0x1C0ACE8", Offset = "0x1C0ACE8", VA = "0x1C0ACE8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600023F")]
		[Address(RVA = "0x1C0ACF0", Offset = "0x1C0ACF0", VA = "0x1C0ACF0")]
		set
		{
		}
	}

	[Token(Token = "0x1700005E")]
	public XRController LeftXRController
	{
		[Token(Token = "0x6000240")]
		[Address(RVA = "0x1C0AD00", Offset = "0x1C0AD00", VA = "0x1C0AD00")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000241")]
		[Address(RVA = "0x1C0AD08", Offset = "0x1C0AD08", VA = "0x1C0AD08")]
		set
		{
		}
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0x1C0970C", Offset = "0x1C0970C", VA = "0x1C0970C", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0x1C09B48", Offset = "0x1C09B48", VA = "0x1C09B48", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x1C09B84", Offset = "0x1C09B84", VA = "0x1C09B84", Slot = "31")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x1C09D9C", Offset = "0x1C09D9C", VA = "0x1C09D9C", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x1C0A06C", Offset = "0x1C0A06C", VA = "0x1C0A06C", Slot = "32")]
	protected virtual void ProcessGaze()
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x1C0A0D4", Offset = "0x1C0A0D4", VA = "0x1C0A0D4", Slot = "33")]
	protected virtual void ProcessCustomRayController()
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x1C0A0DC", Offset = "0x1C0A0DC", VA = "0x1C0A0DC", Slot = "27")]
	protected override MouseState GetMousePointerEventData(int id)
	{
		return null;
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x1C0A1FC", Offset = "0x1C0A1FC", VA = "0x1C0A1FC")]
	private PointerEventData.FramePressState CustomRayFramePressedState()
	{
		return default(PointerEventData.FramePressState);
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x1C0A228", Offset = "0x1C0A228", VA = "0x1C0A228", Slot = "34")]
	protected virtual void ProcessViveControllers()
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x1C0A22C", Offset = "0x1C0A22C", VA = "0x1C0A22C", Slot = "35")]
	protected virtual void ProcessOculusVRController()
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x1C0A068", Offset = "0x1C0A068", VA = "0x1C0A068")]
	private void ProcessSteamVR2Controllers()
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0x1C0A230", Offset = "0x1C0A230", VA = "0x1C0A230", Slot = "36")]
	protected virtual void ProcessUnityXRController()
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x1C0996C", Offset = "0x1C0996C", VA = "0x1C0996C")]
	private void SetupUnityXRControllers()
	{
	}

	[Token(Token = "0x6000218")]
	private static T EnableInputModule<T>() where T : BaseInputModule
	{
		return null;
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x1BF8114", Offset = "0x1BF8114", VA = "0x1BF8114")]
	public Ray GetEventRay([Optional] Camera eventCam)
	{
		return default(Ray);
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x1C0AD18", Offset = "0x1C0AD18", VA = "0x1C0AD18")]
	public CurvedUIInputModule()
	{
	}
}
[Token(Token = "0x2000026")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x146581C", Offset = "0x146581C")]
public class GvrReticlePointer : GvrBasePointer
{
	[Token(Token = "0x4000104")]
	public const float RETICLE_MIN_INNER_ANGLE = 0f;

	[Token(Token = "0x4000105")]
	public const float RETICLE_MIN_OUTER_ANGLE = 0.5f;

	[Token(Token = "0x4000106")]
	public const float RETICLE_GROWTH_ANGLE = 1.5f;

	[Token(Token = "0x4000107")]
	public const float RETICLE_DISTANCE_MIN = 0.45f;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float maxReticleDistance;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int reticleSegments;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float reticleGrowthSpeed;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146B944", Offset = "0x146B944")]
	public int reticleSortingOrder;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146B964", Offset = "0x146B964")]
	private Material <MaterialComp>k__BackingField;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146B974", Offset = "0x146B974")]
	private float <ReticleInnerAngle>k__BackingField;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146B984", Offset = "0x146B984")]
	private float <ReticleOuterAngle>k__BackingField;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146B994", Offset = "0x146B994")]
	private float <ReticleDistanceInMeters>k__BackingField;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146B9A4", Offset = "0x146B9A4")]
	private float <ReticleInnerDiameter>k__BackingField;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146B9B4", Offset = "0x146B9B4")]
	private float <ReticleOuterDiameter>k__BackingField;

	[Token(Token = "0x1700005F")]
	public Material MaterialComp
	{
		[Token(Token = "0x6000244")]
		[Address(RVA = "0x2B3D5F8", Offset = "0x2B3D5F8", VA = "0x2B3D5F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147EA6C", Offset = "0x147EA6C")]
		private get
		{
			return null;
		}
		[Token(Token = "0x6000245")]
		[Address(RVA = "0x2B3D600", Offset = "0x2B3D600", VA = "0x2B3D600")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147EA7C", Offset = "0x147EA7C")]
		set
		{
		}
	}

	[Token(Token = "0x17000060")]
	public float ReticleInnerAngle
	{
		[Token(Token = "0x6000246")]
		[Address(RVA = "0x2B3D608", Offset = "0x2B3D608", VA = "0x2B3D608")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147EA8C", Offset = "0x147EA8C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000247")]
		[Address(RVA = "0x2B3D610", Offset = "0x2B3D610", VA = "0x2B3D610")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147EA9C", Offset = "0x147EA9C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000061")]
	public float ReticleOuterAngle
	{
		[Token(Token = "0x6000248")]
		[Address(RVA = "0x2B3D618", Offset = "0x2B3D618", VA = "0x2B3D618")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147EAAC", Offset = "0x147EAAC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000249")]
		[Address(RVA = "0x2B3D620", Offset = "0x2B3D620", VA = "0x2B3D620")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147EABC", Offset = "0x147EABC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000062")]
	public float ReticleDistanceInMeters
	{
		[Token(Token = "0x600024A")]
		[Address(RVA = "0x2B3D628", Offset = "0x2B3D628", VA = "0x2B3D628")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147EACC", Offset = "0x147EACC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600024B")]
		[Address(RVA = "0x2B3D630", Offset = "0x2B3D630", VA = "0x2B3D630")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147EADC", Offset = "0x147EADC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000063")]
	public float ReticleInnerDiameter
	{
		[Token(Token = "0x600024C")]
		[Address(RVA = "0x2B3D638", Offset = "0x2B3D638", VA = "0x2B3D638")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147EAEC", Offset = "0x147EAEC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600024D")]
		[Address(RVA = "0x2B3D640", Offset = "0x2B3D640", VA = "0x2B3D640")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147EAFC", Offset = "0x147EAFC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000064")]
	public float ReticleOuterDiameter
	{
		[Token(Token = "0x600024E")]
		[Address(RVA = "0x2B3D648", Offset = "0x2B3D648", VA = "0x2B3D648")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147EB0C", Offset = "0x147EB0C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600024F")]
		[Address(RVA = "0x2B3D650", Offset = "0x2B3D650", VA = "0x2B3D650")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147EB1C", Offset = "0x147EB1C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000065")]
	public override float MaxPointerDistance
	{
		[Token(Token = "0x6000250")]
		[Address(RVA = "0x2B3D658", Offset = "0x2B3D658", VA = "0x2B3D658", Slot = "16")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x2B3D660", Offset = "0x2B3D660", VA = "0x2B3D660", Slot = "17")]
	public override void OnPointerEnter(RaycastResult raycastResultResult, bool isInteractive)
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0x2B3D7F0", Offset = "0x2B3D7F0", VA = "0x2B3D7F0", Slot = "18")]
	public override void OnPointerHover(RaycastResult raycastResultResult, bool isInteractive)
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x2B3D800", Offset = "0x2B3D800", VA = "0x2B3D800", Slot = "19")]
	public override void OnPointerExit(GameObject previousObject)
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0x2B3D818", Offset = "0x2B3D818", VA = "0x2B3D818", Slot = "20")]
	public override void OnPointerClickDown()
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x2B3D81C", Offset = "0x2B3D81C", VA = "0x2B3D81C", Slot = "21")]
	public override void OnPointerClickUp()
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x2B3D820", Offset = "0x2B3D820", VA = "0x2B3D820", Slot = "22")]
	public override void GetPointerRadius(out float enterRadius, out float exitRadius)
	{
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x2B3D89C", Offset = "0x2B3D89C", VA = "0x2B3D89C")]
	public void UpdateDiameters()
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x2B3DA64", Offset = "0x2B3DA64", VA = "0x2B3DA64", Slot = "23")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0x2B3DE28", Offset = "0x2B3DE28", VA = "0x2B3DE28")]
	private void Awake()
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0x2B3DE38", Offset = "0x2B3DE38", VA = "0x2B3DE38")]
	private void Update()
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0x2B3D670", Offset = "0x2B3D670", VA = "0x2B3D670")]
	private bool SetPointerTarget(Vector3 target, bool interactive)
	{
		return default(bool);
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x2B3DAF8", Offset = "0x2B3DAF8", VA = "0x2B3DAF8")]
	private void CreateReticleVertices()
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x2B3DE3C", Offset = "0x2B3DE3C", VA = "0x2B3DE3C")]
	public GvrReticlePointer()
	{
	}
}
[Token(Token = "0x2000027")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x1465854", Offset = "0x1465854")]
public class GvrArmModel : GvrBaseArmModel, IGvrControllerInputDeviceReceiver
{
	[Token(Token = "0x4000112")]
	public const float DEFAULT_ELBOW_BEND_RATIO = 0.6f;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly Vector3 DEFAULT_ELBOW_REST_POSITION;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static readonly Vector3 DEFAULT_WRIST_REST_POSITION;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly Vector3 DEFAULT_CONTROLLER_REST_POSITION;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static readonly Vector3 DEFAULT_ARM_EXTENSION_OFFSET;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 elbowRestPosition;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 wristRestPosition;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 controllerRestPosition;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 armExtensionOffset;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146B9C4", Offset = "0x146B9C4")]
	public float elbowBendRatio;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146B9DC", Offset = "0x146B9DC")]
	public float fadeControllerOffset;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146B9F8", Offset = "0x146B9F8")]
	public float fadeDistanceFromHeadForward;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146BA14", Offset = "0x146BA14")]
	public float fadeDistanceFromHeadSide;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146BA30", Offset = "0x146BA30")]
	public float tooltipMinDistanceFromFace;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146BA50", Offset = "0x146BA50")]
	public int tooltipMaxAngleFromCamera;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool isLockedToNeck;

	[Token(Token = "0x4000122")]
	protected const float EXTENSION_WEIGHT = 0.4f;

	[Token(Token = "0x4000123")]
	protected const float DELTA_ALPHA = 4f;

	[Token(Token = "0x4000124")]
	protected const float MIN_EXTENSION_ANGLE = 7f;

	[Token(Token = "0x4000125")]
	protected const float MAX_EXTENSION_ANGLE = 60f;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected static readonly Vector3 SHOULDER_POSITION;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected static readonly Vector3 NECK_OFFSET;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	protected Vector3 neckPosition;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Vector3 elbowPosition;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	protected Quaternion elbowRotation;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	protected Vector3 wristPosition;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected Quaternion wristRotation;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected Vector3 controllerPosition;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	protected Quaternion controllerRotation;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	protected float preferredAlpha;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	protected float tooltipAlphaValue;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	protected Vector3 handedMultiplier;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	protected Vector3 torsoDirection;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	protected Quaternion torsoRotation;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146BA6C", Offset = "0x146BA6C")]
	private GvrControllerInputDevice <ControllerInputDevice>k__BackingField;

	[Token(Token = "0x17000066")]
	public override Vector3 ControllerPositionFromHead
	{
		[Token(Token = "0x600025E")]
		[Address(RVA = "0x2B25F88", Offset = "0x2B25F88", VA = "0x2B25F88", Slot = "4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000067")]
	public override Quaternion ControllerRotationFromHead
	{
		[Token(Token = "0x600025F")]
		[Address(RVA = "0x2B25F94", Offset = "0x2B25F94", VA = "0x2B25F94", Slot = "5")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000068")]
	public override float PreferredAlpha
	{
		[Token(Token = "0x6000260")]
		[Address(RVA = "0x2B25FA0", Offset = "0x2B25FA0", VA = "0x2B25FA0", Slot = "6")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000069")]
	public override float TooltipAlphaValue
	{
		[Token(Token = "0x6000261")]
		[Address(RVA = "0x2B25FA8", Offset = "0x2B25FA8", VA = "0x2B25FA8", Slot = "7")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700006A")]
	public Vector3 NeckPosition
	{
		[Token(Token = "0x6000262")]
		[Address(RVA = "0x2B25FB0", Offset = "0x2B25FB0", VA = "0x2B25FB0")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700006B")]
	public Vector3 ShoulderPosition
	{
		[Token(Token = "0x6000263")]
		[Address(RVA = "0x2B25FBC", Offset = "0x2B25FBC", VA = "0x2B25FBC")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700006C")]
	public Quaternion ShoulderRotation
	{
		[Token(Token = "0x6000264")]
		[Address(RVA = "0x2B26128", Offset = "0x2B26128", VA = "0x2B26128")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x1700006D")]
	public Vector3 ElbowPosition
	{
		[Token(Token = "0x6000265")]
		[Address(RVA = "0x2B26134", Offset = "0x2B26134", VA = "0x2B26134")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700006E")]
	public Quaternion ElbowRotation
	{
		[Token(Token = "0x6000266")]
		[Address(RVA = "0x2B26140", Offset = "0x2B26140", VA = "0x2B26140")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x1700006F")]
	public Vector3 WristPosition
	{
		[Token(Token = "0x6000267")]
		[Address(RVA = "0x2B2614C", Offset = "0x2B2614C", VA = "0x2B2614C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000070")]
	public Quaternion WristRotation
	{
		[Token(Token = "0x6000268")]
		[Address(RVA = "0x2B26158", Offset = "0x2B26158", VA = "0x2B26158")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000071")]
	public GvrControllerInputDevice ControllerInputDevice
	{
		[Token(Token = "0x6000269")]
		[Address(RVA = "0x2B26164", Offset = "0x2B26164", VA = "0x2B26164")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147EB2C", Offset = "0x147EB2C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600026A")]
		[Address(RVA = "0x2B2616C", Offset = "0x2B2616C", VA = "0x2B2616C", Slot = "8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147EB3C", Offset = "0x147EB3C")]
		set
		{
		}
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x2B26174", Offset = "0x2B26174", VA = "0x2B26174", Slot = "9")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0x2B26320", Offset = "0x2B26320", VA = "0x2B26320", Slot = "10")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x2B264A4", Offset = "0x2B264A4", VA = "0x2B264A4", Slot = "11")]
	protected virtual void OnControllerInputUpdated()
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x2B2651C", Offset = "0x2B2651C", VA = "0x2B2651C", Slot = "12")]
	protected virtual void UpdateHandedness()
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x2B265E4", Offset = "0x2B265E4", VA = "0x2B265E4", Slot = "13")]
	protected virtual void UpdateTorsoDirection(bool forceImmediate)
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x2B26860", Offset = "0x2B26860", VA = "0x2B26860", Slot = "14")]
	protected virtual void UpdateNeckPosition()
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x2B26900", Offset = "0x2B26900", VA = "0x2B26900", Slot = "15")]
	protected virtual void ApplyArmModel()
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0x2B26BEC", Offset = "0x2B26BEC", VA = "0x2B26BEC", Slot = "16")]
	protected virtual void SetUntransformedJointPositions()
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x2B26CF4", Offset = "0x2B26CF4", VA = "0x2B26CF4", Slot = "17")]
	protected virtual float CalculateExtensionRatio(float xAngle)
	{
		return default(float);
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0x2B26D7C", Offset = "0x2B26D7C", VA = "0x2B26D7C", Slot = "18")]
	protected virtual void ApplyExtensionOffset(float extensionRatio)
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0x2B26E6C", Offset = "0x2B26E6C", VA = "0x2B26E6C", Slot = "19")]
	protected virtual Quaternion CalculateLerpRotation(Quaternion xyRotation, float extensionRatio)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0x2B26FB4", Offset = "0x2B26FB4", VA = "0x2B26FB4", Slot = "20")]
	protected virtual void CalculateFinalJointRotations(Quaternion controllerOrientation, Quaternion xyRotation, Quaternion lerpRotation)
	{
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0x2B27104", Offset = "0x2B27104", VA = "0x2B27104", Slot = "21")]
	protected virtual void ApplyRotationToJoints()
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0x2B272B8", Offset = "0x2B272B8", VA = "0x2B272B8", Slot = "22")]
	protected virtual Vector3 ApplyInverseNeckModel(Vector3 headPosition)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0x2B27444", Offset = "0x2B27444", VA = "0x2B27444", Slot = "23")]
	protected virtual void UpdateTransparency()
	{
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0x2B26A24", Offset = "0x2B26A24", VA = "0x2B26A24")]
	protected void GetControllerRotation(out Quaternion rotation, out Quaternion xyRotation, out float xAngle)
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0x2B278B0", Offset = "0x2B278B0", VA = "0x2B278B0")]
	public GvrArmModel()
	{
	}
}
[Token(Token = "0x2000028")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x146588C", Offset = "0x146588C")]
public abstract class GvrBaseArmModel : MonoBehaviour
{
	[Token(Token = "0x17000072")]
	public abstract Vector3 ControllerPositionFromHead
	{
		[Token(Token = "0x600027D")]
		get;
	}

	[Token(Token = "0x17000073")]
	public abstract Quaternion ControllerRotationFromHead
	{
		[Token(Token = "0x600027E")]
		get;
	}

	[Token(Token = "0x17000074")]
	public abstract float PreferredAlpha
	{
		[Token(Token = "0x600027F")]
		get;
	}

	[Token(Token = "0x17000075")]
	public abstract float TooltipAlphaValue
	{
		[Token(Token = "0x6000280")]
		get;
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x2B27990", Offset = "0x2B27990", VA = "0x2B27990")]
	protected GvrBaseArmModel()
	{
	}
}
[Token(Token = "0x2000029")]
public interface IGvrArmModelReceiver
{
	[Token(Token = "0x17000076")]
	GvrBaseArmModel ArmModel
	{
		[Token(Token = "0x6000282")]
		get;
		[Token(Token = "0x6000283")]
		set;
	}
}
[Token(Token = "0x200002A")]
public enum GvrConnectionState
{
	[Token(Token = "0x4000136")]
	Error = -1,
	[Token(Token = "0x4000137")]
	Disconnected,
	[Token(Token = "0x4000138")]
	Scanning,
	[Token(Token = "0x4000139")]
	Connecting,
	[Token(Token = "0x400013A")]
	Connected
}
[Token(Token = "0x200002B")]
public enum GvrControllerApiStatus
{
	[Token(Token = "0x400013C")]
	Error = -1,
	[Token(Token = "0x400013D")]
	Ok,
	[Token(Token = "0x400013E")]
	Unsupported,
	[Token(Token = "0x400013F")]
	NotAuthorized,
	[Token(Token = "0x4000140")]
	Unavailable,
	[Token(Token = "0x4000141")]
	ApiServiceObsolete,
	[Token(Token = "0x4000142")]
	ApiClientObsolete,
	[Token(Token = "0x4000143")]
	ApiMalfunction
}
[Token(Token = "0x200002C")]
public enum GvrControllerBatteryLevel
{
	[Token(Token = "0x4000145")]
	Error = -1,
	[Token(Token = "0x4000146")]
	Unknown,
	[Token(Token = "0x4000147")]
	CriticalLow,
	[Token(Token = "0x4000148")]
	Low,
	[Token(Token = "0x4000149")]
	Medium,
	[Token(Token = "0x400014A")]
	AlmostFull,
	[Token(Token = "0x400014B")]
	Full
}
[Token(Token = "0x200002D")]
public enum GvrControllerButton
{
	[Token(Token = "0x400014D")]
	TouchPadButton = 2,
	[Token(Token = "0x400014E")]
	TouchPadTouch = int.MinValue,
	[Token(Token = "0x400014F")]
	App = 8,
	[Token(Token = "0x4000150")]
	System = 4,
	[Token(Token = "0x4000151")]
	Trigger = 64,
	[Token(Token = "0x4000152")]
	Grip = 128,
	[Token(Token = "0x4000153")]
	Reserved2 = 256
}
[Token(Token = "0x200002E")]
public enum GvrControllerHand
{
	[Token(Token = "0x4000155")]
	Right,
	[Token(Token = "0x4000156")]
	Left,
	[Token(Token = "0x4000157")]
	Dominant,
	[Token(Token = "0x4000158")]
	NonDominant
}
[Token(Token = "0x200002F")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x14658C4", Offset = "0x14658C4")]
public class GvrControllerInput : MonoBehaviour
{
	[Token(Token = "0x20004A6")]
	public delegate void OnStateChangedEvent(GvrConnectionState state, GvrConnectionState oldState);

	[Token(Token = "0x20004A7")]
	public enum EmulatorConnectionMode
	{
		[Token(Token = "0x4001E18")]
		OFF,
		[Token(Token = "0x4001E19")]
		USB,
		[Token(Token = "0x4001E1A")]
		WIFI
	}

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EmulatorConnectionMode emulatorConnectionMode;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GvrControllerInputDevice[] instances;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static IControllerProvider controllerProvider;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static GvrSettings.UserPrefsHandedness handedness;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Action onDevicesChangedInternal;

	[Token(Token = "0x17000077")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1489C94", Offset = "0x1489C94")]
	public static GvrConnectionState State
	{
		[Token(Token = "0x600028C")]
		[Address(RVA = "0x2B29830", Offset = "0x2B29830", VA = "0x2B29830")]
		get
		{
			return default(GvrConnectionState);
		}
	}

	[Token(Token = "0x17000078")]
	public static GvrControllerApiStatus ApiStatus
	{
		[Token(Token = "0x600028D")]
		[Address(RVA = "0x2B29928", Offset = "0x2B29928", VA = "0x2B29928")]
		get
		{
			return default(GvrControllerApiStatus);
		}
	}

	[Token(Token = "0x17000079")]
	public static bool SupportsBatteryStatus
	{
		[Token(Token = "0x600028E")]
		[Address(RVA = "0x2B29A20", Offset = "0x2B29A20", VA = "0x2B29A20")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700007A")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1489CCC", Offset = "0x1489CCC")]
	public static Quaternion Orientation
	{
		[Token(Token = "0x600028F")]
		[Address(RVA = "0x2B29B28", Offset = "0x2B29B28", VA = "0x2B29B28")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x1700007B")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1489D04", Offset = "0x1489D04")]
	public static Vector3 Gyro
	{
		[Token(Token = "0x6000290")]
		[Address(RVA = "0x2B29C10", Offset = "0x2B29C10", VA = "0x2B29C10")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700007C")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1489D3C", Offset = "0x1489D3C")]
	public static Vector3 Accel
	{
		[Token(Token = "0x6000291")]
		[Address(RVA = "0x2B29CF8", Offset = "0x2B29CF8", VA = "0x2B29CF8")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700007D")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1489D74", Offset = "0x1489D74")]
	public static bool IsTouching
	{
		[Token(Token = "0x6000292")]
		[Address(RVA = "0x2B29E14", Offset = "0x2B29E14", VA = "0x2B29E14")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700007E")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1489DAC", Offset = "0x1489DAC")]
	public static bool TouchDown
	{
		[Token(Token = "0x6000293")]
		[Address(RVA = "0x2B29EE0", Offset = "0x2B29EE0", VA = "0x2B29EE0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700007F")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1489DE4", Offset = "0x1489DE4")]
	public static bool TouchUp
	{
		[Token(Token = "0x6000294")]
		[Address(RVA = "0x2B29FAC", Offset = "0x2B29FAC", VA = "0x2B29FAC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000080")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1489E1C", Offset = "0x1489E1C")]
	public static Vector2 TouchPos
	{
		[Token(Token = "0x6000295")]
		[Address(RVA = "0x2B2A078", Offset = "0x2B2A078", VA = "0x2B2A078")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x17000081")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1489E54", Offset = "0x1489E54")]
	public static Vector2 TouchPosCentered
	{
		[Token(Token = "0x6000296")]
		[Address(RVA = "0x2B2A174", Offset = "0x2B2A174", VA = "0x2B2A174")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x17000082")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1489E8C", Offset = "0x1489E8C")]
	public static bool Recentering
	{
		[Token(Token = "0x6000297")]
		[Address(RVA = "0x2B2A264", Offset = "0x2B2A264", VA = "0x2B2A264")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000083")]
	public static bool Recentered
	{
		[Token(Token = "0x6000298")]
		[Address(RVA = "0x2B2A26C", Offset = "0x2B2A26C", VA = "0x2B2A26C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000084")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1489EC4", Offset = "0x1489EC4")]
	public static bool ClickButton
	{
		[Token(Token = "0x6000299")]
		[Address(RVA = "0x2B2A334", Offset = "0x2B2A334", VA = "0x2B2A334")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000085")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1489EFC", Offset = "0x1489EFC")]
	public static bool ClickButtonDown
	{
		[Token(Token = "0x600029A")]
		[Address(RVA = "0x2B2A400", Offset = "0x2B2A400", VA = "0x2B2A400")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000086")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1489F34", Offset = "0x1489F34")]
	public static bool ClickButtonUp
	{
		[Token(Token = "0x600029B")]
		[Address(RVA = "0x2B2A4CC", Offset = "0x2B2A4CC", VA = "0x2B2A4CC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000087")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1489F6C", Offset = "0x1489F6C")]
	public static bool AppButton
	{
		[Token(Token = "0x600029C")]
		[Address(RVA = "0x2B2A598", Offset = "0x2B2A598", VA = "0x2B2A598")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000088")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1489FA4", Offset = "0x1489FA4")]
	public static bool AppButtonDown
	{
		[Token(Token = "0x600029D")]
		[Address(RVA = "0x2B2A664", Offset = "0x2B2A664", VA = "0x2B2A664")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000089")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1489FDC", Offset = "0x1489FDC")]
	public static bool AppButtonUp
	{
		[Token(Token = "0x600029E")]
		[Address(RVA = "0x2B2A730", Offset = "0x2B2A730", VA = "0x2B2A730")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700008A")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x148A014", Offset = "0x148A014")]
	public static bool HomeButtonDown
	{
		[Token(Token = "0x600029F")]
		[Address(RVA = "0x2B2A7FC", Offset = "0x2B2A7FC", VA = "0x2B2A7FC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700008B")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x148A04C", Offset = "0x148A04C")]
	public static bool HomeButtonState
	{
		[Token(Token = "0x60002A0")]
		[Address(RVA = "0x2B2A8C8", Offset = "0x2B2A8C8", VA = "0x2B2A8C8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700008C")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x148A084", Offset = "0x148A084")]
	public static string ErrorDetails
	{
		[Token(Token = "0x60002A1")]
		[Address(RVA = "0x2B2A994", Offset = "0x2B2A994", VA = "0x2B2A994")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700008D")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x148A0BC", Offset = "0x148A0BC")]
	public static IntPtr StatePtr
	{
		[Token(Token = "0x60002A2")]
		[Address(RVA = "0x2B2AAD4", Offset = "0x2B2AAD4", VA = "0x2B2AAD4")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700008E")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x148A0F4", Offset = "0x148A0F4")]
	public static bool IsCharging
	{
		[Token(Token = "0x60002A3")]
		[Address(RVA = "0x2B2ABCC", Offset = "0x2B2ABCC", VA = "0x2B2ABCC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700008F")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x148A12C", Offset = "0x148A12C")]
	public static GvrControllerBatteryLevel BatteryLevel
	{
		[Token(Token = "0x60002A4")]
		[Address(RVA = "0x2B2ACC4", Offset = "0x2B2ACC4", VA = "0x2B2ACC4")]
		get
		{
			return default(GvrControllerBatteryLevel);
		}
	}

	[Token(Token = "0x14000012")]
	public static event Action OnControllerInputUpdated
	{
		[Token(Token = "0x6000284")]
		[Address(RVA = "0x2B26230", Offset = "0x2B26230", VA = "0x2B26230")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147EB4C", Offset = "0x147EB4C")]
		add
		{
		}
		[Token(Token = "0x6000285")]
		[Address(RVA = "0x2B263B4", Offset = "0x2B263B4", VA = "0x2B263B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147EB5C", Offset = "0x147EB5C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000013")]
	public static event Action OnPostControllerInputUpdated
	{
		[Token(Token = "0x6000286")]
		[Address(RVA = "0x2B29194", Offset = "0x2B29194", VA = "0x2B29194")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147EB6C", Offset = "0x147EB6C")]
		add
		{
		}
		[Token(Token = "0x6000287")]
		[Address(RVA = "0x2B29284", Offset = "0x2B29284", VA = "0x2B29284")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147EB7C", Offset = "0x147EB7C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000014")]
	public static event Action OnDevicesChanged
	{
		[Token(Token = "0x6000288")]
		[Address(RVA = "0x2B29374", Offset = "0x2B29374", VA = "0x2B29374")]
		[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x147EB8C", Offset = "0x147EB8C")]
		add
		{
		}
		[Token(Token = "0x6000289")]
		[Address(RVA = "0x2B2943C", Offset = "0x2B2943C", VA = "0x2B2943C")]
		[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x147EBD4", Offset = "0x147EBD4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000015")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1489C24", Offset = "0x1489C24")]
	public static event OnStateChangedEvent OnStateChanged
	{
		[Token(Token = "0x600028A")]
		[Address(RVA = "0x2B294F0", Offset = "0x2B294F0", VA = "0x2B294F0")]
		add
		{
		}
		[Token(Token = "0x600028B")]
		[Address(RVA = "0x2B29690", Offset = "0x2B29690", VA = "0x2B29690")]
		remove
		{
		}
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x2B2ADBC", Offset = "0x2B2ADBC", VA = "0x2B2ADBC")]
	public static GvrControllerInputDevice GetDevice(GvrControllerHand hand)
	{
		return null;
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x2B2AEF0", Offset = "0x2B2AEF0", VA = "0x2B2AEF0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x2B2B278", Offset = "0x2B2B278", VA = "0x2B2B278")]
	private void Update()
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x2B2B594", Offset = "0x2B2B594", VA = "0x2B2B594")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x2B2B6E0", Offset = "0x2B2B6E0", VA = "0x2B2B6E0")]
	private void OnApplicationPause(bool paused)
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0x2B2B890", Offset = "0x2B2B890", VA = "0x2B2B890")]
	public GvrControllerInput()
	{
	}
}
[Token(Token = "0x2000030")]
public class GvrControllerInputDevice
{
	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IControllerProvider controllerProvider;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int controllerId;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ControllerState controllerState;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector2 touchPosCentered;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int lastUpdatedFrameCount;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool valid;

	[Token(Token = "0x17000090")]
	public bool IsDominantHand
	{
		[Token(Token = "0x60002AF")]
		[Address(RVA = "0x2B2BC5C", Offset = "0x2B2BC5C", VA = "0x2B2BC5C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000091")]
	public bool IsRightHand
	{
		[Token(Token = "0x60002B0")]
		[Address(RVA = "0x2B265A8", Offset = "0x2B265A8", VA = "0x2B265A8")]
		[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x147EC3C", Offset = "0x147EC3C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000092")]
	public GvrConnectionState State
	{
		[Token(Token = "0x60002B1")]
		[Address(RVA = "0x2B298F8", Offset = "0x2B298F8", VA = "0x2B298F8")]
		[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x147EC70", Offset = "0x147EC70")]
		get
		{
			return default(GvrConnectionState);
		}
	}

	[Token(Token = "0x17000093")]
	public GvrControllerApiStatus ApiStatus
	{
		[Token(Token = "0x60002B2")]
		[Address(RVA = "0x2B299F0", Offset = "0x2B299F0", VA = "0x2B299F0")]
		get
		{
			return default(GvrControllerApiStatus);
		}
	}

	[Token(Token = "0x17000094")]
	public Quaternion Orientation
	{
		[Token(Token = "0x60002B3")]
		[Address(RVA = "0x2B2787C", Offset = "0x2B2787C", VA = "0x2B2787C")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000095")]
	public Vector3 Position
	{
		[Token(Token = "0x60002B4")]
		[Address(RVA = "0x2B2BC6C", Offset = "0x2B2BC6C", VA = "0x2B2BC6C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000096")]
	public Vector3 Gyro
	{
		[Token(Token = "0x60002B5")]
		[Address(RVA = "0x2B2682C", Offset = "0x2B2682C", VA = "0x2B2682C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000097")]
	public Vector3 Accel
	{
		[Token(Token = "0x60002B6")]
		[Address(RVA = "0x2B29DE0", Offset = "0x2B29DE0", VA = "0x2B29DE0")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000098")]
	public Vector2 TouchPos
	{
		[Token(Token = "0x60002B7")]
		[Address(RVA = "0x2B28044", Offset = "0x2B28044", VA = "0x2B28044")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x17000099")]
	public bool Recentered
	{
		[Token(Token = "0x60002B8")]
		[Address(RVA = "0x2B267FC", Offset = "0x2B267FC", VA = "0x2B267FC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700009A")]
	public GvrControllerButton Buttons
	{
		[Token(Token = "0x60002B9")]
		[Address(RVA = "0x2B2BCA0", Offset = "0x2B2BCA0", VA = "0x2B2BCA0")]
		get
		{
			return default(GvrControllerButton);
		}
	}

	[Token(Token = "0x1700009B")]
	public GvrControllerButton ButtonsDown
	{
		[Token(Token = "0x60002BA")]
		[Address(RVA = "0x2B28B2C", Offset = "0x2B28B2C", VA = "0x2B28B2C")]
		get
		{
			return default(GvrControllerButton);
		}
	}

	[Token(Token = "0x1700009C")]
	public GvrControllerButton ButtonsUp
	{
		[Token(Token = "0x60002BB")]
		[Address(RVA = "0x2B28B48", Offset = "0x2B28B48", VA = "0x2B28B48")]
		get
		{
			return default(GvrControllerButton);
		}
	}

	[Token(Token = "0x1700009D")]
	public string ErrorDetails
	{
		[Token(Token = "0x60002BC")]
		[Address(RVA = "0x2B2AA64", Offset = "0x2B2AA64", VA = "0x2B2AA64")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700009E")]
	public IntPtr StatePtr
	{
		[Token(Token = "0x60002BD")]
		[Address(RVA = "0x2B2AB9C", Offset = "0x2B2AB9C", VA = "0x2B2AB9C")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700009F")]
	public bool IsCharging
	{
		[Token(Token = "0x60002BE")]
		[Address(RVA = "0x2B2AC94", Offset = "0x2B2AC94", VA = "0x2B2AC94")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A0")]
	public GvrControllerBatteryLevel BatteryLevel
	{
		[Token(Token = "0x60002BF")]
		[Address(RVA = "0x2B2AD8C", Offset = "0x2B2AD8C", VA = "0x2B2AD8C")]
		get
		{
			return default(GvrControllerBatteryLevel);
		}
	}

	[Token(Token = "0x170000A1")]
	internal bool SupportsPositionalTracking
	{
		[Token(Token = "0x60002C0")]
		[Address(RVA = "0x2B28B10", Offset = "0x2B28B10", VA = "0x2B28B10")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000016")]
	public event GvrControllerInput.OnStateChangedEvent OnStateChanged
	{
		[Token(Token = "0x60002AD")]
		[Address(RVA = "0x2B295EC", Offset = "0x2B295EC", VA = "0x2B295EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147EC1C", Offset = "0x147EC1C")]
		add
		{
		}
		[Token(Token = "0x60002AE")]
		[Address(RVA = "0x2B2978C", Offset = "0x2B2978C", VA = "0x2B2978C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147EC2C", Offset = "0x147EC2C")]
		remove
		{
		}
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0x2B2B1A0", Offset = "0x2B2B1A0", VA = "0x2B2B1A0")]
	internal GvrControllerInputDevice(IControllerProvider provider, int controller_id)
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x2B27F24", Offset = "0x2B27F24", VA = "0x2B27F24")]
	public bool GetButton(GvrControllerButton buttons)
	{
		return default(bool);
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0x2B27ED4", Offset = "0x2B27ED4", VA = "0x2B27ED4")]
	public bool GetButtonDown(GvrControllerButton buttons)
	{
		return default(bool);
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x2B27F74", Offset = "0x2B27F74", VA = "0x2B27F74")]
	public bool GetButtonUp(GvrControllerButton buttons)
	{
		return default(bool);
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0x2B2B6D8", Offset = "0x2B2B6D8", VA = "0x2B2B6D8")]
	internal void Invalidate()
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0x2B2B3F4", Offset = "0x2B2B3F4", VA = "0x2B2B3F4")]
	internal void Update()
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0x2B2BCBC", Offset = "0x2B2BCBC", VA = "0x2B2BCBC")]
	private void UpdateTouchPosCentered()
	{
	}
}
[Token(Token = "0x2000031")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x14658FC", Offset = "0x14658FC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x14658FC", Offset = "0x14658FC")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x14658FC", Offset = "0x14658FC")]
public class GvrControllerReticleVisual : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20004A8")]
	public struct FaceCameraData
	{
		[Token(Token = "0x4001E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool alongXAxis;

		[Token(Token = "0x4001E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public bool alongYAxis;

		[Token(Token = "0x4001E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public bool alongZAxis;

		[Token(Token = "0x1700044B")]
		public bool IsAnyAxisOff
		{
			[Token(Token = "0x60022ED")]
			[Address(RVA = "0x2B2C428", Offset = "0x2B2C428", VA = "0x2B2C428")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60022EC")]
		[Address(RVA = "0x2B2C4C0", Offset = "0x2B2C4C0", VA = "0x2B2C4C0")]
		public FaceCameraData(bool startEnabled)
		{
		}
	}

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146BAAC", Offset = "0x146BAAC")]
	public bool isSizeBasedOnCameraDistance;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146BAE4", Offset = "0x146BAE4")]
	public float sizeMeters;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146BB1C", Offset = "0x146BB1C")]
	public FaceCameraData doesReticleFaceCamera;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146BB54", Offset = "0x146BB54")]
	public int sortingOrder;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected MeshRenderer meshRenderer;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected MeshFilter meshFilter;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 preRenderLocalScale;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Quaternion preRenderLocalRotation;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146BB74", Offset = "0x146BB74")]
	private float <ReticleMeshSizeMeters>k__BackingField;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146BB84", Offset = "0x146BB84")]
	private float <ReticleMeshSizeRatio>k__BackingField;

	[Token(Token = "0x170000A2")]
	public float ReticleMeshSizeMeters
	{
		[Token(Token = "0x60002C7")]
		[Address(RVA = "0x2B2BD34", Offset = "0x2B2BD34", VA = "0x2B2BD34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147ECA4", Offset = "0x147ECA4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002C8")]
		[Address(RVA = "0x2B2BD3C", Offset = "0x2B2BD3C", VA = "0x2B2BD3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147ECB4", Offset = "0x147ECB4")]
		private set
		{
		}
	}

	[Token(Token = "0x170000A3")]
	public float ReticleMeshSizeRatio
	{
		[Token(Token = "0x60002C9")]
		[Address(RVA = "0x2B2BD44", Offset = "0x2B2BD44", VA = "0x2B2BD44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147ECC4", Offset = "0x147ECC4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002CA")]
		[Address(RVA = "0x2B2BD4C", Offset = "0x2B2BD4C", VA = "0x2B2BD4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147ECD4", Offset = "0x147ECD4")]
		private set
		{
		}
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0x2B2BD54", Offset = "0x2B2BD54", VA = "0x2B2BD54")]
	[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x147ECE4", Offset = "0x147ECE4")]
	public void RefreshMesh()
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0x2B2BECC", Offset = "0x2B2BECC", VA = "0x2B2BECC", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0x2B2BF50", Offset = "0x2B2BF50", VA = "0x2B2BF50", Slot = "5")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0x2B2BF54", Offset = "0x2B2BF54", VA = "0x2B2BF54", Slot = "6")]
	protected virtual void OnWillRenderObject()
	{
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0x2B2BFE0", Offset = "0x2B2BFE0", VA = "0x2B2BFE0", Slot = "7")]
	protected virtual void OnRenderObject()
	{
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0x2B2C038", Offset = "0x2B2C038", VA = "0x2B2C038", Slot = "8")]
	protected virtual void UpdateReticleSize(Camera camera)
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0x2B2C1EC", Offset = "0x2B2C1EC", VA = "0x2B2C1EC", Slot = "9")]
	protected virtual void UpdateReticleOrientation(Camera camera)
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x2B2C450", Offset = "0x2B2C450", VA = "0x2B2C450", Slot = "10")]
	protected virtual void OnValidate()
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0x2B2C498", Offset = "0x2B2C498", VA = "0x2B2C498")]
	public GvrControllerReticleVisual()
	{
	}
}
[Token(Token = "0x2000032")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x14659AC", Offset = "0x14659AC")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x14659AC", Offset = "0x14659AC")]
public class GvrControllerVisual : MonoBehaviour, IGvrArmModelReceiver, IGvrControllerInputDeviceReceiver
{
	[Serializable]
	[Token(Token = "0x20004A9")]
	public struct ControllerDisplayState
	{
		[Token(Token = "0x4001E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GvrControllerBatteryLevel batteryLevel;

		[Token(Token = "0x4001E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool batteryCharging;

		[Token(Token = "0x4001E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public bool clickButton;

		[Token(Token = "0x4001E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public bool appButton;

		[Token(Token = "0x4001E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
		public bool homeButton;

		[Token(Token = "0x4001E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool touching;

		[Token(Token = "0x4001E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector2 touchPos;
	}

	[Serializable]
	[Token(Token = "0x20004AA")]
	public struct VisualAssets
	{
		[Token(Token = "0x4001E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Mesh mesh;

		[Token(Token = "0x4001E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Material material;
	}

	[Token(Token = "0x4000171")]
	public const float APP_BUTTON_ACTIVE_DURATION_SECONDS = 0.111f;

	[Token(Token = "0x4000172")]
	public const float APP_BUTTON_RELEASE_DURATION_SECONDS = 0.0909f;

	[Token(Token = "0x4000173")]
	public const float SYSTEM_BUTTON_ACTIVE_DURATION_SECONDS = 0.111f;

	[Token(Token = "0x4000174")]
	public const float SYSTEM_BUTTON_RELEASE_DURATION_SECONDS = 0.0909f;

	[Token(Token = "0x4000175")]
	public const float TOUCHPAD_CLICK_DURATION_SECONDS = 0.111f;

	[Token(Token = "0x4000176")]
	public const float TOUCHPAD_RELEASE_DURATION_SECONDS = 0.0909f;

	[Token(Token = "0x4000177")]
	public const float TOUCHPAD_CLICK_SCALE_DURATION_SECONDS = 0.075f;

	[Token(Token = "0x4000178")]
	public const float TOUCHPAD_POINT_SCALE_DURATION_SECONDS = 0.15f;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146BB94", Offset = "0x146BB94")]
	public bool readControllerState;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public ControllerDisplayState displayState;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146BBCC", Offset = "0x146BBCC")]
	public float maximumAlpha;

	[Token(Token = "0x400017C")]
	private const float BATTERY_FULL = 0f;

	[Token(Token = "0x400017D")]
	private const float BATTERY_ALMOST_FULL = 0.125f;

	[Token(Token = "0x400017E")]
	private const float BATTERY_MEDIUM = 0.225f;

	[Token(Token = "0x400017F")]
	private const float BATTERY_LOW = 0.325f;

	[Token(Token = "0x4000180")]
	private const float BATTERY_CRITICAL = 0.425f;

	[Token(Token = "0x4000181")]
	private const float BATTERY_HIDDEN = 0.525f;

	[Token(Token = "0x4000182")]
	private const float IMMEDIATE_UPDATE_TIME = 10f;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private readonly UnityEngine.Color GVR_BATTERY_CRITICAL_COLOR;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private readonly UnityEngine.Color GVR_BATTERY_LOW_COLOR;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private readonly UnityEngine.Color GVR_BATTERY_MED_COLOR;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private readonly UnityEngine.Color GVR_BATTERY_FULL_COLOR;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject[] attachmentPrefabs;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Renderer controllerRenderer;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private MeshFilter meshFilter;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private MaterialPropertyBlock materialPropertyBlock;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int alphaId;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private int touchId;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int touchPadId;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private int appButtonId;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int systemButtonId;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int batteryColorId;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool wasTouching;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float touchTime;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector4 controllerShaderData;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector4 controllerShaderData2;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private UnityEngine.Color currentBatteryColor;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private UnityEngine.Color touchPadColor;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private UnityEngine.Color appButtonColor;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private UnityEngine.Color systemButtonColor;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146BC24", Offset = "0x146BC24")]
	private GvrBaseArmModel <ArmModel>k__BackingField;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146BC34", Offset = "0x146BC34")]
	private GvrControllerInputDevice <ControllerInputDevice>k__BackingField;

	[Token(Token = "0x170000A4")]
	public GvrBaseArmModel ArmModel
	{
		[Token(Token = "0x60002D4")]
		[Address(RVA = "0x2B2C84C", Offset = "0x2B2C84C", VA = "0x2B2C84C", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147ED30", Offset = "0x147ED30")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002D5")]
		[Address(RVA = "0x2B2C854", Offset = "0x2B2C854", VA = "0x2B2C854", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147ED40", Offset = "0x147ED40")]
		set
		{
		}
	}

	[Token(Token = "0x170000A5")]
	public GvrControllerInputDevice ControllerInputDevice
	{
		[Token(Token = "0x60002D6")]
		[Address(RVA = "0x2B2C864", Offset = "0x2B2C864", VA = "0x2B2C864")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147ED50", Offset = "0x147ED50")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002D7")]
		[Address(RVA = "0x2B2C86C", Offset = "0x2B2C86C", VA = "0x2B2C86C", Slot = "6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147ED60", Offset = "0x147ED60")]
		set
		{
		}
	}

	[Token(Token = "0x170000A6")]
	public virtual float PreferredAlpha
	{
		[Token(Token = "0x60002D8")]
		[Address(RVA = "0x2B2C87C", Offset = "0x2B2C87C", VA = "0x2B2C87C", Slot = "7")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000A7")]
	public UnityEngine.Color TouchPadColor
	{
		[Token(Token = "0x60002D9")]
		[Address(RVA = "0x2B2C920", Offset = "0x2B2C920", VA = "0x2B2C920")]
		get
		{
			return default(UnityEngine.Color);
		}
		[Token(Token = "0x60002DA")]
		[Address(RVA = "0x2B2C92C", Offset = "0x2B2C92C", VA = "0x2B2C92C")]
		set
		{
		}
	}

	[Token(Token = "0x170000A8")]
	public UnityEngine.Color AppButtonColor
	{
		[Token(Token = "0x60002DB")]
		[Address(RVA = "0x2B2C950", Offset = "0x2B2C950", VA = "0x2B2C950")]
		get
		{
			return default(UnityEngine.Color);
		}
		[Token(Token = "0x60002DC")]
		[Address(RVA = "0x2B2C960", Offset = "0x2B2C960", VA = "0x2B2C960")]
		set
		{
		}
	}

	[Token(Token = "0x170000A9")]
	public UnityEngine.Color SystemButtonColor
	{
		[Token(Token = "0x60002DD")]
		[Address(RVA = "0x2B2C988", Offset = "0x2B2C988", VA = "0x2B2C988")]
		get
		{
			return default(UnityEngine.Color);
		}
		[Token(Token = "0x60002DE")]
		[Address(RVA = "0x2B2C99C", Offset = "0x2B2C99C", VA = "0x2B2C99C")]
		set
		{
		}
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x2B2C9C8", Offset = "0x2B2C9C8", VA = "0x2B2C9C8")]
	[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x147ED70", Offset = "0x147ED70")]
	public void SetControllerTexture(Texture newTexture)
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x2B2CA04", Offset = "0x2B2CA04", VA = "0x2B2CA04", Slot = "8")]
	protected virtual VisualAssets GetVisualAssets()
	{
		return default(VisualAssets);
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x2B2CA78", Offset = "0x2B2CA78", VA = "0x2B2CA78")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x2B2CDE0", Offset = "0x2B2CDE0", VA = "0x2B2CDE0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x2B2CE70", Offset = "0x2B2CE70", VA = "0x2B2CE70")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x2B2CF00", Offset = "0x2B2CF00", VA = "0x2B2CF00")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x2B2D33C", Offset = "0x2B2D33C", VA = "0x2B2D33C")]
	private void OnPostControllerInputUpdated()
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0x2B2CCE4", Offset = "0x2B2CCE4", VA = "0x2B2CCE4")]
	private void CreateAttachments()
	{
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0x2B2CA9C", Offset = "0x2B2CA9C", VA = "0x2B2CA9C")]
	private void Initialize()
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x2B2D344", Offset = "0x2B2D344", VA = "0x2B2D344")]
	private void UpdateControllerState()
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x2B2CF44", Offset = "0x2B2CF44", VA = "0x2B2CF44")]
	private void OnVisualUpdate(bool updateImmediately = false)
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0x2B2D414", Offset = "0x2B2D414", VA = "0x2B2D414")]
	private void UpdateBatteryIndicator()
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x2B2D4F4", Offset = "0x2B2D4F4", VA = "0x2B2D4F4")]
	public GvrControllerVisual()
	{
	}
}
[Token(Token = "0x2000033")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x1465A34", Offset = "0x1465A34")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x1465A34", Offset = "0x1465A34")]
public class GvrLaserPointer : GvrBasePointer
{
	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146BC44", Offset = "0x146BC44")]
	public float maxPointerDistance;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146BC7C", Offset = "0x146BC7C")]
	public float defaultReticleDistance;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146BCB4", Offset = "0x146BCB4")]
	public float overrideCameraRayIntersectionDistance;

	[Token(Token = "0x400019E")]
	private const float RETICLE_VISUAL_RATIO = 0.1f;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool isHittingTarget;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146BCEC", Offset = "0x146BCEC")]
	private GvrLaserVisual <LaserVisual>k__BackingField;

	[Token(Token = "0x170000AA")]
	public GvrLaserVisual LaserVisual
	{
		[Token(Token = "0x60002EC")]
		[Address(RVA = "0x2B33E1C", Offset = "0x2B33E1C", VA = "0x2B33E1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147EDBC", Offset = "0x147EDBC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002ED")]
		[Address(RVA = "0x2B33E24", Offset = "0x2B33E24", VA = "0x2B33E24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147EDCC", Offset = "0x147EDCC")]
		private set
		{
		}
	}

	[Token(Token = "0x170000AB")]
	public override float MaxPointerDistance
	{
		[Token(Token = "0x60002EE")]
		[Address(RVA = "0x2B33E2C", Offset = "0x2B33E2C", VA = "0x2B33E2C", Slot = "16")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000AC")]
	public override float CameraRayIntersectionDistance
	{
		[Token(Token = "0x60002EF")]
		[Address(RVA = "0x2B33E34", Offset = "0x2B33E34", VA = "0x2B33E34", Slot = "15")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x2B33ED8", Offset = "0x2B33ED8", VA = "0x2B33ED8", Slot = "17")]
	public override void OnPointerEnter(RaycastResult raycastResult, bool isInteractive)
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x2B33F1C", Offset = "0x2B33F1C", VA = "0x2B33F1C", Slot = "18")]
	public override void OnPointerHover(RaycastResult raycastResult, bool isInteractive)
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x2B33F60", Offset = "0x2B33F60", VA = "0x2B33F60", Slot = "19")]
	public override void OnPointerExit(GameObject previousObject)
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x2B33F68", Offset = "0x2B33F68", VA = "0x2B33F68", Slot = "20")]
	public override void OnPointerClickDown()
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x2B33F6C", Offset = "0x2B33F6C", VA = "0x2B33F6C", Slot = "21")]
	public override void OnPointerClickUp()
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x2B33F70", Offset = "0x2B33F70", VA = "0x2B33F70", Slot = "22")]
	public override void GetPointerRadius(out float enterRadius, out float exitRadius)
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x2B34080", Offset = "0x2B34080", VA = "0x2B34080", Slot = "23")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x2B34150", Offset = "0x2B34150", VA = "0x2B34150")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0x2B341B0", Offset = "0x2B341B0", VA = "0x2B341B0")]
	private void Update()
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x2B341E8", Offset = "0x2B341E8", VA = "0x2B341E8")]
	public GvrLaserPointer()
	{
	}
}
[Token(Token = "0x2000034")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x1465ABC", Offset = "0x1465ABC")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x1465ABC", Offset = "0x1465ABC")]
public class GvrLaserVisual : MonoBehaviour, IGvrArmModelReceiver
{
	[Token(Token = "0x20004AB")]
	public delegate Vector3 GetPointForDistanceDelegate(float distance);

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146BCFC", Offset = "0x146BCFC")]
	public GvrControllerReticleVisual reticle;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146BD34", Offset = "0x146BD34")]
	public Transform controller;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146BD6C", Offset = "0x146BD6C")]
	public UnityEngine.Color laserColor;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146BDA4", Offset = "0x146BDA4")]
	public UnityEngine.Color laserColorEnd;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146BDDC", Offset = "0x146BDDC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146BDDC", Offset = "0x146BDDC")]
	public float maxLaserDistance;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146BE30", Offset = "0x146BE30")]
	public float lerpSpeed;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146BE68", Offset = "0x146BE68")]
	public float lerpThreshold;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146BEA0", Offset = "0x146BEA0")]
	public bool shrinkLaser;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146BED8", Offset = "0x146BED8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146BED8", Offset = "0x146BED8")]
	public float shrunkScale;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146BF2C", Offset = "0x146BF2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146BF2C", Offset = "0x146BF2C")]
	public float beginShrinkAngleDegrees;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146BF80", Offset = "0x146BF80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146BF80", Offset = "0x146BF80")]
	public float endShrinkAngleDegrees;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	protected float shrinkRatio;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected float targetDistance;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	protected float currentDistance;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Vector3 currentPosition;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	protected Vector3 currentLocalPosition;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected Quaternion currentLocalRotation;

	[Token(Token = "0x40001B2")]
	private const float LERP_CLAMP_THRESHOLD = 0.02f;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146BFD4", Offset = "0x146BFD4")]
	private GvrBaseArmModel <ArmModel>k__BackingField;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146BFE4", Offset = "0x146BFE4")]
	private LineRenderer <Laser>k__BackingField;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146BFF4", Offset = "0x146BFF4")]
	private GetPointForDistanceDelegate <GetPointForDistanceFunction>k__BackingField;

	[Token(Token = "0x170000AD")]
	public GvrBaseArmModel ArmModel
	{
		[Token(Token = "0x60002FA")]
		[Address(RVA = "0x2B34200", Offset = "0x2B34200", VA = "0x2B34200", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147EDDC", Offset = "0x147EDDC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002FB")]
		[Address(RVA = "0x2B34208", Offset = "0x2B34208", VA = "0x2B34208", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147EDEC", Offset = "0x147EDEC")]
		set
		{
		}
	}

	[Token(Token = "0x170000AE")]
	public LineRenderer Laser
	{
		[Token(Token = "0x60002FC")]
		[Address(RVA = "0x2B34210", Offset = "0x2B34210", VA = "0x2B34210")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147EDFC", Offset = "0x147EDFC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002FD")]
		[Address(RVA = "0x2B34218", Offset = "0x2B34218", VA = "0x2B34218")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147EE0C", Offset = "0x147EE0C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000AF")]
	public GetPointForDistanceDelegate GetPointForDistanceFunction
	{
		[Token(Token = "0x60002FE")]
		[Address(RVA = "0x2B34220", Offset = "0x2B34220", VA = "0x2B34220")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147EE1C", Offset = "0x147EE1C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002FF")]
		[Address(RVA = "0x2B34228", Offset = "0x2B34228", VA = "0x2B34228")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147EE2C", Offset = "0x147EE2C")]
		set
		{
		}
	}

	[Token(Token = "0x170000B0")]
	public float CurrentDistance
	{
		[Token(Token = "0x6000300")]
		[Address(RVA = "0x2B34230", Offset = "0x2B34230", VA = "0x2B34230")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x2B34238", Offset = "0x2B34238", VA = "0x2B34238", Slot = "6")]
	public virtual void SetDistance(float distance, bool immediate = false)
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0x2B34258", Offset = "0x2B34258", VA = "0x2B34258", Slot = "7")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0x2B342B8", Offset = "0x2B342B8", VA = "0x2B342B8", Slot = "8")]
	protected virtual void LateUpdate()
	{
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0x2B34320", Offset = "0x2B34320", VA = "0x2B34320", Slot = "9")]
	protected virtual void UpdateCurrentPosition()
	{
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0x2B347DC", Offset = "0x2B347DC", VA = "0x2B347DC", Slot = "10")]
	protected virtual void UpdateControllerOrientation()
	{
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0x2B34878", Offset = "0x2B34878", VA = "0x2B34878", Slot = "11")]
	protected virtual void UpdateReticlePosition()
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x2B34920", Offset = "0x2B34920", VA = "0x2B34920", Slot = "12")]
	protected virtual void UpdateLaserEndPoint()
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x2B34F58", Offset = "0x2B34F58", VA = "0x2B34F58", Slot = "13")]
	protected virtual void UpdateLaserAlpha()
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x2B35140", Offset = "0x2B35140", VA = "0x2B35140", Slot = "14")]
	protected virtual float GetSpeed()
	{
		return default(float);
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x2B35178", Offset = "0x2B35178", VA = "0x2B35178")]
	public GvrLaserVisual()
	{
	}
}
[Token(Token = "0x2000035")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x1465B44", Offset = "0x1465B44")]
public class GvrRecenterOnlyController : MonoBehaviour
{
	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Quaternion lastAppliedYawCorrection;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Quaternion yawCorrection;

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x2B3D04C", Offset = "0x2B3D04C", VA = "0x2B3D04C")]
	private void Update()
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0x2B3D3D8", Offset = "0x2B3D3D8", VA = "0x2B3D3D8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0x2B3D1E8", Offset = "0x2B3D1E8", VA = "0x2B3D1E8")]
	private void ApplyYawCorrection()
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x2B3D44C", Offset = "0x2B3D44C", VA = "0x2B3D44C")]
	private void RemoveLastYawCorrection()
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0x2B3D2F4", Offset = "0x2B3D2F4", VA = "0x2B3D2F4")]
	private Quaternion GetYawCorrection()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x2B3D570", Offset = "0x2B3D570", VA = "0x2B3D570")]
	public GvrRecenterOnlyController()
	{
	}
}
[Token(Token = "0x2000036")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x1465B7C", Offset = "0x1465B7C")]
public class GvrTrackedController : MonoBehaviour
{
	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146C004", Offset = "0x146C004")]
	private GvrBaseArmModel armModel;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GvrControllerInputDevice controllerInputDevice;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146C050", Offset = "0x146C050")]
	private bool isDeactivatedWhenDisconnected;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146C09C", Offset = "0x146C09C")]
	private GvrControllerHand controllerHand;

	[Token(Token = "0x170000B1")]
	public GvrControllerInputDevice ControllerInputDevice
	{
		[Token(Token = "0x6000311")]
		[Address(RVA = "0x29A9AA0", Offset = "0x29A9AA0", VA = "0x29A9AA0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B2")]
	public GvrControllerHand ControllerHand
	{
		[Token(Token = "0x6000312")]
		[Address(RVA = "0x29A9AA8", Offset = "0x29A9AA8", VA = "0x29A9AA8")]
		get
		{
			return default(GvrControllerHand);
		}
		[Token(Token = "0x6000313")]
		[Address(RVA = "0x29A9AB0", Offset = "0x29A9AB0", VA = "0x29A9AB0")]
		set
		{
		}
	}

	[Token(Token = "0x170000B3")]
	public GvrBaseArmModel ArmModel
	{
		[Token(Token = "0x6000314")]
		[Address(RVA = "0x29A9C5C", Offset = "0x29A9C5C", VA = "0x29A9C5C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000315")]
		[Address(RVA = "0x29A9C64", Offset = "0x29A9C64", VA = "0x29A9C64")]
		set
		{
		}
	}

	[Token(Token = "0x170000B4")]
	public bool IsDeactivatedWhenDisconnected
	{
		[Token(Token = "0x6000316")]
		[Address(RVA = "0x29A9FA0", Offset = "0x29A9FA0", VA = "0x29A9FA0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000317")]
		[Address(RVA = "0x29A9FA8", Offset = "0x29A9FA8", VA = "0x29A9FA8")]
		set
		{
		}
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0x29A9E78", Offset = "0x29A9E78", VA = "0x29A9E78")]
	[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x147EE3C", Offset = "0x147EE3C")]
	public void PropagateArmModel()
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0x29AA084", Offset = "0x29AA084", VA = "0x29AA084")]
	private void Awake()
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0x29AA118", Offset = "0x29AA118", VA = "0x29AA118")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0x29AA3C0", Offset = "0x29AA3C0", VA = "0x29AA3C0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0x29AA454", Offset = "0x29AA454", VA = "0x29AA454")]
	private void Start()
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0x29AA5EC", Offset = "0x29AA5EC", VA = "0x29AA5EC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0x29AA4C4", Offset = "0x29AA4C4", VA = "0x29AA4C4")]
	private void PropagateControllerInputDevice()
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0x29A9D18", Offset = "0x29A9D18", VA = "0x29A9D18")]
	private void PropagateControllerInputDeviceToArmModel()
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0x29A9AC8", Offset = "0x29A9AC8", VA = "0x29A9AC8")]
	private void SetupControllerInputDevice()
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0x29AA6F8", Offset = "0x29AA6F8", VA = "0x29AA6F8")]
	private void OnPostControllerInputUpdated()
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0x29AA024", Offset = "0x29AA024", VA = "0x29AA024")]
	private void OnControllerStateChanged(GvrConnectionState state, GvrConnectionState oldState)
	{
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0x29AA248", Offset = "0x29AA248", VA = "0x29AA248")]
	private void UpdatePose()
	{
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0x29AA6FC", Offset = "0x29AA6FC", VA = "0x29AA6FC")]
	public GvrTrackedController()
	{
	}
}
[Token(Token = "0x2000037")]
public interface IGvrControllerInputDeviceReceiver
{
	[Token(Token = "0x170000B5")]
	GvrControllerInputDevice ControllerInputDevice
	{
		[Token(Token = "0x6000325")]
		set;
	}
}
[Token(Token = "0x2000038")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x1465BB4", Offset = "0x1465BB4")]
public class GvrControllerTooltipsSimple : MonoBehaviour, IGvrArmModelReceiver
{
	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MeshRenderer tooltipRenderer;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MaterialPropertyBlock materialPropertyBlock;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int colorId;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146C0E8", Offset = "0x146C0E8")]
	private GvrBaseArmModel <ArmModel>k__BackingField;

	[Token(Token = "0x170000B6")]
	public GvrBaseArmModel ArmModel
	{
		[Token(Token = "0x6000326")]
		[Address(RVA = "0x2B2C4D4", Offset = "0x2B2C4D4", VA = "0x2B2C4D4", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147EE84", Offset = "0x147EE84")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000327")]
		[Address(RVA = "0x2B2C4DC", Offset = "0x2B2C4DC", VA = "0x2B2C4DC", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147EE94", Offset = "0x147EE94")]
		set
		{
		}
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x2B2C4E4", Offset = "0x2B2C4E4", VA = "0x2B2C4E4")]
	protected void OnVisualUpdate()
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x2B2C5E4", Offset = "0x2B2C5E4", VA = "0x2B2C5E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0x2B2C6E0", Offset = "0x2B2C6E0", VA = "0x2B2C6E0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0x2B2C770", Offset = "0x2B2C770", VA = "0x2B2C770")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x2B2C800", Offset = "0x2B2C800", VA = "0x2B2C800")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x2B2C5E8", Offset = "0x2B2C5E8", VA = "0x2B2C5E8")]
	private void Initialize()
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x2B2C840", Offset = "0x2B2C840", VA = "0x2B2C840")]
	private void OnPostControllerInputUpdated()
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0x2B2C844", Offset = "0x2B2C844", VA = "0x2B2C844")]
	public GvrControllerTooltipsSimple()
	{
	}
}
[Token(Token = "0x2000039")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x1465C00", Offset = "0x1465C00")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x1465C00", Offset = "0x1465C00")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x1465C00", Offset = "0x1465C00")]
public class GvrTooltip : MonoBehaviour, IGvrArmModelReceiver
{
	[Token(Token = "0x20004AC")]
	internal enum Location
	{
		[Token(Token = "0x4001E28")]
		TouchPadOutside,
		[Token(Token = "0x4001E29")]
		TouchPadInside,
		[Token(Token = "0x4001E2A")]
		AppButtonOutside,
		[Token(Token = "0x4001E2B")]
		AppButtonInside,
		[Token(Token = "0x4001E2C")]
		Custom
	}

	[Token(Token = "0x40001C0")]
	protected const float TOUCH_PAD_Y_POSITION_METERS = 0.0385f;

	[Token(Token = "0x40001C1")]
	protected const float APP_BUTTON_Y_POSITION_METERS = 0.0105f;

	[Token(Token = "0x40001C2")]
	protected const float TOOLTIP_Z_POSITION_METERS = 0.0098f;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static readonly Quaternion RIGHT_SIDE_ROTATION;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected static readonly Quaternion LEFT_SIDE_ROTATION;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected static readonly Vector2 SQUARE_CENTER;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected static readonly Vector2 PIVOT;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146C0F8", Offset = "0x146C0F8")]
	[SerializeField]
	private Location location;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146C144", Offset = "0x146C144")]
	[SerializeField]
	private Text text;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146C190", Offset = "0x146C190")]
	[SerializeField]
	private bool alwaysVisible;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool isOnLeft;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RectTransform rectTransform;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CanvasGroup canvasGroup;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146C1DC", Offset = "0x146C1DC")]
	private GvrBaseArmModel <ArmModel>k__BackingField;

	[Token(Token = "0x170000B7")]
	public Text TooltipText
	{
		[Token(Token = "0x6000330")]
		[Address(RVA = "0x29A9088", Offset = "0x29A9088", VA = "0x29A9088")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B8")]
	public GvrBaseArmModel ArmModel
	{
		[Token(Token = "0x6000331")]
		[Address(RVA = "0x29A9090", Offset = "0x29A9090", VA = "0x29A9090", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147EEA4", Offset = "0x147EEA4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000332")]
		[Address(RVA = "0x29A9098", Offset = "0x29A9098", VA = "0x29A9098", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147EEB4", Offset = "0x147EEB4")]
		set
		{
		}
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0x29A90A0", Offset = "0x29A90A0", VA = "0x29A90A0")]
	public bool IsTooltipInside()
	{
		return default(bool);
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x29A90CC", Offset = "0x29A90CC", VA = "0x29A90CC")]
	public bool IsTooltipOnLeft()
	{
		return default(bool);
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x29A9114", Offset = "0x29A9114", VA = "0x29A9114", Slot = "6")]
	protected virtual void OnSideChanged(bool IsLocationOnLeft)
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x29A9308", Offset = "0x29A9308", VA = "0x29A9308")]
	protected float GetMetersToCanvasScale()
	{
		return default(float);
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0x29A93FC", Offset = "0x29A93FC", VA = "0x29A93FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x29A95AC", Offset = "0x29A95AC", VA = "0x29A95AC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x29A9658", Offset = "0x29A9658", VA = "0x29A9658")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0x29A96EC", Offset = "0x29A96EC", VA = "0x29A96EC")]
	private void OnPostControllerInputUpdated()
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0x29A9868", Offset = "0x29A9868", VA = "0x29A9868")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0x29A98D0", Offset = "0x29A98D0", VA = "0x29A98D0")]
	private Vector3 GetLocalPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0x29A97F0", Offset = "0x29A97F0", VA = "0x29A97F0")]
	private void CheckTooltipSide()
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0x29A94BC", Offset = "0x29A94BC", VA = "0x29A94BC")]
	private void RefreshTooltip()
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0x29A9984", Offset = "0x29A9984", VA = "0x29A9984")]
	public GvrTooltip()
	{
	}
}
[Token(Token = "0x200003A")]
public abstract class GvrBasePointer : MonoBehaviour, IGvrControllerInputDeviceReceiver
{
	[Token(Token = "0x20004AD")]
	public enum RaycastMode
	{
		[Token(Token = "0x4001E2E")]
		Camera,
		[Token(Token = "0x4001E2F")]
		Direct,
		[Token(Token = "0x4001E30")]
		Hybrid
	}

	[Token(Token = "0x20004AE")]
	public struct PointerRay
	{
		[Token(Token = "0x4001E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Ray ray;

		[Token(Token = "0x4001E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float distanceFromStart;

		[Token(Token = "0x4001E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float distance;
	}

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146C1EC", Offset = "0x146C1EC")]
	public RaycastMode raycastMode;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146C224", Offset = "0x146C224")]
	public Camera overridePointerCamera;

	[Token(Token = "0x40001D0")]
	private const GvrControllerButton LEFT_BUTTON_MASK_3DOF = GvrControllerButton.TouchPadButton;

	[Token(Token = "0x40001D1")]
	private const GvrControllerButton LEFT_BUTTON_MASK_6DOF = (GvrControllerButton)66;

	[Token(Token = "0x40001D2")]
	private const GvrControllerButton RIGHT_BUTTON_MASK_6DOF = (GvrControllerButton)136;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GvrControllerButton triggerButton;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private GvrControllerButton triggerButtonDown;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GvrControllerButton triggerButtonUp;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int lastUpdateFrame;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146C25C", Offset = "0x146C25C")]
	private bool <ShouldUseExitRadiusForRaycast>k__BackingField;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146C26C", Offset = "0x146C26C")]
	private GvrControllerInputDevice <ControllerInputDevice>k__BackingField;

	[Token(Token = "0x170000B9")]
	public RaycastResult CurrentRaycastResult
	{
		[Token(Token = "0x6000341")]
		[Address(RVA = "0x2B27B68", Offset = "0x2B27B68", VA = "0x2B27B68")]
		get
		{
			return default(RaycastResult);
		}
	}

	[Token(Token = "0x170000BA")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x148A164", Offset = "0x148A164")]
	public Vector3 PointerIntersection
	{
		[Token(Token = "0x6000342")]
		[Address(RVA = "0x2B27C2C", Offset = "0x2B27C2C", VA = "0x2B27C2C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170000BB")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x148A19C", Offset = "0x148A19C")]
	public bool IsPointerIntersecting
	{
		[Token(Token = "0x6000343")]
		[Address(RVA = "0x2B27C54", Offset = "0x2B27C54", VA = "0x2B27C54")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000BC")]
	public bool ShouldUseExitRadiusForRaycast
	{
		[Token(Token = "0x6000344")]
		[Address(RVA = "0x2B27CD8", Offset = "0x2B27CD8", VA = "0x2B27CD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147EEC4", Offset = "0x147EEC4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000345")]
		[Address(RVA = "0x2B27CE0", Offset = "0x2B27CE0", VA = "0x2B27CE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147EED4", Offset = "0x147EED4")]
		set
		{
		}
	}

	[Token(Token = "0x170000BD")]
	public float CurrentPointerRadius
	{
		[Token(Token = "0x6000346")]
		[Address(RVA = "0x2B27CEC", Offset = "0x2B27CEC", VA = "0x2B27CEC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000BE")]
	public virtual Transform PointerTransform
	{
		[Token(Token = "0x6000347")]
		[Address(RVA = "0x2B27D44", Offset = "0x2B27D44", VA = "0x2B27D44", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000BF")]
	public GvrControllerInputDevice ControllerInputDevice
	{
		[Token(Token = "0x6000348")]
		[Address(RVA = "0x2B27D4C", Offset = "0x2B27D4C", VA = "0x2B27D4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147EEE4", Offset = "0x147EEE4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000349")]
		[Address(RVA = "0x2B27D54", Offset = "0x2B27D54", VA = "0x2B27D54", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147EEF4", Offset = "0x147EEF4")]
		set
		{
		}
	}

	[Token(Token = "0x170000C0")]
	public virtual bool TriggerDown
	{
		[Token(Token = "0x600034A")]
		[Address(RVA = "0x2B27D5C", Offset = "0x2B27D5C", VA = "0x2B27D5C", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000C1")]
	public virtual bool Triggering
	{
		[Token(Token = "0x600034B")]
		[Address(RVA = "0x2B27E68", Offset = "0x2B27E68", VA = "0x2B27E68", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000C2")]
	public virtual bool TriggerUp
	{
		[Token(Token = "0x600034C")]
		[Address(RVA = "0x2B27E94", Offset = "0x2B27E94", VA = "0x2B27E94", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000C3")]
	public virtual bool TouchDown
	{
		[Token(Token = "0x600034D")]
		[Address(RVA = "0x2B27EC0", Offset = "0x2B27EC0", VA = "0x2B27EC0", Slot = "9")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000C4")]
	public virtual bool IsTouching
	{
		[Token(Token = "0x600034E")]
		[Address(RVA = "0x2B27F10", Offset = "0x2B27F10", VA = "0x2B27F10", Slot = "10")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000C5")]
	public virtual bool TouchUp
	{
		[Token(Token = "0x600034F")]
		[Address(RVA = "0x2B27F60", Offset = "0x2B27F60", VA = "0x2B27F60", Slot = "11")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000C6")]
	public virtual Vector2 TouchPos
	{
		[Token(Token = "0x6000350")]
		[Address(RVA = "0x2B27FB0", Offset = "0x2B27FB0", VA = "0x2B27FB0", Slot = "12")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x170000C7")]
	public virtual Vector3 MaxPointerEndPoint
	{
		[Token(Token = "0x6000351")]
		[Address(RVA = "0x2B28068", Offset = "0x2B28068", VA = "0x2B28068", Slot = "13")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170000C8")]
	public virtual bool IsAvailable
	{
		[Token(Token = "0x6000352")]
		[Address(RVA = "0x2B281CC", Offset = "0x2B281CC", VA = "0x2B281CC", Slot = "14")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000C9")]
	public virtual float CameraRayIntersectionDistance
	{
		[Token(Token = "0x6000353")]
		[Address(RVA = "0x2B28294", Offset = "0x2B28294", VA = "0x2B28294", Slot = "15")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000CA")]
	public Camera PointerCamera
	{
		[Token(Token = "0x6000354")]
		[Address(RVA = "0x2B282A4", Offset = "0x2B282A4", VA = "0x2B282A4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000CB")]
	public abstract float MaxPointerDistance
	{
		[Token(Token = "0x6000355")]
		get;
	}

	[Token(Token = "0x170000CC")]
	internal PointerEventData.InputButton InputButtonDown
	{
		[Token(Token = "0x6000356")]
		[Address(RVA = "0x2B28330", Offset = "0x2B28330", VA = "0x2B28330")]
		get
		{
			return default(PointerEventData.InputButton);
		}
	}

	[Token(Token = "0x170000CD")]
	internal GvrControllerButton ControllerButtonDown
	{
		[Token(Token = "0x6000357")]
		[Address(RVA = "0x2B28350", Offset = "0x2B28350", VA = "0x2B28350")]
		get
		{
			return default(GvrControllerButton);
		}
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0x2B28358", Offset = "0x2B28358", VA = "0x2B28358")]
	public static PointerRay CalculateRay(GvrBasePointer pointer, RaycastMode mode)
	{
		return default(PointerRay);
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0x2B287F0", Offset = "0x2B287F0", VA = "0x2B287F0")]
	public static PointerRay CalculateHybridRay(GvrBasePointer pointer, RaycastMode hybridMode)
	{
		return default(PointerRay);
	}

	[Token(Token = "0x600035A")]
	public abstract void OnPointerEnter(RaycastResult raycastResult, bool isInteractive);

	[Token(Token = "0x600035B")]
	public abstract void OnPointerHover(RaycastResult raycastResultResult, bool isInteractive);

	[Token(Token = "0x600035C")]
	public abstract void OnPointerExit(GameObject previousObject);

	[Token(Token = "0x600035D")]
	public abstract void OnPointerClickDown();

	[Token(Token = "0x600035E")]
	public abstract void OnPointerClickUp();

	[Token(Token = "0x600035F")]
	public abstract void GetPointerRadius(out float enterRadius, out float exitRadius);

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x2B28180", Offset = "0x2B28180", VA = "0x2B28180")]
	public Vector3 GetPointAlongPointer(float distance)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x2B28984", Offset = "0x2B28984", VA = "0x2B28984")]
	public PointerRay GetRayForDistance(float distance)
	{
		return default(PointerRay);
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x2B28A1C", Offset = "0x2B28A1C", VA = "0x2B28A1C", Slot = "23")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x2B28B04", Offset = "0x2B28B04", VA = "0x2B28B04")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x2B27D88", Offset = "0x2B27D88", VA = "0x2B27D88")]
	private void UpdateTriggerState()
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x2B28B64", Offset = "0x2B28B64", VA = "0x2B28B64")]
	protected GvrBasePointer()
	{
	}
}
[Token(Token = "0x200003B")]
public abstract class GvrBasePointerRaycaster : BaseRaycaster
{
	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GvrBasePointer.PointerRay lastRay;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146C27C", Offset = "0x146C27C")]
	private GvrBasePointer.RaycastMode <CurrentRaycastModeForHybrid>k__BackingField;

	[Token(Token = "0x170000CE")]
	protected GvrBasePointer.RaycastMode CurrentRaycastModeForHybrid
	{
		[Token(Token = "0x6000367")]
		[Address(RVA = "0x2B28B7C", Offset = "0x2B28B7C", VA = "0x2B28B7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147EF04", Offset = "0x147EF04")]
		get
		{
			return default(GvrBasePointer.RaycastMode);
		}
		[Token(Token = "0x6000368")]
		[Address(RVA = "0x2B28B84", Offset = "0x2B28B84", VA = "0x2B28B84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147EF14", Offset = "0x147EF14")]
		private set
		{
		}
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x2B28B74", Offset = "0x2B28B74", VA = "0x2B28B74")]
	protected GvrBasePointerRaycaster()
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x2B28B8C", Offset = "0x2B28B8C", VA = "0x2B28B8C")]
	public GvrBasePointer.PointerRay GetLastRay()
	{
		return default(GvrBasePointer.PointerRay);
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x2B28B98", Offset = "0x2B28B98", VA = "0x2B28B98", Slot = "17")]
	public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
	{
	}

	[Token(Token = "0x600036B")]
	protected abstract bool PerformRaycast(GvrBasePointer.PointerRay pointerRay, float radius, PointerEventData eventData, List<RaycastResult> resultAppendList);

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x2B28D24", Offset = "0x2B28D24", VA = "0x2B28D24")]
	private void RaycastHybrid(GvrBasePointer pointer, PointerEventData eventData, List<RaycastResult> resultAppendList)
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x2B28E5C", Offset = "0x2B28E5C", VA = "0x2B28E5C")]
	private void RaycastDefault(GvrBasePointer pointer, PointerEventData eventData, List<RaycastResult> resultAppendList)
	{
	}
}
[Token(Token = "0x200003C")]
public static class GvrExecuteEventsExtension
{
	[Token(Token = "0x170000CF")]
	public static ExecuteEvents.EventFunction<IGvrPointerHoverHandler> pointerHoverHandler
	{
		[Token(Token = "0x600036E")]
		[Address(RVA = "0x2B2E888", Offset = "0x2B2E888", VA = "0x2B2E888")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x2B2E8FC", Offset = "0x2B2E8FC", VA = "0x2B2E8FC")]
	private static void Execute(IGvrPointerHoverHandler handler, BaseEventData eventData)
	{
	}
}
[Token(Token = "0x200003D")]
public class GvrPointerEventData : PointerEventData
{
	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GvrControllerButton gvrButtonsDown;

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x2B36534", Offset = "0x2B36534", VA = "0x2B36534")]
	public GvrPointerEventData(EventSystem eventSystem)
	{
	}
}
[Token(Token = "0x200003E")]
public static class GvrPointerEventDataExtension
{
	[Token(Token = "0x6000371")]
	[Address(RVA = "0x2B3653C", Offset = "0x2B3653C", VA = "0x2B3653C")]
	public static GvrControllerButton GvrGetButtonsDown(this PointerEventData pointerEventData)
	{
		return default(GvrControllerButton);
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x2B365CC", Offset = "0x2B365CC", VA = "0x2B365CC")]
	public static GvrControllerInputDevice GvrGetControllerInputDevice(this PointerEventData pointerEventData)
	{
		return null;
	}
}
[Token(Token = "0x200003F")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1465CD0", Offset = "0x1465CD0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x1465CD0", Offset = "0x1465CD0")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x1465CD0", Offset = "0x1465CD0")]
public class GvrPointerGraphicRaycaster : GvrBasePointerRaycaster
{
	[Token(Token = "0x20004AF")]
	public enum BlockingObjects
	{
		[Token(Token = "0x4001E35")]
		None,
		[Token(Token = "0x4001E36")]
		TwoD,
		[Token(Token = "0x4001E37")]
		ThreeD,
		[Token(Token = "0x4001E38")]
		All
	}

	[Serializable]
	[Token(Token = "0x20004B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1469D1C", Offset = "0x1469D1C")]
	private sealed class <>c
	{
		[Token(Token = "0x4001E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<Graphic> <>9__13_0;

		[Token(Token = "0x60022F3")]
		[Address(RVA = "0x2B37910", Offset = "0x2B37910", VA = "0x2B37910")]
		public <>c()
		{
		}

		[Token(Token = "0x60022F4")]
		[Address(RVA = "0x2B37918", Offset = "0x2B37918", VA = "0x2B37918")]
		internal int <Raycast>b__13_0(Graphic g1, Graphic g2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool ignoreReversedGraphics;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public BlockingObjects blockingObjects;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public LayerMask blockingMask;

	[Token(Token = "0x40001DF")]
	private const int NO_EVENT_MASK_SET = -1;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<Graphic> sortedGraphics;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Canvas targetCanvas;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<Graphic> raycastResults;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Camera cachedPointerEventCamera;

	[Token(Token = "0x170000D0")]
	public override Camera eventCamera
	{
		[Token(Token = "0x6000374")]
		[Address(RVA = "0x2B366D8", Offset = "0x2B366D8", VA = "0x2B366D8", Slot = "18")]
		[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x147EF44", Offset = "0x147EF44")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x2B3663C", Offset = "0x2B3663C", VA = "0x2B3663C")]
	protected GvrPointerGraphicRaycaster()
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x2B367AC", Offset = "0x2B367AC", VA = "0x2B367AC", Slot = "22")]
	protected override bool PerformRaycast(GvrBasePointer.PointerRay pointerRay, float radius, PointerEventData eventData, List<RaycastResult> resultAppendList)
	{
		return default(bool);
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x2B370DC", Offset = "0x2B370DC", VA = "0x2B370DC")]
	private static void Raycast(Canvas canvas, Ray ray, Camera cam, float distance, List<Graphic> results, out Ray finalRay)
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0x2B36788", Offset = "0x2B36788", VA = "0x2B36788")]
	private Camera GetCameraForRaycastMode(GvrBasePointer pointer, GvrBasePointer.RaycastMode mode)
	{
		return null;
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x2B375D0", Offset = "0x2B375D0", VA = "0x2B375D0")]
	private Camera GetCameraForRaycastModeDirect(GvrBasePointer pointer)
	{
		return null;
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0x2B3778C", Offset = "0x2B3778C", VA = "0x2B3778C")]
	private Camera AddDummyCameraToPointer(GvrBasePointer pointer)
	{
		return null;
	}
}
[Token(Token = "0x2000040")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1465D7C", Offset = "0x1465D7C")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x1465D7C", Offset = "0x1465D7C")]
public class GvrPointerPhysicsRaycaster : GvrBasePointerRaycaster
{
	[Token(Token = "0x20004B1")]
	private class HitComparer : IComparer<RaycastHit>
	{
		[Token(Token = "0x60022F5")]
		[Address(RVA = "0x2B3C144", Offset = "0x2B3C144", VA = "0x2B3C144", Slot = "4")]
		public int Compare(RaycastHit lhs, RaycastHit rhs)
		{
			return default(int);
		}

		[Token(Token = "0x60022F6")]
		[Address(RVA = "0x2B3B8BC", Offset = "0x2B3B8BC", VA = "0x2B3B8BC")]
		public HitComparer()
		{
		}
	}

	[Token(Token = "0x40001E4")]
	protected const int NO_EVENT_MASK_SET = -1;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	protected LayerMask raycasterEventMask;

	[Token(Token = "0x40001E6")]
	private const int MAX_RAYCAST_HITS_MAX = 512;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146C29C", Offset = "0x146C29C")]
	private int maxRaycastHits;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RaycastHit[] hits;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private HitComparer hitComparer;

	[Token(Token = "0x170000D1")]
	public int MaxRaycastHits
	{
		[Token(Token = "0x600037C")]
		[Address(RVA = "0x2B3B8C4", Offset = "0x2B3B8C4", VA = "0x2B3B8C4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600037D")]
		[Address(RVA = "0x2B3B8CC", Offset = "0x2B3B8CC", VA = "0x2B3B8CC")]
		set
		{
		}
	}

	[Token(Token = "0x170000D2")]
	public override Camera eventCamera
	{
		[Token(Token = "0x600037E")]
		[Address(RVA = "0x2B3B9A0", Offset = "0x2B3B9A0", VA = "0x2B3B9A0", Slot = "18")]
		[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x147EF90", Offset = "0x147EF90")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D3")]
	public int finalEventMask
	{
		[Token(Token = "0x600037F")]
		[Address(RVA = "0x2B3BA38", Offset = "0x2B3BA38", VA = "0x2B3BA38")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000D4")]
	public LayerMask eventMask
	{
		[Token(Token = "0x6000380")]
		[Address(RVA = "0x2B3BB0C", Offset = "0x2B3BB0C", VA = "0x2B3BB0C")]
		get
		{
			return default(LayerMask);
		}
		[Token(Token = "0x6000381")]
		[Address(RVA = "0x2B3BB14", Offset = "0x2B3BB14", VA = "0x2B3BB14")]
		set
		{
		}
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0x2B3B834", Offset = "0x2B3B834", VA = "0x2B3B834")]
	protected GvrPointerPhysicsRaycaster()
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x2B3BB1C", Offset = "0x2B3BB1C", VA = "0x2B3BB1C", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0x2B3BB88", Offset = "0x2B3BB88", VA = "0x2B3BB88", Slot = "22")]
	protected override bool PerformRaycast(GvrBasePointer.PointerRay pointerRay, float radius, PointerEventData eventData, List<RaycastResult> resultAppendList)
	{
		return default(bool);
	}
}
[Serializable]
[Token(Token = "0x2000041")]
public class GvrPointerScrollInput
{
	[Token(Token = "0x20004B2")]
	private class ScrollInfo
	{
		[Token(Token = "0x4001E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isScrollingX;

		[Token(Token = "0x4001E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool isScrollingY;

		[Token(Token = "0x4001E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector2 initScroll;

		[Token(Token = "0x4001E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector2 lastScroll;

		[Token(Token = "0x4001E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector2 scrollVelocity;

		[Token(Token = "0x4001E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IGvrScrollSettings scrollSettings;

		[Token(Token = "0x1700044C")]
		public bool IsScrolling
		{
			[Token(Token = "0x60022F7")]
			[Address(RVA = "0x2B3CD14", Offset = "0x2B3CD14", VA = "0x2B3CD14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60022F8")]
		[Address(RVA = "0x2B3CFC0", Offset = "0x2B3CFC0", VA = "0x2B3CFC0")]
		public ScrollInfo()
		{
		}
	}

	[Token(Token = "0x40001EA")]
	public const string PROPERTY_NAME_INERTIA = "inertia";

	[Token(Token = "0x40001EB")]
	public const string PROPERTY_NAME_DECELERATION_RATE = "decelerationRate";

	[Token(Token = "0x40001EC")]
	public const float SCROLL_DELTA_MULTIPLIER = 1000f;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146C2E0", Offset = "0x146C2E0")]
	public bool inertia;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146C318", Offset = "0x146C318")]
	public float decelerationRate;

	[Token(Token = "0x40001EF")]
	private const float CUTOFF_HZ = 10f;

	[Token(Token = "0x40001F0")]
	private const float RC = 1f / (20f * (float)Math.PI);

	[Token(Token = "0x40001F1")]
	private const float SPEED_CLAMP_RATIO = 0.05f;

	[Token(Token = "0x40001F2")]
	private const float SPEED_CLAMP = 50f;

	[Token(Token = "0x40001F3")]
	private const float SPEED_CLAMP_SQUARED = 2500f;

	[Token(Token = "0x40001F4")]
	private const float INERTIA_THRESHOLD_RATIO = 0.2f;

	[Token(Token = "0x40001F5")]
	private const float INERTIA_THRESHOLD = 200f;

	[Token(Token = "0x40001F6")]
	private const float INERTIA_THRESHOLD_SQUARED = 40000f;

	[Token(Token = "0x40001F7")]
	private const float SLOP_VERTICAL = 165f;

	[Token(Token = "0x40001F8")]
	private const float SLOP_HORIZONTAL = 150f;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<GameObject, ScrollInfo> scrollHandlers;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<GameObject> scrollingObjects;

	[Token(Token = "0x6000384")]
	[Address(RVA = "0x2B3B2B0", Offset = "0x2B3B2B0", VA = "0x2B3B2B0")]
	[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x147EFDC", Offset = "0x147EFDC")]
	public void HandleScroll(GameObject currentGameObject, PointerEventData pointerData, GvrBasePointer pointer, IGvrEventExecutor eventExecutor)
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0x2B3CB08", Offset = "0x2B3CB08", VA = "0x2B3CB08")]
	private static bool CanScrollStartX(ScrollInfo scrollInfo, Vector2 currentScroll)
	{
		return default(bool);
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x2B3CB98", Offset = "0x2B3CB98", VA = "0x2B3CB98")]
	private static bool CanScrollStartY(ScrollInfo scrollInfo, Vector2 currentScroll)
	{
		return default(bool);
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x2B3C250", Offset = "0x2B3C250", VA = "0x2B3C250")]
	private void OnTouchingScrollHandler(GameObject currentScrollHandler, PointerEventData pointerData, Vector2 currentScroll, IGvrEventExecutor eventExecutor)
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0x2B3C54C", Offset = "0x2B3C54C", VA = "0x2B3C54C")]
	private void OnReleaseScrollHandler(GameObject currentScrollHandler)
	{
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0x2B3CD34", Offset = "0x2B3CD34", VA = "0x2B3CD34")]
	private void UpdateVelocity(ScrollInfo scrollInfo, Vector2 scrollDisplacement)
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0x2B3C604", Offset = "0x2B3C604", VA = "0x2B3C604")]
	private void StopScrollingIfNecessary(bool touching, GameObject currentScrollHandler)
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0x2B3C7A4", Offset = "0x2B3C7A4", VA = "0x2B3C7A4")]
	private void UpdateInertiaScrollHandlers(bool touching, GameObject currentScrollHandler, PointerEventData pointerData, IGvrEventExecutor eventExecutor)
	{
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0x2B3CC28", Offset = "0x2B3CC28", VA = "0x2B3CC28")]
	private ScrollInfo AddScrollHandler(GameObject scrollHandler, Vector2 currentScroll)
	{
		return null;
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0x2B3C188", Offset = "0x2B3C188", VA = "0x2B3C188")]
	private void RemoveScrollHandler(GameObject scrollHandler)
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0x2B3CE1C", Offset = "0x2B3CE1C", VA = "0x2B3CE1C")]
	private bool ShouldUseInertia(ScrollInfo scrollInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0x2B3CEEC", Offset = "0x2B3CEEC", VA = "0x2B3CEEC")]
	private float GetDecelerationRate(ScrollInfo scrollInfo)
	{
		return default(float);
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x2B382EC", Offset = "0x2B382EC", VA = "0x2B382EC")]
	public GvrPointerScrollInput()
	{
	}
}
[Token(Token = "0x2000042")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x1465DDC", Offset = "0x1465DDC")]
public class GvrScrollSettings : MonoBehaviour, IGvrScrollSettings
{
	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146C350", Offset = "0x146C350")]
	public bool inertiaOverride;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146C388", Offset = "0x146C388")]
	public float decelerationRateOverride;

	[Token(Token = "0x170000D5")]
	public bool InertiaOverride
	{
		[Token(Token = "0x6000391")]
		[Address(RVA = "0x29A86A4", Offset = "0x29A86A4", VA = "0x29A86A4", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000D6")]
	public float DecelerationRateOverride
	{
		[Token(Token = "0x6000392")]
		[Address(RVA = "0x29A86AC", Offset = "0x29A86AC", VA = "0x29A86AC", Slot = "5")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x29A86B4", Offset = "0x29A86B4", VA = "0x29A86B4")]
	public GvrScrollSettings()
	{
	}
}
[Token(Token = "0x2000043")]
public class GvrXREventsSubscriber : MonoBehaviour
{
	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GvrXREventsSubscriber instance;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string instanceLoadedDeviceName;

	[Token(Token = "0x170000D7")]
	public static string loadedDeviceName
	{
		[Token(Token = "0x6000394")]
		[Address(RVA = "0x29A8EFC", Offset = "0x29A8EFC", VA = "0x29A8EFC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000395")]
		[Address(RVA = "0x29AFB24", Offset = "0x29AFB24", VA = "0x29AFB24")]
		private set
		{
		}
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x29AFB54", Offset = "0x29AFB54", VA = "0x29AFB54")]
	private static void OnDeviceLoadAction(string newLoadedDeviceName)
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0x29AFA50", Offset = "0x29AFA50", VA = "0x29AFA50")]
	private static GvrXREventsSubscriber GetInstance()
	{
		return null;
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x29AFB58", Offset = "0x29AFB58", VA = "0x29AFB58")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x29AFC1C", Offset = "0x29AFC1C", VA = "0x29AFC1C")]
	public GvrXREventsSubscriber()
	{
	}
}
[Token(Token = "0x2000044")]
public interface IGvrPointerHoverHandler : IEventSystemHandler
{
	[Token(Token = "0x600039A")]
	void OnGvrPointerHover(PointerEventData eventData);
}
[Token(Token = "0x2000045")]
public interface IGvrScrollSettings
{
	[Token(Token = "0x170000D8")]
	bool InertiaOverride
	{
		[Token(Token = "0x600039B")]
		get;
	}

	[Token(Token = "0x170000D9")]
	float DecelerationRateOverride
	{
		[Token(Token = "0x600039C")]
		get;
	}
}
[Token(Token = "0x2000046")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x1465E14", Offset = "0x1465E14")]
public class GvrAllEventsTrigger : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20004B3")]
	public class TriggerEvent : UnityEvent<GameObject, PointerEventData>
	{
		[Token(Token = "0x60022F9")]
		[Address(RVA = "0x2B25F38", Offset = "0x2B25F38", VA = "0x2B25F38")]
		public TriggerEvent()
		{
		}
	}

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TriggerEvent OnPointerClick;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TriggerEvent OnPointerDown;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TriggerEvent OnPointerUp;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TriggerEvent OnPointerEnter;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TriggerEvent OnPointerExit;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TriggerEvent OnScroll;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool listenersAdded;

	[Token(Token = "0x600039D")]
	[Address(RVA = "0x2B253BC", Offset = "0x2B253BC", VA = "0x2B253BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x2B25594", Offset = "0x2B25594", VA = "0x2B25594")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x2B25768", Offset = "0x2B25768", VA = "0x2B25768")]
	private void Start()
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x2B253C0", Offset = "0x2B253C0", VA = "0x2B253C0")]
	private void AddListeners()
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x2B25598", Offset = "0x2B25598", VA = "0x2B25598")]
	private void RemoveListeners()
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x2B25C90", Offset = "0x2B25C90", VA = "0x2B25C90")]
	private void OnPointerClickHandler(GameObject target, PointerEventData eventData)
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x2B25D00", Offset = "0x2B25D00", VA = "0x2B25D00")]
	private void OnPointerDownHandler(GameObject target, PointerEventData eventData)
	{
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0x2B25D70", Offset = "0x2B25D70", VA = "0x2B25D70")]
	private void OnPointerUpHandler(GameObject target, PointerEventData eventData)
	{
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0x2B25DE0", Offset = "0x2B25DE0", VA = "0x2B25DE0")]
	private void OnPointerEnterHandler(GameObject target, PointerEventData eventData)
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0x2B25E50", Offset = "0x2B25E50", VA = "0x2B25E50")]
	private void OnPointerExitHandler(GameObject target, PointerEventData eventData)
	{
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0x2B25EC0", Offset = "0x2B25EC0", VA = "0x2B25EC0")]
	private void OnScrollHandler(GameObject target, PointerEventData eventData)
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0x2B25F30", Offset = "0x2B25F30", VA = "0x2B25F30")]
	public GvrAllEventsTrigger()
	{
	}
}
[Token(Token = "0x2000047")]
public class GvrEventExecutor : IGvrEventExecutor
{
	[Token(Token = "0x20004B4")]
	public delegate void EventDelegate(GameObject target, PointerEventData eventData);

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<Type, EventDelegate> eventTable;

	[Token(Token = "0x14000017")]
	public event EventDelegate OnPointerClick
	{
		[Token(Token = "0x60003AA")]
		[Address(RVA = "0x2B25810", Offset = "0x2B25810", VA = "0x2B25810")]
		add
		{
		}
		[Token(Token = "0x60003AB")]
		[Address(RVA = "0x2B25A50", Offset = "0x2B25A50", VA = "0x2B25A50")]
		remove
		{
		}
	}

	[Token(Token = "0x14000018")]
	public event EventDelegate OnPointerDown
	{
		[Token(Token = "0x60003AC")]
		[Address(RVA = "0x2B25870", Offset = "0x2B25870", VA = "0x2B25870")]
		add
		{
		}
		[Token(Token = "0x60003AD")]
		[Address(RVA = "0x2B25AB0", Offset = "0x2B25AB0", VA = "0x2B25AB0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000019")]
	public event EventDelegate OnPointerUp
	{
		[Token(Token = "0x60003AE")]
		[Address(RVA = "0x2B258D0", Offset = "0x2B258D0", VA = "0x2B258D0")]
		add
		{
		}
		[Token(Token = "0x60003AF")]
		[Address(RVA = "0x2B25B10", Offset = "0x2B25B10", VA = "0x2B25B10")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001A")]
	public event EventDelegate OnPointerEnter
	{
		[Token(Token = "0x60003B0")]
		[Address(RVA = "0x2B25930", Offset = "0x2B25930", VA = "0x2B25930")]
		add
		{
		}
		[Token(Token = "0x60003B1")]
		[Address(RVA = "0x2B25B70", Offset = "0x2B25B70", VA = "0x2B25B70")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001B")]
	public event EventDelegate OnPointerExit
	{
		[Token(Token = "0x60003B2")]
		[Address(RVA = "0x2B25990", Offset = "0x2B25990", VA = "0x2B25990")]
		add
		{
		}
		[Token(Token = "0x60003B3")]
		[Address(RVA = "0x2B25BD0", Offset = "0x2B25BD0", VA = "0x2B25BD0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001C")]
	public event EventDelegate OnScroll
	{
		[Token(Token = "0x60003B4")]
		[Address(RVA = "0x2B259F0", Offset = "0x2B259F0", VA = "0x2B259F0")]
		add
		{
		}
		[Token(Token = "0x60003B5")]
		[Address(RVA = "0x2B25C30", Offset = "0x2B25C30", VA = "0x2B25C30")]
		remove
		{
		}
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0x2B2E3E8", Offset = "0x2B2E3E8", VA = "0x2B2E3E8")]
	public GvrEventExecutor()
	{
	}

	[Token(Token = "0x60003B6")]
	[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x147F028", Offset = "0x147F028")]
	public bool Execute<T>(GameObject target, BaseEventData eventData, ExecuteEvents.EventFunction<T> functor) where T : IEventSystemHandler
	{
		return default(bool);
	}

	[Token(Token = "0x60003B7")]
	[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x147F074", Offset = "0x147F074")]
	public GameObject ExecuteHierarchy<T>(GameObject root, BaseEventData eventData, ExecuteEvents.EventFunction<T> callbackFunction) where T : IEventSystemHandler
	{
		return null;
	}

	[Token(Token = "0x60003B8")]
	[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x147F0C0", Offset = "0x147F0C0")]
	public GameObject GetEventHandler<T>(GameObject root) where T : IEventSystemHandler
	{
		return null;
	}

	[Token(Token = "0x60003B9")]
	private void CallEventDelegate<T>(GameObject target, BaseEventData eventData) where T : IEventSystemHandler
	{
	}

	[Token(Token = "0x60003BA")]
	private void AddEventDelegate<T>(EventDelegate eventDelegate)
	{
	}

	[Token(Token = "0x60003BB")]
	private void RemoveEventDelegate<T>(EventDelegate eventDelegate)
	{
	}
}
[Token(Token = "0x2000048")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1465E4C", Offset = "0x1465E4C")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x1465E4C", Offset = "0x1465E4C")]
public class GvrPointerInputModule : BaseInputModule, IGvrInputModuleController
{
	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146C3C0", Offset = "0x146C3C0")]
	public bool vrModeOnly;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146C3F8", Offset = "0x146C3F8")]
	public GvrPointerScrollInput scrollInput;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146C430", Offset = "0x146C430")]
	private GvrPointerInputModuleImpl <Impl>k__BackingField;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146C440", Offset = "0x146C440")]
	private GvrEventExecutor <EventExecutor>k__BackingField;

	[Token(Token = "0x170000DA")]
	public static GvrBasePointer Pointer
	{
		[Token(Token = "0x60003BC")]
		[Address(RVA = "0x2B28C84", Offset = "0x2B28C84", VA = "0x2B28C84")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003BD")]
		[Address(RVA = "0x2B37A98", Offset = "0x2B37A98", VA = "0x2B37A98")]
		set
		{
		}
	}

	[Token(Token = "0x170000DB")]
	public static RaycastResult CurrentRaycastResult
	{
		[Token(Token = "0x60003BE")]
		[Address(RVA = "0x2B27B6C", Offset = "0x2B27B6C", VA = "0x2B27B6C")]
		get
		{
			return default(RaycastResult);
		}
	}

	[Token(Token = "0x170000DC")]
	public GvrPointerInputModuleImpl Impl
	{
		[Token(Token = "0x60003BF")]
		[Address(RVA = "0x2B37BE4", Offset = "0x2B37BE4", VA = "0x2B37BE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147F10C", Offset = "0x147F10C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003C0")]
		[Address(RVA = "0x2B37BEC", Offset = "0x2B37BEC", VA = "0x2B37BEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147F11C", Offset = "0x147F11C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000DD")]
	public GvrEventExecutor EventExecutor
	{
		[Token(Token = "0x60003C1")]
		[Address(RVA = "0x2B37BF4", Offset = "0x2B37BF4", VA = "0x2B37BF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147F12C", Offset = "0x147F12C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003C2")]
		[Address(RVA = "0x2B37BFC", Offset = "0x2B37BFC", VA = "0x2B37BFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147F13C", Offset = "0x147F13C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000DE")]
	public new EventSystem eventSystem
	{
		[Token(Token = "0x60003C3")]
		[Address(RVA = "0x2B37C04", Offset = "0x2B37C04", VA = "0x2B37C04", Slot = "26")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000DF")]
	public List<RaycastResult> RaycastResultCache
	{
		[Token(Token = "0x60003C4")]
		[Address(RVA = "0x2B37C0C", Offset = "0x2B37C0C", VA = "0x2B37C0C", Slot = "27")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x2B28A20", Offset = "0x2B28A20", VA = "0x2B28A20")]
	public static void OnPointerCreated(GvrBasePointer createdPointer)
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x2B2576C", Offset = "0x2B2576C", VA = "0x2B2576C")]
	public static GvrEventExecutor FindEventExecutor()
	{
		return null;
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x2B37970", Offset = "0x2B37970", VA = "0x2B37970")]
	public static GvrPointerInputModule FindInputModule()
	{
		return null;
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x2B37C14", Offset = "0x2B37C14", VA = "0x2B37C14", Slot = "21")]
	[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x147F14C", Offset = "0x147F14C")]
	public override bool ShouldActivateModule()
	{
		return default(bool);
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0x2B37D28", Offset = "0x2B37D28", VA = "0x2B37D28", Slot = "22")]
	[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x147F198", Offset = "0x147F198")]
	public override void DeactivateModule()
	{
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x2B37F28", Offset = "0x2B37F28", VA = "0x2B37F28", Slot = "20")]
	public override bool IsPointerOverGameObject(int pointerId)
	{
		return default(bool);
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x2B37FEC", Offset = "0x2B37FEC", VA = "0x2B37FEC", Slot = "17")]
	[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x147F1E4", Offset = "0x147F1E4")]
	public override void Process()
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x2B3819C", Offset = "0x2B3819C", VA = "0x2B3819C", Slot = "28")]
	[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x147F230", Offset = "0x147F230")]
	public bool ShouldActivate()
	{
		return default(bool);
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x2B381A4", Offset = "0x2B381A4", VA = "0x2B381A4", Slot = "29")]
	public void Deactivate()
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x2B381AC", Offset = "0x2B381AC", VA = "0x2B381AC", Slot = "30")]
	[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x147F27C", Offset = "0x147F27C")]
	public new GameObject FindCommonRoot(GameObject g1, GameObject g2)
	{
		return null;
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x2B381BC", Offset = "0x2B381BC", VA = "0x2B381BC", Slot = "31")]
	[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x147F2C8", Offset = "0x147F2C8")]
	public new BaseEventData GetBaseEventData()
	{
		return null;
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0x2B381C4", Offset = "0x2B381C4", VA = "0x2B381C4", Slot = "32")]
	public new RaycastResult FindFirstRaycast(List<RaycastResult> candidates)
	{
		return default(RaycastResult);
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0x2B381D0", Offset = "0x2B381D0", VA = "0x2B381D0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0x2B38018", Offset = "0x2B38018", VA = "0x2B38018")]
	private void UpdateImplProperties()
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0x2B3827C", Offset = "0x2B3827C", VA = "0x2B3827C")]
	public GvrPointerInputModule()
	{
	}
}
[Token(Token = "0x2000049")]
public class GvrPointerInputModuleImpl
{
	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private GvrBasePointer pointer;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector2 lastPose;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isPointerHovering;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool isActive;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146C450", Offset = "0x146C450")]
	private IGvrInputModuleController <ModuleController>k__BackingField;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146C460", Offset = "0x146C460")]
	private IGvrEventExecutor <EventExecutor>k__BackingField;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146C470", Offset = "0x146C470")]
	private bool <VrModeOnly>k__BackingField;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146C480", Offset = "0x146C480")]
	private GvrPointerScrollInput <ScrollInput>k__BackingField;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146C490", Offset = "0x146C490")]
	private GvrPointerEventData <CurrentEventData>k__BackingField;

	[Token(Token = "0x170000E0")]
	public IGvrInputModuleController ModuleController
	{
		[Token(Token = "0x60003D4")]
		[Address(RVA = "0x2B383B0", Offset = "0x2B383B0", VA = "0x2B383B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147F314", Offset = "0x147F314")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003D5")]
		[Address(RVA = "0x2B383B8", Offset = "0x2B383B8", VA = "0x2B383B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147F324", Offset = "0x147F324")]
		set
		{
		}
	}

	[Token(Token = "0x170000E1")]
	public IGvrEventExecutor EventExecutor
	{
		[Token(Token = "0x60003D6")]
		[Address(RVA = "0x2B383C0", Offset = "0x2B383C0", VA = "0x2B383C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147F334", Offset = "0x147F334")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003D7")]
		[Address(RVA = "0x2B383C8", Offset = "0x2B383C8", VA = "0x2B383C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147F344", Offset = "0x147F344")]
		set
		{
		}
	}

	[Token(Token = "0x170000E2")]
	public bool VrModeOnly
	{
		[Token(Token = "0x60003D8")]
		[Address(RVA = "0x2B383D0", Offset = "0x2B383D0", VA = "0x2B383D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147F354", Offset = "0x147F354")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003D9")]
		[Address(RVA = "0x2B383D8", Offset = "0x2B383D8", VA = "0x2B383D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147F364", Offset = "0x147F364")]
		set
		{
		}
	}

	[Token(Token = "0x170000E3")]
	public GvrPointerScrollInput ScrollInput
	{
		[Token(Token = "0x60003DA")]
		[Address(RVA = "0x2B383E4", Offset = "0x2B383E4", VA = "0x2B383E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147F374", Offset = "0x147F374")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003DB")]
		[Address(RVA = "0x2B383EC", Offset = "0x2B383EC", VA = "0x2B383EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147F384", Offset = "0x147F384")]
		set
		{
		}
	}

	[Token(Token = "0x170000E4")]
	public GvrPointerEventData CurrentEventData
	{
		[Token(Token = "0x60003DC")]
		[Address(RVA = "0x2B383F4", Offset = "0x2B383F4", VA = "0x2B383F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147F394", Offset = "0x147F394")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003DD")]
		[Address(RVA = "0x2B383FC", Offset = "0x2B383FC", VA = "0x2B383FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147F3A4", Offset = "0x147F3A4")]
		private set
		{
		}
	}

	[Token(Token = "0x170000E5")]
	public GvrBasePointer Pointer
	{
		[Token(Token = "0x60003DE")]
		[Address(RVA = "0x2B38404", Offset = "0x2B38404", VA = "0x2B38404")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003DF")]
		[Address(RVA = "0x2B37B38", Offset = "0x2B37B38", VA = "0x2B37B38")]
		set
		{
		}
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x2B37C2C", Offset = "0x2B37C2C", VA = "0x2B37C2C")]
	[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x147F3B4", Offset = "0x147F3B4")]
	public bool ShouldActivateModule()
	{
		return default(bool);
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x2B37D40", Offset = "0x2B37D40", VA = "0x2B37D40")]
	[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x147F400", Offset = "0x147F400")]
	public void DeactivateModule()
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x2B37F40", Offset = "0x2B37F40", VA = "0x2B37F40")]
	public bool IsPointerOverGameObject(int pointerId)
	{
		return default(bool);
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x2B3808C", Offset = "0x2B3808C", VA = "0x2B3808C")]
	[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x147F44C", Offset = "0x147F44C")]
	public void Process()
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0x2B3B5A0", Offset = "0x2B3B5A0", VA = "0x2B3B5A0")]
	private static bool ShouldStartDrag(Vector2 pressPos, Vector2 currentPos, float threshold, bool useDragThreshold)
	{
		return default(bool);
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0x2B393D4", Offset = "0x2B393D4", VA = "0x2B393D4")]
	private void CastRay()
	{
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0x2B39EA8", Offset = "0x2B39EA8", VA = "0x2B39EA8")]
	private void UpdateCurrentObject(GameObject previousObject)
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0x2B3A3D8", Offset = "0x2B3A3D8", VA = "0x2B3A3D8")]
	private void UpdatePointer(GameObject previousObject)
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0x2B3A7DC", Offset = "0x2B3A7DC", VA = "0x2B3A7DC")]
	private void HandleDrag()
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0x2B384F4", Offset = "0x2B384F4", VA = "0x2B384F4")]
	private void HandlePendingClick()
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0x2B3AD78", Offset = "0x2B3AD78", VA = "0x2B3AD78")]
	private void HandleTriggerDown()
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0x2B393BC", Offset = "0x2B393BC", VA = "0x2B393BC")]
	private GameObject GetCurrentGameObject()
	{
		return null;
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0x2B38B20", Offset = "0x2B38B20", VA = "0x2B38B20")]
	private void HandlePointerExitAndEnter(PointerEventData currentPointerData, GameObject newEnterTarget)
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0x2B3840C", Offset = "0x2B3840C", VA = "0x2B3840C")]
	private void TryExitPointer()
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0x2B3931C", Offset = "0x2B3931C", VA = "0x2B3931C")]
	private bool IsPointerActiveAndAvailable()
	{
		return default(bool);
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0x2B3B670", Offset = "0x2B3B670", VA = "0x2B3B670")]
	private void RaycastAll()
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0x2B38274", Offset = "0x2B38274", VA = "0x2B38274")]
	public GvrPointerInputModuleImpl()
	{
	}
}
[Token(Token = "0x200004A")]
public interface IGvrEventExecutor
{
	[Token(Token = "0x60003F1")]
	bool Execute<T>(GameObject target, BaseEventData eventData, ExecuteEvents.EventFunction<T> functor) where T : IEventSystemHandler;

	[Token(Token = "0x60003F2")]
	GameObject ExecuteHierarchy<T>(GameObject root, BaseEventData eventData, ExecuteEvents.EventFunction<T> callbackFunction) where T : IEventSystemHandler;

	[Token(Token = "0x60003F3")]
	GameObject GetEventHandler<T>(GameObject root) where T : IEventSystemHandler;
}
[Token(Token = "0x200004B")]
public interface IGvrInputModuleController
{
	[Token(Token = "0x170000E6")]
	EventSystem eventSystem
	{
		[Token(Token = "0x60003F4")]
		get;
	}

	[Token(Token = "0x170000E7")]
	List<RaycastResult> RaycastResultCache
	{
		[Token(Token = "0x60003F5")]
		get;
	}

	[Token(Token = "0x60003F6")]
	bool ShouldActivate();

	[Token(Token = "0x60003F7")]
	void Deactivate();

	[Token(Token = "0x60003F8")]
	GameObject FindCommonRoot(GameObject g1, GameObject g2);

	[Token(Token = "0x60003F9")]
	BaseEventData GetBaseEventData();

	[Token(Token = "0x60003FA")]
	RaycastResult FindFirstRaycast(List<RaycastResult> candidates);
}
[Token(Token = "0x200004C")]
public class GvrCardboardHelpers
{
	[Token(Token = "0x60003FB")]
	[Address(RVA = "0x2B28F28", Offset = "0x2B28F28", VA = "0x2B28F28")]
	public static void Recenter()
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0x2B29044", Offset = "0x2B29044", VA = "0x2B29044")]
	public static void SetViewerProfile(string viewerProfileUri)
	{
	}

	[PreserveSig]
	[Token(Token = "0x60003FD")]
	[Address(RVA = "0x2B28FC4", Offset = "0x2B28FC4", VA = "0x2B28FC4")]
	private static extern void gvr_reset_tracking(IntPtr gvr_context);

	[PreserveSig]
	[Token(Token = "0x60003FE")]
	[Address(RVA = "0x2B290E8", Offset = "0x2B290E8", VA = "0x2B290E8")]
	private static extern void gvr_set_default_viewer_profile(IntPtr gvr_context, string viewer_profile_uri);

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0x2B2918C", Offset = "0x2B2918C", VA = "0x2B2918C")]
	public GvrCardboardHelpers()
	{
	}
}
[Token(Token = "0x200004D")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x1465EAC", Offset = "0x1465EAC")]
public class GvrEditorEmulator : MonoBehaviour
{
	[Token(Token = "0x6000400")]
	[Address(RVA = "0x2B2E3E0", Offset = "0x2B2E3E0", VA = "0x2B2E3E0")]
	public GvrEditorEmulator()
	{
	}
}
[Token(Token = "0x200004E")]
public static class GvrSettings
{
	[Token(Token = "0x20004B5")]
	public enum ViewerPlatformType
	{
		[Token(Token = "0x4001E42")]
		Error = -1,
		[Token(Token = "0x4001E43")]
		Cardboard,
		[Token(Token = "0x4001E44")]
		Daydream
	}

	[Token(Token = "0x20004B6")]
	public enum UserPrefsHandedness
	{
		[Token(Token = "0x4001E46")]
		Error = -1,
		[Token(Token = "0x4001E47")]
		Right,
		[Token(Token = "0x4001E48")]
		Left
	}

	[Token(Token = "0x20004B7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1469D2C", Offset = "0x1469D2C")]
	private sealed class <>c__DisplayClass18_0
	{
		[Token(Token = "0x4001E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AndroidJavaObject androidWindow;

		[Token(Token = "0x4001E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool enabled;

		[Token(Token = "0x60022FE")]
		[Address(RVA = "0x29A8F1C", Offset = "0x29A8F1C", VA = "0x29A8F1C")]
		public <>c__DisplayClass18_0()
		{
		}

		[Token(Token = "0x60022FF")]
		[Address(RVA = "0x29A8F24", Offset = "0x29A8F24", VA = "0x29A8F24")]
		internal void <SetSustainedPerformanceMode>b__0()
		{
		}
	}

	[Token(Token = "0x4000214")]
	public const string VR_SDK_NONE = "None";

	[Token(Token = "0x4000215")]
	public const string VR_SDK_DAYDREAM = "daydream";

	[Token(Token = "0x4000216")]
	public const string VR_SDK_CARDBOARD = "cardboard";

	[Token(Token = "0x4000217")]
	private const string METHOD_GET_WINDOW = "getWindow";

	[Token(Token = "0x4000218")]
	private const string METHOD_RUN_ON_UI_THREAD = "runOnUiThread";

	[Token(Token = "0x4000219")]
	private const string METHOD_SET_SUSTAINED_PERFORMANCE_MODE = "setSustainedPerformanceMode";

	[Token(Token = "0x170000E8")]
	public static ViewerPlatformType ViewerPlatform
	{
		[Token(Token = "0x6000401")]
		[Address(RVA = "0x29A86D0", Offset = "0x29A86D0", VA = "0x29A86D0")]
		get
		{
			return default(ViewerPlatformType);
		}
	}

	[Token(Token = "0x170000E9")]
	public static bool SustainedPerformanceMode
	{
		[Token(Token = "0x6000402")]
		[Address(RVA = "0x29A8A18", Offset = "0x29A8A18", VA = "0x29A8A18")]
		set
		{
		}
	}

	[Token(Token = "0x170000EA")]
	public static UserPrefsHandedness Handedness
	{
		[Token(Token = "0x6000403")]
		[Address(RVA = "0x29A8D0C", Offset = "0x29A8D0C", VA = "0x29A8D0C")]
		get
		{
			return default(UserPrefsHandedness);
		}
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0x29A8738", Offset = "0x29A8738", VA = "0x29A8738")]
	public static IntPtr GetValidGvrNativePtrOrLogError()
	{
		return default(IntPtr);
	}

	[PreserveSig]
	[Token(Token = "0x6000405")]
	[Address(RVA = "0x29A8DFC", Offset = "0x29A8DFC", VA = "0x29A8DFC")]
	internal static extern IntPtr gvr_get_user_prefs(IntPtr gvrContextPtr);

	[PreserveSig]
	[Token(Token = "0x6000406")]
	[Address(RVA = "0x29A8998", Offset = "0x29A8998", VA = "0x29A8998")]
	private static extern int gvr_get_viewer_type(IntPtr gvrContextPtr);

	[PreserveSig]
	[Token(Token = "0x6000407")]
	[Address(RVA = "0x29A8E7C", Offset = "0x29A8E7C", VA = "0x29A8E7C")]
	private static extern int gvr_user_prefs_get_controller_handedness(IntPtr gvrUserPrefsPtr);

	[Token(Token = "0x6000408")]
	[Address(RVA = "0x29A8A20", Offset = "0x29A8A20", VA = "0x29A8A20")]
	private static void SetSustainedPerformanceMode(bool enabled)
	{
	}
}
[Token(Token = "0x200004F")]
public class GvrUnitySdkVersion
{
	[Token(Token = "0x400021A")]
	public const string GVR_SDK_VERSION = "1.200.1";

	[Token(Token = "0x400021B")]
	private const string VERSION_HEADER = "GVR SDK for Unity version: ";

	[Token(Token = "0x6000409")]
	[Address(RVA = "0x29AA714", Offset = "0x29AA714", VA = "0x29AA714")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x147F498", Offset = "0x147F498")]
	private static void LogGvrUnitySdkVersion()
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0x29AA780", Offset = "0x29AA780", VA = "0x29AA780")]
	public GvrUnitySdkVersion()
	{
	}
}
[Token(Token = "0x2000050")]
public enum GvrErrorType
{
	[Token(Token = "0x400021D")]
	None = 0,
	[Token(Token = "0x400021E")]
	ControllerCreateFailed = 2,
	[Token(Token = "0x400021F")]
	NoFrameAavilable = 3,
	[Token(Token = "0x4000220")]
	NoEventAvailable = 1000000,
	[Token(Token = "0x4000221")]
	NoPropertyAvailable = 1000001
}
[Token(Token = "0x2000051")]
public enum GvrEventType
{
	[Token(Token = "0x4000223")]
	Invalid = -1,
	[Token(Token = "0x4000224")]
	Recenter = 1,
	[Token(Token = "0x4000225")]
	SafetyRegionExit = 2,
	[Token(Token = "0x4000226")]
	SafetyRegionEnter = 3
}
[Token(Token = "0x2000052")]
public enum GvrRecenterEventType
{
	[Token(Token = "0x4000228")]
	Invalid = -1,
	[Token(Token = "0x4000229")]
	RecenterEventRestart = 1,
	[Token(Token = "0x400022A")]
	RecenterEventAligned = 2
}
[Token(Token = "0x2000053")]
public enum GvrRecenterFlags
{
	[Token(Token = "0x400022C")]
	None
}
[Token(Token = "0x2000054")]
public enum GvrSafetyRegionType
{
	[Token(Token = "0x400022E")]
	None,
	[Token(Token = "0x400022F")]
	Cylinder
}
[Token(Token = "0x2000055")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x1465EE4", Offset = "0x1465EE4")]
public class GvrHeadset : MonoBehaviour
{
	[Token(Token = "0x20004B8")]
	public delegate void OnSafetyRegionEvent(bool enter);

	[Token(Token = "0x20004B9")]
	public delegate void OnRecenterEvent(GvrRecenterEventType recenterType, GvrRecenterFlags recenterFlags, Vector3 recenteredPosition, Quaternion recenteredOrientation);

	[Token(Token = "0x20004BA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1469D3C", Offset = "0x1469D3C")]
	private sealed class <EndOfFrame>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GvrHeadset <>4__this;

		[Token(Token = "0x1700044D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600230B")]
			[Address(RVA = "0x2B3017C", Offset = "0x2B3017C", VA = "0x2B3017C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700044E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600230D")]
			[Address(RVA = "0x2B301E4", Offset = "0x2B301E4", VA = "0x2B301E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002308")]
		[Address(RVA = "0x2B300D4", Offset = "0x2B300D4", VA = "0x2B300D4")]
		[DebuggerHidden]
		public <EndOfFrame>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x6002309")]
		[Address(RVA = "0x2B30100", Offset = "0x2B30100", VA = "0x2B30100", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600230A")]
		[Address(RVA = "0x2B30104", Offset = "0x2B30104", VA = "0x2B30104", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600230C")]
		[Address(RVA = "0x2B30184", Offset = "0x2B30184", VA = "0x2B30184", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GvrHeadset instance;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IHeadsetProvider headsetProvider;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private HeadsetState headsetState;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private IEnumerator headsetUpdate;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private WaitForEndOfFrame waitForEndOfFrame;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private OnSafetyRegionEvent safetyRegionDelegate;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private OnRecenterEvent recenterDelegate;

	[Token(Token = "0x170000EB")]
	public static bool SupportsPositionalTracking
	{
		[Token(Token = "0x6000410")]
		[Address(RVA = "0x2B2EE4C", Offset = "0x2B2EE4C", VA = "0x2B2EE4C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000EC")]
	public bool ProvidesEditorEmulator
	{
		[Token(Token = "0x6000411")]
		[Address(RVA = "0x2B2F044", Offset = "0x2B2F044", VA = "0x2B2F044")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1400001D")]
	public static event OnSafetyRegionEvent OnSafetyRegionChange
	{
		[Token(Token = "0x600040C")]
		[Address(RVA = "0x2B2EA6C", Offset = "0x2B2EA6C", VA = "0x2B2EA6C")]
		add
		{
		}
		[Token(Token = "0x600040D")]
		[Address(RVA = "0x2B2EB64", Offset = "0x2B2EB64", VA = "0x2B2EB64")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001E")]
	public static event OnRecenterEvent OnRecenter
	{
		[Token(Token = "0x600040E")]
		[Address(RVA = "0x2B2EC5C", Offset = "0x2B2EC5C", VA = "0x2B2EC5C")]
		add
		{
		}
		[Token(Token = "0x600040F")]
		[Address(RVA = "0x2B2ED54", Offset = "0x2B2ED54", VA = "0x2B2ED54")]
		remove
		{
		}
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0x2B2E9F0", Offset = "0x2B2E9F0", VA = "0x2B2E9F0")]
	protected GvrHeadset()
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0x2B2F0C8", Offset = "0x2B2F0C8", VA = "0x2B2F0C8")]
	[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x147F4AC", Offset = "0x147F4AC")]
	public static bool TryGetFloorHeight(ref float floorHeight)
	{
		return default(bool);
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0x2B2F1F4", Offset = "0x2B2F1F4", VA = "0x2B2F1F4")]
	public static bool TryGetRecenterTransform(ref Vector3 position, ref Quaternion rotation)
	{
		return default(bool);
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0x2B2F328", Offset = "0x2B2F328", VA = "0x2B2F328")]
	public static bool TryGetSafetyRegionType(ref GvrSafetyRegionType safetyType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0x2B2F454", Offset = "0x2B2F454", VA = "0x2B2F454")]
	public static bool TryGetSafetyCylinderInnerRadius(ref float innerRadius)
	{
		return default(bool);
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0x2B2F580", Offset = "0x2B2F580", VA = "0x2B2F580")]
	public static bool TryGetSafetyCylinderOuterRadius(ref float outerRadius)
	{
		return default(bool);
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0x2B2F6AC", Offset = "0x2B2F6AC", VA = "0x2B2F6AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0x2B2F7C8", Offset = "0x2B2F7C8", VA = "0x2B2F7C8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0x2B2F898", Offset = "0x2B2F898", VA = "0x2B2F898")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0x2B2F8D8", Offset = "0x2B2F8D8", VA = "0x2B2F8D8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0x2B2F940", Offset = "0x2B2F940", VA = "0x2B2F940")]
	private void UpdateStandalone()
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0x2B2F81C", Offset = "0x2B2F81C", VA = "0x2B2F81C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x147F4F8", Offset = "0x147F4F8")]
	private IEnumerator EndOfFrame()
	{
		return null;
	}
}
[Token(Token = "0x2000056")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x1465F1C", Offset = "0x1465F1C")]
public class InstantPreviewHelper : MonoBehaviour
{
	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string adbPath;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string aaptPath;

	[Token(Token = "0x600041D")]
	[Address(RVA = "0x22067C4", Offset = "0x22067C4", VA = "0x22067C4")]
	private int[] GetIntValuesFromString(string DirPath)
	{
		return null;
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0x2206928", Offset = "0x2206928", VA = "0x2206928")]
	private string GetLatestBuildToolsDir(string sdkRoot)
	{
		return null;
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0x2206B8C", Offset = "0x2206B8C", VA = "0x2206B8C")]
	public InstantPreviewHelper()
	{
	}
}
[Token(Token = "0x2000057")]
public enum GvrKeyboardEvent
{
	[Token(Token = "0x400023A")]
	GVR_KEYBOARD_ERROR_UNKNOWN,
	[Token(Token = "0x400023B")]
	GVR_KEYBOARD_ERROR_SERVICE_NOT_CONNECTED,
	[Token(Token = "0x400023C")]
	GVR_KEYBOARD_ERROR_NO_LOCALES_FOUND,
	[Token(Token = "0x400023D")]
	GVR_KEYBOARD_ERROR_SDK_LOAD_FAILED,
	[Token(Token = "0x400023E")]
	GVR_KEYBOARD_SHOWN,
	[Token(Token = "0x400023F")]
	GVR_KEYBOARD_HIDDEN,
	[Token(Token = "0x4000240")]
	GVR_KEYBOARD_TEXT_UPDATED,
	[Token(Token = "0x4000241")]
	GVR_KEYBOARD_TEXT_COMMITTED
}
[Token(Token = "0x2000058")]
public enum GvrKeyboardError
{
	[Token(Token = "0x4000243")]
	UNKNOWN,
	[Token(Token = "0x4000244")]
	SERVICE_NOT_CONNECTED,
	[Token(Token = "0x4000245")]
	NO_LOCALES_FOUND,
	[Token(Token = "0x4000246")]
	SDK_LOAD_FAILED
}
[Token(Token = "0x2000059")]
public enum GvrKeyboardInputMode
{
	[Token(Token = "0x4000248")]
	DEFAULT,
	[Token(Token = "0x4000249")]
	NUMERIC
}
[Token(Token = "0x200005A")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x1465F68", Offset = "0x1465F68")]
public class GvrKeyboard : MonoBehaviour
{
	[Token(Token = "0x20004BB")]
	public delegate void StandardCallback();

	[Token(Token = "0x20004BC")]
	public delegate void EditTextCallback(string edit_text);

	[Token(Token = "0x20004BD")]
	public delegate void ErrorCallback(GvrKeyboardError err);

	[Token(Token = "0x20004BE")]
	public delegate void KeyboardCallback(IntPtr closure, GvrKeyboardEvent evt);

	[Token(Token = "0x20004BF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1469D4C", Offset = "0x1469D4C")]
	private sealed class <Executer>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GvrKeyboard <>4__this;

		[Token(Token = "0x1700044F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002321")]
			[Address(RVA = "0x2B335D4", Offset = "0x2B335D4", VA = "0x2B335D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000450")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002323")]
			[Address(RVA = "0x2B3363C", Offset = "0x2B3363C", VA = "0x2B3363C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600231E")]
		[Address(RVA = "0x2B32824", Offset = "0x2B32824", VA = "0x2B32824")]
		[DebuggerHidden]
		public <Executer>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x600231F")]
		[Address(RVA = "0x2B333AC", Offset = "0x2B333AC", VA = "0x2B333AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002320")]
		[Address(RVA = "0x2B333B0", Offset = "0x2B333B0", VA = "0x2B333B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002322")]
		[Address(RVA = "0x2B335DC", Offset = "0x2B335DC", VA = "0x2B335DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GvrKeyboardDelegateBase keyboardDelegate;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GvrKeyboardInputMode inputMode;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool useRecommended;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float distance;

	[Token(Token = "0x400024E")]
	private const float EXECUTOR_WAIT = 0.01f;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GvrKeyboard instance;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static IKeyboardProvider keyboardProvider;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static List<GvrKeyboardEvent> threadSafeCallbacks;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static object callbacksLock;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private KeyboardState keyboardState;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private IEnumerator keyboardUpdate;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ErrorCallback errorCallback;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private StandardCallback showCallback;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private StandardCallback hideCallback;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private EditTextCallback updateCallback;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private EditTextCallback enterCallback;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool isRight;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	private bool isKeyboardHidden;

	[Token(Token = "0x170000ED")]
	public string EditorText
	{
		[Token(Token = "0x6000420")]
		[Address(RVA = "0x2B30A74", Offset = "0x2B30A74", VA = "0x2B30A74")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000421")]
		[Address(RVA = "0x2B30B5C", Offset = "0x2B30B5C", VA = "0x2B30B5C")]
		set
		{
		}
	}

	[Token(Token = "0x170000EE")]
	public GvrKeyboardInputMode Mode
	{
		[Token(Token = "0x6000422")]
		[Address(RVA = "0x2B30C3C", Offset = "0x2B30C3C", VA = "0x2B30C3C")]
		get
		{
			return default(GvrKeyboardInputMode);
		}
	}

	[Token(Token = "0x170000EF")]
	public bool IsValid
	{
		[Token(Token = "0x6000423")]
		[Address(RVA = "0x2B30D1C", Offset = "0x2B30D1C", VA = "0x2B30D1C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000F0")]
	public bool IsReady
	{
		[Token(Token = "0x6000424")]
		[Address(RVA = "0x2B30E04", Offset = "0x2B30E04", VA = "0x2B30E04")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000F1")]
	public Matrix4x4 WorldMatrix
	{
		[Token(Token = "0x6000425")]
		[Address(RVA = "0x2B30EEC", Offset = "0x2B30EEC", VA = "0x2B30EEC")]
		get
		{
			return default(Matrix4x4);
		}
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0x2B31014", Offset = "0x2B31014", VA = "0x2B31014")]
	public void ClearText()
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0x2B3112C", Offset = "0x2B3112C", VA = "0x2B3112C")]
	public void Show()
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0x2B318A8", Offset = "0x2B318A8", VA = "0x2B318A8")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0x2B319B0", Offset = "0x2B319B0", VA = "0x2B319B0")]
	public void OnPointerClick(BaseEventData data)
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0x2B30960", Offset = "0x2B30960", VA = "0x2B30960")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x147F55C", Offset = "0x147F55C")]
	private static void OnKeyboardCallback(IntPtr closure, GvrKeyboardEvent keyboardEvent)
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0x2B319C0", Offset = "0x2B319C0", VA = "0x2B319C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0x2B31B3C", Offset = "0x2B31B3C", VA = "0x2B31B3C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0x2B31BCC", Offset = "0x2B31BCC", VA = "0x2B31BCC")]
	private void Start()
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0x2B3210C", Offset = "0x2B3210C", VA = "0x2B3210C")]
	private void Update()
	{
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0x2B3230C", Offset = "0x2B3230C", VA = "0x2B3230C")]
	private void OnRenderObject()
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0x2B325CC", Offset = "0x2B325CC", VA = "0x2B325CC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0x2B32684", Offset = "0x2B32684", VA = "0x2B32684")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0x2B32690", Offset = "0x2B32690", VA = "0x2B32690")]
	private void OnApplicationPause(bool paused)
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0x2B32608", Offset = "0x2B32608", VA = "0x2B32608")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x147F5C0", Offset = "0x147F5C0")]
	private IEnumerator Executer()
	{
		return null;
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0x2B32850", Offset = "0x2B32850", VA = "0x2B32850")]
	private void PoolKeyboardCallbacks(GvrKeyboardEvent keyboardEvent)
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0x2B33274", Offset = "0x2B33274", VA = "0x2B33274")]
	private void KeyboardDelegate_KeyboardShown(object sender, EventArgs e)
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0x2B3327C", Offset = "0x2B3327C", VA = "0x2B3327C")]
	private void KeyboardDelegate_KeyboardHidden(object sender, EventArgs e)
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0x2B315F0", Offset = "0x2B315F0", VA = "0x2B315F0")]
	private Matrix4x4 GetKeyboardObjectMatrix(Vector3 position)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0x2B33288", Offset = "0x2B33288", VA = "0x2B33288")]
	public GvrKeyboard()
	{
	}
}
[Token(Token = "0x200005B")]
public abstract class GvrKeyboardDelegateBase : MonoBehaviour
{
	[Token(Token = "0x1400001F")]
	[method: Token(Token = "0x600043A")]
	[method: AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147F624", Offset = "0x147F624")]
	public abstract event EventHandler KeyboardHidden;

	[Token(Token = "0x14000020")]
	[method: Token(Token = "0x600043C")]
	[method: AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147F644", Offset = "0x147F644")]
	public abstract event EventHandler KeyboardShown;

	[Token(Token = "0x600043E")]
	public abstract void OnKeyboardShow();

	[Token(Token = "0x600043F")]
	public abstract void OnKeyboardHide();

	[Token(Token = "0x6000440")]
	public abstract void OnKeyboardUpdate(string edit_text);

	[Token(Token = "0x6000441")]
	public abstract void OnKeyboardEnterPressed(string edit_text);

	[Token(Token = "0x6000442")]
	public abstract void OnKeyboardError(GvrKeyboardError errorCode);

	[Token(Token = "0x6000443")]
	[Address(RVA = "0x2B33A78", Offset = "0x2B33A78", VA = "0x2B33A78")]
	protected GvrKeyboardDelegateBase()
	{
	}
}
[Token(Token = "0x200005C")]
public class GvrKeyboardIntent
{
	[Token(Token = "0x20004C0")]
	internal class KeyboardCallback : AndroidJavaProxy
	{
		[Token(Token = "0x6002324")]
		[Address(RVA = "0x2B33DA0", Offset = "0x2B33DA0", VA = "0x2B33DA0")]
		internal KeyboardCallback()
		{
		}

		[Token(Token = "0x6002325")]
		[Address(RVA = "0x2B33E14", Offset = "0x2B33E14", VA = "0x2B33E14")]
		private void onPlayStoreResult()
		{
		}
	}

	[Token(Token = "0x400025C")]
	private const string FRAGMENT_CLASSNAME = "com.google.gvr.keyboardsupport.KeyboardFragment";

	[Token(Token = "0x400025D")]
	private const string CALLBACK_CLASSNAME = "com.google.gvr.keyboardsupport.KeyboardFragment$KeyboardCallback";

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GvrKeyboardIntent theInstance;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private AndroidJavaObject keyboardFragment;

	[Token(Token = "0x170000F2")]
	public static GvrKeyboardIntent Instance
	{
		[Token(Token = "0x6000444")]
		[Address(RVA = "0x2B33A80", Offset = "0x2B33A80", VA = "0x2B33A80")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0x2B33CB8", Offset = "0x2B33CB8", VA = "0x2B33CB8")]
	public void LaunchPlayStore()
	{
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0x2B33B70", Offset = "0x2B33B70", VA = "0x2B33B70")]
	protected bool InitializeFragment()
	{
		return default(bool);
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0x2B33B68", Offset = "0x2B33B68", VA = "0x2B33B68")]
	public GvrKeyboardIntent()
	{
	}
}
[Token(Token = "0x200005D")]
public class KeyboardState
{
	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal string editorText;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal GvrKeyboardInputMode mode;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	internal bool isValid;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	internal bool isReady;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	internal Matrix4x4 worldMatrix;

	[Token(Token = "0x6000448")]
	[Address(RVA = "0x220778C", Offset = "0x220778C", VA = "0x220778C")]
	public void CopyFrom(KeyboardState other)
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x22077EC", Offset = "0x22077EC", VA = "0x22077EC")]
	public KeyboardState()
	{
	}
}
[Token(Token = "0x200005E")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x1465FA0", Offset = "0x1465FA0")]
public class GvrPermissionsRequester
{
	[Token(Token = "0x20004C1")]
	public class PermissionStatus
	{
		[Token(Token = "0x4001E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147A1A8", Offset = "0x147A1A8")]
		private string <Name>k__BackingField;

		[Token(Token = "0x4001E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147A1B8", Offset = "0x147A1B8")]
		private bool <Granted>k__BackingField;

		[Token(Token = "0x17000451")]
		public string Name
		{
			[Token(Token = "0x6002327")]
			[Address(RVA = "0x2B36264", Offset = "0x2B36264", VA = "0x2B36264")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14875D4", Offset = "0x14875D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002328")]
			[Address(RVA = "0x2B3626C", Offset = "0x2B3626C", VA = "0x2B3626C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14875E4", Offset = "0x14875E4")]
			set
			{
			}
		}

		[Token(Token = "0x17000452")]
		public bool Granted
		{
			[Token(Token = "0x6002329")]
			[Address(RVA = "0x2B36274", Offset = "0x2B36274", VA = "0x2B36274")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14875F4", Offset = "0x14875F4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600232A")]
			[Address(RVA = "0x2B3627C", Offset = "0x2B3627C", VA = "0x2B3627C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1487604", Offset = "0x1487604")]
			set
			{
			}
		}

		[Token(Token = "0x6002326")]
		[Address(RVA = "0x2B36218", Offset = "0x2B36218", VA = "0x2B36218")]
		public PermissionStatus(string name, bool granted)
		{
		}
	}

	[Token(Token = "0x20004C2")]
	internal class PermissionsCallback : AndroidJavaProxy
	{
		[Token(Token = "0x4001E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string[] permissionNames;

		[Token(Token = "0x4001E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Action<PermissionStatus[]> callback;

		[Token(Token = "0x600232B")]
		[Address(RVA = "0x2B36174", Offset = "0x2B36174", VA = "0x2B36174")]
		internal PermissionsCallback(string[] requestedPermissions, Action<PermissionStatus[]> callback)
		{
		}

		[Token(Token = "0x600232C")]
		[Address(RVA = "0x2B36288", Offset = "0x2B36288", VA = "0x2B36288")]
		private void onRequestPermissionResult(bool allPermissionsGranted)
		{
		}
	}

	[Token(Token = "0x4000265")]
	private const string FRAGMENT_CLASSNAME = "com.google.gvr.permissionsupport.PermissionsFragment";

	[Token(Token = "0x4000266")]
	private const string CALLBACK_CLASSNAME = "com.google.gvr.permissionsupport.PermissionsFragment$PermissionsCallback";

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GvrPermissionsRequester theInstance;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private AndroidJavaObject permissionsFragment;

	[Token(Token = "0x170000F3")]
	public static GvrPermissionsRequester Instance
	{
		[Token(Token = "0x600044A")]
		[Address(RVA = "0x2B35A74", Offset = "0x2B35A74", VA = "0x2B35A74")]
		[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x147F664", Offset = "0x147F664")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x2B35CAC", Offset = "0x2B35CAC", VA = "0x2B35CAC")]
	[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x147F6AC", Offset = "0x147F6AC")]
	public bool IsPermissionGranted(string permission)
	{
		return default(bool);
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x2B35D88", Offset = "0x2B35D88", VA = "0x2B35D88")]
	[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x147F6E0", Offset = "0x147F6E0")]
	public bool[] HasPermissionsGranted(string[] permissions)
	{
		return null;
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x2B35F04", Offset = "0x2B35F04", VA = "0x2B35F04")]
	public bool ShouldShowRational(string permission)
	{
		return default(bool);
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x2B36014", Offset = "0x2B36014", VA = "0x2B36014")]
	public void RequestPermissions(string[] permissionArray, Action<PermissionStatus[]> callback)
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x2B35B64", Offset = "0x2B35B64", VA = "0x2B35B64")]
	protected bool InitializeFragment()
	{
		return default(bool);
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x2B35B5C", Offset = "0x2B35B5C", VA = "0x2B35B5C")]
	public GvrPermissionsRequester()
	{
	}
}
[Token(Token = "0x200005F")]
public class Pose3D
{
	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly Matrix4x4 FLIP_Z;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146C4A0", Offset = "0x146C4A0")]
	private Vector3 <Position>k__BackingField;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146C4B0", Offset = "0x146C4B0")]
	private Quaternion <Orientation>k__BackingField;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146C4C0", Offset = "0x146C4C0")]
	private Matrix4x4 <Matrix>k__BackingField;

	[Token(Token = "0x170000F4")]
	public Vector3 Position
	{
		[Token(Token = "0x6000454")]
		[Address(RVA = "0x20C0A8C", Offset = "0x20C0A8C", VA = "0x20C0A8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147F714", Offset = "0x147F714")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000455")]
		[Address(RVA = "0x20C0A98", Offset = "0x20C0A98", VA = "0x20C0A98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147F724", Offset = "0x147F724")]
		protected set
		{
		}
	}

	[Token(Token = "0x170000F5")]
	public Quaternion Orientation
	{
		[Token(Token = "0x6000456")]
		[Address(RVA = "0x20C0AA4", Offset = "0x20C0AA4", VA = "0x20C0AA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147F734", Offset = "0x147F734")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6000457")]
		[Address(RVA = "0x20C0AB0", Offset = "0x20C0AB0", VA = "0x20C0AB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147F744", Offset = "0x147F744")]
		protected set
		{
		}
	}

	[Token(Token = "0x170000F6")]
	public Matrix4x4 Matrix
	{
		[Token(Token = "0x6000458")]
		[Address(RVA = "0x20C0ABC", Offset = "0x20C0ABC", VA = "0x20C0ABC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147F754", Offset = "0x147F754")]
		get
		{
			return default(Matrix4x4);
		}
		[Token(Token = "0x6000459")]
		[Address(RVA = "0x20C0AD8", Offset = "0x20C0AD8", VA = "0x20C0AD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147F764", Offset = "0x147F764")]
		protected set
		{
		}
	}

	[Token(Token = "0x170000F7")]
	public Matrix4x4 RightHandedMatrix
	{
		[Token(Token = "0x600045A")]
		[Address(RVA = "0x20C0AF4", Offset = "0x20C0AF4", VA = "0x20C0AF4")]
		get
		{
			return default(Matrix4x4);
		}
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0x20C062C", Offset = "0x20C062C", VA = "0x20C062C")]
	public Pose3D()
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0x20C0724", Offset = "0x20C0724", VA = "0x20C0724")]
	public Pose3D(Vector3 position, Quaternion orientation)
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0x20C08D4", Offset = "0x20C08D4", VA = "0x20C08D4")]
	public Pose3D(Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x20C0B9C", Offset = "0x20C0B9C", VA = "0x20C0B9C")]
	public static Matrix4x4 FlipHandedness(Matrix4x4 matrix)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0x20C07A4", Offset = "0x20C07A4", VA = "0x20C07A4")]
	protected void Set(Vector3 position, Quaternion orientation)
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0x20C0920", Offset = "0x20C0920", VA = "0x20C0920")]
	protected void Set(Matrix4x4 matrix)
	{
	}
}
[Token(Token = "0x2000060")]
public class MutablePose3D : Pose3D
{
	[Token(Token = "0x600045F")]
	[Address(RVA = "0x1D8E688", Offset = "0x1D8E688", VA = "0x1D8E688")]
	public new void Set(Vector3 position, Quaternion orientation)
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0x1D8E690", Offset = "0x1D8E690", VA = "0x1D8E690")]
	public new void Set(Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0x1D8E6C4", Offset = "0x1D8E6C4", VA = "0x1D8E6C4")]
	public void SetRightHanded(Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0x1D8E788", Offset = "0x1D8E788", VA = "0x1D8E788")]
	public MutablePose3D()
	{
	}
}
[Token(Token = "0x2000061")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x1465FD8", Offset = "0x1465FD8")]
public class GvrDropdown : Dropdown
{
	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private GameObject currentBlocker;

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x2B2DF58", Offset = "0x2B2DF58", VA = "0x2B2DF58", Slot = "42")]
	public override void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x2B2E028", Offset = "0x2B2E028", VA = "0x2B2E028", Slot = "43")]
	public override void OnSubmit(BaseEventData eventData)
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x2B2E050", Offset = "0x2B2E050", VA = "0x2B2E050", Slot = "45")]
	protected override GameObject CreateBlocker(Canvas rootCanvas)
	{
		return null;
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x2B2E088", Offset = "0x2B2E088", VA = "0x2B2E088", Slot = "47")]
	protected override GameObject CreateDropdownList(GameObject template)
	{
		return null;
	}

	[Token(Token = "0x6000467")]
	private static T GetOrAddComponent<T>(GameObject go, out bool addedComponent) where T : Component
	{
		return null;
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0x2B2DF80", Offset = "0x2B2DF80", VA = "0x2B2DF80")]
	private void FixTemplateAndBlockerRaycasters()
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0x2B2E0C4", Offset = "0x2B2E0C4", VA = "0x2B2E0C4")]
	private void FixRaycaster(GameObject go, bool shouldCopyProperties)
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0x2B2E20C", Offset = "0x2B2E20C", VA = "0x2B2E20C")]
	private GvrPointerGraphicRaycaster GetTemplateRaycaster()
	{
		return null;
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0x2B2E2A8", Offset = "0x2B2E2A8", VA = "0x2B2E2A8")]
	private void CopyRaycasterProperties(GvrPointerGraphicRaycaster source, GvrPointerGraphicRaycaster dest)
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0x2B2E378", Offset = "0x2B2E378", VA = "0x2B2E378")]
	public GvrDropdown()
	{
	}
}
[Token(Token = "0x2000062")]
public static class GvrActivityHelper
{
	[Token(Token = "0x400026E")]
	public const string GVR_DLL_NAME = "gvr";

	[Token(Token = "0x400026F")]
	public const string GVR_SHIM_DLL_NAME = "gvrshim";

	[Token(Token = "0x4000270")]
	public const string PACKAGE_UNITY_PLAYER = "com.unity3d.player.UnityPlayer";

	[Token(Token = "0x600046D")]
	[Address(RVA = "0x2B25110", Offset = "0x2B25110", VA = "0x2B25110")]
	public static AndroidJavaObject GetActivity()
	{
		return null;
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0x2B25280", Offset = "0x2B25280", VA = "0x2B25280")]
	public static AndroidJavaObject GetApplicationContext(AndroidJavaObject activity)
	{
		return null;
	}
}
[Token(Token = "0x2000063")]
public class GvrDaydreamApi : IDisposable
{
	[Token(Token = "0x20004C3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1469D5C", Offset = "0x1469D5C")]
	private sealed class <>c__DisplayClass12_0
	{
		[Token(Token = "0x4001E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AndroidJavaObject context;

		[Token(Token = "0x4001E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action<bool> callback;

		[Token(Token = "0x600232D")]
		[Address(RVA = "0x2B2DA8C", Offset = "0x2B2DA8C", VA = "0x2B2DA8C")]
		public <>c__DisplayClass12_0()
		{
		}

		[Token(Token = "0x600232E")]
		[Address(RVA = "0x2B2DC24", Offset = "0x2B2DC24", VA = "0x2B2DC24")]
		internal void <CreateAsync>b__0()
		{
		}
	}

	[Token(Token = "0x20004C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1469D6C", Offset = "0x1469D6C")]
	private sealed class <>c__DisplayClass14_0
	{
		[Token(Token = "0x4001E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<bool> callback;

		[Token(Token = "0x600232F")]
		[Address(RVA = "0x2B2DBC8", Offset = "0x2B2DBC8", VA = "0x2B2DBC8")]
		public <>c__DisplayClass14_0()
		{
		}

		[Token(Token = "0x6002330")]
		[Address(RVA = "0x2B2DE0C", Offset = "0x2B2DE0C", VA = "0x2B2DE0C")]
		internal void <LaunchVrHomeAsync>b__0(bool success)
		{
		}
	}

	[Token(Token = "0x4000271")]
	private const string METHOD_CREATE = "create";

	[Token(Token = "0x4000272")]
	private const string METHOD_LAUNCH_VR_HOMESCREEN = "launchVrHomescreen";

	[Token(Token = "0x4000273")]
	private const string METHOD_RUN_ON_UI_THREAD = "runOnUiThread";

	[Token(Token = "0x4000274")]
	private const string PACKAGE_DAYDREAM_API = "com.google.vr.ndk.base.DaydreamApi";

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GvrDaydreamApi instance;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private AndroidJavaObject daydreamApiObject;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AndroidJavaClass daydreamApiClass;

	[Token(Token = "0x170000F8")]
	public static AndroidJavaObject JavaInstance
	{
		[Token(Token = "0x600046F")]
		[Address(RVA = "0x2B2D67C", Offset = "0x2B2D67C", VA = "0x2B2D67C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000F9")]
	public static bool IsCreated
	{
		[Token(Token = "0x6000470")]
		[Address(RVA = "0x2B2D754", Offset = "0x2B2D754", VA = "0x2B2D754")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x2B2D7BC", Offset = "0x2B2D7BC", VA = "0x2B2D7BC")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x147F774", Offset = "0x147F774")]
	public static void Create()
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x2B2D7C4", Offset = "0x2B2D7C4", VA = "0x2B2D7C4")]
	public static void CreateAsync(Action<bool> callback)
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0x2B2DB14", Offset = "0x2B2DB14", VA = "0x2B2DB14")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x147F7AC", Offset = "0x147F7AC")]
	public static void LaunchVrHome()
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0x2B2DB1C", Offset = "0x2B2DB1C", VA = "0x2B2DB1C")]
	public static void LaunchVrHomeAsync(Action<bool> callback)
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0x2B2DBD0", Offset = "0x2B2DBD0", VA = "0x2B2DBD0", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0x2B2D6E0", Offset = "0x2B2D6E0", VA = "0x2B2D6E0")]
	private static void EnsureCreated(Action<bool> callback)
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x2B2DA94", Offset = "0x2B2DA94", VA = "0x2B2DA94")]
	public GvrDaydreamApi()
	{
	}
}
[Token(Token = "0x2000064")]
public static class GvrIntent
{
	[Token(Token = "0x4000278")]
	private const string METHOD_GET_INTENT = "getIntent";

	[Token(Token = "0x4000279")]
	private const string METHOD_HASH_CODE = "hashCode";

	[Token(Token = "0x400027A")]
	private const string METHOD_INTENT_GET_DATA_STRING = "getDataString";

	[Token(Token = "0x400027B")]
	private const string METHOD_INTENT_GET_BOOLEAN_EXTRA = "getBooleanExtra";

	[Token(Token = "0x400027C")]
	private const string EXTRA_VR_LAUNCH = "android.intent.extra.VR_LAUNCH";

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x2B303AC", Offset = "0x2B303AC", VA = "0x2B303AC")]
	public static string GetData()
	{
		return null;
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0x2B306A4", Offset = "0x2B306A4", VA = "0x2B306A4")]
	public static bool IsLaunchedFromVr()
	{
		return default(bool);
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x2B30820", Offset = "0x2B30820", VA = "0x2B30820")]
	public static int GetIntentHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0x2B304E4", Offset = "0x2B304E4", VA = "0x2B304E4")]
	private static AndroidJavaObject GetIntent()
	{
		return null;
	}
}
[Token(Token = "0x2000065")]
public static class GvrMathHelpers
{
	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static MutablePose3D transientPose;

	[Token(Token = "0x600047C")]
	[Address(RVA = "0x2B352F0", Offset = "0x2B352F0", VA = "0x2B352F0")]
	public static Vector3 GetIntersectionPosition(Camera cam, RaycastResult raycastResult)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0x2B35490", Offset = "0x2B35490", VA = "0x2B35490")]
	public static Vector2 NormalizedCartesianToSpherical(Vector3 cartCoords)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x2B34CFC", Offset = "0x2B34CFC", VA = "0x2B34CFC")]
	public static float EaseOutCubic(float min, float max, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x2B355A4", Offset = "0x2B355A4", VA = "0x2B355A4")]
	public static void GvrMatrixToUnitySpace(Matrix4x4 gvrMatrix, out Vector3 position, out Quaternion orientation)
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x2B35708", Offset = "0x2B35708", VA = "0x2B35708")]
	public static Matrix4x4 ConvertFloatArrayToMatrix(float[] floatArray)
	{
		return default(Matrix4x4);
	}
}
[Token(Token = "0x2000066")]
public static class GvrUIHelpers
{
	[Token(Token = "0x6000482")]
	[Address(RVA = "0x29A9320", Offset = "0x29A9320", VA = "0x29A9320")]
	public static float GetMetersToCanvasScale(Transform canvasObject)
	{
		return default(float);
	}
}
[Token(Token = "0x2000067")]
public static class GvrVRHelpers
{
	[Token(Token = "0x6000483")]
	[Address(RVA = "0x29AA788", Offset = "0x29AA788", VA = "0x29AA788")]
	public static Vector2 GetViewportCenter()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x29AA80C", Offset = "0x29AA80C", VA = "0x29AA80C")]
	public static Vector3 GetHeadForward()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0x29AA8F0", Offset = "0x29AA8F0", VA = "0x29AA8F0")]
	public static Quaternion GetHeadRotation()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0x29AA954", Offset = "0x29AA954", VA = "0x29AA954")]
	public static Vector3 GetHeadPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0x29AA9B8", Offset = "0x29AA9B8", VA = "0x29AA9B8")]
	public static float GetRecommendedMaxLaserDistance(GvrBasePointer.RaycastMode mode)
	{
		return default(float);
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0x29AA9D8", Offset = "0x29AA9D8", VA = "0x29AA9D8")]
	public static float GetRayIntersection(GvrBasePointer.RaycastMode mode)
	{
		return default(float);
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x29AA9F8", Offset = "0x29AA9F8", VA = "0x29AA9F8")]
	public static bool GetShrinkLaser(GvrBasePointer.RaycastMode mode)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000068")]
[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x1466010", Offset = "0x1466010")]
public class GvrVideoPlayerTexture : MonoBehaviour
{
	[Token(Token = "0x20004C5")]
	internal delegate void OnVideoEventCallback(IntPtr cbdata, int eventId);

	[Token(Token = "0x20004C6")]
	internal delegate void OnExceptionCallback(string type, string msg, IntPtr cbdata);

	[Token(Token = "0x20004C7")]
	public enum VideoType
	{
		[Token(Token = "0x4001E59")]
		Dash = 0,
		[Token(Token = "0x4001E5A")]
		HLS = 2,
		[Token(Token = "0x4001E5B")]
		Other = 3
	}

	[Token(Token = "0x20004C8")]
	public enum VideoResolution
	{
		[Token(Token = "0x4001E5D")]
		Lowest = 1,
		[Token(Token = "0x4001E5E")]
		_720 = 720,
		[Token(Token = "0x4001E5F")]
		_1080 = 1080,
		[Token(Token = "0x4001E60")]
		_2048 = 2048,
		[Token(Token = "0x4001E61")]
		Highest = 4096
	}

	[Token(Token = "0x20004C9")]
	public enum VideoPlayerState
	{
		[Token(Token = "0x4001E63")]
		Idle = 1,
		[Token(Token = "0x4001E64")]
		Preparing,
		[Token(Token = "0x4001E65")]
		Buffering,
		[Token(Token = "0x4001E66")]
		Ready,
		[Token(Token = "0x4001E67")]
		Ended
	}

	[Token(Token = "0x20004CA")]
	public enum VideoEvents
	{
		[Token(Token = "0x4001E69")]
		VideoReady = 1,
		[Token(Token = "0x4001E6A")]
		VideoStartPlayback,
		[Token(Token = "0x4001E6B")]
		VideoFormatChanged,
		[Token(Token = "0x4001E6C")]
		VideoSurfaceSet,
		[Token(Token = "0x4001E6D")]
		VideoSizeChanged
	}

	[Token(Token = "0x20004CB")]
	public enum StereoMode
	{
		[Token(Token = "0x4001E6F")]
		NoValue = -1,
		[Token(Token = "0x4001E70")]
		Mono,
		[Token(Token = "0x4001E71")]
		TopBottom,
		[Token(Token = "0x4001E72")]
		LeftRight
	}

	[Token(Token = "0x20004CC")]
	private enum RenderCommand
	{
		[Token(Token = "0x4001E74")]
		None = -1,
		[Token(Token = "0x4001E75")]
		InitializePlayer,
		[Token(Token = "0x4001E76")]
		UpdateVideo,
		[Token(Token = "0x4001E77")]
		RenderMono,
		[Token(Token = "0x4001E78")]
		RenderLeftEye,
		[Token(Token = "0x4001E79")]
		RenderRightEye,
		[Token(Token = "0x4001E7A")]
		Shutdown
	}

	[Token(Token = "0x20004CD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1469D7C", Offset = "0x1469D7C")]
	private sealed class <>c__DisplayClass118_0
	{
		[Token(Token = "0x4001E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GvrVideoPlayerTexture player;

		[Token(Token = "0x4001E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int eventId;

		[Token(Token = "0x6002339")]
		[Address(RVA = "0x29AE11C", Offset = "0x29AE11C", VA = "0x29AE11C")]
		public <>c__DisplayClass118_0()
		{
		}

		[Token(Token = "0x600233A")]
		[Address(RVA = "0x29AF220", Offset = "0x29AF220", VA = "0x29AF220")]
		internal void <InternalOnVideoEventCallback>b__0()
		{
		}
	}

	[Token(Token = "0x20004CE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1469D8C", Offset = "0x1469D8C")]
	private sealed class <>c__DisplayClass119_0
	{
		[Token(Token = "0x4001E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GvrVideoPlayerTexture player;

		[Token(Token = "0x4001E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string type;

		[Token(Token = "0x4001E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string msg;

		[Token(Token = "0x600233B")]
		[Address(RVA = "0x29AE124", Offset = "0x29AE124", VA = "0x29AE124")]
		public <>c__DisplayClass119_0()
		{
		}

		[Token(Token = "0x600233C")]
		[Address(RVA = "0x29AF240", Offset = "0x29AF240", VA = "0x29AF240")]
		internal void <InternalOnExceptionCallback>b__0()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20004CF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1469D9C", Offset = "0x1469D9C")]
	private sealed class <>c
	{
		[Token(Token = "0x4001E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<string, string> <>9__121_1;

		[Token(Token = "0x600233E")]
		[Address(RVA = "0x29AF174", Offset = "0x29AF174", VA = "0x29AF174")]
		public <>c()
		{
		}

		[Token(Token = "0x600233F")]
		[Address(RVA = "0x29AF17C", Offset = "0x29AF17C", VA = "0x29AF17C")]
		internal void <CreatePlayer>b__121_1(string type, string msg)
		{
		}
	}

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text statusText;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VideoType videoType;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string videoURL;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string videoContentID;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string videoProviderId;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public VideoResolution initialResolution;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool adjustAspectRatio;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	public bool useSecurePath;

	[Token(Token = "0x4000286")]
	private const string DLL_NAME = "gvrvideo";

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Queue<Action> executeOnMainThread;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private IntPtr videoPlayerPtr;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int videoPlayerEventBase;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Texture initialTexture;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Texture surfaceTexture;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float[] videoMatrixRaw;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Matrix4x4 videoMatrix;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int videoMatrixPropertyId;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private long lastVideoTimestamp;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool initialized;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int texWidth;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int texHeight;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private long lastBufferedPosition;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float framecount;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Renderer screen;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private IntPtr renderEventFunction;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool playOnResume;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private List<Action<int>> onEventCallbacks;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private List<Action<string, string>> onExceptionCallbacks;

	[Token(Token = "0x170000FA")]
	public bool VideoReady
	{
		[Token(Token = "0x600048A")]
		[Address(RVA = "0x29AB1CC", Offset = "0x29AB1CC", VA = "0x29AB1CC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000FB")]
	public long CurrentPosition
	{
		[Token(Token = "0x600048B")]
		[Address(RVA = "0x29AB2DC", Offset = "0x29AB2DC", VA = "0x29AB2DC")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x600048C")]
		[Address(RVA = "0x29AB3E4", Offset = "0x29AB3E4", VA = "0x29AB3E4")]
		set
		{
		}
	}

	[Token(Token = "0x170000FC")]
	public long VideoDuration
	{
		[Token(Token = "0x600048D")]
		[Address(RVA = "0x29AB4F4", Offset = "0x29AB4F4", VA = "0x29AB4F4")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x170000FD")]
	public long BufferedPosition
	{
		[Token(Token = "0x600048E")]
		[Address(RVA = "0x29AB5FC", Offset = "0x29AB5FC", VA = "0x29AB5FC")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x170000FE")]
	public int BufferedPercentage
	{
		[Token(Token = "0x600048F")]
		[Address(RVA = "0x29AB704", Offset = "0x29AB704", VA = "0x29AB704")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000FF")]
	public bool IsPaused
	{
		[Token(Token = "0x6000490")]
		[Address(RVA = "0x29AB80C", Offset = "0x29AB80C", VA = "0x29AB80C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000100")]
	public VideoPlayerState PlayerState
	{
		[Token(Token = "0x6000491")]
		[Address(RVA = "0x29AB924", Offset = "0x29AB924", VA = "0x29AB924")]
		get
		{
			return default(VideoPlayerState);
		}
	}

	[Token(Token = "0x17000101")]
	public int MaxVolume
	{
		[Token(Token = "0x6000492")]
		[Address(RVA = "0x29ABA2C", Offset = "0x29ABA2C", VA = "0x29ABA2C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000102")]
	public int CurrentVolume
	{
		[Token(Token = "0x6000493")]
		[Address(RVA = "0x29ABB34", Offset = "0x29ABB34", VA = "0x29ABB34")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000494")]
		[Address(RVA = "0x29ABC3C", Offset = "0x29ABC3C", VA = "0x29ABC3C")]
		set
		{
		}
	}

	[Token(Token = "0x17000103")]
	public StereoMode CurrentStereoMode
	{
		[Token(Token = "0x6000495")]
		[Address(RVA = "0x29ABCB8", Offset = "0x29ABCB8", VA = "0x29ABCB8")]
		get
		{
			return default(StereoMode);
		}
	}

	[Token(Token = "0x17000104")]
	public bool HasProjection
	{
		[Token(Token = "0x6000496")]
		[Address(RVA = "0x29ABDC0", Offset = "0x29ABDC0", VA = "0x29ABDC0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000105")]
	public Renderer Screen
	{
		[Token(Token = "0x6000497")]
		[Address(RVA = "0x29ABED0", Offset = "0x29ABED0", VA = "0x29ABED0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000498")]
		[Address(RVA = "0x29ABED8", Offset = "0x29ABED8", VA = "0x29ABED8")]
		set
		{
		}
	}

	[Token(Token = "0x17000106")]
	public Texture CurrentFrameTexture
	{
		[Token(Token = "0x6000499")]
		[Address(RVA = "0x29AC068", Offset = "0x29AC068", VA = "0x29AC068")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000107")]
	public int Width
	{
		[Token(Token = "0x600049A")]
		[Address(RVA = "0x29AC070", Offset = "0x29AC070", VA = "0x29AC070")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000108")]
	public int Height
	{
		[Token(Token = "0x600049B")]
		[Address(RVA = "0x29AC078", Offset = "0x29AC078", VA = "0x29AC078")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000109")]
	public float AspectRatio
	{
		[Token(Token = "0x600049C")]
		[Address(RVA = "0x29AC080", Offset = "0x29AC080", VA = "0x29AC080")]
		get
		{
			return default(float);
		}
	}

	[PreserveSig]
	[Token(Token = "0x600049D")]
	[Address(RVA = "0x29AC0A4", Offset = "0x29AC0A4", VA = "0x29AC0A4")]
	public static extern IntPtr CreateVideoPlayer();

	[PreserveSig]
	[Token(Token = "0x600049E")]
	[Address(RVA = "0x29AC118", Offset = "0x29AC118", VA = "0x29AC118")]
	public static extern void DestroyVideoPlayer(IntPtr videoPlayerPtr);

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x29AC194", Offset = "0x29AC194", VA = "0x29AC194")]
	public void SetDisplayTexture(Texture texture)
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x29AC2A4", Offset = "0x29AC2A4", VA = "0x29AC2A4")]
	public void CleanupVideo()
	{
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x29AC438", Offset = "0x29AC438", VA = "0x29AC438")]
	public void ReInitializeVideo()
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x29ACBBC", Offset = "0x29ACBBC", VA = "0x29ACBBC")]
	public void RestartVideo()
	{
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x29ABC40", Offset = "0x29ABC40", VA = "0x29ABC40")]
	public void SetCurrentVolume(int val)
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0x29AC7FC", Offset = "0x29AC7FC", VA = "0x29AC7FC")]
	public bool Init()
	{
		return default(bool);
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x29AD180", Offset = "0x29AD180", VA = "0x29AD180")]
	public bool Play()
	{
		return default(bool);
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x29AD300", Offset = "0x29AD300", VA = "0x29AD300")]
	public bool Pause()
	{
		return default(bool);
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0x29AD448", Offset = "0x29AD448", VA = "0x29AD448")]
	public void RemoveOnVideoEventCallback(Action<int> callback)
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0x29ACCC4", Offset = "0x29ACCC4", VA = "0x29ACCC4")]
	public void SetOnVideoEventCallback(Action<int> callback)
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0x29AD590", Offset = "0x29AD590", VA = "0x29AD590")]
	public void SetOnExceptionCallback(Action<string, string> callback)
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x29AD4D0", Offset = "0x29AD4D0", VA = "0x29AD4D0")]
	internal static IntPtr ToIntPtr(object obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0x29AD770", Offset = "0x29AD770", VA = "0x29AD770")]
	internal void FireVideoEvent(int eventId)
	{
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x29AD92C", Offset = "0x29AD92C", VA = "0x29AD92C")]
	internal void FireOnException(string type, string msg)
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x29ACDF0", Offset = "0x29ACDF0", VA = "0x29ACDF0")]
	internal string ProcessURL()
	{
		return null;
	}

	[PreserveSig]
	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x29ADB48", Offset = "0x29ADB48", VA = "0x29ADB48")]
	private static extern IntPtr GetRenderEventFunc();

	[PreserveSig]
	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x29ADBBC", Offset = "0x29ADBBC", VA = "0x29ADBBC")]
	private static extern void SetExternalTextures(IntPtr videoPlayerPtr, int[] texIds, int size, int w, int h);

	[PreserveSig]
	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x29ADC74", Offset = "0x29ADC74", VA = "0x29ADC74")]
	private static extern IntPtr GetRenderableTextureId(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x29ADCF0", Offset = "0x29ADCF0", VA = "0x29ADCF0")]
	private static extern int GetExternalSurfaceTextureId(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x29ADD6C", Offset = "0x29ADD6C", VA = "0x29ADD6C")]
	private static extern void GetVideoMatrix(IntPtr videoPlayerPtr, float[] videoMatrix);

	[PreserveSig]
	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x29ADE04", Offset = "0x29ADE04", VA = "0x29ADE04")]
	private static extern long GetVideoTimestampNs(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x29ADE80", Offset = "0x29ADE80", VA = "0x29ADE80")]
	private static extern int GetVideoPlayerEventBase(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x29ACE5C", Offset = "0x29ACE5C", VA = "0x29ACE5C")]
	private static extern IntPtr InitVideoPlayer(IntPtr videoPlayerPtr, int videoType, string videoURL, string contentID, string providerId, bool useSecurePath, bool useExisting);

	[PreserveSig]
	[Token(Token = "0x60004B6")]
	[Address(RVA = "0x29ACFF8", Offset = "0x29ACFF8", VA = "0x29ACFF8")]
	private static extern void SetInitialResolution(IntPtr videoPlayerPtr, int initialResolution);

	[PreserveSig]
	[Token(Token = "0x60004B7")]
	[Address(RVA = "0x29AB9B0", Offset = "0x29AB9B0", VA = "0x29AB9B0")]
	private static extern int GetPlayerState(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x60004B8")]
	[Address(RVA = "0x29ADEFC", Offset = "0x29ADEFC", VA = "0x29ADEFC")]
	private static extern int GetWidth(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x60004B9")]
	[Address(RVA = "0x29ADF74", Offset = "0x29ADF74", VA = "0x29ADF74")]
	private static extern int GetHeight(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x60004BA")]
	[Address(RVA = "0x29AD284", Offset = "0x29AD284", VA = "0x29AD284")]
	private static extern int PlayVideo(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x29AD3CC", Offset = "0x29AD3CC", VA = "0x29AD3CC")]
	private static extern int PauseVideo(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x29AB258", Offset = "0x29AB258", VA = "0x29AB258")]
	private static extern bool IsVideoReady(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x29AB8A0", Offset = "0x29AB8A0", VA = "0x29AB8A0")]
	private static extern bool IsVideoPaused(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x29AB580", Offset = "0x29AB580", VA = "0x29AB580")]
	private static extern long GetDuration(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x60004BF")]
	[Address(RVA = "0x29AB688", Offset = "0x29AB688", VA = "0x29AB688")]
	private static extern long GetBufferedPosition(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x29AB368", Offset = "0x29AB368", VA = "0x29AB368")]
	private static extern long GetCurrentPosition(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x29AB464", Offset = "0x29AB464", VA = "0x29AB464")]
	private static extern void SetCurrentPosition(IntPtr videoPlayerPtr, long pos);

	[PreserveSig]
	[Token(Token = "0x60004C2")]
	[Address(RVA = "0x29AB790", Offset = "0x29AB790", VA = "0x29AB790")]
	private static extern int GetBufferedPercentage(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x29ABAB8", Offset = "0x29ABAB8", VA = "0x29ABAB8")]
	private static extern int GetMaxVolume(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x60004C4")]
	[Address(RVA = "0x29ABBC0", Offset = "0x29ABBC0", VA = "0x29ABBC0")]
	private static extern int GetCurrentVolume(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x60004C5")]
	[Address(RVA = "0x29ACF68", Offset = "0x29ACF68", VA = "0x29ACF68")]
	private static extern void SetCurrentVolume(IntPtr videoPlayerPtr, int value);

	[PreserveSig]
	[Token(Token = "0x60004C6")]
	[Address(RVA = "0x29ABD44", Offset = "0x29ABD44", VA = "0x29ABD44")]
	private static extern int GetStereoMode(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x60004C7")]
	[Address(RVA = "0x29ABE4C", Offset = "0x29ABE4C", VA = "0x29ABE4C")]
	private static extern bool HasProjectionData(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x60004C8")]
	[Address(RVA = "0x29ADFF0", Offset = "0x29ADFF0", VA = "0x29ADFF0")]
	private static extern bool SetVideoPlayerSupportClassname(IntPtr videoPlayerPtr, string classname);

	[PreserveSig]
	[Token(Token = "0x60004C9")]
	[Address(RVA = "0x29AE0A0", Offset = "0x29AE0A0", VA = "0x29AE0A0")]
	private static extern IntPtr GetRawPlayer(IntPtr videoPlayerPtr);

	[PreserveSig]
	[Token(Token = "0x60004CA")]
	[Address(RVA = "0x29AD4F0", Offset = "0x29AD4F0", VA = "0x29AD4F0")]
	private static extern void SetOnVideoEventCallback(IntPtr videoPlayerPtr, OnVideoEventCallback callback, IntPtr callback_arg);

	[PreserveSig]
	[Token(Token = "0x60004CB")]
	[Address(RVA = "0x29AD6D0", Offset = "0x29AD6D0", VA = "0x29AD6D0")]
	private static extern void SetOnExceptionCallback(IntPtr videoPlayerPtr, OnExceptionCallback callback, IntPtr callback_arg);

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0x29AAA04", Offset = "0x29AAA04", VA = "0x29AAA04")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x147F7E4", Offset = "0x147F7E4")]
	private static void InternalOnVideoEventCallback(IntPtr cbdata, int eventId)
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0x29AADD4", Offset = "0x29AADD4", VA = "0x29AADD4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x147F848", Offset = "0x147F848")]
	private static void InternalOnExceptionCallback(string type, string msg, IntPtr cbdata)
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0x29AE12C", Offset = "0x29AE12C", VA = "0x29AE12C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0x29AC4F4", Offset = "0x29AC4F4", VA = "0x29AC4F4")]
	private void CreatePlayer()
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0x29AE1CC", Offset = "0x29AE1CC", VA = "0x29AE1CC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0x29AE28C", Offset = "0x29AE28C", VA = "0x29AE28C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0x29AE290", Offset = "0x29AE290", VA = "0x29AE290")]
	private void OnApplicationPause(bool bPause)
	{
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0x29AE380", Offset = "0x29AE380", VA = "0x29AE380")]
	private void UpdateMaterial()
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0x29AE7A4", Offset = "0x29AE7A4", VA = "0x29AE7A4")]
	private void OnRestartVideoEvent(int eventId)
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0x29AE878", Offset = "0x29AE878", VA = "0x29AE878")]
	private void AdjustAspectRatio()
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0x29AE978", Offset = "0x29AE978", VA = "0x29AE978")]
	private void UpdateStatusText()
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0x29AD088", Offset = "0x29AD088", VA = "0x29AD088")]
	private void IssuePlayerEvent(RenderCommand evt)
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0x29AEDA4", Offset = "0x29AEDA4", VA = "0x29AEDA4")]
	private void Update()
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0x29AEFB4", Offset = "0x29AEFB4", VA = "0x29AEFB4")]
	public GvrVideoPlayerTexture()
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x29AF044", Offset = "0x29AF044", VA = "0x29AF044")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147F8AC", Offset = "0x147F8AC")]
	private void <CreatePlayer>b__121_0(int eventId)
	{
	}
}
[Token(Token = "0x2000069")]
public class KochavaDemo : MonoBehaviour
{
	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x2211EAC", Offset = "0x2211EAC", VA = "0x2211EAC")]
	public void SendEvent()
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x2211F34", Offset = "0x2211F34", VA = "0x2211F34")]
	public KochavaDemo()
	{
	}
}
[Token(Token = "0x200006A")]
public class Kochava : MonoBehaviour
{
	[Token(Token = "0x20004D0")]
	public enum DebugLogLevel
	{
		[Token(Token = "0x4001E83")]
		none,
		[Token(Token = "0x4001E84")]
		error,
		[Token(Token = "0x4001E85")]
		warn,
		[Token(Token = "0x4001E86")]
		info,
		[Token(Token = "0x4001E87")]
		debug,
		[Token(Token = "0x4001E88")]
		trace
	}

	[Token(Token = "0x20004D1")]
	public enum EventType
	{
		[Token(Token = "0x4001E8A")]
		Achievement,
		[Token(Token = "0x4001E8B")]
		AddToCart,
		[Token(Token = "0x4001E8C")]
		AddToWishList,
		[Token(Token = "0x4001E8D")]
		CheckoutStart,
		[Token(Token = "0x4001E8E")]
		LevelComplete,
		[Token(Token = "0x4001E8F")]
		Purchase,
		[Token(Token = "0x4001E90")]
		Rating,
		[Token(Token = "0x4001E91")]
		RegistrationComplete,
		[Token(Token = "0x4001E92")]
		Search,
		[Token(Token = "0x4001E93")]
		TutorialComplete,
		[Token(Token = "0x4001E94")]
		View,
		[Token(Token = "0x4001E95")]
		AdView,
		[Token(Token = "0x4001E96")]
		PushReceived,
		[Token(Token = "0x4001E97")]
		PushOpened,
		[Token(Token = "0x4001E98")]
		ConsentGranted,
		[Token(Token = "0x4001E99")]
		DeepLink,
		[Token(Token = "0x4001E9A")]
		AdClick,
		[Token(Token = "0x4001E9B")]
		StartTrial,
		[Token(Token = "0x4001E9C")]
		Subscribe
	}

	[Token(Token = "0x20004D2")]
	public delegate void AttributionCallbackDelegate(string response);

	[Token(Token = "0x20004D3")]
	public delegate void ConsentStatusChangeDelegate();

	[Token(Token = "0x20004D4")]
	public static class Tracker
	{
		[Token(Token = "0x2000788")]
		public static class Config
		{
			[Token(Token = "0x6002C18")]
			[Address(RVA = "0x2210994", Offset = "0x2210994", VA = "0x2210994")]
			public static void SetAppGuid(string value)
			{
			}

			[Token(Token = "0x6002C19")]
			[Address(RVA = "0x2210B28", Offset = "0x2210B28", VA = "0x2210B28")]
			public static void SetInstantAppGuid(string value)
			{
			}

			[Token(Token = "0x6002C1A")]
			[Address(RVA = "0x2210BE4", Offset = "0x2210BE4", VA = "0x2210BE4")]
			public static void SetPartnerName(string value)
			{
			}

			[Token(Token = "0x6002C1B")]
			[Address(RVA = "0x2210C98", Offset = "0x2210C98", VA = "0x2210C98")]
			public static void SetPartnerApp(string value)
			{
			}

			[Token(Token = "0x6002C1C")]
			[Address(RVA = "0x2210D4C", Offset = "0x2210D4C", VA = "0x2210D4C")]
			public static void SetLogLevel(DebugLogLevel value)
			{
			}

			[Token(Token = "0x6002C1D")]
			[Address(RVA = "0x2210DFC", Offset = "0x2210DFC", VA = "0x2210DFC")]
			public static void SetAppLimitAdTracking(bool value)
			{
			}

			[Token(Token = "0x6002C1E")]
			[Address(RVA = "0x2210EBC", Offset = "0x2210EBC", VA = "0x2210EBC")]
			public static void SetRetrieveAttribution(bool value)
			{
			}

			[Token(Token = "0x6002C1F")]
			[Address(RVA = "0x2210F70", Offset = "0x2210F70", VA = "0x2210F70")]
			public static void SetContainerAppGroupIdentifier(string value)
			{
			}

			[Token(Token = "0x6002C20")]
			[Address(RVA = "0x221102C", Offset = "0x221102C", VA = "0x221102C")]
			public static void SetCustomKeyValuePair(string key, object value)
			{
			}

			[Token(Token = "0x6002C21")]
			[Address(RVA = "0x2211130", Offset = "0x2211130", VA = "0x2211130")]
			public static void SetIntelligentConsentManagement(bool value)
			{
			}

			[Token(Token = "0x6002C22")]
			[Address(RVA = "0x22111E4", Offset = "0x22111E4", VA = "0x22111E4")]
			public static void SetManualManagedConsentRequirements(bool value)
			{
			}

			[Token(Token = "0x6002C23")]
			[Address(RVA = "0x2211298", Offset = "0x2211298", VA = "0x2211298")]
			public static void SetSleep(bool value)
			{
			}

			[Token(Token = "0x6002C24")]
			[Address(RVA = "0x221134C", Offset = "0x221134C", VA = "0x221134C")]
			public static void SetAppTrackingTransparency(bool enabled, double waitTime, bool autoRequest)
			{
			}

			[Token(Token = "0x6002C25")]
			[Address(RVA = "0x2210A50", Offset = "0x2210A50", VA = "0x2210A50")]
			private static bool CheckInitialized()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002348")]
		[Address(RVA = "0x220F134", Offset = "0x220F134", VA = "0x220F134")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6002349")]
		[Address(RVA = "0x220F3E8", Offset = "0x220F3E8", VA = "0x220F3E8")]
		private static void DeInitialize()
		{
		}

		[Token(Token = "0x600234A")]
		[Address(RVA = "0x220F6B8", Offset = "0x220F6B8", VA = "0x220F6B8")]
		public static void SetAttributionHandler(AttributionCallbackDelegate callback)
		{
		}

		[Token(Token = "0x600234B")]
		[Address(RVA = "0x220F73C", Offset = "0x220F73C", VA = "0x220F73C")]
		public static void SetConsentStatusChangeHandler(ConsentStatusChangeDelegate callback)
		{
		}

		[Token(Token = "0x600234C")]
		[Address(RVA = "0x220F7C0", Offset = "0x220F7C0", VA = "0x220F7C0")]
		public static void SetPlatformEventHandler(Action<PlatformEvent> callback)
		{
		}

		[Token(Token = "0x600234D")]
		[Address(RVA = "0x220F844", Offset = "0x220F844", VA = "0x220F844")]
		public static void SendEvent(string eventName)
		{
		}

		[Token(Token = "0x600234E")]
		[Address(RVA = "0x220F894", Offset = "0x220F894", VA = "0x220F894")]
		public static void SendEvent(string eventName, string eventData)
		{
		}

		[Token(Token = "0x600234F")]
		[Address(RVA = "0x220FA80", Offset = "0x220FA80", VA = "0x220FA80")]
		public static void SendEvent(Event kochavaEvent)
		{
		}

		[Token(Token = "0x6002350")]
		[Address(RVA = "0x220FB78", Offset = "0x220FB78", VA = "0x220FB78")]
		public static void SendDeepLink(string deepLinkURI, string sourceApplication = "")
		{
		}

		[Token(Token = "0x6002351")]
		[Address(RVA = "0x220FC10", Offset = "0x220FC10", VA = "0x220FC10")]
		public static string GetAttribution()
		{
			return null;
		}

		[Token(Token = "0x6002352")]
		[Address(RVA = "0x220FC98", Offset = "0x220FC98", VA = "0x220FC98")]
		public static string GetDeviceId()
		{
			return null;
		}

		[Token(Token = "0x6002353")]
		[Address(RVA = "0x220FD20", Offset = "0x220FD20", VA = "0x220FD20")]
		public static void SetAppLimitAdTracking(bool desiredAppLimitAdTracking)
		{
		}

		[Token(Token = "0x6002354")]
		[Address(RVA = "0x220FDA4", Offset = "0x220FDA4", VA = "0x220FDA4")]
		public static void SetSleep(bool sleep)
		{
		}

		[Token(Token = "0x6002355")]
		[Address(RVA = "0x220FE28", Offset = "0x220FE28", VA = "0x220FE28")]
		public static bool GetSleep()
		{
			return default(bool);
		}

		[Token(Token = "0x6002356")]
		[Address(RVA = "0x220FEA8", Offset = "0x220FEA8", VA = "0x220FEA8")]
		public static void SetIdentityLink(Dictionary<string, string> identityLinkDictionary)
		{
		}

		[Token(Token = "0x6002357")]
		[Address(RVA = "0x220FF2C", Offset = "0x220FF2C", VA = "0x220FF2C")]
		public static string GetVersion()
		{
			return null;
		}

		[Token(Token = "0x6002358")]
		[Address(RVA = "0x220FFB4", Offset = "0x220FFB4", VA = "0x220FFB4")]
		public static void AddPushToken(byte[] token)
		{
		}

		[Token(Token = "0x6002359")]
		[Address(RVA = "0x2210070", Offset = "0x2210070", VA = "0x2210070")]
		public static void AddPushToken(string token)
		{
		}

		[Token(Token = "0x600235A")]
		[Address(RVA = "0x22100F4", Offset = "0x22100F4", VA = "0x22100F4")]
		public static void RemovePushToken(byte[] token)
		{
		}

		[Token(Token = "0x600235B")]
		[Address(RVA = "0x22101B0", Offset = "0x22101B0", VA = "0x22101B0")]
		public static void RemovePushToken(string token)
		{
		}

		[Token(Token = "0x600235C")]
		[Address(RVA = "0x2210234", Offset = "0x2210234", VA = "0x2210234")]
		public static bool GetConsentRequired()
		{
			return default(bool);
		}

		[Token(Token = "0x600235D")]
		[Address(RVA = "0x22102B4", Offset = "0x22102B4", VA = "0x22102B4")]
		public static void SetConsentRequired(bool isRequired)
		{
		}

		[Token(Token = "0x600235E")]
		[Address(RVA = "0x2210338", Offset = "0x2210338", VA = "0x2210338")]
		public static void SetConsentGranted(bool isGranted)
		{
		}

		[Token(Token = "0x600235F")]
		[Address(RVA = "0x22103BC", Offset = "0x22103BC", VA = "0x22103BC")]
		public static bool GetConsentGranted()
		{
			return default(bool);
		}

		[Token(Token = "0x6002360")]
		[Address(RVA = "0x221043C", Offset = "0x221043C", VA = "0x221043C")]
		public static bool GetConsentGrantedOrNotRequired()
		{
			return default(bool);
		}

		[Token(Token = "0x6002361")]
		[Address(RVA = "0x2210468", Offset = "0x2210468", VA = "0x2210468")]
		public static bool GetConsentShouldPrompt()
		{
			return default(bool);
		}

		[Token(Token = "0x6002362")]
		[Address(RVA = "0x22104E8", Offset = "0x22104E8", VA = "0x22104E8")]
		public static void SetConsentPrompted()
		{
		}

		[Token(Token = "0x6002363")]
		[Address(RVA = "0x2210564", Offset = "0x2210564", VA = "0x2210564")]
		public static string GetConsentPartnersJson()
		{
			return null;
		}

		[Token(Token = "0x6002364")]
		[Address(RVA = "0x22105EC", Offset = "0x22105EC", VA = "0x22105EC")]
		public static ConsentPartner[] GetConsentPartners()
		{
			return null;
		}

		[Token(Token = "0x6002365")]
		[Address(RVA = "0x2210678", Offset = "0x2210678", VA = "0x2210678")]
		public static string GetConsentDescription()
		{
			return null;
		}

		[Token(Token = "0x6002366")]
		[Address(RVA = "0x2210700", Offset = "0x2210700", VA = "0x2210700")]
		public static long GetConsentResponseTime()
		{
			return default(long);
		}

		[Token(Token = "0x6002367")]
		[Address(RVA = "0x2210780", Offset = "0x2210780", VA = "0x2210780")]
		public static bool GetConsentRequirementsKnown()
		{
			return default(bool);
		}

		[Token(Token = "0x6002368")]
		[Address(RVA = "0x2210800", Offset = "0x2210800", VA = "0x2210800")]
		public static void ProcessDeeplink(string path, Action<Deeplink> callback)
		{
		}

		[Token(Token = "0x6002369")]
		[Address(RVA = "0x2210808", Offset = "0x2210808", VA = "0x2210808")]
		public static void ProcessDeeplink(string path, double timeout, Action<Deeplink> callback)
		{
		}

		[Token(Token = "0x600236A")]
		[Address(RVA = "0x22108B4", Offset = "0x22108B4", VA = "0x22108B4")]
		public static void EnableAppTrackingTransparencyAutoRequest()
		{
		}

		[Token(Token = "0x600236B")]
		[Address(RVA = "0x2210920", Offset = "0x2210920", VA = "0x2210920")]
		public static void ExecuteAdvancedInstruction(string key, string command)
		{
		}

		[Token(Token = "0x600236C")]
		[Address(RVA = "0x220F988", Offset = "0x220F988", VA = "0x220F988")]
		private static bool CheckTrackerInitialized(string sourceName)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20004D5")]
	public class ConsentPartner
	{
		[Token(Token = "0x4001E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string name;

		[Token(Token = "0x4001E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string description;

		[Token(Token = "0x4001E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly bool granted;

		[Token(Token = "0x4001EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly long responseTime;

		[Token(Token = "0x600236D")]
		[Address(RVA = "0x220BDD4", Offset = "0x220BDD4", VA = "0x220BDD4")]
		internal ConsentPartner(Dictionary<string, object> json)
		{
		}
	}

	[Token(Token = "0x20004D6")]
	public class Event
	{
		[Token(Token = "0x4001EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string eventName;

		[Token(Token = "0x4001EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<string, object> dictionary;

		[Token(Token = "0x4001EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string appStoreReceiptBase64EncodedString;

		[Token(Token = "0x4001EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string receiptDataFromGoogleStore;

		[Token(Token = "0x4001EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string receiptDataSignatureFromGoogleStore;

		[Token(Token = "0x17000453")]
		public string checkoutAsGuest
		{
			[Token(Token = "0x6002375")]
			[Address(RVA = "0x220D2A0", Offset = "0x220D2A0", VA = "0x220D2A0")]
			set
			{
			}
		}

		[Token(Token = "0x17000454")]
		public string contentId
		{
			[Token(Token = "0x6002376")]
			[Address(RVA = "0x220D314", Offset = "0x220D314", VA = "0x220D314")]
			set
			{
			}
		}

		[Token(Token = "0x17000455")]
		public string contentType
		{
			[Token(Token = "0x6002377")]
			[Address(RVA = "0x220D388", Offset = "0x220D388", VA = "0x220D388")]
			set
			{
			}
		}

		[Token(Token = "0x17000456")]
		public string currency
		{
			[Token(Token = "0x6002378")]
			[Address(RVA = "0x220D3FC", Offset = "0x220D3FC", VA = "0x220D3FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000457")]
		public string dateString
		{
			[Token(Token = "0x6002379")]
			[Address(RVA = "0x220D470", Offset = "0x220D470", VA = "0x220D470")]
			set
			{
			}
		}

		[Token(Token = "0x17000458")]
		public DateTime date
		{
			[Token(Token = "0x600237A")]
			[Address(RVA = "0x220D4E4", Offset = "0x220D4E4", VA = "0x220D4E4")]
			set
			{
			}
		}

		[Token(Token = "0x17000459")]
		public string description
		{
			[Token(Token = "0x600237B")]
			[Address(RVA = "0x220D6AC", Offset = "0x220D6AC", VA = "0x220D6AC")]
			set
			{
			}
		}

		[Token(Token = "0x1700045A")]
		public string destination
		{
			[Token(Token = "0x600237C")]
			[Address(RVA = "0x220D720", Offset = "0x220D720", VA = "0x220D720")]
			set
			{
			}
		}

		[Token(Token = "0x1700045B")]
		public double duration
		{
			[Token(Token = "0x600237D")]
			[Address(RVA = "0x220D794", Offset = "0x220D794", VA = "0x220D794")]
			set
			{
			}
		}

		[Token(Token = "0x1700045C")]
		public string endDateString
		{
			[Token(Token = "0x600237E")]
			[Address(RVA = "0x220D828", Offset = "0x220D828", VA = "0x220D828")]
			set
			{
			}
		}

		[Token(Token = "0x1700045D")]
		public DateTime endDate
		{
			[Token(Token = "0x600237F")]
			[Address(RVA = "0x220D89C", Offset = "0x220D89C", VA = "0x220D89C")]
			set
			{
			}
		}

		[Token(Token = "0x1700045E")]
		public string itemAddedFrom
		{
			[Token(Token = "0x6002380")]
			[Address(RVA = "0x220D93C", Offset = "0x220D93C", VA = "0x220D93C")]
			set
			{
			}
		}

		[Token(Token = "0x1700045F")]
		public string level
		{
			[Token(Token = "0x6002381")]
			[Address(RVA = "0x220D9B0", Offset = "0x220D9B0", VA = "0x220D9B0")]
			set
			{
			}
		}

		[Token(Token = "0x17000460")]
		public double maxRatingValue
		{
			[Token(Token = "0x6002382")]
			[Address(RVA = "0x220DA24", Offset = "0x220DA24", VA = "0x220DA24")]
			set
			{
			}
		}

		[Token(Token = "0x17000461")]
		public string name
		{
			[Token(Token = "0x6002383")]
			[Address(RVA = "0x220DAB8", Offset = "0x220DAB8", VA = "0x220DAB8")]
			set
			{
			}
		}

		[Token(Token = "0x17000462")]
		public string orderId
		{
			[Token(Token = "0x6002384")]
			[Address(RVA = "0x220DB2C", Offset = "0x220DB2C", VA = "0x220DB2C")]
			set
			{
			}
		}

		[Token(Token = "0x17000463")]
		public string origin
		{
			[Token(Token = "0x6002385")]
			[Address(RVA = "0x220DBA0", Offset = "0x220DBA0", VA = "0x220DBA0")]
			set
			{
			}
		}

		[Token(Token = "0x17000464")]
		public double price
		{
			[Token(Token = "0x6002386")]
			[Address(RVA = "0x220DC14", Offset = "0x220DC14", VA = "0x220DC14")]
			set
			{
			}
		}

		[Token(Token = "0x17000465")]
		public double quantity
		{
			[Token(Token = "0x6002387")]
			[Address(RVA = "0x220DCA8", Offset = "0x220DCA8", VA = "0x220DCA8")]
			set
			{
			}
		}

		[Token(Token = "0x17000466")]
		public double ratingValue
		{
			[Token(Token = "0x6002388")]
			[Address(RVA = "0x220DD3C", Offset = "0x220DD3C", VA = "0x220DD3C")]
			set
			{
			}
		}

		[Token(Token = "0x17000467")]
		public string receiptId
		{
			[Token(Token = "0x6002389")]
			[Address(RVA = "0x220DDD0", Offset = "0x220DDD0", VA = "0x220DDD0")]
			set
			{
			}
		}

		[Token(Token = "0x17000468")]
		public string referralFrom
		{
			[Token(Token = "0x600238A")]
			[Address(RVA = "0x220DE44", Offset = "0x220DE44", VA = "0x220DE44")]
			set
			{
			}
		}

		[Token(Token = "0x17000469")]
		public string registrationMethod
		{
			[Token(Token = "0x600238B")]
			[Address(RVA = "0x220DEB8", Offset = "0x220DEB8", VA = "0x220DEB8")]
			set
			{
			}
		}

		[Token(Token = "0x1700046A")]
		public string results
		{
			[Token(Token = "0x600238C")]
			[Address(RVA = "0x220DF2C", Offset = "0x220DF2C", VA = "0x220DF2C")]
			set
			{
			}
		}

		[Token(Token = "0x1700046B")]
		public string score
		{
			[Token(Token = "0x600238D")]
			[Address(RVA = "0x220DFA0", Offset = "0x220DFA0", VA = "0x220DFA0")]
			set
			{
			}
		}

		[Token(Token = "0x1700046C")]
		public string searchTerm
		{
			[Token(Token = "0x600238E")]
			[Address(RVA = "0x220E014", Offset = "0x220E014", VA = "0x220E014")]
			set
			{
			}
		}

		[Token(Token = "0x1700046D")]
		public double spatialX
		{
			[Token(Token = "0x600238F")]
			[Address(RVA = "0x220E088", Offset = "0x220E088", VA = "0x220E088")]
			set
			{
			}
		}

		[Token(Token = "0x1700046E")]
		public double spatialY
		{
			[Token(Token = "0x6002390")]
			[Address(RVA = "0x220E11C", Offset = "0x220E11C", VA = "0x220E11C")]
			set
			{
			}
		}

		[Token(Token = "0x1700046F")]
		public double spatialZ
		{
			[Token(Token = "0x6002391")]
			[Address(RVA = "0x220E1B0", Offset = "0x220E1B0", VA = "0x220E1B0")]
			set
			{
			}
		}

		[Token(Token = "0x17000470")]
		public string startDateString
		{
			[Token(Token = "0x6002392")]
			[Address(RVA = "0x220E244", Offset = "0x220E244", VA = "0x220E244")]
			set
			{
			}
		}

		[Token(Token = "0x17000471")]
		public DateTime startDate
		{
			[Token(Token = "0x6002393")]
			[Address(RVA = "0x220E2B8", Offset = "0x220E2B8", VA = "0x220E2B8")]
			set
			{
			}
		}

		[Token(Token = "0x17000472")]
		public string success
		{
			[Token(Token = "0x6002394")]
			[Address(RVA = "0x220E358", Offset = "0x220E358", VA = "0x220E358")]
			set
			{
			}
		}

		[Token(Token = "0x17000473")]
		public string userId
		{
			[Token(Token = "0x6002395")]
			[Address(RVA = "0x220E3CC", Offset = "0x220E3CC", VA = "0x220E3CC")]
			set
			{
			}
		}

		[Token(Token = "0x17000474")]
		public string userName
		{
			[Token(Token = "0x6002396")]
			[Address(RVA = "0x220E440", Offset = "0x220E440", VA = "0x220E440")]
			set
			{
			}
		}

		[Token(Token = "0x17000475")]
		public string validated
		{
			[Token(Token = "0x6002397")]
			[Address(RVA = "0x220E4B4", Offset = "0x220E4B4", VA = "0x220E4B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000476")]
		public bool background
		{
			[Token(Token = "0x6002398")]
			[Address(RVA = "0x220E528", Offset = "0x220E528", VA = "0x220E528")]
			set
			{
			}
		}

		[Token(Token = "0x17000477")]
		public string action
		{
			[Token(Token = "0x6002399")]
			[Address(RVA = "0x220E5BC", Offset = "0x220E5BC", VA = "0x220E5BC")]
			set
			{
			}
		}

		[Token(Token = "0x17000478")]
		public bool completed
		{
			[Token(Token = "0x600239A")]
			[Address(RVA = "0x220E630", Offset = "0x220E630", VA = "0x220E630")]
			set
			{
			}
		}

		[Token(Token = "0x17000479")]
		public Dictionary<string, object> payload
		{
			[Token(Token = "0x600239B")]
			[Address(RVA = "0x220E6C4", Offset = "0x220E6C4", VA = "0x220E6C4")]
			set
			{
			}
		}

		[Token(Token = "0x1700047A")]
		public string uri
		{
			[Token(Token = "0x600239C")]
			[Address(RVA = "0x220E738", Offset = "0x220E738", VA = "0x220E738")]
			set
			{
			}
		}

		[Token(Token = "0x1700047B")]
		public string source
		{
			[Token(Token = "0x600239D")]
			[Address(RVA = "0x220E7AC", Offset = "0x220E7AC", VA = "0x220E7AC")]
			set
			{
			}
		}

		[Token(Token = "0x1700047C")]
		public string adNetworkName
		{
			[Token(Token = "0x600239E")]
			[Address(RVA = "0x220E820", Offset = "0x220E820", VA = "0x220E820")]
			set
			{
			}
		}

		[Token(Token = "0x1700047D")]
		public string adMediationName
		{
			[Token(Token = "0x600239F")]
			[Address(RVA = "0x220E894", Offset = "0x220E894", VA = "0x220E894")]
			set
			{
			}
		}

		[Token(Token = "0x1700047E")]
		public string adDeviceType
		{
			[Token(Token = "0x60023A0")]
			[Address(RVA = "0x220E908", Offset = "0x220E908", VA = "0x220E908")]
			set
			{
			}
		}

		[Token(Token = "0x1700047F")]
		public string adPlacement
		{
			[Token(Token = "0x60023A1")]
			[Address(RVA = "0x220E97C", Offset = "0x220E97C", VA = "0x220E97C")]
			set
			{
			}
		}

		[Token(Token = "0x17000480")]
		public string adType
		{
			[Token(Token = "0x60023A2")]
			[Address(RVA = "0x220E9F0", Offset = "0x220E9F0", VA = "0x220E9F0")]
			set
			{
			}
		}

		[Token(Token = "0x17000481")]
		public string adCampaignID
		{
			[Token(Token = "0x60023A3")]
			[Address(RVA = "0x220EA64", Offset = "0x220EA64", VA = "0x220EA64")]
			set
			{
			}
		}

		[Token(Token = "0x17000482")]
		public string adCampiagnName
		{
			[Token(Token = "0x60023A4")]
			[Address(RVA = "0x220EAD8", Offset = "0x220EAD8", VA = "0x220EAD8")]
			set
			{
			}
		}

		[Token(Token = "0x17000483")]
		public string adSize
		{
			[Token(Token = "0x60023A5")]
			[Address(RVA = "0x220EB4C", Offset = "0x220EB4C", VA = "0x220EB4C")]
			set
			{
			}
		}

		[Token(Token = "0x17000484")]
		public string adGroupName
		{
			[Token(Token = "0x60023A6")]
			[Address(RVA = "0x220EBC0", Offset = "0x220EBC0", VA = "0x220EBC0")]
			set
			{
			}
		}

		[Token(Token = "0x17000485")]
		public string adGroupID
		{
			[Token(Token = "0x60023A7")]
			[Address(RVA = "0x220EC34", Offset = "0x220EC34", VA = "0x220EC34")]
			set
			{
			}
		}

		[Token(Token = "0x600236E")]
		[Address(RVA = "0x220D020", Offset = "0x220D020", VA = "0x220D020")]
		public string getEventName()
		{
			return null;
		}

		[Token(Token = "0x600236F")]
		[Address(RVA = "0x220D028", Offset = "0x220D028", VA = "0x220D028")]
		public Dictionary<string, object> getDictionary()
		{
			return null;
		}

		[Token(Token = "0x6002370")]
		[Address(RVA = "0x220D030", Offset = "0x220D030", VA = "0x220D030")]
		public string getAppStoreReceiptBase64EncodedString()
		{
			return null;
		}

		[Token(Token = "0x6002371")]
		[Address(RVA = "0x220D038", Offset = "0x220D038", VA = "0x220D038")]
		public string getReceiptDataFromGoogleStore()
		{
			return null;
		}

		[Token(Token = "0x6002372")]
		[Address(RVA = "0x220D040", Offset = "0x220D040", VA = "0x220D040")]
		public string getReceiptDataSignatureFromGoogleStore()
		{
			return null;
		}

		[Token(Token = "0x6002373")]
		[Address(RVA = "0x220D048", Offset = "0x220D048", VA = "0x220D048")]
		public Event(EventType standardEventType)
		{
		}

		[Token(Token = "0x6002374")]
		[Address(RVA = "0x220D1F0", Offset = "0x220D1F0", VA = "0x220D1F0")]
		public Event(string customEventType)
		{
		}

		[Token(Token = "0x60023A8")]
		[Address(RVA = "0x220ECA8", Offset = "0x220ECA8", VA = "0x220ECA8")]
		public void SetCustomValue(string key, double value)
		{
		}

		[Token(Token = "0x60023A9")]
		[Address(RVA = "0x220ED48", Offset = "0x220ED48", VA = "0x220ED48")]
		public void SetCustomValue(string key, bool value)
		{
		}

		[Token(Token = "0x60023AA")]
		[Address(RVA = "0x220EDE0", Offset = "0x220EDE0", VA = "0x220EDE0")]
		public void SetCustomValue(string key, string value)
		{
		}

		[Token(Token = "0x60023AB")]
		[Address(RVA = "0x220EE50", Offset = "0x220EE50", VA = "0x220EE50")]
		public void setReceiptFromGooglePlayStore(string receiptDataFromStore, string receiptDataSignatureFromStore)
		{
		}

		[Token(Token = "0x60023AC")]
		[Address(RVA = "0x220EF0C", Offset = "0x220EF0C", VA = "0x220EF0C")]
		public void setReceiptFromAppleAppStoreBase64EncodedString(string value)
		{
		}
	}

	[Token(Token = "0x20004D7")]
	public class Deeplink
	{
		[Token(Token = "0x4001EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string destination;

		[Token(Token = "0x4001EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly Dictionary<string, object> raw;

		[Token(Token = "0x60023AD")]
		[Address(RVA = "0x220CFD0", Offset = "0x220CFD0", VA = "0x220CFD0")]
		internal Deeplink(string destination, Dictionary<string, object> raw)
		{
		}

		[Token(Token = "0x60023AE")]
		[Address(RVA = "0x220CE10", Offset = "0x220CE10", VA = "0x220CE10")]
		internal Deeplink(Dictionary<string, object> json)
		{
		}
	}

	[Token(Token = "0x20004D8")]
	public class PlatformEvent
	{
		[Token(Token = "0x4001EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string name;

		[Token(Token = "0x4001EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly Dictionary<string, object> value;

		[Token(Token = "0x60023AF")]
		[Address(RVA = "0x220EFB4", Offset = "0x220EFB4", VA = "0x220EFB4")]
		internal PlatformEvent(string name, Dictionary<string, object> value)
		{
		}

		[Token(Token = "0x60023B0")]
		[Address(RVA = "0x220F004", Offset = "0x220F004", VA = "0x220F004")]
		internal PlatformEvent(Dictionary<string, object> json)
		{
		}
	}

	[Token(Token = "0x20004D9")]
	private class Util
	{
		[Token(Token = "0x4001EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool unableToFormatTime;

		[Token(Token = "0x60023B1")]
		[Address(RVA = "0x221163C", Offset = "0x221163C", VA = "0x221163C")]
		public static double GetNetworkRetryTime(int failedCount)
		{
			return default(double);
		}

		[Token(Token = "0x60023B2")]
		[Address(RVA = "0x220D584", Offset = "0x220D584", VA = "0x220D584")]
		public static string DateTimeToIso8601(DateTime dateTime)
		{
			return null;
		}

		[Token(Token = "0x60023B3")]
		[Address(RVA = "0x2207A04", Offset = "0x2207A04", VA = "0x2207A04")]
		public static string TimeStamp()
		{
			return null;
		}

		[Token(Token = "0x60023B4")]
		[Address(RVA = "0x2211680", Offset = "0x2211680", VA = "0x2211680")]
		public static double UnixTime()
		{
			return default(double);
		}

		[Token(Token = "0x60023B5")]
		[Address(RVA = "0x2211734", Offset = "0x2211734", VA = "0x2211734")]
		public static void SetValue(ref Dictionary<string, object> source, string key, object value, bool doNotReplace = true, bool doNotAllowEmptyString = true)
		{
		}

		[Token(Token = "0x60023B6")]
		[Address(RVA = "0x221193C", Offset = "0x221193C", VA = "0x221193C")]
		public static byte[] hexStringToByteArr(string hexString)
		{
			return null;
		}

		[Token(Token = "0x60023B7")]
		[Address(RVA = "0x2211AE0", Offset = "0x2211AE0", VA = "0x2211AE0")]
		public Util()
		{
		}
	}

	[Token(Token = "0x20004DA")]
	private static class Json
	{
		[Token(Token = "0x60023B9")]
		public static T ToObj<T>(string jsonString)
		{
			return (T)null;
		}

		[Token(Token = "0x60023BA")]
		[Address(RVA = "0x2209884", Offset = "0x2209884", VA = "0x2209884")]
		public static string ToString(object jsonObject)
		{
			return null;
		}
	}

	[Token(Token = "0x20004DB")]
	private class AndroidAttributionHandler : AndroidJavaProxy
	{
		[Token(Token = "0x60023BB")]
		[Address(RVA = "0x2209A9C", Offset = "0x2209A9C", VA = "0x2209A9C")]
		public AndroidAttributionHandler()
		{
		}

		[Token(Token = "0x60023BC")]
		[Address(RVA = "0x220C9C4", Offset = "0x220C9C4", VA = "0x220C9C4")]
		private void onAttributionUpdated(string msg)
		{
		}
	}

	[Token(Token = "0x20004DC")]
	private class AndroidConsentStatusHandler : AndroidJavaProxy
	{
		[Token(Token = "0x60023BD")]
		[Address(RVA = "0x2209B10", Offset = "0x2209B10", VA = "0x2209B10")]
		public AndroidConsentStatusHandler()
		{
		}

		[Token(Token = "0x60023BE")]
		[Address(RVA = "0x220CADC", Offset = "0x220CADC", VA = "0x220CADC")]
		private void onConsentStatusChange()
		{
		}
	}

	[Token(Token = "0x20004DD")]
	private class AndroidDeeplinkHandler : AndroidJavaProxy
	{
		[Token(Token = "0x4001EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string requestId;

		[Token(Token = "0x60023BF")]
		[Address(RVA = "0x220C61C", Offset = "0x220C61C", VA = "0x220C61C")]
		public AndroidDeeplinkHandler(string requestId)
		{
		}

		[Token(Token = "0x60023C0")]
		[Address(RVA = "0x220CBEC", Offset = "0x220CBEC", VA = "0x220CBEC")]
		private void onDeeplinkProcessed(AndroidJavaObject deeplink)
		{
		}
	}

	[Token(Token = "0x400029A")]
	private const string sdkVersionNumber = "4.3.2";

	[Token(Token = "0x400029B")]
	private const string sdkNativeName = "Unity NET";

	[Token(Token = "0x400029C")]
	private const string sdkName = "Unity";

	[Token(Token = "0x400029D")]
	private const string sdkBuildDate = "2021-05-12T16:34:33Z";

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Kochava instance;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string instanceId;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject kochavaGameObject;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool initialized;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static AndroidJavaObject androidTracker;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static string _appGUID;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static string _instantAppGUID;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static bool _appAdLimitTracking;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private static bool _appAdLimitTrackingSet;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	private static bool _sleep;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private static int _logLevel;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static string _partnerName;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static string _partnerApp;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static bool _requestAttributionCallback;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static string _containerAppGroupIdentifier;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static bool _intelligentConsentManagement;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private static bool _manualManagedConsentRequirements;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static Dictionary<string, object> _dictionaryCustom;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static AttributionCallbackDelegate _attributionCallbackDelegate;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static ConsentStatusChangeDelegate _consentStatusChangeDelegate;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static Action<PlatformEvent> _platformEventHandler;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static bool _attEnabled;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static double _attWaitTime;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static bool _attAutoRequest;

	[Token(Token = "0x40002B6")]
	private const int LOG_NONE = 0;

	[Token(Token = "0x40002B7")]
	private const int LOG_ERROR = 1;

	[Token(Token = "0x40002B8")]
	private const int LOG_WARN = 2;

	[Token(Token = "0x40002B9")]
	private const int LOG_INFO = 3;

	[Token(Token = "0x40002BA")]
	private const int LOG_DEBUG = 4;

	[Token(Token = "0x40002BB")]
	private const int LOG_TRACE = 5;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly object cacheLock;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string cacheAttributionCallback;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool cacheConsentStatusChangeCallback;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<string, Action<Deeplink>> cacheDeeplinkRequest;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Dictionary<string, Deeplink> cacheDeeplinkResponse;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<PlatformEvent> cachePlatformEvent;

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x2207854", Offset = "0x2207854", VA = "0x2207854")]
	public static bool IsInitialized()
	{
		return default(bool);
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x22078BC", Offset = "0x22078BC", VA = "0x22078BC")]
	private static void LOG(string msg, int msglogLevel)
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x2207BB4", Offset = "0x2207BB4", VA = "0x2207BB4")]
	private void Update()
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0x220861C", Offset = "0x220861C", VA = "0x220861C")]
	private static void androidNativeStart(string appGuid, string instantAppGuid, string partnerName, int logLevel, bool appLimitAdTracking, bool appLimitAdTrackingSet, bool sleep, bool retrieveAttribution, bool icm, bool icmManual, Dictionary<string, object> custom)
	{
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0x2209B84", Offset = "0x2209B84", VA = "0x2209B84")]
	private static void androidNativeSendEvent(string eventName, string eventData)
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0x2209DD8", Offset = "0x2209DD8", VA = "0x2209DD8")]
	private static void androidNativeSendKochavaEvent(string eventName, Dictionary<string, object> dictionary, string receiptJson, string receiptSignature)
	{
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0x220A2F8", Offset = "0x220A2F8", VA = "0x220A2F8")]
	private static void androidNativeSendDeepLink(string deepLinkURI, string sourceApplicationString)
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0x220A634", Offset = "0x220A634", VA = "0x220A634")]
	private static void androidNativeSendIdentityLink(Dictionary<string, string> identityLinkDictionary)
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0x220AAF4", Offset = "0x220AAF4", VA = "0x220AAF4")]
	private static void androidNativeSetAppLimitAdTrackingBool(bool desiredAppLimitAdTracking)
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0x220AC0C", Offset = "0x220AC0C", VA = "0x220AC0C")]
	private static void androidNativeSetSleepBool(bool sleep)
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0x220AD24", Offset = "0x220AD24", VA = "0x220AD24")]
	private static bool androidNativeGetSleepBool()
	{
		return default(bool);
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0x220AE44", Offset = "0x220AE44", VA = "0x220AE44")]
	private static string androidNativeGetAttribution()
	{
		return null;
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0x220AF64", Offset = "0x220AF64", VA = "0x220AF64")]
	private static string androidNativeGetDeviceId()
	{
		return null;
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0x220B084", Offset = "0x220B084", VA = "0x220B084")]
	private static string androidNativeGetVersion()
	{
		return null;
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0x220B1A4", Offset = "0x220B1A4", VA = "0x220B1A4")]
	private static void androidNativeAddPushToken(string token)
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0x220B334", Offset = "0x220B334", VA = "0x220B334")]
	private static void androidNativeRemovePushToken(string token)
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0x220B4C4", Offset = "0x220B4C4", VA = "0x220B4C4")]
	private static bool androidNativeGetConsentRequired()
	{
		return default(bool);
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0x220B5E4", Offset = "0x220B5E4", VA = "0x220B5E4")]
	private static void androidNativeSetConsentRequired(bool isRequired)
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0x220B6FC", Offset = "0x220B6FC", VA = "0x220B6FC")]
	private static void androidNativeSetConsentGranted(bool isGranted)
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0x220B814", Offset = "0x220B814", VA = "0x220B814")]
	private static bool androidNativeGetConsentGranted()
	{
		return default(bool);
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0x220B934", Offset = "0x220B934", VA = "0x220B934")]
	private static bool androidNativeGetConsentShouldPrompt()
	{
		return default(bool);
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x220BA54", Offset = "0x220BA54", VA = "0x220BA54")]
	private static void androidNativeSetConsentPrompted()
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x220BB6C", Offset = "0x220BB6C", VA = "0x220BB6C")]
	private static string androidNativeGetConsentPartnersJson()
	{
		return null;
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x220BC8C", Offset = "0x220BC8C", VA = "0x220BC8C")]
	private static ConsentPartner[] androidNativeGetConsentPartners()
	{
		return null;
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x220BFDC", Offset = "0x220BFDC", VA = "0x220BFDC")]
	private static string androidNativeGetConsentDescription()
	{
		return null;
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x220C0FC", Offset = "0x220C0FC", VA = "0x220C0FC")]
	private static long androidNativeGetConsentResponseTime()
	{
		return default(long);
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x220C21C", Offset = "0x220C21C", VA = "0x220C21C")]
	private static bool androidNativeGetConsentRequirementsKnown()
	{
		return default(bool);
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x220C33C", Offset = "0x220C33C", VA = "0x220C33C")]
	private static void androidNativeProcessDeeplink(string path, double timeout, Action<Deeplink> callback)
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x220988C", Offset = "0x220988C", VA = "0x220988C")]
	private static void androidNativeExecuteAdvancedInstruction(string key, string command)
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x220C6AC", Offset = "0x220C6AC", VA = "0x220C6AC")]
	public Kochava()
	{
	}
}
[Token(Token = "0x200006B")]
public class KochavaConfiguration : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20004DE")]
	public class ConsentStatusChangeEvent : UnityEvent
	{
		[Token(Token = "0x60023C1")]
		[Address(RVA = "0x2211EA4", Offset = "0x2211EA4", VA = "0x2211EA4")]
		public ConsentStatusChangeEvent()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20004DF")]
	public class AttributionChangeEvent : UnityEvent<string>
	{
		[Token(Token = "0x60023C2")]
		[Address(RVA = "0x2211E54", Offset = "0x2211E54", VA = "0x2211E54")]
		public AttributionChangeEvent()
		{
		}
	}

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x146C4D0", Offset = "0x146C4D0")]
	public string appGUID_UnityEditor;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string appGUID_iOS;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string appGUID_Android;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string appGUID_WindowsStoreUWP;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string appGUID_WindowsPC;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string appGUID_MacOS;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string appGUID_Linux;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string appGUID_WebGL;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x146C508", Offset = "0x146C508")]
	public string kochavaPartnerName;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string kochavaPartnerApp;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x146C540", Offset = "0x146C540")]
	public string instantAppGUID_Android;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string containerAppGroupIdentifier_iOS;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x146C578", Offset = "0x146C578")]
	public bool attEnabled;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public double attWaitTime;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool attAutoRequest;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x146C5B0", Offset = "0x146C5B0")]
	public bool appAdLimitTracking;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public Kochava.DebugLogLevel logLevel;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool sleepOnStart;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x146C5E8", Offset = "0x146C5E8")]
	public bool requestAttributionCallback;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AttributionChangeEvent attributionChangeEvent;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x146C620", Offset = "0x146C620")]
	public bool intelligentConsentManagement;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	public bool manualManagedConsentRequirements;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public ConsentStatusChangeEvent consentStatusChangeEvent;

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x2211AEC", Offset = "0x2211AEC", VA = "0x2211AEC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x2211CB0", Offset = "0x2211CB0", VA = "0x2211CB0")]
	public KochavaConfiguration()
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x2211DD0", Offset = "0x2211DD0", VA = "0x2211DD0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147F8BC", Offset = "0x147F8BC")]
	private void <Awake>b__25_0(string attribution)
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x2211E38", Offset = "0x2211E38", VA = "0x2211E38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147F8CC", Offset = "0x147F8CC")]
	private void <Awake>b__25_1()
	{
	}
}
[Token(Token = "0x200006C")]
public class ScrollingUVs_Layers : MonoBehaviour
{
	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 uvAnimationRate;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string textureName;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector2 uvOffset;

	[Token(Token = "0x6000501")]
	[Address(RVA = "0x1F00DC0", Offset = "0x1F00DC0", VA = "0x1F00DC0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0x1F00EE4", Offset = "0x1F00EE4", VA = "0x1F00EE4")]
	public ScrollingUVs_Layers()
	{
	}
}
[Token(Token = "0x200006D")]
public class BakeTexturesAtRuntime : MonoBehaviour
{
	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject target;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float elapsedTime;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MB3_TextureCombiner.CreateAtlasesCoroutineResult result;

	[Token(Token = "0x6000503")]
	[Address(RVA = "0x1ED90DC", Offset = "0x1ED90DC", VA = "0x1ED90DC")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0x1ED9640", Offset = "0x1ED9640", VA = "0x1ED9640")]
	private void OnBuiltAtlasesSuccess()
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0x1ED9818", Offset = "0x1ED9818", VA = "0x1ED9818")]
	public BakeTexturesAtRuntime()
	{
	}
}
[Token(Token = "0x200006E")]
public class MB_BatchPrepareObjectsForDynamicBatchingDescription : MonoBehaviour
{
	[Token(Token = "0x6000506")]
	[Address(RVA = "0x1D842EC", Offset = "0x1D842EC", VA = "0x1D842EC")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x1D843C4", Offset = "0x1D843C4", VA = "0x1D843C4")]
	public MB_BatchPrepareObjectsForDynamicBatchingDescription()
	{
	}
}
[Token(Token = "0x200006F")]
public class MB_SwapShirts : MonoBehaviour
{
	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MB3_MeshBaker meshBaker;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer[] clothingAndBodyPartsBareTorso;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer[] clothingAndBodyPartsBareTorsoDamagedArm;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Renderer[] clothingAndBodyPartsHoodie;

	[Token(Token = "0x6000508")]
	[Address(RVA = "0x1D86194", Offset = "0x1D86194", VA = "0x1D86194")]
	private void Start()
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0x1D862F8", Offset = "0x1D862F8", VA = "0x1D862F8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0x1D8654C", Offset = "0x1D8654C", VA = "0x1D8654C")]
	private void ChangeOutfit(Renderer[] outfit)
	{
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0x1D869D8", Offset = "0x1D869D8", VA = "0x1D869D8")]
	public MB_SwapShirts()
	{
	}
}
[Token(Token = "0x2000070")]
public class MB_PrepareObjectsForDynamicBatchingDescription : MonoBehaviour
{
	[Token(Token = "0x600050C")]
	[Address(RVA = "0x1D850A8", Offset = "0x1D850A8", VA = "0x1D850A8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0x1D85180", Offset = "0x1D85180", VA = "0x1D85180")]
	public MB_PrepareObjectsForDynamicBatchingDescription()
	{
	}
}
[Token(Token = "0x2000071")]
public class MB_DynamicAddDeleteExample : MonoBehaviour
{
	[Token(Token = "0x20004E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1469DAC", Offset = "0x1469DAC")]
	private sealed class <largeNumber>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MB_DynamicAddDeleteExample <>4__this;

		[Token(Token = "0x17000486")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60023C6")]
			[Address(RVA = "0x1D84C94", Offset = "0x1D84C94", VA = "0x1D84C94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000487")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60023C8")]
			[Address(RVA = "0x1D84CFC", Offset = "0x1D84CFC", VA = "0x1D84CFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023C3")]
		[Address(RVA = "0x1D84990", Offset = "0x1D84990", VA = "0x1D84990")]
		[DebuggerHidden]
		public <largeNumber>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60023C4")]
		[Address(RVA = "0x1D84B10", Offset = "0x1D84B10", VA = "0x1D84B10", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60023C5")]
		[Address(RVA = "0x1D84B14", Offset = "0x1D84B14", VA = "0x1D84B14", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60023C7")]
		[Address(RVA = "0x1D84C9C", Offset = "0x1D84C9C", VA = "0x1D84C9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject prefab;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<GameObject> objsInCombined;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MB3_MultiMeshBaker mbd;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject[] objs;

	[Token(Token = "0x600050E")]
	[Address(RVA = "0x1D843CC", Offset = "0x1D843CC", VA = "0x1D843CC")]
	private float GaussianValue()
	{
		return default(float);
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0x1D844B0", Offset = "0x1D844B0", VA = "0x1D844B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0x1D84914", Offset = "0x1D84914", VA = "0x1D84914")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x147F8DC", Offset = "0x147F8DC")]
	private IEnumerator largeNumber()
	{
		return null;
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0x1D849BC", Offset = "0x1D849BC", VA = "0x1D849BC")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0x1D84A94", Offset = "0x1D84A94", VA = "0x1D84A94")]
	public MB_DynamicAddDeleteExample()
	{
	}
}
[Token(Token = "0x2000072")]
public class MB_Example : MonoBehaviour
{
	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MB3_MeshBaker meshbaker;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] objsToCombine;

	[Token(Token = "0x6000513")]
	[Address(RVA = "0x1D84D04", Offset = "0x1D84D04", VA = "0x1D84D04")]
	private void Start()
	{
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0x1D84D60", Offset = "0x1D84D60", VA = "0x1D84D60")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0x1D84DEC", Offset = "0x1D84DEC", VA = "0x1D84DEC")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0x1D84EC4", Offset = "0x1D84EC4", VA = "0x1D84EC4")]
	public MB_Example()
	{
	}
}
[Token(Token = "0x2000073")]
public class MB_ExampleMover : MonoBehaviour
{
	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int axis;

	[Token(Token = "0x6000517")]
	[Address(RVA = "0x1D84ECC", Offset = "0x1D84ECC", VA = "0x1D84ECC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x1D84FC0", Offset = "0x1D84FC0", VA = "0x1D84FC0")]
	public MB_ExampleMover()
	{
	}
}
[Token(Token = "0x2000074")]
public class MB_ExampleSkinnedMeshDescription : MonoBehaviour
{
	[Token(Token = "0x6000519")]
	[Address(RVA = "0x1D84FC8", Offset = "0x1D84FC8", VA = "0x1D84FC8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0x1D850A0", Offset = "0x1D850A0", VA = "0x1D850A0")]
	public MB_ExampleSkinnedMeshDescription()
	{
	}
}
[Token(Token = "0x2000075")]
public class MB_SkinnedMeshSceneController : MonoBehaviour
{
	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject swordPrefab;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject hatPrefab;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject glassesPrefab;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject workerPrefab;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject targetCharacter;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MB3_MeshBaker skinnedMeshBaker;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject swordInstance;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject glassesInstance;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject hatInstance;

	[Token(Token = "0x600051B")]
	[Address(RVA = "0x1D85188", Offset = "0x1D85188", VA = "0x1D85188")]
	private void Start()
	{
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0x1D85380", Offset = "0x1D85380", VA = "0x1D85380")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0x1D86070", Offset = "0x1D86070", VA = "0x1D86070")]
	public Transform SearchHierarchyForBone(Transform current, string name)
	{
		return null;
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0x1D8618C", Offset = "0x1D8618C", VA = "0x1D8618C")]
	public MB_SkinnedMeshSceneController()
	{
	}
}
[Token(Token = "0x2000076")]
public class MB_SwitchBakedObjectsTexture : MonoBehaviour
{
	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer targetRenderer;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material[] materials;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MB3_MeshBaker meshBaker;

	[Token(Token = "0x600051F")]
	[Address(RVA = "0x1D869E0", Offset = "0x1D869E0", VA = "0x1D869E0")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0x1D86AB8", Offset = "0x1D86AB8", VA = "0x1D86AB8")]
	public void Start()
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0x1D86B60", Offset = "0x1D86B60", VA = "0x1D86B60")]
	public void Update()
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0x1D86DD4", Offset = "0x1D86DD4", VA = "0x1D86DD4")]
	public MB_SwitchBakedObjectsTexture()
	{
	}
}
[Token(Token = "0x2000077")]
public class MicroSplatKeywords : ScriptableObject
{
	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<string> keywords;

	[Token(Token = "0x6000523")]
	[Address(RVA = "0x1D8833C", Offset = "0x1D8833C", VA = "0x1D8833C")]
	public bool IsKeywordEnabled(string k)
	{
		return default(bool);
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0x1D883A4", Offset = "0x1D883A4", VA = "0x1D883A4")]
	public void EnableKeyword(string k)
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0x1D8842C", Offset = "0x1D8842C", VA = "0x1D8842C")]
	public void DisableKeyword(string k)
	{
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0x1D884B4", Offset = "0x1D884B4", VA = "0x1D884B4")]
	public MicroSplatKeywords()
	{
	}
}
[Token(Token = "0x2000078")]
[ExecuteAlways]
public class MicroSplatObject : MonoBehaviour
{
	[Token(Token = "0x20004E1")]
	public struct TerrainDescriptor
	{
		[Token(Token = "0x4001EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture heightMap;

		[Token(Token = "0x4001EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture normalMap;

		[Token(Token = "0x4001EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 heightMapScale;
	}

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public Material templateMaterial;

	[NonSerialized]
	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Material matInstance;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public Material blendMat;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Material blendMatInstance;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public MicroSplatKeywords keywordSO;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public Texture2D perPixelNormal;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public Texture2D streamTexture;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public MicroSplatPropData propData;

	[Token(Token = "0x6000527")]
	[Address(RVA = "0x1D88530", Offset = "0x1D88530", VA = "0x1D88530")]
	protected long GetOverrideHash()
	{
		return default(long);
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0x1D88750", Offset = "0x1D88750", VA = "0x1D88750")]
	protected void SetMap(Material m, string name, Texture tex)
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0x1D88810", Offset = "0x1D88810", VA = "0x1D88810")]
	protected void ApplySharedData(Material m)
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x1D88AA0", Offset = "0x1D88AA0", VA = "0x1D88AA0")]
	protected void ApplyMaps(Material m)
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0x1D88BB8", Offset = "0x1D88BB8", VA = "0x1D88BB8")]
	protected void ApplyControlTextures(Texture2D[] controls, Material m)
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0x1D88DF8", Offset = "0x1D88DF8", VA = "0x1D88DF8")]
	protected void SyncBlendMat(Vector3 size)
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0x1D8903C", Offset = "0x1D8903C", VA = "0x1D8903C", Slot = "4")]
	public virtual TerrainDescriptor GetTerrainDescriptor()
	{
		return default(TerrainDescriptor);
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x1D89048", Offset = "0x1D89048", VA = "0x1D89048", Slot = "5")]
	public virtual Bounds GetBounds()
	{
		return default(Bounds);
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x1D89054", Offset = "0x1D89054", VA = "0x1D89054")]
	public Material GetBlendMatInstance()
	{
		return null;
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0x1D89250", Offset = "0x1D89250", VA = "0x1D89250")]
	public void ApplyBlendMap()
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x1D89380", Offset = "0x1D89380", VA = "0x1D89380")]
	public void RevisionFromMat()
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x1D89384", Offset = "0x1D89384", VA = "0x1D89384")]
	public static void SyncAll()
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0x1D89514", Offset = "0x1D89514", VA = "0x1D89514")]
	public MicroSplatObject()
	{
	}
}
[Token(Token = "0x2000079")]
public class MicroSplatPropData : ScriptableObject
{
	[Token(Token = "0x20004E2")]
	public enum PerTexVector2
	{
		[Token(Token = "0x4001EB3")]
		SplatUVScale = 0,
		[Token(Token = "0x4001EB4")]
		SplatUVOffset = 2
	}

	[Token(Token = "0x20004E3")]
	public enum PerTexColor
	{
		[Token(Token = "0x4001EB6")]
		Tint = 4,
		[Token(Token = "0x4001EB7")]
		SSSRTint = 72,
		[Token(Token = "0x4001EB8")]
		TraxTint = 84
	}

	[Token(Token = "0x20004E4")]
	public enum PerTexFloat
	{
		[Token(Token = "0x4001EBA")]
		InterpolationContrast = 5,
		[Token(Token = "0x4001EBB")]
		NormalStrength = 8,
		[Token(Token = "0x4001EBC")]
		Smoothness = 9,
		[Token(Token = "0x4001EBD")]
		AO = 10,
		[Token(Token = "0x4001EBE")]
		Metallic = 11,
		[Token(Token = "0x4001EBF")]
		Brightness = 12,
		[Token(Token = "0x4001EC0")]
		Contrast = 13,
		[Token(Token = "0x4001EC1")]
		Porosity = 14,
		[Token(Token = "0x4001EC2")]
		Foam = 15,
		[Token(Token = "0x4001EC3")]
		DetailNoiseStrength = 16,
		[Token(Token = "0x4001EC4")]
		DistanceNoiseStrength = 17,
		[Token(Token = "0x4001EC5")]
		DistanceResample = 18,
		[Token(Token = "0x4001EC6")]
		DisplacementMip = 19,
		[Token(Token = "0x4001EC7")]
		GeoTexStrength = 20,
		[Token(Token = "0x4001EC8")]
		GeoTintStrength = 21,
		[Token(Token = "0x4001EC9")]
		GeoNormalStrength = 22,
		[Token(Token = "0x4001ECA")]
		GlobalSmoothMetalAOStength = 23,
		[Token(Token = "0x4001ECB")]
		DisplacementStength = 24,
		[Token(Token = "0x4001ECC")]
		DisplacementBias = 25,
		[Token(Token = "0x4001ECD")]
		DisplacementOffset = 26,
		[Token(Token = "0x4001ECE")]
		GlobalEmisStength = 27,
		[Token(Token = "0x4001ECF")]
		NoiseNormal0Strength = 28,
		[Token(Token = "0x4001ED0")]
		NoiseNormal1Strength = 29,
		[Token(Token = "0x4001ED1")]
		NoiseNormal2Strength = 30,
		[Token(Token = "0x4001ED2")]
		WindParticulateStrength = 31,
		[Token(Token = "0x4001ED3")]
		SnowAmount = 32,
		[Token(Token = "0x4001ED4")]
		GlitterAmount = 33,
		[Token(Token = "0x4001ED5")]
		GeoHeightFilter = 34,
		[Token(Token = "0x4001ED6")]
		GeoHeightFilterStrength = 35,
		[Token(Token = "0x4001ED7")]
		TriplanarMode = 36,
		[Token(Token = "0x4001ED8")]
		TriplanarContrast = 37,
		[Token(Token = "0x4001ED9")]
		StochatsicEnabled = 38,
		[Token(Token = "0x4001EDA")]
		Saturation = 39,
		[Token(Token = "0x4001EDB")]
		TextureClusterContrast = 40,
		[Token(Token = "0x4001EDC")]
		TextureClusterBoost = 41,
		[Token(Token = "0x4001EDD")]
		HeightOffset = 42,
		[Token(Token = "0x4001EDE")]
		HeightContrast = 43,
		[Token(Token = "0x4001EDF")]
		AntiTileArrayNormalStrength = 56,
		[Token(Token = "0x4001EE0")]
		AntiTileArrayDetailStrength = 57,
		[Token(Token = "0x4001EE1")]
		AntiTileArrayDistanceStrength = 58,
		[Token(Token = "0x4001EE2")]
		DisplaceShaping = 59,
		[Token(Token = "0x4001EE3")]
		UVRotation = 64,
		[Token(Token = "0x4001EE4")]
		TriplanarRotationX = 65,
		[Token(Token = "0x4001EE5")]
		TriplanarRotationY = 66,
		[Token(Token = "0x4001EE6")]
		FuzzyShadingCore = 68,
		[Token(Token = "0x4001EE7")]
		FuzzyShadingEdge = 69,
		[Token(Token = "0x4001EE8")]
		FuzzyShadingPower = 70,
		[Token(Token = "0x4001EE9")]
		SSSThickness = 75,
		[Token(Token = "0x4001EEA")]
		CurveInterpolator = 76,
		[Token(Token = "0x4001EEB")]
		TraxDigDepth = 80,
		[Token(Token = "0x4001EEC")]
		TraxOpacity = 81,
		[Token(Token = "0x4001EED")]
		TraxNormalStrength = 82,
		[Token(Token = "0x4001EEE")]
		NoiseHeightFrequency = 88,
		[Token(Token = "0x4001EEF")]
		NoiseHeightAmplitude = 89,
		[Token(Token = "0x4001EF0")]
		NoiseUVFrequency = 90,
		[Token(Token = "0x4001EF1")]
		NoiseUVAmplitude = 91,
		[Token(Token = "0x4001EF2")]
		ColorIntensity = 92,
		[Token(Token = "0x4001EF3")]
		ScatterBlendMode = 98,
		[Token(Token = "0x4001EF4")]
		ScatterAlphaMult = 99,
		[Token(Token = "0x4001EF5")]
		ScatterDistanceFade = 104,
		[Token(Token = "0x4001EF6")]
		RimPower = 105
	}

	[Token(Token = "0x40002FF")]
	public const int sMaxTextures = 32;

	[Token(Token = "0x4000300")]
	public const int sMaxAttributes = 32;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public UnityEngine.Color[] values;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Texture2D propTex;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve geoCurve;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Texture2D geoTex;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public AnimationCurve geoSlopeFilter;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public Texture2D geoSlopeTex;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public AnimationCurve globalSlopeFilter;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public Texture2D globalSlopeTex;

	[Token(Token = "0x6000534")]
	[Address(RVA = "0x1D8951C", Offset = "0x1D8951C", VA = "0x1D8951C")]
	private void RevisionData()
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0x1D89690", Offset = "0x1D89690", VA = "0x1D89690")]
	public UnityEngine.Color GetValue(int x, int y)
	{
		return default(UnityEngine.Color);
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0x1D896F8", Offset = "0x1D896F8", VA = "0x1D896F8")]
	public void SetValue(int x, int y, UnityEngine.Color c)
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0x1D89780", Offset = "0x1D89780", VA = "0x1D89780")]
	public void SetValue(int x, int y, int channel, float value)
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0x1D89838", Offset = "0x1D89838", VA = "0x1D89838")]
	public void SetValue(int x, int y, int channel, Vector2 value)
	{
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0x1D898D0", Offset = "0x1D898D0", VA = "0x1D898D0")]
	public void SetValue(int textureIndex, PerTexFloat channel, float value)
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0x1D899A0", Offset = "0x1D899A0", VA = "0x1D899A0")]
	public void SetValue(int textureIndex, PerTexColor channel, UnityEngine.Color value)
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0x1D899CC", Offset = "0x1D899CC", VA = "0x1D899CC")]
	public void SetValue(int textureIndex, PerTexVector2 channel, Vector2 value)
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0x1D888D0", Offset = "0x1D888D0", VA = "0x1D888D0")]
	public Texture2D GetTexture()
	{
		return null;
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0x1D89AAC", Offset = "0x1D89AAC", VA = "0x1D89AAC")]
	public Texture2D GetGeoCurve()
	{
		return null;
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0x1D89C14", Offset = "0x1D89C14", VA = "0x1D89C14")]
	public Texture2D GetGeoSlopeFilter()
	{
		return null;
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0x1D89D7C", Offset = "0x1D89D7C", VA = "0x1D89D7C")]
	public Texture2D GetGlobalSlopeFilter()
	{
		return null;
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0x1D89EE4", Offset = "0x1D89EE4", VA = "0x1D89EE4")]
	public MicroSplatPropData()
	{
	}
}
[Token(Token = "0x200007A")]
[ExecuteInEditMode]
[DisallowMultipleComponent]
public class MicroSplatTerrain : MicroSplatObject
{
	[Token(Token = "0x20004E5")]
	public delegate void MaterialSyncAll();

	[Token(Token = "0x20004E6")]
	public delegate void MaterialSync(Material m);

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<MicroSplatTerrain> sInstances;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Terrain terrain;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public Texture2D customControl0;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public Texture2D customControl1;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public Texture2D customControl2;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	public Texture2D customControl3;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[HideInInspector]
	public Texture2D customControl4;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[HideInInspector]
	public Texture2D customControl5;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[HideInInspector]
	public Texture2D customControl6;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[HideInInspector]
	public Texture2D customControl7;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[HideInInspector]
	public bool reenabled;

	[Token(Token = "0x14000021")]
	public static event MaterialSyncAll OnMaterialSyncAll
	{
		[Token(Token = "0x6000541")]
		[Address(RVA = "0x1D89FEC", Offset = "0x1D89FEC", VA = "0x1D89FEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147F940", Offset = "0x147F940")]
		add
		{
		}
		[Token(Token = "0x6000542")]
		[Address(RVA = "0x1D8A0D8", Offset = "0x1D8A0D8", VA = "0x1D8A0D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147F950", Offset = "0x147F950")]
		remove
		{
		}
	}

	[Token(Token = "0x14000022")]
	public event MaterialSync OnMaterialSync
	{
		[Token(Token = "0x6000543")]
		[Address(RVA = "0x1D8A1C4", Offset = "0x1D8A1C4", VA = "0x1D8A1C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147F960", Offset = "0x147F960")]
		add
		{
		}
		[Token(Token = "0x6000544")]
		[Address(RVA = "0x1D8A268", Offset = "0x1D8A268", VA = "0x1D8A268")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147F970", Offset = "0x147F970")]
		remove
		{
		}
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0x1D8A30C", Offset = "0x1D8A30C", VA = "0x1D8A30C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0x1D8A36C", Offset = "0x1D8A36C", VA = "0x1D8A36C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0x1D8AA50", Offset = "0x1D8AA50", VA = "0x1D8AA50")]
	private void Start()
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0x1D8AA54", Offset = "0x1D8AA54", VA = "0x1D8AA54")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x1D8AAEC", Offset = "0x1D8AAEC", VA = "0x1D8AAEC")]
	private void Cleanup()
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x1D8ABE8", Offset = "0x1D8ABE8", VA = "0x1D8ABE8", Slot = "4")]
	public override TerrainDescriptor GetTerrainDescriptor()
	{
		return default(TerrainDescriptor);
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0x1D8A430", Offset = "0x1D8A430", VA = "0x1D8A430")]
	public void Sync()
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0x1D8B0A4", Offset = "0x1D8B0A4", VA = "0x1D8B0A4", Slot = "5")]
	public override Bounds GetBounds()
	{
		return default(Bounds);
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0x1D893E0", Offset = "0x1D893E0", VA = "0x1D893E0")]
	public new static void SyncAll()
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0x1D8B2EC", Offset = "0x1D8B2EC", VA = "0x1D8B2EC")]
	public MicroSplatTerrain()
	{
	}
}
[Token(Token = "0x200007B")]
public class CustomTerrainScriptAtsV2 : MonoBehaviour
{
	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D Bump0;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture2D Bump1;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture2D Bump2;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture2D Bump3;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float Tile0;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float Tile1;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float Tile2;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float Tile3;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float terrainSizeX;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float terrainSizeZ;

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x1C0B2C0", Offset = "0x1C0B2C0", VA = "0x1C0B2C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0x1C0B55C", Offset = "0x1C0B55C", VA = "0x1C0B55C")]
	public CustomTerrainScriptAtsV2()
	{
	}
}
[Token(Token = "0x200007C")]
public class CameraInputDemo : MonoBehaviour
{
	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string infoText;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private splineMove myMove;

	[Token(Token = "0x6000552")]
	[Address(RVA = "0x2CF92B0", Offset = "0x2CF92B0", VA = "0x2CF92B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0x2CF9344", Offset = "0x2CF9344", VA = "0x2CF9344")]
	private void Update()
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0x2CF93A8", Offset = "0x2CF93A8", VA = "0x2CF93A8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0x2CF94FC", Offset = "0x2CF94FC", VA = "0x2CF94FC")]
	public void ShowInformation(string text)
	{
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0x2CF9504", Offset = "0x2CF9504", VA = "0x2CF9504")]
	public CameraInputDemo()
	{
	}
}
[Token(Token = "0x200007D")]
public class EventReceiver : MonoBehaviour
{
	[Token(Token = "0x20004E7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1469DBC", Offset = "0x1469DBC")]
	private sealed class <SetDestinationRoutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EventReceiver <>4__this;

		[Token(Token = "0x4001EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEngine.Object target;

		[Token(Token = "0x4001EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private NavMeshAgent <agent>5__2;

		[Token(Token = "0x4001EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private navMove <myMove>5__3;

		[Token(Token = "0x4001EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <remain>5__4;

		[Token(Token = "0x17000488")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60023D4")]
			[Address(RVA = "0x1E827E0", Offset = "0x1E827E0", VA = "0x1E827E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000489")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60023D6")]
			[Address(RVA = "0x1E82848", Offset = "0x1E82848", VA = "0x1E82848", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023D1")]
		[Address(RVA = "0x1E822B0", Offset = "0x1E822B0", VA = "0x1E822B0")]
		[DebuggerHidden]
		public <SetDestinationRoutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60023D2")]
		[Address(RVA = "0x1E82540", Offset = "0x1E82540", VA = "0x1E82540", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60023D3")]
		[Address(RVA = "0x1E82544", Offset = "0x1E82544", VA = "0x1E82544", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60023D5")]
		[Address(RVA = "0x1E827E8", Offset = "0x1E827E8", VA = "0x1E827E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1469DCC", Offset = "0x1469DCC")]
	private sealed class <ActivateForTimeRoutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEngine.Object target;

		[Token(Token = "0x4001F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject <tar>5__2;

		[Token(Token = "0x1700048A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60023DA")]
			[Address(RVA = "0x1E824D0", Offset = "0x1E824D0", VA = "0x1E824D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700048B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60023DC")]
			[Address(RVA = "0x1E82538", Offset = "0x1E82538", VA = "0x1E82538", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023D7")]
		[Address(RVA = "0x1E82384", Offset = "0x1E82384", VA = "0x1E82384")]
		[DebuggerHidden]
		public <ActivateForTimeRoutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60023D8")]
		[Address(RVA = "0x1E823B8", Offset = "0x1E823B8", VA = "0x1E823B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60023D9")]
		[Address(RVA = "0x1E823BC", Offset = "0x1E823BC", VA = "0x1E823BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60023DB")]
		[Address(RVA = "0x1E824D8", Offset = "0x1E824D8", VA = "0x1E824D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0x1E82110", Offset = "0x1E82110", VA = "0x1E82110")]
	public void MyMethod()
	{
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0x1E82114", Offset = "0x1E82114", VA = "0x1E82114")]
	public void PrintText(string text)
	{
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0x1E8217C", Offset = "0x1E8217C", VA = "0x1E8217C")]
	public void RotateSprite(float newRot)
	{
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0x1E821EC", Offset = "0x1E821EC", VA = "0x1E821EC")]
	public void SetDestination(UnityEngine.Object target)
	{
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0x1E82218", Offset = "0x1E82218", VA = "0x1E82218")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x147F980", Offset = "0x147F980")]
	private IEnumerator SetDestinationRoutine(UnityEngine.Object target)
	{
		return null;
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0x1E822DC", Offset = "0x1E822DC", VA = "0x1E822DC")]
	public void ActivateForTime(UnityEngine.Object target)
	{
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0x1E82308", Offset = "0x1E82308", VA = "0x1E82308")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x147F9E4", Offset = "0x147F9E4")]
	private IEnumerator ActivateForTimeRoutine(UnityEngine.Object target)
	{
		return null;
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0x1E823B0", Offset = "0x1E823B0", VA = "0x1E823B0")]
	public EventReceiver()
	{
	}
}
[Token(Token = "0x200007E")]
public class PathInputDemo : MonoBehaviour
{
	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speedMultiplier;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float progress;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private splineMove move;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Animator animator;

	[Token(Token = "0x600055F")]
	[Address(RVA = "0x20BECD0", Offset = "0x20BECD0", VA = "0x20BECD0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0x20BED88", Offset = "0x20BED88", VA = "0x20BED88")]
	private void Update()
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0x20BEF90", Offset = "0x20BEF90", VA = "0x20BEF90")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0x20BF05C", Offset = "0x20BF05C", VA = "0x20BF05C")]
	public PathInputDemo()
	{
	}
}
[Token(Token = "0x200007F")]
public class RapidInputDemo : MonoBehaviour
{
	[Token(Token = "0x20004E9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1469DDC", Offset = "0x1469DDC")]
	private sealed class <SlowDown>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RapidInputDemo <>4__this;

		[Token(Token = "0x4001F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <t>5__2;

		[Token(Token = "0x4001F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <rate>5__3;

		[Token(Token = "0x4001F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <speed>5__4;

		[Token(Token = "0x1700048C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60023E0")]
			[Address(RVA = "0x20C1710", Offset = "0x20C1710", VA = "0x20C1710", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700048D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60023E2")]
			[Address(RVA = "0x20C1778", Offset = "0x20C1778", VA = "0x20C1778", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023DD")]
		[Address(RVA = "0x20C1444", Offset = "0x20C1444", VA = "0x20C1444")]
		[DebuggerHidden]
		public <SlowDown>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x60023DE")]
		[Address(RVA = "0x20C148C", Offset = "0x20C148C", VA = "0x20C148C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60023DF")]
		[Address(RVA = "0x20C1490", Offset = "0x20C1490", VA = "0x20C1490", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60023E1")]
		[Address(RVA = "0x20C1718", Offset = "0x20C1718", VA = "0x20C1718", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMesh speedDisplay;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh timeDisplay;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float topSpeed;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float addSpeed;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float delay;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float slowTime;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float minPitch;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float maxPitch;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private splineMove move;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float currentSpeed;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float timeCounter;

	[Token(Token = "0x6000563")]
	[Address(RVA = "0x20C0F90", Offset = "0x20C0F90", VA = "0x20C0F90")]
	private void Start()
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0x20C10E8", Offset = "0x20C10E8", VA = "0x20C10E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0x20C13C8", Offset = "0x20C13C8", VA = "0x20C13C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x147FA48", Offset = "0x147FA48")]
	private IEnumerator SlowDown()
	{
		return null;
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0x20C1470", Offset = "0x20C1470", VA = "0x20C1470")]
	public RapidInputDemo()
	{
	}
}
[Token(Token = "0x2000080")]
public class RotationHelper : MonoBehaviour
{
	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float duration;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int rotation;

	[Token(Token = "0x6000567")]
	[Address(RVA = "0x289AD8C", Offset = "0x289AD8C", VA = "0x289AD8C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0x289AE4C", Offset = "0x289AE4C", VA = "0x289AE4C")]
	public RotationHelper()
	{
	}
}
[Token(Token = "0x2000081")]
public class RuntimeDemo : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20004EA")]
	public class ExampleClass1
	{
		[Token(Token = "0x4001F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject walkerPrefab;

		[Token(Token = "0x4001F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject pathPrefab;

		[Token(Token = "0x4001F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool done;

		[Token(Token = "0x60023E3")]
		[Address(RVA = "0x289C598", Offset = "0x289C598", VA = "0x289C598")]
		public ExampleClass1()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20004EB")]
	public class ExampleClass2
	{
		[Token(Token = "0x4001F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public splineMove moveRef;

		[Token(Token = "0x4001F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string pathName1;

		[Token(Token = "0x4001F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string pathName2;

		[Token(Token = "0x60023E4")]
		[Address(RVA = "0x289C5A0", Offset = "0x289C5A0", VA = "0x289C5A0")]
		public ExampleClass2()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20004EC")]
	public class ExampleClass3
	{
		[Token(Token = "0x4001F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public splineMove moveRef;

		[Token(Token = "0x60023E5")]
		[Address(RVA = "0x289C5A8", Offset = "0x289C5A8", VA = "0x289C5A8")]
		public ExampleClass3()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20004ED")]
	public class ExampleClass4
	{
		[Token(Token = "0x4001F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public splineMove moveRef;

		[Token(Token = "0x60023E6")]
		[Address(RVA = "0x289C5B0", Offset = "0x289C5B0", VA = "0x289C5B0")]
		public ExampleClass4()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20004EE")]
	public class ExampleClass5
	{
		[Token(Token = "0x4001F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public splineMove moveRef;

		[Token(Token = "0x60023E7")]
		[Address(RVA = "0x289C5B8", Offset = "0x289C5B8", VA = "0x289C5B8")]
		public ExampleClass5()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20004EF")]
	public class ExampleClass6
	{
		[Token(Token = "0x4001F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public splineMove moveRef;

		[Token(Token = "0x4001F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject target;

		[Token(Token = "0x4001F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool done;

		[Token(Token = "0x60023E8")]
		[Address(RVA = "0x289C5C0", Offset = "0x289C5C0", VA = "0x289C5C0")]
		public ExampleClass6()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20004F0")]
	public class ExampleClass7
	{
		[Token(Token = "0x4001F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool done;

		[Token(Token = "0x60023E9")]
		[Address(RVA = "0x289C5C8", Offset = "0x289C5C8", VA = "0x289C5C8")]
		public ExampleClass7()
		{
		}
	}

	[Token(Token = "0x20004F1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1469DEC", Offset = "0x1469DEC")]
	private sealed class <>c__DisplayClass13_0
	{
		[Token(Token = "0x4001F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EventReceiver receiver;

		[Token(Token = "0x4001F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RuntimeDemo <>4__this;

		[Token(Token = "0x60023EA")]
		[Address(RVA = "0x289C554", Offset = "0x289C554", VA = "0x289C554")]
		public <>c__DisplayClass13_0()
		{
		}

		[Token(Token = "0x60023EB")]
		[Address(RVA = "0x289C564", Offset = "0x289C564", VA = "0x289C564")]
		internal void <DrawExample6>b__0()
		{
		}
	}

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ExampleClass1 example1;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ExampleClass2 example2;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ExampleClass3 example3;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ExampleClass4 example4;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ExampleClass5 example5;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ExampleClass6 example6;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ExampleClass6 example7;

	[Token(Token = "0x6000569")]
	[Address(RVA = "0x289AE54", Offset = "0x289AE54", VA = "0x289AE54")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0x289AEA0", Offset = "0x289AEA0", VA = "0x289AEA0")]
	private void DrawExample1()
	{
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0x289B28C", Offset = "0x289B28C", VA = "0x289B28C")]
	private void DrawExample2()
	{
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0x289B46C", Offset = "0x289B46C", VA = "0x289B46C")]
	private void DrawExample3()
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x289B6C0", Offset = "0x289B6C0", VA = "0x289B6C0")]
	private void DrawExample4()
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x289B8A4", Offset = "0x289B8A4", VA = "0x289B8A4")]
	private void DrawExample5()
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0x289B9F0", Offset = "0x289B9F0", VA = "0x289B9F0")]
	private void DrawExample6()
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0x289BC0C", Offset = "0x289BC0C", VA = "0x289BC0C")]
	private void DrawExample7()
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0x289C55C", Offset = "0x289C55C", VA = "0x289C55C")]
	public RuntimeDemo()
	{
	}
}
[Token(Token = "0x2000082")]
public class ShowcaseGUI : MonoBehaviour
{
	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ShowcaseGUI instance;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int levels;

	[Token(Token = "0x6000572")]
	[Address(RVA = "0x1F01BE0", Offset = "0x1F01BE0", VA = "0x1F01BE0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0x1F01FFC", Offset = "0x1F01FFC", VA = "0x1F01FFC")]
	private void OnLevelLoaded(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0x1F01D50", Offset = "0x1F01D50", VA = "0x1F01D50")]
	private void ActivateSurroundings()
	{
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0x1F02000", Offset = "0x1F02000", VA = "0x1F02000")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x1F025A0", Offset = "0x1F025A0", VA = "0x1F025A0")]
	public ShowcaseGUI()
	{
	}
}
[Token(Token = "0x2000083")]
public class AlphaButtonClickMask : MonoBehaviour, ICanvasRaycastFilter
{
	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected UnityEngine.UI.Image _image;

	[Token(Token = "0x6000577")]
	[Address(RVA = "0x1EC5604", Offset = "0x1EC5604", VA = "0x1EC5604")]
	public void Start()
	{
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0x1EC57C4", Offset = "0x1EC57C4", VA = "0x1EC57C4", Slot = "4")]
	public bool IsRaycastLocationValid(Vector2 sp, Camera eventCamera)
	{
		return default(bool);
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0x1EC5AD0", Offset = "0x1EC5AD0", VA = "0x1EC5AD0")]
	public AlphaButtonClickMask()
	{
	}
}
[Token(Token = "0x2000084")]
public class EventSystemChecker : MonoBehaviour
{
	[Token(Token = "0x600057A")]
	[Address(RVA = "0x1E82850", Offset = "0x1E82850", VA = "0x1E82850")]
	private void Awake()
	{
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0x1E8292C", Offset = "0x1E8292C", VA = "0x1E8292C")]
	public EventSystemChecker()
	{
	}
}
[Token(Token = "0x2000085")]
public class RotatingCamera : MonoBehaviour
{
	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform cameraTransform;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform rotateTransform;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform zoomTransform;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float rotationSpeed;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float zoomSpeed;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float camSpeed;

	[Token(Token = "0x600057C")]
	[Address(RVA = "0x289A744", Offset = "0x289A744", VA = "0x289A744")]
	private void Update()
	{
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0x289AD74", Offset = "0x289AD74", VA = "0x289AD74")]
	public RotatingCamera()
	{
	}
}
[Token(Token = "0x2000086")]
[ExecuteInEditMode]
public class RotateGameObject : MonoBehaviour
{
	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 rotationSpeed;

	[Token(Token = "0x600057E")]
	[Address(RVA = "0x289A628", Offset = "0x289A628", VA = "0x289A628")]
	private void Update()
	{
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0x289A6E4", Offset = "0x289A6E4", VA = "0x289A6E4")]
	public RotateGameObject()
	{
	}
}
[Token(Token = "0x2000087")]
[ExecuteInEditMode]
public class PoliceLight : MonoBehaviour
{
	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float rotationSpeed;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float offset;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Light white1;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Light white2;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float whiteLightFlashSpeed;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float whiteLightIntensity;

	[Token(Token = "0x6000580")]
	[Address(RVA = "0x20BF3F4", Offset = "0x20BF3F4", VA = "0x20BF3F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0x20BF54C", Offset = "0x20BF54C", VA = "0x20BF54C")]
	public PoliceLight()
	{
	}
}
[Token(Token = "0x2000088")]
public class AnimateParticleSystem : MonoBehaviour
{
	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x6000582")]
	[Address(RVA = "0x1ED81B0", Offset = "0x1ED81B0", VA = "0x1ED81B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0x1ED81BC", Offset = "0x1ED81BC", VA = "0x1ED81BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0x1ED835C", Offset = "0x1ED835C", VA = "0x1ED835C")]
	public AnimateParticleSystem()
	{
	}
}
[Token(Token = "0x2000089")]
public class LoadScene : MonoBehaviour
{
	[Token(Token = "0x6000585")]
	[Address(RVA = "0x1D80E3C", Offset = "0x1D80E3C", VA = "0x1D80E3C")]
	public void LoadNextScene(int index)
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0x1D80EA4", Offset = "0x1D80EA4", VA = "0x1D80EA4")]
	public LoadScene()
	{
	}
}
[Serializable]
[Token(Token = "0x200008A")]
public class ColorGradientBundle
{
	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GPUParticleSystem.ColorMode mode;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float intensity;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEngine.Color color1;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEngine.Color color2;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Gradient gradient1;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Gradient gradient2;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float seed;

	[Token(Token = "0x6000587")]
	[Address(RVA = "0x2D0D960", Offset = "0x2D0D960", VA = "0x2D0D960")]
	public ColorGradientBundle()
	{
	}
}
[Serializable]
[Token(Token = "0x200008B")]
public class FloatCurveBundle
{
	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GPUParticleSystem.ValueMode mode;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float value1;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float value2;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve curve1;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve curve2;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector2 minMax;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float seed;

	[Token(Token = "0x6000588")]
	[Address(RVA = "0x297BA4C", Offset = "0x297BA4C", VA = "0x297BA4C")]
	public FloatCurveBundle(float value1, float value2)
	{
	}
}
[Serializable]
[Token(Token = "0x200008C")]
public class IntCurveBundle
{
	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GPUParticleSystem.ValueMode mode;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int value1;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int value2;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve curve1;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve curve2;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float seed;

	[Token(Token = "0x6000589")]
	[Address(RVA = "0x2206B94", Offset = "0x2206B94", VA = "0x2206B94")]
	public IntCurveBundle()
	{
	}
}
[Serializable]
[Token(Token = "0x200008D")]
public class ShaderCurveBundle
{
	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GPUParticleSystem.CurveMode mode;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float multiplier;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float skew;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool invert;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve curve1;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve curve2;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector2 minMax;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float seed;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4[] bezier1;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector4[] bezier2;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146C808", Offset = "0x146C808")]
	private Material <preview>k__BackingField;

	[Token(Token = "0x1700010A")]
	private Material preview
	{
		[Token(Token = "0x600058A")]
		[Address(RVA = "0x1F01560", Offset = "0x1F01560", VA = "0x1F01560")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147FAAC", Offset = "0x147FAAC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600058B")]
		[Address(RVA = "0x1F01568", Offset = "0x1F01568", VA = "0x1F01568")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147FABC", Offset = "0x147FABC")]
		set
		{
		}
	}

	[Token(Token = "0x1700010B")]
	public Material curvePreview
	{
		[Token(Token = "0x600058D")]
		[Address(RVA = "0x1F01698", Offset = "0x1F01698", VA = "0x1F01698")]
		get
		{
			return null;
		}
		[Token(Token = "0x600058E")]
		[Address(RVA = "0x1F01768", Offset = "0x1F01768", VA = "0x1F01768")]
		set
		{
		}
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0x1F01570", Offset = "0x1F01570", VA = "0x1F01570")]
	public void Apply()
	{
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0x1F01770", Offset = "0x1F01770", VA = "0x1F01770")]
	public ShaderCurveBundle()
	{
	}
}
[Serializable]
[Token(Token = "0x200008E")]
public class SingleFloatCurveBundle
{
	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GPUParticleSystem.SimpleValueMode mode;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float value;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve curve;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 minMax;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float seed;

	[Token(Token = "0x6000590")]
	[Address(RVA = "0x1F034E8", Offset = "0x1F034E8", VA = "0x1F034E8")]
	public SingleFloatCurveBundle(float value)
	{
	}
}
[Serializable]
[Token(Token = "0x200008F")]
public class Vector3CurveBundle
{
	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GPUParticleSystem.ValueMode mode;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector3 value1;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 value2;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve curve1_1;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve curve1_2;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve curve1_3;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve curve2_1;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve curve2_2;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AnimationCurve curve2_3;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector2 minMax;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float seed;

	[Token(Token = "0x6000591")]
	[Address(RVA = "0x2A85DD0", Offset = "0x2A85DD0", VA = "0x2A85DD0")]
	public Vector3CurveBundle()
	{
	}
}
[Token(Token = "0x2000090")]
public class ShaderSupportTest : MonoBehaviour
{
	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader[] shaders;

	[Token(Token = "0x6000592")]
	[Address(RVA = "0x1F01824", Offset = "0x1F01824", VA = "0x1F01824")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0x1F01A58", Offset = "0x1F01A58", VA = "0x1F01A58")]
	public ShaderSupportTest()
	{
	}
}
[Token(Token = "0x2000091")]
[ExecuteInEditMode]
public class ShowFrameRate : MonoBehaviour
{
	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text text;

	[Token(Token = "0x6000594")]
	[Address(RVA = "0x1F01A60", Offset = "0x1F01A60", VA = "0x1F01A60")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0x1F01BD8", Offset = "0x1F01BD8", VA = "0x1F01BD8")]
	public ShowFrameRate()
	{
	}
}
[Token(Token = "0x2000092")]
[ExecuteInEditMode]
public class GPUParticleSystem : MonoBehaviour
{
	[Token(Token = "0x20004F2")]
	public enum MeshBakeType
	{
		[Token(Token = "0x4001F18")]
		Vertex,
		[Token(Token = "0x4001F19")]
		Edge,
		[Token(Token = "0x4001F1A")]
		Triangle
	}

	[Token(Token = "0x20004F3")]
	public enum GPUParticleBlendMode
	{
		[Token(Token = "0x4001F1C")]
		Alpha,
		[Token(Token = "0x4001F1D")]
		Additive,
		[Token(Token = "0x4001F1E")]
		Screen,
		[Token(Token = "0x4001F1F")]
		Premultiplied,
		[Token(Token = "0x4001F20")]
		Subtractive,
		[Token(Token = "0x4001F21")]
		Multiply,
		[Token(Token = "0x4001F22")]
		CutOff,
		[Token(Token = "0x4001F23")]
		Opaque
	}

	[Token(Token = "0x20004F4")]
	public enum CurveMode
	{
		[Token(Token = "0x4001F25")]
		Off,
		[Token(Token = "0x4001F26")]
		Linear,
		[Token(Token = "0x4001F27")]
		Smooth,
		[Token(Token = "0x4001F28")]
		Curve,
		[Token(Token = "0x4001F29")]
		RandomTwoCurves
	}

	[Token(Token = "0x20004F5")]
	public enum GPUParticleSystemState
	{
		[Token(Token = "0x4001F2B")]
		Uninitialized,
		[Token(Token = "0x4001F2C")]
		Paused,
		[Token(Token = "0x4001F2D")]
		Stopped,
		[Token(Token = "0x4001F2E")]
		Playing
	}

	[Token(Token = "0x20004F6")]
	public enum EmitterShape
	{
		[Token(Token = "0x4001F30")]
		Point,
		[Token(Token = "0x4001F31")]
		Edge,
		[Token(Token = "0x4001F32")]
		Circle,
		[Token(Token = "0x4001F33")]
		Box,
		[Token(Token = "0x4001F34")]
		HemiSphere,
		[Token(Token = "0x4001F35")]
		Sphere,
		[Token(Token = "0x4001F36")]
		Cone,
		[Token(Token = "0x4001F37")]
		Texture,
		[Token(Token = "0x4001F38")]
		Mesh,
		[Token(Token = "0x4001F39")]
		MeshFilter,
		[Token(Token = "0x4001F3A")]
		SkinnedMeshRenderer
	}

	[Token(Token = "0x20004F7")]
	public enum ParticleType
	{
		[Token(Token = "0x4001F3C")]
		Point,
		[Token(Token = "0x4001F3D")]
		Triangle,
		[Token(Token = "0x4001F3E")]
		Billboard,
		[Token(Token = "0x4001F3F")]
		HorizontalBillboard,
		[Token(Token = "0x4001F40")]
		VerticalBillboard,
		[Token(Token = "0x4001F41")]
		StretchedTail,
		[Token(Token = "0x4001F42")]
		StretchedBillboard,
		[Token(Token = "0x4001F43")]
		Mesh
	}

	[Token(Token = "0x20004F8")]
	public enum TurbulenceType
	{
		[Token(Token = "0x4001F45")]
		Off,
		[Token(Token = "0x4001F46")]
		Texture,
		[Token(Token = "0x4001F47")]
		VectorField
	}

	[Token(Token = "0x20004F9")]
	public enum GPUSimulationSpace
	{
		[Token(Token = "0x4001F49")]
		Local,
		[Token(Token = "0x4001F4A")]
		World
	}

	[Token(Token = "0x20004FA")]
	public enum ValueMode
	{
		[Token(Token = "0x4001F4C")]
		Value,
		[Token(Token = "0x4001F4D")]
		RandomTwoValues,
		[Token(Token = "0x4001F4E")]
		Curve,
		[Token(Token = "0x4001F4F")]
		RandomTwoCurves
	}

	[Token(Token = "0x20004FB")]
	public enum ColorMode
	{
		[Token(Token = "0x4001F51")]
		Color,
		[Token(Token = "0x4001F52")]
		RandomTwoColors,
		[Token(Token = "0x4001F53")]
		Gradient,
		[Token(Token = "0x4001F54")]
		RandomTwoGradients
	}

	[Token(Token = "0x20004FC")]
	public enum SimpleValueMode
	{
		[Token(Token = "0x4001F56")]
		Value,
		[Token(Token = "0x4001F57")]
		Curve
	}

	[Token(Token = "0x20004FD")]
	public enum TextureSheetMode
	{
		[Token(Token = "0x4001F59")]
		Off,
		[Token(Token = "0x4001F5A")]
		TextureSheet,
		[Token(Token = "0x4001F5B")]
		TextureSheetBlended,
		[Token(Token = "0x4001F5C")]
		TextureSheetMotionVectors
	}

	[Token(Token = "0x20004FE")]
	public enum RenderTexturePrecision
	{
		[Token(Token = "0x4001F5E")]
		Half,
		[Token(Token = "0x4001F5F")]
		Float
	}

	[Token(Token = "0x20004FF")]
	public enum CollisionType
	{
		[Token(Token = "0x4001F61")]
		Off,
		[Token(Token = "0x4001F62")]
		Planes,
		[Token(Token = "0x4001F63")]
		Depth
	}

	[Token(Token = "0x2000500")]
	public enum LightMode
	{
		[Token(Token = "0x4001F65")]
		Off,
		[Token(Token = "0x4001F66")]
		Standard,
		[Token(Token = "0x4001F67")]
		Refraction
	}

	[Token(Token = "0x400037C")]
	private const int particleColorPrecision = 256;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 safetyVector;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private int customInstanceID;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GPUParticleSystemBuffer particleData;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material particleMaterial;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int renderQueue;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject[] particleMeshes;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MeshFilter[] particleMeshFilters;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int bufferWidth;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int bufferHeight;

	[NonSerialized]
	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float customTime;

	[NonSerialized]
	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float customDeltaTime;

	[NonSerialized]
	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float previousFrameTime;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public RenderTexturePrecision precision;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool useFixedDeltaTime;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float fixedDeltaTime;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int burstNum;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ShaderVariantCollection shaderVariantCollection;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float startID;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float endID;

	[NonSerialized]
	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GPUParticleSystemState state;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public bool playOnAwake;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
	public bool loop;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8E")]
	public bool emit;

	[NonSerialized]
	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float effectStartTime;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float effectLength;

	[NonSerialized]
	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float progress;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float timeScale;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public EmitterShape emitterShape;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float param1;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float param2;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float param3;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float param4;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float randomness;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public bool emitFromShell;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
	public bool emitFromBase;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public GPUSimulationSpace simulationSpace;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public List<GPUParticleSystemBurst> bursts;

	[NonSerialized]
	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private List<GPUParticleSystemBurst> currentBursts;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int burst;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Mesh meshEmitter;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Vector3 center;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public Vector3 extents;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Bounds boundsBuffer;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public MeshFilter meshFilterEmitter;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public int meshEmitterResolution;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public MeshBakeType meshBakeType;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Texture2D meshEmitterPositionTexture;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Texture2D meshEmitterNormalTexture;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private float meshEmitterSize;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public int smeLayer;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public int skinnedMeshEmitterResolution;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public SkinnedMeshRenderer skinnedMeshEmitter;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private SkinnedMeshRenderer skinnedMeshEmitterSME;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private GameObject sme;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Transform skinnedMeshEmitterTransform;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Camera skinnedMeshEmitterCam;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public Transform skinnedMeshEmitterCamTransform;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Material skinnedMeshEmitterMaterial;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private RenderTexture skinnedMeshEmitterPositionTexture;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public Mesh skinnedMeshEmitterConvertedMesh;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public FloatCurveBundle emissionRate;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public int maxParticles;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public FloatCurveBundle startLifetime;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public FloatCurveBundle startSize;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public FloatCurveBundle startSpeed;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public FloatCurveBundle startRotation;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public bool useRotation;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public ShaderCurveBundle sizeOverLifetime;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public ShaderCurveBundle rotationOverLifetime;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public ColorGradientBundle colorOverLifetime;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public SingleFloatCurveBundle colorIntensityOverLifetime;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public SingleFloatCurveBundle maxVelocity;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public bool useMaxVelocity;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private Texture2D colorTexture;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public ParticleType particleType;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public Mesh meshParticle;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public SingleFloatCurveBundle gravity;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private Vector3 previousEmitterPosition;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
	private Vector3 emitterVelocity;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public SingleFloatCurveBundle inheritVelocityMultiplyer;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public bool useInheritVelocity;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public SingleFloatCurveBundle airResistance;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public Vector3CurveBundle forceOverLifetime;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public bool useCircularForce;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public Vector3CurveBundle circularForce;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public Transform circularForceCenter;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public TurbulenceType turbulenceType;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public TextAsset fgaFile;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public Texture3D vectorField;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public Texture2D vectorNoise;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public float Tightness;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public Vector3CurveBundle turbulenceAmplitude;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public Vector3CurveBundle turbulenceFrequency;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	public Vector3CurveBundle turbulenceOffset;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	public Vector3CurveBundle turbulenceRotation;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	[SerializeField]
	private Transform vectorFieldObject;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	public List<Attractor> attractors;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	public bool useMeshTarget;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B9")]
	public bool useMeshFilter;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	public SingleFloatCurveBundle meshTargetStrength;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	public SingleFloatCurveBundle onTarget;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	public Mesh meshTarget;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	public MeshFilter meshFilterTarget;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	public int meshTargetResolution;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
	public MeshBakeType targetBakeType;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	public Texture2D meshTargetPositionTexture;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	private float meshTargetSize;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F4")]
	public CollisionType collisionType;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	public Vector4[] planePositions;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	public Vector4[] planeNormals;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	public Transform[] planes;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	public float[] collisionDamping;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	public Camera collisionCamera;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	public Transform collisionCameraTransform;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	private Matrix4x4 MVP;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	public float depthCollisionDamping;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36C")]
	public float dampingRandomness;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	public float depthCollisionDistance;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x374")]
	public float aspectRatio;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
	public Vector3 forwardVector;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x384")]
	public Vector3 offset;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
	public Texture2D mainTexture;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
	public Texture2D motionVectors;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
	public TextureSheetMode textureSheetMode;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A4")]
	public float motionVectorStrength;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
	public bool textureSheetRandomIndex;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3AC")]
	public int rows;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
	public int columns;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B4")]
	public GPUParticleBlendMode blendMode;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
	public bool useZbuffer;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3BC")]
	public float stretchMultiplier;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
	public Vector2 minMaxStretch;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
	public LightMode lightMode;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3CC")]
	public float metallic;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
	public float smoothness;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
	public Texture2D metallicSmoothness;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
	public Texture2D normalMap;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
	public Texture2D emissionMap;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
	public ShadowCastingMode castShadows;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F4")]
	public bool receiveShadows;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F8")]
	public Texture2D refractionNormals;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
	public float indexOfRefraction;

	[Token(Token = "0x6000596")]
	[Address(RVA = "0x297BB14", Offset = "0x297BB14", VA = "0x297BB14")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0x297C2E0", Offset = "0x297C2E0", VA = "0x297C2E0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0x297C5F0", Offset = "0x297C5F0", VA = "0x297C5F0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0x297C6BC", Offset = "0x297C6BC", VA = "0x297C6BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0x297C7F4", Offset = "0x297C7F4", VA = "0x297C7F4")]
	private void Update()
	{
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0x297C850", Offset = "0x297C850", VA = "0x297C850")]
	private void UpdateCustomTime()
	{
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0x297C8C8", Offset = "0x297C8C8", VA = "0x297C8C8")]
	private void UpdateProgress()
	{
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0x297C20C", Offset = "0x297C20C", VA = "0x297C20C")]
	public void SetRenderQueue()
	{
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0x297C230", Offset = "0x297C230", VA = "0x297C230")]
	public void Play()
	{
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0x297CC4C", Offset = "0x297CC4C", VA = "0x297CC4C")]
	public void Pause()
	{
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0x297C324", Offset = "0x297C324", VA = "0x297C324")]
	public void Stop()
	{
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0x297CD14", Offset = "0x297CD14", VA = "0x297CD14")]
	public void Restart()
	{
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0x297CD50", Offset = "0x297CD50", VA = "0x297CD50")]
	public void Emit(int numParticles)
	{
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0x297CD70", Offset = "0x297CD70", VA = "0x297CD70")]
	public void UpdateEmitter()
	{
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0x297C6F4", Offset = "0x297C6F4", VA = "0x297C6F4")]
	public void ReSeed()
	{
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0x297D084", Offset = "0x297D084", VA = "0x297D084")]
	public void AddBurst(int min, int max, float time, float probability, bool playOnce)
	{
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0x297D164", Offset = "0x297D164", VA = "0x297D164")]
	public void AddBurst()
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0x297D1EC", Offset = "0x297D1EC", VA = "0x297D1EC")]
	public void AddAttractor()
	{
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0x297D290", Offset = "0x297D290", VA = "0x297D290")]
	public void RemoveAttractor(int index)
	{
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0x297D2F8", Offset = "0x297D2F8", VA = "0x297D2F8")]
	public void RemoveLastAttractor()
	{
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0x297D368", Offset = "0x297D368", VA = "0x297D368")]
	public void RemoveBurst(int index)
	{
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0x297D3EC", Offset = "0x297D3EC", VA = "0x297D3EC")]
	public void RemoveLastBurst()
	{
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0x297BC78", Offset = "0x297BC78", VA = "0x297BC78")]
	public void PrepareParticleData()
	{
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0x297C35C", Offset = "0x297C35C", VA = "0x297C35C")]
	public void ClearParticleData()
	{
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0x297CB58", Offset = "0x297CB58", VA = "0x297CB58")]
	private void InternalEmit()
	{
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0x297CA40", Offset = "0x297CA40", VA = "0x297CA40")]
	private void InternalEvaluateBurst()
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0x297CC08", Offset = "0x297CC08", VA = "0x297CC08")]
	private void InternalStep()
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0x297C04C", Offset = "0x297C04C", VA = "0x297C04C")]
	private void Initialize()
	{
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0x297E248", Offset = "0x297E248", VA = "0x297E248")]
	private void UpdateValues()
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0x297CD60", Offset = "0x297CD60", VA = "0x297CD60")]
	public void EmitNumParticles(int numParticles)
	{
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0x2982390", Offset = "0x2982390", VA = "0x2982390")]
	public void ForceRecreateParticles()
	{
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0x297BD28", Offset = "0x297BD28", VA = "0x297BD28")]
	private void MakeMeshes()
	{
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0x297C468", Offset = "0x297C468", VA = "0x297C468")]
	private void ClearMeshes()
	{
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0x2980644", Offset = "0x2980644", VA = "0x2980644")]
	public void SetShadowSettings()
	{
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0x2981998", Offset = "0x2981998", VA = "0x2981998")]
	public void UpdatePositionOffset()
	{
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0x2981938", Offset = "0x2981938", VA = "0x2981938")]
	public void UpdateAspectRatio()
	{
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0x297C9D0", Offset = "0x297C9D0", VA = "0x297C9D0")]
	private void UpdateTimeInMaterials()
	{
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0x297E604", Offset = "0x297E604", VA = "0x297E604")]
	public void SetMainTexture()
	{
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0x297E734", Offset = "0x297E734", VA = "0x297E734")]
	public void SetMetallicSmoothnessMapTexture()
	{
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0x297E6B4", Offset = "0x297E6B4", VA = "0x297E6B4")]
	public void SetMetallicSmoothnessValue()
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0x297E7E4", Offset = "0x297E7E4", VA = "0x297E7E4")]
	public void SetNormalMapTexture()
	{
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0x298077C", Offset = "0x298077C", VA = "0x298077C")]
	public void SetRefractionMapTexture()
	{
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0x297E894", Offset = "0x297E894", VA = "0x297E894")]
	public void SetEmissionMapTexture()
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x297E944", Offset = "0x297E944", VA = "0x297E944")]
	private void SetMetaTexture()
	{
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0x297E9AC", Offset = "0x297E9AC", VA = "0x297E9AC")]
	private void SetVelocityTexture()
	{
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0x297EA14", Offset = "0x297EA14", VA = "0x297EA14")]
	private void SetPositionTexture()
	{
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0x297EB0C", Offset = "0x297EB0C", VA = "0x297EB0C")]
	private void SetParticleStretch()
	{
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0x2980A18", Offset = "0x2980A18", VA = "0x2980A18")]
	public void UpdateDepthCollisionValues()
	{
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0x2980940", Offset = "0x2980940", VA = "0x2980940")]
	public void UpdateCollisionCamera()
	{
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0x2982094", Offset = "0x2982094", VA = "0x2982094")]
	public void UpdateCollisionMatrices()
	{
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0x2981CAC", Offset = "0x2981CAC", VA = "0x2981CAC")]
	public void UpdateWorldSpaceBoundingBox()
	{
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0x2985FD4", Offset = "0x2985FD4", VA = "0x2985FD4")]
	public void SetupSkinnedMeshEmitterCamera()
	{
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0x29864C4", Offset = "0x29864C4", VA = "0x29864C4")]
	public void DeactivateSkinnedMeshEmitter()
	{
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0x2986240", Offset = "0x2986240", VA = "0x2986240")]
	public void UpdateSkinnedMeshEmitterCameraLayer()
	{
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0x29862E0", Offset = "0x29862E0", VA = "0x29862E0")]
	public void UpdateskinnedMeshEmitterPositionTexture()
	{
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0x2981F94", Offset = "0x2981F94", VA = "0x2981F94")]
	public void RenderSkinnedMeshEmitterPositions()
	{
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0x297F590", Offset = "0x297F590", VA = "0x297F590")]
	public void PrepareSkinnedMesh()
	{
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0x297F410", Offset = "0x297F410", VA = "0x297F410")]
	public void UpdateMeshTargetTexture()
	{
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0x297F568", Offset = "0x297F568", VA = "0x297F568")]
	public void UpdateMeshTargetParameters()
	{
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0x2981A48", Offset = "0x2981A48", VA = "0x2981A48")]
	public void UpdateMeshTargetMatrix()
	{
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0x29815F0", Offset = "0x29815F0", VA = "0x29815F0")]
	public void UpdateCollisionPlanes()
	{
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0x2987324", Offset = "0x2987324", VA = "0x2987324")]
	public void UpdateParticleMainTex(Texture2D mainTexture)
	{
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0x29818D8", Offset = "0x29818D8", VA = "0x29818D8")]
	public void UpdateMotionVectorStrength()
	{
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0x297FCE0", Offset = "0x297FCE0", VA = "0x297FCE0")]
	public void UpdateMotionVectorTexture(Texture2D motionVectors)
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0x2980A40", Offset = "0x2980A40", VA = "0x2980A40")]
	public void UpdateStartSpeedAndLifetime()
	{
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0x2980A68", Offset = "0x2980A68", VA = "0x2980A68")]
	public void UpdateStartSizeAndRotation()
	{
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0x2987584", Offset = "0x2987584", VA = "0x2987584")]
	public void UpdateEmitterParameters()
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0x2980A90", Offset = "0x2980A90", VA = "0x2980A90")]
	public void UpdateEmitterMatrix()
	{
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0x298780C", Offset = "0x298780C", VA = "0x298780C")]
	public void UpdateParticleColorIntensity()
	{
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0x2980820", Offset = "0x2980820", VA = "0x2980820")]
	public void UpdateStretchMultiplier()
	{
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0x297F060", Offset = "0x297F060", VA = "0x297F060")]
	public void UpdateColorOverLifeTime()
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0x298121C", Offset = "0x298121C", VA = "0x298121C")]
	public void UpdateColorIntensity()
	{
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0x298153C", Offset = "0x298153C", VA = "0x298153C")]
	public void UpdateMaxVelocityOverLifetime()
	{
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0x298139C", Offset = "0x298139C", VA = "0x298139C")]
	public void UpdateCircularForceOverLifetime()
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0x29813C0", Offset = "0x29813C0", VA = "0x29813C0")]
	private void UpdateCircularForceCenter()
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0x2980C20", Offset = "0x2980C20", VA = "0x2980C20")]
	public void UpdateSizeOverLifetime()
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0x2980F28", Offset = "0x2980F28", VA = "0x2980F28")]
	public void UpdateRotationOverLifetime()
	{
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0x2981328", Offset = "0x2981328", VA = "0x2981328")]
	public void UpdateGravity()
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0x29812F0", Offset = "0x29812F0", VA = "0x29812F0")]
	public void UpdateAirResistance()
	{
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0x297F000", Offset = "0x297F000", VA = "0x297F000")]
	public void UpdateTurbulenceTexture()
	{
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0x297F968", Offset = "0x297F968", VA = "0x297F968")]
	public void UpdateVectorField()
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0x2981288", Offset = "0x2981288", VA = "0x2981288")]
	public void UpdateAmplitude()
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0x29812AC", Offset = "0x29812AC", VA = "0x29812AC")]
	public void UpdateFrequency()
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0x29812D0", Offset = "0x29812D0", VA = "0x29812D0")]
	public void UpdateTightness()
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0x29811F8", Offset = "0x29811F8", VA = "0x29811F8")]
	public void UpdateOffset()
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0x297EE1C", Offset = "0x297EE1C", VA = "0x297EE1C")]
	public void UpdateVectorfieldFile()
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0x297F988", Offset = "0x297F988", VA = "0x297F988")]
	public void UpdateVectorFieldMatrix()
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0x297F1A8", Offset = "0x297F1A8", VA = "0x297F1A8")]
	public void UpdateEmitterTexture()
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0x2981B58", Offset = "0x2981B58", VA = "0x2981B58")]
	private void UpdateInheritVelocity()
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0x2981ED8", Offset = "0x2981ED8", VA = "0x2981ED8")]
	private void UpdateAttractors()
	{
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0x2981F70", Offset = "0x2981F70", VA = "0x2981F70")]
	public void UpdateForceOverLifetime()
	{
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0x2981560", Offset = "0x2981560", VA = "0x2981560")]
	public void UpdateTextureSheetDimensions(int rows, int columns)
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0x29808E0", Offset = "0x29808E0", VA = "0x29808E0")]
	public void UpdateIndexOfRefraction()
	{
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0x2980614", Offset = "0x2980614", VA = "0x2980614")]
	public void SetMeshTargetKeyword()
	{
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0x297F188", Offset = "0x297F188", VA = "0x297F188")]
	public void SetCollisionType()
	{
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0x29859FC", Offset = "0x29859FC", VA = "0x29859FC")]
	public void SetMainTextureKeyword(bool active)
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0x2985A78", Offset = "0x2985A78", VA = "0x2985A78")]
	public void SetMetallicSmoothnessKeyword(bool active)
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0x2985AF4", Offset = "0x2985AF4", VA = "0x2985AF4")]
	public void SetNormalKeyword(bool active)
	{
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0x2985B70", Offset = "0x2985B70", VA = "0x2985B70")]
	public void SetEmissionKeyword(bool active)
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0x297EEB4", Offset = "0x297EEB4", VA = "0x297EEB4")]
	public void SetTurbulenceKeyword()
	{
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0x297FE68", Offset = "0x297FE68", VA = "0x297FE68")]
	public void SetRotationKeyword()
	{
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0x2989A78", Offset = "0x2989A78", VA = "0x2989A78")]
	public void SetRotationOverLifetimeKeyword(bool active)
	{
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0x2980008", Offset = "0x2980008", VA = "0x2980008")]
	public void SetParticleTypeKeyword(ParticleType type)
	{
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0x297FB18", Offset = "0x297FB18", VA = "0x297FB18")]
	public void SetTextureSheetKeyword(TextureSheetMode mode)
	{
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0x297FDEC", Offset = "0x297FDEC", VA = "0x297FDEC")]
	public void SetRandomIndexKeyword(bool active)
	{
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0x2988144", Offset = "0x2988144", VA = "0x2988144")]
	public void SetSizeOverLifetimeKeyword(CurveMode mode)
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0x2988504", Offset = "0x2988504", VA = "0x2988504")]
	public void SetRotationOverLifetimeKeyword(CurveMode mode)
	{
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0x2980228", Offset = "0x2980228", VA = "0x2980228")]
	public void SetSimulationSpace()
	{
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0x297FED8", Offset = "0x297FED8", VA = "0x297FED8")]
	public void SetEmitterShapeKeyword()
	{
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0x2989B98", Offset = "0x2989B98", VA = "0x2989B98")]
	public void UpdateStartSize()
	{
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0x297F020", Offset = "0x297F020", VA = "0x297F020")]
	public void SetLimitVelocity()
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0x297F040", Offset = "0x297F040", VA = "0x297F040")]
	public void SetCircularForce()
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0x297DE38", Offset = "0x297DE38", VA = "0x297DE38")]
	public void SetLightMode()
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0x297EB6C", Offset = "0x297EB6C", VA = "0x297EB6C")]
	public void SetBlendMode()
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0x298A08C", Offset = "0x298A08C", VA = "0x298A08C")]
	public void SetBlendMode(GPUParticleBlendMode blendMode)
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0x297EDAC", Offset = "0x297EDAC", VA = "0x297EDAC")]
	public void SetZBuffer()
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0x298A2A8", Offset = "0x298A2A8", VA = "0x298A2A8")]
	public void SetZBuffer(bool active)
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0x297FF64", Offset = "0x297FF64", VA = "0x297FF64")]
	public void SetEmitFromShell(bool active)
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0x297FF80", Offset = "0x297FF80", VA = "0x297FF80")]
	public void SetEmitFromBase(bool active)
	{
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0x297FF9C", Offset = "0x297FF9C", VA = "0x297FF9C")]
	public void SetAttractorKeyword()
	{
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0x297EA7C", Offset = "0x297EA7C", VA = "0x297EA7C")]
	public void SetUpDataTextures()
	{
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0x298A494", Offset = "0x298A494", VA = "0x298A494")]
	public void DebugOn()
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0x298A5B8", Offset = "0x298A5B8", VA = "0x298A5B8")]
	public void DebugOff()
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0x298A628", Offset = "0x298A628", VA = "0x298A628")]
	public GPUParticleSystem()
	{
	}
}
[Serializable]
[Token(Token = "0x2000093")]
public class GPUParticleSystemBuffer
{
	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public RenderTexture newParticleBuffer;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RenderTexture metaBuffer_1;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RenderTexture positionBuffer_1;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RenderTexture velocityBuffer_1;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RenderTexture metaBuffer_2;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RenderTexture positionBuffer_2;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RenderTexture velocityBuffer_2;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector4 vector;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector4[] vec;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float[] stren;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Material calculateSpawn;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Material calculateMeta;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Material calculateVelocity;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Material calculatePosition;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Material resetMeta;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Material resetPosition;

	[Token(Token = "0x6000612")]
	[Address(RVA = "0x297D44C", Offset = "0x297D44C", VA = "0x297D44C")]
	public GPUParticleSystemBuffer(int width, int height, RenderTextureFormat precision)
	{
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0x297CC58", Offset = "0x297CC58", VA = "0x297CC58")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0x298AD34", Offset = "0x298AD34", VA = "0x298AD34")]
	private void Setup(int width, int height)
	{
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0x298AD70", Offset = "0x298AD70", VA = "0x298AD70")]
	private void SetUpSpawnMaterial(int width, int height)
	{
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0x298AE00", Offset = "0x298AE00", VA = "0x298AE00")]
	private void SetUpMetaMaterial()
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0x298AEA0", Offset = "0x298AEA0", VA = "0x298AEA0")]
	private void SetUpVelocityMaterial()
	{
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0x298AF60", Offset = "0x298AF60", VA = "0x298AF60")]
	private void SetUpPositionMaterial()
	{
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0x298B020", Offset = "0x298B020", VA = "0x298B020")]
	private void SetUpResetPositionMaterial()
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0x2985BEC", Offset = "0x2985BEC", VA = "0x2985BEC")]
	public void UpdateDepthCollisionParameters(float colDist, float damping, float randomness)
	{
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0x2985DF0", Offset = "0x2985DF0", VA = "0x2985DF0")]
	public void UpdateCollisionCamera(Matrix4x4 MVP, Matrix4x4 W2L, Matrix4x4 camToWorld, Vector3 camPosition, Vector4 customFarCLippingPlane)
	{
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0x298591C", Offset = "0x298591C", VA = "0x298591C")]
	public void UpdateTime(float customTime, float customDeltaTime)
	{
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0x297CF64", Offset = "0x297CF64", VA = "0x297CF64")]
	public void UpdateEmitterParameters(Vector3 emitterPosition, Vector4 emitterParameters)
	{
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0x298773C", Offset = "0x298773C", VA = "0x298773C")]
	public void UpdateEmitterMatrix(Matrix4x4 emitterMatrix)
	{
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0x2987438", Offset = "0x2987438", VA = "0x2987438")]
	public void UpdateStartLifetimeSpeed(FloatCurveBundle startLifetime, FloatCurveBundle startSpeed, float progress)
	{
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0x29874FC", Offset = "0x29874FC", VA = "0x29874FC")]
	public void UpdateStartSizeRotation(FloatCurveBundle startSize, FloatCurveBundle startRotation, float progress)
	{
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0x297E104", Offset = "0x297E104", VA = "0x297E104")]
	public void Emit(float startID, float endID)
	{
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0x297E43C", Offset = "0x297E43C", VA = "0x297E43C")]
	public void StepMeta()
	{
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0x297E4D4", Offset = "0x297E4D4", VA = "0x297E4D4")]
	public void StepVelocity()
	{
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0x297E56C", Offset = "0x297E56C", VA = "0x297E56C")]
	public void StepPosition()
	{
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0x2988640", Offset = "0x2988640", VA = "0x2988640")]
	public void UpdateGravity(float gravity)
	{
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0x29886AC", Offset = "0x29886AC", VA = "0x29886AC")]
	public void UpdateAirResistance(float resistance)
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0x2987F44", Offset = "0x2987F44", VA = "0x2987F44")]
	public void UpdateMaxVelocityOverLifetime(SingleFloatCurveBundle maxVelocity, float progress)
	{
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0x2987FC8", Offset = "0x2987FC8", VA = "0x2987FC8")]
	public void UpdateCircularForceOverLifetime(Vector3CurveBundle circularForce, float progress)
	{
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0x29892F0", Offset = "0x29892F0", VA = "0x29892F0")]
	public void UpdateInheritVelocity(Vector3 velocity)
	{
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0x2988094", Offset = "0x2988094", VA = "0x2988094")]
	public void UpdateCircularForceCenterPosition(Vector3 position)
	{
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0x2988718", Offset = "0x2988718", VA = "0x2988718")]
	public void UpdateTurbulenceTexture(Texture2D turbulenceNoise)
	{
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0x2988784", Offset = "0x2988784", VA = "0x2988784")]
	public void UpdateVectorField(Texture3D vectorField)
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0x29887F0", Offset = "0x29887F0", VA = "0x29887F0")]
	public void UpdateAmplitude(Vector3CurveBundle amplitude, float progress)
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0x29888BC", Offset = "0x29888BC", VA = "0x29888BC")]
	public void UpdateFrequency(Vector3CurveBundle frequency, float progress)
	{
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0x2988984", Offset = "0x2988984", VA = "0x2988984")]
	public void UpdateTightness(float Tightness)
	{
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0x29889F0", Offset = "0x29889F0", VA = "0x29889F0")]
	public void UpdateOffset(Vector3CurveBundle offset, float progress)
	{
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0x2988E14", Offset = "0x2988E14", VA = "0x2988E14")]
	public void UpdateVectorFieldMatrix(Transform vectorFieldTransform, Vector3CurveBundle rotation, Vector3CurveBundle frequency, float progress, float customDeltaTime)
	{
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0x29893A0", Offset = "0x29893A0", VA = "0x29893A0")]
	public void UpdateAttractors(List<Attractor> attractors, Vector3 center)
	{
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0x2987294", Offset = "0x2987294", VA = "0x2987294")]
	public void UpdateCollisionPlanes(Vector4[] planes, Vector4[] normals)
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0x2989760", Offset = "0x2989760", VA = "0x2989760")]
	public void UpdateForceOverLifetime(Vector3CurveBundle force, float progress)
	{
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0x2986E2C", Offset = "0x2986E2C", VA = "0x2986E2C")]
	public void UpdateSkinnedMeshEmitterTexture(RenderTexture renderTexture)
	{
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0x2989260", Offset = "0x2989260", VA = "0x2989260")]
	public void UpdateMeshEmitterTexture(Texture2D positions, Texture2D normals)
	{
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0x29870DC", Offset = "0x29870DC", VA = "0x29870DC")]
	public void UpdateMeshTargetTexture(Texture2D targetTexture)
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0x29871FC", Offset = "0x29871FC", VA = "0x29871FC")]
	public void UpdateMeshTargetMatrix(Matrix4x4 targetMatrix)
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0x2987148", Offset = "0x2987148", VA = "0x2987148")]
	public void UpdateMeshTargetValues(SingleFloatCurveBundle strength, SingleFloatCurveBundle attenuation, float progress)
	{
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0x298B63C", Offset = "0x298B63C", VA = "0x298B63C")]
	public string[] GetVelocityKeywords()
	{
		return null;
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0x298B658", Offset = "0x298B658", VA = "0x298B658")]
	public string[] GetPositionKeywords()
	{
		return null;
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0x29898A8", Offset = "0x29898A8", VA = "0x29898A8")]
	public void SetCollisionType(GPUParticleSystem.CollisionType collisionType)
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0x2989BEC", Offset = "0x2989BEC", VA = "0x2989BEC")]
	public void EmitterShape(GPUParticleSystem.EmitterShape shape)
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0x2989AF4", Offset = "0x2989AF4", VA = "0x2989AF4")]
	public void SimSpace(GPUParticleSystem.GPUSimulationSpace simSpace)
	{
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0x298A418", Offset = "0x298A418", VA = "0x298A418")]
	public void Attractors(bool active)
	{
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0x298982C", Offset = "0x298982C", VA = "0x298982C")]
	public void MeshTarget(bool active)
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0x2989F94", Offset = "0x2989F94", VA = "0x2989F94")]
	public void LimitVelocity(bool active)
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0x29899B0", Offset = "0x29899B0", VA = "0x29899B0")]
	public void Turbulence(GPUParticleSystem.TurbulenceType turbulenceType)
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0x298A320", Offset = "0x298A320", VA = "0x298A320")]
	public void EmitFromShell(bool active)
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0x298A39C", Offset = "0x298A39C", VA = "0x298A39C")]
	public void EmitFromBase(bool active)
	{
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0x298A010", Offset = "0x298A010", VA = "0x298A010")]
	public void CircularForce(bool active)
	{
	}
}
[Serializable]
[Token(Token = "0x2000094")]
public class GPUParticleSystemBurst
{
	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int minBurst;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int maxBurst;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float burstTime;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float burstProbability;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool playOnce;

	[Token(Token = "0x6000646")]
	[Address(RVA = "0x297E1F8", Offset = "0x297E1F8", VA = "0x297E1F8")]
	public int GetBurst()
	{
		return default(int);
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0x297D14C", Offset = "0x297D14C", VA = "0x297D14C")]
	public GPUParticleSystemBurst()
	{
	}
}
[Token(Token = "0x2000095")]
public static class GPUParticleSystemEvaluationHelper
{
	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static BoxCollider farPlaneCollider;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Ray ray;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static RaycastHit rayHit;

	[Token(Token = "0x6000648")]
	[Address(RVA = "0x2985CA8", Offset = "0x2985CA8", VA = "0x2985CA8")]
	public static Matrix4x4 CameraMVPMatrix(Transform t, Camera c)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0x2987F08", Offset = "0x2987F08", VA = "0x2987F08")]
	public static float EvaluateSingleFloatCurveBundle(SingleFloatCurveBundle bundle, float progress)
	{
		return default(float);
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0x297DFB0", Offset = "0x297DFB0", VA = "0x297DFB0")]
	public static float EvaluateFloatCurveBundle(FloatCurveBundle bundle, float progress)
	{
		return default(float);
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0x298B1FC", Offset = "0x298B1FC", VA = "0x298B1FC")]
	public static Vector4 EvaluateStartSizeRotation(FloatCurveBundle startSize, FloatCurveBundle startRotation, float progress)
	{
		return default(Vector4);
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0x298B080", Offset = "0x298B080", VA = "0x298B080")]
	public static Vector4 EvaluateLifeTimeStartSpeed(FloatCurveBundle startLifetime, FloatCurveBundle startSpeed, float progress)
	{
		return default(Vector4);
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0x298B39C", Offset = "0x298B39C", VA = "0x298B39C")]
	public static Vector3 EvaluateVector3Bundle(Vector3CurveBundle bundle, float progress)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0x2988ABC", Offset = "0x2988ABC", VA = "0x2988ABC")]
	public static Texture3D DeserializeVectorField(TextAsset fgaFile)
	{
		return null;
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0x298B674", Offset = "0x298B674", VA = "0x298B674")]
	public static float Remap(float value, float From1, float To1, float From2, float To2)
	{
		return default(float);
	}
}
[Token(Token = "0x2000096")]
public static class GPUParticleSystemMeshUtility
{
	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3[] Vertices;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Vector3[] Normals;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Vector4[] Tangents;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static int[] Triangles;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static Vector2[] UVs;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static Vector2[] PosUV;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Vector2[] AnimUV;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static float ignoreSize;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static int numTriangles;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static Vector3[] vertexBuffer;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static Vector3[] normalBuffer;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static int[] triangleBuffer;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static Vector2[] uV1Buffer;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static Vector2[] uV2Buffer;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static float[] weightsBuffer;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static float Buffer;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private static Vector3 vectorBuffer;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static float sizeBuffer;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static UnityEngine.Color[] positionArray;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static UnityEngine.Color[] normalArray;

	[Token(Token = "0x6000650")]
	[Address(RVA = "0x29823BC", Offset = "0x29823BC", VA = "0x29823BC")]
	public static GameObject[] CreateParticlesPoint(int _Width, int _Height, Material _Mat)
	{
		return null;
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0x2982964", Offset = "0x2982964", VA = "0x2982964")]
	public static GameObject[] CreateParticlesTriangle(int _Width, int _Height, Material _Mat)
	{
		return null;
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0x2984B38", Offset = "0x2984B38", VA = "0x2984B38")]
	public static GameObject[] CreateParticlesQuad(int _Width, int _Height, Material _Mat)
	{
		return null;
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0x2983D04", Offset = "0x2983D04", VA = "0x2983D04")]
	public static GameObject[] CreateParticlesDoubleQuad(int _Width, int _Height, Material _Mat)
	{
		return null;
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0x298339C", Offset = "0x298339C", VA = "0x298339C")]
	public static GameObject[] CreateMeshParticles(Mesh _Mesh, int _Width, int _Height, Material _Mat, bool _2ndUV)
	{
		return null;
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0x2988280", Offset = "0x2988280", VA = "0x2988280")]
	public static Vector4[] AnimationCurveToBezier(AnimationCurve Curve)
	{
		return null;
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0x298B690", Offset = "0x298B690", VA = "0x298B690")]
	public static AnimationCurve CheckAnimationCurve(AnimationCurve Curve)
	{
		return null;
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0x298B7F0", Offset = "0x298B7F0", VA = "0x298B7F0")]
	public static void CurveToBezier(Keyframe k0, Keyframe k1, out Vector4 P1C1, out Vector4 P2C2)
	{
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0x2986EB0", Offset = "0x2986EB0", VA = "0x2986EB0")]
	public static Texture2D MeshToTexture(Mesh mesh, GPUParticleSystem.MeshBakeType bakeType, int size)
	{
		return null;
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0x2988F50", Offset = "0x2988F50", VA = "0x2988F50")]
	public static void MeshToPositionNormals(out Texture2D positions, out Texture2D normals, Mesh mesh, GPUParticleSystem.MeshBakeType bakeType, int size)
	{
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0x298BD1C", Offset = "0x298BD1C", VA = "0x298BD1C")]
	private static void CreateTextureColours(GPUParticleSystem.MeshBakeType geometryType, ref Vector3[] vertices, ref Vector3[] normals, ref int[] tris, ref float[] weights, int arraySize)
	{
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0x298B96C", Offset = "0x298B96C", VA = "0x298B96C")]
	private static void CreateTextureColours(GPUParticleSystem.MeshBakeType geometryType, ref Vector3[] vertices, ref int[] tris, ref float[] weights, int arraySize)
	{
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0x298C20C", Offset = "0x298C20C", VA = "0x298C20C")]
	private static void CalculateTriangles(ref Vector3[] vertices, ref int[] tris, ref float[] weights, ref float wholeMeshArea, ref int tri)
	{
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0x298C464", Offset = "0x298C464", VA = "0x298C464")]
	private static void Normalize(ref float[] Weights, ref float WholeMeshArea)
	{
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0x298C4D4", Offset = "0x298C4D4", VA = "0x298C4D4")]
	private static void GenerateRandomPoint(ref Vector3[] Vertices, ref Vector3[] normals, ref int[] Tris, ref float[] Weights, int ArraySize)
	{
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0x298C650", Offset = "0x298C650", VA = "0x298C650")]
	private static void GenerateRandomPoint(ref Vector3[] Vertices, ref int[] Tris, ref float[] Weights, int ArraySize)
	{
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0x298C7E0", Offset = "0x298C7E0", VA = "0x298C7E0")]
	private static Vector3 GenerateRandomPosition(ref Vector3[] Vertices, ref int[] Tris, int TriangleIndex)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0x298C94C", Offset = "0x298C94C", VA = "0x298C94C")]
	private static Vector3 GenerateRandomNormal(ref Vector3[] normals, ref int[] Tris, int TriangleIndex)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0x298CAB8", Offset = "0x298CAB8", VA = "0x298CAB8")]
	private static void AssignPosition(int i, Vector3 position)
	{
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0x298CB70", Offset = "0x298CB70", VA = "0x298CB70")]
	private static void AssignNormal(int i, Vector3 normal)
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0x298C75C", Offset = "0x298C75C", VA = "0x298C75C")]
	private static void GetWeights(ref float[] Weights, ref int weightLength, ref float RandomTriangle, ref float acc, ref int TriangleIndex)
	{
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0x298CC28", Offset = "0x298CC28", VA = "0x298CC28")]
	private static Vector3 GetRandomPointOnTriangle(Vector3 P1, Vector3 P2, Vector3 P3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0x298CD94", Offset = "0x298CD94", VA = "0x298CD94")]
	private static Vector3 GetNormalOfTriangle(Vector3 n1, Vector3 n2, Vector3 n3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0x2986640", Offset = "0x2986640", VA = "0x2986640")]
	public static Mesh ProcessSkinnedMesh(Mesh mesh)
	{
		return null;
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0x298D1DC", Offset = "0x298D1DC", VA = "0x298D1DC")]
	private static List<Vector2> DistributeUV(float[][] weights)
	{
		return null;
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0x298CE78", Offset = "0x298CE78", VA = "0x298CE78")]
	private static void WeightTriangles(List<Vector3> verts, List<List<int>> tris, ref float[][] weights)
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0x298D46C", Offset = "0x298D46C", VA = "0x298D46C")]
	public static float TriangleSize(Vector3 V1, Vector3 V2, Vector3 V3)
	{
		return default(float);
	}
}
[Token(Token = "0x2000097")]
public static class GPUParticleSystemTextureHelper
{
	[Token(Token = "0x600066C")]
	[Address(RVA = "0x2987874", Offset = "0x2987874", VA = "0x2987874")]
	public static Texture2D BakeColor(UnityEngine.Color color, Texture2D particleColor)
	{
		return null;
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0x29879C4", Offset = "0x29879C4", VA = "0x29879C4")]
	public static Texture2D BakeColor(UnityEngine.Color colorA, UnityEngine.Color colorB, Texture2D particleColor)
	{
		return null;
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0x2987B98", Offset = "0x2987B98", VA = "0x2987B98")]
	public static Texture2D BakeColor(Gradient gradient, Texture2D particleColor)
	{
		return null;
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0x2987D0C", Offset = "0x2987D0C", VA = "0x2987D0C")]
	public static Texture2D BakeColor(Gradient gradientA, Gradient gradientB, Texture2D particleColor)
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x2000098")]
public class Attractor
{
	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform attractor;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float strength;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float attenuation;

	[Token(Token = "0x6000670")]
	[Address(RVA = "0x1ED8CF0", Offset = "0x1ED8CF0", VA = "0x1ED8CF0")]
	public Attractor(Transform attractor, float strength, float attenuation)
	{
	}
}
[Token(Token = "0x2000099")]
[ExecuteInEditMode]
public class SetCameraDepthNormalRenderMode : MonoBehaviour
{
	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DepthTextureMode renderMode;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Camera depthCamera;

	[Token(Token = "0x6000671")]
	[Address(RVA = "0x1F014B8", Offset = "0x1F014B8", VA = "0x1F014B8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0x1F01550", Offset = "0x1F01550", VA = "0x1F01550")]
	public SetCameraDepthNormalRenderMode()
	{
	}
}
[Token(Token = "0x200009A")]
public class RotateFlareHolder : MonoBehaviour
{
	[Token(Token = "0x6000673")]
	[Address(RVA = "0x289A488", Offset = "0x289A488", VA = "0x289A488")]
	private void Update()
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0x289A620", Offset = "0x289A620", VA = "0x289A620")]
	public RotateFlareHolder()
	{
	}
}
[Token(Token = "0x200009B")]
public class OvrAvatarTestDriver : OvrAvatarDriver
{
	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 headPos;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion headRot;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x6000675")]
	[Address(RVA = "0x20BA4D4", Offset = "0x20BA4D4", VA = "0x20BA4D4")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0x20BA640", Offset = "0x20BA640", VA = "0x20BA640")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0x20BA9E4", Offset = "0x20BA9E4", VA = "0x20BA9E4")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0x20BAB8C", Offset = "0x20BAB8C", VA = "0x20BAB8C", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0x20BABB8", Offset = "0x20BABB8", VA = "0x20BABB8")]
	public OvrAvatarTestDriver()
	{
	}
}
[Token(Token = "0x200009C")]
public class PoseEditHelper : MonoBehaviour
{
	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform poseRoot;

	[Token(Token = "0x600067A")]
	[Address(RVA = "0x20C0D90", Offset = "0x20C0D90", VA = "0x20C0D90")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0x20C0E1C", Offset = "0x20C0E1C", VA = "0x20C0E1C")]
	private void DrawJoints(Transform joint)
	{
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0x20C0F88", Offset = "0x20C0F88", VA = "0x20C0F88")]
	public PoseEditHelper()
	{
	}
}
[Token(Token = "0x200009D")]
public class GazeTargetSpawner : MonoBehaviour
{
	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GazeTargetPrefab;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int NumberOfDummyTargets;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int RadiusMultiplier;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool isVisible;

	[Token(Token = "0x1700010C")]
	public bool IsVisible
	{
		[Token(Token = "0x600067D")]
		[Address(RVA = "0x298DBD4", Offset = "0x298DBD4", VA = "0x298DBD4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600067E")]
		[Address(RVA = "0x298DBDC", Offset = "0x298DBDC", VA = "0x298DBDC")]
		set
		{
		}
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0x298DD04", Offset = "0x298DD04", VA = "0x298DD04")]
	private void Start()
	{
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0x298DF20", Offset = "0x298DF20", VA = "0x298DF20")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0x298DF28", Offset = "0x298DF28", VA = "0x298DF28")]
	public GazeTargetSpawner()
	{
	}
}
[Token(Token = "0x200009E")]
public class RemoteLoopbackManager : MonoBehaviour
{
	[Token(Token = "0x2000501")]
	private class PacketLatencyPair
	{
		[Token(Token = "0x4001F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] PacketData;

		[Token(Token = "0x4001F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FakeLatency;

		[Token(Token = "0x60023EC")]
		[Address(RVA = "0x20C20F0", Offset = "0x20C20F0", VA = "0x20C20F0")]
		public PacketLatencyPair()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000502")]
	public class SimulatedLatencySettings
	{
		[Token(Token = "0x4001F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x147A1C8", Offset = "0x147A1C8")]
		public float FakeLatencyMax;

		[Token(Token = "0x4001F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x147A1E0", Offset = "0x147A1E0")]
		public float FakeLatencyMin;

		[Token(Token = "0x4001F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x147A1F8", Offset = "0x147A1F8")]
		public float LatencyWeight;

		[Token(Token = "0x4001F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x147A210", Offset = "0x147A210")]
		public int MaxSamples;

		[Token(Token = "0x4001F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float AverageWindow;

		[Token(Token = "0x4001F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal float LatencySum;

		[Token(Token = "0x4001F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal LinkedList<float> LatencyValues;

		[Token(Token = "0x60023ED")]
		[Address(RVA = "0x20C20F8", Offset = "0x20C20F8", VA = "0x20C20F8")]
		public float NextValue()
		{
			return default(float);
		}

		[Token(Token = "0x60023EE")]
		[Address(RVA = "0x20C22A8", Offset = "0x20C22A8", VA = "0x20C22A8")]
		public SimulatedLatencySettings()
		{
		}
	}

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OvrAvatar LocalAvatar;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar LoopbackAvatar;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimulatedLatencySettings LatencySettings;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int PacketSequence;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LinkedList<PacketLatencyPair> packetQueue;

	[Token(Token = "0x6000682")]
	[Address(RVA = "0x20C1780", Offset = "0x20C1780", VA = "0x20C1780")]
	private void Start()
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0x20C18B8", Offset = "0x20C18B8", VA = "0x20C18B8")]
	private void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0x20C1C24", Offset = "0x20C1C24", VA = "0x20C1C24")]
	private void Update()
	{
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0x20C1B7C", Offset = "0x20C1B7C", VA = "0x20C1B7C")]
	private void SendPacketData(byte[] data)
	{
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0x20C1E80", Offset = "0x20C1E80", VA = "0x20C1E80")]
	private void ReceivePacketData(byte[] data)
	{
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0x20C2204", Offset = "0x20C2204", VA = "0x20C2204")]
	public RemoteLoopbackManager()
	{
	}
}
[Token(Token = "0x200009F")]
public class P2PManager
{
	[Token(Token = "0x2000503")]
	private enum MessageType : byte
	{
		[Token(Token = "0x4001F72")]
		Update = 1
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0x20BBCD8", Offset = "0x20BBCD8", VA = "0x20BBCD8")]
	public P2PManager()
	{
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0x20BBD98", Offset = "0x20BBD98", VA = "0x20BBD98")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0x20BBE7C", Offset = "0x20BBE7C", VA = "0x20BBE7C")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0x20BBF00", Offset = "0x20BBF00", VA = "0x20BBF00")]
	private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0x20BC05C", Offset = "0x20BC05C", VA = "0x20BC05C")]
	private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0x20BC344", Offset = "0x20BC344", VA = "0x20BC344")]
	public void SendAvatarUpdate(ulong userID, Transform rootTransform, uint sequence, byte[] avatarPacket)
	{
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0x20BC738", Offset = "0x20BC738", VA = "0x20BC738")]
	public void GetRemotePackets()
	{
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0x20BC9DC", Offset = "0x20BC9DC", VA = "0x20BC9DC")]
	public void processAvatarPacket(RemotePlayer remote, ref byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0x20BC508", Offset = "0x20BC508", VA = "0x20BC508")]
	private void PackByte(byte b, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0x20BC90C", Offset = "0x20BC90C", VA = "0x20BC90C")]
	private byte ReadByte(byte[] buf, ref int offset)
	{
		return default(byte);
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0x20BC5F0", Offset = "0x20BC5F0", VA = "0x20BC5F0")]
	private void PackFloat(float f, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0x20BCBF4", Offset = "0x20BCBF4", VA = "0x20BCBF4")]
	private float ReadFloat(byte[] buf, ref int offset)
	{
		return default(float);
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0x20BC550", Offset = "0x20BC550", VA = "0x20BC550")]
	private void PackULong(ulong u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0x20BC950", Offset = "0x20BC950", VA = "0x20BC950")]
	private ulong ReadULong(byte[] buf, ref int offset)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0x20BC698", Offset = "0x20BC698", VA = "0x20BC698")]
	private void PackUInt32(uint u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0x20BCC80", Offset = "0x20BCC80", VA = "0x20BCC80")]
	private uint ReadUInt32(byte[] buf, ref int offset)
	{
		return default(uint);
	}
}
[Token(Token = "0x20000A0")]
public class PlayerController : SocialPlatformManager
{
	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Camera spyCamera;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject cameraRig;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool showUI;

	[Token(Token = "0x6000698")]
	[Address(RVA = "0x20BF06C", Offset = "0x20BF06C", VA = "0x20BF06C", Slot = "5")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0x20BF0B0", Offset = "0x20BF0B0", VA = "0x20BF0B0", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0x20BF0E8", Offset = "0x20BF0E8", VA = "0x20BF0E8", Slot = "4")]
	public override void Update()
	{
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0x20BF110", Offset = "0x20BF110", VA = "0x20BF110")]
	private void checkInput()
	{
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0x20BF2B0", Offset = "0x20BF2B0", VA = "0x20BF2B0")]
	private void ToggleCamera()
	{
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0x20BF330", Offset = "0x20BF330", VA = "0x20BF330")]
	private void ToggleUI()
	{
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0x20BF384", Offset = "0x20BF384", VA = "0x20BF384")]
	public PlayerController()
	{
	}
}
[Token(Token = "0x20000A1")]
public class RemotePlayer
{
	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong remoteUserID;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool stillInRoom;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PeerConnectionState p2pConnectionState;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PeerConnectionState voipConnectionState;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar RemoteAvatar;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 receivedRootPosition;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 receivedRootPositionPrior;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Quaternion receivedRootRotation;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Quaternion receivedRootRotationPrior;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VoipAudioSourceHiLevel voipSource;

	[Token(Token = "0x600069F")]
	[Address(RVA = "0x20C233C", Offset = "0x20C233C", VA = "0x20C233C")]
	public RemotePlayer()
	{
	}
}
[Token(Token = "0x20000A2")]
public class RoomManager
{
	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong roomID;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong invitedRoomID;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool amIServer;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool startupDone;

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0x20C2344", Offset = "0x20C2344", VA = "0x20C2344")]
	public RoomManager()
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0x20C2410", Offset = "0x20C2410", VA = "0x20C2410")]
	private void AcceptingInviteCallback(Message<string> msg)
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0x20C2570", Offset = "0x20C2570", VA = "0x20C2570")]
	public bool CheckForInvite()
	{
		return default(bool);
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0x20C2680", Offset = "0x20C2680", VA = "0x20C2680")]
	public void CreateRoom()
	{
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0x20C2734", Offset = "0x20C2734", VA = "0x20C2734")]
	private void CreateAndJoinPrivateRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0x20C2868", Offset = "0x20C2868", VA = "0x20C2868")]
	private void OnLaunchInviteWorkflowComplete(Message msg)
	{
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0x20C25A0", Offset = "0x20C25A0", VA = "0x20C25A0")]
	public void JoinExistingRoom(ulong roomID)
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0x20C28F4", Offset = "0x20C28F4", VA = "0x20C28F4")]
	private void JoinRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0x20C2FE4", Offset = "0x20C2FE4", VA = "0x20C2FE4")]
	private void RoomUpdateCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0x20C3308", Offset = "0x20C3308", VA = "0x20C3308")]
	public void LeaveCurrentRoom()
	{
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0x20C2BE8", Offset = "0x20C2BE8", VA = "0x20C2BE8")]
	private void ProcessRoomData(Message<Room> msg)
	{
	}
}
[Token(Token = "0x20000A3")]
public class SocialPlatformManager : MonoBehaviour
{
	[Token(Token = "0x2000504")]
	public enum State
	{
		[Token(Token = "0x4001F74")]
		INITIALIZING,
		[Token(Token = "0x4001F75")]
		CHECKING_LAUNCH_STATE,
		[Token(Token = "0x4001F76")]
		CREATING_A_ROOM,
		[Token(Token = "0x4001F77")]
		WAITING_IN_A_ROOM,
		[Token(Token = "0x4001F78")]
		JOINING_A_ROOM,
		[Token(Token = "0x4001F79")]
		CONNECTED_IN_A_ROOM,
		[Token(Token = "0x4001F7A")]
		LEAVING_A_ROOM,
		[Token(Token = "0x4001F7B")]
		SHUTDOWN
	}

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 START_ROTATION_ONE;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly Vector3 START_POSITION_ONE;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 START_ROTATION_TWO;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly Vector3 START_POSITION_TWO;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly Vector3 START_ROTATION_THREE;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static readonly Vector3 START_POSITION_THREE;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly Vector3 START_ROTATION_FOUR;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static readonly Vector3 START_POSITION_FOUR;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly UnityEngine.Color BLACK;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static readonly UnityEngine.Color WHITE;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static readonly UnityEngine.Color CYAN;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static readonly UnityEngine.Color BLUE;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static readonly UnityEngine.Color GREEN;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float voiceCurrent;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private uint packetSequence;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar localAvatarPrefab;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar remoteAvatarPrefab;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject helpPanel;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected MeshRenderer helpMesh;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material riftMaterial;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material gearMaterial;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected OvrAvatar localAvatar;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected GameObject localTrackingSpace;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject localPlayerHead;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Dictionary<ulong, RemotePlayer> remoteUsers;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject roomSphere;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected MeshRenderer sphereMesh;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject roomFloor;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected MeshRenderer floorMesh;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected State currentState;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected static SocialPlatformManager s_instance;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected RoomManager roomManager;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected P2PManager p2pManager;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected VoipManager voipManager;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected ulong myID;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected string myOculusID;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static readonly float VOIP_SCALE;

	[Token(Token = "0x1700010D")]
	public static State CurrentState
	{
		[Token(Token = "0x60006B7")]
		[Address(RVA = "0x1F055C8", Offset = "0x1F055C8", VA = "0x1F055C8")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x1700010E")]
	public static ulong MyID
	{
		[Token(Token = "0x60006B8")]
		[Address(RVA = "0x1F0563C", Offset = "0x1F0563C", VA = "0x1F0563C")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x1700010F")]
	public static string MyOculusID
	{
		[Token(Token = "0x60006B9")]
		[Address(RVA = "0x1F05714", Offset = "0x1F05714", VA = "0x1F05714")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0x1F0371C", Offset = "0x1F0371C", VA = "0x1F0371C", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0x1F03AC4", Offset = "0x1F03AC4", VA = "0x1F03AC4", Slot = "5")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0x1F0423C", Offset = "0x1F0423C", VA = "0x1F0423C")]
	private void InitCallback(Message<PlatformInitialize> msg)
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0x1F04504", Offset = "0x1F04504", VA = "0x1F04504", Slot = "6")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0x1F04508", Offset = "0x1F04508", VA = "0x1F04508")]
	private void IsEntitledCallback(Message msg)
	{
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0x1F045FC", Offset = "0x1F045FC", VA = "0x1F045FC")]
	private void GetLoggedInUserCallback(Message<User> msg)
	{
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0x1F04D44", Offset = "0x1F04D44", VA = "0x1F04D44")]
	private void GetLoggedInUserFriendsAndRoomsCallback(Message<UserAndRoomList> msg)
	{
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0x1F0523C", Offset = "0x1F0523C", VA = "0x1F0523C")]
	public void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0x1F05408", Offset = "0x1F05408", VA = "0x1F05408")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0x1F05558", Offset = "0x1F05558", VA = "0x1F05558")]
	public void AddUser(ulong userID, ref RemotePlayer remoteUser)
	{
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0x1F03E28", Offset = "0x1F03E28", VA = "0x1F03E28")]
	public void LogOutputLine(string line)
	{
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0x1F04398", Offset = "0x1F04398", VA = "0x1F04398")]
	public static void TerminateWithError(Message msg)
	{
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0x1F03EDC", Offset = "0x1F03EDC", VA = "0x1F03EDC")]
	public static void TransitionToState(State newState)
	{
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0x1F05828", Offset = "0x1F05828", VA = "0x1F05828")]
	private static void SetSphereColorForState()
	{
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0x1F059A8", Offset = "0x1F059A8", VA = "0x1F059A8")]
	public static void SetFloorColorForState(bool host)
	{
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0x1F05A90", Offset = "0x1F05A90", VA = "0x1F05A90")]
	public static void MarkAllRemoteUsersAsNotInRoom()
	{
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0x1F05BB4", Offset = "0x1F05BB4", VA = "0x1F05BB4")]
	public static void MarkRemoteUserInRoom(ulong userID)
	{
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0x1F05C84", Offset = "0x1F05C84", VA = "0x1F05C84")]
	public static void ForgetRemoteUsersNotInRoom()
	{
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0x1F04448", Offset = "0x1F04448", VA = "0x1F04448")]
	public static void LogOutput(string line)
	{
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0x1F060B0", Offset = "0x1F060B0", VA = "0x1F060B0")]
	public static bool IsUserInRoom(ulong userID)
	{
		return default(bool);
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0x1F0613C", Offset = "0x1F0613C", VA = "0x1F0613C")]
	public static void AddRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0x1F05ED4", Offset = "0x1F05ED4", VA = "0x1F05ED4")]
	public static void RemoveRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0x1F0632C", Offset = "0x1F0632C", VA = "0x1F0632C")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0x1F03694", Offset = "0x1F03694", VA = "0x1F03694")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x147FACC", Offset = "0x147FACC")]
	public static void MicFilter(short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels)
	{
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0x1F06468", Offset = "0x1F06468", VA = "0x1F06468")]
	public static RemotePlayer GetRemoteUser(ulong userID)
	{
		return null;
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0x1F06530", Offset = "0x1F06530", VA = "0x1F06530")]
	public SocialPlatformManager()
	{
	}
}
[Token(Token = "0x20000A4")]
public class VoipManager
{
	[Token(Token = "0x60006C9")]
	[Address(RVA = "0x2A8600C", Offset = "0x2A8600C", VA = "0x2A8600C")]
	public VoipManager()
	{
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0x2A860CC", Offset = "0x2A860CC", VA = "0x2A860CC")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0x2A861B0", Offset = "0x2A861B0", VA = "0x2A861B0")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0x2A86234", Offset = "0x2A86234", VA = "0x2A86234")]
	private void VoipConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0x2A86390", Offset = "0x2A86390", VA = "0x2A86390")]
	private void VoipStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}
}
[Token(Token = "0x20000A5")]
public class GazeTarget : MonoBehaviour
{
	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarGazeTargetType Type;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ovrAvatarGazeTargets RuntimeTargetList;

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0x298D850", Offset = "0x298D850", VA = "0x298D850")]
	static GazeTarget()
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0x298D8D0", Offset = "0x298D8D0", VA = "0x298D8D0")]
	private void Start()
	{
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0x298DA4C", Offset = "0x298DA4C", VA = "0x298DA4C")]
	private void Update()
	{
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0x298DAB0", Offset = "0x298DAB0", VA = "0x298DAB0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0x298D90C", Offset = "0x298D90C", VA = "0x298D90C")]
	private void UpdateGazeTarget()
	{
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0x298DB6C", Offset = "0x298DB6C", VA = "0x298DB6C")]
	private ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0x298DBCC", Offset = "0x298DBCC", VA = "0x298DBCC")]
	public GazeTarget()
	{
	}
}
[Serializable]
[Token(Token = "0x20000A6")]
public class AvatarLayer
{
	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int layerIndex;

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0x1ED90D4", Offset = "0x1ED90D4", VA = "0x1ED90D4")]
	public AvatarLayer()
	{
	}
}
[Serializable]
[Token(Token = "0x20000A7")]
public class PacketRecordSettings
{
	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal bool RecordingFrames;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float UpdateRate;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal float AccumulatedTime;

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0x20BCD0C", Offset = "0x20BCD0C", VA = "0x20BCD0C")]
	public PacketRecordSettings()
	{
	}
}
[Token(Token = "0x20000A8")]
public class OvrAvatar : MonoBehaviour
{
	[Token(Token = "0x2000505")]
	public class PacketEventArgs : EventArgs
	{
		[Token(Token = "0x4001F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly OvrAvatarPacket Packet;

		[Token(Token = "0x60023EF")]
		[Address(RVA = "0x20AD0C0", Offset = "0x20AD0C0", VA = "0x20AD0C0")]
		public PacketEventArgs(OvrAvatarPacket packet)
		{
		}
	}

	[Token(Token = "0x2000506")]
	public enum HandType
	{
		[Token(Token = "0x4001F7E")]
		Right,
		[Token(Token = "0x4001F7F")]
		Left,
		[Token(Token = "0x4001F80")]
		Max
	}

	[Token(Token = "0x2000507")]
	public enum HandJoint
	{
		[Token(Token = "0x4001F82")]
		HandBase,
		[Token(Token = "0x4001F83")]
		IndexBase,
		[Token(Token = "0x4001F84")]
		IndexTip,
		[Token(Token = "0x4001F85")]
		ThumbBase,
		[Token(Token = "0x4001F86")]
		ThumbTip,
		[Token(Token = "0x4001F87")]
		Max
	}

	[Token(Token = "0x2000508")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1469DFC", Offset = "0x1469DFC")]
	private sealed class <WaitForMouthAudioSource>d__137 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatar <>4__this;

		[Token(Token = "0x1700048E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60023F3")]
			[Address(RVA = "0x20AD050", Offset = "0x20AD050", VA = "0x20AD050", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700048F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60023F5")]
			[Address(RVA = "0x20AD0B8", Offset = "0x20AD0B8", VA = "0x20AD0B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023F0")]
		[Address(RVA = "0x20ACE88", Offset = "0x20ACE88", VA = "0x20ACE88")]
		[DebuggerHidden]
		public <WaitForMouthAudioSource>d__137(int <>1__state)
		{
		}

		[Token(Token = "0x60023F1")]
		[Address(RVA = "0x20ACEB4", Offset = "0x20ACEB4", VA = "0x20ACEB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60023F2")]
		[Address(RVA = "0x20ACEB8", Offset = "0x20ACEB8", VA = "0x20ACEB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60023F4")]
		[Address(RVA = "0x20AD058", Offset = "0x20AD058", VA = "0x20AD058", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x146C848", Offset = "0x146C848")]
	public IntPtr sdkAvatar;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string oculusUserID;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatarDriver Driver;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x146C880", Offset = "0x146C880")]
	public bool EnableBody;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool EnableHands;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool EnableBase;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool EnableExpressive;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x146C8B8", Offset = "0x146C8B8")]
	public bool RecordPackets;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool UseSDKPackets;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PacketRecordSettings PacketSettings;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x146C8F0", Offset = "0x146C8F0")]
	public bool StartWithControllers;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AvatarLayer FirstPersonLayer;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AvatarLayer ThirdPersonLayer;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool ShowFirstPerson;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool ShowThirdPerson;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	internal ovrAvatarCapabilities Capabilities;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x146C928", Offset = "0x146C928")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146C928", Offset = "0x146C928")]
	[SerializeField]
	internal ovrAvatarAssetLevelOfDetail LevelOfDetail;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146C998", Offset = "0x146C998")]
	private bool CombineMeshes;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146C9D0", Offset = "0x146C9D0")]
	public bool UseTransparentRenderQueue;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x146CA08", Offset = "0x146CA08")]
	public Shader Monochrome_SurfaceShader;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Shader Monochrome_SurfaceShader_SelfOccluding;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Shader Monochrome_SurfaceShader_PBS;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Shader Skinshaded_SurfaceShader_SingleComponent;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Shader Skinshaded_VertFrag_SingleComponent;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Shader Skinshaded_VertFrag_CombinedMesh;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Shader Skinshaded_Expressive_SurfaceShader_SingleComponent;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Shader Skinshaded_Expressive_VertFrag_SingleComponent;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Shader Skinshaded_Expressive_VertFrag_CombinedMesh;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Shader Loader_VertFrag_CombinedMesh;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Shader EyeLens;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Shader ControllerShader;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x146CA40", Offset = "0x146CA40")]
	public bool CanOwnMicrophone;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146CA78", Offset = "0x146CA78")]
	public bool EnableLaughter;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject MouthAnchor;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform LeftHandCustomPose;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform RightHandCustomPose;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private HashSet<ulong> assetLoadingIds;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool assetsFinishedLoading;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private OvrAvatarMaterialManager materialManager;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool waitingForCombinedMesh;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool doneExpressiveGlobalInit;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector4 clothingAlphaOffset;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ulong clothingAlphaTexture;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private OVRLipSyncMicInput micInput;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private OVRLipSyncContext lipsyncContext;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private OVRLipSync.Frame currentFrame;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float[] visemes;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private AudioSource audioSource;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private ONSPAudioSource spatializedSource;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private List<float[]> voiceUpdates;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ovrAvatarVisemes RuntimeVisemes;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Transform cachedLeftHandCustomPose;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Transform[] cachedCustomLeftHandJoints;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private ovrAvatarTransform[] cachedLeftHandTransforms;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Transform cachedRightHandCustomPose;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Transform[] cachedCustomRightHandJoints;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private ovrAvatarTransform[] cachedRightHandTransforms;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool showLeftController;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
	private bool showRightController;

	[Token(Token = "0x40004C0")]
	private const bool USE_MOBILE_TEXTURE_FORMAT = true;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 MOUTH_HEAD_OFFSET;

	[Token(Token = "0x40004C2")]
	private const string MOUTH_HELPER_NAME = "MouthAnchor";

	[Token(Token = "0x40004C3")]
	private const int VISEME_COUNT = 16;

	[Token(Token = "0x40004C4")]
	private const float ACTION_UNIT_ONSET_SPEED = 30f;

	[Token(Token = "0x40004C5")]
	private const float ACTION_UNIT_FALLOFF_SPEED = 20f;

	[Token(Token = "0x40004C6")]
	private const float VISEME_LEVEL_MULTIPLIER = 1.5f;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	internal ulong oculusUserIDInternal;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	internal OvrAvatarBase Base;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	internal OvrAvatarTouchController ControllerLeft;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	internal OvrAvatarTouchController ControllerRight;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	internal OvrAvatarBody Body;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	internal OvrAvatarHand HandLeft;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	internal OvrAvatarHand HandRight;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	internal ovrAvatarLookAndFeelVersion LookAndFeelVersion;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	internal ovrAvatarLookAndFeelVersion FallbackLookAndFeelVersion;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private OvrAvatarPacket CurrentUnityPacket;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public EventHandler<PacketEventArgs> PacketRecorded;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string[,] HandJoints;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Vector3 MOUTH_POSITION_OFFSET;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static string VOICE_PROPERTY;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static string MOUTH_POSITION_PROPERTY;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static string MOUTH_DIRECTION_PROPERTY;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static string MOUTH_SCALE_PROPERTY;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static float MOUTH_SCALE_GLOBAL;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static float MOUTH_MAX_GLOBAL;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static string NECK_JONT;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public float VoiceAmplitude;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public bool EnableMouthVertexAnimation;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static ovrAvatarLights ovrLights;

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0x1CF973C", Offset = "0x1CF973C", VA = "0x1CF973C")]
	static OvrAvatar()
	{
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0x1CF9B54", Offset = "0x1CF9B54", VA = "0x1CF9B54")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0x1CF9BE0", Offset = "0x1CF9BE0", VA = "0x1CF9BE0")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0x1CF9C4C", Offset = "0x1CF9C4C", VA = "0x1CF9C4C")]
	public void CombinedMeshLoadedCallback(IntPtr assetPtr)
	{
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0x1CF9D74", Offset = "0x1CF9D74", VA = "0x1CF9D74")]
	private OvrAvatarSkinnedMeshRenderComponent AddSkinnedMeshRenderComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender)
	{
		return null;
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0x1CF9E58", Offset = "0x1CF9E58", VA = "0x1CF9E58")]
	private OvrAvatarSkinnedMeshRenderPBSComponent AddSkinnedMeshRenderPBSComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS)
	{
		return null;
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0x1CF9F38", Offset = "0x1CF9F38", VA = "0x1CF9F38")]
	private OvrAvatarSkinnedMeshPBSV2RenderComponent AddSkinnedMeshRenderPBSV2Component(IntPtr renderPart, GameObject go, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRenderPBSV2, bool isBodyPartZero, bool isControllerModel)
	{
		return null;
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0x1CFA120", Offset = "0x1CFA120", VA = "0x1CFA120")]
	public static IntPtr GetRenderPart(ovrAvatarComponent component, uint renderPartIndex)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0x1CFA1E8", Offset = "0x1CFA1E8", VA = "0x1CFA1E8")]
	private static string GetRenderPartName(ovrAvatarComponent component, uint renderPartIndex)
	{
		return null;
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0x1CFA26C", Offset = "0x1CFA26C", VA = "0x1CFA26C")]
	internal static void ConvertTransform(float[] transform, ref ovrAvatarTransform target)
	{
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0x1CFA354", Offset = "0x1CFA354", VA = "0x1CFA354")]
	internal static void ConvertTransform(ovrAvatarTransform transform, Transform target)
	{
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0x1CFA3E0", Offset = "0x1CFA3E0", VA = "0x1CFA3E0")]
	public static ovrAvatarTransform CreateOvrAvatarTransform(Vector3 position, Quaternion orientation)
	{
		return default(ovrAvatarTransform);
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0x1CFA4FC", Offset = "0x1CFA4FC", VA = "0x1CFA4FC")]
	private static ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0x1CFA55C", Offset = "0x1CFA55C", VA = "0x1CFA55C")]
	private void BuildRenderComponents()
	{
	}

	[Token(Token = "0x60006E5")]
	private void AddAvatarComponent<T>(ref T root, ovrAvatarComponent nativeComponent) where T : OvrAvatarComponent
	{
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0x1CFA9E0", Offset = "0x1CFA9E0", VA = "0x1CFA9E0")]
	private void UpdateCustomPoses()
	{
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0x1CFAD40", Offset = "0x1CFAD40", VA = "0x1CFAD40")]
	private static bool UpdatePoseRoot(Transform poseRoot, ref Transform cachedPoseRoot, ref Transform[] cachedPoseJoints, ref ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0x1CFAEE8", Offset = "0x1CFAEE8", VA = "0x1CFAEE8")]
	private static bool UpdateTransforms(Transform[] joints, ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0x1CFB1B0", Offset = "0x1CFB1B0", VA = "0x1CFB1B0")]
	private static void OrderJoints(Transform transform, List<Transform> joints)
	{
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0x1CFB29C", Offset = "0x1CFB29C", VA = "0x1CFB29C")]
	private void AvatarSpecificationCallback(IntPtr avatarSpecification)
	{
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0x1CFB650", Offset = "0x1CFB650", VA = "0x1CFB650")]
	private void Start()
	{
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0x1CFB95C", Offset = "0x1CFB95C", VA = "0x1CFB95C")]
	private void Update()
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0x1CFC388", Offset = "0x1CFC388", VA = "0x1CFC388")]
	public static ovrAvatarHandInputState CreateInputState(ovrAvatarTransform transform, OvrAvatarDriver.ControllerPose pose)
	{
		return default(ovrAvatarHandInputState);
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0x1CFC3DC", Offset = "0x1CFC3DC", VA = "0x1CFC3DC")]
	public void ShowControllers(bool show)
	{
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0x1CFB518", Offset = "0x1CFB518", VA = "0x1CFB518")]
	public void ShowLeftController(bool show)
	{
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0x1CFB5B4", Offset = "0x1CFB5B4", VA = "0x1CFB5B4")]
	public void ShowRightController(bool show)
	{
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0x1CFC40C", Offset = "0x1CFC40C", VA = "0x1CFC40C")]
	public void UpdateVoiceVisualization(float[] voiceSamples)
	{
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0x1CFBCD0", Offset = "0x1CFBCD0", VA = "0x1CFBCD0")]
	private void RecordFrame()
	{
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0x1CFC658", Offset = "0x1CFC658", VA = "0x1CFC658")]
	private void RecordUnityFrame()
	{
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0x1CFC474", Offset = "0x1CFC474", VA = "0x1CFC474")]
	private void RecordSDKFrame()
	{
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0x1CFC918", Offset = "0x1CFC918", VA = "0x1CFC918")]
	private void AddRenderParts(OvrAvatarComponent ovrComponent, ovrAvatarComponent component, Transform parent)
	{
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0x1CFCD1C", Offset = "0x1CFCD1C", VA = "0x1CFCD1C")]
	public void RefreshBodyParts()
	{
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0x1CFCF4C", Offset = "0x1CFCF4C", VA = "0x1CFCF4C")]
	public ovrAvatarBodyComponent? GetBodyComponent()
	{
		return null;
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0x1CFD08C", Offset = "0x1CFD08C", VA = "0x1CFD08C")]
	public Transform GetHandTransform(HandType hand, HandJoint joint)
	{
		return null;
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0x1CFD244", Offset = "0x1CFD244", VA = "0x1CFD244")]
	public void GetPointingDirection(HandType hand, ref Vector3 forward, ref Vector3 up)
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0x1CFBE84", Offset = "0x1CFBE84", VA = "0x1CFBE84")]
	private void UpdateVoiceBehavior()
	{
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0x1CFD31C", Offset = "0x1CFD31C", VA = "0x1CFD31C")]
	private bool IsValidMic()
	{
		return default(bool);
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0x1CFBCE0", Offset = "0x1CFBCE0", VA = "0x1CFBCE0")]
	private void InitPostLoad()
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0x1CFD410", Offset = "0x1CFD410", VA = "0x1CFD410")]
	private static void ExpressiveGlobalInit()
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0x1CFDA18", Offset = "0x1CFDA18", VA = "0x1CFDA18")]
	private static void InitializeLights()
	{
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0x1CFDED8", Offset = "0x1CFDED8", VA = "0x1CFDED8")]
	private static ovrAvatarLight CreateLightDirectional(uint id, Vector3 direction, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0x1CFDF50", Offset = "0x1CFDF50", VA = "0x1CFDF50")]
	private static ovrAvatarLight CreateLightPoint(uint id, Vector3 position, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0x1CFDFCC", Offset = "0x1CFDFCC", VA = "0x1CFDFCC")]
	private static ovrAvatarLight CreateLightSpot(uint id, Vector3 position, Vector3 direction, float spotAngleDeg, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0x1CFC21C", Offset = "0x1CFC21C", VA = "0x1CFC21C")]
	private void UpdateExpressive()
	{
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0x1CFD4D8", Offset = "0x1CFD4D8", VA = "0x1CFD4D8")]
	private void ConfigureHelpers()
	{
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0x1CFE474", Offset = "0x1CFE474", VA = "0x1CFE474")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x147FB30", Offset = "0x147FB30")]
	private IEnumerator WaitForMouthAudioSource()
	{
		return null;
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0x1CFE4F0", Offset = "0x1CFE4F0", VA = "0x1CFE4F0")]
	public void DestroyHelperObjects()
	{
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0x1CFE318", Offset = "0x1CFE318", VA = "0x1CFE318")]
	public GameObject CreateHelperObject(Transform parent, Vector3 localPositionOffset, string helperName, string helperTag = "")
	{
		return null;
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0x1CFE5B8", Offset = "0x1CFE5B8", VA = "0x1CFE5B8")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0x1CFE6A4", Offset = "0x1CFE6A4", VA = "0x1CFE6A4")]
	public void UpdateVoiceData(float[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0x1CFE09C", Offset = "0x1CFE09C", VA = "0x1CFE09C")]
	private void UpdateFacewave()
	{
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0x1CFE790", Offset = "0x1CFE790", VA = "0x1CFE790")]
	public OvrAvatar()
	{
	}
}
[Token(Token = "0x20000A9")]
public class OvrAvatarAsset
{
	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong assetID;

	[Token(Token = "0x600070B")]
	[Address(RVA = "0x20AD144", Offset = "0x20AD144", VA = "0x20AD144")]
	public OvrAvatarAsset()
	{
	}
}
[Token(Token = "0x20000AA")]
public class OvrAvatarAssetMesh : OvrAvatarAsset
{
	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAvatarSkinnedMeshPose skinnedBindPose;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] jointNames;

	[Token(Token = "0x600070C")]
	[Address(RVA = "0x20AD200", Offset = "0x20AD200", VA = "0x20AD200")]
	public OvrAvatarAssetMesh(ulong _assetId, IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0x20AE508", Offset = "0x20AE508", VA = "0x20AE508")]
	private void LoadSubmeshes(IntPtr asset, IntPtr indexBufferPtr, ulong indexCount)
	{
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0x20AE0AC", Offset = "0x20AE0AC", VA = "0x20AE0AC")]
	private void LoadBlendShapes(IntPtr asset, long vertexCount)
	{
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0x20ADE44", Offset = "0x20ADE44", VA = "0x20ADE44")]
	private void SetSkinnedBindPose(IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0x20ADF20", Offset = "0x20ADF20", VA = "0x20ADF20")]
	private void GetVertexAndIndexData(IntPtr asset, ovrAvatarAssetType meshType, out long vertexCount, out IntPtr vertexBuffer, out uint indexCount, out IntPtr indexBuffer)
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0x20AE76C", Offset = "0x20AE76C", VA = "0x20AE76C")]
	public SkinnedMeshRenderer CreateSkinnedMeshRendererOnObject(GameObject target)
	{
		return null;
	}
}
[Token(Token = "0x20000AB")]
public class OvrAvatarAssetTexture : OvrAvatarAsset
{
	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D texture;

	[Token(Token = "0x40004E3")]
	private const int ASTCHeaderSize = 16;

	[Token(Token = "0x6000712")]
	[Address(RVA = "0x20AED2C", Offset = "0x20AED2C", VA = "0x20AED2C")]
	public OvrAvatarAssetTexture(ulong _assetId, IntPtr asset)
	{
	}
}
[Token(Token = "0x20000AC")]
public class OvrAvatarBase : OvrAvatarComponent
{
	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ovrAvatarBaseComponent component;

	[Token(Token = "0x6000713")]
	[Address(RVA = "0x20AEFA4", Offset = "0x20AEFA4", VA = "0x20AEFA4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0x20AF3B0", Offset = "0x20AF3B0", VA = "0x20AF3B0")]
	public OvrAvatarBase()
	{
	}
}
[Token(Token = "0x20000AD")]
public class OvrAvatarBody : OvrAvatarComponent
{
	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ovrAvatarBodyComponent component;

	[Token(Token = "0x6000715")]
	[Address(RVA = "0x20AF4C4", Offset = "0x20AF4C4", VA = "0x20AF4C4")]
	public ovrAvatarComponent? GetNativeAvatarComponent()
	{
		return null;
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0x20AF620", Offset = "0x20AF620", VA = "0x20AF620")]
	private void Update()
	{
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0x20AF748", Offset = "0x20AF748", VA = "0x20AF748")]
	public OvrAvatarBody()
	{
	}
}
[Token(Token = "0x20000AE")]
public class OvrAvatarComponent : MonoBehaviour
{
	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] LayerKeywords;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string[] LayerSampleModeParameters;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string[] LayerBlendModeParameters;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string[] LayerMaskTypeParameters;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly string[] LayerColorParameters;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly string[] LayerSurfaceParameters;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly string[] LayerSampleParametersParameters;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly string[] LayerMaskParametersParameters;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly string[] LayerMaskAxisParameters;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Material, ovrAvatarMaterialState> materialStates;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<OvrAvatarRenderComponent> RenderParts;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected OvrAvatar owner;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected ovrAvatarComponent nativeAvatarComponent;

	[Token(Token = "0x6000718")]
	[Address(RVA = "0x20AF7AC", Offset = "0x20AF7AC", VA = "0x20AF7AC")]
	public void SetOvrAvatarOwner(OvrAvatar ovrAvatarOwner)
	{
	}

	[Token(Token = "0x6000719")]
	[Address(RVA = "0x20AF0CC", Offset = "0x20AF0CC", VA = "0x20AF0CC")]
	public void UpdateAvatar(IntPtr nativeComponent)
	{
	}

	[Token(Token = "0x600071A")]
	[Address(RVA = "0x20AFD90", Offset = "0x20AFD90", VA = "0x20AFD90")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0x20AFDF0", Offset = "0x20AFDF0", VA = "0x20AFDF0")]
	public void UpdateAvatarMaterial(Material mat, ovrAvatarMaterialState matState)
	{
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0x20B05D4", Offset = "0x20B05D4", VA = "0x20B05D4")]
	public static Texture2D GetLoadedTexture(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0x20AF414", Offset = "0x20AF414", VA = "0x20AF414")]
	public OvrAvatarComponent()
	{
	}
}
[Token(Token = "0x20000AF")]
public abstract class OvrAvatarDriver : MonoBehaviour
{
	[Token(Token = "0x2000509")]
	public enum PacketMode
	{
		[Token(Token = "0x4001F8C")]
		SDK,
		[Token(Token = "0x4001F8D")]
		Unity
	}

	[Token(Token = "0x200050A")]
	public struct ControllerPose
	{
		[Token(Token = "0x4001F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarButton buttons;

		[Token(Token = "0x4001F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ovrAvatarTouch touches;

		[Token(Token = "0x4001F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 joystickPosition;

		[Token(Token = "0x4001F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float indexTrigger;

		[Token(Token = "0x4001F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float handTrigger;

		[Token(Token = "0x4001F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isActive;

		[Token(Token = "0x60023F6")]
		[Address(RVA = "0x20B20F4", Offset = "0x20B20F4", VA = "0x20B20F4")]
		public static ControllerPose Interpolate(ControllerPose a, ControllerPose b, float t)
		{
			return default(ControllerPose);
		}
	}

	[Token(Token = "0x200050B")]
	public struct PoseFrame
	{
		[Token(Token = "0x4001F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 headPosition;

		[Token(Token = "0x4001F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion headRotation;

		[Token(Token = "0x4001F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 handLeftPosition;

		[Token(Token = "0x4001F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion handLeftRotation;

		[Token(Token = "0x4001F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 handRightPosition;

		[Token(Token = "0x4001F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion handRightRotation;

		[Token(Token = "0x4001F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float voiceAmplitude;

		[Token(Token = "0x4001F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerPose controllerLeftPose;

		[Token(Token = "0x4001F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ControllerPose controllerRightPose;

		[Token(Token = "0x60023F7")]
		[Address(RVA = "0x20B2250", Offset = "0x20B2250", VA = "0x20B2250")]
		public static PoseFrame Interpolate(PoseFrame a, PoseFrame b, float t)
		{
			return default(PoseFrame);
		}
	}

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PacketMode Mode;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected PoseFrame CurrentPose;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private ovrAvatarControllerType ControllerType;

	[Token(Token = "0x600071F")]
	[Address(RVA = "0x20B1DC8", Offset = "0x20B1DC8", VA = "0x20B1DC8")]
	public PoseFrame GetCurrentPose()
	{
		return default(PoseFrame);
	}

	[Token(Token = "0x6000720")]
	public abstract void UpdateTransforms(IntPtr sdkAvatar);

	[Token(Token = "0x6000721")]
	[Address(RVA = "0x20B1DD8", Offset = "0x20B1DD8", VA = "0x20B1DD8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0x20B1E64", Offset = "0x20B1E64", VA = "0x20B1E64")]
	public void UpdateTransformsFromPose(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0x20B20DC", Offset = "0x20B20DC", VA = "0x20B20DC")]
	public static bool GetIsTrackedRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0x20B20E4", Offset = "0x20B20E4", VA = "0x20B20E4")]
	protected OvrAvatarDriver()
	{
	}
}
[Token(Token = "0x20000B0")]
public class OvrAvatarHand : OvrAvatarComponent
{
	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarHandComponent component;

	[Token(Token = "0x6000725")]
	[Address(RVA = "0x20B2608", Offset = "0x20B2608", VA = "0x20B2608")]
	private void Update()
	{
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0x20B2770", Offset = "0x20B2770", VA = "0x20B2770")]
	public OvrAvatarHand()
	{
	}
}
[Token(Token = "0x20000B1")]
public class OvrAvatarLocalDriver : OvrAvatarDriver
{
	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 centerEyePosition;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion centerEyeRotation;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x6000727")]
	[Address(RVA = "0x20B27DC", Offset = "0x20B27DC", VA = "0x20B27DC")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0x20B2948", Offset = "0x20B2948", VA = "0x20B2948")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0x20B2CEC", Offset = "0x20B2CEC", VA = "0x20B2CEC")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0x20B2F08", Offset = "0x20B2F08", VA = "0x20B2F08", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0x20B2F34", Offset = "0x20B2F34", VA = "0x20B2F34")]
	public OvrAvatarLocalDriver()
	{
	}
}
[Token(Token = "0x20000B2")]
public class OvrAvatarMaterialManager : MonoBehaviour
{
	[Token(Token = "0x200050C")]
	public enum TextureType
	{
		[Token(Token = "0x4001F9E")]
		DiffuseTextures,
		[Token(Token = "0x4001F9F")]
		NormalMaps,
		[Token(Token = "0x4001FA0")]
		RoughnessMaps,
		[Token(Token = "0x4001FA1")]
		Count
	}

	[Token(Token = "0x200050D")]
	public struct AvatarComponentMaterialProperties
	{
		[Token(Token = "0x4001FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarBodyPartType TypeIndex;

		[Token(Token = "0x4001FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public UnityEngine.Color Color;

		[Token(Token = "0x4001FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D[] Textures;

		[Token(Token = "0x4001FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DiffuseIntensity;

		[Token(Token = "0x4001FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RimIntensity;

		[Token(Token = "0x4001FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ReflectionIntensity;
	}

	[Token(Token = "0x200050E")]
	public struct AvatarTextureArrayProperties
	{
		[Token(Token = "0x4001FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D[] Textures;

		[Token(Token = "0x4001FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2DArray TextureArray;
	}

	[Token(Token = "0x200050F")]
	public struct AvatarMaterialPropertyBlock
	{
		[Token(Token = "0x4001FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4[] Colors;

		[Token(Token = "0x4001FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] DiffuseIntensities;

		[Token(Token = "0x4001FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] RimIntensities;

		[Token(Token = "0x4001FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] ReflectionIntensities;
	}

	[Serializable]
	[Token(Token = "0x2000510")]
	public class AvatarMaterialConfig
	{
		[Token(Token = "0x4001FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AvatarComponentMaterialProperties[] ComponentMaterialProperties;

		[Token(Token = "0x4001FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AvatarMaterialPropertyBlock MaterialPropertyBlock;

		[Token(Token = "0x60023F8")]
		[Address(RVA = "0x20B53AC", Offset = "0x20B53AC", VA = "0x20B53AC")]
		public AvatarMaterialConfig()
		{
		}
	}

	[Token(Token = "0x2000511")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1469E0C", Offset = "0x1469E0C")]
	private sealed class <RunLoadingAnimation>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatarMaterialManager <>4__this;

		[Token(Token = "0x4001FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callBack;

		[Token(Token = "0x4001FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <srcBlend>5__2;

		[Token(Token = "0x4001FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <dstBlend>5__3;

		[Token(Token = "0x4001FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <lightModeTag>5__4;

		[Token(Token = "0x4001FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <renderTypeTag>5__5;

		[Token(Token = "0x4001FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string <renderQueueTag>5__6;

		[Token(Token = "0x4001FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string <ignoreProjectorTag>5__7;

		[Token(Token = "0x4001FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <renderQueue>5__8;

		[Token(Token = "0x4001FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool <transparentQueue>5__9;

		[Token(Token = "0x17000490")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60023FC")]
			[Address(RVA = "0x20B5DA8", Offset = "0x20B5DA8", VA = "0x20B5DA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000491")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60023FE")]
			[Address(RVA = "0x20B5E10", Offset = "0x20B5E10", VA = "0x20B5E10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023F9")]
		[Address(RVA = "0x20B51C0", Offset = "0x20B51C0", VA = "0x20B51C0")]
		[DebuggerHidden]
		public <RunLoadingAnimation>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x60023FA")]
		[Address(RVA = "0x20B56E8", Offset = "0x20B56E8", VA = "0x20B56E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60023FB")]
		[Address(RVA = "0x20B56EC", Offset = "0x20B56EC", VA = "0x20B56EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60023FD")]
		[Address(RVA = "0x20B5DB0", Offset = "0x20B5DB0", VA = "0x20B5DB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer TargetRenderer;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AvatarTextureArrayProperties[] TextureArrays;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly string[] TextureTypeToShaderProperties;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AvatarMaterialConfig LocalAvatarConfig;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ReflectionProbeBlendInfo> ReflectionProbes;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader CombinedShader;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_LOADER;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string AVATAR_SHADER_MAINTEX;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string AVATAR_SHADER_NORMALMAP;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string AVATAR_SHADER_ROUGHNESSMAP;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string AVATAR_SHADER_COLOR;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string AVATAR_SHADER_DIFFUSEINTENSITY;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string AVATAR_SHADER_RIMINTENSITY;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string AVATAR_SHADER_REFLECTIONINTENSITY;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string AVATAR_SHADER_CUBEMAP;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string AVATAR_SHADER_ALPHA;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string AVATAR_SHADER_LOADING_DIMMER;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string AVATAR_SHADER_IRIS_COLOR;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string AVATAR_SHADER_LIP_COLOR;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string AVATAR_SHADER_BROW_COLOR;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string AVATAR_SHADER_LASH_COLOR;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static string AVATAR_SHADER_SCLERA_COLOR;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string AVATAR_SHADER_GUM_COLOR;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string AVATAR_SHADER_TEETH_COLOR;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static string AVATAR_SHADER_LIP_SMOOTHNESS;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static float[] DiffuseIntensities;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static float[] RimIntensities;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static float[] ReflectionIntensities;

	[Token(Token = "0x4000517")]
	private const float LOADING_ANIMATION_AMPLITUDE = 0.5f;

	[Token(Token = "0x4000518")]
	private const float LOADING_ANIMATION_PERIOD = 0.35f;

	[Token(Token = "0x4000519")]
	private const float LOADING_ANIMATION_CURVE_SCALE = 0.25f;

	[Token(Token = "0x400051A")]
	private const float LOADING_ANIMATION_DIMMER_MIN = 0.3f;

	[Token(Token = "0x600072C")]
	[Address(RVA = "0x20B2FE4", Offset = "0x20B2FE4", VA = "0x20B2FE4")]
	public void CreateTextureArrays()
	{
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0x20B3198", Offset = "0x20B3198", VA = "0x20B3198")]
	public void SetRenderer(Renderer renderer)
	{
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0x20B31D8", Offset = "0x20B31D8", VA = "0x20B31D8")]
	public void OnCombinedMeshReady()
	{
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0x20B3928", Offset = "0x20B3928", VA = "0x20B3928")]
	public void AddTextureIDToTextureManager(ulong assetID, bool isSingleComponent)
	{
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0x20B3BC4", Offset = "0x20B3BC4", VA = "0x20B3BC4")]
	private void DeleteTextureSet()
	{
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0x20B326C", Offset = "0x20B326C", VA = "0x20B326C")]
	public void InitTextureArrays()
	{
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0x20B3CB4", Offset = "0x20B3CB4", VA = "0x20B3CB4")]
	private void ProcessTexturesWithMips(Texture2D[] textures, int texArrayResolution, Texture2DArray texArray)
	{
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0x20B3688", Offset = "0x20B3688", VA = "0x20B3688")]
	private void SetMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0x20B3F48", Offset = "0x20B3F48", VA = "0x20B3F48")]
	private void ApplyMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0x20B41C0", Offset = "0x20B41C0", VA = "0x20B41C0")]
	public static ovrAvatarBodyPartType GetComponentType(string objectName)
	{
		return default(ovrAvatarBodyPartType);
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0x20B42BC", Offset = "0x20B42BC", VA = "0x20B42BC")]
	private ulong GetTextureIDForType(ovrAvatarPBSMaterialState materialState, TextureType type)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0x20B42F4", Offset = "0x20B42F4", VA = "0x20B42F4")]
	public void ValidateTextures(ovrAvatarPBSMaterialState[] materialStates)
	{
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0x20B3890", Offset = "0x20B3890", VA = "0x20B3890")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x147FB94", Offset = "0x147FB94")]
	private IEnumerator RunLoadingAnimation(Action callBack)
	{
		return null;
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0x20B51EC", Offset = "0x20B51EC", VA = "0x20B51EC")]
	public OvrAvatarMaterialManager()
	{
	}
}
[Token(Token = "0x20000B3")]
public class OvrAvatarPacket
{
	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr ovrNativePacket;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<float> frameTimes;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<OvrAvatarDriver.PoseFrame> frames;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte[]> encodedAudioPackets;

	[Token(Token = "0x17000110")]
	public float Duration
	{
		[Token(Token = "0x600073B")]
		[Address(RVA = "0x20B5E18", Offset = "0x20B5E18", VA = "0x20B5E18")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000111")]
	public OvrAvatarDriver.PoseFrame FinalFrame
	{
		[Token(Token = "0x600073C")]
		[Address(RVA = "0x20B5E84", Offset = "0x20B5E84", VA = "0x20B5E84")]
		get
		{
			return default(OvrAvatarDriver.PoseFrame);
		}
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0x20B5F08", Offset = "0x20B5F08", VA = "0x20B5F08")]
	public OvrAvatarPacket()
	{
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0x20B5FF0", Offset = "0x20B5FF0", VA = "0x20B5FF0")]
	public OvrAvatarPacket(OvrAvatarDriver.PoseFrame initialPose)
	{
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0x20B6160", Offset = "0x20B6160", VA = "0x20B6160")]
	private OvrAvatarPacket(List<float> frameTimes, List<OvrAvatarDriver.PoseFrame> frames, List<byte[]> audioPackets)
	{
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0x20B6288", Offset = "0x20B6288", VA = "0x20B6288")]
	public void AddFrame(OvrAvatarDriver.PoseFrame frame, float deltaSeconds)
	{
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0x20B6358", Offset = "0x20B6358", VA = "0x20B6358")]
	public OvrAvatarDriver.PoseFrame GetPoseFrame(float seconds)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0x20B6560", Offset = "0x20B6560", VA = "0x20B6560")]
	public static OvrAvatarPacket Read(Stream stream)
	{
		return null;
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0x20B67B8", Offset = "0x20B67B8", VA = "0x20B67B8")]
	public void Write(Stream stream)
	{
	}
}
[Token(Token = "0x20000B4")]
internal static class BinaryWriterExtensions
{
	[Token(Token = "0x6000744")]
	[Address(RVA = "0x1EE2E80", Offset = "0x1EE2E80", VA = "0x1EE2E80")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.PoseFrame frame)
	{
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0x1EE2F94", Offset = "0x1EE2F94", VA = "0x1EE2F94")]
	public static void Write(this BinaryWriter writer, Vector3 vec3)
	{
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0x1EE3140", Offset = "0x1EE3140", VA = "0x1EE3140")]
	public static void Write(this BinaryWriter writer, Vector2 vec2)
	{
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0x1EE3004", Offset = "0x1EE3004", VA = "0x1EE3004")]
	public static void Write(this BinaryWriter writer, Quaternion quat)
	{
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0x1EE3098", Offset = "0x1EE3098", VA = "0x1EE3098")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.ControllerPose pose)
	{
	}
}
[Token(Token = "0x20000B5")]
internal static class BinaryReaderExtensions
{
	[Token(Token = "0x6000749")]
	[Address(RVA = "0x1EE2A80", Offset = "0x1EE2A80", VA = "0x1EE2A80")]
	public static OvrAvatarDriver.PoseFrame ReadPoseFrame(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0x1EE2E24", Offset = "0x1EE2E24", VA = "0x1EE2E24")]
	public static Vector2 ReadVector2(this BinaryReader reader)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0x1EE2C20", Offset = "0x1EE2C20", VA = "0x1EE2C20")]
	public static Vector3 ReadVector3(this BinaryReader reader)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0x1EE2C98", Offset = "0x1EE2C98", VA = "0x1EE2C98")]
	public static Quaternion ReadQuaternion(this BinaryReader reader)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0x1EE2D34", Offset = "0x1EE2D34", VA = "0x1EE2D34")]
	public static OvrAvatarDriver.ControllerPose ReadControllerPose(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.ControllerPose);
	}
}
[Token(Token = "0x20000B6")]
public class OvrAvatarRemoteDriver : OvrAvatarDriver
{
	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Queue<OvrAvatarPacket> packetQueue;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IntPtr CurrentSDKPacket;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float CurrentPacketTime;

	[Token(Token = "0x4000522")]
	private const int MinPacketQueue = 1;

	[Token(Token = "0x4000523")]
	private const int MaxPacketQueue = 4;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int CurrentSequence;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isStreaming;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OvrAvatarPacket currentPacket;

	[Token(Token = "0x600074E")]
	[Address(RVA = "0x20B69A8", Offset = "0x20B69A8", VA = "0x20B69A8")]
	public void QueuePacket(int sequence, OvrAvatarPacket packet)
	{
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0x20B6A34", Offset = "0x20B6A34", VA = "0x20B6A34", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0x20B6A50", Offset = "0x20B6A50", VA = "0x20B6A50")]
	private void UpdateFromSDKPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0x20B6BFC", Offset = "0x20B6BFC", VA = "0x20B6BFC")]
	private void UpdateFromUnityPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0x20B6DE0", Offset = "0x20B6DE0", VA = "0x20B6DE0")]
	public OvrAvatarRemoteDriver()
	{
	}
}
[Token(Token = "0x20000B7")]
public class OvrAvatarRenderComponent : MonoBehaviour
{
	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool firstSkinnedUpdate;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] bones;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isBodyComponent;

	[Token(Token = "0x6000753")]
	[Address(RVA = "0x20B6E70", Offset = "0x20B6E70", VA = "0x20B6E70")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0x20B6F54", Offset = "0x20B6F54", VA = "0x20B6F54")]
	protected SkinnedMeshRenderer CreateSkinnedMesh(ulong assetID, ovrAvatarVisibilityFlags visibilityMask, int thirdPersonLayer, int firstPersonLayer)
	{
		return null;
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0x20B7148", Offset = "0x20B7148", VA = "0x20B7148")]
	protected void UpdateSkinnedMesh(OvrAvatar avatar, Transform[] bones, ovrAvatarTransform localTransform, ovrAvatarVisibilityFlags visibilityMask, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0x20B74DC", Offset = "0x20B74DC", VA = "0x20B74DC")]
	protected Material CreateAvatarMaterial(string name, Shader shader)
	{
		return null;
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0x20B75D4", Offset = "0x20B75D4", VA = "0x20B75D4")]
	public OvrAvatarRenderComponent()
	{
	}
}
[Token(Token = "0x20000B8")]
[Flags]
public enum ovrAvatarCapabilities
{
	[Token(Token = "0x400052C")]
	Body = 1,
	[Token(Token = "0x400052D")]
	Hands = 2,
	[Token(Token = "0x400052E")]
	Base = 4,
	[Token(Token = "0x400052F")]
	BodyTilt = 0x10,
	[Token(Token = "0x4000530")]
	Expressive = 0x20,
	[Token(Token = "0x4000531")]
	All = -1
}
[Token(Token = "0x20000B9")]
public enum ovrAvatarMessageType
{
	[Token(Token = "0x4000533")]
	AvatarSpecification,
	[Token(Token = "0x4000534")]
	AssetLoaded,
	[Token(Token = "0x4000535")]
	Count
}
[Token(Token = "0x20000BA")]
public struct ovrAvatarMessage_AvatarSpecification
{
	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr avatarSpec;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ulong oculusUserID;
}
[Token(Token = "0x20000BB")]
public struct ovrAvatarMessage_AssetLoaded
{
	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong assetID;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr asset;
}
[Token(Token = "0x20000BC")]
public enum ovrAvatarAssetType
{
	[Token(Token = "0x400053B")]
	Mesh,
	[Token(Token = "0x400053C")]
	Texture,
	[Token(Token = "0x400053D")]
	Pose,
	[Token(Token = "0x400053E")]
	Material,
	[Token(Token = "0x400053F")]
	CombinedMesh,
	[Token(Token = "0x4000540")]
	PBSMaterial,
	[Token(Token = "0x4000541")]
	FailedLoad,
	[Token(Token = "0x4000542")]
	Count
}
[Token(Token = "0x20000BD")]
public struct ovrAvatarMeshVertex
{
	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public byte[] blendIndices;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] blendWeights;
}
[Token(Token = "0x20000BE")]
public struct ovrAvatarMeshVertexV2
{
	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float r;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float g;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float b;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float a;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public byte[] blendIndices;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float[] blendWeights;
}
[Token(Token = "0x20000BF")]
public struct ovrAvatarBlendVertex
{
	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;
}
[Token(Token = "0x20000C0")]
public struct ovrAvatarMeshAssetData
{
	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x20000C1")]
public struct ovrAvatarMeshAssetDataV2
{
	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x20000C2")]
public enum ovrAvatarTextureFormat
{
	[Token(Token = "0x4000577")]
	RGB24,
	[Token(Token = "0x4000578")]
	DXT1,
	[Token(Token = "0x4000579")]
	DXT5,
	[Token(Token = "0x400057A")]
	ASTC_RGB_6x6,
	[Token(Token = "0x400057B")]
	ASTC_RGB_6x6_MIPMAPS,
	[Token(Token = "0x400057C")]
	Count
}
[Token(Token = "0x20000C3")]
public struct ovrAvatarTextureAssetData
{
	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTextureFormat format;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint sizeX;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public uint sizeY;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public uint mipCount;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong textureDataSize;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr textureData;
}
[Token(Token = "0x20000C4")]
public enum ovrAvatarRenderPartType
{
	[Token(Token = "0x4000584")]
	SkinnedMeshRender,
	[Token(Token = "0x4000585")]
	SkinnedMeshRenderPBS,
	[Token(Token = "0x4000586")]
	ProjectorRender,
	[Token(Token = "0x4000587")]
	SkinnedMeshRenderPBS_V2,
	[Token(Token = "0x4000588")]
	Count
}
[Token(Token = "0x20000C5")]
public enum ovrAvatarLogLevel
{
	[Token(Token = "0x400058A")]
	Unknown,
	[Token(Token = "0x400058B")]
	Default,
	[Token(Token = "0x400058C")]
	Verbose,
	[Token(Token = "0x400058D")]
	Debug,
	[Token(Token = "0x400058E")]
	Info,
	[Token(Token = "0x400058F")]
	Warn,
	[Token(Token = "0x4000590")]
	Error,
	[Token(Token = "0x4000591")]
	Fatal,
	[Token(Token = "0x4000592")]
	Silent
}
[Token(Token = "0x20000C6")]
public struct ovrAvatarTransform
{
	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion orientation;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 scale;
}
[Token(Token = "0x20000C7")]
[Flags]
public enum ovrAvatarButton
{
	[Token(Token = "0x4000597")]
	One = 1,
	[Token(Token = "0x4000598")]
	Two = 2,
	[Token(Token = "0x4000599")]
	Three = 4,
	[Token(Token = "0x400059A")]
	Joystick = 8
}
[Token(Token = "0x20000C8")]
[Flags]
public enum ovrAvatarTouch
{
	[Token(Token = "0x400059C")]
	One = 1,
	[Token(Token = "0x400059D")]
	Two = 2,
	[Token(Token = "0x400059E")]
	Joystick = 4,
	[Token(Token = "0x400059F")]
	ThumbRest = 8,
	[Token(Token = "0x40005A0")]
	Index = 0x10,
	[Token(Token = "0x40005A1")]
	Pointing = 0x40,
	[Token(Token = "0x40005A2")]
	ThumbUp = 0x80
}
[Token(Token = "0x20000C9")]
public struct ovrAvatarHandInputState
{
	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarButton buttonMask;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ovrAvatarTouch touchMask;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float joystickX;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float joystickY;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float indexTrigger;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float handTrigger;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isActive;
}
[Token(Token = "0x20000CA")]
public struct ovrAvatarComponent
{
	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint renderPartCount;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr renderParts;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string name;
}
[Token(Token = "0x20000CB")]
internal struct ovrAvatarComponent_Offsets
{
	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long transform;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int renderPartCount;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int renderParts;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int name;
}
[Token(Token = "0x20000CC")]
public struct ovrAvatarBaseComponent
{
	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 basePosition;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20000CD")]
public struct ovrAvatarBodyComponent
{
	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform leftEyeTransform;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarTransform rightEyeTransform;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ovrAvatarTransform centerEyeTransform;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20000CE")]
public struct ovrAvatarBodyComponent_Offsets
{
	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long leftEyeTransform;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long rightEyeTransform;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long centerEyeTransform;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long renderComponent;
}
[Token(Token = "0x20000CF")]
public struct ovrAvatarControllerComponent
{
	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20000D0")]
public struct ovrAvatarHandComponent
{
	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20000D1")]
public enum ovrAvatarMaterialLayerBlendMode
{
	[Token(Token = "0x40005C2")]
	Add,
	[Token(Token = "0x40005C3")]
	Multiply,
	[Token(Token = "0x40005C4")]
	Count
}
[Token(Token = "0x20000D2")]
public enum ovrAvatarMaterialLayerSampleMode
{
	[Token(Token = "0x40005C6")]
	Color,
	[Token(Token = "0x40005C7")]
	Texture,
	[Token(Token = "0x40005C8")]
	TextureSingleChannel,
	[Token(Token = "0x40005C9")]
	Parallax,
	[Token(Token = "0x40005CA")]
	Count
}
[Token(Token = "0x20000D3")]
public enum ovrAvatarMaterialMaskType
{
	[Token(Token = "0x40005CC")]
	None,
	[Token(Token = "0x40005CD")]
	Positional,
	[Token(Token = "0x40005CE")]
	ViewReflection,
	[Token(Token = "0x40005CF")]
	Fresnel,
	[Token(Token = "0x40005D0")]
	Pulse,
	[Token(Token = "0x40005D1")]
	Count
}
[Token(Token = "0x20000D4")]
public enum ovrAvatarControllerType
{
	[Token(Token = "0x40005D3")]
	Touch,
	[Token(Token = "0x40005D4")]
	Malibu,
	[Token(Token = "0x40005D5")]
	Go,
	[Token(Token = "0x40005D6")]
	Quest,
	[Token(Token = "0x40005D7")]
	Count
}
[Token(Token = "0x20000D5")]
public enum ovrAvatarAssetLevelOfDetail
{
	[Token(Token = "0x40005D9")]
	Lowest = 1,
	[Token(Token = "0x40005DA")]
	Medium = 3,
	[Token(Token = "0x40005DB")]
	Highest = 5
}
[Token(Token = "0x20000D6")]
public enum ovrAvatarLookAndFeelVersion
{
	[Token(Token = "0x40005DD")]
	Unknown = -1,
	[Token(Token = "0x40005DE")]
	One,
	[Token(Token = "0x40005DF")]
	Two
}
[Token(Token = "0x20000D7")]
public struct ovrAvatarMaterialLayerState
{
	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarMaterialLayerBlendMode blendMode;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarMaterialMaskType maskType;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector4 layerColor;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector4 sampleParameters;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong sampleTexture;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector4 sampleScaleOffset;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector4 maskParameters;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 maskAxis;

	[Token(Token = "0x600075A")]
	[Address(RVA = "0x2A87AF0", Offset = "0x2A87AF0", VA = "0x2A87AF0")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0x2A87B20", Offset = "0x2A87B20", VA = "0x2A87B20", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0x2A87D40", Offset = "0x2A87D40", VA = "0x2A87D40", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20000D8")]
public struct ovrAvatarMaterialState
{
	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarMaterialMaskType baseMaskType;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector4 baseMaskParameters;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector4 baseMaskAxis;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong alphaMaskTextureID;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 alphaMaskScaleOffset;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong normalMapTextureID;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 normalMapScaleOffset;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong parallaxMapTextureID;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector4 parallaxMapScaleOffset;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ulong roughnessMapTextureID;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector4 roughnessMapScaleOffset;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public uint layerCount;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ovrAvatarMaterialLayerState[] layers;

	[Token(Token = "0x600075D")]
	[Address(RVA = "0x2A87E24", Offset = "0x2A87E24", VA = "0x2A87E24")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0x2A87E54", Offset = "0x2A87E54", VA = "0x2A87E54", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0x2A881E8", Offset = "0x2A881E8", VA = "0x2A881E8", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20000D9")]
public struct ovrAvatarExpressiveParameters
{
	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 irisColor;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector4 scleraColor;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4 lashColor;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 browColor;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 lipColor;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector4 teethColor;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector4 gumColor;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float browLashIntensity;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float lipSmoothness;

	[Token(Token = "0x6000760")]
	[Address(RVA = "0x2A87198", Offset = "0x2A87198", VA = "0x2A87198")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0x2A871C8", Offset = "0x2A871C8", VA = "0x2A871C8", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0x2A8745C", Offset = "0x2A8745C", VA = "0x2A8745C", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20000DA")]
public struct ovrAvatarPBSMaterialState
{
	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong albedoTextureID;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector4 albedoMultiplier;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ulong metallicnessTextureID;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float glossinessScale;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong normalTextureID;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong heightTextureID;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ulong occlusionTextureID;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong emissionTextureID;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 emissionMultiplier;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong detailMaskTextureID;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ulong detailAlbedoTextureID;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ulong detailNormalTextureID;

	[Token(Token = "0x6000763")]
	[Address(RVA = "0x2A88350", Offset = "0x2A88350", VA = "0x2A88350")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0x2A88380", Offset = "0x2A88380", VA = "0x2A88380", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0x2A88574", Offset = "0x2A88574", VA = "0x2A88574", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20000DB")]
public class OvrAvatarAssetMaterial : OvrAvatarAsset
{
	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarMaterialState material;

	[Token(Token = "0x6000766")]
	[Address(RVA = "0x20AD14C", Offset = "0x20AD14C", VA = "0x20AD14C")]
	public OvrAvatarAssetMaterial(ulong id, IntPtr mat)
	{
	}
}
[Token(Token = "0x20000DC")]
public struct ovrAvatarSkinnedMeshPose
{
	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint jointCount;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarTransform[] jointTransform;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] jointParents;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr[] jointNames;
}
[Token(Token = "0x20000DD")]
[Flags]
public enum ovrAvatarVisibilityFlags
{
	[Token(Token = "0x4000614")]
	FirstPerson = 1,
	[Token(Token = "0x4000615")]
	ThirdPerson = 2,
	[Token(Token = "0x4000616")]
	SelfOccluding = 4
}
[Token(Token = "0x20000DE")]
public struct ovrAvatarRenderPart_SkinnedMeshRender
{
	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarMaterialState materialState;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x20000DF")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS
{
	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong albedoTextureAssetID;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong surfaceTextureAssetID;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x20000E0")]
public struct ovrAvatarRenderPart_ProjectorRender
{
	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint componentIndex;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint renderPartIndex;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ovrAvatarMaterialState materialState;
}
[Token(Token = "0x20000E1")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
{
	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarPBSMaterialState materialState;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x20000E2")]
public enum ovrAvatarHandGesture
{
	[Token(Token = "0x400062C")]
	Default,
	[Token(Token = "0x400062D")]
	GripSphere,
	[Token(Token = "0x400062E")]
	GripCube,
	[Token(Token = "0x400062F")]
	Count
}
[Token(Token = "0x20000E3")]
public enum ovrAvatarBodyPartType
{
	[Token(Token = "0x4000631")]
	Body,
	[Token(Token = "0x4000632")]
	Clothing,
	[Token(Token = "0x4000633")]
	Eyewear,
	[Token(Token = "0x4000634")]
	Hair,
	[Token(Token = "0x4000635")]
	Beard,
	[Token(Token = "0x4000636")]
	Count
}
[Token(Token = "0x20000E4")]
public struct ovrAvatarBlendShapeParams
{
	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint blendShapeParamCount;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] blendShapeParams;
}
[Token(Token = "0x20000E5")]
internal struct ovrAvatarBlendShapeParams_Offsets
{
	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int blendShapeParamCount;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long blendShapeParams;
}
[Token(Token = "0x20000E6")]
public struct ovrAvatarVisemes
{
	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint visemeParamCount;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] visemeParams;
}
[Token(Token = "0x20000E7")]
internal struct ovrAvatarVisemes_Offsets
{
	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int visemeParamCount;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long visemeParams;
}
[Token(Token = "0x20000E8")]
public enum ovrAvatarGazeTargetType
{
	[Token(Token = "0x4000640")]
	AvatarHead,
	[Token(Token = "0x4000641")]
	AvatarHand,
	[Token(Token = "0x4000642")]
	Object,
	[Token(Token = "0x4000643")]
	ObjectStatic,
	[Token(Token = "0x4000644")]
	Count
}
[Token(Token = "0x20000E9")]
public struct ovrAvatarGazeTarget
{
	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector3 worldPosition;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarGazeTargetType type;
}
[Token(Token = "0x20000EA")]
internal struct ovrAvatarGazeTarget_Offsets
{
	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int id;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int worldPosition;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int type;
}
[Token(Token = "0x20000EB")]
public struct ovrAvatarGazeTargets
{
	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint targetCount;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarGazeTarget[] targets;
}
[Token(Token = "0x20000EC")]
internal struct ovrAvatarGazeTargets_Offsets
{
	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int targetCount;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long targets;
}
[Token(Token = "0x20000ED")]
public enum ovrAvatarLightType
{
	[Token(Token = "0x4000650")]
	Point,
	[Token(Token = "0x4000651")]
	Direction,
	[Token(Token = "0x4000652")]
	Spot,
	[Token(Token = "0x4000653")]
	Count
}
[Token(Token = "0x20000EE")]
public struct ovrAvatarLight
{
	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarLightType type;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float intensity;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 worldDirection;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 worldPosition;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float range;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spotAngleDeg;
}
[Token(Token = "0x20000EF")]
internal struct ovrAvatarLight_Offsets
{
	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long id;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long type;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long intensity;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long worldDirection;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static long worldPosition;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static long range;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static long spotAngleDeg;
}
[Token(Token = "0x20000F0")]
public struct ovrAvatarLights
{
	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ambientIntensity;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint lightCount;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarLight[] lights;
}
[Token(Token = "0x20000F1")]
internal struct ovrAvatarLights_Offsets
{
	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long ambientIntensity;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long lightCount;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long lights;
}
[Token(Token = "0x20000F2")]
[Flags]
public enum ovrAvatarDebugContext : uint
{
	[Token(Token = "0x4000669")]
	None = 0u,
	[Token(Token = "0x400066A")]
	GazeTarget = 1u,
	[Token(Token = "0x400066B")]
	Any = uint.MaxValue
}
[Token(Token = "0x20000F3")]
public struct ovrAvatarDebugLine
{
	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 startPoint;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 endPoint;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 color;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntPtr text;
}
[Token(Token = "0x20000F4")]
public struct ovrAvatarDebugTransform
{
	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr text;
}
[Token(Token = "0x20000F5")]
public delegate void specificationCallback(IntPtr specification);
[Token(Token = "0x20000F6")]
public delegate void assetLoadedCallback(OvrAvatarAsset asset);
[Token(Token = "0x20000F7")]
public delegate void combinedMeshLoadedCallback(IntPtr asset);
[Token(Token = "0x20000F8")]
public class OvrAvatarSDKManager : MonoBehaviour
{
	[Token(Token = "0x2000512")]
	public struct AvatarSpecRequestParams
	{
		[Token(Token = "0x4001FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong _userId;

		[Token(Token = "0x4001FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public specificationCallback _callback;

		[Token(Token = "0x4001FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _useCombinedMesh;

		[Token(Token = "0x4001FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ovrAvatarAssetLevelOfDetail _lod;

		[Token(Token = "0x4001FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _forceMobileTextureFormat;

		[Token(Token = "0x4001FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ovrAvatarLookAndFeelVersion _lookVersion;

		[Token(Token = "0x4001FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ovrAvatarLookAndFeelVersion _fallbackVersion;

		[Token(Token = "0x4001FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool _enableExpressive;

		[Token(Token = "0x60023FF")]
		[Address(RVA = "0x20B867C", Offset = "0x20B867C", VA = "0x20B867C")]
		public AvatarSpecRequestParams(ulong userId, specificationCallback callback, bool useCombinedMesh, ovrAvatarAssetLevelOfDetail lod, bool forceMobileTextureFormat, ovrAvatarLookAndFeelVersion lookVersion, ovrAvatarLookAndFeelVersion fallbackVersion, bool enableExpressive)
		{
		}
	}

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSDKManager _instance;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool initialized;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<ulong, HashSet<specificationCallback>> specificationCallbacks;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<ulong, HashSet<assetLoadedCallback>> assetLoadedCallbacks;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<IntPtr, combinedMeshLoadedCallback> combinedMeshLoadedCallbacks;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<ulong, OvrAvatarAsset> assetCache;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OvrAvatarTextureCopyManager textureCopyManager;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarLogLevel LoggingLevel;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Queue<AvatarSpecRequestParams> avatarSpecificationQueue;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> loadingAvatars;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool avatarSpecRequestAvailable;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastDispatchedAvatarSpecRequestTime;

	[Token(Token = "0x4000680")]
	private const float AVATAR_SPEC_REQUEST_TIMEOUT = 5f;

	[Token(Token = "0x17000112")]
	public static OvrAvatarSDKManager Instance
	{
		[Token(Token = "0x6000779")]
		[Address(RVA = "0x20B0668", Offset = "0x20B0668", VA = "0x20B0668")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0x20B75E4", Offset = "0x20B75E4", VA = "0x20B75E4")]
	private bool Initialize()
	{
		return default(bool);
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0x20B7878", Offset = "0x20B7878", VA = "0x20B7878")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0x20B78EC", Offset = "0x20B78EC", VA = "0x20B78EC")]
	private void Update()
	{
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0x20B8130", Offset = "0x20B8130", VA = "0x20B8130")]
	public bool IsAvatarSpecWaiting()
	{
		return default(bool);
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0x20B8188", Offset = "0x20B8188", VA = "0x20B8188")]
	public bool IsAvatarLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0x20B81E0", Offset = "0x20B81E0", VA = "0x20B81E0")]
	public void AddLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0x20B8248", Offset = "0x20B8248", VA = "0x20B8248")]
	public void RemoveLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0x20B82B0", Offset = "0x20B82B0", VA = "0x20B82B0")]
	public void RequestAvatarSpecification(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0x20B7F68", Offset = "0x20B7F68", VA = "0x20B7F68")]
	private void DispatchAvatarSpecificationRequest(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0x20B8390", Offset = "0x20B8390", VA = "0x20B8390")]
	public void BeginLoadingAsset(ulong assetId, ovrAvatarAssetLevelOfDetail lod, assetLoadedCallback callback)
	{
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0x20B84AC", Offset = "0x20B84AC", VA = "0x20B84AC")]
	public void RegisterCombinedMeshCallback(IntPtr sdkAvatar, combinedMeshLoadedCallback callback)
	{
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0x20B081C", Offset = "0x20B081C", VA = "0x20B081C")]
	public OvrAvatarAsset GetAsset(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0x20B858C", Offset = "0x20B858C", VA = "0x20B858C")]
	public void DeleteAssetFromCache(ulong assetId)
	{
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0x20B782C", Offset = "0x20B782C", VA = "0x20B782C")]
	public string GetAppId()
	{
		return null;
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0x20B3988", Offset = "0x20B3988", VA = "0x20B3988")]
	public OvrAvatarTextureCopyManager GetTextureCopyManager()
	{
		return null;
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0x20B8664", Offset = "0x20B8664", VA = "0x20B8664")]
	public OvrAvatarSDKManager()
	{
	}
}
[Token(Token = "0x20000F9")]
public sealed class OvrAvatarSettings : ScriptableObject
{
	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSettings instance;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string ovrAppID;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string ovrGearAppID;

	[Token(Token = "0x17000113")]
	public static string AppID
	{
		[Token(Token = "0x600078A")]
		[Address(RVA = "0x20B8624", Offset = "0x20B8624", VA = "0x20B8624")]
		get
		{
			return null;
		}
		[Token(Token = "0x600078B")]
		[Address(RVA = "0x20B8824", Offset = "0x20B8824", VA = "0x20B8824")]
		set
		{
		}
	}

	[Token(Token = "0x17000114")]
	public static string MobileAppID
	{
		[Token(Token = "0x600078C")]
		[Address(RVA = "0x20B8644", Offset = "0x20B8644", VA = "0x20B8644")]
		get
		{
			return null;
		}
		[Token(Token = "0x600078D")]
		[Address(RVA = "0x20B8854", Offset = "0x20B8854", VA = "0x20B8854")]
		set
		{
		}
	}

	[Token(Token = "0x17000115")]
	public static OvrAvatarSettings Instance
	{
		[Token(Token = "0x600078E")]
		[Address(RVA = "0x20B86F8", Offset = "0x20B86F8", VA = "0x20B86F8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600078F")]
		[Address(RVA = "0x20B8884", Offset = "0x20B8884", VA = "0x20B8884")]
		set
		{
		}
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0x20B88DC", Offset = "0x20B88DC", VA = "0x20B88DC")]
	public OvrAvatarSettings()
	{
	}
}
[Token(Token = "0x20000FA")]
public class OvrAvatarSkinnedMeshRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Shader surface;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader surfaceSelfOccluding;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool previouslyActive;

	[Token(Token = "0x6000791")]
	[Address(RVA = "0x20BA094", Offset = "0x20BA094", VA = "0x20BA094")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender, Shader surface, Shader surfaceSelfOccluding, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0x20AF7B4", Offset = "0x20AF7B4", VA = "0x20AF7B4")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0x20BA20C", Offset = "0x20BA20C", VA = "0x20BA20C")]
	private void UpdateMeshMaterial(ovrAvatarVisibilityFlags visibilityMask, SkinnedMeshRenderer rootMesh)
	{
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0x20BA36C", Offset = "0x20BA36C", VA = "0x20BA36C")]
	public OvrAvatarSkinnedMeshRenderComponent()
	{
	}
}
[Token(Token = "0x20000FB")]
public class OvrAvatarSkinnedMeshRenderPBSComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isMaterialInitilized;

	[Token(Token = "0x6000795")]
	[Address(RVA = "0x20BA37C", Offset = "0x20BA37C", VA = "0x20BA37C")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS, Shader shader, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0x20AF9DC", Offset = "0x20AF9DC", VA = "0x20AF9DC")]
	internal void UpdateSkinnedMeshRenderPBS(OvrAvatar avatar, IntPtr renderPart, Material mat)
	{
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0x20BA4C4", Offset = "0x20BA4C4", VA = "0x20BA4C4")]
	public OvrAvatarSkinnedMeshRenderPBSComponent()
	{
	}
}
[Token(Token = "0x20000FC")]
public class OvrAvatarSkinnedMeshPBSV2RenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OvrAvatarMaterialManager avatarMaterialManager;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool previouslyActive;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isCombinedMaterial;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private ovrAvatarExpressiveParameters ExpressiveParameters;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool EnableExpressive;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int blendShapeCount;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ovrAvatarBlendShapeParams blendShapeParams;

	[Token(Token = "0x400068F")]
	private const string MAIN_MATERIAL_NAME = "main_material";

	[Token(Token = "0x4000690")]
	private const string EYE_MATERIAL_NAME = "eye_material";

	[Token(Token = "0x4000691")]
	private const string DEFAULT_MATERIAL_NAME = "_material";

	[Token(Token = "0x6000798")]
	[Address(RVA = "0x20B894C", Offset = "0x20B894C", VA = "0x20B894C")]
	internal void Initialize(IntPtr renderPart, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRender, OvrAvatarMaterialManager materialManager, int thirdPersonLayer, int firstPersonLayer, bool combinedMesh, ovrAvatarAssetLevelOfDetail lod, bool assignExpressiveParams, OvrAvatar avatar, bool isControllerModel)
	{
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0x20AFB74", Offset = "0x20AFB74", VA = "0x20AFB74")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0x20B9850", Offset = "0x20B9850", VA = "0x20B9850")]
	private void InitializeSingleComponentMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0x20B8F88", Offset = "0x20B8F88", VA = "0x20B8F88")]
	private void InitializeCombinedMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0x20B8D58", Offset = "0x20B8D58", VA = "0x20B8D58")]
	private void SetMaterialTransparent(Material mat)
	{
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0x20B8E6C", Offset = "0x20B8E6C", VA = "0x20B8E6C")]
	private void SetMaterialOpaque(Material mat)
	{
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0x20BA084", Offset = "0x20BA084", VA = "0x20BA084")]
	public OvrAvatarSkinnedMeshPBSV2RenderComponent()
	{
	}
}
[Token(Token = "0x20000FD")]
public class OvrAvatarTextureCopyManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000513")]
	public struct FallbackTextureSet
	{
		[Token(Token = "0x4001FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Initialized;

		[Token(Token = "0x4001FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2D DiffuseRoughness;

		[Token(Token = "0x4001FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D Normal;
	}

	[Token(Token = "0x2000514")]
	private struct CopyTextureParams
	{
		[Token(Token = "0x4001FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture Src;

		[Token(Token = "0x4001FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture Dst;

		[Token(Token = "0x4001FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Mip;

		[Token(Token = "0x4001FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int SrcSize;

		[Token(Token = "0x4001FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int DstElement;

		[Token(Token = "0x6002400")]
		[Address(RVA = "0x20BB2C4", Offset = "0x20BB2C4", VA = "0x20BB2C4")]
		public CopyTextureParams(Texture src, Texture dst, int mip, int srcSize, int dstElement)
		{
		}
	}

	[Token(Token = "0x2000515")]
	public struct TextureSet
	{
		[Token(Token = "0x4001FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<ulong, bool> TextureIDSingleMeshPair;

		[Token(Token = "0x4001FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsProcessed;

		[Token(Token = "0x6002401")]
		[Address(RVA = "0x20BB320", Offset = "0x20BB320", VA = "0x20BB320")]
		public TextureSet(Dictionary<ulong, bool> textureIDSingleMeshPair, bool isProcessed)
		{
		}
	}

	[Token(Token = "0x2000516")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1469E1C", Offset = "0x1469E1C")]
	private sealed class <DeleteTextureSetCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextureSet textureSetToDelete;

		[Token(Token = "0x4001FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OvrAvatarTextureCopyManager <>4__this;

		[Token(Token = "0x4001FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int gameobjectID;

		[Token(Token = "0x17000492")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002405")]
			[Address(RVA = "0x20BBA94", Offset = "0x20BBA94", VA = "0x20BBA94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000493")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002407")]
			[Address(RVA = "0x20BBAFC", Offset = "0x20BBAFC", VA = "0x20BBAFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002402")]
		[Address(RVA = "0x20BB400", Offset = "0x20BB400", VA = "0x20BB400")]
		[DebuggerHidden]
		public <DeleteTextureSetCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6002403")]
		[Address(RVA = "0x20BB5A8", Offset = "0x20BB5A8", VA = "0x20BB5A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002404")]
		[Address(RVA = "0x20BB5AC", Offset = "0x20BB5AC", VA = "0x20BB5AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002406")]
		[Address(RVA = "0x20BBA9C", Offset = "0x20BBA9C", VA = "0x20BBA9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FallbackTextureSet[] FallbackTextureSets;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Queue<CopyTextureParams> texturesToCopy;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, TextureSet> textureSets;

	[Token(Token = "0x4000695")]
	private const int TEXTURES_TO_COPY_QUEUE_CAPACITY = 256;

	[Token(Token = "0x4000696")]
	private const int COPIES_PER_FRAME = 8;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_DIFFUSE_ROUGHNESS;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_NORMAL;

	[Token(Token = "0x4000699")]
	private const string PATH_HIGHEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_2048";

	[Token(Token = "0x400069A")]
	private const string PATH_MEDIUM_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_1024";

	[Token(Token = "0x400069B")]
	private const string PATH_LOWEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_256";

	[Token(Token = "0x400069C")]
	private const string PATH_HIGHEST_NORMAL = "FallbackTextures/fallback_normal_2048";

	[Token(Token = "0x400069D")]
	private const string PATH_MEDIUM_NORMAL = "FallbackTextures/fallback_normal_1024";

	[Token(Token = "0x400069E")]
	private const string PATH_LOWEST_NORMAL = "FallbackTextures/fallback_normal_256";

	[Token(Token = "0x400069F")]
	private const int GPU_TEXTURE_COPY_WAIT_TIME = 10;

	[Token(Token = "0x600079F")]
	[Address(RVA = "0x20BAC78", Offset = "0x20BAC78", VA = "0x20BAC78")]
	public OvrAvatarTextureCopyManager()
	{
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0x20BB0CC", Offset = "0x20BB0CC", VA = "0x20BB0CC")]
	public void Update()
	{
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0x20B5D58", Offset = "0x20B5D58", VA = "0x20B5D58")]
	public int GetTextureCount()
	{
		return default(int);
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0x20B3D98", Offset = "0x20B3D98", VA = "0x20B3D98")]
	public void CopyTexture(Texture src, Texture dst, int mipLevel, int mipSize, int dstElement, bool useQueue = true)
	{
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0x20BB234", Offset = "0x20BB234", VA = "0x20BB234")]
	private void CopyTexture(CopyTextureParams copyTextureParams)
	{
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0x20B3A0C", Offset = "0x20B3A0C", VA = "0x20B3A0C")]
	public void AddTextureIDToTextureSet(int gameobjectID, ulong textureID, bool isSingleMesh)
	{
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0x20B3C0C", Offset = "0x20B3C0C", VA = "0x20B3C0C")]
	public void DeleteTextureSet(int gameobjectID)
	{
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0x20BB350", Offset = "0x20BB350", VA = "0x20BB350")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x147FC98", Offset = "0x147FC98")]
	private IEnumerator DeleteTextureSetCoroutine(TextureSet textureSetToDelete, int gameobjectID)
	{
		return null;
	}

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0x20B8344", Offset = "0x20B8344", VA = "0x20B8344")]
	public void CheckFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0x20BB42C", Offset = "0x20BB42C", VA = "0x20BB42C")]
	private void InitFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}
}
[Token(Token = "0x20000FE")]
public class OvrAvatarTouchController : OvrAvatarComponent
{
	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarControllerComponent component;

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0x20BBB04", Offset = "0x20BBB04", VA = "0x20BBB04")]
	private void Update()
	{
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0x20BBC6C", Offset = "0x20BBC6C", VA = "0x20BBC6C")]
	public OvrAvatarTouchController()
	{
	}
}
[Token(Token = "0x20000FF")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x2000517")]
	public delegate void OnClick();

	[Token(Token = "0x2000518")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x2000519")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x200051A")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x200051B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1469E2C", Offset = "0x1469E2C")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x4001FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x6002418")]
		[Address(RVA = "0x1CB154C", Offset = "0x1CB154C", VA = "0x1CB154C")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x6002419")]
		[Address(RVA = "0x1CB204C", Offset = "0x1CB204C", VA = "0x1CB204C")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x200051C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1469E3C", Offset = "0x1469E3C")]
	private sealed class <>c__DisplayClass43_0
	{
		[Token(Token = "0x4001FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x600241A")]
		[Address(RVA = "0x1CB17CC", Offset = "0x1CB17CC", VA = "0x1CB17CC")]
		public <>c__DisplayClass43_0()
		{
		}

		[Token(Token = "0x600241B")]
		[Address(RVA = "0x1CB2270", Offset = "0x1CB2270", VA = "0x1CB2270")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x200051D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1469E4C", Offset = "0x1469E4C")]
	private sealed class <>c__DisplayClass45_0
	{
		[Token(Token = "0x4001FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4001FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x600241C")]
		[Address(RVA = "0x1CB1A04", Offset = "0x1CB1A04", VA = "0x1CB1A04")]
		public <>c__DisplayClass45_0()
		{
		}

		[Token(Token = "0x600241D")]
		[Address(RVA = "0x1CB24E8", Offset = "0x1CB24E8", VA = "0x1CB24E8")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x200051E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1469E5C", Offset = "0x1469E5C")]
	private sealed class <>c__DisplayClass46_0
	{
		[Token(Token = "0x4001FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4001FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x600241E")]
		[Address(RVA = "0x1CB1BB8", Offset = "0x1CB1BB8", VA = "0x1CB1BB8")]
		public <>c__DisplayClass46_0()
		{
		}

		[Token(Token = "0x600241F")]
		[Address(RVA = "0x1CB289C", Offset = "0x1CB289C", VA = "0x1CB289C")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x200051F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1469E6C", Offset = "0x1469E6C")]
	private sealed class <>c__DisplayClass47_0
	{
		[Token(Token = "0x4001FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x4001FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x6002420")]
		[Address(RVA = "0x1CB1E2C", Offset = "0x1CB1E2C", VA = "0x1CB1E2C")]
		public <>c__DisplayClass47_0()
		{
		}

		[Token(Token = "0x6002421")]
		[Address(RVA = "0x1CB28BC", Offset = "0x1CB28BC", VA = "0x1CB28BC")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x40006A2")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x40006A3")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x40006A4")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform[] additionalButtonPrefab;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool[] reEnable;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float elementSpacing;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float marginH;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float marginV;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector2[] insertPositions;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 menuOffset;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private OVRCameraRig rig;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private LaserPointer lp;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private LineRenderer lr;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public bool isHorizontal;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
	public bool usePanelCentricRelayout;

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0x1CAFF8C", Offset = "0x1CAFF8C", VA = "0x1CAFF8C")]
	public void Awake()
	{
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0x1CB0410", Offset = "0x1CB0410", VA = "0x1CB0410")]
	public void Show()
	{
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0x1CB07AC", Offset = "0x1CB07AC", VA = "0x1CB07AC")]
	public void Hide()
	{
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0x1CB0954", Offset = "0x1CB0954", VA = "0x1CB0954")]
	private void StackedRelayout()
	{
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0x1CB0BC0", Offset = "0x1CB0BC0", VA = "0x1CB0BC0")]
	private void PanelCentricRelayout()
	{
	}

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0x1CB079C", Offset = "0x1CB079C", VA = "0x1CB079C")]
	private void Relayout()
	{
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0x1CB0F0C", Offset = "0x1CB0F0C", VA = "0x1CB0F0C")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0x1CB1204", Offset = "0x1CB1204", VA = "0x1CB1204")]
	public RectTransform AddButton(string label, [Optional] OnClick handler, int buttonIndex = -1, int targetCanvas = 0, bool highResolutionText = false)
	{
		return null;
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0x1CB1554", Offset = "0x1CB1554", VA = "0x1CB1554")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0x1CB1638", Offset = "0x1CB1638", VA = "0x1CB1638")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0x1CB17D4", Offset = "0x1CB17D4", VA = "0x1CB17D4")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0x1CB1870", Offset = "0x1CB1870", VA = "0x1CB1870")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0x1CB1A0C", Offset = "0x1CB1A0C", VA = "0x1CB1A0C")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0x1CB1BC0", Offset = "0x1CB1BC0", VA = "0x1CB1BC0")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0x1CB1E34", Offset = "0x1CB1E34", VA = "0x1CB1E34")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0x1CB1F10", Offset = "0x1CB1F10", VA = "0x1CB1F10")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0x1CB1FC0", Offset = "0x1CB1FC0", VA = "0x1CB1FC0")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x2000100")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0x29B4358", Offset = "0x29B4358", VA = "0x29B4358")]
	private void Start()
	{
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0x29B43F4", Offset = "0x29B43F4", VA = "0x29B43F4")]
	private void Update()
	{
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0x29B44BC", Offset = "0x29B44BC", VA = "0x29B44BC")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0x29B44F8", Offset = "0x29B44F8", VA = "0x29B44F8")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x2000101")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x2000520")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x4001FDC")]
		On,
		[Token(Token = "0x4001FDD")]
		Off,
		[Token(Token = "0x4001FDE")]
		OnWhenHitTarget
	}

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x17000116")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x60007C1")]
		[Address(RVA = "0x1D805E4", Offset = "0x1D805E4", VA = "0x1D805E4")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x60007C0")]
		[Address(RVA = "0x1D805A0", Offset = "0x1D805A0", VA = "0x1D805A0")]
		set
		{
		}
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0x1D805EC", Offset = "0x1D805EC", VA = "0x1D805EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0x1D8064C", Offset = "0x1D8064C", VA = "0x1D8064C")]
	private void Start()
	{
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0x1D80764", Offset = "0x1D80764", VA = "0x1D80764", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0x1D80780", Offset = "0x1D80780", VA = "0x1D80780", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0x1D807D4", Offset = "0x1D807D4", VA = "0x1D807D4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0x1D80A30", Offset = "0x1D80A30", VA = "0x1D80A30")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0x1D80B44", Offset = "0x1D80B44", VA = "0x1D80B44")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0x1D80BD8", Offset = "0x1D80BD8", VA = "0x1D80BD8")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0x1D80CA8", Offset = "0x1D80CA8", VA = "0x1D80CA8")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0x1D80D60", Offset = "0x1D80D60", VA = "0x1D80D60")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0x1D80E2C", Offset = "0x1D80E2C", VA = "0x1D80E2C")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x2000102")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x40006CB")]
	private const float FADE_RAY_LENGTH = 0.25f;

	[Token(Token = "0x40006CC")]
	private const float FADE_OVERLAP_MAXIMUM = 0.1f;

	[Token(Token = "0x40006CD")]
	private const float FADE_AMOUNT_MAXIMUM = 1f;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146CB90", Offset = "0x146CB90")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146CBC8", Offset = "0x146CBC8")]
	public LayerMask CollideLayers;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146CC00", Offset = "0x146CC00")]
	public float HeightOffset;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146CC38", Offset = "0x146CC38")]
	public float MinimumHeight;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146CC70", Offset = "0x146CC70")]
	public float MaximumHeight;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CapsuleCollider _character;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0x2D0C060", Offset = "0x2D0C060", VA = "0x2D0C060")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0x2D0C068", Offset = "0x2D0C068", VA = "0x2D0C068")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0x2D0C0EC", Offset = "0x2D0C0EC", VA = "0x2D0C0EC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0x2D0C178", Offset = "0x2D0C178", VA = "0x2D0C178")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0x2D0C204", Offset = "0x2D0C204", VA = "0x2D0C204")]
	private void CameraUpdate()
	{
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0x2D0C60C", Offset = "0x2D0C60C", VA = "0x2D0C60C")]
	private bool CheckCameraOverlapped()
	{
		return default(bool);
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0x2D0C8B4", Offset = "0x2D0C8B4", VA = "0x2D0C8B4")]
	private bool CheckCameraNearClipping(out float result)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000103")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0x1D80EAC", Offset = "0x1D80EAC", VA = "0x1D80EAC")]
	private void Start()
	{
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0x1D80F70", Offset = "0x1D80F70", VA = "0x1D80F70")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x2000104")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x2000521")]
	public enum States
	{
		[Token(Token = "0x4001FE0")]
		Ready,
		[Token(Token = "0x4001FE1")]
		Aim,
		[Token(Token = "0x4001FE2")]
		CancelAim,
		[Token(Token = "0x4001FE3")]
		PreTeleport,
		[Token(Token = "0x4001FE4")]
		CancelTeleport,
		[Token(Token = "0x4001FE5")]
		Teleporting,
		[Token(Token = "0x4001FE6")]
		PostTeleport
	}

	[Token(Token = "0x2000522")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x4001FE8")]
		None,
		[Token(Token = "0x4001FE9")]
		Aim,
		[Token(Token = "0x4001FEA")]
		PreTeleport,
		[Token(Token = "0x4001FEB")]
		Teleport
	}

	[Token(Token = "0x2000523")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x4001FED")]
		Point,
		[Token(Token = "0x4001FEE")]
		Sphere,
		[Token(Token = "0x4001FEF")]
		Capsule
	}

	[Token(Token = "0x2000524")]
	public class AimData
	{
		[Token(Token = "0x4001FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x4001FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x4001FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x4001FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x4001FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147A228", Offset = "0x147A228")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x17000494")]
		public List<Vector3> Points
		{
			[Token(Token = "0x6002423")]
			[Address(RVA = "0x1D84278", Offset = "0x1D84278", VA = "0x1D84278")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1487844", Offset = "0x1487844")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002424")]
			[Address(RVA = "0x1D84280", Offset = "0x1D84280", VA = "0x1D84280")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1487854", Offset = "0x1487854")]
			private set
			{
			}
		}

		[Token(Token = "0x6002422")]
		[Address(RVA = "0x1D841FC", Offset = "0x1D841FC", VA = "0x1D841FC")]
		public AimData()
		{
		}

		[Token(Token = "0x6002425")]
		[Address(RVA = "0x1D84288", Offset = "0x1D84288", VA = "0x1D84288")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000525")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1469E7C", Offset = "0x1469E7C")]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000495")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002429")]
			[Address(RVA = "0x1D8403C", Offset = "0x1D8403C", VA = "0x1D8403C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000496")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600242B")]
			[Address(RVA = "0x1D840A4", Offset = "0x1D840A4", VA = "0x1D840A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002426")]
		[Address(RVA = "0x1D82484", Offset = "0x1D82484", VA = "0x1D82484")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6002427")]
		[Address(RVA = "0x1D83F34", Offset = "0x1D83F34", VA = "0x1D83F34", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002428")]
		[Address(RVA = "0x1D83F38", Offset = "0x1D83F38", VA = "0x1D83F38", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600242A")]
		[Address(RVA = "0x1D84044", Offset = "0x1D84044", VA = "0x1D84044", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000526")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1469E8C", Offset = "0x1469E8C")]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000497")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600242F")]
			[Address(RVA = "0x1D839C0", Offset = "0x1D839C0", VA = "0x1D839C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000498")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002431")]
			[Address(RVA = "0x1D83A28", Offset = "0x1D83A28", VA = "0x1D83A28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600242C")]
		[Address(RVA = "0x1D82978", Offset = "0x1D82978", VA = "0x1D82978")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x600242D")]
		[Address(RVA = "0x1D83870", Offset = "0x1D83870", VA = "0x1D83870", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600242E")]
		[Address(RVA = "0x1D83874", Offset = "0x1D83874", VA = "0x1D83874", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002430")]
		[Address(RVA = "0x1D839C8", Offset = "0x1D839C8", VA = "0x1D839C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000527")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1469E9C", Offset = "0x1469E9C")]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000499")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002435")]
			[Address(RVA = "0x1D83AE0", Offset = "0x1D83AE0", VA = "0x1D83AE0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700049A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002437")]
			[Address(RVA = "0x1D83B48", Offset = "0x1D83B48", VA = "0x1D83B48", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002432")]
		[Address(RVA = "0x1D82B68", Offset = "0x1D82B68", VA = "0x1D82B68")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6002433")]
		[Address(RVA = "0x1D83A30", Offset = "0x1D83A30", VA = "0x1D83A30", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002434")]
		[Address(RVA = "0x1D83A34", Offset = "0x1D83A34", VA = "0x1D83A34", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002436")]
		[Address(RVA = "0x1D83AE8", Offset = "0x1D83AE8", VA = "0x1D83AE8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000528")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1469EAC", Offset = "0x1469EAC")]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700049B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600243B")]
			[Address(RVA = "0x1D83EC4", Offset = "0x1D83EC4", VA = "0x1D83EC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700049C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600243D")]
			[Address(RVA = "0x1D83F2C", Offset = "0x1D83F2C", VA = "0x1D83F2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002438")]
		[Address(RVA = "0x1D82D58", Offset = "0x1D82D58", VA = "0x1D82D58")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x6002439")]
		[Address(RVA = "0x1D83DE0", Offset = "0x1D83DE0", VA = "0x1D83DE0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600243A")]
		[Address(RVA = "0x1D83DE4", Offset = "0x1D83DE4", VA = "0x1D83DE4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600243C")]
		[Address(RVA = "0x1D83ECC", Offset = "0x1D83ECC", VA = "0x1D83ECC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000529")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1469EBC", Offset = "0x1469EBC")]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700049D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002441")]
			[Address(RVA = "0x1D83C00", Offset = "0x1D83C00", VA = "0x1D83C00", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700049E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002443")]
			[Address(RVA = "0x1D83C68", Offset = "0x1D83C68", VA = "0x1D83C68", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600243E")]
		[Address(RVA = "0x1D82F48", Offset = "0x1D82F48", VA = "0x1D82F48")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x600243F")]
		[Address(RVA = "0x1D83B50", Offset = "0x1D83B50", VA = "0x1D83B50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002440")]
		[Address(RVA = "0x1D83B54", Offset = "0x1D83B54", VA = "0x1D83B54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002442")]
		[Address(RVA = "0x1D83C08", Offset = "0x1D83C08", VA = "0x1D83C08", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200052A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1469ECC", Offset = "0x1469ECC")]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700049F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002447")]
			[Address(RVA = "0x1D8418C", Offset = "0x1D8418C", VA = "0x1D8418C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002449")]
			[Address(RVA = "0x1D841F4", Offset = "0x1D841F4", VA = "0x1D841F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002444")]
		[Address(RVA = "0x1D83138", Offset = "0x1D83138", VA = "0x1D83138")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x6002445")]
		[Address(RVA = "0x1D840AC", Offset = "0x1D840AC", VA = "0x1D840AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002446")]
		[Address(RVA = "0x1D840B0", Offset = "0x1D840B0", VA = "0x1D840B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002448")]
		[Address(RVA = "0x1D84194", Offset = "0x1D84194", VA = "0x1D84194", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200052B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1469EDC", Offset = "0x1469EDC")]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170004A1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600244D")]
			[Address(RVA = "0x1D83D70", Offset = "0x1D83D70", VA = "0x1D83D70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600244F")]
			[Address(RVA = "0x1D83DD8", Offset = "0x1D83DD8", VA = "0x1D83DD8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600244A")]
		[Address(RVA = "0x1D83328", Offset = "0x1D83328", VA = "0x1D83328")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x600244B")]
		[Address(RVA = "0x1D83C70", Offset = "0x1D83C70", VA = "0x1D83C70", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600244C")]
		[Address(RVA = "0x1D83C74", Offset = "0x1D83C74", VA = "0x1D83C74", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600244E")]
		[Address(RVA = "0x1D83D78", Offset = "0x1D83D78", VA = "0x1D83D78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146CCA8", Offset = "0x146CCA8")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146CCE0", Offset = "0x146CCE0")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146CD18", Offset = "0x146CD18")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146CD50", Offset = "0x146CD50")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146CD88", Offset = "0x146CD88")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146CDC0", Offset = "0x146CDC0")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146CDF8", Offset = "0x146CDF8")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146CE30", Offset = "0x146CE30")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146CE68", Offset = "0x146CE68")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146CE78", Offset = "0x146CE78")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146CEB0", Offset = "0x146CEB0")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146CEF8", Offset = "0x146CEF8")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146CF08", Offset = "0x146CF08")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146CF40", Offset = "0x146CF40")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146CF78", Offset = "0x146CF78")]
	public float AimCollisionRadius;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146CFB0", Offset = "0x146CFB0")]
	public float AimCollisionHeight;

	[Token(Token = "0x17000117")]
	public States CurrentState
	{
		[Token(Token = "0x60007D8")]
		[Address(RVA = "0x1D81980", Offset = "0x1D81980", VA = "0x1D81980")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147FCFC", Offset = "0x147FCFC")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x60007D9")]
		[Address(RVA = "0x1D81988", Offset = "0x1D81988", VA = "0x1D81988")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147FD0C", Offset = "0x147FD0C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000118")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x60007DD")]
		[Address(RVA = "0x1D81BB8", Offset = "0x1D81BB8", VA = "0x1D81BB8")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000119")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x60007DE")]
		[Address(RVA = "0x1D81BE0", Offset = "0x1D81BE0", VA = "0x1D81BE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147FD3C", Offset = "0x147FD3C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007DF")]
		[Address(RVA = "0x1D81BE8", Offset = "0x1D81BE8", VA = "0x1D81BE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147FD4C", Offset = "0x147FD4C")]
		private set
		{
		}
	}

	[Token(Token = "0x14000023")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x60007DA")]
		[Address(RVA = "0x1D81990", Offset = "0x1D81990", VA = "0x1D81990")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147FD1C", Offset = "0x147FD1C")]
		add
		{
		}
		[Token(Token = "0x60007DB")]
		[Address(RVA = "0x1D81A34", Offset = "0x1D81A34", VA = "0x1D81A34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147FD2C", Offset = "0x147FD2C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000024")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x60007E9")]
		[Address(RVA = "0x1D8233C", Offset = "0x1D8233C", VA = "0x1D8233C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147FD94", Offset = "0x147FD94")]
		add
		{
		}
		[Token(Token = "0x60007EA")]
		[Address(RVA = "0x1D823E0", Offset = "0x1D823E0", VA = "0x1D823E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147FDA4", Offset = "0x147FDA4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000025")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x60007EC")]
		[Address(RVA = "0x1D824B0", Offset = "0x1D824B0", VA = "0x1D824B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147FE18", Offset = "0x147FE18")]
		add
		{
		}
		[Token(Token = "0x60007ED")]
		[Address(RVA = "0x1D82554", Offset = "0x1D82554", VA = "0x1D82554")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147FE28", Offset = "0x147FE28")]
		remove
		{
		}
	}

	[Token(Token = "0x14000026")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x60007EE")]
		[Address(RVA = "0x1D825F8", Offset = "0x1D825F8", VA = "0x1D825F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147FE38", Offset = "0x147FE38")]
		add
		{
		}
		[Token(Token = "0x60007EF")]
		[Address(RVA = "0x1D8269C", Offset = "0x1D8269C", VA = "0x1D8269C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147FE48", Offset = "0x147FE48")]
		remove
		{
		}
	}

	[Token(Token = "0x14000027")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x60007F1")]
		[Address(RVA = "0x1D827B4", Offset = "0x1D827B4", VA = "0x1D827B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147FE58", Offset = "0x147FE58")]
		add
		{
		}
		[Token(Token = "0x60007F2")]
		[Address(RVA = "0x1D82858", Offset = "0x1D82858", VA = "0x1D82858")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147FE68", Offset = "0x147FE68")]
		remove
		{
		}
	}

	[Token(Token = "0x14000028")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x60007F4")]
		[Address(RVA = "0x1D829A4", Offset = "0x1D829A4", VA = "0x1D829A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147FEDC", Offset = "0x147FEDC")]
		add
		{
		}
		[Token(Token = "0x60007F5")]
		[Address(RVA = "0x1D82A48", Offset = "0x1D82A48", VA = "0x1D82A48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147FEEC", Offset = "0x147FEEC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000029")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x60007F7")]
		[Address(RVA = "0x1D82B94", Offset = "0x1D82B94", VA = "0x1D82B94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147FF60", Offset = "0x147FF60")]
		add
		{
		}
		[Token(Token = "0x60007F8")]
		[Address(RVA = "0x1D82C38", Offset = "0x1D82C38", VA = "0x1D82C38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147FF70", Offset = "0x147FF70")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002A")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x60007FA")]
		[Address(RVA = "0x1D82D84", Offset = "0x1D82D84", VA = "0x1D82D84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147FFE4", Offset = "0x147FFE4")]
		add
		{
		}
		[Token(Token = "0x60007FB")]
		[Address(RVA = "0x1D82E28", Offset = "0x1D82E28", VA = "0x1D82E28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147FFF4", Offset = "0x147FFF4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002B")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x60007FD")]
		[Address(RVA = "0x1D82F74", Offset = "0x1D82F74", VA = "0x1D82F74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1480068", Offset = "0x1480068")]
		add
		{
		}
		[Token(Token = "0x60007FE")]
		[Address(RVA = "0x1D83018", Offset = "0x1D83018", VA = "0x1D83018")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1480078", Offset = "0x1480078")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002C")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x6000800")]
		[Address(RVA = "0x1D83164", Offset = "0x1D83164", VA = "0x1D83164")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14800EC", Offset = "0x14800EC")]
		add
		{
		}
		[Token(Token = "0x6000801")]
		[Address(RVA = "0x1D83208", Offset = "0x1D83208", VA = "0x1D83208")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14800FC", Offset = "0x14800FC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002D")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x6000803")]
		[Address(RVA = "0x1D83354", Offset = "0x1D83354", VA = "0x1D83354")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1480170", Offset = "0x1480170")]
		add
		{
		}
		[Token(Token = "0x6000804")]
		[Address(RVA = "0x1D833F8", Offset = "0x1D833F8", VA = "0x1D833F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1480180", Offset = "0x1480180")]
		remove
		{
		}
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0x1D81650", Offset = "0x1D81650", VA = "0x1D81650")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0x1D81674", Offset = "0x1D81674", VA = "0x1D81674")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0x1D81AD8", Offset = "0x1D81AD8", VA = "0x1D81AD8")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0x1D81BF0", Offset = "0x1D81BF0", VA = "0x1D81BF0")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0x1D81F48", Offset = "0x1D81F48", VA = "0x1D81F48")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x147FD5C", Offset = "0x147FD5C")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0x1D82000", Offset = "0x1D82000", VA = "0x1D82000")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0x1D820F8", Offset = "0x1D820F8", VA = "0x1D820F8")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0x1D82114", Offset = "0x1D82114", VA = "0x1D82114")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0x1D821DC", Offset = "0x1D821DC", VA = "0x1D821DC")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0x1D82220", Offset = "0x1D82220", VA = "0x1D82220")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0x1D82288", Offset = "0x1D82288", VA = "0x1D82288", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0x1D82334", Offset = "0x1D82334", VA = "0x1D82334", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0x1D822B8", Offset = "0x1D822B8", VA = "0x1D822B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x147FDB4", Offset = "0x147FDB4")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0x1D82740", Offset = "0x1D82740", VA = "0x1D82740")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0x1D828FC", Offset = "0x1D828FC", VA = "0x1D828FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x147FE78", Offset = "0x147FE78")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0x1D82AEC", Offset = "0x1D82AEC", VA = "0x1D82AEC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x147FEFC", Offset = "0x147FEFC")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0x1D82CDC", Offset = "0x1D82CDC", VA = "0x1D82CDC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x147FF80", Offset = "0x147FF80")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0x1D82ECC", Offset = "0x1D82ECC", VA = "0x1D82ECC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1480004", Offset = "0x1480004")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0x1D830BC", Offset = "0x1D830BC", VA = "0x1D830BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1480088", Offset = "0x1480088")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0x1D832AC", Offset = "0x1D832AC", VA = "0x1D832AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x148010C", Offset = "0x148010C")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000805")]
	[Address(RVA = "0x1D8349C", Offset = "0x1D8349C", VA = "0x1D8349C")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0x1D835E0", Offset = "0x1D835E0", VA = "0x1D835E0")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0x1D83614", Offset = "0x1D83614", VA = "0x1D83614")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0x1D83734", Offset = "0x1D83734", VA = "0x1D83734")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0x1D83860", Offset = "0x1D83860", VA = "0x1D83860")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x2000105")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400002E")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x600080A")]
		[Address(RVA = "0x1F02A48", Offset = "0x1F02A48", VA = "0x1F02A48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1480190", Offset = "0x1480190")]
		add
		{
		}
		[Token(Token = "0x600080B")]
		[Address(RVA = "0x1F02AEC", Offset = "0x1F02AEC", VA = "0x1F02AEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14801A0", Offset = "0x14801A0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002F")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x600080C")]
		[Address(RVA = "0x1F02B90", Offset = "0x1F02B90", VA = "0x1F02B90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14801B0", Offset = "0x14801B0")]
		add
		{
		}
		[Token(Token = "0x600080D")]
		[Address(RVA = "0x1F02C34", Offset = "0x1F02C34", VA = "0x1F02C34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14801C0", Offset = "0x14801C0")]
		remove
		{
		}
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0x1F02CD8", Offset = "0x1F02CD8", VA = "0x1F02CD8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0x1F02DB0", Offset = "0x1F02DB0", VA = "0x1F02DB0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0x1F02DB4", Offset = "0x1F02DB4", VA = "0x1F02DB4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0x1F02E28", Offset = "0x1F02E28", VA = "0x1F02E28")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0x1F02F98", Offset = "0x1F02F98", VA = "0x1F02F98")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0x1F0327C", Offset = "0x1F0327C", VA = "0x1F0327C")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0x1F034C8", Offset = "0x1F034C8", VA = "0x1F034C8")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x2000106")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x6000815")]
	[Address(RVA = "0x1F09D18", Offset = "0x1F09D18", VA = "0x1F09D18", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0x1F09DBC", Offset = "0x1F09DBC", VA = "0x1F09DBC", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000817")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x6000818")]
	[Address(RVA = "0x1F09EB0", Offset = "0x1F09EB0", VA = "0x1F09EB0")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x2000107")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146D0A8", Offset = "0x146D0A8")]
	public float Range;

	[Token(Token = "0x6000819")]
	[Address(RVA = "0x1F09EC0", Offset = "0x1F09EC0", VA = "0x1F09EC0", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0x1F0A01C", Offset = "0x1F0A01C", VA = "0x1F0A01C")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x2000108")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146D0E0", Offset = "0x146D0E0")]
	public float Range;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146D118", Offset = "0x146D118")]
	public float MinimumElevation;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146D150", Offset = "0x146D150")]
	public float Gravity;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146D188", Offset = "0x146D188")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146D188", Offset = "0x146D188")]
	public float AimVelocity;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146D1E4", Offset = "0x146D1E4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146D1E4", Offset = "0x146D1E4")]
	public float AimStep;

	[Token(Token = "0x600081B")]
	[Address(RVA = "0x1F0A02C", Offset = "0x1F0A02C", VA = "0x1F0A02C", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0x1F0A278", Offset = "0x1F0A278", VA = "0x1F0A278")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x2000109")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146D23C", Offset = "0x146D23C")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x600081D")]
	[Address(RVA = "0x1F0A28C", Offset = "0x1F0A28C", VA = "0x1F0A28C")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x600081E")]
	[Address(RVA = "0x1F0A390", Offset = "0x1F0A390", VA = "0x1F0A390")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0x1F0A3C0", Offset = "0x1F0A3C0", VA = "0x1F0A3C0")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0x1F0A3F0", Offset = "0x1F0A3F0", VA = "0x1F0A3F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0x1F0A498", Offset = "0x1F0A498", VA = "0x1F0A498", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0x1F0A504", Offset = "0x1F0A504", VA = "0x1F0A504", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0x1F0A56C", Offset = "0x1F0A56C", VA = "0x1F0A56C")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x200010A")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146D274", Offset = "0x146D274")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146D284", Offset = "0x146D284")]
	public Transform PositionIndicator;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146D2BC", Offset = "0x146D2BC")]
	public Transform OrientationIndicator;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146D2F4", Offset = "0x146D2F4")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x1700011A")]
	public bool IsValidDestination
	{
		[Token(Token = "0x6000824")]
		[Address(RVA = "0x1F0A688", Offset = "0x1F0A688", VA = "0x1F0A688")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14801D0", Offset = "0x14801D0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000825")]
		[Address(RVA = "0x1F0A690", Offset = "0x1F0A690", VA = "0x1F0A690")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14801E0", Offset = "0x14801E0")]
		private set
		{
		}
	}

	[Token(Token = "0x14000030")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x600082A")]
		[Address(RVA = "0x1F0A848", Offset = "0x1F0A848", VA = "0x1F0A848")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14801F0", Offset = "0x14801F0")]
		add
		{
		}
		[Token(Token = "0x600082B")]
		[Address(RVA = "0x1F0A8EC", Offset = "0x1F0A8EC", VA = "0x1F0A8EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1480200", Offset = "0x1480200")]
		remove
		{
		}
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0x1F0A69C", Offset = "0x1F0A69C", VA = "0x1F0A69C")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0x1F0A72C", Offset = "0x1F0A72C", VA = "0x1F0A72C")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0x1F0A804", Offset = "0x1F0A804", VA = "0x1F0A804")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0x1F0A844", Offset = "0x1F0A844", VA = "0x1F0A844")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0x1F0A990", Offset = "0x1F0A990", VA = "0x1F0A990")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0x1F0A9F8", Offset = "0x1F0A9F8", VA = "0x1F0A9F8")]
	public void Recycle()
	{
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0x1F0AA18", Offset = "0x1F0AA18", VA = "0x1F0AA18", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x200010B")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x200052C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1469EEC", Offset = "0x1469EEC")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400200A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400200B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400200C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x170004A3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002453")]
			[Address(RVA = "0x1F0B130", Offset = "0x1F0B130", VA = "0x1F0B130", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002455")]
			[Address(RVA = "0x1F0B198", Offset = "0x1F0B198", VA = "0x1F0B198", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002450")]
		[Address(RVA = "0x1F0AE58", Offset = "0x1F0AE58", VA = "0x1F0AE58")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6002451")]
		[Address(RVA = "0x1F0B094", Offset = "0x1F0B094", VA = "0x1F0B094", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002452")]
		[Address(RVA = "0x1F0B098", Offset = "0x1F0B098", VA = "0x1F0B098", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002454")]
		[Address(RVA = "0x1F0B138", Offset = "0x1F0B138", VA = "0x1F0B138", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200052D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1469EFC", Offset = "0x1469EFC")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400200D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400200E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400200F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x170004A5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002459")]
			[Address(RVA = "0x1F0B024", Offset = "0x1F0B024", VA = "0x1F0B024", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600245B")]
			[Address(RVA = "0x1F0B08C", Offset = "0x1F0B08C", VA = "0x1F0B08C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002456")]
		[Address(RVA = "0x1F0AF00", Offset = "0x1F0AF00", VA = "0x1F0AF00")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6002457")]
		[Address(RVA = "0x1F0AF84", Offset = "0x1F0AF84", VA = "0x1F0AF84", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002458")]
		[Address(RVA = "0x1F0AF88", Offset = "0x1F0AF88", VA = "0x1F0AF88", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600245A")]
		[Address(RVA = "0x1F0B02C", Offset = "0x1F0B02C", VA = "0x1F0B02C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x600082F")]
	[Address(RVA = "0x1F0ABF8", Offset = "0x1F0ABF8", VA = "0x1F0ABF8")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0x1F0ACB8", Offset = "0x1F0ACB8", VA = "0x1F0ACB8", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0x1F0AD18", Offset = "0x1F0AD18", VA = "0x1F0AD18", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0x1F0ADDC", Offset = "0x1F0ADDC", VA = "0x1F0ADDC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1480210", Offset = "0x1480210")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0x1F0AE84", Offset = "0x1F0AE84", VA = "0x1F0AE84")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1480274", Offset = "0x1480274")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000834")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x6000835")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x6000836")]
	[Address(RVA = "0x1F0AF2C", Offset = "0x1F0AF2C", VA = "0x1F0AF2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14802D8", Offset = "0x14802D8")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0x1F0AF58", Offset = "0x1F0AF58", VA = "0x1F0AF58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14802E8", Offset = "0x14802E8")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x200010C")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146D33C", Offset = "0x146D33C")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146D34C", Offset = "0x146D34C")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146D384", Offset = "0x146D384")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146D3BC", Offset = "0x146D3BC")]
	public bool FastTeleport;

	[Token(Token = "0x1700011B")]
	public Transform Pointer
	{
		[Token(Token = "0x6000838")]
		[Address(RVA = "0x1F0B1A0", Offset = "0x1F0B1A0", VA = "0x1F0B1A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14802F8", Offset = "0x14802F8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000839")]
		[Address(RVA = "0x1F0B1A8", Offset = "0x1F0B1A8", VA = "0x1F0B1A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1480308", Offset = "0x1480308")]
		private set
		{
		}
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0x1F0B1B0", Offset = "0x1F0B1B0", VA = "0x1F0B1B0", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0x1F0B30C", Offset = "0x1F0B30C", VA = "0x1F0B30C", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0x1F0B3C4", Offset = "0x1F0B3C4", VA = "0x1F0B3C4")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x200010D")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x200052E")]
	public enum InputModes
	{
		[Token(Token = "0x4002011")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x4002012")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x4002013")]
		ThumbstickTeleport,
		[Token(Token = "0x4002014")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x200052F")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x4002016")]
		A,
		[Token(Token = "0x4002017")]
		B,
		[Token(Token = "0x4002018")]
		LeftTrigger,
		[Token(Token = "0x4002019")]
		LeftThumbstick,
		[Token(Token = "0x400201A")]
		RightTrigger,
		[Token(Token = "0x400201B")]
		RightThumbstick,
		[Token(Token = "0x400201C")]
		X,
		[Token(Token = "0x400201D")]
		Y
	}

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146D3F4", Offset = "0x146D3F4")]
	public InputModes InputMode;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146D42C", Offset = "0x146D42C")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146D464", Offset = "0x146D464")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146D49C", Offset = "0x146D49C")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x600083D")]
	[Address(RVA = "0x1F0B3C8", Offset = "0x1F0B3C8", VA = "0x1F0B3C8")]
	private void Start()
	{
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0x1F0B3CC", Offset = "0x1F0B3CC", VA = "0x1F0B3CC", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0x1F0B814", Offset = "0x1F0B814", VA = "0x1F0B814", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0x1F0B8D4", Offset = "0x1F0B8D4", VA = "0x1F0B8D4")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x200010E")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x2000530")]
	public enum OrientationModes
	{
		[Token(Token = "0x400201F")]
		HeadRelative,
		[Token(Token = "0x4002020")]
		ForwardFacing
	}

	[Token(Token = "0x2000531")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1469F0C", Offset = "0x1469F0C")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x170004A7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600245F")]
			[Address(RVA = "0x1F0BDA8", Offset = "0x1F0BDA8", VA = "0x1F0BDA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002461")]
			[Address(RVA = "0x1F0BE10", Offset = "0x1F0BE10", VA = "0x1F0BE10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600245C")]
		[Address(RVA = "0x1F0BB78", Offset = "0x1F0BB78", VA = "0x1F0BB78")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600245D")]
		[Address(RVA = "0x1F0BCF4", Offset = "0x1F0BCF4", VA = "0x1F0BCF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600245E")]
		[Address(RVA = "0x1F0BCF8", Offset = "0x1F0BCF8", VA = "0x1F0BCF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002460")]
		[Address(RVA = "0x1F0BDB0", Offset = "0x1F0BDB0", VA = "0x1F0BDB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x6000841")]
	[Address(RVA = "0x1F0B998", Offset = "0x1F0B998", VA = "0x1F0B998")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0x1F0BA60", Offset = "0x1F0BA60", VA = "0x1F0BA60")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0x1F0BA68", Offset = "0x1F0BA68", VA = "0x1F0BA68", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0x1F0BAB4", Offset = "0x1F0BAB4", VA = "0x1F0BAB4", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0x1F0BAFC", Offset = "0x1F0BAFC", VA = "0x1F0BAFC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1480318", Offset = "0x1480318")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000846")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x6000847")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x6000848")]
	[Address(RVA = "0x1F0BBA4", Offset = "0x1F0BBA4", VA = "0x1F0BBA4")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0x1F0BCC8", Offset = "0x1F0BCC8", VA = "0x1F0BCC8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148037C", Offset = "0x148037C")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x200010F")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x600084A")]
	[Address(RVA = "0x1F0BE18", Offset = "0x1F0BE18", VA = "0x1F0BE18", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0x1F0BE1C", Offset = "0x1F0BE1C", VA = "0x1F0BE1C", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0x1F0BE98", Offset = "0x1F0BE98", VA = "0x1F0BE98")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x2000110")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146D4D4", Offset = "0x146D4D4")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146D50C", Offset = "0x146D50C")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146D544", Offset = "0x146D544")]
	public float AimDistanceThreshold;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146D57C", Offset = "0x146D57C")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x600084D")]
	[Address(RVA = "0x1F0BE9C", Offset = "0x1F0BE9C", VA = "0x1F0BE9C", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0x1F0BF0C", Offset = "0x1F0BF0C", VA = "0x1F0BF0C", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0x1F0C384", Offset = "0x1F0C384", VA = "0x1F0C384")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x2000111")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146D5B4", Offset = "0x146D5B4")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146D5EC", Offset = "0x146D5EC")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146D624", Offset = "0x146D624")]
	public float RotateStickThreshold;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x6000850")]
	[Address(RVA = "0x1F0C388", Offset = "0x1F0C388", VA = "0x1F0C388", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0x1F0C3CC", Offset = "0x1F0C3CC", VA = "0x1F0C3CC", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0x1F0C83C", Offset = "0x1F0C83C", VA = "0x1F0C83C")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x2000112")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x6000853")]
	[Address(RVA = "0x1F0C84C", Offset = "0x1F0C84C", VA = "0x1F0C84C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0x1F0C850", Offset = "0x1F0C850", VA = "0x1F0C850")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0x1F0C858", Offset = "0x1F0C858", VA = "0x1F0C858")]
	private void Update()
	{
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0x1F0C940", Offset = "0x1F0C940", VA = "0x1F0C940")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0x1F0C968", Offset = "0x1F0C968", VA = "0x1F0C968")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x2000113")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146D65C", Offset = "0x146D65C")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x1700011C")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x6000858")]
		[Address(RVA = "0x1F0C980", Offset = "0x1F0C980", VA = "0x1F0C980")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148038C", Offset = "0x148038C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000859")]
		[Address(RVA = "0x1F0C988", Offset = "0x1F0C988", VA = "0x1F0C988")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148039C", Offset = "0x148039C")]
		private set
		{
		}
	}

	[Token(Token = "0x600085A")]
	[Address(RVA = "0x1F09D4C", Offset = "0x1F09D4C", VA = "0x1F09D4C", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600085B")]
	[Address(RVA = "0x1F09E7C", Offset = "0x1F09E7C", VA = "0x1F09E7C", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0x1F0C990", Offset = "0x1F0C990", VA = "0x1F0C990")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x14803AC", Offset = "0x14803AC")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x600085D")]
	[Address(RVA = "0x1F0A4F8", Offset = "0x1F0A4F8", VA = "0x1F0A4F8", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x600085E")]
	[Address(RVA = "0x1F0A564", Offset = "0x1F0A564", VA = "0x1F0A564", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0x1F09EB8", Offset = "0x1F09EB8", VA = "0x1F09EB8")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x2000114")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x2000532")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1469F1C", Offset = "0x1469F1C")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x170004A9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002465")]
			[Address(RVA = "0x1F0D01C", Offset = "0x1F0D01C", VA = "0x1F0D01C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004AA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002467")]
			[Address(RVA = "0x1F0D084", Offset = "0x1F0D084", VA = "0x1F0D084", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002462")]
		[Address(RVA = "0x1F0CC0C", Offset = "0x1F0CC0C", VA = "0x1F0CC0C")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6002463")]
		[Address(RVA = "0x1F0CDA4", Offset = "0x1F0CDA4", VA = "0x1F0CDA4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002464")]
		[Address(RVA = "0x1F0CDA8", Offset = "0x1F0CDA8", VA = "0x1F0CDA8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002466")]
		[Address(RVA = "0x1F0D024", Offset = "0x1F0D024", VA = "0x1F0D024", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146D66C", Offset = "0x146D66C")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x4000742")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x6000860")]
	[Address(RVA = "0x1F0CA58", Offset = "0x1F0CA58", VA = "0x1F0CA58")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x6000861")]
	[Address(RVA = "0x1F0CB3C", Offset = "0x1F0CB3C", VA = "0x1F0CB3C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0x1F0CB68", Offset = "0x1F0CB68", VA = "0x1F0CB68", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0x1F0CB90", Offset = "0x1F0CB90", VA = "0x1F0CB90")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x14803E4", Offset = "0x14803E4")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0x1F0CC38", Offset = "0x1F0CC38", VA = "0x1F0CC38", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x6000865")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x6000866")]
	[Address(RVA = "0x1F0CC54", Offset = "0x1F0CC54", VA = "0x1F0CC54", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0x1F0CD78", Offset = "0x1F0CD78", VA = "0x1F0CD78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1480448", Offset = "0x1480448")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x2000115")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x6000868")]
	[Address(RVA = "0x1F0D08C", Offset = "0x1F0D08C", VA = "0x1F0D08C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0x1F0D0F4", Offset = "0x1F0D0F4", VA = "0x1F0D0F4", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600086A")]
	[Address(RVA = "0x1F0D278", Offset = "0x1F0D278", VA = "0x1F0D278", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0x1F0D368", Offset = "0x1F0D368", VA = "0x1F0D368")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x1480458", Offset = "0x1480458")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0x1F0D36C", Offset = "0x1F0D36C", VA = "0x1F0D36C")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x2000116")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146D6A4", Offset = "0x146D6A4")]
	public float LOSOffset;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146D6DC", Offset = "0x146D6DC")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x600086D")]
	[Address(RVA = "0x1F0D378", Offset = "0x1F0D378", VA = "0x1F0D378", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0x1F0D5A8", Offset = "0x1F0D5A8", VA = "0x1F0D5A8")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x2000117")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x600086F")]
	[Address(RVA = "0x1F0D5B4", Offset = "0x1F0D5B4", VA = "0x1F0D5B4", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0x1F0D738", Offset = "0x1F0D738", VA = "0x1F0D738")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x2000118")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x6000871")]
	[Address(RVA = "0x1F0D73C", Offset = "0x1F0D73C", VA = "0x1F0D73C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0x1F0D7D4", Offset = "0x1F0D7D4", VA = "0x1F0D7D4", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000873")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x6000874")]
	[Address(RVA = "0x1F0D868", Offset = "0x1F0D868", VA = "0x1F0D868")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x2000119")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x2000533")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1469F2C", Offset = "0x1469F2C")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x400202A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x400202B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x400202C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x170004AB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600246B")]
			[Address(RVA = "0x1F0DBF4", Offset = "0x1F0DBF4", VA = "0x1F0DBF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004AC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600246D")]
			[Address(RVA = "0x1F0DC5C", Offset = "0x1F0DC5C", VA = "0x1F0DC5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002468")]
		[Address(RVA = "0x1F0D918", Offset = "0x1F0D918", VA = "0x1F0D918")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6002469")]
		[Address(RVA = "0x1F0DAE8", Offset = "0x1F0DAE8", VA = "0x1F0DAE8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600246A")]
		[Address(RVA = "0x1F0DAEC", Offset = "0x1F0DAEC", VA = "0x1F0DAEC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600246C")]
		[Address(RVA = "0x1F0DBFC", Offset = "0x1F0DBFC", VA = "0x1F0DBFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146D714", Offset = "0x146D714")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146D714", Offset = "0x146D714")]
	public float TransitionDuration;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146D76C", Offset = "0x146D76C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146D76C", Offset = "0x146D76C")]
	public float TeleportDelay;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146D7C0", Offset = "0x146D7C0")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x6000875")]
	[Address(RVA = "0x1F0D870", Offset = "0x1F0D870", VA = "0x1F0D870", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0x1F0D89C", Offset = "0x1F0D89C", VA = "0x1F0D89C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1480490", Offset = "0x1480490")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0x1F0D944", Offset = "0x1F0D944", VA = "0x1F0D944")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x200011A")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x6000878")]
	[Address(RVA = "0x1F0DC64", Offset = "0x1F0DC64", VA = "0x1F0DC64", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0x1F0DC80", Offset = "0x1F0DC80", VA = "0x1F0DC80")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x200011B")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x2000534")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1469F3C", Offset = "0x1469F3C")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400202D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400202E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400202F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x4002030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x4002031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x170004AD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002471")]
			[Address(RVA = "0x1F0DEF0", Offset = "0x1F0DEF0", VA = "0x1F0DEF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004AE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002473")]
			[Address(RVA = "0x1F0DF58", Offset = "0x1F0DF58", VA = "0x1F0DF58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600246E")]
		[Address(RVA = "0x1F0DD30", Offset = "0x1F0DD30", VA = "0x1F0DD30")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600246F")]
		[Address(RVA = "0x1F0DDB0", Offset = "0x1F0DDB0", VA = "0x1F0DDB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002470")]
		[Address(RVA = "0x1F0DDB4", Offset = "0x1F0DDB4", VA = "0x1F0DDB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002472")]
		[Address(RVA = "0x1F0DEF8", Offset = "0x1F0DEF8", VA = "0x1F0DEF8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146D7F8", Offset = "0x146D7F8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146D7F8", Offset = "0x146D7F8")]
	public float TransitionDuration;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x600087A")]
	[Address(RVA = "0x1F0DC88", Offset = "0x1F0DC88", VA = "0x1F0DC88", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0x1F0DCB4", Offset = "0x1F0DCB4", VA = "0x1F0DCB4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x14804F4", Offset = "0x14804F4")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0x1F0DD5C", Offset = "0x1F0DD5C", VA = "0x1F0DD5C")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x200011C")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x2000535")]
	public enum PlabackState
	{
		[Token(Token = "0x4002033")]
		Idle = 1,
		[Token(Token = "0x4002034")]
		Preparing,
		[Token(Token = "0x4002035")]
		Buffering,
		[Token(Token = "0x4002036")]
		Ready,
		[Token(Token = "0x4002037")]
		Ended
	}

	[Token(Token = "0x2000536")]
	public enum StereoMode
	{
		[Token(Token = "0x4002039")]
		Unknown = -1,
		[Token(Token = "0x400203A")]
		Mono,
		[Token(Token = "0x400203B")]
		TopBottom,
		[Token(Token = "0x400203C")]
		LeftRight,
		[Token(Token = "0x400203D")]
		Mesh
	}

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getCurrentPlaybackStateMethodId;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr getStereoModeMethodId;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static IntPtr getWidthMethodId;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static IntPtr getHeightMethodId;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x1700011D")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x600087D")]
		[Address(RVA = "0x1D8E7F0", Offset = "0x1D8E7F0", VA = "0x1D8E7F0")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700011E")]
	private static IntPtr Activity
	{
		[Token(Token = "0x600087E")]
		[Address(RVA = "0x1D8EAAC", Offset = "0x1D8EAAC", VA = "0x1D8EAAC")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700011F")]
	public static bool IsAvailable
	{
		[Token(Token = "0x600087F")]
		[Address(RVA = "0x1D8B67C", Offset = "0x1D8B67C", VA = "0x1D8B67C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000120")]
	public static bool IsPlaying
	{
		[Token(Token = "0x6000880")]
		[Address(RVA = "0x1D8CD34", Offset = "0x1D8CD34", VA = "0x1D8CD34")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000121")]
	public static PlabackState CurrentPlaybackState
	{
		[Token(Token = "0x6000881")]
		[Address(RVA = "0x1D8ECF0", Offset = "0x1D8ECF0", VA = "0x1D8ECF0")]
		get
		{
			return default(PlabackState);
		}
	}

	[Token(Token = "0x17000122")]
	public static long Duration
	{
		[Token(Token = "0x6000882")]
		[Address(RVA = "0x1D8CF18", Offset = "0x1D8CF18", VA = "0x1D8CF18")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x17000123")]
	public static StereoMode VideoStereoMode
	{
		[Token(Token = "0x6000883")]
		[Address(RVA = "0x1D8BC64", Offset = "0x1D8BC64", VA = "0x1D8BC64")]
		get
		{
			return default(StereoMode);
		}
	}

	[Token(Token = "0x17000124")]
	public static int VideoWidth
	{
		[Token(Token = "0x6000884")]
		[Address(RVA = "0x1D8BA7C", Offset = "0x1D8BA7C", VA = "0x1D8BA7C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000125")]
	public static int VideoHeight
	{
		[Token(Token = "0x6000885")]
		[Address(RVA = "0x1D8BB70", Offset = "0x1D8BB70", VA = "0x1D8BB70")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000126")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x6000886")]
		[Address(RVA = "0x1D8CE24", Offset = "0x1D8CE24", VA = "0x1D8CE24")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000887")]
		[Address(RVA = "0x1D8C48C", Offset = "0x1D8C48C", VA = "0x1D8C48C")]
		set
		{
		}
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0x1D8D580", Offset = "0x1D8D580", VA = "0x1D8D580")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0x1D8D2C4", Offset = "0x1D8D2C4", VA = "0x1D8D2C4")]
	public static void Stop()
	{
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0x1D8C11C", Offset = "0x1D8C11C", VA = "0x1D8C11C")]
	public static void Play()
	{
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0x1D8C2A0", Offset = "0x1D8C2A0", VA = "0x1D8C2A0")]
	public static void Pause()
	{
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0x1D8D0E4", Offset = "0x1D8D0E4", VA = "0x1D8D0E4")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0x1D8D780", Offset = "0x1D8D780", VA = "0x1D8D780")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0x1D8CB70", Offset = "0x1D8CB70", VA = "0x1D8CB70")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x200011D")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x14000031")]
	public event Action onButtonDown
	{
		[Token(Token = "0x6000890")]
		[Address(RVA = "0x3617D14", Offset = "0x3617D14", VA = "0x3617D14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1480558", Offset = "0x1480558")]
		add
		{
		}
		[Token(Token = "0x6000891")]
		[Address(RVA = "0x3617DB8", Offset = "0x3617DB8", VA = "0x3617DB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1480568", Offset = "0x1480568")]
		remove
		{
		}
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0x3617E5C", Offset = "0x3617E5C", VA = "0x3617E5C", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0x3617E70", Offset = "0x3617E70", VA = "0x3617E70")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x200011E")]
public class MediaPlayerImage : UnityEngine.UI.Image
{
	[Token(Token = "0x2000537")]
	public enum ButtonType
	{
		[Token(Token = "0x400203F")]
		Play,
		[Token(Token = "0x4002040")]
		Pause,
		[Token(Token = "0x4002041")]
		FastForward,
		[Token(Token = "0x4002042")]
		Rewind,
		[Token(Token = "0x4002043")]
		SkipForward,
		[Token(Token = "0x4002044")]
		SkipBack,
		[Token(Token = "0x4002045")]
		Stop
	}

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x17000127")]
	public ButtonType buttonType
	{
		[Token(Token = "0x6000894")]
		[Address(RVA = "0x1D86DDC", Offset = "0x1D86DDC", VA = "0x1D86DDC")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x6000895")]
		[Address(RVA = "0x1D86DE4", Offset = "0x1D86DE4", VA = "0x1D86DE4")]
		set
		{
		}
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0x1D86E08", Offset = "0x1D86E08", VA = "0x1D86E08", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0x1D882D4", Offset = "0x1D882D4", VA = "0x1D882D4")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x200011F")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x2000538")]
	public enum VideoShape
	{
		[Token(Token = "0x4002047")]
		_360,
		[Token(Token = "0x4002048")]
		_180,
		[Token(Token = "0x4002049")]
		Quad
	}

	[Token(Token = "0x2000539")]
	public enum VideoStereo
	{
		[Token(Token = "0x400204B")]
		Mono,
		[Token(Token = "0x400204C")]
		TopBottom,
		[Token(Token = "0x400204D")]
		LeftRight,
		[Token(Token = "0x400204E")]
		BottomTop
	}

	[Token(Token = "0x200053A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1469F4C", Offset = "0x1469F4C")]
	private sealed class <Start>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400204F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x170004AF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002477")]
			[Address(RVA = "0x1D8DA5C", Offset = "0x1D8DA5C", VA = "0x1D8DA5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004B0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002479")]
			[Address(RVA = "0x1D8DAC4", Offset = "0x1D8DAC4", VA = "0x1D8DAC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002474")]
		[Address(RVA = "0x1D8BDD4", Offset = "0x1D8BDD4", VA = "0x1D8BDD4")]
		[DebuggerHidden]
		public <Start>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6002475")]
		[Address(RVA = "0x1D8D8CC", Offset = "0x1D8D8CC", VA = "0x1D8D8CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002476")]
		[Address(RVA = "0x1D8D8D0", Offset = "0x1D8D8D0", VA = "0x1D8D8D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002478")]
		[Address(RVA = "0x1D8DA64", Offset = "0x1D8DA64", VA = "0x1D8DA64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200053B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1469F5C", Offset = "0x1469F5C")]
	private sealed class <>c__DisplayClass34_0
	{
		[Token(Token = "0x4002052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x4002053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x4002054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x600247A")]
		[Address(RVA = "0x1D8C080", Offset = "0x1D8C080", VA = "0x1D8C080")]
		public <>c__DisplayClass34_0()
		{
		}

		[Token(Token = "0x600247B")]
		[Address(RVA = "0x1D8D4AC", Offset = "0x1D8D4AC", VA = "0x1D8D4AC")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146D880", Offset = "0x146D880")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146D890", Offset = "0x146D890")]
	private long <Duration>k__BackingField;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146D8A0", Offset = "0x146D8A0")]
	private long <PlaybackPosition>k__BackingField;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool AutoDetectStereoLayout;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	public bool DisplayMono;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x17000128")]
	public bool IsPlaying
	{
		[Token(Token = "0x6000898")]
		[Address(RVA = "0x1D8B3FC", Offset = "0x1D8B3FC", VA = "0x1D8B3FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1480578", Offset = "0x1480578")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000899")]
		[Address(RVA = "0x1D8B404", Offset = "0x1D8B404", VA = "0x1D8B404")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1480588", Offset = "0x1480588")]
		private set
		{
		}
	}

	[Token(Token = "0x17000129")]
	public long Duration
	{
		[Token(Token = "0x600089A")]
		[Address(RVA = "0x1D8B410", Offset = "0x1D8B410", VA = "0x1D8B410")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1480598", Offset = "0x1480598")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x600089B")]
		[Address(RVA = "0x1D8B418", Offset = "0x1D8B418", VA = "0x1D8B418")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14805A8", Offset = "0x14805A8")]
		private set
		{
		}
	}

	[Token(Token = "0x1700012A")]
	public long PlaybackPosition
	{
		[Token(Token = "0x600089C")]
		[Address(RVA = "0x1D8B420", Offset = "0x1D8B420", VA = "0x1D8B420")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14805B8", Offset = "0x14805B8")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x600089D")]
		[Address(RVA = "0x1D8B428", Offset = "0x1D8B428", VA = "0x1D8B428")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14805C8", Offset = "0x14805C8")]
		private set
		{
		}
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0x1D8B430", Offset = "0x1D8B430", VA = "0x1D8B430")]
	private void Awake()
	{
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0x1D8B6E4", Offset = "0x1D8B6E4", VA = "0x1D8B6E4")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0x1D8B74C", Offset = "0x1D8B74C", VA = "0x1D8B74C")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0x1D8BD58", Offset = "0x1D8BD58", VA = "0x1D8BD58")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x14805D8", Offset = "0x14805D8")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0x1D8BE00", Offset = "0x1D8BE00", VA = "0x1D8BE00")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0x1D8C088", Offset = "0x1D8C088", VA = "0x1D8C088")]
	public void Play()
	{
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0x1D8C210", Offset = "0x1D8C210", VA = "0x1D8C210")]
	public void Pause()
	{
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0x1D8C394", Offset = "0x1D8C394", VA = "0x1D8C394")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0x1D8C5D4", Offset = "0x1D8C5D4", VA = "0x1D8C5D4")]
	private void Update()
	{
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0x1D8D00C", Offset = "0x1D8D00C", VA = "0x1D8D00C")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0x1D8D234", Offset = "0x1D8D234", VA = "0x1D8D234")]
	public void Stop()
	{
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0x1D8D3B8", Offset = "0x1D8D3B8", VA = "0x1D8D3B8")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0x1D8D49C", Offset = "0x1D8D49C", VA = "0x1D8D49C")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x2000120")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x200053C")]
	private enum PlaybackState
	{
		[Token(Token = "0x4002056")]
		Playing,
		[Token(Token = "0x4002057")]
		Paused,
		[Token(Token = "0x4002058")]
		Rewinding,
		[Token(Token = "0x4002059")]
		FastForwarding
	}

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0x1D8DACC", Offset = "0x1D8DACC", VA = "0x1D8DACC")]
	private void Start()
	{
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0x1D8DDC8", Offset = "0x1D8DDC8", VA = "0x1D8DDC8")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0x1D8DFA4", Offset = "0x1D8DFA4", VA = "0x1D8DFA4")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0x1D8E0D8", Offset = "0x1D8E0D8", VA = "0x1D8E0D8")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0x1D8E1E0", Offset = "0x1D8E1E0", VA = "0x1D8E1E0")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0x1D8E0AC", Offset = "0x1D8E0AC", VA = "0x1D8E0AC")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0x1D8E2C0", Offset = "0x1D8E2C0", VA = "0x1D8E2C0")]
	private void Update()
	{
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0x1D8DCBC", Offset = "0x1D8DCBC", VA = "0x1D8DCBC")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0x1D8E678", Offset = "0x1D8E678", VA = "0x1D8E678")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x2000121")]
public static class VectorUtil
{
	[Token(Token = "0x60008B4")]
	[Address(RVA = "0x2A85F78", Offset = "0x2A85F78", VA = "0x2A85F78")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x2000122")]
public class AppDeeplinkUI : MonoBehaviour
{
	[Token(Token = "0x400078D")]
	private const ulong UNITY_COMPANION_APP_ID = 3535750239844224uL;

	[Token(Token = "0x400078E")]
	private const ulong UNREAL_COMPANION_APP_ID = 4055411724486843uL;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform deeplinkAppId;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform deeplinkMessage;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform uiLaunchType;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RectTransform uiLaunchSource;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RectTransform uiDeepLinkMessage;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool inMenu;

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0x1ED836C", Offset = "0x1ED836C", VA = "0x1ED836C")]
	private void Start()
	{
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0x1ED86E0", Offset = "0x1ED86E0", VA = "0x1ED86E0")]
	private void Update()
	{
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0x1ED8900", Offset = "0x1ED8900", VA = "0x1ED8900")]
	private void LaunchUnrealDeeplinkSample()
	{
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0x1ED8A3C", Offset = "0x1ED8A3C", VA = "0x1ED8A3C")]
	private void LaunchSelf()
	{
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0x1ED8B7C", Offset = "0x1ED8B7C", VA = "0x1ED8B7C")]
	private void LaunchOtherApp()
	{
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0x1ED8CE0", Offset = "0x1ED8CE0", VA = "0x1ED8CE0")]
	public AppDeeplinkUI()
	{
	}
}
[Token(Token = "0x2000123")]
public class CustomDebugUI : MonoBehaviour
{
	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CustomDebugUI instance;

	[Token(Token = "0x4000797")]
	private const BindingFlags privateFlags = BindingFlags.Instance | BindingFlags.NonPublic;

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0x1C0AE6C", Offset = "0x1C0AE6C", VA = "0x1C0AE6C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0x1C0AEC4", Offset = "0x1C0AEC4", VA = "0x1C0AEC4")]
	private void Start()
	{
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0x1C0AEC8", Offset = "0x1C0AEC8", VA = "0x1C0AEC8")]
	private void Update()
	{
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0x1C0AECC", Offset = "0x1C0AECC", VA = "0x1C0AECC")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0x1C0B0D8", Offset = "0x1C0B0D8", VA = "0x1C0B0D8")]
	public void RemoveFromCanvas(RectTransform element, int targetCanvas = 0)
	{
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0x1C0B2B8", Offset = "0x1C0B2B8", VA = "0x1C0B2B8")]
	public CustomDebugUI()
	{
	}
}
[Token(Token = "0x2000124")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0x1CB2C9C", Offset = "0x1CB2C9C", VA = "0x1CB2C9C")]
	private void Start()
	{
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0x1CB30FC", Offset = "0x1CB30FC", VA = "0x1CB30FC")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0x1CB31B4", Offset = "0x1CB31B4", VA = "0x1CB31B4")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0x1CB3408", Offset = "0x1CB3408", VA = "0x1CB3408")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0x1CB34F0", Offset = "0x1CB34F0", VA = "0x1CB34F0")]
	private void Update()
	{
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0x1CB35CC", Offset = "0x1CB35CC", VA = "0x1CB35CC")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0x1CB3638", Offset = "0x1CB3638", VA = "0x1CB3638")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0x1CB3640", Offset = "0x1CB3640", VA = "0x1CB3640")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148064C", Offset = "0x148064C")]
	private void <Start>b__2_0(Toggle t)
	{
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0x1CB369C", Offset = "0x1CB369C", VA = "0x1CB369C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148065C", Offset = "0x148065C")]
	private void <Start>b__2_1(Toggle t)
	{
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0x1CB36F8", Offset = "0x1CB36F8", VA = "0x1CB36F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148066C", Offset = "0x148066C")]
	private void <Start>b__2_2(Toggle t)
	{
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0x1CB3754", Offset = "0x1CB3754", VA = "0x1CB3754")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148067C", Offset = "0x148067C")]
	private void <Start>b__2_3(Toggle t)
	{
	}
}
[Token(Token = "0x2000125")]
public class AnalyticsUI : MonoBehaviour
{
	[Token(Token = "0x60008CC")]
	[Address(RVA = "0x1ED5DB8", Offset = "0x1ED5DB8", VA = "0x1ED5DB8")]
	public AnalyticsUI()
	{
	}
}
[Token(Token = "0x2000126")]
public class SampleUI : MonoBehaviour
{
	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform collectionButton;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform inputText;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform valueText;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool inMenu;

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0x1F007B4", Offset = "0x1F007B4", VA = "0x1F007B4")]
	private void Start()
	{
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0x1F00850", Offset = "0x1F00850", VA = "0x1F00850")]
	private void Update()
	{
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0x1F00934", Offset = "0x1F00934", VA = "0x1F00934")]
	private string GetText()
	{
		return null;
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0x1F00998", Offset = "0x1F00998", VA = "0x1F00998")]
	public SampleUI()
	{
	}
}
[Token(Token = "0x2000127")]
public class StartCrashlytics : MonoBehaviour
{
	[Token(Token = "0x60008D1")]
	[Address(RVA = "0x1F08CB8", Offset = "0x1F08CB8", VA = "0x1F08CB8")]
	public StartCrashlytics()
	{
	}
}
[Token(Token = "0x2000128")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x200053D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1469F6C", Offset = "0x1469F6C")]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400205A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400205B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400205C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x170004B1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600247F")]
			[Address(RVA = "0x29B4990", Offset = "0x29B4990", VA = "0x29B4990", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004B2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002481")]
			[Address(RVA = "0x29B49F8", Offset = "0x29B49F8", VA = "0x29B49F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600247C")]
		[Address(RVA = "0x29B4814", Offset = "0x29B4814", VA = "0x29B4814")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600247D")]
		[Address(RVA = "0x29B4848", Offset = "0x29B4848", VA = "0x29B4848", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600247E")]
		[Address(RVA = "0x29B484C", Offset = "0x29B484C", VA = "0x29B484C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002480")]
		[Address(RVA = "0x29B4998", Offset = "0x29B4998", VA = "0x29B4998", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0x29B4500", Offset = "0x29B4500", VA = "0x29B4500")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0x29B4618", Offset = "0x29B4618", VA = "0x29B4618")]
	private void Update()
	{
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0x29B459C", Offset = "0x29B459C", VA = "0x29B459C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x148068C", Offset = "0x148068C")]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0x29B4840", Offset = "0x29B4840", VA = "0x29B4840")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x2000129")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146D8D0", Offset = "0x146D8D0")]
	public int SubdivisionsU;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146D8EC", Offset = "0x146D8EC")]
	public int SubdivisionsV;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0x2D0CE64", Offset = "0x2D0CE64", VA = "0x2D0CE64")]
	private void Update()
	{
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0x2D0D958", Offset = "0x2D0D958", VA = "0x2D0D958")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x200012A")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x1700012B")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x60008D8")]
		[Address(RVA = "0x1D80F78", Offset = "0x1D80F78", VA = "0x1D80F78")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0x1D80FD0", Offset = "0x1D80FD0", VA = "0x1D80FD0")]
	public void Start()
	{
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0x1D81340", Offset = "0x1D81340", VA = "0x1D81340")]
	public void Update()
	{
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0x1D81424", Offset = "0x1D81424", VA = "0x1D81424")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x14806F0", Offset = "0x14806F0")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x60008DC")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60008DD")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x60008DE")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x60008DF")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x60008E0")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x60008E1")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x60008E2")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x60008E3")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0x1D8148C", Offset = "0x1D8148C", VA = "0x1D8148C")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0x1D814C8", Offset = "0x1D814C8", VA = "0x1D814C8")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0x1D8153C", Offset = "0x1D8153C", VA = "0x1D8153C")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0x1D81698", Offset = "0x1D81698", VA = "0x1D81698")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0x1D8176C", Offset = "0x1D8176C", VA = "0x1D8176C")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0x1D8124C", Offset = "0x1D8124C", VA = "0x1D8124C")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0x1D8182C", Offset = "0x1D8182C", VA = "0x1D8182C")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0x1D81894", Offset = "0x1D81894", VA = "0x1D81894")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0x1D81978", Offset = "0x1D81978", VA = "0x1D81978")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x200012B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x1466170", Offset = "0x1466170")]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x200053E")]
	public enum DrawMode
	{
		[Token(Token = "0x400205E")]
		Opaque,
		[Token(Token = "0x400205F")]
		OpaqueWithClip,
		[Token(Token = "0x4002060")]
		TransparentDefaultAlpha,
		[Token(Token = "0x4002061")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private Shader _transparentShader;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private Shader _opaqueShader;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x1700012C")]
	public bool overlayEnabled
	{
		[Token(Token = "0x60008F3")]
		[Address(RVA = "0x1D90574", Offset = "0x1D90574", VA = "0x1D90574")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60008F4")]
		[Address(RVA = "0x1D90608", Offset = "0x1D90608", VA = "0x1D90608")]
		set
		{
		}
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0x1D8EE50", Offset = "0x1D8EE50", VA = "0x1D8EE50")]
	private void Start()
	{
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0x1D8FB74", Offset = "0x1D8FB74", VA = "0x1D8FB74")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0x1D8FBF8", Offset = "0x1D8FBF8", VA = "0x1D8FBF8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0x1D8FCEC", Offset = "0x1D8FCEC", VA = "0x1D8FCEC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0x1D8FDE0", Offset = "0x1D8FDE0", VA = "0x1D8FDE0", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0x1D8FFE4", Offset = "0x1D8FFE4", VA = "0x1D8FFE4")]
	private void Update()
	{
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0x1D906D8", Offset = "0x1D906D8", VA = "0x1D906D8")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x200012C")]
public class AugmentedObject : MonoBehaviour
{
	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform shadow;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool groundShadow;

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0x1ED8D54", Offset = "0x1ED8D54", VA = "0x1ED8D54")]
	private void Start()
	{
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0x1ED8F04", Offset = "0x1ED8F04", VA = "0x1ED8F04")]
	private void Update()
	{
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0x1ED90BC", Offset = "0x1ED90BC", VA = "0x1ED90BC")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0x1ED90C4", Offset = "0x1ED90C4", VA = "0x1ED90C4")]
	public void Release()
	{
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0x1ED90AC", Offset = "0x1ED90AC", VA = "0x1ED90AC")]
	private void ToggleShadowType()
	{
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0x1ED90CC", Offset = "0x1ED90CC", VA = "0x1ED90CC")]
	public AugmentedObject()
	{
	}
}
[Token(Token = "0x200012D")]
public class BrushController : MonoBehaviour
{
	[Token(Token = "0x200053F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1469F7C", Offset = "0x1469F7C")]
	private sealed class <FadeCameraClearColor>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fadeTime;

		[Token(Token = "0x4002065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public UnityEngine.Color newColor;

		[Token(Token = "0x4002066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <timer>5__2;

		[Token(Token = "0x4002067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UnityEngine.Color <currentColor>5__3;

		[Token(Token = "0x170004B3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002485")]
			[Address(RVA = "0x3617A84", Offset = "0x3617A84", VA = "0x3617A84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004B4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002487")]
			[Address(RVA = "0x3617AEC", Offset = "0x3617AEC", VA = "0x3617AEC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002482")]
		[Address(RVA = "0x36178DC", Offset = "0x36178DC", VA = "0x36178DC")]
		[DebuggerHidden]
		public <FadeCameraClearColor>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6002483")]
		[Address(RVA = "0x361793C", Offset = "0x361793C", VA = "0x361793C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002484")]
		[Address(RVA = "0x3617940", Offset = "0x3617940", VA = "0x3617940", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002486")]
		[Address(RVA = "0x3617A8C", Offset = "0x3617A8C", VA = "0x3617A8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000540")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1469F8C", Offset = "0x1469F8C")]
	private sealed class <FadeSphere>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400206A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BrushController <>4__this;

		[Token(Token = "0x400206B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x400206C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public UnityEngine.Color newColor;

		[Token(Token = "0x400206D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool disableOnFinish;

		[Token(Token = "0x400206E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x400206F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private UnityEngine.Color <currentColor>5__3;

		[Token(Token = "0x170004B5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600248B")]
			[Address(RVA = "0x3617CA4", Offset = "0x3617CA4", VA = "0x3617CA4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004B6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600248D")]
			[Address(RVA = "0x3617D0C", Offset = "0x3617D0C", VA = "0x3617D0C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002488")]
		[Address(RVA = "0x3617908", Offset = "0x3617908", VA = "0x3617908")]
		[DebuggerHidden]
		public <FadeSphere>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6002489")]
		[Address(RVA = "0x3617AF4", Offset = "0x3617AF4", VA = "0x3617AF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600248A")]
		[Address(RVA = "0x3617AF8", Offset = "0x3617AF8", VA = "0x3617AF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600248C")]
		[Address(RVA = "0x3617CAC", Offset = "0x3617CAC", VA = "0x3617CAC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PassthroughBrush brush;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer backgroundSphere;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator grabRoutine;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator releaseRoutine;

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0x3617304", Offset = "0x3617304", VA = "0x3617304")]
	private void Start()
	{
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0x3617588", Offset = "0x3617588", VA = "0x3617588")]
	private void Update()
	{
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0x36175E4", Offset = "0x36175E4", VA = "0x36175E4")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0x3617768", Offset = "0x3617768", VA = "0x3617768")]
	public void Release()
	{
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0x361783C", Offset = "0x361783C", VA = "0x361783C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1480728", Offset = "0x1480728")]
	private IEnumerator FadeCameraClearColor(UnityEngine.Color newColor, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0x36176A0", Offset = "0x36176A0", VA = "0x36176A0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x148078C", Offset = "0x148078C")]
	private IEnumerator FadeSphere(UnityEngine.Color newColor, float fadeTime, bool disableOnFinish = false)
	{
		return null;
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0x3617934", Offset = "0x3617934", VA = "0x3617934")]
	public BrushController()
	{
	}
}
[Token(Token = "0x200012E")]
public class EnableUnpremultipliedAlpha : MonoBehaviour
{
	[Token(Token = "0x6000904")]
	[Address(RVA = "0x1E820A4", Offset = "0x1E820A4", VA = "0x1E820A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0x1E82108", Offset = "0x1E82108", VA = "0x1E82108")]
	public EnableUnpremultipliedAlpha()
	{
	}
}
[Token(Token = "0x200012F")]
public class Flashlight : MonoBehaviour
{
	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject lightVolume;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Light spotlight;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject bulbGlow;

	[Token(Token = "0x6000906")]
	[Address(RVA = "0x297A3E0", Offset = "0x297A3E0", VA = "0x297A3E0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0x297A5C0", Offset = "0x297A5C0", VA = "0x297A5C0")]
	public void ToggleFlashlight()
	{
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0x297A654", Offset = "0x297A654", VA = "0x297A654")]
	public void EnableFlashlight(bool doEnable)
	{
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0x297A6BC", Offset = "0x297A6BC", VA = "0x297A6BC")]
	public Flashlight()
	{
	}
}
[Token(Token = "0x2000130")]
public class FlashlightController : MonoBehaviour
{
	[Token(Token = "0x2000541")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1469F9C", Offset = "0x1469F9C")]
	private sealed class <FadeLighting>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FlashlightController <>4__this;

		[Token(Token = "0x4002073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x4002074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public UnityEngine.Color newColor;

		[Token(Token = "0x4002075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float sceneLightIntensity;

		[Token(Token = "0x4002076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x4002077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private UnityEngine.Color <currentColor>5__3;

		[Token(Token = "0x4002078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float <currentLight>5__4;

		[Token(Token = "0x170004B7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002491")]
			[Address(RVA = "0x297B9DC", Offset = "0x297B9DC", VA = "0x297B9DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004B8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002493")]
			[Address(RVA = "0x297BA44", Offset = "0x297BA44", VA = "0x297BA44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600248E")]
		[Address(RVA = "0x297B6D4", Offset = "0x297B6D4", VA = "0x297B6D4")]
		[DebuggerHidden]
		public <FadeLighting>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x600248F")]
		[Address(RVA = "0x297B7B0", Offset = "0x297B7B0", VA = "0x297B7B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002490")]
		[Address(RVA = "0x297B7B4", Offset = "0x297B7B4", VA = "0x297B7B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002492")]
		[Address(RVA = "0x297B9E4", Offset = "0x297B9E4", VA = "0x297B9E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Light sceneLight;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform flashlightRoot;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 localPosition;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Quaternion localRotation;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMesh infoText;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GrabObject externalController;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private OVRSkeleton[] skeletons;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OVRHand[] hands;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int handIndex;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool pinching;

	[Token(Token = "0x600090A")]
	[Address(RVA = "0x297A6C4", Offset = "0x297A6C4", VA = "0x297A6C4")]
	private void Start()
	{
	}

	[Token(Token = "0x600090B")]
	[Address(RVA = "0x297A94C", Offset = "0x297A94C", VA = "0x297A94C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600090C")]
	[Address(RVA = "0x297AC7C", Offset = "0x297AC7C", VA = "0x297AC7C")]
	private void FindHands()
	{
	}

	[Token(Token = "0x600090D")]
	[Address(RVA = "0x297AFC4", Offset = "0x297AFC4", VA = "0x297AFC4")]
	private void AlignWithHand(OVRHand hand, OVRSkeleton skeleton)
	{
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0x297B334", Offset = "0x297B334", VA = "0x297B334")]
	private void AlignWithController(OVRInput.Controller controller)
	{
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0x297B42C", Offset = "0x297B42C", VA = "0x297B42C")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0x297B5F4", Offset = "0x297B5F4", VA = "0x297B5F4")]
	public void Release()
	{
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0x297B53C", Offset = "0x297B53C", VA = "0x297B53C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x14807F0", Offset = "0x14807F0")]
	private IEnumerator FadeLighting(UnityEngine.Color newColor, float sceneLightIntensity, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0x297B700", Offset = "0x297B700", VA = "0x297B700")]
	public FlashlightController()
	{
	}
}
[Token(Token = "0x2000131")]
public class GrabObject : MonoBehaviour
{
	[Token(Token = "0x2000542")]
	public enum ManipulationType
	{
		[Token(Token = "0x400207A")]
		Default,
		[Token(Token = "0x400207B")]
		ForcedHand,
		[Token(Token = "0x400207C")]
		DollyHand,
		[Token(Token = "0x400207D")]
		DollyAttached,
		[Token(Token = "0x400207E")]
		HorizontalScaled,
		[Token(Token = "0x400207F")]
		VerticalScaled,
		[Token(Token = "0x4002080")]
		Menu
	}

	[Token(Token = "0x2000543")]
	public delegate void GrabbedObject(OVRInput.Controller grabHand);

	[Token(Token = "0x2000544")]
	public delegate void ReleasedObject();

	[Token(Token = "0x2000545")]
	public delegate void SetCursorPosition(Vector3 cursorPosition);

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x146D978", Offset = "0x146D978")]
	public string ObjectName;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x146D988", Offset = "0x146D988")]
	public string ObjectInstructions;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ManipulationType objectManipulationType;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool showLaserWhileGrabbed;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Quaternion grabbedRotation;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GrabbedObject GrabbedObjectDelegate;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ReleasedObject ReleasedObjectDelegate;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SetCursorPosition CursorPositionDelegate;

	[Token(Token = "0x6000913")]
	[Address(RVA = "0x20A4E48", Offset = "0x20A4E48", VA = "0x20A4E48")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0x20A5110", Offset = "0x20A5110", VA = "0x20A5110")]
	public void Release()
	{
	}

	[Token(Token = "0x6000915")]
	[Address(RVA = "0x20A532C", Offset = "0x20A532C", VA = "0x20A532C")]
	public void CursorPos(Vector3 cursorPos)
	{
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0x20A55D4", Offset = "0x20A55D4", VA = "0x20A55D4")]
	public GrabObject()
	{
	}
}
[Token(Token = "0x2000132")]
public class HandMeshMask : MonoBehaviour
{
	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRSkeleton referenceHand;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material maskMaterial;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146D9A8", Offset = "0x146D9A8")]
	public int radialDivisions;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146D9E0", Offset = "0x146D9E0")]
	public float borderSize;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146DA18", Offset = "0x146DA18")]
	public float fingerTaper;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146DA50", Offset = "0x146DA50")]
	public float fingerTipLength;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146DA88", Offset = "0x146DA88")]
	public float webOffset;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float handScale;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject maskMeshObject;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Mesh maskMesh;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] handVertices;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector2[] handUVs;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color32[] handColors;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int[] handTriangles;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int vertCounter;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int triCounter;

	[Token(Token = "0x6000917")]
	[Address(RVA = "0x29AFC24", Offset = "0x29AFC24", VA = "0x29AFC24")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0x29AFE04", Offset = "0x29AFE04", VA = "0x29AFE04")]
	private void Update()
	{
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0x29B002C", Offset = "0x29B002C", VA = "0x29B002C")]
	private void CreateHandMesh()
	{
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0x29B06D4", Offset = "0x29B06D4", VA = "0x29B06D4")]
	private void AddKnuckleMesh(int knuckleVerts, float point1scale, float point2scale, Vector3 point1, Vector3 point2)
	{
	}

	[Token(Token = "0x600091B")]
	[Address(RVA = "0x29B0E70", Offset = "0x29B0E70", VA = "0x29B0E70")]
	private void AddPalmMesh(int knuckleVerts)
	{
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0x29B3514", Offset = "0x29B3514", VA = "0x29B3514")]
	private void AddVertex(Vector3 position, Vector2 uv, UnityEngine.Color color)
	{
	}

	[Token(Token = "0x600091D")]
	[Address(RVA = "0x29B35D0", Offset = "0x29B35D0", VA = "0x29B35D0")]
	public HandMeshMask()
	{
	}
}
[Token(Token = "0x2000133")]
public class HandMeshUI : MonoBehaviour
{
	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SphereCollider[] knobs;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh[] readouts;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int rightHeldKnob;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int leftHeldKnob;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public OVRSkeleton leftHand;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public OVRSkeleton rightHand;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public HandMeshMask leftMask;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public HandMeshMask rightMask;

	[Token(Token = "0x600091E")]
	[Address(RVA = "0x29B35F4", Offset = "0x29B35F4", VA = "0x29B35F4")]
	private void Start()
	{
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0x29B3920", Offset = "0x29B3920", VA = "0x29B3920")]
	private void Update()
	{
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0x29B369C", Offset = "0x29B369C", VA = "0x29B369C")]
	private void SetSliderValue(int sliderID, float value, bool isNormalized)
	{
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0x29B3DB8", Offset = "0x29B3DB8", VA = "0x29B3DB8")]
	private void CheckForHands()
	{
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0x29B4348", Offset = "0x29B4348", VA = "0x29B4348")]
	public HandMeshUI()
	{
	}
}
[Token(Token = "0x2000134")]
public class ObjectManipulator : MonoBehaviour
{
	[Token(Token = "0x2000546")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1469FAC", Offset = "0x1469FAC")]
	private sealed class <StartDemo>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectManipulator <>4__this;

		[Token(Token = "0x4002084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x4002085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <fadeTime>5__3;

		[Token(Token = "0x170004B9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60024A3")]
			[Address(RVA = "0x1D9442C", Offset = "0x1D9442C", VA = "0x1D9442C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004BA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024A5")]
			[Address(RVA = "0x1D94494", Offset = "0x1D94494", VA = "0x1D94494", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024A0")]
		[Address(RVA = "0x1D93D38", Offset = "0x1D93D38", VA = "0x1D93D38")]
		[DebuggerHidden]
		public <StartDemo>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x60024A1")]
		[Address(RVA = "0x1D940B8", Offset = "0x1D940B8", VA = "0x1D940B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024A2")]
		[Address(RVA = "0x1D940BC", Offset = "0x1D940BC", VA = "0x1D940BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024A4")]
		[Address(RVA = "0x1D94434", Offset = "0x1D94434", VA = "0x1D94434", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRInput.Controller controller;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject hoverObject;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject grabObject;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float grabTime;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 localGrabOffset;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion localGrabRotation;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 camGrabPosition;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion camGrabRotation;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 handGrabPosition;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Quaternion handGrabRotation;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 cursorPosition;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float rotationOffset;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public LineRenderer laser;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform objectInfo;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TextMesh objectNameLabel;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TextMesh objectInstructionsLabel;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public UnityEngine.UI.Image objectInfoBG;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject demoObjects;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public OVRPassthroughLayer passthrough;

	[Token(Token = "0x6000923")]
	[Address(RVA = "0x1D918F0", Offset = "0x1D918F0", VA = "0x1D918F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0x1D91B30", Offset = "0x1D91B30", VA = "0x1D91B30")]
	private void Update()
	{
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0x1D92A14", Offset = "0x1D92A14", VA = "0x1D92A14")]
	private void GrabHoverObject(GameObject grbObj, Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0x1D939E8", Offset = "0x1D939E8", VA = "0x1D939E8")]
	private void ReleaseObject()
	{
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0x1D91AB4", Offset = "0x1D91AB4", VA = "0x1D91AB4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1480854", Offset = "0x1480854")]
	private IEnumerator StartDemo()
	{
		return null;
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0x1D91DDC", Offset = "0x1D91DDC", VA = "0x1D91DDC")]
	private void FindHoverObject(Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0x1D92D34", Offset = "0x1D92D34", VA = "0x1D92D34")]
	private void ManipulateObject(GameObject obj, Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x600092A")]
	[Address(RVA = "0x1D93D64", Offset = "0x1D93D64", VA = "0x1D93D64")]
	private void ClampGrabOffset(ref Vector3 localOffset, float thumbY)
	{
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0x1D93E3C", Offset = "0x1D93E3C", VA = "0x1D93E3C")]
	private Vector3 ClampScale(Vector3 localScale, Vector2 thumb)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600092C")]
	[Address(RVA = "0x1D93E9C", Offset = "0x1D93E9C", VA = "0x1D93E9C")]
	private void CheckForDominantHand()
	{
	}

	[Token(Token = "0x600092D")]
	[Address(RVA = "0x1D93C08", Offset = "0x1D93C08", VA = "0x1D93C08")]
	private void AssignInstructions(GrabObject targetObject)
	{
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0x1D93FB8", Offset = "0x1D93FB8", VA = "0x1D93FB8")]
	public ObjectManipulator()
	{
	}
}
[Token(Token = "0x2000135")]
public class OverlayPassthrough : MonoBehaviour
{
	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x600092F")]
	[Address(RVA = "0x1CF9508", Offset = "0x1CF9508", VA = "0x1CF9508")]
	private void Start()
	{
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0x1CF9668", Offset = "0x1CF9668", VA = "0x1CF9668")]
	private void Update()
	{
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0x1CF9734", Offset = "0x1CF9734", VA = "0x1CF9734")]
	public OverlayPassthrough()
	{
	}
}
[Token(Token = "0x2000136")]
public class PassthroughBrush : MonoBehaviour
{
	[Token(Token = "0x2000547")]
	public enum BrushState
	{
		[Token(Token = "0x4002087")]
		Idle,
		[Token(Token = "0x4002088")]
		Inking
	}

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject lineSegmentPrefab;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject lineContainer;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool forceActive;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LineRenderer currentLineSegment;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Vector3> inkPositions;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float minInkDist;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float strokeWidth;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float strokeLength;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private BrushState brushStatus;

	[Token(Token = "0x6000932")]
	[Address(RVA = "0x20BCD20", Offset = "0x20BCD20", VA = "0x20BCD20")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0x20BCD28", Offset = "0x20BCD28", VA = "0x20BCD28")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0x20BD098", Offset = "0x20BD098", VA = "0x20BD098")]
	private void StartLine(Vector3 inkPos)
	{
	}

	[Token(Token = "0x6000935")]
	[Address(RVA = "0x20BD284", Offset = "0x20BD284", VA = "0x20BD284")]
	private void UpdateLine(Vector3 inkPos)
	{
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0x20BD444", Offset = "0x20BD444", VA = "0x20BD444")]
	public void ClearLines()
	{
	}

	[Token(Token = "0x6000937")]
	[Address(RVA = "0x20BCFA0", Offset = "0x20BCFA0", VA = "0x20BCFA0")]
	public void UndoInkLine()
	{
	}

	[Token(Token = "0x6000938")]
	[Address(RVA = "0x20BD524", Offset = "0x20BD524", VA = "0x20BD524")]
	public PassthroughBrush()
	{
	}
}
[Token(Token = "0x2000137")]
public class PassthroughController : MonoBehaviour
{
	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x6000939")]
	[Address(RVA = "0x20BD5B4", Offset = "0x20BD5B4", VA = "0x20BD5B4")]
	private void Start()
	{
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0x20BD714", Offset = "0x20BD714", VA = "0x20BD714")]
	private void Update()
	{
	}

	[Token(Token = "0x600093B")]
	[Address(RVA = "0x20BD924", Offset = "0x20BD924", VA = "0x20BD924")]
	public PassthroughController()
	{
	}
}
[Token(Token = "0x2000138")]
public class PassthroughProjectionSurface : MonoBehaviour
{
	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer quadOutline;

	[Token(Token = "0x600093C")]
	[Address(RVA = "0x20BD92C", Offset = "0x20BD92C", VA = "0x20BD92C")]
	private void Start()
	{
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0x20BDAFC", Offset = "0x20BDAFC", VA = "0x20BDAFC")]
	private void Update()
	{
	}

	[Token(Token = "0x600093E")]
	[Address(RVA = "0x20BDCD0", Offset = "0x20BDCD0", VA = "0x20BDCD0")]
	public PassthroughProjectionSurface()
	{
	}
}
[Token(Token = "0x2000139")]
public class PassthroughStyler : MonoBehaviour
{
	[Token(Token = "0x2000548")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1469FBC", Offset = "0x1469FBC")]
	private sealed class <FadeToCurrentStyle>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400208A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400208B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PassthroughStyler <>4__this;

		[Token(Token = "0x400208C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x400208D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x400208E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <brightness>5__3;

		[Token(Token = "0x400208F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <contrast>5__4;

		[Token(Token = "0x4002090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <posterize>5__5;

		[Token(Token = "0x4002091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private UnityEngine.Color <edgeCol>5__6;

		[Token(Token = "0x170004BB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60024A9")]
			[Address(RVA = "0x20BE8F4", Offset = "0x20BE8F4", VA = "0x20BE8F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004BC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024AB")]
			[Address(RVA = "0x20BE95C", Offset = "0x20BE95C", VA = "0x20BE95C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024A6")]
		[Address(RVA = "0x20BE53C", Offset = "0x20BE53C", VA = "0x20BE53C")]
		[DebuggerHidden]
		public <FadeToCurrentStyle>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x60024A7")]
		[Address(RVA = "0x20BE6F8", Offset = "0x20BE6F8", VA = "0x20BE6F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024A8")]
		[Address(RVA = "0x20BE6FC", Offset = "0x20BE6FC", VA = "0x20BE6FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024AA")]
		[Address(RVA = "0x20BE8FC", Offset = "0x20BE8FC", VA = "0x20BE8FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000549")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1469FCC", Offset = "0x1469FCC")]
	private sealed class <FadeToDefaultPassthrough>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PassthroughStyler <>4__this;

		[Token(Token = "0x4002095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x4002096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x4002097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <brightness>5__3;

		[Token(Token = "0x4002098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <contrast>5__4;

		[Token(Token = "0x4002099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <posterize>5__5;

		[Token(Token = "0x400209A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private UnityEngine.Color <edgeCol>5__6;

		[Token(Token = "0x170004BD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60024AF")]
			[Address(RVA = "0x20BEBA0", Offset = "0x20BEBA0", VA = "0x20BEBA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004BE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024B1")]
			[Address(RVA = "0x20BEC08", Offset = "0x20BEC08", VA = "0x20BEC08", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024AC")]
		[Address(RVA = "0x20BE568", Offset = "0x20BE568", VA = "0x20BE568")]
		[DebuggerHidden]
		public <FadeToDefaultPassthrough>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x60024AD")]
		[Address(RVA = "0x20BE964", Offset = "0x20BE964", VA = "0x20BE964", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024AE")]
		[Address(RVA = "0x20BE968", Offset = "0x20BE968", VA = "0x20BE968", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024B0")]
		[Address(RVA = "0x20BEBA8", Offset = "0x20BEBA8", VA = "0x20BEBA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator fadeIn;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator fadeOut;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RectTransform[] menuOptions;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RectTransform colorWheel;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D colorTexture;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 cursorPosition;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool settingColor;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private UnityEngine.Color savedColor;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float savedBrightness;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float savedContrast;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float savedPosterize;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public CanvasGroup mainCanvas;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject[] compactObjects;

	[Token(Token = "0x600093F")]
	[Address(RVA = "0x20BDCD8", Offset = "0x20BDCD8", VA = "0x20BDCD8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0x20BDFC0", Offset = "0x20BDFC0", VA = "0x20BDFC0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0x20BE230", Offset = "0x20BE230", VA = "0x20BE230")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0x20BE3BC", Offset = "0x20BE3BC", VA = "0x20BE3BC")]
	public void Release()
	{
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0x20BE330", Offset = "0x20BE330", VA = "0x20BE330")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x14808B8", Offset = "0x14808B8")]
	private IEnumerator FadeToCurrentStyle(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0x20BE4B0", Offset = "0x20BE4B0", VA = "0x20BE4B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x148091C", Offset = "0x148091C")]
	private IEnumerator FadeToDefaultPassthrough(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000945")]
	[Address(RVA = "0x20BE594", Offset = "0x20BE594", VA = "0x20BE594")]
	public void OnBrightnessChanged(float newValue)
	{
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0x20BE5B4", Offset = "0x20BE5B4", VA = "0x20BE5B4")]
	public void OnContrastChanged(float newValue)
	{
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0x20BE5D4", Offset = "0x20BE5D4", VA = "0x20BE5D4")]
	public void OnPosterizeChanged(float newValue)
	{
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0x20BE5F4", Offset = "0x20BE5F4", VA = "0x20BE5F4")]
	public void OnAlphaChanged(float newValue)
	{
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0x20BDF44", Offset = "0x20BDF44", VA = "0x20BDF44")]
	private void ShowFullMenu(bool doShow)
	{
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0x20BE658", Offset = "0x20BE658", VA = "0x20BE658")]
	public void Cursor(Vector3 cP)
	{
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0x20BE664", Offset = "0x20BE664", VA = "0x20BE664")]
	public void DoColorDrag(bool doDrag)
	{
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0x20BDFD8", Offset = "0x20BDFD8", VA = "0x20BDFD8")]
	public void GetColorFromWheel()
	{
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0x20BE670", Offset = "0x20BE670", VA = "0x20BE670")]
	public PassthroughStyler()
	{
	}
}
[Token(Token = "0x200013A")]
public class PassthroughSurface : MonoBehaviour
{
	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x600094E")]
	[Address(RVA = "0x20BEC10", Offset = "0x20BEC10", VA = "0x20BEC10")]
	private void Start()
	{
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0x20BECC8", Offset = "0x20BECC8", VA = "0x20BECC8")]
	public PassthroughSurface()
	{
	}
}
[Token(Token = "0x200013B")]
public class SPPquad : MonoBehaviour
{
	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRInput.Controller controllerHand;

	[Token(Token = "0x6000950")]
	[Address(RVA = "0x289C5D0", Offset = "0x289C5D0", VA = "0x289C5D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000951")]
	[Address(RVA = "0x289C7D0", Offset = "0x289C7D0", VA = "0x289C7D0")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0x289C828", Offset = "0x289C828", VA = "0x289C828")]
	public void Release()
	{
	}

	[Token(Token = "0x6000953")]
	[Address(RVA = "0x289C874", Offset = "0x289C874", VA = "0x289C874")]
	public SPPquad()
	{
	}
}
[Token(Token = "0x200013C")]
public class SceneSampler : MonoBehaviour
{
	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int currentSceneIndex;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject displayText;

	[Token(Token = "0x6000954")]
	[Address(RVA = "0x1F009A0", Offset = "0x1F009A0", VA = "0x1F009A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000955")]
	[Address(RVA = "0x1F00A1C", Offset = "0x1F00A1C", VA = "0x1F00A1C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000956")]
	[Address(RVA = "0x1F00DB8", Offset = "0x1F00DB8", VA = "0x1F00DB8")]
	public SceneSampler()
	{
	}
}
[Token(Token = "0x200013D")]
public class SelectivePassthroughExperience : MonoBehaviour
{
	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject leftMaskObject;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject rightMaskObject;

	[Token(Token = "0x6000957")]
	[Address(RVA = "0x1F00F9C", Offset = "0x1F00F9C", VA = "0x1F00F9C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0x1F014B0", Offset = "0x1F014B0", VA = "0x1F014B0")]
	public SelectivePassthroughExperience()
	{
	}
}
[Token(Token = "0x200013E")]
public class Anchor : MonoBehaviour
{
	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong anchorHandle_;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Canvas canvas_;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform pivot_;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject anchorMenu_;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isSelected_;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool isHovered_;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private TextMeshProUGUI anchorName_;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject saveIcon_;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private UnityEngine.UI.Image labelImage_;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private UnityEngine.Color labelBaseColor_;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private UnityEngine.Color labelHighlightColor_;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private UnityEngine.Color labelSelectedColor_;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private AnchorUIManager uiManager_;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private MeshRenderer[] renderers_;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int menuIndex_;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private List<Button> buttonList_;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Button selectedButton_;

	[Token(Token = "0x1700012D")]
	public ulong anchorHandle
	{
		[Token(Token = "0x6000959")]
		[Address(RVA = "0x1ED5DC0", Offset = "0x1ED5DC0", VA = "0x1ED5DC0")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x600095A")]
	[Address(RVA = "0x1ED5DC8", Offset = "0x1ED5DC8", VA = "0x1ED5DC8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0x1ED5EA8", Offset = "0x1ED5EA8", VA = "0x1ED5EA8")]
	private void Update()
	{
	}

	[Token(Token = "0x600095C")]
	[Address(RVA = "0x1ED617C", Offset = "0x1ED617C", VA = "0x1ED617C")]
	public void OnSaveLocalButtonPressed()
	{
	}

	[Token(Token = "0x600095D")]
	[Address(RVA = "0x1ED61E8", Offset = "0x1ED61E8", VA = "0x1ED61E8")]
	public void OnHideButtonPressed()
	{
	}

	[Token(Token = "0x600095E")]
	[Address(RVA = "0x1ED6250", Offset = "0x1ED6250", VA = "0x1ED6250")]
	public void OnEraseButtonPressed()
	{
	}

	[Token(Token = "0x600095F")]
	[Address(RVA = "0x1ED62B8", Offset = "0x1ED62B8", VA = "0x1ED62B8")]
	public void OnHoverStart()
	{
	}

	[Token(Token = "0x6000960")]
	[Address(RVA = "0x1ED63C4", Offset = "0x1ED63C4", VA = "0x1ED63C4")]
	public void OnHoverEnd()
	{
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0x1ED64E8", Offset = "0x1ED64E8", VA = "0x1ED64E8")]
	public void OnSelect()
	{
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0x1ED6620", Offset = "0x1ED6620", VA = "0x1ED6620")]
	public void SetAnchorHandle(ulong handle)
	{
	}

	[Token(Token = "0x6000963")]
	[Address(RVA = "0x1ED66C8", Offset = "0x1ED66C8", VA = "0x1ED66C8")]
	public void ShowSaveIcon()
	{
	}

	[Token(Token = "0x6000964")]
	[Address(RVA = "0x1ED5EEC", Offset = "0x1ED5EEC", VA = "0x1ED5EEC")]
	private void BillboardPanel(Transform panel)
	{
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0x1ED6068", Offset = "0x1ED6068", VA = "0x1ED6068")]
	private void HandleMenuNavigation()
	{
	}

	[Token(Token = "0x6000966")]
	[Address(RVA = "0x1ED66E8", Offset = "0x1ED66E8", VA = "0x1ED66E8")]
	private void NavigateToIndexInMenu(bool moveNext)
	{
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0x1ED67F8", Offset = "0x1ED67F8", VA = "0x1ED67F8")]
	public Anchor()
	{
	}
}
[Token(Token = "0x200013F")]
public class AnchorHelpers
{
	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Camera camera;

	[Token(Token = "0x1700012E")]
	private static Camera MainCamera
	{
		[Token(Token = "0x6000968")]
		[Address(RVA = "0x1ED6800", Offset = "0x1ED6800", VA = "0x1ED6800")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0x1ED68B0", Offset = "0x1ED68B0", VA = "0x1ED68B0")]
	public static OVRPose getTransformUnityWorldFromDevice()
	{
		return default(OVRPose);
	}

	[Token(Token = "0x600096A")]
	public static T ByteArrayToStruct<T>(byte[] bytes) where T : struct
	{
		return (T)null;
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0x1ED68EC", Offset = "0x1ED68EC", VA = "0x1ED68EC")]
	public static string UuidToString(byte[] encodedMessage)
	{
		return null;
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0x1ED6B54", Offset = "0x1ED6B54", VA = "0x1ED6B54")]
	public static byte[] StringToUuid(string str)
	{
		return null;
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0x1ED6CB0", Offset = "0x1ED6CB0", VA = "0x1ED6CB0")]
	private static int GetHexVal(char hex)
	{
		return default(int);
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0x1ED6D78", Offset = "0x1ED6D78", VA = "0x1ED6D78")]
	public AnchorHelpers()
	{
	}
}
[Token(Token = "0x2000140")]
public abstract class AnchorSession : MonoBehaviour
{
	[Token(Token = "0x200054A")]
	public enum StorageLocation
	{
		[Token(Token = "0x400209C")]
		LOCAL
	}

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AnchorSession Instance;

	[Token(Token = "0x4000843")]
	public const ulong kInvalidHandle = ulong.MaxValue;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Dictionary<ulong, Anchor> handleToAnchor;

	[Token(Token = "0x4000845")]
	protected const int maxEvents = 5;

	[Token(Token = "0x4000846")]
	protected const float eventPollingRate = 0.1f;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected GameObject anchorPrefab_;

	[Token(Token = "0x600096F")]
	[Address(RVA = "0x1ED6D80", Offset = "0x1ED6D80", VA = "0x1ED6D80", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0x1ED6ACC", Offset = "0x1ED6ACC", VA = "0x1ED6ACC")]
	public static void Log(string message)
	{
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0x1ED6E74", Offset = "0x1ED6E74", VA = "0x1ED6E74")]
	protected static bool isFlagSet(uint bitset, uint flag)
	{
		return default(bool);
	}

	[Token(Token = "0x6000972")]
	public abstract ulong CreateSpatialAnchor(Transform T_UnityWorld_Anchor);

	[Token(Token = "0x6000973")]
	public abstract void DestroyAnchor(ulong anchorHandle);

	[Token(Token = "0x6000974")]
	public abstract void SaveAnchor(ulong anchorHandle, StorageLocation location);

	[Token(Token = "0x6000975")]
	public abstract void EraseAnchor(ulong anchorHandle);

	[Token(Token = "0x6000976")]
	public abstract void QueryAllLocalAnchors();

	[Token(Token = "0x6000977")]
	[Address(RVA = "0x1ED6E80", Offset = "0x1ED6E80", VA = "0x1ED6E80")]
	protected AnchorSession()
	{
	}
}
[Token(Token = "0x2000141")]
public class AnchorSpawner : MonoBehaviour
{
	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AnchorSpawner Instance;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject anchorPrefab_;

	[Token(Token = "0x1700012F")]
	public GameObject AnchorPrefab
	{
		[Token(Token = "0x6000978")]
		[Address(RVA = "0x1ED6EFC", Offset = "0x1ED6EFC", VA = "0x1ED6EFC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0x1ED6F04", Offset = "0x1ED6F04", VA = "0x1ED6F04")]
	private void Awake()
	{
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0x1ED6FF0", Offset = "0x1ED6FF0", VA = "0x1ED6FF0")]
	public void PlaceAnchorAtTransform(Transform transform)
	{
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0x1ED71D4", Offset = "0x1ED71D4", VA = "0x1ED71D4")]
	public AnchorSpawner()
	{
	}
}
[Token(Token = "0x2000142")]
public class AnchorUIManager : MonoBehaviour
{
	[Token(Token = "0x200054B")]
	public enum AnchorMode
	{
		[Token(Token = "0x400209E")]
		Create,
		[Token(Token = "0x400209F")]
		Select
	}

	[Token(Token = "0x200054C")]
	private delegate void PrimaryPressDelegate();

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AnchorUIManager Instance;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject mainMenu_;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject createModeButton_;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject selectModeButton_;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform trackedDevice_;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform raycastOrigin_;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool drawRaycast_;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private LineRenderer lineRenderer_;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Anchor hoveredAnchor_;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Anchor selectedAnchor_;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AnchorMode mode_;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<Button> buttonList_;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int menuIndex_;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Button selectedButton_;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject placementPreview_;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Transform anchorPlacementTransform_;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private PrimaryPressDelegate primaryPressDelegate_;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool isFocused_;

	[Token(Token = "0x600097C")]
	[Address(RVA = "0x1ED71DC", Offset = "0x1ED71DC", VA = "0x1ED71DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600097D")]
	[Address(RVA = "0x1ED72AC", Offset = "0x1ED72AC", VA = "0x1ED72AC")]
	private void Start()
	{
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0x1ED741C", Offset = "0x1ED741C", VA = "0x1ED741C")]
	private void Update()
	{
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0x1ED7A9C", Offset = "0x1ED7A9C", VA = "0x1ED7A9C")]
	public void OnCreateModeButtonPressed()
	{
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0x1ED7B0C", Offset = "0x1ED7B0C", VA = "0x1ED7B0C")]
	public void OnLoadAnchorsButtonPressed()
	{
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0x1ED73A4", Offset = "0x1ED73A4", VA = "0x1ED73A4")]
	private void ToggleCreateMode()
	{
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0x1ED7B98", Offset = "0x1ED7B98", VA = "0x1ED7B98")]
	private void StartPlacementMode()
	{
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0x1ED7C24", Offset = "0x1ED7C24", VA = "0x1ED7C24")]
	private void EndPlacementMode()
	{
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0x1ED7C50", Offset = "0x1ED7C50", VA = "0x1ED7C50")]
	private void StartSelectMode()
	{
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0x1ED7B6C", Offset = "0x1ED7B6C", VA = "0x1ED7B6C")]
	private void EndSelectMode()
	{
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0x1ED777C", Offset = "0x1ED777C", VA = "0x1ED777C")]
	private void HandleMenuNavigation()
	{
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0x1ED7DA4", Offset = "0x1ED7DA4", VA = "0x1ED7DA4")]
	private void NavigateToIndexInMenu(bool moveNext)
	{
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0x1ED7CDC", Offset = "0x1ED7CDC", VA = "0x1ED7CDC")]
	private void ShowAnchorPreview()
	{
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0x1ED7D10", Offset = "0x1ED7D10", VA = "0x1ED7D10")]
	private void HideAnchorPreview()
	{
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0x1ED7EB4", Offset = "0x1ED7EB4", VA = "0x1ED7EB4")]
	private void PlaceAnchor()
	{
	}

	[Token(Token = "0x600098B")]
	[Address(RVA = "0x1ED7D30", Offset = "0x1ED7D30", VA = "0x1ED7D30")]
	private void ShowRaycastLine()
	{
	}

	[Token(Token = "0x600098C")]
	[Address(RVA = "0x1ED7D6C", Offset = "0x1ED7D6C", VA = "0x1ED7D6C")]
	private void HideRaycastLine()
	{
	}

	[Token(Token = "0x600098D")]
	[Address(RVA = "0x1ED751C", Offset = "0x1ED751C", VA = "0x1ED751C")]
	private void ControllerRaycast()
	{
	}

	[Token(Token = "0x600098E")]
	[Address(RVA = "0x1ED7F14", Offset = "0x1ED7F14", VA = "0x1ED7F14")]
	private void HoverAnchor(Anchor anchor)
	{
	}

	[Token(Token = "0x600098F")]
	[Address(RVA = "0x1ED7F48", Offset = "0x1ED7F48", VA = "0x1ED7F48")]
	private void UnhoverAnchor()
	{
	}

	[Token(Token = "0x6000990")]
	[Address(RVA = "0x1ED7FE8", Offset = "0x1ED7FE8", VA = "0x1ED7FE8")]
	private void SelectAnchor()
	{
	}

	[Token(Token = "0x6000991")]
	[Address(RVA = "0x1ED8168", Offset = "0x1ED8168", VA = "0x1ED8168")]
	public AnchorUIManager()
	{
	}
}
[Token(Token = "0x2000143")]
public class SpatialAnchorSession : AnchorSession
{
	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Dictionary<ulong, ulong> locateAnchorRequest;

	[Token(Token = "0x400085D")]
	private const string numUuids = "numUuids";

	[Token(Token = "0x6000992")]
	[Address(RVA = "0x1F068E0", Offset = "0x1F068E0", VA = "0x1F068E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0x1F06A7C", Offset = "0x1F06A7C", VA = "0x1F06A7C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000994")]
	[Address(RVA = "0x1F06C18", Offset = "0x1F06C18", VA = "0x1F06C18")]
	private void SpatialEntitySetComponentEnabled(ulong requestId, bool result, OVRPlugin.SpatialEntityComponentType componentType, ulong space)
	{
	}

	[Token(Token = "0x6000995")]
	[Address(RVA = "0x1F06DE8", Offset = "0x1F06DE8", VA = "0x1F06DE8")]
	private void SpatialAnchorSaved(ulong requestId, ulong space, bool result, OVRPlugin.SpatialEntityUuid uuid)
	{
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0x1F07294", Offset = "0x1F07294", VA = "0x1F07294")]
	private void SpatialEntityStorageErase(ulong requestId, bool result, OVRPlugin.SpatialEntityUuid uuid, OVRPlugin.SpatialEntityStorageLocation location)
	{
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0x1F07580", Offset = "0x1F07580", VA = "0x1F07580")]
	private void SpatialEntityQueryResults(ulong requestId, int numResults, OVRPlugin.SpatialEntityQueryResult[] results)
	{
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0x1F07CFC", Offset = "0x1F07CFC", VA = "0x1F07CFC")]
	private void SpatialEntityQueryComplete(ulong requestId, bool result, int numFound)
	{
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0x1F071C0", Offset = "0x1F071C0", VA = "0x1F071C0")]
	private string GetUuidString(OVRPlugin.SpatialEntityUuid uuid)
	{
		return null;
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0x1F07864", Offset = "0x1F07864", VA = "0x1F07864")]
	private void tryEnableComponent(ulong anchorHandle, OVRPlugin.SpatialEntityComponentType type)
	{
	}

	[Token(Token = "0x600099B")]
	[Address(RVA = "0x1F06CF4", Offset = "0x1F06CF4", VA = "0x1F06CF4")]
	private void CreateAnchorGameobject(ulong anchorHandle)
	{
	}

	[Token(Token = "0x600099C")]
	[Address(RVA = "0x1F07F50", Offset = "0x1F07F50", VA = "0x1F07F50")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600099D")]
	[Address(RVA = "0x1F081B0", Offset = "0x1F081B0", VA = "0x1F081B0", Slot = "5")]
	public override ulong CreateSpatialAnchor(Transform T_UnityWorld_Anchor)
	{
		return default(ulong);
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0x1F08330", Offset = "0x1F08330", VA = "0x1F08330", Slot = "6")]
	public override void DestroyAnchor(ulong anchorHandle)
	{
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0x1F084C4", Offset = "0x1F084C4", VA = "0x1F084C4", Slot = "8")]
	public override void EraseAnchor(ulong anchorHandle)
	{
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0x1F08664", Offset = "0x1F08664", VA = "0x1F08664")]
	public void QueryAnchorByUuid()
	{
	}

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0x1F08920", Offset = "0x1F08920", VA = "0x1F08920", Slot = "9")]
	public override void QueryAllLocalAnchors()
	{
	}

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0x1F089FC", Offset = "0x1F089FC", VA = "0x1F089FC", Slot = "7")]
	public override void SaveAnchor(ulong anchorHandle, StorageLocation location)
	{
	}

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0x1F08C3C", Offset = "0x1F08C3C", VA = "0x1F08C3C")]
	public SpatialAnchorSession()
	{
	}
}
[Token(Token = "0x2000144")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x200054D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1469FDC", Offset = "0x1469FDC")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x40020A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sceneIndex;

		[Token(Token = "0x40020A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartMenu <>4__this;

		[Token(Token = "0x60024B6")]
		[Address(RVA = "0x1F08E98", Offset = "0x1F08E98", VA = "0x1F08E98")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x60024B7")]
		[Address(RVA = "0x1F08FA8", Offset = "0x1F08FA8", VA = "0x1F08FA8")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0x1F08CC0", Offset = "0x1F08CC0", VA = "0x1F08CC0")]
	private void Start()
	{
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0x1F08EA0", Offset = "0x1F08EA0", VA = "0x1F08EA0")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0x1F08FA0", Offset = "0x1F08FA0", VA = "0x1F08FA0")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x2000145")]
public static class BetterStreamingAssets
{
	[Token(Token = "0x200054E")]
	internal struct ReadInfo
	{
		[Token(Token = "0x40020A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string readPath;

		[Token(Token = "0x40020A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public long size;

		[Token(Token = "0x40020A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long offset;

		[Token(Token = "0x40020A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public uint crc32;
	}

	[Token(Token = "0x200054F")]
	internal static class ApkImpl
	{
		[Token(Token = "0x2000789")]
		private struct PartInfo
		{
			[Token(Token = "0x40029F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public long size;

			[Token(Token = "0x40029F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public long offset;

			[Token(Token = "0x40029F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public uint crc32;
		}

		[Token(Token = "0x200078A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146AB4C", Offset = "0x146AB4C")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x40029FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string searchPattern;

			[Token(Token = "0x6002C26")]
			[Address(RVA = "0x1EE2A24", Offset = "0x1EE2A24", VA = "0x1EE2A24")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6002C27")]
			[Address(RVA = "0x1EE2A34", Offset = "0x1EE2A34", VA = "0x1EE2A34")]
			internal bool <GetFiles>b__0(string x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200078B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146AB5C", Offset = "0x146AB5C")]
		private sealed class <>c__DisplayClass7_1
		{
			[Token(Token = "0x40029FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Regex regex;

			[Token(Token = "0x6002C28")]
			[Address(RVA = "0x1EE2A2C", Offset = "0x1EE2A2C", VA = "0x1EE2A2C")]
			public <>c__DisplayClass7_1()
			{
			}

			[Token(Token = "0x6002C29")]
			[Address(RVA = "0x1EE2A64", Offset = "0x1EE2A64", VA = "0x1EE2A64")]
			internal bool <GetFiles>b__1(string x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40020A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string[] s_paths;

		[Token(Token = "0x40020A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static PartInfo[] s_streamingAssets;

		[Token(Token = "0x40020A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string s_root;

		[Token(Token = "0x60024B8")]
		[Address(RVA = "0x1EE0F60", Offset = "0x1EE0F60", VA = "0x1EE0F60")]
		public static void Initialize(string dataPath, string streamingAssetsPath)
		{
		}

		[Token(Token = "0x60024B9")]
		[Address(RVA = "0x1EE1150", Offset = "0x1EE1150", VA = "0x1EE1150")]
		public static bool TryGetInfo(string path, out ReadInfo info)
		{
			return default(bool);
		}

		[Token(Token = "0x60024BA")]
		[Address(RVA = "0x1EE12C0", Offset = "0x1EE12C0", VA = "0x1EE12C0")]
		public static bool DirectoryExists(string path)
		{
			return default(bool);
		}

		[Token(Token = "0x60024BB")]
		[Address(RVA = "0x1EE1C40", Offset = "0x1EE1C40", VA = "0x1EE1C40")]
		public static string[] GetFiles(string path, string searchPattern, SearchOption searchOption)
		{
			return null;
		}

		[Token(Token = "0x60024BC")]
		[Address(RVA = "0x1EE19BC", Offset = "0x1EE19BC", VA = "0x1EE19BC")]
		public static byte[] ReadAllBytes(string path)
		{
			return null;
		}

		[Token(Token = "0x60024BD")]
		[Address(RVA = "0x1EE14D4", Offset = "0x1EE14D4", VA = "0x1EE14D4")]
		public static Stream OpenRead(string path)
		{
			return null;
		}

		[Token(Token = "0x60024BE")]
		[Address(RVA = "0x1EE2840", Offset = "0x1EE2840", VA = "0x1EE2840")]
		private static int GetDirectoryIndex(string path)
		{
			return default(int);
		}

		[Token(Token = "0x60024BF")]
		[Address(RVA = "0x1EE20DC", Offset = "0x1EE20DC", VA = "0x1EE20DC")]
		private static void GetStreamingAssetsInfoFromJar(string apkPath, List<string> paths, List<PartInfo> parts)
		{
		}
	}

	[Token(Token = "0x17000130")]
	public static string Root
	{
		[Token(Token = "0x60009A7")]
		[Address(RVA = "0x1EE0F10", Offset = "0x1EE0F10", VA = "0x1EE0F10")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0x1EDB620", Offset = "0x1EDB620", VA = "0x1EDB620")]
	public static void Initialize()
	{
	}

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0x1EDDD90", Offset = "0x1EDDD90", VA = "0x1EDDD90")]
	public static bool FileExists(string path)
	{
		return default(bool);
	}

	[Token(Token = "0x60009AA")]
	[Address(RVA = "0x1EE12BC", Offset = "0x1EE12BC", VA = "0x1EE12BC")]
	public static bool DirectoryExists(string path)
	{
		return default(bool);
	}

	[Token(Token = "0x60009AB")]
	[Address(RVA = "0x1EE1344", Offset = "0x1EE1344", VA = "0x1EE1344")]
	public static AssetBundleCreateRequest LoadAssetBundleAsync(string path, uint crc = 0u)
	{
		return null;
	}

	[Token(Token = "0x60009AC")]
	[Address(RVA = "0x1EE13D0", Offset = "0x1EE13D0", VA = "0x1EE13D0")]
	public static AssetBundle LoadAssetBundle(string path, uint crc = 0u)
	{
		return null;
	}

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0x1EE1410", Offset = "0x1EE1410", VA = "0x1EE1410")]
	public static Stream OpenRead(string path)
	{
		return null;
	}

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0x1EE161C", Offset = "0x1EE161C", VA = "0x1EE161C")]
	public static StreamReader OpenText(string path)
	{
		return null;
	}

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0x1EE1728", Offset = "0x1EE1728", VA = "0x1EE1728")]
	public static string ReadAllText(string path)
	{
		return null;
	}

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0x1EE1840", Offset = "0x1EE1840", VA = "0x1EE1840")]
	public static string[] ReadAllLines(string path)
	{
		return null;
	}

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0x1EDDDBC", Offset = "0x1EDDDBC", VA = "0x1EDDDBC")]
	public static byte[] ReadAllBytes(string path)
	{
		return null;
	}

	[Token(Token = "0x60009B2")]
	[Address(RVA = "0x1EDBC0C", Offset = "0x1EDBC0C", VA = "0x1EDBC0C")]
	public static string[] GetFiles(string path, string searchPattern, SearchOption searchOption)
	{
		return null;
	}

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0x1EE2054", Offset = "0x1EE2054", VA = "0x1EE2054")]
	public static string[] GetFiles(string path)
	{
		return null;
	}

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0x1EE2060", Offset = "0x1EE2060", VA = "0x1EE2060")]
	public static string[] GetFiles(string path, string searchPattern)
	{
		return null;
	}

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0x1EE1384", Offset = "0x1EE1384", VA = "0x1EE1384")]
	private static ReadInfo GetInfoOrThrow(string path)
	{
		return default(ReadInfo);
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0x1EE2068", Offset = "0x1EE2068", VA = "0x1EE2068")]
	private static void ThrowFileNotFound(string path)
	{
	}
}
[Token(Token = "0x2000146")]
public class BluetoothDeviceScript : MonoBehaviour
{
	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<string> DiscoveredDeviceList;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action InitializedAction;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Action DeinitializedAction;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Action<string> ErrorAction;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Action<string> ServiceAddedAction;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Action StartedAdvertisingAction;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Action StoppedAdvertisingAction;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Action<string, string> DiscoveredPeripheralAction;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Action<string, string, int, byte[]> DiscoveredPeripheralWithAdvertisingInfoAction;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Action<BluetoothLEHardwareInterface.iBeaconData> DiscoveredBeaconAction;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Action<string, string> RetrievedConnectedPeripheralAction;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Action<string, byte[]> PeripheralReceivedWriteDataAction;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Action<string> ConnectedPeripheralAction;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Action<string> ConnectedDisconnectPeripheralAction;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Action<string> DisconnectedPeripheralAction;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Action<string, string> DiscoveredServiceAction;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Action<string, string, string> DiscoveredCharacteristicAction;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Action<string> DidWriteCharacteristicAction;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Dictionary<string, Dictionary<string, Action<string>>> DidUpdateNotificationStateForCharacteristicAction;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Dictionary<string, Dictionary<string, Action<string, string>>> DidUpdateNotificationStateForCharacteristicWithDeviceAddressAction;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Dictionary<string, Dictionary<string, Action<string, byte[]>>> DidUpdateCharacteristicValueAction;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Dictionary<string, Dictionary<string, Action<string, string, byte[]>>> DidUpdateCharacteristicValueWithDeviceAddressAction;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Action<string, int> RequestMtuAction;

	[Token(Token = "0x4000878")]
	private const string deviceInitializedString = "Initialized";

	[Token(Token = "0x4000879")]
	private const string deviceDeInitializedString = "DeInitialized";

	[Token(Token = "0x400087A")]
	private const string deviceErrorString = "Error";

	[Token(Token = "0x400087B")]
	private const string deviceServiceAdded = "ServiceAdded";

	[Token(Token = "0x400087C")]
	private const string deviceStartedAdvertising = "StartedAdvertising";

	[Token(Token = "0x400087D")]
	private const string deviceStoppedAdvertising = "StoppedAdvertising";

	[Token(Token = "0x400087E")]
	private const string deviceDiscoveredPeripheral = "DiscoveredPeripheral";

	[Token(Token = "0x400087F")]
	private const string deviceDiscoveredBeacon = "DiscoveredBeacon";

	[Token(Token = "0x4000880")]
	private const string deviceRetrievedConnectedPeripheral = "RetrievedConnectedPeripheral";

	[Token(Token = "0x4000881")]
	private const string devicePeripheralReceivedWriteData = "PeripheralReceivedWriteData";

	[Token(Token = "0x4000882")]
	private const string deviceConnectedPeripheral = "ConnectedPeripheral";

	[Token(Token = "0x4000883")]
	private const string deviceDisconnectedPeripheral = "DisconnectedPeripheral";

	[Token(Token = "0x4000884")]
	private const string deviceDiscoveredService = "DiscoveredService";

	[Token(Token = "0x4000885")]
	private const string deviceDiscoveredCharacteristic = "DiscoveredCharacteristic";

	[Token(Token = "0x4000886")]
	private const string deviceDidWriteCharacteristic = "DidWriteCharacteristic";

	[Token(Token = "0x4000887")]
	private const string deviceDidUpdateNotificationStateForCharacteristic = "DidUpdateNotificationStateForCharacteristic";

	[Token(Token = "0x4000888")]
	private const string deviceDidUpdateValueForCharacteristic = "DidUpdateValueForCharacteristic";

	[Token(Token = "0x4000889")]
	private const string deviceLog = "Log";

	[Token(Token = "0x400088A")]
	private const string deviceRequestMtu = "MtuChanged";

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0x1EE3194", Offset = "0x1EE3194", VA = "0x1EE3194")]
	private void Start()
	{
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0x1EE32D4", Offset = "0x1EE32D4", VA = "0x1EE32D4")]
	private void Update()
	{
	}

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0x1EE32D8", Offset = "0x1EE32D8", VA = "0x1EE32D8")]
	public void OnBluetoothMessage(string message)
	{
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0x1EE4544", Offset = "0x1EE4544", VA = "0x1EE4544")]
	public void OnBluetoothData(string base64Data)
	{
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0x1EE41F8", Offset = "0x1EE41F8", VA = "0x1EE41F8")]
	public void OnBluetoothData(string deviceAddress, string characteristic, string base64Data)
	{
	}

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0x1EE4028", Offset = "0x1EE4028", VA = "0x1EE4028")]
	public void OnPeripheralData(string characteristic, string base64Data)
	{
	}

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0x1EE45A8", Offset = "0x1EE45A8", VA = "0x1EE45A8")]
	public BluetoothDeviceScript()
	{
	}
}
[Token(Token = "0x2000147")]
public class BluetoothLEHardwareInterface
{
	[Token(Token = "0x2000550")]
	public enum CBCharacteristicProperties
	{
		[Token(Token = "0x40020AA")]
		CBCharacteristicPropertyBroadcast = 1,
		[Token(Token = "0x40020AB")]
		CBCharacteristicPropertyRead = 2,
		[Token(Token = "0x40020AC")]
		CBCharacteristicPropertyWriteWithoutResponse = 4,
		[Token(Token = "0x40020AD")]
		CBCharacteristicPropertyWrite = 8,
		[Token(Token = "0x40020AE")]
		CBCharacteristicPropertyNotify = 0x10,
		[Token(Token = "0x40020AF")]
		CBCharacteristicPropertyIndicate = 0x20,
		[Token(Token = "0x40020B0")]
		CBCharacteristicPropertyAuthenticatedSignedWrites = 0x40,
		[Token(Token = "0x40020B1")]
		CBCharacteristicPropertyExtendedProperties = 0x80,
		[Token(Token = "0x40020B2")]
		CBCharacteristicPropertyNotifyEncryptionRequired = 0x100,
		[Token(Token = "0x40020B3")]
		CBCharacteristicPropertyIndicateEncryptionRequired = 0x200
	}

	[Token(Token = "0x2000551")]
	public enum ScanMode
	{
		[Token(Token = "0x40020B5")]
		LowPower,
		[Token(Token = "0x40020B6")]
		Balanced,
		[Token(Token = "0x40020B7")]
		LowLatency
	}

	[Token(Token = "0x2000552")]
	public enum ConnectionPriority
	{
		[Token(Token = "0x40020B9")]
		LowPower,
		[Token(Token = "0x40020BA")]
		Balanced,
		[Token(Token = "0x40020BB")]
		High
	}

	[Token(Token = "0x2000553")]
	public enum iOSProximity
	{
		[Token(Token = "0x40020BD")]
		Unknown,
		[Token(Token = "0x40020BE")]
		Immediate,
		[Token(Token = "0x40020BF")]
		Near,
		[Token(Token = "0x40020C0")]
		Far
	}

	[Token(Token = "0x2000554")]
	public struct iBeaconData
	{
		[Token(Token = "0x40020C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string UUID;

		[Token(Token = "0x40020C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int Major;

		[Token(Token = "0x40020C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int Minor;

		[Token(Token = "0x40020C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int RSSI;

		[Token(Token = "0x40020C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int AndroidSignalPower;

		[Token(Token = "0x40020C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public iOSProximity iOSProximity;
	}

	[Token(Token = "0x2000555")]
	public enum CBAttributePermissions
	{
		[Token(Token = "0x40020C8")]
		CBAttributePermissionsReadable = 1,
		[Token(Token = "0x40020C9")]
		CBAttributePermissionsWriteable = 16,
		[Token(Token = "0x40020CA")]
		CBAttributePermissionsReadEncryptionRequired = 2,
		[Token(Token = "0x40020CB")]
		CBAttributePermissionsWriteEncryptionRequired = 32
	}

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AndroidJavaObject _android;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static BluetoothDeviceScript bluetoothDeviceScript;

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0x36123E8", Offset = "0x36123E8", VA = "0x36123E8")]
	public static void Log(string message)
	{
	}

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0x36123EC", Offset = "0x36123EC", VA = "0x36123EC")]
	public static BluetoothDeviceScript Initialize(bool asCentral, bool asPeripheral, Action action, Action<string> errorAction)
	{
		return null;
	}

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0x3612A24", Offset = "0x3612A24", VA = "0x3612A24")]
	public static void DeInitialize(Action action)
	{
	}

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0x3612CB8", Offset = "0x3612CB8", VA = "0x3612CB8")]
	public static void FinishDeInitialize()
	{
	}

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0x3612D70", Offset = "0x3612D70", VA = "0x3612D70")]
	public static void BluetoothEnable(bool enable)
	{
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0x3612EC4", Offset = "0x3612EC4", VA = "0x3612EC4")]
	public static void BluetoothScanMode(ScanMode scanMode)
	{
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0x361300C", Offset = "0x361300C", VA = "0x361300C")]
	public static void BluetoothConnectionPriority(ConnectionPriority connectionPriority)
	{
	}

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0x3613154", Offset = "0x3613154", VA = "0x3613154")]
	public static void PauseMessages(bool isPaused)
	{
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0x36132A8", Offset = "0x36132A8", VA = "0x36132A8")]
	public static void ScanForBeacons(string[] proximityUUIDs, Action<iBeaconData> actionBeaconResponse)
	{
	}

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0x3613504", Offset = "0x3613504", VA = "0x3613504")]
	public static void RequestMtu(string name, int mtu, Action<string, int> action)
	{
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0x3613714", Offset = "0x3613714", VA = "0x3613714")]
	public static void ScanForPeripheralsWithServices(string[] serviceUUIDs, Action<string, string> action, [Optional] Action<string, string, int, byte[]> actionAdvertisingInfo, bool rssiOnly = false, bool clearPeripheralList = true, int recordType = 255)
	{
	}

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0x3613A94", Offset = "0x3613A94", VA = "0x3613A94")]
	public static void RetrieveListOfPeripheralsWithServices(string[] serviceUUIDs, Action<string, string> action)
	{
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0x3613D40", Offset = "0x3613D40", VA = "0x3613D40")]
	public static void StopScan()
	{
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0x3613E98", Offset = "0x3613E98", VA = "0x3613E98")]
	public static void StopBeaconScan()
	{
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0x3613FF0", Offset = "0x3613FF0", VA = "0x3613FF0")]
	public static void DisconnectAll()
	{
	}

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0x3614148", Offset = "0x3614148", VA = "0x3614148")]
	public static void ConnectToPeripheral(string name, Action<string> connectAction, Action<string, string> serviceAction, Action<string, string, string> characteristicAction, [Optional] Action<string> disconnectAction)
	{
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0x361438C", Offset = "0x361438C", VA = "0x361438C")]
	public static void DisconnectPeripheral(string name, Action<string> action)
	{
	}

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0x3614558", Offset = "0x3614558", VA = "0x3614558")]
	public static void ReadCharacteristic(string name, string service, string characteristic, Action<string, byte[]> action)
	{
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0x3614930", Offset = "0x3614930", VA = "0x3614930")]
	public static void WriteCharacteristic(string name, string service, string characteristic, byte[] data, int length, bool withResponse, Action<string> action)
	{
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0x3614C5C", Offset = "0x3614C5C", VA = "0x3614C5C")]
	public static void SubscribeCharacteristic(string name, string service, string characteristic, Action<string> notificationAction, Action<string, byte[]> action)
	{
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0x3615110", Offset = "0x3615110", VA = "0x3615110")]
	public static void SubscribeCharacteristicWithDeviceAddress(string name, string service, string characteristic, Action<string, string> notificationAction, Action<string, string, byte[]> action)
	{
	}

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0x36156E0", Offset = "0x36156E0", VA = "0x36156E0")]
	public static void UnSubscribeCharacteristic(string name, string service, string characteristic, Action<string> action)
	{
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0x3615B90", Offset = "0x3615B90", VA = "0x3615B90")]
	public static void PeripheralName(string newName)
	{
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0x3615CC8", Offset = "0x3615CC8", VA = "0x3615CC8")]
	public static void CreateService(string uuid, bool primary, Action<string> action)
	{
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0x3615EE8", Offset = "0x3615EE8", VA = "0x3615EE8")]
	public static void RemoveService(string uuid)
	{
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0x3616020", Offset = "0x3616020", VA = "0x3616020")]
	public static void RemoveServices()
	{
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0x3616178", Offset = "0x3616178", VA = "0x3616178")]
	public static void CreateCharacteristic(string uuid, CBCharacteristicProperties properties, CBAttributePermissions permissions, byte[] data, int length, Action<string, byte[]> action)
	{
	}

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0x3616474", Offset = "0x3616474", VA = "0x3616474")]
	public static void RemoveCharacteristic(string uuid)
	{
	}

	[Token(Token = "0x60009DA")]
	[Address(RVA = "0x361663C", Offset = "0x361663C", VA = "0x361663C")]
	public static void RemoveCharacteristics()
	{
	}

	[Token(Token = "0x60009DB")]
	[Address(RVA = "0x3616794", Offset = "0x3616794", VA = "0x3616794")]
	public static void StartAdvertising(Action action)
	{
	}

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0x3616980", Offset = "0x3616980", VA = "0x3616980")]
	public static void StopAdvertising(Action action)
	{
	}

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0x3616B6C", Offset = "0x3616B6C", VA = "0x3616B6C")]
	public static void UpdateCharacteristicValue(string uuid, byte[] data, int length)
	{
	}

	[Token(Token = "0x60009DE")]
	[Address(RVA = "0x36148AC", Offset = "0x36148AC", VA = "0x36148AC")]
	public static string FullUUID(string uuid)
	{
		return null;
	}

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0x3616D2C", Offset = "0x3616D2C", VA = "0x3616D2C")]
	public BluetoothLEHardwareInterface()
	{
	}
}
namespace RootMotion
{
	[Token(Token = "0x2000148")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x14661D4", Offset = "0x14661D4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x14661D4", Offset = "0x14661D4")]
	public abstract class Baker : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000556")]
		public enum Mode
		{
			[Token(Token = "0x40020CD")]
			AnimationClips,
			[Token(Token = "0x40020CE")]
			AnimationStates,
			[Token(Token = "0x40020CF")]
			PlayableDirector,
			[Token(Token = "0x40020D0")]
			Realtime
		}

		[Token(Token = "0x400088D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146DC10", Offset = "0x146DC10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146DC10", Offset = "0x146DC10")]
		public int frameRate;

		[Token(Token = "0x400088E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146DC68", Offset = "0x146DC68")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146DC68", Offset = "0x146DC68")]
		public float keyReductionError;

		[Token(Token = "0x400088F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146DCC0", Offset = "0x146DCC0")]
		public Mode mode;

		[Token(Token = "0x4000890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146DCF8", Offset = "0x146DCF8")]
		public AnimationClip[] animationClips;

		[Token(Token = "0x4000891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146DD30", Offset = "0x146DD30")]
		public string[] animationStates;

		[Token(Token = "0x4000892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146DD68", Offset = "0x146DD68")]
		public bool loop;

		[Token(Token = "0x4000893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146DDA0", Offset = "0x146DDA0")]
		public string saveToFolder;

		[Token(Token = "0x4000894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146DDD8", Offset = "0x146DDD8")]
		public string appendName;

		[Token(Token = "0x4000895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146DE10", Offset = "0x146DE10")]
		public string saveName;

		[Token(Token = "0x4000896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146DE48", Offset = "0x146DE48")]
		private bool <isBaking>k__BackingField;

		[Token(Token = "0x4000897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146DE58", Offset = "0x146DE58")]
		private float <bakingProgress>k__BackingField;

		[Token(Token = "0x4000898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public Animator animator;

		[Token(Token = "0x4000899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public PlayableDirector director;

		[Token(Token = "0x400089A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146DE88", Offset = "0x146DE88")]
		private float <clipLength>k__BackingField;

		[Token(Token = "0x17000131")]
		public bool isBaking
		{
			[Token(Token = "0x60009E5")]
			[Address(RVA = "0x20C44F0", Offset = "0x20C44F0", VA = "0x20C44F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1480A60", Offset = "0x1480A60")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009E6")]
			[Address(RVA = "0x20C44F8", Offset = "0x20C44F8", VA = "0x20C44F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1480A70", Offset = "0x1480A70")]
			private set
			{
			}
		}

		[Token(Token = "0x17000132")]
		public float bakingProgress
		{
			[Token(Token = "0x60009E7")]
			[Address(RVA = "0x20C4504", Offset = "0x20C4504", VA = "0x20C4504")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1480A80", Offset = "0x1480A80")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60009E8")]
			[Address(RVA = "0x20C450C", Offset = "0x20C450C", VA = "0x20C450C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1480A90", Offset = "0x1480A90")]
			private set
			{
			}
		}

		[Token(Token = "0x17000133")]
		protected float clipLength
		{
			[Token(Token = "0x60009EE")]
			[Address(RVA = "0x20C4514", Offset = "0x20C4514", VA = "0x20C4514")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1480AA0", Offset = "0x1480AA0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60009EF")]
			[Address(RVA = "0x20C451C", Offset = "0x20C451C", VA = "0x20C451C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1480AB0", Offset = "0x1480AB0")]
			private set
			{
			}
		}

		[Token(Token = "0x60009E1")]
		[Address(RVA = "0x20C43C0", Offset = "0x20C43C0", VA = "0x20C43C0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1480980", Offset = "0x1480980")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x60009E2")]
		[Address(RVA = "0x20C440C", Offset = "0x20C440C", VA = "0x20C440C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x14809B8", Offset = "0x14809B8")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x60009E3")]
		[Address(RVA = "0x20C4458", Offset = "0x20C4458", VA = "0x20C4458")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x14809F0", Offset = "0x14809F0")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x60009E4")]
		[Address(RVA = "0x20C44A4", Offset = "0x20C44A4", VA = "0x20C44A4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1480A28", Offset = "0x1480A28")]
		private void ASThread()
		{
		}

		[Token(Token = "0x60009E9")]
		protected abstract Transform GetCharacterRoot();

		[Token(Token = "0x60009EA")]
		protected abstract void OnStartBaking();

		[Token(Token = "0x60009EB")]
		protected abstract void OnSetLoopFrame(float time);

		[Token(Token = "0x60009EC")]
		protected abstract void OnSetCurves(ref AnimationClip clip);

		[Token(Token = "0x60009ED")]
		protected abstract void OnSetKeyframes(float time, bool lastFrame);

		[Token(Token = "0x60009F0")]
		[Address(RVA = "0x20C4524", Offset = "0x20C4524", VA = "0x20C4524")]
		public void BakeClip()
		{
		}

		[Token(Token = "0x60009F1")]
		[Address(RVA = "0x20C4528", Offset = "0x20C4528", VA = "0x20C4528")]
		public void StartBaking()
		{
		}

		[Token(Token = "0x60009F2")]
		[Address(RVA = "0x20C452C", Offset = "0x20C452C", VA = "0x20C452C")]
		public void StopBaking()
		{
		}

		[Token(Token = "0x60009F3")]
		[Address(RVA = "0x20C4530", Offset = "0x20C4530", VA = "0x20C4530")]
		protected Baker()
		{
		}
	}
	[Token(Token = "0x2000149")]
	public class GenericBaker : Baker
	{
		[Token(Token = "0x400089B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146DE98", Offset = "0x146DE98")]
		public bool markAsLegacy;

		[Token(Token = "0x400089C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146DED0", Offset = "0x146DED0")]
		public Transform root;

		[Token(Token = "0x400089D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146DF08", Offset = "0x146DF08")]
		public Transform rootNode;

		[Token(Token = "0x400089E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146DF40", Offset = "0x146DF40")]
		public Transform[] ignoreList;

		[Token(Token = "0x400089F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146DF78", Offset = "0x146DF78")]
		public Transform[] bakePositionList;

		[Token(Token = "0x40008A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BakerTransform[] children;

		[Token(Token = "0x40008A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private BakerTransform rootChild;

		[Token(Token = "0x40008A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int rootChildIndex;

		[Token(Token = "0x60009F4")]
		[Address(RVA = "0x28925B8", Offset = "0x28925B8", VA = "0x28925B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009F5")]
		[Address(RVA = "0x2892998", Offset = "0x2892998", VA = "0x2892998", Slot = "4")]
		protected override Transform GetCharacterRoot()
		{
			return null;
		}

		[Token(Token = "0x60009F6")]
		[Address(RVA = "0x28929A0", Offset = "0x28929A0", VA = "0x28929A0", Slot = "5")]
		protected override void OnStartBaking()
		{
		}

		[Token(Token = "0x60009F7")]
		[Address(RVA = "0x2892AB0", Offset = "0x2892AB0", VA = "0x2892AB0", Slot = "6")]
		protected override void OnSetLoopFrame(float time)
		{
		}

		[Token(Token = "0x60009F8")]
		[Address(RVA = "0x2892B2C", Offset = "0x2892B2C", VA = "0x2892B2C", Slot = "7")]
		protected override void OnSetCurves(ref AnimationClip clip)
		{
		}

		[Token(Token = "0x60009F9")]
		[Address(RVA = "0x2892BA8", Offset = "0x2892BA8", VA = "0x2892BA8", Slot = "8")]
		protected override void OnSetKeyframes(float time, bool lastFrame)
		{
		}

		[Token(Token = "0x60009FA")]
		[Address(RVA = "0x28927E8", Offset = "0x28927E8", VA = "0x28927E8")]
		private bool IsIgnored(Transform t)
		{
			return default(bool);
		}

		[Token(Token = "0x60009FB")]
		[Address(RVA = "0x28928C0", Offset = "0x28928C0", VA = "0x28928C0")]
		private bool BakePosition(Transform t)
		{
			return default(bool);
		}

		[Token(Token = "0x60009FC")]
		[Address(RVA = "0x2892C24", Offset = "0x2892C24", VA = "0x2892C24")]
		public GenericBaker()
		{
		}
	}
	[Token(Token = "0x200014A")]
	public class TQ
	{
		[Token(Token = "0x40008A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 t;

		[Token(Token = "0x40008A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion q;

		[Token(Token = "0x60009FD")]
		[Address(RVA = "0x2897DD4", Offset = "0x2897DD4", VA = "0x2897DD4")]
		public TQ(Vector3 translation, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x200014B")]
	public class AvatarUtility
	{
		[Token(Token = "0x60009FE")]
		[Address(RVA = "0x20C3384", Offset = "0x20C3384", VA = "0x20C3384")]
		public static Quaternion GetPostRotation(UnityEngine.Avatar avatar, AvatarIKGoal avatarIKGoal)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60009FF")]
		[Address(RVA = "0x20C35A4", Offset = "0x20C35A4", VA = "0x20C35A4")]
		public static TQ GetIKGoalTQ(UnityEngine.Avatar avatar, float humanScale, AvatarIKGoal avatarIKGoal, TQ bodyPositionRotation, TQ boneTQ)
		{
			return null;
		}

		[Token(Token = "0x6000A00")]
		[Address(RVA = "0x20C3584", Offset = "0x20C3584", VA = "0x20C3584")]
		public static HumanBodyBones HumanIDFromAvatarIKGoal(AvatarIKGoal avatarIKGoal)
		{
			return default(HumanBodyBones);
		}

		[Token(Token = "0x6000A01")]
		[Address(RVA = "0x20C3C3C", Offset = "0x20C3C3C", VA = "0x20C3C3C")]
		public AvatarUtility()
		{
		}
	}
	[Token(Token = "0x200014C")]
	public static class BakerUtilities
	{
		[Token(Token = "0x6000A02")]
		[Address(RVA = "0x2D344DC", Offset = "0x2D344DC", VA = "0x2D344DC")]
		public static void ReduceKeyframes(AnimationCurve curve, float maxError)
		{
		}

		[Token(Token = "0x6000A03")]
		[Address(RVA = "0x2D34974", Offset = "0x2D34974", VA = "0x2D34974")]
		public static Keyframe[] GetReducedKeyframes(AnimationCurve curve, float maxError)
		{
			return null;
		}

		[Token(Token = "0x6000A04")]
		[Address(RVA = "0x2D34D5C", Offset = "0x2D34D5C", VA = "0x2D34D5C")]
		public static void SetLoopFrame(float time, AnimationCurve curve)
		{
		}

		[Token(Token = "0x6000A05")]
		[Address(RVA = "0x2D34FA8", Offset = "0x2D34FA8", VA = "0x2D34FA8")]
		public static void SetTangentMode(AnimationCurve curve)
		{
		}

		[Token(Token = "0x6000A06")]
		[Address(RVA = "0x2D34FAC", Offset = "0x2D34FAC", VA = "0x2D34FAC")]
		public static Quaternion EnsureQuaternionContinuity(Quaternion lastQ, Quaternion q)
		{
			return default(Quaternion);
		}
	}
	[Serializable]
	[Token(Token = "0x200014D")]
	public class BakerHumanoidQT
	{
		[Token(Token = "0x40008A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Transform transform;

		[Token(Token = "0x40008A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string Qx;

		[Token(Token = "0x40008A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string Qy;

		[Token(Token = "0x40008A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string Qz;

		[Token(Token = "0x40008A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string Qw;

		[Token(Token = "0x40008AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string Tx;

		[Token(Token = "0x40008AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string Ty;

		[Token(Token = "0x40008AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string Tz;

		[Token(Token = "0x40008AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AnimationCurve rotX;

		[Token(Token = "0x40008AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AnimationCurve rotY;

		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AnimationCurve rotZ;

		[Token(Token = "0x40008B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AnimationCurve rotW;

		[Token(Token = "0x40008B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AnimationCurve posX;

		[Token(Token = "0x40008B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AnimationCurve posY;

		[Token(Token = "0x40008B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public AnimationCurve posZ;

		[Token(Token = "0x40008B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private AvatarIKGoal goal;

		[Token(Token = "0x40008B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Quaternion lastQ;

		[Token(Token = "0x40008B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private bool lastQSet;

		[Token(Token = "0x6000A07")]
		[Address(RVA = "0x20C4620", Offset = "0x20C4620", VA = "0x20C4620")]
		public BakerHumanoidQT(string name)
		{
		}

		[Token(Token = "0x6000A08")]
		[Address(RVA = "0x20C4918", Offset = "0x20C4918", VA = "0x20C4918")]
		public BakerHumanoidQT(Transform transform, AvatarIKGoal goal, string name)
		{
		}

		[Token(Token = "0x6000A09")]
		[Address(RVA = "0x20C4794", Offset = "0x20C4794", VA = "0x20C4794")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0x20C4AB0", Offset = "0x20C4AB0", VA = "0x20C4AB0")]
		public void SetIKKeyframes(float time, UnityEngine.Avatar avatar, Transform root, float humanScale, Vector3 bodyPosition, Quaternion bodyRotation)
		{
		}

		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0x20C4E30", Offset = "0x20C4E30", VA = "0x20C4E30")]
		public void SetKeyframes(float time, Vector3 pos, Quaternion rot)
		{
		}

		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0x20C4F2C", Offset = "0x20C4F2C", VA = "0x20C4F2C")]
		public void MoveLastKeyframes(float time)
		{
		}

		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0x20C5028", Offset = "0x20C5028", VA = "0x20C5028")]
		public void SetLoopFrame(float time)
		{
		}

		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0x20C4FA0", Offset = "0x20C4FA0", VA = "0x20C4FA0")]
		private void MoveLastKeyframe(float time, AnimationCurve curve)
		{
		}

		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0x20C50B8", Offset = "0x20C50B8", VA = "0x20C50B8")]
		public void MultiplyLength(AnimationCurve curve, float mlp)
		{
		}

		[Token(Token = "0x6000A10")]
		[Address(RVA = "0x20C516C", Offset = "0x20C516C", VA = "0x20C516C")]
		public void SetCurves(ref AnimationClip clip, float maxError, float lengthMlp)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200014E")]
	public class BakerMuscle
	{
		[Token(Token = "0x40008B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimationCurve curve;

		[Token(Token = "0x40008B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int muscleIndex;

		[Token(Token = "0x40008B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string propertyName;

		[Token(Token = "0x6000A11")]
		[Address(RVA = "0x20C54A4", Offset = "0x20C54A4", VA = "0x20C54A4")]
		public BakerMuscle(int muscleIndex)
		{
		}

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0x20C5520", Offset = "0x20C5520", VA = "0x20C5520")]
		private string MuscleNameToPropertyName(string n)
		{
			return null;
		}

		[Token(Token = "0x6000A13")]
		[Address(RVA = "0x20C5C10", Offset = "0x20C5C10", VA = "0x20C5C10")]
		public void MultiplyLength(AnimationCurve curve, float mlp)
		{
		}

		[Token(Token = "0x6000A14")]
		[Address(RVA = "0x20C5CC4", Offset = "0x20C5CC4", VA = "0x20C5CC4")]
		public void SetCurves(ref AnimationClip clip, float maxError, float lengthMlp)
		{
		}

		[Token(Token = "0x6000A15")]
		[Address(RVA = "0x20C5BA8", Offset = "0x20C5BA8", VA = "0x20C5BA8")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000A16")]
		[Address(RVA = "0x20C5DAC", Offset = "0x20C5DAC", VA = "0x20C5DAC")]
		public void SetKeyframe(float time, float[] muscles)
		{
		}

		[Token(Token = "0x6000A17")]
		[Address(RVA = "0x20C5DF4", Offset = "0x20C5DF4", VA = "0x20C5DF4")]
		public void SetLoopFrame(float time)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200014F")]
	public class BakerTransform
	{
		[Token(Token = "0x40008BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x40008BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve posX;

		[Token(Token = "0x40008BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve posY;

		[Token(Token = "0x40008BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve posZ;

		[Token(Token = "0x40008BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve rotX;

		[Token(Token = "0x40008BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationCurve rotY;

		[Token(Token = "0x40008C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AnimationCurve rotZ;

		[Token(Token = "0x40008C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AnimationCurve rotW;

		[Token(Token = "0x40008C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string relativePath;

		[Token(Token = "0x40008C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool recordPosition;

		[Token(Token = "0x40008C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 relativePosition;

		[Token(Token = "0x40008C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool isRootNode;

		[Token(Token = "0x40008C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Quaternion relativeRotation;

		[Token(Token = "0x6000A18")]
		[Address(RVA = "0x2D33D80", Offset = "0x2D33D80", VA = "0x2D33D80")]
		public BakerTransform(Transform transform, Transform root, bool recordPosition, bool isRootNode)
		{
		}

		[Token(Token = "0x6000A19")]
		[Address(RVA = "0x2D33F78", Offset = "0x2D33F78", VA = "0x2D33F78")]
		public void SetRelativeSpace(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0x2D33F8C", Offset = "0x2D33F8C", VA = "0x2D33F8C")]
		public void SetCurves(ref AnimationClip clip)
		{
		}

		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0x2D3421C", Offset = "0x2D3421C", VA = "0x2D3421C")]
		private void AddRootMotionCurves(ref AnimationClip clip)
		{
		}

		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0x2D33E30", Offset = "0x2D33E30", VA = "0x2D33E30")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0x2D34468", Offset = "0x2D34468", VA = "0x2D34468")]
		public void ReduceKeyframes(float maxError)
		{
		}

		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0x2D34524", Offset = "0x2D34524", VA = "0x2D34524")]
		public void SetKeyframes(float time)
		{
		}

		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0x2D34770", Offset = "0x2D34770", VA = "0x2D34770")]
		public void AddLoopFrame(float time)
		{
		}
	}
	[Token(Token = "0x2000150")]
	public class HumanoidBaker : Baker
	{
		[Token(Token = "0x40008C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146DFB0", Offset = "0x146DFB0")]
		public bool bakeHandIK;

		[Token(Token = "0x40008C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146DFE8", Offset = "0x146DFE8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146DFE8", Offset = "0x146DFE8")]
		public float IKKeyReductionError;

		[Token(Token = "0x40008C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146E040", Offset = "0x146E040")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146E040", Offset = "0x146E040")]
		public int muscleFrameRateDiv;

		[Token(Token = "0x40008CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private BakerMuscle[] bakerMuscles;

		[Token(Token = "0x40008CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private BakerHumanoidQT rootQT;

		[Token(Token = "0x40008CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private BakerHumanoidQT leftFootQT;

		[Token(Token = "0x40008CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BakerHumanoidQT rightFootQT;

		[Token(Token = "0x40008CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private BakerHumanoidQT leftHandQT;

		[Token(Token = "0x40008CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private BakerHumanoidQT rightHandQT;

		[Token(Token = "0x40008D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float[] muscles;

		[Token(Token = "0x40008D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private HumanPose pose;

		[Token(Token = "0x40008D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private HumanPoseHandler handler;

		[Token(Token = "0x40008D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Vector3 bodyPosition;

		[Token(Token = "0x40008D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private Quaternion bodyRotation;

		[Token(Token = "0x40008D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private int mN;

		[Token(Token = "0x40008D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Quaternion lastBodyRotation;

		[Token(Token = "0x6000A20")]
		[Address(RVA = "0x2893B70", Offset = "0x2893B70", VA = "0x2893B70")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A21")]
		[Address(RVA = "0x2894054", Offset = "0x2894054", VA = "0x2894054", Slot = "4")]
		protected override Transform GetCharacterRoot()
		{
			return null;
		}

		[Token(Token = "0x6000A22")]
		[Address(RVA = "0x2894070", Offset = "0x2894070", VA = "0x2894070", Slot = "5")]
		protected override void OnStartBaking()
		{
		}

		[Token(Token = "0x6000A23")]
		[Address(RVA = "0x2894190", Offset = "0x2894190", VA = "0x2894190", Slot = "6")]
		protected override void OnSetLoopFrame(float time)
		{
		}

		[Token(Token = "0x6000A24")]
		[Address(RVA = "0x289426C", Offset = "0x289426C", VA = "0x289426C", Slot = "7")]
		protected override void OnSetCurves(ref AnimationClip clip)
		{
		}

		[Token(Token = "0x6000A25")]
		[Address(RVA = "0x289443C", Offset = "0x289443C", VA = "0x289443C", Slot = "8")]
		protected override void OnSetKeyframes(float time, bool lastFrame)
		{
		}

		[Token(Token = "0x6000A26")]
		[Address(RVA = "0x28947D4", Offset = "0x28947D4", VA = "0x28947D4")]
		private void UpdateHumanPose()
		{
		}

		[Token(Token = "0x6000A27")]
		[Address(RVA = "0x28948B0", Offset = "0x28948B0", VA = "0x28948B0")]
		public HumanoidBaker()
		{
		}
	}
	[Token(Token = "0x2000151")]
	public class CameraController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000557")]
		public enum UpdateMode
		{
			[Token(Token = "0x40020D2")]
			Update,
			[Token(Token = "0x40020D3")]
			FixedUpdate,
			[Token(Token = "0x40020D4")]
			LateUpdate,
			[Token(Token = "0x40020D5")]
			FixedLateUpdate
		}

		[Token(Token = "0x40008D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x40008D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform rotationSpace;

		[Token(Token = "0x40008D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UpdateMode updateMode;

		[Token(Token = "0x40008DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool lockCursor;

		[Token(Token = "0x40008DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x146E094", Offset = "0x146E094")]
		public bool smoothFollow;

		[Token(Token = "0x40008DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 offset;

		[Token(Token = "0x40008DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float followSpeed;

		[Token(Token = "0x40008DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x146E0CC", Offset = "0x146E0CC")]
		public float rotationSensitivity;

		[Token(Token = "0x40008DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float yMinLimit;

		[Token(Token = "0x40008E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float yMaxLimit;

		[Token(Token = "0x40008E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool rotateAlways;

		[Token(Token = "0x40008E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public bool rotateOnLeftButton;

		[Token(Token = "0x40008E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
		public bool rotateOnRightButton;

		[Token(Token = "0x40008E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F")]
		public bool rotateOnMiddleButton;

		[Token(Token = "0x40008E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x146E104", Offset = "0x146E104")]
		public float distance;

		[Token(Token = "0x40008E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float minDistance;

		[Token(Token = "0x40008E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float maxDistance;

		[Token(Token = "0x40008E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float zoomSpeed;

		[Token(Token = "0x40008E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float zoomSensitivity;

		[Token(Token = "0x40008EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x146E13C", Offset = "0x146E13C")]
		public LayerMask blockingLayers;

		[Token(Token = "0x40008EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float blockingRadius;

		[Token(Token = "0x40008EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float blockingSmoothTime;

		[Token(Token = "0x40008ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float blockingOriginOffset;

		[Token(Token = "0x40008EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146E174", Offset = "0x146E174")]
		public float blockedOffset;

		[Token(Token = "0x40008EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146E18C", Offset = "0x146E18C")]
		private float <x>k__BackingField;

		[Token(Token = "0x40008F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146E19C", Offset = "0x146E19C")]
		private float <y>k__BackingField;

		[Token(Token = "0x40008F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146E1AC", Offset = "0x146E1AC")]
		private float <distanceTarget>k__BackingField;

		[Token(Token = "0x40008F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 targetDistance;

		[Token(Token = "0x40008F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 position;

		[Token(Token = "0x40008F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Quaternion rotation;

		[Token(Token = "0x40008F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Vector3 smoothPosition;

		[Token(Token = "0x40008F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Camera cam;

		[Token(Token = "0x40008F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool fixedFrame;

		[Token(Token = "0x40008F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float fixedDeltaTime;

		[Token(Token = "0x40008F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Quaternion r;

		[Token(Token = "0x40008FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Vector3 lastUp;

		[Token(Token = "0x40008FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float blockedDistance;

		[Token(Token = "0x40008FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float blockedDistanceV;

		[Token(Token = "0x17000134")]
		public float x
		{
			[Token(Token = "0x6000A28")]
			[Address(RVA = "0x2D3C4F0", Offset = "0x2D3C4F0", VA = "0x2D3C4F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1480AC0", Offset = "0x1480AC0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A29")]
			[Address(RVA = "0x2D3C4F8", Offset = "0x2D3C4F8", VA = "0x2D3C4F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1480AD0", Offset = "0x1480AD0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000135")]
		public float y
		{
			[Token(Token = "0x6000A2A")]
			[Address(RVA = "0x2D3C500", Offset = "0x2D3C500", VA = "0x2D3C500")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1480AE0", Offset = "0x1480AE0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A2B")]
			[Address(RVA = "0x2D3C508", Offset = "0x2D3C508", VA = "0x2D3C508")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1480AF0", Offset = "0x1480AF0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000136")]
		public float distanceTarget
		{
			[Token(Token = "0x6000A2C")]
			[Address(RVA = "0x2D3C510", Offset = "0x2D3C510", VA = "0x2D3C510")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1480B00", Offset = "0x1480B00")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A2D")]
			[Address(RVA = "0x2D3C518", Offset = "0x2D3C518", VA = "0x2D3C518")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1480B10", Offset = "0x1480B10")]
			private set
			{
			}
		}

		[Token(Token = "0x17000137")]
		private float zoomAdd
		{
			[Token(Token = "0x6000A37")]
			[Address(RVA = "0x2D3D054", Offset = "0x2D3D054", VA = "0x2D3D054")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0x2D3C520", Offset = "0x2D3C520", VA = "0x2D3C520")]
		public void SetAngles(Quaternion rotation)
		{
		}

		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0x2D3C55C", Offset = "0x2D3C55C", VA = "0x2D3C55C")]
		public void SetAngles(float yaw, float pitch)
		{
		}

		[Token(Token = "0x6000A30")]
		[Address(RVA = "0x2D3C564", Offset = "0x2D3C564", VA = "0x2D3C564", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000A31")]
		[Address(RVA = "0x2D3C68C", Offset = "0x2D3C68C", VA = "0x2D3C68C", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000A32")]
		[Address(RVA = "0x2D3C6E8", Offset = "0x2D3C6E8", VA = "0x2D3C6E8", Slot = "6")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6000A33")]
		[Address(RVA = "0x2D3C750", Offset = "0x2D3C750", VA = "0x2D3C750", Slot = "7")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6000A34")]
		[Address(RVA = "0x2D3C7B4", Offset = "0x2D3C7B4", VA = "0x2D3C7B4")]
		public void UpdateInput()
		{
		}

		[Token(Token = "0x6000A35")]
		[Address(RVA = "0x2D3C6C0", Offset = "0x2D3C6C0", VA = "0x2D3C6C0")]
		public void UpdateTransform()
		{
		}

		[Token(Token = "0x6000A36")]
		[Address(RVA = "0x2D3C934", Offset = "0x2D3C934", VA = "0x2D3C934")]
		public void UpdateTransform(float deltaTime)
		{
		}

		[Token(Token = "0x6000A38")]
		[Address(RVA = "0x2D3CFA4", Offset = "0x2D3CFA4", VA = "0x2D3CFA4")]
		private float ClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6000A39")]
		[Address(RVA = "0x2D3D0C8", Offset = "0x2D3D0C8", VA = "0x2D3D0C8")]
		public CameraController()
		{
		}
	}
	[Token(Token = "0x2000152")]
	public class CameraControllerFPS : MonoBehaviour
	{
		[Token(Token = "0x40008FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float rotationSensitivity;

		[Token(Token = "0x40008FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float yMinLimit;

		[Token(Token = "0x40008FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float yMaxLimit;

		[Token(Token = "0x4000900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float x;

		[Token(Token = "0x4000901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float y;

		[Token(Token = "0x6000A3A")]
		[Address(RVA = "0x2D3D1E0", Offset = "0x2D3D1E0", VA = "0x2D3D1E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0x2D3D218", Offset = "0x2D3D218", VA = "0x2D3D218")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0x2D3D3D0", Offset = "0x2D3D3D0", VA = "0x2D3D3D0")]
		private float ClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0x2D3D480", Offset = "0x2D3D480", VA = "0x2D3D480")]
		public CameraControllerFPS()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000153")]
	public enum Axis
	{
		[Token(Token = "0x4000903")]
		X,
		[Token(Token = "0x4000904")]
		Y,
		[Token(Token = "0x4000905")]
		Z
	}
	[Token(Token = "0x2000154")]
	public class AxisTools
	{
		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0x20C3C44", Offset = "0x20C3C44", VA = "0x20C3C44")]
		public static Vector3 ToVector3(Axis axis)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0x20C3CFC", Offset = "0x20C3CFC", VA = "0x20C3CFC")]
		public static Axis ToAxis(Vector3 v)
		{
			return default(Axis);
		}

		[Token(Token = "0x6000A40")]
		[Address(RVA = "0x20C3DA8", Offset = "0x20C3DA8", VA = "0x20C3DA8")]
		public static Axis GetAxisToPoint(Transform t, Vector3 worldPosition)
		{
			return default(Axis);
		}

		[Token(Token = "0x6000A41")]
		[Address(RVA = "0x20C3F8C", Offset = "0x20C3F8C", VA = "0x20C3F8C")]
		public static Axis GetAxisToDirection(Transform t, Vector3 direction)
		{
			return default(Axis);
		}

		[Token(Token = "0x6000A42")]
		[Address(RVA = "0x20C3EC4", Offset = "0x20C3EC4", VA = "0x20C3EC4")]
		public static Vector3 GetAxisVectorToPoint(Transform t, Vector3 worldPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A43")]
		[Address(RVA = "0x20C40A8", Offset = "0x20C40A8", VA = "0x20C40A8")]
		public static Vector3 GetAxisVectorToDirection(Transform t, Vector3 direction)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A44")]
		[Address(RVA = "0x20C40F0", Offset = "0x20C40F0", VA = "0x20C40F0")]
		public static Vector3 GetAxisVectorToDirection(Quaternion r, Vector3 direction)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A45")]
		[Address(RVA = "0x20C43B8", Offset = "0x20C43B8", VA = "0x20C43B8")]
		public AxisTools()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000155")]
	public class BipedLimbOrientations
	{
		[Serializable]
		[Token(Token = "0x2000558")]
		public class LimbOrientation
		{
			[Token(Token = "0x40020D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 upperBoneForwardAxis;

			[Token(Token = "0x40020D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 lowerBoneForwardAxis;

			[Token(Token = "0x40020D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 lastBoneLeftAxis;

			[Token(Token = "0x60024C0")]
			[Address(RVA = "0x2D35500", Offset = "0x2D35500", VA = "0x2D35500")]
			public LimbOrientation(Vector3 upperBoneForwardAxis, Vector3 lowerBoneForwardAxis, Vector3 lastBoneLeftAxis)
			{
			}
		}

		[Token(Token = "0x4000906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LimbOrientation leftArm;

		[Token(Token = "0x4000907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LimbOrientation rightArm;

		[Token(Token = "0x4000908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LimbOrientation leftLeg;

		[Token(Token = "0x4000909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LimbOrientation rightLeg;

		[Token(Token = "0x17000138")]
		public static BipedLimbOrientations UMA
		{
			[Token(Token = "0x6000A47")]
			[Address(RVA = "0x2D35288", Offset = "0x2D35288", VA = "0x2D35288")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000139")]
		public static BipedLimbOrientations MaxBiped
		{
			[Token(Token = "0x6000A48")]
			[Address(RVA = "0x2D35578", Offset = "0x2D35578", VA = "0x2D35578")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A46")]
		[Address(RVA = "0x2D35208", Offset = "0x2D35208", VA = "0x2D35208")]
		public BipedLimbOrientations(LimbOrientation leftArm, LimbOrientation rightArm, LimbOrientation leftLeg, LimbOrientation rightLeg)
		{
		}
	}
	[Token(Token = "0x2000156")]
	public static class BipedNaming
	{
		[Serializable]
		[Token(Token = "0x2000559")]
		public enum BoneType
		{
			[Token(Token = "0x40020DA")]
			Unassigned,
			[Token(Token = "0x40020DB")]
			Spine,
			[Token(Token = "0x40020DC")]
			Head,
			[Token(Token = "0x40020DD")]
			Arm,
			[Token(Token = "0x40020DE")]
			Leg,
			[Token(Token = "0x40020DF")]
			Tail,
			[Token(Token = "0x40020E0")]
			Eye
		}

		[Serializable]
		[Token(Token = "0x200055A")]
		public enum BoneSide
		{
			[Token(Token = "0x40020E2")]
			Center,
			[Token(Token = "0x40020E3")]
			Left,
			[Token(Token = "0x40020E4")]
			Right
		}

		[Token(Token = "0x400090A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string[] typeLeft;

		[Token(Token = "0x400090B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string[] typeRight;

		[Token(Token = "0x400090C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string[] typeSpine;

		[Token(Token = "0x400090D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string[] typeHead;

		[Token(Token = "0x400090E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static string[] typeArm;

		[Token(Token = "0x400090F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static string[] typeLeg;

		[Token(Token = "0x4000910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static string[] typeTail;

		[Token(Token = "0x4000911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static string[] typeEye;

		[Token(Token = "0x4000912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static string[] typeExclude;

		[Token(Token = "0x4000913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static string[] typeExcludeSpine;

		[Token(Token = "0x4000914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static string[] typeExcludeHead;

		[Token(Token = "0x4000915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static string[] typeExcludeArm;

		[Token(Token = "0x4000916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static string[] typeExcludeLeg;

		[Token(Token = "0x4000917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public static string[] typeExcludeTail;

		[Token(Token = "0x4000918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public static string[] typeExcludeEye;

		[Token(Token = "0x4000919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public static string[] pelvis;

		[Token(Token = "0x400091A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public static string[] hand;

		[Token(Token = "0x400091B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public static string[] foot;

		[Token(Token = "0x6000A49")]
		[Address(RVA = "0x2D357F0", Offset = "0x2D357F0", VA = "0x2D357F0")]
		public static Transform[] GetBonesOfType(BoneType boneType, Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x6000A4A")]
		[Address(RVA = "0x2D35AF8", Offset = "0x2D35AF8", VA = "0x2D35AF8")]
		public static Transform[] GetBonesOfSide(BoneSide boneSide, Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x6000A4B")]
		[Address(RVA = "0x2D35D50", Offset = "0x2D35D50", VA = "0x2D35D50")]
		public static Transform[] GetBonesOfTypeAndSide(BoneType boneType, BoneSide boneSide, Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0x2D35DD4", Offset = "0x2D35DD4", VA = "0x2D35DD4")]
		public static Transform GetFirstBoneOfTypeAndSide(BoneType boneType, BoneSide boneSide, Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x6000A4D")]
		[Address(RVA = "0x2D35E80", Offset = "0x2D35E80", VA = "0x2D35E80")]
		public static Transform GetNamingMatch(Transform[] transforms, params string[][] namings)
		{
			return null;
		}

		[Token(Token = "0x6000A4E")]
		[Address(RVA = "0x2D359A8", Offset = "0x2D359A8", VA = "0x2D359A8")]
		public static BoneType GetBoneType(string boneName)
		{
			return default(BoneType);
		}

		[Token(Token = "0x6000A4F")]
		[Address(RVA = "0x2D35CB0", Offset = "0x2D35CB0", VA = "0x2D35CB0")]
		public static BoneSide GetBoneSide(string boneName)
		{
			return default(BoneSide);
		}

		[Token(Token = "0x6000A50")]
		[Address(RVA = "0x2D366C0", Offset = "0x2D366C0", VA = "0x2D366C0")]
		public static Transform GetBone(Transform[] transforms, BoneType boneType, BoneSide boneSide = BoneSide.Center, params string[][] namings)
		{
			return null;
		}

		[Token(Token = "0x6000A51")]
		[Address(RVA = "0x2D364D8", Offset = "0x2D364D8", VA = "0x2D364D8")]
		private static bool isLeft(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A52")]
		[Address(RVA = "0x2D365CC", Offset = "0x2D365CC", VA = "0x2D365CC")]
		private static bool isRight(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A53")]
		[Address(RVA = "0x2D360A0", Offset = "0x2D360A0", VA = "0x2D360A0")]
		private static bool isSpine(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A54")]
		[Address(RVA = "0x2D36154", Offset = "0x2D36154", VA = "0x2D36154")]
		private static bool isHead(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A55")]
		[Address(RVA = "0x2D36208", Offset = "0x2D36208", VA = "0x2D36208")]
		private static bool isArm(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A56")]
		[Address(RVA = "0x2D362BC", Offset = "0x2D362BC", VA = "0x2D362BC")]
		private static bool isLeg(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A57")]
		[Address(RVA = "0x2D36370", Offset = "0x2D36370", VA = "0x2D36370")]
		private static bool isTail(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A58")]
		[Address(RVA = "0x2D36424", Offset = "0x2D36424", VA = "0x2D36424")]
		private static bool isEye(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A59")]
		[Address(RVA = "0x2D368D4", Offset = "0x2D368D4", VA = "0x2D368D4")]
		private static bool isTypeExclude(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A5A")]
		[Address(RVA = "0x2D35FB4", Offset = "0x2D35FB4", VA = "0x2D35FB4")]
		private static bool matchesNaming(string boneName, string[] namingConvention)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A5B")]
		[Address(RVA = "0x2D36844", Offset = "0x2D36844", VA = "0x2D36844")]
		private static bool excludesNaming(string boneName, string[] namingConvention)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0x2D36944", Offset = "0x2D36944", VA = "0x2D36944")]
		private static bool matchesLastLetter(string boneName, string[] namingConvention)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A5D")]
		[Address(RVA = "0x2D36A1C", Offset = "0x2D36A1C", VA = "0x2D36A1C")]
		private static bool LastLetterIs(string boneName, string letter)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0x2D367C8", Offset = "0x2D367C8", VA = "0x2D367C8")]
		private static string firstLetter(string boneName)
		{
			return null;
		}

		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0x2D36750", Offset = "0x2D36750", VA = "0x2D36750")]
		private static string lastLetter(string boneName)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000157")]
	public class BipedReferences
	{
		[Token(Token = "0x200055B")]
		public struct AutoDetectParams
		{
			[Token(Token = "0x40020E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool legsParentInSpine;

			[Token(Token = "0x40020E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public bool includeEyes;

			[Token(Token = "0x170004BF")]
			public static AutoDetectParams Default
			{
				[Token(Token = "0x60024C2")]
				[Address(RVA = "0x2D3C4E8", Offset = "0x2D3C4E8", VA = "0x2D3C4E8")]
				get
				{
					return default(AutoDetectParams);
				}
			}

			[Token(Token = "0x60024C1")]
			[Address(RVA = "0x2D3C4D4", Offset = "0x2D3C4D4", VA = "0x2D3C4D4")]
			public AutoDetectParams(bool legsParentInSpine, bool includeEyes)
			{
			}
		}

		[Token(Token = "0x400091C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform root;

		[Token(Token = "0x400091D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform pelvis;

		[Token(Token = "0x400091E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform leftThigh;

		[Token(Token = "0x400091F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform leftCalf;

		[Token(Token = "0x4000920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform leftFoot;

		[Token(Token = "0x4000921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform rightThigh;

		[Token(Token = "0x4000922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform rightCalf;

		[Token(Token = "0x4000923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform rightFoot;

		[Token(Token = "0x4000924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform leftUpperArm;

		[Token(Token = "0x4000925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform leftForearm;

		[Token(Token = "0x4000926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform leftHand;

		[Token(Token = "0x4000927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform rightUpperArm;

		[Token(Token = "0x4000928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform rightForearm;

		[Token(Token = "0x4000929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform rightHand;

		[Token(Token = "0x400092A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Transform head;

		[Token(Token = "0x400092B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform[] spine;

		[Token(Token = "0x400092C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Transform[] eyes;

		[Token(Token = "0x1700013A")]
		public virtual bool isFilled
		{
			[Token(Token = "0x6000A61")]
			[Address(RVA = "0x2D38DB4", Offset = "0x2D38DB4", VA = "0x2D38DB4", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700013B")]
		public bool isEmpty
		{
			[Token(Token = "0x6000A62")]
			[Address(RVA = "0x2D391A0", Offset = "0x2D391A0", VA = "0x2D391A0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000A63")]
		[Address(RVA = "0x2D391B0", Offset = "0x2D391B0", VA = "0x2D391B0", Slot = "5")]
		public virtual bool IsEmpty(bool includeRoot)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A64")]
		[Address(RVA = "0x2D395DC", Offset = "0x2D395DC", VA = "0x2D395DC", Slot = "6")]
		public virtual bool Contains(Transform t, bool ignoreRoot = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A65")]
		[Address(RVA = "0x2D39A14", Offset = "0x2D39A14", VA = "0x2D39A14")]
		public static bool AutoDetectReferences(ref BipedReferences references, Transform root, AutoDetectParams autoDetectParams)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A66")]
		[Address(RVA = "0x2D3A120", Offset = "0x2D3A120", VA = "0x2D3A120")]
		public static void DetectReferencesByNaming(ref BipedReferences references, Transform root, AutoDetectParams autoDetectParams)
		{
		}

		[Token(Token = "0x6000A67")]
		[Address(RVA = "0x2D39C90", Offset = "0x2D39C90", VA = "0x2D39C90")]
		public static void AssignHumanoidReferences(ref BipedReferences references, Animator animator, AutoDetectParams autoDetectParams)
		{
		}

		[Token(Token = "0x6000A68")]
		[Address(RVA = "0x2D3A954", Offset = "0x2D3A954", VA = "0x2D3A954")]
		public static bool SetupError(BipedReferences references, ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A69")]
		[Address(RVA = "0x2D3AA54", Offset = "0x2D3AA54", VA = "0x2D3AA54")]
		public static bool SetupWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A6A")]
		[Address(RVA = "0x2D3B008", Offset = "0x2D3B008", VA = "0x2D3B008")]
		private static bool IsNeckBone(Transform bone, Transform leftUpperArm)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0x2D3ADF8", Offset = "0x2D3ADF8", VA = "0x2D3ADF8")]
		private static bool AddBoneToEyes(Transform bone, ref BipedReferences references, AutoDetectParams autoDetectParams)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0x2D3AC70", Offset = "0x2D3AC70", VA = "0x2D3AC70")]
		private static bool AddBoneToSpine(Transform bone, ref BipedReferences references, AutoDetectParams autoDetectParams)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0x2D3AAF4", Offset = "0x2D3AAF4", VA = "0x2D3AAF4")]
		private static void DetectLimb(BipedNaming.BoneType boneType, BipedNaming.BoneSide boneSide, ref Transform firstBone, ref Transform secondBone, ref Transform lastBone, Transform[] transforms)
		{
		}

		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0x2D3AEFC", Offset = "0x2D3AEFC", VA = "0x2D3AEFC")]
		private static void AddBoneToHierarchy(ref Transform[] bones, Transform transform)
		{
		}

		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0x2D3B104", Offset = "0x2D3B104", VA = "0x2D3B104")]
		private static bool LimbError(Transform bone1, Transform bone2, Transform bone3, ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A70")]
		[Address(RVA = "0x2D3BC68", Offset = "0x2D3BC68", VA = "0x2D3BC68")]
		private static bool LimbWarning(Transform bone1, Transform bone2, Transform bone3, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A71")]
		[Address(RVA = "0x2D3B734", Offset = "0x2D3B734", VA = "0x2D3B734")]
		private static bool SpineError(BipedReferences references, ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A72")]
		[Address(RVA = "0x2D3BFB0", Offset = "0x2D3BFB0", VA = "0x2D3BFB0")]
		private static bool SpineWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A73")]
		[Address(RVA = "0x2D3BA80", Offset = "0x2D3BA80", VA = "0x2D3BA80")]
		private static bool EyesError(BipedReferences references, ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A74")]
		[Address(RVA = "0x2D3BFB8", Offset = "0x2D3BFB8", VA = "0x2D3BFB8")]
		private static bool EyesWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A75")]
		[Address(RVA = "0x2D3BFC0", Offset = "0x2D3BFC0", VA = "0x2D3BFC0")]
		private static bool RootHeightWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A76")]
		[Address(RVA = "0x2D3C18C", Offset = "0x2D3C18C", VA = "0x2D3C18C")]
		private static bool FacingAxisWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A77")]
		[Address(RVA = "0x2D3C3B0", Offset = "0x2D3C3B0", VA = "0x2D3C3B0")]
		private static float GetVerticalOffset(Vector3 p1, Vector3 p2, Quaternion rotation)
		{
			return default(float);
		}

		[Token(Token = "0x6000A78")]
		[Address(RVA = "0x2D39C08", Offset = "0x2D39C08", VA = "0x2D39C08")]
		public BipedReferences()
		{
		}
	}
	[Token(Token = "0x2000158")]
	public class Comments : MonoBehaviour
	{
		[Token(Token = "0x400092D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Multiline]
		public string text;

		[Token(Token = "0x6000A79")]
		[Address(RVA = "0x2D3D49C", Offset = "0x2D3D49C", VA = "0x2D3D49C")]
		public Comments()
		{
		}
	}
	[Token(Token = "0x2000159")]
	public class DemoGUIMessage : MonoBehaviour
	{
		[Token(Token = "0x400092E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string text;

		[Token(Token = "0x400092F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEngine.Color color;

		[Token(Token = "0x6000A7A")]
		[Address(RVA = "0x2D3D4A4", Offset = "0x2D3D4A4", VA = "0x2D3D4A4")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000A7B")]
		[Address(RVA = "0x2D3D5E4", Offset = "0x2D3D5E4", VA = "0x2D3D5E4")]
		public DemoGUIMessage()
		{
		}
	}
	[Token(Token = "0x200015A")]
	public class Hierarchy
	{
		[Token(Token = "0x6000A7C")]
		[Address(RVA = "0x2892C98", Offset = "0x2892C98", VA = "0x2892C98")]
		public static bool HierarchyIsValid(Transform[] bones)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A7D")]
		[Address(RVA = "0x2892E98", Offset = "0x2892E98", VA = "0x2892E98")]
		public static UnityEngine.Object ContainsDuplicate(UnityEngine.Object[] objects)
		{
			return null;
		}

		[Token(Token = "0x6000A7E")]
		[Address(RVA = "0x2892D30", Offset = "0x2892D30", VA = "0x2892D30")]
		public static bool IsAncestor(Transform transform, Transform ancestor)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A7F")]
		[Address(RVA = "0x2892FBC", Offset = "0x2892FBC", VA = "0x2892FBC")]
		public static bool ContainsChild(Transform transform, Transform child)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A80")]
		[Address(RVA = "0x28930E0", Offset = "0x28930E0", VA = "0x28930E0")]
		public static void AddAncestors(Transform transform, Transform blocker, ref Transform[] array)
		{
		}

		[Token(Token = "0x6000A81")]
		[Address(RVA = "0x2893390", Offset = "0x2893390", VA = "0x2893390")]
		public static Transform GetAncestor(Transform transform, int minChildCount)
		{
			return null;
		}

		[Token(Token = "0x6000A82")]
		[Address(RVA = "0x28934AC", Offset = "0x28934AC", VA = "0x28934AC")]
		public static Transform GetFirstCommonAncestor(Transform t1, Transform t2)
		{
			return null;
		}

		[Token(Token = "0x6000A83")]
		[Address(RVA = "0x2893634", Offset = "0x2893634", VA = "0x2893634")]
		public static Transform GetFirstCommonAncestor(Transform[] transforms)
		{
			return null;
		}

		[Token(Token = "0x6000A84")]
		[Address(RVA = "0x28939C8", Offset = "0x28939C8", VA = "0x28939C8")]
		public static Transform GetFirstCommonAncestorRecursive(Transform transform, Transform[] transforms)
		{
			return null;
		}

		[Token(Token = "0x6000A85")]
		[Address(RVA = "0x28937B4", Offset = "0x28937B4", VA = "0x28937B4")]
		public static bool IsCommonAncestor(Transform transform, Transform[] transforms)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A86")]
		[Address(RVA = "0x2893B68", Offset = "0x2893B68", VA = "0x2893B68")]
		public Hierarchy()
		{
		}
	}
	[Token(Token = "0x200015B")]
	public class InspectorComment : PropertyAttribute
	{
		[Token(Token = "0x4000930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string color;

		[Token(Token = "0x6000A87")]
		[Address(RVA = "0x2894970", Offset = "0x2894970", VA = "0x2894970")]
		public InspectorComment(string name)
		{
		}

		[Token(Token = "0x6000A88")]
		[Address(RVA = "0x2894A00", Offset = "0x2894A00", VA = "0x2894A00")]
		public InspectorComment(string name, string color)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200015C")]
	public enum InterpolationMode
	{
		[Token(Token = "0x4000933")]
		None,
		[Token(Token = "0x4000934")]
		InOutCubic,
		[Token(Token = "0x4000935")]
		InOutQuintic,
		[Token(Token = "0x4000936")]
		InOutSine,
		[Token(Token = "0x4000937")]
		InQuintic,
		[Token(Token = "0x4000938")]
		InQuartic,
		[Token(Token = "0x4000939")]
		InCubic,
		[Token(Token = "0x400093A")]
		InQuadratic,
		[Token(Token = "0x400093B")]
		InElastic,
		[Token(Token = "0x400093C")]
		InElasticSmall,
		[Token(Token = "0x400093D")]
		InElasticBig,
		[Token(Token = "0x400093E")]
		InSine,
		[Token(Token = "0x400093F")]
		InBack,
		[Token(Token = "0x4000940")]
		OutQuintic,
		[Token(Token = "0x4000941")]
		OutQuartic,
		[Token(Token = "0x4000942")]
		OutCubic,
		[Token(Token = "0x4000943")]
		OutInCubic,
		[Token(Token = "0x4000944")]
		OutInQuartic,
		[Token(Token = "0x4000945")]
		OutElastic,
		[Token(Token = "0x4000946")]
		OutElasticSmall,
		[Token(Token = "0x4000947")]
		OutElasticBig,
		[Token(Token = "0x4000948")]
		OutSine,
		[Token(Token = "0x4000949")]
		OutBack,
		[Token(Token = "0x400094A")]
		OutBackCubic,
		[Token(Token = "0x400094B")]
		OutBackQuartic,
		[Token(Token = "0x400094C")]
		BackInCubic,
		[Token(Token = "0x400094D")]
		BackInQuartic
	}
	[Token(Token = "0x200015D")]
	public class Interp
	{
		[Token(Token = "0x6000A89")]
		[Address(RVA = "0x2894A94", Offset = "0x2894A94", VA = "0x2894A94")]
		public static float Float(float t, InterpolationMode mode)
		{
			return default(float);
		}

		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0x28954FC", Offset = "0x28954FC", VA = "0x28954FC")]
		public static Vector3 V3(Vector3 v1, Vector3 v2, float t, InterpolationMode mode)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A8B")]
		[Address(RVA = "0x2895604", Offset = "0x2895604", VA = "0x2895604")]
		public static float LerpValue(float value, float target, float increaseSpeed, float decreaseSpeed)
		{
			return default(float);
		}

		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0x2894E00", Offset = "0x2894E00", VA = "0x2894E00")]
		private static float None(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0x2894E0C", Offset = "0x2894E0C", VA = "0x2894E0C")]
		private static float InOutCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0x2894E30", Offset = "0x2894E30", VA = "0x2894E30")]
		private static float InOutQuintic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000A8F")]
		[Address(RVA = "0x2894E6C", Offset = "0x2894E6C", VA = "0x2894E6C")]
		private static float InQuintic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000A90")]
		[Address(RVA = "0x2894E84", Offset = "0x2894E84", VA = "0x2894E84")]
		private static float InQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000A91")]
		[Address(RVA = "0x2894E98", Offset = "0x2894E98", VA = "0x2894E98")]
		private static float InCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000A92")]
		[Address(RVA = "0x2894EAC", Offset = "0x2894EAC", VA = "0x2894EAC")]
		private static float InQuadratic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000A93")]
		[Address(RVA = "0x2894EBC", Offset = "0x2894EBC", VA = "0x2894EBC")]
		private static float OutQuintic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000A94")]
		[Address(RVA = "0x2894F04", Offset = "0x2894F04", VA = "0x2894F04")]
		private static float OutQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000A95")]
		[Address(RVA = "0x2894F3C", Offset = "0x2894F3C", VA = "0x2894F3C")]
		private static float OutCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000A96")]
		[Address(RVA = "0x2894F64", Offset = "0x2894F64", VA = "0x2894F64")]
		private static float OutInCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000A97")]
		[Address(RVA = "0x2895700", Offset = "0x2895700", VA = "0x2895700")]
		private static float OutInQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000A98")]
		[Address(RVA = "0x2894F98", Offset = "0x2894F98", VA = "0x2894F98")]
		private static float BackInCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000A99")]
		[Address(RVA = "0x2894FC0", Offset = "0x2894FC0", VA = "0x2894FC0")]
		private static float BackInQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0x2894FF0", Offset = "0x2894FF0", VA = "0x2894FF0")]
		private static float OutBackCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0x2895024", Offset = "0x2895024", VA = "0x2895024")]
		private static float OutBackQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0x2895068", Offset = "0x2895068", VA = "0x2895068")]
		private static float OutElasticSmall(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0x28950CC", Offset = "0x28950CC", VA = "0x28950CC")]
		private static float OutElasticBig(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0x2895130", Offset = "0x2895130", VA = "0x2895130")]
		private static float InElasticSmall(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0x2895184", Offset = "0x2895184", VA = "0x2895184")]
		private static float InElasticBig(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0x28951D8", Offset = "0x28951D8", VA = "0x28951D8")]
		private static float InSine(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0x2895270", Offset = "0x2895270", VA = "0x2895270")]
		private static float OutSine(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0x2895304", Offset = "0x2895304", VA = "0x2895304")]
		private static float InOutSine(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0x2895734", Offset = "0x2895734", VA = "0x2895734")]
		private static float InElastic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0x28953A8", Offset = "0x28953A8", VA = "0x28953A8")]
		private static float OutElastic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0x289548C", Offset = "0x289548C", VA = "0x289548C")]
		private static float InBack(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0x28954BC", Offset = "0x28954BC", VA = "0x28954BC")]
		private static float OutBack(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0x289581C", Offset = "0x289581C", VA = "0x289581C")]
		public Interp()
		{
		}
	}
	[Token(Token = "0x200015E")]
	public class LargeHeader : PropertyAttribute
	{
		[Token(Token = "0x400094E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x400094F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string color;

		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0x2895824", Offset = "0x2895824", VA = "0x2895824")]
		public LargeHeader(string name)
		{
		}

		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0x28958B4", Offset = "0x28958B4", VA = "0x28958B4")]
		public LargeHeader(string name, string color)
		{
		}
	}
	[Token(Token = "0x200015F")]
	public static class LayerMaskExtensions
	{
		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0x2895948", Offset = "0x2895948", VA = "0x2895948")]
		public static bool Contains(LayerMask mask, int layer)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0x28959A0", Offset = "0x28959A0", VA = "0x28959A0")]
		public static LayerMask Create(params string[] layerNames)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0x2895A6C", Offset = "0x2895A6C", VA = "0x2895A6C")]
		public static LayerMask Create(params int[] layerNumbers)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0x28959B8", Offset = "0x28959B8", VA = "0x28959B8")]
		public static LayerMask NamesToMask(params string[] layerNames)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0x2895A84", Offset = "0x2895A84", VA = "0x2895A84")]
		public static LayerMask LayerNumbersToMask(params int[] layerNumbers)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0x2895B28", Offset = "0x2895B28", VA = "0x2895B28")]
		public static LayerMask Inverse(this LayerMask original)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0x2895B54", Offset = "0x2895B54", VA = "0x2895B54")]
		public static LayerMask AddToMask(this LayerMask original, params string[] layerNames)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0x2895BA4", Offset = "0x2895BA4", VA = "0x2895BA4")]
		public static LayerMask RemoveFromMask(this LayerMask original, params string[] layerNames)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0x2895C10", Offset = "0x2895C10", VA = "0x2895C10")]
		public static string[] MaskToNames(this LayerMask original)
		{
			return null;
		}

		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0x2895D04", Offset = "0x2895D04", VA = "0x2895D04")]
		public static int[] MaskToNumbers(this LayerMask original)
		{
			return null;
		}

		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0x2895DDC", Offset = "0x2895DDC", VA = "0x2895DDC")]
		public static string MaskToString(this LayerMask original)
		{
			return null;
		}

		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0x2895E3C", Offset = "0x2895E3C", VA = "0x2895E3C")]
		public static string MaskToString(this LayerMask original, string delimiter)
		{
			return null;
		}
	}
	[Token(Token = "0x2000160")]
	public static class QuaTools
	{
		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0x2895E6C", Offset = "0x2895E6C", VA = "0x2895E6C")]
		public static float GetYaw(Quaternion space, Vector3 forward)
		{
			return default(float);
		}

		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0x2895F70", Offset = "0x2895F70", VA = "0x2895F70")]
		public static float GetPitch(Quaternion space, Vector3 forward)
		{
			return default(float);
		}

		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0x2896070", Offset = "0x2896070", VA = "0x2896070")]
		public static float GetBank(Quaternion space, Vector3 forward, Vector3 up)
		{
			return default(float);
		}

		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0x289626C", Offset = "0x289626C", VA = "0x289626C")]
		public static float GetYaw(Quaternion space, Quaternion rotation)
		{
			return default(float);
		}

		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0x28963E0", Offset = "0x28963E0", VA = "0x28963E0")]
		public static float GetPitch(Quaternion space, Quaternion rotation)
		{
			return default(float);
		}

		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0x289654C", Offset = "0x289654C", VA = "0x289654C")]
		public static float GetBank(Quaternion space, Quaternion rotation)
		{
			return default(float);
		}

		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0x28967A8", Offset = "0x28967A8", VA = "0x28967A8")]
		public static Quaternion Lerp(Quaternion fromRotation, Quaternion toRotation, float weight)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0x28968F4", Offset = "0x28968F4", VA = "0x28968F4")]
		public static Quaternion Slerp(Quaternion fromRotation, Quaternion toRotation, float weight)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0x2896A40", Offset = "0x2896A40", VA = "0x2896A40")]
		public static Quaternion LinearBlend(Quaternion q, float weight)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0x2896B54", Offset = "0x2896B54", VA = "0x2896B54")]
		public static Quaternion SphericalBlend(Quaternion q, float weight)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0x2896C68", Offset = "0x2896C68", VA = "0x2896C68")]
		public static Quaternion FromToAroundAxis(Vector3 fromDirection, Vector3 toDirection, Vector3 axis)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0x2896DF4", Offset = "0x2896DF4", VA = "0x2896DF4")]
		public static Quaternion RotationToLocalSpace(Quaternion space, Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0x2896EC4", Offset = "0x2896EC4", VA = "0x2896EC4")]
		public static Quaternion FromToRotation(Quaternion from, Quaternion to)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0x2897018", Offset = "0x2897018", VA = "0x2897018")]
		public static Vector3 GetAxis(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0x289729C", Offset = "0x289729C", VA = "0x289729C")]
		public static Quaternion ClampRotation(Quaternion rotation, float clampWeight, int clampSmoothing)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0x28974B0", Offset = "0x28974B0", VA = "0x28974B0")]
		public static float ClampAngle(float angle, float clampWeight, int clampSmoothing)
		{
			return default(float);
		}

		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0x288EAE0", Offset = "0x288EAE0", VA = "0x288EAE0")]
		public static Quaternion MatchRotation(Quaternion targetRotation, Vector3 targetforwardAxis, Vector3 targetUpAxis, Vector3 forwardAxis, Vector3 upAxis)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0x2897630", Offset = "0x2897630", VA = "0x2897630")]
		public static Vector3 ToBiPolar(Vector3 euler)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0x2897740", Offset = "0x2897740", VA = "0x2897740")]
		public static float ToBiPolar(float angle)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000161")]
	public abstract class Singleton<T> : MonoBehaviour where T : Singleton<T>
	{
		[Token(Token = "0x4000950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T sInstance;

		[Token(Token = "0x1700013C")]
		public static T instance
		{
			[Token(Token = "0x6000AC9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ACA")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000ACB")]
		protected Singleton()
		{
		}
	}
	[Token(Token = "0x2000162")]
	public class SolverManager : MonoBehaviour
	{
		[Token(Token = "0x4000951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146E1CC", Offset = "0x146E1CC")]
		public bool fixTransforms;

		[Token(Token = "0x4000952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator animator;

		[Token(Token = "0x4000953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Animation legacy;

		[Token(Token = "0x4000954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool updateFrame;

		[Token(Token = "0x4000955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool componentInitiated;

		[Token(Token = "0x4000956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool skipSolverUpdate;

		[Token(Token = "0x1700013D")]
		private bool animatePhysics
		{
			[Token(Token = "0x6000AD3")]
			[Address(RVA = "0x28978D4", Offset = "0x28978D4", VA = "0x28978D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700013E")]
		private bool isAnimated
		{
			[Token(Token = "0x6000AD7")]
			[Address(RVA = "0x2897C08", Offset = "0x2897C08", VA = "0x2897C08")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0x289779C", Offset = "0x289779C", VA = "0x289779C")]
		public void Disable()
		{
		}

		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0x2897834", Offset = "0x2897834", VA = "0x2897834", Slot = "4")]
		protected virtual void InitiateSolver()
		{
		}

		[Token(Token = "0x6000ACF")]
		[Address(RVA = "0x2897838", Offset = "0x2897838", VA = "0x2897838", Slot = "5")]
		protected virtual void UpdateSolver()
		{
		}

		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0x289783C", Offset = "0x289783C", VA = "0x289783C", Slot = "6")]
		protected virtual void FixTransforms()
		{
		}

		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0x2897840", Offset = "0x2897840", VA = "0x2897840")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0x28978D0", Offset = "0x28978D0", VA = "0x28978D0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0x2897878", Offset = "0x2897878", VA = "0x2897878")]
		private void Initiate()
		{
		}

		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0x2897BBC", Offset = "0x2897BBC", VA = "0x2897BBC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0x28979C4", Offset = "0x28979C4", VA = "0x28979C4")]
		private void FindAnimatorRecursive(Transform t, bool findInChildren)
		{
		}

		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0x2897CC4", Offset = "0x2897CC4", VA = "0x2897CC4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0x2897D20", Offset = "0x2897D20", VA = "0x2897D20")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0x2897D7C", Offset = "0x2897D7C", VA = "0x2897D7C")]
		public void UpdateSolverExternal()
		{
		}

		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0x2897DC4", Offset = "0x2897DC4", VA = "0x2897DC4")]
		public SolverManager()
		{
		}
	}
	[Token(Token = "0x2000163")]
	public class TriggerEventBroadcaster : MonoBehaviour
	{
		[Token(Token = "0x4000957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject target;

		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0x2897E44", Offset = "0x2897E44", VA = "0x2897E44")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0x2897EFC", Offset = "0x2897EFC", VA = "0x2897EFC")]
		private void OnTriggerStay(Collider collider)
		{
		}

		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0x2897FB4", Offset = "0x2897FB4", VA = "0x2897FB4")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0x289806C", Offset = "0x289806C", VA = "0x289806C")]
		public TriggerEventBroadcaster()
		{
		}
	}
	[Token(Token = "0x2000164")]
	public static class V2Tools
	{
		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0x2898074", Offset = "0x2898074", VA = "0x2898074")]
		public static Vector2 XZ(Vector3 v)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0x28980A4", Offset = "0x28980A4", VA = "0x28980A4")]
		public static float DeltaAngle(Vector2 dir1, Vector2 dir2)
		{
			return default(float);
		}

		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0x2898150", Offset = "0x2898150", VA = "0x2898150")]
		public static float DeltaAngleXZ(Vector3 dir1, Vector3 dir2)
		{
			return default(float);
		}

		[Token(Token = "0x6000AE3")]
		[Address(RVA = "0x28981FC", Offset = "0x28981FC", VA = "0x28981FC")]
		public static bool LineCircleIntersect(Vector2 p1, Vector2 p2, Vector2 c, float r)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AE4")]
		[Address(RVA = "0x28983CC", Offset = "0x28983CC", VA = "0x28983CC")]
		public static bool RayCircleIntersect(Vector2 p1, Vector2 dir, Vector2 c, float r)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000165")]
	public static class V3Tools
	{
		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0x2898534", Offset = "0x2898534", VA = "0x2898534")]
		public static float GetYaw(Vector3 forward)
		{
			return default(float);
		}

		[Token(Token = "0x6000AE6")]
		[Address(RVA = "0x28985B8", Offset = "0x28985B8", VA = "0x28985B8")]
		public static float GetPitch(Vector3 forward)
		{
			return default(float);
		}

		[Token(Token = "0x6000AE7")]
		[Address(RVA = "0x2898658", Offset = "0x2898658", VA = "0x2898658")]
		public static float GetBank(Vector3 forward, Vector3 up)
		{
			return default(float);
		}

		[Token(Token = "0x6000AE8")]
		[Address(RVA = "0x289879C", Offset = "0x289879C", VA = "0x289879C")]
		public static float GetYaw(Vector3 spaceForward, Vector3 spaceUp, Vector3 forward)
		{
			return default(float);
		}

		[Token(Token = "0x6000AE9")]
		[Address(RVA = "0x28988BC", Offset = "0x28988BC", VA = "0x28988BC")]
		public static float GetPitch(Vector3 spaceForward, Vector3 spaceUp, Vector3 forward)
		{
			return default(float);
		}

		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0x28989D4", Offset = "0x28989D4", VA = "0x28989D4")]
		public static float GetBank(Vector3 spaceForward, Vector3 spaceUp, Vector3 forward, Vector3 up)
		{
			return default(float);
		}

		[Token(Token = "0x6000AEB")]
		[Address(RVA = "0x2898B98", Offset = "0x2898B98", VA = "0x2898B98")]
		public static Vector3 Lerp(Vector3 fromVector, Vector3 toVector, float weight)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0x2898C90", Offset = "0x2898C90", VA = "0x2898C90")]
		public static Vector3 Slerp(Vector3 fromVector, Vector3 toVector, float weight)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000AED")]
		[Address(RVA = "0x2898D88", Offset = "0x2898D88", VA = "0x2898D88")]
		public static Vector3 ExtractVertical(Vector3 v, Vector3 verticalAxis, float weight)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0x2898E80", Offset = "0x2898E80", VA = "0x2898E80")]
		public static Vector3 ExtractHorizontal(Vector3 v, Vector3 normal, float weight)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0x2898F80", Offset = "0x2898F80", VA = "0x2898F80")]
		public static Vector3 ClampDirection(Vector3 direction, Vector3 normalDirection, float clampWeight, int clampSmoothing)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0x28991A4", Offset = "0x28991A4", VA = "0x28991A4")]
		public static Vector3 ClampDirection(Vector3 direction, Vector3 normalDirection, float clampWeight, int clampSmoothing, out bool changed)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0x28993E0", Offset = "0x28993E0", VA = "0x28993E0")]
		public static Vector3 ClampDirection(Vector3 direction, Vector3 normalDirection, float clampWeight, int clampSmoothing, out float clampValue)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0x2899630", Offset = "0x2899630", VA = "0x2899630")]
		public static Vector3 LineToPlane(Vector3 origin, Vector3 direction, Vector3 planeNormal, Vector3 planePoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0x2899830", Offset = "0x2899830", VA = "0x2899830")]
		public static Vector3 PointToPlane(Vector3 point, Vector3 planePosition, Vector3 planeNormal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0x2899A0C", Offset = "0x2899A0C", VA = "0x2899A0C")]
		public static Vector3 TransformPointUnscaled(Transform t, Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0x2899B40", Offset = "0x2899B40", VA = "0x2899B40")]
		public static Vector3 InverseTransformPointUnscaled(Transform t, Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0x2899C98", Offset = "0x2899C98", VA = "0x2899C98")]
		public static Vector3 InverseTransformPoint(Vector3 tPos, Quaternion tRot, Vector3 tScale, Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0x2899E24", Offset = "0x2899E24", VA = "0x2899E24")]
		public static Vector3 TransformPoint(Vector3 tPos, Quaternion tRot, Vector3 tScale, Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0x2899DE4", Offset = "0x2899DE4", VA = "0x2899DE4")]
		public static Vector3 Div(Vector3 v1, Vector3 v2)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x2000166")]
	public static class Warning
	{
		[Token(Token = "0x200055C")]
		public delegate void Logger(string message);

		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool logged;

		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0x2899F60", Offset = "0x2899F60", VA = "0x2899F60")]
		public static void Log(string message, Logger logger, bool logInEditMode = false)
		{
		}

		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0x289A38C", Offset = "0x289A38C", VA = "0x289A38C")]
		public static void Log(string message, Transform context, bool logInEditMode = false)
		{
		}
	}
}
namespace RootMotion.FinalIK
{
	[Token(Token = "0x2000167")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x1466244", Offset = "0x1466244")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1466244", Offset = "0x1466244")]
	public class BipedIK : SolverManager
	{
		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BipedReferences references;

		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public BipedIKSolvers solvers;

		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0x266E204", Offset = "0x266E204", VA = "0x266E204")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1480B90", Offset = "0x1480B90")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0x266E250", Offset = "0x266E250", VA = "0x266E250")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1480BC8", Offset = "0x1480BC8")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0x266E29C", Offset = "0x266E29C", VA = "0x266E29C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1480C00", Offset = "0x1480C00")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0x266E2E8", Offset = "0x266E2E8", VA = "0x266E2E8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1480C38", Offset = "0x1480C38")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0x266E334", Offset = "0x266E334", VA = "0x266E334")]
		public float GetIKPositionWeight(AvatarIKGoal goal)
		{
			return default(float);
		}

		[Token(Token = "0x6000B00")]
		[Address(RVA = "0x266E3D0", Offset = "0x266E3D0", VA = "0x266E3D0")]
		public float GetIKRotationWeight(AvatarIKGoal goal)
		{
			return default(float);
		}

		[Token(Token = "0x6000B01")]
		[Address(RVA = "0x266E3F0", Offset = "0x266E3F0", VA = "0x266E3F0")]
		public void SetIKPositionWeight(AvatarIKGoal goal, float weight)
		{
		}

		[Token(Token = "0x6000B02")]
		[Address(RVA = "0x266E420", Offset = "0x266E420", VA = "0x266E420")]
		public void SetIKRotationWeight(AvatarIKGoal goal, float weight)
		{
		}

		[Token(Token = "0x6000B03")]
		[Address(RVA = "0x266E450", Offset = "0x266E450", VA = "0x266E450")]
		public void SetIKPosition(AvatarIKGoal goal, Vector3 IKPosition)
		{
		}

		[Token(Token = "0x6000B04")]
		[Address(RVA = "0x266E490", Offset = "0x266E490", VA = "0x266E490")]
		public void SetIKRotation(AvatarIKGoal goal, Quaternion IKRotation)
		{
		}

		[Token(Token = "0x6000B05")]
		[Address(RVA = "0x266E4D4", Offset = "0x266E4D4", VA = "0x266E4D4")]
		public Vector3 GetIKPosition(AvatarIKGoal goal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B06")]
		[Address(RVA = "0x266E4F8", Offset = "0x266E4F8", VA = "0x266E4F8")]
		public Quaternion GetIKRotation(AvatarIKGoal goal)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000B07")]
		[Address(RVA = "0x266E51C", Offset = "0x266E51C", VA = "0x266E51C")]
		public void SetLookAtWeight(float weight, float bodyWeight, float headWeight, float eyesWeight, float clampWeight, float clampWeightHead, float clampWeightEyes)
		{
		}

		[Token(Token = "0x6000B08")]
		[Address(RVA = "0x266E544", Offset = "0x266E544", VA = "0x266E544")]
		public void SetLookAtPosition(Vector3 lookAtPosition)
		{
		}

		[Token(Token = "0x6000B09")]
		[Address(RVA = "0x266E570", Offset = "0x266E570", VA = "0x266E570")]
		public void SetSpinePosition(Vector3 spinePosition)
		{
		}

		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0x266E59C", Offset = "0x266E59C", VA = "0x266E59C")]
		public void SetSpineWeight(float weight)
		{
		}

		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0x266E354", Offset = "0x266E354", VA = "0x266E354")]
		public IKSolverLimb GetGoalIK(AvatarIKGoal goal)
		{
			return null;
		}

		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0x266E5C4", Offset = "0x266E5C4", VA = "0x266E5C4")]
		public void InitiateBipedIK()
		{
		}

		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0x266E5D0", Offset = "0x266E5D0", VA = "0x266E5D0")]
		public void UpdateBipedIK()
		{
		}

		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0x266E5DC", Offset = "0x266E5DC", VA = "0x266E5DC")]
		public void SetToDefaults()
		{
		}

		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0x266E904", Offset = "0x266E904", VA = "0x266E904", Slot = "6")]
		protected override void FixTransforms()
		{
		}

		[Token(Token = "0x6000B10")]
		[Address(RVA = "0x266E9AC", Offset = "0x266E9AC", VA = "0x266E9AC", Slot = "4")]
		protected override void InitiateSolver()
		{
		}

		[Token(Token = "0x6000B11")]
		[Address(RVA = "0x266ECF8", Offset = "0x266ECF8", VA = "0x266ECF8", Slot = "5")]
		protected override void UpdateSolver()
		{
		}

		[Token(Token = "0x6000B12")]
		[Address(RVA = "0x266F1E0", Offset = "0x266F1E0", VA = "0x266F1E0")]
		public void LogWarning(string message)
		{
		}

		[Token(Token = "0x6000B13")]
		[Address(RVA = "0x266F214", Offset = "0x266F214", VA = "0x266F214")]
		public BipedIK()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000168")]
	public class BipedIKSolvers
	{
		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IKSolverLimb leftFoot;

		[Token(Token = "0x400095C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IKSolverLimb rightFoot;

		[Token(Token = "0x400095D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IKSolverLimb leftHand;

		[Token(Token = "0x400095E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IKSolverLimb rightHand;

		[Token(Token = "0x400095F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IKSolverFABRIK spine;

		[Token(Token = "0x4000960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverLookAt lookAt;

		[Token(Token = "0x4000961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IKSolverAim aim;

		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Constraints pelvis;

		[Token(Token = "0x4000963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private IKSolverLimb[] _limbs;

		[Token(Token = "0x4000964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private IKSolver[] _ikSolvers;

		[Token(Token = "0x1700013F")]
		public IKSolverLimb[] limbs
		{
			[Token(Token = "0x6000B14")]
			[Address(RVA = "0x266E77C", Offset = "0x266E77C", VA = "0x266E77C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000140")]
		public IKSolver[] ikSolvers
		{
			[Token(Token = "0x6000B15")]
			[Address(RVA = "0x266F458", Offset = "0x266F458", VA = "0x266F458")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B16")]
		[Address(RVA = "0x266EB7C", Offset = "0x266EB7C", VA = "0x266EB7C")]
		public void AssignReferences(BipedReferences references)
		{
		}

		[Token(Token = "0x6000B17")]
		[Address(RVA = "0x266F2B0", Offset = "0x266F2B0", VA = "0x266F2B0")]
		public BipedIKSolvers()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000169")]
	public abstract class Constraint
	{
		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float weight;

		[Token(Token = "0x17000141")]
		public bool isValid
		{
			[Token(Token = "0x6000B18")]
			[Address(RVA = "0x2672C40", Offset = "0x2672C40", VA = "0x2672C40")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000B19")]
		public abstract void UpdateConstraint();

		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0x2672CB0", Offset = "0x2672CB0", VA = "0x2672CB0")]
		protected Constraint()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200016A")]
	public class ConstraintPosition : Constraint
	{
		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 position;

		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0x2672CB8", Offset = "0x2672CB8", VA = "0x2672CB8", Slot = "4")]
		public override void UpdateConstraint()
		{
		}

		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0x2672DC4", Offset = "0x2672DC4", VA = "0x2672DC4")]
		public ConstraintPosition()
		{
		}

		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0x2672DCC", Offset = "0x2672DCC", VA = "0x2672DCC")]
		public ConstraintPosition(Transform transform)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200016B")]
	public class ConstraintPositionOffset : Constraint
	{
		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 offset;

		[Token(Token = "0x4000969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 defaultLocalPosition;

		[Token(Token = "0x400096A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 lastLocalPosition;

		[Token(Token = "0x400096B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool initiated;

		[Token(Token = "0x17000142")]
		private bool positionChanged
		{
			[Token(Token = "0x6000B21")]
			[Address(RVA = "0x2672F9C", Offset = "0x2672F9C", VA = "0x2672F9C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0x2672E00", Offset = "0x2672E00", VA = "0x2672E00", Slot = "4")]
		public override void UpdateConstraint()
		{
		}

		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0x2673058", Offset = "0x2673058", VA = "0x2673058")]
		public ConstraintPositionOffset()
		{
		}

		[Token(Token = "0x6000B20")]
		[Address(RVA = "0x2673060", Offset = "0x2673060", VA = "0x2673060")]
		public ConstraintPositionOffset(Transform transform)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200016C")]
	public class ConstraintRotation : Constraint
	{
		[Token(Token = "0x400096C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion rotation;

		[Token(Token = "0x6000B22")]
		[Address(RVA = "0x2673094", Offset = "0x2673094", VA = "0x2673094", Slot = "4")]
		public override void UpdateConstraint()
		{
		}

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0x26731BC", Offset = "0x26731BC", VA = "0x26731BC")]
		public ConstraintRotation()
		{
		}

		[Token(Token = "0x6000B24")]
		[Address(RVA = "0x26731C4", Offset = "0x26731C4", VA = "0x26731C4")]
		public ConstraintRotation(Transform transform)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200016D")]
	public class ConstraintRotationOffset : Constraint
	{
		[Token(Token = "0x400096D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion offset;

		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Quaternion defaultRotation;

		[Token(Token = "0x400096F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion defaultLocalRotation;

		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion lastLocalRotation;

		[Token(Token = "0x4000971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Quaternion defaultTargetLocalRotation;

		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool initiated;

		[Token(Token = "0x17000143")]
		private bool rotationChanged
		{
			[Token(Token = "0x6000B28")]
			[Address(RVA = "0x2673398", Offset = "0x2673398", VA = "0x2673398")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000B25")]
		[Address(RVA = "0x26731F8", Offset = "0x26731F8", VA = "0x26731F8", Slot = "4")]
		public override void UpdateConstraint()
		{
		}

		[Token(Token = "0x6000B26")]
		[Address(RVA = "0x2673468", Offset = "0x2673468", VA = "0x2673468")]
		public ConstraintRotationOffset()
		{
		}

		[Token(Token = "0x6000B27")]
		[Address(RVA = "0x2673470", Offset = "0x2673470", VA = "0x2673470")]
		public ConstraintRotationOffset(Transform transform)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200016E")]
	public class Constraints
	{
		[Token(Token = "0x4000973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 positionOffset;

		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 position;

		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146E204", Offset = "0x146E204")]
		public float positionWeight;

		[Token(Token = "0x4000978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 rotationOffset;

		[Token(Token = "0x4000979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 rotation;

		[Token(Token = "0x400097A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146E21C", Offset = "0x146E21C")]
		public float rotationWeight;

		[Token(Token = "0x6000B29")]
		[Address(RVA = "0x26734A4", Offset = "0x26734A4", VA = "0x26734A4")]
		public bool IsValid()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0x266ECA0", Offset = "0x266ECA0", VA = "0x266ECA0")]
		public void Initiate(Transform transform)
		{
		}

		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0x266EE80", Offset = "0x266EE80", VA = "0x266EE80")]
		public void Update()
		{
		}

		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0x266F688", Offset = "0x266F688", VA = "0x266F688")]
		public Constraints()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200016F")]
	public class Finger
	{
		[Serializable]
		[Token(Token = "0x200055D")]
		public enum DOF
		{
			[Token(Token = "0x40020E8")]
			One,
			[Token(Token = "0x40020E9")]
			Three
		}

		[Token(Token = "0x400097B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146E234", Offset = "0x146E234")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146E234", Offset = "0x146E234")]
		public float weight;

		[Token(Token = "0x400097C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146E288", Offset = "0x146E288")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146E288", Offset = "0x146E288")]
		public float rotationWeight;

		[Token(Token = "0x400097D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146E2DC", Offset = "0x146E2DC")]
		public DOF rotationDOF;

		[Token(Token = "0x400097E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146E314", Offset = "0x146E314")]
		public bool fixBone1Twist;

		[Token(Token = "0x400097F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146E34C", Offset = "0x146E34C")]
		public Transform bone1;

		[Token(Token = "0x4000980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146E384", Offset = "0x146E384")]
		public Transform bone2;

		[Token(Token = "0x4000981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146E3BC", Offset = "0x146E3BC")]
		public Transform bone3;

		[Token(Token = "0x4000982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146E3F4", Offset = "0x146E3F4")]
		public Transform tip;

		[Token(Token = "0x4000983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146E42C", Offset = "0x146E42C")]
		public Transform target;

		[Token(Token = "0x4000984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146E464", Offset = "0x146E464")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x4000985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private IKSolverLimb solver;

		[Token(Token = "0x4000986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion bone3RelativeToTarget;

		[Token(Token = "0x4000987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 bone3DefaultLocalPosition;

		[Token(Token = "0x4000988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Quaternion bone3DefaultLocalRotation;

		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 bone1Axis;

		[Token(Token = "0x400098A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 tipAxis;

		[Token(Token = "0x400098B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Vector3 bone1TwistAxis;

		[Token(Token = "0x400098C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 defaultBendNormal;

		[Token(Token = "0x17000144")]
		public bool initiated
		{
			[Token(Token = "0x6000B2D")]
			[Address(RVA = "0x267B660", Offset = "0x267B660", VA = "0x267B660")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1480C70", Offset = "0x1480C70")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B2E")]
			[Address(RVA = "0x267B668", Offset = "0x267B668", VA = "0x267B668")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1480C80", Offset = "0x1480C80")]
			private set
			{
			}
		}

		[Token(Token = "0x17000145")]
		public Vector3 IKPosition
		{
			[Token(Token = "0x6000B2F")]
			[Address(RVA = "0x267B674", Offset = "0x267B674", VA = "0x267B674")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000B30")]
			[Address(RVA = "0x267B694", Offset = "0x267B694", VA = "0x267B694")]
			set
			{
			}
		}

		[Token(Token = "0x17000146")]
		public Quaternion IKRotation
		{
			[Token(Token = "0x6000B31")]
			[Address(RVA = "0x267B6B4", Offset = "0x267B6B4", VA = "0x267B6B4")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6000B32")]
			[Address(RVA = "0x267B6D4", Offset = "0x267B6D4", VA = "0x267B6D4")]
			set
			{
			}
		}

		[Token(Token = "0x6000B33")]
		[Address(RVA = "0x267B6F4", Offset = "0x267B6F4", VA = "0x267B6F4")]
		public bool IsValid(ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B34")]
		[Address(RVA = "0x267B800", Offset = "0x267B800", VA = "0x267B800")]
		public void Initiate(Transform hand, int index)
		{
		}

		[Token(Token = "0x6000B35")]
		[Address(RVA = "0x267BEB4", Offset = "0x267BEB4", VA = "0x267BEB4")]
		public void FixTransforms()
		{
		}

		[Token(Token = "0x6000B36")]
		[Address(RVA = "0x267BF90", Offset = "0x267BF90", VA = "0x267BF90")]
		public void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000B37")]
		[Address(RVA = "0x267C058", Offset = "0x267C058", VA = "0x267C058")]
		public void Update(float masterWeight)
		{
		}

		[Token(Token = "0x6000B38")]
		[Address(RVA = "0x267C678", Offset = "0x267C678", VA = "0x267C678")]
		public Finger()
		{
		}
	}
	[Token(Token = "0x2000170")]
	public class FingerRig : SolverManager
	{
		[Token(Token = "0x400098D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146E474", Offset = "0x146E474")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146E474", Offset = "0x146E474")]
		public float weight;

		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Finger[] fingers;

		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146E4C8", Offset = "0x146E4C8")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x17000147")]
		public bool initiated
		{
			[Token(Token = "0x6000B39")]
			[Address(RVA = "0x3119BC8", Offset = "0x3119BC8", VA = "0x3119BC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1480C90", Offset = "0x1480C90")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B3A")]
			[Address(RVA = "0x3119BD0", Offset = "0x3119BD0", VA = "0x3119BD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1480CA0", Offset = "0x1480CA0")]
			private set
			{
			}
		}

		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0x3119BDC", Offset = "0x3119BDC", VA = "0x3119BDC")]
		public bool IsValid(ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B3C")]
		[Address(RVA = "0x3119C68", Offset = "0x3119C68", VA = "0x3119C68")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1480CB0", Offset = "0x1480CB0")]
		public void AutoDetect()
		{
		}

		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0x3119FD8", Offset = "0x3119FD8", VA = "0x3119FD8")]
		public void AddFinger(Transform bone1, Transform bone2, Transform bone3, Transform tip, [Optional] Transform target)
		{
		}

		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0x311A198", Offset = "0x311A198", VA = "0x311A198")]
		public void RemoveFinger(int index)
		{
		}

		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0x3119EC8", Offset = "0x3119EC8", VA = "0x3119EC8")]
		private void AddChildrenRecursive(Transform parent, ref Transform[] array)
		{
		}

		[Token(Token = "0x6000B40")]
		[Address(RVA = "0x311A31C", Offset = "0x311A31C", VA = "0x311A31C", Slot = "4")]
		protected override void InitiateSolver()
		{
		}

		[Token(Token = "0x6000B41")]
		[Address(RVA = "0x311A3E4", Offset = "0x311A3E4", VA = "0x311A3E4")]
		public void UpdateFingerSolvers()
		{
		}

		[Token(Token = "0x6000B42")]
		[Address(RVA = "0x311A460", Offset = "0x311A460", VA = "0x311A460")]
		public void FixFingerTransforms()
		{
		}

		[Token(Token = "0x6000B43")]
		[Address(RVA = "0x311A4D8", Offset = "0x311A4D8", VA = "0x311A4D8")]
		public void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000B44")]
		[Address(RVA = "0x311A544", Offset = "0x311A544", VA = "0x311A544", Slot = "5")]
		protected override void UpdateSolver()
		{
		}

		[Token(Token = "0x6000B45")]
		[Address(RVA = "0x311A548", Offset = "0x311A548", VA = "0x311A548", Slot = "6")]
		protected override void FixTransforms()
		{
		}

		[Token(Token = "0x6000B46")]
		[Address(RVA = "0x311A55C", Offset = "0x311A55C", VA = "0x311A55C")]
		public FingerRig()
		{
		}
	}
	[Token(Token = "0x2000171")]
	public abstract class Grounder : MonoBehaviour
	{
		[Token(Token = "0x200055E")]
		public delegate void GrounderDelegate();

		[Token(Token = "0x4000990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146E4D8", Offset = "0x146E4D8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146E4D8", Offset = "0x146E4D8")]
		public float weight;

		[Token(Token = "0x4000991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146E52C", Offset = "0x146E52C")]
		public Grounding solver;

		[Token(Token = "0x4000992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GrounderDelegate OnPreGrounder;

		[Token(Token = "0x4000993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GrounderDelegate OnPostGrounder;

		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146E564", Offset = "0x146E564")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x17000148")]
		public bool initiated
		{
			[Token(Token = "0x6000B48")]
			[Address(RVA = "0x311B634", Offset = "0x311B634", VA = "0x311B634")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1480CE8", Offset = "0x1480CE8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B49")]
			[Address(RVA = "0x311B63C", Offset = "0x311B63C", VA = "0x311B63C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1480CF8", Offset = "0x1480CF8")]
			protected set
			{
			}
		}

		[Token(Token = "0x6000B47")]
		public abstract void ResetPosition();

		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0x311B648", Offset = "0x311B648", VA = "0x311B648")]
		protected Vector3 GetSpineOffsetTarget()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0x311B91C", Offset = "0x311B91C", VA = "0x311B91C")]
		protected void LogWarning(string message)
		{
		}

		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0x311B78C", Offset = "0x311B78C", VA = "0x311B78C")]
		private Vector3 GetLegSpineBendVector(Grounding.Leg leg)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0x311B950", Offset = "0x311B950", VA = "0x311B950")]
		private Vector3 GetLegSpineTangent(Grounding.Leg leg)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B4E")]
		protected abstract void OpenUserManual();

		[Token(Token = "0x6000B4F")]
		protected abstract void OpenScriptReference();

		[Token(Token = "0x6000B50")]
		[Address(RVA = "0x311BB58", Offset = "0x311BB58", VA = "0x311BB58")]
		protected Grounder()
		{
		}
	}
	[Token(Token = "0x2000172")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x14662A4", Offset = "0x14662A4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x14662A4", Offset = "0x14662A4")]
	public class GrounderBipedIK : Grounder
	{
		[Token(Token = "0x4000995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146E574", Offset = "0x146E574")]
		public BipedIK ik;

		[Token(Token = "0x4000996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146E5AC", Offset = "0x146E5AC")]
		public float spineBend;

		[Token(Token = "0x4000997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146E5E4", Offset = "0x146E5E4")]
		public float spineSpeed;

		[Token(Token = "0x4000998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform[] feet;

		[Token(Token = "0x4000999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion[] footRotations;

		[Token(Token = "0x400099A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 animatedPelvisLocalPosition;

		[Token(Token = "0x400099B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 solvedPelvisLocalPosition;

		[Token(Token = "0x400099C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 spineOffset;

		[Token(Token = "0x400099D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float lastWeight;

		[Token(Token = "0x6000B51")]
		[Address(RVA = "0x311BED0", Offset = "0x311BED0", VA = "0x311BED0", Slot = "5")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1480D08", Offset = "0x1480D08")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000B52")]
		[Address(RVA = "0x311BF1C", Offset = "0x311BF1C", VA = "0x311BF1C", Slot = "6")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1480D40", Offset = "0x1480D40")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000B53")]
		[Address(RVA = "0x311BF68", Offset = "0x311BF68", VA = "0x311BF68", Slot = "4")]
		public override void ResetPosition()
		{
		}

		[Token(Token = "0x6000B54")]
		[Address(RVA = "0x311C06C", Offset = "0x311C06C", VA = "0x311C06C")]
		private bool IsReadyToInitiate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B55")]
		[Address(RVA = "0x311C11C", Offset = "0x311C11C", VA = "0x311C11C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0x311C1D0", Offset = "0x311C1D0", VA = "0x311C1D0")]
		private void Initiate()
		{
		}

		[Token(Token = "0x6000B57")]
		[Address(RVA = "0x311C7C4", Offset = "0x311C7C4", VA = "0x311C7C4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000B58")]
		[Address(RVA = "0x311C818", Offset = "0x311C818", VA = "0x311C818")]
		private void OnSolverUpdate()
		{
		}

		[Token(Token = "0x6000B59")]
		[Address(RVA = "0x311D02C", Offset = "0x311D02C", VA = "0x311D02C")]
		private void SetLegIK(IKSolverLimb limb, int index)
		{
		}

		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0x311D18C", Offset = "0x311D18C", VA = "0x311D18C")]
		private void OnPostSolverUpdate()
		{
		}

		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0x311D31C", Offset = "0x311D31C", VA = "0x311D31C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0x311D4D8", Offset = "0x311D4D8", VA = "0x311D4D8")]
		public GrounderBipedIK()
		{
		}
	}
	[Token(Token = "0x2000173")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x1466304", Offset = "0x1466304")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1466304", Offset = "0x1466304")]
	public class GrounderFBBIK : Grounder
	{
		[Serializable]
		[Token(Token = "0x200055F")]
		public class SpineEffector
		{
			[Token(Token = "0x40020EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147A238", Offset = "0x147A238")]
			public FullBodyBipedEffector effectorType;

			[Token(Token = "0x40020EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147A270", Offset = "0x147A270")]
			public float horizontalWeight;

			[Token(Token = "0x40020EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147A2A8", Offset = "0x147A2A8")]
			public float verticalWeight;

			[Token(Token = "0x60024CB")]
			[Address(RVA = "0x311E40C", Offset = "0x311E40C", VA = "0x311E40C")]
			public SpineEffector()
			{
			}

			[Token(Token = "0x60024CC")]
			[Address(RVA = "0x311E41C", Offset = "0x311E41C", VA = "0x311E41C")]
			public SpineEffector(FullBodyBipedEffector effectorType, float horizontalWeight, float verticalWeight)
			{
			}
		}

		[Token(Token = "0x400099E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146E61C", Offset = "0x146E61C")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x400099F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146E654", Offset = "0x146E654")]
		public float spineBend;

		[Token(Token = "0x40009A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146E68C", Offset = "0x146E68C")]
		public float spineSpeed;

		[Token(Token = "0x40009A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public SpineEffector[] spine;

		[Token(Token = "0x40009A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform[] feet;

		[Token(Token = "0x40009A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 spineOffset;

		[Token(Token = "0x40009A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool firstSolve;

		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0x311D570", Offset = "0x311D570", VA = "0x311D570")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1480D78", Offset = "0x1480D78")]
		private void OpenTutorial()
		{
		}

		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0x311D5BC", Offset = "0x311D5BC", VA = "0x311D5BC", Slot = "5")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1480DB0", Offset = "0x1480DB0")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0x311D608", Offset = "0x311D608", VA = "0x311D608", Slot = "6")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1480DE8", Offset = "0x1480DE8")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0x311D654", Offset = "0x311D654", VA = "0x311D654", Slot = "4")]
		public override void ResetPosition()
		{
		}

		[Token(Token = "0x6000B61")]
		[Address(RVA = "0x311D6D4", Offset = "0x311D6D4", VA = "0x311D6D4")]
		private bool IsReadyToInitiate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0x311D76C", Offset = "0x311D76C", VA = "0x311D76C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B63")]
		[Address(RVA = "0x311DA70", Offset = "0x311DA70", VA = "0x311DA70")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000B64")]
		[Address(RVA = "0x311DA7C", Offset = "0x311DA7C", VA = "0x311DA7C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000B65")]
		[Address(RVA = "0x311D828", Offset = "0x311D828", VA = "0x311D828")]
		private void Initiate()
		{
		}

		[Token(Token = "0x6000B66")]
		[Address(RVA = "0x311DA88", Offset = "0x311DA88", VA = "0x311DA88")]
		private void OnSolverUpdate()
		{
		}

		[Token(Token = "0x6000B67")]
		[Address(RVA = "0x311DF28", Offset = "0x311DF28", VA = "0x311DF28")]
		private void SetLegIK(IKEffector effector, Grounding.Leg leg)
		{
		}

		[Token(Token = "0x6000B68")]
		[Address(RVA = "0x311E0E8", Offset = "0x311E0E8", VA = "0x311E0E8")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000B69")]
		[Address(RVA = "0x311E244", Offset = "0x311E244", VA = "0x311E244")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0x311E374", Offset = "0x311E374", VA = "0x311E374")]
		public GrounderFBBIK()
		{
		}
	}
	[Token(Token = "0x2000174")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x1466364", Offset = "0x1466364")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1466364", Offset = "0x1466364")]
	public class GrounderIK : Grounder
	{
		[Token(Token = "0x40009A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IK[] legs;

		[Token(Token = "0x40009A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146E6C4", Offset = "0x146E6C4")]
		public Transform pelvis;

		[Token(Token = "0x40009A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146E6FC", Offset = "0x146E6FC")]
		public Transform characterRoot;

		[Token(Token = "0x40009A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146E734", Offset = "0x146E734")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146E734", Offset = "0x146E734")]
		public float rootRotationWeight;

		[Token(Token = "0x40009A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146E788", Offset = "0x146E788")]
		public float rootRotationSpeed;

		[Token(Token = "0x40009AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146E7C0", Offset = "0x146E7C0")]
		public float maxRootRotationAngle;

		[Token(Token = "0x40009AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform[] feet;

		[Token(Token = "0x40009AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Quaternion[] footRotations;

		[Token(Token = "0x40009AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 animatedPelvisLocalPosition;

		[Token(Token = "0x40009AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 solvedPelvisLocalPosition;

		[Token(Token = "0x40009AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int solvedFeet;

		[Token(Token = "0x40009B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool solved;

		[Token(Token = "0x40009B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float lastWeight;

		[Token(Token = "0x40009B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Rigidbody characterRootRigidbody;

		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0x311E464", Offset = "0x311E464", VA = "0x311E464", Slot = "5")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1480E20", Offset = "0x1480E20")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0x311E4B0", Offset = "0x311E4B0", VA = "0x311E4B0", Slot = "6")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1480E58", Offset = "0x1480E58")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000B6D")]
		[Address(RVA = "0x311E4FC", Offset = "0x311E4FC", VA = "0x311E4FC", Slot = "4")]
		public override void ResetPosition()
		{
		}

		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0x311E514", Offset = "0x311E514", VA = "0x311E514")]
		private bool IsReadyToInitiate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0x311E704", Offset = "0x311E704", VA = "0x311E704")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000B70")]
		[Address(RVA = "0x311E804", Offset = "0x311E804", VA = "0x311E804")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B71")]
		[Address(RVA = "0x311EF4C", Offset = "0x311EF4C", VA = "0x311EF4C")]
		private void Initiate()
		{
		}

		[Token(Token = "0x6000B72")]
		[Address(RVA = "0x311F3A4", Offset = "0x311F3A4", VA = "0x311F3A4")]
		private void OnSolverUpdate()
		{
		}

		[Token(Token = "0x6000B73")]
		[Address(RVA = "0x311F614", Offset = "0x311F614", VA = "0x311F614")]
		private void SetLegIK(int index)
		{
		}

		[Token(Token = "0x6000B74")]
		[Address(RVA = "0x311F934", Offset = "0x311F934", VA = "0x311F934")]
		private void OnPostSolverUpdate()
		{
		}

		[Token(Token = "0x6000B75")]
		[Address(RVA = "0x311FAD0", Offset = "0x311FAD0", VA = "0x311FAD0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000B76")]
		[Address(RVA = "0x311FCD4", Offset = "0x311FCD4", VA = "0x311FCD4")]
		public GrounderIK()
		{
		}
	}
	[Token(Token = "0x2000175")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x14663C4", Offset = "0x14663C4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x14663C4", Offset = "0x14663C4")]
	public class GrounderQuadruped : Grounder
	{
		[Token(Token = "0x2000560")]
		public struct Foot
		{
			[Token(Token = "0x40020ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IKSolver solver;

			[Token(Token = "0x40020EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Transform transform;

			[Token(Token = "0x40020EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Quaternion rotation;

			[Token(Token = "0x40020F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Grounding.Leg leg;

			[Token(Token = "0x60024CD")]
			[Address(RVA = "0x31208FC", Offset = "0x31208FC", VA = "0x31208FC")]
			public Foot(IKSolver solver, Transform transform)
			{
			}
		}

		[Token(Token = "0x40009B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146E7F8", Offset = "0x146E7F8")]
		public Grounding forelegSolver;

		[Token(Token = "0x40009B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146E830", Offset = "0x146E830")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146E830", Offset = "0x146E830")]
		public float rootRotationWeight;

		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146E884", Offset = "0x146E884")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146E884", Offset = "0x146E884")]
		public float minRootRotation;

		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146E8DC", Offset = "0x146E8DC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146E8DC", Offset = "0x146E8DC")]
		public float maxRootRotation;

		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146E934", Offset = "0x146E934")]
		public float rootRotationSpeed;

		[Token(Token = "0x40009B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146E96C", Offset = "0x146E96C")]
		public float maxLegOffset;

		[Token(Token = "0x40009B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146E9A4", Offset = "0x146E9A4")]
		public float maxForeLegOffset;

		[Token(Token = "0x40009BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146E9DC", Offset = "0x146E9DC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146E9DC", Offset = "0x146E9DC")]
		public float maintainHeadRotationWeight;

		[Token(Token = "0x40009BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146EA30", Offset = "0x146EA30")]
		public Transform characterRoot;

		[Token(Token = "0x40009BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146EA68", Offset = "0x146EA68")]
		public Transform pelvis;

		[Token(Token = "0x40009BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146EAA0", Offset = "0x146EAA0")]
		public Transform lastSpineBone;

		[Token(Token = "0x40009BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146EAD8", Offset = "0x146EAD8")]
		public Transform head;

		[Token(Token = "0x40009BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public IK[] legs;

		[Token(Token = "0x40009C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public IK[] forelegs;

		[Token(Token = "0x40009C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public Vector3 gravity;

		[Token(Token = "0x40009C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Foot[] feet;

		[Token(Token = "0x40009C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 animatedPelvisLocalPosition;

		[Token(Token = "0x40009C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Quaternion animatedPelvisLocalRotation;

		[Token(Token = "0x40009C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private Quaternion animatedHeadLocalRotation;

		[Token(Token = "0x40009C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private Vector3 solvedPelvisLocalPosition;

		[Token(Token = "0x40009C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Quaternion solvedPelvisLocalRotation;

		[Token(Token = "0x40009C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Quaternion solvedHeadLocalRotation;

		[Token(Token = "0x40009C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private int solvedFeet;

		[Token(Token = "0x40009CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private bool solved;

		[Token(Token = "0x40009CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private float angle;

		[Token(Token = "0x40009CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Transform forefeetRoot;

		[Token(Token = "0x40009CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Quaternion headRotation;

		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private float lastWeight;

		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private Rigidbody characterRootRigidbody;

		[Token(Token = "0x6000B77")]
		[Address(RVA = "0x311FD6C", Offset = "0x311FD6C", VA = "0x311FD6C", Slot = "5")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1480E90", Offset = "0x1480E90")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000B78")]
		[Address(RVA = "0x311FDB8", Offset = "0x311FDB8", VA = "0x311FDB8", Slot = "6")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1480EC8", Offset = "0x1480EC8")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000B79")]
		[Address(RVA = "0x311FE04", Offset = "0x311FE04", VA = "0x311FE04", Slot = "4")]
		public override void ResetPosition()
		{
		}

		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0x311FE38", Offset = "0x311FE38", VA = "0x311FE38")]
		private bool IsReadyToInitiate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0x311FF68", Offset = "0x311FF68", VA = "0x311FF68")]
		private bool IsReadyToInitiateLegs(IK[] ikComponents)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0x3120128", Offset = "0x3120128", VA = "0x3120128")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0x3120190", Offset = "0x3120190", VA = "0x3120190")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0x3120248", Offset = "0x3120248", VA = "0x3120248")]
		private void Initiate()
		{
		}

		[Token(Token = "0x6000B7F")]
		[Address(RVA = "0x312057C", Offset = "0x312057C", VA = "0x312057C")]
		private Transform[] InitiateFeet(IK[] ikComponents, ref Foot[] f, int indexOffset)
		{
			return null;
		}

		[Token(Token = "0x6000B80")]
		[Address(RVA = "0x3120960", Offset = "0x3120960", VA = "0x3120960")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000B81")]
		[Address(RVA = "0x3120AAC", Offset = "0x3120AAC", VA = "0x3120AAC")]
		private void RootRotation()
		{
		}

		[Token(Token = "0x6000B82")]
		[Address(RVA = "0x3120F50", Offset = "0x3120F50", VA = "0x3120F50")]
		private void OnSolverUpdate()
		{
		}

		[Token(Token = "0x6000B83")]
		[Address(RVA = "0x3121740", Offset = "0x3121740", VA = "0x3121740")]
		private void UpdateForefeetRoot()
		{
		}

		[Token(Token = "0x6000B84")]
		[Address(RVA = "0x3121A00", Offset = "0x3121A00", VA = "0x3121A00")]
		private void SetFootIK(Foot foot, float maxOffset)
		{
		}

		[Token(Token = "0x6000B85")]
		[Address(RVA = "0x3121B60", Offset = "0x3121B60", VA = "0x3121B60")]
		private void OnPostSolverUpdate()
		{
		}

		[Token(Token = "0x6000B86")]
		[Address(RVA = "0x3121E3C", Offset = "0x3121E3C", VA = "0x3121E3C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000B87")]
		[Address(RVA = "0x3121E74", Offset = "0x3121E74", VA = "0x3121E74")]
		private void DestroyLegs(IK[] ikComponents)
		{
		}

		[Token(Token = "0x6000B88")]
		[Address(RVA = "0x3122070", Offset = "0x3122070", VA = "0x3122070")]
		public GrounderQuadruped()
		{
		}
	}
	[Token(Token = "0x2000176")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x1466424", Offset = "0x1466424")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1466424", Offset = "0x1466424")]
	public class GrounderVRIK : Grounder
	{
		[Token(Token = "0x40009D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146EB20", Offset = "0x146EB20")]
		public VRIK ik;

		[Token(Token = "0x40009D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform[] feet;

		[Token(Token = "0x6000B89")]
		[Address(RVA = "0x31221A4", Offset = "0x31221A4", VA = "0x31221A4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1480F00", Offset = "0x1480F00")]
		private void OpenTutorial()
		{
		}

		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0x31221F0", Offset = "0x31221F0", VA = "0x31221F0", Slot = "5")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1480F38", Offset = "0x1480F38")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0x312223C", Offset = "0x312223C", VA = "0x312223C", Slot = "6")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1480F70", Offset = "0x1480F70")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0x3122288", Offset = "0x3122288", VA = "0x3122288", Slot = "4")]
		public override void ResetPosition()
		{
		}

		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0x31222A0", Offset = "0x31222A0", VA = "0x31222A0")]
		private bool IsReadyToInitiate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0x3122338", Offset = "0x3122338", VA = "0x3122338")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0x31223EC", Offset = "0x31223EC", VA = "0x31223EC")]
		private void Initiate()
		{
		}

		[Token(Token = "0x6000B90")]
		[Address(RVA = "0x3122650", Offset = "0x3122650", VA = "0x3122650")]
		private void OnSolverUpdate()
		{
		}

		[Token(Token = "0x6000B91")]
		[Address(RVA = "0x31228E4", Offset = "0x31228E4", VA = "0x31228E4")]
		private void SetLegIK(IKSolverVR.PositionOffset positionOffset, Transform bone, Grounding.Leg leg)
		{
		}

		[Token(Token = "0x6000B92")]
		[Address(RVA = "0x31229EC", Offset = "0x31229EC", VA = "0x31229EC")]
		private void OnPostSolverUpdate()
		{
		}

		[Token(Token = "0x6000B93")]
		[Address(RVA = "0x3122BEC", Offset = "0x3122BEC", VA = "0x3122BEC")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000B94")]
		[Address(RVA = "0x3122D48", Offset = "0x3122D48", VA = "0x3122D48")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000B95")]
		[Address(RVA = "0x3122EF4", Offset = "0x3122EF4", VA = "0x3122EF4")]
		public GrounderVRIK()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000177")]
	public class Grounding
	{
		[Serializable]
		[Token(Token = "0x2000561")]
		public enum Quality
		{
			[Token(Token = "0x40020F2")]
			Fastest,
			[Token(Token = "0x40020F3")]
			Simple,
			[Token(Token = "0x40020F4")]
			Best
		}

		[Token(Token = "0x2000562")]
		public class Leg
		{
			[Token(Token = "0x40020F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147A2E0", Offset = "0x147A2E0")]
			private bool <isGrounded>k__BackingField;

			[Token(Token = "0x40020F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147A2F0", Offset = "0x147A2F0")]
			private Vector3 <IKPosition>k__BackingField;

			[Token(Token = "0x40020F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Quaternion rotationOffset;

			[Token(Token = "0x40020F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147A300", Offset = "0x147A300")]
			private bool <initiated>k__BackingField;

			[Token(Token = "0x40020F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147A310", Offset = "0x147A310")]
			private float <heightFromGround>k__BackingField;

			[Token(Token = "0x40020FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147A320", Offset = "0x147A320")]
			private Vector3 <velocity>k__BackingField;

			[Token(Token = "0x40020FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147A330", Offset = "0x147A330")]
			private Transform <transform>k__BackingField;

			[Token(Token = "0x40020FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147A340", Offset = "0x147A340")]
			private float <IKOffset>k__BackingField;

			[Token(Token = "0x40020FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public bool invertFootCenter;

			[Token(Token = "0x40020FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147A350", Offset = "0x147A350")]
			private RaycastHit <heelHit>k__BackingField;

			[Token(Token = "0x40020FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147A360", Offset = "0x147A360")]
			private RaycastHit <capsuleHit>k__BackingField;

			[Token(Token = "0x4002100")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			private Grounding grounding;

			[Token(Token = "0x4002101")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			private float lastTime;

			[Token(Token = "0x4002102")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			private float deltaTime;

			[Token(Token = "0x4002103")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private Vector3 lastPosition;

			[Token(Token = "0x4002104")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			private Quaternion toHitNormal;

			[Token(Token = "0x4002105")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
			private Quaternion r;

			[Token(Token = "0x4002106")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
			private Vector3 up;

			[Token(Token = "0x4002107")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			private bool doOverrideFootPosition;

			[Token(Token = "0x4002108")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
			private Vector3 overrideFootPosition;

			[Token(Token = "0x4002109")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
			private Vector3 transformPosition;

			[Token(Token = "0x170004C0")]
			public bool isGrounded
			{
				[Token(Token = "0x60024CE")]
				[Address(RVA = "0x312499C", Offset = "0x312499C", VA = "0x312499C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1487EF4", Offset = "0x1487EF4")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60024CF")]
				[Address(RVA = "0x31249A4", Offset = "0x31249A4", VA = "0x31249A4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1487F04", Offset = "0x1487F04")]
				private set
				{
				}
			}

			[Token(Token = "0x170004C1")]
			public Vector3 IKPosition
			{
				[Token(Token = "0x60024D0")]
				[Address(RVA = "0x31249B0", Offset = "0x31249B0", VA = "0x31249B0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1487F14", Offset = "0x1487F14")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x60024D1")]
				[Address(RVA = "0x31249BC", Offset = "0x31249BC", VA = "0x31249BC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1487F24", Offset = "0x1487F24")]
				private set
				{
				}
			}

			[Token(Token = "0x170004C2")]
			public bool initiated
			{
				[Token(Token = "0x60024D2")]
				[Address(RVA = "0x31249C8", Offset = "0x31249C8", VA = "0x31249C8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1487F34", Offset = "0x1487F34")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60024D3")]
				[Address(RVA = "0x31249D0", Offset = "0x31249D0", VA = "0x31249D0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1487F44", Offset = "0x1487F44")]
				private set
				{
				}
			}

			[Token(Token = "0x170004C3")]
			public float heightFromGround
			{
				[Token(Token = "0x60024D4")]
				[Address(RVA = "0x31249DC", Offset = "0x31249DC", VA = "0x31249DC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1487F54", Offset = "0x1487F54")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x60024D5")]
				[Address(RVA = "0x31249E4", Offset = "0x31249E4", VA = "0x31249E4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1487F64", Offset = "0x1487F64")]
				private set
				{
				}
			}

			[Token(Token = "0x170004C4")]
			public Vector3 velocity
			{
				[Token(Token = "0x60024D6")]
				[Address(RVA = "0x31249EC", Offset = "0x31249EC", VA = "0x31249EC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1487F74", Offset = "0x1487F74")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x60024D7")]
				[Address(RVA = "0x31249F8", Offset = "0x31249F8", VA = "0x31249F8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1487F84", Offset = "0x1487F84")]
				private set
				{
				}
			}

			[Token(Token = "0x170004C5")]
			public Transform transform
			{
				[Token(Token = "0x60024D8")]
				[Address(RVA = "0x3124A04", Offset = "0x3124A04", VA = "0x3124A04")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1487F94", Offset = "0x1487F94")]
				get
				{
					return null;
				}
				[Token(Token = "0x60024D9")]
				[Address(RVA = "0x3124A0C", Offset = "0x3124A0C", VA = "0x3124A0C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1487FA4", Offset = "0x1487FA4")]
				private set
				{
				}
			}

			[Token(Token = "0x170004C6")]
			public float IKOffset
			{
				[Token(Token = "0x60024DA")]
				[Address(RVA = "0x3124A14", Offset = "0x3124A14", VA = "0x3124A14")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1487FB4", Offset = "0x1487FB4")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x60024DB")]
				[Address(RVA = "0x3124A1C", Offset = "0x3124A1C", VA = "0x3124A1C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1487FC4", Offset = "0x1487FC4")]
				private set
				{
				}
			}

			[Token(Token = "0x170004C7")]
			public RaycastHit heelHit
			{
				[Token(Token = "0x60024DC")]
				[Address(RVA = "0x3124A24", Offset = "0x3124A24", VA = "0x3124A24")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1487FD4", Offset = "0x1487FD4")]
				get
				{
					return default(RaycastHit);
				}
				[Token(Token = "0x60024DD")]
				[Address(RVA = "0x3124A3C", Offset = "0x3124A3C", VA = "0x3124A3C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1487FE4", Offset = "0x1487FE4")]
				private set
				{
				}
			}

			[Token(Token = "0x170004C8")]
			public RaycastHit capsuleHit
			{
				[Token(Token = "0x60024DE")]
				[Address(RVA = "0x3124A5C", Offset = "0x3124A5C", VA = "0x3124A5C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1487FF4", Offset = "0x1487FF4")]
				get
				{
					return default(RaycastHit);
				}
				[Token(Token = "0x60024DF")]
				[Address(RVA = "0x3124A74", Offset = "0x3124A74", VA = "0x3124A74")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1488004", Offset = "0x1488004")]
				private set
				{
				}
			}

			[Token(Token = "0x170004C9")]
			public RaycastHit GetHitPoint
			{
				[Token(Token = "0x60024E0")]
				[Address(RVA = "0x3124A94", Offset = "0x3124A94", VA = "0x3124A94")]
				get
				{
					return default(RaycastHit);
				}
			}

			[Token(Token = "0x170004CA")]
			public float stepHeightFromGround
			{
				[Token(Token = "0x60024E6")]
				[Address(RVA = "0x3125858", Offset = "0x3125858", VA = "0x3125858")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170004CB")]
			private float rootYOffset
			{
				[Token(Token = "0x60024EF")]
				[Address(RVA = "0x3125B30", Offset = "0x3125B30", VA = "0x3125B30")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x60024E1")]
			[Address(RVA = "0x3124ADC", Offset = "0x3124ADC", VA = "0x3124ADC")]
			public void SetFootPosition(Vector3 position)
			{
			}

			[Token(Token = "0x60024E2")]
			[Address(RVA = "0x31235A4", Offset = "0x31235A4", VA = "0x31235A4")]
			public void Initiate(Grounding grounding, Transform transform)
			{
			}

			[Token(Token = "0x60024E3")]
			[Address(RVA = "0x3124AF0", Offset = "0x3124AF0", VA = "0x3124AF0")]
			public void OnEnable()
			{
			}

			[Token(Token = "0x60024E4")]
			[Address(RVA = "0x31244BC", Offset = "0x31244BC", VA = "0x31244BC")]
			public void Reset()
			{
			}

			[Token(Token = "0x60024E5")]
			[Address(RVA = "0x31236E8", Offset = "0x31236E8", VA = "0x31236E8")]
			public void Process()
			{
			}

			[Token(Token = "0x60024E7")]
			[Address(RVA = "0x31252CC", Offset = "0x31252CC", VA = "0x31252CC")]
			private RaycastHit GetCapsuleHit(Vector3 offsetFromHeel)
			{
				return default(RaycastHit);
			}

			[Token(Token = "0x60024E8")]
			[Address(RVA = "0x3124B3C", Offset = "0x3124B3C", VA = "0x3124B3C")]
			private RaycastHit GetRaycastHit(Vector3 offsetFromHeel)
			{
				return default(RaycastHit);
			}

			[Token(Token = "0x60024E9")]
			[Address(RVA = "0x31259D8", Offset = "0x31259D8", VA = "0x31259D8")]
			private Vector3 RotateNormal(Vector3 normal)
			{
				return default(Vector3);
			}

			[Token(Token = "0x60024EA")]
			[Address(RVA = "0x3124F78", Offset = "0x3124F78", VA = "0x3124F78")]
			private void SetFootToPoint(Vector3 normal, Vector3 point)
			{
			}

			[Token(Token = "0x60024EB")]
			[Address(RVA = "0x3125080", Offset = "0x3125080", VA = "0x3125080")]
			private void SetFootToPlane(Vector3 planeNormal, Vector3 planePoint, Vector3 heelHitPoint)
			{
			}

			[Token(Token = "0x60024EC")]
			[Address(RVA = "0x3125AD4", Offset = "0x3125AD4", VA = "0x3125AD4")]
			private float GetHeightFromGround(Vector3 hitPoint)
			{
				return default(float);
			}

			[Token(Token = "0x60024ED")]
			[Address(RVA = "0x31258E4", Offset = "0x31258E4", VA = "0x31258E4")]
			private void RotateFoot()
			{
			}

			[Token(Token = "0x60024EE")]
			[Address(RVA = "0x3125C58", Offset = "0x3125C58", VA = "0x3125C58")]
			private Quaternion GetRotationOffsetTarget()
			{
				return default(Quaternion);
			}

			[Token(Token = "0x60024F0")]
			[Address(RVA = "0x31234F4", Offset = "0x31234F4", VA = "0x31234F4")]
			public Leg()
			{
			}
		}

		[Token(Token = "0x2000563")]
		public class Pelvis
		{
			[Token(Token = "0x400210A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147A370", Offset = "0x147A370")]
			private Vector3 <IKOffset>k__BackingField;

			[Token(Token = "0x400210B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147A380", Offset = "0x147A380")]
			private float <heightOffset>k__BackingField;

			[Token(Token = "0x400210C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Grounding grounding;

			[Token(Token = "0x400210D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 lastRootPosition;

			[Token(Token = "0x400210E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float damperF;

			[Token(Token = "0x400210F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private bool initiated;

			[Token(Token = "0x4002110")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float lastTime;

			[Token(Token = "0x170004CC")]
			public Vector3 IKOffset
			{
				[Token(Token = "0x60024F1")]
				[Address(RVA = "0x3125D48", Offset = "0x3125D48", VA = "0x3125D48")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1488014", Offset = "0x1488014")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x60024F2")]
				[Address(RVA = "0x3125D54", Offset = "0x3125D54", VA = "0x3125D54")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1488024", Offset = "0x1488024")]
				private set
				{
				}
			}

			[Token(Token = "0x170004CD")]
			public float heightOffset
			{
				[Token(Token = "0x60024F3")]
				[Address(RVA = "0x3125D60", Offset = "0x3125D60", VA = "0x3125D60")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1488034", Offset = "0x1488034")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x60024F4")]
				[Address(RVA = "0x3125D68", Offset = "0x3125D68", VA = "0x3125D68")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1488044", Offset = "0x1488044")]
				private set
				{
				}
			}

			[Token(Token = "0x60024F5")]
			[Address(RVA = "0x31236A0", Offset = "0x31236A0", VA = "0x31236A0")]
			public void Initiate(Grounding grounding)
			{
			}

			[Token(Token = "0x60024F6")]
			[Address(RVA = "0x312440C", Offset = "0x312440C", VA = "0x312440C")]
			public void Reset()
			{
			}

			[Token(Token = "0x60024F7")]
			[Address(RVA = "0x3125D70", Offset = "0x3125D70", VA = "0x3125D70")]
			public void OnEnable()
			{
			}

			[Token(Token = "0x60024F8")]
			[Address(RVA = "0x31241A0", Offset = "0x31241A0", VA = "0x31241A0")]
			public void Process(float lowestOffset, float highestOffset, bool isGrounded)
			{
			}

			[Token(Token = "0x60024F9")]
			[Address(RVA = "0x312359C", Offset = "0x312359C", VA = "0x312359C")]
			public Pelvis()
			{
			}
		}

		[Token(Token = "0x40009D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146EB58", Offset = "0x146EB58")]
		public LayerMask layers;

		[Token(Token = "0x40009D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146EB90", Offset = "0x146EB90")]
		public float maxStep;

		[Token(Token = "0x40009D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146EBC8", Offset = "0x146EBC8")]
		public float heightOffset;

		[Token(Token = "0x40009D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146EC00", Offset = "0x146EC00")]
		public float footSpeed;

		[Token(Token = "0x40009D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146EC38", Offset = "0x146EC38")]
		public float footRadius;

		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146EC70", Offset = "0x146EC70")]
		[HideInInspector]
		public float footCenterOffset;

		[Token(Token = "0x40009D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146ECBC", Offset = "0x146ECBC")]
		public float prediction;

		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146ECF4", Offset = "0x146ECF4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146ECF4", Offset = "0x146ECF4")]
		public float footRotationWeight;

		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146ED48", Offset = "0x146ED48")]
		public float footRotationSpeed;

		[Token(Token = "0x40009DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146ED80", Offset = "0x146ED80")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146ED80", Offset = "0x146ED80")]
		public float maxFootRotationAngle;

		[Token(Token = "0x40009DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146EDD8", Offset = "0x146EDD8")]
		public bool rotateSolver;

		[Token(Token = "0x40009DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146EE10", Offset = "0x146EE10")]
		public float pelvisSpeed;

		[Token(Token = "0x40009DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146EE48", Offset = "0x146EE48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146EE48", Offset = "0x146EE48")]
		public float pelvisDamper;

		[Token(Token = "0x40009DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146EE9C", Offset = "0x146EE9C")]
		public float lowerPelvisWeight;

		[Token(Token = "0x40009E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146EED4", Offset = "0x146EED4")]
		public float liftPelvisWeight;

		[Token(Token = "0x40009E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146EF0C", Offset = "0x146EF0C")]
		public float rootSphereCastRadius;

		[Token(Token = "0x40009E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146EF44", Offset = "0x146EF44")]
		public bool overstepFallsDown;

		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146EF7C", Offset = "0x146EF7C")]
		public Quality quality;

		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146EFB4", Offset = "0x146EFB4")]
		private Leg[] <legs>k__BackingField;

		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146EFC4", Offset = "0x146EFC4")]
		private Pelvis <pelvis>k__BackingField;

		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146EFD4", Offset = "0x146EFD4")]
		private bool <isGrounded>k__BackingField;

		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146EFE4", Offset = "0x146EFE4")]
		private Transform <root>k__BackingField;

		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146EFF4", Offset = "0x146EFF4")]
		private RaycastHit <rootHit>k__BackingField;

		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool initiated;

		[Token(Token = "0x17000149")]
		public Leg[] legs
		{
			[Token(Token = "0x6000B96")]
			[Address(RVA = "0x3122F5C", Offset = "0x3122F5C", VA = "0x3122F5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1480FA8", Offset = "0x1480FA8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B97")]
			[Address(RVA = "0x3122F64", Offset = "0x3122F64", VA = "0x3122F64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1480FB8", Offset = "0x1480FB8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700014A")]
		public Pelvis pelvis
		{
			[Token(Token = "0x6000B98")]
			[Address(RVA = "0x3122F6C", Offset = "0x3122F6C", VA = "0x3122F6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1480FC8", Offset = "0x1480FC8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B99")]
			[Address(RVA = "0x3122F74", Offset = "0x3122F74", VA = "0x3122F74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1480FD8", Offset = "0x1480FD8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700014B")]
		public bool isGrounded
		{
			[Token(Token = "0x6000B9A")]
			[Address(RVA = "0x3122F7C", Offset = "0x3122F7C", VA = "0x3122F7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1480FE8", Offset = "0x1480FE8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B9B")]
			[Address(RVA = "0x3122F84", Offset = "0x3122F84", VA = "0x3122F84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1480FF8", Offset = "0x1480FF8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700014C")]
		public Transform root
		{
			[Token(Token = "0x6000B9C")]
			[Address(RVA = "0x3122F90", Offset = "0x3122F90", VA = "0x3122F90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1481008", Offset = "0x1481008")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B9D")]
			[Address(RVA = "0x3122F98", Offset = "0x3122F98", VA = "0x3122F98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1481018", Offset = "0x1481018")]
			private set
			{
			}
		}

		[Token(Token = "0x1700014D")]
		public RaycastHit rootHit
		{
			[Token(Token = "0x6000B9E")]
			[Address(RVA = "0x3122FA0", Offset = "0x3122FA0", VA = "0x3122FA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1481028", Offset = "0x1481028")]
			get
			{
				return default(RaycastHit);
			}
			[Token(Token = "0x6000B9F")]
			[Address(RVA = "0x3122FB8", Offset = "0x3122FB8", VA = "0x3122FB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1481038", Offset = "0x1481038")]
			private set
			{
			}
		}

		[Token(Token = "0x1700014E")]
		public bool rootGrounded
		{
			[Token(Token = "0x6000BA0")]
			[Address(RVA = "0x3122FD8", Offset = "0x3122FD8", VA = "0x3122FD8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700014F")]
		public Vector3 up
		{
			[Token(Token = "0x6000BA8")]
			[Address(RVA = "0x311D100", Offset = "0x311D100", VA = "0x311D100")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000150")]
		private bool useRootRotation
		{
			[Token(Token = "0x6000BAB")]
			[Address(RVA = "0x3124570", Offset = "0x3124570", VA = "0x3124570")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0x312302C", Offset = "0x312302C", VA = "0x312302C")]
		public RaycastHit GetRootHit(float maxDistanceMlp = 10f)
		{
			return default(RaycastHit);
		}

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0x312340C", Offset = "0x312340C", VA = "0x312340C")]
		public bool IsValid(ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0x311C50C", Offset = "0x311C50C", VA = "0x311C50C")]
		public void Initiate(Transform root, Transform[] feet)
		{
		}

		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0x311CD84", Offset = "0x311CD84", VA = "0x311CD84")]
		public void Update()
		{
		}

		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0x311ED34", Offset = "0x311ED34", VA = "0x311ED34")]
		public Vector3 GetLegsPlaneNormal()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0x311BFE8", Offset = "0x311BFE8", VA = "0x311BFE8")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0x31236D0", Offset = "0x31236D0", VA = "0x31236D0")]
		public void LogWarning(string message)
		{
		}

		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0x3124640", Offset = "0x3124640", VA = "0x3124640")]
		public float GetVerticalOffset(Vector3 p1, Vector3 p2)
		{
			return default(float);
		}

		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0x31247A8", Offset = "0x31247A8", VA = "0x31247A8")]
		public Vector3 Flatten(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0x31248AC", Offset = "0x31248AC", VA = "0x31248AC")]
		public Vector3 GetFootCenterOffset()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0x311BC24", Offset = "0x311BC24", VA = "0x311BC24")]
		public Grounding()
		{
		}
	}
	[Token(Token = "0x2000178")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x1466484", Offset = "0x1466484")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1466484", Offset = "0x1466484")]
	public class AimIK : IK
	{
		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverAim solver;

		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0x2669914", Offset = "0x2669914", VA = "0x2669914", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1481048", Offset = "0x1481048")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0x2669960", Offset = "0x2669960", VA = "0x2669960", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1481080", Offset = "0x1481080")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0x26699AC", Offset = "0x26699AC", VA = "0x26699AC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x14810B8", Offset = "0x14810B8")]
		private void OpenSetupTutorial()
		{
		}

		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0x26699F8", Offset = "0x26699F8", VA = "0x26699F8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x14810F0", Offset = "0x14810F0")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0x2669A44", Offset = "0x2669A44", VA = "0x2669A44")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1481128", Offset = "0x1481128")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0x2669A90", Offset = "0x2669A90", VA = "0x2669A90", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0x2669A98", Offset = "0x2669A98", VA = "0x2669A98")]
		public AimIK()
		{
		}
	}
	[Token(Token = "0x2000179")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x14664E4", Offset = "0x14664E4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x14664E4", Offset = "0x14664E4")]
	public class ArmIK : IK
	{
		[Token(Token = "0x40009EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverArm solver;

		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0x266E058", Offset = "0x266E058", VA = "0x266E058", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1481160", Offset = "0x1481160")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0x266E0A4", Offset = "0x266E0A4", VA = "0x266E0A4", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1481198", Offset = "0x1481198")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0x266E0F0", Offset = "0x266E0F0", VA = "0x266E0F0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x14811D0", Offset = "0x14811D0")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0x266E13C", Offset = "0x266E13C", VA = "0x266E13C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1481208", Offset = "0x1481208")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000BB9")]
		[Address(RVA = "0x266E188", Offset = "0x266E188", VA = "0x266E188", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0x266E190", Offset = "0x266E190", VA = "0x266E190")]
		public ArmIK()
		{
		}
	}
	[Token(Token = "0x200017A")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x1466544", Offset = "0x1466544")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1466544", Offset = "0x1466544")]
	public class CCDIK : IK
	{
		[Token(Token = "0x40009EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverCCD solver;

		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0x266FE28", Offset = "0x266FE28", VA = "0x266FE28", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1481240", Offset = "0x1481240")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0x266FE74", Offset = "0x266FE74", VA = "0x266FE74", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1481278", Offset = "0x1481278")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0x266FEC0", Offset = "0x266FEC0", VA = "0x266FEC0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x14812B0", Offset = "0x14812B0")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0x266FF0C", Offset = "0x266FF0C", VA = "0x266FF0C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x14812E8", Offset = "0x14812E8")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0x266FF58", Offset = "0x266FF58", VA = "0x266FF58", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0x266FF60", Offset = "0x266FF60", VA = "0x266FF60")]
		public CCDIK()
		{
		}
	}
	[Token(Token = "0x200017B")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x14665A4", Offset = "0x14665A4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x14665A4", Offset = "0x14665A4")]
	public class FABRIK : IK
	{
		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverFABRIK solver;

		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0x2674230", Offset = "0x2674230", VA = "0x2674230", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1481320", Offset = "0x1481320")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0x267427C", Offset = "0x267427C", VA = "0x267427C", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1481358", Offset = "0x1481358")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0x26742C8", Offset = "0x26742C8", VA = "0x26742C8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1481390", Offset = "0x1481390")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0x2674314", Offset = "0x2674314", VA = "0x2674314")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x14813C8", Offset = "0x14813C8")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0x2674360", Offset = "0x2674360", VA = "0x2674360", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0x2674368", Offset = "0x2674368", VA = "0x2674368")]
		public FABRIK()
		{
		}
	}
	[Token(Token = "0x200017C")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x1466604", Offset = "0x1466604")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1466604", Offset = "0x1466604")]
	public class FABRIKRoot : IK
	{
		[Token(Token = "0x40009EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverFABRIKRoot solver;

		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0x2674A0C", Offset = "0x2674A0C", VA = "0x2674A0C", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1481400", Offset = "0x1481400")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0x2674A58", Offset = "0x2674A58", VA = "0x2674A58", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1481438", Offset = "0x1481438")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0x2674AA4", Offset = "0x2674AA4", VA = "0x2674AA4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1481470", Offset = "0x1481470")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0x2674AF0", Offset = "0x2674AF0", VA = "0x2674AF0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x14814A8", Offset = "0x14814A8")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0x2674B3C", Offset = "0x2674B3C", VA = "0x2674B3C", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0x2674B44", Offset = "0x2674B44", VA = "0x2674B44")]
		public FABRIKRoot()
		{
		}
	}
	[Token(Token = "0x200017D")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x1466664", Offset = "0x1466664")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1466664", Offset = "0x1466664")]
	public class FullBodyBipedIK : IK
	{
		[Token(Token = "0x40009EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BipedReferences references;

		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IKSolverFullBodyBiped solver;

		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0x311A5D0", Offset = "0x311A5D0", VA = "0x311A5D0", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x14814E0", Offset = "0x14814E0")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0x311A61C", Offset = "0x311A61C", VA = "0x311A61C", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1481518", Offset = "0x1481518")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0x311A668", Offset = "0x311A668", VA = "0x311A668")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1481550", Offset = "0x1481550")]
		private void OpenSetupTutorial()
		{
		}

		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0x311A6B4", Offset = "0x311A6B4", VA = "0x311A6B4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1481588", Offset = "0x1481588")]
		private void OpenInspectorTutorial()
		{
		}

		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0x311A700", Offset = "0x311A700", VA = "0x311A700")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x14815C0", Offset = "0x14815C0")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0x311A74C", Offset = "0x311A74C", VA = "0x311A74C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x14815F8", Offset = "0x14815F8")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0x311A798", Offset = "0x311A798", VA = "0x311A798")]
		public void SetReferences(BipedReferences references, Transform rootNode)
		{
		}

		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0x311A7DC", Offset = "0x311A7DC", VA = "0x311A7DC", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0x311A7E4", Offset = "0x311A7E4", VA = "0x311A7E4")]
		public bool ReferencesError(ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0x311A9AC", Offset = "0x311A9AC", VA = "0x311A9AC")]
		public bool ReferencesWarning(ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0x311AD0C", Offset = "0x311AD0C", VA = "0x311AD0C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1481630", Offset = "0x1481630")]
		private void Reinitiate()
		{
		}

		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0x311AD2C", Offset = "0x311AD2C", VA = "0x311AD2C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1481668", Offset = "0x1481668")]
		private void AutoDetectReferences()
		{
		}

		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0x311AE20", Offset = "0x311AE20", VA = "0x311AE20")]
		public FullBodyBipedIK()
		{
		}
	}
	[Token(Token = "0x200017E")]
	public abstract class IK : SolverManager
	{
		[Token(Token = "0x6000BDA")]
		public abstract IKSolver GetIKSolver();

		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0x31288BC", Offset = "0x31288BC", VA = "0x31288BC", Slot = "5")]
		protected override void UpdateSolver()
		{
		}

		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0x31289A8", Offset = "0x31289A8", VA = "0x31289A8", Slot = "4")]
		protected override void InitiateSolver()
		{
		}

		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0x3128B78", Offset = "0x3128B78", VA = "0x3128B78", Slot = "6")]
		protected override void FixTransforms()
		{
		}

		[Token(Token = "0x6000BDE")]
		protected abstract void OpenUserManual();

		[Token(Token = "0x6000BDF")]
		protected abstract void OpenScriptReference();

		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0x311AEC0", Offset = "0x311AEC0", VA = "0x311AEC0")]
		protected IK()
		{
		}
	}
	[Token(Token = "0x200017F")]
	public class IKExecutionOrder : MonoBehaviour
	{
		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146F004", Offset = "0x146F004")]
		public IK[] IKComponents;

		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146F03C", Offset = "0x146F03C")]
		public Animator animator;

		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool fixedFrame;

		[Token(Token = "0x17000151")]
		private bool animatePhysics
		{
			[Token(Token = "0x6000BE1")]
			[Address(RVA = "0x312BC28", Offset = "0x312BC28", VA = "0x312BC28")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0x312BCC4", Offset = "0x312BCC4", VA = "0x312BCC4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0x312BD34", Offset = "0x312BD34", VA = "0x312BD34")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0x312BDF0", Offset = "0x312BDF0", VA = "0x312BDF0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0x312BE2C", Offset = "0x312BE2C", VA = "0x312BE2C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0x312BD68", Offset = "0x312BD68", VA = "0x312BD68")]
		private void FixTransforms()
		{
		}

		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0x312BEB8", Offset = "0x312BEB8", VA = "0x312BEB8")]
		public IKExecutionOrder()
		{
		}
	}
	[Token(Token = "0x2000180")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x14666C4", Offset = "0x14666C4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x14666C4", Offset = "0x14666C4")]
	public class LegIK : IK
	{
		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverLeg solver;

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0x2E76BCC", Offset = "0x2E76BCC", VA = "0x2E76BCC", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x14816A0", Offset = "0x14816A0")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0x2E76C18", Offset = "0x2E76C18", VA = "0x2E76C18", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x14816D8", Offset = "0x14816D8")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0x2E76C64", Offset = "0x2E76C64", VA = "0x2E76C64")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1481710", Offset = "0x1481710")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0x2E76CB0", Offset = "0x2E76CB0", VA = "0x2E76CB0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1481748", Offset = "0x1481748")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0x2E76CFC", Offset = "0x2E76CFC", VA = "0x2E76CFC", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000BED")]
		[Address(RVA = "0x2E76D04", Offset = "0x2E76D04", VA = "0x2E76D04")]
		public LegIK()
		{
		}
	}
	[Token(Token = "0x2000181")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x1466724", Offset = "0x1466724")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1466724", Offset = "0x1466724")]
	public class LimbIK : IK
	{
		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverLimb solver;

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0x2E76D78", Offset = "0x2E76D78", VA = "0x2E76D78", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1481780", Offset = "0x1481780")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0x2E76DC4", Offset = "0x2E76DC4", VA = "0x2E76DC4", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x14817B8", Offset = "0x14817B8")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0x2E76E10", Offset = "0x2E76E10", VA = "0x2E76E10")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x14817F0", Offset = "0x14817F0")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0x2E76E5C", Offset = "0x2E76E5C", VA = "0x2E76E5C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1481828", Offset = "0x1481828")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0x2E76EA8", Offset = "0x2E76EA8", VA = "0x2E76EA8", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0x2E76EB0", Offset = "0x2E76EB0", VA = "0x2E76EB0")]
		public LimbIK()
		{
		}
	}
	[Token(Token = "0x2000182")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x1466784", Offset = "0x1466784")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1466784", Offset = "0x1466784")]
	public class LookAtIK : IK
	{
		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverLookAt solver;

		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0x2E77D94", Offset = "0x2E77D94", VA = "0x2E77D94", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1481860", Offset = "0x1481860")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0x2E77DE0", Offset = "0x2E77DE0", VA = "0x2E77DE0", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1481898", Offset = "0x1481898")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0x2E77E2C", Offset = "0x2E77E2C", VA = "0x2E77E2C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x14818D0", Offset = "0x14818D0")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0x2E77E78", Offset = "0x2E77E78", VA = "0x2E77E78")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1481908", Offset = "0x1481908")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0x2E77EC4", Offset = "0x2E77EC4", VA = "0x2E77EC4", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0x2E77ECC", Offset = "0x2E77ECC", VA = "0x2E77ECC")]
		public LookAtIK()
		{
		}
	}
	[Token(Token = "0x2000183")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x14667E4", Offset = "0x14667E4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x14667E4", Offset = "0x14667E4")]
	public class TrigonometricIK : IK
	{
		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverTrigonometric solver;

		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0x288AD6C", Offset = "0x288AD6C", VA = "0x288AD6C", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1481940", Offset = "0x1481940")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0x288ADB8", Offset = "0x288ADB8", VA = "0x288ADB8", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1481978", Offset = "0x1481978")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0x288AE04", Offset = "0x288AE04", VA = "0x288AE04")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x14819B0", Offset = "0x14819B0")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0x288AE50", Offset = "0x288AE50", VA = "0x288AE50")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x14819E8", Offset = "0x14819E8")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0x288AE9C", Offset = "0x288AE9C", VA = "0x288AE9C", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0x288AEA4", Offset = "0x288AEA4", VA = "0x288AEA4")]
		public TrigonometricIK()
		{
		}
	}
	[Token(Token = "0x2000184")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1466844", Offset = "0x1466844")]
	public class VRIK : IK
	{
		[Serializable]
		[Token(Token = "0x2000564")]
		public class References
		{
			[Token(Token = "0x4002111")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform root;

			[Token(Token = "0x4002112")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform pelvis;

			[Token(Token = "0x4002113")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform spine;

			[Token(Token = "0x4002114")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147A390", Offset = "0x147A390")]
			public Transform chest;

			[Token(Token = "0x4002115")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147A3C8", Offset = "0x147A3C8")]
			public Transform neck;

			[Token(Token = "0x4002116")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Transform head;

			[Token(Token = "0x4002117")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147A400", Offset = "0x147A400")]
			public Transform leftShoulder;

			[Token(Token = "0x4002118")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Transform leftUpperArm;

			[Token(Token = "0x4002119")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Transform leftForearm;

			[Token(Token = "0x400211A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Transform leftHand;

			[Token(Token = "0x400211B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147A438", Offset = "0x147A438")]
			public Transform rightShoulder;

			[Token(Token = "0x400211C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Transform rightUpperArm;

			[Token(Token = "0x400211D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public Transform rightForearm;

			[Token(Token = "0x400211E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public Transform rightHand;

			[Token(Token = "0x400211F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147A470", Offset = "0x147A470")]
			public Transform leftThigh;

			[Token(Token = "0x4002120")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147A4A8", Offset = "0x147A4A8")]
			public Transform leftCalf;

			[Token(Token = "0x4002121")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147A4E0", Offset = "0x147A4E0")]
			public Transform leftFoot;

			[Token(Token = "0x4002122")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147A518", Offset = "0x147A518")]
			public Transform leftToes;

			[Token(Token = "0x4002123")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147A550", Offset = "0x147A550")]
			public Transform rightThigh;

			[Token(Token = "0x4002124")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147A588", Offset = "0x147A588")]
			public Transform rightCalf;

			[Token(Token = "0x4002125")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147A5C0", Offset = "0x147A5C0")]
			public Transform rightFoot;

			[Token(Token = "0x4002126")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147A5F8", Offset = "0x147A5F8")]
			public Transform rightToes;

			[Token(Token = "0x170004CE")]
			public bool isFilled
			{
				[Token(Token = "0x60024FB")]
				[Address(RVA = "0x288C9C8", Offset = "0x288C9C8", VA = "0x288C9C8")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170004CF")]
			public bool isEmpty
			{
				[Token(Token = "0x60024FC")]
				[Address(RVA = "0x288C54C", Offset = "0x288C54C", VA = "0x288C54C")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x60024FA")]
			[Address(RVA = "0x288D064", Offset = "0x288D064", VA = "0x288D064")]
			public Transform[] GetTransforms()
			{
				return null;
			}

			[Token(Token = "0x60024FD")]
			[Address(RVA = "0x288C028", Offset = "0x288C028", VA = "0x288C028")]
			public static bool AutoDetectReferences(Transform root, out References references)
			{
				return default(bool);
			}

			[Token(Token = "0x60024FE")]
			[Address(RVA = "0x288D05C", Offset = "0x288D05C", VA = "0x288D05C")]
			public References()
			{
			}
		}

		[Token(Token = "0x40009F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "ContextMenuItemAttribute", RVA = "0x146F074", Offset = "0x146F074")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146F074", Offset = "0x146F074")]
		public References references;

		[Token(Token = "0x40009F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146F0F0", Offset = "0x146F0F0")]
		public IKSolverVR solver;

		[Token(Token = "0x6000C00")]
		[Address(RVA = "0x288BF1C", Offset = "0x288BF1C", VA = "0x288BF1C", Slot = "8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1481A20", Offset = "0x1481A20")]
		protected override void OpenUserManual()
		{
		}

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0x288BF68", Offset = "0x288BF68", VA = "0x288BF68", Slot = "9")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1481A58", Offset = "0x1481A58")]
		protected override void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0x288BFB4", Offset = "0x288BFB4", VA = "0x288BFB4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1481A90", Offset = "0x1481A90")]
		private void OpenSetupTutorial()
		{
		}

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0x288C000", Offset = "0x288C000", VA = "0x288C000")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1481AC8", Offset = "0x1481AC8")]
		public void AutoDetectReferences()
		{
		}

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0x288C4A8", Offset = "0x288C4A8", VA = "0x288C4A8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1481B00", Offset = "0x1481B00")]
		public void GuessHandOrientations()
		{
		}

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0x288C4D0", Offset = "0x288C4D0", VA = "0x288C4D0", Slot = "7")]
		public override IKSolver GetIKSolver()
		{
			return null;
		}

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0x288C4D8", Offset = "0x288C4D8", VA = "0x288C4D8", Slot = "4")]
		protected override void InitiateSolver()
		{
		}

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0x288CE44", Offset = "0x288CE44", VA = "0x288CE44", Slot = "5")]
		protected override void UpdateSolver()
		{
		}

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0x288CFBC", Offset = "0x288CFBC", VA = "0x288CFBC")]
		public VRIK()
		{
		}
	}
	[Token(Token = "0x2000185")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x146687C", Offset = "0x146687C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x146687C", Offset = "0x146687C")]
	public class AimIKJ : MonoBehaviour
	{
		[Token(Token = "0x40009FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146F128", Offset = "0x146F128")]
		public Transform target;

		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146F160", Offset = "0x146F160")]
		public Transform poleTarget;

		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146F198", Offset = "0x146F198")]
		public Transform aimTransform;

		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x146F1D0", Offset = "0x146F1D0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146F1D0", Offset = "0x146F1D0")]
		public float axisX;

		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146F220", Offset = "0x146F220")]
		public float axisY;

		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146F258", Offset = "0x146F258")]
		public float axisZ;

		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x146F290", Offset = "0x146F290")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146F290", Offset = "0x146F290")]
		public float poleAxisX;

		[Token(Token = "0x4000A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146F2E0", Offset = "0x146F2E0")]
		public float poleAxisY;

		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146F318", Offset = "0x146F318")]
		public float poleAxisZ;

		[Token(Token = "0x4000A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x146F350", Offset = "0x146F350")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146F350", Offset = "0x146F350")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146F350", Offset = "0x146F350")]
		public float weight;

		[Token(Token = "0x4000A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146F3B8", Offset = "0x146F3B8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146F3B8", Offset = "0x146F3B8")]
		public float poleWeight;

		[Token(Token = "0x4000A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146F40C", Offset = "0x146F40C")]
		public float tolerance;

		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146F444", Offset = "0x146F444")]
		public int maxIterations;

		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146F47C", Offset = "0x146F47C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146F47C", Offset = "0x146F47C")]
		public float clampWeight;

		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146F4D0", Offset = "0x146F4D0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146F4D0", Offset = "0x146F4D0")]
		public int clampSmoothing;

		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146F524", Offset = "0x146F524")]
		public bool useRotationLimits;

		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146F55C", Offset = "0x146F55C")]
		public bool XY;

		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x146F594", Offset = "0x146F594")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146F594", Offset = "0x146F594")]
		public Transform[] bones;

		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146F5E4", Offset = "0x146F5E4")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Animator animator;

		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private PlayableGraph graph;

		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private AnimationScriptPlayable IKPlayable;

		[Token(Token = "0x4000A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private AimIKJob job;

		[Token(Token = "0x17000152")]
		public bool initiated
		{
			[Token(Token = "0x6000C09")]
			[Address(RVA = "0x2669B0C", Offset = "0x2669B0C", VA = "0x2669B0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1481B38", Offset = "0x1481B38")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C0A")]
			[Address(RVA = "0x2669B14", Offset = "0x2669B14", VA = "0x2669B14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1481B48", Offset = "0x1481B48")]
			private set
			{
			}
		}

		[Token(Token = "0x17000153")]
		public Vector3 axis
		{
			[Token(Token = "0x6000C0B")]
			[Address(RVA = "0x2669B20", Offset = "0x2669B20", VA = "0x2669B20")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000C0C")]
			[Address(RVA = "0x2669B5C", Offset = "0x2669B5C", VA = "0x2669B5C")]
			set
			{
			}
		}

		[Token(Token = "0x17000154")]
		public Vector3 poleAxis
		{
			[Token(Token = "0x6000C0D")]
			[Address(RVA = "0x2669B68", Offset = "0x2669B68", VA = "0x2669B68")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000C0E")]
			[Address(RVA = "0x2669BA4", Offset = "0x2669BA4", VA = "0x2669BA4")]
			set
			{
			}
		}

		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0x2669BB0", Offset = "0x2669BB0", VA = "0x2669BB0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C10")]
		[Address(RVA = "0x266A9F8", Offset = "0x266A9F8", VA = "0x266A9F8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C11")]
		[Address(RVA = "0x266ADE0", Offset = "0x266ADE0", VA = "0x266ADE0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C12")]
		[Address(RVA = "0x266AEE0", Offset = "0x266AEE0", VA = "0x266AEE0")]
		public AimIKJ()
		{
		}
	}
	[Token(Token = "0x2000186")]
	public struct AimIKJob : IAnimationJob
	{
		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TransformSceneHandle _target;

		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public TransformSceneHandle _poleTarget;

		[Token(Token = "0x4000A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TransformStreamHandle _transform;

		[Token(Token = "0x4000A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public PropertySceneHandle _IKPositionWeight;

		[Token(Token = "0x4000A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public PropertySceneHandle _poleWeight;

		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public PropertySceneHandle _axisX;

		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public PropertySceneHandle _axisY;

		[Token(Token = "0x4000A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public PropertySceneHandle _axisZ;

		[Token(Token = "0x4000A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public PropertySceneHandle _poleAxisX;

		[Token(Token = "0x4000A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public PropertySceneHandle _poleAxisY;

		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public PropertySceneHandle _poleAxisZ;

		[Token(Token = "0x4000A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public PropertySceneHandle _clampWeight;

		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public PropertySceneHandle _clampSmoothing;

		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public PropertySceneHandle _maxIterations;

		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public PropertySceneHandle _tolerance;

		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public PropertySceneHandle _XY;

		[Token(Token = "0x4000A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public PropertySceneHandle _useRotationLimits;

		[Token(Token = "0x4000A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private NativeArray<TransformStreamHandle> bones;

		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private NativeArray<PropertySceneHandle> boneWeights;

		[Token(Token = "0x4000A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 lastLocalDirection;

		[Token(Token = "0x4000A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float step;

		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private NativeArray<Quaternion> limitDefaultLocalRotationArray;

		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private NativeArray<Vector3> limitAxisArray;

		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private NativeArray<int> hingeFlags;

		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private NativeArray<PropertySceneHandle> hingeMinArray;

		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private NativeArray<PropertySceneHandle> hingeMaxArray;

		[Token(Token = "0x4000A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private NativeArray<PropertySceneHandle> hingeUseLimitsArray;

		[Token(Token = "0x4000A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private NativeArray<Quaternion> hingeLastRotations;

		[Token(Token = "0x4000A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private NativeArray<float> hingeLastAngles;

		[Token(Token = "0x4000A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private NativeArray<int> angleFlags;

		[Token(Token = "0x4000A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private NativeArray<Vector3> angleSecondaryAxisArray;

		[Token(Token = "0x4000A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private NativeArray<PropertySceneHandle> angleLimitArray;

		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private NativeArray<PropertySceneHandle> angleTwistLimitArray;

		[Token(Token = "0x6000C13")]
		[Address(RVA = "0x266A330", Offset = "0x266A330", VA = "0x266A330")]
		public void Setup(Animator animator, Transform[] bones, Transform target, Transform poleTarget, Transform aimTransform)
		{
		}

		[Token(Token = "0x6000C14")]
		[Address(RVA = "0x266AF7C", Offset = "0x266AF7C", VA = "0x266AF7C")]
		private void SetUpRotationLimits(Animator animator, Transform[] bones)
		{
		}

		[Token(Token = "0x6000C15")]
		[Address(RVA = "0x266B5F0", Offset = "0x266B5F0", VA = "0x266B5F0")]
		private void DisposeRotationLimits()
		{
		}

		[Token(Token = "0x6000C16")]
		[Address(RVA = "0x266B6F4", Offset = "0x266B6F4", VA = "0x266B6F4", Slot = "5")]
		public void ProcessRootMotion(AnimationStream stream)
		{
		}

		[Token(Token = "0x6000C17")]
		[Address(RVA = "0x266B6F8", Offset = "0x266B6F8", VA = "0x266B6F8", Slot = "4")]
		public void ProcessAnimation(AnimationStream stream)
		{
		}

		[Token(Token = "0x6000C18")]
		[Address(RVA = "0x266B730", Offset = "0x266B730", VA = "0x266B730")]
		private void Update(AnimationStream s)
		{
		}

		[Token(Token = "0x6000C19")]
		[Address(RVA = "0x266C874", Offset = "0x266C874", VA = "0x266C874")]
		private void RotateToTarget(AnimationStream s, Vector3 targetPosition, Vector3 polePosition, int i, float weight, float poleWeight, bool XY, bool useRotationLimits, Vector3 axis, Vector3 poleAxis)
		{
		}

		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0x266C5B0", Offset = "0x266C5B0", VA = "0x266C5B0")]
		public float GetAngle(AnimationStream s, Vector3 axis, Vector3 IKPosition)
		{
			return default(float);
		}

		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0x266C278", Offset = "0x266C278", VA = "0x266C278")]
		private Vector3 GetClampedIKPosition(AnimationStream s, float clampWeight, int clampSmoothing, Vector3 IKPosition, Vector3 transformPosition, Vector3 transformAxis)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0x266C754", Offset = "0x266C754", VA = "0x266C754")]
		private Vector3 GetLocalDirection(AnimationStream s, Vector3 transformAxis)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0x266D69C", Offset = "0x266D69C", VA = "0x266D69C")]
		private float GetPositionOffset(AnimationStream s, Vector3 localDirection)
		{
			return default(float);
		}

		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0x266AE74", Offset = "0x266AE74", VA = "0x266AE74")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x2000187")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1466904", Offset = "0x1466904")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1466904", Offset = "0x1466904")]
	public class CCDIKJ : MonoBehaviour
	{
		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146F5F4", Offset = "0x146F5F4")]
		public Transform target;

		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146F62C", Offset = "0x146F62C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146F62C", Offset = "0x146F62C")]
		public float weight;

		[Token(Token = "0x4000A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146F680", Offset = "0x146F680")]
		public float tolerance;

		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146F6B8", Offset = "0x146F6B8")]
		public int maxIterations;

		[Token(Token = "0x4000A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146F6F0", Offset = "0x146F6F0")]
		public bool useRotationLimits;

		[Token(Token = "0x4000A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146F728", Offset = "0x146F728")]
		public bool XY;

		[Token(Token = "0x4000A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146F760", Offset = "0x146F760")]
		public Transform[] bones;

		[Token(Token = "0x4000A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146F798", Offset = "0x146F798")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x4000A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Animator animator;

		[Token(Token = "0x4000A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private PlayableGraph graph;

		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AnimationScriptPlayable IKPlayable;

		[Token(Token = "0x4000A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private CCDIKJob job;

		[Token(Token = "0x17000155")]
		public bool initiated
		{
			[Token(Token = "0x6000C1F")]
			[Address(RVA = "0x266FFD4", Offset = "0x266FFD4", VA = "0x266FFD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1481B58", Offset = "0x1481B58")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C20")]
			[Address(RVA = "0x266FFDC", Offset = "0x266FFDC", VA = "0x266FFDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1481B68", Offset = "0x1481B68")]
			private set
			{
			}
		}

		[Token(Token = "0x6000C21")]
		[Address(RVA = "0x266FFE8", Offset = "0x266FFE8", VA = "0x266FFE8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C22")]
		[Address(RVA = "0x26707C8", Offset = "0x26707C8", VA = "0x26707C8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C23")]
		[Address(RVA = "0x2670960", Offset = "0x2670960", VA = "0x2670960")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C24")]
		[Address(RVA = "0x2670A74", Offset = "0x2670A74", VA = "0x2670A74")]
		public CCDIKJ()
		{
		}
	}
	[Token(Token = "0x2000188")]
	public struct CCDIKJob : IAnimationJob
	{
		[Token(Token = "0x4000A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TransformSceneHandle _target;

		[Token(Token = "0x4000A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public PropertySceneHandle _IKPositionWeight;

		[Token(Token = "0x4000A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PropertySceneHandle _maxIterations;

		[Token(Token = "0x4000A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PropertySceneHandle _tolerance;

		[Token(Token = "0x4000A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PropertySceneHandle _XY;

		[Token(Token = "0x4000A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PropertySceneHandle _useRotationLimits;

		[Token(Token = "0x4000A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private NativeArray<TransformStreamHandle> bones;

		[Token(Token = "0x4000A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private NativeArray<PropertySceneHandle> boneWeights;

		[Token(Token = "0x4000A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private NativeArray<float> boneSqrMags;

		[Token(Token = "0x4000A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float chainSqrMag;

		[Token(Token = "0x4000A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 lastLocalDirection;

		[Token(Token = "0x4000A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private NativeArray<Quaternion> limitDefaultLocalRotationArray;

		[Token(Token = "0x4000A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private NativeArray<Vector3> limitAxisArray;

		[Token(Token = "0x4000A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private NativeArray<int> hingeFlags;

		[Token(Token = "0x4000A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private NativeArray<PropertySceneHandle> hingeMinArray;

		[Token(Token = "0x4000A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private NativeArray<PropertySceneHandle> hingeMaxArray;

		[Token(Token = "0x4000A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private NativeArray<PropertySceneHandle> hingeUseLimitsArray;

		[Token(Token = "0x4000A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private NativeArray<Quaternion> hingeLastRotations;

		[Token(Token = "0x4000A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private NativeArray<float> hingeLastAngles;

		[Token(Token = "0x4000A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private NativeArray<int> angleFlags;

		[Token(Token = "0x4000A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private NativeArray<Vector3> angleSecondaryAxisArray;

		[Token(Token = "0x4000A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private NativeArray<PropertySceneHandle> angleLimitArray;

		[Token(Token = "0x4000A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private NativeArray<PropertySceneHandle> angleTwistLimitArray;

		[Token(Token = "0x6000C25")]
		[Address(RVA = "0x2670368", Offset = "0x2670368", VA = "0x2670368")]
		public void Setup(Animator animator, Transform[] bones, Transform target)
		{
		}

		[Token(Token = "0x6000C26")]
		[Address(RVA = "0x2670AF8", Offset = "0x2670AF8", VA = "0x2670AF8")]
		private void SetUpRotationLimits(Animator animator, Transform[] bones)
		{
		}

		[Token(Token = "0x6000C27")]
		[Address(RVA = "0x267116C", Offset = "0x267116C", VA = "0x267116C")]
		private void DisposeRotationLimits()
		{
		}

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0x2671270", Offset = "0x2671270", VA = "0x2671270", Slot = "5")]
		public void ProcessRootMotion(AnimationStream stream)
		{
		}

		[Token(Token = "0x6000C29")]
		[Address(RVA = "0x2671274", Offset = "0x2671274", VA = "0x2671274", Slot = "4")]
		public void ProcessAnimation(AnimationStream stream)
		{
		}

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0x26712AC", Offset = "0x26712AC", VA = "0x26712AC")]
		private void Update(AnimationStream s)
		{
		}

		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0x26717D4", Offset = "0x26717D4", VA = "0x26717D4")]
		private void Read(AnimationStream s)
		{
		}

		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0x2671FA4", Offset = "0x2671FA4", VA = "0x2671FA4")]
		private void Solve(AnimationStream s, Vector3 targetPosition, bool XY, float weight, int it, bool useRotationLimits)
		{
		}

		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0x2671CE8", Offset = "0x2671CE8", VA = "0x2671CE8")]
		private Vector3 GetLocalDirection(AnimationStream s)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0x2671EF4", Offset = "0x2671EF4", VA = "0x2671EF4")]
		private float GetPositionOffset(AnimationStream s, Vector3 localDirection)
		{
			return default(float);
		}

		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0x26719A0", Offset = "0x26719A0", VA = "0x26719A0")]
		private Vector3 GetSingularityOffset(AnimationStream s, Vector3 IKPosition, bool useRotationLimits)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C30")]
		[Address(RVA = "0x26729D4", Offset = "0x26729D4", VA = "0x26729D4")]
		private bool SingularityDetected(AnimationStream s, Vector3 IKPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0x26709F4", Offset = "0x26709F4", VA = "0x26709F4")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x2000189")]
	public class IKJBoneParams : MonoBehaviour
	{
		[Token(Token = "0x4000A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146F7A8", Offset = "0x146F7A8")]
		public float weight;

		[Token(Token = "0x6000C32")]
		[Address(RVA = "0x312BEC0", Offset = "0x312BEC0", VA = "0x312BEC0")]
		public IKJBoneParams()
		{
		}
	}
	[Token(Token = "0x200018A")]
	public static class RotationLimitUtilities
	{
		[Token(Token = "0x6000C33")]
		[Address(RVA = "0x2889CC0", Offset = "0x2889CC0", VA = "0x2889CC0")]
		public static Quaternion LimitHinge(Quaternion rotation, float min, float max, bool useLimits, Vector3 axis, ref Quaternion lastRotation, ref float lastAngle)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000C34")]
		[Address(RVA = "0x2889FE0", Offset = "0x2889FE0", VA = "0x2889FE0")]
		public static Quaternion Limit1DOF(Quaternion rotation, Vector3 axis)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000C35")]
		[Address(RVA = "0x288A0C4", Offset = "0x288A0C4", VA = "0x288A0C4")]
		public static Quaternion LimitAngle(Quaternion rotation, Vector3 axis, Vector3 secondaryAxis, float limit, float twistLimit)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000C36")]
		[Address(RVA = "0x288A12C", Offset = "0x288A12C", VA = "0x288A12C")]
		public static Quaternion LimitSwing(Quaternion rotation, Vector3 axis, float limit)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000C37")]
		[Address(RVA = "0x288A360", Offset = "0x288A360", VA = "0x288A360")]
		public static Quaternion LimitTwist(Quaternion rotation, Vector3 axis, Vector3 orthoAxis, float twistLimit)
		{
			return default(Quaternion);
		}
	}
	[Serializable]
	[Token(Token = "0x200018B")]
	public class FABRIKChain
	{
		[Token(Token = "0x4000A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FABRIK ik;

		[Token(Token = "0x4000A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146F7C0", Offset = "0x146F7C0")]
		public float pull;

		[Token(Token = "0x4000A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146F7D8", Offset = "0x146F7D8")]
		public float pin;

		[Token(Token = "0x4000A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int[] children;

		[Token(Token = "0x6000C38")]
		[Address(RVA = "0x26743DC", Offset = "0x26743DC", VA = "0x26743DC")]
		public bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C39")]
		[Address(RVA = "0x26744B0", Offset = "0x26744B0", VA = "0x26744B0")]
		public void Initiate()
		{
		}

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0x26744D0", Offset = "0x26744D0", VA = "0x26744D0")]
		public void Stage1(FABRIKChain[] chain)
		{
		}

		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0x26748A0", Offset = "0x26748A0", VA = "0x26748A0")]
		public void Stage2(Vector3 rootPosition, FABRIKChain[] chain)
		{
		}

		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0x26745A4", Offset = "0x26745A4", VA = "0x26745A4")]
		private Vector3 GetCentroid(FABRIKChain[] chain)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0x2674998", Offset = "0x2674998", VA = "0x2674998")]
		public FABRIKChain()
		{
		}
	}
	[Token(Token = "0x200018C")]
	public class FBBIKArmBending : MonoBehaviour
	{
		[Token(Token = "0x4000A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x4000A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 bendDirectionOffsetLeft;

		[Token(Token = "0x4000A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 bendDirectionOffsetRight;

		[Token(Token = "0x4000A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 characterSpaceBendOffsetLeft;

		[Token(Token = "0x4000A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 characterSpaceBendOffsetRight;

		[Token(Token = "0x4000A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion leftHandTargetRotation;

		[Token(Token = "0x4000A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Quaternion rightHandTargetRotation;

		[Token(Token = "0x4000A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool initiated;

		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0x2674BB8", Offset = "0x2674BB8", VA = "0x2674BB8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0x2675134", Offset = "0x2675134", VA = "0x2675134")]
		private void OnPostFBBIK()
		{
		}

		[Token(Token = "0x6000C40")]
		[Address(RVA = "0x26752F4", Offset = "0x26752F4", VA = "0x26752F4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000C41")]
		[Address(RVA = "0x2675410", Offset = "0x2675410", VA = "0x2675410")]
		public FBBIKArmBending()
		{
		}
	}
	[Token(Token = "0x200018D")]
	public class FBBIKHeadEffector : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000565")]
		public class BendBone
		{
			[Token(Token = "0x4002127")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147A630", Offset = "0x147A630")]
			public Transform transform;

			[Token(Token = "0x4002128")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147A668", Offset = "0x147A668")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x147A668", Offset = "0x147A668")]
			public float weight;

			[Token(Token = "0x4002129")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private Quaternion defaultLocalRotation;

			[Token(Token = "0x60024FF")]
			[Address(RVA = "0x26785A0", Offset = "0x26785A0", VA = "0x26785A0")]
			public BendBone()
			{
			}

			[Token(Token = "0x6002500")]
			[Address(RVA = "0x2678620", Offset = "0x2678620", VA = "0x2678620")]
			public BendBone(Transform transform, float weight)
			{
			}

			[Token(Token = "0x6002501")]
			[Address(RVA = "0x2675C60", Offset = "0x2675C60", VA = "0x2675C60")]
			public void StoreDefaultLocalState()
			{
			}

			[Token(Token = "0x6002502")]
			[Address(RVA = "0x2676064", Offset = "0x2676064", VA = "0x2676064")]
			public void FixTransforms()
			{
			}
		}

		[Token(Token = "0x4000A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146F7F0", Offset = "0x146F7F0")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x4000A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x146F828", Offset = "0x146F828")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146F828", Offset = "0x146F828")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146F828", Offset = "0x146F828")]
		public float positionWeight;

		[Token(Token = "0x4000A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146F8A0", Offset = "0x146F8A0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146F8A0", Offset = "0x146F8A0")]
		public float bodyWeight;

		[Token(Token = "0x4000A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146F8F4", Offset = "0x146F8F4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146F8F4", Offset = "0x146F8F4")]
		public float thighWeight;

		[Token(Token = "0x4000A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146F948", Offset = "0x146F948")]
		public bool handsPullBody;

		[Token(Token = "0x4000A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x146F980", Offset = "0x146F980")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146F980", Offset = "0x146F980")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146F980", Offset = "0x146F980")]
		public float rotationWeight;

		[Token(Token = "0x4000A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146F9F8", Offset = "0x146F9F8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146F9F8", Offset = "0x146F9F8")]
		public float bodyClampWeight;

		[Token(Token = "0x4000A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146FA4C", Offset = "0x146FA4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146FA4C", Offset = "0x146FA4C")]
		public float headClampWeight;

		[Token(Token = "0x4000A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146FAA0", Offset = "0x146FAA0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146FAA0", Offset = "0x146FAA0")]
		public float bendWeight;

		[Token(Token = "0x4000A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146FAF4", Offset = "0x146FAF4")]
		public BendBone[] bendBones;

		[Token(Token = "0x4000A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x146FB2C", Offset = "0x146FB2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146FB2C", Offset = "0x146FB2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146FB2C", Offset = "0x146FB2C")]
		public float CCDWeight;

		[Token(Token = "0x4000A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146FBA4", Offset = "0x146FBA4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146FBA4", Offset = "0x146FBA4")]
		public float roll;

		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146FBF8", Offset = "0x146FBF8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146FBF8", Offset = "0x146FBF8")]
		public float damper;

		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146FC50", Offset = "0x146FC50")]
		public Transform[] CCDBones;

		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x146FC88", Offset = "0x146FC88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146FC88", Offset = "0x146FC88")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146FC88", Offset = "0x146FC88")]
		public float postStretchWeight;

		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146FD00", Offset = "0x146FD00")]
		public float maxStretch;

		[Token(Token = "0x4000A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146FD38", Offset = "0x146FD38")]
		public float stretchDamper;

		[Token(Token = "0x4000A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146FD70", Offset = "0x146FD70")]
		public bool fixHead;

		[Token(Token = "0x4000A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146FDA8", Offset = "0x146FDA8")]
		public Transform[] stretchBones;

		[Token(Token = "0x4000A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x146FDE0", Offset = "0x146FDE0")]
		public Vector3 chestDirection;

		[Token(Token = "0x4000A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146FE18", Offset = "0x146FE18")]
		public float chestDirectionWeight;

		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform[] chestBones;

		[Token(Token = "0x4000A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public IKSolver.UpdateDelegate OnPostHeadEffectorFK;

		[Token(Token = "0x4000A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 offset;

		[Token(Token = "0x4000A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector3 headToBody;

		[Token(Token = "0x4000A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 shoulderCenterToHead;

		[Token(Token = "0x4000A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Vector3 headToLeftThigh;

		[Token(Token = "0x4000A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Vector3 headToRightThigh;

		[Token(Token = "0x4000A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private Vector3 leftShoulderPos;

		[Token(Token = "0x4000A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Vector3 rightShoulderPos;

		[Token(Token = "0x4000A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float shoulderDist;

		[Token(Token = "0x4000A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private float leftShoulderDist;

		[Token(Token = "0x4000A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private float rightShoulderDist;

		[Token(Token = "0x4000A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Quaternion chestRotation;

		[Token(Token = "0x4000A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Quaternion headRotationRelativeToRoot;

		[Token(Token = "0x4000A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Quaternion[] ccdDefaultLocalRotations;

		[Token(Token = "0x4000A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Vector3 headLocalPosition;

		[Token(Token = "0x4000A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private Quaternion headLocalRotation;

		[Token(Token = "0x4000A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private Vector3[] stretchLocalPositions;

		[Token(Token = "0x4000A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Quaternion[] stretchLocalRotations;

		[Token(Token = "0x4000A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Vector3[] chestLocalPositions;

		[Token(Token = "0x4000A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Quaternion[] chestLocalRotations;

		[Token(Token = "0x4000A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private int bendBonesCount;

		[Token(Token = "0x4000A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private int ccdBonesCount;

		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private int stretchBonesCount;

		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private int chestBonesCount;

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0x2675418", Offset = "0x2675418", VA = "0x2675418")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0x267579C", Offset = "0x267579C", VA = "0x267579C")]
		private void OnStoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0x2675C98", Offset = "0x2675C98", VA = "0x2675C98")]
		private void OnFixTransforms()
		{
		}

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0x267608C", Offset = "0x267608C", VA = "0x267608C")]
		private void OnPreRead()
		{
		}

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0x2676A04", Offset = "0x2676A04", VA = "0x2676A04")]
		private void SpineBend()
		{
		}

		[Token(Token = "0x6000C47")]
		[Address(RVA = "0x2676D50", Offset = "0x2676D50", VA = "0x2676D50")]
		private void CCDPass()
		{
		}

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0x26770EC", Offset = "0x26770EC", VA = "0x26770EC")]
		private void Iterate(int iteration)
		{
		}

		[Token(Token = "0x6000C49")]
		[Address(RVA = "0x2677B58", Offset = "0x2677B58", VA = "0x2677B58")]
		private void OnPostUpdate()
		{
		}

		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0x2676730", Offset = "0x2676730", VA = "0x2676730")]
		private void ChestDirection()
		{
		}

		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0x2677D68", Offset = "0x2677D68", VA = "0x2677D68")]
		private void PostStretching()
		{
		}

		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0x2677A14", Offset = "0x2677A14", VA = "0x2677A14")]
		private void LerpSolverPosition(IKEffector effector, Vector3 position, float weight, Vector3 offset)
		{
		}

		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0x2677878", Offset = "0x2677878", VA = "0x2677878")]
		private void Solve(ref Vector3 pos1, ref Vector3 pos2, float nominalDistance)
		{
		}

		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0x26780D4", Offset = "0x26780D4", VA = "0x26780D4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0x26783B8", Offset = "0x26783B8", VA = "0x26783B8")]
		public FBBIKHeadEffector()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200018E")]
	public class FBIKChain
	{
		[Serializable]
		[Token(Token = "0x2000566")]
		public class ChildConstraint
		{
			[Token(Token = "0x400212A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float pushElasticity;

			[Token(Token = "0x400212B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float pullElasticity;

			[Token(Token = "0x400212C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private Transform bone1;

			[Token(Token = "0x400212D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private Transform bone2;

			[Token(Token = "0x400212E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147A6DC", Offset = "0x147A6DC")]
			private float <nominalDistance>k__BackingField;

			[Token(Token = "0x400212F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147A6EC", Offset = "0x147A6EC")]
			private bool <isRigid>k__BackingField;

			[Token(Token = "0x4002130")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float crossFade;

			[Token(Token = "0x4002131")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float inverseCrossFade;

			[Token(Token = "0x4002132")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int chain1Index;

			[Token(Token = "0x4002133")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int chain2Index;

			[Token(Token = "0x170004D0")]
			public float nominalDistance
			{
				[Token(Token = "0x6002503")]
				[Address(RVA = "0x267B5D4", Offset = "0x267B5D4", VA = "0x267B5D4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1488054", Offset = "0x1488054")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6002504")]
				[Address(RVA = "0x267B5DC", Offset = "0x267B5DC", VA = "0x267B5DC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1488064", Offset = "0x1488064")]
				private set
				{
				}
			}

			[Token(Token = "0x170004D1")]
			public bool isRigid
			{
				[Token(Token = "0x6002505")]
				[Address(RVA = "0x267B5E4", Offset = "0x267B5E4", VA = "0x267B5E4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1488074", Offset = "0x1488074")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6002506")]
				[Address(RVA = "0x267B5EC", Offset = "0x267B5EC", VA = "0x267B5EC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1488084", Offset = "0x1488084")]
				private set
				{
				}
			}

			[Token(Token = "0x6002507")]
			[Address(RVA = "0x267B5F8", Offset = "0x267B5F8", VA = "0x267B5F8")]
			public ChildConstraint(Transform bone1, Transform bone2, float pushElasticity = 0f, float pullElasticity = 0f)
			{
			}

			[Token(Token = "0x6002508")]
			[Address(RVA = "0x2679358", Offset = "0x2679358", VA = "0x2679358")]
			public void Initiate(IKSolverFullBody solver)
			{
			}

			[Token(Token = "0x6002509")]
			[Address(RVA = "0x2679898", Offset = "0x2679898", VA = "0x2679898")]
			public void OnPreSolve(IKSolverFullBody solver)
			{
			}

			[Token(Token = "0x600250A")]
			[Address(RVA = "0x267B2D0", Offset = "0x267B2D0", VA = "0x267B2D0")]
			public void Solve(IKSolverFullBody solver)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000567")]
		public enum Smoothing
		{
			[Token(Token = "0x4002135")]
			None,
			[Token(Token = "0x4002136")]
			Exponential,
			[Token(Token = "0x4002137")]
			Cubic
		}

		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146FE30", Offset = "0x146FE30")]
		public float pin;

		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146FE48", Offset = "0x146FE48")]
		public float pull;

		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146FE60", Offset = "0x146FE60")]
		public float push;

		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146FE78", Offset = "0x146FE78")]
		public float pushParent;

		[Token(Token = "0x4000A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146FE90", Offset = "0x146FE90")]
		public float reach;

		[Token(Token = "0x4000A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Smoothing reachSmoothing;

		[Token(Token = "0x4000A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Smoothing pushSmoothing;

		[Token(Token = "0x4000A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IKSolver.Node[] nodes;

		[Token(Token = "0x4000A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int[] children;

		[Token(Token = "0x4000A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ChildConstraint[] childConstraints;

		[Token(Token = "0x4000A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public IKConstraintBend bendConstraint;

		[Token(Token = "0x4000A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float rootLength;

		[Token(Token = "0x4000A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool initiated;

		[Token(Token = "0x4000A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float length;

		[Token(Token = "0x4000A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float distance;

		[Token(Token = "0x4000A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private IKSolver.Point p;

		[Token(Token = "0x4000AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float reachForce;

		[Token(Token = "0x4000AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float pullParentSum;

		[Token(Token = "0x4000AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float[] crossFades;

		[Token(Token = "0x4000AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float sqrMag1;

		[Token(Token = "0x4000AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float sqrMag2;

		[Token(Token = "0x4000AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float sqrMagDif;

		[Token(Token = "0x4000AA6")]
		private const float maxLimbLength = 0.99999f;

		[Token(Token = "0x6000C50")]
		[Address(RVA = "0x26786D0", Offset = "0x26786D0", VA = "0x26786D0")]
		public FBIKChain()
		{
		}

		[Token(Token = "0x6000C51")]
		[Address(RVA = "0x26787CC", Offset = "0x26787CC", VA = "0x26787CC")]
		public FBIKChain(float pin, float pull, params Transform[] nodeTransforms)
		{
		}

		[Token(Token = "0x6000C52")]
		[Address(RVA = "0x267891C", Offset = "0x267891C", VA = "0x267891C")]
		public void SetNodes(params Transform[] boneTransforms)
		{
		}

		[Token(Token = "0x6000C53")]
		[Address(RVA = "0x2678A50", Offset = "0x2678A50", VA = "0x2678A50")]
		public int GetNodeIndex(Transform boneTransform)
		{
			return default(int);
		}

		[Token(Token = "0x6000C54")]
		[Address(RVA = "0x2678B2C", Offset = "0x2678B2C", VA = "0x2678B2C")]
		public bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C55")]
		[Address(RVA = "0x2678C3C", Offset = "0x2678C3C", VA = "0x2678C3C")]
		public void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000C56")]
		[Address(RVA = "0x26793B0", Offset = "0x26793B0", VA = "0x26793B0")]
		public void ReadPose(IKSolverFullBody solver, bool fullBody)
		{
		}

		[Token(Token = "0x6000C57")]
		[Address(RVA = "0x2678DD8", Offset = "0x2678DD8", VA = "0x2678DD8")]
		private void CalculateBoneLengths(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000C58")]
		[Address(RVA = "0x2679A9C", Offset = "0x2679A9C", VA = "0x2679A9C")]
		public void Reach(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0x2679E40", Offset = "0x2679E40", VA = "0x2679E40")]
		public Vector3 Push(IKSolverFullBody solver)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0x267A224", Offset = "0x267A224", VA = "0x267A224")]
		public void SolveTrigonometric(IKSolverFullBody solver, bool calculateBendDirection = false)
		{
		}

		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0x267A7A8", Offset = "0x267A7A8", VA = "0x267A7A8")]
		public void Stage1(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0x267AD78", Offset = "0x267AD78", VA = "0x267AD78")]
		public void Stage2(IKSolverFullBody solver, Vector3 position)
		{
		}

		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0x267B010", Offset = "0x267B010", VA = "0x267B010")]
		public void SolveConstraintSystems(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0x267AC70", Offset = "0x267AC70", VA = "0x267AC70")]
		private Vector3 SolveFABRIKJoint(Vector3 pos1, Vector3 pos2, float length)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0x267A590", Offset = "0x267A590", VA = "0x267A590")]
		protected Vector3 GetDirToBendPoint(Vector3 direction, Vector3 bendDirection, float directionMagnitude)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0x267ABF8", Offset = "0x267ABF8", VA = "0x267ABF8")]
		private void SolveChildConstraints(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0x267B0F8", Offset = "0x267B0F8", VA = "0x267B0F8")]
		private void SolveLinearConstraint(IKSolver.Node node1, IKSolver.Node node2, float crossFade, float distance)
		{
		}

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0x267AB18", Offset = "0x267AB18", VA = "0x267AB18")]
		public void ForwardReach(Vector3 position)
		{
		}

		[Token(Token = "0x6000C63")]
		[Address(RVA = "0x267AEF8", Offset = "0x267AEF8", VA = "0x267AEF8")]
		private void BackwardReach(Vector3 position)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200018F")]
	public class IKConstraintBend
	{
		[Token(Token = "0x4000AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform bone1;

		[Token(Token = "0x4000AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform bone2;

		[Token(Token = "0x4000AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform bone3;

		[Token(Token = "0x4000AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform bendGoal;

		[Token(Token = "0x4000AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 direction;

		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Quaternion rotationOffset;

		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146FEA8", Offset = "0x146FEA8")]
		public float weight;

		[Token(Token = "0x4000AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector3 defaultLocalDirection;

		[Token(Token = "0x4000AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Vector3 defaultChildDirection;

		[NonSerialized]
		[Token(Token = "0x4000AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float clampF;

		[Token(Token = "0x4000AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int chainIndex1;

		[Token(Token = "0x4000AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int nodeIndex1;

		[Token(Token = "0x4000AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int chainIndex2;

		[Token(Token = "0x4000AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int nodeIndex2;

		[Token(Token = "0x4000AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int chainIndex3;

		[Token(Token = "0x4000AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int nodeIndex3;

		[Token(Token = "0x4000AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146FEC0", Offset = "0x146FEC0")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x4000AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
		private bool limbOrientationsSet;

		[Token(Token = "0x17000156")]
		public bool initiated
		{
			[Token(Token = "0x6000C65")]
			[Address(RVA = "0x3128DA0", Offset = "0x3128DA0", VA = "0x3128DA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1481B78", Offset = "0x1481B78")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C66")]
			[Address(RVA = "0x3128DA8", Offset = "0x3128DA8", VA = "0x3128DA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1481B88", Offset = "0x1481B88")]
			private set
			{
			}
		}

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0x3128BD8", Offset = "0x3128BD8", VA = "0x3128BD8")]
		public bool IsValid(IKSolverFullBody solver, Warning.Logger logger)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C67")]
		[Address(RVA = "0x3128DB4", Offset = "0x3128DB4", VA = "0x3128DB4")]
		public IKConstraintBend()
		{
		}

		[Token(Token = "0x6000C68")]
		[Address(RVA = "0x3128E38", Offset = "0x3128E38", VA = "0x3128E38")]
		public IKConstraintBend(Transform bone1, Transform bone2, Transform bone3)
		{
		}

		[Token(Token = "0x6000C69")]
		[Address(RVA = "0x3128EEC", Offset = "0x3128EEC", VA = "0x3128EEC")]
		public void SetBones(Transform bone1, Transform bone2, Transform bone3)
		{
		}

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0x3128F3C", Offset = "0x3128F3C", VA = "0x3128F3C")]
		public void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0x312942C", Offset = "0x312942C", VA = "0x312942C")]
		public void SetLimbOrientation(Vector3 upper, Vector3 lower, Vector3 last)
		{
		}

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0x3129664", Offset = "0x3129664", VA = "0x3129664")]
		public void LimitBend(float solverWeight, float positionWeight)
		{
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0x3129B00", Offset = "0x3129B00", VA = "0x3129B00")]
		public Vector3 GetDir(IKSolverFullBody solver)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0x31291EC", Offset = "0x31291EC", VA = "0x31291EC")]
		private Vector3 OrthoToLimb(IKSolverFullBody solver, Vector3 tangent)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0x312930C", Offset = "0x312930C", VA = "0x312930C")]
		private Vector3 OrthoToBone1(IKSolverFullBody solver, Vector3 tangent)
		{
			return default(Vector3);
		}
	}
	[Serializable]
	[Token(Token = "0x2000190")]
	public class IKEffector
	{
		[Token(Token = "0x4000AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform bone;

		[Token(Token = "0x4000ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x4000ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146FED0", Offset = "0x146FED0")]
		public float positionWeight;

		[Token(Token = "0x4000ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146FEE8", Offset = "0x146FEE8")]
		public float rotationWeight;

		[Token(Token = "0x4000ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 position;

		[Token(Token = "0x4000ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Quaternion rotation;

		[Token(Token = "0x4000ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 positionOffset;

		[Token(Token = "0x4000AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146FF00", Offset = "0x146FF00")]
		private bool <isEndEffector>k__BackingField;

		[Token(Token = "0x4000AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool effectChildNodes;

		[Token(Token = "0x4000AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146FF10", Offset = "0x146FF10")]
		public float maintainRelativePositionWeight;

		[Token(Token = "0x4000AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform[] childBones;

		[Token(Token = "0x4000AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform planeBone1;

		[Token(Token = "0x4000AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform planeBone2;

		[Token(Token = "0x4000AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform planeBone3;

		[Token(Token = "0x4000AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Quaternion planeRotationOffset;

		[Token(Token = "0x4000AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float posW;

		[Token(Token = "0x4000AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float rotW;

		[Token(Token = "0x4000ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3[] localPositions;

		[Token(Token = "0x4000ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool usePlaneNodes;

		[Token(Token = "0x4000ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Quaternion animatedPlaneRotation;

		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Vector3 animatedPosition;

		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool firstUpdate;

		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int chainIndex;

		[Token(Token = "0x4000AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int nodeIndex;

		[Token(Token = "0x4000AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private int plane1ChainIndex;

		[Token(Token = "0x4000AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private int plane1NodeIndex;

		[Token(Token = "0x4000AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private int plane2ChainIndex;

		[Token(Token = "0x4000AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private int plane2NodeIndex;

		[Token(Token = "0x4000AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private int plane3ChainIndex;

		[Token(Token = "0x4000AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private int plane3NodeIndex;

		[Token(Token = "0x4000AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private int[] childChainIndexes;

		[Token(Token = "0x4000AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private int[] childNodeIndexes;

		[Token(Token = "0x17000157")]
		public bool isEndEffector
		{
			[Token(Token = "0x6000C71")]
			[Address(RVA = "0x312A16C", Offset = "0x312A16C", VA = "0x312A16C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1481B98", Offset = "0x1481B98")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C72")]
			[Address(RVA = "0x312A174", Offset = "0x312A174", VA = "0x312A174")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1481BA8", Offset = "0x1481BA8")]
			private set
			{
			}
		}

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0x312A104", Offset = "0x312A104", VA = "0x312A104")]
		public IKSolver.Node GetNode(IKSolverFullBody solver)
		{
			return null;
		}

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0x312A180", Offset = "0x312A180", VA = "0x312A180")]
		public void PinToBone(float positionWeight, float rotationWeight)
		{
		}

		[Token(Token = "0x6000C74")]
		[Address(RVA = "0x312A254", Offset = "0x312A254", VA = "0x312A254")]
		public IKEffector()
		{
		}

		[Token(Token = "0x6000C75")]
		[Address(RVA = "0x312A3C0", Offset = "0x312A3C0", VA = "0x312A3C0")]
		public IKEffector(Transform bone, Transform[] childBones)
		{
		}

		[Token(Token = "0x6000C76")]
		[Address(RVA = "0x312A568", Offset = "0x312A568", VA = "0x312A568")]
		public bool IsValid(IKSolver solver, ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C77")]
		[Address(RVA = "0x312A864", Offset = "0x312A864", VA = "0x312A864")]
		public void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000C78")]
		[Address(RVA = "0x312AB3C", Offset = "0x312AB3C", VA = "0x312AB3C")]
		public void ResetOffset(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000C79")]
		[Address(RVA = "0x312AC7C", Offset = "0x312AC7C", VA = "0x312AC7C")]
		public void SetToTarget()
		{
		}

		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0x312AD28", Offset = "0x312AD28", VA = "0x312AD28")]
		public void OnPreSolve(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0x312B37C", Offset = "0x312B37C", VA = "0x312B37C")]
		public void OnPostWrite()
		{
		}

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0x312B3EC", Offset = "0x312B3EC", VA = "0x312B3EC")]
		private Quaternion GetPlaneRotation(IKSolverFullBody solver)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0x312B604", Offset = "0x312B604", VA = "0x312B604")]
		public void Update(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0x312B94C", Offset = "0x312B94C", VA = "0x312B94C")]
		private Vector3 GetPosition(IKSolverFullBody solver, out Quaternion planeRotationOffset)
		{
			return default(Vector3);
		}
	}
	[Serializable]
	[Token(Token = "0x2000191")]
	public class IKMapping
	{
		[Serializable]
		[Token(Token = "0x2000568")]
		public class BoneMap
		{
			[Token(Token = "0x4002138")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform transform;

			[Token(Token = "0x4002139")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int chainIndex;

			[Token(Token = "0x400213A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int nodeIndex;

			[Token(Token = "0x400213B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 defaultLocalPosition;

			[Token(Token = "0x400213C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Quaternion defaultLocalRotation;

			[Token(Token = "0x400213D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Vector3 localSwingAxis;

			[Token(Token = "0x400213E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Vector3 localTwistAxis;

			[Token(Token = "0x400213F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public Vector3 planePosition;

			[Token(Token = "0x4002140")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Vector3 ikPosition;

			[Token(Token = "0x4002141")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public Quaternion defaultLocalTargetRotation;

			[Token(Token = "0x4002142")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			private Quaternion maintainRotation;

			[Token(Token = "0x4002143")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			public float length;

			[Token(Token = "0x4002144")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public Quaternion animatedRotation;

			[Token(Token = "0x4002145")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private Transform planeBone1;

			[Token(Token = "0x4002146")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private Transform planeBone2;

			[Token(Token = "0x4002147")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			private Transform planeBone3;

			[Token(Token = "0x4002148")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			private int plane1ChainIndex;

			[Token(Token = "0x4002149")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			private int plane1NodeIndex;

			[Token(Token = "0x400214A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private int plane2ChainIndex;

			[Token(Token = "0x400214B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
			private int plane2NodeIndex;

			[Token(Token = "0x400214C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private int plane3ChainIndex;

			[Token(Token = "0x400214D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			private int plane3NodeIndex;

			[Token(Token = "0x170004D2")]
			public Vector3 swingDirection
			{
				[Token(Token = "0x600250C")]
				[Address(RVA = "0x312C16C", Offset = "0x312C16C", VA = "0x312C16C")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x170004D3")]
			public bool isNodeBone
			{
				[Token(Token = "0x600250F")]
				[Address(RVA = "0x312C2D8", Offset = "0x312C2D8", VA = "0x312C2D8")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170004D4")]
			private Quaternion lastAnimatedTargetRotation
			{
				[Token(Token = "0x6002523")]
				[Address(RVA = "0x312C8E8", Offset = "0x312C8E8", VA = "0x312C8E8")]
				get
				{
					return default(Quaternion);
				}
			}

			[Token(Token = "0x600250B")]
			[Address(RVA = "0x312C11C", Offset = "0x312C11C", VA = "0x312C11C")]
			public void Initiate(Transform transform, IKSolverFullBody solver)
			{
			}

			[Token(Token = "0x600250D")]
			[Address(RVA = "0x312C238", Offset = "0x312C238", VA = "0x312C238")]
			public void StoreDefaultLocalState()
			{
			}

			[Token(Token = "0x600250E")]
			[Address(RVA = "0x312C288", Offset = "0x312C288", VA = "0x312C288")]
			public void FixTransform(bool position)
			{
			}

			[Token(Token = "0x6002510")]
			[Address(RVA = "0x312C2E8", Offset = "0x312C2E8", VA = "0x312C2E8")]
			public void SetLength(BoneMap nextBone)
			{
			}

			[Token(Token = "0x6002511")]
			[Address(RVA = "0x312C3D0", Offset = "0x312C3D0", VA = "0x312C3D0")]
			public void SetLocalSwingAxis(BoneMap swingTarget)
			{
			}

			[Token(Token = "0x6002512")]
			[Address(RVA = "0x312C3D8", Offset = "0x312C3D8", VA = "0x312C3D8")]
			public void SetLocalSwingAxis(BoneMap bone1, BoneMap bone2)
			{
			}

			[Token(Token = "0x6002513")]
			[Address(RVA = "0x312C568", Offset = "0x312C568", VA = "0x312C568")]
			public void SetLocalTwistAxis(Vector3 twistDirection, Vector3 normalDirection)
			{
			}

			[Token(Token = "0x6002514")]
			[Address(RVA = "0x312C674", Offset = "0x312C674", VA = "0x312C674")]
			public void SetPlane(IKSolverFullBody solver, Transform planeBone1, Transform planeBone2, Transform planeBone3)
			{
			}

			[Token(Token = "0x6002515")]
			[Address(RVA = "0x312C738", Offset = "0x312C738", VA = "0x312C738")]
			public void UpdatePlane(bool rotation, bool position)
			{
			}

			[Token(Token = "0x6002516")]
			[Address(RVA = "0x312CB0C", Offset = "0x312CB0C", VA = "0x312CB0C")]
			public void SetIKPosition()
			{
			}

			[Token(Token = "0x6002517")]
			[Address(RVA = "0x312CB44", Offset = "0x312CB44", VA = "0x312CB44")]
			public void MaintainRotation()
			{
			}

			[Token(Token = "0x6002518")]
			[Address(RVA = "0x312CB7C", Offset = "0x312CB7C", VA = "0x312CB7C")]
			public void SetToIKPosition()
			{
			}

			[Token(Token = "0x6002519")]
			[Address(RVA = "0x312CBA4", Offset = "0x312CBA4", VA = "0x312CBA4")]
			public void FixToNode(IKSolverFullBody solver, float weight, [Optional] IKSolver.Node fixNode)
			{
			}

			[Token(Token = "0x600251A")]
			[Address(RVA = "0x312CCD0", Offset = "0x312CCD0", VA = "0x312CCD0")]
			public Vector3 GetPlanePosition(IKSolverFullBody solver)
			{
				return default(Vector3);
			}

			[Token(Token = "0x600251B")]
			[Address(RVA = "0x312D018", Offset = "0x312D018", VA = "0x312D018")]
			public void PositionToPlane(IKSolverFullBody solver)
			{
			}

			[Token(Token = "0x600251C")]
			[Address(RVA = "0x312D048", Offset = "0x312D048", VA = "0x312D048")]
			public void RotateToPlane(IKSolverFullBody solver, float weight)
			{
			}

			[Token(Token = "0x600251D")]
			[Address(RVA = "0x312D1E0", Offset = "0x312D1E0", VA = "0x312D1E0")]
			public void Swing(Vector3 swingTarget, float weight)
			{
			}

			[Token(Token = "0x600251E")]
			[Address(RVA = "0x312D250", Offset = "0x312D250", VA = "0x312D250")]
			public void Swing(Vector3 pos1, Vector3 pos2, float weight)
			{
			}

			[Token(Token = "0x600251F")]
			[Address(RVA = "0x312D494", Offset = "0x312D494", VA = "0x312D494")]
			public void Twist(Vector3 twistDirection, Vector3 normalDirection, float weight)
			{
			}

			[Token(Token = "0x6002520")]
			[Address(RVA = "0x312D6BC", Offset = "0x312D6BC", VA = "0x312D6BC")]
			public void RotateToMaintain(float weight)
			{
			}

			[Token(Token = "0x6002521")]
			[Address(RVA = "0x312D7D4", Offset = "0x312D7D4", VA = "0x312D7D4")]
			public void RotateToEffector(IKSolverFullBody solver, float weight)
			{
			}

			[Token(Token = "0x6002522")]
			[Address(RVA = "0x312CE14", Offset = "0x312CE14", VA = "0x312CE14")]
			private Quaternion GetTargetRotation(IKSolverFullBody solver)
			{
				return default(Quaternion);
			}

			[Token(Token = "0x6002524")]
			[Address(RVA = "0x312D970", Offset = "0x312D970", VA = "0x312D970")]
			public BoneMap()
			{
			}
		}

		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0x312BED0", Offset = "0x312BED0", VA = "0x312BED0", Slot = "4")]
		public virtual bool IsValid(IKSolver solver, ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C80")]
		[Address(RVA = "0x312BED8", Offset = "0x312BED8", VA = "0x312BED8", Slot = "5")]
		public virtual void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0x312BEDC", Offset = "0x312BEDC", VA = "0x312BEDC")]
		protected bool BoneIsValid(Transform bone, IKSolver solver, ref string message, [Optional] Warning.Logger logger)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0x312C00C", Offset = "0x312C00C", VA = "0x312C00C")]
		protected Vector3 SolveFABRIKJoint(Vector3 pos1, Vector3 pos2, float length)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0x312C114", Offset = "0x312C114", VA = "0x312C114")]
		public IKMapping()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000192")]
	public class IKMappingBone : IKMapping
	{
		[Token(Token = "0x4000AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform bone;

		[Token(Token = "0x4000ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146FF28", Offset = "0x146FF28")]
		public float maintainRotationWeight;

		[Token(Token = "0x4000ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private BoneMap boneMap;

		[Token(Token = "0x6000C84")]
		[Address(RVA = "0x312D98C", Offset = "0x312D98C", VA = "0x312D98C", Slot = "4")]
		public override bool IsValid(IKSolver solver, ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C85")]
		[Address(RVA = "0x312DA38", Offset = "0x312DA38", VA = "0x312DA38")]
		public IKMappingBone()
		{
		}

		[Token(Token = "0x6000C86")]
		[Address(RVA = "0x312DAC8", Offset = "0x312DAC8", VA = "0x312DAC8")]
		public IKMappingBone(Transform bone)
		{
		}

		[Token(Token = "0x6000C87")]
		[Address(RVA = "0x312DB74", Offset = "0x312DB74", VA = "0x312DB74")]
		public void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0x312DB8C", Offset = "0x312DB8C", VA = "0x312DB8C")]
		public void FixTransforms()
		{
		}

		[Token(Token = "0x6000C89")]
		[Address(RVA = "0x312DBA8", Offset = "0x312DBA8", VA = "0x312DBA8", Slot = "5")]
		public override void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0x312DC54", Offset = "0x312DC54", VA = "0x312DC54")]
		public void ReadPose()
		{
		}

		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0x312DC6C", Offset = "0x312DC6C", VA = "0x312DC6C")]
		public void WritePose(float solverWeight)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000193")]
	public class IKMappingLimb : IKMapping
	{
		[Serializable]
		[Token(Token = "0x2000569")]
		public enum BoneMapType
		{
			[Token(Token = "0x400214F")]
			Parent,
			[Token(Token = "0x4002150")]
			Bone1,
			[Token(Token = "0x4002151")]
			Bone2,
			[Token(Token = "0x4002152")]
			Bone3
		}

		[Token(Token = "0x4000ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform parentBone;

		[Token(Token = "0x4000ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform bone1;

		[Token(Token = "0x4000ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform bone2;

		[Token(Token = "0x4000ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform bone3;

		[Token(Token = "0x4000AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146FF40", Offset = "0x146FF40")]
		public float maintainRotationWeight;

		[Token(Token = "0x4000AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146FF58", Offset = "0x146FF58")]
		public float weight;

		[NonSerialized]
		[Token(Token = "0x4000AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool updatePlaneRotations;

		[Token(Token = "0x4000AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private BoneMap boneMapParent;

		[Token(Token = "0x4000AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private BoneMap boneMap1;

		[Token(Token = "0x4000AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private BoneMap boneMap2;

		[Token(Token = "0x4000AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private BoneMap boneMap3;

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0x312DC90", Offset = "0x312DC90", VA = "0x312DC90", Slot = "4")]
		public override bool IsValid(IKSolver solver, ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0x312DD14", Offset = "0x312DD14", VA = "0x312DD14")]
		public BoneMap GetBoneMap(BoneMapType boneMap)
		{
			return null;
		}

		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0x312DDE8", Offset = "0x312DDE8", VA = "0x312DDE8")]
		public void SetLimbOrientation(Vector3 upper, Vector3 lower)
		{
		}

		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0x312E13C", Offset = "0x312E13C", VA = "0x312E13C")]
		public IKMappingLimb()
		{
		}

		[Token(Token = "0x6000C90")]
		[Address(RVA = "0x312E274", Offset = "0x312E274", VA = "0x312E274")]
		public IKMappingLimb(Transform bone1, Transform bone2, Transform bone3, [Optional] Transform parentBone)
		{
		}

		[Token(Token = "0x6000C91")]
		[Address(RVA = "0x312E3E4", Offset = "0x312E3E4", VA = "0x312E3E4")]
		public void SetBones(Transform bone1, Transform bone2, Transform bone3, [Optional] Transform parentBone)
		{
		}

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0x312E448", Offset = "0x312E448", VA = "0x312E448")]
		public void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000C93")]
		[Address(RVA = "0x312E4F0", Offset = "0x312E4F0", VA = "0x312E4F0")]
		public void FixTransforms()
		{
		}

		[Token(Token = "0x6000C94")]
		[Address(RVA = "0x312E5A8", Offset = "0x312E5A8", VA = "0x312E5A8", Slot = "5")]
		public override void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000C95")]
		[Address(RVA = "0x312E870", Offset = "0x312E870", VA = "0x312E870")]
		public void ReadPose()
		{
		}

		[Token(Token = "0x6000C96")]
		[Address(RVA = "0x312E928", Offset = "0x312E928", VA = "0x312E928")]
		public void WritePose(IKSolverFullBody solver, bool fullBody)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000194")]
	public class IKMappingSpine : IKMapping
	{
		[Token(Token = "0x4000AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform[] spineBones;

		[Token(Token = "0x4000AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform leftUpperArmBone;

		[Token(Token = "0x4000AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform rightUpperArmBone;

		[Token(Token = "0x4000AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform leftThighBone;

		[Token(Token = "0x4000AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform rightThighBone;

		[Token(Token = "0x4000AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146FF70", Offset = "0x146FF70")]
		public int iterations;

		[Token(Token = "0x4000AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146FF88", Offset = "0x146FF88")]
		public float twistWeight;

		[Token(Token = "0x4000AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int rootNodeIndex;

		[Token(Token = "0x4000AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private BoneMap[] spine;

		[Token(Token = "0x4000AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private BoneMap leftUpperArm;

		[Token(Token = "0x4000AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private BoneMap rightUpperArm;

		[Token(Token = "0x4000AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private BoneMap leftThigh;

		[Token(Token = "0x4000AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private BoneMap rightThigh;

		[Token(Token = "0x4000AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool useFABRIK;

		[Token(Token = "0x6000C97")]
		[Address(RVA = "0x312EA94", Offset = "0x312EA94", VA = "0x312EA94", Slot = "4")]
		public override bool IsValid(IKSolver solver, ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0x312ED8C", Offset = "0x312ED8C", VA = "0x312ED8C")]
		public IKMappingSpine()
		{
		}

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0x312EEE4", Offset = "0x312EEE4", VA = "0x312EEE4")]
		public IKMappingSpine(Transform[] spineBones, Transform leftUpperArmBone, Transform rightUpperArmBone, Transform leftThighBone, Transform rightThighBone)
		{
		}

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0x312F084", Offset = "0x312F084", VA = "0x312F084")]
		public void SetBones(Transform[] spineBones, Transform leftUpperArmBone, Transform rightUpperArmBone, Transform leftThighBone, Transform rightThighBone)
		{
		}

		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0x312F104", Offset = "0x312F104", VA = "0x312F104")]
		public void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0x312F16C", Offset = "0x312F16C", VA = "0x312F16C")]
		public void FixTransforms()
		{
		}

		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0x312F1EC", Offset = "0x312F1EC", VA = "0x312F1EC", Slot = "5")]
		public override void Initiate(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0x312F8C4", Offset = "0x312F8C4", VA = "0x312F8C4")]
		private bool UseFABRIK()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0x312F8FC", Offset = "0x312F8FC", VA = "0x312F8FC")]
		public void ReadPose()
		{
		}

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0x312FBDC", Offset = "0x312FBDC", VA = "0x312FBDC")]
		public void WritePose(IKSolverFullBody solver)
		{
		}

		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0x312FF90", Offset = "0x312FF90", VA = "0x312FF90")]
		public void ForwardReach(Vector3 position)
		{
		}

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0x313007C", Offset = "0x313007C", VA = "0x313007C")]
		private void BackwardReach(Vector3 position)
		{
		}

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0x3130144", Offset = "0x3130144", VA = "0x3130144")]
		private void MapToSolverPositions(IKSolverFullBody solver)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000195")]
	public abstract class IKSolver
	{
		[Serializable]
		[Token(Token = "0x200056A")]
		public class Point
		{
			[Token(Token = "0x4002153")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform transform;

			[Token(Token = "0x4002154")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x147A6FC", Offset = "0x147A6FC")]
			public float weight;

			[Token(Token = "0x4002155")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 solverPosition;

			[Token(Token = "0x4002156")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Quaternion solverRotation;

			[Token(Token = "0x4002157")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Vector3 defaultLocalPosition;

			[Token(Token = "0x4002158")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public Quaternion defaultLocalRotation;

			[Token(Token = "0x6002525")]
			[Address(RVA = "0x3131CAC", Offset = "0x3131CAC", VA = "0x3131CAC")]
			public void StoreDefaultLocalState()
			{
			}

			[Token(Token = "0x6002526")]
			[Address(RVA = "0x3131CFC", Offset = "0x3131CFC", VA = "0x3131CFC")]
			public void FixTransform()
			{
			}

			[Token(Token = "0x6002527")]
			[Address(RVA = "0x3131E84", Offset = "0x3131E84", VA = "0x3131E84")]
			public void UpdateSolverPosition()
			{
			}

			[Token(Token = "0x6002528")]
			[Address(RVA = "0x3131EBC", Offset = "0x3131EBC", VA = "0x3131EBC")]
			public void UpdateSolverLocalPosition()
			{
			}

			[Token(Token = "0x6002529")]
			[Address(RVA = "0x3131EF4", Offset = "0x3131EF4", VA = "0x3131EF4")]
			public void UpdateSolverState()
			{
			}

			[Token(Token = "0x600252A")]
			[Address(RVA = "0x3131F44", Offset = "0x3131F44", VA = "0x3131F44")]
			public void UpdateSolverLocalState()
			{
			}

			[Token(Token = "0x600252B")]
			[Address(RVA = "0x3131754", Offset = "0x3131754", VA = "0x3131754")]
			public Point()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200056B")]
		public class Bone : Point
		{
			[Token(Token = "0x4002159")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public float length;

			[Token(Token = "0x400215A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public float sqrMag;

			[Token(Token = "0x400215B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public Vector3 axis;

			[Token(Token = "0x400215C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private RotationLimit _rotationLimit;

			[Token(Token = "0x400215D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private bool isLimited;

			[Token(Token = "0x170004D5")]
			public RotationLimit rotationLimit
			{
				[Token(Token = "0x600252C")]
				[Address(RVA = "0x3130D10", Offset = "0x3130D10", VA = "0x3130D10")]
				get
				{
					return null;
				}
				[Token(Token = "0x600252D")]
				[Address(RVA = "0x3130E0C", Offset = "0x3130E0C", VA = "0x3130E0C")]
				set
				{
				}
			}

			[Token(Token = "0x600252E")]
			[Address(RVA = "0x3130EA0", Offset = "0x3130EA0", VA = "0x3130EA0")]
			public void Swing(Vector3 swingTarget, float weight = 1f)
			{
			}

			[Token(Token = "0x600252F")]
			[Address(RVA = "0x3131160", Offset = "0x3131160", VA = "0x3131160")]
			public static void SolverSwing(Bone[] bones, int index, Vector3 swingTarget, float weight = 1f)
			{
			}

			[Token(Token = "0x6002530")]
			[Address(RVA = "0x3131440", Offset = "0x3131440", VA = "0x3131440")]
			public void Swing2D(Vector3 swingTarget, float weight = 1f)
			{
			}

			[Token(Token = "0x6002531")]
			[Address(RVA = "0x31316A8", Offset = "0x31316A8", VA = "0x31316A8")]
			public void SetToSolverPosition()
			{
			}

			[Token(Token = "0x6002532")]
			[Address(RVA = "0x31316D0", Offset = "0x31316D0", VA = "0x31316D0")]
			public Bone()
			{
			}

			[Token(Token = "0x6002533")]
			[Address(RVA = "0x31317D4", Offset = "0x31317D4", VA = "0x31317D4")]
			public Bone(Transform transform)
			{
			}

			[Token(Token = "0x6002534")]
			[Address(RVA = "0x3131874", Offset = "0x3131874", VA = "0x3131874")]
			public Bone(Transform transform, float weight)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200056C")]
		public class Node : Point
		{
			[Token(Token = "0x400215E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public float length;

			[Token(Token = "0x400215F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public float effectorPositionWeight;

			[Token(Token = "0x4002160")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public float effectorRotationWeight;

			[Token(Token = "0x4002161")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Vector3 offset;

			[Token(Token = "0x6002535")]
			[Address(RVA = "0x3131C34", Offset = "0x3131C34", VA = "0x3131C34")]
			public Node()
			{
			}

			[Token(Token = "0x6002536")]
			[Address(RVA = "0x3131C38", Offset = "0x3131C38", VA = "0x3131C38")]
			public Node(Transform transform)
			{
			}

			[Token(Token = "0x6002537")]
			[Address(RVA = "0x3131C68", Offset = "0x3131C68", VA = "0x3131C68")]
			public Node(Transform transform, float weight)
			{
			}
		}

		[Token(Token = "0x200056D")]
		public delegate void UpdateDelegate();

		[Token(Token = "0x200056E")]
		public delegate void IterationDelegate(int i);

		[Token(Token = "0x4000AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public bool executedInEditor;

		[Token(Token = "0x4000AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[HideInInspector]
		public Vector3 IKPosition;

		[Token(Token = "0x4000AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x146FFC0", Offset = "0x146FFC0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x146FFC0", Offset = "0x146FFC0")]
		public float IKPositionWeight;

		[Token(Token = "0x4000AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1470014", Offset = "0x1470014")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x4000AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UpdateDelegate OnPreInitiate;

		[Token(Token = "0x4000AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UpdateDelegate OnPostInitiate;

		[Token(Token = "0x4000AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UpdateDelegate OnPreUpdate;

		[Token(Token = "0x4000AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UpdateDelegate OnPostUpdate;

		[Token(Token = "0x4000AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected bool firstInitiation;

		[Token(Token = "0x4000AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[HideInInspector]
		protected Transform root;

		[Token(Token = "0x17000158")]
		public bool initiated
		{
			[Token(Token = "0x6000CAD")]
			[Address(RVA = "0x3130760", Offset = "0x3130760", VA = "0x3130760")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1481BB8", Offset = "0x1481BB8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CAE")]
			[Address(RVA = "0x3130768", Offset = "0x3130768", VA = "0x3130768")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1481BC8", Offset = "0x1481BC8")]
			private set
			{
			}
		}

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0x313042C", Offset = "0x313042C", VA = "0x313042C")]
		public bool IsValid()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CA5")]
		public abstract bool IsValid(ref string message);

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0x3128A18", Offset = "0x3128A18", VA = "0x3128A18")]
		public void Initiate(Transform root)
		{
		}

		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0x3128940", Offset = "0x3128940", VA = "0x3128940")]
		public void Update()
		{
		}

		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0x31306B4", Offset = "0x31306B4", VA = "0x31306B4", Slot = "5")]
		public virtual Vector3 GetIKPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0x31306C0", Offset = "0x31306C0", VA = "0x31306C0")]
		public void SetIKPosition(Vector3 position)
		{
		}

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0x31306CC", Offset = "0x31306CC", VA = "0x31306CC")]
		public float GetIKPositionWeight()
		{
			return default(float);
		}

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0x31306D4", Offset = "0x31306D4", VA = "0x31306D4")]
		public void SetIKPositionWeight(float weight)
		{
		}

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0x3130758", Offset = "0x3130758", VA = "0x3130758")]
		public Transform GetRoot()
		{
			return null;
		}

		[Token(Token = "0x6000CAF")]
		public abstract Point[] GetPoints();

		[Token(Token = "0x6000CB0")]
		public abstract Point GetPoint(Transform transform);

		[Token(Token = "0x6000CB1")]
		public abstract void FixTransforms();

		[Token(Token = "0x6000CB2")]
		public abstract void StoreDefaultLocalState();

		[Token(Token = "0x6000CB3")]
		protected abstract void OnInitiate();

		[Token(Token = "0x6000CB4")]
		protected abstract void OnUpdate();

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0x3130774", Offset = "0x3130774", VA = "0x3130774")]
		protected void LogWarning(string message)
		{
		}

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0x313078C", Offset = "0x313078C", VA = "0x313078C")]
		public static Transform ContainsDuplicateBone(Bone[] bones)
		{
			return null;
		}

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0x31308C8", Offset = "0x31308C8", VA = "0x31308C8")]
		public static bool HierarchyIsValid(Bone[] bones)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0x3130974", Offset = "0x3130974", VA = "0x3130974")]
		protected static float PreSolveBones(ref Bone[] bones)
		{
			return default(float);
		}

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0x3130CF8", Offset = "0x3130CF8", VA = "0x3130CF8")]
		protected IKSolver()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000196")]
	public class IKSolverAim : IKSolverHeuristic
	{
		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform transform;

		[Token(Token = "0x4000B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Vector3 axis;

		[Token(Token = "0x4000B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public Vector3 poleAxis;

		[Token(Token = "0x4000B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Vector3 polePosition;

		[Token(Token = "0x4000B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x147005C", Offset = "0x147005C")]
		public float poleWeight;

		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Transform poleTarget;

		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1470074", Offset = "0x1470074")]
		public float clampWeight;

		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x147008C", Offset = "0x147008C")]
		public int clampSmoothing;

		[Token(Token = "0x4000B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public IterationDelegate OnPreIteration;

		[Token(Token = "0x4000B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float step;

		[Token(Token = "0x4000B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private Vector3 clampedIKPosition;

		[Token(Token = "0x4000B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private RotationLimit transformLimit;

		[Token(Token = "0x4000B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Transform lastTransform;

		[Token(Token = "0x17000159")]
		public Vector3 transformAxis
		{
			[Token(Token = "0x6000CBB")]
			[Address(RVA = "0x31320CC", Offset = "0x31320CC", VA = "0x31320CC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700015A")]
		public Vector3 transformPoleAxis
		{
			[Token(Token = "0x6000CBC")]
			[Address(RVA = "0x3132198", Offset = "0x3132198", VA = "0x3132198")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700015B")]
		protected override int minBones
		{
			[Token(Token = "0x6000CBF")]
			[Address(RVA = "0x3132F28", Offset = "0x3132F28", VA = "0x3132F28", Slot = "12")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700015C")]
		protected override Vector3 localDirection
		{
			[Token(Token = "0x6000CC3")]
			[Address(RVA = "0x31334CC", Offset = "0x31334CC", VA = "0x31334CC", Slot = "15")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0x3131FCC", Offset = "0x3131FCC", VA = "0x3131FCC")]
		public float GetAngle()
		{
			return default(float);
		}

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0x3132264", Offset = "0x3132264", VA = "0x3132264", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0x31324E4", Offset = "0x31324E4", VA = "0x31324E4", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0x3132E74", Offset = "0x3132E74", VA = "0x3132E74")]
		private void Solve()
		{
		}

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0x3132A9C", Offset = "0x3132A9C", VA = "0x3132A9C")]
		private Vector3 GetClampedIKPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0x3132F30", Offset = "0x3132F30", VA = "0x3132F30")]
		private void RotateToTarget(Vector3 targetPosition, Bone bone, float weight)
		{
		}

		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0x3133540", Offset = "0x3133540", VA = "0x3133540")]
		public IKSolverAim()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000197")]
	public class IKSolverArm : IKSolver
	{
		[Token(Token = "0x4000B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x14700A4", Offset = "0x14700A4")]
		public float IKRotationWeight;

		[Token(Token = "0x4000B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Quaternion IKRotation;

		[Token(Token = "0x4000B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Point chest;

		[Token(Token = "0x4000B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Point shoulder;

		[Token(Token = "0x4000B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Point upperArm;

		[Token(Token = "0x4000B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Point forearm;

		[Token(Token = "0x4000B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Point hand;

		[Token(Token = "0x4000B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool isLeft;

		[Token(Token = "0x4000B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public IKSolverVR.Arm arm;

		[Token(Token = "0x4000B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3[] positions;

		[Token(Token = "0x4000B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Quaternion[] rotations;

		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0x31335D8", Offset = "0x31335D8", VA = "0x31335D8", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0x3133994", Offset = "0x3133994", VA = "0x3133994")]
		public bool SetChain(Transform chest, Transform shoulder, Transform upperArm, Transform forearm, Transform hand, Transform root)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0x3133A48", Offset = "0x3133A48", VA = "0x3133A48", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0x3133BE0", Offset = "0x3133BE0", VA = "0x3133BE0", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0x3133D78", Offset = "0x3133D78", VA = "0x3133D78", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0x3133DC4", Offset = "0x3133DC4", VA = "0x3133DC4", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0x3133E24", Offset = "0x3133E24", VA = "0x3133E24", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0x3134194", Offset = "0x3134194", VA = "0x3134194", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0x31341C0", Offset = "0x31341C0", VA = "0x31341C0")]
		private void Solve()
		{
		}

		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0x3133E88", Offset = "0x3133E88", VA = "0x3133E88")]
		private void Read()
		{
		}

		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0x3134230", Offset = "0x3134230", VA = "0x3134230")]
		private void Write()
		{
		}

		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0x31343BC", Offset = "0x31343BC", VA = "0x31343BC")]
		public IKSolverArm()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000198")]
	public class IKSolverCCD : IKSolverHeuristic
	{
		[Token(Token = "0x4000B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public IterationDelegate OnPreIteration;

		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0x313456C", Offset = "0x313456C", VA = "0x313456C")]
		public void FadeOutBoneWeights()
		{
		}

		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0x313461C", Offset = "0x313461C", VA = "0x313461C", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0x31346A0", Offset = "0x31346A0", VA = "0x31346A0", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0x313499C", Offset = "0x313499C", VA = "0x313499C")]
		protected void Solve(Vector3 targetPosition)
		{
		}

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0x31350F0", Offset = "0x31350F0", VA = "0x31350F0")]
		public IKSolverCCD()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000199")]
	public class IKSolverFABRIK : IKSolverHeuristic
	{
		[Token(Token = "0x4000B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public IterationDelegate OnPreIteration;

		[Token(Token = "0x4000B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool[] limitedBones;

		[Token(Token = "0x4000B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3[] solverLocalPositions;

		[Token(Token = "0x1700015D")]
		protected override bool boneLengthCanBeZero
		{
			[Token(Token = "0x6000CDB")]
			[Address(RVA = "0x32DF108", Offset = "0x32DF108", VA = "0x32DF108", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0x32DD4EC", Offset = "0x32DD4EC", VA = "0x32DD4EC")]
		public void SolveForward(Vector3 position)
		{
		}

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0x32DDC30", Offset = "0x32DDC30", VA = "0x32DDC30")]
		public void SolveBackward(Vector3 position)
		{
		}

		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0x32DDD64", Offset = "0x32DDD64", VA = "0x32DDD64", Slot = "5")]
		public override Vector3 GetIKPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0x32DDDFC", Offset = "0x32DDDFC", VA = "0x32DDDFC", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0x32DE93C", Offset = "0x32DE93C", VA = "0x32DE93C", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0x32DF110", Offset = "0x32DF110", VA = "0x32DF110")]
		private Vector3 SolveJoint(Vector3 pos1, Vector3 pos2, float length)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0x32DD5BC", Offset = "0x32DD5BC", VA = "0x32DD5BC")]
		private void OnPreSolve()
		{
		}

		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0x32DDD10", Offset = "0x32DDD10", VA = "0x32DDD10")]
		private void OnPostSolve()
		{
		}

		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0x32DF0AC", Offset = "0x32DF0AC", VA = "0x32DF0AC")]
		private void Solve(Vector3 targetPosition)
		{
		}

		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0x32DDA58", Offset = "0x32DDA58", VA = "0x32DDA58")]
		private void ForwardReach(Vector3 position)
		{
		}

		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0x32DF958", Offset = "0x32DF958", VA = "0x32DF958")]
		private void SolverMove(int index, Vector3 offset)
		{
		}

		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0x32DFA68", Offset = "0x32DFA68", VA = "0x32DFA68")]
		private void SolverRotate(int index, Quaternion rotation, bool recursive)
		{
		}

		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0x32DFB94", Offset = "0x32DFB94", VA = "0x32DFB94")]
		private void SolverRotateChildren(int index, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0x32DFCAC", Offset = "0x32DFCAC", VA = "0x32DFCAC")]
		private void SolverMoveChildrenAroundPoint(int index, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0x32DE6A4", Offset = "0x32DE6A4", VA = "0x32DE6A4")]
		private Quaternion GetParentSolverRotation(int index)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0x32DE7F0", Offset = "0x32DE7F0", VA = "0x32DE7F0")]
		private Vector3 GetParentSolverPosition(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0x32DFE98", Offset = "0x32DFE98", VA = "0x32DFE98")]
		private Quaternion GetLimitedRotation(int index, Quaternion q, out bool changed)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0x32DF3CC", Offset = "0x32DF3CC", VA = "0x32DF3CC")]
		private void LimitForward(int rotateBone, int limitBone)
		{
		}

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0x32DDD00", Offset = "0x32DDD00", VA = "0x32DDD00")]
		private void BackwardReach(Vector3 position)
		{
		}

		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0x32E0608", Offset = "0x32E0608", VA = "0x32E0608")]
		private void BackwardReachUnlimited(Vector3 position)
		{
		}

		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0x32E0070", Offset = "0x32E0070", VA = "0x32E0070")]
		private void BackwardReachLimited(Vector3 position)
		{
		}

		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0x32DF228", Offset = "0x32DF228", VA = "0x32DF228")]
		private void MapToSolverPositions()
		{
		}

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0x32DF308", Offset = "0x32DF308", VA = "0x32DF308")]
		private void MapToSolverPositionsLimited()
		{
		}

		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0x32E06D4", Offset = "0x32E06D4", VA = "0x32E06D4")]
		public IKSolverFABRIK()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200019A")]
	public class IKSolverFABRIKRoot : IKSolver
	{
		[Token(Token = "0x4000B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int iterations;

		[Token(Token = "0x4000B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x14700BC", Offset = "0x14700BC")]
		public float rootPin;

		[Token(Token = "0x4000B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public FABRIKChain[] chains;

		[Token(Token = "0x4000B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool zeroWeightApplied;

		[Token(Token = "0x4000B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool[] isRoot;

		[Token(Token = "0x4000B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 rootDefaultPosition;

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0x32E07DC", Offset = "0x32E07DC", VA = "0x32E07DC", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0x32E11B4", Offset = "0x32E11B4", VA = "0x32E11B4", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0x32E124C", Offset = "0x32E124C", VA = "0x32E124C", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0x32E12EC", Offset = "0x32E12EC", VA = "0x32E12EC", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0x32E13FC", Offset = "0x32E13FC", VA = "0x32E13FC")]
		private bool IsRoot(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0x32E1498", Offset = "0x32E1498", VA = "0x32E1498", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0x32E1A00", Offset = "0x32E1A00", VA = "0x32E1A00", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0x32E1C18", Offset = "0x32E1C18", VA = "0x32E1C18", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0x32E1AB0", Offset = "0x32E1AB0", VA = "0x32E1AB0")]
		private void AddPointsToArray(ref Point[] array, FABRIKChain chain)
		{
		}

		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0x32E16CC", Offset = "0x32E16CC", VA = "0x32E16CC")]
		private Vector3 GetCentroid()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0x32E1CB0", Offset = "0x32E1CB0", VA = "0x32E1CB0")]
		public IKSolverFABRIKRoot()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200019B")]
	public class IKSolverFullBody : IKSolver
	{
		[Token(Token = "0x4000B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x14700D4", Offset = "0x14700D4")]
		public int iterations;

		[Token(Token = "0x4000B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public FBIKChain[] chain;

		[Token(Token = "0x4000B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public IKEffector[] effectors;

		[Token(Token = "0x4000B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public IKMappingSpine spineMapping;

		[Token(Token = "0x4000B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public IKMappingBone[] boneMappings;

		[Token(Token = "0x4000B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public IKMappingLimb[] limbMappings;

		[Token(Token = "0x4000B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool FABRIKPass;

		[Token(Token = "0x4000B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public UpdateDelegate OnPreRead;

		[Token(Token = "0x4000B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public UpdateDelegate OnPreSolve;

		[Token(Token = "0x4000B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public IterationDelegate OnPreIteration;

		[Token(Token = "0x4000B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public IterationDelegate OnPostIteration;

		[Token(Token = "0x4000B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public UpdateDelegate OnPreBend;

		[Token(Token = "0x4000B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public UpdateDelegate OnPostSolve;

		[Token(Token = "0x4000B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public UpdateDelegate OnStoreDefaultLocalState;

		[Token(Token = "0x4000B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public UpdateDelegate OnFixTransforms;

		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0x32E1D24", Offset = "0x32E1D24", VA = "0x32E1D24")]
		public IKEffector GetEffector(Transform t)
		{
			return null;
		}

		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0x32E1E18", Offset = "0x32E1E18", VA = "0x32E1E18")]
		public FBIKChain GetChain(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0x32E1E74", Offset = "0x32E1E74", VA = "0x32E1E74")]
		public int GetChainIndex(Transform transform)
		{
			return default(int);
		}

		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0x32E1FA8", Offset = "0x32E1FA8", VA = "0x32E1FA8")]
		public Node GetNode(int chainIndex, int nodeIndex)
		{
			return null;
		}

		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0x32E2004", Offset = "0x32E2004", VA = "0x32E2004")]
		public void GetChainAndNodeIndexes(Transform transform, out int chainIndex, out int nodeIndex)
		{
		}

		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0x32E2084", Offset = "0x32E2084", VA = "0x32E2084", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6000D00")]
		[Address(RVA = "0x32E2234", Offset = "0x32E2234", VA = "0x32E2234", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0x32E23A8", Offset = "0x32E23A8", VA = "0x32E23A8", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D02")]
		[Address(RVA = "0x32E25B0", Offset = "0x32E25B0", VA = "0x32E25B0", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0x32E2688", Offset = "0x32E2688", VA = "0x32E2688", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x6000D04")]
		[Address(RVA = "0x32E2774", Offset = "0x32E2774", VA = "0x32E2774", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0x32E28E8", Offset = "0x32E28E8", VA = "0x32E28E8", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000D06")]
		[Address(RVA = "0x32E2AB0", Offset = "0x32E2AB0", VA = "0x32E2AB0", Slot = "12")]
		protected virtual void ReadPose()
		{
		}

		[Token(Token = "0x6000D07")]
		[Address(RVA = "0x32E2CFC", Offset = "0x32E2CFC", VA = "0x32E2CFC", Slot = "13")]
		protected virtual void Solve()
		{
		}

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0x32E2FD8", Offset = "0x32E2FD8", VA = "0x32E2FD8", Slot = "14")]
		protected virtual void ApplyBendConstraints()
		{
		}

		[Token(Token = "0x6000D09")]
		[Address(RVA = "0x32E301C", Offset = "0x32E301C", VA = "0x32E301C", Slot = "15")]
		protected virtual void WritePose()
		{
		}

		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0x32E310C", Offset = "0x32E310C", VA = "0x32E310C")]
		public IKSolverFullBody()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200019C")]
	public enum FullBodyBipedEffector
	{
		[Token(Token = "0x4000B31")]
		Body,
		[Token(Token = "0x4000B32")]
		LeftShoulder,
		[Token(Token = "0x4000B33")]
		RightShoulder,
		[Token(Token = "0x4000B34")]
		LeftThigh,
		[Token(Token = "0x4000B35")]
		RightThigh,
		[Token(Token = "0x4000B36")]
		LeftHand,
		[Token(Token = "0x4000B37")]
		RightHand,
		[Token(Token = "0x4000B38")]
		LeftFoot,
		[Token(Token = "0x4000B39")]
		RightFoot
	}
	[Serializable]
	[Token(Token = "0x200019D")]
	public enum FullBodyBipedChain
	{
		[Token(Token = "0x4000B3B")]
		LeftArm,
		[Token(Token = "0x4000B3C")]
		RightArm,
		[Token(Token = "0x4000B3D")]
		LeftLeg,
		[Token(Token = "0x4000B3E")]
		RightLeg
	}
	[Serializable]
	[Token(Token = "0x200019E")]
	public class IKSolverFullBodyBiped : IKSolverFullBody
	{
		[Token(Token = "0x4000B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Transform rootNode;

		[Token(Token = "0x4000B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x14700EC", Offset = "0x14700EC")]
		public float spineStiffness;

		[Token(Token = "0x4000B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1470104", Offset = "0x1470104")]
		public float pullBodyVertical;

		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x147011C", Offset = "0x147011C")]
		public float pullBodyHorizontal;

		[Token(Token = "0x4000B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1470134", Offset = "0x1470134")]
		private Vector3 <pullBodyOffset>k__BackingField;

		[Token(Token = "0x4000B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Vector3 offset;

		[Token(Token = "0x1700015E")]
		public IKEffector bodyEffector
		{
			[Token(Token = "0x6000D0B")]
			[Address(RVA = "0x32E3220", Offset = "0x32E3220", VA = "0x32E3220")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015F")]
		public IKEffector leftShoulderEffector
		{
			[Token(Token = "0x6000D0C")]
			[Address(RVA = "0x32E3368", Offset = "0x32E3368", VA = "0x32E3368")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000160")]
		public IKEffector rightShoulderEffector
		{
			[Token(Token = "0x6000D0D")]
			[Address(RVA = "0x32E3370", Offset = "0x32E3370", VA = "0x32E3370")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000161")]
		public IKEffector leftThighEffector
		{
			[Token(Token = "0x6000D0E")]
			[Address(RVA = "0x32E3378", Offset = "0x32E3378", VA = "0x32E3378")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000162")]
		public IKEffector rightThighEffector
		{
			[Token(Token = "0x6000D0F")]
			[Address(RVA = "0x32E3380", Offset = "0x32E3380", VA = "0x32E3380")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000163")]
		public IKEffector leftHandEffector
		{
			[Token(Token = "0x6000D10")]
			[Address(RVA = "0x32E3388", Offset = "0x32E3388", VA = "0x32E3388")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000164")]
		public IKEffector rightHandEffector
		{
			[Token(Token = "0x6000D11")]
			[Address(RVA = "0x32E3390", Offset = "0x32E3390", VA = "0x32E3390")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000165")]
		public IKEffector leftFootEffector
		{
			[Token(Token = "0x6000D12")]
			[Address(RVA = "0x32E3398", Offset = "0x32E3398", VA = "0x32E3398")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000166")]
		public IKEffector rightFootEffector
		{
			[Token(Token = "0x6000D13")]
			[Address(RVA = "0x32E33A0", Offset = "0x32E33A0", VA = "0x32E33A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000167")]
		public FBIKChain leftArmChain
		{
			[Token(Token = "0x6000D14")]
			[Address(RVA = "0x32E33A8", Offset = "0x32E33A8", VA = "0x32E33A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000168")]
		public FBIKChain rightArmChain
		{
			[Token(Token = "0x6000D15")]
			[Address(RVA = "0x32E33E0", Offset = "0x32E33E0", VA = "0x32E33E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000169")]
		public FBIKChain leftLegChain
		{
			[Token(Token = "0x6000D16")]
			[Address(RVA = "0x32E3418", Offset = "0x32E3418", VA = "0x32E3418")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016A")]
		public FBIKChain rightLegChain
		{
			[Token(Token = "0x6000D17")]
			[Address(RVA = "0x32E3450", Offset = "0x32E3450", VA = "0x32E3450")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016B")]
		public IKMappingLimb leftArmMapping
		{
			[Token(Token = "0x6000D18")]
			[Address(RVA = "0x32E3488", Offset = "0x32E3488", VA = "0x32E3488")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016C")]
		public IKMappingLimb rightArmMapping
		{
			[Token(Token = "0x6000D19")]
			[Address(RVA = "0x32E34BC", Offset = "0x32E34BC", VA = "0x32E34BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016D")]
		public IKMappingLimb leftLegMapping
		{
			[Token(Token = "0x6000D1A")]
			[Address(RVA = "0x32E34F4", Offset = "0x32E34F4", VA = "0x32E34F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016E")]
		public IKMappingLimb rightLegMapping
		{
			[Token(Token = "0x6000D1B")]
			[Address(RVA = "0x32E352C", Offset = "0x32E352C", VA = "0x32E352C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016F")]
		public IKMappingBone headMapping
		{
			[Token(Token = "0x6000D1C")]
			[Address(RVA = "0x32E3564", Offset = "0x32E3564", VA = "0x32E3564")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000170")]
		public Vector3 pullBodyOffset
		{
			[Token(Token = "0x6000D2C")]
			[Address(RVA = "0x32E57F0", Offset = "0x32E57F0", VA = "0x32E57F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1481BD8", Offset = "0x1481BD8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000D2D")]
			[Address(RVA = "0x32E57FC", Offset = "0x32E57FC", VA = "0x32E57FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1481BE8", Offset = "0x1481BE8")]
			private set
			{
			}
		}

		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0x32E3598", Offset = "0x32E3598", VA = "0x32E3598")]
		public void SetChainWeights(FullBodyBipedChain c, float pull, float reach = 0f)
		{
		}

		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0x32E36A4", Offset = "0x32E36A4", VA = "0x32E36A4")]
		public void SetEffectorWeights(FullBodyBipedEffector effector, float positionWeight, float rotationWeight)
		{
		}

		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0x32E35EC", Offset = "0x32E35EC", VA = "0x32E35EC")]
		public FBIKChain GetChain(FullBodyBipedChain c)
		{
			return null;
		}

		[Token(Token = "0x6000D20")]
		[Address(RVA = "0x32E3780", Offset = "0x32E3780", VA = "0x32E3780")]
		public FBIKChain GetChain(FullBodyBipedEffector effector)
		{
			return null;
		}

		[Token(Token = "0x6000D21")]
		[Address(RVA = "0x32E3228", Offset = "0x32E3228", VA = "0x32E3228")]
		public IKEffector GetEffector(FullBodyBipedEffector effector)
		{
			return null;
		}

		[Token(Token = "0x6000D22")]
		[Address(RVA = "0x32E3850", Offset = "0x32E3850", VA = "0x32E3850")]
		public IKEffector GetEndEffector(FullBodyBipedChain c)
		{
			return null;
		}

		[Token(Token = "0x6000D23")]
		[Address(RVA = "0x32E3908", Offset = "0x32E3908", VA = "0x32E3908")]
		public IKMappingLimb GetLimbMapping(FullBodyBipedChain chain)
		{
			return null;
		}

		[Token(Token = "0x6000D24")]
		[Address(RVA = "0x32E39BC", Offset = "0x32E39BC", VA = "0x32E39BC")]
		public IKMappingLimb GetLimbMapping(FullBodyBipedEffector effector)
		{
			return null;
		}

		[Token(Token = "0x6000D25")]
		[Address(RVA = "0x32E3A70", Offset = "0x32E3A70", VA = "0x32E3A70")]
		public IKMappingSpine GetSpineMapping()
		{
			return null;
		}

		[Token(Token = "0x6000D26")]
		[Address(RVA = "0x32E3A78", Offset = "0x32E3A78", VA = "0x32E3A78")]
		public IKMappingBone GetHeadMapping()
		{
			return null;
		}

		[Token(Token = "0x6000D27")]
		[Address(RVA = "0x32E3AAC", Offset = "0x32E3AAC", VA = "0x32E3AAC")]
		public IKConstraintBend GetBendConstraint(FullBodyBipedChain limb)
		{
			return null;
		}

		[Token(Token = "0x6000D28")]
		[Address(RVA = "0x32E3B74", Offset = "0x32E3B74", VA = "0x32E3B74", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D29")]
		[Address(RVA = "0x32E3D08", Offset = "0x32E3D08", VA = "0x32E3D08")]
		public void SetToReferences(BipedReferences references, [Optional] Transform rootNode)
		{
		}

		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0x32E5108", Offset = "0x32E5108", VA = "0x32E5108")]
		public static Transform DetectRootNodeBone(BipedReferences references)
		{
			return null;
		}

		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0x32E559C", Offset = "0x32E559C", VA = "0x32E559C")]
		public void SetLimbOrientations(BipedLimbOrientations o)
		{
		}

		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0x32E55FC", Offset = "0x32E55FC", VA = "0x32E55FC")]
		private void SetLimbOrientation(FullBodyBipedChain chain, BipedLimbOrientations.LimbOrientation limbOrientation)
		{
		}

		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0x32E541C", Offset = "0x32E541C", VA = "0x32E541C")]
		private static Transform GetLeftClavicle(BipedReferences references)
		{
			return null;
		}

		[Token(Token = "0x6000D30")]
		[Address(RVA = "0x32E54DC", Offset = "0x32E54DC", VA = "0x32E54DC")]
		private static Transform GetRightClavicle(BipedReferences references)
		{
			return null;
		}

		[Token(Token = "0x6000D31")]
		[Address(RVA = "0x32E5808", Offset = "0x32E5808", VA = "0x32E5808")]
		private static bool Contains(Transform[] array, Transform transform)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D32")]
		[Address(RVA = "0x32E58E4", Offset = "0x32E58E4", VA = "0x32E58E4", Slot = "12")]
		protected override void ReadPose()
		{
		}

		[Token(Token = "0x6000D33")]
		[Address(RVA = "0x32E5A2C", Offset = "0x32E5A2C", VA = "0x32E5A2C")]
		private void PullBody()
		{
		}

		[Token(Token = "0x6000D34")]
		[Address(RVA = "0x32E5BBC", Offset = "0x32E5BBC", VA = "0x32E5BBC")]
		private Vector3 GetBodyOffset()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D35")]
		[Address(RVA = "0x32E5DBC", Offset = "0x32E5DBC", VA = "0x32E5DBC")]
		private Vector3 GetHandBodyPull(IKEffector effector, FBIKChain arm, Vector3 offset)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D36")]
		[Address(RVA = "0x32E5FBC", Offset = "0x32E5FBC", VA = "0x32E5FBC", Slot = "14")]
		protected override void ApplyBendConstraints()
		{
		}

		[Token(Token = "0x6000D37")]
		[Address(RVA = "0x32E62F0", Offset = "0x32E62F0", VA = "0x32E62F0", Slot = "15")]
		protected override void WritePose()
		{
		}

		[Token(Token = "0x6000D38")]
		[Address(RVA = "0x32E63F0", Offset = "0x32E63F0", VA = "0x32E63F0")]
		public IKSolverFullBodyBiped()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200019F")]
	public class IKSolverHeuristic : IKSolver
	{
		[Token(Token = "0x4000B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform target;

		[Token(Token = "0x4000B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float tolerance;

		[Token(Token = "0x4000B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int maxIterations;

		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool useRotationLimits;

		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		public bool XY;

		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Bone[] bones;

		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Vector3 lastLocalDirection;

		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		protected float chainLength;

		[Token(Token = "0x17000171")]
		protected virtual int minBones
		{
			[Token(Token = "0x6000D40")]
			[Address(RVA = "0x32E6C94", Offset = "0x32E6C94", VA = "0x32E6C94", Slot = "12")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000172")]
		protected virtual bool boneLengthCanBeZero
		{
			[Token(Token = "0x6000D41")]
			[Address(RVA = "0x32E6C9C", Offset = "0x32E6C9C", VA = "0x32E6C9C", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000173")]
		protected virtual bool allowCommonParent
		{
			[Token(Token = "0x6000D42")]
			[Address(RVA = "0x32E6CA4", Offset = "0x32E6CA4", VA = "0x32E6CA4", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000174")]
		protected virtual Vector3 localDirection
		{
			[Token(Token = "0x6000D46")]
			[Address(RVA = "0x32E6CB4", Offset = "0x32E6CB4", VA = "0x32E6CB4", Slot = "15")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000175")]
		protected float positionOffset
		{
			[Token(Token = "0x6000D47")]
			[Address(RVA = "0x32DEFE8", Offset = "0x32DEFE8", VA = "0x32DEFE8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000D39")]
		[Address(RVA = "0x32E63FC", Offset = "0x32E63FC", VA = "0x32E63FC")]
		public bool SetChain(Transform[] hierarchy, Transform root)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0x32E65B0", Offset = "0x32E65B0", VA = "0x32E65B0")]
		public void AddBone(Transform bone)
		{
		}

		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0x32E6714", Offset = "0x32E6714", VA = "0x32E6714", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0x32E6780", Offset = "0x32E6780", VA = "0x32E6780", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0x32E6800", Offset = "0x32E6800", VA = "0x32E6800", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0x32E6B98", Offset = "0x32E6B98", VA = "0x32E6B98", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0x32E6BA0", Offset = "0x32E6BA0", VA = "0x32E6BA0", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6000D43")]
		[Address(RVA = "0x32E6CAC", Offset = "0x32E6CAC", VA = "0x32E6CAC", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000D44")]
		[Address(RVA = "0x32E6CB0", Offset = "0x32E6CB0", VA = "0x32E6CB0", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000D45")]
		[Address(RVA = "0x32DE124", Offset = "0x32DE124", VA = "0x32DE124")]
		protected void InitiateBones()
		{
		}

		[Token(Token = "0x6000D48")]
		[Address(RVA = "0x32DEC44", Offset = "0x32DEC44", VA = "0x32DEC44")]
		protected Vector3 GetSingularityOffset()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D49")]
		[Address(RVA = "0x32E6DE8", Offset = "0x32E6DE8", VA = "0x32E6DE8")]
		private bool SingularityDetected()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0x32E0760", Offset = "0x32E0760", VA = "0x32E0760")]
		public IKSolverHeuristic()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001A0")]
	public class IKSolverLeg : IKSolver
	{
		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1470144", Offset = "0x1470144")]
		public float IKRotationWeight;

		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Quaternion IKRotation;

		[Token(Token = "0x4000B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Point pelvis;

		[Token(Token = "0x4000B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Point thigh;

		[Token(Token = "0x4000B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Point calf;

		[Token(Token = "0x4000B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Point foot;

		[Token(Token = "0x4000B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Point toe;

		[Token(Token = "0x4000B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public IKSolverVR.Leg leg;

		[Token(Token = "0x4000B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Vector3 heelOffset;

		[Token(Token = "0x4000B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3[] positions;

		[Token(Token = "0x4000B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Quaternion[] rotations;

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0x32E709C", Offset = "0x32E709C", VA = "0x32E709C", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0x32E7458", Offset = "0x32E7458", VA = "0x32E7458")]
		public bool SetChain(Transform pelvis, Transform thigh, Transform calf, Transform foot, Transform toe, Transform root)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0x32E7510", Offset = "0x32E7510", VA = "0x32E7510", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0x32E76A8", Offset = "0x32E76A8", VA = "0x32E76A8", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0x32E7840", Offset = "0x32E7840", VA = "0x32E7840", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000D50")]
		[Address(RVA = "0x32E789C", Offset = "0x32E789C", VA = "0x32E789C", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x6000D51")]
		[Address(RVA = "0x32E790C", Offset = "0x32E790C", VA = "0x32E790C", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0x32E7C78", Offset = "0x32E7C78", VA = "0x32E7C78", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000D53")]
		[Address(RVA = "0x32E7CA4", Offset = "0x32E7CA4", VA = "0x32E7CA4")]
		private void Solve()
		{
		}

		[Token(Token = "0x6000D54")]
		[Address(RVA = "0x32E7970", Offset = "0x32E7970", VA = "0x32E7970")]
		private void Read()
		{
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0x32E7DAC", Offset = "0x32E7DAC", VA = "0x32E7DAC")]
		private void Write()
		{
		}

		[Token(Token = "0x6000D56")]
		[Address(RVA = "0x32E8244", Offset = "0x32E8244", VA = "0x32E8244")]
		public IKSolverLeg()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001A1")]
	public class IKSolverLimb : IKSolverTrigonometric
	{
		[Serializable]
		[Token(Token = "0x200056F")]
		public enum BendModifier
		{
			[Token(Token = "0x4002163")]
			Animation,
			[Token(Token = "0x4002164")]
			Target,
			[Token(Token = "0x4002165")]
			Parent,
			[Token(Token = "0x4002166")]
			Arm,
			[Token(Token = "0x4002167")]
			Goal
		}

		[Serializable]
		[Token(Token = "0x2000570")]
		public struct AxisDirection
		{
			[Token(Token = "0x4002168")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 direction;

			[Token(Token = "0x4002169")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 axis;

			[Token(Token = "0x400216A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float dot;

			[Token(Token = "0x6002540")]
			[Address(RVA = "0x32E9C6C", Offset = "0x32E9C6C", VA = "0x32E9C6C")]
			public AxisDirection(Vector3 direction, Vector3 axis)
			{
			}
		}

		[Token(Token = "0x4000B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public AvatarIKGoal goal;

		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public BendModifier bendModifier;

		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x147015C", Offset = "0x147015C")]
		public float maintainRotationWeight;

		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1470174", Offset = "0x1470174")]
		public float bendModifierWeight;

		[Token(Token = "0x4000B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Transform bendGoal;

		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool maintainBendFor1Frame;

		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		private bool maintainRotationFor1Frame;

		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private Quaternion defaultRootRotation;

		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private Quaternion parentDefaultRotation;

		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private Quaternion bone3RotationBeforeSolve;

		[Token(Token = "0x4000B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private Quaternion maintainRotation;

		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private Quaternion bone3DefaultRotation;

		[Token(Token = "0x4000B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private Vector3 _bendNormal;

		[Token(Token = "0x4000B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Vector3 animationNormal;

		[Token(Token = "0x4000B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private AxisDirection[] axisDirectionsLeft;

		[Token(Token = "0x4000B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private AxisDirection[] axisDirectionsRight;

		[Token(Token = "0x17000176")]
		private AxisDirection[] axisDirections
		{
			[Token(Token = "0x6000D5E")]
			[Address(RVA = "0x32E9C50", Offset = "0x32E9C50", VA = "0x32E9C50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0x32E84F8", Offset = "0x32E84F8", VA = "0x32E84F8")]
		public void MaintainRotation()
		{
		}

		[Token(Token = "0x6000D58")]
		[Address(RVA = "0x32E8548", Offset = "0x32E8548", VA = "0x32E8548")]
		public void MaintainBend()
		{
		}

		[Token(Token = "0x6000D59")]
		[Address(RVA = "0x32E865C", Offset = "0x32E865C", VA = "0x32E865C", Slot = "12")]
		protected override void OnInitiateVirtual()
		{
		}

		[Token(Token = "0x6000D5A")]
		[Address(RVA = "0x32E8CCC", Offset = "0x32E8CCC", VA = "0x32E8CCC", Slot = "13")]
		protected override void OnUpdateVirtual()
		{
		}

		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0x32E98A8", Offset = "0x32E98A8", VA = "0x32E98A8", Slot = "14")]
		protected override void OnPostSolveVirtual()
		{
		}

		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0x32E99F0", Offset = "0x32E99F0", VA = "0x32E99F0")]
		public IKSolverLimb()
		{
		}

		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0x32E9BB0", Offset = "0x32E9BB0", VA = "0x32E9BB0")]
		public IKSolverLimb(AvatarIKGoal goal)
		{
		}

		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0x32E89D8", Offset = "0x32E89D8", VA = "0x32E89D8")]
		private void StoreAxisDirections(ref AxisDirection[] axisDirections)
		{
		}

		[Token(Token = "0x6000D60")]
		[Address(RVA = "0x32E8DF8", Offset = "0x32E8DF8", VA = "0x32E8DF8")]
		private Vector3 GetModifiedBendNormal()
		{
			return default(Vector3);
		}
	}
	[Serializable]
	[Token(Token = "0x20001A2")]
	public class IKSolverLookAt : IKSolver
	{
		[Serializable]
		[Token(Token = "0x2000571")]
		public class LookAtBone : Bone
		{
			[Token(Token = "0x400216B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			public Vector3 baseForwardOffsetEuler;

			[Token(Token = "0x170004D6")]
			public Vector3 forward
			{
				[Token(Token = "0x6002545")]
				[Address(RVA = "0x32EBDF4", Offset = "0x32EBDF4", VA = "0x32EBDF4")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x6002541")]
			[Address(RVA = "0x32EC598", Offset = "0x32EC598", VA = "0x32EC598")]
			public LookAtBone()
			{
			}

			[Token(Token = "0x6002542")]
			[Address(RVA = "0x32EAF44", Offset = "0x32EAF44", VA = "0x32EAF44")]
			public LookAtBone(Transform transform)
			{
			}

			[Token(Token = "0x6002543")]
			[Address(RVA = "0x32EB2CC", Offset = "0x32EB2CC", VA = "0x32EB2CC")]
			public void Initiate(Transform root)
			{
			}

			[Token(Token = "0x6002544")]
			[Address(RVA = "0x32EC1F8", Offset = "0x32EC1F8", VA = "0x32EC1F8")]
			public void LookAt(Vector3 direction, float weight)
			{
			}
		}

		[Token(Token = "0x4000B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform target;

		[Token(Token = "0x4000B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public LookAtBone[] spine;

		[Token(Token = "0x4000B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public LookAtBone head;

		[Token(Token = "0x4000B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public LookAtBone[] eyes;

		[Token(Token = "0x4000B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x147018C", Offset = "0x147018C")]
		public float bodyWeight;

		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x14701A4", Offset = "0x14701A4")]
		public float headWeight;

		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x14701BC", Offset = "0x14701BC")]
		public float eyesWeight;

		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x14701D4", Offset = "0x14701D4")]
		public float clampWeight;

		[Token(Token = "0x4000B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x14701EC", Offset = "0x14701EC")]
		public float clampWeightHead;

		[Token(Token = "0x4000B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1470204", Offset = "0x1470204")]
		public float clampWeightEyes;

		[Token(Token = "0x4000B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x147021C", Offset = "0x147021C")]
		public int clampSmoothing;

		[Token(Token = "0x4000B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public AnimationCurve spineWeightCurve;

		[Token(Token = "0x4000B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Vector3 spineTargetOffset;

		[Token(Token = "0x4000B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected Vector3[] spineForwards;

		[Token(Token = "0x4000B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected Vector3[] headForwards;

		[Token(Token = "0x4000B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected Vector3[] eyeForward;

		[Token(Token = "0x4000B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool isDirty;

		[Token(Token = "0x17000177")]
		protected bool spineIsValid
		{
			[Token(Token = "0x6000D70")]
			[Address(RVA = "0x32EA628", Offset = "0x32EA628", VA = "0x32EA628")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000178")]
		protected bool spineIsEmpty
		{
			[Token(Token = "0x6000D71")]
			[Address(RVA = "0x32EA800", Offset = "0x32EA800", VA = "0x32EA800")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000179")]
		protected bool headIsValid
		{
			[Token(Token = "0x6000D73")]
			[Address(RVA = "0x32EA70C", Offset = "0x32EA70C", VA = "0x32EA70C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700017A")]
		protected bool headIsEmpty
		{
			[Token(Token = "0x6000D74")]
			[Address(RVA = "0x32EA824", Offset = "0x32EA824", VA = "0x32EA824")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700017B")]
		protected bool eyesIsValid
		{
			[Token(Token = "0x6000D76")]
			[Address(RVA = "0x32EA71C", Offset = "0x32EA71C", VA = "0x32EA71C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700017C")]
		protected bool eyesIsEmpty
		{
			[Token(Token = "0x6000D77")]
			[Address(RVA = "0x32EA8A0", Offset = "0x32EA8A0", VA = "0x32EA8A0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D61")]
		[Address(RVA = "0x32E9CCC", Offset = "0x32E9CCC", VA = "0x32E9CCC")]
		public void SetLookAtWeight(float weight)
		{
		}

		[Token(Token = "0x6000D62")]
		[Address(RVA = "0x32E9D50", Offset = "0x32E9D50", VA = "0x32E9D50")]
		public void SetLookAtWeight(float weight, float bodyWeight)
		{
		}

		[Token(Token = "0x6000D63")]
		[Address(RVA = "0x32E9DFC", Offset = "0x32E9DFC", VA = "0x32E9DFC")]
		public void SetLookAtWeight(float weight, float bodyWeight, float headWeight)
		{
		}

		[Token(Token = "0x6000D64")]
		[Address(RVA = "0x32E9EC4", Offset = "0x32E9EC4", VA = "0x32E9EC4")]
		public void SetLookAtWeight(float weight, float bodyWeight, float headWeight, float eyesWeight)
		{
		}

		[Token(Token = "0x6000D65")]
		[Address(RVA = "0x32E9FB0", Offset = "0x32E9FB0", VA = "0x32E9FB0")]
		public void SetLookAtWeight(float weight, float bodyWeight, float headWeight, float eyesWeight, float clampWeight)
		{
		}

		[Token(Token = "0x6000D66")]
		[Address(RVA = "0x32EA0BC", Offset = "0x32EA0BC", VA = "0x32EA0BC")]
		public void SetLookAtWeight(float weight, float bodyWeight = 0f, float headWeight = 1f, float eyesWeight = 0.5f, float clampWeight = 0.5f, float clampWeightHead = 0.5f, float clampWeightEyes = 0.3f)
		{
		}

		[Token(Token = "0x6000D67")]
		[Address(RVA = "0x32EA204", Offset = "0x32EA204", VA = "0x32EA204", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0x32EA334", Offset = "0x32EA334", VA = "0x32EA334")]
		public void SetDirty()
		{
		}

		[Token(Token = "0x6000D69")]
		[Address(RVA = "0x32EA340", Offset = "0x32EA340", VA = "0x32EA340", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0x32EA488", Offset = "0x32EA488", VA = "0x32EA488", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0x32EA8C4", Offset = "0x32EA8C4", VA = "0x32EA8C4", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0x32EAB2C", Offset = "0x32EAB2C", VA = "0x32EAB2C", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0x32EACCC", Offset = "0x32EACCC", VA = "0x32EACCC")]
		public bool SetChain(Transform[] spine, Transform head, Transform[] eyes, Transform root)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0x32EAF78", Offset = "0x32EAF78", VA = "0x32EAF78", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0x32EB408", Offset = "0x32EB408", VA = "0x32EB408", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0x32EB50C", Offset = "0x32EB50C", VA = "0x32EB50C")]
		protected void SolveSpine()
		{
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0x32EB738", Offset = "0x32EB738", VA = "0x32EB738")]
		protected void SolveHead()
		{
		}

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0x32EB994", Offset = "0x32EB994", VA = "0x32EB994")]
		protected void SolveEyes()
		{
		}

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0x32EBEC0", Offset = "0x32EBEC0", VA = "0x32EBEC0")]
		protected Vector3[] GetForwards(ref Vector3[] forwards, Vector3 baseForward, Vector3 targetForward, int bones, float clamp)
		{
			return null;
		}

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0x32EAD94", Offset = "0x32EAD94", VA = "0x32EAD94")]
		protected void SetBones(Transform[] array, ref LookAtBone[] bones)
		{
		}

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0x32EC360", Offset = "0x32EC360", VA = "0x32EC360")]
		public IKSolverLookAt()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001A3")]
	public class IKSolverTrigonometric : IKSolver
	{
		[Serializable]
		[Token(Token = "0x2000572")]
		public class TrigonometricBone : Bone
		{
			[Token(Token = "0x400216C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			private Quaternion targetToLocalSpace;

			[Token(Token = "0x400216D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			private Vector3 defaultLocalBendNormal;

			[Token(Token = "0x6002546")]
			[Address(RVA = "0x32EDBEC", Offset = "0x32EDBEC", VA = "0x32EDBEC")]
			public void Initiate(Vector3 childPosition, Vector3 bendNormal)
			{
			}

			[Token(Token = "0x6002547")]
			[Address(RVA = "0x32EE7A4", Offset = "0x32EE7A4", VA = "0x32EE7A4")]
			public Quaternion GetRotation(Vector3 direction, Vector3 bendNormal)
			{
				return default(Quaternion);
			}

			[Token(Token = "0x6002548")]
			[Address(RVA = "0x32E8590", Offset = "0x32E8590", VA = "0x32E8590")]
			public Vector3 GetBendNormalFromCurrentRotation()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002549")]
			[Address(RVA = "0x32EE86C", Offset = "0x32EE86C", VA = "0x32EE86C")]
			public TrigonometricBone()
			{
			}
		}

		[Token(Token = "0x4000B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform target;

		[Token(Token = "0x4000B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1470234", Offset = "0x1470234")]
		public float IKRotationWeight;

		[Token(Token = "0x4000B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Quaternion IKRotation;

		[Token(Token = "0x4000B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public Vector3 bendNormal;

		[Token(Token = "0x4000B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public TrigonometricBone bone1;

		[Token(Token = "0x4000B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public TrigonometricBone bone2;

		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public TrigonometricBone bone3;

		[Token(Token = "0x4000B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected Vector3 weightIKPosition;

		[Token(Token = "0x4000B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		protected bool directHierarchy;

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0x32EC5A0", Offset = "0x32EC5A0", VA = "0x32EC5A0")]
		public void SetBendGoalPosition(Vector3 goalPosition, float weight)
		{
		}

		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0x32EC790", Offset = "0x32EC790", VA = "0x32EC790")]
		public void SetBendPlaneToCurrent()
		{
		}

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0x32EC944", Offset = "0x32EC944", VA = "0x32EC944")]
		public void SetIKRotation(Quaternion rotation)
		{
		}

		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0x32EC950", Offset = "0x32EC950", VA = "0x32EC950")]
		public void SetIKRotationWeight(float weight)
		{
		}

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0x32EC9D4", Offset = "0x32EC9D4", VA = "0x32EC9D4")]
		public Quaternion GetIKRotation()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0x32EC9E0", Offset = "0x32EC9E0", VA = "0x32EC9E0")]
		public float GetIKRotationWeight()
		{
			return default(float);
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0x32EC9E8", Offset = "0x32EC9E8", VA = "0x32EC9E8", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0x32ECB10", Offset = "0x32ECB10", VA = "0x32ECB10", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6000D84")]
		[Address(RVA = "0x32ECC30", Offset = "0x32ECC30", VA = "0x32ECC30", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0x32ECC7C", Offset = "0x32ECC7C", VA = "0x32ECC7C", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x6000D86")]
		[Address(RVA = "0x32ECCDC", Offset = "0x32ECCDC", VA = "0x32ECCDC", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D87")]
		[Address(RVA = "0x32ED0E8", Offset = "0x32ED0E8", VA = "0x32ED0E8")]
		public bool SetChain(Transform bone1, Transform bone2, Transform bone3, Transform root)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D88")]
		[Address(RVA = "0x32ED168", Offset = "0x32ED168", VA = "0x32ED168")]
		public static void Solve(Transform bone1, Transform bone2, Transform bone3, Vector3 targetPosition, Vector3 bendNormal, float weight)
		{
		}

		[Token(Token = "0x6000D89")]
		[Address(RVA = "0x32ED710", Offset = "0x32ED710", VA = "0x32ED710")]
		private static Vector3 GetDirectionToBendPoint(Vector3 direction, float directionMag, Vector3 bendDirection, float sqrMag1, float sqrMag2)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0x32ED928", Offset = "0x32ED928", VA = "0x32ED928", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0x32EDAE4", Offset = "0x32EDAE4", VA = "0x32EDAE4")]
		private bool IsDirectHierarchy()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0x32EDA60", Offset = "0x32EDA60", VA = "0x32EDA60")]
		private void InitiateBones()
		{
		}

		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0x32EDD8C", Offset = "0x32EDD8C", VA = "0x32EDD8C", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0x32EE860", Offset = "0x32EE860", VA = "0x32EE860", Slot = "12")]
		protected virtual void OnInitiateVirtual()
		{
		}

		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0x32EE864", Offset = "0x32EE864", VA = "0x32EE864", Slot = "13")]
		protected virtual void OnUpdateVirtual()
		{
		}

		[Token(Token = "0x6000D90")]
		[Address(RVA = "0x32EE868", Offset = "0x32EE868", VA = "0x32EE868", Slot = "14")]
		protected virtual void OnPostSolveVirtual()
		{
		}

		[Token(Token = "0x6000D91")]
		[Address(RVA = "0x32EE498", Offset = "0x32EE498", VA = "0x32EE498")]
		protected Vector3 GetBendDirection(Vector3 IKPosition, Vector3 bendNormal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D92")]
		[Address(RVA = "0x32E9A7C", Offset = "0x32E9A7C", VA = "0x32E9A7C")]
		public IKSolverTrigonometric()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001A4")]
	public class IKSolverVR : IKSolver
	{
		[Serializable]
		[Token(Token = "0x2000573")]
		public class Arm : BodyPart
		{
			[Serializable]
			[Token(Token = "0x200078C")]
			public enum ShoulderRotationMode
			{
				[Token(Token = "0x40029FD")]
				YawPitch,
				[Token(Token = "0x40029FE")]
				FromTo
			}

			[Token(Token = "0x400216E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147A714", Offset = "0x147A714")]
			public Transform target;

			[Token(Token = "0x400216F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147A74C", Offset = "0x147A74C")]
			public Transform bendGoal;

			[Token(Token = "0x4002170")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147A784", Offset = "0x147A784")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x147A784", Offset = "0x147A784")]
			public float positionWeight;

			[Token(Token = "0x4002171")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147A7D8", Offset = "0x147A7D8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x147A7D8", Offset = "0x147A7D8")]
			public float rotationWeight;

			[Token(Token = "0x4002172")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147A82C", Offset = "0x147A82C")]
			public ShoulderRotationMode shoulderRotationMode;

			[Token(Token = "0x4002173")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147A864", Offset = "0x147A864")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x147A864", Offset = "0x147A864")]
			public float shoulderRotationWeight;

			[Token(Token = "0x4002174")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147A8B8", Offset = "0x147A8B8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x147A8B8", Offset = "0x147A8B8")]
			public float shoulderTwistWeight;

			[Token(Token = "0x4002175")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147A90C", Offset = "0x147A90C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x147A90C", Offset = "0x147A90C")]
			public float bendGoalWeight;

			[Token(Token = "0x4002176")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147A960", Offset = "0x147A960")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x147A960", Offset = "0x147A960")]
			public float swivelOffset;

			[Token(Token = "0x4002177")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147A9BC", Offset = "0x147A9BC")]
			public Vector3 wristToPalmAxis;

			[Token(Token = "0x4002178")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147A9F4", Offset = "0x147A9F4")]
			public Vector3 palmToThumbAxis;

			[Token(Token = "0x4002179")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147AA2C", Offset = "0x147AA2C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x147AA2C", Offset = "0x147AA2C")]
			public float armLengthMlp;

			[Token(Token = "0x400217A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147AA84", Offset = "0x147AA84")]
			public AnimationCurve stretchCurve;

			[NonSerialized]
			[Token(Token = "0x400217B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			[HideInInspector]
			public Vector3 IKPosition;

			[NonSerialized]
			[Token(Token = "0x400217C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
			[HideInInspector]
			public Quaternion IKRotation;

			[NonSerialized]
			[Token(Token = "0x400217D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
			[HideInInspector]
			public Vector3 bendDirection;

			[NonSerialized]
			[Token(Token = "0x400217E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			[HideInInspector]
			public Vector3 handPositionOffset;

			[Token(Token = "0x400217F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147AAFC", Offset = "0x147AAFC")]
			private Vector3 <position>k__BackingField;

			[Token(Token = "0x4002180")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147AB0C", Offset = "0x147AB0C")]
			private Quaternion <rotation>k__BackingField;

			[Token(Token = "0x4002181")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			private bool hasShoulder;

			[Token(Token = "0x4002182")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
			private Vector3 chestForwardAxis;

			[Token(Token = "0x4002183")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			private Vector3 chestUpAxis;

			[Token(Token = "0x4002184")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
			private Quaternion chestRotation;

			[Token(Token = "0x4002185")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
			private Vector3 chestForward;

			[Token(Token = "0x4002186")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
			private Vector3 chestUp;

			[Token(Token = "0x4002187")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
			private Quaternion forearmRelToUpperArm;

			[Token(Token = "0x4002188")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
			private Vector3 upperArmBendAxis;

			[Token(Token = "0x4002189")]
			private const float yawOffsetAngle = 45f;

			[Token(Token = "0x400218A")]
			private const float pitchOffsetAngle = -30f;

			[Token(Token = "0x170004D7")]
			public Vector3 position
			{
				[Token(Token = "0x600254A")]
				[Address(RVA = "0x32F46D4", Offset = "0x32F46D4", VA = "0x32F46D4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1488094", Offset = "0x1488094")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x600254B")]
				[Address(RVA = "0x32F46E0", Offset = "0x32F46E0", VA = "0x32F46E0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14880A4", Offset = "0x14880A4")]
				private set
				{
				}
			}

			[Token(Token = "0x170004D8")]
			public Quaternion rotation
			{
				[Token(Token = "0x600254C")]
				[Address(RVA = "0x32F46EC", Offset = "0x32F46EC", VA = "0x32F46EC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14880B4", Offset = "0x14880B4")]
				get
				{
					return default(Quaternion);
				}
				[Token(Token = "0x600254D")]
				[Address(RVA = "0x32F46F8", Offset = "0x32F46F8", VA = "0x32F46F8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14880C4", Offset = "0x14880C4")]
				private set
				{
				}
			}

			[Token(Token = "0x170004D9")]
			private VirtualBone shoulder
			{
				[Token(Token = "0x600254E")]
				[Address(RVA = "0x32F4704", Offset = "0x32F4704", VA = "0x32F4704")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004DA")]
			private VirtualBone upperArm
			{
				[Token(Token = "0x600254F")]
				[Address(RVA = "0x32F4738", Offset = "0x32F4738", VA = "0x32F4738")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004DB")]
			private VirtualBone forearm
			{
				[Token(Token = "0x6002550")]
				[Address(RVA = "0x32F4778", Offset = "0x32F4778", VA = "0x32F4778")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004DC")]
			private VirtualBone hand
			{
				[Token(Token = "0x6002551")]
				[Address(RVA = "0x32F47C4", Offset = "0x32F47C4", VA = "0x32F47C4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002552")]
			[Address(RVA = "0x32F4810", Offset = "0x32F4810", VA = "0x32F4810", Slot = "4")]
			protected override void OnRead(Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index)
			{
			}

			[Token(Token = "0x6002553")]
			[Address(RVA = "0x32F51E0", Offset = "0x32F51E0", VA = "0x32F51E0", Slot = "5")]
			public override void PreSolve()
			{
			}

			[Token(Token = "0x6002554")]
			[Address(RVA = "0x32F53D4", Offset = "0x32F53D4", VA = "0x32F53D4", Slot = "7")]
			public override void ApplyOffsets(float scale)
			{
			}

			[Token(Token = "0x6002555")]
			[Address(RVA = "0x32F5480", Offset = "0x32F5480", VA = "0x32F5480")]
			private void Stretching()
			{
			}

			[Token(Token = "0x6002556")]
			[Address(RVA = "0x32F27A8", Offset = "0x32F27A8", VA = "0x32F27A8")]
			public void Solve(bool isLeft)
			{
			}

			[Token(Token = "0x6002557")]
			[Address(RVA = "0x32F60CC", Offset = "0x32F60CC", VA = "0x32F60CC", Slot = "8")]
			public override void ResetOffsets()
			{
			}

			[Token(Token = "0x6002558")]
			[Address(RVA = "0x32F613C", Offset = "0x32F613C", VA = "0x32F613C", Slot = "6")]
			public override void Write(ref Vector3[] solvedPositions, ref Quaternion[] solvedRotations)
			{
			}

			[Token(Token = "0x6002559")]
			[Address(RVA = "0x32F5898", Offset = "0x32F5898", VA = "0x32F5898")]
			private float DamperValue(float value, float min, float max, float weight = 1f)
			{
				return default(float);
			}

			[Token(Token = "0x600255A")]
			[Address(RVA = "0x32F5970", Offset = "0x32F5970", VA = "0x32F5970")]
			private Vector3 GetBendNormal(Vector3 dir)
			{
				return default(Vector3);
			}

			[Token(Token = "0x600255B")]
			[Address(RVA = "0x32F635C", Offset = "0x32F635C", VA = "0x32F635C")]
			private void Visualize(VirtualBone bone1, VirtualBone bone2, VirtualBone bone3, UnityEngine.Color color)
			{
			}

			[Token(Token = "0x600255C")]
			[Address(RVA = "0x32F45A0", Offset = "0x32F45A0", VA = "0x32F45A0")]
			public Arm()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000574")]
		public abstract class BodyPart
		{
			[Token(Token = "0x400218B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147AB1C", Offset = "0x147AB1C")]
			private float <sqrMag>k__BackingField;

			[Token(Token = "0x400218C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147AB2C", Offset = "0x147AB2C")]
			private float <mag>k__BackingField;

			[Token(Token = "0x400218D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[HideInInspector]
			public VirtualBone[] bones;

			[Token(Token = "0x400218E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			protected bool initiated;

			[Token(Token = "0x400218F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			protected Vector3 rootPosition;

			[Token(Token = "0x4002190")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			protected Quaternion rootRotation;

			[Token(Token = "0x4002191")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			protected int index;

			[Token(Token = "0x4002192")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			protected int LOD;

			[Token(Token = "0x170004DD")]
			public float sqrMag
			{
				[Token(Token = "0x6002562")]
				[Address(RVA = "0x32F6528", Offset = "0x32F6528", VA = "0x32F6528")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14880D4", Offset = "0x14880D4")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6002563")]
				[Address(RVA = "0x32F6530", Offset = "0x32F6530", VA = "0x32F6530")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14880E4", Offset = "0x14880E4")]
				private set
				{
				}
			}

			[Token(Token = "0x170004DE")]
			public float mag
			{
				[Token(Token = "0x6002564")]
				[Address(RVA = "0x32F6538", Offset = "0x32F6538", VA = "0x32F6538")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14880F4", Offset = "0x14880F4")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6002565")]
				[Address(RVA = "0x32F6540", Offset = "0x32F6540", VA = "0x32F6540")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1488104", Offset = "0x1488104")]
				private set
				{
				}
			}

			[Token(Token = "0x600255D")]
			protected abstract void OnRead(Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index);

			[Token(Token = "0x600255E")]
			public abstract void PreSolve();

			[Token(Token = "0x600255F")]
			public abstract void Write(ref Vector3[] solvedPositions, ref Quaternion[] solvedRotations);

			[Token(Token = "0x6002560")]
			public abstract void ApplyOffsets(float scale);

			[Token(Token = "0x6002561")]
			public abstract void ResetOffsets();

			[Token(Token = "0x6002566")]
			[Address(RVA = "0x32F6548", Offset = "0x32F6548", VA = "0x32F6548")]
			public void SetLOD(int LOD)
			{
			}

			[Token(Token = "0x6002567")]
			[Address(RVA = "0x32E8170", Offset = "0x32E8170", VA = "0x32E8170")]
			public void Read(Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index)
			{
			}

			[Token(Token = "0x6002568")]
			[Address(RVA = "0x32F6550", Offset = "0x32F6550", VA = "0x32F6550")]
			public void MovePosition(Vector3 position)
			{
			}

			[Token(Token = "0x6002569")]
			[Address(RVA = "0x32F66BC", Offset = "0x32F66BC", VA = "0x32F66BC")]
			public void MoveRotation(Quaternion rotation)
			{
			}

			[Token(Token = "0x600256A")]
			[Address(RVA = "0x32F6768", Offset = "0x32F6768", VA = "0x32F6768")]
			public void Translate(Vector3 position, Quaternion rotation)
			{
			}

			[Token(Token = "0x600256B")]
			[Address(RVA = "0x32F25B8", Offset = "0x32F25B8", VA = "0x32F25B8")]
			public void TranslateRoot(Vector3 newRootPos, Quaternion newRootRot)
			{
			}

			[Token(Token = "0x600256C")]
			[Address(RVA = "0x32F5F28", Offset = "0x32F5F28", VA = "0x32F5F28")]
			public void RotateTo(VirtualBone bone, Quaternion rotation, float weight = 1f)
			{
			}

			[Token(Token = "0x600256D")]
			[Address(RVA = "0x32F67BC", Offset = "0x32F67BC", VA = "0x32F67BC")]
			public void Visualize(UnityEngine.Color color)
			{
			}

			[Token(Token = "0x600256E")]
			[Address(RVA = "0x32F6900", Offset = "0x32F6900", VA = "0x32F6900")]
			public void Visualize()
			{
			}

			[Token(Token = "0x600256F")]
			[Address(RVA = "0x32F6484", Offset = "0x32F6484", VA = "0x32F6484")]
			protected BodyPart()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000575")]
		public class Footstep
		{
			[Token(Token = "0x4002193")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float stepSpeed;

			[Token(Token = "0x4002194")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 characterSpaceOffset;

			[Token(Token = "0x4002195")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 position;

			[Token(Token = "0x4002196")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Quaternion rotation;

			[Token(Token = "0x4002197")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Quaternion stepToRootRot;

			[Token(Token = "0x4002198")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public bool isSupportLeg;

			[Token(Token = "0x4002199")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
			public bool relaxFlag;

			[Token(Token = "0x400219A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147AB4C", Offset = "0x147AB4C")]
			private float <stepProgress>k__BackingField;

			[Token(Token = "0x400219B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public Vector3 stepFrom;

			[Token(Token = "0x400219C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Vector3 stepTo;

			[Token(Token = "0x400219D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public Quaternion stepFromRot;

			[Token(Token = "0x400219E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			public Quaternion stepToRot;

			[Token(Token = "0x400219F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			private Quaternion footRelativeToRoot;

			[Token(Token = "0x40021A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
			private float supportLegW;

			[Token(Token = "0x40021A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private float supportLegWV;

			[Token(Token = "0x170004DF")]
			public bool isStepping
			{
				[Token(Token = "0x6002570")]
				[Address(RVA = "0x32F6928", Offset = "0x32F6928", VA = "0x32F6928")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170004E0")]
			public float stepProgress
			{
				[Token(Token = "0x6002571")]
				[Address(RVA = "0x32F693C", Offset = "0x32F693C", VA = "0x32F693C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1488114", Offset = "0x1488114")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6002572")]
				[Address(RVA = "0x32F6944", Offset = "0x32F6944", VA = "0x32F6944")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1488124", Offset = "0x1488124")]
				private set
				{
				}
			}

			[Token(Token = "0x6002573")]
			[Address(RVA = "0x32F694C", Offset = "0x32F694C", VA = "0x32F694C")]
			public Footstep(Quaternion rootRotation, Vector3 footPosition, Quaternion footRotation, Vector3 characterSpaceOffset)
			{
			}

			[Token(Token = "0x6002574")]
			[Address(RVA = "0x32F6ADC", Offset = "0x32F6ADC", VA = "0x32F6ADC")]
			public void Reset(Quaternion rootRotation, Vector3 footPosition, Quaternion footRotation)
			{
			}

			[Token(Token = "0x6002575")]
			[Address(RVA = "0x32F6B24", Offset = "0x32F6B24", VA = "0x32F6B24")]
			public void StepTo(Vector3 p, Quaternion rootRotation, float stepThreshold)
			{
			}

			[Token(Token = "0x6002576")]
			[Address(RVA = "0x32F6CF4", Offset = "0x32F6CF4", VA = "0x32F6CF4")]
			public void UpdateStepping(Vector3 p, Quaternion rootRotation, float speed)
			{
			}

			[Token(Token = "0x6002577")]
			[Address(RVA = "0x32F6ECC", Offset = "0x32F6ECC", VA = "0x32F6ECC")]
			public void UpdateStanding(Quaternion rootRotation, float minAngle, float speed)
			{
			}

			[Token(Token = "0x6002578")]
			[Address(RVA = "0x32F70B8", Offset = "0x32F70B8", VA = "0x32F70B8")]
			public void Update(InterpolationMode interpolation, UnityEvent onStep)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000576")]
		public class Leg : BodyPart
		{
			[Token(Token = "0x40021A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147AB5C", Offset = "0x147AB5C")]
			public Transform target;

			[Token(Token = "0x40021A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147AB94", Offset = "0x147AB94")]
			public Transform bendGoal;

			[Token(Token = "0x40021A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147ABCC", Offset = "0x147ABCC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x147ABCC", Offset = "0x147ABCC")]
			public float positionWeight;

			[Token(Token = "0x40021A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147AC20", Offset = "0x147AC20")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x147AC20", Offset = "0x147AC20")]
			public float rotationWeight;

			[Token(Token = "0x40021A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147AC74", Offset = "0x147AC74")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x147AC74", Offset = "0x147AC74")]
			public float bendGoalWeight;

			[Token(Token = "0x40021A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147ACC8", Offset = "0x147ACC8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x147ACC8", Offset = "0x147ACC8")]
			public float swivelOffset;

			[Token(Token = "0x40021A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147AD24", Offset = "0x147AD24")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x147AD24", Offset = "0x147AD24")]
			public float bendToTargetWeight;

			[Token(Token = "0x40021A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147AD78", Offset = "0x147AD78")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x147AD78", Offset = "0x147AD78")]
			public float legLengthMlp;

			[Token(Token = "0x40021AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147ADD0", Offset = "0x147ADD0")]
			public AnimationCurve stretchCurve;

			[NonSerialized]
			[Token(Token = "0x40021AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			[HideInInspector]
			public Vector3 IKPosition;

			[NonSerialized]
			[Token(Token = "0x40021AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			[HideInInspector]
			public Quaternion IKRotation;

			[NonSerialized]
			[Token(Token = "0x40021AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			[HideInInspector]
			public Vector3 footPositionOffset;

			[NonSerialized]
			[Token(Token = "0x40021AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			[HideInInspector]
			public Vector3 heelPositionOffset;

			[NonSerialized]
			[Token(Token = "0x40021AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
			[HideInInspector]
			public Quaternion footRotationOffset;

			[NonSerialized]
			[Token(Token = "0x40021B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			[HideInInspector]
			public float currentMag;

			[Token(Token = "0x40021B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			[HideInInspector]
			public bool useAnimatedBendNormal;

			[Token(Token = "0x40021B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147AE78", Offset = "0x147AE78")]
			private Vector3 <position>k__BackingField;

			[Token(Token = "0x40021B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147AE88", Offset = "0x147AE88")]
			private Quaternion <rotation>k__BackingField;

			[Token(Token = "0x40021B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147AE98", Offset = "0x147AE98")]
			private bool <hasToes>k__BackingField;

			[Token(Token = "0x40021B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147AEA8", Offset = "0x147AEA8")]
			private Vector3 <thighRelativeToPelvis>k__BackingField;

			[Token(Token = "0x40021B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			private Vector3 footPosition;

			[Token(Token = "0x40021B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
			private Quaternion footRotation;

			[Token(Token = "0x40021B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
			private Vector3 bendNormal;

			[Token(Token = "0x40021B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
			private Quaternion calfRelToThigh;

			[Token(Token = "0x40021BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
			private Quaternion thighRelToFoot;

			[Token(Token = "0x40021BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
			private Vector3 bendNormalRelToPelvis;

			[Token(Token = "0x40021BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
			private Vector3 bendNormalRelToTarget;

			[Token(Token = "0x170004E1")]
			public Vector3 position
			{
				[Token(Token = "0x6002579")]
				[Address(RVA = "0x32F72D4", Offset = "0x32F72D4", VA = "0x32F72D4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1488134", Offset = "0x1488134")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x600257A")]
				[Address(RVA = "0x32F72E0", Offset = "0x32F72E0", VA = "0x32F72E0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1488144", Offset = "0x1488144")]
				private set
				{
				}
			}

			[Token(Token = "0x170004E2")]
			public Quaternion rotation
			{
				[Token(Token = "0x600257B")]
				[Address(RVA = "0x32F72EC", Offset = "0x32F72EC", VA = "0x32F72EC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1488154", Offset = "0x1488154")]
				get
				{
					return default(Quaternion);
				}
				[Token(Token = "0x600257C")]
				[Address(RVA = "0x32F72F8", Offset = "0x32F72F8", VA = "0x32F72F8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1488164", Offset = "0x1488164")]
				private set
				{
				}
			}

			[Token(Token = "0x170004E3")]
			public bool hasToes
			{
				[Token(Token = "0x600257D")]
				[Address(RVA = "0x32F7304", Offset = "0x32F7304", VA = "0x32F7304")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1488174", Offset = "0x1488174")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x600257E")]
				[Address(RVA = "0x32F730C", Offset = "0x32F730C", VA = "0x32F730C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1488184", Offset = "0x1488184")]
				private set
				{
				}
			}

			[Token(Token = "0x170004E4")]
			public VirtualBone thigh
			{
				[Token(Token = "0x600257F")]
				[Address(RVA = "0x32F7318", Offset = "0x32F7318", VA = "0x32F7318")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004E5")]
			private VirtualBone calf
			{
				[Token(Token = "0x6002580")]
				[Address(RVA = "0x32F734C", Offset = "0x32F734C", VA = "0x32F734C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004E6")]
			private VirtualBone foot
			{
				[Token(Token = "0x6002581")]
				[Address(RVA = "0x32F7384", Offset = "0x32F7384", VA = "0x32F7384")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004E7")]
			private VirtualBone toes
			{
				[Token(Token = "0x6002582")]
				[Address(RVA = "0x32F73BC", Offset = "0x32F73BC", VA = "0x32F73BC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004E8")]
			public VirtualBone lastBone
			{
				[Token(Token = "0x6002583")]
				[Address(RVA = "0x32F2578", Offset = "0x32F2578", VA = "0x32F2578")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004E9")]
			public Vector3 thighRelativeToPelvis
			{
				[Token(Token = "0x6002584")]
				[Address(RVA = "0x32F73F4", Offset = "0x32F73F4", VA = "0x32F73F4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1488194", Offset = "0x1488194")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6002585")]
				[Address(RVA = "0x32F7400", Offset = "0x32F7400", VA = "0x32F7400")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14881A4", Offset = "0x14881A4")]
				private set
				{
				}
			}

			[Token(Token = "0x6002586")]
			[Address(RVA = "0x32F740C", Offset = "0x32F740C", VA = "0x32F740C", Slot = "4")]
			protected override void OnRead(Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index)
			{
			}

			[Token(Token = "0x6002587")]
			[Address(RVA = "0x32F7A94", Offset = "0x32F7A94", VA = "0x32F7A94", Slot = "5")]
			public override void PreSolve()
			{
			}

			[Token(Token = "0x6002588")]
			[Address(RVA = "0x32F8394", Offset = "0x32F8394", VA = "0x32F8394", Slot = "7")]
			public override void ApplyOffsets(float scale)
			{
			}

			[Token(Token = "0x6002589")]
			[Address(RVA = "0x32F8290", Offset = "0x32F8290", VA = "0x32F8290")]
			private void ApplyPositionOffset(Vector3 offset, float weight)
			{
			}

			[Token(Token = "0x600258A")]
			[Address(RVA = "0x32F8058", Offset = "0x32F8058", VA = "0x32F8058")]
			private void ApplyRotationOffset(Quaternion offset, float weight)
			{
			}

			[Token(Token = "0x600258B")]
			[Address(RVA = "0x32E7F38", Offset = "0x32E7F38", VA = "0x32E7F38")]
			public void Solve(bool stretch)
			{
			}

			[Token(Token = "0x600258C")]
			[Address(RVA = "0x32F8E78", Offset = "0x32F8E78", VA = "0x32F8E78")]
			private void FixTwistRotations()
			{
			}

			[Token(Token = "0x600258D")]
			[Address(RVA = "0x32F894C", Offset = "0x32F894C", VA = "0x32F894C")]
			private void Stretching()
			{
			}

			[Token(Token = "0x600258E")]
			[Address(RVA = "0x32F92E0", Offset = "0x32F92E0", VA = "0x32F92E0", Slot = "6")]
			public override void Write(ref Vector3[] solvedPositions, ref Quaternion[] solvedRotations)
			{
			}

			[Token(Token = "0x600258F")]
			[Address(RVA = "0x32F94FC", Offset = "0x32F94FC", VA = "0x32F94FC", Slot = "8")]
			public override void ResetOffsets()
			{
			}

			[Token(Token = "0x6002590")]
			[Address(RVA = "0x32E83F8", Offset = "0x32E83F8", VA = "0x32E83F8")]
			public Leg()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000577")]
		public class Locomotion
		{
			[Token(Token = "0x40021BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147AEB8", Offset = "0x147AEB8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x147AEB8", Offset = "0x147AEB8")]
			public float weight;

			[Token(Token = "0x40021BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147AF0C", Offset = "0x147AF0C")]
			public float footDistance;

			[Token(Token = "0x40021BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147AF44", Offset = "0x147AF44")]
			public float stepThreshold;

			[Token(Token = "0x40021C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147AF7C", Offset = "0x147AF7C")]
			public float angleThreshold;

			[Token(Token = "0x40021C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147AFB4", Offset = "0x147AFB4")]
			public float comAngleMlp;

			[Token(Token = "0x40021C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147AFEC", Offset = "0x147AFEC")]
			public float maxVelocity;

			[Token(Token = "0x40021C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147B024", Offset = "0x147B024")]
			public float velocityFactor;

			[Token(Token = "0x40021C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147B05C", Offset = "0x147B05C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x147B05C", Offset = "0x147B05C")]
			public float maxLegStretch;

			[Token(Token = "0x40021C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147B0B4", Offset = "0x147B0B4")]
			public float rootSpeed;

			[Token(Token = "0x40021C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147B0EC", Offset = "0x147B0EC")]
			public float stepSpeed;

			[Token(Token = "0x40021C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147B124", Offset = "0x147B124")]
			public AnimationCurve stepHeight;

			[Token(Token = "0x40021C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147B15C", Offset = "0x147B15C")]
			public float maxBodyYOffset;

			[Token(Token = "0x40021C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147B194", Offset = "0x147B194")]
			public AnimationCurve heelHeight;

			[Token(Token = "0x40021CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147B1CC", Offset = "0x147B1CC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x147B1CC", Offset = "0x147B1CC")]
			public float relaxLegTwistMinAngle;

			[Token(Token = "0x40021CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147B224", Offset = "0x147B224")]
			public float relaxLegTwistSpeed;

			[Token(Token = "0x40021CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147B25C", Offset = "0x147B25C")]
			public InterpolationMode stepInterpolation;

			[Token(Token = "0x40021CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147B294", Offset = "0x147B294")]
			public Vector3 offset;

			[Token(Token = "0x40021CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[HideInInspector]
			public bool blockingEnabled;

			[Token(Token = "0x40021CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			[HideInInspector]
			public LayerMask blockingLayers;

			[Token(Token = "0x40021D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[HideInInspector]
			public float raycastRadius;

			[Token(Token = "0x40021D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			[HideInInspector]
			public float raycastHeight;

			[Token(Token = "0x40021D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147B30C", Offset = "0x147B30C")]
			public UnityEvent onLeftFootstep;

			[Token(Token = "0x40021D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147B344", Offset = "0x147B344")]
			public UnityEvent onRightFootstep;

			[Token(Token = "0x40021D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147B37C", Offset = "0x147B37C")]
			private Vector3 <centerOfMass>k__BackingField;

			[Token(Token = "0x40021D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private Footstep[] footsteps;

			[Token(Token = "0x40021D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private Vector3 lastComPosition;

			[Token(Token = "0x40021D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
			private Vector3 comVelocity;

			[Token(Token = "0x40021D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			private int leftFootIndex;

			[Token(Token = "0x40021D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			private int rightFootIndex;

			[Token(Token = "0x170004EA")]
			public Vector3 centerOfMass
			{
				[Token(Token = "0x6002591")]
				[Address(RVA = "0x2E6492C", Offset = "0x2E6492C", VA = "0x2E6492C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14881B4", Offset = "0x14881B4")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6002592")]
				[Address(RVA = "0x2E64938", Offset = "0x2E64938", VA = "0x2E64938")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14881C4", Offset = "0x14881C4")]
				private set
				{
				}
			}

			[Token(Token = "0x170004EB")]
			public Vector3 leftFootstepPosition
			{
				[Token(Token = "0x6002599")]
				[Address(RVA = "0x2E66F64", Offset = "0x2E66F64", VA = "0x2E66F64")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x170004EC")]
			public Vector3 rightFootstepPosition
			{
				[Token(Token = "0x600259A")]
				[Address(RVA = "0x2E66FA4", Offset = "0x2E66FA4", VA = "0x2E66FA4")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x170004ED")]
			public Quaternion leftFootstepRotation
			{
				[Token(Token = "0x600259B")]
				[Address(RVA = "0x2E66FE8", Offset = "0x2E66FE8", VA = "0x2E66FE8")]
				get
				{
					return default(Quaternion);
				}
			}

			[Token(Token = "0x170004EE")]
			public Quaternion rightFootstepRotation
			{
				[Token(Token = "0x600259C")]
				[Address(RVA = "0x2E67028", Offset = "0x2E67028", VA = "0x2E67028")]
				get
				{
					return default(Quaternion);
				}
			}

			[Token(Token = "0x6002593")]
			[Address(RVA = "0x2E64944", Offset = "0x2E64944", VA = "0x2E64944")]
			public void Initiate(Vector3[] positions, Quaternion[] rotations, bool hasToes, float scale)
			{
			}

			[Token(Token = "0x6002594")]
			[Address(RVA = "0x2E64C70", Offset = "0x2E64C70", VA = "0x2E64C70")]
			public void Reset(Vector3[] positions, Quaternion[] rotations)
			{
			}

			[Token(Token = "0x6002595")]
			[Address(RVA = "0x2E64EEC", Offset = "0x2E64EEC", VA = "0x2E64EEC")]
			public void Relax()
			{
			}

			[Token(Token = "0x6002596")]
			[Address(RVA = "0x2E64F50", Offset = "0x2E64F50", VA = "0x2E64F50")]
			public void AddDeltaRotation(Quaternion delta, Vector3 pivot)
			{
			}

			[Token(Token = "0x6002597")]
			[Address(RVA = "0x2E65328", Offset = "0x2E65328", VA = "0x2E65328")]
			public void AddDeltaPosition(Vector3 delta)
			{
			}

			[Token(Token = "0x6002598")]
			[Address(RVA = "0x2E654D8", Offset = "0x2E654D8", VA = "0x2E654D8")]
			public void Solve(VirtualBone rootBone, Spine spine, Leg leftLeg, Leg rightLeg, Arm leftArm, Arm rightArm, int supportLegIndex, out Vector3 leftFootPosition, out Vector3 rightFootPosition, out Quaternion leftFootRotation, out Quaternion rightFootRotation, out float leftFootOffset, out float rightFootOffset, out float leftHeelOffset, out float rightHeelOffset, float scale)
			{
			}

			[Token(Token = "0x600259D")]
			[Address(RVA = "0x2E66B50", Offset = "0x2E66B50", VA = "0x2E66B50")]
			private bool StepBlocked(Vector3 fromPosition, Vector3 toPosition, Vector3 rootPosition)
			{
				return default(bool);
			}

			[Token(Token = "0x600259E")]
			[Address(RVA = "0x2E66CF4", Offset = "0x2E66CF4", VA = "0x2E66CF4")]
			private bool CanStep()
			{
				return default(bool);
			}

			[Token(Token = "0x600259F")]
			[Address(RVA = "0x2E66D98", Offset = "0x2E66D98", VA = "0x2E66D98")]
			private static bool GetLineSphereCollision(Vector3 lineStart, Vector3 lineEnd, Vector3 sphereCenter, float sphereRadius)
			{
				return default(bool);
			}

			[Token(Token = "0x60025A0")]
			[Address(RVA = "0x2E6706C", Offset = "0x2E6706C", VA = "0x2E6706C")]
			public Locomotion()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000578")]
		public class Spine : BodyPart
		{
			[Token(Token = "0x40021DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147B38C", Offset = "0x147B38C")]
			public Transform headTarget;

			[Token(Token = "0x40021DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147B3C4", Offset = "0x147B3C4")]
			public Transform pelvisTarget;

			[Token(Token = "0x40021DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147B3FC", Offset = "0x147B3FC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x147B3FC", Offset = "0x147B3FC")]
			public float positionWeight;

			[Token(Token = "0x40021DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147B450", Offset = "0x147B450")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x147B450", Offset = "0x147B450")]
			public float rotationWeight;

			[Token(Token = "0x40021DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147B4A4", Offset = "0x147B4A4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x147B4A4", Offset = "0x147B4A4")]
			public float pelvisPositionWeight;

			[Token(Token = "0x40021DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147B4F8", Offset = "0x147B4F8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x147B4F8", Offset = "0x147B4F8")]
			public float pelvisRotationWeight;

			[Token(Token = "0x40021E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147B54C", Offset = "0x147B54C")]
			public Transform chestGoal;

			[Token(Token = "0x40021E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147B584", Offset = "0x147B584")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x147B584", Offset = "0x147B584")]
			public float chestGoalWeight;

			[Token(Token = "0x40021E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147B5D8", Offset = "0x147B5D8")]
			public float minHeadHeight;

			[Token(Token = "0x40021E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147B610", Offset = "0x147B610")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x147B610", Offset = "0x147B610")]
			public float bodyPosStiffness;

			[Token(Token = "0x40021E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147B664", Offset = "0x147B664")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x147B664", Offset = "0x147B664")]
			public float bodyRotStiffness;

			[Token(Token = "0x40021E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147B6B8", Offset = "0x147B6B8")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x147B6B8", Offset = "0x147B6B8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x147B6B8", Offset = "0x147B6B8")]
			public float neckStiffness;

			[Token(Token = "0x40021E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147B730", Offset = "0x147B730")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x147B730", Offset = "0x147B730")]
			public float rotateChestByHands;

			[Token(Token = "0x40021E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147B784", Offset = "0x147B784")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x147B784", Offset = "0x147B784")]
			public float chestClampWeight;

			[Token(Token = "0x40021E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147B7D8", Offset = "0x147B7D8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x147B7D8", Offset = "0x147B7D8")]
			public float headClampWeight;

			[Token(Token = "0x40021E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147B82C", Offset = "0x147B82C")]
			public float moveBodyBackWhenCrouching;

			[Token(Token = "0x40021EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147B864", Offset = "0x147B864")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x147B864", Offset = "0x147B864")]
			public float maintainPelvisPosition;

			[Token(Token = "0x40021EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147B8B8", Offset = "0x147B8B8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x147B8B8", Offset = "0x147B8B8")]
			public float maxRootAngle;

			[Token(Token = "0x40021EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147B910", Offset = "0x147B910")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x147B910", Offset = "0x147B910")]
			public float rootHeadingOffset;

			[NonSerialized]
			[Token(Token = "0x40021ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			[HideInInspector]
			public Vector3 IKPositionHead;

			[NonSerialized]
			[Token(Token = "0x40021EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
			[HideInInspector]
			public Quaternion IKRotationHead;

			[NonSerialized]
			[Token(Token = "0x40021EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			[HideInInspector]
			public Vector3 IKPositionPelvis;

			[NonSerialized]
			[Token(Token = "0x40021F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			[HideInInspector]
			public Quaternion IKRotationPelvis;

			[NonSerialized]
			[Token(Token = "0x40021F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			[HideInInspector]
			public Vector3 goalPositionChest;

			[NonSerialized]
			[Token(Token = "0x40021F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
			[HideInInspector]
			public Vector3 pelvisPositionOffset;

			[NonSerialized]
			[Token(Token = "0x40021F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			[HideInInspector]
			public Vector3 chestPositionOffset;

			[NonSerialized]
			[Token(Token = "0x40021F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
			[HideInInspector]
			public Vector3 headPositionOffset;

			[NonSerialized]
			[Token(Token = "0x40021F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
			[HideInInspector]
			public Quaternion pelvisRotationOffset;

			[NonSerialized]
			[Token(Token = "0x40021F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
			[HideInInspector]
			public Quaternion chestRotationOffset;

			[NonSerialized]
			[Token(Token = "0x40021F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
			[HideInInspector]
			public Quaternion headRotationOffset;

			[NonSerialized]
			[Token(Token = "0x40021F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
			[HideInInspector]
			public Vector3 faceDirection;

			[NonSerialized]
			[Token(Token = "0x40021F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
			[HideInInspector]
			public Vector3 locomotionHeadPositionOffset;

			[NonSerialized]
			[Token(Token = "0x40021FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
			[HideInInspector]
			public Vector3 headPosition;

			[Token(Token = "0x40021FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147BA4C", Offset = "0x147BA4C")]
			private Quaternion <anchorRotation>k__BackingField;

			[Token(Token = "0x40021FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147BA5C", Offset = "0x147BA5C")]
			private Quaternion <anchorRelativeToHead>k__BackingField;

			[Token(Token = "0x40021FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
			private Quaternion headRotation;

			[Token(Token = "0x40021FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
			private Quaternion pelvisRotation;

			[Token(Token = "0x40021FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
			private Quaternion anchorRelativeToPelvis;

			[Token(Token = "0x4002200")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
			private Quaternion pelvisRelativeRotation;

			[Token(Token = "0x4002201")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
			private Quaternion chestRelativeRotation;

			[Token(Token = "0x4002202")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
			private Vector3 headDeltaPosition;

			[Token(Token = "0x4002203")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
			private Quaternion pelvisDeltaRotation;

			[Token(Token = "0x4002204")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
			private Quaternion chestTargetRotation;

			[Token(Token = "0x4002205")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
			private int pelvisIndex;

			[Token(Token = "0x4002206")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
			private int spineIndex;

			[Token(Token = "0x4002207")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
			private int chestIndex;

			[Token(Token = "0x4002208")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
			private int neckIndex;

			[Token(Token = "0x4002209")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
			private int headIndex;

			[Token(Token = "0x400220A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
			private float length;

			[Token(Token = "0x400220B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
			private bool hasChest;

			[Token(Token = "0x400220C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x211")]
			private bool hasNeck;

			[Token(Token = "0x400220D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x212")]
			private bool hasLegs;

			[Token(Token = "0x400220E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
			private float headHeight;

			[Token(Token = "0x400220F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
			private float sizeMlp;

			[Token(Token = "0x4002210")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
			private Vector3 chestForward;

			[Token(Token = "0x170004EF")]
			public VirtualBone pelvis
			{
				[Token(Token = "0x60025A1")]
				[Address(RVA = "0x2E66AD0", Offset = "0x2E66AD0", VA = "0x2E66AD0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004F0")]
			public VirtualBone firstSpineBone
			{
				[Token(Token = "0x60025A2")]
				[Address(RVA = "0x2E67180", Offset = "0x2E67180", VA = "0x2E67180")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004F1")]
			public VirtualBone chest
			{
				[Token(Token = "0x60025A3")]
				[Address(RVA = "0x2E671C0", Offset = "0x2E671C0", VA = "0x2E671C0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004F2")]
			private VirtualBone neck
			{
				[Token(Token = "0x60025A4")]
				[Address(RVA = "0x2E67214", Offset = "0x2E67214", VA = "0x2E67214")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004F3")]
			public VirtualBone head
			{
				[Token(Token = "0x60025A5")]
				[Address(RVA = "0x2E66B10", Offset = "0x2E66B10", VA = "0x2E66B10")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004F4")]
			public Quaternion anchorRotation
			{
				[Token(Token = "0x60025A6")]
				[Address(RVA = "0x2E67254", Offset = "0x2E67254", VA = "0x2E67254")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14881D4", Offset = "0x14881D4")]
				get
				{
					return default(Quaternion);
				}
				[Token(Token = "0x60025A7")]
				[Address(RVA = "0x2E67268", Offset = "0x2E67268", VA = "0x2E67268")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14881E4", Offset = "0x14881E4")]
				private set
				{
				}
			}

			[Token(Token = "0x170004F5")]
			public Quaternion anchorRelativeToHead
			{
				[Token(Token = "0x60025A8")]
				[Address(RVA = "0x2E6727C", Offset = "0x2E6727C", VA = "0x2E6727C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14881F4", Offset = "0x14881F4")]
				get
				{
					return default(Quaternion);
				}
				[Token(Token = "0x60025A9")]
				[Address(RVA = "0x2E67290", Offset = "0x2E67290", VA = "0x2E67290")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1488204", Offset = "0x1488204")]
				private set
				{
				}
			}

			[Token(Token = "0x60025AA")]
			[Address(RVA = "0x2E672A4", Offset = "0x2E672A4", VA = "0x2E672A4", Slot = "4")]
			protected override void OnRead(Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs, int rootIndex, int index)
			{
			}

			[Token(Token = "0x60025AB")]
			[Address(RVA = "0x2E67E4C", Offset = "0x2E67E4C", VA = "0x2E67E4C", Slot = "5")]
			public override void PreSolve()
			{
			}

			[Token(Token = "0x60025AC")]
			[Address(RVA = "0x2E6805C", Offset = "0x2E6805C", VA = "0x2E6805C", Slot = "7")]
			public override void ApplyOffsets(float scale)
			{
			}

			[Token(Token = "0x60025AD")]
			[Address(RVA = "0x2E686E4", Offset = "0x2E686E4", VA = "0x2E686E4")]
			private void CalculateChestTargetRotation(VirtualBone rootBone, Arm[] arms)
			{
			}

			[Token(Token = "0x60025AE")]
			[Address(RVA = "0x2E68CA4", Offset = "0x2E68CA4", VA = "0x2E68CA4")]
			public void Solve(VirtualBone rootBone, Leg[] legs, Arm[] arms, float scale)
			{
			}

			[Token(Token = "0x60025AF")]
			[Address(RVA = "0x2E69730", Offset = "0x2E69730", VA = "0x2E69730")]
			private void FABRIKPass(Vector3 animatedPelvisPos, Vector3 rootUp, float weight)
			{
			}

			[Token(Token = "0x60025B0")]
			[Address(RVA = "0x2E69F60", Offset = "0x2E69F60", VA = "0x2E69F60")]
			private void SolvePelvis()
			{
			}

			[Token(Token = "0x60025B1")]
			[Address(RVA = "0x2E6AC78", Offset = "0x2E6AC78", VA = "0x2E6AC78", Slot = "6")]
			public override void Write(ref Vector3[] solvedPositions, ref Quaternion[] solvedRotations)
			{
			}

			[Token(Token = "0x60025B2")]
			[Address(RVA = "0x2E6AE54", Offset = "0x2E6AE54", VA = "0x2E6AE54", Slot = "8")]
			public override void ResetOffsets()
			{
			}

			[Token(Token = "0x60025B3")]
			[Address(RVA = "0x2E68914", Offset = "0x2E68914", VA = "0x2E68914")]
			private void AdjustChestByHands(ref Quaternion chestTargetRotation, Arm[] arms)
			{
			}

			[Token(Token = "0x60025B4")]
			[Address(RVA = "0x2E69BA4", Offset = "0x2E69BA4", VA = "0x2E69BA4")]
			public void InverseTranslateToHead(Leg[] legs, bool limited, bool useCurrentLegMag, Vector3 offset, float w)
			{
			}

			[Token(Token = "0x60025B5")]
			[Address(RVA = "0x2E692D0", Offset = "0x2E692D0", VA = "0x2E692D0")]
			private void TranslatePelvis(Leg[] legs, Vector3 deltaPosition, Quaternion deltaRotation, float scale)
			{
			}

			[Token(Token = "0x60025B6")]
			[Address(RVA = "0x2E6AF50", Offset = "0x2E6AF50", VA = "0x2E6AF50")]
			private Vector3 LimitPelvisPosition(Leg[] legs, Vector3 pelvisPosition, bool useCurrentLegMag, int it = 2)
			{
				return default(Vector3);
			}

			[Token(Token = "0x60025B7")]
			[Address(RVA = "0x2E69D14", Offset = "0x2E69D14", VA = "0x2E69D14")]
			private void Bend(VirtualBone[] bones, int firstIndex, int lastIndex, Quaternion targetRotation, float clampWeight, bool uniformWeight, float w)
			{
			}

			[Token(Token = "0x60025B8")]
			[Address(RVA = "0x2E698F0", Offset = "0x2E698F0", VA = "0x2E698F0")]
			private void Bend(VirtualBone[] bones, int firstIndex, int lastIndex, Quaternion targetRotation, Quaternion rotationOffset, float clampWeight, bool uniformWeight, float w)
			{
			}

			[Token(Token = "0x60025B9")]
			[Address(RVA = "0x2E6B46C", Offset = "0x2E6B46C", VA = "0x2E6B46C")]
			public Spine()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000579")]
		public enum PositionOffset
		{
			[Token(Token = "0x4002212")]
			Pelvis,
			[Token(Token = "0x4002213")]
			Chest,
			[Token(Token = "0x4002214")]
			Head,
			[Token(Token = "0x4002215")]
			LeftHand,
			[Token(Token = "0x4002216")]
			RightHand,
			[Token(Token = "0x4002217")]
			LeftFoot,
			[Token(Token = "0x4002218")]
			RightFoot,
			[Token(Token = "0x4002219")]
			LeftHeel,
			[Token(Token = "0x400221A")]
			RightHeel
		}

		[Serializable]
		[Token(Token = "0x200057A")]
		public enum RotationOffset
		{
			[Token(Token = "0x400221C")]
			Pelvis,
			[Token(Token = "0x400221D")]
			Chest,
			[Token(Token = "0x400221E")]
			Head
		}

		[Serializable]
		[Token(Token = "0x200057B")]
		public class VirtualBone
		{
			[Token(Token = "0x400221F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 readPosition;

			[Token(Token = "0x4002220")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Quaternion readRotation;

			[Token(Token = "0x4002221")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Vector3 solverPosition;

			[Token(Token = "0x4002222")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Quaternion solverRotation;

			[Token(Token = "0x4002223")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public float length;

			[Token(Token = "0x4002224")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public float sqrMag;

			[Token(Token = "0x4002225")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Vector3 axis;

			[Token(Token = "0x60025BA")]
			[Address(RVA = "0x2E67DB0", Offset = "0x2E67DB0", VA = "0x2E67DB0")]
			public VirtualBone(Vector3 position, Quaternion rotation)
			{
			}

			[Token(Token = "0x60025BB")]
			[Address(RVA = "0x2E67E2C", Offset = "0x2E67E2C", VA = "0x2E67E2C")]
			public void Read(Vector3 position, Quaternion rotation)
			{
			}

			[Token(Token = "0x60025BC")]
			[Address(RVA = "0x2E6B624", Offset = "0x2E6B624", VA = "0x2E6B624")]
			public static void SwingRotation(VirtualBone[] bones, int index, Vector3 swingTarget, float weight = 1f)
			{
			}

			[Token(Token = "0x60025BD")]
			[Address(RVA = "0x2E6B8B4", Offset = "0x2E6B8B4", VA = "0x2E6B8B4")]
			public static float PreSolve(ref VirtualBone[] bones)
			{
				return default(float);
			}

			[Token(Token = "0x60025BE")]
			[Address(RVA = "0x2E6B284", Offset = "0x2E6B284", VA = "0x2E6B284")]
			public static void RotateAroundPoint(VirtualBone[] bones, int index, Vector3 point, Quaternion rotation)
			{
			}

			[Token(Token = "0x60025BF")]
			[Address(RVA = "0x2E6BBA0", Offset = "0x2E6BBA0", VA = "0x2E6BBA0")]
			public static void RotateBy(VirtualBone[] bones, int index, Quaternion rotation)
			{
			}

			[Token(Token = "0x60025C0")]
			[Address(RVA = "0x2E6BDD8", Offset = "0x2E6BDD8", VA = "0x2E6BDD8")]
			public static void RotateBy(VirtualBone[] bones, Quaternion rotation)
			{
			}

			[Token(Token = "0x60025C1")]
			[Address(RVA = "0x2E6C00C", Offset = "0x2E6C00C", VA = "0x2E6C00C")]
			public static void RotateTo(VirtualBone[] bones, int index, Quaternion rotation)
			{
			}

			[Token(Token = "0x60025C2")]
			[Address(RVA = "0x2E6A6CC", Offset = "0x2E6A6CC", VA = "0x2E6A6CC")]
			public static void SolveTrigonometric(VirtualBone[] bones, int first, int second, int third, Vector3 targetPosition, Vector3 bendNormal, float weight)
			{
			}

			[Token(Token = "0x60025C3")]
			[Address(RVA = "0x2E6C0C4", Offset = "0x2E6C0C4", VA = "0x2E6C0C4")]
			private static Vector3 GetDirectionToBendPoint(Vector3 direction, float directionMag, Vector3 bendDirection, float sqrMag1, float sqrMag2)
			{
				return default(Vector3);
			}

			[Token(Token = "0x60025C4")]
			[Address(RVA = "0x2E6A26C", Offset = "0x2E6A26C", VA = "0x2E6A26C")]
			public static void SolveFABRIK(VirtualBone[] bones, Vector3 startPosition, Vector3 targetPosition, float weight, float minNormalizedTargetDistance, int iterations, float length, Vector3 startOffset)
			{
			}

			[Token(Token = "0x60025C5")]
			[Address(RVA = "0x2E6C2DC", Offset = "0x2E6C2DC", VA = "0x2E6C2DC")]
			private static Vector3 SolveFABRIKJoint(Vector3 pos1, Vector3 pos2, float length)
			{
				return default(Vector3);
			}

			[Token(Token = "0x60025C6")]
			[Address(RVA = "0x2E6C3E4", Offset = "0x2E6C3E4", VA = "0x2E6C3E4")]
			public static void SolveCCD(VirtualBone[] bones, Vector3 targetPosition, float weight, int iterations)
			{
			}
		}

		[Token(Token = "0x4000B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform[] solverTransforms;

		[Token(Token = "0x4000B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool hasChest;

		[Token(Token = "0x4000B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool hasNeck;

		[Token(Token = "0x4000B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		private bool hasShoulders;

		[Token(Token = "0x4000B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		private bool hasToes;

		[Token(Token = "0x4000B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool hasLegs;

		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3[] readPositions;

		[Token(Token = "0x4000B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Quaternion[] readRotations;

		[Token(Token = "0x4000B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] solvedPositions;

		[Token(Token = "0x4000B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Quaternion[] solvedRotations;

		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Quaternion[] defaultLocalRotations;

		[Token(Token = "0x4000B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3[] defaultLocalPositions;

		[Token(Token = "0x4000B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 rootV;

		[Token(Token = "0x4000B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector3 rootVelocity;

		[Token(Token = "0x4000B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 bodyOffset;

		[Token(Token = "0x4000B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int supportLegIndex;

		[Token(Token = "0x4000B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int lastLOD;

		[Token(Token = "0x4000B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147024C", Offset = "0x147024C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x147024C", Offset = "0x147024C")]
		public int LOD;

		[Token(Token = "0x4000B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x14702A0", Offset = "0x14702A0")]
		public float scale;

		[Token(Token = "0x4000B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x14702D8", Offset = "0x14702D8")]
		public bool plantFeet;

		[Token(Token = "0x4000B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1470310", Offset = "0x1470310")]
		private VirtualBone <rootBone>k__BackingField;

		[Token(Token = "0x4000B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1470320", Offset = "0x1470320")]
		public Spine spine;

		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1470358", Offset = "0x1470358")]
		public Arm leftArm;

		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1470390", Offset = "0x1470390")]
		public Arm rightArm;

		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x14703C8", Offset = "0x14703C8")]
		public Leg leftLeg;

		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1470400", Offset = "0x1470400")]
		public Leg rightLeg;

		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1470438", Offset = "0x1470438")]
		public Locomotion locomotion;

		[Token(Token = "0x4000B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Leg[] legs;

		[Token(Token = "0x4000B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Arm[] arms;

		[Token(Token = "0x4000B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Vector3 headPosition;

		[Token(Token = "0x4000BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private Vector3 headDeltaPosition;

		[Token(Token = "0x4000BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Vector3 raycastOriginPelvis;

		[Token(Token = "0x4000BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private Vector3 lastOffset;

		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Vector3 debugPos1;

		[Token(Token = "0x4000BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private Vector3 debugPos2;

		[Token(Token = "0x4000BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private Vector3 debugPos3;

		[Token(Token = "0x4000BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private Vector3 debugPos4;

		[Token(Token = "0x1700017D")]
		[HideInInspector]
		public VirtualBone rootBone
		{
			[Token(Token = "0x6000DAA")]
			[Address(RVA = "0x32F4324", Offset = "0x32F4324", VA = "0x32F4324")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1481BF8", Offset = "0x1481BF8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DAB")]
			[Address(RVA = "0x32F432C", Offset = "0x32F432C", VA = "0x32F432C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1481C08", Offset = "0x1481C08")]
			private set
			{
			}
		}

		[Token(Token = "0x6000D93")]
		[Address(RVA = "0x32EE874", Offset = "0x32EE874", VA = "0x32EE874")]
		public void SetToReferences(VRIK.References references)
		{
		}

		[Token(Token = "0x6000D94")]
		[Address(RVA = "0x32EED08", Offset = "0x32EED08", VA = "0x32EED08")]
		public void GuessHandOrientations(VRIK.References references, bool onlyIfZero)
		{
		}

		[Token(Token = "0x6000D95")]
		[Address(RVA = "0x32EEB90", Offset = "0x32EEB90", VA = "0x32EEB90")]
		public void DefaultAnimationCurves()
		{
		}

		[Token(Token = "0x6000D96")]
		[Address(RVA = "0x32EF0DC", Offset = "0x32EF0DC", VA = "0x32EF0DC")]
		public void AddPositionOffset(PositionOffset positionOffset, Vector3 value)
		{
		}

		[Token(Token = "0x6000D97")]
		[Address(RVA = "0x32EF3B8", Offset = "0x32EF3B8", VA = "0x32EF3B8")]
		public void AddRotationOffset(RotationOffset rotationOffset, Vector3 value)
		{
		}

		[Token(Token = "0x6000D98")]
		[Address(RVA = "0x32EF45C", Offset = "0x32EF45C", VA = "0x32EF45C")]
		public void AddRotationOffset(RotationOffset rotationOffset, Quaternion value)
		{
		}

		[Token(Token = "0x6000D99")]
		[Address(RVA = "0x32EF5F0", Offset = "0x32EF5F0", VA = "0x32EF5F0")]
		public void AddPlatformMotion(Vector3 deltaPosition, Quaternion deltaRotation, Vector3 platformPivot)
		{
		}

		[Token(Token = "0x6000D9A")]
		[Address(RVA = "0x32EF77C", Offset = "0x32EF77C", VA = "0x32EF77C")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0x32EFFE4", Offset = "0x32EFFE4", VA = "0x32EFFE4", Slot = "9")]
		public override void StoreDefaultLocalState()
		{
		}

		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0x32F0158", Offset = "0x32F0158", VA = "0x32F0158", Slot = "8")]
		public override void FixTransforms()
		{
		}

		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0x32F0360", Offset = "0x32F0360", VA = "0x32F0360", Slot = "6")]
		public override Point[] GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0x32F03D4", Offset = "0x32F03D4", VA = "0x32F03D4", Slot = "7")]
		public override Point GetPoint(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0x32F0448", Offset = "0x32F0448", VA = "0x32F0448", Slot = "4")]
		public override bool IsValid(ref string message)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0x32F0668", Offset = "0x32F0668", VA = "0x32F0668")]
		private Vector3 GetNormal(Transform[] transforms)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0x32EEFB8", Offset = "0x32EEFB8", VA = "0x32EEFB8")]
		private static Keyframe[] GetSineKeyframes(float mag)
		{
			return null;
		}

		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0x32EF8F4", Offset = "0x32EF8F4", VA = "0x32EF8F4")]
		private void UpdateSolverTransforms()
		{
		}

		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0x32F0948", Offset = "0x32F0948", VA = "0x32F0948", Slot = "10")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0x32F0990", Offset = "0x32F0990", VA = "0x32F0990", Slot = "11")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0x32F2100", Offset = "0x32F2100", VA = "0x32F2100")]
		private void WriteTransforms()
		{
		}

		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0x32EFA5C", Offset = "0x32EFA5C", VA = "0x32EFA5C")]
		private void Read(Vector3[] positions, Quaternion[] rotations, bool hasChest, bool hasNeck, bool hasShoulders, bool hasToes, bool hasLegs)
		{
		}

		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0x32F0E58", Offset = "0x32F0E58", VA = "0x32F0E58")]
		private void Solve()
		{
		}

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0x32F24EC", Offset = "0x32F24EC", VA = "0x32F24EC")]
		private Vector3 GetPosition(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0x32F2534", Offset = "0x32F2534", VA = "0x32F2534")]
		private Quaternion GetRotation(int index)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0x32F1FB0", Offset = "0x32F1FB0", VA = "0x32F1FB0")]
		private void Write()
		{
		}

		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0x32F3D24", Offset = "0x32F3D24", VA = "0x32F3D24")]
		private Vector3 GetPelvisOffset()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0x32F4334", Offset = "0x32F4334", VA = "0x32F4334")]
		public IKSolverVR()
		{
		}
	}
	[Token(Token = "0x20001A5")]
	public class TwistRelaxer : MonoBehaviour
	{
		[Token(Token = "0x4000BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IK ik;

		[Token(Token = "0x4000BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1470470", Offset = "0x1470470")]
		public TwistSolver[] twistSolvers;

		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0x288AF18", Offset = "0x288AF18", VA = "0x288AF18")]
		public void Start()
		{
		}

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0x288B670", Offset = "0x288B670", VA = "0x288B670")]
		private void OnPostUpdate()
		{
		}

		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0x288BBF4", Offset = "0x288BBF4", VA = "0x288BBF4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0x288BCBC", Offset = "0x288BCBC", VA = "0x288BCBC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0x288BDE4", Offset = "0x288BDE4", VA = "0x288BDE4")]
		public TwistRelaxer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001A6")]
	public class TwistSolver
	{
		[Token(Token = "0x4000BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x14704A8", Offset = "0x14704A8")]
		public Transform transform;

		[Token(Token = "0x4000BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x14704E0", Offset = "0x14704E0")]
		public Transform parent;

		[Token(Token = "0x4000BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1470518", Offset = "0x1470518")]
		public Transform[] children;

		[Token(Token = "0x4000BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1470550", Offset = "0x1470550")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1470550", Offset = "0x1470550")]
		public float weight;

		[Token(Token = "0x4000BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x14705A4", Offset = "0x14705A4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x14705A4", Offset = "0x14705A4")]
		public float parentChildCrossfade;

		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x14705F8", Offset = "0x14705F8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x14705F8", Offset = "0x14705F8")]
		public float twistAngleOffset;

		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 twistAxis;

		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 axis;

		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 axisRelativeToParentDefault;

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 axisRelativeToChildDefault;

		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Quaternion[] childRotations;

		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool inititated;

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0x288BE50", Offset = "0x288BE50", VA = "0x288BE50")]
		public TwistSolver()
		{
		}

		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0x288B0EC", Offset = "0x288B0EC", VA = "0x288B0EC")]
		public void Initiate()
		{
		}

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0x288B738", Offset = "0x288B738", VA = "0x288B738")]
		public void Relax()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001A7")]
	public class InteractionEffector
	{
		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1470654", Offset = "0x1470654")]
		private FullBodyBipedEffector <effectorType>k__BackingField;

		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1470664", Offset = "0x1470664")]
		private bool <isPaused>k__BackingField;

		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1470674", Offset = "0x1470674")]
		private InteractionObject <interactionObject>k__BackingField;

		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Poser poser;

		[Token(Token = "0x4000BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IKEffector effector;

		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float timer;

		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float length;

		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float weight;

		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float fadeInSpeed;

		[Token(Token = "0x4000BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float defaultPositionWeight;

		[Token(Token = "0x4000BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float defaultRotationWeight;

		[Token(Token = "0x4000BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float defaultPull;

		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float defaultReach;

		[Token(Token = "0x4000BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float defaultPush;

		[Token(Token = "0x4000BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float defaultPushParent;

		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float defaultBendGoalWeight;

		[Token(Token = "0x4000BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float resetTimer;

		[Token(Token = "0x4000BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool positionWeightUsed;

		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool rotationWeightUsed;

		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		private bool pullUsed;

		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		private bool reachUsed;

		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool pushUsed;

		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		private bool pushParentUsed;

		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
		private bool bendGoalWeightUsed;

		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x67")]
		private bool pickedUp;

		[Token(Token = "0x4000BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool defaults;

		[Token(Token = "0x4000BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool pickUpOnPostFBBIK;

		[Token(Token = "0x4000BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 pickUpPosition;

		[Token(Token = "0x4000BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 pausePositionRelative;

		[Token(Token = "0x4000BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Quaternion pickUpRotation;

		[Token(Token = "0x4000BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Quaternion pauseRotationRelative;

		[Token(Token = "0x4000BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private InteractionTarget interactionTarget;

		[Token(Token = "0x4000BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Transform target;

		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private List<bool> triggered;

		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private InteractionSystem interactionSystem;

		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool started;

		[Token(Token = "0x1700017E")]
		public FullBodyBipedEffector effectorType
		{
			[Token(Token = "0x6000DB7")]
			[Address(RVA = "0x2E6CD08", Offset = "0x2E6CD08", VA = "0x2E6CD08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1481C18", Offset = "0x1481C18")]
			get
			{
				return default(FullBodyBipedEffector);
			}
			[Token(Token = "0x6000DB8")]
			[Address(RVA = "0x2E6CD10", Offset = "0x2E6CD10", VA = "0x2E6CD10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1481C28", Offset = "0x1481C28")]
			private set
			{
			}
		}

		[Token(Token = "0x1700017F")]
		public bool isPaused
		{
			[Token(Token = "0x6000DB9")]
			[Address(RVA = "0x2E6CD18", Offset = "0x2E6CD18", VA = "0x2E6CD18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1481C38", Offset = "0x1481C38")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DBA")]
			[Address(RVA = "0x2E6CD20", Offset = "0x2E6CD20", VA = "0x2E6CD20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1481C48", Offset = "0x1481C48")]
			private set
			{
			}
		}

		[Token(Token = "0x17000180")]
		public InteractionObject interactionObject
		{
			[Token(Token = "0x6000DBB")]
			[Address(RVA = "0x2E6CD2C", Offset = "0x2E6CD2C", VA = "0x2E6CD2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1481C58", Offset = "0x1481C58")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DBC")]
			[Address(RVA = "0x2E6CD34", Offset = "0x2E6CD34", VA = "0x2E6CD34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1481C68", Offset = "0x1481C68")]
			private set
			{
			}
		}

		[Token(Token = "0x17000181")]
		public bool inInteraction
		{
			[Token(Token = "0x6000DBD")]
			[Address(RVA = "0x2E6CD3C", Offset = "0x2E6CD3C", VA = "0x2E6CD3C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000182")]
		public float progress
		{
			[Token(Token = "0x6000DC6")]
			[Address(RVA = "0x2E6FA74", Offset = "0x2E6FA74", VA = "0x2E6FA74")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0x2E6CDAC", Offset = "0x2E6CDAC", VA = "0x2E6CDAC")]
		public InteractionEffector(FullBodyBipedEffector effectorType)
		{
		}

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0x2E6CE3C", Offset = "0x2E6CE3C", VA = "0x2E6CE3C")]
		public void Initiate(InteractionSystem interactionSystem)
		{
		}

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0x2E6CF00", Offset = "0x2E6CF00", VA = "0x2E6CF00")]
		private void StoreDefaults()
		{
		}

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0x2E6D078", Offset = "0x2E6D078", VA = "0x2E6D078")]
		public bool ResetToDefaults(float speed)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0x2E6D528", Offset = "0x2E6D528", VA = "0x2E6D528")]
		public bool Pause()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0x2E6D8E8", Offset = "0x2E6D8E8", VA = "0x2E6D8E8")]
		public bool Resume()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0x2E6D93C", Offset = "0x2E6D93C", VA = "0x2E6D93C")]
		public bool Start(InteractionObject interactionObject, string tag, float fadeInTime, bool interrupt)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0x2E6E650", Offset = "0x2E6E650", VA = "0x2E6E650")]
		public void Update(Transform root, float speed)
		{
		}

		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0x2E6F200", Offset = "0x2E6F200", VA = "0x2E6F200")]
		private void TriggerUntriggeredEvents(bool checkTime, out bool pickUp, out bool pause)
		{
		}

		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0x2E6F428", Offset = "0x2E6F428", VA = "0x2E6F428")]
		private void PickUp(Transform root)
		{
		}

		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0x2E6F904", Offset = "0x2E6F904", VA = "0x2E6F904")]
		public bool Stop()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0x2E6FF5C", Offset = "0x2E6FF5C", VA = "0x2E6FF5C")]
		public void OnPostFBBIK()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001A8")]
	public class InteractionLookAt
	{
		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1470684", Offset = "0x1470684")]
		public LookAtIK ik;

		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x14706BC", Offset = "0x14706BC")]
		public float lerpSpeed;

		[Token(Token = "0x4000BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x14706F4", Offset = "0x14706F4")]
		public float weightSpeed;

		[Token(Token = "0x4000BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public bool isPaused;

		[Token(Token = "0x4000BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform lookAtTarget;

		[Token(Token = "0x4000BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float stopLookTime;

		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float weight;

		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool firstFBBIKSolve;

		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0x2E70244", Offset = "0x2E70244", VA = "0x2E70244")]
		public void Look(Transform target, float time)
		{
		}

		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0x2E703C8", Offset = "0x2E703C8", VA = "0x2E703C8")]
		public void OnFixTransforms()
		{
		}

		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0x2E70470", Offset = "0x2E70470", VA = "0x2E70470")]
		public void Update()
		{
		}

		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0x2E706C4", Offset = "0x2E706C4", VA = "0x2E706C4")]
		public void SolveSpine()
		{
		}

		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0x2E707BC", Offset = "0x2E707BC", VA = "0x2E707BC")]
		public void SolveHead()
		{
		}

		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0x2E70888", Offset = "0x2E70888", VA = "0x2E70888")]
		public InteractionLookAt()
		{
		}
	}
	[Token(Token = "0x20001A9")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x146698C", Offset = "0x146698C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x146698C", Offset = "0x146698C")]
	public class InteractionObject : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200057C")]
		public class InteractionEvent
		{
			[Token(Token = "0x4002226")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147BA6C", Offset = "0x147BA6C")]
			public float time;

			[Token(Token = "0x4002227")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147BAA4", Offset = "0x147BAA4")]
			public bool pause;

			[Token(Token = "0x4002228")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147BADC", Offset = "0x147BADC")]
			public bool pickUp;

			[Token(Token = "0x4002229")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147BB14", Offset = "0x147BB14")]
			public AnimatorEvent[] animations;

			[Token(Token = "0x400222A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147BB4C", Offset = "0x147BB4C")]
			public Message[] messages;

			[Token(Token = "0x400222B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147BB84", Offset = "0x147BB84")]
			public UnityEvent unityEvent;

			[Token(Token = "0x60025C7")]
			[Address(RVA = "0x2E6FAB0", Offset = "0x2E6FAB0", VA = "0x2E6FAB0")]
			public void Activate(Transform t)
			{
			}

			[Token(Token = "0x60025C8")]
			[Address(RVA = "0x2E71B98", Offset = "0x2E71B98", VA = "0x2E71B98")]
			public InteractionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200057D")]
		public class Message
		{
			[Token(Token = "0x400222C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147BBBC", Offset = "0x147BBBC")]
			public string function;

			[Token(Token = "0x400222D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147BBF4", Offset = "0x147BBF4")]
			public GameObject recipient;

			[Token(Token = "0x400222E")]
			private const string empty = "";

			[Token(Token = "0x60025C9")]
			[Address(RVA = "0x2E71AA8", Offset = "0x2E71AA8", VA = "0x2E71AA8")]
			public void Send(Transform t)
			{
			}

			[Token(Token = "0x60025CA")]
			[Address(RVA = "0x2E71BA0", Offset = "0x2E71BA0", VA = "0x2E71BA0")]
			public Message()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200057E")]
		public class AnimatorEvent
		{
			[Token(Token = "0x400222F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147BC2C", Offset = "0x147BC2C")]
			public Animator animator;

			[Token(Token = "0x4002230")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147BC64", Offset = "0x147BC64")]
			public Animation animation;

			[Token(Token = "0x4002231")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147BC9C", Offset = "0x147BC9C")]
			public string animationState;

			[Token(Token = "0x4002232")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147BCD4", Offset = "0x147BCD4")]
			public float crossfadeTime;

			[Token(Token = "0x4002233")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147BD0C", Offset = "0x147BD0C")]
			public int layer;

			[Token(Token = "0x4002234")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147BD44", Offset = "0x147BD44")]
			public bool resetNormalizedTime;

			[Token(Token = "0x4002235")]
			private const string empty = "";

			[Token(Token = "0x60025CB")]
			[Address(RVA = "0x2E71808", Offset = "0x2E71808", VA = "0x2E71808")]
			public void Activate(bool pickUp)
			{
			}

			[Token(Token = "0x60025CC")]
			[Address(RVA = "0x2E718FC", Offset = "0x2E718FC", VA = "0x2E718FC")]
			private void Activate(Animator animator)
			{
			}

			[Token(Token = "0x60025CD")]
			[Address(RVA = "0x2E719B4", Offset = "0x2E719B4", VA = "0x2E719B4")]
			private void Activate(Animation animation)
			{
			}

			[Token(Token = "0x60025CE")]
			[Address(RVA = "0x2E71A94", Offset = "0x2E71A94", VA = "0x2E71A94")]
			public AnimatorEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200057F")]
		public class WeightCurve
		{
			[Serializable]
			[Token(Token = "0x200078D")]
			public enum Type
			{
				[Token(Token = "0x4002A00")]
				PositionWeight,
				[Token(Token = "0x4002A01")]
				RotationWeight,
				[Token(Token = "0x4002A02")]
				PositionOffsetX,
				[Token(Token = "0x4002A03")]
				PositionOffsetY,
				[Token(Token = "0x4002A04")]
				PositionOffsetZ,
				[Token(Token = "0x4002A05")]
				Pull,
				[Token(Token = "0x4002A06")]
				Reach,
				[Token(Token = "0x4002A07")]
				RotateBoneWeight,
				[Token(Token = "0x4002A08")]
				Push,
				[Token(Token = "0x4002A09")]
				PushParent,
				[Token(Token = "0x4002A0A")]
				PoserWeight,
				[Token(Token = "0x4002A0B")]
				BendGoalWeight
			}

			[Token(Token = "0x4002236")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147BD7C", Offset = "0x147BD7C")]
			public Type type;

			[Token(Token = "0x4002237")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147BDB4", Offset = "0x147BDB4")]
			public AnimationCurve curve;

			[Token(Token = "0x60025CF")]
			[Address(RVA = "0x2E71014", Offset = "0x2E71014", VA = "0x2E71014")]
			public float GetValue(float timer)
			{
				return default(float);
			}

			[Token(Token = "0x60025D0")]
			[Address(RVA = "0x2E71BB8", Offset = "0x2E71BB8", VA = "0x2E71BB8")]
			public WeightCurve()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000580")]
		public class Multiplier
		{
			[Token(Token = "0x4002238")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147BDEC", Offset = "0x147BDEC")]
			public WeightCurve.Type curve;

			[Token(Token = "0x4002239")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147BE24", Offset = "0x147BE24")]
			public float multiplier;

			[Token(Token = "0x400223A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147BE5C", Offset = "0x147BE5C")]
			public WeightCurve.Type result;

			[Token(Token = "0x60025D1")]
			[Address(RVA = "0x2E716F4", Offset = "0x2E716F4", VA = "0x2E716F4")]
			public float GetValue(WeightCurve weightCurve, float timer)
			{
				return default(float);
			}

			[Token(Token = "0x60025D2")]
			[Address(RVA = "0x2E71BA8", Offset = "0x2E71BA8", VA = "0x2E71BA8")]
			public Multiplier()
			{
			}
		}

		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147073C", Offset = "0x147073C")]
		public Transform otherLookAtTarget;

		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1470774", Offset = "0x1470774")]
		public Transform otherTargetsRoot;

		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x14707AC", Offset = "0x14707AC")]
		public Transform positionOffsetSpace;

		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public WeightCurve[] weightCurves;

		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Multiplier[] multipliers;

		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public InteractionEvent[] events;

		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14707E4", Offset = "0x14707E4")]
		private float <length>k__BackingField;

		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14707F4", Offset = "0x14707F4")]
		private InteractionSystem <lastUsedInteractionSystem>k__BackingField;

		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private InteractionTarget[] targets;

		[Token(Token = "0x17000183")]
		public float length
		{
			[Token(Token = "0x6000DD9")]
			[Address(RVA = "0x2E70AFC", Offset = "0x2E70AFC", VA = "0x2E70AFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1481E38", Offset = "0x1481E38")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DDA")]
			[Address(RVA = "0x2E70B04", Offset = "0x2E70B04", VA = "0x2E70B04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1481E48", Offset = "0x1481E48")]
			private set
			{
			}
		}

		[Token(Token = "0x17000184")]
		public InteractionSystem lastUsedInteractionSystem
		{
			[Token(Token = "0x6000DDB")]
			[Address(RVA = "0x2E70B0C", Offset = "0x2E70B0C", VA = "0x2E70B0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1481E58", Offset = "0x1481E58")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DDC")]
			[Address(RVA = "0x2E70B14", Offset = "0x2E70B14", VA = "0x2E70B14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1481E68", Offset = "0x1481E68")]
			private set
			{
			}
		}

		[Token(Token = "0x17000185")]
		public Transform lookAtTarget
		{
			[Token(Token = "0x6000DDE")]
			[Address(RVA = "0x2E70D38", Offset = "0x2E70D38", VA = "0x2E70D38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000186")]
		public Transform targetsRoot
		{
			[Token(Token = "0x6000DE6")]
			[Address(RVA = "0x2E6FE30", Offset = "0x2E6FE30", VA = "0x2E6FE30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0x2E7089C", Offset = "0x2E7089C", VA = "0x2E7089C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1481C78", Offset = "0x1481C78")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0x2E708E8", Offset = "0x2E708E8", VA = "0x2E708E8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1481CB0", Offset = "0x1481CB0")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0x2E70934", Offset = "0x2E70934", VA = "0x2E70934")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1481CE8", Offset = "0x1481CE8")]
		private void OpenTutorial1()
		{
		}

		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0x2E70980", Offset = "0x2E70980", VA = "0x2E70980")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1481D20", Offset = "0x1481D20")]
		private void OpenTutorial2()
		{
		}

		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0x2E709CC", Offset = "0x2E709CC", VA = "0x2E709CC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1481D58", Offset = "0x1481D58")]
		private void OpenTutorial3()
		{
		}

		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0x2E70A18", Offset = "0x2E70A18", VA = "0x2E70A18")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1481D90", Offset = "0x1481D90")]
		private void OpenTutorial4()
		{
		}

		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0x2E70A64", Offset = "0x2E70A64", VA = "0x2E70A64")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1481DC8", Offset = "0x1481DC8")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0x2E70AB0", Offset = "0x2E70AB0", VA = "0x2E70AB0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1481E00", Offset = "0x1481E00")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0x2E70B1C", Offset = "0x2E70B1C", VA = "0x2E70B1C")]
		public void Initiate()
		{
		}

		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0x2E70DC8", Offset = "0x2E70DC8", VA = "0x2E70DC8")]
		public InteractionTarget GetTarget(FullBodyBipedEffector effectorType, InteractionSystem interactionSystem)
		{
			return null;
		}

		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0x2E6DEF4", Offset = "0x2E6DEF4", VA = "0x2E6DEF4")]
		public bool CurveUsed(WeightCurve.Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0x2E70F2C", Offset = "0x2E70F2C", VA = "0x2E70F2C")]
		public InteractionTarget[] GetTargets()
		{
			return null;
		}

		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0x2E6DDB0", Offset = "0x2E6DDB0", VA = "0x2E6DDB0")]
		public Transform GetTarget(FullBodyBipedEffector effectorType, string tag)
		{
			return null;
		}

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0x2E6DEEC", Offset = "0x2E6DEEC", VA = "0x2E6DEEC")]
		public void OnStartInteraction(InteractionSystem interactionSystem)
		{
		}

		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0x2E6EDE4", Offset = "0x2E6EDE4", VA = "0x2E6EDE4")]
		public void Apply(IKSolverFullBodyBiped solver, FullBodyBipedEffector effector, InteractionTarget target, float timer, float weight)
		{
		}

		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0x2E6F6DC", Offset = "0x2E6F6DC", VA = "0x2E6F6DC")]
		public float GetValue(WeightCurve.Type weightCurveType, InteractionTarget target, float timer)
		{
			return default(float);
		}

		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0x2E71730", Offset = "0x2E71730", VA = "0x2E71730")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0x2E71030", Offset = "0x2E71030", VA = "0x2E71030")]
		private void Apply(IKSolverFullBodyBiped solver, FullBodyBipedEffector effector, WeightCurve.Type type, float value, float weight)
		{
		}

		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0x2E70F34", Offset = "0x2E70F34", VA = "0x2E70F34")]
		private Transform GetTarget(FullBodyBipedEffector effectorType)
		{
			return null;
		}

		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0x2E7168C", Offset = "0x2E7168C", VA = "0x2E7168C")]
		private int GetWeightCurveIndex(WeightCurve.Type weightCurveType)
		{
			return default(int);
		}

		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0x2E71734", Offset = "0x2E71734", VA = "0x2E71734")]
		private int GetMultiplierIndex(WeightCurve.Type weightCurveType)
		{
			return default(int);
		}

		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0x2E7179C", Offset = "0x2E7179C", VA = "0x2E7179C")]
		public InteractionObject()
		{
		}
	}
	[Token(Token = "0x20001AA")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x14669EC", Offset = "0x14669EC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x14669EC", Offset = "0x14669EC")]
	public class InteractionSystem : MonoBehaviour
	{
		[Token(Token = "0x2000581")]
		public delegate void InteractionDelegate(FullBodyBipedEffector effectorType, InteractionObject interactionObject);

		[Token(Token = "0x2000582")]
		public delegate void InteractionEventDelegate(FullBodyBipedEffector effectorType, InteractionObject interactionObject, InteractionObject.InteractionEvent interactionEvent);

		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1470804", Offset = "0x1470804")]
		public string targetTag;

		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147083C", Offset = "0x147083C")]
		public float fadeInTime;

		[Token(Token = "0x4000BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1470874", Offset = "0x1470874")]
		public float speed;

		[Token(Token = "0x4000BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x14708AC", Offset = "0x14708AC")]
		public float resetToDefaultsSpeed;

		[Token(Token = "0x4000BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x14708E4", Offset = "0x14708E4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x14708E4", Offset = "0x14708E4")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x14708E4", Offset = "0x14708E4")]
		public Collider characterCollider;

		[Token(Token = "0x4000BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1470968", Offset = "0x1470968")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x1470968", Offset = "0x1470968")]
		public Transform FPSCamera;

		[Token(Token = "0x4000BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x14709C8", Offset = "0x14709C8")]
		public LayerMask camRaycastLayers;

		[Token(Token = "0x4000BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1470A00", Offset = "0x1470A00")]
		public float camRaycastDistance;

		[Token(Token = "0x4000BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1470A38", Offset = "0x1470A38")]
		private List<InteractionTrigger> <triggersInRange>k__BackingField;

		[Token(Token = "0x4000BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<InteractionTrigger> inContact;

		[Token(Token = "0x4000BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<int> bestRangeIndexes;

		[Token(Token = "0x4000BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public InteractionDelegate OnInteractionStart;

		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public InteractionDelegate OnInteractionPause;

		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public InteractionDelegate OnInteractionPickUp;

		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public InteractionDelegate OnInteractionResume;

		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public InteractionDelegate OnInteractionStop;

		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public InteractionEventDelegate OnInteractionEvent;

		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public RaycastHit raycastHit;

		[Token(Token = "0x4000BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x1470A48", Offset = "0x1470A48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1470A48", Offset = "0x1470A48")]
		[SerializeField]
		private FullBodyBipedIK fullBody;

		[Token(Token = "0x4000BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1470AA8", Offset = "0x1470AA8")]
		public InteractionLookAt lookAt;

		[Token(Token = "0x4000BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private InteractionEffector[] interactionEffectors;

		[Token(Token = "0x4000BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1470AE0", Offset = "0x1470AE0")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x4000C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Collider lastCollider;

		[Token(Token = "0x4000C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Collider c;

		[Token(Token = "0x17000187")]
		public bool inInteraction
		{
			[Token(Token = "0x6000DF5")]
			[Address(RVA = "0x2E71E20", Offset = "0x2E71E20", VA = "0x2E71E20")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000188")]
		public FullBodyBipedIK ik
		{
			[Token(Token = "0x6000E0F")]
			[Address(RVA = "0x2E73A78", Offset = "0x2E73A78", VA = "0x2E73A78")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E10")]
			[Address(RVA = "0x2E73A80", Offset = "0x2E73A80", VA = "0x2E73A80")]
			set
			{
			}
		}

		[Token(Token = "0x17000189")]
		public List<InteractionTrigger> triggersInRange
		{
			[Token(Token = "0x6000E11")]
			[Address(RVA = "0x2E73A88", Offset = "0x2E73A88", VA = "0x2E73A88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1482038", Offset = "0x1482038")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E12")]
			[Address(RVA = "0x2E73A90", Offset = "0x2E73A90", VA = "0x2E73A90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1482048", Offset = "0x1482048")]
			private set
			{
			}
		}

		[Token(Token = "0x1700018A")]
		public bool initiated
		{
			[Token(Token = "0x6000E13")]
			[Address(RVA = "0x2E73A98", Offset = "0x2E73A98", VA = "0x2E73A98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1482058", Offset = "0x1482058")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E14")]
			[Address(RVA = "0x2E73AA0", Offset = "0x2E73AA0", VA = "0x2E73AA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1482068", Offset = "0x1482068")]
			private set
			{
			}
		}

		[Token(Token = "0x6000DED")]
		[Address(RVA = "0x2E71BC0", Offset = "0x2E71BC0", VA = "0x2E71BC0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1481E78", Offset = "0x1481E78")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0x2E71C0C", Offset = "0x2E71C0C", VA = "0x2E71C0C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1481EB0", Offset = "0x1481EB0")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0x2E71C58", Offset = "0x2E71C58", VA = "0x2E71C58")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1481EE8", Offset = "0x1481EE8")]
		private void OpenTutorial1()
		{
		}

		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0x2E71CA4", Offset = "0x2E71CA4", VA = "0x2E71CA4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1481F20", Offset = "0x1481F20")]
		private void OpenTutorial2()
		{
		}

		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0x2E71CF0", Offset = "0x2E71CF0", VA = "0x2E71CF0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1481F58", Offset = "0x1481F58")]
		private void OpenTutorial3()
		{
		}

		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0x2E71D3C", Offset = "0x2E71D3C", VA = "0x2E71D3C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1481F90", Offset = "0x1481F90")]
		private void OpenTutorial4()
		{
		}

		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0x2E71D88", Offset = "0x2E71D88", VA = "0x2E71D88")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1481FC8", Offset = "0x1481FC8")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0x2E71DD4", Offset = "0x2E71DD4", VA = "0x2E71DD4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1482000", Offset = "0x1482000")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0x2E71FB0", Offset = "0x2E71FB0", VA = "0x2E71FB0")]
		public bool IsInInteraction(FullBodyBipedEffector effectorType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0x2E7207C", Offset = "0x2E7207C", VA = "0x2E7207C")]
		public bool IsPaused(FullBodyBipedEffector effectorType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0x2E72148", Offset = "0x2E72148", VA = "0x2E72148")]
		public bool IsPaused()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0x2E721F4", Offset = "0x2E721F4", VA = "0x2E721F4")]
		public bool IsInSync()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0x2E722EC", Offset = "0x2E722EC", VA = "0x2E722EC")]
		public bool StartInteraction(FullBodyBipedEffector effectorType, InteractionObject interactionObject, bool interrupt)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0x2E72408", Offset = "0x2E72408", VA = "0x2E72408")]
		public bool PauseInteraction(FullBodyBipedEffector effectorType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0x2E72498", Offset = "0x2E72498", VA = "0x2E72498")]
		public bool ResumeInteraction(FullBodyBipedEffector effectorType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0x2E72528", Offset = "0x2E72528", VA = "0x2E72528")]
		public bool StopInteraction(FullBodyBipedEffector effectorType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0x2E725B8", Offset = "0x2E725B8", VA = "0x2E725B8")]
		public void PauseAll()
		{
		}

		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0x2E7262C", Offset = "0x2E7262C", VA = "0x2E7262C")]
		public void ResumeAll()
		{
		}

		[Token(Token = "0x6000E00")]
		[Address(RVA = "0x2E726A0", Offset = "0x2E726A0", VA = "0x2E726A0")]
		public void StopAll()
		{
		}

		[Token(Token = "0x6000E01")]
		[Address(RVA = "0x2E72708", Offset = "0x2E72708", VA = "0x2E72708")]
		public InteractionObject GetInteractionObject(FullBodyBipedEffector effectorType)
		{
			return null;
		}

		[Token(Token = "0x6000E02")]
		[Address(RVA = "0x2E72794", Offset = "0x2E72794", VA = "0x2E72794")]
		public float GetProgress(FullBodyBipedEffector effectorType)
		{
			return default(float);
		}

		[Token(Token = "0x6000E03")]
		[Address(RVA = "0x2E72848", Offset = "0x2E72848", VA = "0x2E72848")]
		public float GetMinActiveProgress()
		{
			return default(float);
		}

		[Token(Token = "0x6000E04")]
		[Address(RVA = "0x2E7292C", Offset = "0x2E7292C", VA = "0x2E7292C")]
		public bool TriggerInteraction(int index, bool interrupt)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E05")]
		[Address(RVA = "0x2E72BD0", Offset = "0x2E72BD0", VA = "0x2E72BD0")]
		public bool TriggerInteraction(int index, bool interrupt, out InteractionObject interactionObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E06")]
		[Address(RVA = "0x2E72DC0", Offset = "0x2E72DC0", VA = "0x2E72DC0")]
		public bool TriggerInteraction(int index, bool interrupt, out InteractionTarget interactionTarget)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E07")]
		[Address(RVA = "0x2E73044", Offset = "0x2E73044", VA = "0x2E73044")]
		public InteractionTrigger.Range GetClosestInteractionRange()
		{
			return null;
		}

		[Token(Token = "0x6000E08")]
		[Address(RVA = "0x2E73338", Offset = "0x2E73338", VA = "0x2E73338")]
		public InteractionObject GetClosestInteractionObjectInRange()
		{
			return null;
		}

		[Token(Token = "0x6000E09")]
		[Address(RVA = "0x2E7337C", Offset = "0x2E7337C", VA = "0x2E7337C")]
		public InteractionTarget GetClosestInteractionTargetInRange()
		{
			return null;
		}

		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0x2E733F4", Offset = "0x2E733F4", VA = "0x2E733F4")]
		public InteractionObject[] GetClosestInteractionObjectsInRange()
		{
			return null;
		}

		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0x2E7352C", Offset = "0x2E7352C", VA = "0x2E7352C")]
		public InteractionTarget[] GetClosestInteractionTargetsInRange()
		{
			return null;
		}

		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0x2E736A4", Offset = "0x2E736A4", VA = "0x2E736A4")]
		public bool TriggerEffectorsReady(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0x2E7394C", Offset = "0x2E7394C", VA = "0x2E7394C")]
		public InteractionTrigger.Range GetTriggerRange(int index)
		{
			return null;
		}

		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0x2E73144", Offset = "0x2E73144", VA = "0x2E73144")]
		public int GetClosestTriggerIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6000E15")]
		[Address(RVA = "0x2E73AAC", Offset = "0x2E73AAC", VA = "0x2E73AAC")]
		public void Start()
		{
		}

		[Token(Token = "0x6000E16")]
		[Address(RVA = "0x2E74260", Offset = "0x2E74260", VA = "0x2E74260")]
		private void InteractionPause(FullBodyBipedEffector effector, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x6000E17")]
		[Address(RVA = "0x2E74280", Offset = "0x2E74280", VA = "0x2E74280")]
		private void InteractionResume(FullBodyBipedEffector effector, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x6000E18")]
		[Address(RVA = "0x2E7429C", Offset = "0x2E7429C", VA = "0x2E7429C")]
		private void InteractionStop(FullBodyBipedEffector effector, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x6000E19")]
		[Address(RVA = "0x2E742B8", Offset = "0x2E742B8", VA = "0x2E742B8")]
		private void LookAtInteraction(FullBodyBipedEffector effector, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0x2E74318", Offset = "0x2E74318", VA = "0x2E74318")]
		public void OnTriggerEnter(Collider c)
		{
		}

		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0x2E74434", Offset = "0x2E74434", VA = "0x2E74434")]
		public void OnTriggerExit(Collider c)
		{
		}

		[Token(Token = "0x6000E1C")]
		[Address(RVA = "0x2E74530", Offset = "0x2E74530", VA = "0x2E74530")]
		private bool ContactIsInRange(int index, out int bestRangeIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0x2E74890", Offset = "0x2E74890", VA = "0x2E74890")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0x2E749A8", Offset = "0x2E749A8", VA = "0x2E749A8")]
		public void Update()
		{
		}

		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0x2E74BC0", Offset = "0x2E74BC0", VA = "0x2E74BC0")]
		private void Raycasting()
		{
		}

		[Token(Token = "0x6000E20")]
		[Address(RVA = "0x2E73FC0", Offset = "0x2E73FC0", VA = "0x2E73FC0")]
		private void UpdateTriggerEventBroadcasting()
		{
		}

		[Token(Token = "0x6000E21")]
		[Address(RVA = "0x2E74D00", Offset = "0x2E74D00", VA = "0x2E74D00")]
		private void UpdateEffectors()
		{
		}

		[Token(Token = "0x6000E22")]
		[Address(RVA = "0x2E74E2C", Offset = "0x2E74E2C", VA = "0x2E74E2C")]
		private void OnPreFBBIK()
		{
		}

		[Token(Token = "0x6000E23")]
		[Address(RVA = "0x2E74EC4", Offset = "0x2E74EC4", VA = "0x2E74EC4")]
		private void OnPostFBBIK()
		{
		}

		[Token(Token = "0x6000E24")]
		[Address(RVA = "0x2E74F9C", Offset = "0x2E74F9C", VA = "0x2E74F9C")]
		private void OnFixTransforms()
		{
		}

		[Token(Token = "0x6000E25")]
		[Address(RVA = "0x2E74FB4", Offset = "0x2E74FB4", VA = "0x2E74FB4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000E26")]
		[Address(RVA = "0x2E71ECC", Offset = "0x2E71ECC", VA = "0x2E71ECC")]
		private bool IsValid(bool log)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E27")]
		[Address(RVA = "0x2E72ACC", Offset = "0x2E72ACC", VA = "0x2E72ACC")]
		private bool TriggerIndexIsValid(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E28")]
		[Address(RVA = "0x2E75378", Offset = "0x2E75378", VA = "0x2E75378")]
		public InteractionSystem()
		{
		}
	}
	[Token(Token = "0x20001AB")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x1466A4C", Offset = "0x1466A4C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1466A4C", Offset = "0x1466A4C")]
	public class InteractionTarget : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000583")]
		public enum RotationMode
		{
			[Token(Token = "0x400223C")]
			TwoDOF,
			[Token(Token = "0x400223D")]
			ThreeDOF
		}

		[Serializable]
		[Token(Token = "0x2000584")]
		public class Multiplier
		{
			[Token(Token = "0x400223E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147BE94", Offset = "0x147BE94")]
			public InteractionObject.WeightCurve.Type curve;

			[Token(Token = "0x400223F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147BECC", Offset = "0x147BECC")]
			public float multiplier;

			[Token(Token = "0x60025DB")]
			[Address(RVA = "0x2E75BC8", Offset = "0x2E75BC8", VA = "0x2E75BC8")]
			public Multiplier()
			{
			}
		}

		[Token(Token = "0x4000C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1470AF0", Offset = "0x1470AF0")]
		public FullBodyBipedEffector effectorType;

		[Token(Token = "0x4000C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1470B28", Offset = "0x1470B28")]
		public Multiplier[] multipliers;

		[Token(Token = "0x4000C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1470B60", Offset = "0x1470B60")]
		public float interactionSpeedMlp;

		[Token(Token = "0x4000C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1470B98", Offset = "0x1470B98")]
		public Transform pivot;

		[Token(Token = "0x4000C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1470BD0", Offset = "0x1470BD0")]
		public RotationMode rotationMode;

		[Token(Token = "0x4000C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1470C08", Offset = "0x1470C08")]
		public Vector3 twistAxis;

		[Token(Token = "0x4000C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1470C40", Offset = "0x1470C40")]
		public float twistWeight;

		[Token(Token = "0x4000C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1470C78", Offset = "0x1470C78")]
		public float swingWeight;

		[Token(Token = "0x4000C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1470CB0", Offset = "0x1470CB0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1470CB0", Offset = "0x1470CB0")]
		public float threeDOFWeight;

		[Token(Token = "0x4000C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1470D04", Offset = "0x1470D04")]
		public bool rotateOnce;

		[Token(Token = "0x4000C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion defaultLocalRotation;

		[Token(Token = "0x4000C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform lastPivot;

		[Token(Token = "0x6000E29")]
		[Address(RVA = "0x2E758D8", Offset = "0x2E758D8", VA = "0x2E758D8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1482078", Offset = "0x1482078")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0x2E75924", Offset = "0x2E75924", VA = "0x2E75924")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x14820B0", Offset = "0x14820B0")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000E2B")]
		[Address(RVA = "0x2E75970", Offset = "0x2E75970", VA = "0x2E75970")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x14820E8", Offset = "0x14820E8")]
		private void OpenTutorial1()
		{
		}

		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0x2E759BC", Offset = "0x2E759BC", VA = "0x2E759BC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1482120", Offset = "0x1482120")]
		private void OpenTutorial2()
		{
		}

		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0x2E75A08", Offset = "0x2E75A08", VA = "0x2E75A08")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1482158", Offset = "0x1482158")]
		private void OpenTutorial3()
		{
		}

		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0x2E75A54", Offset = "0x2E75A54", VA = "0x2E75A54")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1482190", Offset = "0x1482190")]
		private void OpenTutorial4()
		{
		}

		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0x2E75AA0", Offset = "0x2E75AA0", VA = "0x2E75AA0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x14821C8", Offset = "0x14821C8")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000E30")]
		[Address(RVA = "0x2E75AEC", Offset = "0x2E75AEC", VA = "0x2E75AEC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1482200", Offset = "0x1482200")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000E31")]
		[Address(RVA = "0x2E70FA4", Offset = "0x2E70FA4", VA = "0x2E70FA4")]
		public float GetValue(InteractionObject.WeightCurve.Type curveType)
		{
			return default(float);
		}

		[Token(Token = "0x6000E32")]
		[Address(RVA = "0x2E6FEC0", Offset = "0x2E6FEC0", VA = "0x2E6FEC0")]
		public void ResetRotation()
		{
		}

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0x2E6DFA8", Offset = "0x2E6DFA8", VA = "0x2E6DFA8")]
		public void RotateTo(Transform bone)
		{
		}

		[Token(Token = "0x6000E34")]
		[Address(RVA = "0x2E75B38", Offset = "0x2E75B38", VA = "0x2E75B38")]
		public InteractionTarget()
		{
		}
	}
	[Token(Token = "0x20001AC")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x1466AAC", Offset = "0x1466AAC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1466AAC", Offset = "0x1466AAC")]
	public class InteractionTrigger : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000585")]
		public class CharacterPosition
		{
			[Token(Token = "0x4002240")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147BF04", Offset = "0x147BF04")]
			public bool use;

			[Token(Token = "0x4002241")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147BF3C", Offset = "0x147BF3C")]
			public Vector2 offset;

			[Token(Token = "0x4002242")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147BF74", Offset = "0x147BF74")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x147BF74", Offset = "0x147BF74")]
			public float angleOffset;

			[Token(Token = "0x4002243")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147BFD0", Offset = "0x147BFD0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x147BFD0", Offset = "0x147BFD0")]
			public float maxAngle;

			[Token(Token = "0x4002244")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147C028", Offset = "0x147C028")]
			public float radius;

			[Token(Token = "0x4002245")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147C060", Offset = "0x147C060")]
			public bool orbit;

			[Token(Token = "0x4002246")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147C098", Offset = "0x147C098")]
			public bool fixYAxis;

			[Token(Token = "0x170004F6")]
			public Vector3 offset3D
			{
				[Token(Token = "0x60025DC")]
				[Address(RVA = "0x2E763F0", Offset = "0x2E763F0", VA = "0x2E763F0")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x170004F7")]
			public Vector3 direction3D
			{
				[Token(Token = "0x60025DD")]
				[Address(RVA = "0x2E7642C", Offset = "0x2E7642C", VA = "0x2E7642C")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x60025DE")]
			[Address(RVA = "0x2E76524", Offset = "0x2E76524", VA = "0x2E76524")]
			public bool IsInRange(Transform character, Transform trigger, out float error)
			{
				return default(bool);
			}

			[Token(Token = "0x60025DF")]
			[Address(RVA = "0x2E76BA0", Offset = "0x2E76BA0", VA = "0x2E76BA0")]
			public CharacterPosition()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000586")]
		public class CameraPosition
		{
			[Token(Token = "0x4002247")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147C0D0", Offset = "0x147C0D0")]
			public Collider lookAtTarget;

			[Token(Token = "0x4002248")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147C108", Offset = "0x147C108")]
			public Vector3 direction;

			[Token(Token = "0x4002249")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147C140", Offset = "0x147C140")]
			public float maxDistance;

			[Token(Token = "0x400224A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147C178", Offset = "0x147C178")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x147C178", Offset = "0x147C178")]
			public float maxAngle;

			[Token(Token = "0x400224B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147C1D0", Offset = "0x147C1D0")]
			public bool fixYAxis;

			[Token(Token = "0x60025E0")]
			[Address(RVA = "0x2E75EDC", Offset = "0x2E75EDC", VA = "0x2E75EDC")]
			public Quaternion GetRotation()
			{
				return default(Quaternion);
			}

			[Token(Token = "0x60025E1")]
			[Address(RVA = "0x2E76084", Offset = "0x2E76084", VA = "0x2E76084")]
			public bool IsInRange(Transform raycastFrom, RaycastHit hit, Transform trigger, out float error)
			{
				return default(bool);
			}

			[Token(Token = "0x60025E2")]
			[Address(RVA = "0x2E76364", Offset = "0x2E76364", VA = "0x2E76364")]
			public CameraPosition()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000587")]
		public class Range
		{
			[Serializable]
			[Token(Token = "0x200078E")]
			public class Interaction
			{
				[Token(Token = "0x4002A0C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147DF18", Offset = "0x147DF18")]
				public InteractionObject interactionObject;

				[Token(Token = "0x4002A0D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147DF50", Offset = "0x147DF50")]
				public FullBodyBipedEffector[] effectors;

				[Token(Token = "0x6002C2A")]
				[Address(RVA = "0x2E76BC4", Offset = "0x2E76BC4", VA = "0x2E76BC4")]
				public Interaction()
				{
				}
			}

			[Token(Token = "0x400224C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[HideInInspector]
			public string name;

			[Token(Token = "0x400224D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[HideInInspector]
			public bool show;

			[Token(Token = "0x400224E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147C228", Offset = "0x147C228")]
			public CharacterPosition characterPosition;

			[Token(Token = "0x400224F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147C260", Offset = "0x147C260")]
			public CameraPosition cameraPosition;

			[Token(Token = "0x4002250")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147C298", Offset = "0x147C298")]
			public Interaction[] interactions;

			[Token(Token = "0x60025E3")]
			[Address(RVA = "0x2E75D4C", Offset = "0x2E75D4C", VA = "0x2E75D4C")]
			public bool IsInRange(Transform character, Transform raycastFrom, RaycastHit raycastHit, Transform trigger, out float maxError)
			{
				return default(bool);
			}

			[Token(Token = "0x60025E4")]
			[Address(RVA = "0x2E76BB4", Offset = "0x2E76BB4", VA = "0x2E76BB4")]
			public Range()
			{
			}
		}

		[Token(Token = "0x4000C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1470D3C", Offset = "0x1470D3C")]
		public Range[] ranges;

		[Token(Token = "0x6000E35")]
		[Address(RVA = "0x2E75BD0", Offset = "0x2E75BD0", VA = "0x2E75BD0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1482238", Offset = "0x1482238")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6000E36")]
		[Address(RVA = "0x2E75C1C", Offset = "0x2E75C1C", VA = "0x2E75C1C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1482270", Offset = "0x1482270")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000E37")]
		[Address(RVA = "0x2E75C68", Offset = "0x2E75C68", VA = "0x2E75C68")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x14822A8", Offset = "0x14822A8")]
		private void OpenTutorial4()
		{
		}

		[Token(Token = "0x6000E38")]
		[Address(RVA = "0x2E75CB4", Offset = "0x2E75CB4", VA = "0x2E75CB4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x14822E0", Offset = "0x14822E0")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000E39")]
		[Address(RVA = "0x2E75D00", Offset = "0x2E75D00", VA = "0x2E75D00")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1482318", Offset = "0x1482318")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000E3A")]
		[Address(RVA = "0x2E746D4", Offset = "0x2E746D4", VA = "0x2E746D4")]
		public int GetBestRangeIndex(Transform character, Transform raycastFrom, RaycastHit raycastHit)
		{
			return default(int);
		}

		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0x2E75E70", Offset = "0x2E75E70", VA = "0x2E75E70")]
		public InteractionTrigger()
		{
		}
	}
	[Token(Token = "0x20001AD")]
	public class GenericPoser : Poser
	{
		[Serializable]
		[Token(Token = "0x2000588")]
		public class Map
		{
			[Token(Token = "0x4002251")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform bone;

			[Token(Token = "0x4002252")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform target;

			[Token(Token = "0x4002253")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Vector3 defaultLocalPosition;

			[Token(Token = "0x4002254")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private Quaternion defaultLocalRotation;

			[Token(Token = "0x60025E5")]
			[Address(RVA = "0x311B1BC", Offset = "0x311B1BC", VA = "0x311B1BC")]
			public Map(Transform bone, Transform target)
			{
			}

			[Token(Token = "0x60025E6")]
			[Address(RVA = "0x311B5DC", Offset = "0x311B5DC", VA = "0x311B5DC")]
			public void StoreDefaultState()
			{
			}

			[Token(Token = "0x60025E7")]
			[Address(RVA = "0x311B590", Offset = "0x311B590", VA = "0x311B590")]
			public void FixTransform()
			{
			}

			[Token(Token = "0x60025E8")]
			[Address(RVA = "0x311B388", Offset = "0x311B388", VA = "0x311B388")]
			public void Update(float localRotationWeight, float localPositionWeight)
			{
			}
		}

		[Token(Token = "0x4000C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Map[] maps;

		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0x311AEC8", Offset = "0x311AEC8", VA = "0x311AEC8", Slot = "7")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1482350", Offset = "0x1482350")]
		public override void AutoMapping()
		{
		}

		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0x311B27C", Offset = "0x311B27C", VA = "0x311B27C", Slot = "8")]
		protected override void InitiatePoser()
		{
		}

		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0x311B280", Offset = "0x311B280", VA = "0x311B280", Slot = "9")]
		protected override void UpdatePoser()
		{
		}

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0x311B528", Offset = "0x311B528", VA = "0x311B528", Slot = "10")]
		protected override void FixPoserTransforms()
		{
		}

		[Token(Token = "0x6000E40")]
		[Address(RVA = "0x311B214", Offset = "0x311B214", VA = "0x311B214")]
		private void StoreDefaultState()
		{
		}

		[Token(Token = "0x6000E41")]
		[Address(RVA = "0x311B11C", Offset = "0x311B11C", VA = "0x311B11C")]
		private Transform GetTargetNamed(string tName, Transform[] array)
		{
			return null;
		}

		[Token(Token = "0x6000E42")]
		[Address(RVA = "0x311B62C", Offset = "0x311B62C", VA = "0x311B62C")]
		public GenericPoser()
		{
		}
	}
	[Token(Token = "0x20001AE")]
	public class HandPoser : Poser
	{
		[Token(Token = "0x4000C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Transform[] children;

		[Token(Token = "0x4000C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform _poseRoot;

		[Token(Token = "0x4000C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform[] poseChildren;

		[Token(Token = "0x4000C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3[] defaultLocalPositions;

		[Token(Token = "0x4000C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Quaternion[] defaultLocalRotations;

		[Token(Token = "0x6000E43")]
		[Address(RVA = "0x3125DD0", Offset = "0x3125DD0", VA = "0x3125DD0", Slot = "7")]
		public override void AutoMapping()
		{
		}

		[Token(Token = "0x6000E44")]
		[Address(RVA = "0x3125E98", Offset = "0x3125E98", VA = "0x3125E98", Slot = "8")]
		protected override void InitiatePoser()
		{
		}

		[Token(Token = "0x6000E45")]
		[Address(RVA = "0x312607C", Offset = "0x312607C", VA = "0x312607C", Slot = "10")]
		protected override void FixPoserTransforms()
		{
		}

		[Token(Token = "0x6000E46")]
		[Address(RVA = "0x3126178", Offset = "0x3126178", VA = "0x3126178", Slot = "9")]
		protected override void UpdatePoser()
		{
		}

		[Token(Token = "0x6000E47")]
		[Address(RVA = "0x3125F00", Offset = "0x3125F00", VA = "0x3125F00")]
		protected void StoreDefaultState()
		{
		}

		[Token(Token = "0x6000E48")]
		[Address(RVA = "0x3126528", Offset = "0x3126528", VA = "0x3126528")]
		public HandPoser()
		{
		}
	}
	[Token(Token = "0x20001AF")]
	public abstract class Poser : SolverManager
	{
		[Token(Token = "0x4000C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform poseRoot;

		[Token(Token = "0x4000C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1470D74", Offset = "0x1470D74")]
		public float weight;

		[Token(Token = "0x4000C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1470D8C", Offset = "0x1470D8C")]
		public float localRotationWeight;

		[Token(Token = "0x4000C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1470DA4", Offset = "0x1470DA4")]
		public float localPositionWeight;

		[Token(Token = "0x4000C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool initiated;

		[Token(Token = "0x6000E49")]
		public abstract void AutoMapping();

		[Token(Token = "0x6000E4A")]
		[Address(RVA = "0x2E79860", Offset = "0x2E79860", VA = "0x2E79860")]
		public void UpdateManual()
		{
		}

		[Token(Token = "0x6000E4B")]
		protected abstract void InitiatePoser();

		[Token(Token = "0x6000E4C")]
		protected abstract void UpdatePoser();

		[Token(Token = "0x6000E4D")]
		protected abstract void FixPoserTransforms();

		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0x2E7986C", Offset = "0x2E7986C", VA = "0x2E7986C", Slot = "5")]
		protected override void UpdateSolver()
		{
		}

		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0x2E798C0", Offset = "0x2E798C0", VA = "0x2E798C0", Slot = "4")]
		protected override void InitiateSolver()
		{
		}

		[Token(Token = "0x6000E50")]
		[Address(RVA = "0x2E798FC", Offset = "0x2E798FC", VA = "0x2E798FC", Slot = "6")]
		protected override void FixTransforms()
		{
		}

		[Token(Token = "0x6000E51")]
		[Address(RVA = "0x2E79914", Offset = "0x2E79914", VA = "0x2E79914")]
		protected Poser()
		{
		}
	}
	[Token(Token = "0x20001B0")]
	public class RagdollUtility : MonoBehaviour
	{
		[Token(Token = "0x2000589")]
		public class Rigidbone
		{
			[Token(Token = "0x4002255")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody r;

			[Token(Token = "0x4002256")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform t;

			[Token(Token = "0x4002257")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Collider collider;

			[Token(Token = "0x4002258")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Joint joint;

			[Token(Token = "0x4002259")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Rigidbody c;

			[Token(Token = "0x400225A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool updateAnchor;

			[Token(Token = "0x400225B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Vector3 deltaPosition;

			[Token(Token = "0x400225C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Quaternion deltaRotation;

			[Token(Token = "0x400225D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public float deltaTime;

			[Token(Token = "0x400225E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public Vector3 lastPosition;

			[Token(Token = "0x400225F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Quaternion lastRotation;

			[Token(Token = "0x60025E9")]
			[Address(RVA = "0x2E79F44", Offset = "0x2E79F44", VA = "0x2E79F44")]
			public Rigidbone(Rigidbody r)
			{
			}

			[Token(Token = "0x60025EA")]
			[Address(RVA = "0x2E7ABBC", Offset = "0x2E7ABBC", VA = "0x2E7ABBC")]
			public void RecordVelocity()
			{
			}

			[Token(Token = "0x60025EB")]
			[Address(RVA = "0x2E7A9A0", Offset = "0x2E7A9A0", VA = "0x2E7A9A0")]
			public void WakeUp(float velocityWeight, float angularVelocityWeight)
			{
			}
		}

		[Token(Token = "0x200058A")]
		public class Child
		{
			[Token(Token = "0x4002260")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform t;

			[Token(Token = "0x4002261")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 localPosition;

			[Token(Token = "0x4002262")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Quaternion localRotation;

			[Token(Token = "0x60025EC")]
			[Address(RVA = "0x2E7A0F4", Offset = "0x2E7A0F4", VA = "0x2E7A0F4")]
			public Child(Transform transform)
			{
			}

			[Token(Token = "0x60025ED")]
			[Address(RVA = "0x2E7AD58", Offset = "0x2E7AD58", VA = "0x2E7AD58")]
			public void FixTransform(float weight)
			{
			}

			[Token(Token = "0x60025EE")]
			[Address(RVA = "0x2E7AD08", Offset = "0x2E7AD08", VA = "0x2E7AD08")]
			public void StoreLocalState()
			{
			}
		}

		[Token(Token = "0x200058B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1469FEC", Offset = "0x1469FEC")]
		private sealed class <DisableRagdollSmooth>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002263")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002264")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002265")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RagdollUtility <>4__this;

			[Token(Token = "0x170004F8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60025F2")]
				[Address(RVA = "0x2E7B3B8", Offset = "0x2E7B3B8", VA = "0x2E7B3B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004F9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60025F4")]
				[Address(RVA = "0x2E7B420", Offset = "0x2E7B420", VA = "0x2E7B420", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60025EF")]
			[Address(RVA = "0x2E7A16C", Offset = "0x2E7A16C", VA = "0x2E7A16C")]
			[DebuggerHidden]
			public <DisableRagdollSmooth>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x60025F0")]
			[Address(RVA = "0x2E7B150", Offset = "0x2E7B150", VA = "0x2E7B150", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60025F1")]
			[Address(RVA = "0x2E7B154", Offset = "0x2E7B154", VA = "0x2E7B154", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60025F3")]
			[Address(RVA = "0x2E7B3C0", Offset = "0x2E7B3C0", VA = "0x2E7B3C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1470DBC", Offset = "0x1470DBC")]
		public IK ik;

		[Token(Token = "0x4000C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1470DF4", Offset = "0x1470DF4")]
		public float ragdollToAnimationTime;

		[Token(Token = "0x4000C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1470E2C", Offset = "0x1470E2C")]
		public bool applyIkOnRagdoll;

		[Token(Token = "0x4000C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1470E64", Offset = "0x1470E64")]
		public float applyVelocity;

		[Token(Token = "0x4000C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1470E9C", Offset = "0x1470E9C")]
		public float applyAngularVelocity;

		[Token(Token = "0x4000C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Animator animator;

		[Token(Token = "0x4000C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rigidbone[] rigidbones;

		[Token(Token = "0x4000C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Child[] children;

		[Token(Token = "0x4000C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool enableRagdollFlag;

		[Token(Token = "0x4000C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private AnimatorUpdateMode animatorUpdateMode;

		[Token(Token = "0x4000C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private IK[] allIKComponents;

		[Token(Token = "0x4000C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool[] fixTransforms;

		[Token(Token = "0x4000C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float ragdollWeight;

		[Token(Token = "0x4000C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float ragdollWeightV;

		[Token(Token = "0x4000C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool fixedFrame;

		[Token(Token = "0x4000C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool[] disabledIKComponents;

		[Token(Token = "0x1700018B")]
		private bool isRagdoll
		{
			[Token(Token = "0x6000E5D")]
			[Address(RVA = "0x2E7995C", Offset = "0x2E7995C", VA = "0x2E7995C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700018C")]
		private bool ikUsed
		{
			[Token(Token = "0x6000E5F")]
			[Address(RVA = "0x2E7A558", Offset = "0x2E7A558", VA = "0x2E7A558")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000E52")]
		[Address(RVA = "0x2E79924", Offset = "0x2E79924", VA = "0x2E79924")]
		public void EnableRagdoll()
		{
		}

		[Token(Token = "0x6000E53")]
		[Address(RVA = "0x2E799D4", Offset = "0x2E799D4", VA = "0x2E799D4")]
		public void DisableRagdoll()
		{
		}

		[Token(Token = "0x6000E54")]
		[Address(RVA = "0x2E79B10", Offset = "0x2E79B10", VA = "0x2E79B10")]
		public void Start()
		{
		}

		[Token(Token = "0x6000E55")]
		[Address(RVA = "0x2E79A94", Offset = "0x2E79A94", VA = "0x2E79A94")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1482388", Offset = "0x1482388")]
		private IEnumerator DisableRagdollSmooth()
		{
			return null;
		}

		[Token(Token = "0x6000E56")]
		[Address(RVA = "0x2E7A198", Offset = "0x2E7A198", VA = "0x2E7A198")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E57")]
		[Address(RVA = "0x2E7A3E4", Offset = "0x2E7A3E4", VA = "0x2E7A3E4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000E58")]
		[Address(RVA = "0x2E7A49C", Offset = "0x2E7A49C", VA = "0x2E7A49C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000E59")]
		[Address(RVA = "0x2E7A6DC", Offset = "0x2E7A6DC", VA = "0x2E7A6DC")]
		private void AfterLastIK()
		{
		}

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0x2E7A51C", Offset = "0x2E7A51C", VA = "0x2E7A51C")]
		private void AfterAnimation()
		{
		}

		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0x2E7A698", Offset = "0x2E7A698", VA = "0x2E7A698")]
		private void OnFinalPose()
		{
		}

		[Token(Token = "0x6000E5C")]
		[Address(RVA = "0x2E7A778", Offset = "0x2E7A778", VA = "0x2E7A778")]
		private void RagdollEnabler()
		{
		}

		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0x2E7A710", Offset = "0x2E7A710", VA = "0x2E7A710")]
		private void RecordVelocities()
		{
		}

		[Token(Token = "0x6000E60")]
		[Address(RVA = "0x2E79A2C", Offset = "0x2E79A2C", VA = "0x2E79A2C")]
		private void StoreLocalState()
		{
		}

		[Token(Token = "0x6000E61")]
		[Address(RVA = "0x2E7A424", Offset = "0x2E7A424", VA = "0x2E7A424")]
		private void FixTransforms(float weight)
		{
		}

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0x2E7AF20", Offset = "0x2E7AF20", VA = "0x2E7AF20")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000E63")]
		[Address(RVA = "0x2E7B048", Offset = "0x2E7B048", VA = "0x2E7B048")]
		public RagdollUtility()
		{
		}
	}
	[Token(Token = "0x20001B1")]
	public abstract class RotationLimit : MonoBehaviour
	{
		[Token(Token = "0x4000C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 axis;

		[Token(Token = "0x4000C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		public Quaternion defaultLocalRotation;

		[Token(Token = "0x4000C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1470EE4", Offset = "0x1470EE4")]
		private bool <defaultLocalRotationOverride>k__BackingField;

		[Token(Token = "0x4000C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		private bool initiated;

		[Token(Token = "0x4000C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
		private bool applicationQuit;

		[Token(Token = "0x4000C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
		private bool defaultLocalRotationSet;

		[Token(Token = "0x1700018D")]
		public Vector3 secondaryAxis
		{
			[Token(Token = "0x6000E69")]
			[Address(RVA = "0x2E7CD04", Offset = "0x2E7CD04", VA = "0x2E7CD04")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700018E")]
		public Vector3 crossAxis
		{
			[Token(Token = "0x6000E6A")]
			[Address(RVA = "0x2E7CD40", Offset = "0x2E7CD40", VA = "0x2E7CD40")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700018F")]
		public bool defaultLocalRotationOverride
		{
			[Token(Token = "0x6000E6B")]
			[Address(RVA = "0x2E7CE10", Offset = "0x2E7CE10", VA = "0x2E7CE10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14823EC", Offset = "0x14823EC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E6C")]
			[Address(RVA = "0x2E7CE18", Offset = "0x2E7CE18", VA = "0x2E7CE18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14823FC", Offset = "0x14823FC")]
			private set
			{
			}
		}

		[Token(Token = "0x6000E64")]
		[Address(RVA = "0x2E7C968", Offset = "0x2E7C968", VA = "0x2E7C968")]
		public void SetDefaultLocalRotation()
		{
		}

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0x2E7C9B0", Offset = "0x2E7C9B0", VA = "0x2E7C9B0")]
		public void SetDefaultLocalRotation(Quaternion localRotation)
		{
		}

		[Token(Token = "0x6000E66")]
		[Address(RVA = "0x2E7C9C8", Offset = "0x2E7C9C8", VA = "0x2E7C9C8")]
		public Quaternion GetLimitedLocalRotation(Quaternion localRotation, out bool changed)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000E67")]
		[Address(RVA = "0x2E7CC5C", Offset = "0x2E7CC5C", VA = "0x2E7CC5C")]
		public bool Apply()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E68")]
		[Address(RVA = "0x2E7CCCC", Offset = "0x2E7CCCC", VA = "0x2E7CCCC")]
		public void Disable()
		{
		}

		[Token(Token = "0x6000E6D")]
		protected abstract Quaternion LimitRotation(Quaternion rotation);

		[Token(Token = "0x6000E6E")]
		[Address(RVA = "0x2E7CB6C", Offset = "0x2E7CB6C", VA = "0x2E7CB6C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0x2E7CE24", Offset = "0x2E7CE24", VA = "0x2E7CE24")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000E70")]
		[Address(RVA = "0x2E7CE28", Offset = "0x2E7CE28", VA = "0x2E7CE28")]
		public void LogWarning(string message)
		{
		}

		[Token(Token = "0x6000E71")]
		[Address(RVA = "0x2E7CE5C", Offset = "0x2E7CE5C", VA = "0x2E7CE5C")]
		protected static Quaternion Limit1DOF(Quaternion rotation, Vector3 axis)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000E72")]
		[Address(RVA = "0x2E7CF40", Offset = "0x2E7CF40", VA = "0x2E7CF40")]
		protected static Quaternion LimitTwist(Quaternion rotation, Vector3 axis, Vector3 orthoAxis, float twistLimit)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000E73")]
		[Address(RVA = "0x2E7D1BC", Offset = "0x2E7D1BC", VA = "0x2E7D1BC")]
		protected static float GetOrthogonalAngle(Vector3 v1, Vector3 v2, Vector3 normal)
		{
			return default(float);
		}

		[Token(Token = "0x6000E74")]
		[Address(RVA = "0x2E7D278", Offset = "0x2E7D278", VA = "0x2E7D278")]
		protected RotationLimit()
		{
		}
	}
	[Token(Token = "0x20001B2")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x1466B0C", Offset = "0x1466B0C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1466B0C", Offset = "0x1466B0C")]
	public class RotationLimitAngle : RotationLimit
	{
		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1470EF4", Offset = "0x1470EF4")]
		public float limit;

		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1470F10", Offset = "0x1470F10")]
		public float twistLimit;

		[Token(Token = "0x6000E75")]
		[Address(RVA = "0x2E7D2F0", Offset = "0x2E7D2F0", VA = "0x2E7D2F0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x148240C", Offset = "0x148240C")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6000E76")]
		[Address(RVA = "0x2E7D33C", Offset = "0x2E7D33C", VA = "0x2E7D33C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1482444", Offset = "0x1482444")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000E77")]
		[Address(RVA = "0x2E7D388", Offset = "0x2E7D388", VA = "0x2E7D388")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x148247C", Offset = "0x148247C")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000E78")]
		[Address(RVA = "0x2E7D3D4", Offset = "0x2E7D3D4", VA = "0x2E7D3D4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x14824B4", Offset = "0x14824B4")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000E79")]
		[Address(RVA = "0x2E7D420", Offset = "0x2E7D420", VA = "0x2E7D420", Slot = "4")]
		protected override Quaternion LimitRotation(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0x2E7D4D8", Offset = "0x2E7D4D8", VA = "0x2E7D4D8")]
		private Quaternion LimitSwing(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0x2E7D720", Offset = "0x2E7D720", VA = "0x2E7D720")]
		public RotationLimitAngle()
		{
		}
	}
	[Token(Token = "0x20001B3")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x1466B6C", Offset = "0x1466B6C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1466B6C", Offset = "0x1466B6C")]
	public class RotationLimitHinge : RotationLimit
	{
		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool useLimits;

		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float min;

		[Token(Token = "0x4000C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float max;

		[Token(Token = "0x4000C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HideInInspector]
		public float zeroAxisDisplayOffset;

		[Token(Token = "0x4000C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float lastAngle;

		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0x2E7D730", Offset = "0x2E7D730", VA = "0x2E7D730")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x14824EC", Offset = "0x14824EC")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0x2E7D77C", Offset = "0x2E7D77C", VA = "0x2E7D77C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1482524", Offset = "0x1482524")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0x2E7D7C8", Offset = "0x2E7D7C8", VA = "0x2E7D7C8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x148255C", Offset = "0x148255C")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0x2E7D814", Offset = "0x2E7D814", VA = "0x2E7D814")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1482594", Offset = "0x1482594")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000E80")]
		[Address(RVA = "0x2E7D860", Offset = "0x2E7D860", VA = "0x2E7D860", Slot = "4")]
		protected override Quaternion LimitRotation(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000E81")]
		[Address(RVA = "0x2E7D864", Offset = "0x2E7D864", VA = "0x2E7D864")]
		private Quaternion LimitHinge(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000E82")]
		[Address(RVA = "0x2E7DB10", Offset = "0x2E7DB10", VA = "0x2E7DB10")]
		public RotationLimitHinge()
		{
		}
	}
	[Token(Token = "0x20001B4")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x1466BCC", Offset = "0x1466BCC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1466BCC", Offset = "0x1466BCC")]
	public class RotationLimitPolygonal : RotationLimit
	{
		[Serializable]
		[Token(Token = "0x200058C")]
		public class ReachCone
		{
			[Token(Token = "0x4002266")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3[] tetrahedron;

			[Token(Token = "0x4002267")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float volume;

			[Token(Token = "0x4002268")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 S;

			[Token(Token = "0x4002269")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 B;

			[Token(Token = "0x170004FA")]
			public Vector3 o
			{
				[Token(Token = "0x60025F5")]
				[Address(RVA = "0x288936C", Offset = "0x288936C", VA = "0x288936C")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x170004FB")]
			public Vector3 a
			{
				[Token(Token = "0x60025F6")]
				[Address(RVA = "0x28893A4", Offset = "0x28893A4", VA = "0x28893A4")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x170004FC")]
			public Vector3 b
			{
				[Token(Token = "0x60025F7")]
				[Address(RVA = "0x28893E0", Offset = "0x28893E0", VA = "0x28893E0")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x170004FD")]
			public Vector3 c
			{
				[Token(Token = "0x60025F8")]
				[Address(RVA = "0x288941C", Offset = "0x288941C", VA = "0x288941C")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x170004FE")]
			public bool isValid
			{
				[Token(Token = "0x60025FA")]
				[Address(RVA = "0x28895CC", Offset = "0x28895CC", VA = "0x28895CC")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x60025F9")]
			[Address(RVA = "0x2889458", Offset = "0x2889458", VA = "0x2889458")]
			public ReachCone(Vector3 _o, Vector3 _a, Vector3 _b, Vector3 _c)
			{
			}

			[Token(Token = "0x60025FB")]
			[Address(RVA = "0x28895DC", Offset = "0x28895DC", VA = "0x28895DC")]
			public void Calculate()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200058D")]
		public class LimitPoint
		{
			[Token(Token = "0x400226A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 point;

			[Token(Token = "0x400226B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float tangentWeight;

			[Token(Token = "0x60025FC")]
			[Address(RVA = "0x28892E8", Offset = "0x28892E8", VA = "0x28892E8")]
			public LimitPoint()
			{
			}
		}

		[Token(Token = "0x4000C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1470F3C", Offset = "0x1470F3C")]
		public float twistLimit;

		[Token(Token = "0x4000C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1470F58", Offset = "0x1470F58")]
		public int smoothIterations;

		[Token(Token = "0x4000C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public LimitPoint[] points;

		[Token(Token = "0x4000C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public Vector3[] P;

		[Token(Token = "0x4000C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public ReachCone[] reachCones;

		[Token(Token = "0x6000E83")]
		[Address(RVA = "0x2E7DB28", Offset = "0x2E7DB28", VA = "0x2E7DB28")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x14825CC", Offset = "0x14825CC")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6000E84")]
		[Address(RVA = "0x2E7DB74", Offset = "0x2E7DB74", VA = "0x2E7DB74")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1482604", Offset = "0x1482604")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000E85")]
		[Address(RVA = "0x2E7DBC0", Offset = "0x2E7DBC0", VA = "0x2E7DBC0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x148263C", Offset = "0x148263C")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000E86")]
		[Address(RVA = "0x2E7DC0C", Offset = "0x2E7DC0C", VA = "0x2E7DC0C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1482674", Offset = "0x1482674")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000E87")]
		[Address(RVA = "0x2E7DC58", Offset = "0x2E7DC58", VA = "0x2E7DC58")]
		public void SetLimitPoints(LimitPoint[] points)
		{
		}

		[Token(Token = "0x6000E88")]
		[Address(RVA = "0x2E7E1A8", Offset = "0x2E7E1A8", VA = "0x2E7E1A8", Slot = "4")]
		protected override Quaternion LimitRotation(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000E89")]
		[Address(RVA = "0x2E7E2A0", Offset = "0x2E7E2A0", VA = "0x2E7E2A0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0x2E7E8B4", Offset = "0x2E7E8B4", VA = "0x2E7E8B4")]
		public void ResetToDefault()
		{
		}

		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0x2E7DD04", Offset = "0x2E7DD04", VA = "0x2E7DD04")]
		public void BuildReachCones()
		{
		}

		[Token(Token = "0x6000E8C")]
		[Address(RVA = "0x2E7EC98", Offset = "0x2E7EC98", VA = "0x2E7EC98")]
		private Vector3[] SmoothPoints()
		{
			return null;
		}

		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0x2E7F250", Offset = "0x2E7F250", VA = "0x2E7F250")]
		private float GetScalar(int k)
		{
			return default(float);
		}

		[Token(Token = "0x6000E8E")]
		[Address(RVA = "0x2E7F294", Offset = "0x2E7F294", VA = "0x2E7F294")]
		private Vector3 PointToTangentPlane(Vector3 p, float r)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0x2E7F3DC", Offset = "0x2E7F3DC", VA = "0x2E7F3DC")]
		private Vector3 TangentPointToSphere(Vector3 q, float r)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E90")]
		[Address(RVA = "0x2E7E578", Offset = "0x2E7E578", VA = "0x2E7E578")]
		private Quaternion LimitSwing(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000E91")]
		[Address(RVA = "0x2E7F56C", Offset = "0x2E7F56C", VA = "0x2E7F56C")]
		private int GetReachCone(Vector3 L)
		{
			return default(int);
		}

		[Token(Token = "0x6000E92")]
		[Address(RVA = "0x2E7F71C", Offset = "0x2E7F71C", VA = "0x2E7F71C")]
		public RotationLimitPolygonal()
		{
		}
	}
	[Token(Token = "0x20001B5")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x1466C2C", Offset = "0x1466C2C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1466C2C", Offset = "0x1466C2C")]
	public class RotationLimitSpline : RotationLimit
	{
		[Token(Token = "0x4000C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1470FA0", Offset = "0x1470FA0")]
		public float twistLimit;

		[Token(Token = "0x4000C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public AnimationCurve spline;

		[Token(Token = "0x6000E93")]
		[Address(RVA = "0x288979C", Offset = "0x288979C", VA = "0x288979C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x14826AC", Offset = "0x14826AC")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6000E94")]
		[Address(RVA = "0x28897E8", Offset = "0x28897E8", VA = "0x28897E8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x14826E4", Offset = "0x14826E4")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000E95")]
		[Address(RVA = "0x2889834", Offset = "0x2889834", VA = "0x2889834")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x148271C", Offset = "0x148271C")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x6000E96")]
		[Address(RVA = "0x2889880", Offset = "0x2889880", VA = "0x2889880")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x1482754", Offset = "0x1482754")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000E97")]
		[Address(RVA = "0x28898CC", Offset = "0x28898CC", VA = "0x28898CC")]
		public void SetSpline(Keyframe[] keyframes)
		{
		}

		[Token(Token = "0x6000E98")]
		[Address(RVA = "0x28898E8", Offset = "0x28898E8", VA = "0x28898E8", Slot = "4")]
		protected override Quaternion LimitRotation(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000E99")]
		[Address(RVA = "0x2889988", Offset = "0x2889988", VA = "0x2889988")]
		public Quaternion LimitSwing(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000E9A")]
		[Address(RVA = "0x2889CB0", Offset = "0x2889CB0", VA = "0x2889CB0")]
		public RotationLimitSpline()
		{
		}
	}
	[Token(Token = "0x20001B6")]
	public class AimController : MonoBehaviour
	{
		[Token(Token = "0x200058E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1469FFC", Offset = "0x1469FFC")]
		private sealed class <TurnToTarget>d__37 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400226C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400226D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400226E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AimController <>4__this;

			[Token(Token = "0x170004FF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002600")]
				[Address(RVA = "0x26698A4", Offset = "0x26698A4", VA = "0x26698A4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000500")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002602")]
				[Address(RVA = "0x266990C", Offset = "0x266990C", VA = "0x266990C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60025FD")]
			[Address(RVA = "0x2669674", Offset = "0x2669674", VA = "0x2669674")]
			[DebuggerHidden]
			public <TurnToTarget>d__37(int <>1__state)
			{
			}

			[Token(Token = "0x60025FE")]
			[Address(RVA = "0x2669774", Offset = "0x2669774", VA = "0x2669774", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60025FF")]
			[Address(RVA = "0x2669778", Offset = "0x2669778", VA = "0x2669778", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002601")]
			[Address(RVA = "0x26698AC", Offset = "0x26698AC", VA = "0x26698AC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1470FCC", Offset = "0x1470FCC")]
		public AimIK ik;

		[Token(Token = "0x4000C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1471004", Offset = "0x1471004")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1471004", Offset = "0x1471004")]
		public float weight;

		[Token(Token = "0x4000C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1471058", Offset = "0x1471058")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1471058", Offset = "0x1471058")]
		public Transform target;

		[Token(Token = "0x4000C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x14710B8", Offset = "0x14710B8")]
		public float targetSwitchSmoothTime;

		[Token(Token = "0x4000C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x14710F0", Offset = "0x14710F0")]
		public float weightSmoothTime;

		[Token(Token = "0x4000C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1471128", Offset = "0x1471128")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1471128", Offset = "0x1471128")]
		public bool smoothTurnTowardsTarget;

		[Token(Token = "0x4000C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1471188", Offset = "0x1471188")]
		public float maxRadiansDelta;

		[Token(Token = "0x4000C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x14711C0", Offset = "0x14711C0")]
		public float maxMagnitudeDelta;

		[Token(Token = "0x4000C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x14711F8", Offset = "0x14711F8")]
		public float slerpSpeed;

		[Token(Token = "0x4000C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1471230", Offset = "0x1471230")]
		public float smoothDampTime;

		[Token(Token = "0x4000C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1471268", Offset = "0x1471268")]
		public Vector3 pivotOffsetFromRoot;

		[Token(Token = "0x4000C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x14712A0", Offset = "0x14712A0")]
		public float minDistance;

		[Token(Token = "0x4000C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x14712D8", Offset = "0x14712D8")]
		public Vector3 offset;

		[Token(Token = "0x4000C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1471310", Offset = "0x1471310")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1471310", Offset = "0x1471310")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1471310", Offset = "0x1471310")]
		public float maxRootAngle;

		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147138C", Offset = "0x147138C")]
		public bool turnToTarget;

		[Token(Token = "0x4000C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x14713C4", Offset = "0x14713C4")]
		public float turnToTargetTime;

		[Token(Token = "0x4000C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x14713FC", Offset = "0x14713FC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x14713FC", Offset = "0x14713FC")]
		public bool useAnimatedAimDirection;

		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147145C", Offset = "0x147145C")]
		public Vector3 animatedAimDirection;

		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Transform lastTarget;

		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float switchWeight;

		[Token(Token = "0x4000C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float switchWeightV;

		[Token(Token = "0x4000C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float weightV;

		[Token(Token = "0x4000C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Vector3 lastPosition;

		[Token(Token = "0x4000C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 dir;

		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private bool lastSmoothTowardsTarget;

		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
		private bool turningToTarget;

		[Token(Token = "0x4000C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float turnToTargetMlp;

		[Token(Token = "0x4000C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float turnToTargetMlpV;

		[Token(Token = "0x4000C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float yawV;

		[Token(Token = "0x4000C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float pitchV;

		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float dirMagV;

		[Token(Token = "0x17000190")]
		private Vector3 pivot
		{
			[Token(Token = "0x6000E9D")]
			[Address(RVA = "0x26685F0", Offset = "0x26685F0", VA = "0x26685F0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0x26684F0", Offset = "0x26684F0", VA = "0x26684F0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0x266873C", Offset = "0x266873C", VA = "0x266873C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0x26690EC", Offset = "0x26690EC", VA = "0x26690EC")]
		private void ApplyMinDistance()
		{
		}

		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0x2669288", Offset = "0x2669288", VA = "0x2669288")]
		private void RootRotation()
		{
		}

		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0x26695F8", Offset = "0x26695F8", VA = "0x26695F8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x148278C", Offset = "0x148278C")]
		private IEnumerator TurnToTarget()
		{
			return null;
		}

		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0x26696A0", Offset = "0x26696A0", VA = "0x26696A0")]
		public AimController()
		{
		}
	}
	[Token(Token = "0x20001B7")]
	public class AimPoser : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200058F")]
		public class Pose
		{
			[Token(Token = "0x400226F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool visualize;

			[Token(Token = "0x4002270")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string name;

			[Token(Token = "0x4002271")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 direction;

			[Token(Token = "0x4002272")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float yaw;

			[Token(Token = "0x4002273")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float pitch;

			[Token(Token = "0x4002274")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float angleBuffer;

			[Token(Token = "0x6002603")]
			[Address(RVA = "0x266D74C", Offset = "0x266D74C", VA = "0x266D74C")]
			public bool IsInDirection(Vector3 d)
			{
				return default(bool);
			}

			[Token(Token = "0x6002604")]
			[Address(RVA = "0x266DA58", Offset = "0x266DA58", VA = "0x266DA58")]
			public void SetAngleBuffer(float value)
			{
			}

			[Token(Token = "0x6002605")]
			[Address(RVA = "0x266DA60", Offset = "0x266DA60", VA = "0x266DA60")]
			public Pose()
			{
			}
		}

		[Token(Token = "0x4000C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float angleBuffer;

		[Token(Token = "0x4000C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pose[] poses;

		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0x2663AF8", Offset = "0x2663AF8", VA = "0x2663AF8")]
		public Pose GetPose(Vector3 localDirection)
		{
			return null;
		}

		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0x2663BD4", Offset = "0x2663BD4", VA = "0x2663BD4")]
		public void SetPoseActive(Pose pose)
		{
		}

		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0x266D9E4", Offset = "0x266D9E4", VA = "0x266D9E4")]
		public AimPoser()
		{
		}
	}
	[Token(Token = "0x20001B8")]
	public class Amplifier : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x2000590")]
		public class Body
		{
			[Serializable]
			[Token(Token = "0x200078F")]
			public class EffectorLink
			{
				[Token(Token = "0x4002A0E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147DF88", Offset = "0x147DF88")]
				public FullBodyBipedEffector effector;

				[Token(Token = "0x4002A0F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147DFC0", Offset = "0x147DFC0")]
				public float weight;

				[Token(Token = "0x6002C2B")]
				[Address(RVA = "0x266E050", Offset = "0x266E050", VA = "0x266E050")]
				public EffectorLink()
				{
				}
			}

			[Token(Token = "0x4002275")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147C2D0", Offset = "0x147C2D0")]
			public Transform transform;

			[Token(Token = "0x4002276")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147C308", Offset = "0x147C308")]
			public Transform relativeTo;

			[Token(Token = "0x4002277")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147C340", Offset = "0x147C340")]
			public EffectorLink[] effectorLinks;

			[Token(Token = "0x4002278")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147C378", Offset = "0x147C378")]
			public float verticalWeight;

			[Token(Token = "0x4002279")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147C3B0", Offset = "0x147C3B0")]
			public float horizontalWeight;

			[Token(Token = "0x400227A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147C3E8", Offset = "0x147C3E8")]
			public float speed;

			[Token(Token = "0x400227B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 lastRelativePos;

			[Token(Token = "0x400227C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Vector3 smoothDelta;

			[Token(Token = "0x400227D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private bool firstUpdate;

			[Token(Token = "0x6002606")]
			[Address(RVA = "0x266DBBC", Offset = "0x266DBBC", VA = "0x266DBBC")]
			public void Update(IKSolverFullBodyBiped solver, float w, float deltaTime)
			{
			}

			[Token(Token = "0x6002607")]
			[Address(RVA = "0x266E028", Offset = "0x266E028", VA = "0x266E028")]
			private static Vector3 Multiply(Vector3 v1, Vector3 v2)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002608")]
			[Address(RVA = "0x266E038", Offset = "0x266E038", VA = "0x266E038")]
			public Body()
			{
			}
		}

		[Token(Token = "0x4000C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1471494", Offset = "0x1471494")]
		public Body[] bodies;

		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0x266DA7C", Offset = "0x266DA7C", VA = "0x266DA7C", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0x266E020", Offset = "0x266E020", VA = "0x266E020")]
		public Amplifier()
		{
		}
	}
	[Token(Token = "0x20001B9")]
	public class BodyTilt : OffsetModifier
	{
		[Token(Token = "0x4000C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x14714CC", Offset = "0x14714CC")]
		public float tiltSpeed;

		[Token(Token = "0x4000C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1471504", Offset = "0x1471504")]
		public float tiltSensitivity;

		[Token(Token = "0x4000C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147153C", Offset = "0x147153C")]
		public OffsetPose poseLeft;

		[Token(Token = "0x4000C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1471574", Offset = "0x1471574")]
		public OffsetPose poseRight;

		[Token(Token = "0x4000C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float tiltAngle;

		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 lastForward;

		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0x266F690", Offset = "0x266F690", VA = "0x266F690", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0x266F6D8", Offset = "0x266F6D8", VA = "0x266F6D8", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0x266F908", Offset = "0x266F908", VA = "0x266F908")]
		public BodyTilt()
		{
		}
	}
	[Token(Token = "0x20001BA")]
	public class CCDBendGoal : MonoBehaviour
	{
		[Token(Token = "0x4000C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CCDIK ik;

		[Token(Token = "0x4000C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x14715AC", Offset = "0x14715AC")]
		public float weight;

		[Token(Token = "0x6000EAA")]
		[Address(RVA = "0x266F91C", Offset = "0x266F91C", VA = "0x266F91C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0x266F9EC", Offset = "0x266F9EC", VA = "0x266F9EC")]
		private void BeforeIK()
		{
		}

		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0x266FCFC", Offset = "0x266FCFC", VA = "0x266FCFC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000EAD")]
		[Address(RVA = "0x266FE18", Offset = "0x266FE18", VA = "0x266FE18")]
		public CCDBendGoal()
		{
		}
	}
	[Token(Token = "0x20001BB")]
	[ExecuteInEditMode]
	public class EditorIK : MonoBehaviour
	{
		[Token(Token = "0x4000C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x14715C4", Offset = "0x14715C4")]
		public Animator animator;

		[Token(Token = "0x4000C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x14715FC", Offset = "0x14715FC")]
		public EditorIKPose defaultPose;

		[Token(Token = "0x4000C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public Transform[] bones;

		[Token(Token = "0x4000C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1471644", Offset = "0x1471644")]
		private IK <ik>k__BackingField;

		[Token(Token = "0x17000191")]
		public IK ik
		{
			[Token(Token = "0x6000EAE")]
			[Address(RVA = "0x2673514", Offset = "0x2673514", VA = "0x2673514")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14827F0", Offset = "0x14827F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EAF")]
			[Address(RVA = "0x267351C", Offset = "0x267351C", VA = "0x267351C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1482800", Offset = "0x1482800")]
			private set
			{
			}
		}

		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0x2673524", Offset = "0x2673524", VA = "0x2673524")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0x26736B4", Offset = "0x26736B4", VA = "0x26736B4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0x267393C", Offset = "0x267393C", VA = "0x267393C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0x2673A8C", Offset = "0x2673A8C", VA = "0x2673A8C")]
		public void StoreDefaultPose()
		{
		}

		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0x2673C78", Offset = "0x2673C78", VA = "0x2673C78")]
		public bool Initiate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EB5")]
		[Address(RVA = "0x2673E90", Offset = "0x2673E90", VA = "0x2673E90")]
		public void Update()
		{
		}

		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0x2674134", Offset = "0x2674134", VA = "0x2674134")]
		public EditorIK()
		{
		}
	}
	[Token(Token = "0x20001BC")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x1466C9C", Offset = "0x1466C9C")]
	public class EditorIKPose : ScriptableObject
	{
		[Token(Token = "0x4000C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3[] localPositions;

		[Token(Token = "0x4000C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Quaternion[] localRotations;

		[Token(Token = "0x17000192")]
		public bool poseStored
		{
			[Token(Token = "0x6000EB7")]
			[Address(RVA = "0x26737B0", Offset = "0x26737B0", VA = "0x26737B0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0x2673B10", Offset = "0x2673B10", VA = "0x2673B10")]
		public void Store(Transform[] T)
		{
		}

		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0x26737D4", Offset = "0x26737D4", VA = "0x26737D4")]
		public bool Restore(Transform[] T)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0x26741A0", Offset = "0x26741A0", VA = "0x26741A0")]
		public EditorIKPose()
		{
		}
	}
	[Token(Token = "0x20001BD")]
	public class HitReaction : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x2000591")]
		public abstract class HitPoint
		{
			[Token(Token = "0x400227E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147C420", Offset = "0x147C420")]
			public string name;

			[Token(Token = "0x400227F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147C458", Offset = "0x147C458")]
			public Collider collider;

			[Token(Token = "0x4002280")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147C490", Offset = "0x147C490")]
			[SerializeField]
			private float crossFadeTime;

			[Token(Token = "0x4002281")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147C4DC", Offset = "0x147C4DC")]
			private float <crossFader>k__BackingField;

			[Token(Token = "0x4002282")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147C4EC", Offset = "0x147C4EC")]
			private float <timer>k__BackingField;

			[Token(Token = "0x4002283")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147C4FC", Offset = "0x147C4FC")]
			private Vector3 <force>k__BackingField;

			[Token(Token = "0x4002284")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147C50C", Offset = "0x147C50C")]
			private Vector3 <point>k__BackingField;

			[Token(Token = "0x4002285")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float length;

			[Token(Token = "0x4002286")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float crossFadeSpeed;

			[Token(Token = "0x4002287")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float lastTime;

			[Token(Token = "0x17000501")]
			public bool inProgress
			{
				[Token(Token = "0x6002609")]
				[Address(RVA = "0x31265EC", Offset = "0x31265EC", VA = "0x31265EC")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000502")]
			protected float crossFader
			{
				[Token(Token = "0x600260A")]
				[Address(RVA = "0x3126B94", Offset = "0x3126B94", VA = "0x3126B94")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14882B4", Offset = "0x14882B4")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x600260B")]
				[Address(RVA = "0x3126B9C", Offset = "0x3126B9C", VA = "0x3126B9C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14882C4", Offset = "0x14882C4")]
				private set
				{
				}
			}

			[Token(Token = "0x17000503")]
			protected float timer
			{
				[Token(Token = "0x600260C")]
				[Address(RVA = "0x3126BA4", Offset = "0x3126BA4", VA = "0x3126BA4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14882D4", Offset = "0x14882D4")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x600260D")]
				[Address(RVA = "0x3126BAC", Offset = "0x3126BAC", VA = "0x3126BAC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14882E4", Offset = "0x14882E4")]
				private set
				{
				}
			}

			[Token(Token = "0x17000504")]
			protected Vector3 force
			{
				[Token(Token = "0x600260E")]
				[Address(RVA = "0x3126BB4", Offset = "0x3126BB4", VA = "0x3126BB4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14882F4", Offset = "0x14882F4")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x600260F")]
				[Address(RVA = "0x3126BC0", Offset = "0x3126BC0", VA = "0x3126BC0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1488304", Offset = "0x1488304")]
				private set
				{
				}
			}

			[Token(Token = "0x17000505")]
			protected Vector3 point
			{
				[Token(Token = "0x6002610")]
				[Address(RVA = "0x3126BCC", Offset = "0x3126BCC", VA = "0x3126BCC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1488314", Offset = "0x1488314")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6002611")]
				[Address(RVA = "0x3126BD8", Offset = "0x3126BD8", VA = "0x3126BD8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1488324", Offset = "0x1488324")]
				private set
				{
				}
			}

			[Token(Token = "0x6002612")]
			[Address(RVA = "0x3126A60", Offset = "0x3126A60", VA = "0x3126A60")]
			public void Hit(Vector3 force, Vector3 point)
			{
			}

			[Token(Token = "0x6002613")]
			[Address(RVA = "0x31266D4", Offset = "0x31266D4", VA = "0x31266D4")]
			public void Apply(IKSolverFullBodyBiped solver, float weight)
			{
			}

			[Token(Token = "0x6002614")]
			protected abstract float GetLength();

			[Token(Token = "0x6002615")]
			protected abstract void CrossFadeStart();

			[Token(Token = "0x6002616")]
			protected abstract void OnApply(IKSolverFullBodyBiped solver, float weight);

			[Token(Token = "0x6002617")]
			[Address(RVA = "0x3126BE4", Offset = "0x3126BE4", VA = "0x3126BE4")]
			protected HitPoint()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000592")]
		public class HitPointEffector : HitPoint
		{
			[Serializable]
			[Token(Token = "0x2000790")]
			public class EffectorLink
			{
				[Token(Token = "0x4002A10")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147DFF8", Offset = "0x147DFF8")]
				public FullBodyBipedEffector effector;

				[Token(Token = "0x4002A11")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147E030", Offset = "0x147E030")]
				public float weight;

				[Token(Token = "0x4002A12")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private Vector3 lastValue;

				[Token(Token = "0x4002A13")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
				private Vector3 current;

				[Token(Token = "0x6002C2C")]
				[Address(RVA = "0x3127560", Offset = "0x3127560", VA = "0x3127560")]
				public void Apply(IKSolverFullBodyBiped solver, Vector3 offset, float crossFader)
				{
				}

				[Token(Token = "0x6002C2D")]
				[Address(RVA = "0x3127354", Offset = "0x3127354", VA = "0x3127354")]
				public void CrossFadeStart()
				{
				}

				[Token(Token = "0x6002C2E")]
				[Address(RVA = "0x312769C", Offset = "0x312769C", VA = "0x312769C")]
				public EffectorLink()
				{
				}
			}

			[Token(Token = "0x4002288")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147C51C", Offset = "0x147C51C")]
			public AnimationCurve offsetInForceDirection;

			[Token(Token = "0x4002289")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147C554", Offset = "0x147C554")]
			public AnimationCurve offsetInUpDirection;

			[Token(Token = "0x400228A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147C58C", Offset = "0x147C58C")]
			public EffectorLink[] effectorLinks;

			[Token(Token = "0x6002618")]
			[Address(RVA = "0x3127170", Offset = "0x3127170", VA = "0x3127170", Slot = "4")]
			protected override float GetLength()
			{
				return default(float);
			}

			[Token(Token = "0x6002619")]
			[Address(RVA = "0x31272E8", Offset = "0x31272E8", VA = "0x31272E8", Slot = "5")]
			protected override void CrossFadeStart()
			{
			}

			[Token(Token = "0x600261A")]
			[Address(RVA = "0x3127368", Offset = "0x3127368", VA = "0x3127368", Slot = "6")]
			protected override void OnApply(IKSolverFullBodyBiped solver, float weight)
			{
			}

			[Token(Token = "0x600261B")]
			[Address(RVA = "0x3127688", Offset = "0x3127688", VA = "0x3127688")]
			public HitPointEffector()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000593")]
		public class HitPointBone : HitPoint
		{
			[Serializable]
			[Token(Token = "0x2000791")]
			public class BoneLink
			{
				[Token(Token = "0x4002A14")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147E068", Offset = "0x147E068")]
				public Transform bone;

				[Token(Token = "0x4002A15")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147E0A0", Offset = "0x147E0A0")]
				[AttributeAttribute(Name = "RangeAttribute", RVA = "0x147E0A0", Offset = "0x147E0A0")]
				public float weight;

				[Token(Token = "0x4002A16")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
				private Quaternion lastValue;

				[Token(Token = "0x4002A17")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
				private Quaternion current;

				[Token(Token = "0x6002C2F")]
				[Address(RVA = "0x3126F78", Offset = "0x3126F78", VA = "0x3126F78")]
				public void Apply(IKSolverFullBodyBiped solver, Quaternion offset, float crossFader)
				{
				}

				[Token(Token = "0x6002C30")]
				[Address(RVA = "0x3126D00", Offset = "0x3126D00", VA = "0x3126D00")]
				public void CrossFadeStart()
				{
				}

				[Token(Token = "0x6002C31")]
				[Address(RVA = "0x31270E8", Offset = "0x31270E8", VA = "0x31270E8")]
				public BoneLink()
				{
				}
			}

			[Token(Token = "0x400228B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147C5C4", Offset = "0x147C5C4")]
			public AnimationCurve aroundCenterOfMass;

			[Token(Token = "0x400228C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147C5FC", Offset = "0x147C5FC")]
			public BoneLink[] boneLinks;

			[Token(Token = "0x400228D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Rigidbody rigidbody;

			[Token(Token = "0x600261C")]
			[Address(RVA = "0x3126BF8", Offset = "0x3126BF8", VA = "0x3126BF8", Slot = "4")]
			protected override float GetLength()
			{
				return default(float);
			}

			[Token(Token = "0x600261D")]
			[Address(RVA = "0x3126C9C", Offset = "0x3126C9C", VA = "0x3126C9C", Slot = "5")]
			protected override void CrossFadeStart()
			{
			}

			[Token(Token = "0x600261E")]
			[Address(RVA = "0x3126D0C", Offset = "0x3126D0C", VA = "0x3126D0C", Slot = "6")]
			protected override void OnApply(IKSolverFullBodyBiped solver, float weight)
			{
			}

			[Token(Token = "0x600261F")]
			[Address(RVA = "0x31270D4", Offset = "0x31270D4", VA = "0x31270D4")]
			public HitPointBone()
			{
			}
		}

		[Token(Token = "0x4000C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1471654", Offset = "0x1471654")]
		public HitPointEffector[] effectorHitPoints;

		[Token(Token = "0x4000C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147168C", Offset = "0x147168C")]
		public HitPointBone[] boneHitPoints;

		[Token(Token = "0x17000193")]
		public bool inProgress
		{
			[Token(Token = "0x6000EBB")]
			[Address(RVA = "0x3126530", Offset = "0x3126530", VA = "0x3126530")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000EBC")]
		[Address(RVA = "0x3126600", Offset = "0x3126600", VA = "0x3126600", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6000EBD")]
		[Address(RVA = "0x3126820", Offset = "0x3126820", VA = "0x3126820")]
		public void Hit(Collider collider, Vector3 force, Vector3 point)
		{
		}

		[Token(Token = "0x6000EBE")]
		[Address(RVA = "0x3126B8C", Offset = "0x3126B8C", VA = "0x3126B8C")]
		public HitReaction()
		{
		}
	}
	[Token(Token = "0x20001BE")]
	public class HitReactionVRIK : OffsetModifierVRIK
	{
		[Serializable]
		[Token(Token = "0x2000594")]
		public abstract class Offset
		{
			[Token(Token = "0x400228E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147C634", Offset = "0x147C634")]
			public string name;

			[Token(Token = "0x400228F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147C66C", Offset = "0x147C66C")]
			public Collider collider;

			[Token(Token = "0x4002290")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147C6A4", Offset = "0x147C6A4")]
			[SerializeField]
			private float crossFadeTime;

			[Token(Token = "0x4002291")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147C6F0", Offset = "0x147C6F0")]
			private float <crossFader>k__BackingField;

			[Token(Token = "0x4002292")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147C700", Offset = "0x147C700")]
			private float <timer>k__BackingField;

			[Token(Token = "0x4002293")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147C710", Offset = "0x147C710")]
			private Vector3 <force>k__BackingField;

			[Token(Token = "0x4002294")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147C720", Offset = "0x147C720")]
			private Vector3 <point>k__BackingField;

			[Token(Token = "0x4002295")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float length;

			[Token(Token = "0x4002296")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float crossFadeSpeed;

			[Token(Token = "0x4002297")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float lastTime;

			[Token(Token = "0x17000506")]
			protected float crossFader
			{
				[Token(Token = "0x6002620")]
				[Address(RVA = "0x3127C54", Offset = "0x3127C54", VA = "0x3127C54")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1488334", Offset = "0x1488334")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6002621")]
				[Address(RVA = "0x3127C5C", Offset = "0x3127C5C", VA = "0x3127C5C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1488344", Offset = "0x1488344")]
				private set
				{
				}
			}

			[Token(Token = "0x17000507")]
			protected float timer
			{
				[Token(Token = "0x6002622")]
				[Address(RVA = "0x3127C64", Offset = "0x3127C64", VA = "0x3127C64")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1488354", Offset = "0x1488354")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6002623")]
				[Address(RVA = "0x3127C6C", Offset = "0x3127C6C", VA = "0x3127C6C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1488364", Offset = "0x1488364")]
				private set
				{
				}
			}

			[Token(Token = "0x17000508")]
			protected Vector3 force
			{
				[Token(Token = "0x6002624")]
				[Address(RVA = "0x3127C74", Offset = "0x3127C74", VA = "0x3127C74")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1488374", Offset = "0x1488374")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6002625")]
				[Address(RVA = "0x3127C80", Offset = "0x3127C80", VA = "0x3127C80")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1488384", Offset = "0x1488384")]
				private set
				{
				}
			}

			[Token(Token = "0x17000509")]
			protected Vector3 point
			{
				[Token(Token = "0x6002626")]
				[Address(RVA = "0x3127C8C", Offset = "0x3127C8C", VA = "0x3127C8C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1488394", Offset = "0x1488394")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6002627")]
				[Address(RVA = "0x3127C98", Offset = "0x3127C98", VA = "0x3127C98")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14883A4", Offset = "0x14883A4")]
				private set
				{
				}
			}

			[Token(Token = "0x6002628")]
			[Address(RVA = "0x3127B0C", Offset = "0x3127B0C", VA = "0x3127B0C")]
			public void Hit(Vector3 force, AnimationCurve[] curves, Vector3 point)
			{
			}

			[Token(Token = "0x6002629")]
			[Address(RVA = "0x3127770", Offset = "0x3127770", VA = "0x3127770")]
			public void Apply(VRIK ik, AnimationCurve[] curves, float weight)
			{
			}

			[Token(Token = "0x600262A")]
			protected abstract float GetLength(AnimationCurve[] curves);

			[Token(Token = "0x600262B")]
			protected abstract void CrossFadeStart();

			[Token(Token = "0x600262C")]
			protected abstract void OnApply(VRIK ik, AnimationCurve[] curves, float weight);

			[Token(Token = "0x600262D")]
			[Address(RVA = "0x3127CA4", Offset = "0x3127CA4", VA = "0x3127CA4")]
			protected Offset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000595")]
		public class PositionOffset : Offset
		{
			[Serializable]
			[Token(Token = "0x2000792")]
			public class PositionOffsetLink
			{
				[Token(Token = "0x4002A18")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147E0F4", Offset = "0x147E0F4")]
				public IKSolverVR.PositionOffset positionOffset;

				[Token(Token = "0x4002A19")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147E12C", Offset = "0x147E12C")]
				public float weight;

				[Token(Token = "0x4002A1A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private Vector3 lastValue;

				[Token(Token = "0x4002A1B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
				private Vector3 current;

				[Token(Token = "0x6002C32")]
				[Address(RVA = "0x3128160", Offset = "0x3128160", VA = "0x3128160")]
				public void Apply(VRIK ik, Vector3 offset, float crossFader)
				{
				}

				[Token(Token = "0x6002C33")]
				[Address(RVA = "0x3127F1C", Offset = "0x3127F1C", VA = "0x3127F1C")]
				public void CrossFadeStart()
				{
				}

				[Token(Token = "0x6002C34")]
				[Address(RVA = "0x312827C", Offset = "0x312827C", VA = "0x312827C")]
				public PositionOffsetLink()
				{
				}
			}

			[Token(Token = "0x4002298")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147C730", Offset = "0x147C730")]
			public int forceDirCurveIndex;

			[Token(Token = "0x4002299")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147C768", Offset = "0x147C768")]
			public int upDirCurveIndex;

			[Token(Token = "0x400229A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147C7A0", Offset = "0x147C7A0")]
			public PositionOffsetLink[] offsetLinks;

			[Token(Token = "0x600262E")]
			[Address(RVA = "0x3127CB8", Offset = "0x3127CB8", VA = "0x3127CB8", Slot = "4")]
			protected override float GetLength(AnimationCurve[] curves)
			{
				return default(float);
			}

			[Token(Token = "0x600262F")]
			[Address(RVA = "0x3127EB0", Offset = "0x3127EB0", VA = "0x3127EB0", Slot = "5")]
			protected override void CrossFadeStart()
			{
			}

			[Token(Token = "0x6002630")]
			[Address(RVA = "0x3127F30", Offset = "0x3127F30", VA = "0x3127F30", Slot = "6")]
			protected override void OnApply(VRIK ik, AnimationCurve[] curves, float weight)
			{
			}

			[Token(Token = "0x6002631")]
			[Address(RVA = "0x3128260", Offset = "0x3128260", VA = "0x3128260")]
			public PositionOffset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000596")]
		public class RotationOffset : Offset
		{
			[Serializable]
			[Token(Token = "0x2000793")]
			public class RotationOffsetLink
			{
				[Token(Token = "0x4002A1C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147E164", Offset = "0x147E164")]
				public IKSolverVR.RotationOffset rotationOffset;

				[Token(Token = "0x4002A1D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147E19C", Offset = "0x147E19C")]
				[AttributeAttribute(Name = "RangeAttribute", RVA = "0x147E19C", Offset = "0x147E19C")]
				public float weight;

				[Token(Token = "0x4002A1E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private Quaternion lastValue;

				[Token(Token = "0x4002A1F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private Quaternion current;

				[Token(Token = "0x6002C35")]
				[Address(RVA = "0x31286F8", Offset = "0x31286F8", VA = "0x31286F8")]
				public void Apply(VRIK ik, Quaternion offset, float crossFader)
				{
				}

				[Token(Token = "0x6002C36")]
				[Address(RVA = "0x31283CC", Offset = "0x31283CC", VA = "0x31283CC")]
				public void CrossFadeStart()
				{
				}

				[Token(Token = "0x6002C37")]
				[Address(RVA = "0x3128834", Offset = "0x3128834", VA = "0x3128834")]
				public RotationOffsetLink()
				{
				}
			}

			[Token(Token = "0x400229B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147C7D8", Offset = "0x147C7D8")]
			public int curveIndex;

			[Token(Token = "0x400229C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147C810", Offset = "0x147C810")]
			public RotationOffsetLink[] offsetLinks;

			[Token(Token = "0x400229D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Rigidbody rigidbody;

			[Token(Token = "0x6002632")]
			[Address(RVA = "0x3128284", Offset = "0x3128284", VA = "0x3128284", Slot = "4")]
			protected override float GetLength(AnimationCurve[] curves)
			{
				return default(float);
			}

			[Token(Token = "0x6002633")]
			[Address(RVA = "0x3128368", Offset = "0x3128368", VA = "0x3128368", Slot = "5")]
			protected override void CrossFadeStart()
			{
			}

			[Token(Token = "0x6002634")]
			[Address(RVA = "0x31283D8", Offset = "0x31283D8", VA = "0x31283D8", Slot = "6")]
			protected override void OnApply(VRIK ik, AnimationCurve[] curves, float weight)
			{
			}

			[Token(Token = "0x6002635")]
			[Address(RVA = "0x3128820", Offset = "0x3128820", VA = "0x3128820")]
			public RotationOffset()
			{
			}
		}

		[Token(Token = "0x4000C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve[] offsetCurves;

		[Token(Token = "0x4000C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x14716C4", Offset = "0x14716C4")]
		public PositionOffset[] positionOffsets;

		[Token(Token = "0x4000C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x14716FC", Offset = "0x14716FC")]
		public RotationOffset[] rotationOffsets;

		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0x31276A4", Offset = "0x31276A4", VA = "0x31276A4", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0x31278C4", Offset = "0x31278C4", VA = "0x31278C4")]
		public void Hit(Collider collider, Vector3 force, Vector3 point)
		{
		}

		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0x3127C4C", Offset = "0x3127C4C", VA = "0x3127C4C")]
		public HitReactionVRIK()
		{
		}
	}
	[Token(Token = "0x20001BF")]
	public class Inertia : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x2000597")]
		public class Body
		{
			[Serializable]
			[Token(Token = "0x2000794")]
			public class EffectorLink
			{
				[Token(Token = "0x4002A20")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147E1F0", Offset = "0x147E1F0")]
				public FullBodyBipedEffector effector;

				[Token(Token = "0x4002A21")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147E228", Offset = "0x147E228")]
				public float weight;

				[Token(Token = "0x6002C38")]
				[Address(RVA = "0x2E6CD00", Offset = "0x2E6CD00", VA = "0x2E6CD00")]
				public EffectorLink()
				{
				}
			}

			[Token(Token = "0x400229E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147C848", Offset = "0x147C848")]
			public Transform transform;

			[Token(Token = "0x400229F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147C880", Offset = "0x147C880")]
			public EffectorLink[] effectorLinks;

			[Token(Token = "0x40022A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147C8B8", Offset = "0x147C8B8")]
			public float speed;

			[Token(Token = "0x40022A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147C8F0", Offset = "0x147C8F0")]
			public float acceleration;

			[Token(Token = "0x40022A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147C928", Offset = "0x147C928")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x147C928", Offset = "0x147C928")]
			public float matchVelocity;

			[Token(Token = "0x40022A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147C97C", Offset = "0x147C97C")]
			public float gravity;

			[Token(Token = "0x40022A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 delta;

			[Token(Token = "0x40022A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Vector3 lazyPoint;

			[Token(Token = "0x40022A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Vector3 direction;

			[Token(Token = "0x40022A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private Vector3 lastPosition;

			[Token(Token = "0x40022A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private bool firstUpdate;

			[Token(Token = "0x6002636")]
			[Address(RVA = "0x2E6C6D0", Offset = "0x2E6C6D0", VA = "0x2E6C6D0")]
			public void Reset()
			{
			}

			[Token(Token = "0x6002637")]
			[Address(RVA = "0x2E6C890", Offset = "0x2E6C890", VA = "0x2E6C890")]
			public void Update(IKSolverFullBodyBiped solver, float weight, float deltaTime)
			{
			}

			[Token(Token = "0x6002638")]
			[Address(RVA = "0x2E6CCE4", Offset = "0x2E6CCE4", VA = "0x2E6CCE4")]
			public Body()
			{
			}
		}

		[Token(Token = "0x4000C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1471734", Offset = "0x1471734")]
		public Body[] bodies;

		[Token(Token = "0x4000C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147176C", Offset = "0x147176C")]
		public OffsetLimits[] limits;

		[Token(Token = "0x6000EC2")]
		[Address(RVA = "0x2E6C658", Offset = "0x2E6C658", VA = "0x2E6C658")]
		public void ResetBodies()
		{
		}

		[Token(Token = "0x6000EC3")]
		[Address(RVA = "0x2E6C7AC", Offset = "0x2E6C7AC", VA = "0x2E6C7AC", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6000EC4")]
		[Address(RVA = "0x2E6CCC4", Offset = "0x2E6CCC4", VA = "0x2E6CCC4")]
		public Inertia()
		{
		}
	}
	[Token(Token = "0x20001C0")]
	public class LookAtController : MonoBehaviour
	{
		[Token(Token = "0x4000C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LookAtIK ik;

		[Token(Token = "0x4000C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x14717A4", Offset = "0x14717A4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x14717A4", Offset = "0x14717A4")]
		public Transform target;

		[Token(Token = "0x4000C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1471804", Offset = "0x1471804")]
		public float weight;

		[Token(Token = "0x4000C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 offset;

		[Token(Token = "0x4000C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147181C", Offset = "0x147181C")]
		public float targetSwitchSmoothTime;

		[Token(Token = "0x4000C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1471854", Offset = "0x1471854")]
		public float weightSmoothTime;

		[Token(Token = "0x4000C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x147188C", Offset = "0x147188C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147188C", Offset = "0x147188C")]
		public bool smoothTurnTowardsTarget;

		[Token(Token = "0x4000C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x14718EC", Offset = "0x14718EC")]
		public float maxRadiansDelta;

		[Token(Token = "0x4000C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1471924", Offset = "0x1471924")]
		public float maxMagnitudeDelta;

		[Token(Token = "0x4000C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147195C", Offset = "0x147195C")]
		public float slerpSpeed;

		[Token(Token = "0x4000C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1471994", Offset = "0x1471994")]
		public Vector3 pivotOffsetFromRoot;

		[Token(Token = "0x4000C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x14719CC", Offset = "0x14719CC")]
		public float minDistance;

		[Token(Token = "0x4000C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1471A04", Offset = "0x1471A04")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1471A04", Offset = "0x1471A04")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1471A04", Offset = "0x1471A04")]
		public float maxRootAngle;

		[Token(Token = "0x4000C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform lastTarget;

		[Token(Token = "0x4000C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float switchWeight;

		[Token(Token = "0x4000C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float switchWeightV;

		[Token(Token = "0x4000C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float weightV;

		[Token(Token = "0x4000C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Vector3 lastPosition;

		[Token(Token = "0x4000C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 dir;

		[Token(Token = "0x4000C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool lastSmoothTowardsTarget;

		[Token(Token = "0x17000194")]
		private Vector3 pivot
		{
			[Token(Token = "0x6000EC7")]
			[Address(RVA = "0x2E7700C", Offset = "0x2E7700C", VA = "0x2E7700C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0x2E76F24", Offset = "0x2E76F24", VA = "0x2E76F24")]
		private void Start()
		{
		}

		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0x2E77158", Offset = "0x2E77158", VA = "0x2E77158")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000EC8")]
		[Address(RVA = "0x2E77828", Offset = "0x2E77828", VA = "0x2E77828")]
		private void ApplyMinDistance()
		{
		}

		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0x2E779C4", Offset = "0x2E779C4", VA = "0x2E779C4")]
		private void RootRotation()
		{
		}

		[Token(Token = "0x6000ECA")]
		[Address(RVA = "0x2E77CE0", Offset = "0x2E77CE0", VA = "0x2E77CE0")]
		public LookAtController()
		{
		}
	}
	[Token(Token = "0x20001C1")]
	public abstract class OffsetModifier : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000598")]
		public class OffsetLimits
		{
			[Token(Token = "0x40022A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147C9B4", Offset = "0x147C9B4")]
			public FullBodyBipedEffector effector;

			[Token(Token = "0x40022AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147C9EC", Offset = "0x147C9EC")]
			public float spring;

			[Token(Token = "0x40022AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147CA24", Offset = "0x147CA24")]
			public bool x;

			[Token(Token = "0x40022AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147CA5C", Offset = "0x147CA5C")]
			public bool y;

			[Token(Token = "0x40022AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147CA94", Offset = "0x147CA94")]
			public bool z;

			[Token(Token = "0x40022AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147CACC", Offset = "0x147CACC")]
			public float minX;

			[Token(Token = "0x40022AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147CB04", Offset = "0x147CB04")]
			public float maxX;

			[Token(Token = "0x40022B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147CB3C", Offset = "0x147CB3C")]
			public float minY;

			[Token(Token = "0x40022B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147CB74", Offset = "0x147CB74")]
			public float maxY;

			[Token(Token = "0x40022B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147CBAC", Offset = "0x147CBAC")]
			public float minZ;

			[Token(Token = "0x40022B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147CBE4", Offset = "0x147CBE4")]
			public float maxZ;

			[Token(Token = "0x6002639")]
			[Address(RVA = "0x2E78120", Offset = "0x2E78120", VA = "0x2E78120")]
			public void Apply(IKEffector e, Quaternion rootRotation)
			{
			}

			[Token(Token = "0x600263A")]
			[Address(RVA = "0x2E7866C", Offset = "0x2E7866C", VA = "0x2E7866C")]
			private float SpringAxis(float value, float min, float max)
			{
				return default(float);
			}

			[Token(Token = "0x600263B")]
			[Address(RVA = "0x2E7869C", Offset = "0x2E7869C", VA = "0x2E7869C")]
			private float Spring(float value, float limit, bool negative)
			{
				return default(float);
			}

			[Token(Token = "0x600263C")]
			[Address(RVA = "0x2E78774", Offset = "0x2E78774", VA = "0x2E78774")]
			public OffsetLimits()
			{
			}
		}

		[Token(Token = "0x2000599")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A00C", Offset = "0x146A00C")]
		private sealed class <Initiate>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OffsetModifier <>4__this;

			[Token(Token = "0x1700050A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002640")]
				[Address(RVA = "0x2E785FC", Offset = "0x2E785FC", VA = "0x2E785FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700050B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002642")]
				[Address(RVA = "0x2E78664", Offset = "0x2E78664", VA = "0x2E78664", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600263D")]
			[Address(RVA = "0x2E77FE8", Offset = "0x2E77FE8", VA = "0x2E77FE8")]
			[DebuggerHidden]
			public <Initiate>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x600263E")]
			[Address(RVA = "0x2E7849C", Offset = "0x2E7849C", VA = "0x2E7849C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600263F")]
			[Address(RVA = "0x2E784A0", Offset = "0x2E784A0", VA = "0x2E784A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002641")]
			[Address(RVA = "0x2E78604", Offset = "0x2E78604", VA = "0x2E78604", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1471A80", Offset = "0x1471A80")]
		public float weight;

		[Token(Token = "0x4000C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1471AB8", Offset = "0x1471AB8")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x4000C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected float lastTime;

		[Token(Token = "0x17000195")]
		protected float deltaTime
		{
			[Token(Token = "0x6000ECB")]
			[Address(RVA = "0x2E6C864", Offset = "0x2E6C864", VA = "0x2E6C864")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000ECC")]
		protected abstract void OnModifyOffset();

		[Token(Token = "0x6000ECD")]
		[Address(RVA = "0x2E77F40", Offset = "0x2E77F40", VA = "0x2E77F40", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000ECE")]
		[Address(RVA = "0x2E77F6C", Offset = "0x2E77F6C", VA = "0x2E77F6C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1482810", Offset = "0x1482810")]
		private IEnumerator Initiate()
		{
			return null;
		}

		[Token(Token = "0x6000ECF")]
		[Address(RVA = "0x2E78014", Offset = "0x2E78014", VA = "0x2E78014")]
		private void ModifyOffset()
		{
		}

		[Token(Token = "0x6000ED0")]
		[Address(RVA = "0x2E6CC08", Offset = "0x2E6CC08", VA = "0x2E6CC08")]
		protected void ApplyLimits(OffsetLimits[] limits)
		{
		}

		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0x2E78380", Offset = "0x2E78380", VA = "0x2E78380", Slot = "6")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0x2E6CCD4", Offset = "0x2E6CCD4", VA = "0x2E6CCD4")]
		protected OffsetModifier()
		{
		}
	}
	[Token(Token = "0x20001C2")]
	public abstract class OffsetModifierVRIK : MonoBehaviour
	{
		[Token(Token = "0x200059A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A01C", Offset = "0x146A01C")]
		private sealed class <Initiate>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OffsetModifierVRIK <>4__this;

			[Token(Token = "0x1700050C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002646")]
				[Address(RVA = "0x2E78C14", Offset = "0x2E78C14", VA = "0x2E78C14", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700050D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002648")]
				[Address(RVA = "0x2E78C7C", Offset = "0x2E78C7C", VA = "0x2E78C7C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002643")]
			[Address(RVA = "0x2E78850", Offset = "0x2E78850", VA = "0x2E78850")]
			[DebuggerHidden]
			public <Initiate>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6002644")]
			[Address(RVA = "0x2E78AB4", Offset = "0x2E78AB4", VA = "0x2E78AB4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002645")]
			[Address(RVA = "0x2E78AB8", Offset = "0x2E78AB8", VA = "0x2E78AB8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002647")]
			[Address(RVA = "0x2E78C1C", Offset = "0x2E78C1C", VA = "0x2E78C1C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1471AF0", Offset = "0x1471AF0")]
		public float weight;

		[Token(Token = "0x4000C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1471B28", Offset = "0x1471B28")]
		public VRIK ik;

		[Token(Token = "0x4000C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float lastTime;

		[Token(Token = "0x17000196")]
		protected float deltaTime
		{
			[Token(Token = "0x6000ED3")]
			[Address(RVA = "0x2E7877C", Offset = "0x2E7877C", VA = "0x2E7877C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000ED4")]
		protected abstract void OnModifyOffset();

		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0x2E787A8", Offset = "0x2E787A8", VA = "0x2E787A8", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0x2E787D4", Offset = "0x2E787D4", VA = "0x2E787D4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1482874", Offset = "0x1482874")]
		private IEnumerator Initiate()
		{
			return null;
		}

		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0x2E7887C", Offset = "0x2E7887C", VA = "0x2E7887C")]
		private void ModifyOffset()
		{
		}

		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0x2E78988", Offset = "0x2E78988", VA = "0x2E78988", Slot = "6")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000ED9")]
		[Address(RVA = "0x2E78AA4", Offset = "0x2E78AA4", VA = "0x2E78AA4")]
		protected OffsetModifierVRIK()
		{
		}
	}
	[Token(Token = "0x20001C3")]
	public class OffsetPose : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200059B")]
		public class EffectorLink
		{
			[Token(Token = "0x40022BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FullBodyBipedEffector effector;

			[Token(Token = "0x40022BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 offset;

			[Token(Token = "0x40022BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 pin;

			[Token(Token = "0x40022BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Vector3 pinWeight;

			[Token(Token = "0x6002649")]
			[Address(RVA = "0x2E78D44", Offset = "0x2E78D44", VA = "0x2E78D44")]
			public void Apply(IKSolverFullBodyBiped solver, float weight, Quaternion rotation)
			{
			}

			[Token(Token = "0x600264A")]
			[Address(RVA = "0x2E791A0", Offset = "0x2E791A0", VA = "0x2E791A0")]
			public EffectorLink()
			{
			}
		}

		[Token(Token = "0x4000C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EffectorLink[] effectorLinks;

		[Token(Token = "0x6000EDA")]
		[Address(RVA = "0x2E78C84", Offset = "0x2E78C84", VA = "0x2E78C84")]
		public void Apply(IKSolverFullBodyBiped solver, float weight)
		{
		}

		[Token(Token = "0x6000EDB")]
		[Address(RVA = "0x2E7907C", Offset = "0x2E7907C", VA = "0x2E7907C")]
		public void Apply(IKSolverFullBodyBiped solver, float weight, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0x2E79134", Offset = "0x2E79134", VA = "0x2E79134")]
		public OffsetPose()
		{
		}
	}
	[Token(Token = "0x20001C4")]
	public class PenetrationAvoidance : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x200059C")]
		public class Avoider
		{
			[Serializable]
			[Token(Token = "0x2000795")]
			public class EffectorLink
			{
				[Token(Token = "0x4002A22")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147E260", Offset = "0x147E260")]
				public FullBodyBipedEffector effector;

				[Token(Token = "0x4002A23")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147E298", Offset = "0x147E298")]
				public float weight;

				[Token(Token = "0x6002C39")]
				[Address(RVA = "0x2E79858", Offset = "0x2E79858", VA = "0x2E79858")]
				public EffectorLink()
				{
				}
			}

			[Token(Token = "0x40022BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147CC1C", Offset = "0x147CC1C")]
			public Transform[] raycastFrom;

			[Token(Token = "0x40022BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147CC54", Offset = "0x147CC54")]
			public Transform raycastTo;

			[Token(Token = "0x40022C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147CC8C", Offset = "0x147CC8C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x147CC8C", Offset = "0x147CC8C")]
			public float raycastRadius;

			[Token(Token = "0x40022C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147CCE0", Offset = "0x147CCE0")]
			public EffectorLink[] effectors;

			[Token(Token = "0x40022C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147CD18", Offset = "0x147CD18")]
			public float smoothTimeIn;

			[Token(Token = "0x40022C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147CD50", Offset = "0x147CD50")]
			public float smoothTimeOut;

			[Token(Token = "0x40022C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147CD88", Offset = "0x147CD88")]
			public LayerMask layers;

			[Token(Token = "0x40022C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Vector3 offset;

			[Token(Token = "0x40022C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Vector3 offsetTarget;

			[Token(Token = "0x40022C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private Vector3 offsetV;

			[Token(Token = "0x600264B")]
			[Address(RVA = "0x2E7922C", Offset = "0x2E7922C", VA = "0x2E7922C")]
			public void Solve(IKSolverFullBodyBiped solver, float weight)
			{
			}

			[Token(Token = "0x600264C")]
			[Address(RVA = "0x2E79438", Offset = "0x2E79438", VA = "0x2E79438")]
			private Vector3 GetOffsetTarget(IKSolverFullBodyBiped solver)
			{
				return default(Vector3);
			}

			[Token(Token = "0x600264D")]
			[Address(RVA = "0x2E795D0", Offset = "0x2E795D0", VA = "0x2E795D0")]
			private Vector3 Raycast(Vector3 from, Vector3 to)
			{
				return default(Vector3);
			}

			[Token(Token = "0x600264E")]
			[Address(RVA = "0x2E79844", Offset = "0x2E79844", VA = "0x2E79844")]
			public Avoider()
			{
			}
		}

		[Token(Token = "0x4000C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1471B60", Offset = "0x1471B60")]
		public Avoider[] avoiders;

		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0x2E791A8", Offset = "0x2E791A8", VA = "0x2E791A8", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0x2E79428", Offset = "0x2E79428", VA = "0x2E79428")]
		public PenetrationAvoidance()
		{
		}
	}
	[Token(Token = "0x20001C5")]
	public class Recoil : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x200059D")]
		public class RecoilOffset
		{
			[Serializable]
			[Token(Token = "0x2000796")]
			public class EffectorLink
			{
				[Token(Token = "0x4002A24")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147E2D0", Offset = "0x147E2D0")]
				public FullBodyBipedEffector effector;

				[Token(Token = "0x4002A25")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147E308", Offset = "0x147E308")]
				public float weight;

				[Token(Token = "0x6002C3A")]
				[Address(RVA = "0x2E7C960", Offset = "0x2E7C960", VA = "0x2E7C960")]
				public EffectorLink()
				{
				}
			}

			[Token(Token = "0x40022C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147CDC0", Offset = "0x147CDC0")]
			public Vector3 offset;

			[Token(Token = "0x40022C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147CDF8", Offset = "0x147CDF8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x147CDF8", Offset = "0x147CDF8")]
			public float additivity;

			[Token(Token = "0x40022CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147CE4C", Offset = "0x147CE4C")]
			public float maxAdditiveOffsetMag;

			[Token(Token = "0x40022CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147CE84", Offset = "0x147CE84")]
			public EffectorLink[] effectorLinks;

			[Token(Token = "0x40022CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 additiveOffset;

			[Token(Token = "0x40022CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Vector3 lastOffset;

			[Token(Token = "0x600264F")]
			[Address(RVA = "0x2E7B650", Offset = "0x2E7B650", VA = "0x2E7B650")]
			public void Start()
			{
			}

			[Token(Token = "0x6002650")]
			[Address(RVA = "0x2E7C204", Offset = "0x2E7C204", VA = "0x2E7C204")]
			public void Apply(IKSolverFullBodyBiped solver, Quaternion rotation, float masterWeight, float length, float timeLeft)
			{
			}

			[Token(Token = "0x6002651")]
			[Address(RVA = "0x2E7C94C", Offset = "0x2E7C94C", VA = "0x2E7C94C")]
			public RecoilOffset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200059E")]
		public enum Handedness
		{
			[Token(Token = "0x40022CF")]
			Right,
			[Token(Token = "0x40022D0")]
			Left
		}

		[Token(Token = "0x4000C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1471B98", Offset = "0x1471B98")]
		public AimIK aimIK;

		[Token(Token = "0x4000C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1471BD0", Offset = "0x1471BD0")]
		public bool aimIKSolvedLast;

		[Token(Token = "0x4000C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1471C08", Offset = "0x1471C08")]
		public Handedness handedness;

		[Token(Token = "0x4000C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1471C40", Offset = "0x1471C40")]
		public bool twoHanded;

		[Token(Token = "0x4000C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1471C78", Offset = "0x1471C78")]
		public AnimationCurve recoilWeight;

		[Token(Token = "0x4000C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1471CB0", Offset = "0x1471CB0")]
		public float magnitudeRandom;

		[Token(Token = "0x4000C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1471CE8", Offset = "0x1471CE8")]
		public Vector3 rotationRandom;

		[Token(Token = "0x4000C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1471D20", Offset = "0x1471D20")]
		public Vector3 handRotationOffset;

		[Token(Token = "0x4000C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1471D58", Offset = "0x1471D58")]
		public float blendTime;

		[Token(Token = "0x4000C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x1471D90", Offset = "0x1471D90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1471D90", Offset = "0x1471D90")]
		public RecoilOffset[] offsets;

		[Token(Token = "0x4000C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public Quaternion rotationOffset;

		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float magnitudeMlp;

		[Token(Token = "0x4000C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float endTime;

		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Quaternion handRotation;

		[Token(Token = "0x4000C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Quaternion secondaryHandRelativeRotation;

		[Token(Token = "0x4000CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Quaternion randomRotation;

		[Token(Token = "0x4000CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float length;

		[Token(Token = "0x4000CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private bool initiated;

		[Token(Token = "0x4000CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float blendWeight;

		[Token(Token = "0x4000CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float w;

		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Quaternion primaryHandRotation;

		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool handRotationsSet;

		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private Vector3 aimIKAxis;

		[Token(Token = "0x17000197")]
		public bool isFinished
		{
			[Token(Token = "0x6000EDF")]
			[Address(RVA = "0x2E7B428", Offset = "0x2E7B428", VA = "0x2E7B428")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000198")]
		private IKEffector primaryHandEffector
		{
			[Token(Token = "0x6000EE5")]
			[Address(RVA = "0x2E7C4B8", Offset = "0x2E7C4B8", VA = "0x2E7C4B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000199")]
		private IKEffector secondaryHandEffector
		{
			[Token(Token = "0x6000EE6")]
			[Address(RVA = "0x2E7C4F8", Offset = "0x2E7C4F8", VA = "0x2E7C4F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019A")]
		private Transform primaryHand
		{
			[Token(Token = "0x6000EE7")]
			[Address(RVA = "0x2E7C478", Offset = "0x2E7C478", VA = "0x2E7C478")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019B")]
		private Transform secondaryHand
		{
			[Token(Token = "0x6000EE8")]
			[Address(RVA = "0x2E7C498", Offset = "0x2E7C498", VA = "0x2E7C498")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0x2E7B458", Offset = "0x2E7B458", VA = "0x2E7B458")]
		public void SetHandRotations(Quaternion leftHandRotation, Quaternion rightHandRotation)
		{
		}

		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0x2E7B484", Offset = "0x2E7B484", VA = "0x2E7B484")]
		public void Fire(float magnitude)
		{
		}

		[Token(Token = "0x6000EE2")]
		[Address(RVA = "0x2E7B700", Offset = "0x2E7B700", VA = "0x2E7B700", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6000EE3")]
		[Address(RVA = "0x2E7C538", Offset = "0x2E7C538", VA = "0x2E7C538")]
		private void AfterFBBIK()
		{
		}

		[Token(Token = "0x6000EE4")]
		[Address(RVA = "0x2E7C690", Offset = "0x2E7C690", VA = "0x2E7C690")]
		private void AfterAimIK()
		{
		}

		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0x2E7C6CC", Offset = "0x2E7C6CC", VA = "0x2E7C6CC", Slot = "6")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0x2E7C898", Offset = "0x2E7C898", VA = "0x2E7C898")]
		public Recoil()
		{
		}
	}
	[Token(Token = "0x20001C6")]
	public class ShoulderRotator : MonoBehaviour
	{
		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1471DF0", Offset = "0x1471DF0")]
		public float weight;

		[Token(Token = "0x4000CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1471E28", Offset = "0x1471E28")]
		public float offset;

		[Token(Token = "0x4000CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FullBodyBipedIK ik;

		[Token(Token = "0x4000CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool skip;

		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0x288A5DC", Offset = "0x288A5DC", VA = "0x288A5DC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0x288A6D0", Offset = "0x288A6D0", VA = "0x288A6D0")]
		private void RotateShoulders()
		{
		}

		[Token(Token = "0x6000EED")]
		[Address(RVA = "0x288A7BC", Offset = "0x288A7BC", VA = "0x288A7BC")]
		private void RotateShoulder(FullBodyBipedChain chain, float weight, float offset)
		{
		}

		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0x288AC04", Offset = "0x288AC04", VA = "0x288AC04")]
		private IKMapping.BoneMap GetParentBoneMap(FullBodyBipedChain chain)
		{
			return null;
		}

		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0x288AC3C", Offset = "0x288AC3C", VA = "0x288AC3C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0x288AD58", Offset = "0x288AD58", VA = "0x288AD58")]
		public ShoulderRotator()
		{
		}
	}
	[Token(Token = "0x20001C7")]
	public static class VRIKCalibrator
	{
		[Serializable]
		[Token(Token = "0x200059F")]
		public class Settings
		{
			[Token(Token = "0x40022D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147CEBC", Offset = "0x147CEBC")]
			public float scaleMlp;

			[Token(Token = "0x40022D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147CEF4", Offset = "0x147CEF4")]
			public Vector3 headTrackerForward;

			[Token(Token = "0x40022D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147CF2C", Offset = "0x147CF2C")]
			public Vector3 headTrackerUp;

			[Token(Token = "0x40022D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147CF64", Offset = "0x147CF64")]
			public Vector3 handTrackerForward;

			[Token(Token = "0x40022D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147CF9C", Offset = "0x147CF9C")]
			public Vector3 handTrackerUp;

			[Token(Token = "0x40022D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147CFD4", Offset = "0x147CFD4")]
			public Vector3 footTrackerForward;

			[Token(Token = "0x40022D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147D00C", Offset = "0x147D00C")]
			public Vector3 footTrackerUp;

			[Token(Token = "0x40022D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x147D044", Offset = "0x147D044")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147D044", Offset = "0x147D044")]
			public Vector3 headOffset;

			[Token(Token = "0x40022D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147D094", Offset = "0x147D094")]
			public Vector3 handOffset;

			[Token(Token = "0x40022DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147D0CC", Offset = "0x147D0CC")]
			public float footForwardOffset;

			[Token(Token = "0x40022DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147D104", Offset = "0x147D104")]
			public float footInwardOffset;

			[Token(Token = "0x40022DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147D13C", Offset = "0x147D13C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x147D13C", Offset = "0x147D13C")]
			public float footHeadingOffset;

			[Token(Token = "0x40022DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x147D198", Offset = "0x147D198")]
			public float pelvisPositionWeight;

			[Token(Token = "0x40022DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x147D1B0", Offset = "0x147D1B0")]
			public float pelvisRotationWeight;

			[Token(Token = "0x6002652")]
			[Address(RVA = "0x2891BD0", Offset = "0x2891BD0", VA = "0x2891BD0")]
			public Settings()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005A0")]
		public class CalibrationData
		{
			[Serializable]
			[Token(Token = "0x2000797")]
			public class Target
			{
				[Token(Token = "0x4002A26")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public bool used;

				[Token(Token = "0x4002A27")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				public Vector3 localPosition;

				[Token(Token = "0x4002A28")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public Quaternion localRotation;

				[Token(Token = "0x6002C3B")]
				[Address(RVA = "0x288F694", Offset = "0x288F694", VA = "0x288F694")]
				public Target(Transform t)
				{
				}

				[Token(Token = "0x6002C3C")]
				[Address(RVA = "0x2890210", Offset = "0x2890210", VA = "0x2890210")]
				public void SetTo(Transform t)
				{
				}
			}

			[Token(Token = "0x40022DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float scale;

			[Token(Token = "0x40022E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Target head;

			[Token(Token = "0x40022E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Target leftHand;

			[Token(Token = "0x40022E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Target rightHand;

			[Token(Token = "0x40022E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Target pelvis;

			[Token(Token = "0x40022E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Target leftFoot;

			[Token(Token = "0x40022E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Target rightFoot;

			[Token(Token = "0x40022E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Target leftLegGoal;

			[Token(Token = "0x40022E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Target rightLegGoal;

			[Token(Token = "0x40022E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Vector3 pelvisTargetRight;

			[Token(Token = "0x40022E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public float pelvisPositionWeight;

			[Token(Token = "0x40022EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public float pelvisRotationWeight;

			[Token(Token = "0x6002653")]
			[Address(RVA = "0x288EAD8", Offset = "0x288EAD8", VA = "0x288EAD8")]
			public CalibrationData()
			{
			}
		}

		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0x288D5B8", Offset = "0x288D5B8", VA = "0x288D5B8")]
		public static void RecalibrateScale(VRIK ik, CalibrationData data, Settings settings)
		{
		}

		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0x288D5D0", Offset = "0x288D5D0", VA = "0x288D5D0")]
		public static void RecalibrateScale(VRIK ik, CalibrationData data, float scaleMlp)
		{
		}

		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0x288D768", Offset = "0x288D768", VA = "0x288D768")]
		private static void CalibrateScale(VRIK ik, Settings settings)
		{
		}

		[Token(Token = "0x6000EF4")]
		[Address(RVA = "0x288D61C", Offset = "0x288D61C", VA = "0x288D61C")]
		private static void CalibrateScale(VRIK ik, float scaleMlp = 1f)
		{
		}

		[Token(Token = "0x6000EF5")]
		[Address(RVA = "0x288D780", Offset = "0x288D780", VA = "0x288D780")]
		public static CalibrationData Calibrate(VRIK ik, Settings settings, Transform headTracker, [Optional] Transform bodyTracker, [Optional] Transform leftHandTracker, [Optional] Transform rightHandTracker, [Optional] Transform leftFootTracker, [Optional] Transform rightFootTracker)
		{
			return null;
		}

		[Token(Token = "0x6000EF6")]
		[Address(RVA = "0x288EC50", Offset = "0x288EC50", VA = "0x288EC50")]
		private static void CalibrateLeg(Settings settings, Transform tracker, IKSolverVR.Leg leg, Transform lastBone, Vector3 rootForward, bool isLeft)
		{
		}

		[Token(Token = "0x6000EF7")]
		[Address(RVA = "0x288F758", Offset = "0x288F758", VA = "0x288F758")]
		public static void Calibrate(VRIK ik, CalibrationData data, Transform headTracker, [Optional] Transform bodyTracker, [Optional] Transform leftHandTracker, [Optional] Transform rightHandTracker, [Optional] Transform leftFootTracker, [Optional] Transform rightFootTracker)
		{
		}

		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0x2890270", Offset = "0x2890270", VA = "0x2890270")]
		private static void CalibrateLeg(CalibrationData data, Transform tracker, IKSolverVR.Leg leg, Transform lastBone, Vector3 rootForward, bool isLeft)
		{
		}

		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0x289068C", Offset = "0x289068C", VA = "0x289068C")]
		public static CalibrationData Calibrate(VRIK ik, Transform centerEyeAnchor, Transform leftHandAnchor, Transform rightHandAnchor, Vector3 centerEyePositionOffset, Vector3 centerEyeRotationOffset, Vector3 handPositionOffset, Vector3 handRotationOffset, float scaleMlp = 1f)
		{
			return null;
		}

		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0x28908B0", Offset = "0x28908B0", VA = "0x28908B0")]
		public static void CalibrateHead(VRIK ik, Transform centerEyeAnchor, Vector3 anchorPositionOffset, Vector3 anchorRotationOffset)
		{
		}

		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0x2890FD0", Offset = "0x2890FD0", VA = "0x2890FD0")]
		public static void CalibrateBody(VRIK ik, Transform pelvisTracker, Vector3 trackerPositionOffset, Vector3 trackerRotationOffset)
		{
		}

		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0x2890D84", Offset = "0x2890D84", VA = "0x2890D84")]
		public static void CalibrateHands(VRIK ik, Transform leftHandAnchor, Transform rightHandAnchor, Vector3 anchorPositionOffset, Vector3 anchorRotationOffset)
		{
		}

		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0x28912AC", Offset = "0x28912AC", VA = "0x28912AC")]
		private static void CalibrateHand(Transform hand, Transform forearm, Transform target, Transform anchor, Vector3 positionOffset, Vector3 rotationOffset, bool isLeft)
		{
		}

		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0x28915A8", Offset = "0x28915A8", VA = "0x28915A8")]
		public static Vector3 GuessWristToPalmAxis(Transform hand, Transform forearm)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0x2891780", Offset = "0x2891780", VA = "0x2891780")]
		public static Vector3 GuessPalmToThumbAxis(Transform hand, Transform forearm)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x20001C8")]
	public class VRIKLODController : MonoBehaviour
	{
		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Renderer LODRenderer;

		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float LODDistance;

		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool allowCulled;

		[Token(Token = "0x4000CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private VRIK ik;

		[Token(Token = "0x6000F00")]
		[Address(RVA = "0x2891CA8", Offset = "0x2891CA8", VA = "0x2891CA8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F01")]
		[Address(RVA = "0x2891D08", Offset = "0x2891D08", VA = "0x2891D08")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F02")]
		[Address(RVA = "0x2891D3C", Offset = "0x2891D3C", VA = "0x2891D3C")]
		private int GetLODLevel()
		{
			return default(int);
		}

		[Token(Token = "0x6000F03")]
		[Address(RVA = "0x2891EC4", Offset = "0x2891EC4", VA = "0x2891EC4")]
		public VRIKLODController()
		{
		}
	}
	[Token(Token = "0x20001C9")]
	public class VRIKRootController : MonoBehaviour
	{
		[Token(Token = "0x4000CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1471E60", Offset = "0x1471E60")]
		private Vector3 <pelvisTargetRight>k__BackingField;

		[Token(Token = "0x4000CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform pelvisTarget;

		[Token(Token = "0x4000CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform leftFootTarget;

		[Token(Token = "0x4000CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform rightFootTarget;

		[Token(Token = "0x4000CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private VRIK ik;

		[Token(Token = "0x1700019C")]
		public Vector3 pelvisTargetRight
		{
			[Token(Token = "0x6000F04")]
			[Address(RVA = "0x2891EDC", Offset = "0x2891EDC", VA = "0x2891EDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14828D8", Offset = "0x14828D8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000F05")]
			[Address(RVA = "0x2891EE8", Offset = "0x2891EE8", VA = "0x2891EE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14828E8", Offset = "0x14828E8")]
			private set
			{
			}
		}

		[Token(Token = "0x6000F06")]
		[Address(RVA = "0x2891EF4", Offset = "0x2891EF4", VA = "0x2891EF4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F07")]
		[Address(RVA = "0x288F438", Offset = "0x288F438", VA = "0x288F438")]
		public void Calibrate()
		{
		}

		[Token(Token = "0x6000F08")]
		[Address(RVA = "0x28904E4", Offset = "0x28904E4", VA = "0x28904E4")]
		public void Calibrate(VRIKCalibrator.CalibrationData data)
		{
		}

		[Token(Token = "0x6000F09")]
		[Address(RVA = "0x2891FF0", Offset = "0x2891FF0", VA = "0x2891FF0")]
		private void OnPreUpdate()
		{
		}

		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0x2892494", Offset = "0x2892494", VA = "0x2892494")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000F0B")]
		[Address(RVA = "0x28925B0", Offset = "0x28925B0", VA = "0x28925B0")]
		public VRIKRootController()
		{
		}
	}
}
namespace RootMotion.Demos
{
	[Token(Token = "0x20001CA")]
	public class FKOffset : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005A1")]
		public class Offset
		{
			[Token(Token = "0x40022EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[HideInInspector]
			public string name;

			[Token(Token = "0x40022EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public HumanBodyBones bone;

			[Token(Token = "0x40022ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 rotationOffset;

			[Token(Token = "0x40022EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Transform t;

			[Token(Token = "0x6002654")]
			[Address(RVA = "0x2D4615C", Offset = "0x2D4615C", VA = "0x2D4615C")]
			public void Apply(Animator animator)
			{
			}

			[Token(Token = "0x6002655")]
			[Address(RVA = "0x2D46408", Offset = "0x2D46408", VA = "0x2D46408")]
			public Offset()
			{
			}
		}

		[Token(Token = "0x4000CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Offset[] offsets;

		[Token(Token = "0x4000CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator animator;

		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0x2D46084", Offset = "0x2D46084", VA = "0x2D46084")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0x2D460E4", Offset = "0x2D460E4", VA = "0x2D460E4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0x2D46318", Offset = "0x2D46318", VA = "0x2D46318")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000F0F")]
		[Address(RVA = "0x2D46400", Offset = "0x2D46400", VA = "0x2D46400")]
		public FKOffset()
		{
		}
	}
	[Token(Token = "0x20001CB")]
	public class AimBoxing : MonoBehaviour
	{
		[Token(Token = "0x4000CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AimIK aimIK;

		[Token(Token = "0x4000CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform pin;

		[Token(Token = "0x6000F10")]
		[Address(RVA = "0x2D3D618", Offset = "0x2D3D618", VA = "0x2D3D618")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000F11")]
		[Address(RVA = "0x2D3D69C", Offset = "0x2D3D69C", VA = "0x2D3D69C")]
		public AimBoxing()
		{
		}
	}
	[Token(Token = "0x20001CC")]
	public class AimSwing : MonoBehaviour
	{
		[Token(Token = "0x4000CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AimIK ik;

		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1471E70", Offset = "0x1471E70")]
		public Vector3 animatedSwingDirection;

		[Token(Token = "0x6000F12")]
		[Address(RVA = "0x2D3D6A4", Offset = "0x2D3D6A4", VA = "0x2D3D6A4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000F13")]
		[Address(RVA = "0x2D3D7AC", Offset = "0x2D3D7AC", VA = "0x2D3D7AC")]
		public AimSwing()
		{
		}
	}
	[Token(Token = "0x20001CD")]
	public class SecondHandOnGun : MonoBehaviour
	{
		[Token(Token = "0x4000CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AimIK aim;

		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LimbIK leftArmIK;

		[Token(Token = "0x4000CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform leftHand;

		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform rightHand;

		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 leftHandPositionOffset;

		[Token(Token = "0x4000CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 leftHandRotationOffset;

		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 leftHandPosRelToRight;

		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Quaternion leftHandRotRelToRight;

		[Token(Token = "0x6000F14")]
		[Address(RVA = "0x26632A4", Offset = "0x26632A4", VA = "0x26632A4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F15")]
		[Address(RVA = "0x26632E8", Offset = "0x26632E8", VA = "0x26632E8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000F16")]
		[Address(RVA = "0x2663548", Offset = "0x2663548", VA = "0x2663548")]
		public SecondHandOnGun()
		{
		}
	}
	[Token(Token = "0x20001CE")]
	public class SimpleAimingSystem : MonoBehaviour
	{
		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1471EA8", Offset = "0x1471EA8")]
		public AimPoser aimPoser;

		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1471EE0", Offset = "0x1471EE0")]
		public AimIK aim;

		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1471F18", Offset = "0x1471F18")]
		public LookAtIK lookAt;

		[Token(Token = "0x4000CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1471F50", Offset = "0x1471F50")]
		public Animator animator;

		[Token(Token = "0x4000CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1471F88", Offset = "0x1471F88")]
		public float crossfadeTime;

		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1471FC0", Offset = "0x1471FC0")]
		public float minAimDistance;

		[Token(Token = "0x4000CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AimPoser.Pose aimPose;

		[Token(Token = "0x4000CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AimPoser.Pose lastPose;

		[Token(Token = "0x6000F17")]
		[Address(RVA = "0x2663550", Offset = "0x2663550", VA = "0x2663550")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F18")]
		[Address(RVA = "0x2663594", Offset = "0x2663594", VA = "0x2663594")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000F19")]
		[Address(RVA = "0x26636E8", Offset = "0x26636E8", VA = "0x26636E8")]
		private void Pose()
		{
		}

		[Token(Token = "0x6000F1A")]
		[Address(RVA = "0x2663900", Offset = "0x2663900", VA = "0x2663900")]
		private void LimitAimTarget()
		{
		}

		[Token(Token = "0x6000F1B")]
		[Address(RVA = "0x2663C40", Offset = "0x2663C40", VA = "0x2663C40")]
		private void DirectCrossFade(string state, float target)
		{
		}

		[Token(Token = "0x6000F1C")]
		[Address(RVA = "0x2663D18", Offset = "0x2663D18", VA = "0x2663D18")]
		public SimpleAimingSystem()
		{
		}
	}
	[Token(Token = "0x20001CF")]
	public class TerrainOffset : MonoBehaviour
	{
		[Token(Token = "0x4000CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AimIK aimIK;

		[Token(Token = "0x4000CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 raycastOffset;

		[Token(Token = "0x4000CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public LayerMask raycastLayers;

		[Token(Token = "0x4000CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float min;

		[Token(Token = "0x4000CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float max;

		[Token(Token = "0x4000CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float lerpSpeed;

		[Token(Token = "0x4000CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private RaycastHit hit;

		[Token(Token = "0x4000CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 offset;

		[Token(Token = "0x6000F1D")]
		[Address(RVA = "0x2664AE4", Offset = "0x2664AE4", VA = "0x2664AE4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000F1E")]
		[Address(RVA = "0x2664D48", Offset = "0x2664D48", VA = "0x2664D48")]
		private Vector3 GetGroundHeightOffset(Vector3 worldPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0x2664F98", Offset = "0x2664F98", VA = "0x2664F98")]
		public TerrainOffset()
		{
		}
	}
	[Token(Token = "0x20001D0")]
	public class BipedIKvsAnimatorIK : MonoBehaviour
	{
		[Token(Token = "0x4000CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x1471FF8", Offset = "0x1471FF8")]
		public Animator animator;

		[Token(Token = "0x4000CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BipedIK bipedIK;

		[Token(Token = "0x4000CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x1472030", Offset = "0x1472030")]
		public Transform lookAtTargetBiped;

		[Token(Token = "0x4000CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform lookAtTargetAnimator;

		[Token(Token = "0x4000CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1472068", Offset = "0x1472068")]
		public float lookAtWeight;

		[Token(Token = "0x4000CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1472080", Offset = "0x1472080")]
		public float lookAtBodyWeight;

		[Token(Token = "0x4000CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1472098", Offset = "0x1472098")]
		public float lookAtHeadWeight;

		[Token(Token = "0x4000CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x14720B0", Offset = "0x14720B0")]
		public float lookAtEyesWeight;

		[Token(Token = "0x4000CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x14720C8", Offset = "0x14720C8")]
		public float lookAtClampWeight;

		[Token(Token = "0x4000CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x14720E0", Offset = "0x14720E0")]
		public float lookAtClampWeightHead;

		[Token(Token = "0x4000CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x14720F8", Offset = "0x14720F8")]
		public float lookAtClampWeightEyes;

		[Token(Token = "0x4000CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x1472110", Offset = "0x1472110")]
		public Transform footTargetBiped;

		[Token(Token = "0x4000CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform footTargetAnimator;

		[Token(Token = "0x4000CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1472148", Offset = "0x1472148")]
		public float footPositionWeight;

		[Token(Token = "0x4000CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1472160", Offset = "0x1472160")]
		public float footRotationWeight;

		[Token(Token = "0x4000CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x1472178", Offset = "0x1472178")]
		public Transform handTargetBiped;

		[Token(Token = "0x4000CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform handTargetAnimator;

		[Token(Token = "0x4000CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x14721B0", Offset = "0x14721B0")]
		public float handPositionWeight;

		[Token(Token = "0x4000CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x14721C8", Offset = "0x14721C8")]
		public float handRotationWeight;

		[Token(Token = "0x6000F20")]
		[Address(RVA = "0x2D3F3A8", Offset = "0x2D3F3A8", VA = "0x2D3F3A8")]
		private void OnAnimatorIK(int layer)
		{
		}

		[Token(Token = "0x6000F21")]
		[Address(RVA = "0x2D3F854", Offset = "0x2D3F854", VA = "0x2D3F854")]
		public BipedIKvsAnimatorIK()
		{
		}
	}
	[Token(Token = "0x20001D1")]
	public class MechSpider : MonoBehaviour
	{
		[Token(Token = "0x4000CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask raycastLayers;

		[Token(Token = "0x4000CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float scale;

		[Token(Token = "0x4000CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform body;

		[Token(Token = "0x4000CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MechSpiderLeg[] legs;

		[Token(Token = "0x4000CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float legRotationWeight;

		[Token(Token = "0x4000CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float rootPositionSpeed;

		[Token(Token = "0x4000CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float rootRotationSpeed;

		[Token(Token = "0x4000CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float breatheSpeed;

		[Token(Token = "0x4000CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float breatheMagnitude;

		[Token(Token = "0x4000CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float height;

		[Token(Token = "0x4000CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float minHeight;

		[Token(Token = "0x4000CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float raycastHeight;

		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float raycastDistance;

		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14721E0", Offset = "0x14721E0")]
		private Vector3 <velocity>k__BackingField;

		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 lastPosition;

		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 defaultBodyLocalPosition;

		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float sine;

		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private RaycastHit rootHit;

		[Token(Token = "0x1700019D")]
		public Vector3 velocity
		{
			[Token(Token = "0x6000F22")]
			[Address(RVA = "0x2D49FA8", Offset = "0x2D49FA8", VA = "0x2D49FA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14828F8", Offset = "0x14828F8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000F23")]
			[Address(RVA = "0x2D49FB4", Offset = "0x2D49FB4", VA = "0x2D49FB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1482908", Offset = "0x1482908")]
			private set
			{
			}
		}

		[Token(Token = "0x6000F24")]
		[Address(RVA = "0x2D49FC0", Offset = "0x2D49FC0", VA = "0x2D49FC0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F25")]
		[Address(RVA = "0x2D49FFC", Offset = "0x2D49FFC", VA = "0x2D49FFC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F26")]
		[Address(RVA = "0x2D4AAB4", Offset = "0x2D4AAB4", VA = "0x2D4AAB4")]
		private Vector3 GetLegCentroid()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F27")]
		[Address(RVA = "0x2D4A79C", Offset = "0x2D4A79C", VA = "0x2D4A79C")]
		private Vector3 GetLegsPlaneNormal()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F28")]
		[Address(RVA = "0x2D4AC5C", Offset = "0x2D4AC5C", VA = "0x2D4AC5C")]
		public MechSpider()
		{
		}
	}
	[Token(Token = "0x20001D2")]
	public class MechSpiderController : MonoBehaviour
	{
		[Token(Token = "0x4000CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MechSpider mechSpider;

		[Token(Token = "0x4000CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform cameraTransform;

		[Token(Token = "0x4000CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float speed;

		[Token(Token = "0x4000CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float turnSpeed;

		[Token(Token = "0x1700019E")]
		public Vector3 inputVector
		{
			[Token(Token = "0x6000F29")]
			[Address(RVA = "0x2D4AC88", Offset = "0x2D4AC88", VA = "0x2D4AC88")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0x2D4AD28", Offset = "0x2D4AD28", VA = "0x2D4AD28")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0x2D4AFC0", Offset = "0x2D4AFC0", VA = "0x2D4AFC0")]
		public MechSpiderController()
		{
		}
	}
	[Token(Token = "0x20001D3")]
	public class MechSpiderLeg : MonoBehaviour
	{
		[Token(Token = "0x20005A2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A02C", Offset = "0x146A02C")]
		private sealed class <Step>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MechSpiderLeg <>4__this;

			[Token(Token = "0x40022F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 stepStartPosition;

			[Token(Token = "0x40022F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Vector3 targetPosition;

			[Token(Token = "0x1700050E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002659")]
				[Address(RVA = "0x2D4C3D0", Offset = "0x2D4C3D0", VA = "0x2D4C3D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700050F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600265B")]
				[Address(RVA = "0x2D4C438", Offset = "0x2D4C438", VA = "0x2D4C438", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002656")]
			[Address(RVA = "0x2D4BFBC", Offset = "0x2D4BFBC", VA = "0x2D4BFBC")]
			[DebuggerHidden]
			public <Step>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x6002657")]
			[Address(RVA = "0x2D4C090", Offset = "0x2D4C090", VA = "0x2D4C090", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002658")]
			[Address(RVA = "0x2D4C094", Offset = "0x2D4C094", VA = "0x2D4C094", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600265A")]
			[Address(RVA = "0x2D4C3D8", Offset = "0x2D4C3D8", VA = "0x2D4C3D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MechSpider mechSpider;

		[Token(Token = "0x4000CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MechSpiderLeg unSync;

		[Token(Token = "0x4000CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 offset;

		[Token(Token = "0x4000CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float minDelay;

		[Token(Token = "0x4000D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float maxOffset;

		[Token(Token = "0x4000D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float stepSpeed;

		[Token(Token = "0x4000D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float footHeight;

		[Token(Token = "0x4000D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float velocityPrediction;

		[Token(Token = "0x4000D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float raycastFocus;

		[Token(Token = "0x4000D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AnimationCurve yOffset;

		[Token(Token = "0x4000D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform foot;

		[Token(Token = "0x4000D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector3 footUpAxis;

		[Token(Token = "0x4000D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float footRotationSpeed;

		[Token(Token = "0x4000D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public ParticleSystem sand;

		[Token(Token = "0x4000D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private IK ik;

		[Token(Token = "0x4000D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float stepProgress;

		[Token(Token = "0x4000D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float lastStepTime;

		[Token(Token = "0x4000D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 defaultPosition;

		[Token(Token = "0x4000D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private RaycastHit hit;

		[Token(Token = "0x4000D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Quaternion lastFootLocalRotation;

		[Token(Token = "0x4000D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Vector3 smoothHitNormal;

		[Token(Token = "0x4000D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private Vector3 lastStepPosition;

		[Token(Token = "0x1700019F")]
		public bool isStepping
		{
			[Token(Token = "0x6000F2C")]
			[Address(RVA = "0x2D4AFD4", Offset = "0x2D4AFD4", VA = "0x2D4AFD4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A0")]
		public Vector3 position
		{
			[Token(Token = "0x6000F2D")]
			[Address(RVA = "0x2D4AC28", Offset = "0x2D4AC28", VA = "0x2D4AC28")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000F2E")]
			[Address(RVA = "0x2D4AFE8", Offset = "0x2D4AFE8", VA = "0x2D4AFE8")]
			set
			{
			}
		}

		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0x2D4B038", Offset = "0x2D4B038", VA = "0x2D4B038")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F30")]
		[Address(RVA = "0x2D4B2BC", Offset = "0x2D4B2BC", VA = "0x2D4B2BC")]
		private void AfterIK()
		{
		}

		[Token(Token = "0x6000F31")]
		[Address(RVA = "0x2D4B4D8", Offset = "0x2D4B4D8", VA = "0x2D4B4D8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F32")]
		[Address(RVA = "0x2D4B790", Offset = "0x2D4B790", VA = "0x2D4B790")]
		private Vector3 GetStepTarget(out bool stepFound, float focus, float distance)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F33")]
		[Address(RVA = "0x2D4BB28", Offset = "0x2D4BB28", VA = "0x2D4BB28")]
		private void UpdatePosition(float distance)
		{
		}

		[Token(Token = "0x6000F34")]
		[Address(RVA = "0x2D4BD84", Offset = "0x2D4BD84", VA = "0x2D4BD84")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F35")]
		[Address(RVA = "0x2D4B6D8", Offset = "0x2D4B6D8", VA = "0x2D4B6D8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1482918", Offset = "0x1482918")]
		private IEnumerator Step(Vector3 stepStartPosition, Vector3 targetPosition)
		{
			return null;
		}

		[Token(Token = "0x6000F36")]
		[Address(RVA = "0x2D4BFE8", Offset = "0x2D4BFE8", VA = "0x2D4BFE8")]
		public MechSpiderLeg()
		{
		}
	}
	[Token(Token = "0x20001D4")]
	public class MechSpiderParticles : MonoBehaviour
	{
		[Token(Token = "0x4000D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MechSpiderController mechSpiderController;

		[Token(Token = "0x4000D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ParticleSystem particles;

		[Token(Token = "0x6000F37")]
		[Address(RVA = "0x2D4C440", Offset = "0x2D4C440", VA = "0x2D4C440")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F38")]
		[Address(RVA = "0x2D4C4FC", Offset = "0x2D4C4FC", VA = "0x2D4C4FC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F39")]
		[Address(RVA = "0x2D4C790", Offset = "0x2D4C790", VA = "0x2D4C790")]
		public MechSpiderParticles()
		{
		}
	}
	[Token(Token = "0x20001D5")]
	public class AnimationWarping : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x20005A3")]
		public struct Warp
		{
			[Token(Token = "0x40022F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147D1D8", Offset = "0x147D1D8")]
			public int animationLayer;

			[Token(Token = "0x40022F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147D210", Offset = "0x147D210")]
			public string animationState;

			[Token(Token = "0x40022F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147D248", Offset = "0x147D248")]
			public AnimationCurve weightCurve;

			[Token(Token = "0x40022F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147D280", Offset = "0x147D280")]
			public Transform warpFrom;

			[Token(Token = "0x40022F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147D2B8", Offset = "0x147D2B8")]
			public Transform warpTo;

			[Token(Token = "0x40022F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147D2F0", Offset = "0x147D2F0")]
			public FullBodyBipedEffector effector;
		}

		[Serializable]
		[Token(Token = "0x20005A4")]
		public enum EffectorMode
		{
			[Token(Token = "0x40022FB")]
			PositionOffset,
			[Token(Token = "0x40022FC")]
			Position
		}

		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x14721F0", Offset = "0x14721F0")]
		public Animator animator;

		[Token(Token = "0x4000D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1472228", Offset = "0x1472228")]
		public EffectorMode effectorMode;

		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x1472260", Offset = "0x1472260")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1472260", Offset = "0x1472260")]
		public Warp[] warps;

		[Token(Token = "0x4000D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private EffectorMode lastMode;

		[Token(Token = "0x6000F3A")]
		[Address(RVA = "0x2D3D824", Offset = "0x2D3D824", VA = "0x2D3D824", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000F3B")]
		[Address(RVA = "0x2D3D850", Offset = "0x2D3D850", VA = "0x2D3D850")]
		public float GetWarpWeight(int warpIndex)
		{
			return default(float);
		}

		[Token(Token = "0x6000F3C")]
		[Address(RVA = "0x2D3DA70", Offset = "0x2D3DA70", VA = "0x2D3DA70", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0x2D3DE24", Offset = "0x2D3DE24", VA = "0x2D3DE24")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0x2D3DEC4", Offset = "0x2D3DEC4", VA = "0x2D3DEC4")]
		public AnimationWarping()
		{
		}
	}
	[Token(Token = "0x20001D6")]
	public class AnimatorController3rdPerson : MonoBehaviour
	{
		[Token(Token = "0x4000D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float rotateSpeed;

		[Token(Token = "0x4000D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float blendSpeed;

		[Token(Token = "0x4000D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float maxAngle;

		[Token(Token = "0x4000D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float moveSpeed;

		[Token(Token = "0x4000D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float rootMotionWeight;

		[Token(Token = "0x4000D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Animator animator;

		[Token(Token = "0x4000D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Vector3 moveBlend;

		[Token(Token = "0x4000D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		protected Vector3 moveInput;

		[Token(Token = "0x4000D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Vector3 velocity;

		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0x2D3DECC", Offset = "0x2D3DECC", VA = "0x2D3DECC", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000F40")]
		[Address(RVA = "0x2D3DF2C", Offset = "0x2D3DF2C", VA = "0x2D3DF2C")]
		private void OnAnimatorMove()
		{
		}

		[Token(Token = "0x6000F41")]
		[Address(RVA = "0x2D3E164", Offset = "0x2D3E164", VA = "0x2D3E164", Slot = "5")]
		public virtual void Move(Vector3 moveInput, bool isMoving, Vector3 faceDirection, Vector3 aimTarget)
		{
		}

		[Token(Token = "0x6000F42")]
		[Address(RVA = "0x2D3E3C8", Offset = "0x2D3E3C8", VA = "0x2D3E3C8")]
		public AnimatorController3rdPerson()
		{
		}
	}
	[Token(Token = "0x20001D7")]
	public class AnimatorController3rdPersonIK : AnimatorController3rdPerson
	{
		[Token(Token = "0x4000D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x14722B0", Offset = "0x14722B0")]
		public float headLookWeight;

		[Token(Token = "0x4000D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector3 gunHoldOffset;

		[Token(Token = "0x4000D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Vector3 leftHandOffset;

		[Token(Token = "0x4000D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Recoil recoil;

		[Token(Token = "0x4000D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private AimIK aim;

		[Token(Token = "0x4000D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private FullBodyBipedIK ik;

		[Token(Token = "0x4000D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 headLookAxis;

		[Token(Token = "0x4000D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Vector3 leftHandPosRelToRightHand;

		[Token(Token = "0x4000D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Quaternion leftHandRotRelToRightHand;

		[Token(Token = "0x4000D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Vector3 aimTarget;

		[Token(Token = "0x4000D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private Quaternion rightHandRotation;

		[Token(Token = "0x6000F43")]
		[Address(RVA = "0x2D3E3DC", Offset = "0x2D3E3DC", VA = "0x2D3E3DC", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000F44")]
		[Address(RVA = "0x2D3E588", Offset = "0x2D3E588", VA = "0x2D3E588", Slot = "5")]
		public override void Move(Vector3 moveInput, bool isMoving, Vector3 faceDirection, Vector3 aimTarget)
		{
		}

		[Token(Token = "0x6000F45")]
		[Address(RVA = "0x2D3E604", Offset = "0x2D3E604", VA = "0x2D3E604")]
		private void Read()
		{
		}

		[Token(Token = "0x6000F46")]
		[Address(RVA = "0x2D3E75C", Offset = "0x2D3E75C", VA = "0x2D3E75C")]
		private void AimIK()
		{
		}

		[Token(Token = "0x6000F47")]
		[Address(RVA = "0x2D3E7A4", Offset = "0x2D3E7A4", VA = "0x2D3E7A4")]
		private void FBBIK()
		{
		}

		[Token(Token = "0x6000F48")]
		[Address(RVA = "0x2D3ED9C", Offset = "0x2D3ED9C", VA = "0x2D3ED9C")]
		private void OnPreRead()
		{
		}

		[Token(Token = "0x6000F49")]
		[Address(RVA = "0x2D3EB60", Offset = "0x2D3EB60", VA = "0x2D3EB60")]
		private void HeadLookAt(Vector3 lookAtTarget)
		{
		}

		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0x2D3F0F4", Offset = "0x2D3F0F4", VA = "0x2D3F0F4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0x2D3F210", Offset = "0x2D3F210", VA = "0x2D3F210")]
		public AnimatorController3rdPersonIK()
		{
		}
	}
	[Token(Token = "0x20001D8")]
	public class CharacterAnimationThirdPersonIK : CharacterAnimationThirdPerson
	{
		[Token(Token = "0x4000D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private FullBodyBipedIK ik;

		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0x2D40824", Offset = "0x2D40824", VA = "0x2D40824", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0x2D4088C", Offset = "0x2D4088C", VA = "0x2D4088C", Slot = "7")]
		protected override void LateUpdate()
		{
		}

		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0x2D40B50", Offset = "0x2D40B50", VA = "0x2D40B50")]
		private void RotateEffector(IKEffector effector, Quaternion rotation, float mlp)
		{
		}

		[Token(Token = "0x6000F4F")]
		[Address(RVA = "0x2D40D08", Offset = "0x2D40D08", VA = "0x2D40D08")]
		public CharacterAnimationThirdPersonIK()
		{
		}
	}
	[Token(Token = "0x20001D9")]
	public class CharacterController3rdPerson : MonoBehaviour
	{
		[Token(Token = "0x4000D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CameraController cam;

		[Token(Token = "0x4000D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AnimatorController3rdPerson animatorController;

		[Token(Token = "0x170001A1")]
		private static Vector3 inputVector
		{
			[Token(Token = "0x6000F52")]
			[Address(RVA = "0x2D41B74", Offset = "0x2D41B74", VA = "0x2D41B74")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170001A2")]
		private static Vector3 inputVectorRaw
		{
			[Token(Token = "0x6000F53")]
			[Address(RVA = "0x2D41C14", Offset = "0x2D41C14", VA = "0x2D41C14")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000F50")]
		[Address(RVA = "0x2D418B8", Offset = "0x2D418B8", VA = "0x2D418B8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F51")]
		[Address(RVA = "0x2D41930", Offset = "0x2D41930", VA = "0x2D41930")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000F54")]
		[Address(RVA = "0x2D41CB4", Offset = "0x2D41CB4", VA = "0x2D41CB4")]
		public CharacterController3rdPerson()
		{
		}
	}
	[Token(Token = "0x20001DA")]
	public class EffectorOffset : OffsetModifier
	{
		[Token(Token = "0x4000D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x14722C8", Offset = "0x14722C8")]
		public float handsMaintainRelativePositionWeight;

		[Token(Token = "0x4000D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 bodyOffset;

		[Token(Token = "0x4000D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 leftShoulderOffset;

		[Token(Token = "0x4000D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 rightShoulderOffset;

		[Token(Token = "0x4000D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 leftThighOffset;

		[Token(Token = "0x4000D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector3 rightThighOffset;

		[Token(Token = "0x4000D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Vector3 leftHandOffset;

		[Token(Token = "0x4000D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Vector3 rightHandOffset;

		[Token(Token = "0x4000D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public Vector3 leftFootOffset;

		[Token(Token = "0x4000D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Vector3 rightFootOffset;

		[Token(Token = "0x6000F55")]
		[Address(RVA = "0x2D446B0", Offset = "0x2D446B0", VA = "0x2D446B0", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6000F56")]
		[Address(RVA = "0x2D44C94", Offset = "0x2D44C94", VA = "0x2D44C94")]
		public EffectorOffset()
		{
		}
	}
	[Token(Token = "0x20001DB")]
	public class ExplosionDemo : MonoBehaviour
	{
		[Token(Token = "0x4000D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SimpleLocomotion character;

		[Token(Token = "0x4000D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float forceMlp;

		[Token(Token = "0x4000D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float upForce;

		[Token(Token = "0x4000D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float weightFalloffSpeed;

		[Token(Token = "0x4000D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve weightFalloff;

		[Token(Token = "0x4000D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationCurve explosionForceByDistance;

		[Token(Token = "0x4000D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AnimationCurve scale;

		[Token(Token = "0x4000D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float weight;

		[Token(Token = "0x4000D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 defaultScale;

		[Token(Token = "0x4000D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Rigidbody r;

		[Token(Token = "0x4000D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private FullBodyBipedIK ik;

		[Token(Token = "0x6000F57")]
		[Address(RVA = "0x2D44C9C", Offset = "0x2D44C9C", VA = "0x2D44C9C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F58")]
		[Address(RVA = "0x2D44D50", Offset = "0x2D44D50", VA = "0x2D44D50")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F59")]
		[Address(RVA = "0x2D451CC", Offset = "0x2D451CC", VA = "0x2D451CC")]
		private void SetEffectorWeights(float w)
		{
		}

		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0x2D45278", Offset = "0x2D45278", VA = "0x2D45278")]
		public ExplosionDemo()
		{
		}
	}
	[Token(Token = "0x20001DC")]
	public class FBBIKSettings : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005A5")]
		public class Limb
		{
			[Token(Token = "0x40022FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FBIKChain.Smoothing reachSmoothing;

			[Token(Token = "0x40022FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float maintainRelativePositionWeight;

			[Token(Token = "0x40022FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float mappingWeight;

			[Token(Token = "0x600265C")]
			[Address(RVA = "0x2D4544C", Offset = "0x2D4544C", VA = "0x2D4544C")]
			public void Apply(FullBodyBipedChain chain, IKSolverFullBodyBiped solver)
			{
			}

			[Token(Token = "0x600265D")]
			[Address(RVA = "0x2D45580", Offset = "0x2D45580", VA = "0x2D45580")]
			public Limb()
			{
			}
		}

		[Token(Token = "0x4000D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x4000D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool disableAfterStart;

		[Token(Token = "0x4000D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Limb leftArm;

		[Token(Token = "0x4000D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Limb rightArm;

		[Token(Token = "0x4000D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Limb leftLeg;

		[Token(Token = "0x4000D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Limb rightLeg;

		[Token(Token = "0x4000D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float rootPin;

		[Token(Token = "0x4000D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool bodyEffectChildNodes;

		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0x2D45300", Offset = "0x2D45300", VA = "0x2D45300")]
		public void UpdateSettings()
		{
		}

		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0x2D454D0", Offset = "0x2D454D0", VA = "0x2D454D0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0x2D4556C", Offset = "0x2D4556C", VA = "0x2D4556C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F5E")]
		[Address(RVA = "0x2D45570", Offset = "0x2D45570", VA = "0x2D45570")]
		public FBBIKSettings()
		{
		}
	}
	[Token(Token = "0x20001DD")]
	public class FBIKBendGoal : MonoBehaviour
	{
		[Token(Token = "0x4000D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x4000D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FullBodyBipedChain chain;

		[Token(Token = "0x4000D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float weight;

		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0x2D45590", Offset = "0x2D45590", VA = "0x2D45590")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F60")]
		[Address(RVA = "0x2D455FC", Offset = "0x2D455FC", VA = "0x2D455FC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F61")]
		[Address(RVA = "0x2D456E0", Offset = "0x2D456E0", VA = "0x2D456E0")]
		public FBIKBendGoal()
		{
		}
	}
	[Token(Token = "0x20001DE")]
	public class FBIKBoxing : MonoBehaviour
	{
		[Token(Token = "0x4000D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x14722E0", Offset = "0x14722E0")]
		public Transform target;

		[Token(Token = "0x4000D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1472318", Offset = "0x1472318")]
		public Transform pin;

		[Token(Token = "0x4000D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1472350", Offset = "0x1472350")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x4000D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1472388", Offset = "0x1472388")]
		public AimIK aim;

		[Token(Token = "0x4000D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x14723C0", Offset = "0x14723C0")]
		public float weight;

		[Token(Token = "0x4000D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x14723F8", Offset = "0x14723F8")]
		public FullBodyBipedEffector effector;

		[Token(Token = "0x4000D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1472430", Offset = "0x1472430")]
		public AnimationCurve aimWeight;

		[Token(Token = "0x4000D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Animator animator;

		[Token(Token = "0x6000F62")]
		[Address(RVA = "0x2D456E8", Offset = "0x2D456E8", VA = "0x2D456E8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F63")]
		[Address(RVA = "0x2D45748", Offset = "0x2D45748", VA = "0x2D45748")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000F64")]
		[Address(RVA = "0x2D458E4", Offset = "0x2D458E4", VA = "0x2D458E4")]
		public FBIKBoxing()
		{
		}
	}
	[Token(Token = "0x20001DF")]
	public class FBIKHandsOnProp : MonoBehaviour
	{
		[Token(Token = "0x4000D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x4000D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool leftHanded;

		[Token(Token = "0x6000F65")]
		[Address(RVA = "0x2D458EC", Offset = "0x2D458EC", VA = "0x2D458EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0x2D459BC", Offset = "0x2D459BC", VA = "0x2D459BC")]
		private void OnPreRead()
		{
		}

		[Token(Token = "0x6000F67")]
		[Address(RVA = "0x2D45A4C", Offset = "0x2D45A4C", VA = "0x2D45A4C")]
		private void HandsOnProp(IKEffector mainHand, IKEffector otherHand)
		{
		}

		[Token(Token = "0x6000F68")]
		[Address(RVA = "0x2D45F60", Offset = "0x2D45F60", VA = "0x2D45F60")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000F69")]
		[Address(RVA = "0x2D4607C", Offset = "0x2D4607C", VA = "0x2D4607C")]
		public FBIKHandsOnProp()
		{
		}
	}
	[Token(Token = "0x20001E0")]
	public class FPSAiming : MonoBehaviour
	{
		[Token(Token = "0x4000D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1472468", Offset = "0x1472468")]
		public float aimWeight;

		[Token(Token = "0x4000D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1472480", Offset = "0x1472480")]
		public float sightWeight;

		[Token(Token = "0x4000D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1472498", Offset = "0x1472498")]
		public float maxAngle;

		[Token(Token = "0x4000D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 aimOffset;

		[Token(Token = "0x4000D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool animatePhysics;

		[Token(Token = "0x4000D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform gun;

		[Token(Token = "0x4000D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform gunTarget;

		[Token(Token = "0x4000D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public FullBodyBipedIK ik;

		[Token(Token = "0x4000D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AimIK gunAim;

		[Token(Token = "0x4000D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AimIK headAim;

		[Token(Token = "0x4000D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public CameraControllerFPS cam;

		[Token(Token = "0x4000D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Recoil recoil;

		[Token(Token = "0x4000D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x14724B4", Offset = "0x14724B4")]
		public float cameraRecoilWeight;

		[Token(Token = "0x4000D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 gunTargetDefaultLocalPosition;

		[Token(Token = "0x4000D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 gunTargetDefaultLocalRotation;

		[Token(Token = "0x4000D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 camDefaultLocalPosition;

		[Token(Token = "0x4000D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 camRelativeToGunTarget;

		[Token(Token = "0x4000D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool updateFrame;

		[Token(Token = "0x6000F6A")]
		[Address(RVA = "0x2D46410", Offset = "0x2D46410", VA = "0x2D46410")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F6B")]
		[Address(RVA = "0x2D465C0", Offset = "0x2D465C0", VA = "0x2D465C0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000F6C")]
		[Address(RVA = "0x2D465CC", Offset = "0x2D465CC", VA = "0x2D465CC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000F6D")]
		[Address(RVA = "0x2D4690C", Offset = "0x2D4690C", VA = "0x2D4690C")]
		private void Aiming()
		{
		}

		[Token(Token = "0x6000F6E")]
		[Address(RVA = "0x2D46C84", Offset = "0x2D46C84", VA = "0x2D46C84")]
		private void LookDownTheSight()
		{
		}

		[Token(Token = "0x6000F6F")]
		[Address(RVA = "0x2D46690", Offset = "0x2D46690", VA = "0x2D46690")]
		private void RotateCharacter()
		{
		}

		[Token(Token = "0x6000F70")]
		[Address(RVA = "0x2D476A4", Offset = "0x2D476A4", VA = "0x2D476A4")]
		public FPSAiming()
		{
		}
	}
	[Token(Token = "0x20001E1")]
	public class FPSCharacter : MonoBehaviour
	{
		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x14724CC", Offset = "0x14724CC")]
		public float walkSpeed;

		[Token(Token = "0x4000D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float sVel;

		[Token(Token = "0x4000D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator animator;

		[Token(Token = "0x4000D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private FPSAiming FPSAiming;

		[Token(Token = "0x6000F71")]
		[Address(RVA = "0x2D476C4", Offset = "0x2D476C4", VA = "0x2D476C4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F72")]
		[Address(RVA = "0x2D47748", Offset = "0x2D47748", VA = "0x2D47748")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F73")]
		[Address(RVA = "0x2D4786C", Offset = "0x2D4786C", VA = "0x2D4786C")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000F74")]
		[Address(RVA = "0x2D4791C", Offset = "0x2D4791C", VA = "0x2D4791C")]
		public FPSCharacter()
		{
		}
	}
	[Token(Token = "0x20001E2")]
	public class HitReactionTrigger : MonoBehaviour
	{
		[Token(Token = "0x4000D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HitReaction hitReaction;

		[Token(Token = "0x4000D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float hitForce;

		[Token(Token = "0x4000D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string colliderName;

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0x2D47CB0", Offset = "0x2D47CB0", VA = "0x2D47CB0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F76")]
		[Address(RVA = "0x2D47E7C", Offset = "0x2D47E7C", VA = "0x2D47E7C")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000F77")]
		[Address(RVA = "0x2D48040", Offset = "0x2D48040", VA = "0x2D48040")]
		public HitReactionTrigger()
		{
		}
	}
	[Token(Token = "0x20001E3")]
	public class HoldingHands : MonoBehaviour
	{
		[Token(Token = "0x4000D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FullBodyBipedIK rightHandChar;

		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FullBodyBipedIK leftHandChar;

		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform rightHandTarget;

		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform leftHandTarget;

		[Token(Token = "0x4000D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float crossFade;

		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float speed;

		[Token(Token = "0x4000D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Quaternion rightHandRotation;

		[Token(Token = "0x4000D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion leftHandRotation;

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0x2D483F0", Offset = "0x2D483F0", VA = "0x2D483F0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F79")]
		[Address(RVA = "0x2D4859C", Offset = "0x2D4859C", VA = "0x2D4859C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0x2D48958", Offset = "0x2D48958", VA = "0x2D48958")]
		public HoldingHands()
		{
		}
	}
	[Token(Token = "0x20001E4")]
	public class InteractionC2CDemo : MonoBehaviour
	{
		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractionSystem character1;

		[Token(Token = "0x4000D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractionSystem character2;

		[Token(Token = "0x4000D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InteractionObject handShake;

		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0x2D48968", Offset = "0x2D48968", VA = "0x2D48968")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0x2D48A9C", Offset = "0x2D48A9C", VA = "0x2D48A9C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0x2D48BEC", Offset = "0x2D48BEC", VA = "0x2D48BEC")]
		public InteractionC2CDemo()
		{
		}
	}
	[Token(Token = "0x20001E5")]
	public class InteractionDemo : MonoBehaviour
	{
		[Token(Token = "0x4000D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractionSystem interactionSystem;

		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool interrupt;

		[Token(Token = "0x4000D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InteractionObject ball;

		[Token(Token = "0x4000D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public InteractionObject benchMain;

		[Token(Token = "0x4000D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public InteractionObject benchHands;

		[Token(Token = "0x4000D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public InteractionObject button;

		[Token(Token = "0x4000D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractionObject cigarette;

		[Token(Token = "0x4000D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public InteractionObject door;

		[Token(Token = "0x4000D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool isSitting;

		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0x2D48BF4", Offset = "0x2D48BF4", VA = "0x2D48BF4")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0x2D492C4", Offset = "0x2D492C4", VA = "0x2D492C4")]
		public InteractionDemo()
		{
		}
	}
	[Token(Token = "0x20001E6")]
	public class InteractionSystemTestGUI : MonoBehaviour
	{
		[Token(Token = "0x4000D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x14724E4", Offset = "0x14724E4")]
		public InteractionObject interactionObject;

		[Token(Token = "0x4000D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147251C", Offset = "0x147251C")]
		public FullBodyBipedEffector[] effectors;

		[Token(Token = "0x4000D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private InteractionSystem interactionSystem;

		[Token(Token = "0x6000F80")]
		[Address(RVA = "0x2D492CC", Offset = "0x2D492CC", VA = "0x2D492CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F81")]
		[Address(RVA = "0x2D4932C", Offset = "0x2D4932C", VA = "0x2D4932C")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000F82")]
		[Address(RVA = "0x2D49638", Offset = "0x2D49638", VA = "0x2D49638")]
		public InteractionSystemTestGUI()
		{
		}
	}
	[Token(Token = "0x20001E7")]
	public class KissingRig : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005A6")]
		public class Partner
		{
			[Token(Token = "0x4002300")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FullBodyBipedIK ik;

			[Token(Token = "0x4002301")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform mouth;

			[Token(Token = "0x4002302")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform mouthTarget;

			[Token(Token = "0x4002303")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform touchTargetLeftHand;

			[Token(Token = "0x4002304")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Transform touchTargetRightHand;

			[Token(Token = "0x4002305")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float bodyWeightHorizontal;

			[Token(Token = "0x4002306")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public float bodyWeightVertical;

			[Token(Token = "0x4002307")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public float neckRotationWeight;

			[Token(Token = "0x4002308")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public float headTiltAngle;

			[Token(Token = "0x4002309")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Vector3 headTiltAxis;

			[Token(Token = "0x400230A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private Quaternion neckRotation;

			[Token(Token = "0x17000510")]
			private Transform neck
			{
				[Token(Token = "0x6002660")]
				[Address(RVA = "0x2D49F3C", Offset = "0x2D49F3C", VA = "0x2D49F3C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600265E")]
			[Address(RVA = "0x2D49674", Offset = "0x2D49674", VA = "0x2D49674")]
			public void Initiate()
			{
			}

			[Token(Token = "0x600265F")]
			[Address(RVA = "0x2D496F4", Offset = "0x2D496F4", VA = "0x2D496F4")]
			public void Update(float weight)
			{
			}

			[Token(Token = "0x6002661")]
			[Address(RVA = "0x2D49D60", Offset = "0x2D49D60", VA = "0x2D49D60")]
			private void InverseTransformEffector(FullBodyBipedEffector effector, Transform target, Vector3 targetPosition, float weight)
			{
			}

			[Token(Token = "0x6002662")]
			[Address(RVA = "0x2D49F94", Offset = "0x2D49F94", VA = "0x2D49F94")]
			public Partner()
			{
			}
		}

		[Token(Token = "0x4000D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Partner partner1;

		[Token(Token = "0x4000D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Partner partner2;

		[Token(Token = "0x4000D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float weight;

		[Token(Token = "0x4000D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int iterations;

		[Token(Token = "0x6000F83")]
		[Address(RVA = "0x2D49640", Offset = "0x2D49640", VA = "0x2D49640")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F84")]
		[Address(RVA = "0x2D49694", Offset = "0x2D49694", VA = "0x2D49694")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000F85")]
		[Address(RVA = "0x2D49D50", Offset = "0x2D49D50", VA = "0x2D49D50")]
		public KissingRig()
		{
		}
	}
	[Token(Token = "0x20001E8")]
	public class MotionAbsorb : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x20005A7")]
		public enum Mode
		{
			[Token(Token = "0x400230C")]
			Position,
			[Token(Token = "0x400230D")]
			PositionOffset
		}

		[Serializable]
		[Token(Token = "0x20005A8")]
		public class Absorber
		{
			[Token(Token = "0x400230E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147D328", Offset = "0x147D328")]
			public FullBodyBipedEffector effector;

			[Token(Token = "0x400230F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147D360", Offset = "0x147D360")]
			public float weight;

			[Token(Token = "0x4002310")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Vector3 position;

			[Token(Token = "0x4002311")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private Quaternion rotation;

			[Token(Token = "0x4002312")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IKEffector e;

			[Token(Token = "0x6002663")]
			[Address(RVA = "0x2D4C90C", Offset = "0x2D4C90C", VA = "0x2D4C90C")]
			public void SetToBone(IKSolverFullBodyBiped solver, Mode mode)
			{
			}

			[Token(Token = "0x6002664")]
			[Address(RVA = "0x2D4CB00", Offset = "0x2D4CB00", VA = "0x2D4CB00")]
			public void UpdateEffectorWeights(float w)
			{
			}

			[Token(Token = "0x6002665")]
			[Address(RVA = "0x2D4CB3C", Offset = "0x2D4CB3C", VA = "0x2D4CB3C")]
			public void SetPosition(float w)
			{
			}

			[Token(Token = "0x6002666")]
			[Address(RVA = "0x2D4CCEC", Offset = "0x2D4CCEC", VA = "0x2D4CCEC")]
			public void SetRotation(float w)
			{
			}

			[Token(Token = "0x6002667")]
			[Address(RVA = "0x2D4CF34", Offset = "0x2D4CF34", VA = "0x2D4CF34")]
			public Absorber()
			{
			}
		}

		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1472554", Offset = "0x1472554")]
		public Mode mode;

		[Token(Token = "0x4000D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147258C", Offset = "0x147258C")]
		public Absorber[] absorbers;

		[Token(Token = "0x4000D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x14725C4", Offset = "0x14725C4")]
		public AnimationCurve falloff;

		[Token(Token = "0x4000D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x14725FC", Offset = "0x14725FC")]
		public float falloffSpeed;

		[Token(Token = "0x4000D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float timer;

		[Token(Token = "0x4000D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float w;

		[Token(Token = "0x4000D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Mode initialMode;

		[Token(Token = "0x6000F86")]
		[Address(RVA = "0x2D4C798", Offset = "0x2D4C798", VA = "0x2D4C798", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000F87")]
		[Address(RVA = "0x2D4C880", Offset = "0x2D4C880", VA = "0x2D4C880")]
		private void OnCollisionEnter(Collision c)
		{
		}

		[Token(Token = "0x6000F88")]
		[Address(RVA = "0x2D4C9F4", Offset = "0x2D4C9F4", VA = "0x2D4C9F4", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6000F89")]
		[Address(RVA = "0x2D4CC64", Offset = "0x2D4CC64", VA = "0x2D4CC64")]
		private void AfterIK()
		{
		}

		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0x2D4CDFC", Offset = "0x2D4CDFC", VA = "0x2D4CDFC", Slot = "6")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0x2D4CF24", Offset = "0x2D4CF24", VA = "0x2D4CF24")]
		public MotionAbsorb()
		{
		}
	}
	[Token(Token = "0x20001E9")]
	public class MotionAbsorbCharacter : MonoBehaviour
	{
		[Token(Token = "0x4000D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Animator animator;

		[Token(Token = "0x4000D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MotionAbsorb motionAbsorb;

		[Token(Token = "0x4000D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform cube;

		[Token(Token = "0x4000D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float cubeRandomPosition;

		[Token(Token = "0x4000D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationCurve motionAbsorbWeight;

		[Token(Token = "0x4000D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 cubeDefaultPosition;

		[Token(Token = "0x4000D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private AnimatorStateInfo info;

		[Token(Token = "0x4000D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Rigidbody cubeRigidbody;

		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0x2D4CFB4", Offset = "0x2D4CFB4", VA = "0x2D4CFB4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0x2D4D034", Offset = "0x2D4D034", VA = "0x2D4D034")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0x2D4D100", Offset = "0x2D4D100", VA = "0x2D4D100")]
		private void SwingStart()
		{
		}

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0x2D4D260", Offset = "0x2D4D260", VA = "0x2D4D260")]
		public MotionAbsorbCharacter()
		{
		}
	}
	[Token(Token = "0x20001EA")]
	public class OffsetEffector : OffsetModifier
	{
		[Serializable]
		[Token(Token = "0x20005A9")]
		public class EffectorLink
		{
			[Token(Token = "0x4002313")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FullBodyBipedEffector effectorType;

			[Token(Token = "0x4002314")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float weightMultiplier;

			[Token(Token = "0x4002315")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[HideInInspector]
			public Vector3 localPosition;

			[Token(Token = "0x6002668")]
			[Address(RVA = "0x2D4E000", Offset = "0x2D4E000", VA = "0x2D4E000")]
			public EffectorLink()
			{
			}
		}

		[Token(Token = "0x4000D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public EffectorLink[] effectorLinks;

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0x2D4DCCC", Offset = "0x2D4DCCC", VA = "0x2D4DCCC", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000F91")]
		[Address(RVA = "0x2D4DDCC", Offset = "0x2D4DDCC", VA = "0x2D4DDCC", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6000F92")]
		[Address(RVA = "0x2D4DFF8", Offset = "0x2D4DFF8", VA = "0x2D4DFF8")]
		public OffsetEffector()
		{
		}
	}
	[Token(Token = "0x20001EB")]
	public class PendulumExample : MonoBehaviour
	{
		[Token(Token = "0x4000D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1472634", Offset = "0x1472634")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1472634", Offset = "0x1472634")]
		public float weight;

		[Token(Token = "0x4000D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1472688", Offset = "0x1472688")]
		public float hangingDistanceMlp;

		[Token(Token = "0x4000D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x14726C0", Offset = "0x14726C0")]
		[HideInInspector]
		public Vector3 rootTargetPosition;

		[Token(Token = "0x4000DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147270C", Offset = "0x147270C")]
		[HideInInspector]
		public Quaternion rootTargetRotation;

		[Token(Token = "0x4000DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform target;

		[Token(Token = "0x4000DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform leftHandTarget;

		[Token(Token = "0x4000DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform rightHandTarget;

		[Token(Token = "0x4000DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform leftFootTarget;

		[Token(Token = "0x4000DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform rightFootTarget;

		[Token(Token = "0x4000DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform pelvisTarget;

		[Token(Token = "0x4000DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform bodyTarget;

		[Token(Token = "0x4000DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform headTarget;

		[Token(Token = "0x4000DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Vector3 pelvisDownAxis;

		[Token(Token = "0x4000DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private FullBodyBipedIK ik;

		[Token(Token = "0x4000DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Quaternion rootRelativeToPelvis;

		[Token(Token = "0x4000DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 pelvisToRoot;

		[Token(Token = "0x4000DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float lastWeight;

		[Token(Token = "0x6000F93")]
		[Address(RVA = "0x2D4E010", Offset = "0x2D4E010", VA = "0x2D4E010")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F94")]
		[Address(RVA = "0x2D4E360", Offset = "0x2D4E360", VA = "0x2D4E360")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000F95")]
		[Address(RVA = "0x2D4EAB0", Offset = "0x2D4EAB0", VA = "0x2D4EAB0")]
		public PendulumExample()
		{
		}
	}
	[Token(Token = "0x20001EC")]
	public abstract class PickUp2Handed : MonoBehaviour
	{
		[Token(Token = "0x4000DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int GUIspace;

		[Token(Token = "0x4000DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractionSystem interactionSystem;

		[Token(Token = "0x4000DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InteractionObject obj;

		[Token(Token = "0x4000DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform pivot;

		[Token(Token = "0x4000DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform holdPoint;

		[Token(Token = "0x4000DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float pickUpTime;

		[Token(Token = "0x4000DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float holdWeight;

		[Token(Token = "0x4000DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float holdWeightVel;

		[Token(Token = "0x4000DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 pickUpPosition;

		[Token(Token = "0x4000DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion pickUpRotation;

		[Token(Token = "0x170001A3")]
		private bool holding
		{
			[Token(Token = "0x6000F9D")]
			[Address(RVA = "0x2D4F020", Offset = "0x2D4F020", VA = "0x2D4F020")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A4")]
		private bool holdingLeft
		{
			[Token(Token = "0x6000F9E")]
			[Address(RVA = "0x2D4F110", Offset = "0x2D4F110", VA = "0x2D4F110")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A5")]
		private bool holdingRight
		{
			[Token(Token = "0x6000F9F")]
			[Address(RVA = "0x2D4F058", Offset = "0x2D4F058", VA = "0x2D4F058")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0x2D4EB34", Offset = "0x2D4EB34", VA = "0x2D4EB34")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000F97")]
		protected abstract void RotatePivot();

		[Token(Token = "0x6000F98")]
		[Address(RVA = "0x2D4F1C8", Offset = "0x2D4F1C8", VA = "0x2D4F1C8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F99")]
		[Address(RVA = "0x2D4F360", Offset = "0x2D4F360", VA = "0x2D4F360")]
		private void OnPause(FullBodyBipedEffector effectorType, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0x2D4F4DC", Offset = "0x2D4F4DC", VA = "0x2D4F4DC")]
		private void OnStart(FullBodyBipedEffector effectorType, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0x2D4F5BC", Offset = "0x2D4F5BC", VA = "0x2D4F5BC")]
		private void OnDrop(FullBodyBipedEffector effectorType, InteractionObject interactionObject)
		{
		}

		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0x2D4F6F4", Offset = "0x2D4F6F4", VA = "0x2D4F6F4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000FA0")]
		[Address(RVA = "0x2D4F910", Offset = "0x2D4F910", VA = "0x2D4F910")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0x2D4FAF4", Offset = "0x2D4FAF4", VA = "0x2D4FAF4")]
		protected PickUp2Handed()
		{
		}
	}
	[Token(Token = "0x20001ED")]
	public class PickUpBox : PickUp2Handed
	{
		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0x2661F30", Offset = "0x2661F30", VA = "0x2661F30", Slot = "4")]
		protected override void RotatePivot()
		{
		}

		[Token(Token = "0x6000FA3")]
		[Address(RVA = "0x2662124", Offset = "0x2662124", VA = "0x2662124")]
		public PickUpBox()
		{
		}
	}
	[Token(Token = "0x20001EE")]
	public class PickUpSphere : PickUp2Handed
	{
		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0x266212C", Offset = "0x266212C", VA = "0x266212C", Slot = "4")]
		protected override void RotatePivot()
		{
		}

		[Token(Token = "0x6000FA5")]
		[Address(RVA = "0x26622D8", Offset = "0x26622D8", VA = "0x26622D8")]
		public PickUpSphere()
		{
		}
	}
	[Token(Token = "0x20001EF")]
	public class RagdollUtilityDemo : MonoBehaviour
	{
		[Token(Token = "0x4000DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RagdollUtility ragdollUtility;

		[Token(Token = "0x4000DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform root;

		[Token(Token = "0x4000DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Rigidbody pelvis;

		[Token(Token = "0x6000FA6")]
		[Address(RVA = "0x2662A6C", Offset = "0x2662A6C", VA = "0x2662A6C")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000FA7")]
		[Address(RVA = "0x2662B44", Offset = "0x2662B44", VA = "0x2662B44")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FA8")]
		[Address(RVA = "0x2662CEC", Offset = "0x2662CEC", VA = "0x2662CEC")]
		public RagdollUtilityDemo()
		{
		}
	}
	[Token(Token = "0x20001F0")]
	public class RecoilTest : MonoBehaviour
	{
		[Token(Token = "0x4000DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float magnitude;

		[Token(Token = "0x4000DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Recoil recoil;

		[Token(Token = "0x6000FA9")]
		[Address(RVA = "0x2662CF4", Offset = "0x2662CF4", VA = "0x2662CF4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0x2662D54", Offset = "0x2662D54", VA = "0x2662D54")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0x2662DB0", Offset = "0x2662DB0", VA = "0x2662DB0")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0x2662E88", Offset = "0x2662E88", VA = "0x2662E88")]
		public RecoilTest()
		{
		}
	}
	[Token(Token = "0x20001F1")]
	public class ResetInteractionObject : MonoBehaviour
	{
		[Token(Token = "0x20005AA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A03C", Offset = "0x146A03C")]
		private sealed class <ResetObject>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002316")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002317")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002318")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float resetTime;

			[Token(Token = "0x4002319")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ResetInteractionObject <>4__this;

			[Token(Token = "0x17000511")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600266C")]
				[Address(RVA = "0x2663234", Offset = "0x2663234", VA = "0x2663234", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000512")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600266E")]
				[Address(RVA = "0x266329C", Offset = "0x266329C", VA = "0x266329C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002669")]
			[Address(RVA = "0x2663038", Offset = "0x2663038", VA = "0x2663038")]
			[DebuggerHidden]
			public <ResetObject>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x600266A")]
			[Address(RVA = "0x2663074", Offset = "0x2663074", VA = "0x2663074", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600266B")]
			[Address(RVA = "0x2663078", Offset = "0x2663078", VA = "0x2663078", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600266D")]
			[Address(RVA = "0x266323C", Offset = "0x266323C", VA = "0x266323C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float resetDelay;

		[Token(Token = "0x4000DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Vector3 defaultPosition;

		[Token(Token = "0x4000DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Quaternion defaultRotation;

		[Token(Token = "0x4000DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform defaultParent;

		[Token(Token = "0x4000DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Rigidbody r;

		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0x2662E98", Offset = "0x2662E98", VA = "0x2662E98")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0x2662F64", Offset = "0x2662F64", VA = "0x2662F64")]
		private void OnPickUp(Transform t)
		{
		}

		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0x2662FAC", Offset = "0x2662FAC", VA = "0x2662FAC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x148297C", Offset = "0x148297C")]
		private IEnumerator ResetObject(float resetTime)
		{
			return null;
		}

		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0x2663064", Offset = "0x2663064", VA = "0x2663064")]
		public ResetInteractionObject()
		{
		}
	}
	[Token(Token = "0x20001F2")]
	public class SoccerDemo : MonoBehaviour
	{
		[Token(Token = "0x20005AB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A04C", Offset = "0x146A04C")]
		private sealed class <ResetDelayed>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400231A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400231B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400231C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoccerDemo <>4__this;

			[Token(Token = "0x17000513")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002672")]
				[Address(RVA = "0x2664A74", Offset = "0x2664A74", VA = "0x2664A74", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000514")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002674")]
				[Address(RVA = "0x2664ADC", Offset = "0x2664ADC", VA = "0x2664ADC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600266F")]
			[Address(RVA = "0x2664904", Offset = "0x2664904", VA = "0x2664904")]
			[DebuggerHidden]
			public <ResetDelayed>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6002670")]
			[Address(RVA = "0x2664938", Offset = "0x2664938", VA = "0x2664938", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002671")]
			[Address(RVA = "0x266493C", Offset = "0x266493C", VA = "0x266493C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002673")]
			[Address(RVA = "0x2664A7C", Offset = "0x2664A7C", VA = "0x2664A7C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Animator animator;

		[Token(Token = "0x4000DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 defaultPosition;

		[Token(Token = "0x4000DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Quaternion defaultRotation;

		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0x26647CC", Offset = "0x26647CC", VA = "0x26647CC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0x2664888", Offset = "0x2664888", VA = "0x2664888")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x14829E0", Offset = "0x14829E0")]
		private IEnumerator ResetDelayed()
		{
			return null;
		}

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0x2664930", Offset = "0x2664930", VA = "0x2664930")]
		public SoccerDemo()
		{
		}
	}
	[Token(Token = "0x20001F3")]
	public class TouchWalls : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005AC")]
		public class EffectorLink
		{
			[Token(Token = "0x400231D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool enabled;

			[Token(Token = "0x400231E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public FullBodyBipedEffector effectorType;

			[Token(Token = "0x400231F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public InteractionObject interactionObject;

			[Token(Token = "0x4002320")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform spherecastFrom;

			[Token(Token = "0x4002321")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float spherecastRadius;

			[Token(Token = "0x4002322")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float minDistance;

			[Token(Token = "0x4002323")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float distanceMlp;

			[Token(Token = "0x4002324")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public LayerMask touchLayers;

			[Token(Token = "0x4002325")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float lerpSpeed;

			[Token(Token = "0x4002326")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public float minSwitchTime;

			[Token(Token = "0x4002327")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public float releaseDistance;

			[Token(Token = "0x4002328")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public bool sliding;

			[Token(Token = "0x4002329")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Vector3 raycastDirectionLocal;

			[Token(Token = "0x400232A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private float raycastDistance;

			[Token(Token = "0x400232B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private bool inTouch;

			[Token(Token = "0x400232C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			private RaycastHit hit;

			[Token(Token = "0x400232D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private Vector3 targetPosition;

			[Token(Token = "0x400232E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			private Quaternion targetRotation;

			[Token(Token = "0x400232F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
			private bool initiated;

			[Token(Token = "0x4002330")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private float nextSwitchTime;

			[Token(Token = "0x4002331")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
			private float speedF;

			[Token(Token = "0x6002675")]
			[Address(RVA = "0x2665084", Offset = "0x2665084", VA = "0x2665084")]
			public void Initiate(InteractionSystem interactionSystem)
			{
			}

			[Token(Token = "0x6002676")]
			[Address(RVA = "0x2665D94", Offset = "0x2665D94", VA = "0x2665D94")]
			private bool FindWalls(Vector3 direction)
			{
				return default(bool);
			}

			[Token(Token = "0x6002677")]
			[Address(RVA = "0x2665400", Offset = "0x2665400", VA = "0x2665400")]
			public void Update(InteractionSystem interactionSystem)
			{
			}

			[Token(Token = "0x6002678")]
			[Address(RVA = "0x2665E80", Offset = "0x2665E80", VA = "0x2665E80")]
			private void StopTouch(InteractionSystem interactionSystem)
			{
			}

			[Token(Token = "0x6002679")]
			[Address(RVA = "0x266601C", Offset = "0x266601C", VA = "0x266601C")]
			private void OnInteractionStart(FullBodyBipedEffector effectorType, InteractionObject interactionObject)
			{
			}

			[Token(Token = "0x600267A")]
			[Address(RVA = "0x26660B8", Offset = "0x26660B8", VA = "0x26660B8")]
			private void OnInteractionResume(FullBodyBipedEffector effectorType, InteractionObject interactionObject)
			{
			}

			[Token(Token = "0x600267B")]
			[Address(RVA = "0x2666150", Offset = "0x2666150", VA = "0x2666150")]
			private void OnInteractionStop(FullBodyBipedEffector effectorType, InteractionObject interactionObject)
			{
			}

			[Token(Token = "0x600267C")]
			[Address(RVA = "0x2665BE0", Offset = "0x2665BE0", VA = "0x2665BE0")]
			public void Destroy(InteractionSystem interactionSystem)
			{
			}

			[Token(Token = "0x600267D")]
			[Address(RVA = "0x26661E8", Offset = "0x26661E8", VA = "0x26661E8")]
			public EffectorLink()
			{
			}
		}

		[Token(Token = "0x4000DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractionSystem interactionSystem;

		[Token(Token = "0x4000DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EffectorLink[] effectorLinks;

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0x266500C", Offset = "0x266500C", VA = "0x266500C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0x2665394", Offset = "0x2665394", VA = "0x2665394")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0x2665B18", Offset = "0x2665B18", VA = "0x2665B18")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0x2665D8C", Offset = "0x2665D8C", VA = "0x2665D8C")]
		public TouchWalls()
		{
		}
	}
	[Token(Token = "0x20001F4")]
	public class TransferMotion : MonoBehaviour
	{
		[Token(Token = "0x4000DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1472758", Offset = "0x1472758")]
		public Transform to;

		[Token(Token = "0x4000DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1472790", Offset = "0x1472790")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1472790", Offset = "0x1472790")]
		public float transferMotion;

		[Token(Token = "0x4000DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 lastPosition;

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0x2666224", Offset = "0x2666224", VA = "0x2666224")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0x2666260", Offset = "0x2666260", VA = "0x2666260")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0x26663B8", Offset = "0x26663B8", VA = "0x26663B8")]
		public TransferMotion()
		{
		}
	}
	[Token(Token = "0x20001F5")]
	public class TwoHandedProp : MonoBehaviour
	{
		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x14727E4", Offset = "0x14727E4")]
		public Transform leftHandTarget;

		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FullBodyBipedIK ik;

		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 targetPosRelativeToRight;

		[Token(Token = "0x4000DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Quaternion targetRotRelativeToRight;

		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0x266658C", Offset = "0x266658C", VA = "0x266658C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0x266676C", Offset = "0x266676C", VA = "0x266676C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0x2666A08", Offset = "0x2666A08", VA = "0x2666A08")]
		private void AfterFBBIK()
		{
		}

		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0x2666AD4", Offset = "0x2666AD4", VA = "0x2666AD4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0x2666BF0", Offset = "0x2666BF0", VA = "0x2666BF0")]
		public TwoHandedProp()
		{
		}
	}
	[Token(Token = "0x20001F6")]
	public class UserControlInteractions : UserControlThirdPerson
	{
		[Token(Token = "0x4000DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public CharacterThirdPerson character;

		[Token(Token = "0x4000DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public InteractionSystem interactionSystem;

		[Token(Token = "0x4000DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool disableInputInInteraction;

		[Token(Token = "0x4000DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float enableInputAtProgress;

		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0x2666F68", Offset = "0x2666F68", VA = "0x2666F68", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0x26673E0", Offset = "0x26673E0", VA = "0x26673E0")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0x2667638", Offset = "0x2667638", VA = "0x2667638")]
		public UserControlInteractions()
		{
		}
	}
	[Token(Token = "0x20001F7")]
	public class GrounderDemo : MonoBehaviour
	{
		[Token(Token = "0x4000DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] characters;

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0x2D4792C", Offset = "0x2D4792C", VA = "0x2D4792C")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0x2D47C28", Offset = "0x2D47C28", VA = "0x2D47C28")]
		public void Activate(int index)
		{
		}

		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0x2D47CA8", Offset = "0x2D47CA8", VA = "0x2D47CA8")]
		public GrounderDemo()
		{
		}
	}
	[Token(Token = "0x20001F8")]
	public class PlatformRotator : MonoBehaviour
	{
		[Token(Token = "0x20005AD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A05C", Offset = "0x146A05C")]
		private sealed class <SwitchRotation>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002332")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002333")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002334")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlatformRotator <>4__this;

			[Token(Token = "0x17000515")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002681")]
				[Address(RVA = "0x26629FC", Offset = "0x26629FC", VA = "0x26629FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000516")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002683")]
				[Address(RVA = "0x2662A64", Offset = "0x2662A64", VA = "0x2662A64", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600267E")]
			[Address(RVA = "0x26626AC", Offset = "0x26626AC", VA = "0x26626AC")]
			[DebuggerHidden]
			public <SwitchRotation>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x600267F")]
			[Address(RVA = "0x26628B8", Offset = "0x26628B8", VA = "0x26628B8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002680")]
			[Address(RVA = "0x26628BC", Offset = "0x26628BC", VA = "0x26628BC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002682")]
			[Address(RVA = "0x2662A04", Offset = "0x2662A04", VA = "0x2662A04", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float maxAngle;

		[Token(Token = "0x4000DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float switchRotationTime;

		[Token(Token = "0x4000DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float random;

		[Token(Token = "0x4000DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float rotationSpeed;

		[Token(Token = "0x4000DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 movePosition;

		[Token(Token = "0x4000DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float moveSpeed;

		[Token(Token = "0x4000DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int characterLayer;

		[Token(Token = "0x4000DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion defaultRotation;

		[Token(Token = "0x4000DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion targetRotation;

		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 targetPosition;

		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 velocity;

		[Token(Token = "0x4000DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Rigidbody r;

		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0x26622E0", Offset = "0x26622E0", VA = "0x26622E0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0x2662484", Offset = "0x2662484", VA = "0x2662484")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0x2662408", Offset = "0x2662408", VA = "0x2662408")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1482A44", Offset = "0x1482A44")]
		private IEnumerator SwitchRotation()
		{
			return null;
		}

		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0x26626D8", Offset = "0x26626D8", VA = "0x26626D8")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0x26627BC", Offset = "0x26627BC", VA = "0x26627BC")]
		private void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0x266289C", Offset = "0x266289C", VA = "0x266289C")]
		public PlatformRotator()
		{
		}
	}
	[Token(Token = "0x20001F9")]
	public class BendGoal : MonoBehaviour
	{
		[Token(Token = "0x4000DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LimbIK limbIK;

		[Token(Token = "0x4000DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x147281C", Offset = "0x147281C")]
		public float weight;

		[Token(Token = "0x6000FCC")]
		[Address(RVA = "0x2D3F270", Offset = "0x2D3F270", VA = "0x2D3F270")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FCD")]
		[Address(RVA = "0x2D3F2DC", Offset = "0x2D3F2DC", VA = "0x2D3F2DC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0x2D3F398", Offset = "0x2D3F398", VA = "0x2D3F398")]
		public BendGoal()
		{
		}
	}
	[Token(Token = "0x20001FA")]
	public class Turret : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005AE")]
		public class Part
		{
			[Token(Token = "0x4002335")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform transform;

			[Token(Token = "0x4002336")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private RotationLimit rotationLimit;

			[Token(Token = "0x6002684")]
			[Address(RVA = "0x2666444", Offset = "0x2666444", VA = "0x2666444")]
			public void AimAt(Transform target)
			{
			}

			[Token(Token = "0x6002685")]
			[Address(RVA = "0x2666584", Offset = "0x2666584", VA = "0x2666584")]
			public Part()
			{
			}
		}

		[Token(Token = "0x4000DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Part[] parts;

		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0x26663CC", Offset = "0x26663CC", VA = "0x26663CC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0x266657C", Offset = "0x266657C", VA = "0x266657C")]
		public Turret()
		{
		}
	}
	[Token(Token = "0x20001FB")]
	public class VRIKAvatarScaleCalibrationOculus : MonoBehaviour
	{
		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VRIK ik;

		[Token(Token = "0x4000DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float scaleMlp;

		[Token(Token = "0x6000FD1")]
		[Address(RVA = "0x266765C", Offset = "0x266765C", VA = "0x266765C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000FD2")]
		[Address(RVA = "0x2667818", Offset = "0x2667818", VA = "0x2667818")]
		public VRIKAvatarScaleCalibrationOculus()
		{
		}
	}
	[Token(Token = "0x20001FC")]
	public class HitReactionVRIKTrigger : MonoBehaviour
	{
		[Token(Token = "0x4000DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HitReactionVRIK hitReaction;

		[Token(Token = "0x4000DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float hitForce;

		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string colliderName;

		[Token(Token = "0x6000FD3")]
		[Address(RVA = "0x2D48050", Offset = "0x2D48050", VA = "0x2D48050")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0x2D4821C", Offset = "0x2D4821C", VA = "0x2D4821C")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000FD5")]
		[Address(RVA = "0x2D483E0", Offset = "0x2D483E0", VA = "0x2D483E0")]
		public HitReactionVRIKTrigger()
		{
		}
	}
	[Token(Token = "0x20001FD")]
	public class VRIKCalibrationBasic : MonoBehaviour
	{
		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1472834", Offset = "0x1472834")]
		public VRIK ik;

		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x147286C", Offset = "0x147286C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147286C", Offset = "0x147286C")]
		public Transform centerEyeAnchor;

		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x14728CC", Offset = "0x14728CC")]
		public Vector3 headAnchorPositionOffset;

		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1472904", Offset = "0x1472904")]
		public Vector3 headAnchorRotationOffset;

		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x147293C", Offset = "0x147293C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147293C", Offset = "0x147293C")]
		public Transform leftHandAnchor;

		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147299C", Offset = "0x147299C")]
		public Transform rightHandAnchor;

		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x14729D4", Offset = "0x14729D4")]
		public Vector3 handAnchorPositionOffset;

		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1472A0C", Offset = "0x1472A0C")]
		public Vector3 handAnchorRotationOffset;

		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1472A44", Offset = "0x1472A44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1472A44", Offset = "0x1472A44")]
		public float scaleMlp;

		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1472AA4", Offset = "0x1472AA4")]
		public VRIKCalibrator.CalibrationData data;

		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0x2667828", Offset = "0x2667828", VA = "0x2667828")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000FD7")]
		[Address(RVA = "0x26679C4", Offset = "0x26679C4", VA = "0x26679C4")]
		public VRIKCalibrationBasic()
		{
		}
	}
	[Token(Token = "0x20001FE")]
	public class VRIKCalibrationController : MonoBehaviour
	{
		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1472ADC", Offset = "0x1472ADC")]
		public VRIK ik;

		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1472B14", Offset = "0x1472B14")]
		public VRIKCalibrator.Settings settings;

		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1472B4C", Offset = "0x1472B4C")]
		public Transform headTracker;

		[Token(Token = "0x4000DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1472B84", Offset = "0x1472B84")]
		public Transform bodyTracker;

		[Token(Token = "0x4000DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1472BBC", Offset = "0x1472BBC")]
		public Transform leftHandTracker;

		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1472BF4", Offset = "0x1472BF4")]
		public Transform rightHandTracker;

		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1472C2C", Offset = "0x1472C2C")]
		public Transform leftFootTracker;

		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1472C64", Offset = "0x1472C64")]
		public Transform rightFootTracker;

		[Token(Token = "0x4000DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1472C9C", Offset = "0x1472C9C")]
		public VRIKCalibrator.CalibrationData data;

		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0x2667A40", Offset = "0x2667A40", VA = "0x2667A40")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000FD9")]
		[Address(RVA = "0x2667BAC", Offset = "0x2667BAC", VA = "0x2667BAC")]
		public VRIKCalibrationController()
		{
		}
	}
	[Token(Token = "0x20001FF")]
	public class VRIKPlatform : MonoBehaviour
	{
		[Token(Token = "0x4000DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VRIK ik;

		[Token(Token = "0x4000DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 lastPosition;

		[Token(Token = "0x4000DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Quaternion lastRotation;

		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0x2667C20", Offset = "0x2667C20", VA = "0x2667C20")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0x2667C7C", Offset = "0x2667C7C", VA = "0x2667C7C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000FDC")]
		[Address(RVA = "0x2667E90", Offset = "0x2667E90", VA = "0x2667E90")]
		public VRIKPlatform()
		{
		}
	}
	[Token(Token = "0x2000200")]
	public class VRIKPlatformController : MonoBehaviour
	{
		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VRIK ik;

		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform trackingSpace;

		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform platform;

		[Token(Token = "0x4000E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool moveToPlatform;

		[Token(Token = "0x4000E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform lastPlatform;

		[Token(Token = "0x4000E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 lastPosition;

		[Token(Token = "0x4000E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion lastRotation;

		[Token(Token = "0x6000FDD")]
		[Address(RVA = "0x2667F08", Offset = "0x2667F08", VA = "0x2667F08")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000FDE")]
		[Address(RVA = "0x2668470", Offset = "0x2668470", VA = "0x2668470")]
		public VRIKPlatformController()
		{
		}
	}
	[Token(Token = "0x2000201")]
	public abstract class CharacterAnimationBase : MonoBehaviour
	{
		[Token(Token = "0x4000E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool smoothFollow;

		[Token(Token = "0x4000E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float smoothFollowSpeed;

		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected bool animatePhysics;

		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 lastPosition;

		[Token(Token = "0x4000E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 localPosition;

		[Token(Token = "0x4000E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion localRotation;

		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion lastRotation;

		[Token(Token = "0x170001A6")]
		public virtual bool animationGrounded
		{
			[Token(Token = "0x6000FE0")]
			[Address(RVA = "0x2D3F898", Offset = "0x2D3F898", VA = "0x2D3F898", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0x2D3F874", Offset = "0x2D3F874", VA = "0x2D3F874", Slot = "4")]
		public virtual Vector3 GetPivotPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0x2D3F8A0", Offset = "0x2D3F8A0", VA = "0x2D3F8A0")]
		public float GetAngleFromForward(Vector3 worldDirection)
		{
			return default(float);
		}

		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0x2D3F964", Offset = "0x2D3F964", VA = "0x2D3F964", Slot = "6")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0x2D3FADC", Offset = "0x2D3FADC", VA = "0x2D3FADC", Slot = "7")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0x2D3FD90", Offset = "0x2D3FD90", VA = "0x2D3FD90", Slot = "8")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0x2D3FAEC", Offset = "0x2D3FAEC", VA = "0x2D3FAEC")]
		private void SmoothFollow()
		{
		}

		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0x2D3FDA0", Offset = "0x2D3FDA0", VA = "0x2D3FDA0")]
		protected CharacterAnimationBase()
		{
		}
	}
	[Token(Token = "0x2000202")]
	public class CharacterAnimationSimple : CharacterAnimationBase
	{
		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public CharacterThirdPerson characterController;

		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float pivotOffset;

		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AnimationCurve moveSpeed;

		[Token(Token = "0x4000E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Animator animator;

		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0x2D3FDB8", Offset = "0x2D3FDB8", VA = "0x2D3FDB8", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0x2D3FE20", Offset = "0x2D3FE20", VA = "0x2D3FE20", Slot = "4")]
		public override Vector3 GetPivotPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0x2D3FF4C", Offset = "0x2D3FF4C", VA = "0x2D3FF4C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0x2D400C8", Offset = "0x2D400C8", VA = "0x2D400C8")]
		public CharacterAnimationSimple()
		{
		}
	}
	[Token(Token = "0x2000203")]
	public class CharacterAnimationThirdPerson : CharacterAnimationBase
	{
		[Token(Token = "0x4000E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public CharacterThirdPerson characterController;

		[Token(Token = "0x4000E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float turnSensitivity;

		[Token(Token = "0x4000E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private float turnSpeed;

		[Token(Token = "0x4000E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private float runCycleLegOffset;

		[Token(Token = "0x4000E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1472D04", Offset = "0x1472D04")]
		[SerializeField]
		private float animSpeedMultiplier;

		[Token(Token = "0x4000E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Animator animator;

		[Token(Token = "0x4000E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 lastForward;

		[Token(Token = "0x4000E17")]
		private const string groundedDirectional = "Grounded Directional";

		[Token(Token = "0x4000E18")]
		private const string groundedStrafe = "Grounded Strafe";

		[Token(Token = "0x4000E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float deltaAngle;

		[Token(Token = "0x4000E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float jumpLeg;

		[Token(Token = "0x4000E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool lastJump;

		[Token(Token = "0x170001A7")]
		public override bool animationGrounded
		{
			[Token(Token = "0x6000FED")]
			[Address(RVA = "0x2D4018C", Offset = "0x2D4018C", VA = "0x2D4018C", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0x2D400E0", Offset = "0x2D400E0", VA = "0x2D400E0", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0x2D40170", Offset = "0x2D40170", VA = "0x2D40170", Slot = "4")]
		public override Vector3 GetPivotPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0x2D4027C", Offset = "0x2D4027C", VA = "0x2D4027C", Slot = "9")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0x2D4064C", Offset = "0x2D4064C", VA = "0x2D4064C")]
		private void OnAnimatorMove()
		{
		}

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0x2D40800", Offset = "0x2D40800", VA = "0x2D40800")]
		public CharacterAnimationThirdPerson()
		{
		}
	}
	[Token(Token = "0x2000204")]
	public abstract class CharacterBase : MonoBehaviour
	{
		[Token(Token = "0x4000E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1472D48", Offset = "0x1472D48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1472D48", Offset = "0x1472D48")]
		public Transform gravityTarget;

		[Token(Token = "0x4000E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1472DA8", Offset = "0x1472DA8")]
		public float gravityMultiplier;

		[Token(Token = "0x4000E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float airborneThreshold;

		[Token(Token = "0x4000E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float slopeStartAngle;

		[Token(Token = "0x4000E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float slopeEndAngle;

		[Token(Token = "0x4000E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float spherecastRadius;

		[Token(Token = "0x4000E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public LayerMask groundLayers;

		[Token(Token = "0x4000E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PhysicMaterial zeroFrictionMaterial;

		[Token(Token = "0x4000E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private PhysicMaterial highFrictionMaterial;

		[Token(Token = "0x4000E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Rigidbody r;

		[Token(Token = "0x4000E26")]
		protected const float half = 0.5f;

		[Token(Token = "0x4000E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected float originalHeight;

		[Token(Token = "0x4000E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		protected Vector3 originalCenter;

		[Token(Token = "0x4000E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected CapsuleCollider capsule;

		[Token(Token = "0x6000FF1")]
		public abstract void Move(Vector3 deltaPosition, Quaternion deltaRotation);

		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0x2D40D2C", Offset = "0x2D40D2C", VA = "0x2D40D2C")]
		protected Vector3 GetGravity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0x2D40EB0", Offset = "0x2D40EB0", VA = "0x2D40EB0", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0x2D41078", Offset = "0x2D41078", VA = "0x2D41078", Slot = "6")]
		protected virtual RaycastHit GetSpherecastHit()
		{
			return default(RaycastHit);
		}

		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0x2D412F0", Offset = "0x2D412F0", VA = "0x2D412F0")]
		public float GetAngleFromForward(Vector3 worldDirection)
		{
			return default(float);
		}

		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0x2D413B4", Offset = "0x2D413B4", VA = "0x2D413B4")]
		protected void RigidbodyRotateAround(Vector3 point, Vector3 axis, float angle)
		{
		}

		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0x2D4159C", Offset = "0x2D4159C", VA = "0x2D4159C")]
		protected void ScaleCapsule(float mlp)
		{
		}

		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0x2D4174C", Offset = "0x2D4174C", VA = "0x2D4174C")]
		protected void HighFriction()
		{
		}

		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0x2D41770", Offset = "0x2D41770", VA = "0x2D41770")]
		protected void ZeroFriction()
		{
		}

		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0x2D41794", Offset = "0x2D41794", VA = "0x2D41794")]
		protected float GetSlopeDamper(Vector3 velocity, Vector3 groundNormal)
		{
			return default(float);
		}

		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0x2D41898", Offset = "0x2D41898", VA = "0x2D41898")]
		protected CharacterBase()
		{
		}
	}
	[Token(Token = "0x2000205")]
	public class CharacterThirdPerson : CharacterBase
	{
		[Serializable]
		[Token(Token = "0x20005AF")]
		public enum MoveMode
		{
			[Token(Token = "0x4002338")]
			Directional,
			[Token(Token = "0x4002339")]
			Strafe
		}

		[Token(Token = "0x20005B0")]
		public struct AnimState
		{
			[Token(Token = "0x400233A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 moveDirection;

			[Token(Token = "0x400233B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public bool jump;

			[Token(Token = "0x400233C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
			public bool crouch;

			[Token(Token = "0x400233D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
			public bool onGround;

			[Token(Token = "0x400233E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
			public bool isStrafing;

			[Token(Token = "0x400233F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float yVelocity;

			[Token(Token = "0x4002340")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public bool doubleJump;
		}

		[Token(Token = "0x20005B1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A06C", Offset = "0x146A06C")]
		private sealed class <JumpSmooth>d__75 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002341")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002342")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002343")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CharacterThirdPerson <>4__this;

			[Token(Token = "0x4002344")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 jumpVelocity;

			[Token(Token = "0x4002345")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int <steps>5__2;

			[Token(Token = "0x4002346")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <stepsToTake>5__3;

			[Token(Token = "0x17000517")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002689")]
				[Address(RVA = "0x2D44640", Offset = "0x2D44640", VA = "0x2D44640", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000518")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600268B")]
				[Address(RVA = "0x2D446A8", Offset = "0x2D446A8", VA = "0x2D446A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002686")]
			[Address(RVA = "0x2D44394", Offset = "0x2D44394", VA = "0x2D44394")]
			[DebuggerHidden]
			public <JumpSmooth>d__75(int <>1__state)
			{
			}

			[Token(Token = "0x6002687")]
			[Address(RVA = "0x2D444F4", Offset = "0x2D444F4", VA = "0x2D444F4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002688")]
			[Address(RVA = "0x2D444F8", Offset = "0x2D444F8", VA = "0x2D444F8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600268A")]
			[Address(RVA = "0x2D44648", Offset = "0x2D44648", VA = "0x2D44648", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1472DE0", Offset = "0x1472DE0")]
		public CharacterAnimationBase characterAnimation;

		[Token(Token = "0x4000E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UserControlThirdPerson userControl;

		[Token(Token = "0x4000E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public CameraController cam;

		[Token(Token = "0x4000E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1472E18", Offset = "0x1472E18")]
		public MoveMode moveMode;

		[Token(Token = "0x4000E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public bool smoothPhysics;

		[Token(Token = "0x4000E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float smoothAccelerationTime;

		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float linearAccelerationSpeed;

		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float platformFriction;

		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float groundStickyEffect;

		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float maxVerticalVelocityOnGround;

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float velocityToGroundTangentWeight;

		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1472E50", Offset = "0x1472E50")]
		public bool lookInCameraDirection;

		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float turnSpeed;

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float stationaryTurnSpeedMlp;

		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1472E88", Offset = "0x1472E88")]
		public bool smoothJump;

		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float airSpeed;

		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float airControl;

		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float jumpPower;

		[Token(Token = "0x4000E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float jumpRepeatDelayTime;

		[Token(Token = "0x4000E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public bool doubleJumpEnabled;

		[Token(Token = "0x4000E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public float doubleJumpPowerMlp;

		[Token(Token = "0x4000E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1472EC0", Offset = "0x1472EC0")]
		public LayerMask wallRunLayers;

		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public float wallRunMaxLength;

		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public float wallRunMinMoveMag;

		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public float wallRunMinVelocityY;

		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public float wallRunRotationSpeed;

		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public float wallRunMaxRotationAngle;

		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public float wallRunWeightSpeed;

		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1472EF8", Offset = "0x1472EF8")]
		public float crouchCapsuleScaleMlp;

		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1472F30", Offset = "0x1472F30")]
		private bool <onGround>k__BackingField;

		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public AnimState animState;

		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		protected Vector3 moveDirection;

		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Animator animator;

		[Token(Token = "0x4000E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Vector3 normal;

		[Token(Token = "0x4000E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private Vector3 platformVelocity;

		[Token(Token = "0x4000E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Vector3 platformAngularVelocity;

		[Token(Token = "0x4000E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private RaycastHit hit;

		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private float jumpLeg;

		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private float jumpEndTime;

		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private float forwardMlp;

		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private float groundDistance;

		[Token(Token = "0x4000E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private float lastAirTime;

		[Token(Token = "0x4000E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private float stickyForce;

		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private Vector3 wallNormal;

		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		private Vector3 moveDirectionVelocity;

		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private float wallRunWeight;

		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		private float lastWallRunWeight;

		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private float fixedDeltaTime;

		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		private Vector3 fixedDeltaPosition;

		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private Quaternion fixedDeltaRotation;

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private bool fixedFrame;

		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		private float wallRunEndTime;

		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private Vector3 gravity;

		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		private Vector3 verticalVelocity;

		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private float velocityY;

		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		private bool doubleJumped;

		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E5")]
		private bool jumpReleased;

		[Token(Token = "0x170001A8")]
		public bool onGround
		{
			[Token(Token = "0x6000FFC")]
			[Address(RVA = "0x2D41CBC", Offset = "0x2D41CBC", VA = "0x2D41CBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1482AA8", Offset = "0x1482AA8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000FFD")]
			[Address(RVA = "0x2D41CC4", Offset = "0x2D41CC4", VA = "0x2D41CC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1482AB8", Offset = "0x1482AB8")]
			private set
			{
			}
		}

		[Token(Token = "0x6000FFE")]
		[Address(RVA = "0x2D41CD0", Offset = "0x2D41CD0", VA = "0x2D41CD0", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0x2D41E7C", Offset = "0x2D41E7C", VA = "0x2D41E7C")]
		private void OnAnimatorMove()
		{
		}

		[Token(Token = "0x6001000")]
		[Address(RVA = "0x2D41F0C", Offset = "0x2D41F0C", VA = "0x2D41F0C", Slot = "4")]
		public override void Move(Vector3 deltaPosition, Quaternion deltaRotation)
		{
		}

		[Token(Token = "0x6001001")]
		[Address(RVA = "0x2D4205C", Offset = "0x2D4205C", VA = "0x2D4205C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001002")]
		[Address(RVA = "0x2D42FD8", Offset = "0x2D42FD8", VA = "0x2D42FD8", Slot = "7")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001003")]
		[Address(RVA = "0x2D43370", Offset = "0x2D43370", VA = "0x2D43370", Slot = "8")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6001004")]
		[Address(RVA = "0x2D4266C", Offset = "0x2D4266C", VA = "0x2D4266C")]
		private void MoveFixed(Vector3 deltaPosition)
		{
		}

		[Token(Token = "0x6001005")]
		[Address(RVA = "0x2D43450", Offset = "0x2D43450", VA = "0x2D43450")]
		private void WallRun()
		{
		}

		[Token(Token = "0x6001006")]
		[Address(RVA = "0x2D43A40", Offset = "0x2D43A40", VA = "0x2D43A40")]
		private bool CanWallRun()
		{
			return default(bool);
		}

		[Token(Token = "0x6001007")]
		[Address(RVA = "0x2D430B4", Offset = "0x2D430B4", VA = "0x2D430B4")]
		private Vector3 GetMoveDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001008")]
		[Address(RVA = "0x2D43AE0", Offset = "0x2D43AE0", VA = "0x2D43AE0", Slot = "9")]
		protected virtual void Rotate()
		{
		}

		[Token(Token = "0x6001009")]
		[Address(RVA = "0x2D43F50", Offset = "0x2D43F50", VA = "0x2D43F50")]
		private Vector3 GetForwardDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600100A")]
		[Address(RVA = "0x2D440DC", Offset = "0x2D440DC", VA = "0x2D440DC", Slot = "10")]
		protected virtual bool Jump()
		{
			return default(bool);
		}

		[Token(Token = "0x600100B")]
		[Address(RVA = "0x2D442F4", Offset = "0x2D442F4", VA = "0x2D442F4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1482AC8", Offset = "0x1482AC8")]
		private IEnumerator JumpSmooth(Vector3 jumpVelocity)
		{
			return null;
		}

		[Token(Token = "0x600100C")]
		[Address(RVA = "0x2D42BB8", Offset = "0x2D42BB8", VA = "0x2D42BB8")]
		private void GroundCheck()
		{
		}

		[Token(Token = "0x600100D")]
		[Address(RVA = "0x2D443C0", Offset = "0x2D443C0", VA = "0x2D443C0")]
		public CharacterThirdPerson()
		{
		}
	}
	[Token(Token = "0x2000206")]
	public class SimpleLocomotion : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005B2")]
		public enum RotationMode
		{
			[Token(Token = "0x4002348")]
			Smooth,
			[Token(Token = "0x4002349")]
			Linear
		}

		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1472F40", Offset = "0x1472F40")]
		public CameraController cameraController;

		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1472F78", Offset = "0x1472F78")]
		public float accelerationTime;

		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1472FB0", Offset = "0x1472FB0")]
		public float turnTime;

		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1472FE8", Offset = "0x1472FE8")]
		public bool walkByDefault;

		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1473020", Offset = "0x1473020")]
		public RotationMode rotationMode;

		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1473058", Offset = "0x1473058")]
		public float moveSpeed;

		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1473090", Offset = "0x1473090")]
		private bool <isGrounded>k__BackingField;

		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Animator animator;

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float speed;

		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float angleVel;

		[Token(Token = "0x4000E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float speedVel;

		[Token(Token = "0x4000E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 linearTargetDirection;

		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private CharacterController characterController;

		[Token(Token = "0x170001A9")]
		public bool isGrounded
		{
			[Token(Token = "0x600100E")]
			[Address(RVA = "0x2663D2C", Offset = "0x2663D2C", VA = "0x2663D2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1482B2C", Offset = "0x1482B2C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600100F")]
			[Address(RVA = "0x2663D34", Offset = "0x2663D34", VA = "0x2663D34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1482B3C", Offset = "0x1482B3C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001010")]
		[Address(RVA = "0x2663D40", Offset = "0x2663D40", VA = "0x2663D40")]
		private void Start()
		{
		}

		[Token(Token = "0x6001011")]
		[Address(RVA = "0x2663DDC", Offset = "0x2663DDC", VA = "0x2663DDC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001012")]
		[Address(RVA = "0x26644D8", Offset = "0x26644D8", VA = "0x26644D8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001013")]
		[Address(RVA = "0x2663E30", Offset = "0x2663E30", VA = "0x2663E30")]
		private void Rotate()
		{
		}

		[Token(Token = "0x6001014")]
		[Address(RVA = "0x2664230", Offset = "0x2664230", VA = "0x2664230")]
		private void Move()
		{
		}

		[Token(Token = "0x6001015")]
		[Address(RVA = "0x2664514", Offset = "0x2664514", VA = "0x2664514")]
		private Vector3 GetInputVector()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001016")]
		[Address(RVA = "0x266460C", Offset = "0x266460C", VA = "0x266460C")]
		private Vector3 GetInputVectorRaw()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001017")]
		[Address(RVA = "0x26646AC", Offset = "0x26646AC", VA = "0x26646AC")]
		public SimpleLocomotion()
		{
		}
	}
	[Token(Token = "0x2000207")]
	public class UserControlAI : UserControlThirdPerson
	{
		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform moveTarget;

		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float stoppingDistance;

		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float stoppingThreshold;

		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Navigator navigator;

		[Token(Token = "0x6001018")]
		[Address(RVA = "0x2666BF8", Offset = "0x2666BF8", VA = "0x2666BF8", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001019")]
		[Address(RVA = "0x2666C7C", Offset = "0x2666C7C", VA = "0x2666C7C", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x600101A")]
		[Address(RVA = "0x2666F14", Offset = "0x2666F14", VA = "0x2666F14")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600101B")]
		[Address(RVA = "0x2666F3C", Offset = "0x2666F3C", VA = "0x2666F3C")]
		public UserControlAI()
		{
		}
	}
	[Token(Token = "0x2000208")]
	public class UserControlThirdPerson : MonoBehaviour
	{
		[Token(Token = "0x20005B3")]
		public struct State
		{
			[Token(Token = "0x400234A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 move;

			[Token(Token = "0x400234B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 lookPos;

			[Token(Token = "0x400234C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool crouch;

			[Token(Token = "0x400234D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
			public bool jump;

			[Token(Token = "0x400234E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int actionIndex;
		}

		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool walkByDefault;

		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool canCrouch;

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool canJump;

		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public State state;

		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Transform cam;

		[Token(Token = "0x600101C")]
		[Address(RVA = "0x2666C3C", Offset = "0x2666C3C", VA = "0x2666C3C", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x600101D")]
		[Address(RVA = "0x266707C", Offset = "0x266707C", VA = "0x266707C", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x600101E")]
		[Address(RVA = "0x2666F58", Offset = "0x2666F58", VA = "0x2666F58")]
		public UserControlThirdPerson()
		{
		}
	}
	[Token(Token = "0x2000209")]
	public class ApplicationQuit : MonoBehaviour
	{
		[Token(Token = "0x600101F")]
		[Address(RVA = "0x2D3F22C", Offset = "0x2D3F22C", VA = "0x2D3F22C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001020")]
		[Address(RVA = "0x2D3F268", Offset = "0x2D3F268", VA = "0x2D3F268")]
		public ApplicationQuit()
		{
		}
	}
	[Token(Token = "0x200020A")]
	public class SlowMo : MonoBehaviour
	{
		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyCode[] keyCodes;

		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool mouse0;

		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool mouse1;

		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float slowMoTimeScale;

		[Token(Token = "0x6001021")]
		[Address(RVA = "0x26646D4", Offset = "0x26646D4", VA = "0x26646D4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001022")]
		[Address(RVA = "0x2664708", Offset = "0x2664708", VA = "0x2664708")]
		private bool IsSlowMotion()
		{
			return default(bool);
		}

		[Token(Token = "0x6001023")]
		[Address(RVA = "0x26647B8", Offset = "0x26647B8", VA = "0x26647B8")]
		public SlowMo()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200020B")]
	public class Navigator
	{
		[Token(Token = "0x20005B4")]
		public enum State
		{
			[Token(Token = "0x4002350")]
			Idle,
			[Token(Token = "0x4002351")]
			Seeking,
			[Token(Token = "0x4002352")]
			OnPath
		}

		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x14730A0", Offset = "0x14730A0")]
		public bool activeTargetSeeking;

		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x14730D8", Offset = "0x14730D8")]
		public float cornerRadius;

		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1473110", Offset = "0x1473110")]
		public float recalculateOnPathDistance;

		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1473148", Offset = "0x1473148")]
		public float maxSampleDistance;

		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1473180", Offset = "0x1473180")]
		public float nextPathInterval;

		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14731B8", Offset = "0x14731B8")]
		private Vector3 <normalizedDeltaPosition>k__BackingField;

		[Token(Token = "0x4000E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14731C8", Offset = "0x14731C8")]
		private State <state>k__BackingField;

		[Token(Token = "0x4000E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform transform;

		[Token(Token = "0x4000E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int cornerIndex;

		[Token(Token = "0x4000E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3[] corners;

		[Token(Token = "0x4000E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private NavMeshPath path;

		[Token(Token = "0x4000E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 lastTargetPosition;

		[Token(Token = "0x4000E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool initiated;

		[Token(Token = "0x4000E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float nextPathTime;

		[Token(Token = "0x170001AA")]
		public Vector3 normalizedDeltaPosition
		{
			[Token(Token = "0x6001024")]
			[Address(RVA = "0x2D4D274", Offset = "0x2D4D274", VA = "0x2D4D274")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1482B4C", Offset = "0x1482B4C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001025")]
			[Address(RVA = "0x2D4D280", Offset = "0x2D4D280", VA = "0x2D4D280")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1482B5C", Offset = "0x1482B5C")]
			private set
			{
			}
		}

		[Token(Token = "0x170001AB")]
		public State state
		{
			[Token(Token = "0x6001026")]
			[Address(RVA = "0x2D4D28C", Offset = "0x2D4D28C", VA = "0x2D4D28C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1482B6C", Offset = "0x1482B6C")]
			get
			{
				return default(State);
			}
			[Token(Token = "0x6001027")]
			[Address(RVA = "0x2D4D294", Offset = "0x2D4D294", VA = "0x2D4D294")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1482B7C", Offset = "0x1482B7C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001028")]
		[Address(RVA = "0x2D4D29C", Offset = "0x2D4D29C", VA = "0x2D4D29C")]
		public void Initiate(Transform transform)
		{
		}

		[Token(Token = "0x6001029")]
		[Address(RVA = "0x2D4D394", Offset = "0x2D4D394", VA = "0x2D4D394")]
		public void Update(Vector3 targetPosition)
		{
		}

		[Token(Token = "0x600102A")]
		[Address(RVA = "0x2D4D8EC", Offset = "0x2D4D8EC", VA = "0x2D4D8EC")]
		private void CalculatePath(Vector3 targetPosition)
		{
		}

		[Token(Token = "0x600102B")]
		[Address(RVA = "0x2D4D95C", Offset = "0x2D4D95C", VA = "0x2D4D95C")]
		private bool Find(Vector3 targetPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x600102C")]
		[Address(RVA = "0x2D4D7B4", Offset = "0x2D4D7B4", VA = "0x2D4D7B4")]
		private void Stop()
		{
		}

		[Token(Token = "0x600102D")]
		[Address(RVA = "0x2D4D828", Offset = "0x2D4D828", VA = "0x2D4D828")]
		private float HorDistance(Vector3 p1, Vector3 p2)
		{
			return default(float);
		}

		[Token(Token = "0x600102E")]
		[Address(RVA = "0x2D4DAA4", Offset = "0x2D4DAA4", VA = "0x2D4DAA4")]
		public void Visualize()
		{
		}

		[Token(Token = "0x600102F")]
		[Address(RVA = "0x2D4DC54", Offset = "0x2D4DC54", VA = "0x2D4DC54")]
		public Navigator()
		{
		}
	}
}
namespace Holodia.Network
{
	[Token(Token = "0x200020C")]
	public class HoloClient
	{
		[Token(Token = "0x20005B5")]
		public delegate void OnConnectionSuccess();

		[Token(Token = "0x20005B6")]
		public delegate void OnAuthenticationSuccess();

		[Token(Token = "0x20005B7")]
		public delegate void OnConnectionClosed();

		[Token(Token = "0x20005B8")]
		public delegate void OnAllReadyToRace();

		[Token(Token = "0x20005B9")]
		public delegate void OnPlayerJoined(byte p_playerId);

		[Token(Token = "0x20005BA")]
		public delegate void OnPlayerLeft(byte p_playerId);

		[Token(Token = "0x20005BB")]
		public delegate void OnSendPlayerId(byte p_playerId);

		[Token(Token = "0x20005BC")]
		public delegate void OnSetupRace(byte p_sceneId, uint p_raceLength);

		[Token(Token = "0x20005BD")]
		public delegate void OnUpdatePlayerProgression(byte p_playerId, uint p_distance, Vector3 p_position, Quaternion p_rotation);

		[Token(Token = "0x20005BE")]
		public delegate void OnPlayerReachedFinishLine(byte p_playerId, uint p_timeMillisec);

		[Token(Token = "0x20005BF")]
		public delegate void OnServerSentRequiredVersion(uint p_requiredVersion);

		[Token(Token = "0x20005C0")]
		public delegate void OnPlayerChangedName(byte p_playerId, string p_playerName);

		[Token(Token = "0x20005C1")]
		public delegate void OnServerConnetionRefused(HoloNetworkMessage.ConnectionRefusedReasons p_reason);

		[Token(Token = "0x20005C2")]
		public delegate void OnServerSentSettingEnvironment(byte p_sceneId);

		[Token(Token = "0x20005C3")]
		public delegate void OnServerSentSettingGameplayDistance(uint p_gameplayDistance);

		[Token(Token = "0x20005C4")]
		public delegate void OnServerAddedGhost(uint p_ghostWorkoutId, string p_ghostName, uint p_raceTime);

		[Token(Token = "0x20005C5")]
		public delegate void OnServerRemovedGhost(uint p_ghostWorkoutId);

		[Token(Token = "0x20005C6")]
		public delegate void OnServerPlayerSentInfo(byte p_playerId, int p_userId, ulong p_oculusId, string p_playerName);

		[Token(Token = "0x20005C7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A07C", Offset = "0x146A07C")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4002353")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public HoloClient <>4__this;

			[Token(Token = "0x4002354")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string p_serverIp;

			[Token(Token = "0x4002355")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool p_local;

			[Token(Token = "0x4002356")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
			public bool p_experimental;

			[Token(Token = "0x4002357")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float p_delay;

			[Token(Token = "0x60026D4")]
			[Address(RVA = "0x29B4B54", Offset = "0x29B4B54", VA = "0x29B4B54")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x60026D5")]
			[Address(RVA = "0x29BD8E8", Offset = "0x29BD8E8", VA = "0x29BD8E8")]
			internal void <initialize>b__0()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20005C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A08C", Offset = "0x146A08C")]
		private struct <startClient>d__11 : IAsyncStateMachine
		{
			[Token(Token = "0x4002358")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002359")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x400235A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string p_serverIp;

			[Token(Token = "0x400235B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool p_experimental;

			[Token(Token = "0x400235C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float p_delay;

			[Token(Token = "0x400235D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public HoloClient <>4__this;

			[Token(Token = "0x400235E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public bool p_local;

			[Token(Token = "0x400235F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private IPAddress <ipAddress>5__2;

			[Token(Token = "0x4002360")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private IPEndPoint <remoteEP>5__3;

			[Token(Token = "0x4002361")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Socket <clientSocket>5__4;

			[Token(Token = "0x4002362")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private ConfiguredTaskAwaitable.ConfiguredTaskAwaiter <>u__1;

			[Token(Token = "0x60026D6")]
			[Address(RVA = "0x29BEA60", Offset = "0x29BEA60", VA = "0x29BEA60", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60026D7")]
			[Address(RVA = "0x29BF75C", Offset = "0x29BF75C", VA = "0x29BF75C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20005C9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A09C", Offset = "0x146A09C")]
		private struct <heartbeat>d__13 : IAsyncStateMachine
		{
			[Token(Token = "0x4002363")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002364")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4002365")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public HoloClientStateObject p_client;

			[Token(Token = "0x4002366")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public HoloClient <>4__this;

			[Token(Token = "0x4002367")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private ConfiguredTaskAwaitable.ConfiguredTaskAwaiter <>u__1;

			[Token(Token = "0x60026D8")]
			[Address(RVA = "0x29BD914", Offset = "0x29BD914", VA = "0x29BD914", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60026D9")]
			[Address(RVA = "0x29BDE88", Offset = "0x29BDE88", VA = "0x29BDE88", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20005CA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A0AC", Offset = "0x146A0AC")]
		private struct <sendLoop>d__14 : IAsyncStateMachine
		{
			[Token(Token = "0x4002368")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002369")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x400236A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public HoloClientStateObject p_client;

			[Token(Token = "0x400236B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public HoloClient <>4__this;

			[Token(Token = "0x400236C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private ConfiguredTaskAwaitable.ConfiguredTaskAwaiter <>u__1;

			[Token(Token = "0x60026DA")]
			[Address(RVA = "0x29BE4F8", Offset = "0x29BE4F8", VA = "0x29BE4F8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60026DB")]
			[Address(RVA = "0x29BEA54", Offset = "0x29BEA54", VA = "0x29BEA54", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20005CB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A0BC", Offset = "0x146A0BC")]
		private struct <receiveAsync>d__15 : IAsyncStateMachine
		{
			[Token(Token = "0x400236D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400236E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x400236F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HoloClient <>4__this;

			[Token(Token = "0x4002370")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private ConfiguredTaskAwaitable<int>.ConfiguredTaskAwaiter <>u__1;

			[Token(Token = "0x60026DC")]
			[Address(RVA = "0x29BDE94", Offset = "0x29BDE94", VA = "0x29BDE94", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60026DD")]
			[Address(RVA = "0x29BE4EC", Offset = "0x29BE4EC", VA = "0x29BE4EC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly AutoResetEvent m_sendAwaitingARE;

		[Token(Token = "0x4000E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Thread m_worker;

		[Token(Token = "0x4000E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14731D8", Offset = "0x14731D8")]
		private bool <shouldExit>k__BackingField;

		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14731E8", Offset = "0x14731E8")]
		private HoloClientStateObject <clientState>k__BackingField;

		[Token(Token = "0x170001AC")]
		public bool shouldExit
		{
			[Token(Token = "0x6001030")]
			[Address(RVA = "0x29B4A00", Offset = "0x29B4A00", VA = "0x29B4A00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1482B8C", Offset = "0x1482B8C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001031")]
			[Address(RVA = "0x29B4A08", Offset = "0x29B4A08", VA = "0x29B4A08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1482B9C", Offset = "0x1482B9C")]
			private set
			{
			}
		}

		[Token(Token = "0x170001AD")]
		public HoloClientStateObject clientState
		{
			[Token(Token = "0x6001032")]
			[Address(RVA = "0x29B4A14", Offset = "0x29B4A14", VA = "0x29B4A14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1482BAC", Offset = "0x1482BAC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001033")]
			[Address(RVA = "0x29B4A1C", Offset = "0x29B4A1C", VA = "0x29B4A1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1482BBC", Offset = "0x1482BBC")]
			private set
			{
			}
		}

		[Token(Token = "0x14000032")]
		public event OnConnectionSuccess onConnectionSuccess
		{
			[Token(Token = "0x600104D")]
			[Address(RVA = "0x29B945C", Offset = "0x29B945C", VA = "0x29B945C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1482D5C", Offset = "0x1482D5C")]
			add
			{
			}
			[Token(Token = "0x600104E")]
			[Address(RVA = "0x29B9500", Offset = "0x29B9500", VA = "0x29B9500")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1482D6C", Offset = "0x1482D6C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000033")]
		public event OnAuthenticationSuccess onAuthenticationSuccess
		{
			[Token(Token = "0x600104F")]
			[Address(RVA = "0x29B95A4", Offset = "0x29B95A4", VA = "0x29B95A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1482D7C", Offset = "0x1482D7C")]
			add
			{
			}
			[Token(Token = "0x6001050")]
			[Address(RVA = "0x29B9648", Offset = "0x29B9648", VA = "0x29B9648")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1482D8C", Offset = "0x1482D8C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000034")]
		public event OnConnectionClosed onConnectionClosed
		{
			[Token(Token = "0x6001051")]
			[Address(RVA = "0x29B96EC", Offset = "0x29B96EC", VA = "0x29B96EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1482D9C", Offset = "0x1482D9C")]
			add
			{
			}
			[Token(Token = "0x6001052")]
			[Address(RVA = "0x29B9790", Offset = "0x29B9790", VA = "0x29B9790")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1482DAC", Offset = "0x1482DAC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000035")]
		public event OnAllReadyToRace onAllReadyToRace
		{
			[Token(Token = "0x6001053")]
			[Address(RVA = "0x29B9834", Offset = "0x29B9834", VA = "0x29B9834")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1482DBC", Offset = "0x1482DBC")]
			add
			{
			}
			[Token(Token = "0x6001054")]
			[Address(RVA = "0x29B98D8", Offset = "0x29B98D8", VA = "0x29B98D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1482DCC", Offset = "0x1482DCC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000036")]
		public event OnPlayerJoined onPlayerJoined
		{
			[Token(Token = "0x6001055")]
			[Address(RVA = "0x29B997C", Offset = "0x29B997C", VA = "0x29B997C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1482DDC", Offset = "0x1482DDC")]
			add
			{
			}
			[Token(Token = "0x6001056")]
			[Address(RVA = "0x29B9A20", Offset = "0x29B9A20", VA = "0x29B9A20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1482DEC", Offset = "0x1482DEC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000037")]
		public event OnPlayerLeft onPlayerLeft
		{
			[Token(Token = "0x6001057")]
			[Address(RVA = "0x29B9AC4", Offset = "0x29B9AC4", VA = "0x29B9AC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1482DFC", Offset = "0x1482DFC")]
			add
			{
			}
			[Token(Token = "0x6001058")]
			[Address(RVA = "0x29B9B68", Offset = "0x29B9B68", VA = "0x29B9B68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1482E0C", Offset = "0x1482E0C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000038")]
		public event OnSendPlayerId onSendPlayerId
		{
			[Token(Token = "0x6001059")]
			[Address(RVA = "0x29B9C0C", Offset = "0x29B9C0C", VA = "0x29B9C0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1482E1C", Offset = "0x1482E1C")]
			add
			{
			}
			[Token(Token = "0x600105A")]
			[Address(RVA = "0x29B9CB0", Offset = "0x29B9CB0", VA = "0x29B9CB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1482E2C", Offset = "0x1482E2C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000039")]
		public event OnSetupRace onSetupRace
		{
			[Token(Token = "0x600105B")]
			[Address(RVA = "0x29B9D54", Offset = "0x29B9D54", VA = "0x29B9D54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1482E3C", Offset = "0x1482E3C")]
			add
			{
			}
			[Token(Token = "0x600105C")]
			[Address(RVA = "0x29B9DF8", Offset = "0x29B9DF8", VA = "0x29B9DF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1482E4C", Offset = "0x1482E4C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003A")]
		public event OnUpdatePlayerProgression onUpdatePlayerProgression
		{
			[Token(Token = "0x600105D")]
			[Address(RVA = "0x29B9E9C", Offset = "0x29B9E9C", VA = "0x29B9E9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1482E5C", Offset = "0x1482E5C")]
			add
			{
			}
			[Token(Token = "0x600105E")]
			[Address(RVA = "0x29B9F40", Offset = "0x29B9F40", VA = "0x29B9F40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1482E6C", Offset = "0x1482E6C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003B")]
		public event OnPlayerReachedFinishLine onPlayerReachedFinishLine
		{
			[Token(Token = "0x600105F")]
			[Address(RVA = "0x29B9FE4", Offset = "0x29B9FE4", VA = "0x29B9FE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1482E7C", Offset = "0x1482E7C")]
			add
			{
			}
			[Token(Token = "0x6001060")]
			[Address(RVA = "0x29BA088", Offset = "0x29BA088", VA = "0x29BA088")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1482E8C", Offset = "0x1482E8C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003C")]
		public event OnServerSentRequiredVersion onServerSentRequiredVersion
		{
			[Token(Token = "0x6001061")]
			[Address(RVA = "0x29BA12C", Offset = "0x29BA12C", VA = "0x29BA12C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1482E9C", Offset = "0x1482E9C")]
			add
			{
			}
			[Token(Token = "0x6001062")]
			[Address(RVA = "0x29BA1D0", Offset = "0x29BA1D0", VA = "0x29BA1D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1482EAC", Offset = "0x1482EAC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003D")]
		public event OnPlayerChangedName onServerPlayerChangedName
		{
			[Token(Token = "0x6001063")]
			[Address(RVA = "0x29BA274", Offset = "0x29BA274", VA = "0x29BA274")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1482EBC", Offset = "0x1482EBC")]
			add
			{
			}
			[Token(Token = "0x6001064")]
			[Address(RVA = "0x29BA318", Offset = "0x29BA318", VA = "0x29BA318")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1482ECC", Offset = "0x1482ECC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003E")]
		public event OnServerConnetionRefused onServerConnetionRefused
		{
			[Token(Token = "0x6001065")]
			[Address(RVA = "0x29BA3BC", Offset = "0x29BA3BC", VA = "0x29BA3BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1482EDC", Offset = "0x1482EDC")]
			add
			{
			}
			[Token(Token = "0x6001066")]
			[Address(RVA = "0x29BA460", Offset = "0x29BA460", VA = "0x29BA460")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1482EEC", Offset = "0x1482EEC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003F")]
		public event OnServerSentSettingEnvironment onServerSentSettingEnvironment
		{
			[Token(Token = "0x6001067")]
			[Address(RVA = "0x29BA504", Offset = "0x29BA504", VA = "0x29BA504")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1482EFC", Offset = "0x1482EFC")]
			add
			{
			}
			[Token(Token = "0x6001068")]
			[Address(RVA = "0x29BA5A8", Offset = "0x29BA5A8", VA = "0x29BA5A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1482F0C", Offset = "0x1482F0C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000040")]
		public event OnServerSentSettingGameplayDistance onServerSentSettingGameplayDistance
		{
			[Token(Token = "0x6001069")]
			[Address(RVA = "0x29BA64C", Offset = "0x29BA64C", VA = "0x29BA64C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1482F1C", Offset = "0x1482F1C")]
			add
			{
			}
			[Token(Token = "0x600106A")]
			[Address(RVA = "0x29BA6F0", Offset = "0x29BA6F0", VA = "0x29BA6F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1482F2C", Offset = "0x1482F2C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000041")]
		public event OnServerAddedGhost onServerAddedGhost
		{
			[Token(Token = "0x600106B")]
			[Address(RVA = "0x29BA794", Offset = "0x29BA794", VA = "0x29BA794")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1482F3C", Offset = "0x1482F3C")]
			add
			{
			}
			[Token(Token = "0x600106C")]
			[Address(RVA = "0x29BA838", Offset = "0x29BA838", VA = "0x29BA838")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1482F4C", Offset = "0x1482F4C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000042")]
		public event OnServerRemovedGhost onServerRemovedGhost
		{
			[Token(Token = "0x600106D")]
			[Address(RVA = "0x29BA8DC", Offset = "0x29BA8DC", VA = "0x29BA8DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1482F5C", Offset = "0x1482F5C")]
			add
			{
			}
			[Token(Token = "0x600106E")]
			[Address(RVA = "0x29BA980", Offset = "0x29BA980", VA = "0x29BA980")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1482F6C", Offset = "0x1482F6C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000043")]
		public event OnServerPlayerSentInfo onServerPlayerSentInfo
		{
			[Token(Token = "0x600106F")]
			[Address(RVA = "0x29BAA24", Offset = "0x29BAA24", VA = "0x29BAA24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1482F7C", Offset = "0x1482F7C")]
			add
			{
			}
			[Token(Token = "0x6001070")]
			[Address(RVA = "0x29BAAC8", Offset = "0x29BAAC8", VA = "0x29BAAC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1482F8C", Offset = "0x1482F8C")]
			remove
			{
			}
		}

		[Token(Token = "0x6001034")]
		[Address(RVA = "0x29B4A24", Offset = "0x29B4A24", VA = "0x29B4A24")]
		public int initialize(string p_serverIp, bool p_local, bool p_experimental, float p_delay)
		{
			return default(int);
		}

		[Token(Token = "0x6001035")]
		[Address(RVA = "0x29B4B5C", Offset = "0x29B4B5C", VA = "0x29B4B5C")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x1482BCC", Offset = "0x1482BCC")]
		private void startClient(string p_serverIp, bool p_local, bool p_experimental, float p_delay)
		{
		}

		[Token(Token = "0x6001036")]
		[Address(RVA = "0x29B4C7C", Offset = "0x29B4C7C", VA = "0x29B4C7C")]
		public bool validateServerCertificate(object p_sender, X509Certificate p_certificate, X509Chain p_chain, SslPolicyErrors p_sslPolicyErrors)
		{
			return default(bool);
		}

		[Token(Token = "0x6001037")]
		[Address(RVA = "0x29B4E10", Offset = "0x29B4E10", VA = "0x29B4E10")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x1482C30", Offset = "0x1482C30")]
		public void heartbeat(HoloClientStateObject p_client)
		{
		}

		[Token(Token = "0x6001038")]
		[Address(RVA = "0x29B4EFC", Offset = "0x29B4EFC", VA = "0x29B4EFC")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x1482C94", Offset = "0x1482C94")]
		private void sendLoop(HoloClientStateObject p_client)
		{
		}

		[Token(Token = "0x6001039")]
		[Address(RVA = "0x29B4FE8", Offset = "0x29B4FE8", VA = "0x29B4FE8")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x1482CF8", Offset = "0x1482CF8")]
		private Task receiveAsync()
		{
			return null;
		}

		[Token(Token = "0x600103A")]
		[Address(RVA = "0x29B5110", Offset = "0x29B5110", VA = "0x29B5110")]
		private void parseMessageContent(HoloNetworkMessage p_msg)
		{
		}

		[Token(Token = "0x600103B")]
		[Address(RVA = "0x29B6BC4", Offset = "0x29B6BC4", VA = "0x29B6BC4")]
		private void send(HoloNetworkMessage.MessageType p_msgType, params byte[][] p_data)
		{
		}

		[Token(Token = "0x600103C")]
		[Address(RVA = "0x29B6F1C", Offset = "0x29B6F1C", VA = "0x29B6F1C")]
		public int quit()
		{
			return default(int);
		}

		[Token(Token = "0x600103D")]
		[Address(RVA = "0x29B7204", Offset = "0x29B7204", VA = "0x29B7204")]
		public void sendToken()
		{
		}

		[Token(Token = "0x600103E")]
		[Address(RVA = "0x29B73A0", Offset = "0x29B73A0", VA = "0x29B73A0")]
		public void sendNetVersion()
		{
		}

		[Token(Token = "0x600103F")]
		[Address(RVA = "0x29B75DC", Offset = "0x29B75DC", VA = "0x29B75DC")]
		public void sendChangedScene(byte p_sceneId)
		{
		}

		[Token(Token = "0x6001040")]
		[Address(RVA = "0x29B77E0", Offset = "0x29B77E0", VA = "0x29B77E0")]
		public void sendSetupRace(byte p_sceneId, uint p_raceLength)
		{
		}

		[Token(Token = "0x6001041")]
		[Address(RVA = "0x29B7A4C", Offset = "0x29B7A4C", VA = "0x29B7A4C")]
		public void sendReadyToRace()
		{
		}

		[Token(Token = "0x6001042")]
		[Address(RVA = "0x29B7B44", Offset = "0x29B7B44", VA = "0x29B7B44")]
		public void sendUpdateProgression(uint p_distance, Vector3 p_position, Quaternion p_rotation)
		{
		}

		[Token(Token = "0x6001043")]
		[Address(RVA = "0x29B7FC4", Offset = "0x29B7FC4", VA = "0x29B7FC4")]
		public void sendReachedFinishline(uint p_timeScore)
		{
		}

		[Token(Token = "0x6001044")]
		[Address(RVA = "0x29B8154", Offset = "0x29B8154", VA = "0x29B8154")]
		public void sendPlayerName(string p_playerName)
		{
		}

		[Token(Token = "0x6001045")]
		[Address(RVA = "0x29B8350", Offset = "0x29B8350", VA = "0x29B8350")]
		public void sendAutoJoinParty(HoloServerPartyType p_partyType, HoloServerPartyFitnessCategory p_fitnessCategory)
		{
		}

		[Token(Token = "0x6001046")]
		[Address(RVA = "0x29B8554", Offset = "0x29B8554", VA = "0x29B8554")]
		public void sendPlayerAwayFromHeadset()
		{
		}

		[Token(Token = "0x6001047")]
		[Address(RVA = "0x29B86D4", Offset = "0x29B86D4", VA = "0x29B86D4")]
		public void sendPlayerNotAwayFromHeadset()
		{
		}

		[Token(Token = "0x6001048")]
		[Address(RVA = "0x29B8854", Offset = "0x29B8854", VA = "0x29B8854")]
		public void sendSettingEnvironment(byte p_sceneId)
		{
		}

		[Token(Token = "0x6001049")]
		[Address(RVA = "0x29B89C4", Offset = "0x29B89C4", VA = "0x29B89C4")]
		public void sendSettingGameplayDistance(uint p_distance)
		{
		}

		[Token(Token = "0x600104A")]
		[Address(RVA = "0x29B8B34", Offset = "0x29B8B34", VA = "0x29B8B34")]
		public void sendAddGhostToParty(uint p_ghostWorkoutId, string p_ghostName, uint p_ghostRaceTime)
		{
		}

		[Token(Token = "0x600104B")]
		[Address(RVA = "0x29B8EA0", Offset = "0x29B8EA0", VA = "0x29B8EA0")]
		public void sendDropAllGhosts()
		{
		}

		[Token(Token = "0x600104C")]
		[Address(RVA = "0x29B9020", Offset = "0x29B9020", VA = "0x29B9020")]
		public void sendUserInfo(int p_userId, ulong p_oculusId, string p_playerName)
		{
		}

		[Token(Token = "0x6001071")]
		[Address(RVA = "0x29B5870", Offset = "0x29B5870", VA = "0x29B5870")]
		private void onServerSentTokenKeyInternal()
		{
		}

		[Token(Token = "0x6001072")]
		[Address(RVA = "0x29BAB6C", Offset = "0x29BAB6C", VA = "0x29BAB6C")]
		private void onConnectionSuccessInternal()
		{
		}

		[Token(Token = "0x6001073")]
		[Address(RVA = "0x29B7148", Offset = "0x29B7148", VA = "0x29B7148")]
		private void onConnectionClosedInternal()
		{
		}

		[Token(Token = "0x6001074")]
		[Address(RVA = "0x29B5874", Offset = "0x29B5874", VA = "0x29B5874")]
		private void onAuthenticationSuccessInternal()
		{
		}

		[Token(Token = "0x6001075")]
		[Address(RVA = "0x29B59EC", Offset = "0x29B59EC", VA = "0x29B59EC")]
		private void onServerPlayerJoinedInternal(byte p_playerId)
		{
		}

		[Token(Token = "0x6001076")]
		[Address(RVA = "0x29B5BF0", Offset = "0x29B5BF0", VA = "0x29B5BF0")]
		private void onServerPlayerLeftInternal(byte p_playerId)
		{
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0x29B5E10", Offset = "0x29B5E10", VA = "0x29B5E10")]
		private void onServerSentPlayerIdInternal(byte p_playerId)
		{
		}

		[Token(Token = "0x6001078")]
		[Address(RVA = "0x29B5F08", Offset = "0x29B5F08", VA = "0x29B5F08")]
		private void onServerSetupRaceInternal(byte p_sceneId, uint p_raceLength)
		{
		}

		[Token(Token = "0x6001079")]
		[Address(RVA = "0x29B5930", Offset = "0x29B5930", VA = "0x29B5930")]
		private void onServerAllReadyToRaceInternal()
		{
		}

		[Token(Token = "0x600107A")]
		[Address(RVA = "0x29B6030", Offset = "0x29B6030", VA = "0x29B6030")]
		private void onServerUpdatePlayerProgressionInternal(byte p_playerId, uint p_distance, Vector3 p_position, Quaternion p_rotation)
		{
		}

		[Token(Token = "0x600107B")]
		[Address(RVA = "0x29B5CE8", Offset = "0x29B5CE8", VA = "0x29B5CE8")]
		private void onServerPlayerReachedFinishlineInternal(byte p_playerId, uint p_timeMillisec)
		{
		}

		[Token(Token = "0x600107C")]
		[Address(RVA = "0x29BC3B8", Offset = "0x29BC3B8", VA = "0x29BC3B8")]
		private void onServerSentRequiredVersionInternal(uint p_requiredVersion)
		{
		}

		[Token(Token = "0x600107D")]
		[Address(RVA = "0x29B5AE4", Offset = "0x29B5AE4", VA = "0x29B5AE4")]
		private void onServerPlayerChangedNameInternal(byte p_playerId, string p_playerName)
		{
		}

		[Token(Token = "0x600107E")]
		[Address(RVA = "0x29B62FC", Offset = "0x29B62FC", VA = "0x29B62FC")]
		private void onServerConnectionRefusedInternal(HoloNetworkMessage.ConnectionRefusedReasons p_reason)
		{
		}

		[Token(Token = "0x600107F")]
		[Address(RVA = "0x29B6418", Offset = "0x29B6418", VA = "0x29B6418")]
		private void onServerSentSettingEnvironmentInternal(byte p_sceneId)
		{
		}

		[Token(Token = "0x6001080")]
		[Address(RVA = "0x29B6504", Offset = "0x29B6504", VA = "0x29B6504")]
		private void onServerSentSettingGameplayDistanceInternal(uint p_gameplayDistance)
		{
		}

		[Token(Token = "0x6001081")]
		[Address(RVA = "0x29B65F0", Offset = "0x29B65F0", VA = "0x29B65F0")]
		private void onServerAddedGhostInternal(uint p_ghostWorkoutId, string p_ghostName, uint p_raceTime)
		{
		}

		[Token(Token = "0x6001082")]
		[Address(RVA = "0x29B6724", Offset = "0x29B6724", VA = "0x29B6724")]
		private void onServerRemovedGhostInternal(uint p_ghostWorkoutId)
		{
		}

		[Token(Token = "0x6001083")]
		[Address(RVA = "0x29B681C", Offset = "0x29B681C", VA = "0x29B681C")]
		private void onServerPlayerSentInfoInternal(byte p_playerId, int p_userId, ulong p_oculusId, string p_playerName)
		{
		}

		[Token(Token = "0x6001084")]
		[Address(RVA = "0x29B6A80", Offset = "0x29B6A80", VA = "0x29B6A80")]
		private void onServerSentHeartBeatRequest()
		{
		}

		[Token(Token = "0x6001085")]
		[Address(RVA = "0x29BD868", Offset = "0x29BD868", VA = "0x29BD868")]
		public HoloClient()
		{
		}

		[Token(Token = "0x6001086")]
		[Address(RVA = "0x29BD8E0", Offset = "0x29BD8E0", VA = "0x29BD8E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1482F9C", Offset = "0x1482F9C")]
		private void <startClient>b__11_0()
		{
		}
	}
	[Token(Token = "0x200020D")]
	public class HoloNetworkMessage
	{
		[Token(Token = "0x20005CC")]
		public enum MessageType : byte
		{
			[Token(Token = "0x4002372")]
			CLIENT_SEND_VERSION = 0,
			[Token(Token = "0x4002373")]
			CLIENT_CHANGED_SCENE = 1,
			[Token(Token = "0x4002374")]
			CLIENT_SETUP_RACE = 2,
			[Token(Token = "0x4002375")]
			CLIENT_READY_TO_RACE = 3,
			[Token(Token = "0x4002376")]
			CLIENT_UPDATE_PROGRESSION = 4,
			[Token(Token = "0x4002377")]
			CLIENT_REACHED_FINISHLINE = 5,
			[Token(Token = "0x4002378")]
			CLIENT_SEND_NAME = 6,
			[Token(Token = "0x4002379")]
			CLIENT_AUTO_JOIN_PARTY = 7,
			[Token(Token = "0x400237A")]
			CLIENT_AWAY_FROM_HEADSET = 8,
			[Token(Token = "0x400237B")]
			CLIENT_NOT_AWAY_FROM_HEADSET = 9,
			[Token(Token = "0x400237C")]
			CLIENT_SEND_SETTING_ENVIRONMENT = 10,
			[Token(Token = "0x400237D")]
			CLIENT_SEND_SETTING_GAMEPLAY_DISTANCE = 11,
			[Token(Token = "0x400237E")]
			CLIENT_ADD_GHOST = 12,
			[Token(Token = "0x400237F")]
			CLIENT_DROP_GHOSTS = 13,
			[Token(Token = "0x4002380")]
			CLIENT_SEND_USERINFO = 14,
			[Token(Token = "0x4002381")]
			CLIENT_HEARTBEAT = 15,
			[Token(Token = "0x4002382")]
			CLIENT_HEARTBEAT_ACK = 16,
			[Token(Token = "0x4002383")]
			CLIENT_SEND_TOKEN = 17,
			[Token(Token = "0x4002384")]
			SERVER_PLAYER_JOINED = 128,
			[Token(Token = "0x4002385")]
			SERVER_PLAYER_LEFT = 129,
			[Token(Token = "0x4002386")]
			SERVER_SEND_PLAYER_ID = 130,
			[Token(Token = "0x4002387")]
			SERVER_SETUP_RACE = 131,
			[Token(Token = "0x4002388")]
			SERVER_ALL_READY_TO_RACE = 132,
			[Token(Token = "0x4002389")]
			SERVER_UPDATE_PLAYER_PROGRESSION = 133,
			[Token(Token = "0x400238A")]
			SERVER_PLAYER_REACHED_FINISHLINE = 134,
			[Token(Token = "0x400238B")]
			SERVER_CONNECTION_REFUSED = 135,
			[Token(Token = "0x400238C")]
			SERVER_PLAYER_CHANGED_NAME = 136,
			[Token(Token = "0x400238D")]
			SERVER_SETTING_ENVIRONMENT = 137,
			[Token(Token = "0x400238E")]
			SERVER_SETTING_GAMEPLAY_DISTANCE = 138,
			[Token(Token = "0x400238F")]
			SERVER_ADD_GHOST = 139,
			[Token(Token = "0x4002390")]
			SERVER_REMOVE_GHOST = 140,
			[Token(Token = "0x4002391")]
			SERVER_PLAYER_SENT_INFO = 141,
			[Token(Token = "0x4002392")]
			SERVER_HEARTBEAT = 142,
			[Token(Token = "0x4002393")]
			SERVER_HEARTBEAT_ACK = 143,
			[Token(Token = "0x4002394")]
			SERVER_SEND_TOKEN_KEY = 144,
			[Token(Token = "0x4002395")]
			SERVER_AUTHENTICATION_SUCCESS = 145
		}

		[Token(Token = "0x20005CD")]
		public enum ConnectionRefusedReasons : byte
		{
			[Token(Token = "0x4002397")]
			NONE = byte.MaxValue,
			[Token(Token = "0x4002398")]
			SERVER_FULL = 0,
			[Token(Token = "0x4002399")]
			VERSION_MISMATCH = 1,
			[Token(Token = "0x400239A")]
			AUTHENTICATION_FAILED = 2,
			[Token(Token = "0x400239B")]
			VERSION_CLIENT_AHEAD = 3,
			[Token(Token = "0x400239C")]
			VERSION_SERVER_AHEAD = 4
		}

		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MessageType m_type;

		[Token(Token = "0x4000EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public byte[] m_data;

		[Token(Token = "0x4000EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<HoloServerStateObject> m_onSentcallback;

		[Token(Token = "0x4000EA4")]
		public const int kMessageTypeSize = 1;

		[Token(Token = "0x4000EA5")]
		public const int kMessageLengthSize = 4;

		[Token(Token = "0x4000EA6")]
		public const int kMessageOverhead = 5;

		[Token(Token = "0x6001087")]
		[Address(RVA = "0x29C0320", Offset = "0x29C0320", VA = "0x29C0320")]
		public HoloNetworkMessage()
		{
		}

		[Token(Token = "0x6001088")]
		[Address(RVA = "0x29B6EC4", Offset = "0x29B6EC4", VA = "0x29B6EC4")]
		public HoloNetworkMessage(MessageType p_type, byte[] p_data, [Optional] Action<HoloServerStateObject> p_onSentcallback)
		{
		}

		[Token(Token = "0x6001089")]
		[Address(RVA = "0x29BE3B8", Offset = "0x29BE3B8", VA = "0x29BE3B8")]
		public static HoloNetworkMessage parse(byte[] p_message)
		{
			return null;
		}

		[Token(Token = "0x600108A")]
		[Address(RVA = "0x29BE7FC", Offset = "0x29BE7FC", VA = "0x29BE7FC")]
		public byte[] prepare()
		{
			return null;
		}

		[Token(Token = "0x600108B")]
		[Address(RVA = "0x29B6D98", Offset = "0x29B6D98", VA = "0x29B6D98")]
		public static byte[] concatData(params byte[][] p_data)
		{
			return null;
		}

		[Token(Token = "0x600108C")]
		[Address(RVA = "0x29B776C", Offset = "0x29B776C", VA = "0x29B776C")]
		public static byte[] serialize(byte p_data)
		{
			return null;
		}

		[Token(Token = "0x600108D")]
		[Address(RVA = "0x29C0328", Offset = "0x29C0328", VA = "0x29C0328")]
		public static byte[] serialize(bool p_data)
		{
			return null;
		}

		[Token(Token = "0x600108E")]
		[Address(RVA = "0x29C0390", Offset = "0x29C0390", VA = "0x29C0390")]
		public static byte[] serialize(char p_data)
		{
			return null;
		}

		[Token(Token = "0x600108F")]
		[Address(RVA = "0x29C03F8", Offset = "0x29C03F8", VA = "0x29C03F8")]
		public static byte[] serialize(double p_data)
		{
			return null;
		}

		[Token(Token = "0x6001090")]
		[Address(RVA = "0x29C0468", Offset = "0x29C0468", VA = "0x29C0468")]
		public static byte[] serialize(float p_data)
		{
			return null;
		}

		[Token(Token = "0x6001091")]
		[Address(RVA = "0x29C04D8", Offset = "0x29C04D8", VA = "0x29C04D8")]
		public static byte[] serialize(long p_data)
		{
			return null;
		}

		[Token(Token = "0x6001092")]
		[Address(RVA = "0x29B93F4", Offset = "0x29B93F4", VA = "0x29B93F4")]
		public static byte[] serialize(ulong p_data)
		{
			return null;
		}

		[Token(Token = "0x6001093")]
		[Address(RVA = "0x29B938C", Offset = "0x29B938C", VA = "0x29B938C")]
		public static byte[] serialize(int p_data)
		{
			return null;
		}

		[Token(Token = "0x6001094")]
		[Address(RVA = "0x29B79E4", Offset = "0x29B79E4", VA = "0x29B79E4")]
		public static byte[] serialize(uint p_data)
		{
			return null;
		}

		[Token(Token = "0x6001095")]
		[Address(RVA = "0x29C0540", Offset = "0x29C0540", VA = "0x29C0540")]
		public static byte[] serialize(short p_data)
		{
			return null;
		}

		[Token(Token = "0x6001096")]
		[Address(RVA = "0x29B7574", Offset = "0x29B7574", VA = "0x29B7574")]
		public static byte[] serialize(ushort p_data)
		{
			return null;
		}

		[Token(Token = "0x6001097")]
		[Address(RVA = "0x29B7CE0", Offset = "0x29B7CE0", VA = "0x29B7CE0")]
		public static byte[] serialize(Vector3 p_data)
		{
			return null;
		}

		[Token(Token = "0x6001098")]
		[Address(RVA = "0x29B7E30", Offset = "0x29B7E30", VA = "0x29B7E30")]
		public static byte[] serialize(Quaternion p_data)
		{
			return null;
		}

		[Token(Token = "0x6001099")]
		[Address(RVA = "0x29B8314", Offset = "0x29B8314", VA = "0x29B8314")]
		public static byte[] serialize(string p_data)
		{
			return null;
		}

		[Token(Token = "0x600109A")]
		[Address(RVA = "0x29C05A8", Offset = "0x29C05A8", VA = "0x29C05A8")]
		public static byte[] serialize(ConnectionRefusedReasons p_data)
		{
			return null;
		}
	}
	[Token(Token = "0x200020E")]
	public class HoloServer
	{
		[StructLayout(3)]
		[Token(Token = "0x20005CE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A0CC", Offset = "0x146A0CC")]
		private struct <startListening>d__18 : IAsyncStateMachine
		{
			[Token(Token = "0x400239D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400239E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x400239F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool p_experimental;

			[Token(Token = "0x40023A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public HoloServer <>4__this;

			[Token(Token = "0x40023A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private ConfiguredTaskAwaitable<Socket>.ConfiguredTaskAwaiter <>u__1;

			[Token(Token = "0x60026DE")]
			[Address(RVA = "0x2203F80", Offset = "0x2203F80", VA = "0x2203F80", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60026DF")]
			[Address(RVA = "0x2204474", Offset = "0x2204474", VA = "0x2204474", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x20005CF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A0DC", Offset = "0x146A0DC")]
		private sealed class <>c__DisplayClass19_0
		{
			[Token(Token = "0x40023A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public HoloServerStateObject state;

			[Token(Token = "0x40023A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public HoloServer <>4__this;

			[Token(Token = "0x60026E0")]
			[Address(RVA = "0x2202BF0", Offset = "0x2202BF0", VA = "0x2202BF0")]
			public <>c__DisplayClass19_0()
			{
			}

			[Token(Token = "0x60026E1")]
			[Address(RVA = "0x2202BF8", Offset = "0x2202BF8", VA = "0x2202BF8")]
			internal void <authenticate>b__0()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20005D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A0EC", Offset = "0x146A0EC")]
		private struct <authenticate>d__19 : IAsyncStateMachine
		{
			[Token(Token = "0x40023A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40023A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40023A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public HoloServer <>4__this;

			[Token(Token = "0x40023A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Socket p_clientSocket;

			[Token(Token = "0x40023A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private <>c__DisplayClass19_0 <>8__1;

			[Token(Token = "0x40023A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private ConfiguredTaskAwaitable.ConfiguredTaskAwaiter <>u__1;

			[Token(Token = "0x60026E2")]
			[Address(RVA = "0x2202C7C", Offset = "0x2202C7C", VA = "0x2202C7C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60026E3")]
			[Address(RVA = "0x22034F4", Offset = "0x22034F4", VA = "0x22034F4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20005D1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A0FC", Offset = "0x146A0FC")]
		private struct <heartbeat>d__21 : IAsyncStateMachine
		{
			[Token(Token = "0x40023AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40023AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40023AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public HoloServerStateObject p_client;

			[Token(Token = "0x40023AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public HoloServer <>4__this;

			[Token(Token = "0x40023AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private ConfiguredTaskAwaitable.ConfiguredTaskAwaiter <>u__1;

			[Token(Token = "0x60026E4")]
			[Address(RVA = "0x2203500", Offset = "0x2203500", VA = "0x2203500", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60026E5")]
			[Address(RVA = "0x2203B38", Offset = "0x2203B38", VA = "0x2203B38", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20005D2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A10C", Offset = "0x146A10C")]
		private struct <sendLoop>d__22 : IAsyncStateMachine
		{
			[Token(Token = "0x40023AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40023B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40023B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public HoloServerStateObject p_client;

			[Token(Token = "0x40023B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private HoloNetworkMessage <msg>5__2;

			[Token(Token = "0x40023B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private ConfiguredTaskAwaitable.ConfiguredTaskAwaiter <>u__1;

			[Token(Token = "0x60026E6")]
			[Address(RVA = "0x2203B44", Offset = "0x2203B44", VA = "0x2203B44", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60026E7")]
			[Address(RVA = "0x2203F74", Offset = "0x2203F74", VA = "0x2203F74", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x20005D3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A11C", Offset = "0x146A11C")]
		private sealed class <>c__DisplayClass30_0
		{
			[Token(Token = "0x40023B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public HoloServer <>4__this;

			[Token(Token = "0x40023B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public byte[] p_certification;

			[Token(Token = "0x40023B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool p_experimental;

			[Token(Token = "0x60026E8")]
			[Address(RVA = "0x2202C1C", Offset = "0x2202C1C", VA = "0x2202C1C")]
			public <>c__DisplayClass30_0()
			{
			}

			[Token(Token = "0x60026E9")]
			[Address(RVA = "0x2202C24", Offset = "0x2202C24", VA = "0x2202C24")]
			internal void <initialize>b__0()
			{
			}
		}

		[Token(Token = "0x20005D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A12C", Offset = "0x146A12C")]
		private sealed class <>c__DisplayClass31_0
		{
			[Token(Token = "0x40023B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public HoloServer <>4__this;

			[Token(Token = "0x40023B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public X509Certificate p_certification;

			[Token(Token = "0x40023B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool p_experimental;

			[Token(Token = "0x60026EA")]
			[Address(RVA = "0x2202C4C", Offset = "0x2202C4C", VA = "0x2202C4C")]
			public <>c__DisplayClass31_0()
			{
			}

			[Token(Token = "0x60026EB")]
			[Address(RVA = "0x2202C54", Offset = "0x2202C54", VA = "0x2202C54")]
			internal void <initialize>b__0()
			{
			}
		}

		[Token(Token = "0x4000EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ManualResetEvent m_carryOn;

		[Token(Token = "0x4000EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Thread m_worker;

		[Token(Token = "0x4000EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Socket m_listener;

		[Token(Token = "0x4000EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool m_shouldExit;

		[Token(Token = "0x4000EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private X509Certificate m_serverCertificate;

		[Token(Token = "0x4000EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly object m_clientStatesLocker;

		[Token(Token = "0x4000EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly List<HoloServerStateObject> m_clientStates;

		[Token(Token = "0x4000EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly object m_partiesLocker;

		[Token(Token = "0x4000EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly ushort m_maxPartiesCount;

		[Token(Token = "0x4000EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly List<HoloServerParty> m_parties;

		[Token(Token = "0x170001AE")]
		public HoloServerStateObject[] clientStatesSnaphshot
		{
			[Token(Token = "0x600109B")]
			[Address(RVA = "0x29C05AC", Offset = "0x29C05AC", VA = "0x29C05AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AF")]
		public HoloServerParty[] partiesSnaphshot
		{
			[Token(Token = "0x600109C")]
			[Address(RVA = "0x29C0680", Offset = "0x29C0680", VA = "0x29C0680")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600109D")]
		[Address(RVA = "0x29C0754", Offset = "0x29C0754", VA = "0x29C0754")]
		public HoloServer()
		{
		}

		[Token(Token = "0x600109E")]
		[Address(RVA = "0x29C0894", Offset = "0x29C0894", VA = "0x29C0894")]
		public HoloServer(ushort p_maxPartiesCount)
		{
		}

		[Token(Token = "0x600109F")]
		[Address(RVA = "0x29C09E0", Offset = "0x29C09E0", VA = "0x29C09E0")]
		public void startListening(byte[] p_certification, bool p_experimental)
		{
		}

		[Token(Token = "0x60010A0")]
		[Address(RVA = "0x29C0B4C", Offset = "0x29C0B4C", VA = "0x29C0B4C")]
		public void startListening(X509Certificate p_certification, bool p_experimental)
		{
		}

		[Token(Token = "0x60010A1")]
		[Address(RVA = "0x29C0A68", Offset = "0x29C0A68", VA = "0x29C0A68")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x1482FAC", Offset = "0x1482FAC")]
		private void startListening(bool p_experimental)
		{
		}

		[Token(Token = "0x60010A2")]
		[Address(RVA = "0x29C0B7C", Offset = "0x29C0B7C", VA = "0x29C0B7C")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x1483010", Offset = "0x1483010")]
		public void authenticate(Socket p_clientSocket)
		{
		}

		[Token(Token = "0x60010A3")]
		[Address(RVA = "0x29C0C6C", Offset = "0x29C0C6C", VA = "0x29C0C6C")]
		private static bool validateServerCertificate(object p_sender, X509Certificate p_certificate, X509Chain p_chain, SslPolicyErrors p_sslPolicyErrors)
		{
			return default(bool);
		}

		[Token(Token = "0x60010A4")]
		[Address(RVA = "0x29C0E00", Offset = "0x29C0E00", VA = "0x29C0E00")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x1483074", Offset = "0x1483074")]
		public void heartbeat(HoloServerStateObject p_client)
		{
		}

		[Token(Token = "0x60010A5")]
		[Address(RVA = "0x29C0EEC", Offset = "0x29C0EEC", VA = "0x29C0EEC")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x14830D8", Offset = "0x14830D8")]
		private void sendLoop(HoloServerStateObject p_client)
		{
		}

		[Token(Token = "0x60010A6")]
		[Address(RVA = "0x29C0FBC", Offset = "0x29C0FBC", VA = "0x29C0FBC")]
		public void ReadCallback(IAsyncResult ar)
		{
		}

		[Token(Token = "0x60010A7")]
		[Address(RVA = "0x29C14C8", Offset = "0x29C14C8", VA = "0x29C14C8")]
		private void parseMessageContent(HoloNetworkMessage p_msg, HoloServerStateObject p_fromClient)
		{
		}

		[Token(Token = "0x60010A8")]
		[Address(RVA = "0x29C486C", Offset = "0x29C486C", VA = "0x29C486C")]
		private void sendToAllPartyMembers(HoloServerParty p_party, HoloNetworkMessage.MessageType p_msgType, params byte[][] p_data)
		{
		}

		[Token(Token = "0x60010A9")]
		[Address(RVA = "0x29C4914", Offset = "0x29C4914", VA = "0x29C4914")]
		private void sendToAllPartyMembersButOne(HoloServerParty p_party, HoloServerStateObject p_dontSendTo, HoloNetworkMessage.MessageType p_msgType, params byte[][] p_data)
		{
		}

		[Token(Token = "0x60010AA")]
		[Address(RVA = "0x29C4908", Offset = "0x29C4908", VA = "0x29C4908")]
		private void send(HoloServerStateObject p_clientState, HoloNetworkMessage.MessageType p_msgType, params byte[][] p_data)
		{
		}

		[Token(Token = "0x60010AB")]
		[Address(RVA = "0x29C49C4", Offset = "0x29C49C4", VA = "0x29C49C4")]
		private void send(HoloServerStateObject p_clientState, HoloNetworkMessage.MessageType p_msgType, Action<HoloServerStateObject> p_sendCallback, params byte[][] p_data)
		{
		}

		[Token(Token = "0x60010AC")]
		[Address(RVA = "0x29C4B90", Offset = "0x29C4B90", VA = "0x29C4B90")]
		private void disconnectOnSendCallback(HoloServerStateObject p_clientState)
		{
		}

		[Token(Token = "0x60010AD")]
		[Address(RVA = "0x29C4B94", Offset = "0x29C4B94", VA = "0x29C4B94")]
		public int initialize(byte[] p_certification, bool p_experimental)
		{
			return default(int);
		}

		[Token(Token = "0x60010AE")]
		[Address(RVA = "0x29C4CA0", Offset = "0x29C4CA0", VA = "0x29C4CA0")]
		public int initialize(X509Certificate p_certification, bool p_experimental)
		{
			return default(int);
		}

		[Token(Token = "0x60010AF")]
		[Address(RVA = "0x29C4DAC", Offset = "0x29C4DAC", VA = "0x29C4DAC")]
		public void closeAllClients()
		{
		}

		[Token(Token = "0x60010B0")]
		[Address(RVA = "0x29C1B0C", Offset = "0x29C1B0C", VA = "0x29C1B0C")]
		private void disconnectClient(HoloServerStateObject p_clientSate)
		{
		}

		[Token(Token = "0x60010B1")]
		[Address(RVA = "0x29C535C", Offset = "0x29C535C", VA = "0x29C535C")]
		private void closeClient(HoloServerStateObject p_clientSate)
		{
		}

		[Token(Token = "0x60010B2")]
		[Address(RVA = "0x29C5594", Offset = "0x29C5594", VA = "0x29C5594")]
		private void removeClient(HoloServerStateObject p_clientSate)
		{
		}

		[Token(Token = "0x60010B3")]
		[Address(RVA = "0x29C5660", Offset = "0x29C5660", VA = "0x29C5660")]
		public int quit()
		{
			return default(int);
		}

		[Token(Token = "0x60010B4")]
		[Address(RVA = "0x29C56E4", Offset = "0x29C56E4", VA = "0x29C56E4")]
		private HoloServerParty findJoignableParty(HoloServerPartyType p_wantedType, HoloServerPartyFitnessCategory p_fitnessCategory)
		{
			return null;
		}

		[Token(Token = "0x60010B5")]
		[Address(RVA = "0x29C58E0", Offset = "0x29C58E0", VA = "0x29C58E0")]
		private HoloServerParty createParty(HoloServerPartyType p_wantedType, HoloServerPartyFitnessCategory p_fitnessCategory)
		{
			return null;
		}

		[Token(Token = "0x60010B6")]
		[Address(RVA = "0x29C5A80", Offset = "0x29C5A80", VA = "0x29C5A80")]
		public void lockParty(int p_partyNumber)
		{
		}

		[Token(Token = "0x60010B7")]
		[Address(RVA = "0x29C4F84", Offset = "0x29C4F84", VA = "0x29C4F84")]
		private void onPlayerLeft(HoloServerStateObject p_clientState)
		{
		}

		[Token(Token = "0x60010B8")]
		[Address(RVA = "0x29C1ED0", Offset = "0x29C1ED0", VA = "0x29C1ED0")]
		private void onPlayerSentTokenInternal(HoloServerStateObject p_clientState, byte[] p_token)
		{
		}

		[Token(Token = "0x60010B9")]
		[Address(RVA = "0x29C1C0C", Offset = "0x29C1C0C", VA = "0x29C1C0C")]
		private void onPlayerSentVersionInternal(HoloServerStateObject p_clientState, ushort p_version)
		{
		}

		[Token(Token = "0x60010BA")]
		[Address(RVA = "0x29C21BC", Offset = "0x29C21BC", VA = "0x29C21BC")]
		private void onPlayerChangedSceneInternal(HoloServerStateObject p_clientState, byte p_sceneId)
		{
		}

		[Token(Token = "0x60010BB")]
		[Address(RVA = "0x29C2838", Offset = "0x29C2838", VA = "0x29C2838")]
		private void onPlayerSetupRaceInternal(HoloServerStateObject p_clientState, byte p_sceneId, uint p_raceLength)
		{
		}

		[Token(Token = "0x60010BC")]
		[Address(RVA = "0x29C24D0", Offset = "0x29C24D0", VA = "0x29C24D0")]
		private void onPlayerReadyToRaceInternal(HoloServerStateObject p_clientState)
		{
		}

		[Token(Token = "0x60010BD")]
		[Address(RVA = "0x29C2AB0", Offset = "0x29C2AB0", VA = "0x29C2AB0")]
		private void onPlayerUpdateProgressionInternal(HoloServerStateObject p_clientState, uint p_distance, Vector3 p_position, Quaternion p_rotation)
		{
		}

		[Token(Token = "0x60010BE")]
		[Address(RVA = "0x29C22DC", Offset = "0x29C22DC", VA = "0x29C22DC")]
		private void onPlayerReachedFinishLineInternal(HoloServerStateObject p_clientState, uint p_durationMillisec)
		{
		}

		[Token(Token = "0x60010BF")]
		[Address(RVA = "0x29C25FC", Offset = "0x29C25FC", VA = "0x29C25FC")]
		private void onPlayerSentNameInternal(HoloServerStateObject p_clientState, string p_playerName)
		{
		}

		[Token(Token = "0x60010C0")]
		[Address(RVA = "0x29C2EA8", Offset = "0x29C2EA8", VA = "0x29C2EA8")]
		private void onPlayerAutoJoinPartyInternal(HoloServerStateObject p_clientState, HoloServerPartyType p_wantedType, HoloServerPartyFitnessCategory p_fitnessCategory)
		{
		}

		[Token(Token = "0x60010C1")]
		[Address(RVA = "0x29C3960", Offset = "0x29C3960", VA = "0x29C3960")]
		private void onPlayerAwayFromHeadsetInternal(HoloServerStateObject p_clientState)
		{
		}

		[Token(Token = "0x60010C2")]
		[Address(RVA = "0x29C3A10", Offset = "0x29C3A10", VA = "0x29C3A10")]
		private void onPlayerNotAwayFromHeadsetInternal(HoloServerStateObject p_clientState)
		{
		}

		[Token(Token = "0x60010C3")]
		[Address(RVA = "0x29C3A34", Offset = "0x29C3A34", VA = "0x29C3A34")]
		private void onPlayerSentSettingEnvironmentInternal(HoloServerStateObject p_clientState, byte p_sceneId)
		{
		}

		[Token(Token = "0x60010C4")]
		[Address(RVA = "0x29C3C14", Offset = "0x29C3C14", VA = "0x29C3C14")]
		private void onPlayerSentSettingGameplayDistanceInternal(HoloServerStateObject p_clientState, uint p_gameplayDistance)
		{
		}

		[Token(Token = "0x60010C5")]
		[Address(RVA = "0x29C3DFC", Offset = "0x29C3DFC", VA = "0x29C3DFC")]
		private void onPlayerAddedGhostInternal(HoloServerStateObject p_clientState, uint p_ghostWorkoutId, string p_ghostName, uint p_ghostRaceTime)
		{
		}

		[Token(Token = "0x60010C6")]
		[Address(RVA = "0x29C41A0", Offset = "0x29C41A0", VA = "0x29C41A0")]
		private void onPlayerDropAllGhostsInternal(HoloServerStateObject p_clientState)
		{
		}

		[Token(Token = "0x60010C7")]
		[Address(RVA = "0x29C42E0", Offset = "0x29C42E0", VA = "0x29C42E0")]
		private void onPlayerSentUserInfo(HoloServerStateObject p_clientState, int p_userId, ulong p_oculusId, string p_playerName)
		{
		}

		[Token(Token = "0x60010C8")]
		[Address(RVA = "0x29C46D0", Offset = "0x29C46D0", VA = "0x29C46D0")]
		private void onPlayerSentHeartBeatRequest(HoloServerStateObject p_clientState)
		{
		}
	}
	[Token(Token = "0x200020F")]
	public class HoloServerGhostPlayer
	{
		[Token(Token = "0x4000EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1473318", Offset = "0x1473318")]
		private uint <workoutId>k__BackingField;

		[Token(Token = "0x4000EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1473328", Offset = "0x1473328")]
		private string <name>k__BackingField;

		[Token(Token = "0x4000EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1473338", Offset = "0x1473338")]
		private uint? <raceResultMs>k__BackingField;

		[Token(Token = "0x170001B0")]
		public uint workoutId
		{
			[Token(Token = "0x60010C9")]
			[Address(RVA = "0x2204480", Offset = "0x2204480", VA = "0x2204480")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148313C", Offset = "0x148313C")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x60010CA")]
			[Address(RVA = "0x2204488", Offset = "0x2204488", VA = "0x2204488")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148314C", Offset = "0x148314C")]
			private set
			{
			}
		}

		[Token(Token = "0x170001B1")]
		public string name
		{
			[Token(Token = "0x60010CB")]
			[Address(RVA = "0x2204490", Offset = "0x2204490", VA = "0x2204490")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148315C", Offset = "0x148315C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010CC")]
			[Address(RVA = "0x2204498", Offset = "0x2204498", VA = "0x2204498")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148316C", Offset = "0x148316C")]
			private set
			{
			}
		}

		[Token(Token = "0x170001B2")]
		public uint? raceResultMs
		{
			[Token(Token = "0x60010CD")]
			[Address(RVA = "0x22044A0", Offset = "0x22044A0", VA = "0x22044A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148317C", Offset = "0x148317C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010CE")]
			[Address(RVA = "0x22044A8", Offset = "0x22044A8", VA = "0x22044A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148318C", Offset = "0x148318C")]
			set
			{
			}
		}

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0x22044B0", Offset = "0x22044B0", VA = "0x22044B0")]
		public HoloServerGhostPlayer(uint p_workoutId, string p_ghostName, uint p_raceResultMs)
		{
		}
	}
	[Token(Token = "0x2000210")]
	public enum HoloServerPartyType : byte
	{
		[Token(Token = "0x4000EB5")]
		NONE,
		[Token(Token = "0x4000EB6")]
		RACE
	}
	[Token(Token = "0x2000211")]
	public enum HoloServerPartyFitnessCategory : byte
	{
		[Token(Token = "0x4000EB8")]
		UNKNOWN = byte.MaxValue,
		[Token(Token = "0x4000EB9")]
		ROWING = 0,
		[Token(Token = "0x4000EBA")]
		BIKING = 1,
		[Token(Token = "0x4000EBB")]
		RUNNING = 2,
		[Token(Token = "0x4000EBC")]
		ALL_MIXED = 3,
		[Token(Token = "0x4000EBD")]
		SKIING = 4
	}
	[Token(Token = "0x2000212")]
	public class HoloServerParty
	{
		[StructLayout(3)]
		[Token(Token = "0x20005D5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A13C", Offset = "0x146A13C")]
		private struct <delayKickPlayer>d__28 : IAsyncStateMachine
		{
			[Token(Token = "0x40023BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40023BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40023BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public HoloServerStateObject p_client;

			[Token(Token = "0x40023BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action<HoloServerStateObject> p_onKick;

			[Token(Token = "0x40023BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public HoloServerParty <>4__this;

			[Token(Token = "0x40023BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private ConfiguredTaskAwaitable.ConfiguredTaskAwaiter <>u__1;

			[Token(Token = "0x60026EC")]
			[Address(RVA = "0x22053A8", Offset = "0x22053A8", VA = "0x22053A8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60026ED")]
			[Address(RVA = "0x2205780", Offset = "0x2205780", VA = "0x2205780", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x20005D6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A14C", Offset = "0x146A14C")]
		private sealed class <>c__DisplayClass31_0
		{
			[Token(Token = "0x40023C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public uint p_ghostWorkoutId;

			[Token(Token = "0x60026EE")]
			[Address(RVA = "0x220537C", Offset = "0x220537C", VA = "0x220537C")]
			public <>c__DisplayClass31_0()
			{
			}

			[Token(Token = "0x60026EF")]
			[Address(RVA = "0x2205384", Offset = "0x2205384", VA = "0x2205384")]
			internal bool <getGhost>b__0(HoloServerGhostPlayer x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte m_partyNum;

		[Token(Token = "0x4000EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool m_canJoin;

		[Token(Token = "0x4000EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int m_maxPlayers;

		[Token(Token = "0x4000EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly object m_partyLocker;

		[Token(Token = "0x4000EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HoloServerStateObject[] m_partyMembers;

		[Token(Token = "0x4000EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1473348", Offset = "0x1473348")]
		private List<HoloServerGhostPlayer> <partyGhostMembers>k__BackingField;

		[Token(Token = "0x4000EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public byte? m_scene;

		[Token(Token = "0x4000EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public HoloServerPartyType m_partyType;

		[Token(Token = "0x4000EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		public HoloServerPartyFitnessCategory m_fitnessCategory;

		[Token(Token = "0x4000EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public uint? m_gameplayDistance;

		[Token(Token = "0x170001B3")]
		public bool isFull
		{
			[Token(Token = "0x60010D0")]
			[Address(RVA = "0x2204550", Offset = "0x2204550", VA = "0x2204550")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001B4")]
		public bool isEmpty
		{
			[Token(Token = "0x60010D1")]
			[Address(RVA = "0x2204634", Offset = "0x2204634", VA = "0x2204634")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001B5")]
		public uint playerCount
		{
			[Token(Token = "0x60010D2")]
			[Address(RVA = "0x2204718", Offset = "0x2204718", VA = "0x2204718")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x170001B6")]
		public uint playerAndGhostsCount
		{
			[Token(Token = "0x60010D3")]
			[Address(RVA = "0x2204808", Offset = "0x2204808", VA = "0x2204808")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x170001B7")]
		public byte firstEmptySlot
		{
			[Token(Token = "0x60010D4")]
			[Address(RVA = "0x2204934", Offset = "0x2204934", VA = "0x2204934")]
			get
			{
				return default(byte);
			}
		}

		[Token(Token = "0x170001B8")]
		public bool allPlayersReady
		{
			[Token(Token = "0x60010D5")]
			[Address(RVA = "0x2204A14", Offset = "0x2204A14", VA = "0x2204A14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001B9")]
		public List<HoloServerGhostPlayer> partyGhostMembers
		{
			[Token(Token = "0x60010D6")]
			[Address(RVA = "0x2204B24", Offset = "0x2204B24", VA = "0x2204B24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148319C", Offset = "0x148319C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010D7")]
			[Address(RVA = "0x2204B2C", Offset = "0x2204B2C", VA = "0x2204B2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14831AC", Offset = "0x14831AC")]
			private set
			{
			}
		}

		[Token(Token = "0x60010D8")]
		[Address(RVA = "0x2204B34", Offset = "0x2204B34", VA = "0x2204B34")]
		public HoloServerParty(HoloServerPartyType p_partyType, HoloServerPartyFitnessCategory p_fitnessCategory)
		{
		}

		[Token(Token = "0x60010D9")]
		[Address(RVA = "0x2204C28", Offset = "0x2204C28", VA = "0x2204C28")]
		public void startAutoKickProcedure(HoloServerStateObject p_client, Action<HoloServerStateObject> p_onKick)
		{
		}

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0x2204CC0", Offset = "0x2204CC0", VA = "0x2204CC0")]
		public void abortAutoKickProcedure(HoloServerStateObject p_client)
		{
		}

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0x2204D00", Offset = "0x2204D00", VA = "0x2204D00")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x14831BC", Offset = "0x14831BC")]
		public void delayKickPlayer(HoloServerStateObject p_client, Action<HoloServerStateObject> p_onKick)
		{
		}

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0x2204E04", Offset = "0x2204E04", VA = "0x2204E04")]
		public bool addGhostPlayerToParty(uint p_workoutId, string p_ghostName, uint p_ghostRaceTime)
		{
			return default(bool);
		}

		[Token(Token = "0x60010DD")]
		[Address(RVA = "0x2204F40", Offset = "0x2204F40", VA = "0x2204F40")]
		public uint[] dropAllGhosts()
		{
			return null;
		}

		[Token(Token = "0x60010DE")]
		[Address(RVA = "0x2205234", Offset = "0x2205234", VA = "0x2205234")]
		public HoloServerGhostPlayer getGhost(uint p_ghostWorkoutId)
		{
			return null;
		}

		[Token(Token = "0x60010DF")]
		[Address(RVA = "0x2205170", Offset = "0x2205170", VA = "0x2205170")]
		public void clearGhostsList()
		{
		}
	}
	[Token(Token = "0x2000213")]
	public class HoloServerStateObject
	{
		[Token(Token = "0x4000EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Socket m_workSocket;

		[Token(Token = "0x4000EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SslStream m_sslStream;

		[Token(Token = "0x4000ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly ConcurrentQueue<HoloNetworkMessage> m_sendingMessages;

		[Token(Token = "0x4000ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly AutoResetEvent m_sendAwaitingARE;

		[Token(Token = "0x4000ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public byte[] m_tokenKey;

		[Token(Token = "0x4000ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool m_verifiedHolonetVersion;

		[Token(Token = "0x4000ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool m_verifiedToken;

		[Token(Token = "0x4000ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly Stopwatch m_socketInactivityStopwatch;

		[Token(Token = "0x4000ED0")]
		public const int kBufferSize = 1024;

		[Token(Token = "0x4000ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public byte[] m_buffer;

		[Token(Token = "0x4000ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public readonly object dataLocker;

		[Token(Token = "0x4000ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<byte> data;

		[Token(Token = "0x4000ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public byte m_playerNumber;

		[Token(Token = "0x4000ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public HoloServerParty m_party;

		[Token(Token = "0x4000ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public HoloServerPartyFitnessCategory m_fitnessCategory;

		[Token(Token = "0x4000ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public CancellationTokenSource m_autokickProcedureCancellationToken;

		[Token(Token = "0x4000ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int m_userId;

		[Token(Token = "0x4000ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public ulong m_oculusId;

		[Token(Token = "0x4000EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public string m_playerName;

		[Token(Token = "0x4000EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool m_readyToRace;

		[Token(Token = "0x4000EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		public byte m_scenePlayerIsOn;

		[Token(Token = "0x60010E0")]
		[Address(RVA = "0x22032BC", Offset = "0x22032BC", VA = "0x22032BC")]
		public HoloServerStateObject()
		{
		}
	}
	[Token(Token = "0x2000214")]
	public class HoloClientStateObject
	{
		[Token(Token = "0x4000EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Socket m_workSocket;

		[Token(Token = "0x4000EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SslStream m_sslStream;

		[Token(Token = "0x4000EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly ConcurrentQueue<HoloNetworkMessage> m_sendingMessages;

		[Token(Token = "0x4000EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public byte[] m_tokenKey;

		[Token(Token = "0x4000EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly Stopwatch m_socketInactivityStopwatch;

		[Token(Token = "0x4000EE2")]
		public const int kBufferSize = 1024;

		[Token(Token = "0x4000EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public byte[] m_buffer;

		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly object dataLocker;

		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<byte> data;

		[Token(Token = "0x60010E1")]
		[Address(RVA = "0x29BF630", Offset = "0x29BF630", VA = "0x29BF630")]
		public HoloClientStateObject()
		{
		}
	}
	[Token(Token = "0x2000215")]
	public static class HolonetCryptoUtils
	{
		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly byte[] m_baseCryptoData;

		[Token(Token = "0x60010E2")]
		[Address(RVA = "0x220578C", Offset = "0x220578C", VA = "0x220578C")]
		public static byte[] forgeTokenKey()
		{
			return null;
		}

		[Token(Token = "0x60010E3")]
		[Address(RVA = "0x22058C8", Offset = "0x22058C8", VA = "0x22058C8")]
		public static byte[] forgeToken(byte[] p_tokenKey)
		{
			return null;
		}

		[Token(Token = "0x60010E4")]
		[Address(RVA = "0x2205AE0", Offset = "0x2205AE0", VA = "0x2205AE0")]
		public static bool authenticateToken(byte[] p_token, byte[] p_tokenKey)
		{
			return default(bool);
		}

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0x2205B58", Offset = "0x2205B58", VA = "0x2205B58")]
		public static bool equality(byte[] a1, byte[] b1)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000216")]
	public static class HolonetDebug
	{
		[Token(Token = "0x20005D7")]
		public enum LogLevel
		{
			[Token(Token = "0x40023C2")]
			DEBUG,
			[Token(Token = "0x40023C3")]
			INFO,
			[Token(Token = "0x40023C4")]
			WARNING,
			[Token(Token = "0x40023C5")]
			ERROR
		}

		[Token(Token = "0x4000EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static LogLevel minimalDisplayedLog;

		[Token(Token = "0x60010E7")]
		[Address(RVA = "0x2203A7C", Offset = "0x2203A7C", VA = "0x2203A7C")]
		public static void LogDebug(object p_message, bool p_forceLog = false)
		{
		}

		[Token(Token = "0x60010E8")]
		[Address(RVA = "0x2203EB8", Offset = "0x2203EB8", VA = "0x2203EB8")]
		public static void Log(object p_message, bool p_forceLog = false)
		{
		}

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0x2203438", Offset = "0x2203438", VA = "0x2203438")]
		public static void LogWarning(object p_message, bool p_forceLog = false)
		{
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0x2205CA4", Offset = "0x2205CA4", VA = "0x2205CA4")]
		public static void LogError(object p_message, bool p_forceLog = false)
		{
		}

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0x2205D60", Offset = "0x2205D60", VA = "0x2205D60")]
		public static void DisplayStreamProperties(SslStream stream)
		{
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0x2205EB4", Offset = "0x2205EB4", VA = "0x2205EB4")]
		public static void DisplayCertificateInformation(SslStream stream)
		{
		}

		[Token(Token = "0x60010ED")]
		[Address(RVA = "0x2206248", Offset = "0x2206248", VA = "0x2206248")]
		public static void DisplaySecurityServices(SslStream stream)
		{
		}

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0x22063F8", Offset = "0x22063F8", VA = "0x22063F8")]
		public static void DisplaySecurityLevel(SslStream stream)
		{
		}
	}
	[Token(Token = "0x2000217")]
	public static class NetConstants
	{
		[Token(Token = "0x4000EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly ushort kVersion;

		[Token(Token = "0x4000EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public static readonly bool kDebug;

		[Token(Token = "0x4000EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly ushort kServerPort;

		[Token(Token = "0x4000EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public static readonly ushort kExperimentalServerPort;

		[Token(Token = "0x4000EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly string kServerDNS;

		[Token(Token = "0x4000EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly string kServerLocalDNS;

		[Token(Token = "0x4000EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly string kServerDevDNS;

		[Token(Token = "0x4000EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly int kKickAFHPlayersAfterMillisec;

		[Token(Token = "0x4000EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static readonly int kHeartbeatStart;

		[Token(Token = "0x4000EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static readonly int kHeartbeatInterval;

		[Token(Token = "0x4000EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public static readonly int kHeartbeatTimeout;
	}
}
namespace DG.Tweening
{
	[Token(Token = "0x2000218")]
	public static class DOTweenModuleAudio
	{
		[Token(Token = "0x20005D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A15C", Offset = "0x146A15C")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x40023C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AudioSource target;

			[Token(Token = "0x60026F0")]
			[Address(RVA = "0x1C0B9D0", Offset = "0x1C0B9D0", VA = "0x1C0B9D0")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x60026F1")]
			[Address(RVA = "0x1C0C1C0", Offset = "0x1C0C1C0", VA = "0x1C0C1C0")]
			internal float <DOFade>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x60026F2")]
			[Address(RVA = "0x1C0C1DC", Offset = "0x1C0C1DC", VA = "0x1C0C1DC")]
			internal void <DOFade>b__1(float x)
			{
			}
		}

		[Token(Token = "0x20005D9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A16C", Offset = "0x146A16C")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x40023C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AudioSource target;

			[Token(Token = "0x60026F3")]
			[Address(RVA = "0x1C0BB24", Offset = "0x1C0BB24", VA = "0x1C0BB24")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60026F4")]
			[Address(RVA = "0x1C0C1F8", Offset = "0x1C0C1F8", VA = "0x1C0C1F8")]
			internal float <DOPitch>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x60026F5")]
			[Address(RVA = "0x1C0C214", Offset = "0x1C0C214", VA = "0x1C0C214")]
			internal void <DOPitch>b__1(float x)
			{
			}
		}

		[Token(Token = "0x20005DA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A17C", Offset = "0x146A17C")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x40023C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AudioMixer target;

			[Token(Token = "0x40023C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string floatName;

			[Token(Token = "0x60026F6")]
			[Address(RVA = "0x1C0BC8C", Offset = "0x1C0BC8C", VA = "0x1C0BC8C")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x60026F7")]
			[Address(RVA = "0x1C0C230", Offset = "0x1C0C230", VA = "0x1C0C230")]
			internal float <DOSetFloat>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x60026F8")]
			[Address(RVA = "0x1C0C270", Offset = "0x1C0C270", VA = "0x1C0C270")]
			internal void <DOSetFloat>b__1(float x)
			{
			}
		}

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0x1C0B85C", Offset = "0x1C0B85C", VA = "0x1C0B85C")]
		public static TweenerCore<float, float, FloatOptions> DOFade(this AudioSource target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0x1C0B9D8", Offset = "0x1C0B9D8", VA = "0x1C0B9D8")]
		public static TweenerCore<float, float, FloatOptions> DOPitch(this AudioSource target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60010F3")]
		[Address(RVA = "0x1C0BB2C", Offset = "0x1C0BB2C", VA = "0x1C0BB2C")]
		public static TweenerCore<float, float, FloatOptions> DOSetFloat(this AudioMixer target, string floatName, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x60010F4")]
		[Address(RVA = "0x1C0BC94", Offset = "0x1C0BC94", VA = "0x1C0BC94")]
		public static int DOComplete(this AudioMixer target, bool withCallbacks = false)
		{
			return default(int);
		}

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0x1C0BD0C", Offset = "0x1C0BD0C", VA = "0x1C0BD0C")]
		public static int DOKill(this AudioMixer target, bool complete = false)
		{
			return default(int);
		}

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0x1C0BD84", Offset = "0x1C0BD84", VA = "0x1C0BD84")]
		public static int DOFlip(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x60010F7")]
		[Address(RVA = "0x1C0BDEC", Offset = "0x1C0BDEC", VA = "0x1C0BDEC")]
		public static int DOGoto(this AudioMixer target, float to, bool andPlay = false)
		{
			return default(int);
		}

		[Token(Token = "0x60010F8")]
		[Address(RVA = "0x1C0BE74", Offset = "0x1C0BE74", VA = "0x1C0BE74")]
		public static int DOPause(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x60010F9")]
		[Address(RVA = "0x1C0BEDC", Offset = "0x1C0BEDC", VA = "0x1C0BEDC")]
		public static int DOPlay(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x60010FA")]
		[Address(RVA = "0x1C0BF44", Offset = "0x1C0BF44", VA = "0x1C0BF44")]
		public static int DOPlayBackwards(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x60010FB")]
		[Address(RVA = "0x1C0BFAC", Offset = "0x1C0BFAC", VA = "0x1C0BFAC")]
		public static int DOPlayForward(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x60010FC")]
		[Address(RVA = "0x1C0C014", Offset = "0x1C0C014", VA = "0x1C0C014")]
		public static int DORestart(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x60010FD")]
		[Address(RVA = "0x1C0C084", Offset = "0x1C0C084", VA = "0x1C0C084")]
		public static int DORewind(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0x1C0C0F0", Offset = "0x1C0C0F0", VA = "0x1C0C0F0")]
		public static int DOSmoothRewind(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0x1C0C158", Offset = "0x1C0C158", VA = "0x1C0C158")]
		public static int DOTogglePause(this AudioMixer target)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000219")]
	public static class DOTweenModuleSprite
	{
		[Token(Token = "0x20005DB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A18C", Offset = "0x146A18C")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x40023CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SpriteRenderer target;

			[Token(Token = "0x60026F9")]
			[Address(RVA = "0x1C0C408", Offset = "0x1C0C408", VA = "0x1C0C408")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x60026FA")]
			[Address(RVA = "0x1C0C938", Offset = "0x1C0C938", VA = "0x1C0C938")]
			internal UnityEngine.Color <DOColor>b__0()
			{
				return default(UnityEngine.Color);
			}

			[Token(Token = "0x60026FB")]
			[Address(RVA = "0x1C0C954", Offset = "0x1C0C954", VA = "0x1C0C954")]
			internal void <DOColor>b__1(UnityEngine.Color x)
			{
			}
		}

		[Token(Token = "0x20005DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A19C", Offset = "0x146A19C")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x40023CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SpriteRenderer target;

			[Token(Token = "0x60026FC")]
			[Address(RVA = "0x1C0C55C", Offset = "0x1C0C55C", VA = "0x1C0C55C")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60026FD")]
			[Address(RVA = "0x1C0C970", Offset = "0x1C0C970", VA = "0x1C0C970")]
			internal UnityEngine.Color <DOFade>b__0()
			{
				return default(UnityEngine.Color);
			}

			[Token(Token = "0x60026FE")]
			[Address(RVA = "0x1C0C98C", Offset = "0x1C0C98C", VA = "0x1C0C98C")]
			internal void <DOFade>b__1(UnityEngine.Color x)
			{
			}
		}

		[Token(Token = "0x20005DD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A1AC", Offset = "0x146A1AC")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x40023CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UnityEngine.Color to;

			[Token(Token = "0x40023CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SpriteRenderer target;

			[Token(Token = "0x60026FF")]
			[Address(RVA = "0x1C0C930", Offset = "0x1C0C930", VA = "0x1C0C930")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6002700")]
			[Address(RVA = "0x1C0C9A8", Offset = "0x1C0C9A8", VA = "0x1C0C9A8")]
			internal UnityEngine.Color <DOBlendableColor>b__0()
			{
				return default(UnityEngine.Color);
			}

			[Token(Token = "0x6002701")]
			[Address(RVA = "0x1C0C9B4", Offset = "0x1C0C9B4", VA = "0x1C0C9B4")]
			internal void <DOBlendableColor>b__1(UnityEngine.Color x)
			{
			}
		}

		[Token(Token = "0x6001100")]
		[Address(RVA = "0x1C0C294", Offset = "0x1C0C294", VA = "0x1C0C294")]
		public static TweenerCore<UnityEngine.Color, UnityEngine.Color, ColorOptions> DOColor(this SpriteRenderer target, UnityEngine.Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0x1C0C410", Offset = "0x1C0C410", VA = "0x1C0C410")]
		public static TweenerCore<UnityEngine.Color, UnityEngine.Color, ColorOptions> DOFade(this SpriteRenderer target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001102")]
		[Address(RVA = "0x1C0C564", Offset = "0x1C0C564", VA = "0x1C0C564")]
		public static Sequence DOGradientColor(this SpriteRenderer target, Gradient gradient, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001103")]
		[Address(RVA = "0x1C0C73C", Offset = "0x1C0C73C", VA = "0x1C0C73C")]
		public static Tweener DOBlendableColor(this SpriteRenderer target, UnityEngine.Color endValue, float duration)
		{
			return null;
		}
	}
	[Token(Token = "0x200021A")]
	public static class DOTweenModuleUI
	{
		[Token(Token = "0x20005DE")]
		public static class Utils
		{
			[Token(Token = "0x6002702")]
			[Address(RVA = "0x1CAD9C8", Offset = "0x1CAD9C8", VA = "0x1CAD9C8")]
			public static Vector2 SwitchToRectTransform(RectTransform from, RectTransform to)
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x20005DF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A1BC", Offset = "0x146A1BC")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x40023CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CanvasGroup target;

			[Token(Token = "0x6002703")]
			[Address(RVA = "0x1CAC69C", Offset = "0x1CAC69C", VA = "0x1CAC69C")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6002704")]
			[Address(RVA = "0x1CAC6A4", Offset = "0x1CAC6A4", VA = "0x1CAC6A4")]
			internal float <DOFade>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6002705")]
			[Address(RVA = "0x1CAC6C0", Offset = "0x1CAC6C0", VA = "0x1CAC6C0")]
			internal void <DOFade>b__1(float x)
			{
			}
		}

		[Token(Token = "0x20005E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A1CC", Offset = "0x146A1CC")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x40023CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Graphic target;

			[Token(Token = "0x6002706")]
			[Address(RVA = "0x1CAC964", Offset = "0x1CAC964", VA = "0x1CAC964")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6002707")]
			[Address(RVA = "0x1CAC96C", Offset = "0x1CAC96C", VA = "0x1CAC96C")]
			internal UnityEngine.Color <DOColor>b__0()
			{
				return default(UnityEngine.Color);
			}

			[Token(Token = "0x6002708")]
			[Address(RVA = "0x1CAC990", Offset = "0x1CAC990", VA = "0x1CAC990")]
			internal void <DOColor>b__1(UnityEngine.Color x)
			{
			}
		}

		[Token(Token = "0x20005E1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A1DC", Offset = "0x146A1DC")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x40023D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Graphic target;

			[Token(Token = "0x6002709")]
			[Address(RVA = "0x1CAD048", Offset = "0x1CAD048", VA = "0x1CAD048")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x600270A")]
			[Address(RVA = "0x1CAD050", Offset = "0x1CAD050", VA = "0x1CAD050")]
			internal UnityEngine.Color <DOFade>b__0()
			{
				return default(UnityEngine.Color);
			}

			[Token(Token = "0x600270B")]
			[Address(RVA = "0x1CAD074", Offset = "0x1CAD074", VA = "0x1CAD074")]
			internal void <DOFade>b__1(UnityEngine.Color x)
			{
			}
		}

		[Token(Token = "0x20005E2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A1EC", Offset = "0x146A1EC")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x40023D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UnityEngine.UI.Image target;

			[Token(Token = "0x600270C")]
			[Address(RVA = "0x1CAD56C", Offset = "0x1CAD56C", VA = "0x1CAD56C")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x600270D")]
			[Address(RVA = "0x1CAD574", Offset = "0x1CAD574", VA = "0x1CAD574")]
			internal UnityEngine.Color <DOColor>b__0()
			{
				return default(UnityEngine.Color);
			}

			[Token(Token = "0x600270E")]
			[Address(RVA = "0x1CAD598", Offset = "0x1CAD598", VA = "0x1CAD598")]
			internal void <DOColor>b__1(UnityEngine.Color x)
			{
			}
		}

		[Token(Token = "0x20005E3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A1FC", Offset = "0x146A1FC")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x40023D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UnityEngine.UI.Image target;

			[Token(Token = "0x600270F")]
			[Address(RVA = "0x1CAD68C", Offset = "0x1CAD68C", VA = "0x1CAD68C")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6002710")]
			[Address(RVA = "0x1CAD694", Offset = "0x1CAD694", VA = "0x1CAD694")]
			internal UnityEngine.Color <DOFade>b__0()
			{
				return default(UnityEngine.Color);
			}

			[Token(Token = "0x6002711")]
			[Address(RVA = "0x1CAD6B8", Offset = "0x1CAD6B8", VA = "0x1CAD6B8")]
			internal void <DOFade>b__1(UnityEngine.Color x)
			{
			}
		}

		[Token(Token = "0x20005E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A20C", Offset = "0x146A20C")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x40023D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UnityEngine.UI.Image target;

			[Token(Token = "0x6002712")]
			[Address(RVA = "0x1CAD6DC", Offset = "0x1CAD6DC", VA = "0x1CAD6DC")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6002713")]
			[Address(RVA = "0x1CAD6E4", Offset = "0x1CAD6E4", VA = "0x1CAD6E4")]
			internal float <DOFillAmount>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6002714")]
			[Address(RVA = "0x1CAD700", Offset = "0x1CAD700", VA = "0x1CAD700")]
			internal void <DOFillAmount>b__1(float x)
			{
			}
		}

		[Token(Token = "0x20005E5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A21C", Offset = "0x146A21C")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x40023D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LayoutElement target;

			[Token(Token = "0x6002715")]
			[Address(RVA = "0x1CAD71C", Offset = "0x1CAD71C", VA = "0x1CAD71C")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6002716")]
			[Address(RVA = "0x1CAD724", Offset = "0x1CAD724", VA = "0x1CAD724")]
			internal Vector2 <DOFlexibleSize>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002717")]
			[Address(RVA = "0x1CAD7A4", Offset = "0x1CAD7A4", VA = "0x1CAD7A4")]
			internal void <DOFlexibleSize>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20005E6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A22C", Offset = "0x146A22C")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x40023D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LayoutElement target;

			[Token(Token = "0x6002718")]
			[Address(RVA = "0x1CAD800", Offset = "0x1CAD800", VA = "0x1CAD800")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6002719")]
			[Address(RVA = "0x1CAD808", Offset = "0x1CAD808", VA = "0x1CAD808")]
			internal Vector2 <DOMinSize>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x600271A")]
			[Address(RVA = "0x1CAD888", Offset = "0x1CAD888", VA = "0x1CAD888")]
			internal void <DOMinSize>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20005E7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A23C", Offset = "0x146A23C")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x40023D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LayoutElement target;

			[Token(Token = "0x600271B")]
			[Address(RVA = "0x1CAD8E4", Offset = "0x1CAD8E4", VA = "0x1CAD8E4")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x600271C")]
			[Address(RVA = "0x1CAD8EC", Offset = "0x1CAD8EC", VA = "0x1CAD8EC")]
			internal Vector2 <DOPreferredSize>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x600271D")]
			[Address(RVA = "0x1CAD96C", Offset = "0x1CAD96C", VA = "0x1CAD96C")]
			internal void <DOPreferredSize>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20005E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A24C", Offset = "0x146A24C")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x40023D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Outline target;

			[Token(Token = "0x600271E")]
			[Address(RVA = "0x1CAC6DC", Offset = "0x1CAC6DC", VA = "0x1CAC6DC")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x600271F")]
			[Address(RVA = "0x1CAC6E4", Offset = "0x1CAC6E4", VA = "0x1CAC6E4")]
			internal UnityEngine.Color <DOColor>b__0()
			{
				return default(UnityEngine.Color);
			}

			[Token(Token = "0x6002720")]
			[Address(RVA = "0x1CAC704", Offset = "0x1CAC704", VA = "0x1CAC704")]
			internal void <DOColor>b__1(UnityEngine.Color x)
			{
			}
		}

		[Token(Token = "0x20005E9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A25C", Offset = "0x146A25C")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x40023D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Outline target;

			[Token(Token = "0x6002721")]
			[Address(RVA = "0x1CAC720", Offset = "0x1CAC720", VA = "0x1CAC720")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x6002722")]
			[Address(RVA = "0x1CAC728", Offset = "0x1CAC728", VA = "0x1CAC728")]
			internal UnityEngine.Color <DOFade>b__0()
			{
				return default(UnityEngine.Color);
			}

			[Token(Token = "0x6002723")]
			[Address(RVA = "0x1CAC748", Offset = "0x1CAC748", VA = "0x1CAC748")]
			internal void <DOFade>b__1(UnityEngine.Color x)
			{
			}
		}

		[Token(Token = "0x20005EA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A26C", Offset = "0x146A26C")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x40023D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Outline target;

			[Token(Token = "0x6002724")]
			[Address(RVA = "0x1CAC764", Offset = "0x1CAC764", VA = "0x1CAC764")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x6002725")]
			[Address(RVA = "0x1CAC76C", Offset = "0x1CAC76C", VA = "0x1CAC76C")]
			internal Vector2 <DOScale>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002726")]
			[Address(RVA = "0x1CAC788", Offset = "0x1CAC788", VA = "0x1CAC788")]
			internal void <DOScale>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20005EB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A27C", Offset = "0x146A27C")]
		private sealed class <>c__DisplayClass13_0
		{
			[Token(Token = "0x40023DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6002727")]
			[Address(RVA = "0x1CAC7A4", Offset = "0x1CAC7A4", VA = "0x1CAC7A4")]
			public <>c__DisplayClass13_0()
			{
			}

			[Token(Token = "0x6002728")]
			[Address(RVA = "0x1CAC7AC", Offset = "0x1CAC7AC", VA = "0x1CAC7AC")]
			internal Vector2 <DOAnchorPos>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002729")]
			[Address(RVA = "0x1CAC7C8", Offset = "0x1CAC7C8", VA = "0x1CAC7C8")]
			internal void <DOAnchorPos>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20005EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A28C", Offset = "0x146A28C")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x40023DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x600272A")]
			[Address(RVA = "0x1CAC7E4", Offset = "0x1CAC7E4", VA = "0x1CAC7E4")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x600272B")]
			[Address(RVA = "0x1CAC7EC", Offset = "0x1CAC7EC", VA = "0x1CAC7EC")]
			internal Vector2 <DOAnchorPosX>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x600272C")]
			[Address(RVA = "0x1CAC808", Offset = "0x1CAC808", VA = "0x1CAC808")]
			internal void <DOAnchorPosX>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20005ED")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A29C", Offset = "0x146A29C")]
		private sealed class <>c__DisplayClass15_0
		{
			[Token(Token = "0x40023DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x600272D")]
			[Address(RVA = "0x1CAC824", Offset = "0x1CAC824", VA = "0x1CAC824")]
			public <>c__DisplayClass15_0()
			{
			}

			[Token(Token = "0x600272E")]
			[Address(RVA = "0x1CAC82C", Offset = "0x1CAC82C", VA = "0x1CAC82C")]
			internal Vector2 <DOAnchorPosY>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x600272F")]
			[Address(RVA = "0x1CAC848", Offset = "0x1CAC848", VA = "0x1CAC848")]
			internal void <DOAnchorPosY>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20005EE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A2AC", Offset = "0x146A2AC")]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x40023DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6002730")]
			[Address(RVA = "0x1CAC864", Offset = "0x1CAC864", VA = "0x1CAC864")]
			public <>c__DisplayClass16_0()
			{
			}

			[Token(Token = "0x6002731")]
			[Address(RVA = "0x1CAC86C", Offset = "0x1CAC86C", VA = "0x1CAC86C")]
			internal Vector3 <DOAnchorPos3D>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002732")]
			[Address(RVA = "0x1CAC888", Offset = "0x1CAC888", VA = "0x1CAC888")]
			internal void <DOAnchorPos3D>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x20005EF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A2BC", Offset = "0x146A2BC")]
		private sealed class <>c__DisplayClass17_0
		{
			[Token(Token = "0x40023DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6002733")]
			[Address(RVA = "0x1CAC8A4", Offset = "0x1CAC8A4", VA = "0x1CAC8A4")]
			public <>c__DisplayClass17_0()
			{
			}

			[Token(Token = "0x6002734")]
			[Address(RVA = "0x1CAC8AC", Offset = "0x1CAC8AC", VA = "0x1CAC8AC")]
			internal Vector3 <DOAnchorPos3DX>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002735")]
			[Address(RVA = "0x1CAC8C8", Offset = "0x1CAC8C8", VA = "0x1CAC8C8")]
			internal void <DOAnchorPos3DX>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x20005F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A2CC", Offset = "0x146A2CC")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x40023DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6002736")]
			[Address(RVA = "0x1CAC8E4", Offset = "0x1CAC8E4", VA = "0x1CAC8E4")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x6002737")]
			[Address(RVA = "0x1CAC8EC", Offset = "0x1CAC8EC", VA = "0x1CAC8EC")]
			internal Vector3 <DOAnchorPos3DY>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002738")]
			[Address(RVA = "0x1CAC908", Offset = "0x1CAC908", VA = "0x1CAC908")]
			internal void <DOAnchorPos3DY>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x20005F1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A2DC", Offset = "0x146A2DC")]
		private sealed class <>c__DisplayClass19_0
		{
			[Token(Token = "0x40023E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6002739")]
			[Address(RVA = "0x1CAC924", Offset = "0x1CAC924", VA = "0x1CAC924")]
			public <>c__DisplayClass19_0()
			{
			}

			[Token(Token = "0x600273A")]
			[Address(RVA = "0x1CAC92C", Offset = "0x1CAC92C", VA = "0x1CAC92C")]
			internal Vector3 <DOAnchorPos3DZ>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x600273B")]
			[Address(RVA = "0x1CAC948", Offset = "0x1CAC948", VA = "0x1CAC948")]
			internal void <DOAnchorPos3DZ>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x20005F2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A2EC", Offset = "0x146A2EC")]
		private sealed class <>c__DisplayClass20_0
		{
			[Token(Token = "0x40023E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x600273C")]
			[Address(RVA = "0x1CAC9B4", Offset = "0x1CAC9B4", VA = "0x1CAC9B4")]
			public <>c__DisplayClass20_0()
			{
			}

			[Token(Token = "0x600273D")]
			[Address(RVA = "0x1CAC9BC", Offset = "0x1CAC9BC", VA = "0x1CAC9BC")]
			internal Vector2 <DOAnchorMax>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x600273E")]
			[Address(RVA = "0x1CAC9D8", Offset = "0x1CAC9D8", VA = "0x1CAC9D8")]
			internal void <DOAnchorMax>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20005F3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A2FC", Offset = "0x146A2FC")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x40023E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x600273F")]
			[Address(RVA = "0x1CAC9F4", Offset = "0x1CAC9F4", VA = "0x1CAC9F4")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x6002740")]
			[Address(RVA = "0x1CAC9FC", Offset = "0x1CAC9FC", VA = "0x1CAC9FC")]
			internal Vector2 <DOAnchorMin>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002741")]
			[Address(RVA = "0x1CACA18", Offset = "0x1CACA18", VA = "0x1CACA18")]
			internal void <DOAnchorMin>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20005F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A30C", Offset = "0x146A30C")]
		private sealed class <>c__DisplayClass22_0
		{
			[Token(Token = "0x40023E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6002742")]
			[Address(RVA = "0x1CACA34", Offset = "0x1CACA34", VA = "0x1CACA34")]
			public <>c__DisplayClass22_0()
			{
			}

			[Token(Token = "0x6002743")]
			[Address(RVA = "0x1CACA3C", Offset = "0x1CACA3C", VA = "0x1CACA3C")]
			internal Vector2 <DOPivot>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002744")]
			[Address(RVA = "0x1CACA58", Offset = "0x1CACA58", VA = "0x1CACA58")]
			internal void <DOPivot>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20005F5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A31C", Offset = "0x146A31C")]
		private sealed class <>c__DisplayClass23_0
		{
			[Token(Token = "0x40023E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6002745")]
			[Address(RVA = "0x1CACA74", Offset = "0x1CACA74", VA = "0x1CACA74")]
			public <>c__DisplayClass23_0()
			{
			}

			[Token(Token = "0x6002746")]
			[Address(RVA = "0x1CACA7C", Offset = "0x1CACA7C", VA = "0x1CACA7C")]
			internal Vector2 <DOPivotX>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002747")]
			[Address(RVA = "0x1CACA98", Offset = "0x1CACA98", VA = "0x1CACA98")]
			internal void <DOPivotX>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20005F6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A32C", Offset = "0x146A32C")]
		private sealed class <>c__DisplayClass24_0
		{
			[Token(Token = "0x40023E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6002748")]
			[Address(RVA = "0x1CACAB4", Offset = "0x1CACAB4", VA = "0x1CACAB4")]
			public <>c__DisplayClass24_0()
			{
			}

			[Token(Token = "0x6002749")]
			[Address(RVA = "0x1CACABC", Offset = "0x1CACABC", VA = "0x1CACABC")]
			internal Vector2 <DOPivotY>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x600274A")]
			[Address(RVA = "0x1CACAD8", Offset = "0x1CACAD8", VA = "0x1CACAD8")]
			internal void <DOPivotY>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20005F7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A33C", Offset = "0x146A33C")]
		private sealed class <>c__DisplayClass25_0
		{
			[Token(Token = "0x40023E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x600274B")]
			[Address(RVA = "0x1CACAF4", Offset = "0x1CACAF4", VA = "0x1CACAF4")]
			public <>c__DisplayClass25_0()
			{
			}

			[Token(Token = "0x600274C")]
			[Address(RVA = "0x1CACAFC", Offset = "0x1CACAFC", VA = "0x1CACAFC")]
			internal Vector2 <DOSizeDelta>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x600274D")]
			[Address(RVA = "0x1CACB18", Offset = "0x1CACB18", VA = "0x1CACB18")]
			internal void <DOSizeDelta>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20005F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A34C", Offset = "0x146A34C")]
		private sealed class <>c__DisplayClass26_0
		{
			[Token(Token = "0x40023E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x600274E")]
			[Address(RVA = "0x1CACB34", Offset = "0x1CACB34", VA = "0x1CACB34")]
			public <>c__DisplayClass26_0()
			{
			}

			[Token(Token = "0x600274F")]
			[Address(RVA = "0x1CACB3C", Offset = "0x1CACB3C", VA = "0x1CACB3C")]
			internal Vector3 <DOPunchAnchorPos>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002750")]
			[Address(RVA = "0x1CACBCC", Offset = "0x1CACBCC", VA = "0x1CACBCC")]
			internal void <DOPunchAnchorPos>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x20005F9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A35C", Offset = "0x146A35C")]
		private sealed class <>c__DisplayClass27_0
		{
			[Token(Token = "0x40023E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6002751")]
			[Address(RVA = "0x1CACC70", Offset = "0x1CACC70", VA = "0x1CACC70")]
			public <>c__DisplayClass27_0()
			{
			}

			[Token(Token = "0x6002752")]
			[Address(RVA = "0x1CACC78", Offset = "0x1CACC78", VA = "0x1CACC78")]
			internal Vector3 <DOShakeAnchorPos>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002753")]
			[Address(RVA = "0x1CACD08", Offset = "0x1CACD08", VA = "0x1CACD08")]
			internal void <DOShakeAnchorPos>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x20005FA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A36C", Offset = "0x146A36C")]
		private sealed class <>c__DisplayClass28_0
		{
			[Token(Token = "0x40023E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x6002754")]
			[Address(RVA = "0x1CACDAC", Offset = "0x1CACDAC", VA = "0x1CACDAC")]
			public <>c__DisplayClass28_0()
			{
			}

			[Token(Token = "0x6002755")]
			[Address(RVA = "0x1CACDB4", Offset = "0x1CACDB4", VA = "0x1CACDB4")]
			internal Vector3 <DOShakeAnchorPos>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002756")]
			[Address(RVA = "0x1CACE44", Offset = "0x1CACE44", VA = "0x1CACE44")]
			internal void <DOShakeAnchorPos>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x20005FB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A37C", Offset = "0x146A37C")]
		private sealed class <>c__DisplayClass29_0
		{
			[Token(Token = "0x40023EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x40023EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float startPosY;

			[Token(Token = "0x40023EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool offsetYSet;

			[Token(Token = "0x40023ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float offsetY;

			[Token(Token = "0x40023EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Sequence s;

			[Token(Token = "0x40023EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector2 endValue;

			[Token(Token = "0x6002757")]
			[Address(RVA = "0x1CACEE8", Offset = "0x1CACEE8", VA = "0x1CACEE8")]
			public <>c__DisplayClass29_0()
			{
			}

			[Token(Token = "0x6002758")]
			[Address(RVA = "0x1CACEF0", Offset = "0x1CACEF0", VA = "0x1CACEF0")]
			internal Vector2 <DOJumpAnchorPos>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002759")]
			[Address(RVA = "0x1CACF0C", Offset = "0x1CACF0C", VA = "0x1CACF0C")]
			internal void <DOJumpAnchorPos>b__1(Vector2 x)
			{
			}

			[Token(Token = "0x600275A")]
			[Address(RVA = "0x1CACF28", Offset = "0x1CACF28", VA = "0x1CACF28")]
			internal void <DOJumpAnchorPos>b__2()
			{
			}

			[Token(Token = "0x600275B")]
			[Address(RVA = "0x1CACF5C", Offset = "0x1CACF5C", VA = "0x1CACF5C")]
			internal Vector2 <DOJumpAnchorPos>b__3()
			{
				return default(Vector2);
			}

			[Token(Token = "0x600275C")]
			[Address(RVA = "0x1CACF78", Offset = "0x1CACF78", VA = "0x1CACF78")]
			internal void <DOJumpAnchorPos>b__4(Vector2 x)
			{
			}

			[Token(Token = "0x600275D")]
			[Address(RVA = "0x1CACF94", Offset = "0x1CACF94", VA = "0x1CACF94")]
			internal void <DOJumpAnchorPos>b__5()
			{
			}
		}

		[Token(Token = "0x20005FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A38C", Offset = "0x146A38C")]
		private sealed class <>c__DisplayClass30_0
		{
			[Token(Token = "0x40023F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ScrollRect target;

			[Token(Token = "0x600275E")]
			[Address(RVA = "0x1CAD098", Offset = "0x1CAD098", VA = "0x1CAD098")]
			public <>c__DisplayClass30_0()
			{
			}

			[Token(Token = "0x600275F")]
			[Address(RVA = "0x1CAD0A0", Offset = "0x1CAD0A0", VA = "0x1CAD0A0")]
			internal Vector2 <DONormalizedPos>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002760")]
			[Address(RVA = "0x1CAD110", Offset = "0x1CAD110", VA = "0x1CAD110")]
			internal void <DONormalizedPos>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x20005FD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A39C", Offset = "0x146A39C")]
		private sealed class <>c__DisplayClass31_0
		{
			[Token(Token = "0x40023F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ScrollRect target;

			[Token(Token = "0x6002761")]
			[Address(RVA = "0x1CAD15C", Offset = "0x1CAD15C", VA = "0x1CAD15C")]
			public <>c__DisplayClass31_0()
			{
			}

			[Token(Token = "0x6002762")]
			[Address(RVA = "0x1CAD164", Offset = "0x1CAD164", VA = "0x1CAD164")]
			internal float <DOHorizontalNormalizedPos>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6002763")]
			[Address(RVA = "0x1CAD180", Offset = "0x1CAD180", VA = "0x1CAD180")]
			internal void <DOHorizontalNormalizedPos>b__1(float x)
			{
			}
		}

		[Token(Token = "0x20005FE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A3AC", Offset = "0x146A3AC")]
		private sealed class <>c__DisplayClass32_0
		{
			[Token(Token = "0x40023F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ScrollRect target;

			[Token(Token = "0x6002764")]
			[Address(RVA = "0x1CAD19C", Offset = "0x1CAD19C", VA = "0x1CAD19C")]
			public <>c__DisplayClass32_0()
			{
			}

			[Token(Token = "0x6002765")]
			[Address(RVA = "0x1CAD1A4", Offset = "0x1CAD1A4", VA = "0x1CAD1A4")]
			internal float <DOVerticalNormalizedPos>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6002766")]
			[Address(RVA = "0x1CAD1C0", Offset = "0x1CAD1C0", VA = "0x1CAD1C0")]
			internal void <DOVerticalNormalizedPos>b__1(float x)
			{
			}
		}

		[Token(Token = "0x20005FF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A3BC", Offset = "0x146A3BC")]
		private sealed class <>c__DisplayClass33_0
		{
			[Token(Token = "0x40023F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Slider target;

			[Token(Token = "0x6002767")]
			[Address(RVA = "0x1CAD1DC", Offset = "0x1CAD1DC", VA = "0x1CAD1DC")]
			public <>c__DisplayClass33_0()
			{
			}

			[Token(Token = "0x6002768")]
			[Address(RVA = "0x1CAD1E4", Offset = "0x1CAD1E4", VA = "0x1CAD1E4")]
			internal float <DOValue>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6002769")]
			[Address(RVA = "0x1CAD208", Offset = "0x1CAD208", VA = "0x1CAD208")]
			internal void <DOValue>b__1(float x)
			{
			}
		}

		[Token(Token = "0x2000600")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A3CC", Offset = "0x146A3CC")]
		private sealed class <>c__DisplayClass34_0
		{
			[Token(Token = "0x40023F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Text target;

			[Token(Token = "0x600276A")]
			[Address(RVA = "0x1CAD22C", Offset = "0x1CAD22C", VA = "0x1CAD22C")]
			public <>c__DisplayClass34_0()
			{
			}

			[Token(Token = "0x600276B")]
			[Address(RVA = "0x1CAD234", Offset = "0x1CAD234", VA = "0x1CAD234")]
			internal UnityEngine.Color <DOColor>b__0()
			{
				return default(UnityEngine.Color);
			}

			[Token(Token = "0x600276C")]
			[Address(RVA = "0x1CAD258", Offset = "0x1CAD258", VA = "0x1CAD258")]
			internal void <DOColor>b__1(UnityEngine.Color x)
			{
			}
		}

		[Token(Token = "0x2000601")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A3DC", Offset = "0x146A3DC")]
		private sealed class <>c__DisplayClass35_0
		{
			[Token(Token = "0x40023F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int v;

			[Token(Token = "0x40023F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Text target;

			[Token(Token = "0x40023F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool addThousandsSeparator;

			[Token(Token = "0x40023F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CultureInfo cInfo;

			[Token(Token = "0x600276D")]
			[Address(RVA = "0x1CAD27C", Offset = "0x1CAD27C", VA = "0x1CAD27C")]
			public <>c__DisplayClass35_0()
			{
			}

			[Token(Token = "0x600276E")]
			[Address(RVA = "0x1CAD284", Offset = "0x1CAD284", VA = "0x1CAD284")]
			internal int <DOCounter>b__0()
			{
				return default(int);
			}

			[Token(Token = "0x600276F")]
			[Address(RVA = "0x1CAD28C", Offset = "0x1CAD28C", VA = "0x1CAD28C")]
			internal void <DOCounter>b__1(int x)
			{
			}
		}

		[Token(Token = "0x2000602")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A3EC", Offset = "0x146A3EC")]
		private sealed class <>c__DisplayClass36_0
		{
			[Token(Token = "0x40023F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Text target;

			[Token(Token = "0x6002770")]
			[Address(RVA = "0x1CAD32C", Offset = "0x1CAD32C", VA = "0x1CAD32C")]
			public <>c__DisplayClass36_0()
			{
			}

			[Token(Token = "0x6002771")]
			[Address(RVA = "0x1CAD334", Offset = "0x1CAD334", VA = "0x1CAD334")]
			internal UnityEngine.Color <DOFade>b__0()
			{
				return default(UnityEngine.Color);
			}

			[Token(Token = "0x6002772")]
			[Address(RVA = "0x1CAD358", Offset = "0x1CAD358", VA = "0x1CAD358")]
			internal void <DOFade>b__1(UnityEngine.Color x)
			{
			}
		}

		[Token(Token = "0x2000603")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A3FC", Offset = "0x146A3FC")]
		private sealed class <>c__DisplayClass37_0
		{
			[Token(Token = "0x40023FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Text target;

			[Token(Token = "0x6002773")]
			[Address(RVA = "0x1CAD37C", Offset = "0x1CAD37C", VA = "0x1CAD37C")]
			public <>c__DisplayClass37_0()
			{
			}

			[Token(Token = "0x6002774")]
			[Address(RVA = "0x1CAD384", Offset = "0x1CAD384", VA = "0x1CAD384")]
			internal string <DOText>b__0()
			{
				return null;
			}

			[Token(Token = "0x6002775")]
			[Address(RVA = "0x1CAD3A8", Offset = "0x1CAD3A8", VA = "0x1CAD3A8")]
			internal void <DOText>b__1(string x)
			{
			}
		}

		[Token(Token = "0x2000604")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A40C", Offset = "0x146A40C")]
		private sealed class <>c__DisplayClass38_0
		{
			[Token(Token = "0x40023FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UnityEngine.Color to;

			[Token(Token = "0x40023FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Graphic target;

			[Token(Token = "0x6002776")]
			[Address(RVA = "0x1CAD3CC", Offset = "0x1CAD3CC", VA = "0x1CAD3CC")]
			public <>c__DisplayClass38_0()
			{
			}

			[Token(Token = "0x6002777")]
			[Address(RVA = "0x1CAD3D4", Offset = "0x1CAD3D4", VA = "0x1CAD3D4")]
			internal UnityEngine.Color <DOBlendableColor>b__0()
			{
				return default(UnityEngine.Color);
			}

			[Token(Token = "0x6002778")]
			[Address(RVA = "0x1CAD3E0", Offset = "0x1CAD3E0", VA = "0x1CAD3E0")]
			internal void <DOBlendableColor>b__1(UnityEngine.Color x)
			{
			}
		}

		[Token(Token = "0x2000605")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A41C", Offset = "0x146A41C")]
		private sealed class <>c__DisplayClass39_0
		{
			[Token(Token = "0x40023FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UnityEngine.Color to;

			[Token(Token = "0x40023FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UnityEngine.UI.Image target;

			[Token(Token = "0x6002779")]
			[Address(RVA = "0x1CAD49C", Offset = "0x1CAD49C", VA = "0x1CAD49C")]
			public <>c__DisplayClass39_0()
			{
			}

			[Token(Token = "0x600277A")]
			[Address(RVA = "0x1CAD4A4", Offset = "0x1CAD4A4", VA = "0x1CAD4A4")]
			internal UnityEngine.Color <DOBlendableColor>b__0()
			{
				return default(UnityEngine.Color);
			}

			[Token(Token = "0x600277B")]
			[Address(RVA = "0x1CAD4B0", Offset = "0x1CAD4B0", VA = "0x1CAD4B0")]
			internal void <DOBlendableColor>b__1(UnityEngine.Color x)
			{
			}
		}

		[Token(Token = "0x2000606")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A42C", Offset = "0x146A42C")]
		private sealed class <>c__DisplayClass40_0
		{
			[Token(Token = "0x40023FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UnityEngine.Color to;

			[Token(Token = "0x4002400")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Text target;

			[Token(Token = "0x600277C")]
			[Address(RVA = "0x1CAD5BC", Offset = "0x1CAD5BC", VA = "0x1CAD5BC")]
			public <>c__DisplayClass40_0()
			{
			}

			[Token(Token = "0x600277D")]
			[Address(RVA = "0x1CAD5C4", Offset = "0x1CAD5C4", VA = "0x1CAD5C4")]
			internal UnityEngine.Color <DOBlendableColor>b__0()
			{
				return default(UnityEngine.Color);
			}

			[Token(Token = "0x600277E")]
			[Address(RVA = "0x1CAD5D0", Offset = "0x1CAD5D0", VA = "0x1CAD5D0")]
			internal void <DOBlendableColor>b__1(UnityEngine.Color x)
			{
			}
		}

		[Token(Token = "0x6001104")]
		[Address(RVA = "0x1C0CA60", Offset = "0x1C0CA60", VA = "0x1C0CA60")]
		public static TweenerCore<float, float, FloatOptions> DOFade(this CanvasGroup target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001105")]
		[Address(RVA = "0x1C0CBAC", Offset = "0x1C0CBAC", VA = "0x1C0CBAC")]
		public static TweenerCore<UnityEngine.Color, UnityEngine.Color, ColorOptions> DOColor(this Graphic target, UnityEngine.Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001106")]
		[Address(RVA = "0x1C0CD20", Offset = "0x1C0CD20", VA = "0x1C0CD20")]
		public static TweenerCore<UnityEngine.Color, UnityEngine.Color, ColorOptions> DOFade(this Graphic target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001107")]
		[Address(RVA = "0x1C0CE6C", Offset = "0x1C0CE6C", VA = "0x1C0CE6C")]
		public static TweenerCore<UnityEngine.Color, UnityEngine.Color, ColorOptions> DOColor(this UnityEngine.UI.Image target, UnityEngine.Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001108")]
		[Address(RVA = "0x1C0CFE0", Offset = "0x1C0CFE0", VA = "0x1C0CFE0")]
		public static TweenerCore<UnityEngine.Color, UnityEngine.Color, ColorOptions> DOFade(this UnityEngine.UI.Image target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001109")]
		[Address(RVA = "0x1C0D12C", Offset = "0x1C0D12C", VA = "0x1C0D12C")]
		public static TweenerCore<float, float, FloatOptions> DOFillAmount(this UnityEngine.UI.Image target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600110A")]
		[Address(RVA = "0x1C0D29C", Offset = "0x1C0D29C", VA = "0x1C0D29C")]
		public static Sequence DOGradientColor(this UnityEngine.UI.Image target, Gradient gradient, float duration)
		{
			return null;
		}

		[Token(Token = "0x600110B")]
		[Address(RVA = "0x1C0D47C", Offset = "0x1C0D47C", VA = "0x1C0D47C")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOFlexibleSize(this LayoutElement target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600110C")]
		[Address(RVA = "0x1C0D5F0", Offset = "0x1C0D5F0", VA = "0x1C0D5F0")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOMinSize(this LayoutElement target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600110D")]
		[Address(RVA = "0x1C0D764", Offset = "0x1C0D764", VA = "0x1C0D764")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPreferredSize(this LayoutElement target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600110E")]
		[Address(RVA = "0x1C0D8D8", Offset = "0x1C0D8D8", VA = "0x1C0D8D8")]
		public static TweenerCore<UnityEngine.Color, UnityEngine.Color, ColorOptions> DOColor(this Outline target, UnityEngine.Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600110F")]
		[Address(RVA = "0x1C0DA4C", Offset = "0x1C0DA4C", VA = "0x1C0DA4C")]
		public static TweenerCore<UnityEngine.Color, UnityEngine.Color, ColorOptions> DOFade(this Outline target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001110")]
		[Address(RVA = "0x1C0DB98", Offset = "0x1C0DB98", VA = "0x1C0DB98")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOScale(this Outline target, Vector2 endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001111")]
		[Address(RVA = "0x1C0DCF4", Offset = "0x1C0DCF4", VA = "0x1C0DCF4")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorPos(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001112")]
		[Address(RVA = "0x1C0DE68", Offset = "0x1C0DE68", VA = "0x1C0DE68")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorPosX(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001113")]
		[Address(RVA = "0x1C0DFE8", Offset = "0x1C0DFE8", VA = "0x1C0DFE8")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorPosY(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001114")]
		[Address(RVA = "0x1C0E168", Offset = "0x1C0E168", VA = "0x1C0E168")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOAnchorPos3D(this RectTransform target, Vector3 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001115")]
		[Address(RVA = "0x1C0E2E4", Offset = "0x1C0E2E4", VA = "0x1C0E2E4")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOAnchorPos3DX(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001116")]
		[Address(RVA = "0x1C0E478", Offset = "0x1C0E478", VA = "0x1C0E478")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOAnchorPos3DY(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001117")]
		[Address(RVA = "0x1C0E60C", Offset = "0x1C0E60C", VA = "0x1C0E60C")]
		public static TweenerCore<Vector3, Vector3, VectorOptions> DOAnchorPos3DZ(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001118")]
		[Address(RVA = "0x1C0E7A0", Offset = "0x1C0E7A0", VA = "0x1C0E7A0")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorMax(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001119")]
		[Address(RVA = "0x1C0E914", Offset = "0x1C0E914", VA = "0x1C0E914")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOAnchorMin(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600111A")]
		[Address(RVA = "0x1C0EA88", Offset = "0x1C0EA88", VA = "0x1C0EA88")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPivot(this RectTransform target, Vector2 endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600111B")]
		[Address(RVA = "0x1C0EBE4", Offset = "0x1C0EBE4", VA = "0x1C0EBE4")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPivotX(this RectTransform target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600111C")]
		[Address(RVA = "0x1C0ED60", Offset = "0x1C0ED60", VA = "0x1C0ED60")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOPivotY(this RectTransform target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600111D")]
		[Address(RVA = "0x1C0EEDC", Offset = "0x1C0EEDC", VA = "0x1C0EEDC")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOSizeDelta(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600111E")]
		[Address(RVA = "0x1C0F050", Offset = "0x1C0F050", VA = "0x1C0F050")]
		public static Tweener DOPunchAnchorPos(this RectTransform target, Vector2 punch, float duration, int vibrato = 10, float elasticity = 1f, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600111F")]
		[Address(RVA = "0x1C0F210", Offset = "0x1C0F210", VA = "0x1C0F210")]
		public static Tweener DOShakeAnchorPos(this RectTransform target, float duration, float strength = 100f, int vibrato = 10, float randomness = 90f, bool snapping = false, bool fadeOut = true)
		{
			return null;
		}

		[Token(Token = "0x6001120")]
		[Address(RVA = "0x1C0F3A8", Offset = "0x1C0F3A8", VA = "0x1C0F3A8")]
		public static Tweener DOShakeAnchorPos(this RectTransform target, float duration, Vector2 strength, int vibrato = 10, float randomness = 90f, bool snapping = false, bool fadeOut = true)
		{
			return null;
		}

		[Token(Token = "0x6001121")]
		[Address(RVA = "0x1C0F58C", Offset = "0x1C0F58C", VA = "0x1C0F58C")]
		public static Sequence DOJumpAnchorPos(this RectTransform target, Vector2 endValue, float jumpPower, int numJumps, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001122")]
		[Address(RVA = "0x1C0F930", Offset = "0x1C0F930", VA = "0x1C0F930")]
		public static Tweener DONormalizedPos(this ScrollRect target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001123")]
		[Address(RVA = "0x1C0FA98", Offset = "0x1C0FA98", VA = "0x1C0FA98")]
		public static Tweener DOHorizontalNormalizedPos(this ScrollRect target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001124")]
		[Address(RVA = "0x1C0FBF0", Offset = "0x1C0FBF0", VA = "0x1C0FBF0")]
		public static Tweener DOVerticalNormalizedPos(this ScrollRect target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001125")]
		[Address(RVA = "0x1C0FD48", Offset = "0x1C0FD48", VA = "0x1C0FD48")]
		public static TweenerCore<float, float, FloatOptions> DOValue(this Slider target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001126")]
		[Address(RVA = "0x1C0FEAC", Offset = "0x1C0FEAC", VA = "0x1C0FEAC")]
		public static TweenerCore<UnityEngine.Color, UnityEngine.Color, ColorOptions> DOColor(this Text target, UnityEngine.Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001127")]
		[Address(RVA = "0x1C10020", Offset = "0x1C10020", VA = "0x1C10020")]
		public static TweenerCore<int, int, NoOptions> DOCounter(this Text target, int fromValue, int endValue, float duration, bool addThousandsSeparator = true, [Optional] CultureInfo culture)
		{
			return null;
		}

		[Token(Token = "0x6001128")]
		[Address(RVA = "0x1C101E0", Offset = "0x1C101E0", VA = "0x1C101E0")]
		public static TweenerCore<UnityEngine.Color, UnityEngine.Color, ColorOptions> DOFade(this Text target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001129")]
		[Address(RVA = "0x1C1032C", Offset = "0x1C1032C", VA = "0x1C1032C")]
		public static TweenerCore<string, string, StringOptions> DOText(this Text target, string endValue, float duration, bool richTextEnabled = true, ScrambleMode scrambleMode = ScrambleMode.None, [Optional] string scrambleChars)
		{
			return null;
		}

		[Token(Token = "0x600112A")]
		[Address(RVA = "0x1C10510", Offset = "0x1C10510", VA = "0x1C10510")]
		public static Tweener DOBlendableColor(this Graphic target, UnityEngine.Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600112B")]
		[Address(RVA = "0x1C1070C", Offset = "0x1C1070C", VA = "0x1C1070C")]
		public static Tweener DOBlendableColor(this UnityEngine.UI.Image target, UnityEngine.Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600112C")]
		[Address(RVA = "0x1C10908", Offset = "0x1C10908", VA = "0x1C10908")]
		public static Tweener DOBlendableColor(this Text target, UnityEngine.Color endValue, float duration)
		{
			return null;
		}
	}
	[Token(Token = "0x200021B")]
	public static class DOTweenModuleUnityVersion
	{
		[Token(Token = "0x2000607")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A43C", Offset = "0x146A43C")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4002401")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Material target;

			[Token(Token = "0x4002402")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int propertyID;

			[Token(Token = "0x600277F")]
			[Address(RVA = "0x1CAE6E0", Offset = "0x1CAE6E0", VA = "0x1CAE6E0")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6002780")]
			[Address(RVA = "0x1CAEF10", Offset = "0x1CAEF10", VA = "0x1CAEF10")]
			internal Vector2 <DOOffset>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002781")]
			[Address(RVA = "0x1CAEF34", Offset = "0x1CAEF34", VA = "0x1CAEF34")]
			internal void <DOOffset>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x2000608")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A44C", Offset = "0x146A44C")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x4002403")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Material target;

			[Token(Token = "0x4002404")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int propertyID;

			[Token(Token = "0x6002782")]
			[Address(RVA = "0x1CAE8B8", Offset = "0x1CAE8B8", VA = "0x1CAE8B8")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x6002783")]
			[Address(RVA = "0x1CAEF58", Offset = "0x1CAEF58", VA = "0x1CAEF58")]
			internal Vector2 <DOTiling>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002784")]
			[Address(RVA = "0x1CAEF7C", Offset = "0x1CAEF7C", VA = "0x1CAEF7C")]
			internal void <DOTiling>b__1(Vector2 x)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000609")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A45C", Offset = "0x146A45C")]
		private struct <AsyncWaitForCompletion>d__10 : IAsyncStateMachine
		{
			[Token(Token = "0x4002405")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002406")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4002407")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Tween t;

			[Token(Token = "0x4002408")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private YieldAwaitable.YieldAwaiter <>u__1;

			[Token(Token = "0x6002785")]
			[Address(RVA = "0x1CAEFA0", Offset = "0x1CAEFA0", VA = "0x1CAEFA0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002786")]
			[Address(RVA = "0x1CAF1E4", Offset = "0x1CAF1E4", VA = "0x1CAF1E4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200060A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A46C", Offset = "0x146A46C")]
		private struct <AsyncWaitForRewind>d__11 : IAsyncStateMachine
		{
			[Token(Token = "0x4002409")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400240A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x400240B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Tween t;

			[Token(Token = "0x400240C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private YieldAwaitable.YieldAwaiter <>u__1;

			[Token(Token = "0x6002787")]
			[Address(RVA = "0x1CAF8F4", Offset = "0x1CAF8F4", VA = "0x1CAF8F4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002788")]
			[Address(RVA = "0x1CAFB5C", Offset = "0x1CAFB5C", VA = "0x1CAFB5C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200060B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A47C", Offset = "0x146A47C")]
		private struct <AsyncWaitForKill>d__12 : IAsyncStateMachine
		{
			[Token(Token = "0x400240D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400240E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x400240F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Tween t;

			[Token(Token = "0x4002410")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private YieldAwaitable.YieldAwaiter <>u__1;

			[Token(Token = "0x6002789")]
			[Address(RVA = "0x1CAF448", Offset = "0x1CAF448", VA = "0x1CAF448", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600278A")]
			[Address(RVA = "0x1CAF678", Offset = "0x1CAF678", VA = "0x1CAF678", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200060C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A48C", Offset = "0x146A48C")]
		private struct <AsyncWaitForElapsedLoops>d__13 : IAsyncStateMachine
		{
			[Token(Token = "0x4002411")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002412")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4002413")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Tween t;

			[Token(Token = "0x4002414")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int elapsedLoops;

			[Token(Token = "0x4002415")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private YieldAwaitable.YieldAwaiter <>u__1;

			[Token(Token = "0x600278B")]
			[Address(RVA = "0x1CAF1F0", Offset = "0x1CAF1F0", VA = "0x1CAF1F0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600278C")]
			[Address(RVA = "0x1CAF43C", Offset = "0x1CAF43C", VA = "0x1CAF43C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200060D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A49C", Offset = "0x146A49C")]
		private struct <AsyncWaitForPosition>d__14 : IAsyncStateMachine
		{
			[Token(Token = "0x4002416")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002417")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4002418")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Tween t;

			[Token(Token = "0x4002419")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float position;

			[Token(Token = "0x400241A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private YieldAwaitable.YieldAwaiter <>u__1;

			[Token(Token = "0x600278D")]
			[Address(RVA = "0x1CAF684", Offset = "0x1CAF684", VA = "0x1CAF684", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600278E")]
			[Address(RVA = "0x1CAF8E8", Offset = "0x1CAF8E8", VA = "0x1CAF8E8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200060E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A4AC", Offset = "0x146A4AC")]
		private struct <AsyncWaitForStart>d__15 : IAsyncStateMachine
		{
			[Token(Token = "0x400241B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400241C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x400241D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Tween t;

			[Token(Token = "0x400241E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private YieldAwaitable.YieldAwaiter <>u__1;

			[Token(Token = "0x600278F")]
			[Address(RVA = "0x1CAFB68", Offset = "0x1CAFB68", VA = "0x1CAFB68", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002790")]
			[Address(RVA = "0x1CAFDA0", Offset = "0x1CAFDA0", VA = "0x1CAFDA0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x600112D")]
		[Address(RVA = "0x1CADC74", Offset = "0x1CADC74", VA = "0x1CADC74")]
		public static Sequence DOGradientColor(this Material target, Gradient gradient, float duration)
		{
			return null;
		}

		[Token(Token = "0x600112E")]
		[Address(RVA = "0x1CADE50", Offset = "0x1CADE50", VA = "0x1CADE50")]
		public static Sequence DOGradientColor(this Material target, Gradient gradient, string property, float duration)
		{
			return null;
		}

		[Token(Token = "0x600112F")]
		[Address(RVA = "0x1CAE040", Offset = "0x1CAE040", VA = "0x1CAE040")]
		public static CustomYieldInstruction WaitForCompletion(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6001130")]
		[Address(RVA = "0x1CAE108", Offset = "0x1CAE108", VA = "0x1CAE108")]
		public static CustomYieldInstruction WaitForRewind(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6001131")]
		[Address(RVA = "0x1CAE1D0", Offset = "0x1CAE1D0", VA = "0x1CAE1D0")]
		public static CustomYieldInstruction WaitForKill(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6001132")]
		[Address(RVA = "0x1CAE298", Offset = "0x1CAE298", VA = "0x1CAE298")]
		public static CustomYieldInstruction WaitForElapsedLoops(this Tween t, int elapsedLoops, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6001133")]
		[Address(RVA = "0x1CAE370", Offset = "0x1CAE370", VA = "0x1CAE370")]
		public static CustomYieldInstruction WaitForPosition(this Tween t, float position, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6001134")]
		[Address(RVA = "0x1CAE448", Offset = "0x1CAE448", VA = "0x1CAE448")]
		public static CustomYieldInstruction WaitForStart(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6001135")]
		[Address(RVA = "0x1CAE510", Offset = "0x1CAE510", VA = "0x1CAE510")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOOffset(this Material target, Vector2 endValue, int propertyID, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001136")]
		[Address(RVA = "0x1CAE6E8", Offset = "0x1CAE6E8", VA = "0x1CAE6E8")]
		public static TweenerCore<Vector2, Vector2, VectorOptions> DOTiling(this Material target, Vector2 endValue, int propertyID, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001137")]
		[Address(RVA = "0x1CAE8C0", Offset = "0x1CAE8C0", VA = "0x1CAE8C0")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x1483680", Offset = "0x1483680")]
		public static Task AsyncWaitForCompletion(this Tween t)
		{
			return null;
		}

		[Token(Token = "0x6001138")]
		[Address(RVA = "0x1CAE9C8", Offset = "0x1CAE9C8", VA = "0x1CAE9C8")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x14836F4", Offset = "0x14836F4")]
		public static Task AsyncWaitForRewind(this Tween t)
		{
			return null;
		}

		[Token(Token = "0x6001139")]
		[Address(RVA = "0x1CAEAD0", Offset = "0x1CAEAD0", VA = "0x1CAEAD0")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x1483768", Offset = "0x1483768")]
		public static Task AsyncWaitForKill(this Tween t)
		{
			return null;
		}

		[Token(Token = "0x600113A")]
		[Address(RVA = "0x1CAEBD8", Offset = "0x1CAEBD8", VA = "0x1CAEBD8")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x14837DC", Offset = "0x14837DC")]
		public static Task AsyncWaitForElapsedLoops(this Tween t, int elapsedLoops)
		{
			return null;
		}

		[Token(Token = "0x600113B")]
		[Address(RVA = "0x1CAECF0", Offset = "0x1CAECF0", VA = "0x1CAECF0")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x1483850", Offset = "0x1483850")]
		public static Task AsyncWaitForPosition(this Tween t, float position)
		{
			return null;
		}

		[Token(Token = "0x600113C")]
		[Address(RVA = "0x1CAEE08", Offset = "0x1CAEE08", VA = "0x1CAEE08")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x14838C4", Offset = "0x14838C4")]
		public static Task AsyncWaitForStart(this Tween t)
		{
			return null;
		}
	}
	[Token(Token = "0x200021C")]
	public static class DOTweenCYInstruction
	{
		[Token(Token = "0x200060F")]
		public class WaitForCompletion : CustomYieldInstruction
		{
			[Token(Token = "0x400241F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x17000519")]
			public override bool keepWaiting
			{
				[Token(Token = "0x6002791")]
				[Address(RVA = "0x1C0B564", Offset = "0x1C0B564", VA = "0x1C0B564", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6002792")]
			[Address(RVA = "0x1C0B598", Offset = "0x1C0B598", VA = "0x1C0B598")]
			public WaitForCompletion(Tween tween)
			{
			}
		}

		[Token(Token = "0x2000610")]
		public class WaitForRewind : CustomYieldInstruction
		{
			[Token(Token = "0x4002420")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x1700051A")]
			public override bool keepWaiting
			{
				[Token(Token = "0x6002793")]
				[Address(RVA = "0x1C0B75C", Offset = "0x1C0B75C", VA = "0x1C0B75C", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6002794")]
			[Address(RVA = "0x1C0B7C0", Offset = "0x1C0B7C0", VA = "0x1C0B7C0")]
			public WaitForRewind(Tween tween)
			{
			}
		}

		[Token(Token = "0x2000611")]
		public class WaitForKill : CustomYieldInstruction
		{
			[Token(Token = "0x4002421")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x1700051B")]
			public override bool keepWaiting
			{
				[Token(Token = "0x6002795")]
				[Address(RVA = "0x1C0B660", Offset = "0x1C0B660", VA = "0x1C0B660", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6002796")]
			[Address(RVA = "0x1C0B67C", Offset = "0x1C0B67C", VA = "0x1C0B67C")]
			public WaitForKill(Tween tween)
			{
			}
		}

		[Token(Token = "0x2000612")]
		public class WaitForElapsedLoops : CustomYieldInstruction
		{
			[Token(Token = "0x4002422")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x4002423")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly int elapsedLoops;

			[Token(Token = "0x1700051C")]
			public override bool keepWaiting
			{
				[Token(Token = "0x6002797")]
				[Address(RVA = "0x1C0B5CC", Offset = "0x1C0B5CC", VA = "0x1C0B5CC", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6002798")]
			[Address(RVA = "0x1C0B618", Offset = "0x1C0B618", VA = "0x1C0B618")]
			public WaitForElapsedLoops(Tween tween, int elapsedLoops)
			{
			}
		}

		[Token(Token = "0x2000613")]
		public class WaitForPosition : CustomYieldInstruction
		{
			[Token(Token = "0x4002424")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x4002425")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly float position;

			[Token(Token = "0x1700051D")]
			public override bool keepWaiting
			{
				[Token(Token = "0x6002799")]
				[Address(RVA = "0x1C0B6B0", Offset = "0x1C0B6B0", VA = "0x1C0B6B0", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x600279A")]
			[Address(RVA = "0x1C0B714", Offset = "0x1C0B714", VA = "0x1C0B714")]
			public WaitForPosition(Tween tween, float position)
			{
			}
		}

		[Token(Token = "0x2000614")]
		public class WaitForStart : CustomYieldInstruction
		{
			[Token(Token = "0x4002426")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x1700051E")]
			public override bool keepWaiting
			{
				[Token(Token = "0x600279B")]
				[Address(RVA = "0x1C0B7F4", Offset = "0x1C0B7F4", VA = "0x1C0B7F4", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x600279C")]
			[Address(RVA = "0x1C0B828", Offset = "0x1C0B828", VA = "0x1C0B828")]
			public WaitForStart(Tween tween)
			{
			}
		}
	}
	[Token(Token = "0x200021D")]
	public static class DOTweenModuleUtils
	{
		[Token(Token = "0x2000615")]
		public static class Physics
		{
			[Token(Token = "0x600279D")]
			[Address(RVA = "0x1CAFEF0", Offset = "0x1CAFEF0", VA = "0x1CAFEF0")]
			public static void SetOrientationOnPath(PathOptions options, Tween t, Quaternion newRot, Transform trans)
			{
			}

			[Token(Token = "0x600279E")]
			[Address(RVA = "0x1CAFF0C", Offset = "0x1CAFF0C", VA = "0x1CAFF0C")]
			public static bool HasRigidbody2D(Component target)
			{
				return default(bool);
			}

			[Token(Token = "0x600279F")]
			[Address(RVA = "0x1CAFF14", Offset = "0x1CAFF14", VA = "0x1CAFF14")]
			[Preserve]
			public static bool HasRigidbody(Component target)
			{
				return default(bool);
			}

			[Token(Token = "0x60027A0")]
			[Address(RVA = "0x1CAFF1C", Offset = "0x1CAFF1C", VA = "0x1CAFF1C")]
			[Preserve]
			public static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> CreateDOTweenPathTween(MonoBehaviour target, bool tweenRigidbody, bool isLocal, DG.Tweening.Plugins.Core.PathCore.Path path, float duration, PathMode pathMode)
			{
				return null;
			}
		}

		[Token(Token = "0x4000EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _initialized;

		[Token(Token = "0x600113D")]
		[Address(RVA = "0x1CAFDAC", Offset = "0x1CAFDAC", VA = "0x1CAFDAC")]
		[Preserve]
		public static void Init()
		{
		}

		[Token(Token = "0x600113E")]
		[Address(RVA = "0x1CAFE50", Offset = "0x1CAFE50", VA = "0x1CAFE50")]
		[Preserve]
		private static void Preserver()
		{
		}
	}
}
namespace Better.StreamingAssets
{
	[Token(Token = "0x200021E")]
	public static class PathUtil
	{
		[Token(Token = "0x2000616")]
		private enum NormalizeState
		{
			[Token(Token = "0x4002428")]
			PrevSlash,
			[Token(Token = "0x4002429")]
			PrevDot,
			[Token(Token = "0x400242A")]
			PrevDoubleDot,
			[Token(Token = "0x400242B")]
			NothingSpecial
		}

		[Token(Token = "0x600113F")]
		[Address(RVA = "0x1EDE2BC", Offset = "0x1EDE2BC", VA = "0x1EDE2BC")]
		public static bool IsDirectorySeparator(char c)
		{
			return default(bool);
		}

		[Token(Token = "0x6001140")]
		[Address(RVA = "0x1EDE2D8", Offset = "0x1EDE2D8", VA = "0x1EDE2D8")]
		public static string FixTrailingDirectorySeparators(string path)
		{
			return null;
		}

		[Token(Token = "0x6001141")]
		[Address(RVA = "0x1EDE408", Offset = "0x1EDE408", VA = "0x1EDE408")]
		public static string CombineSlash(string a, string b)
		{
			return null;
		}

		[Token(Token = "0x6001142")]
		[Address(RVA = "0x1EDE564", Offset = "0x1EDE564", VA = "0x1EDE564")]
		public static string NormalizeRelativePath(string relative, bool forceTrailingSlash = false)
		{
			return null;
		}

		[Token(Token = "0x6001143")]
		[Address(RVA = "0x1EDE950", Offset = "0x1EDE950", VA = "0x1EDE950")]
		public static bool IsValidCharacter(char c)
		{
			return default(bool);
		}

		[Token(Token = "0x6001144")]
		[Address(RVA = "0x1EDE9B4", Offset = "0x1EDE9B4", VA = "0x1EDE9B4")]
		public static Regex WildcardToRegex(string pattern)
		{
			return null;
		}
	}
	[Token(Token = "0x200021F")]
	internal class SubReadOnlyStream : Stream
	{
		[Token(Token = "0x4000EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly long m_offset;

		[Token(Token = "0x4000EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly bool m_leaveOpen;

		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private long? m_length;

		[Token(Token = "0x4000EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Stream m_actualStream;

		[Token(Token = "0x4000EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private long m_position;

		[Token(Token = "0x170001BA")]
		public override long Length
		{
			[Token(Token = "0x6001147")]
			[Address(RVA = "0x1EDEC94", Offset = "0x1EDEC94", VA = "0x1EDEC94", Slot = "11")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x170001BB")]
		public override long Position
		{
			[Token(Token = "0x6001148")]
			[Address(RVA = "0x1EDEDF4", Offset = "0x1EDEDF4", VA = "0x1EDEDF4", Slot = "12")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6001149")]
			[Address(RVA = "0x1EDEE20", Offset = "0x1EDEE20", VA = "0x1EDEE20", Slot = "13")]
			set
			{
			}
		}

		[Token(Token = "0x170001BC")]
		public override bool CanRead
		{
			[Token(Token = "0x600114A")]
			[Address(RVA = "0x1EDEE8C", Offset = "0x1EDEE8C", VA = "0x1EDEE8C", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001BD")]
		public override bool CanSeek
		{
			[Token(Token = "0x600114B")]
			[Address(RVA = "0x1EDEEAC", Offset = "0x1EDEEAC", VA = "0x1EDEEAC", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001BE")]
		public override bool CanWrite
		{
			[Token(Token = "0x600114C")]
			[Address(RVA = "0x1EDEECC", Offset = "0x1EDEECC", VA = "0x1EDEECC", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001145")]
		[Address(RVA = "0x1EDEABC", Offset = "0x1EDEABC", VA = "0x1EDEABC")]
		public SubReadOnlyStream(Stream actualStream, bool leaveOpen = false)
		{
		}

		[Token(Token = "0x6001146")]
		[Address(RVA = "0x1EDEB90", Offset = "0x1EDEB90", VA = "0x1EDEB90")]
		public SubReadOnlyStream(Stream actualStream, long offset, long length, bool leaveOpen = false)
		{
		}

		[Token(Token = "0x600114D")]
		[Address(RVA = "0x1EDEED4", Offset = "0x1EDEED4", VA = "0x1EDEED4", Slot = "30")]
		public override int Read(byte[] buffer, int offset, int count)
		{
			return default(int);
		}

		[Token(Token = "0x600114E")]
		[Address(RVA = "0x1EDF06C", Offset = "0x1EDF06C", VA = "0x1EDF06C", Slot = "28")]
		public override long Seek(long offset, SeekOrigin origin)
		{
			return default(long);
		}

		[Token(Token = "0x600114F")]
		[Address(RVA = "0x1EDF134", Offset = "0x1EDF134", VA = "0x1EDF134", Slot = "29")]
		public override void SetLength(long value)
		{
		}

		[Token(Token = "0x6001150")]
		[Address(RVA = "0x1EDF194", Offset = "0x1EDF194", VA = "0x1EDF194", Slot = "32")]
		public override void Write(byte[] buffer, int offset, int count)
		{
		}

		[Token(Token = "0x6001151")]
		[Address(RVA = "0x1EDF1F4", Offset = "0x1EDF1F4", VA = "0x1EDF1F4", Slot = "20")]
		public override void Flush()
		{
		}

		[Token(Token = "0x6001152")]
		[Address(RVA = "0x1EDF254", Offset = "0x1EDF254", VA = "0x1EDF254", Slot = "19")]
		protected override void Dispose(bool disposing)
		{
		}

		[Token(Token = "0x6001153")]
		[Address(RVA = "0x1EDED40", Offset = "0x1EDED40", VA = "0x1EDED40")]
		private void ThrowIfDisposed()
		{
		}

		[Token(Token = "0x6001154")]
		[Address(RVA = "0x1EDEFE8", Offset = "0x1EDEFE8", VA = "0x1EDEFE8")]
		private void ThrowIfCantRead()
		{
		}
	}
	[Token(Token = "0x2000220")]
	public class BSA_TestSceneGUI : MonoBehaviour
	{
		[Token(Token = "0x2000617")]
		private class CoroutineHost : MonoBehaviour
		{
			[Token(Token = "0x60027A1")]
			[Address(RVA = "0x1EDE1C4", Offset = "0x1EDE1C4", VA = "0x1EDE1C4")]
			public CoroutineHost()
			{
			}
		}

		[Token(Token = "0x2000618")]
		private class TestInfo
		{
			[Token(Token = "0x400242C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ReadMode readMode;

			[Token(Token = "0x400242D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public TestType testType;

			[Token(Token = "0x400242E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string path;

			[Token(Token = "0x400242F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int attempts;

			[Token(Token = "0x4002430")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Exception error;

			[Token(Token = "0x4002431")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public TimeSpan duration;

			[Token(Token = "0x4002432")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public long bytesRead;

			[Token(Token = "0x4002433")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public long memoryPeak;

			[Token(Token = "0x4002434")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public long maxMemoryPeak;

			[Token(Token = "0x60027A2")]
			[Address(RVA = "0x1EDD5C0", Offset = "0x1EDD5C0", VA = "0x1EDD5C0")]
			public TestInfo()
			{
			}
		}

		[Token(Token = "0x2000619")]
		private delegate void TestResultDelegate(TimeSpan avgDuration, long avgBytesRead, long avgMemoryPeak, long maxMemoryPeak, string[] assetNames);

		[Token(Token = "0x200061A")]
		[Flags]
		private enum ReadMode
		{
			[Token(Token = "0x4002436")]
			BSA = 1,
			[Token(Token = "0x4002437")]
			WWW = 2,
			[Token(Token = "0x4002438")]
			Direct = 0x20,
			[Token(Token = "0x4002439")]
			UnityWebRequest = 0x40
		}

		[Token(Token = "0x200061B")]
		[Flags]
		private enum TestType
		{
			[Token(Token = "0x400243B")]
			CheckIfExists = 1,
			[Token(Token = "0x400243C")]
			LoadBytes = 2
		}

		[Token(Token = "0x200061C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A4DC", Offset = "0x146A4DC")]
		private sealed class <>c__DisplayClass26_0
		{
			[Token(Token = "0x400243D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TestInfo testInfo;

			[Token(Token = "0x60027A7")]
			[Address(RVA = "0x1EDC010", Offset = "0x1EDC010", VA = "0x1EDC010")]
			public <>c__DisplayClass26_0()
			{
			}

			[Token(Token = "0x60027A8")]
			[Address(RVA = "0x1EDC018", Offset = "0x1EDC018", VA = "0x1EDC018")]
			internal void <TestAllCoroutine>b__0(TimeSpan duration, long bytes, long memory, long maxMemory, string[] names)
			{
			}

			[Token(Token = "0x60027A9")]
			[Address(RVA = "0x1EDC05C", Offset = "0x1EDC05C", VA = "0x1EDC05C")]
			internal void <TestAllCoroutine>b__1(Exception ex)
			{
			}
		}

		[Token(Token = "0x200061D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A4EC", Offset = "0x146A4EC")]
		private sealed class <TestAllCoroutine>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400243E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400243F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002440")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BSA_TestSceneGUI <>4__this;

			[Token(Token = "0x4002441")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<TestInfo> results;

			[Token(Token = "0x4002442")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public IEnumerable<string> paths;

			[Token(Token = "0x4002443")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public ReadMode readModes;

			[Token(Token = "0x4002444")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public TestType testTypes;

			[Token(Token = "0x4002445")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int attempts;

			[Token(Token = "0x4002446")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private <>c__DisplayClass26_0 <>8__1;

			[Token(Token = "0x4002447")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private string <logPath>5__2;

			[Token(Token = "0x4002448")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private IEnumerator<string> <>7__wrap2;

			[Token(Token = "0x4002449")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private string <path>5__4;

			[Token(Token = "0x400244A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private IEnumerator <>7__wrap4;

			[Token(Token = "0x400244B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private ReadMode <readMode>5__6;

			[Token(Token = "0x400244C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private IEnumerator <>7__wrap6;

			[Token(Token = "0x1700051F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027B1")]
				[Address(RVA = "0x1EDD5DC", Offset = "0x1EDD5DC", VA = "0x1EDD5DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000520")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027B3")]
				[Address(RVA = "0x1EDD644", Offset = "0x1EDD644", VA = "0x1EDD644", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027AA")]
			[Address(RVA = "0x1EDBC10", Offset = "0x1EDBC10", VA = "0x1EDBC10")]
			[DebuggerHidden]
			public <TestAllCoroutine>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x60027AB")]
			[Address(RVA = "0x1EDC310", Offset = "0x1EDC310", VA = "0x1EDC310", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027AC")]
			[Address(RVA = "0x1EDCBF4", Offset = "0x1EDCBF4", VA = "0x1EDCBF4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027AD")]
			[Address(RVA = "0x1EDC678", Offset = "0x1EDC678", VA = "0x1EDC678")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60027AE")]
			[Address(RVA = "0x1EDC5B8", Offset = "0x1EDC5B8", VA = "0x1EDC5B8")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x60027AF")]
			[Address(RVA = "0x1EDC4EC", Offset = "0x1EDC4EC", VA = "0x1EDC4EC")]
			private void <>m__Finally3()
			{
			}

			[Token(Token = "0x60027B0")]
			[Address(RVA = "0x1EDC420", Offset = "0x1EDC420", VA = "0x1EDC420")]
			private void <>m__Finally4()
			{
			}

			[Token(Token = "0x60027B2")]
			[Address(RVA = "0x1EDD5E4", Offset = "0x1EDD5E4", VA = "0x1EDD5E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200061E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A4FC", Offset = "0x146A4FC")]
		private sealed class <ErrorCatchingCoroutine>d__28 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400244D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400244E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400244F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BSA_TestSceneGUI <>4__this;

			[Token(Token = "0x4002450")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IEnumerator inner;

			[Token(Token = "0x4002451")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action<Exception> onError;

			[Token(Token = "0x17000521")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027B7")]
				[Address(RVA = "0x1EDC2A0", Offset = "0x1EDC2A0", VA = "0x1EDC2A0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000522")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027B9")]
				[Address(RVA = "0x1EDC308", Offset = "0x1EDC308", VA = "0x1EDC308", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027B4")]
			[Address(RVA = "0x1EDBDC8", Offset = "0x1EDBDC8", VA = "0x1EDBDC8")]
			[DebuggerHidden]
			public <ErrorCatchingCoroutine>d__28(int <>1__state)
			{
			}

			[Token(Token = "0x60027B5")]
			[Address(RVA = "0x1EDC078", Offset = "0x1EDC078", VA = "0x1EDC078", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027B6")]
			[Address(RVA = "0x1EDC07C", Offset = "0x1EDC07C", VA = "0x1EDC07C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027B8")]
			[Address(RVA = "0x1EDC2A8", Offset = "0x1EDC2A8", VA = "0x1EDC2A8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200061F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A50C", Offset = "0x146A50C")]
		private sealed class <TestHarness>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002452")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002453")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002454")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BSA_TestSceneGUI <>4__this;

			[Token(Token = "0x4002455")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string path;

			[Token(Token = "0x4002456")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ReadMode readMode;

			[Token(Token = "0x4002457")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public TestType testType;

			[Token(Token = "0x4002458")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int attempts;

			[Token(Token = "0x4002459")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public TestResultDelegate callback;

			[Token(Token = "0x400245A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Stopwatch <stopwatch>5__2;

			[Token(Token = "0x400245B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private string[] <assetNames>5__3;

			[Token(Token = "0x400245C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private string <streamingAssetsUrl>5__4;

			[Token(Token = "0x400245D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private long <bytesRead>5__5;

			[Token(Token = "0x400245E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private long <maxMemoryPeak>5__6;

			[Token(Token = "0x400245F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private long <totalMemoryPeaks>5__7;

			[Token(Token = "0x4002460")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private int <i>5__8;

			[Token(Token = "0x4002461")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private IDisposable <toDispose>5__9;

			[Token(Token = "0x4002462")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private long <memoryUnityBefore>5__10;

			[Token(Token = "0x4002463")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private WWW <www>5__11;

			[Token(Token = "0x4002464")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private UnityWebRequest <www>5__12;

			[Token(Token = "0x17000523")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027BD")]
				[Address(RVA = "0x1EDE154", Offset = "0x1EDE154", VA = "0x1EDE154", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000524")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027BF")]
				[Address(RVA = "0x1EDE1BC", Offset = "0x1EDE1BC", VA = "0x1EDE1BC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027BA")]
			[Address(RVA = "0x1EDBEC4", Offset = "0x1EDBEC4", VA = "0x1EDBEC4")]
			[DebuggerHidden]
			public <TestHarness>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x60027BB")]
			[Address(RVA = "0x1EDD64C", Offset = "0x1EDD64C", VA = "0x1EDD64C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027BC")]
			[Address(RVA = "0x1EDD650", Offset = "0x1EDD650", VA = "0x1EDD650", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027BE")]
			[Address(RVA = "0x1EDE15C", Offset = "0x1EDE15C", VA = "0x1EDE15C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text InProgressText;

		[Token(Token = "0x4000EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string EditorApkPath;

		[Token(Token = "0x4000EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int RepetitionCount;

		[Token(Token = "0x4000EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool LogToFile;

		[Token(Token = "0x4000EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string m_status;

		[Token(Token = "0x4000EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TestType m_testModes;

		[Token(Token = "0x4000EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private ReadMode m_readModes;

		[Token(Token = "0x4000F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CoroutineHost coroutineHost;

		[Token(Token = "0x4000F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector2 m_assetsScroll;

		[Token(Token = "0x4000F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector2 m_resultsScroll;

		[Token(Token = "0x4000F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string[] m_allStreamingAssets;

		[Token(Token = "0x4000F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<TestInfo> m_results;

		[Token(Token = "0x4000F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private HashSet<string> m_selectedPaths;

		[Token(Token = "0x170001BF")]
		private string StreamingAssetsPath
		{
			[Token(Token = "0x6001158")]
			[Address(RVA = "0x1EDBC04", Offset = "0x1EDBC04", VA = "0x1EDBC04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001155")]
		[Address(RVA = "0x1ED98F8", Offset = "0x1ED98F8", VA = "0x1ED98F8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001156")]
		[Address(RVA = "0x1ED9918", Offset = "0x1ED9918", VA = "0x1ED9918")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001157")]
		[Address(RVA = "0x1ED9938", Offset = "0x1ED9938", VA = "0x1ED9938")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001159")]
		[Address(RVA = "0x1EDB650", Offset = "0x1EDB650", VA = "0x1EDB650")]
		private void Initialize()
		{
		}

		[Token(Token = "0x600115A")]
		[Address(RVA = "0x1EDB834", Offset = "0x1EDB834", VA = "0x1EDB834")]
		private void DoTestTypeToggle(TestType testMode)
		{
		}

		[Token(Token = "0x600115B")]
		[Address(RVA = "0x1EDB9B4", Offset = "0x1EDB9B4", VA = "0x1EDB9B4")]
		private void DoReadModeToggle(ReadMode readMode)
		{
		}

		[Token(Token = "0x600115C")]
		[Address(RVA = "0x1EDBB34", Offset = "0x1EDBB34", VA = "0x1EDBB34")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1483958", Offset = "0x1483958")]
		private IEnumerator TestAllCoroutine(IEnumerable<string> paths, int attempts, ReadMode readModes, TestType testTypes, List<TestInfo> results)
		{
			return null;
		}

		[Token(Token = "0x600115D")]
		[Address(RVA = "0x1EDBC3C", Offset = "0x1EDBC3C", VA = "0x1EDBC3C")]
		private void LogWorkProgress(string status)
		{
		}

		[Token(Token = "0x600115E")]
		[Address(RVA = "0x1EDBD1C", Offset = "0x1EDBD1C", VA = "0x1EDBD1C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x14839BC", Offset = "0x14839BC")]
		private IEnumerator ErrorCatchingCoroutine(IEnumerator inner, Action<Exception> onError)
		{
			return null;
		}

		[Token(Token = "0x600115F")]
		[Address(RVA = "0x1EDBDF4", Offset = "0x1EDBDF4", VA = "0x1EDBDF4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1483A20", Offset = "0x1483A20")]
		private IEnumerator TestHarness(ReadMode readMode, string path, TestType testType, int attempts, TestResultDelegate callback)
		{
			return null;
		}

		[Token(Token = "0x6001160")]
		[Address(RVA = "0x1EDBEF0", Offset = "0x1EDBEF0", VA = "0x1EDBEF0")]
		public BSA_TestSceneGUI()
		{
		}
	}
}
namespace Better.StreamingAssets.ZipArchive
{
	[Token(Token = "0x2000221")]
	internal struct ZipGenericExtraField
	{
		[Token(Token = "0x4000F06")]
		private const int SizeOfHeader = 4;

		[Token(Token = "0x4000F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ushort _tag;

		[Token(Token = "0x4000F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		private ushort _size;

		[Token(Token = "0x4000F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private byte[] _data;

		[Token(Token = "0x170001C0")]
		public ushort Tag
		{
			[Token(Token = "0x6001161")]
			[Address(RVA = "0x1EE0B88", Offset = "0x1EE0B88", VA = "0x1EE0B88")]
			get
			{
				return default(ushort);
			}
		}

		[Token(Token = "0x170001C1")]
		public ushort Size
		{
			[Token(Token = "0x6001162")]
			[Address(RVA = "0x1EE0B90", Offset = "0x1EE0B90", VA = "0x1EE0B90")]
			get
			{
				return default(ushort);
			}
		}

		[Token(Token = "0x170001C2")]
		public byte[] Data
		{
			[Token(Token = "0x6001163")]
			[Address(RVA = "0x1EE0B98", Offset = "0x1EE0B98", VA = "0x1EE0B98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001164")]
		[Address(RVA = "0x1EDFC50", Offset = "0x1EDFC50", VA = "0x1EDFC50")]
		public static bool TryReadBlock(BinaryReader reader, long endExtraField, out ZipGenericExtraField field)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000222")]
	internal struct Zip64ExtraField
	{
		[Token(Token = "0x4000F0A")]
		public const int OffsetToFirstField = 4;

		[Token(Token = "0x4000F0B")]
		private const ushort TagConstant = 1;

		[Token(Token = "0x4000F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ushort _size;

		[Token(Token = "0x4000F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private long? _uncompressedSize;

		[Token(Token = "0x4000F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private long? _compressedSize;

		[Token(Token = "0x4000F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private long? _localHeaderOffset;

		[Token(Token = "0x4000F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int? _startDiskNumber;

		[Token(Token = "0x170001C3")]
		public long? UncompressedSize
		{
			[Token(Token = "0x6001165")]
			[Address(RVA = "0x1EDF498", Offset = "0x1EDF498", VA = "0x1EDF498")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001166")]
			[Address(RVA = "0x1EDF4A4", Offset = "0x1EDF4A4", VA = "0x1EDF4A4")]
			set
			{
			}
		}

		[Token(Token = "0x170001C4")]
		public long? CompressedSize
		{
			[Token(Token = "0x6001167")]
			[Address(RVA = "0x1EDF530", Offset = "0x1EDF530", VA = "0x1EDF530")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001168")]
			[Address(RVA = "0x1EDF53C", Offset = "0x1EDF53C", VA = "0x1EDF53C")]
			set
			{
			}
		}

		[Token(Token = "0x170001C5")]
		public long? LocalHeaderOffset
		{
			[Token(Token = "0x6001169")]
			[Address(RVA = "0x1EDF544", Offset = "0x1EDF544", VA = "0x1EDF544")]
			get
			{
				return null;
			}
			[Token(Token = "0x600116A")]
			[Address(RVA = "0x1EDF550", Offset = "0x1EDF550", VA = "0x1EDF550")]
			set
			{
			}
		}

		[Token(Token = "0x170001C6")]
		public int? StartDiskNumber
		{
			[Token(Token = "0x600116B")]
			[Address(RVA = "0x1EDF558", Offset = "0x1EDF558", VA = "0x1EDF558")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600116C")]
		[Address(RVA = "0x1EDF4AC", Offset = "0x1EDF4AC", VA = "0x1EDF4AC")]
		private void UpdateSize()
		{
		}

		[Token(Token = "0x600116D")]
		[Address(RVA = "0x1EDF560", Offset = "0x1EDF560", VA = "0x1EDF560")]
		public static Zip64ExtraField GetJustZip64Block(Stream extraFieldStream, bool readUncompressedSize, bool readCompressedSize, bool readLocalHeaderOffset, bool readStartDiskNumber)
		{
			return default(Zip64ExtraField);
		}

		[Token(Token = "0x600116E")]
		[Address(RVA = "0x1EDF788", Offset = "0x1EDF788", VA = "0x1EDF788")]
		private static bool TryGetZip64BlockFromGenericExtraField(ZipGenericExtraField extraField, bool readUncompressedSize, bool readCompressedSize, bool readLocalHeaderOffset, bool readStartDiskNumber, out Zip64ExtraField zip64Block)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000223")]
	internal struct Zip64EndOfCentralDirectoryLocator
	{
		[Token(Token = "0x4000F11")]
		public const uint SignatureConstant = 117853008u;

		[Token(Token = "0x4000F12")]
		public const int SizeOfBlockWithoutSignature = 16;

		[Token(Token = "0x4000F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint NumberOfDiskWithZip64EOCD;

		[Token(Token = "0x4000F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong OffsetOfZip64EOCD;

		[Token(Token = "0x4000F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint TotalNumberOfDisks;

		[Token(Token = "0x600116F")]
		[Address(RVA = "0x1EDF2B8", Offset = "0x1EDF2B8", VA = "0x1EDF2B8")]
		public static bool TryReadBlock(BinaryReader reader, out Zip64EndOfCentralDirectoryLocator zip64EOCDLocator)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000224")]
	internal struct Zip64EndOfCentralDirectoryRecord
	{
		[Token(Token = "0x4000F16")]
		private const uint SignatureConstant = 101075792u;

		[Token(Token = "0x4000F17")]
		private const ulong NormalSize = 44uL;

		[Token(Token = "0x4000F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong SizeOfThisRecord;

		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ushort VersionMadeBy;

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
		public ushort VersionNeededToExtract;

		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint NumberOfThisDisk;

		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint NumberOfDiskWithStartOfCD;

		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ulong NumberOfEntriesOnThisDisk;

		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ulong NumberOfEntriesTotal;

		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ulong SizeOfCentralDirectory;

		[Token(Token = "0x4000F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ulong OffsetOfCentralDirectory;

		[Token(Token = "0x6001170")]
		[Address(RVA = "0x1EDF35C", Offset = "0x1EDF35C", VA = "0x1EDF35C")]
		public static bool TryReadBlock(BinaryReader reader, out Zip64EndOfCentralDirectoryRecord zip64EOCDRecord)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000225")]
	internal struct ZipLocalFileHeader
	{
		[Token(Token = "0x4000F21")]
		public const uint DataDescriptorSignature = 134695760u;

		[Token(Token = "0x4000F22")]
		public const uint SignatureConstant = 67324752u;

		[Token(Token = "0x4000F23")]
		public const int OffsetToCrcFromHeaderStart = 14;

		[Token(Token = "0x4000F24")]
		public const int OffsetToBitFlagFromHeaderStart = 6;

		[Token(Token = "0x4000F25")]
		public const int SizeOfLocalHeader = 30;

		[Token(Token = "0x6001171")]
		[Address(RVA = "0x1EE0D84", Offset = "0x1EE0D84", VA = "0x1EE0D84")]
		public static bool TrySkipBlock(BinaryReader reader)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000226")]
	internal struct ZipCentralDirectoryFileHeader
	{
		[Token(Token = "0x4000F26")]
		public const uint SignatureConstant = 33639248u;

		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public byte VersionMadeByCompatibility;

		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public byte VersionMadeBySpecification;

		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public ushort VersionNeededToExtract;

		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ushort GeneralPurposeBitFlag;

		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public ushort CompressionMethod;

		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint LastModified;

		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint Crc32;

		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long CompressedSize;

		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public long UncompressedSize;

		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ushort FilenameLength;

		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public ushort ExtraFieldLength;

		[Token(Token = "0x4000F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public ushort FileCommentLength;

		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int DiskNumberStart;

		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public ushort InternalFileAttributes;

		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public uint ExternalFileAttributes;

		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public long RelativeOffsetOfLocalHeader;

		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public byte[] Filename;

		[Token(Token = "0x4000F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public byte[] FileComment;

		[Token(Token = "0x4000F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<ZipGenericExtraField> ExtraFields;

		[Token(Token = "0x6001172")]
		[Address(RVA = "0x1EE0548", Offset = "0x1EE0548", VA = "0x1EE0548")]
		public static bool TryReadBlock(BinaryReader reader, out ZipCentralDirectoryFileHeader header)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000227")]
	internal struct ZipEndOfCentralDirectoryBlock
	{
		[Token(Token = "0x4000F3A")]
		public const uint SignatureConstant = 101010256u;

		[Token(Token = "0x4000F3B")]
		public const int SizeOfBlockWithoutSignature = 18;

		[Token(Token = "0x4000F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint Signature;

		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ushort NumberOfThisDisk;

		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public ushort NumberOfTheDiskWithTheStartOfTheCentralDirectory;

		[Token(Token = "0x4000F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ushort NumberOfEntriesInTheCentralDirectoryOnThisDisk;

		[Token(Token = "0x4000F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
		public ushort NumberOfEntriesInTheCentralDirectory;

		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint SizeOfCentralDirectory;

		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint OffsetOfStartOfCentralDirectoryWithRespectToTheStartingDiskNumber;

		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public byte[] ArchiveComment;

		[Token(Token = "0x6001173")]
		[Address(RVA = "0x1EE0414", Offset = "0x1EE0414", VA = "0x1EE0414")]
		public static bool TryReadBlock(BinaryReader reader, out ZipEndOfCentralDirectoryBlock eocdBlock)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000228")]
	internal static class ZipHelper
	{
		[Token(Token = "0x4000F44")]
		internal const uint Mask32Bit = uint.MaxValue;

		[Token(Token = "0x4000F45")]
		internal const ushort Mask16Bit = ushort.MaxValue;

		[Token(Token = "0x4000F46")]
		private const int BackwardsSeekingBufferSize = 32;

		[Token(Token = "0x6001174")]
		[Address(RVA = "0x1EE0BA0", Offset = "0x1EE0BA0", VA = "0x1EE0BA0")]
		internal static void ReadBytes(Stream stream, byte[] buffer, int bytesToRead)
		{
		}

		[Token(Token = "0x6001175")]
		[Address(RVA = "0x1EE030C", Offset = "0x1EE030C", VA = "0x1EE030C")]
		internal static bool SeekBackwardsToSignature(Stream stream, uint signatureToFind)
		{
			return default(bool);
		}

		[Token(Token = "0x6001176")]
		[Address(RVA = "0x1EE0A98", Offset = "0x1EE0A98", VA = "0x1EE0A98")]
		internal static void AdvanceToPosition(this Stream stream, long position)
		{
		}

		[Token(Token = "0x6001177")]
		[Address(RVA = "0x1EE0C68", Offset = "0x1EE0C68", VA = "0x1EE0C68")]
		private static bool SeekBackwardsAndRead(Stream stream, byte[] buffer, out int bufferPointer)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000229")]
	public class ZipArchiveException : Exception
	{
		[Token(Token = "0x6001178")]
		[Address(RVA = "0x1EDFD40", Offset = "0x1EDFD40", VA = "0x1EDFD40")]
		public ZipArchiveException(string msg)
		{
		}

		[Token(Token = "0x6001179")]
		[Address(RVA = "0x1EDFDB8", Offset = "0x1EDFDB8", VA = "0x1EDFDB8")]
		public ZipArchiveException(string msg, Exception inner)
		{
		}
	}
	[Token(Token = "0x200022A")]
	public static class ZipArchiveUtils
	{
		[Token(Token = "0x600117A")]
		[Address(RVA = "0x1EDFE38", Offset = "0x1EDFE38", VA = "0x1EDFE38")]
		public static void ReadEndOfCentralDirectory(Stream stream, BinaryReader reader, out long expectedNumberOfEntries, out long centralDirectoryStart)
		{
		}
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x200022B")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly UnityEngine.Color COLOR_GRAB;

		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly UnityEngine.Color COLOR_HIGHLIGHT;

		[Token(Token = "0x4000F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private UnityEngine.Color m_color;

		[Token(Token = "0x4000F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x4000F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x170001C7")]
		public bool Highlight
		{
			[Token(Token = "0x600117B")]
			[Address(RVA = "0x1CE8914", Offset = "0x1CE8914", VA = "0x1CE8914")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600117C")]
			[Address(RVA = "0x1CE891C", Offset = "0x1CE891C", VA = "0x1CE891C")]
			set
			{
			}
		}

		[Token(Token = "0x600117D")]
		[Address(RVA = "0x1CE8928", Offset = "0x1CE8928", VA = "0x1CE8928")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x600117E")]
		[Address(RVA = "0x1CE8AF4", Offset = "0x1CE8AF4", VA = "0x1CE8AF4", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x600117F")]
		[Address(RVA = "0x1CE8B1C", Offset = "0x1CE8B1C", VA = "0x1CE8B1C", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6001180")]
		[Address(RVA = "0x1CE8B44", Offset = "0x1CE8B44", VA = "0x1CE8B44")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001181")]
		[Address(RVA = "0x1CE89F4", Offset = "0x1CE89F4", VA = "0x1CE89F4")]
		private void SetColor(UnityEngine.Color color)
		{
		}

		[Token(Token = "0x6001182")]
		[Address(RVA = "0x1CE8DD4", Offset = "0x1CE8DD4", VA = "0x1CE8DD4")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x200022C")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x4000F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x4000F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x4000F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x4000F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x170001C8")]
		public bool InRange
		{
			[Token(Token = "0x6001184")]
			[Address(RVA = "0x1CE9550", Offset = "0x1CE9550", VA = "0x1CE9550")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001185")]
			[Address(RVA = "0x1CE9558", Offset = "0x1CE9558", VA = "0x1CE9558")]
			set
			{
			}
		}

		[Token(Token = "0x170001C9")]
		public bool Targeted
		{
			[Token(Token = "0x6001186")]
			[Address(RVA = "0x1CE96D4", Offset = "0x1CE96D4", VA = "0x1CE96D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001187")]
			[Address(RVA = "0x1CE96DC", Offset = "0x1CE96DC", VA = "0x1CE96DC")]
			set
			{
			}
		}

		[Token(Token = "0x6001188")]
		[Address(RVA = "0x1CE96E8", Offset = "0x1CE96E8", VA = "0x1CE96E8", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001189")]
		[Address(RVA = "0x1CE9564", Offset = "0x1CE9564", VA = "0x1CE9564")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x600118A")]
		[Address(RVA = "0x1CE98C4", Offset = "0x1CE98C4", VA = "0x1CE98C4")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x200022D")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1466D58", Offset = "0x1466D58")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x4000F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x4000F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x4000F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x4000F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x4000F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Collider m_targetCollider;

		[Token(Token = "0x170001CA")]
		public bool UseSpherecast
		{
			[Token(Token = "0x600118B")]
			[Address(RVA = "0x1CE98CC", Offset = "0x1CE98CC", VA = "0x1CE98CC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600118C")]
			[Address(RVA = "0x1CE98D4", Offset = "0x1CE98D4", VA = "0x1CE98D4")]
			set
			{
			}
		}

		[Token(Token = "0x600118D")]
		[Address(RVA = "0x1CE98F0", Offset = "0x1CE98F0", VA = "0x1CE98F0", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600118E")]
		[Address(RVA = "0x1CE9B08", Offset = "0x1CE9B08", VA = "0x1CE9B08", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x600118F")]
		[Address(RVA = "0x1CEA47C", Offset = "0x1CEA47C", VA = "0x1CEA47C", Slot = "7")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x6001190")]
		[Address(RVA = "0x1CEAA54", Offset = "0x1CEAA54", VA = "0x1CEAA54", Slot = "8")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x6001191")]
		[Address(RVA = "0x1CEAE34", Offset = "0x1CEAE34", VA = "0x1CEAE34")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x6001192")]
		[Address(RVA = "0x1CE9D74", Offset = "0x1CE9D74", VA = "0x1CE9D74")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6001193")]
		[Address(RVA = "0x1CEAF10", Offset = "0x1CEAF10", VA = "0x1CEAF10")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6001194")]
		[Address(RVA = "0x1CEB3AC", Offset = "0x1CEB3AC", VA = "0x1CEB3AC", Slot = "9")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x6001195")]
		[Address(RVA = "0x1CEB3C4", Offset = "0x1CEB3C4", VA = "0x1CEB3C4", Slot = "10")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x6001196")]
		[Address(RVA = "0x1CEB3CC", Offset = "0x1CEB3CC", VA = "0x1CEB3CC")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x200022E")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEngine.Color OutlineColorInRange;

		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEngine.Color OutlineColorHighlighted;

		[Token(Token = "0x4000F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEngine.Color OutlineColorOutOfRange;

		[Token(Token = "0x6001197")]
		[Address(RVA = "0x1CECFBC", Offset = "0x1CECFBC", VA = "0x1CECFBC")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x6001198")]
		[Address(RVA = "0x1CED06C", Offset = "0x1CED06C", VA = "0x1CED06C")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x6001199")]
		[Address(RVA = "0x1CED118", Offset = "0x1CED118", VA = "0x1CED118")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x200022F")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x2000620")]
		public enum CrosshairState
		{
			[Token(Token = "0x4002466")]
			Disabled,
			[Token(Token = "0x4002467")]
			Enabled,
			[Token(Token = "0x4002468")]
			Targeted
		}

		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x4000F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x4000F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x4000F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x600119A")]
		[Address(RVA = "0x1CED120", Offset = "0x1CED120", VA = "0x1CED120")]
		private void Start()
		{
		}

		[Token(Token = "0x600119B")]
		[Address(RVA = "0x1CE9828", Offset = "0x1CE9828", VA = "0x1CE9828")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x600119C")]
		[Address(RVA = "0x1CED190", Offset = "0x1CED190", VA = "0x1CED190")]
		private void Update()
		{
		}

		[Token(Token = "0x600119D")]
		[Address(RVA = "0x1CED1D8", Offset = "0x1CED1D8", VA = "0x1CED1D8")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x2000230")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x600119E")]
		[Address(RVA = "0x1CF22D0", Offset = "0x1CF22D0", VA = "0x1CF22D0")]
		private void Start()
		{
		}

		[Token(Token = "0x600119F")]
		[Address(RVA = "0x1CF239C", Offset = "0x1CF239C", VA = "0x1CF239C")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60011A0")]
		[Address(RVA = "0x1CF23A8", Offset = "0x1CF23A8", VA = "0x1CF23A8")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0x1CF23B4", Offset = "0x1CF23B4", VA = "0x1CF23B4")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x2000231")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x4000F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x4000F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x4000F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x60011A2")]
		[Address(RVA = "0x1CE73E8", Offset = "0x1CE73E8", VA = "0x1CE73E8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0x1CE7440", Offset = "0x1CE7440", VA = "0x1CE7440")]
		private void Update()
		{
		}

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0x1CE76E4", Offset = "0x1CE76E4", VA = "0x1CE76E4")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0x1CE77D4", Offset = "0x1CE77D4", VA = "0x1CE77D4")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60011A6")]
		[Address(RVA = "0x1CE7444", Offset = "0x1CE7444", VA = "0x1CE7444")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x60011A7")]
		[Address(RVA = "0x1CE78C4", Offset = "0x1CE78C4", VA = "0x1CE78C4")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x2000232")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x2000621")]
		public enum ContactTest
		{
			[Token(Token = "0x400246A")]
			PerpenTest,
			[Token(Token = "0x400246B")]
			BackwardsPress
		}

		[Token(Token = "0x4000F6B")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x4000F6C")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x4000F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private bool _allowMultipleNearFieldInteraction;

		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1473488", Offset = "0x1473488")]
		private InteractableState <CurrentButtonState>k__BackingField;

		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x170001CB")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x60011A8")]
			[Address(RVA = "0x1CE7974", Offset = "0x1CE7974", VA = "0x1CE7974", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001CC")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x60011A9")]
			[Address(RVA = "0x1CE797C", Offset = "0x1CE797C", VA = "0x1CE797C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170001CD")]
		public InteractableState CurrentButtonState
		{
			[Token(Token = "0x60011AA")]
			[Address(RVA = "0x1CE7988", Offset = "0x1CE7988", VA = "0x1CE7988")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1483A94", Offset = "0x1483A94")]
			get
			{
				return default(InteractableState);
			}
			[Token(Token = "0x60011AB")]
			[Address(RVA = "0x1CE7990", Offset = "0x1CE7990", VA = "0x1CE7990")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1483AA4", Offset = "0x1483AA4")]
			private set
			{
			}
		}

		[Token(Token = "0x60011AC")]
		[Address(RVA = "0x1CE7998", Offset = "0x1CE7998", VA = "0x1CE7998", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60011AD")]
		[Address(RVA = "0x1CE7B10", Offset = "0x1CE7B10", VA = "0x1CE7B10")]
		private void FireInteractionEventsOnDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool, InteractionType interactionType)
		{
		}

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0x1CE7D30", Offset = "0x1CE7D30", VA = "0x1CE7D30", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth)
		{
		}

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0x1CE8288", Offset = "0x1CE8288", VA = "0x1CE8288")]
		private InteractableState GetUpcomingStateNearField(InteractableState oldState, InteractableCollisionDepth newCollisionDepth, bool toolIsInActionZone, bool toolIsInContactZone, bool toolIsInProximity, bool validContact, bool onPositiveSideOfInteractable)
		{
			return default(InteractableState);
		}

		[Token(Token = "0x60011B0")]
		[Address(RVA = "0x1CE83FC", Offset = "0x1CE83FC", VA = "0x1CE83FC")]
		public void ForceResetButton()
		{
		}

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0x1CE81A0", Offset = "0x1CE81A0", VA = "0x1CE81A0")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60011B2")]
		[Address(RVA = "0x1CE84EC", Offset = "0x1CE84EC", VA = "0x1CE84EC")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60011B3")]
		[Address(RVA = "0x1CE85E0", Offset = "0x1CE85E0", VA = "0x1CE85E0")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60011B4")]
		[Address(RVA = "0x1CE870C", Offset = "0x1CE870C", VA = "0x1CE870C")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x2000233")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x4000F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14734A8", Offset = "0x14734A8")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14734B8", Offset = "0x14734B8")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x170001CE")]
		public Collider Collider
		{
			[Token(Token = "0x60011B5")]
			[Address(RVA = "0x1CE8810", Offset = "0x1CE8810", VA = "0x1CE8810", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1483AB4", Offset = "0x1483AB4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011B6")]
			[Address(RVA = "0x1CE8818", Offset = "0x1CE8818", VA = "0x1CE8818")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1483AC4", Offset = "0x1483AC4")]
			private set
			{
			}
		}

		[Token(Token = "0x170001CF")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x60011B7")]
			[Address(RVA = "0x1CE8820", Offset = "0x1CE8820", VA = "0x1CE8820", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1483AD4", Offset = "0x1483AD4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011B8")]
			[Address(RVA = "0x1CE8828", Offset = "0x1CE8828", VA = "0x1CE8828")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1483AE4", Offset = "0x1483AE4")]
			private set
			{
			}
		}

		[Token(Token = "0x170001D0")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x60011B9")]
			[Address(RVA = "0x1CE8830", Offset = "0x1CE8830", VA = "0x1CE8830", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0x1CE8880", Offset = "0x1CE8880", VA = "0x1CE8880")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011BB")]
		[Address(RVA = "0x1CE890C", Offset = "0x1CE890C", VA = "0x1CE890C")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x2000234")]
	public interface ColliderZone
	{
		[Token(Token = "0x170001D1")]
		Collider Collider
		{
			[Token(Token = "0x60011BC")]
			get;
		}

		[Token(Token = "0x170001D2")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x60011BD")]
			get;
		}

		[Token(Token = "0x170001D3")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x60011BE")]
			get;
		}
	}
	[Token(Token = "0x2000235")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x4000F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x60011BF")]
		[Address(RVA = "0x1CE7C74", Offset = "0x1CE7C74", VA = "0x1CE7C74")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x2000236")]
	public enum InteractionType
	{
		[Token(Token = "0x4000F81")]
		Enter,
		[Token(Token = "0x4000F82")]
		Stay,
		[Token(Token = "0x4000F83")]
		Exit
	}
	[Token(Token = "0x2000237")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x2000622")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x400246D")]
			Mesh,
			[Token(Token = "0x400246E")]
			Skeleton,
			[Token(Token = "0x400246F")]
			Both
		}

		[Token(Token = "0x2000623")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A51C", Offset = "0x146A51C")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002470")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002471")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002472")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x17000525")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027C3")]
				[Address(RVA = "0x1CEE1BC", Offset = "0x1CEE1BC", VA = "0x1CEE1BC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000526")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027C5")]
				[Address(RVA = "0x1CEE224", Offset = "0x1CEE224", VA = "0x1CEE224", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027C0")]
			[Address(RVA = "0x1CEDC40", Offset = "0x1CEDC40", VA = "0x1CEDC40")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x60027C1")]
			[Address(RVA = "0x1CEDF68", Offset = "0x1CEDF68", VA = "0x1CEDF68", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027C2")]
			[Address(RVA = "0x1CEDF6C", Offset = "0x1CEDF6C", VA = "0x1CEDF6C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027C4")]
			[Address(RVA = "0x1CEE1C4", Offset = "0x1CEE1C4", VA = "0x1CEE1C4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F84")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x4000F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x4000F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x4000F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x4000F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x4000F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x4000F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x4000F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x4000F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x4000F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x4000F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x4000F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x4000F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14734E8", Offset = "0x14734E8")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x170001D4")]
		public OVRHand RightHand
		{
			[Token(Token = "0x60011C0")]
			[Address(RVA = "0x1CEC048", Offset = "0x1CEC048", VA = "0x1CEC048")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011C1")]
			[Address(RVA = "0x1CED1E0", Offset = "0x1CED1E0", VA = "0x1CED1E0")]
			private set
			{
			}
		}

		[Token(Token = "0x170001D5")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x60011C2")]
			[Address(RVA = "0x1CECC40", Offset = "0x1CECC40", VA = "0x1CECC40")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011C3")]
			[Address(RVA = "0x1CED250", Offset = "0x1CED250", VA = "0x1CED250")]
			private set
			{
			}
		}

		[Token(Token = "0x170001D6")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x60011C4")]
			[Address(RVA = "0x1CED2C0", Offset = "0x1CED2C0", VA = "0x1CED2C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011C5")]
			[Address(RVA = "0x1CED2F8", Offset = "0x1CED2F8", VA = "0x1CED2F8")]
			private set
			{
			}
		}

		[Token(Token = "0x170001D7")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x60011C6")]
			[Address(RVA = "0x1CED368", Offset = "0x1CED368", VA = "0x1CED368")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011C7")]
			[Address(RVA = "0x1CED3A0", Offset = "0x1CED3A0", VA = "0x1CED3A0")]
			private set
			{
			}
		}

		[Token(Token = "0x170001D8")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x60011C8")]
			[Address(RVA = "0x1CED410", Offset = "0x1CED410", VA = "0x1CED410")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011C9")]
			[Address(RVA = "0x1CED448", Offset = "0x1CED448", VA = "0x1CED448")]
			private set
			{
			}
		}

		[Token(Token = "0x170001D9")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x60011CA")]
			[Address(RVA = "0x1CEC014", Offset = "0x1CEC014", VA = "0x1CEC014")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011CB")]
			[Address(RVA = "0x1CED4B8", Offset = "0x1CED4B8", VA = "0x1CED4B8")]
			private set
			{
			}
		}

		[Token(Token = "0x170001DA")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x60011CC")]
			[Address(RVA = "0x1CECC0C", Offset = "0x1CECC0C", VA = "0x1CECC0C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011CD")]
			[Address(RVA = "0x1CED524", Offset = "0x1CED524", VA = "0x1CED524")]
			private set
			{
			}
		}

		[Token(Token = "0x170001DB")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x60011CE")]
			[Address(RVA = "0x1CED590", Offset = "0x1CED590", VA = "0x1CED590")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011CF")]
			[Address(RVA = "0x1CED5C4", Offset = "0x1CED5C4", VA = "0x1CED5C4")]
			private set
			{
			}
		}

		[Token(Token = "0x170001DC")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x60011D0")]
			[Address(RVA = "0x1CED630", Offset = "0x1CED630", VA = "0x1CED630")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011D1")]
			[Address(RVA = "0x1CED664", Offset = "0x1CED664", VA = "0x1CED664")]
			private set
			{
			}
		}

		[Token(Token = "0x170001DD")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x60011D2")]
			[Address(RVA = "0x1CED6D0", Offset = "0x1CED6D0", VA = "0x1CED6D0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011D3")]
			[Address(RVA = "0x1CED704", Offset = "0x1CED704", VA = "0x1CED704")]
			private set
			{
			}
		}

		[Token(Token = "0x170001DE")]
		public static HandsManager Instance
		{
			[Token(Token = "0x60011D4")]
			[Address(RVA = "0x1CED770", Offset = "0x1CED770", VA = "0x1CED770")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1483AF4", Offset = "0x1483AF4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011D5")]
			[Address(RVA = "0x1CED7C0", Offset = "0x1CED7C0", VA = "0x1CED7C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1483B04", Offset = "0x1483B04")]
			private set
			{
			}
		}

		[Token(Token = "0x60011D6")]
		[Address(RVA = "0x1CED818", Offset = "0x1CED818", VA = "0x1CED818")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011D7")]
		[Address(RVA = "0x1CEDBB8", Offset = "0x1CEDBB8", VA = "0x1CEDBB8")]
		private void Update()
		{
		}

		[Token(Token = "0x60011D8")]
		[Address(RVA = "0x1CEDB3C", Offset = "0x1CEDB3C", VA = "0x1CEDB3C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1483B14", Offset = "0x1483B14")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x60011D9")]
		[Address(RVA = "0x1CE93A4", Offset = "0x1CE93A4", VA = "0x1CE93A4")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x60011DA")]
		[Address(RVA = "0x1CEDC6C", Offset = "0x1CEDC6C", VA = "0x1CEDC6C")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x60011DB")]
		[Address(RVA = "0x1CECC78", Offset = "0x1CECC78", VA = "0x1CECC78")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x60011DC")]
		[Address(RVA = "0x1CEBE84", Offset = "0x1CEBE84", VA = "0x1CEBE84")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x60011DD")]
		[Address(RVA = "0x1CEDE4C", Offset = "0x1CEDE4C", VA = "0x1CEDE4C")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x2000238")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000624")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x60027C6")]
			[Address(RVA = "0x1CEE974", Offset = "0x1CEE974", VA = "0x1CEE974")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x4000F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x170001DF")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x60011DE")]
			[Address(RVA = "0x1CEE22C", Offset = "0x1CEE22C", VA = "0x1CEE22C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E0")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x60011DF")]
			[Address(RVA = "0x1CEE234", Offset = "0x1CEE234", VA = "0x1CEE234")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E1")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x60011E0")]
			[Address(RVA = "0x1CEE23C", Offset = "0x1CEE23C", VA = "0x1CEE23C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E2")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x60011E1")]
			[Address(RVA = "0x1CEE244", Offset = "0x1CEE244", VA = "0x1CEE244", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000044")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x60011E2")]
			[Address(RVA = "0x1CEE24C", Offset = "0x1CEE24C", VA = "0x1CEE24C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1483B78", Offset = "0x1483B78")]
			add
			{
			}
			[Token(Token = "0x60011E3")]
			[Address(RVA = "0x1CEE2F0", Offset = "0x1CEE2F0", VA = "0x1CEE2F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1483B88", Offset = "0x1483B88")]
			remove
			{
			}
		}

		[Token(Token = "0x14000045")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x60011E5")]
			[Address(RVA = "0x1CEE408", Offset = "0x1CEE408", VA = "0x1CEE408")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1483B98", Offset = "0x1483B98")]
			add
			{
			}
			[Token(Token = "0x60011E6")]
			[Address(RVA = "0x1CEE4AC", Offset = "0x1CEE4AC", VA = "0x1CEE4AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1483BA8", Offset = "0x1483BA8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000046")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x60011E8")]
			[Address(RVA = "0x1CEE5C4", Offset = "0x1CEE5C4", VA = "0x1CEE5C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1483BB8", Offset = "0x1483BB8")]
			add
			{
			}
			[Token(Token = "0x60011E9")]
			[Address(RVA = "0x1CEE668", Offset = "0x1CEE668", VA = "0x1CEE668")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1483BC8", Offset = "0x1483BC8")]
			remove
			{
			}
		}

		[Token(Token = "0x60011E4")]
		[Address(RVA = "0x1CEE394", Offset = "0x1CEE394", VA = "0x1CEE394", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60011E7")]
		[Address(RVA = "0x1CEE550", Offset = "0x1CEE550", VA = "0x1CEE550", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60011EA")]
		[Address(RVA = "0x1CEE70C", Offset = "0x1CEE70C", VA = "0x1CEE70C", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60011EB")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth);

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0x1CE7AAC", Offset = "0x1CE7AAC", VA = "0x1CE7AAC", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0x1CEE848", Offset = "0x1CEE848", VA = "0x1CEE848", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0x1CE8808", Offset = "0x1CE8808", VA = "0x1CE8808")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x2000239")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x4000F9C")]
		None,
		[Token(Token = "0x4000F9D")]
		Proximity,
		[Token(Token = "0x4000F9E")]
		Contact,
		[Token(Token = "0x4000F9F")]
		Action
	}
	[Token(Token = "0x200023A")]
	public enum InteractableState
	{
		[Token(Token = "0x4000FA1")]
		Default,
		[Token(Token = "0x4000FA2")]
		ProximityState,
		[Token(Token = "0x4000FA3")]
		ContactState,
		[Token(Token = "0x4000FA4")]
		ActionState
	}
	[Token(Token = "0x200023B")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x4000FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x4000FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x4000FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x4000FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0x1CE8334", Offset = "0x1CE8334", VA = "0x1CE8334")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x200023C")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x4000FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x170001E3")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x60011F0")]
			[Address(RVA = "0x1CEE9C4", Offset = "0x1CEE9C4", VA = "0x1CEE9C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011F1")]
		[Address(RVA = "0x1CEE780", Offset = "0x1CEE780", VA = "0x1CEE780")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60011F2")]
		[Address(RVA = "0x1CEE8AC", Offset = "0x1CEE8AC", VA = "0x1CEE8AC")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60011F3")]
		[Address(RVA = "0x1CEEA2C", Offset = "0x1CEEA2C", VA = "0x1CEEA2C")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x200023D")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x2000625")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A52C", Offset = "0x146A52C")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002473")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002474")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002475")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x4002476")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x4002477")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x4002478")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x4002479")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x400247A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x400247B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x17000527")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027CB")]
				[Address(RVA = "0x1CEFB34", Offset = "0x1CEFB34", VA = "0x1CEFB34", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000528")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027CD")]
				[Address(RVA = "0x1CEFB9C", Offset = "0x1CEFB9C", VA = "0x1CEFB9C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027C7")]
			[Address(RVA = "0x1CEF580", Offset = "0x1CEF580", VA = "0x1CEF580")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x60027C8")]
			[Address(RVA = "0x1CEF6AC", Offset = "0x1CEF6AC", VA = "0x1CEF6AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027C9")]
			[Address(RVA = "0x1CEF720", Offset = "0x1CEF720", VA = "0x1CEF720", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027CA")]
			[Address(RVA = "0x1CEF6C8", Offset = "0x1CEF6C8", VA = "0x1CEF6C8")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60027CC")]
			[Address(RVA = "0x1CEFB3C", Offset = "0x1CEFB3C", VA = "0x1CEFB3C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x4000FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x60011F5")]
		[Address(RVA = "0x1CEF460", Offset = "0x1CEF460", VA = "0x1CEF460")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011F6")]
		[Address(RVA = "0x1CEF4DC", Offset = "0x1CEF4DC", VA = "0x1CEF4DC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1483BD8", Offset = "0x1483BD8")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x60011F7")]
		[Address(RVA = "0x1CEF5AC", Offset = "0x1CEF5AC", VA = "0x1CEF5AC")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x60011F8")]
		[Address(RVA = "0x1CEF6A4", Offset = "0x1CEF6A4", VA = "0x1CEF6A4")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x200023E")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x4000FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x4000FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x4000FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x4000FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x4000FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x4000FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x4000FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x170001E4")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x60011F9")]
			[Address(RVA = "0x1CEB8B0", Offset = "0x1CEB8B0", VA = "0x1CEB8B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0x1CEBA1C", Offset = "0x1CEBA1C", VA = "0x1CEBA1C")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0x1CEFBA4", Offset = "0x1CEFBA4", VA = "0x1CEFBA4")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x60011FC")]
		[Address(RVA = "0x1CEFC50", Offset = "0x1CEFC50", VA = "0x1CEFC50")]
		private void Update()
		{
		}

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0x1CEFF18", Offset = "0x1CEFF18", VA = "0x1CEFF18")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x60011FE")]
		[Address(RVA = "0x1CEFF60", Offset = "0x1CEFF60", VA = "0x1CEFF60")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60011FF")]
		[Address(RVA = "0x1CF01CC", Offset = "0x1CF01CC", VA = "0x1CF01CC")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x6001200")]
		[Address(RVA = "0x1CF02F8", Offset = "0x1CF02F8", VA = "0x1CF02F8")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x200023F")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x2000626")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A53C", Offset = "0x146A53C")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400247C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400247D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400247E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x17000529")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027D1")]
				[Address(RVA = "0x1CECE88", Offset = "0x1CECE88", VA = "0x1CECE88", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700052A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027D3")]
				[Address(RVA = "0x1CECEF0", Offset = "0x1CECEF0", VA = "0x1CECEF0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027CE")]
			[Address(RVA = "0x1CEBB44", Offset = "0x1CEBB44", VA = "0x1CEBB44")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x60027CF")]
			[Address(RVA = "0x1CEC884", Offset = "0x1CEC884", VA = "0x1CEC884", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027D0")]
			[Address(RVA = "0x1CEC888", Offset = "0x1CEC888", VA = "0x1CEC888", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027D2")]
			[Address(RVA = "0x1CECE90", Offset = "0x1CECE90", VA = "0x1CECE90", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FB4")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x4000FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x4000FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x4000FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x4000FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x4000FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x4000FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x4000FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x4000FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x170001E5")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001201")]
			[Address(RVA = "0x1CEB77C", Offset = "0x1CEB77C", VA = "0x1CEB77C", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x170001E6")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6001202")]
			[Address(RVA = "0x1CEB784", Offset = "0x1CEB784", VA = "0x1CEB784", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x170001E7")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6001203")]
			[Address(RVA = "0x1CEB78C", Offset = "0x1CEB78C", VA = "0x1CEB78C", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001E8")]
		public override bool EnableState
		{
			[Token(Token = "0x6001204")]
			[Address(RVA = "0x1CEB794", Offset = "0x1CEB794", VA = "0x1CEB794", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001205")]
			[Address(RVA = "0x1CEB7C0", Offset = "0x1CEB7C0", VA = "0x1CEB7C0", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6001206")]
		[Address(RVA = "0x1CEB7FC", Offset = "0x1CEB7FC", VA = "0x1CEB7FC", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001207")]
		[Address(RVA = "0x1CEBAC8", Offset = "0x1CEBAC8", VA = "0x1CEBAC8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1483C3C", Offset = "0x1483C3C")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x6001208")]
		[Address(RVA = "0x1CEBB70", Offset = "0x1CEBB70", VA = "0x1CEBB70")]
		private void Update()
		{
		}

		[Token(Token = "0x6001209")]
		[Address(RVA = "0x1CEC080", Offset = "0x1CEC080", VA = "0x1CEC080")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x600120A")]
		[Address(RVA = "0x1CEC2F8", Offset = "0x1CEC2F8", VA = "0x1CEC2F8")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x600120B")]
		[Address(RVA = "0x1CEC438", Offset = "0x1CEC438", VA = "0x1CEC438", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x600120C")]
		[Address(RVA = "0x1CEC710", Offset = "0x1CEC710", VA = "0x1CEC710", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x600120D")]
		[Address(RVA = "0x1CEC714", Offset = "0x1CEC714", VA = "0x1CEC714", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x600120E")]
		[Address(RVA = "0x1CEC718", Offset = "0x1CEC718", VA = "0x1CEC718")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x2000240")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4000FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x4000FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1473578", Offset = "0x1473578")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1473588", Offset = "0x1473588")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x4000FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1473598", Offset = "0x1473598")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x170001E9")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x600120F")]
			[Address(RVA = "0x1CECEF8", Offset = "0x1CECEF8", VA = "0x1CECEF8", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1483CA0", Offset = "0x1483CA0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001210")]
			[Address(RVA = "0x1CECF00", Offset = "0x1CECF00", VA = "0x1CECF00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1483CB0", Offset = "0x1483CB0")]
			set
			{
			}
		}

		[Token(Token = "0x170001EA")]
		public bool EnableState
		{
			[Token(Token = "0x6001211")]
			[Address(RVA = "0x1CECF08", Offset = "0x1CECF08", VA = "0x1CECF08", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001212")]
			[Address(RVA = "0x1CECF24", Offset = "0x1CECF24", VA = "0x1CECF24", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170001EB")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6001213")]
			[Address(RVA = "0x1CECF44", Offset = "0x1CECF44", VA = "0x1CECF44", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1483CC0", Offset = "0x1483CC0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001214")]
			[Address(RVA = "0x1CECF4C", Offset = "0x1CECF4C", VA = "0x1CECF4C", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1483CD0", Offset = "0x1483CD0")]
			set
			{
			}
		}

		[Token(Token = "0x170001EC")]
		public float SphereRadius
		{
			[Token(Token = "0x6001215")]
			[Address(RVA = "0x1CECF58", Offset = "0x1CECF58", VA = "0x1CECF58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1483CE0", Offset = "0x1483CE0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001216")]
			[Address(RVA = "0x1CECF60", Offset = "0x1CECF60", VA = "0x1CECF60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1483CF0", Offset = "0x1483CF0")]
			private set
			{
			}
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0x1CECF68", Offset = "0x1CECF68", VA = "0x1CECF68")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001218")]
		[Address(RVA = "0x1CECFB0", Offset = "0x1CECFB0", VA = "0x1CECFB0", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001219")]
		[Address(RVA = "0x1CECFB4", Offset = "0x1CECFB4", VA = "0x1CECFB4")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x2000241")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x4000FC4")]
		None = 0,
		[Token(Token = "0x4000FC5")]
		Ray = 1,
		[Token(Token = "0x4000FC6")]
		Poke = 4,
		[Token(Token = "0x4000FC7")]
		All = -1
	}
	[Token(Token = "0x2000242")]
	public enum ToolInputState
	{
		[Token(Token = "0x4000FC9")]
		Inactive,
		[Token(Token = "0x4000FCA")]
		PrimaryInputDown,
		[Token(Token = "0x4000FCB")]
		PrimaryInputDownStay,
		[Token(Token = "0x4000FCC")]
		PrimaryInputUp
	}
	[Token(Token = "0x2000243")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x4000FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x4000FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x4000FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x600121A")]
		[Address(RVA = "0x1CEC6B8", Offset = "0x1CEC6B8", VA = "0x1CEC6B8")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x2000244")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x4000FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14735A8", Offset = "0x14735A8")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x4000FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14735B8", Offset = "0x14735B8")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x4000FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14735C8", Offset = "0x14735C8")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x4000FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x4000FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x4000FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x4000FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x170001ED")]
		public Transform ToolTransform
		{
			[Token(Token = "0x600121B")]
			[Address(RVA = "0x1CE8704", Offset = "0x1CE8704", VA = "0x1CE8704")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EE")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x600121C")]
			[Address(RVA = "0x1CEEAAC", Offset = "0x1CEEAAC", VA = "0x1CEEAAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1483D00", Offset = "0x1483D00")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600121D")]
			[Address(RVA = "0x1CEEAB4", Offset = "0x1CEEAB4", VA = "0x1CEEAB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1483D10", Offset = "0x1483D10")]
			set
			{
			}
		}

		[Token(Token = "0x170001EF")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x600121E")]
			get;
		}

		[Token(Token = "0x170001F0")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x600121F")]
			get;
		}

		[Token(Token = "0x170001F1")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x6001220")]
			get;
		}

		[Token(Token = "0x170001F2")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6001221")]
			[Address(RVA = "0x1CEEAC0", Offset = "0x1CEEAC0", VA = "0x1CEEAC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1483D20", Offset = "0x1483D20")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001222")]
			[Address(RVA = "0x1CEEACC", Offset = "0x1CEEACC", VA = "0x1CEEACC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1483D30", Offset = "0x1483D30")]
			protected set
			{
			}
		}

		[Token(Token = "0x170001F3")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x6001223")]
			[Address(RVA = "0x1CEEAD8", Offset = "0x1CEEAD8", VA = "0x1CEEAD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1483D40", Offset = "0x1483D40")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001224")]
			[Address(RVA = "0x1CEEAE4", Offset = "0x1CEEAE4", VA = "0x1CEEAE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1483D50", Offset = "0x1483D50")]
			protected set
			{
			}
		}

		[Token(Token = "0x170001F4")]
		public abstract bool EnableState
		{
			[Token(Token = "0x6001229")]
			get;
			[Token(Token = "0x600122A")]
			set;
		}

		[Token(Token = "0x6001225")]
		[Address(RVA = "0x1CEEAF0", Offset = "0x1CEEAF0", VA = "0x1CEEAF0")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6001226")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x6001227")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x6001228")]
		public abstract void DeFocus();

		[Token(Token = "0x600122B")]
		public abstract void Initialize();

		[Token(Token = "0x600122C")]
		[Address(RVA = "0x1CEEAF8", Offset = "0x1CEEAF8", VA = "0x1CEEAF8")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x600122D")]
		[Address(RVA = "0x1CEEB48", Offset = "0x1CEEB48", VA = "0x1CEEB48")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x600122E")]
		[Address(RVA = "0x1CEEBA0", Offset = "0x1CEEBA0", VA = "0x1CEEBA0", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x600122F")]
		[Address(RVA = "0x1CEEE00", Offset = "0x1CEEE00", VA = "0x1CEEE00", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x6001230")]
		[Address(RVA = "0x1CEC72C", Offset = "0x1CEC72C", VA = "0x1CEC72C")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x2000245")]
	public interface InteractableToolView
	{
		[Token(Token = "0x170001F5")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x6001231")]
			get;
		}

		[Token(Token = "0x170001F6")]
		bool EnableState
		{
			[Token(Token = "0x6001233")]
			get;
			[Token(Token = "0x6001234")]
			set;
		}

		[Token(Token = "0x170001F7")]
		bool ToolActivateState
		{
			[Token(Token = "0x6001235")]
			get;
			[Token(Token = "0x6001236")]
			set;
		}

		[Token(Token = "0x6001232")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x2000246")]
	public class PinchStateModule
	{
		[Token(Token = "0x2000627")]
		private enum PinchState
		{
			[Token(Token = "0x4002480")]
			None,
			[Token(Token = "0x4002481")]
			PinchDown,
			[Token(Token = "0x4002482")]
			PinchStay,
			[Token(Token = "0x4002483")]
			PinchUp
		}

		[Token(Token = "0x4000FD9")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x4000FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x170001F8")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x6001237")]
			[Address(RVA = "0x1CF23BC", Offset = "0x1CF23BC", VA = "0x1CF23BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001F9")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x6001238")]
			[Address(RVA = "0x1CF2448", Offset = "0x1CF2448", VA = "0x1CF2448")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001FA")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x6001239")]
			[Address(RVA = "0x1CF24D4", Offset = "0x1CF24D4", VA = "0x1CF24D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600123A")]
		[Address(RVA = "0x1CF2560", Offset = "0x1CF2560", VA = "0x1CF2560")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x600123B")]
		[Address(RVA = "0x1CF2594", Offset = "0x1CF2594", VA = "0x1CF2594")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x2000247")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x4000FDC")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x4000FDD")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x4000FDE")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x4000FDF")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x4000FE0")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x4000FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x4000FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x14735E8", Offset = "0x14735E8")]
		[SerializeField]
		private float _coneAngleDegrees;

		[Token(Token = "0x4000FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x4000FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x4000FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x4000FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x4000FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x4000FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x4000FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x4000FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x4000FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x170001FB")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x600123C")]
			[Address(RVA = "0x1CF2864", Offset = "0x1CF2864", VA = "0x1CF2864", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x170001FC")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x600123D")]
			[Address(RVA = "0x1CF286C", Offset = "0x1CF286C", VA = "0x1CF286C", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x170001FD")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x600123E")]
			[Address(RVA = "0x1CF28D4", Offset = "0x1CF28D4", VA = "0x1CF28D4", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001FE")]
		public override bool EnableState
		{
			[Token(Token = "0x600123F")]
			[Address(RVA = "0x1CF28DC", Offset = "0x1CF28DC", VA = "0x1CF28DC", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001240")]
			[Address(RVA = "0x1CF2920", Offset = "0x1CF2920", VA = "0x1CF2920", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6001241")]
		[Address(RVA = "0x1CF2994", Offset = "0x1CF2994", VA = "0x1CF2994", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0x1CF29F4", Offset = "0x1CF29F4", VA = "0x1CF29F4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001243")]
		[Address(RVA = "0x1CF2A90", Offset = "0x1CF2A90", VA = "0x1CF2A90")]
		private void Update()
		{
		}

		[Token(Token = "0x6001244")]
		[Address(RVA = "0x1CF2D90", Offset = "0x1CF2D90", VA = "0x1CF2D90")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0x1CF2E8C", Offset = "0x1CF2E8C", VA = "0x1CF2E8C", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0x1CF3214", Offset = "0x1CF3214", VA = "0x1CF3214")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x6001247")]
		[Address(RVA = "0x1CF33B8", Offset = "0x1CF33B8", VA = "0x1CF33B8")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0x1CF34E0", Offset = "0x1CF34E0", VA = "0x1CF34E0")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6001249")]
		[Address(RVA = "0x1CF3818", Offset = "0x1CF3818", VA = "0x1CF3818")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x600124A")]
		[Address(RVA = "0x1CF3C28", Offset = "0x1CF3C28", VA = "0x1CF3C28", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x600124B")]
		[Address(RVA = "0x1CF3D14", Offset = "0x1CF3D14", VA = "0x1CF3D14", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x600124C")]
		[Address(RVA = "0x1CF3D50", Offset = "0x1CF3D50", VA = "0x1CF3D50")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x2000248")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4000FEC")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x4000FED")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x4000FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x4000FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x4000FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x4000FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x4000FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x4000FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x4000FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147365C", Offset = "0x147365C")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x170001FF")]
		public bool EnableState
		{
			[Token(Token = "0x600124D")]
			[Address(RVA = "0x1CF2904", Offset = "0x1CF2904", VA = "0x1CF2904", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600124E")]
			[Address(RVA = "0x1CF293C", Offset = "0x1CF293C", VA = "0x1CF293C", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000200")]
		public bool ToolActivateState
		{
			[Token(Token = "0x600124F")]
			[Address(RVA = "0x1CF3E44", Offset = "0x1CF3E44", VA = "0x1CF3E44", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001250")]
			[Address(RVA = "0x1CF2D54", Offset = "0x1CF2D54", VA = "0x1CF2D54", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x17000201")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6001252")]
			[Address(RVA = "0x1CF4090", Offset = "0x1CF4090", VA = "0x1CF4090", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1483D60", Offset = "0x1483D60")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001253")]
			[Address(RVA = "0x1CF4098", Offset = "0x1CF4098", VA = "0x1CF4098")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1483D70", Offset = "0x1483D70")]
			set
			{
			}
		}

		[Token(Token = "0x6001251")]
		[Address(RVA = "0x1CF3E4C", Offset = "0x1CF3E4C", VA = "0x1CF3E4C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001254")]
		[Address(RVA = "0x1CF3C64", Offset = "0x1CF3C64", VA = "0x1CF3C64", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001255")]
		[Address(RVA = "0x1CF40A0", Offset = "0x1CF40A0", VA = "0x1CF40A0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001256")]
		[Address(RVA = "0x1CF43CC", Offset = "0x1CF43CC", VA = "0x1CF43CC")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001257")]
		[Address(RVA = "0x1CF45BC", Offset = "0x1CF45BC", VA = "0x1CF45BC")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x2000249")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x4000FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x4000FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x4000FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x17000202")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6001258")]
			[Address(RVA = "0x1CEB3EC", Offset = "0x1CEB3EC", VA = "0x1CEB3EC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001259")]
			[Address(RVA = "0x1CEB3F4", Offset = "0x1CEB3F4", VA = "0x1CEB3F4")]
			set
			{
			}
		}

		[Token(Token = "0x17000203")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x600125A")]
			[Address(RVA = "0x1CEB47C", Offset = "0x1CEB47C", VA = "0x1CEB47C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600125B")]
			[Address(RVA = "0x1CEB484", Offset = "0x1CEB484", VA = "0x1CEB484")]
			set
			{
			}
		}

		[Token(Token = "0x600125C")]
		[Address(RVA = "0x1CEB4F0", Offset = "0x1CEB4F0", VA = "0x1CEB4F0")]
		private void Start()
		{
		}

		[Token(Token = "0x600125D")]
		[Address(RVA = "0x1CEB754", Offset = "0x1CEB754", VA = "0x1CEB754")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0x1CEB764", Offset = "0x1CEB764", VA = "0x1CEB764")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x600125F")]
		[Address(RVA = "0x1CEB774", Offset = "0x1CEB774", VA = "0x1CEB774")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x200024A")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x4000FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x4000FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x6001260")]
		[Address(RVA = "0x1CE8EC0", Offset = "0x1CE8EC0", VA = "0x1CE8EC0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0x1CE8EC4", Offset = "0x1CE8EC4", VA = "0x1CE8EC4")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001262")]
		[Address(RVA = "0x1CE8F58", Offset = "0x1CE8F58", VA = "0x1CE8F58")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001263")]
		[Address(RVA = "0x1CE9048", Offset = "0x1CE9048", VA = "0x1CE9048")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001264")]
		[Address(RVA = "0x1CE9138", Offset = "0x1CE9138", VA = "0x1CE9138")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001265")]
		[Address(RVA = "0x1CE91F8", Offset = "0x1CE91F8", VA = "0x1CE91F8")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001266")]
		[Address(RVA = "0x1CE92E8", Offset = "0x1CE92E8", VA = "0x1CE92E8")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001267")]
		[Address(RVA = "0x1CE9330", Offset = "0x1CE9330", VA = "0x1CE9330")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001268")]
		[Address(RVA = "0x1CE948C", Offset = "0x1CE948C", VA = "0x1CE948C")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001269")]
		[Address(RVA = "0x1CE94FC", Offset = "0x1CE94FC", VA = "0x1CE94FC")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x200024B")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x4000FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x4000FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x600126A")]
		[Address(RVA = "0x1CE9504", Offset = "0x1CE9504", VA = "0x1CE9504")]
		private void Start()
		{
		}

		[Token(Token = "0x600126B")]
		[Address(RVA = "0x1CE9508", Offset = "0x1CE9508", VA = "0x1CE9508")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x600126C")]
		[Address(RVA = "0x1CE94C0", Offset = "0x1CE94C0", VA = "0x1CE94C0")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x600126D")]
		[Address(RVA = "0x1CE9548", Offset = "0x1CE9548", VA = "0x1CE9548")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x200024C")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x2000628")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A54C", Offset = "0x146A54C")]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002484")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002485")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002486")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x4002487")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x4002488")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x4002489")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x1700052B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027D7")]
				[Address(RVA = "0x1CF2260", Offset = "0x1CF2260", VA = "0x1CF2260", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700052C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027D9")]
				[Address(RVA = "0x1CF22C8", Offset = "0x1CF22C8", VA = "0x1CF22C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027D4")]
			[Address(RVA = "0x1CF1F84", Offset = "0x1CF1F84", VA = "0x1CF1F84")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60027D5")]
			[Address(RVA = "0x1CF2060", Offset = "0x1CF2060", VA = "0x1CF2060", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027D6")]
			[Address(RVA = "0x1CF2064", Offset = "0x1CF2064", VA = "0x1CF2064", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027D8")]
			[Address(RVA = "0x1CF2268", Offset = "0x1CF2268", VA = "0x1CF2268", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FFD")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x4000FFE")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x4000FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x4001000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x4001001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x4001002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x4001003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x4001004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x4001005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x4001006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x600126E")]
		[Address(RVA = "0x1CF1B74", Offset = "0x1CF1B74", VA = "0x1CF1B74")]
		private void Awake()
		{
		}

		[Token(Token = "0x600126F")]
		[Address(RVA = "0x1CF1C18", Offset = "0x1CF1C18", VA = "0x1CF1C18")]
		private void Update()
		{
		}

		[Token(Token = "0x6001270")]
		[Address(RVA = "0x1CF1EC0", Offset = "0x1CF1EC0", VA = "0x1CF1EC0")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001271")]
		[Address(RVA = "0x1CF1E44", Offset = "0x1CF1E44", VA = "0x1CF1E44")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1483D80", Offset = "0x1483D80")]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x6001272")]
		[Address(RVA = "0x1CF1FB0", Offset = "0x1CF1FB0", VA = "0x1CF1FB0")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x200024D")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x2000629")]
		public enum SelectionState
		{
			[Token(Token = "0x400248B")]
			Off,
			[Token(Token = "0x400248C")]
			Selected,
			[Token(Token = "0x400248D")]
			Highlighted
		}

		[Token(Token = "0x4001007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x4001008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x4001009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x400100A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityEngine.Color[] _defaultSelectionColors;

		[Token(Token = "0x400100B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityEngine.Color[] _highlightColors;

		[Token(Token = "0x400100C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x17000204")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x6001273")]
			[Address(RVA = "0x1CF4628", Offset = "0x1CF4628", VA = "0x1CF4628")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x6001274")]
			[Address(RVA = "0x1CF4630", Offset = "0x1CF4630", VA = "0x1CF4630")]
			set
			{
			}
		}

		[Token(Token = "0x6001275")]
		[Address(RVA = "0x1CF47B8", Offset = "0x1CF47B8", VA = "0x1CF47B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001276")]
		[Address(RVA = "0x1CF49B4", Offset = "0x1CF49B4", VA = "0x1CF49B4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001277")]
		[Address(RVA = "0x1CF46B8", Offset = "0x1CF46B8", VA = "0x1CF46B8")]
		private void AffectSelectionColor(UnityEngine.Color[] newColors)
		{
		}

		[Token(Token = "0x6001278")]
		[Address(RVA = "0x1CF4AA4", Offset = "0x1CF4AA4", VA = "0x1CF4AA4")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x200024E")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x200062A")]
		public enum SegmentType
		{
			[Token(Token = "0x400248F")]
			Straight,
			[Token(Token = "0x4002490")]
			LeftTurn,
			[Token(Token = "0x4002491")]
			RightTurn,
			[Token(Token = "0x4002492")]
			Switch
		}

		[Token(Token = "0x400100D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x400100E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x400100F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x4001010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x4001011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x4001012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x4001013")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x4001014")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x4001015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x4001016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147373C", Offset = "0x147373C")]
		private float <StartDistance>k__BackingField;

		[Token(Token = "0x4001017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x4001018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x4001019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x17000205")]
		public float StartDistance
		{
			[Token(Token = "0x600127A")]
			[Address(RVA = "0x1CF4B10", Offset = "0x1CF4B10", VA = "0x1CF4B10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1483DE4", Offset = "0x1483DE4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600127B")]
			[Address(RVA = "0x1CF4B18", Offset = "0x1CF4B18", VA = "0x1CF4B18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1483DF4", Offset = "0x1483DF4")]
			set
			{
			}
		}

		[Token(Token = "0x17000206")]
		public float GridSize
		{
			[Token(Token = "0x600127C")]
			[Address(RVA = "0x1CF4B20", Offset = "0x1CF4B20", VA = "0x1CF4B20")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600127D")]
			[Address(RVA = "0x1CF4B28", Offset = "0x1CF4B28", VA = "0x1CF4B28")]
			private set
			{
			}
		}

		[Token(Token = "0x17000207")]
		public int SubDivCount
		{
			[Token(Token = "0x600127E")]
			[Address(RVA = "0x1CF4B30", Offset = "0x1CF4B30", VA = "0x1CF4B30")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600127F")]
			[Address(RVA = "0x1CF4B38", Offset = "0x1CF4B38", VA = "0x1CF4B38")]
			set
			{
			}
		}

		[Token(Token = "0x17000208")]
		public SegmentType Type
		{
			[Token(Token = "0x6001280")]
			[Address(RVA = "0x1CF4B40", Offset = "0x1CF4B40", VA = "0x1CF4B40")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x17000209")]
		public Pose EndPose
		{
			[Token(Token = "0x6001281")]
			[Address(RVA = "0x1CF4B48", Offset = "0x1CF4B48", VA = "0x1CF4B48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020A")]
		public float Radius
		{
			[Token(Token = "0x6001282")]
			[Address(RVA = "0x1CF4FDC", Offset = "0x1CF4FDC", VA = "0x1CF4FDC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700020B")]
		public float SegmentLength
		{
			[Token(Token = "0x6001284")]
			[Address(RVA = "0x1CF4BB0", Offset = "0x1CF4BB0", VA = "0x1CF4BB0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001283")]
		[Address(RVA = "0x1CF4FEC", Offset = "0x1CF4FEC", VA = "0x1CF4FEC")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x6001285")]
		[Address(RVA = "0x1CF5004", Offset = "0x1CF5004", VA = "0x1CF5004")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001286")]
		[Address(RVA = "0x1CF4BF0", Offset = "0x1CF4BF0", VA = "0x1CF4BF0")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x6001287")]
		[Address(RVA = "0x1CF5008", Offset = "0x1CF5008", VA = "0x1CF5008")]
		private void Update()
		{
		}

		[Token(Token = "0x6001288")]
		[Address(RVA = "0x1CF500C", Offset = "0x1CF500C", VA = "0x1CF500C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001289")]
		[Address(RVA = "0x1CF5078", Offset = "0x1CF5078", VA = "0x1CF5078")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x600128A")]
		[Address(RVA = "0x1CF5C00", Offset = "0x1CF5C00", VA = "0x1CF5C00")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x600128B")]
		[Address(RVA = "0x1CF5F2C", Offset = "0x1CF5F2C", VA = "0x1CF5F2C")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x200024F")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x200062B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A55C", Offset = "0x146A55C")]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002493")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002494")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002495")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x4002496")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x4002497")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x1700052D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027DD")]
				[Address(RVA = "0x1CF6B98", Offset = "0x1CF6B98", VA = "0x1CF6B98", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700052E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027DF")]
				[Address(RVA = "0x1CF6C00", Offset = "0x1CF6C00", VA = "0x1CF6C00", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027DA")]
			[Address(RVA = "0x1CF6900", Offset = "0x1CF6900", VA = "0x1CF6900")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x60027DB")]
			[Address(RVA = "0x1CF69DC", Offset = "0x1CF69DC", VA = "0x1CF69DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027DC")]
			[Address(RVA = "0x1CF69E0", Offset = "0x1CF69E0", VA = "0x1CF69E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027DE")]
			[Address(RVA = "0x1CF6BA0", Offset = "0x1CF6BA0", VA = "0x1CF6BA0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400101A")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x400101B")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x400101C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x400101D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x400101E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x400101F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UnityEngine.Color _buttonContactColor;

		[Token(Token = "0x4001020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private UnityEngine.Color _buttonActionColor;

		[Token(Token = "0x4001021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4001022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x4001023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x4001024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x4001025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x4001026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private UnityEngine.Color _buttonDefaultColor;

		[Token(Token = "0x4001027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x4001028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x4001029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x400102A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x600128C")]
		[Address(RVA = "0x1CF5FF4", Offset = "0x1CF5FF4", VA = "0x1CF5FF4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600128D")]
		[Address(RVA = "0x1CF60B4", Offset = "0x1CF60B4", VA = "0x1CF60B4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600128E")]
		[Address(RVA = "0x1CF6168", Offset = "0x1CF6168", VA = "0x1CF6168")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600128F")]
		[Address(RVA = "0x1CF6294", Offset = "0x1CF6294", VA = "0x1CF6294")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001290")]
		[Address(RVA = "0x1CF6404", Offset = "0x1CF6404", VA = "0x1CF6404")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x6001291")]
		[Address(RVA = "0x1CF65A0", Offset = "0x1CF65A0", VA = "0x1CF65A0")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001292")]
		[Address(RVA = "0x1CF682C", Offset = "0x1CF682C", VA = "0x1CF682C")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x6001293")]
		[Address(RVA = "0x1CF66B4", Offset = "0x1CF66B4", VA = "0x1CF66B4")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x6001294")]
		[Address(RVA = "0x1CF66C8", Offset = "0x1CF66C8", VA = "0x1CF66C8")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x6001295")]
		[Address(RVA = "0x1CF6884", Offset = "0x1CF6884", VA = "0x1CF6884")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1483E04", Offset = "0x1483E04")]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x6001296")]
		[Address(RVA = "0x1CF692C", Offset = "0x1CF692C", VA = "0x1CF692C")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x2000250")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x400102B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x400102C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x1700020C")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x6001297")]
			[Address(RVA = "0x1CF6C08", Offset = "0x1CF6C08", VA = "0x1CF6C08")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0x1CF6C18", Offset = "0x1CF6C18", VA = "0x1CF6C18", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001299")]
		[Address(RVA = "0x1CF6C20", Offset = "0x1CF6C20", VA = "0x1CF6C20", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x600129A")]
		[Address(RVA = "0x1CF708C", Offset = "0x1CF708C", VA = "0x1CF708C")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x2000251")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x400102D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x400102E")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x400102F")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x4001030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x4001031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x4001032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x4001033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x4001034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147383C", Offset = "0x147383C")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x4001035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x4001036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x4001037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x1700020D")]
		public float Distance
		{
			[Token(Token = "0x600129B")]
			[Address(RVA = "0x1CF719C", Offset = "0x1CF719C", VA = "0x1CF719C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1483E68", Offset = "0x1483E68")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600129C")]
			[Address(RVA = "0x1CF71A4", Offset = "0x1CF71A4", VA = "0x1CF71A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1483E78", Offset = "0x1483E78")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700020E")]
		public float Scale
		{
			[Token(Token = "0x600129D")]
			[Address(RVA = "0x1CF71AC", Offset = "0x1CF71AC", VA = "0x1CF71AC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600129E")]
			[Address(RVA = "0x1CF71B4", Offset = "0x1CF71B4", VA = "0x1CF71B4")]
			set
			{
			}
		}

		[Token(Token = "0x600129F")]
		[Address(RVA = "0x1CF6C1C", Offset = "0x1CF6C1C", VA = "0x1CF6C1C", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0x1CF71BC", Offset = "0x1CF71BC", VA = "0x1CF71BC")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0x1CF6C68", Offset = "0x1CF6C68", VA = "0x1CF6C68")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0x1CF6F40", Offset = "0x1CF6F40", VA = "0x1CF6F40")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x60012A3")]
		public abstract void UpdatePosition();

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0x1CF70FC", Offset = "0x1CF70FC", VA = "0x1CF70FC")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x2000252")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x200062C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A56C", Offset = "0x146A56C")]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002498")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002499")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400249A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x400249B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x400249C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x400249D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x400249E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x400249F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x40024A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x40024A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x40024A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private UnityEngine.Color <onColor>5__8;

			[Token(Token = "0x40024A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private UnityEngine.Color <offColor>5__9;

			[Token(Token = "0x1700052F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027E3")]
				[Address(RVA = "0x1CF7BCC", Offset = "0x1CF7BCC", VA = "0x1CF7BCC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000530")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027E5")]
				[Address(RVA = "0x1CF7C34", Offset = "0x1CF7C34", VA = "0x1CF7C34", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027E0")]
			[Address(RVA = "0x1CF77D0", Offset = "0x1CF77D0", VA = "0x1CF77D0")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x60027E1")]
			[Address(RVA = "0x1CF7968", Offset = "0x1CF7968", VA = "0x1CF7968", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027E2")]
			[Address(RVA = "0x1CF796C", Offset = "0x1CF796C", VA = "0x1CF796C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027E4")]
			[Address(RVA = "0x1CF7BD4", Offset = "0x1CF7BD4", VA = "0x1CF7BD4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x400103C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x400103D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x400103E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x400103F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x4001040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x4001041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0x1CF738C", Offset = "0x1CF738C", VA = "0x1CF738C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0x1CF73EC", Offset = "0x1CF73EC", VA = "0x1CF73EC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0x1CF74F8", Offset = "0x1CF74F8", VA = "0x1CF74F8")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0x1CF7668", Offset = "0x1CF7668", VA = "0x1CF7668")]
		private void Update()
		{
		}

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0x1CF7558", Offset = "0x1CF7558", VA = "0x1CF7558")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0x1CF7744", Offset = "0x1CF7744", VA = "0x1CF7744")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1483E88", Offset = "0x1483E88")]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0x1CF77FC", Offset = "0x1CF77FC", VA = "0x1CF77FC")]
		private void AffectMaterials(Material[] materials, UnityEngine.Color newColor)
		{
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0x1CF78A8", Offset = "0x1CF78A8", VA = "0x1CF78A8")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0x1CF7908", Offset = "0x1CF7908", VA = "0x1CF7908")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x2000253")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x200062D")]
		private enum EngineSoundState
		{
			[Token(Token = "0x40024A5")]
			Start,
			[Token(Token = "0x40024A6")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x40024A7")]
			Stop
		}

		[Token(Token = "0x200062E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A57C", Offset = "0x146A57C")]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40024A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40024A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40024AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x40024AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x40024AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x40024AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x40024AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x40024AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x40024B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x17000531")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027E9")]
				[Address(RVA = "0x1CF85BC", Offset = "0x1CF85BC", VA = "0x1CF85BC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000532")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027EB")]
				[Address(RVA = "0x1CF8624", Offset = "0x1CF8624", VA = "0x1CF8624", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027E6")]
			[Address(RVA = "0x1CF7F0C", Offset = "0x1CF7F0C", VA = "0x1CF7F0C")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x60027E7")]
			[Address(RVA = "0x1CF8380", Offset = "0x1CF8380", VA = "0x1CF8380", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027E8")]
			[Address(RVA = "0x1CF8384", Offset = "0x1CF8384", VA = "0x1CF8384", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027EA")]
			[Address(RVA = "0x1CF85C4", Offset = "0x1CF85C4", VA = "0x1CF85C4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001042")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x4001043")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x4001044")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x4001045")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x4001046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x147389C", Offset = "0x147389C")]
		protected float _initialSpeed;

		[Token(Token = "0x4001047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4001048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x4001049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x400104A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x400104B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x4001051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x4001054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0x1CF7C3C", Offset = "0x1CF7C3C", VA = "0x1CF7C3C")]
		private void Start()
		{
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0x1CF7DAC", Offset = "0x1CF7DAC", VA = "0x1CF7DAC")]
		private void Update()
		{
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0x1CF7DB8", Offset = "0x1CF7DB8", VA = "0x1CF7DB8", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0x1CE8EF8", Offset = "0x1CE8EF8", VA = "0x1CE8EF8")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0x1CF7D1C", Offset = "0x1CF7D1C", VA = "0x1CF7D1C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1483EEC", Offset = "0x1483EEC")]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0x1CF7F38", Offset = "0x1CF7F38", VA = "0x1CF7F38")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x60012B5")]
		[Address(RVA = "0x1CF7EA8", Offset = "0x1CF7EA8", VA = "0x1CF7EA8")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0x1CE8F8C", Offset = "0x1CE8F8C", VA = "0x1CE8F8C")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x60012B7")]
		[Address(RVA = "0x1CE907C", Offset = "0x1CE907C", VA = "0x1CE907C")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x60012B8")]
		[Address(RVA = "0x1CF8184", Offset = "0x1CF8184", VA = "0x1CF8184")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x60012B9")]
		[Address(RVA = "0x1CF828C", Offset = "0x1CF828C", VA = "0x1CF828C")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x60012BA")]
		[Address(RVA = "0x1CE916C", Offset = "0x1CE916C", VA = "0x1CE916C")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x60012BB")]
		[Address(RVA = "0x1CE922C", Offset = "0x1CE922C", VA = "0x1CE922C")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x60012BC")]
		[Address(RVA = "0x1CE9320", Offset = "0x1CE9320", VA = "0x1CE9320")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x60012BD")]
		[Address(RVA = "0x1CF8314", Offset = "0x1CF8314", VA = "0x1CF8314")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x2000254")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x1700020F")]
		public float TrackLength
		{
			[Token(Token = "0x60012BE")]
			[Address(RVA = "0x1CF862C", Offset = "0x1CF862C", VA = "0x1CF862C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60012BF")]
			[Address(RVA = "0x1CF8634", Offset = "0x1CF8634", VA = "0x1CF8634")]
			private set
			{
			}
		}

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0x1CF863C", Offset = "0x1CF863C", VA = "0x1CF863C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012C1")]
		[Address(RVA = "0x1CF723C", Offset = "0x1CF723C", VA = "0x1CF723C")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x60012C2")]
		[Address(RVA = "0x1CF8640", Offset = "0x1CF8640", VA = "0x1CF8640")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0x1CF884C", Offset = "0x1CF884C", VA = "0x1CF884C")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x60012C4")]
		[Address(RVA = "0x1CF8968", Offset = "0x1CF8968", VA = "0x1CF8968")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x2000255")]
	public class Pose
	{
		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0x1CF2748", Offset = "0x1CF2748", VA = "0x1CF2748")]
		public Pose()
		{
		}

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0x1CF27F4", Offset = "0x1CF27F4", VA = "0x1CF27F4")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x2000256")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x200062F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A58C", Offset = "0x146A58C")]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40024B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40024B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40024B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x40024B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x40024B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x40024B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x17000533")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027EF")]
				[Address(RVA = "0x1CF8FB4", Offset = "0x1CF8FB4", VA = "0x1CF8FB4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000534")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027F1")]
				[Address(RVA = "0x1CF901C", Offset = "0x1CF901C", VA = "0x1CF901C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027EC")]
			[Address(RVA = "0x1CF8C28", Offset = "0x1CF8C28", VA = "0x1CF8C28")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x60027ED")]
			[Address(RVA = "0x1CF8DB0", Offset = "0x1CF8DB0", VA = "0x1CF8DB0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027EE")]
			[Address(RVA = "0x1CF8DB4", Offset = "0x1CF8DB4", VA = "0x1CF8DB4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027F0")]
			[Address(RVA = "0x1CF8FBC", Offset = "0x1CF8FBC", VA = "0x1CF8FBC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000630")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A59C", Offset = "0x146A59C")]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40024B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40024B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40024B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x40024BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x40024BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x40024BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x17000535")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027F5")]
				[Address(RVA = "0x1CF90FC", Offset = "0x1CF90FC", VA = "0x1CF90FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000536")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027F7")]
				[Address(RVA = "0x1CF9164", Offset = "0x1CF9164", VA = "0x1CF9164", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027F2")]
			[Address(RVA = "0x1CF8D10", Offset = "0x1CF8D10", VA = "0x1CF8D10")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x60027F3")]
			[Address(RVA = "0x1CF9024", Offset = "0x1CF9024", VA = "0x1CF9024", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027F4")]
			[Address(RVA = "0x1CF9028", Offset = "0x1CF9028", VA = "0x1CF9028", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027F6")]
			[Address(RVA = "0x1CF9104", Offset = "0x1CF9104", VA = "0x1CF9104", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001068")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x4001069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x400106A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x400106B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x400106C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x400106D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1473A84", Offset = "0x1473A84")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x400106E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x400106F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x4001070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x4001071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x4001072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x17000210")]
		public bool IsMoving
		{
			[Token(Token = "0x60012C7")]
			[Address(RVA = "0x1CF8984", Offset = "0x1CF8984", VA = "0x1CF8984")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1483F50", Offset = "0x1483F50")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60012C8")]
			[Address(RVA = "0x1CF898C", Offset = "0x1CF898C", VA = "0x1CF898C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1483F60", Offset = "0x1483F60")]
			private set
			{
			}
		}

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0x1CF8998", Offset = "0x1CF8998", VA = "0x1CF8998")]
		private void Start()
		{
		}

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0x1CF89D4", Offset = "0x1CF89D4", VA = "0x1CF89D4")]
		private void Update()
		{
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0x1CF8B28", Offset = "0x1CF8B28", VA = "0x1CF8B28")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0x1CF8B9C", Offset = "0x1CF8B9C", VA = "0x1CF8B9C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1483F70", Offset = "0x1483F70")]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x60012CD")]
		[Address(RVA = "0x1CF8C54", Offset = "0x1CF8C54", VA = "0x1CF8C54")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1483FD4", Offset = "0x1483FD4")]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0x1CF8D3C", Offset = "0x1CF8D3C", VA = "0x1CF8D3C")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0x1CF8DA8", Offset = "0x1CF8DA8", VA = "0x1CF8DA8")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x2000257")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x4001073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4001074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x4001075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4001076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x4001077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0x1CF916C", Offset = "0x1CF916C", VA = "0x1CF916C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0x1CF91E4", Offset = "0x1CF91E4", VA = "0x1CF91E4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0x1CF929C", Offset = "0x1CF929C", VA = "0x1CF929C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0x1CF939C", Offset = "0x1CF939C", VA = "0x1CF939C")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0x1CF941C", Offset = "0x1CF941C", VA = "0x1CF941C")]
		private void Update()
		{
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0x1CF94F8", Offset = "0x1CF94F8", VA = "0x1CF94F8")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x2000258")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x4001079")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x400107A")]
		EUDT_OverlayQuad,
		[Token(Token = "0x400107B")]
		EUDT_None,
		[Token(Token = "0x400107C")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x2000259")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x2000631")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A5AC", Offset = "0x146A5AC")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40024BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40024BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40024BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x17000537")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027FB")]
				[Address(RVA = "0x1CF1B04", Offset = "0x1CF1B04", VA = "0x1CF1B04", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000538")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027FD")]
				[Address(RVA = "0x1CF1B6C", Offset = "0x1CF1B6C", VA = "0x1CF1B6C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027F8")]
			[Address(RVA = "0x1CF1158", Offset = "0x1CF1158", VA = "0x1CF1158")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x60027F9")]
			[Address(RVA = "0x1CF189C", Offset = "0x1CF189C", VA = "0x1CF189C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027FA")]
			[Address(RVA = "0x1CF18A0", Offset = "0x1CF18A0", VA = "0x1CF18A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027FC")]
			[Address(RVA = "0x1CF1B0C", Offset = "0x1CF1B0C", VA = "0x1CF1B0C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x400107E")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x400107F")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x4001080")]
		private const string noneID = "NoneID";

		[Token(Token = "0x4001081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x4001082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x4001083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1473AC4", Offset = "0x1473AC4")]
		public GameObject mainCamera;

		[Token(Token = "0x4001084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x4001085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x4001086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x4001087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x4001088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x4001089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x400108A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x400108B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1473AFC", Offset = "0x1473AFC")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x400108C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x400108D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0x1CF03E8", Offset = "0x1CF03E8", VA = "0x1CF03E8")]
		private void Start()
		{
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0x1CF0C5C", Offset = "0x1CF0C5C", VA = "0x1CF0C5C")]
		private void Update()
		{
		}

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0x1CF0D9C", Offset = "0x1CF0D9C", VA = "0x1CF0D9C")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x60012D9")]
		[Address(RVA = "0x1CF0ED0", Offset = "0x1CF0ED0", VA = "0x1CF0ED0")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0x1CF1004", Offset = "0x1CF1004", VA = "0x1CF1004")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0x1CF0D70", Offset = "0x1CF0D70", VA = "0x1CF0D70")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x60012DC")]
		[Address(RVA = "0x1CF10DC", Offset = "0x1CF10DC", VA = "0x1CF10DC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1484038", Offset = "0x1484038")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x60012DD")]
		[Address(RVA = "0x1CF1184", Offset = "0x1CF1184", VA = "0x1CF1184")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x60012DE")]
		[Address(RVA = "0x1CF077C", Offset = "0x1CF077C", VA = "0x1CF077C")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0x1CF12AC", Offset = "0x1CF12AC", VA = "0x1CF12AC")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x60012E0")]
		[Address(RVA = "0x1CF11B8", Offset = "0x1CF11B8", VA = "0x1CF11B8")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0x1CF1648", Offset = "0x1CF1648", VA = "0x1CF1648")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0x1CF1724", Offset = "0x1CF1724", VA = "0x1CF1724")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x60012E3")]
		[Address(RVA = "0x1CF17AC", Offset = "0x1CF17AC", VA = "0x1CF17AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148409C", Offset = "0x148409C")]
		private void <Start>b__24_0(Toggle t)
		{
		}

		[Token(Token = "0x60012E4")]
		[Address(RVA = "0x1CF17FC", Offset = "0x1CF17FC", VA = "0x1CF17FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14840AC", Offset = "0x14840AC")]
		private void <Start>b__24_1(Toggle t)
		{
		}

		[Token(Token = "0x60012E5")]
		[Address(RVA = "0x1CF184C", Offset = "0x1CF184C", VA = "0x1CF184C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14840BC", Offset = "0x14840BC")]
		private void <Start>b__24_2(Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x200025A")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1466DCC", Offset = "0x1466DCC")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000632")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A5BC", Offset = "0x146A5BC")]
		private sealed class <>c
		{
			[Token(Token = "0x40024C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40024C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x60027FF")]
			[Address(RVA = "0x1D91580", Offset = "0x1D91580", VA = "0x1D91580")]
			public <>c()
			{
			}

			[Token(Token = "0x6002800")]
			[Address(RVA = "0x1D91588", Offset = "0x1D91588", VA = "0x1D91588")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001095")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x4001096")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x4001097")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x4001098")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x4001099")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x400109A")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x400109B")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x400109C")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x400109D")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x400109E")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x400109F")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x40010A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x40010A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40010A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x40010A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x40010A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x40010A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x40010A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x40010A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x40010A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x40010A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x40010AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x40010AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x40010AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x40010AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x40010AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x40010AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x40010B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0x1D90798", Offset = "0x1D90798", VA = "0x1D90798")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0x1D907F8", Offset = "0x1D907F8", VA = "0x1D907F8")]
		private void Start()
		{
		}

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0x1D90C20", Offset = "0x1D90C20", VA = "0x1D90C20")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0x1D90CEC", Offset = "0x1D90CEC", VA = "0x1D90CEC")]
		private void Update()
		{
		}

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0x1D90DF8", Offset = "0x1D90DF8", VA = "0x1D90DF8")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0x1D91130", Offset = "0x1D91130", VA = "0x1D91130")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0x1D91298", Offset = "0x1D91298", VA = "0x1D91298")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0x1D913E4", Offset = "0x1D913E4", VA = "0x1D913E4")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0x1D90E94", Offset = "0x1D90E94", VA = "0x1D90E94")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60012EF")]
		[Address(RVA = "0x1D90F34", Offset = "0x1D90F34", VA = "0x1D90F34")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0x1D90A74", Offset = "0x1D90A74", VA = "0x1D90A74")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x60012F1")]
		[Address(RVA = "0x1D91500", Offset = "0x1D91500", VA = "0x1D91500")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x200025B")]
	public enum HandPoseId
	{
		[Token(Token = "0x40010B2")]
		Default,
		[Token(Token = "0x40010B3")]
		Generic,
		[Token(Token = "0x40010B4")]
		PingPongBall,
		[Token(Token = "0x40010B5")]
		Controller
	}
	[Token(Token = "0x200025C")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x40010B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x40010B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x40010B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x17000211")]
		public bool AllowPointing
		{
			[Token(Token = "0x60012F2")]
			[Address(RVA = "0x1D915B4", Offset = "0x1D915B4", VA = "0x1D915B4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000212")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x60012F3")]
			[Address(RVA = "0x1D915BC", Offset = "0x1D915BC", VA = "0x1D915BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000213")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x60012F4")]
			[Address(RVA = "0x1D915C4", Offset = "0x1D915C4", VA = "0x1D915C4")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x60012F5")]
		[Address(RVA = "0x1D915CC", Offset = "0x1D915CC", VA = "0x1D915CC")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x200025D")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x40010B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x40010BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40010BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0x1D915D4", Offset = "0x1D915D4", VA = "0x1D915D4")]
		private void Update()
		{
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0x1D91848", Offset = "0x1D91848", VA = "0x1D91848")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0x1D918A4", Offset = "0x1D918A4", VA = "0x1D918A4")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0x1D918E8", Offset = "0x1D918E8", VA = "0x1D918E8")]
		public TouchController()
		{
		}
	}
}
namespace Oculus.Voice.Demo.UIShapesDemo
{
	[Token(Token = "0x200025E")]
	public class InteractionHandler : MonoBehaviour
	{
		[Token(Token = "0x40010BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1473BB4", Offset = "0x1473BB4")]
		[Multiline]
		[SerializeField]
		private string freshStateText;

		[Token(Token = "0x40010BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1473C10", Offset = "0x1473C10")]
		[SerializeField]
		private Text textArea;

		[Token(Token = "0x40010BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool showJson;

		[Token(Token = "0x40010BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1473C6C", Offset = "0x1473C6C")]
		[SerializeField]
		private AppVoiceExperience appVoiceExperience;

		[Token(Token = "0x40010C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string pendingText;

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0x1CE6DF4", Offset = "0x1CE6DF4", VA = "0x1CE6DF4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0x1CE6EA0", Offset = "0x1CE6EA0", VA = "0x1CE6EA0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0x1CE6F4C", Offset = "0x1CE6F4C", VA = "0x1CE6F4C")]
		private void OnRequestStarted(WitRequest r)
		{
		}

		[Token(Token = "0x60012FD")]
		[Address(RVA = "0x1CE6FF8", Offset = "0x1CE6FF8", VA = "0x1CE6FF8")]
		private void Update()
		{
		}

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0x1CE7050", Offset = "0x1CE7050", VA = "0x1CE7050")]
		public void OnResponse(WitResponseNode response)
		{
		}

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0x1CE7138", Offset = "0x1CE7138", VA = "0x1CE7138")]
		public void OnError(string error, string message)
		{
		}

		[Token(Token = "0x6001300")]
		[Address(RVA = "0x1CE7320", Offset = "0x1CE7320", VA = "0x1CE7320")]
		public void ToggleActivation()
		{
		}

		[Token(Token = "0x6001301")]
		[Address(RVA = "0x1CE7380", Offset = "0x1CE7380", VA = "0x1CE7380")]
		public InteractionHandler()
		{
		}

		[Token(Token = "0x6001302")]
		[Address(RVA = "0x1CE73E0", Offset = "0x1CE73E0", VA = "0x1CE73E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14840CC", Offset = "0x14840CC")]
		private void <OnRequestStarted>b__7_0(string response)
		{
		}
	}
	[Token(Token = "0x200025F")]
	public class ColorChanger : MonoBehaviour
	{
		[Token(Token = "0x6001303")]
		[Address(RVA = "0x1CE67CC", Offset = "0x1CE67CC", VA = "0x1CE67CC")]
		private void SetColor(Transform trans, UnityEngine.Color color)
		{
		}

		[Token(Token = "0x6001304")]
		[Address(RVA = "0x1CE686C", Offset = "0x1CE686C", VA = "0x1CE686C")]
		public void UpdateColor(WitResponseNode commandResult)
		{
		}

		[Token(Token = "0x6001305")]
		[Address(RVA = "0x1CE6A8C", Offset = "0x1CE6A8C", VA = "0x1CE6A8C")]
		public void UpdateColor(string[] results)
		{
		}

		[Token(Token = "0x6001306")]
		[Address(RVA = "0x1CE68F8", Offset = "0x1CE68F8", VA = "0x1CE68F8")]
		public void UpdateColor(string colorName, string shape)
		{
		}

		[Token(Token = "0x6001307")]
		[Address(RVA = "0x1CE6AC8", Offset = "0x1CE6AC8", VA = "0x1CE6AC8")]
		public ColorChanger()
		{
		}
	}
	[Token(Token = "0x2000260")]
	[ExecuteAlways]
	public class Instructions : MonoBehaviour
	{
		[Token(Token = "0x2000633")]
		internal enum Step
		{
			[Token(Token = "0x40024C3")]
			SetupWit,
			[Token(Token = "0x40024C4")]
			MissingServerToken,
			[Token(Token = "0x40024C5")]
			MissingClientToken,
			[Token(Token = "0x40024C6")]
			AddConfig,
			[Token(Token = "0x40024C7")]
			AddVoiceExperiences,
			[Token(Token = "0x40024C8")]
			SetConfig,
			[Token(Token = "0x40024C9")]
			Ready
		}

		[Token(Token = "0x40010C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string[] steps;

		[Token(Token = "0x40010C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text instructionText;

		[Token(Token = "0x40010C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Step currentStep;

		[Token(Token = "0x17000214")]
		internal Step CurrentStep
		{
			[Token(Token = "0x6001308")]
			[Address(RVA = "0x1CE6AD0", Offset = "0x1CE6AD0", VA = "0x1CE6AD0")]
			get
			{
				return default(Step);
			}
		}

		[Token(Token = "0x17000215")]
		internal string CurrentStepText
		{
			[Token(Token = "0x6001309")]
			[Address(RVA = "0x1CE6AD8", Offset = "0x1CE6AD8", VA = "0x1CE6AD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600130A")]
		[Address(RVA = "0x1CE6B70", Offset = "0x1CE6B70", VA = "0x1CE6B70")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600130B")]
		[Address(RVA = "0x1CE6B78", Offset = "0x1CE6B78", VA = "0x1CE6B78")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600130C")]
		[Address(RVA = "0x1CE6B7C", Offset = "0x1CE6B7C", VA = "0x1CE6B7C")]
		private void Update()
		{
		}

		[Token(Token = "0x600130D")]
		[Address(RVA = "0x1CE6B74", Offset = "0x1CE6B74", VA = "0x1CE6B74")]
		private void UpdateStep()
		{
		}

		[Token(Token = "0x600130E")]
		[Address(RVA = "0x1CE6B80", Offset = "0x1CE6B80", VA = "0x1CE6B80")]
		public Instructions()
		{
		}
	}
}
namespace Oculus.Voice.Demo.BuiltInDemo
{
	[Token(Token = "0x2000261")]
	public class TimerController : MonoBehaviour
	{
		[Token(Token = "0x40010C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float _time;

		[Token(Token = "0x40010C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool _timerExist;

		[Token(Token = "0x40010C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		private bool _timerRunning;

		[Token(Token = "0x40010C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1473CC8", Offset = "0x1473CC8")]
		public Text logText;

		[Token(Token = "0x40010C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1473D00", Offset = "0x1473D00")]
		public AudioClip buzzSound;

		[Token(Token = "0x6001310")]
		[Address(RVA = "0x1CE5C8C", Offset = "0x1CE5C8C", VA = "0x1CE5C8C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001311")]
		[Address(RVA = "0x1CE5D80", Offset = "0x1CE5D80", VA = "0x1CE5D80")]
		private void Log(string msg)
		{
		}

		[Token(Token = "0x6001312")]
		[Address(RVA = "0x1CE5CF0", Offset = "0x1CE5CF0", VA = "0x1CE5CF0")]
		private void OnElapsedTime()
		{
		}

		[Token(Token = "0x6001313")]
		[Address(RVA = "0x1CE5E14", Offset = "0x1CE5E14", VA = "0x1CE5E14")]
		public void DeleteTimer()
		{
		}

		[Token(Token = "0x6001314")]
		[Address(RVA = "0x1CE5E80", Offset = "0x1CE5E80", VA = "0x1CE5E80")]
		public void CreateTimer(string[] entityValues)
		{
		}

		[Token(Token = "0x6001315")]
		[Address(RVA = "0x1CE6204", Offset = "0x1CE6204", VA = "0x1CE6204")]
		public void GetTimerIntent()
		{
		}

		[Token(Token = "0x6001316")]
		[Address(RVA = "0x1CE62B8", Offset = "0x1CE62B8", VA = "0x1CE62B8")]
		public void PauseTimer()
		{
		}

		[Token(Token = "0x6001317")]
		[Address(RVA = "0x1CE630C", Offset = "0x1CE630C", VA = "0x1CE630C")]
		public void ResumeTimer()
		{
		}

		[Token(Token = "0x6001318")]
		[Address(RVA = "0x1CE6364", Offset = "0x1CE6364", VA = "0x1CE6364")]
		public void SubtractTimeTimer(string[] entityValues)
		{
		}

		[Token(Token = "0x6001319")]
		[Address(RVA = "0x1CE645C", Offset = "0x1CE645C", VA = "0x1CE645C")]
		public void AddTimeToTimer(string[] entityValues)
		{
		}

		[Token(Token = "0x600131A")]
		[Address(RVA = "0x1CE6548", Offset = "0x1CE6548", VA = "0x1CE6548")]
		public float GetRemainingTime()
		{
			return default(float);
		}

		[Token(Token = "0x600131B")]
		[Address(RVA = "0x1CE622C", Offset = "0x1CE622C", VA = "0x1CE622C")]
		public string GetFormattedTimeFromSeconds()
		{
			return null;
		}

		[Token(Token = "0x600131C")]
		[Address(RVA = "0x1CE60A8", Offset = "0x1CE60A8", VA = "0x1CE60A8")]
		private bool ParseTime(string[] entityValues, out float time)
		{
			return default(bool);
		}

		[Token(Token = "0x600131D")]
		[Address(RVA = "0x1CE6550", Offset = "0x1CE6550", VA = "0x1CE6550")]
		public TimerController()
		{
		}
	}
	[Token(Token = "0x2000262")]
	public class TimerDisplay : MonoBehaviour
	{
		[Token(Token = "0x40010C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TimerController timer;

		[Token(Token = "0x40010CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text _uiText;

		[Token(Token = "0x600131E")]
		[Address(RVA = "0x1CE6558", Offset = "0x1CE6558", VA = "0x1CE6558")]
		private void Start()
		{
		}

		[Token(Token = "0x600131F")]
		[Address(RVA = "0x1CE65B8", Offset = "0x1CE65B8", VA = "0x1CE65B8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001320")]
		[Address(RVA = "0x1CE6600", Offset = "0x1CE6600", VA = "0x1CE6600")]
		public TimerDisplay()
		{
		}
	}
	[Token(Token = "0x2000263")]
	public class WitActivation : MonoBehaviour
	{
		[Token(Token = "0x40010CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AppVoiceExperience voiceExperience;

		[Token(Token = "0x6001321")]
		[Address(RVA = "0x1CE6608", Offset = "0x1CE6608", VA = "0x1CE6608")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001322")]
		[Address(RVA = "0x1CE66B8", Offset = "0x1CE66B8", VA = "0x1CE66B8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001323")]
		[Address(RVA = "0x1CE6718", Offset = "0x1CE6718", VA = "0x1CE6718")]
		private void Update()
		{
		}

		[Token(Token = "0x6001324")]
		[Address(RVA = "0x1CE67A0", Offset = "0x1CE67A0", VA = "0x1CE67A0")]
		public void ActivateWit()
		{
		}

		[Token(Token = "0x6001325")]
		[Address(RVA = "0x1CE67C4", Offset = "0x1CE67C4", VA = "0x1CE67C4")]
		public WitActivation()
		{
		}
	}
}
namespace Oculus.Avatar
{
	[Token(Token = "0x2000264")]
	public static class AvatarLogger
	{
		[Token(Token = "0x40010CC")]
		public const string LogAvatar = "[Avatars] - ";

		[Token(Token = "0x40010CD")]
		public const string Tab = "    ";

		[Token(Token = "0x6001326")]
		[Address(RVA = "0x1D9449C", Offset = "0x1D9449C", VA = "0x1D9449C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x14840DC", Offset = "0x14840DC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x14840DC", Offset = "0x14840DC")]
		public static void Log(string logMsg)
		{
		}

		[Token(Token = "0x6001327")]
		[Address(RVA = "0x1D94524", Offset = "0x1D94524", VA = "0x1D94524")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x148413C", Offset = "0x148413C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x148413C", Offset = "0x148413C")]
		public static void Log(string logMsg, UnityEngine.Object context)
		{
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0x1D945BC", Offset = "0x1D945BC", VA = "0x1D945BC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x148419C", Offset = "0x148419C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x148419C", Offset = "0x148419C")]
		public static void LogWarning(string logMsg)
		{
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0x1D94644", Offset = "0x1D94644", VA = "0x1D94644")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x14841FC", Offset = "0x14841FC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x14841FC", Offset = "0x14841FC")]
		public static void LogError(string logMsg)
		{
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0x1D946CC", Offset = "0x1D946CC", VA = "0x1D946CC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x148425C", Offset = "0x148425C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x148425C", Offset = "0x148425C")]
		public static void LogError(string logMsg, UnityEngine.Object context)
		{
		}
	}
	[Token(Token = "0x2000265")]
	public class CAPI
	{
		[Token(Token = "0x2000634")]
		public delegate void LoggingDelegate(IntPtr str);

		[Token(Token = "0x2000635")]
		public enum Result
		{
			[Token(Token = "0x40024CB")]
			Success = 0,
			[Token(Token = "0x40024CC")]
			Failure = -1000,
			[Token(Token = "0x40024CD")]
			Failure_InvalidParameter = -1001,
			[Token(Token = "0x40024CE")]
			Failure_NotInitialized = -1002,
			[Token(Token = "0x40024CF")]
			Failure_InvalidOperation = -1003,
			[Token(Token = "0x40024D0")]
			Failure_Unsupported = -1004,
			[Token(Token = "0x40024D1")]
			Failure_NotYetImplemented = -1005,
			[Token(Token = "0x40024D2")]
			Failure_OperationFailed = -1006,
			[Token(Token = "0x40024D3")]
			Failure_InsufficientSize = -1007
		}

		[Token(Token = "0x2000636")]
		private static class OVRP_1_30_0
		{
			[Token(Token = "0x40024D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly Version version;

			[PreserveSig]
			[Token(Token = "0x6002805")]
			[Address(RVA = "0x1CE5B34", Offset = "0x1CE5B34", VA = "0x1CE5B34")]
			public static extern Result ovrp_SendEvent2(string name, string param, string source);
		}

		[Token(Token = "0x40010CE")]
		private const string LibFile = "ovravatarloader";

		[Token(Token = "0x40010CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr nativeVisemeData;

		[Token(Token = "0x40010D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IntPtr nativeGazeTargetsData;

		[Token(Token = "0x40010D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IntPtr nativeAvatarLightsData;

		[Token(Token = "0x40010D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IntPtr DebugLineCountData;

		[Token(Token = "0x40010D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static float[] scratchBufferFloat;

		[Token(Token = "0x40010D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject debugLineGo;

		[Token(Token = "0x40010D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string SDKRuntimePrefix;

		[Token(Token = "0x40010D6")]
		private const string ovrPluginDLL = "OVRPlugin";

		[Token(Token = "0x40010D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Version ovrPluginVersion;

		[PreserveSig]
		[Token(Token = "0x600132B")]
		[Address(RVA = "0x1D947CC", Offset = "0x1D947CC", VA = "0x1D947CC")]
		public static extern void ovrAvatar_InitializeAndroidUnity(string appID);

		[Token(Token = "0x600132C")]
		[Address(RVA = "0x1D9485C", Offset = "0x1D9485C", VA = "0x1D9485C")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x600132D")]
		[Address(RVA = "0x1D94A24", Offset = "0x1D94A24", VA = "0x1D94A24")]
		public static void Shutdown()
		{
		}

		[PreserveSig]
		[Token(Token = "0x600132E")]
		[Address(RVA = "0x1D94B08", Offset = "0x1D94B08", VA = "0x1D94B08")]
		public static extern void ovrAvatar_Shutdown();

		[PreserveSig]
		[Token(Token = "0x600132F")]
		[Address(RVA = "0x1D94B78", Offset = "0x1D94B78", VA = "0x1D94B78")]
		public static extern IntPtr ovrAvatarMessage_Pop();

		[PreserveSig]
		[Token(Token = "0x6001330")]
		[Address(RVA = "0x1D94BEC", Offset = "0x1D94BEC", VA = "0x1D94BEC")]
		public static extern ovrAvatarMessageType ovrAvatarMessage_GetType(IntPtr msg);

		[Token(Token = "0x6001331")]
		[Address(RVA = "0x1D94C6C", Offset = "0x1D94C6C", VA = "0x1D94C6C")]
		public static ovrAvatarMessage_AvatarSpecification ovrAvatarMessage_GetAvatarSpecification(IntPtr msg)
		{
			return default(ovrAvatarMessage_AvatarSpecification);
		}

		[PreserveSig]
		[Token(Token = "0x6001332")]
		[Address(RVA = "0x1D94D84", Offset = "0x1D94D84", VA = "0x1D94D84")]
		private static extern IntPtr ovrAvatarMessage_GetAvatarSpecification_Native(IntPtr msg);

		[Token(Token = "0x6001333")]
		[Address(RVA = "0x1D94E04", Offset = "0x1D94E04", VA = "0x1D94E04")]
		public static ovrAvatarMessage_AssetLoaded ovrAvatarMessage_GetAssetLoaded(IntPtr msg)
		{
			return default(ovrAvatarMessage_AssetLoaded);
		}

		[PreserveSig]
		[Token(Token = "0x6001334")]
		[Address(RVA = "0x1D94F1C", Offset = "0x1D94F1C", VA = "0x1D94F1C")]
		private static extern IntPtr ovrAvatarMessage_GetAssetLoaded_Native(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6001335")]
		[Address(RVA = "0x1D94F9C", Offset = "0x1D94F9C", VA = "0x1D94F9C")]
		public static extern void ovrAvatarMessage_Free(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6001336")]
		[Address(RVA = "0x1D9501C", Offset = "0x1D9501C", VA = "0x1D9501C")]
		public static extern IntPtr ovrAvatarSpecificationRequest_Create(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001337")]
		[Address(RVA = "0x1D9509C", Offset = "0x1D9509C", VA = "0x1D9509C")]
		public static extern void ovrAvatarSpecificationRequest_Destroy(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6001338")]
		[Address(RVA = "0x1D9511C", Offset = "0x1D9511C", VA = "0x1D9511C")]
		public static extern void ovrAvatarSpecificationRequest_SetCombineMeshes(IntPtr specificationRequest, bool useCombinedMesh);

		[PreserveSig]
		[Token(Token = "0x6001339")]
		[Address(RVA = "0x1D951AC", Offset = "0x1D951AC", VA = "0x1D951AC")]
		public static extern void ovrAvatarSpecificationRequest_SetLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x600133A")]
		[Address(RVA = "0x1D9523C", Offset = "0x1D9523C", VA = "0x1D9523C")]
		public static extern void ovrAvatarSpecificationRequest_SetLevelOfDetail(IntPtr specificationRequest, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x600133B")]
		[Address(RVA = "0x1D952CC", Offset = "0x1D952CC", VA = "0x1D952CC")]
		public static extern void ovrAvatar_RequestAvatarSpecification(ulong userID);

		[PreserveSig]
		[Token(Token = "0x600133C")]
		[Address(RVA = "0x1D9534C", Offset = "0x1D9534C", VA = "0x1D9534C")]
		public static extern void ovrAvatar_RequestAvatarSpecificationFromSpecRequest(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x600133D")]
		[Address(RVA = "0x1D953CC", Offset = "0x1D953CC", VA = "0x1D953CC")]
		public static extern void ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x600133E")]
		[Address(RVA = "0x1D9545C", Offset = "0x1D9545C", VA = "0x1D9545C")]
		public static extern void ovrAvatarSpecificationRequest_SetExpressiveFlag(IntPtr specificationRequest, bool enable);

		[PreserveSig]
		[Token(Token = "0x600133F")]
		[Address(RVA = "0x1D954EC", Offset = "0x1D954EC", VA = "0x1D954EC")]
		public static extern IntPtr ovrAvatar_Create(IntPtr avatarSpecification, ovrAvatarCapabilities capabilities);

		[PreserveSig]
		[Token(Token = "0x6001340")]
		[Address(RVA = "0x1D9557C", Offset = "0x1D9557C", VA = "0x1D9557C")]
		public static extern void ovrAvatar_Destroy(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001341")]
		[Address(RVA = "0x1D955FC", Offset = "0x1D955FC", VA = "0x1D955FC")]
		public static extern void ovrAvatarPose_UpdateBody(IntPtr avatar, ovrAvatarTransform headPose);

		[Token(Token = "0x6001342")]
		[Address(RVA = "0x1D9569C", Offset = "0x1D9569C", VA = "0x1D9569C")]
		public static void ovrAvatarPose_UpdateVoiceVisualization(IntPtr avatar, float[] pcmData)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001343")]
		[Address(RVA = "0x1D9571C", Offset = "0x1D9571C", VA = "0x1D9571C")]
		private static extern void ovrAvatarPose_UpdateVoiceVisualization_Native(IntPtr avatar, uint pcmDataSize, [In] float[] pcmData);

		[PreserveSig]
		[Token(Token = "0x6001344")]
		[Address(RVA = "0x1D957BC", Offset = "0x1D957BC", VA = "0x1D957BC")]
		public static extern void ovrAvatarPose_UpdateHands(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight);

		[PreserveSig]
		[Token(Token = "0x6001345")]
		[Address(RVA = "0x1D9587C", Offset = "0x1D9587C", VA = "0x1D9587C")]
		public static extern void ovrAvatarPose_UpdateHandsWithType(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight, ovrAvatarControllerType type);

		[PreserveSig]
		[Token(Token = "0x6001346")]
		[Address(RVA = "0x1D9594C", Offset = "0x1D9594C", VA = "0x1D9594C")]
		public static extern void ovrAvatarPose_Finalize(IntPtr avatar, float elapsedSeconds);

		[PreserveSig]
		[Token(Token = "0x6001347")]
		[Address(RVA = "0x1D959DC", Offset = "0x1D959DC", VA = "0x1D959DC")]
		public static extern void ovrAvatar_SetLeftControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001348")]
		[Address(RVA = "0x1D95A6C", Offset = "0x1D95A6C", VA = "0x1D95A6C")]
		public static extern void ovrAvatar_SetRightControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001349")]
		[Address(RVA = "0x1D95AFC", Offset = "0x1D95AFC", VA = "0x1D95AFC")]
		public static extern void ovrAvatar_SetLeftHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x600134A")]
		[Address(RVA = "0x1D95B8C", Offset = "0x1D95B8C", VA = "0x1D95B8C")]
		public static extern void ovrAvatar_SetRightHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x600134B")]
		[Address(RVA = "0x1D95C1C", Offset = "0x1D95C1C", VA = "0x1D95C1C")]
		public static extern uint ovrAvatarComponent_Count(IntPtr avatar);

		[Token(Token = "0x600134C")]
		[Address(RVA = "0x1D95C9C", Offset = "0x1D95C9C", VA = "0x1D95C9C")]
		public static void ovrAvatarComponent_Get(IntPtr avatar, uint index, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0x1D95DBC", Offset = "0x1D95DBC", VA = "0x1D95DBC")]
		public static void ovrAvatarComponent_Get(IntPtr componentPtr, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600134E")]
		[Address(RVA = "0x1D95D2C", Offset = "0x1D95D2C", VA = "0x1D95D2C")]
		public static extern IntPtr ovrAvatarComponent_Get_Native(IntPtr avatar, uint index);

		[Token(Token = "0x600134F")]
		[Address(RVA = "0x1D95FBC", Offset = "0x1D95FBC", VA = "0x1D95FBC")]
		public static bool ovrAvatarPose_GetBaseComponent(IntPtr avatar, ref ovrAvatarBaseComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001350")]
		[Address(RVA = "0x1D960F4", Offset = "0x1D960F4", VA = "0x1D960F4")]
		private static extern IntPtr ovrAvatarPose_GetBaseComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001351")]
		public static IntPtr MarshalRenderComponent<T>(IntPtr ptr) where T : struct
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001352")]
		[Address(RVA = "0x1D96174", Offset = "0x1D96174", VA = "0x1D96174")]
		public static bool ovrAvatarPose_GetBodyComponent(IntPtr avatar, ref ovrAvatarBodyComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001353")]
		[Address(RVA = "0x1D963E4", Offset = "0x1D963E4", VA = "0x1D963E4")]
		private static extern IntPtr ovrAvatarPose_GetBodyComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001354")]
		[Address(RVA = "0x1D96464", Offset = "0x1D96464", VA = "0x1D96464")]
		public static bool ovrAvatarPose_GetLeftControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001355")]
		[Address(RVA = "0x1D9659C", Offset = "0x1D9659C", VA = "0x1D9659C")]
		private static extern IntPtr ovrAvatarPose_GetLeftControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001356")]
		[Address(RVA = "0x1D9661C", Offset = "0x1D9661C", VA = "0x1D9661C")]
		public static bool ovrAvatarPose_GetRightControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001357")]
		[Address(RVA = "0x1D96754", Offset = "0x1D96754", VA = "0x1D96754")]
		private static extern IntPtr ovrAvatarPose_GetRightControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001358")]
		[Address(RVA = "0x1D967D4", Offset = "0x1D967D4", VA = "0x1D967D4")]
		public static bool ovrAvatarPose_GetLeftHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001359")]
		[Address(RVA = "0x1D9690C", Offset = "0x1D9690C", VA = "0x1D9690C")]
		private static extern IntPtr ovrAvatarPose_GetLeftHandComponent_Native(IntPtr avatar);

		[Token(Token = "0x600135A")]
		[Address(RVA = "0x1D9698C", Offset = "0x1D9698C", VA = "0x1D9698C")]
		public static bool ovrAvatarPose_GetRightHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x600135B")]
		[Address(RVA = "0x1D96AC4", Offset = "0x1D96AC4", VA = "0x1D96AC4")]
		private static extern IntPtr ovrAvatarPose_GetRightHandComponent_Native(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x600135C")]
		[Address(RVA = "0x1D96B44", Offset = "0x1D96B44", VA = "0x1D96B44")]
		public static extern void ovrAvatarAsset_BeginLoading(ulong assetID);

		[PreserveSig]
		[Token(Token = "0x600135D")]
		[Address(RVA = "0x1D96BC4", Offset = "0x1D96BC4", VA = "0x1D96BC4")]
		public static extern bool ovrAvatarAsset_BeginLoadingLOD(ulong assetId, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x600135E")]
		[Address(RVA = "0x1D96C5C", Offset = "0x1D96C5C", VA = "0x1D96C5C")]
		public static extern ovrAvatarAssetType ovrAvatarAsset_GetType(IntPtr assetHandle);

		[Token(Token = "0x600135F")]
		[Address(RVA = "0x1D96CDC", Offset = "0x1D96CDC", VA = "0x1D96CDC")]
		public static ovrAvatarMeshAssetData ovrAvatarAsset_GetMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetData);
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0x1D96E88", Offset = "0x1D96E88", VA = "0x1D96E88")]
		public static ovrAvatarMeshAssetDataV2 ovrAvatarAsset_GetCombinedMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetDataV2);
		}

		[PreserveSig]
		[Token(Token = "0x6001361")]
		[Address(RVA = "0x1D96FB4", Offset = "0x1D96FB4", VA = "0x1D96FB4")]
		private static extern IntPtr ovrAvatarAsset_GetCombinedMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001362")]
		[Address(RVA = "0x1D96E08", Offset = "0x1D96E08", VA = "0x1D96E08")]
		private static extern IntPtr ovrAvatarAsset_GetMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001363")]
		[Address(RVA = "0x1D97034", Offset = "0x1D97034", VA = "0x1D97034")]
		public static extern uint ovrAvatarAsset_GetMeshBlendShapeCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001364")]
		[Address(RVA = "0x1D970B4", Offset = "0x1D970B4", VA = "0x1D970B4")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeName(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6001365")]
		[Address(RVA = "0x1D97144", Offset = "0x1D97144", VA = "0x1D97144")]
		public static extern uint ovrAvatarAsset_GetSubmeshCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001366")]
		[Address(RVA = "0x1D971C4", Offset = "0x1D971C4", VA = "0x1D971C4")]
		public static extern uint ovrAvatarAsset_GetSubmeshLastIndex(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6001367")]
		[Address(RVA = "0x1D97254", Offset = "0x1D97254", VA = "0x1D97254")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeVertices(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001368")]
		[Address(RVA = "0x1D972D4", Offset = "0x1D972D4", VA = "0x1D972D4")]
		public static extern IntPtr ovrAvatarAsset_GetAvatar(IntPtr assetHandle);

		[Token(Token = "0x6001369")]
		[Address(RVA = "0x1D97354", Offset = "0x1D97354", VA = "0x1D97354")]
		public static ulong[] ovrAvatarAsset_GetCombinedMeshIDs(IntPtr assetHandle)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600136A")]
		[Address(RVA = "0x1D97590", Offset = "0x1D97590", VA = "0x1D97590")]
		public static extern IntPtr ovrAvatarAsset_GetCombinedMeshIDs_Native(IntPtr assetHandle, IntPtr count);

		[Token(Token = "0x600136B")]
		[Address(RVA = "0x1D97620", Offset = "0x1D97620", VA = "0x1D97620")]
		public static void ovrAvatar_GetCombinedMeshAlphaData(IntPtr avatar, ref ulong textureID, ref Vector4 offset)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600136C")]
		[Address(RVA = "0x1D9780C", Offset = "0x1D9780C", VA = "0x1D9780C")]
		public static extern IntPtr ovrAvatar_GetCombinedMeshAlphaData_Native(IntPtr avatar, IntPtr textureIDPtr, IntPtr offsetPtr);

		[Token(Token = "0x600136D")]
		[Address(RVA = "0x1D978A4", Offset = "0x1D978A4", VA = "0x1D978A4")]
		public static ovrAvatarTextureAssetData ovrAvatarAsset_GetTextureData(IntPtr assetPtr)
		{
			return default(ovrAvatarTextureAssetData);
		}

		[PreserveSig]
		[Token(Token = "0x600136E")]
		[Address(RVA = "0x1D979C8", Offset = "0x1D979C8", VA = "0x1D979C8")]
		private static extern IntPtr ovrAvatarAsset_GetTextureData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x600136F")]
		[Address(RVA = "0x1D97A48", Offset = "0x1D97A48", VA = "0x1D97A48")]
		private static extern IntPtr ovrAvatarAsset_GetMaterialData_Native(IntPtr assetPtr);

		[Token(Token = "0x6001370")]
		[Address(RVA = "0x1D97AC8", Offset = "0x1D97AC8", VA = "0x1D97AC8")]
		public static ovrAvatarMaterialState ovrAvatarAsset_GetMaterialState(IntPtr assetPtr)
		{
			return default(ovrAvatarMaterialState);
		}

		[PreserveSig]
		[Token(Token = "0x6001371")]
		[Address(RVA = "0x1D97BF0", Offset = "0x1D97BF0", VA = "0x1D97BF0")]
		public static extern ovrAvatarRenderPartType ovrAvatarRenderPart_GetType(IntPtr renderPart);

		[Token(Token = "0x6001372")]
		[Address(RVA = "0x1D97C70", Offset = "0x1D97C70", VA = "0x1D97C70")]
		public static ovrAvatarRenderPart_SkinnedMeshRender ovrAvatarRenderPart_GetSkinnedMeshRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRender);
		}

		[PreserveSig]
		[Token(Token = "0x6001373")]
		[Address(RVA = "0x1D97D98", Offset = "0x1D97D98", VA = "0x1D97D98")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001374")]
		[Address(RVA = "0x1D97E18", Offset = "0x1D97E18", VA = "0x1D97E18")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001375")]
		[Address(RVA = "0x1D97EA8", Offset = "0x1D97EA8", VA = "0x1D97EA8")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001376")]
		[Address(RVA = "0x1D97F38", Offset = "0x1D97F38", VA = "0x1D97F38")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001377")]
		[Address(RVA = "0x1D97FC8", Offset = "0x1D97FC8", VA = "0x1D97FC8")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRender_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001378")]
		[Address(RVA = "0x1D98048", Offset = "0x1D98048", VA = "0x1D98048")]
		public static extern bool ovrAvatarSkinnedMeshRender_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001379")]
		[Address(RVA = "0x1D980D0", Offset = "0x1D980D0", VA = "0x1D980D0")]
		public static extern bool ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600137A")]
		[Address(RVA = "0x1D98158", Offset = "0x1D98158", VA = "0x1D98158")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600137B")]
		[Address(RVA = "0x1D981D8", Offset = "0x1D981D8", VA = "0x1D981D8")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600137C")]
		[Address(RVA = "0x1D98258", Offset = "0x1D98258", VA = "0x1D98258")]
		public static extern ovrAvatarMaterialState ovrAvatarSkinnedMeshRender_GetMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600137D")]
		[Address(RVA = "0x1D9830C", Offset = "0x1D9830C", VA = "0x1D9830C")]
		public static extern ovrAvatarPBSMaterialState ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600137E")]
		[Address(RVA = "0x1D9839C", Offset = "0x1D9839C", VA = "0x1D9839C")]
		public static extern ovrAvatarExpressiveParameters ovrAvatar_GetExpressiveParameters(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x600137F")]
		[Address(RVA = "0x1D9842C", Offset = "0x1D9842C", VA = "0x1D9842C")]
		public static extern ulong ovrAvatarSkinnedMeshRender_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001380")]
		[Address(RVA = "0x1D984AC", Offset = "0x1D984AC", VA = "0x1D984AC")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001381")]
		[Address(RVA = "0x1D9852C", Offset = "0x1D9852C", VA = "0x1D9852C")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001382")]
		[Address(RVA = "0x1D985AC", Offset = "0x1D985AC", VA = "0x1D985AC")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6001383")]
		[Address(RVA = "0x1D98644", Offset = "0x1D98644", VA = "0x1D98644")]
		public static extern void ovrAvatar_SetActionUnitOnsetSpeed(IntPtr avatar, float onsetSpeed);

		[PreserveSig]
		[Token(Token = "0x6001384")]
		[Address(RVA = "0x1D986D4", Offset = "0x1D986D4", VA = "0x1D986D4")]
		public static extern void ovrAvatar_SetActionUnitFalloffSpeed(IntPtr avatar, float falloffSpeed);

		[PreserveSig]
		[Token(Token = "0x6001385")]
		[Address(RVA = "0x1D98764", Offset = "0x1D98764", VA = "0x1D98764")]
		public static extern void ovrAvatar_SetVisemeMultiplier(IntPtr avatar, float visemeMultiplier);

		[PreserveSig]
		[Token(Token = "0x6001386")]
		[Address(RVA = "0x1D987F4", Offset = "0x1D987F4", VA = "0x1D987F4")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6001387")]
		[Address(RVA = "0x1D9888C", Offset = "0x1D9888C", VA = "0x1D9888C")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6001388")]
		[Address(RVA = "0x1D98924", Offset = "0x1D98924", VA = "0x1D98924")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001389")]
		[Address(RVA = "0x1D989A4", Offset = "0x1D989A4", VA = "0x1D989A4")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(IntPtr renderPart);

		[Token(Token = "0x600138A")]
		[Address(RVA = "0x1D98A24", Offset = "0x1D98A24", VA = "0x1D98A24")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS);
		}

		[PreserveSig]
		[Token(Token = "0x600138B")]
		[Address(RVA = "0x1D98B4C", Offset = "0x1D98B4C", VA = "0x1D98B4C")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(IntPtr renderPart);

		[Token(Token = "0x600138C")]
		[Address(RVA = "0x1D98BCC", Offset = "0x1D98BCC", VA = "0x1D98BCC")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2);
		}

		[PreserveSig]
		[Token(Token = "0x600138D")]
		[Address(RVA = "0x1D98CF4", Offset = "0x1D98CF4", VA = "0x1D98CF4")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(IntPtr renderPart);

		[Token(Token = "0x600138E")]
		[Address(RVA = "0x1D98D74", Offset = "0x1D98D74", VA = "0x1D98D74")]
		public static void ovrAvatarSkinnedMeshRender_GetBlendShapeParams(IntPtr renderPart, ref ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600138F")]
		[Address(RVA = "0x1D98E9C", Offset = "0x1D98E9C", VA = "0x1D98E9C")]
		private static extern IntPtr ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native(IntPtr renderPart);

		[Token(Token = "0x6001390")]
		[Address(RVA = "0x1D98F1C", Offset = "0x1D98F1C", VA = "0x1D98F1C")]
		public static ovrAvatarRenderPart_ProjectorRender ovrAvatarRenderPart_GetProjectorRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_ProjectorRender);
		}

		[Token(Token = "0x6001391")]
		[Address(RVA = "0x1D990C4", Offset = "0x1D990C4", VA = "0x1D990C4")]
		public static ovrAvatarPBSMaterialState[] ovrAvatar_GetBodyPBSMaterialStates(IntPtr renderPart)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001392")]
		[Address(RVA = "0x1D99360", Offset = "0x1D99360", VA = "0x1D99360")]
		private static extern IntPtr ovrAvatar_GetBodyPBSMaterialStates_Native(IntPtr avatar, IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6001393")]
		[Address(RVA = "0x1D99044", Offset = "0x1D99044", VA = "0x1D99044")]
		private static extern IntPtr ovrAvatarRenderPart_GetProjectorRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001394")]
		[Address(RVA = "0x1D993F0", Offset = "0x1D993F0", VA = "0x1D993F0")]
		public static extern uint ovrAvatar_GetReferencedAssetCount(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001395")]
		[Address(RVA = "0x1D99470", Offset = "0x1D99470", VA = "0x1D99470")]
		public static extern ulong ovrAvatar_GetReferencedAsset(IntPtr avatar, uint index);

		[PreserveSig]
		[Token(Token = "0x6001396")]
		[Address(RVA = "0x1D99500", Offset = "0x1D99500", VA = "0x1D99500")]
		public static extern void ovrAvatar_SetLeftHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6001397")]
		[Address(RVA = "0x1D99590", Offset = "0x1D99590", VA = "0x1D99590")]
		public static extern void ovrAvatar_SetRightHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6001398")]
		[Address(RVA = "0x1D99620", Offset = "0x1D99620", VA = "0x1D99620")]
		public static extern void ovrAvatar_SetLeftHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6001399")]
		[Address(RVA = "0x1D996C0", Offset = "0x1D996C0", VA = "0x1D996C0")]
		public static extern void ovrAvatar_SetRightHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x600139A")]
		[Address(RVA = "0x1D99760", Offset = "0x1D99760", VA = "0x1D99760")]
		public static extern void ovrAvatar_UpdatePoseFromPacket(IntPtr avatar, IntPtr packet, float secondsFromStart);

		[PreserveSig]
		[Token(Token = "0x600139B")]
		[Address(RVA = "0x1D99800", Offset = "0x1D99800", VA = "0x1D99800")]
		public static extern void ovrAvatarPacket_BeginRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x600139C")]
		[Address(RVA = "0x1D99880", Offset = "0x1D99880", VA = "0x1D99880")]
		public static extern IntPtr ovrAvatarPacket_EndRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x600139D")]
		[Address(RVA = "0x1D99900", Offset = "0x1D99900", VA = "0x1D99900")]
		public static extern uint ovrAvatarPacket_GetSize(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x600139E")]
		[Address(RVA = "0x1D99980", Offset = "0x1D99980", VA = "0x1D99980")]
		public static extern float ovrAvatarPacket_GetDurationSeconds(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x600139F")]
		[Address(RVA = "0x1D99A00", Offset = "0x1D99A00", VA = "0x1D99A00")]
		public static extern void ovrAvatarPacket_Free(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x60013A0")]
		[Address(RVA = "0x1D99A80", Offset = "0x1D99A80", VA = "0x1D99A80")]
		public static extern bool ovrAvatarPacket_Write(IntPtr packet, uint bufferSize, [Out] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x60013A1")]
		[Address(RVA = "0x1D99BA8", Offset = "0x1D99BA8", VA = "0x1D99BA8")]
		public static extern IntPtr ovrAvatarPacket_Read(uint bufferSize, [In] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x60013A2")]
		[Address(RVA = "0x1D99C40", Offset = "0x1D99C40", VA = "0x1D99C40")]
		private static extern void ovrAvatar_SetInternalForceASTCTextures(bool value);

		[Token(Token = "0x60013A3")]
		[Address(RVA = "0x1D99CC0", Offset = "0x1D99CC0", VA = "0x1D99CC0")]
		public static void ovrAvatar_SetForceASTCTextures(bool value)
		{
		}

		[Token(Token = "0x60013A4")]
		[Address(RVA = "0x1D99D24", Offset = "0x1D99D24", VA = "0x1D99D24")]
		public static void ovrAvatar_OverrideExpressiveLogic(IntPtr avatar, ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60013A5")]
		[Address(RVA = "0x1D99E40", Offset = "0x1D99E40", VA = "0x1D99E40")]
		private static extern void ovrAvatar_OverrideExpressiveLogic_Native(IntPtr avatar, IntPtr state);

		[Token(Token = "0x60013A6")]
		[Address(RVA = "0x1D99ED0", Offset = "0x1D99ED0", VA = "0x1D99ED0")]
		public static void ovrAvatar_SetVisemes(IntPtr avatar, ovrAvatarVisemes visemes)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60013A7")]
		[Address(RVA = "0x1D9A014", Offset = "0x1D9A014", VA = "0x1D9A014")]
		private static extern void ovrAvatar_SetVisemes_Native(IntPtr avatar, IntPtr visemes);

		[PreserveSig]
		[Token(Token = "0x60013A8")]
		[Address(RVA = "0x1D9A0A4", Offset = "0x1D9A0A4", VA = "0x1D9A0A4")]
		public static extern void ovrAvatar_UpdateWorldTransform(IntPtr avatar, ovrAvatarTransform transform);

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0x1D9A144", Offset = "0x1D9A144", VA = "0x1D9A144")]
		public static void ovrAvatar_UpdateGazeTargets(ovrAvatarGazeTargets targets)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60013AA")]
		[Address(RVA = "0x1D9A4DC", Offset = "0x1D9A4DC", VA = "0x1D9A4DC")]
		private static extern void ovrAvatar_UpdateGazeTargets_Native(IntPtr targets);

		[PreserveSig]
		[Token(Token = "0x60013AB")]
		[Address(RVA = "0x1D9A55C", Offset = "0x1D9A55C", VA = "0x1D9A55C")]
		public static extern void ovrAvatar_RemoveGazeTargets(uint targetCount, uint[] ids);

		[Token(Token = "0x60013AC")]
		[Address(RVA = "0x1D9A5F4", Offset = "0x1D9A5F4", VA = "0x1D9A5F4")]
		public static void ovrAvatar_UpdateLights(ovrAvatarLights lights)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60013AD")]
		[Address(RVA = "0x1D9ADBC", Offset = "0x1D9ADBC", VA = "0x1D9ADBC")]
		private static extern void ovrAvatar_UpdateLights_Native(IntPtr lights);

		[PreserveSig]
		[Token(Token = "0x60013AE")]
		[Address(RVA = "0x1D9AE3C", Offset = "0x1D9AE3C", VA = "0x1D9AE3C")]
		public static extern void ovrAvatar_RemoveLights(uint lightCount, uint[] ids);

		[Token(Token = "0x60013AF")]
		[Address(RVA = "0x1D94764", Offset = "0x1D94764", VA = "0x1D94764")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x14842BC", Offset = "0x14842BC")]
		public static void LoggingCallback(IntPtr str)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60013B0")]
		[Address(RVA = "0x1D9AED4", Offset = "0x1D9AED4", VA = "0x1D9AED4")]
		public static extern void ovrAvatar_RegisterLoggingCallback(LoggingDelegate callback);

		[PreserveSig]
		[Token(Token = "0x60013B1")]
		[Address(RVA = "0x1D9AF58", Offset = "0x1D9AF58", VA = "0x1D9AF58")]
		public static extern void ovrAvatar_SetLoggingLevel(ovrAvatarLogLevel level);

		[PreserveSig]
		[Token(Token = "0x60013B2")]
		[Address(RVA = "0x1D9AFD8", Offset = "0x1D9AFD8", VA = "0x1D9AFD8")]
		public static extern IntPtr ovrAvatar_GetDebugTransforms_Native(IntPtr count);

		[PreserveSig]
		[Token(Token = "0x60013B3")]
		[Address(RVA = "0x1D9B058", Offset = "0x1D9B058", VA = "0x1D9B058")]
		public static extern IntPtr ovrAvatar_GetDebugLines_Native(IntPtr count);

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0x1D9B0D8", Offset = "0x1D9B0D8", VA = "0x1D9B0D8")]
		public static void ovrAvatar_DrawDebugLines()
		{
		}

		[PreserveSig]
		[Token(Token = "0x60013B5")]
		[Address(RVA = "0x1D9BAB8", Offset = "0x1D9BAB8", VA = "0x1D9BAB8")]
		public static extern void ovrAvatar_SetDebugDrawContext(uint context);

		[Token(Token = "0x60013B6")]
		[Address(RVA = "0x1D9BB38", Offset = "0x1D9BB38", VA = "0x1D9BB38")]
		public static bool SendEvent(string name, string param = "", string source = "")
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60013B7")]
		[Address(RVA = "0x1D9BF40", Offset = "0x1D9BF40", VA = "0x1D9BF40")]
		private static extern IntPtr _ovrp_GetVersion();

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0x1D9BEB0", Offset = "0x1D9BEB0", VA = "0x1D9BEB0")]
		public static string ovrp_GetVersion()
		{
			return null;
		}

		[Token(Token = "0x60013B9")]
		[Address(RVA = "0x1D9BFB4", Offset = "0x1D9BFB4", VA = "0x1D9BFB4")]
		public CAPI()
		{
		}
	}
}
namespace VLB
{
	[Token(Token = "0x2000266")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1466E40", Offset = "0x1466E40")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x1466E40", Offset = "0x1466E40")]
	public class BeamGeometry : MonoBehaviour
	{
		[Token(Token = "0x2000637")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A5CC", Offset = "0x146A5CC")]
		private sealed class <CoUpdateFadeOut>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40024D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40024D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40024D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BeamGeometry <>4__this;

			[Token(Token = "0x17000539")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600280A")]
				[Address(RVA = "0x2E98490", Offset = "0x2E98490", VA = "0x2E98490", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700053A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600280C")]
				[Address(RVA = "0x2E984F8", Offset = "0x2E984F8", VA = "0x2E984F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002807")]
			[Address(RVA = "0x2E95B20", Offset = "0x2E95B20", VA = "0x2E95B20")]
			[DebuggerHidden]
			public <CoUpdateFadeOut>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x6002808")]
			[Address(RVA = "0x2E983F8", Offset = "0x2E983F8", VA = "0x2E983F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002809")]
			[Address(RVA = "0x2E983FC", Offset = "0x2E983FC", VA = "0x2E983FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600280B")]
			[Address(RVA = "0x2E98498", Offset = "0x2E98498", VA = "0x2E98498", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40010D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VolumetricLightBeam m_Master;

		[Token(Token = "0x40010D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Matrix4x4 m_ColorGradientMatrix;

		[Token(Token = "0x40010DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MeshType m_CurrentMeshType;

		[Token(Token = "0x40010DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Material m_CustomMaterial;

		[Token(Token = "0x40010DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Coroutine m_CoFadeOut;

		[Token(Token = "0x40010DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1473D48", Offset = "0x1473D48")]
		private MeshRenderer <meshRenderer>k__BackingField;

		[Token(Token = "0x40010DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1473D58", Offset = "0x1473D58")]
		private MeshFilter <meshFilter>k__BackingField;

		[Token(Token = "0x40010DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1473D68", Offset = "0x1473D68")]
		private Mesh <coneMesh>k__BackingField;

		[Token(Token = "0x40010E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private DynamicOcclusion _dynamicOcclusion;

		[Token(Token = "0x17000216")]
		public MeshRenderer meshRenderer
		{
			[Token(Token = "0x60013BB")]
			[Address(RVA = "0x2E95840", Offset = "0x2E95840", VA = "0x2E95840")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1484320", Offset = "0x1484320")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013BC")]
			[Address(RVA = "0x2E95848", Offset = "0x2E95848", VA = "0x2E95848")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1484330", Offset = "0x1484330")]
			private set
			{
			}
		}

		[Token(Token = "0x17000217")]
		public MeshFilter meshFilter
		{
			[Token(Token = "0x60013BD")]
			[Address(RVA = "0x2E95850", Offset = "0x2E95850", VA = "0x2E95850")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1484340", Offset = "0x1484340")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013BE")]
			[Address(RVA = "0x2E95858", Offset = "0x2E95858", VA = "0x2E95858")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1484350", Offset = "0x1484350")]
			private set
			{
			}
		}

		[Token(Token = "0x17000218")]
		public Mesh coneMesh
		{
			[Token(Token = "0x60013BF")]
			[Address(RVA = "0x2E95860", Offset = "0x2E95860", VA = "0x2E95860")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1484360", Offset = "0x1484360")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013C0")]
			[Address(RVA = "0x2E95868", Offset = "0x2E95868", VA = "0x2E95868")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1484370", Offset = "0x1484370")]
			private set
			{
			}
		}

		[Token(Token = "0x17000219")]
		public bool visible
		{
			[Token(Token = "0x60013C1")]
			[Address(RVA = "0x2E95870", Offset = "0x2E95870", VA = "0x2E95870")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013C2")]
			[Address(RVA = "0x2E9588C", Offset = "0x2E9588C", VA = "0x2E9588C")]
			set
			{
			}
		}

		[Token(Token = "0x1700021A")]
		public int sortingLayerID
		{
			[Token(Token = "0x60013C3")]
			[Address(RVA = "0x2E958AC", Offset = "0x2E958AC", VA = "0x2E958AC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60013C4")]
			[Address(RVA = "0x2E958C8", Offset = "0x2E958C8", VA = "0x2E958C8")]
			set
			{
			}
		}

		[Token(Token = "0x1700021B")]
		public int sortingOrder
		{
			[Token(Token = "0x60013C5")]
			[Address(RVA = "0x2E958E4", Offset = "0x2E958E4", VA = "0x2E958E4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60013C6")]
			[Address(RVA = "0x2E95900", Offset = "0x2E95900", VA = "0x2E95900")]
			set
			{
			}
		}

		[Token(Token = "0x1700021C")]
		public bool _INTERNAL_IsFadeOutCoroutineRunning
		{
			[Token(Token = "0x60013C7")]
			[Address(RVA = "0x2E9591C", Offset = "0x2E9591C", VA = "0x2E9591C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700021D")]
		public static bool isCustomRenderPipelineSupported
		{
			[Token(Token = "0x60013D1")]
			[Address(RVA = "0x2E96448", Offset = "0x2E96448", VA = "0x2E96448")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700021E")]
		private bool isNoiseEnabled
		{
			[Token(Token = "0x60013D6")]
			[Address(RVA = "0x2E97820", Offset = "0x2E97820", VA = "0x2E97820")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700021F")]
		private bool isClippingPlaneEnabled
		{
			[Token(Token = "0x60013D7")]
			[Address(RVA = "0x2E978C0", Offset = "0x2E978C0", VA = "0x2E978C0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000220")]
		private bool isDepthBlendEnabled
		{
			[Token(Token = "0x60013D8")]
			[Address(RVA = "0x2E97990", Offset = "0x2E97990", VA = "0x2E97990")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000221")]
		public DynamicOcclusion dynamicOcclusion
		{
			[Token(Token = "0x60013E2")]
			[Address(RVA = "0x2E97E80", Offset = "0x2E97E80", VA = "0x2E97E80")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013E3")]
			[Address(RVA = "0x2E97E88", Offset = "0x2E97E88", VA = "0x2E97E88")]
			set
			{
			}
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0x2E9592C", Offset = "0x2E9592C", VA = "0x2E9592C")]
		private float ComputeFadeOutFactor(Transform camTransform)
		{
			return default(float);
		}

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0x2E95AA4", Offset = "0x2E95AA4", VA = "0x2E95AA4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1484380", Offset = "0x1484380")]
		private IEnumerator CoUpdateFadeOut()
		{
			return null;
		}

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0x2E95B4C", Offset = "0x2E95B4C", VA = "0x2E95B4C")]
		private void ComputeFadeOutFactor()
		{
		}

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0x2E95CF0", Offset = "0x2E95CF0", VA = "0x2E95CF0")]
		private void SetFadeOutFactorProp(float value)
		{
		}

		[Token(Token = "0x60013CC")]
		[Address(RVA = "0x2E96034", Offset = "0x2E96034", VA = "0x2E96034")]
		public void RestartFadeOutCoroutine()
		{
		}

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0x2E96124", Offset = "0x2E96124", VA = "0x2E96124")]
		private void Start()
		{
		}

		[Token(Token = "0x60013CE")]
		[Address(RVA = "0x2E961E4", Offset = "0x2E961E4", VA = "0x2E961E4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0x2E962A4", Offset = "0x2E962A4", VA = "0x2E962A4")]
		private static bool IsUsingCustomRenderPipeline()
		{
			return default(bool);
		}

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0x2E96398", Offset = "0x2E96398", VA = "0x2E96398")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0x2E96450", Offset = "0x2E96450", VA = "0x2E96450")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0x2E96508", Offset = "0x2E96508", VA = "0x2E96508")]
		public void Initialize(VolumetricLightBeam master)
		{
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0x2E96B1C", Offset = "0x2E96B1C", VA = "0x2E96B1C")]
		public void RegenerateMesh()
		{
		}

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0x2E97730", Offset = "0x2E97730", VA = "0x2E97730")]
		private void ComputeLocalMatrix()
		{
		}

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0x2E96924", Offset = "0x2E96924", VA = "0x2E96924")]
		private bool ApplyMaterial()
		{
			return default(bool);
		}

		[Token(Token = "0x60013DA")]
		[Address(RVA = "0x2E95E7C", Offset = "0x2E95E7C", VA = "0x2E95E7C")]
		private void SetMaterialProp(int nameID, float value)
		{
		}

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0x2E979D8", Offset = "0x2E979D8", VA = "0x2E979D8")]
		private void SetMaterialProp(int nameID, Vector4 value)
		{
		}

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0x2E97AFC", Offset = "0x2E97AFC", VA = "0x2E97AFC")]
		private void SetMaterialProp(int nameID, UnityEngine.Color value)
		{
		}

		[Token(Token = "0x60013DD")]
		[Address(RVA = "0x2E97C20", Offset = "0x2E97C20", VA = "0x2E97C20")]
		private void SetMaterialProp(int nameID, Matrix4x4 value)
		{
		}

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0x2E95DB8", Offset = "0x2E95DB8", VA = "0x2E95DB8")]
		private void MaterialChangeStart()
		{
		}

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0x2E95F70", Offset = "0x2E95F70", VA = "0x2E95F70")]
		private void MaterialChangeStop()
		{
		}

		[Token(Token = "0x60013E0")]
		[Address(RVA = "0x2E97D4C", Offset = "0x2E97D4C", VA = "0x2E97D4C")]
		private void SendMaterialClippingPlaneProp()
		{
		}

		[Token(Token = "0x60013E1")]
		[Address(RVA = "0x2E97050", Offset = "0x2E97050", VA = "0x2E97050")]
		public void UpdateMaterialAndBounds()
		{
		}

		[Token(Token = "0x60013E4")]
		[Address(RVA = "0x2E97FBC", Offset = "0x2E97FBC", VA = "0x2E97FBC")]
		private void OnBeginCameraRendering(ScriptableRenderContext context, Camera cam)
		{
		}

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0x2E98348", Offset = "0x2E98348", VA = "0x2E98348")]
		private void OnWillRenderObject()
		{
		}

		[Token(Token = "0x60013E6")]
		[Address(RVA = "0x2E983E8", Offset = "0x2E983E8", VA = "0x2E983E8")]
		private static bool IsEditorCamera(Camera cam)
		{
			return default(bool);
		}

		[Token(Token = "0x60013E7")]
		[Address(RVA = "0x2E97FC4", Offset = "0x2E97FC4", VA = "0x2E97FC4")]
		private void UpdateCameraRelatedProperties(Camera cam)
		{
		}

		[Token(Token = "0x60013E8")]
		[Address(RVA = "0x2E983F0", Offset = "0x2E983F0", VA = "0x2E983F0")]
		public BeamGeometry()
		{
		}
	}
	[Token(Token = "0x2000267")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x1466EB0", Offset = "0x1466EB0")]
	public class Config : ScriptableObject
	{
		[Token(Token = "0x40010E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool geometryOverrideLayer;

		[Token(Token = "0x40010E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int geometryLayerID;

		[Token(Token = "0x40010E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string geometryTag;

		[Token(Token = "0x40010E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int geometryRenderQueue;

		[Token(Token = "0x40010E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public RenderPipeline renderPipeline;

		[Token(Token = "0x40010E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1473D78", Offset = "0x1473D78")]
		public bool forceSinglePass;

		[Token(Token = "0x40010E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public RenderingMode renderingMode;

		[Token(Token = "0x40010E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[HighlightNull]
		private Shader beamShader1Pass;

		[Token(Token = "0x40010E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x1473DE8", Offset = "0x1473DE8")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x1473DE8", Offset = "0x1473DE8")]
		[SerializeField]
		[HighlightNull]
		private Shader beamShader2Pass;

		[Token(Token = "0x40010EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[HighlightNull]
		private Shader beamShaderSRP;

		[Token(Token = "0x40010EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int sharedMeshSides;

		[Token(Token = "0x40010EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int sharedMeshSegments;

		[Token(Token = "0x40010ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1473EA0", Offset = "0x1473EA0")]
		public float globalNoiseScale;

		[Token(Token = "0x40010EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Vector3 globalNoiseVelocity;

		[Token(Token = "0x40010EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string fadeOutCameraTag;

		[Token(Token = "0x40010F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HighlightNull]
		public TextAsset noise3DData;

		[Token(Token = "0x40010F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int noise3DSize;

		[Token(Token = "0x40010F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HighlightNull]
		public ParticleSystem dustParticlesPrefab;

		[Token(Token = "0x40010F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private int pluginVersion;

		[Token(Token = "0x40010F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Transform m_CachedFadeOutCamera;

		[Token(Token = "0x40010F5")]
		private const string kAssetName = "Config";

		[Token(Token = "0x40010F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Config m_Instance;

		[Token(Token = "0x17000222")]
		public RenderingMode actualRenderingMode
		{
			[Token(Token = "0x60013E9")]
			[Address(RVA = "0x2E9691C", Offset = "0x2E9691C", VA = "0x2E9691C")]
			get
			{
				return default(RenderingMode);
			}
		}

		[Token(Token = "0x17000223")]
		public bool useSinglePassShader
		{
			[Token(Token = "0x60013EA")]
			[Address(RVA = "0x2E96E20", Offset = "0x2E96E20", VA = "0x2E96E20")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000224")]
		public Shader beamShader
		{
			[Token(Token = "0x60013EB")]
			[Address(RVA = "0x2E98500", Offset = "0x2E98500", VA = "0x2E98500")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000225")]
		public Vector4 globalNoiseParam
		{
			[Token(Token = "0x60013EC")]
			[Address(RVA = "0x2E98598", Offset = "0x2E98598", VA = "0x2E98598")]
			get
			{
				return default(Vector4);
			}
		}

		[Token(Token = "0x17000226")]
		public Transform fadeOutCameraTransform
		{
			[Token(Token = "0x60013ED")]
			[Address(RVA = "0x2E95C6C", Offset = "0x2E95C6C", VA = "0x2E95C6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000227")]
		public static Config Instance
		{
			[Token(Token = "0x60013F7")]
			[Address(RVA = "0x2E95C0C", Offset = "0x2E95C0C", VA = "0x2E95C0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0x2E985D0", Offset = "0x2E985D0", VA = "0x2E985D0")]
		public void ForceUpdateFadeOutCamera()
		{
		}

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0x2E98680", Offset = "0x2E98680", VA = "0x2E98680")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x14843E4", Offset = "0x14843E4")]
		private static void OnStartup()
		{
		}

		[Token(Token = "0x60013F0")]
		[Address(RVA = "0x2E9858C", Offset = "0x2E9858C", VA = "0x2E9858C")]
		private static bool ShouldEnableSrpApi(RenderPipeline pipeline)
		{
			return default(bool);
		}

		[Token(Token = "0x60013F1")]
		[Address(RVA = "0x2E98700", Offset = "0x2E98700", VA = "0x2E98700")]
		public static void OnRenderPipelineChanged(RenderPipeline pipeline)
		{
		}

		[Token(Token = "0x60013F2")]
		[Address(RVA = "0x2E98798", Offset = "0x2E98798", VA = "0x2E98798")]
		public void Reset()
		{
		}

		[Token(Token = "0x60013F3")]
		[Address(RVA = "0x2E98860", Offset = "0x2E98860", VA = "0x2E98860")]
		public void ResetInternalData()
		{
		}

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0x2E989FC", Offset = "0x2E989FC", VA = "0x2E989FC")]
		public ParticleSystem NewVolumetricDustParticles()
		{
			return null;
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0x2E98B90", Offset = "0x2E98B90", VA = "0x2E98B90")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0x2E98BC0", Offset = "0x2E98BC0", VA = "0x2E98BC0")]
		private void HandleBackwardCompatibility(int serializedVersion, int newVersion)
		{
		}

		[Token(Token = "0x60013F8")]
		[Address(RVA = "0x2E98C98", Offset = "0x2E98C98", VA = "0x2E98C98")]
		private static Config GetInstance(bool assertIfNotFound)
		{
			return null;
		}

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0x2E98E24", Offset = "0x2E98E24", VA = "0x2E98E24")]
		public Config()
		{
		}
	}
	[Token(Token = "0x2000268")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x1466EE8", Offset = "0x1466EE8")]
	public class ConfigOverride : Config
	{
		[Token(Token = "0x40010F7")]
		public const string kAssetName = "VLBConfigOverride";

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0x2E98F10", Offset = "0x2E98F10", VA = "0x2E98F10")]
		public ConfigOverride()
		{
		}
	}
	[Token(Token = "0x2000269")]
	public static class Consts
	{
		[Token(Token = "0x40010F8")]
		private const string HelpUrlBase = "http://saladgamer.com/vlb-doc/";

		[Token(Token = "0x40010F9")]
		public const string HelpUrlBeam = "http://saladgamer.com/vlb-doc/comp-lightbeam/";

		[Token(Token = "0x40010FA")]
		public const string HelpUrlDustParticles = "http://saladgamer.com/vlb-doc/comp-dustparticles/";

		[Token(Token = "0x40010FB")]
		public const string HelpUrlDynamicOcclusion = "http://saladgamer.com/vlb-doc/comp-dynocclusion/";

		[Token(Token = "0x40010FC")]
		public const string HelpUrlTriggerZone = "http://saladgamer.com/vlb-doc/comp-triggerzone/";

		[Token(Token = "0x40010FD")]
		public const string HelpUrlConfig = "http://saladgamer.com/vlb-doc/config/";

		[Token(Token = "0x40010FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly bool ProceduralObjectsVisibleInEditor;

		[Token(Token = "0x40010FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly UnityEngine.Color FlatColor;

		[Token(Token = "0x4001100")]
		public const ColorMode ColorModeDefault = ColorMode.Flat;

		[Token(Token = "0x4001101")]
		public const float IntensityDefault = 1f;

		[Token(Token = "0x4001102")]
		public const float IntensityMin = 0f;

		[Token(Token = "0x4001103")]
		public const float IntensityMax = 8f;

		[Token(Token = "0x4001104")]
		public const float SpotAngleDefault = 35f;

		[Token(Token = "0x4001105")]
		public const float SpotAngleMin = 0.1f;

		[Token(Token = "0x4001106")]
		public const float SpotAngleMax = 179.9f;

		[Token(Token = "0x4001107")]
		public const float ConeRadiusStart = 0.1f;

		[Token(Token = "0x4001108")]
		public const MeshType GeomMeshType = MeshType.Shared;

		[Token(Token = "0x4001109")]
		public const int GeomSidesDefault = 18;

		[Token(Token = "0x400110A")]
		public const int GeomSidesMin = 3;

		[Token(Token = "0x400110B")]
		public const int GeomSidesMax = 256;

		[Token(Token = "0x400110C")]
		public const int GeomSegmentsDefault = 5;

		[Token(Token = "0x400110D")]
		public const int GeomSegmentsMin = 0;

		[Token(Token = "0x400110E")]
		public const int GeomSegmentsMax = 64;

		[Token(Token = "0x400110F")]
		public const bool GeomCap = false;

		[Token(Token = "0x4001110")]
		public const AttenuationEquation AttenuationEquationDefault = AttenuationEquation.Quadratic;

		[Token(Token = "0x4001111")]
		public const float AttenuationCustomBlending = 0.5f;

		[Token(Token = "0x4001112")]
		public const float FallOffStart = 0f;

		[Token(Token = "0x4001113")]
		public const float FallOffEnd = 3f;

		[Token(Token = "0x4001114")]
		public const float FallOffDistancesMinThreshold = 0.01f;

		[Token(Token = "0x4001115")]
		public const float DepthBlendDistance = 2f;

		[Token(Token = "0x4001116")]
		public const float CameraClippingDistance = 0.5f;

		[Token(Token = "0x4001117")]
		public const float FresnelPowMaxValue = 10f;

		[Token(Token = "0x4001118")]
		public const float FresnelPow = 8f;

		[Token(Token = "0x4001119")]
		public const float GlareFrontal = 0.5f;

		[Token(Token = "0x400111A")]
		public const float GlareBehind = 0.5f;

		[Token(Token = "0x400111B")]
		public const NoiseMode NoiseModeDefault = NoiseMode.Disabled;

		[Token(Token = "0x400111C")]
		public const float NoiseIntensityMin = 0f;

		[Token(Token = "0x400111D")]
		public const float NoiseIntensityMax = 1f;

		[Token(Token = "0x400111E")]
		public const float NoiseIntensityDefault = 0.5f;

		[Token(Token = "0x400111F")]
		public const float NoiseScaleMin = 0.01f;

		[Token(Token = "0x4001120")]
		public const float NoiseScaleMax = 2f;

		[Token(Token = "0x4001121")]
		public const float NoiseScaleDefault = 0.5f;

		[Token(Token = "0x4001122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static readonly Vector3 NoiseVelocityDefault;

		[Token(Token = "0x4001123")]
		public const BlendingMode BlendingModeDefault = BlendingMode.Additive;

		[Token(Token = "0x4001124")]
		public const float FadeOutBeginDefault = -150f;

		[Token(Token = "0x4001125")]
		public const float FadeOutEndDefault = -200f;

		[Token(Token = "0x4001126")]
		public const OccluderDimensions DynOcclusionDimensionsDefault = OccluderDimensions.Occluders3D;

		[Token(Token = "0x4001127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly LayerMask DynOcclusionLayerMaskDefault;

		[Token(Token = "0x4001128")]
		public const bool DynOcclusionConsiderTriggersDefault = false;

		[Token(Token = "0x4001129")]
		public const float DynOcclusionMinOccluderAreaDefault = 0f;

		[Token(Token = "0x400112A")]
		public const int DynOcclusionWaitFrameCountDefault = 3;

		[Token(Token = "0x400112B")]
		public const float DynOcclusionMinSurfaceRatioDefault = 0.5f;

		[Token(Token = "0x400112C")]
		public const float DynOcclusionMinSurfaceRatioMin = 50f;

		[Token(Token = "0x400112D")]
		public const float DynOcclusionMinSurfaceRatioMax = 100f;

		[Token(Token = "0x400112E")]
		public const float DynOcclusionMaxSurfaceDotDefault = 0.25f;

		[Token(Token = "0x400112F")]
		public const float DynOcclusionMaxSurfaceAngleMin = 45f;

		[Token(Token = "0x4001130")]
		public const float DynOcclusionMaxSurfaceAngleMax = 90f;

		[Token(Token = "0x4001131")]
		public const PlaneAlignment DynOcclusionPlaneAlignmentDefault = PlaneAlignment.Surface;

		[Token(Token = "0x4001132")]
		public const float DynOcclusionPlaneOffsetDefault = 0.1f;

		[Token(Token = "0x4001133")]
		public const float DynOcclusionFadeDistanceToPlaneDefault = 0.25f;

		[Token(Token = "0x4001134")]
		public const bool ConfigGeometryOverrideLayerDefault = true;

		[Token(Token = "0x4001135")]
		public const int ConfigGeometryLayerIDDefault = 1;

		[Token(Token = "0x4001136")]
		public const string ConfigGeometryTagDefault = "Untagged";

		[Token(Token = "0x4001137")]
		public const string ConfigFadeOutCameraTagDefault = "MainCamera";

		[Token(Token = "0x4001138")]
		public const RenderQueue ConfigGeometryRenderQueueDefault = RenderQueue.Transparent;

		[Token(Token = "0x4001139")]
		public const RenderPipeline ConfigGeometryRenderPipelineDefault = RenderPipeline.BuiltIn;

		[Token(Token = "0x400113A")]
		public const RenderingMode ConfigGeometryRenderingModeDefault = RenderingMode.MultiPass;

		[Token(Token = "0x400113B")]
		public const int ConfigNoise3DSizeDefault = 64;

		[Token(Token = "0x400113C")]
		public const int ConfigSharedMeshSides = 24;

		[Token(Token = "0x400113D")]
		public const int ConfigSharedMeshSegments = 5;

		[Token(Token = "0x17000228")]
		public static HideFlags ProceduralObjectsHideFlags
		{
			[Token(Token = "0x60013FC")]
			[Address(RVA = "0x2E968A8", Offset = "0x2E968A8", VA = "0x2E968A8")]
			get
			{
				return default(HideFlags);
			}
		}
	}
	[Token(Token = "0x200026A")]
	[ExecuteInEditMode]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1466F20", Offset = "0x1466F20")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x1466F20", Offset = "0x1466F20")]
	public class DynamicOcclusion : MonoBehaviour
	{
		[Token(Token = "0x2000638")]
		public class HitResult
		{
			[Token(Token = "0x40024D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 point;

			[Token(Token = "0x40024D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 normal;

			[Token(Token = "0x40024DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float distance;

			[Token(Token = "0x40024DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Collider2D collider2D;

			[Token(Token = "0x40024DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Collider collider3D;

			[Token(Token = "0x1700053B")]
			public bool hasCollider
			{
				[Token(Token = "0x6002810")]
				[Address(RVA = "0x2E9A3B8", Offset = "0x2E9A3B8", VA = "0x2E9A3B8")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700053C")]
			public string name
			{
				[Token(Token = "0x6002811")]
				[Address(RVA = "0x2E9A7A8", Offset = "0x2E9A7A8", VA = "0x2E9A7A8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700053D")]
			public Bounds bounds
			{
				[Token(Token = "0x6002812")]
				[Address(RVA = "0x2E9A884", Offset = "0x2E9A884", VA = "0x2E9A884")]
				get
				{
					return default(Bounds);
				}
			}

			[Token(Token = "0x600280D")]
			[Address(RVA = "0x2E99E78", Offset = "0x2E99E78", VA = "0x2E99E78")]
			public HitResult(RaycastHit hit3D)
			{
			}

			[Token(Token = "0x600280E")]
			[Address(RVA = "0x2E99FAC", Offset = "0x2E99FAC", VA = "0x2E99FAC")]
			public HitResult(RaycastHit2D hit2D)
			{
			}

			[Token(Token = "0x600280F")]
			[Address(RVA = "0x2E99F00", Offset = "0x2E99F00", VA = "0x2E99F00")]
			public HitResult()
			{
			}
		}

		[Token(Token = "0x2000639")]
		private enum Direction
		{
			[Token(Token = "0x40024DE")]
			Up,
			[Token(Token = "0x40024DF")]
			Right,
			[Token(Token = "0x40024E0")]
			Down,
			[Token(Token = "0x40024E1")]
			Left
		}

		[Token(Token = "0x400113E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public OccluderDimensions dimensions;

		[Token(Token = "0x400113F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public LayerMask layerMask;

		[Token(Token = "0x4001140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool considerTriggers;

		[Token(Token = "0x4001141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float minOccluderArea;

		[Token(Token = "0x4001142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int waitFrameCount;

		[Token(Token = "0x4001143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float minSurfaceRatio;

		[Token(Token = "0x4001144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float maxSurfaceDot;

		[Token(Token = "0x4001145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public PlaneAlignment planeAlignment;

		[Token(Token = "0x4001146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float planeOffset;

		[Token(Token = "0x4001147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float fadeDistanceToPlane;

		[Token(Token = "0x4001148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1473EEC", Offset = "0x1473EEC")]
		private HitResult <currentHit>k__BackingField;

		[Token(Token = "0x4001149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private VolumetricLightBeam m_Master;

		[Token(Token = "0x400114A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_FrameCountToWait;

		[Token(Token = "0x400114B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float m_RangeMultiplier;

		[Token(Token = "0x400114C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1473EFC", Offset = "0x1473EFC")]
		private Plane <planeEquationWS>k__BackingField;

		[Token(Token = "0x400114D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private uint m_PrevNonSubHitDirectionId;

		[Token(Token = "0x17000229")]
		public HitResult currentHit
		{
			[Token(Token = "0x60013FF")]
			[Address(RVA = "0x2E9916C", Offset = "0x2E9916C", VA = "0x2E9916C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14843F4", Offset = "0x14843F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001400")]
			[Address(RVA = "0x2E99174", Offset = "0x2E99174", VA = "0x2E99174")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1484404", Offset = "0x1484404")]
			private set
			{
			}
		}

		[Token(Token = "0x1700022A")]
		public Plane planeEquationWS
		{
			[Token(Token = "0x6001401")]
			[Address(RVA = "0x2E9917C", Offset = "0x2E9917C", VA = "0x2E9917C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1484414", Offset = "0x1484414")]
			get
			{
				return default(Plane);
			}
			[Token(Token = "0x6001402")]
			[Address(RVA = "0x2E99188", Offset = "0x2E99188", VA = "0x2E99188")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1484424", Offset = "0x1484424")]
			private set
			{
			}
		}

		[Token(Token = "0x1700022B")]
		private QueryTriggerInteraction queryTriggerInteraction
		{
			[Token(Token = "0x6001409")]
			[Address(RVA = "0x2E9990C", Offset = "0x2E9990C", VA = "0x2E9990C")]
			get
			{
				return default(QueryTriggerInteraction);
			}
		}

		[Token(Token = "0x1700022C")]
		private float raycastMaxDistance
		{
			[Token(Token = "0x600140A")]
			[Address(RVA = "0x2E99920", Offset = "0x2E99920", VA = "0x2E99920")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60013FE")]
		[Address(RVA = "0x2E99044", Offset = "0x2E99044", VA = "0x2E99044")]
		public bool IsColliderHiddenByDynamicOccluder(Collider collider)
		{
			return default(bool);
		}

		[Token(Token = "0x6001403")]
		[Address(RVA = "0x2E99194", Offset = "0x2E99194", VA = "0x2E99194")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001404")]
		[Address(RVA = "0x2E99240", Offset = "0x2E99240", VA = "0x2E99240")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001405")]
		[Address(RVA = "0x2E992B0", Offset = "0x2E992B0", VA = "0x2E992B0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001406")]
		[Address(RVA = "0x2E99308", Offset = "0x2E99308", VA = "0x2E99308")]
		private void Start()
		{
		}

		[Token(Token = "0x6001407")]
		[Address(RVA = "0x2E993E8", Offset = "0x2E993E8", VA = "0x2E993E8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001408")]
		[Address(RVA = "0x2E99810", Offset = "0x2E99810", VA = "0x2E99810")]
		private Vector3 GetRandomVectorAround(Vector3 direction, float angleDiff)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600140B")]
		[Address(RVA = "0x2E99968", Offset = "0x2E99968", VA = "0x2E99968")]
		private HitResult GetBestHit(Vector3 rayPos, Vector3 rayDir)
		{
			return null;
		}

		[Token(Token = "0x600140C")]
		[Address(RVA = "0x2E9997C", Offset = "0x2E9997C", VA = "0x2E9997C")]
		private HitResult GetBestHit3D(Vector3 rayPos, Vector3 rayDir)
		{
			return null;
		}

		[Token(Token = "0x600140D")]
		[Address(RVA = "0x2E99BD0", Offset = "0x2E99BD0", VA = "0x2E99BD0")]
		private HitResult GetBestHit2D(Vector3 rayPos, Vector3 rayDir)
		{
			return null;
		}

		[Token(Token = "0x600140E")]
		[Address(RVA = "0x2E9A0AC", Offset = "0x2E9A0AC", VA = "0x2E9A0AC")]
		private Vector3 GetDirection(uint dirInt)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600140F")]
		[Address(RVA = "0x2E9A2AC", Offset = "0x2E9A2AC", VA = "0x2E9A2AC")]
		private bool IsHitValid(HitResult hit)
		{
			return default(bool);
		}

		[Token(Token = "0x6001410")]
		[Address(RVA = "0x2E99428", Offset = "0x2E99428", VA = "0x2E99428")]
		private void ProcessRaycasts()
		{
		}

		[Token(Token = "0x6001411")]
		[Address(RVA = "0x2E9A46C", Offset = "0x2E9A46C", VA = "0x2E9A46C")]
		private void SetHit(HitResult hit)
		{
		}

		[Token(Token = "0x6001412")]
		[Address(RVA = "0x2E992DC", Offset = "0x2E992DC", VA = "0x2E992DC")]
		private void SetHitNull()
		{
		}

		[Token(Token = "0x6001413")]
		[Address(RVA = "0x2E9A588", Offset = "0x2E9A588", VA = "0x2E9A588")]
		private void SetClippingPlane(Plane planeWS)
		{
		}

		[Token(Token = "0x6001414")]
		[Address(RVA = "0x2E9A6D4", Offset = "0x2E9A6D4", VA = "0x2E9A6D4")]
		private void SetClippingPlaneOff()
		{
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0x2E9A6FC", Offset = "0x2E9A6FC", VA = "0x2E9A6FC")]
		private void SetPlaneWS(Plane planeWS)
		{
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0x2E9A708", Offset = "0x2E9A708", VA = "0x2E9A708")]
		public DynamicOcclusion()
		{
		}
	}
	[Token(Token = "0x200026B")]
	public enum ColorMode
	{
		[Token(Token = "0x400114F")]
		Flat,
		[Token(Token = "0x4001150")]
		Gradient
	}
	[Token(Token = "0x200026C")]
	public enum AttenuationEquation
	{
		[Token(Token = "0x4001152")]
		Linear,
		[Token(Token = "0x4001153")]
		Quadratic,
		[Token(Token = "0x4001154")]
		Blend
	}
	[Token(Token = "0x200026D")]
	public enum BlendingMode
	{
		[Token(Token = "0x4001156")]
		Additive,
		[Token(Token = "0x4001157")]
		SoftAdditive,
		[Token(Token = "0x4001158")]
		TraditionalTransparency
	}
	[Token(Token = "0x200026E")]
	public enum NoiseMode
	{
		[Token(Token = "0x400115A")]
		Disabled,
		[Token(Token = "0x400115B")]
		WorldSpace,
		[Token(Token = "0x400115C")]
		LocalSpace
	}
	[Token(Token = "0x200026F")]
	public enum MeshType
	{
		[Token(Token = "0x400115E")]
		Shared,
		[Token(Token = "0x400115F")]
		Custom
	}
	[Token(Token = "0x2000270")]
	public enum RenderPipeline
	{
		[Token(Token = "0x4001161")]
		BuiltIn,
		[Token(Token = "0x4001162")]
		SRP_4_0_0_or_higher
	}
	[Token(Token = "0x2000271")]
	public enum RenderingMode
	{
		[Token(Token = "0x4001164")]
		MultiPass,
		[Token(Token = "0x4001165")]
		SinglePass,
		[Token(Token = "0x4001166")]
		GPUInstancing
	}
	[Token(Token = "0x2000272")]
	public enum RenderQueue
	{
		[Token(Token = "0x4001168")]
		Custom = 0,
		[Token(Token = "0x4001169")]
		Background = 1000,
		[Token(Token = "0x400116A")]
		Geometry = 2000,
		[Token(Token = "0x400116B")]
		AlphaTest = 2450,
		[Token(Token = "0x400116C")]
		GeometryLast = 2500,
		[Token(Token = "0x400116D")]
		Transparent = 3000,
		[Token(Token = "0x400116E")]
		Overlay = 4000
	}
	[Token(Token = "0x2000273")]
	public enum OccluderDimensions
	{
		[Token(Token = "0x4001170")]
		Occluders3D,
		[Token(Token = "0x4001171")]
		Occluders2D
	}
	[Token(Token = "0x2000274")]
	public enum PlaneAlignment
	{
		[Token(Token = "0x4001173")]
		Surface,
		[Token(Token = "0x4001174")]
		Beam
	}
	[Token(Token = "0x2000275")]
	public static class GlobalMesh
	{
		[Token(Token = "0x4001175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Mesh ms_Mesh;

		[Token(Token = "0x4001176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool ms_DoubleSided;

		[Token(Token = "0x6001417")]
		[Address(RVA = "0x2E96E30", Offset = "0x2E96E30", VA = "0x2E96E30")]
		public static Mesh Get()
		{
			return null;
		}

		[Token(Token = "0x6001418")]
		[Address(RVA = "0x2E9A97C", Offset = "0x2E9A97C", VA = "0x2E9A97C")]
		public static void Destroy()
		{
		}
	}
	[Token(Token = "0x2000276")]
	public static class GpuInstancing
	{
		[Token(Token = "0x4001177")]
		public const bool isSupported = true;

		[Token(Token = "0x1700022D")]
		public static bool forceEnableDepthBlend
		{
			[Token(Token = "0x600141A")]
			[Address(RVA = "0x2A7E080", Offset = "0x2A7E080", VA = "0x2A7E080")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600141B")]
		[Address(RVA = "0x2A7E0FC", Offset = "0x2A7E0FC", VA = "0x2A7E0FC")]
		public static void SetMaterialProperties(Material material, bool enableInstancing)
		{
		}

		[Token(Token = "0x600141C")]
		[Address(RVA = "0x2A7E1BC", Offset = "0x2A7E1BC", VA = "0x2A7E1BC")]
		public static bool CanBeBatched(VolumetricLightBeam beamA, VolumetricLightBeam beamB, ref string reasons)
		{
			return default(bool);
		}

		[Token(Token = "0x600141D")]
		[Address(RVA = "0x2A7E308", Offset = "0x2A7E308", VA = "0x2A7E308")]
		public static bool CanBeBatched(VolumetricLightBeam beam, ref string reason)
		{
			return default(bool);
		}

		[Token(Token = "0x600141E")]
		[Address(RVA = "0x2A7E42C", Offset = "0x2A7E42C", VA = "0x2A7E42C")]
		private static void AppendErrorMessage(ref string message, string toAppend)
		{
		}
	}
	[Token(Token = "0x2000277")]
	public sealed class HighlightNullAttribute : PropertyAttribute
	{
		[Token(Token = "0x600141F")]
		[Address(RVA = "0x2A7E4F4", Offset = "0x2A7E4F4", VA = "0x2A7E4F4")]
		public HighlightNullAttribute()
		{
		}
	}
	[Token(Token = "0x2000278")]
	public class MaterialKeywordSRP
	{
		[Token(Token = "0x4001178")]
		public const string kKeyword = "VLB_SRP_API";

		[Token(Token = "0x6001420")]
		[Address(RVA = "0x2A7E4FC", Offset = "0x2A7E4FC", VA = "0x2A7E4FC")]
		public MaterialKeywordSRP()
		{
		}
	}
	[Token(Token = "0x2000279")]
	public static class MaterialManager
	{
		[Token(Token = "0x200063A")]
		public enum BlendingMode
		{
			[Token(Token = "0x40024E3")]
			Additive,
			[Token(Token = "0x40024E4")]
			SoftAdditive,
			[Token(Token = "0x40024E5")]
			TraditionalTransparency,
			[Token(Token = "0x40024E6")]
			Count
		}

		[Token(Token = "0x200063B")]
		public enum Noise3D
		{
			[Token(Token = "0x40024E8")]
			Off,
			[Token(Token = "0x40024E9")]
			On,
			[Token(Token = "0x40024EA")]
			Count
		}

		[Token(Token = "0x200063C")]
		public enum DepthBlend
		{
			[Token(Token = "0x40024EC")]
			Off,
			[Token(Token = "0x40024ED")]
			On,
			[Token(Token = "0x40024EE")]
			Count
		}

		[Token(Token = "0x200063D")]
		public enum ColorGradient
		{
			[Token(Token = "0x40024F0")]
			Off,
			[Token(Token = "0x40024F1")]
			MatrixLow,
			[Token(Token = "0x40024F2")]
			MatrixHigh,
			[Token(Token = "0x40024F3")]
			Count
		}

		[Token(Token = "0x200063E")]
		public enum ClippingPlane
		{
			[Token(Token = "0x40024F5")]
			Off,
			[Token(Token = "0x40024F6")]
			On,
			[Token(Token = "0x40024F7")]
			Count
		}

		[Token(Token = "0x200063F")]
		public class StaticProperties
		{
			[Token(Token = "0x40024F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public BlendingMode blendingMode;

			[Token(Token = "0x40024F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Noise3D noise3D;

			[Token(Token = "0x40024FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public DepthBlend depthBlend;

			[Token(Token = "0x40024FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public ColorGradient colorGradient;

			[Token(Token = "0x40024FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ClippingPlane clippingPlane;

			[Token(Token = "0x1700053E")]
			public int materialID
			{
				[Token(Token = "0x6002813")]
				[Address(RVA = "0x2A7E9C8", Offset = "0x2A7E9C8", VA = "0x2A7E9C8")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x6002814")]
			[Address(RVA = "0x2A7E9EC", Offset = "0x2A7E9EC", VA = "0x2A7E9EC")]
			public void ApplyToMaterial(Material mat)
			{
			}

			[Token(Token = "0x6002815")]
			[Address(RVA = "0x2A7ED98", Offset = "0x2A7ED98", VA = "0x2A7ED98")]
			public StaticProperties()
			{
			}
		}

		[Token(Token = "0x2000640")]
		private class MaterialsGroup
		{
			[Token(Token = "0x40024FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Material[] materials;

			[Token(Token = "0x6002816")]
			[Address(RVA = "0x2A7E934", Offset = "0x2A7E934", VA = "0x2A7E934")]
			public MaterialsGroup()
			{
			}
		}

		[Token(Token = "0x4001179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static MaterialPropertyBlock materialPropertyBlock;

		[Token(Token = "0x400117A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly BlendMode[] BlendingMode_SrcFactor;

		[Token(Token = "0x400117B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly BlendMode[] BlendingMode_DstFactor;

		[Token(Token = "0x400117C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly bool[] BlendingMode_AlphaAsBlack;

		[Token(Token = "0x400117D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static int kStaticPropertiesCount;

		[Token(Token = "0x400117E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Hashtable ms_MaterialsGroup;

		[Token(Token = "0x6001421")]
		[Address(RVA = "0x2A7E504", Offset = "0x2A7E504", VA = "0x2A7E504")]
		public static Material NewMaterial(bool gpuInstanced)
		{
			return null;
		}

		[Token(Token = "0x6001422")]
		[Address(RVA = "0x2A7E698", Offset = "0x2A7E698", VA = "0x2A7E698")]
		public static Material GetInstancedMaterial(uint groupID, StaticProperties staticProps)
		{
			return null;
		}
	}
	[Token(Token = "0x200027A")]
	public static class MeshGenerator
	{
		[Token(Token = "0x400117F")]
		private const float kMinTruncatedRadius = 0.001f;

		[Token(Token = "0x6001424")]
		[Address(RVA = "0x2A7EDA0", Offset = "0x2A7EDA0", VA = "0x2A7EDA0")]
		private static float GetAngleOffset(int numSides)
		{
			return default(float);
		}

		[Token(Token = "0x6001425")]
		[Address(RVA = "0x2A7EDB8", Offset = "0x2A7EDB8", VA = "0x2A7EDB8")]
		public static Mesh GenerateConeZ_RadiusAndAngle(float lengthZ, float radiusStart, float coneAngle, int numSides, int numSegments, bool cap, bool doubleSided)
		{
			return null;
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0x2A7F860", Offset = "0x2A7F860", VA = "0x2A7F860")]
		public static Mesh GenerateConeZ_Angle(float lengthZ, float coneAngle, int numSides, int numSegments, bool cap, bool doubleSided)
		{
			return null;
		}

		[Token(Token = "0x6001427")]
		[Address(RVA = "0x2A7EE84", Offset = "0x2A7EE84", VA = "0x2A7EE84")]
		public static Mesh GenerateConeZ_Radius(float lengthZ, float radiusStart, float radiusEnd, int numSides, int numSegments, bool cap, bool doubleSided)
		{
			return null;
		}

		[Token(Token = "0x6001428")]
		[Address(RVA = "0x2A7F874", Offset = "0x2A7F874", VA = "0x2A7F874")]
		public static int GetVertexCount(int numSides, int numSegments, bool geomCap, bool doubleSided)
		{
			return default(int);
		}

		[Token(Token = "0x6001429")]
		[Address(RVA = "0x2A7F890", Offset = "0x2A7F890", VA = "0x2A7F890")]
		public static int GetIndicesCount(int numSides, int numSegments, bool geomCap, bool doubleSided)
		{
			return default(int);
		}

		[Token(Token = "0x600142A")]
		[Address(RVA = "0x2A7F8B8", Offset = "0x2A7F8B8", VA = "0x2A7F8B8")]
		public static int GetSharedMeshVertexCount()
		{
			return default(int);
		}

		[Token(Token = "0x600142B")]
		[Address(RVA = "0x2A7F960", Offset = "0x2A7F960", VA = "0x2A7F960")]
		public static int GetSharedMeshIndicesCount()
		{
			return default(int);
		}
	}
	[Token(Token = "0x200027B")]
	public static class Noise3D
	{
		[Token(Token = "0x4001180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool ms_IsSupportedChecked;

		[Token(Token = "0x4001181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		private static bool ms_IsSupported;

		[Token(Token = "0x4001182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Texture3D ms_NoiseTexture;

		[Token(Token = "0x4001183")]
		private const HideFlags kHideFlags = HideFlags.HideAndDontSave;

		[Token(Token = "0x4001184")]
		private const int kMinShaderLevel = 35;

		[Token(Token = "0x1700022E")]
		public static bool isSupported
		{
			[Token(Token = "0x600142C")]
			[Address(RVA = "0x2A7FA0C", Offset = "0x2A7FA0C", VA = "0x2A7FA0C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700022F")]
		public static bool isProperlyLoaded
		{
			[Token(Token = "0x600142D")]
			[Address(RVA = "0x2A7FBFC", Offset = "0x2A7FBFC", VA = "0x2A7FBFC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000230")]
		public static string isNotSupportedString
		{
			[Token(Token = "0x600142E")]
			[Address(RVA = "0x2A7FB5C", Offset = "0x2A7FB5C", VA = "0x2A7FB5C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600142F")]
		[Address(RVA = "0x2A7FC94", Offset = "0x2A7FC94", VA = "0x2A7FC94")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x1484434", Offset = "0x1484434")]
		private static void OnStartUp()
		{
		}

		[Token(Token = "0x6001430")]
		[Address(RVA = "0x2A7FCF0", Offset = "0x2A7FCF0", VA = "0x2A7FCF0")]
		public static void LoadIfNeeded()
		{
		}

		[Token(Token = "0x6001431")]
		[Address(RVA = "0x2A7FF30", Offset = "0x2A7FF30", VA = "0x2A7FF30")]
		private static Texture3D LoadTexture3D(TextAsset textData, int size)
		{
			return null;
		}
	}
	[Token(Token = "0x200027C")]
	public static class ShaderProperties
	{
		[Token(Token = "0x4001185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int FadeOutFactor;

		[Token(Token = "0x4001186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly int ClippingPlaneWS;

		[Token(Token = "0x4001187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly int ClippingPlaneProps;

		[Token(Token = "0x4001188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static readonly int ConeSlopeCosSin;

		[Token(Token = "0x4001189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly int ConeRadius;

		[Token(Token = "0x400118A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static readonly int ConeApexOffsetZ;

		[Token(Token = "0x400118B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly int ColorFlat;

		[Token(Token = "0x400118C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static readonly int AlphaInside;

		[Token(Token = "0x400118D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly int AlphaOutside;

		[Token(Token = "0x400118E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static readonly int AttenuationLerpLinearQuad;

		[Token(Token = "0x400118F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static readonly int DistanceFadeStart;

		[Token(Token = "0x4001190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public static readonly int DistanceFadeEnd;

		[Token(Token = "0x4001191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static readonly int DistanceCamClipping;

		[Token(Token = "0x4001192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public static readonly int FresnelPow;

		[Token(Token = "0x4001193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static readonly int GlareBehind;

		[Token(Token = "0x4001194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public static readonly int GlareFrontal;

		[Token(Token = "0x4001195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static readonly int DrawCap;

		[Token(Token = "0x4001196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public static readonly int DepthBlendDistance;

		[Token(Token = "0x4001197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static readonly int NoiseLocal;

		[Token(Token = "0x4001198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public static readonly int NoiseParam;

		[Token(Token = "0x4001199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static readonly int CameraParams;

		[Token(Token = "0x400119A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public static readonly int CameraBufferSizeSRP;

		[Token(Token = "0x400119B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static readonly int ColorGradientMatrix;

		[Token(Token = "0x400119C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public static readonly int LocalToWorldMatrix;

		[Token(Token = "0x400119D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static readonly int WorldToLocalMatrix;

		[Token(Token = "0x400119E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public static readonly int BlendSrcFactor;

		[Token(Token = "0x400119F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public static readonly int BlendDstFactor;
	}
	[Token(Token = "0x200027D")]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1466FC8", Offset = "0x1466FC8")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x1466FC8", Offset = "0x1466FC8")]
	public class TriggerZone : MonoBehaviour
	{
		[Token(Token = "0x40011A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool setIsTrigger;

		[Token(Token = "0x40011A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float rangeMultiplier;

		[Token(Token = "0x40011A2")]
		private const int kMeshColliderNumSides = 8;

		[Token(Token = "0x40011A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Mesh m_Mesh;

		[Token(Token = "0x6001434")]
		[Address(RVA = "0x2A80628", Offset = "0x2A80628", VA = "0x2A80628")]
		private void Update()
		{
		}

		[Token(Token = "0x6001435")]
		[Address(RVA = "0x2A808D4", Offset = "0x2A808D4", VA = "0x2A808D4")]
		public TriggerZone()
		{
		}
	}
	[Token(Token = "0x200027E")]
	public static class Utils
	{
		[Token(Token = "0x2000641")]
		public enum FloatPackingPrecision
		{
			[Token(Token = "0x40024FF")]
			High = 64,
			[Token(Token = "0x4002500")]
			Low = 8,
			[Token(Token = "0x4002501")]
			Undef = 0
		}

		[Token(Token = "0x40011A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static FloatPackingPrecision ms_FloatPackingPrecision;

		[Token(Token = "0x40011A5")]
		private const int kFloatPackingHighMinShaderLevel = 35;

		[Token(Token = "0x6001436")]
		[Address(RVA = "0x2A808EC", Offset = "0x2A808EC", VA = "0x2A808EC")]
		public static float ComputeConeRadiusEnd(float fallOffEnd, float spotAngle)
		{
			return default(float);
		}

		[Token(Token = "0x6001437")]
		public static void Swap<T>(ref T a, ref T b)
		{
		}

		[Token(Token = "0x6001438")]
		[Address(RVA = "0x2A80974", Offset = "0x2A80974", VA = "0x2A80974")]
		public static string GetPath(Transform current)
		{
			return null;
		}

		[Token(Token = "0x6001439")]
		public static T NewWithComponent<T>(string name) where T : Component
		{
			return null;
		}

		[Token(Token = "0x600143A")]
		public static T GetOrAddComponent<T>(this GameObject self) where T : Component
		{
			return null;
		}

		[Token(Token = "0x600143B")]
		public static T GetOrAddComponent<T>(this MonoBehaviour self) where T : Component
		{
			return null;
		}

		[Token(Token = "0x600143C")]
		[Address(RVA = "0x2A80A98", Offset = "0x2A80A98", VA = "0x2A80A98")]
		public static bool HasFlag(this Enum mask, Enum flags)
		{
			return default(bool);
		}

		[Token(Token = "0x600143D")]
		[Address(RVA = "0x2A80B7C", Offset = "0x2A80B7C", VA = "0x2A80B7C")]
		public static Vector2 xy(this Vector3 aVector)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600143E")]
		[Address(RVA = "0x2A80BA8", Offset = "0x2A80BA8", VA = "0x2A80BA8")]
		public static Vector2 xz(this Vector3 aVector)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600143F")]
		[Address(RVA = "0x2A80BD8", Offset = "0x2A80BD8", VA = "0x2A80BD8")]
		public static Vector2 yz(this Vector3 aVector)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001440")]
		[Address(RVA = "0x2A80C0C", Offset = "0x2A80C0C", VA = "0x2A80C0C")]
		public static Vector2 yx(this Vector3 aVector)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001441")]
		[Address(RVA = "0x2A80C44", Offset = "0x2A80C44", VA = "0x2A80C44")]
		public static Vector2 zx(this Vector3 aVector)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001442")]
		[Address(RVA = "0x2A80C78", Offset = "0x2A80C78", VA = "0x2A80C78")]
		public static Vector2 zy(this Vector3 aVector)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001443")]
		[Address(RVA = "0x2A80CA8", Offset = "0x2A80CA8", VA = "0x2A80CA8")]
		public static float GetVolumeCubic(this Bounds self)
		{
			return default(float);
		}

		[Token(Token = "0x6001444")]
		[Address(RVA = "0x2A80CFC", Offset = "0x2A80CFC", VA = "0x2A80CFC")]
		public static float GetMaxArea2D(this Bounds self)
		{
			return default(float);
		}

		[Token(Token = "0x6001445")]
		[Address(RVA = "0x2A80DE8", Offset = "0x2A80DE8", VA = "0x2A80DE8")]
		public static UnityEngine.Color Opaque(this UnityEngine.Color self)
		{
			return default(UnityEngine.Color);
		}

		[Token(Token = "0x6001446")]
		[Address(RVA = "0x2A80E1C", Offset = "0x2A80E1C", VA = "0x2A80E1C")]
		public static void GizmosDrawPlane(Vector3 normal, Vector3 position, UnityEngine.Color color, float size = 1f)
		{
		}

		[Token(Token = "0x6001447")]
		[Address(RVA = "0x2A81230", Offset = "0x2A81230", VA = "0x2A81230")]
		public static Plane TranslateCustom(this Plane plane, Vector3 translation)
		{
			return default(Plane);
		}

		[Token(Token = "0x6001448")]
		[Address(RVA = "0x2A81350", Offset = "0x2A81350", VA = "0x2A81350")]
		public static bool IsValid(this Plane plane)
		{
			return default(bool);
		}

		[Token(Token = "0x6001449")]
		[Address(RVA = "0x2A7E198", Offset = "0x2A7E198", VA = "0x2A7E198")]
		public static void SetKeywordEnabled(this Material mat, string name, bool enabled)
		{
		}

		[Token(Token = "0x600144A")]
		[Address(RVA = "0x2A8139C", Offset = "0x2A8139C", VA = "0x2A8139C")]
		public static void SetShaderKeywordEnabled(string name, bool enabled)
		{
		}

		[Token(Token = "0x600144B")]
		[Address(RVA = "0x2A813B0", Offset = "0x2A813B0", VA = "0x2A813B0")]
		public static Matrix4x4 SampleInMatrix(this Gradient self, int floatPackingPrecision)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x600144C")]
		[Address(RVA = "0x2A815FC", Offset = "0x2A815FC", VA = "0x2A815FC")]
		public static UnityEngine.Color[] SampleInArray(this Gradient self, int samplesCount)
		{
			return null;
		}

		[Token(Token = "0x600144D")]
		[Address(RVA = "0x2A81704", Offset = "0x2A81704", VA = "0x2A81704")]
		private static Vector4 Vector4_Floor(Vector4 vec)
		{
			return default(Vector4);
		}

		[Token(Token = "0x600144E")]
		[Address(RVA = "0x2A81500", Offset = "0x2A81500", VA = "0x2A81500")]
		public static float PackToFloat(this UnityEngine.Color color, int floatPackingPrecision)
		{
			return default(float);
		}

		[Token(Token = "0x600144F")]
		[Address(RVA = "0x2A817B0", Offset = "0x2A817B0", VA = "0x2A817B0")]
		public static FloatPackingPrecision GetFloatPackingPrecision()
		{
			return default(FloatPackingPrecision);
		}

		[Token(Token = "0x6001450")]
		[Address(RVA = "0x2A81880", Offset = "0x2A81880", VA = "0x2A81880")]
		public static void MarkCurrentSceneDirty()
		{
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0x2A81884", Offset = "0x2A81884", VA = "0x2A81884")]
		public static void MarkObjectDirty(UnityEngine.Object obj)
		{
		}
	}
	[Token(Token = "0x200027F")]
	public static class Version
	{
		[Token(Token = "0x40011A6")]
		public const int Current = 1764;
	}
	[Token(Token = "0x2000280")]
	[ExecuteInEditMode]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1467070", Offset = "0x1467070")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x1467070", Offset = "0x1467070")]
	public class VolumetricDustParticles : MonoBehaviour
	{
		[Token(Token = "0x2000642")]
		public enum Direction
		{
			[Token(Token = "0x4002503")]
			Beam,
			[Token(Token = "0x4002504")]
			Random
		}

		[Token(Token = "0x40011A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1473F0C", Offset = "0x1473F0C")]
		public float alpha;

		[Token(Token = "0x40011A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1473F24", Offset = "0x1473F24")]
		public float size;

		[Token(Token = "0x40011A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Direction direction;

		[Token(Token = "0x40011AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float speed;

		[Token(Token = "0x40011AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float density;

		[Token(Token = "0x40011AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1473F44", Offset = "0x1473F44")]
		public float spawnMinDistance;

		[Token(Token = "0x40011AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1473F5C", Offset = "0x1473F5C")]
		public float spawnMaxDistance;

		[Token(Token = "0x40011AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool cullingEnabled;

		[Token(Token = "0x40011AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float cullingMaxDistance;

		[Token(Token = "0x40011B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1473F74", Offset = "0x1473F74")]
		private bool <isCulled>k__BackingField;

		[Token(Token = "0x40011B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool isFeatureSupported;

		[Token(Token = "0x40011B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ParticleSystem m_Particles;

		[Token(Token = "0x40011B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ParticleSystemRenderer m_Renderer;

		[Token(Token = "0x40011B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		private static bool ms_NoMainCameraLogged;

		[Token(Token = "0x40011B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Camera ms_MainCamera;

		[Token(Token = "0x40011B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private VolumetricLightBeam m_Master;

		[Token(Token = "0x17000231")]
		public bool isCulled
		{
			[Token(Token = "0x6001453")]
			[Address(RVA = "0x2A8188C", Offset = "0x2A8188C", VA = "0x2A8188C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1484564", Offset = "0x1484564")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001454")]
			[Address(RVA = "0x2A81894", Offset = "0x2A81894", VA = "0x2A81894")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1484574", Offset = "0x1484574")]
			private set
			{
			}
		}

		[Token(Token = "0x17000232")]
		public bool particlesAreInstantiated
		{
			[Token(Token = "0x6001455")]
			[Address(RVA = "0x2A818A0", Offset = "0x2A818A0", VA = "0x2A818A0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000233")]
		public int particlesCurrentCount
		{
			[Token(Token = "0x6001456")]
			[Address(RVA = "0x2A8190C", Offset = "0x2A8190C", VA = "0x2A8190C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000234")]
		public int particlesMaxCount
		{
			[Token(Token = "0x6001457")]
			[Address(RVA = "0x2A819A0", Offset = "0x2A819A0", VA = "0x2A819A0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000235")]
		public Camera mainCamera
		{
			[Token(Token = "0x6001458")]
			[Address(RVA = "0x2A81A4C", Offset = "0x2A81A4C", VA = "0x2A81A4C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001459")]
		[Address(RVA = "0x2A81CB0", Offset = "0x2A81CB0", VA = "0x2A81CB0")]
		private void Start()
		{
		}

		[Token(Token = "0x600145A")]
		[Address(RVA = "0x2A81D24", Offset = "0x2A81D24", VA = "0x2A81D24")]
		private void InstantiateParticleSystem()
		{
		}

		[Token(Token = "0x600145B")]
		[Address(RVA = "0x2A81FC4", Offset = "0x2A81FC4", VA = "0x2A81FC4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600145C")]
		[Address(RVA = "0x2A81F08", Offset = "0x2A81F08", VA = "0x2A81F08")]
		private void SetActiveAndPlay()
		{
		}

		[Token(Token = "0x600145D")]
		[Address(RVA = "0x2A8269C", Offset = "0x2A8269C", VA = "0x2A8269C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600145E")]
		[Address(RVA = "0x2A8273C", Offset = "0x2A8273C", VA = "0x2A8273C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600145F")]
		[Address(RVA = "0x2A82804", Offset = "0x2A82804", VA = "0x2A82804")]
		private void Update()
		{
		}

		[Token(Token = "0x6001460")]
		[Address(RVA = "0x2A81FC8", Offset = "0x2A81FC8", VA = "0x2A81FC8")]
		private void SetParticleProperties()
		{
		}

		[Token(Token = "0x6001461")]
		[Address(RVA = "0x2A82838", Offset = "0x2A82838", VA = "0x2A82838")]
		private void UpdateCulling()
		{
		}

		[Token(Token = "0x6001462")]
		[Address(RVA = "0x2A82CD4", Offset = "0x2A82CD4", VA = "0x2A82CD4")]
		public VolumetricDustParticles()
		{
		}
	}
	[Token(Token = "0x2000281")]
	[ExecuteInEditMode]
	[DisallowMultipleComponent]
	[SelectionBase]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x1467118", Offset = "0x1467118")]
	public class VolumetricLightBeam : MonoBehaviour
	{
		[Token(Token = "0x2000643")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A5DC", Offset = "0x146A5DC")]
		private sealed class <CoPlaytimeUpdate>d__133 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002505")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002506")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002507")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VolumetricLightBeam <>4__this;

			[Token(Token = "0x1700053F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600281A")]
				[Address(RVA = "0x2A846B4", Offset = "0x2A846B4", VA = "0x2A846B4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000540")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600281C")]
				[Address(RVA = "0x2A8471C", Offset = "0x2A8471C", VA = "0x2A8471C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002817")]
			[Address(RVA = "0x2A84124", Offset = "0x2A84124", VA = "0x2A84124")]
			[DebuggerHidden]
			public <CoPlaytimeUpdate>d__133(int <>1__state)
			{
			}

			[Token(Token = "0x6002818")]
			[Address(RVA = "0x2A8461C", Offset = "0x2A8461C", VA = "0x2A8461C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002819")]
			[Address(RVA = "0x2A84620", Offset = "0x2A84620", VA = "0x2A84620", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600281B")]
			[Address(RVA = "0x2A846BC", Offset = "0x2A846BC", VA = "0x2A846BC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40011B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool colorFromLight;

		[Token(Token = "0x40011B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ColorMode colorMode;

		[Token(Token = "0x40011B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x1473F84", Offset = "0x1473F84")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x1473F84", Offset = "0x1473F84")]
		public UnityEngine.Color color;

		[Token(Token = "0x40011BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Gradient colorGradient;

		[Token(Token = "0x40011BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool intensityFromLight;

		[Token(Token = "0x40011BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool intensityModeAdvanced;

		[Token(Token = "0x40011BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x1473FD8", Offset = "0x1473FD8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1473FD8", Offset = "0x1473FD8")]
		public float intensityInside;

		[Token(Token = "0x40011BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x147402C", Offset = "0x147402C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x147402C", Offset = "0x147402C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x147402C", Offset = "0x147402C")]
		public float intensityOutside;

		[Token(Token = "0x40011BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public BlendingMode blendingMode;

		[Token(Token = "0x40011C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x14740A4", Offset = "0x14740A4")]
		public bool spotAngleFromLight;

		[Token(Token = "0x40011C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x14740DC", Offset = "0x14740DC")]
		public float spotAngle;

		[Token(Token = "0x40011C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x14740FC", Offset = "0x14740FC")]
		public float coneRadiusStart;

		[Token(Token = "0x40011C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public MeshType geomMeshType;

		[Token(Token = "0x40011C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x1474134", Offset = "0x1474134")]
		public int geomCustomSides;

		[Token(Token = "0x40011C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int geomCustomSegments;

		[Token(Token = "0x40011C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool geomCap;

		[Token(Token = "0x40011C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x147416C", Offset = "0x147416C")]
		public bool fallOffEndFromLight;

		[Token(Token = "0x40011C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public AttenuationEquation attenuationEquation;

		[Token(Token = "0x40011C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x14741A4", Offset = "0x14741A4")]
		public float attenuationCustomBlending;

		[Token(Token = "0x40011CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x14741BC", Offset = "0x14741BC")]
		public float fallOffStart;

		[Token(Token = "0x40011CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x14741F4", Offset = "0x14741F4")]
		public float fallOffEnd;

		[Token(Token = "0x40011CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float depthBlendDistance;

		[Token(Token = "0x40011CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float cameraClippingDistance;

		[Token(Token = "0x40011CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x147422C", Offset = "0x147422C")]
		public float glareFrontal;

		[Token(Token = "0x40011CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1474244", Offset = "0x1474244")]
		public float glareBehind;

		[Token(Token = "0x40011D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x147425C", Offset = "0x147425C")]
		public float fresnelPow;

		[Token(Token = "0x40011D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public NoiseMode noiseMode;

		[Token(Token = "0x40011D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x1474294", Offset = "0x1474294")]
		[SerializeField]
		private bool _DEPRECATED_NoiseEnabled;

		[Token(Token = "0x40011D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x14742E0", Offset = "0x14742E0")]
		public float noiseIntensity;

		[Token(Token = "0x40011D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public bool noiseScaleUseGlobal;

		[Token(Token = "0x40011D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x14742F8", Offset = "0x14742F8")]
		public float noiseScaleLocal;

		[Token(Token = "0x40011D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public bool noiseVelocityUseGlobal;

		[Token(Token = "0x40011D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Vector3 noiseVelocityLocal;

		[Token(Token = "0x40011D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		private int pluginVersion;

		[Token(Token = "0x40011D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x1474324", Offset = "0x1474324")]
		[SerializeField]
		private bool _TrackChangesDuringPlaytime;

		[Token(Token = "0x40011DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		private int _SortingLayerID;

		[Token(Token = "0x40011DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private int _SortingOrder;

		[Token(Token = "0x40011DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x1474390", Offset = "0x1474390")]
		[SerializeField]
		private float _FadeOutBegin;

		[Token(Token = "0x40011DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x14743DC", Offset = "0x14743DC")]
		[SerializeField]
		private float _FadeOutEnd;

		[Token(Token = "0x40011DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1474428", Offset = "0x1474428")]
		private uint <_INTERNAL_InstancedMaterialGroupID>k__BackingField;

		[Token(Token = "0x40011DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private BeamGeometry m_BeamGeom;

		[Token(Token = "0x40011E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Coroutine m_CoPlaytimeUpdate;

		[Token(Token = "0x40011E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Light _CachedLight;

		[Token(Token = "0x17000236")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x148A1E4", Offset = "0x148A1E4")]
		public float alphaInside
		{
			[Token(Token = "0x6001464")]
			[Address(RVA = "0x2A82D84", Offset = "0x2A82D84", VA = "0x2A82D84")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001465")]
			[Address(RVA = "0x2A82D8C", Offset = "0x2A82D8C", VA = "0x2A82D8C")]
			set
			{
			}
		}

		[Token(Token = "0x17000237")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x148A21C", Offset = "0x148A21C")]
		public float alphaOutside
		{
			[Token(Token = "0x6001466")]
			[Address(RVA = "0x2A82D94", Offset = "0x2A82D94", VA = "0x2A82D94")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001467")]
			[Address(RVA = "0x2A82D9C", Offset = "0x2A82D9C", VA = "0x2A82D9C")]
			set
			{
			}
		}

		[Token(Token = "0x17000238")]
		public float intensityGlobal
		{
			[Token(Token = "0x6001468")]
			[Address(RVA = "0x2A82DA4", Offset = "0x2A82DA4", VA = "0x2A82DA4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001469")]
			[Address(RVA = "0x2A82DAC", Offset = "0x2A82DAC", VA = "0x2A82DAC")]
			set
			{
			}
		}

		[Token(Token = "0x17000239")]
		public float coneAngle
		{
			[Token(Token = "0x600146A")]
			[Address(RVA = "0x2A82A74", Offset = "0x2A82A74", VA = "0x2A82A74")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700023A")]
		public float coneRadiusEnd
		{
			[Token(Token = "0x600146B")]
			[Address(RVA = "0x2A8085C", Offset = "0x2A8085C", VA = "0x2A8085C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700023B")]
		public float coneVolume
		{
			[Token(Token = "0x600146C")]
			[Address(RVA = "0x2A82DB4", Offset = "0x2A82DB4", VA = "0x2A82DB4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700023C")]
		public float coneApexOffsetZ
		{
			[Token(Token = "0x600146D")]
			[Address(RVA = "0x2A82E08", Offset = "0x2A82E08", VA = "0x2A82E08")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700023D")]
		public int geomSides
		{
			[Token(Token = "0x600146E")]
			[Address(RVA = "0x2A82E60", Offset = "0x2A82E60", VA = "0x2A82E60")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600146F")]
			[Address(RVA = "0x2A82EEC", Offset = "0x2A82EEC", VA = "0x2A82EEC")]
			set
			{
			}
		}

		[Token(Token = "0x1700023E")]
		public int geomSegments
		{
			[Token(Token = "0x6001470")]
			[Address(RVA = "0x2A82F6C", Offset = "0x2A82F6C", VA = "0x2A82F6C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001471")]
			[Address(RVA = "0x2A82FF8", Offset = "0x2A82FF8", VA = "0x2A82FF8")]
			set
			{
			}
		}

		[Token(Token = "0x1700023F")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x148A254", Offset = "0x148A254")]
		public bool fadeEndFromLight
		{
			[Token(Token = "0x6001472")]
			[Address(RVA = "0x2A83078", Offset = "0x2A83078", VA = "0x2A83078")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001473")]
			[Address(RVA = "0x2A83080", Offset = "0x2A83080", VA = "0x2A83080")]
			set
			{
			}
		}

		[Token(Token = "0x17000240")]
		public float attenuationLerpLinearQuad
		{
			[Token(Token = "0x6001474")]
			[Address(RVA = "0x2A8308C", Offset = "0x2A8308C", VA = "0x2A8308C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000241")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x148A28C", Offset = "0x148A28C")]
		public float fadeStart
		{
			[Token(Token = "0x6001475")]
			[Address(RVA = "0x2A830B4", Offset = "0x2A830B4", VA = "0x2A830B4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001476")]
			[Address(RVA = "0x2A830BC", Offset = "0x2A830BC", VA = "0x2A830BC")]
			set
			{
			}
		}

		[Token(Token = "0x17000242")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x148A2C4", Offset = "0x148A2C4")]
		public float fadeEnd
		{
			[Token(Token = "0x6001477")]
			[Address(RVA = "0x2A830C4", Offset = "0x2A830C4", VA = "0x2A830C4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001478")]
			[Address(RVA = "0x2A830CC", Offset = "0x2A830CC", VA = "0x2A830CC")]
			set
			{
			}
		}

		[Token(Token = "0x17000243")]
		public bool isNoiseEnabled
		{
			[Token(Token = "0x6001479")]
			[Address(RVA = "0x2A7E4E4", Offset = "0x2A7E4E4", VA = "0x2A7E4E4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000244")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x148A2FC", Offset = "0x148A2FC")]
		public bool noiseEnabled
		{
			[Token(Token = "0x600147A")]
			[Address(RVA = "0x2A830D4", Offset = "0x2A830D4", VA = "0x2A830D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600147B")]
			[Address(RVA = "0x2A830E4", Offset = "0x2A830E4", VA = "0x2A830E4")]
			set
			{
			}
		}

		[Token(Token = "0x17000245")]
		public float fadeOutBegin
		{
			[Token(Token = "0x600147C")]
			[Address(RVA = "0x2A83100", Offset = "0x2A83100", VA = "0x2A83100")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600147D")]
			[Address(RVA = "0x2A83108", Offset = "0x2A83108", VA = "0x2A83108")]
			set
			{
			}
		}

		[Token(Token = "0x17000246")]
		public float fadeOutEnd
		{
			[Token(Token = "0x600147E")]
			[Address(RVA = "0x2A83164", Offset = "0x2A83164", VA = "0x2A83164")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600147F")]
			[Address(RVA = "0x2A8316C", Offset = "0x2A8316C", VA = "0x2A8316C")]
			set
			{
			}
		}

		[Token(Token = "0x17000247")]
		public bool isFadeOutEnabled
		{
			[Token(Token = "0x6001480")]
			[Address(RVA = "0x2A82B14", Offset = "0x2A82B14", VA = "0x2A82B14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000248")]
		public int sortingLayerID
		{
			[Token(Token = "0x6001481")]
			[Address(RVA = "0x2A83174", Offset = "0x2A83174", VA = "0x2A83174")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001482")]
			[Address(RVA = "0x2A8317C", Offset = "0x2A8317C", VA = "0x2A8317C")]
			set
			{
			}
		}

		[Token(Token = "0x17000249")]
		public string sortingLayerName
		{
			[Token(Token = "0x6001483")]
			[Address(RVA = "0x2A83224", Offset = "0x2A83224", VA = "0x2A83224")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001484")]
			[Address(RVA = "0x2A83230", Offset = "0x2A83230", VA = "0x2A83230")]
			set
			{
			}
		}

		[Token(Token = "0x1700024A")]
		public int sortingOrder
		{
			[Token(Token = "0x6001485")]
			[Address(RVA = "0x2A83260", Offset = "0x2A83260", VA = "0x2A83260")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001486")]
			[Address(RVA = "0x2A83268", Offset = "0x2A83268", VA = "0x2A83268")]
			set
			{
			}
		}

		[Token(Token = "0x1700024B")]
		public bool trackChangesDuringPlaytime
		{
			[Token(Token = "0x6001487")]
			[Address(RVA = "0x2A83310", Offset = "0x2A83310", VA = "0x2A83310")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001488")]
			[Address(RVA = "0x2A83318", Offset = "0x2A83318", VA = "0x2A83318")]
			set
			{
			}
		}

		[Token(Token = "0x1700024C")]
		public bool isCurrentlyTrackingChanges
		{
			[Token(Token = "0x6001489")]
			[Address(RVA = "0x2A83390", Offset = "0x2A83390", VA = "0x2A83390")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700024D")]
		public bool hasGeometry
		{
			[Token(Token = "0x600148A")]
			[Address(RVA = "0x2A82B38", Offset = "0x2A82B38", VA = "0x2A82B38")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700024E")]
		public Bounds bounds
		{
			[Token(Token = "0x600148B")]
			[Address(RVA = "0x2A82BA8", Offset = "0x2A82BA8", VA = "0x2A82BA8")]
			get
			{
				return default(Bounds);
			}
		}

		[Token(Token = "0x1700024F")]
		public int blendingModeAsInt
		{
			[Token(Token = "0x600148D")]
			[Address(RVA = "0x2A83444", Offset = "0x2A83444", VA = "0x2A83444")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000250")]
		public uint _INTERNAL_InstancedMaterialGroupID
		{
			[Token(Token = "0x6001490")]
			[Address(RVA = "0x2A835E4", Offset = "0x2A835E4", VA = "0x2A835E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1484584", Offset = "0x1484584")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6001491")]
			[Address(RVA = "0x2A835EC", Offset = "0x2A835EC", VA = "0x2A835EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1484594", Offset = "0x1484594")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000251")]
		public string meshStats
		{
			[Token(Token = "0x6001492")]
			[Address(RVA = "0x2A835F4", Offset = "0x2A835F4", VA = "0x2A835F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000252")]
		public int meshVerticesCount
		{
			[Token(Token = "0x6001493")]
			[Address(RVA = "0x2A8377C", Offset = "0x2A8377C", VA = "0x2A8377C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000253")]
		public int meshTrianglesCount
		{
			[Token(Token = "0x6001494")]
			[Address(RVA = "0x2A83858", Offset = "0x2A83858", VA = "0x2A83858")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000254")]
		private Light lightSpotAttached
		{
			[Token(Token = "0x6001495")]
			[Address(RVA = "0x2A8394C", Offset = "0x2A8394C", VA = "0x2A8394C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600148C")]
		[Address(RVA = "0x2A833A0", Offset = "0x2A833A0", VA = "0x2A833A0")]
		public void SetDynamicOcclusion(DynamicOcclusion dynamicOcclusion)
		{
		}

		[Token(Token = "0x600148E")]
		[Address(RVA = "0x2A83110", Offset = "0x2A83110", VA = "0x2A83110")]
		private void SetFadeOutValue(ref float propToChange, float value)
		{
		}

		[Token(Token = "0x600148F")]
		[Address(RVA = "0x2A8353C", Offset = "0x2A8353C", VA = "0x2A8353C")]
		private void OnFadeOutStateChanged()
		{
		}

		[Token(Token = "0x6001496")]
		[Address(RVA = "0x2A83A4C", Offset = "0x2A83A4C", VA = "0x2A83A4C")]
		public float GetInsideBeamFactor(Vector3 posWS)
		{
			return default(float);
		}

		[Token(Token = "0x6001497")]
		[Address(RVA = "0x2A83AAC", Offset = "0x2A83AAC", VA = "0x2A83AAC")]
		public float GetInsideBeamFactorFromObjectSpacePos(Vector3 posOS)
		{
			return default(float);
		}

		[Token(Token = "0x6001498")]
		[Address(RVA = "0x2A83C48", Offset = "0x2A83C48", VA = "0x2A83C48")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x14845A4", Offset = "0x14845A4")]
		public void Generate()
		{
		}

		[Token(Token = "0x6001499")]
		[Address(RVA = "0x2A83C54", Offset = "0x2A83C54", VA = "0x2A83C54", Slot = "4")]
		public virtual void GenerateGeometry()
		{
		}

		[Token(Token = "0x600149A")]
		[Address(RVA = "0x2A83EDC", Offset = "0x2A83EDC", VA = "0x2A83EDC", Slot = "5")]
		public virtual void UpdateAfterManualPropertyChange()
		{
		}

		[Token(Token = "0x600149B")]
		[Address(RVA = "0x2A83F74", Offset = "0x2A83F74", VA = "0x2A83F74")]
		private void Start()
		{
		}

		[Token(Token = "0x600149C")]
		[Address(RVA = "0x2A83F80", Offset = "0x2A83F80", VA = "0x2A83F80")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600149D")]
		[Address(RVA = "0x2A84010", Offset = "0x2A84010", VA = "0x2A84010")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0x2A83324", Offset = "0x2A83324", VA = "0x2A83324")]
		private void StartPlaytimeUpdateIfNeeded()
		{
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0x2A840A8", Offset = "0x2A840A8", VA = "0x2A840A8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x14845DC", Offset = "0x14845DC")]
		private IEnumerator CoPlaytimeUpdate()
		{
			return null;
		}

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0x2A84150", Offset = "0x2A84150", VA = "0x2A84150")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0x2A84154", Offset = "0x2A84154", VA = "0x2A84154")]
		private void DestroyBeam()
		{
		}

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0x2A8421C", Offset = "0x2A8421C", VA = "0x2A8421C")]
		private void AssignPropertiesFromSpotLight(Light lightSpot)
		{
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0x2A8431C", Offset = "0x2A8431C", VA = "0x2A8431C")]
		private void ClampProperties()
		{
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0x2A83EAC", Offset = "0x2A83EAC", VA = "0x2A83EAC")]
		private void ValidateProperties()
		{
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0x2A83D8C", Offset = "0x2A83D8C", VA = "0x2A83D8C")]
		private void HandleBackwardCompatibility(int serializedVersion, int newVersion)
		{
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0x2A84508", Offset = "0x2A84508", VA = "0x2A84508")]
		public VolumetricLightBeam()
		{
		}
	}
}
namespace VLB_Samples
{
	[Token(Token = "0x2000282")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1467184", Offset = "0x1467184")]
	public class CameraToggleBeamVisibility : MonoBehaviour
	{
		[Token(Token = "0x40011E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private KeyCode m_KeyCode;

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0x2A84724", Offset = "0x2A84724", VA = "0x2A84724")]
		private void Update()
		{
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0x2A8481C", Offset = "0x2A8481C", VA = "0x2A8481C")]
		public CameraToggleBeamVisibility()
		{
		}
	}
	[Token(Token = "0x2000283")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x14671E8", Offset = "0x14671E8")]
	public class CheckIfInsideBeam : MonoBehaviour
	{
		[Token(Token = "0x40011E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool isInsideBeam;

		[Token(Token = "0x40011E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material m_Material;

		[Token(Token = "0x40011E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Collider m_Collider;

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0x2A8482C", Offset = "0x2A8482C", VA = "0x2A8482C")]
		private void Start()
		{
		}

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0x2A84908", Offset = "0x2A84908", VA = "0x2A84908")]
		private void Update()
		{
		}

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0x2A849C4", Offset = "0x2A849C4", VA = "0x2A849C4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0x2A849CC", Offset = "0x2A849CC", VA = "0x2A849CC")]
		private void OnTriggerStay(Collider trigger)
		{
		}

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0x2A84A94", Offset = "0x2A84A94", VA = "0x2A84A94")]
		public CheckIfInsideBeam()
		{
		}
	}
	[Token(Token = "0x2000284")]
	public class FeaturesNotSupportedMessage : MonoBehaviour
	{
		[Token(Token = "0x60014AE")]
		[Address(RVA = "0x2A84A9C", Offset = "0x2A84A9C", VA = "0x2A84A9C")]
		private void Start()
		{
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0x2A84B58", Offset = "0x2A84B58", VA = "0x2A84B58")]
		public FeaturesNotSupportedMessage()
		{
		}
	}
	[Token(Token = "0x2000285")]
	public class FreeCameraController : MonoBehaviour
	{
		[Token(Token = "0x40011E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float cameraSensitivity;

		[Token(Token = "0x40011E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float speedNormal;

		[Token(Token = "0x40011E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float speedFactorSlow;

		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float speedFactorFast;

		[Token(Token = "0x40011EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float speedClimb;

		[Token(Token = "0x40011EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float rotationH;

		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float rotationV;

		[Token(Token = "0x40011ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool m_UseMouseView;

		[Token(Token = "0x17000255")]
		private bool useMouseView
		{
			[Token(Token = "0x60014B0")]
			[Address(RVA = "0x2A84B60", Offset = "0x2A84B60", VA = "0x2A84B60")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014B1")]
			[Address(RVA = "0x2A84B68", Offset = "0x2A84B68", VA = "0x2A84B68")]
			set
			{
			}
		}

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0x2A84BA4", Offset = "0x2A84BA4", VA = "0x2A84BA4")]
		private void Start()
		{
		}

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0x2A84C3C", Offset = "0x2A84C3C", VA = "0x2A84C3C")]
		private void Update()
		{
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0x2A852DC", Offset = "0x2A852DC", VA = "0x2A852DC")]
		public FreeCameraController()
		{
		}
	}
	[Token(Token = "0x2000286")]
	public class LightGenerator : MonoBehaviour
	{
		[Token(Token = "0x40011EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1474448", Offset = "0x1474448")]
		[SerializeField]
		private int CountX;

		[Token(Token = "0x40011EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x147448C", Offset = "0x147448C")]
		[SerializeField]
		private int CountY;

		[Token(Token = "0x40011F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float OffsetUnits;

		[Token(Token = "0x40011F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float PositionY;

		[Token(Token = "0x40011F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool NoiseEnabled;

		[Token(Token = "0x40011F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool AddLight;

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0x2A85300", Offset = "0x2A85300", VA = "0x2A85300")]
		public void Generate()
		{
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0x2A85BC4", Offset = "0x2A85BC4", VA = "0x2A85BC4")]
		public LightGenerator()
		{
		}
	}
	[Token(Token = "0x2000287")]
	public class Rotater : MonoBehaviour
	{
		[Token(Token = "0x40011F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x1474510", Offset = "0x1474510")]
		public Vector3 EulerSpeed;

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0x2A85BE0", Offset = "0x2A85BE0", VA = "0x2A85BE0")]
		private void Update()
		{
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0x2A85D58", Offset = "0x2A85D58", VA = "0x2A85D58")]
		public Rotater()
		{
		}
	}
}
namespace Sigtrap.Editors.ShaderStripper
{
	[Token(Token = "0x2000288")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x146728C", Offset = "0x146728C")]
	public class ShaderForceKeywords : ShaderStripperBase
	{
		[Serializable]
		[Token(Token = "0x2000644")]
		private struct ForceBuiltin
		{
			[Token(Token = "0x4002508")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public BuiltinShaderDefine defineToMatch;

			[Token(Token = "0x4002509")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public BuiltinShaderDefine defineToForce;

			[Token(Token = "0x400250A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147D3A8", Offset = "0x147D3A8")]
			public bool invertMatch;

			[Token(Token = "0x400250B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147D3E0", Offset = "0x147D3E0")]
			public bool invertForce;
		}

		[Serializable]
		[Token(Token = "0x2000645")]
		private struct ForceKeyword
		{
			[Token(Token = "0x400250C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string keywordToMatch;

			[Token(Token = "0x400250D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string keywordToForce;

			[Token(Token = "0x400250E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147D418", Offset = "0x147D418")]
			public bool invertMatch;

			[Token(Token = "0x400250F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147D450", Offset = "0x147D450")]
			public bool invertForce;
		}

		[Token(Token = "0x40011F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ForceBuiltin[] _forceBuiltins;

		[Token(Token = "0x40011F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ForceKeyword[] _forceKeywords;

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0x1F025B0", Offset = "0x1F025B0", VA = "0x1F025B0")]
		public ShaderForceKeywords()
		{
		}
	}
	[Token(Token = "0x2000289")]
	public class ShaderLog
	{
		[Token(Token = "0x40011F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<string> log;

		[Token(Token = "0x40011F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1474568", Offset = "0x1474568")]
		private string <logName>k__BackingField;

		[Token(Token = "0x17000256")]
		public string logName
		{
			[Token(Token = "0x60014BA")]
			[Address(RVA = "0x1F025E0", Offset = "0x1F025E0", VA = "0x1F025E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1484640", Offset = "0x1484640")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014BB")]
			[Address(RVA = "0x1F025E8", Offset = "0x1F025E8", VA = "0x1F025E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1484650", Offset = "0x1484650")]
			private set
			{
			}
		}

		[Token(Token = "0x17000257")]
		public int Count
		{
			[Token(Token = "0x60014BC")]
			[Address(RVA = "0x1F025F0", Offset = "0x1F025F0", VA = "0x1F025F0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0x1F02640", Offset = "0x1F02640", VA = "0x1F02640")]
		public ShaderLog(string logName)
		{
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0x1F026D8", Offset = "0x1F026D8", VA = "0x1F026D8")]
		public void Add(string s)
		{
		}

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0x1F02740", Offset = "0x1F02740", VA = "0x1F02740")]
		public void Clear()
		{
		}

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0x1F02798", Offset = "0x1F02798", VA = "0x1F02798")]
		public void Insert(int index, string s)
		{
		}

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0x1F02808", Offset = "0x1F02808", VA = "0x1F02808")]
		public bool Contains(string s)
		{
			return default(bool);
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0x1F02870", Offset = "0x1F02870", VA = "0x1F02870")]
		public string[] ToArray()
		{
			return null;
		}
	}
	[Token(Token = "0x200028A")]
	public abstract class ShaderStripperBase : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x2000646")]
		protected class StringMatch
		{
			[Token(Token = "0x2000798")]
			public enum MatchType
			{
				[Token(Token = "0x4002A2A")]
				EQUALS,
				[Token(Token = "0x4002A2B")]
				CONTAINS,
				[Token(Token = "0x4002A2C")]
				STARTSWITH,
				[Token(Token = "0x4002A2D")]
				ENDSWITH
			}

			[Token(Token = "0x4002510")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MatchType matchType;

			[Token(Token = "0x4002511")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string namePattern;

			[Token(Token = "0x4002512")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool caseInsensitive;

			[Token(Token = "0x600281D")]
			[Address(RVA = "0x1F028D0", Offset = "0x1F028D0", VA = "0x1F028D0")]
			public bool Evaluate(string name)
			{
				return default(bool);
			}

			[Token(Token = "0x600281E")]
			[Address(RVA = "0x1F029C8", Offset = "0x1F029C8", VA = "0x1F029C8")]
			public StringMatch()
			{
			}
		}

		[Token(Token = "0x40011F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[HideInInspector]
		private bool _expanded;

		[Token(Token = "0x40011FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[HideInInspector]
		private int _order;

		[Token(Token = "0x40011FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool _active;

		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string _notes;

		[Token(Token = "0x40011FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected bool _logOutput;

		[Token(Token = "0x17000258")]
		public bool active
		{
			[Token(Token = "0x60014C3")]
			[Address(RVA = "0x1F028C8", Offset = "0x1F028C8", VA = "0x1F028C8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0x1F025C8", Offset = "0x1F025C8", VA = "0x1F025C8")]
		protected ShaderStripperBase()
		{
		}
	}
	[Token(Token = "0x200028B")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x14672D0", Offset = "0x14672D0")]
	public class ShaderStripperPath : ShaderStripperBase
	{
		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private StringMatch[] _pathBlacklist;

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0x1F029D0", Offset = "0x1F029D0", VA = "0x1F029D0")]
		public ShaderStripperPath()
		{
		}
	}
	[Token(Token = "0x200028C")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x1467314", Offset = "0x1467314")]
	public class ShaderStripperPlatform : ShaderStripperBase
	{
		[Token(Token = "0x40011FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1474628", Offset = "0x1474628")]
		private bool _whitelist;

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0x1F029E8", Offset = "0x1F029E8", VA = "0x1F029E8")]
		public ShaderStripperPlatform()
		{
		}
	}
	[Token(Token = "0x200028D")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x1467358", Offset = "0x1467358")]
	public class ShaderStripperSimple : ShaderStripperBase
	{
		[Token(Token = "0x4001200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1474674", Offset = "0x1474674")]
		private List<StringMatch> _blacklistedShaderNames;

		[Token(Token = "0x4001201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x14746C0", Offset = "0x14746C0")]
		private List<PassType> _blacklistedPassTypes;

		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147470C", Offset = "0x147470C")]
		private List<string> _blacklistedKeywords;

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0x1F02A00", Offset = "0x1F02A00", VA = "0x1F02A00")]
		public ShaderStripperSimple()
		{
		}
	}
	[Token(Token = "0x200028E")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x146739C", Offset = "0x146739C")]
	public class ShaderStripperVariantCollection : ShaderStripperBase, ISerializationCallbackReceiver
	{
		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1474758", Offset = "0x1474758")]
		private string _mergeToFile;

		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x14747A4", Offset = "0x14747A4")]
		private List<ShaderVariantCollection> _whitelistedCollections;

		[Token(Token = "0x4001205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[HideInInspector]
		private List<string> _collectionPaths;

		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1474828", Offset = "0x1474828")]
		private bool _stripHidden;

		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1474874", Offset = "0x1474874")]
		private bool _allowVrVariants;

		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x14748C0", Offset = "0x14748C0")]
		private bool _allowInstancedVariants;

		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147490C", Offset = "0x147490C")]
		private StringMatch[] _ignoreShadersByName;

		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1474958", Offset = "0x1474958")]
		private List<PassType> _ignorePassTypes;

		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool _valid;

		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool _dirty;

		[Token(Token = "0x60014C8")]
		[Address(RVA = "0x1F02A18", Offset = "0x1F02A18", VA = "0x1F02A18", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x60014C9")]
		[Address(RVA = "0x1F02A24", Offset = "0x1F02A24", VA = "0x1F02A24", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0x1F02A30", Offset = "0x1F02A30", VA = "0x1F02A30")]
		public ShaderStripperVariantCollection()
		{
		}
	}
}
namespace UnityStandardAssets.Utility
{
	[Token(Token = "0x200028F")]
	public class ActivateTrigger : MonoBehaviour
	{
		[Token(Token = "0x2000647")]
		public enum Mode
		{
			[Token(Token = "0x4002514")]
			Trigger,
			[Token(Token = "0x4002515")]
			Replace,
			[Token(Token = "0x4002516")]
			Activate,
			[Token(Token = "0x4002517")]
			Enable,
			[Token(Token = "0x4002518")]
			Animate,
			[Token(Token = "0x4002519")]
			Deactivate
		}

		[Token(Token = "0x400120D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mode action;

		[Token(Token = "0x400120E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEngine.Object target;

		[Token(Token = "0x400120F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject source;

		[Token(Token = "0x4001210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int triggerCount;

		[Token(Token = "0x4001211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool repeatTrigger;

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0x2E8EFF0", Offset = "0x2E8EFF0", VA = "0x2E8EFF0")]
		private void DoActivateTrigger()
		{
		}

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0x2E8F458", Offset = "0x2E8F458", VA = "0x2E8F458")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0x2E8F45C", Offset = "0x2E8F45C", VA = "0x2E8F45C")]
		public ActivateTrigger()
		{
		}
	}
	[Token(Token = "0x2000290")]
	public class AutoMobileShaderSwitch : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000648")]
		public class ReplacementDefinition
		{
			[Token(Token = "0x400251A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Shader original;

			[Token(Token = "0x400251B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Shader replacement;

			[Token(Token = "0x600281F")]
			[Address(RVA = "0x2E8FEA8", Offset = "0x2E8FEA8", VA = "0x2E8FEA8")]
			public ReplacementDefinition()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000649")]
		public class ReplacementList
		{
			[Token(Token = "0x400251C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ReplacementDefinition[] items;

			[Token(Token = "0x6002820")]
			[Address(RVA = "0x2E8FEB0", Offset = "0x2E8FEB0", VA = "0x2E8FEB0")]
			public ReplacementList()
			{
			}
		}

		[Token(Token = "0x4001212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ReplacementList m_ReplacementList;

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0x2E8F474", Offset = "0x2E8F474", VA = "0x2E8F474")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60014CF")]
		[Address(RVA = "0x2E8FEA0", Offset = "0x2E8FEA0", VA = "0x2E8FEA0")]
		public AutoMobileShaderSwitch()
		{
		}
	}
	[Token(Token = "0x2000291")]
	public class AutoMoveAndRotate : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200064A")]
		public class Vector3andSpace
		{
			[Token(Token = "0x400251D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 value;

			[Token(Token = "0x400251E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Space space;

			[Token(Token = "0x6002821")]
			[Address(RVA = "0x2E901D8", Offset = "0x2E901D8", VA = "0x2E901D8")]
			public Vector3andSpace()
			{
			}
		}

		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3andSpace moveUnitsPerSecond;

		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3andSpace rotateDegreesPerSecond;

		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool ignoreTimescale;

		[Token(Token = "0x4001216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_LastRealTime;

		[Token(Token = "0x60014D0")]
		[Address(RVA = "0x2E8FF1C", Offset = "0x2E8FF1C", VA = "0x2E8FF1C")]
		private void Start()
		{
		}

		[Token(Token = "0x60014D1")]
		[Address(RVA = "0x2E8FF44", Offset = "0x2E8FF44", VA = "0x2E8FF44")]
		private void Update()
		{
		}

		[Token(Token = "0x60014D2")]
		[Address(RVA = "0x2E90084", Offset = "0x2E90084", VA = "0x2E90084")]
		public void InverseTranslation()
		{
		}

		[Token(Token = "0x60014D3")]
		[Address(RVA = "0x2E90128", Offset = "0x2E90128", VA = "0x2E90128")]
		public void MultiplyTranslationBy(float factor = 1f)
		{
		}

		[Token(Token = "0x60014D4")]
		[Address(RVA = "0x2E901D0", Offset = "0x2E901D0", VA = "0x2E901D0")]
		public AutoMoveAndRotate()
		{
		}
	}
	[Token(Token = "0x2000292")]
	public class CameraRefocus
	{
		[Token(Token = "0x4001217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Camera Camera;

		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 Lookatpoint;

		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform Parent;

		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 m_OrigCameraPos;

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool m_Refocus;

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0x2E901E8", Offset = "0x2E901E8", VA = "0x2E901E8")]
		public CameraRefocus(Camera camera, Transform parent, Vector3 origCameraPos)
		{
		}

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0x2E9025C", Offset = "0x2E9025C", VA = "0x2E9025C")]
		public void ChangeCamera(Camera camera)
		{
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0x2E90264", Offset = "0x2E90264", VA = "0x2E90264")]
		public void ChangeParent(Transform parent)
		{
		}

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0x2E9026C", Offset = "0x2E9026C", VA = "0x2E9026C")]
		public void GetFocusPoint()
		{
		}

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0x2E903CC", Offset = "0x2E903CC", VA = "0x2E903CC")]
		public void SetFocusPoint()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000293")]
	public class CurveControlledBob
	{
		[Token(Token = "0x400121C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float HorizontalBobRange;

		[Token(Token = "0x400121D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float VerticalBobRange;

		[Token(Token = "0x400121E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve Bobcurve;

		[Token(Token = "0x400121F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float VerticaltoHorizontalRatio;

		[Token(Token = "0x4001220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float m_CyclePositionX;

		[Token(Token = "0x4001221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_CyclePositionY;

		[Token(Token = "0x4001222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_BobBaseInterval;

		[Token(Token = "0x4001223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 m_OriginalCameraPosition;

		[Token(Token = "0x4001224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_Time;

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0x2E90420", Offset = "0x2E90420", VA = "0x2E90420")]
		public void Setup(Camera camera, float bobBaseInterval)
		{
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0x2E904C4", Offset = "0x2E904C4", VA = "0x2E904C4")]
		public Vector3 DoHeadBob(float speed)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0x2E905E4", Offset = "0x2E905E4", VA = "0x2E905E4")]
		public CurveControlledBob()
		{
		}
	}
	[Token(Token = "0x2000294")]
	public class DragRigidbody : MonoBehaviour
	{
		[Token(Token = "0x200064B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A5EC", Offset = "0x146A5EC")]
		private sealed class <DragObject>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400251F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002520")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002521")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DragRigidbody <>4__this;

			[Token(Token = "0x4002522")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float distance;

			[Token(Token = "0x4002523")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <oldDrag>5__2;

			[Token(Token = "0x4002524")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <oldAngularDrag>5__3;

			[Token(Token = "0x4002525")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Camera <mainCamera>5__4;

			[Token(Token = "0x17000541")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002825")]
				[Address(RVA = "0x2E90F70", Offset = "0x2E90F70", VA = "0x2E90F70", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000542")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002827")]
				[Address(RVA = "0x2E90FD8", Offset = "0x2E90FD8", VA = "0x2E90FD8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002822")]
			[Address(RVA = "0x2E90CE0", Offset = "0x2E90CE0", VA = "0x2E90CE0")]
			[DebuggerHidden]
			public <DragObject>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6002823")]
			[Address(RVA = "0x2E90D14", Offset = "0x2E90D14", VA = "0x2E90D14", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002824")]
			[Address(RVA = "0x2E90D18", Offset = "0x2E90D18", VA = "0x2E90D18", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002826")]
			[Address(RVA = "0x2E90F78", Offset = "0x2E90F78", VA = "0x2E90F78", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001225")]
		private const float k_Spring = 50f;

		[Token(Token = "0x4001226")]
		private const float k_Damper = 5f;

		[Token(Token = "0x4001227")]
		private const float k_Drag = 10f;

		[Token(Token = "0x4001228")]
		private const float k_AngularDrag = 5f;

		[Token(Token = "0x4001229")]
		private const float k_Distance = 0.2f;

		[Token(Token = "0x400122A")]
		private const bool k_AttachToCenterOfMass = false;

		[Token(Token = "0x400122B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SpringJoint m_SpringJoint;

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0x2E90830", Offset = "0x2E90830", VA = "0x2E90830")]
		private void Update()
		{
		}

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0x2E90C54", Offset = "0x2E90C54", VA = "0x2E90C54")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1484660", Offset = "0x1484660")]
		private IEnumerator DragObject(float distance)
		{
			return null;
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0x2E90BA4", Offset = "0x2E90BA4", VA = "0x2E90BA4")]
		private Camera FindCamera()
		{
			return null;
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0x2E90D0C", Offset = "0x2E90D0C", VA = "0x2E90D0C")]
		public DragRigidbody()
		{
		}
	}
	[Token(Token = "0x2000295")]
	public class DynamicShadowSettings : MonoBehaviour
	{
		[Token(Token = "0x400122C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Light sunLight;

		[Token(Token = "0x400122D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float minHeight;

		[Token(Token = "0x400122E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float minShadowDistance;

		[Token(Token = "0x400122F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float minShadowBias;

		[Token(Token = "0x4001230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float maxHeight;

		[Token(Token = "0x4001231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float maxShadowDistance;

		[Token(Token = "0x4001232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float maxShadowBias;

		[Token(Token = "0x4001233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float adaptTime;

		[Token(Token = "0x4001234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_SmoothHeight;

		[Token(Token = "0x4001235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_ChangeSpeed;

		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float m_OriginalStrength;

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0x2E90FE0", Offset = "0x2E90FE0", VA = "0x2E90FE0")]
		private void Start()
		{
		}

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0x2E91014", Offset = "0x2E91014", VA = "0x2E91014")]
		private void Update()
		{
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0x2E91288", Offset = "0x2E91288", VA = "0x2E91288")]
		public DynamicShadowSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000296")]
	public class FOVKick
	{
		[Token(Token = "0x200064C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A5FC", Offset = "0x146A5FC")]
		private sealed class <FOVKickUp>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002526")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002527")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002528")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FOVKick <>4__this;

			[Token(Token = "0x4002529")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x17000543")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600282B")]
				[Address(RVA = "0x2E918C0", Offset = "0x2E918C0", VA = "0x2E918C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000544")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600282D")]
				[Address(RVA = "0x2E91928", Offset = "0x2E91928", VA = "0x2E91928", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002828")]
			[Address(RVA = "0x2E9146C", Offset = "0x2E9146C", VA = "0x2E9146C")]
			[DebuggerHidden]
			public <FOVKickUp>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6002829")]
			[Address(RVA = "0x2E91750", Offset = "0x2E91750", VA = "0x2E91750", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600282A")]
			[Address(RVA = "0x2E91754", Offset = "0x2E91754", VA = "0x2E91754", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600282C")]
			[Address(RVA = "0x2E918C8", Offset = "0x2E918C8", VA = "0x2E918C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200064D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A60C", Offset = "0x146A60C")]
		private sealed class <FOVKickDown>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400252A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400252B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400252C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FOVKick <>4__this;

			[Token(Token = "0x400252D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x17000545")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002831")]
				[Address(RVA = "0x2E916E0", Offset = "0x2E916E0", VA = "0x2E916E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000546")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002833")]
				[Address(RVA = "0x2E91748", Offset = "0x2E91748", VA = "0x2E91748", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600282E")]
			[Address(RVA = "0x2E91514", Offset = "0x2E91514", VA = "0x2E91514")]
			[DebuggerHidden]
			public <FOVKickDown>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x600282F")]
			[Address(RVA = "0x2E9155C", Offset = "0x2E9155C", VA = "0x2E9155C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002830")]
			[Address(RVA = "0x2E91560", Offset = "0x2E91560", VA = "0x2E91560", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002832")]
			[Address(RVA = "0x2E916E8", Offset = "0x2E916E8", VA = "0x2E916E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Camera Camera;

		[Token(Token = "0x4001238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public float originalFov;

		[Token(Token = "0x4001239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float FOVIncrease;

		[Token(Token = "0x400123A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float TimeToIncrease;

		[Token(Token = "0x400123B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float TimeToDecrease;

		[Token(Token = "0x400123C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve IncreaseCurve;

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0x2E912BC", Offset = "0x2E912BC", VA = "0x2E912BC")]
		public void Setup(Camera camera)
		{
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0x2E91308", Offset = "0x2E91308", VA = "0x2E91308")]
		private void CheckStatus(Camera camera)
		{
		}

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0x2E913E8", Offset = "0x2E913E8", VA = "0x2E913E8")]
		public void ChangeCamera(Camera camera)
		{
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0x2E913F0", Offset = "0x2E913F0", VA = "0x2E913F0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x14846C4", Offset = "0x14846C4")]
		public IEnumerator FOVKickUp()
		{
			return null;
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0x2E91498", Offset = "0x2E91498", VA = "0x2E91498")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1484728", Offset = "0x1484728")]
		public IEnumerator FOVKickDown()
		{
			return null;
		}

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0x2E91540", Offset = "0x2E91540", VA = "0x2E91540")]
		public FOVKick()
		{
		}
	}
	[Token(Token = "0x2000297")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x14673E0", Offset = "0x14673E0")]
	public class FPSCounter : MonoBehaviour
	{
		[Token(Token = "0x400123D")]
		private const float fpsMeasurePeriod = 0.5f;

		[Token(Token = "0x400123E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int m_FpsAccumulator;

		[Token(Token = "0x400123F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_FpsNextPeriod;

		[Token(Token = "0x4001240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_CurrentFps;

		[Token(Token = "0x4001241")]
		private const string display = "{0} FPS";

		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Text m_Text;

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0x2E91930", Offset = "0x2E91930", VA = "0x2E91930")]
		private void Start()
		{
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0x2E919A4", Offset = "0x2E919A4", VA = "0x2E919A4")]
		private void Update()
		{
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0x2E91AA0", Offset = "0x2E91AA0", VA = "0x2E91AA0")]
		public FPSCounter()
		{
		}
	}
	[Token(Token = "0x2000298")]
	public class FollowTarget : MonoBehaviour
	{
		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 offset;

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0x2E91AA8", Offset = "0x2E91AA8", VA = "0x2E91AA8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0x2E91B88", Offset = "0x2E91B88", VA = "0x2E91B88")]
		public FollowTarget()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000299")]
	public class LerpControlledBob
	{
		[Token(Token = "0x200064E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A61C", Offset = "0x146A61C")]
		private sealed class <DoBobCycle>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400252E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400252F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002530")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LerpControlledBob <>4__this;

			[Token(Token = "0x4002531")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x17000547")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002837")]
				[Address(RVA = "0x2E91E9C", Offset = "0x2E91E9C", VA = "0x2E91E9C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000548")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002839")]
				[Address(RVA = "0x2E91F04", Offset = "0x2E91F04", VA = "0x2E91F04", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002834")]
			[Address(RVA = "0x2E91C6C", Offset = "0x2E91C6C", VA = "0x2E91C6C")]
			[DebuggerHidden]
			public <DoBobCycle>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6002835")]
			[Address(RVA = "0x2E91CA0", Offset = "0x2E91CA0", VA = "0x2E91CA0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002836")]
			[Address(RVA = "0x2E91CA4", Offset = "0x2E91CA4", VA = "0x2E91CA4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002838")]
			[Address(RVA = "0x2E91EA4", Offset = "0x2E91EA4", VA = "0x2E91EA4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float BobDuration;

		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float BobAmount;

		[Token(Token = "0x4001247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_Offset;

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0x2E91BE8", Offset = "0x2E91BE8", VA = "0x2E91BE8")]
		public float Offset()
		{
			return default(float);
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0x2E91BF0", Offset = "0x2E91BF0", VA = "0x2E91BF0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x148478C", Offset = "0x148478C")]
		public IEnumerator DoBobCycle()
		{
			return null;
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0x2E91C98", Offset = "0x2E91C98", VA = "0x2E91C98")]
		public LerpControlledBob()
		{
		}
	}
	[Token(Token = "0x200029A")]
	public class ObjectResetter : MonoBehaviour
	{
		[Token(Token = "0x200064F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A62C", Offset = "0x146A62C")]
		private sealed class <ResetCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002532")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002533")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002534")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4002535")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ObjectResetter <>4__this;

			[Token(Token = "0x17000549")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600283D")]
				[Address(RVA = "0x2E92338", Offset = "0x2E92338", VA = "0x2E92338", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700054A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600283F")]
				[Address(RVA = "0x2E923A0", Offset = "0x2E923A0", VA = "0x2E923A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600283A")]
			[Address(RVA = "0x2E920C4", Offset = "0x2E920C4", VA = "0x2E920C4")]
			[DebuggerHidden]
			public <ResetCoroutine>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x600283B")]
			[Address(RVA = "0x2E920F8", Offset = "0x2E920F8", VA = "0x2E920F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600283C")]
			[Address(RVA = "0x2E920FC", Offset = "0x2E920FC", VA = "0x2E920FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600283E")]
			[Address(RVA = "0x2E92340", Offset = "0x2E92340", VA = "0x2E92340", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 originalPosition;

		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Quaternion originalRotation;

		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Transform> originalStructure;

		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Rigidbody Rigidbody;

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0x2E91F0C", Offset = "0x2E91F0C", VA = "0x2E91F0C")]
		private void Start()
		{
		}

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0x2E9200C", Offset = "0x2E9200C", VA = "0x2E9200C")]
		public void DelayedReset(float delay)
		{
		}

		[Token(Token = "0x60014F4")]
		[Address(RVA = "0x2E92038", Offset = "0x2E92038", VA = "0x2E92038")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x14847F0", Offset = "0x14847F0")]
		public IEnumerator ResetCoroutine(float delay)
		{
			return null;
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0x2E920F0", Offset = "0x2E920F0", VA = "0x2E920F0")]
		public ObjectResetter()
		{
		}
	}
	[Token(Token = "0x200029B")]
	public class ParticleSystemDestroyer : MonoBehaviour
	{
		[Token(Token = "0x2000650")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A63C", Offset = "0x146A63C")]
		private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002536")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002537")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002538")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ParticleSystemDestroyer <>4__this;

			[Token(Token = "0x4002539")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private ParticleSystem[] <systems>5__2;

			[Token(Token = "0x400253A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <stopTime>5__3;

			[Token(Token = "0x1700054B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002843")]
				[Address(RVA = "0x2E927CC", Offset = "0x2E927CC", VA = "0x2E927CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700054C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002845")]
				[Address(RVA = "0x2E92834", Offset = "0x2E92834", VA = "0x2E92834", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002840")]
			[Address(RVA = "0x2E92424", Offset = "0x2E92424", VA = "0x2E92424")]
			[DebuggerHidden]
			public <Start>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6002841")]
			[Address(RVA = "0x2E92470", Offset = "0x2E92470", VA = "0x2E92470", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002842")]
			[Address(RVA = "0x2E92474", Offset = "0x2E92474", VA = "0x2E92474", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002844")]
			[Address(RVA = "0x2E927D4", Offset = "0x2E927D4", VA = "0x2E927D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float minDuration;

		[Token(Token = "0x400124D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float maxDuration;

		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_MaxLifetime;

		[Token(Token = "0x400124F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool m_EarlyStop;

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0x2E923A8", Offset = "0x2E923A8", VA = "0x2E923A8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1484854", Offset = "0x1484854")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0x2E92450", Offset = "0x2E92450", VA = "0x2E92450")]
		public void Stop()
		{
		}

		[Token(Token = "0x60014F8")]
		[Address(RVA = "0x2E9245C", Offset = "0x2E9245C", VA = "0x2E9245C")]
		public ParticleSystemDestroyer()
		{
		}
	}
	[Token(Token = "0x200029C")]
	public class PlatformSpecificContent : MonoBehaviour
	{
		[Token(Token = "0x2000651")]
		private enum BuildTargetGroup
		{
			[Token(Token = "0x400253C")]
			Standalone,
			[Token(Token = "0x400253D")]
			Mobile
		}

		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BuildTargetGroup m_BuildTargetGroup;

		[Token(Token = "0x4001251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject[] m_Content;

		[Token(Token = "0x4001252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MonoBehaviour[] m_MonoBehaviours;

		[Token(Token = "0x4001253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool m_ChildrenOfThisObject;

		[Token(Token = "0x60014F9")]
		[Address(RVA = "0x2E9283C", Offset = "0x2E9283C", VA = "0x2E9283C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60014FA")]
		[Address(RVA = "0x2E92840", Offset = "0x2E92840", VA = "0x2E92840")]
		private void CheckEnableContent()
		{
		}

		[Token(Token = "0x60014FB")]
		[Address(RVA = "0x2E9285C", Offset = "0x2E9285C", VA = "0x2E9285C")]
		private void EnableContent(bool enabled)
		{
		}

		[Token(Token = "0x60014FC")]
		[Address(RVA = "0x2E92BB8", Offset = "0x2E92BB8", VA = "0x2E92BB8")]
		public PlatformSpecificContent()
		{
		}
	}
	[Token(Token = "0x200029D")]
	public class SimpleMouseRotator : MonoBehaviour
	{
		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 rotationRange;

		[Token(Token = "0x4001255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float rotationSpeed;

		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float dampingTime;

		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool autoZeroVerticalOnMobile;

		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool autoZeroHorizontalOnMobile;

		[Token(Token = "0x4001259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool relative;

		[Token(Token = "0x400125A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 m_TargetAngles;

		[Token(Token = "0x400125B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 m_FollowAngles;

		[Token(Token = "0x400125C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 m_FollowVelocity;

		[Token(Token = "0x400125D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion m_OriginalRotation;

		[Token(Token = "0x60014FD")]
		[Address(RVA = "0x2E92C48", Offset = "0x2E92C48", VA = "0x2E92C48")]
		private void Start()
		{
		}

		[Token(Token = "0x60014FE")]
		[Address(RVA = "0x2E92C84", Offset = "0x2E92C84", VA = "0x2E92C84")]
		private void Update()
		{
		}

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0x2E930C0", Offset = "0x2E930C0", VA = "0x2E930C0")]
		public SimpleMouseRotator()
		{
		}
	}
	[Token(Token = "0x200029E")]
	public class SmoothFollow : MonoBehaviour
	{
		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform target;

		[Token(Token = "0x400125F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float distance;

		[Token(Token = "0x4001260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float height;

		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float rotationDamping;

		[Token(Token = "0x4001262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float heightDamping;

		[Token(Token = "0x6001500")]
		[Address(RVA = "0x2E93180", Offset = "0x2E93180", VA = "0x2E93180")]
		private void Start()
		{
		}

		[Token(Token = "0x6001501")]
		[Address(RVA = "0x2E93184", Offset = "0x2E93184", VA = "0x2E93184")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001502")]
		[Address(RVA = "0x2E934B0", Offset = "0x2E934B0", VA = "0x2E934B0")]
		public SmoothFollow()
		{
		}
	}
	[Token(Token = "0x200029F")]
	public class TimedObjectActivator : MonoBehaviour
	{
		[Token(Token = "0x2000652")]
		public enum Action
		{
			[Token(Token = "0x400253F")]
			Activate,
			[Token(Token = "0x4002540")]
			Deactivate,
			[Token(Token = "0x4002541")]
			Destroy,
			[Token(Token = "0x4002542")]
			ReloadLevel,
			[Token(Token = "0x4002543")]
			Call
		}

		[Serializable]
		[Token(Token = "0x2000653")]
		public class Entry
		{
			[Token(Token = "0x4002544")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject target;

			[Token(Token = "0x4002545")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action action;

			[Token(Token = "0x4002546")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float delay;

			[Token(Token = "0x6002846")]
			[Address(RVA = "0x2E93C6C", Offset = "0x2E93C6C", VA = "0x2E93C6C")]
			public Entry()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000654")]
		public class Entries
		{
			[Token(Token = "0x4002547")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Entry[] entries;

			[Token(Token = "0x6002847")]
			[Address(RVA = "0x2E9385C", Offset = "0x2E9385C", VA = "0x2E9385C")]
			public Entries()
			{
			}
		}

		[Token(Token = "0x2000655")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A64C", Offset = "0x146A64C")]
		private sealed class <Activate>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002548")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002549")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400254A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Entry entry;

			[Token(Token = "0x1700054D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600284B")]
				[Address(RVA = "0x2E9393C", Offset = "0x2E9393C", VA = "0x2E9393C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700054E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600284D")]
				[Address(RVA = "0x2E939A4", Offset = "0x2E939A4", VA = "0x2E939A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002848")]
			[Address(RVA = "0x2E93764", Offset = "0x2E93764", VA = "0x2E93764")]
			[DebuggerHidden]
			public <Activate>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6002849")]
			[Address(RVA = "0x2E93864", Offset = "0x2E93864", VA = "0x2E93864", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600284A")]
			[Address(RVA = "0x2E93868", Offset = "0x2E93868", VA = "0x2E93868", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600284C")]
			[Address(RVA = "0x2E93944", Offset = "0x2E93944", VA = "0x2E93944", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000656")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A65C", Offset = "0x146A65C")]
		private sealed class <Deactivate>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400254B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400254C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400254D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Entry entry;

			[Token(Token = "0x1700054F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002851")]
				[Address(RVA = "0x2E93A84", Offset = "0x2E93A84", VA = "0x2E93A84", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000550")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002853")]
				[Address(RVA = "0x2E93AEC", Offset = "0x2E93AEC", VA = "0x2E93AEC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600284E")]
			[Address(RVA = "0x2E93790", Offset = "0x2E93790", VA = "0x2E93790")]
			[DebuggerHidden]
			public <Deactivate>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x600284F")]
			[Address(RVA = "0x2E939AC", Offset = "0x2E939AC", VA = "0x2E939AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002850")]
			[Address(RVA = "0x2E939B0", Offset = "0x2E939B0", VA = "0x2E939B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002852")]
			[Address(RVA = "0x2E93A8C", Offset = "0x2E93A8C", VA = "0x2E93A8C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000657")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A66C", Offset = "0x146A66C")]
		private sealed class <ReloadLevel>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400254E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400254F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002550")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Entry entry;

			[Token(Token = "0x17000551")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002857")]
				[Address(RVA = "0x2E93BFC", Offset = "0x2E93BFC", VA = "0x2E93BFC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000552")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002859")]
				[Address(RVA = "0x2E93C64", Offset = "0x2E93C64", VA = "0x2E93C64", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002854")]
			[Address(RVA = "0x2E937BC", Offset = "0x2E937BC", VA = "0x2E937BC")]
			[DebuggerHidden]
			public <ReloadLevel>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6002855")]
			[Address(RVA = "0x2E93AF4", Offset = "0x2E93AF4", VA = "0x2E93AF4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002856")]
			[Address(RVA = "0x2E93AF8", Offset = "0x2E93AF8", VA = "0x2E93AF8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002858")]
			[Address(RVA = "0x2E93C04", Offset = "0x2E93C04", VA = "0x2E93C04", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Entries entries;

		[Token(Token = "0x6001503")]
		[Address(RVA = "0x2E934C4", Offset = "0x2E934C4", VA = "0x2E934C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001504")]
		[Address(RVA = "0x2E935F0", Offset = "0x2E935F0", VA = "0x2E935F0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x14848B8", Offset = "0x14848B8")]
		private IEnumerator Activate(Entry entry)
		{
			return null;
		}

		[Token(Token = "0x6001505")]
		[Address(RVA = "0x2E9366C", Offset = "0x2E9366C", VA = "0x2E9366C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x148491C", Offset = "0x148491C")]
		private IEnumerator Deactivate(Entry entry)
		{
			return null;
		}

		[Token(Token = "0x6001506")]
		[Address(RVA = "0x2E936E8", Offset = "0x2E936E8", VA = "0x2E936E8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1484980", Offset = "0x1484980")]
		private IEnumerator ReloadLevel(Entry entry)
		{
			return null;
		}

		[Token(Token = "0x6001507")]
		[Address(RVA = "0x2E937E8", Offset = "0x2E937E8", VA = "0x2E937E8")]
		public TimedObjectActivator()
		{
		}
	}
	[Token(Token = "0x20002A0")]
	public class TimedObjectDestructor : MonoBehaviour
	{
		[Token(Token = "0x4001264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_TimeOut;

		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool m_DetachChildren;

		[Token(Token = "0x6001508")]
		[Address(RVA = "0x2E93C74", Offset = "0x2E93C74", VA = "0x2E93C74")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001509")]
		[Address(RVA = "0x2E93CCC", Offset = "0x2E93CCC", VA = "0x2E93CCC")]
		private void DestroyNow()
		{
		}

		[Token(Token = "0x600150A")]
		[Address(RVA = "0x2E93D6C", Offset = "0x2E93D6C", VA = "0x2E93D6C")]
		public TimedObjectDestructor()
		{
		}
	}
	[Token(Token = "0x20002A1")]
	public class WaypointCircuit : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000658")]
		public class WaypointList
		{
			[Token(Token = "0x4002551")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public WaypointCircuit circuit;

			[Token(Token = "0x4002552")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform[] items;

			[Token(Token = "0x600285A")]
			[Address(RVA = "0x2E94BE8", Offset = "0x2E94BE8", VA = "0x2E94BE8")]
			public WaypointList()
			{
			}
		}

		[Token(Token = "0x2000659")]
		public struct RoutePoint
		{
			[Token(Token = "0x4002553")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 position;

			[Token(Token = "0x4002554")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 direction;

			[Token(Token = "0x600285B")]
			[Address(RVA = "0x2E94560", Offset = "0x2E94560", VA = "0x2E94560")]
			public RoutePoint(Vector3 position, Vector3 direction)
			{
			}
		}

		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WaypointList waypointList;

		[Token(Token = "0x4001267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool smoothRoute;

		[Token(Token = "0x4001268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int numPoints;

		[Token(Token = "0x4001269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3[] points;

		[Token(Token = "0x400126A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float[] distances;

		[Token(Token = "0x400126B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float editorVisualisationSubsteps;

		[Token(Token = "0x400126C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1474A84", Offset = "0x1474A84")]
		private float <Length>k__BackingField;

		[Token(Token = "0x400126D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int p0n;

		[Token(Token = "0x400126E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int p1n;

		[Token(Token = "0x400126F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int p2n;

		[Token(Token = "0x4001270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int p3n;

		[Token(Token = "0x4001271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float i;

		[Token(Token = "0x4001272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 P0;

		[Token(Token = "0x4001273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 P1;

		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 P2;

		[Token(Token = "0x4001275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 P3;

		[Token(Token = "0x17000259")]
		public float Length
		{
			[Token(Token = "0x600150B")]
			[Address(RVA = "0x2E93D7C", Offset = "0x2E93D7C", VA = "0x2E93D7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14849E4", Offset = "0x14849E4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600150C")]
			[Address(RVA = "0x2E93D84", Offset = "0x2E93D84", VA = "0x2E93D84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14849F4", Offset = "0x14849F4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700025A")]
		public Transform[] Waypoints
		{
			[Token(Token = "0x600150D")]
			[Address(RVA = "0x2E93D8C", Offset = "0x2E93D8C", VA = "0x2E93D8C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600150E")]
		[Address(RVA = "0x2E93DA8", Offset = "0x2E93DA8", VA = "0x2E93DA8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600150F")]
		[Address(RVA = "0x2E940F8", Offset = "0x2E940F8", VA = "0x2E940F8")]
		public RoutePoint GetRoutePoint(float dist)
		{
			return default(RoutePoint);
		}

		[Token(Token = "0x6001510")]
		[Address(RVA = "0x2E94208", Offset = "0x2E94208", VA = "0x2E94208")]
		public Vector3 GetRoutePosition(float dist)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001511")]
		[Address(RVA = "0x2E94570", Offset = "0x2E94570", VA = "0x2E94570")]
		private Vector3 CatmullRom(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float i)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001512")]
		[Address(RVA = "0x2E93E04", Offset = "0x2E93E04", VA = "0x2E93E04")]
		private void CachePositionsAndDistances()
		{
		}

		[Token(Token = "0x6001513")]
		[Address(RVA = "0x2E948D8", Offset = "0x2E948D8", VA = "0x2E948D8")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001514")]
		[Address(RVA = "0x2E94B60", Offset = "0x2E94B60", VA = "0x2E94B60")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001515")]
		[Address(RVA = "0x2E948E0", Offset = "0x2E948E0", VA = "0x2E948E0")]
		private void DrawGizmos(bool selected)
		{
		}

		[Token(Token = "0x6001516")]
		[Address(RVA = "0x2E94B68", Offset = "0x2E94B68", VA = "0x2E94B68")]
		public WaypointCircuit()
		{
		}
	}
	[Token(Token = "0x20002A2")]
	public class WaypointProgressTracker : MonoBehaviour
	{
		[Token(Token = "0x200065A")]
		public enum ProgressStyle
		{
			[Token(Token = "0x4002556")]
			SmoothAlongRoute,
			[Token(Token = "0x4002557")]
			PointToPoint
		}

		[Token(Token = "0x4001276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private WaypointCircuit circuit;

		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float lookAheadForTargetOffset;

		[Token(Token = "0x4001278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float lookAheadForTargetFactor;

		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float lookAheadForSpeedOffset;

		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float lookAheadForSpeedFactor;

		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ProgressStyle progressStyle;

		[Token(Token = "0x400127C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float pointToPointThreshold;

		[Token(Token = "0x400127D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1474B04", Offset = "0x1474B04")]
		private WaypointCircuit.RoutePoint <targetPoint>k__BackingField;

		[Token(Token = "0x400127E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1474B14", Offset = "0x1474B14")]
		private WaypointCircuit.RoutePoint <speedPoint>k__BackingField;

		[Token(Token = "0x400127F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1474B24", Offset = "0x1474B24")]
		private WaypointCircuit.RoutePoint <progressPoint>k__BackingField;

		[Token(Token = "0x4001280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Transform target;

		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float progressDistance;

		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private int progressNum;

		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 lastPosition;

		[Token(Token = "0x4001284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float speed;

		[Token(Token = "0x1700025B")]
		public WaypointCircuit.RoutePoint targetPoint
		{
			[Token(Token = "0x6001517")]
			[Address(RVA = "0x2E94C54", Offset = "0x2E94C54", VA = "0x2E94C54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1484A04", Offset = "0x1484A04")]
			get
			{
				return default(WaypointCircuit.RoutePoint);
			}
			[Token(Token = "0x6001518")]
			[Address(RVA = "0x2E94C68", Offset = "0x2E94C68", VA = "0x2E94C68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1484A14", Offset = "0x1484A14")]
			private set
			{
			}
		}

		[Token(Token = "0x1700025C")]
		public WaypointCircuit.RoutePoint speedPoint
		{
			[Token(Token = "0x6001519")]
			[Address(RVA = "0x2E94C7C", Offset = "0x2E94C7C", VA = "0x2E94C7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1484A24", Offset = "0x1484A24")]
			get
			{
				return default(WaypointCircuit.RoutePoint);
			}
			[Token(Token = "0x600151A")]
			[Address(RVA = "0x2E94C90", Offset = "0x2E94C90", VA = "0x2E94C90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1484A34", Offset = "0x1484A34")]
			private set
			{
			}
		}

		[Token(Token = "0x1700025D")]
		public WaypointCircuit.RoutePoint progressPoint
		{
			[Token(Token = "0x600151B")]
			[Address(RVA = "0x2E94CA4", Offset = "0x2E94CA4", VA = "0x2E94CA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1484A44", Offset = "0x1484A44")]
			get
			{
				return default(WaypointCircuit.RoutePoint);
			}
			[Token(Token = "0x600151C")]
			[Address(RVA = "0x2E94CB8", Offset = "0x2E94CB8", VA = "0x2E94CB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1484A54", Offset = "0x1484A54")]
			private set
			{
			}
		}

		[Token(Token = "0x600151D")]
		[Address(RVA = "0x2E94CCC", Offset = "0x2E94CCC", VA = "0x2E94CCC")]
		private void Start()
		{
		}

		[Token(Token = "0x600151E")]
		[Address(RVA = "0x2E94DC0", Offset = "0x2E94DC0", VA = "0x2E94DC0")]
		public void Reset()
		{
		}

		[Token(Token = "0x600151F")]
		[Address(RVA = "0x2E94E98", Offset = "0x2E94E98", VA = "0x2E94E98")]
		private void Update()
		{
		}

		[Token(Token = "0x6001520")]
		[Address(RVA = "0x2E95400", Offset = "0x2E95400", VA = "0x2E95400")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001521")]
		[Address(RVA = "0x2E955D8", Offset = "0x2E955D8", VA = "0x2E955D8")]
		public WaypointProgressTracker()
		{
		}
	}
}
namespace UnityStandardAssets.Effects
{
	[Token(Token = "0x20002A3")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1467444", Offset = "0x1467444")]
	public class AfterburnerPhysicsForce : MonoBehaviour
	{
		[Token(Token = "0x4001285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float effectAngle;

		[Token(Token = "0x4001286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float effectWidth;

		[Token(Token = "0x4001287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float effectDistance;

		[Token(Token = "0x4001288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float force;

		[Token(Token = "0x4001289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Collider[] m_Cols;

		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SphereCollider m_Sphere;

		[Token(Token = "0x6001522")]
		[Address(RVA = "0x1F11E50", Offset = "0x1F11E50", VA = "0x1F11E50")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001523")]
		[Address(RVA = "0x1F11EEC", Offset = "0x1F11EEC", VA = "0x1F11EEC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001524")]
		[Address(RVA = "0x1F123AC", Offset = "0x1F123AC", VA = "0x1F123AC")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001525")]
		[Address(RVA = "0x1F128F4", Offset = "0x1F128F4", VA = "0x1F128F4")]
		public AfterburnerPhysicsForce()
		{
		}
	}
	[Token(Token = "0x20002A4")]
	public class ExplosionFireAndDebris : MonoBehaviour
	{
		[Token(Token = "0x200065B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A67C", Offset = "0x146A67C")]
		private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002558")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002559")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400255A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ExplosionFireAndDebris <>4__this;

			[Token(Token = "0x400255B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <multiplier>5__2;

			[Token(Token = "0x17000553")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600285F")]
				[Address(RVA = "0x1F13138", Offset = "0x1F13138", VA = "0x1F13138", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000554")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002861")]
				[Address(RVA = "0x1F131A0", Offset = "0x1F131A0", VA = "0x1F131A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600285C")]
			[Address(RVA = "0x1F12984", Offset = "0x1F12984", VA = "0x1F12984")]
			[DebuggerHidden]
			public <Start>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x600285D")]
			[Address(RVA = "0x1F12B3C", Offset = "0x1F12B3C", VA = "0x1F12B3C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600285E")]
			[Address(RVA = "0x1F12B40", Offset = "0x1F12B40", VA = "0x1F12B40", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002860")]
			[Address(RVA = "0x1F13140", Offset = "0x1F13140", VA = "0x1F13140", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400128B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform[] debrisPrefabs;

		[Token(Token = "0x400128C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform firePrefab;

		[Token(Token = "0x400128D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int numDebrisPieces;

		[Token(Token = "0x400128E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int numFires;

		[Token(Token = "0x6001526")]
		[Address(RVA = "0x1F12908", Offset = "0x1F12908", VA = "0x1F12908")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1484A64", Offset = "0x1484A64")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001527")]
		[Address(RVA = "0x1F129B0", Offset = "0x1F129B0", VA = "0x1F129B0")]
		private void AddFire(Transform t, Vector3 pos, Vector3 normal)
		{
		}

		[Token(Token = "0x6001528")]
		[Address(RVA = "0x1F12B34", Offset = "0x1F12B34", VA = "0x1F12B34")]
		public ExplosionFireAndDebris()
		{
		}
	}
	[Token(Token = "0x20002A5")]
	public class ExplosionPhysicsForce : MonoBehaviour
	{
		[Token(Token = "0x200065C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A68C", Offset = "0x146A68C")]
		private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400255C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400255D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400255E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ExplosionPhysicsForce <>4__this;

			[Token(Token = "0x17000555")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002865")]
				[Address(RVA = "0x1F1357C", Offset = "0x1F1357C", VA = "0x1F1357C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000556")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002867")]
				[Address(RVA = "0x1F135E4", Offset = "0x1F135E4", VA = "0x1F135E4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002862")]
			[Address(RVA = "0x1F13224", Offset = "0x1F13224", VA = "0x1F13224")]
			[DebuggerHidden]
			public <Start>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x6002863")]
			[Address(RVA = "0x1F13260", Offset = "0x1F13260", VA = "0x1F13260", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002864")]
			[Address(RVA = "0x1F13264", Offset = "0x1F13264", VA = "0x1F13264", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002866")]
			[Address(RVA = "0x1F13584", Offset = "0x1F13584", VA = "0x1F13584", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400128F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float explosionForce;

		[Token(Token = "0x6001529")]
		[Address(RVA = "0x1F131A8", Offset = "0x1F131A8", VA = "0x1F131A8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1484AC8", Offset = "0x1484AC8")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x600152A")]
		[Address(RVA = "0x1F13250", Offset = "0x1F13250", VA = "0x1F13250")]
		public ExplosionPhysicsForce()
		{
		}
	}
	[Token(Token = "0x20002A6")]
	public class Explosive : MonoBehaviour
	{
		[Token(Token = "0x200065D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A69C", Offset = "0x146A69C")]
		private sealed class <OnCollisionEnter>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400255F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002560")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002561")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Explosive <>4__this;

			[Token(Token = "0x4002562")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Collision col;

			[Token(Token = "0x17000557")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600286B")]
				[Address(RVA = "0x1F13A30", Offset = "0x1F13A30", VA = "0x1F13A30", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000558")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600286D")]
				[Address(RVA = "0x1F13A98", Offset = "0x1F13A98", VA = "0x1F13A98", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002868")]
			[Address(RVA = "0x1F136E4", Offset = "0x1F136E4", VA = "0x1F136E4")]
			[DebuggerHidden]
			public <OnCollisionEnter>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6002869")]
			[Address(RVA = "0x1F1373C", Offset = "0x1F1373C", VA = "0x1F1373C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600286A")]
			[Address(RVA = "0x1F13740", Offset = "0x1F13740", VA = "0x1F13740", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600286C")]
			[Address(RVA = "0x1F13A38", Offset = "0x1F13A38", VA = "0x1F13A38", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform explosionPrefab;

		[Token(Token = "0x4001291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float detonationImpactVelocity;

		[Token(Token = "0x4001292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float sizeMultiplier;

		[Token(Token = "0x4001293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool reset;

		[Token(Token = "0x4001294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float resetTimeDelay;

		[Token(Token = "0x4001295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_Exploded;

		[Token(Token = "0x4001296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ObjectResetter m_ObjectResetter;

		[Token(Token = "0x600152B")]
		[Address(RVA = "0x1F135EC", Offset = "0x1F135EC", VA = "0x1F135EC")]
		private void Start()
		{
		}

		[Token(Token = "0x600152C")]
		[Address(RVA = "0x1F1364C", Offset = "0x1F1364C", VA = "0x1F1364C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1484B2C", Offset = "0x1484B2C")]
		private IEnumerator OnCollisionEnter(Collision col)
		{
			return null;
		}

		[Token(Token = "0x600152D")]
		[Address(RVA = "0x1F13710", Offset = "0x1F13710", VA = "0x1F13710")]
		public void Reset()
		{
		}

		[Token(Token = "0x600152E")]
		[Address(RVA = "0x1F13718", Offset = "0x1F13718", VA = "0x1F13718")]
		public Explosive()
		{
		}
	}
	[Token(Token = "0x20002A7")]
	public class ExtinguishableParticleSystem : MonoBehaviour
	{
		[Token(Token = "0x4001297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float multiplier;

		[Token(Token = "0x4001298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ParticleSystem[] m_Systems;

		[Token(Token = "0x600152F")]
		[Address(RVA = "0x1F13AA0", Offset = "0x1F13AA0", VA = "0x1F13AA0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001530")]
		[Address(RVA = "0x1F13B00", Offset = "0x1F13B00", VA = "0x1F13B00")]
		public void Extinguish()
		{
		}

		[Token(Token = "0x6001531")]
		[Address(RVA = "0x1F13B8C", Offset = "0x1F13B8C", VA = "0x1F13B8C")]
		public ExtinguishableParticleSystem()
		{
		}
	}
	[Token(Token = "0x20002A8")]
	public class FireLight : MonoBehaviour
	{
		[Token(Token = "0x4001299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_Rnd;

		[Token(Token = "0x400129A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool m_Burning;

		[Token(Token = "0x400129B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Light m_Light;

		[Token(Token = "0x6001532")]
		[Address(RVA = "0x1F13B9C", Offset = "0x1F13B9C", VA = "0x1F13B9C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001533")]
		[Address(RVA = "0x1F13C14", Offset = "0x1F13C14", VA = "0x1F13C14")]
		private void Update()
		{
		}

		[Token(Token = "0x6001534")]
		[Address(RVA = "0x1F13E74", Offset = "0x1F13E74", VA = "0x1F13E74")]
		public void Extinguish()
		{
		}

		[Token(Token = "0x6001535")]
		[Address(RVA = "0x1F13E9C", Offset = "0x1F13E9C", VA = "0x1F13E9C")]
		public FireLight()
		{
		}
	}
	[Token(Token = "0x20002A9")]
	public class Hose : MonoBehaviour
	{
		[Token(Token = "0x400129C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float maxPower;

		[Token(Token = "0x400129D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float minPower;

		[Token(Token = "0x400129E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float changeSpeed;

		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ParticleSystem[] hoseWaterSystems;

		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Renderer systemRenderer;

		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float m_Power;

		[Token(Token = "0x6001536")]
		[Address(RVA = "0x1F13EAC", Offset = "0x1F13EAC", VA = "0x1F13EAC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001537")]
		[Address(RVA = "0x1F14070", Offset = "0x1F14070", VA = "0x1F14070")]
		public Hose()
		{
		}
	}
	[Token(Token = "0x20002AA")]
	public class ParticleSystemMultiplier : MonoBehaviour
	{
		[Token(Token = "0x40012A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float multiplier;

		[Token(Token = "0x6001538")]
		[Address(RVA = "0x1F1408C", Offset = "0x1F1408C", VA = "0x1F1408C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001539")]
		[Address(RVA = "0x1F14218", Offset = "0x1F14218", VA = "0x1F14218")]
		public ParticleSystemMultiplier()
		{
		}
	}
	[Token(Token = "0x20002AB")]
	public class SmokeParticles : MonoBehaviour
	{
		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip[] extinguishSounds;

		[Token(Token = "0x600153A")]
		[Address(RVA = "0x1F14228", Offset = "0x1F14228", VA = "0x1F14228")]
		private void Start()
		{
		}

		[Token(Token = "0x600153B")]
		[Address(RVA = "0x1F142E8", Offset = "0x1F142E8", VA = "0x1F142E8")]
		public SmokeParticles()
		{
		}
	}
	[Token(Token = "0x20002AC")]
	public class WaterHoseParticles : MonoBehaviour
	{
		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float lastSoundTime;

		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float force;

		[Token(Token = "0x40012A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<ParticleCollisionEvent> m_CollisionEvents;

		[Token(Token = "0x40012A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ParticleSystem m_ParticleSystem;

		[Token(Token = "0x600153C")]
		[Address(RVA = "0x1F142F0", Offset = "0x1F142F0", VA = "0x1F142F0")]
		private void Start()
		{
		}

		[Token(Token = "0x600153D")]
		[Address(RVA = "0x1F14350", Offset = "0x1F14350", VA = "0x1F14350")]
		private void OnParticleCollision(GameObject other)
		{
		}

		[Token(Token = "0x600153E")]
		[Address(RVA = "0x1F145E0", Offset = "0x1F145E0", VA = "0x1F145E0")]
		public WaterHoseParticles()
		{
		}
	}
}
namespace UnityStandardAssets.Water
{
	[Token(Token = "0x20002AD")]
	[ExecuteInEditMode]
	public class WaterBasic : MonoBehaviour
	{
		[Token(Token = "0x600153F")]
		[Address(RVA = "0x2E955F4", Offset = "0x2E955F4", VA = "0x2E955F4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001540")]
		[Address(RVA = "0x2E95838", Offset = "0x2E95838", VA = "0x2E95838")]
		public WaterBasic()
		{
		}
	}
}
namespace UnityStandardAssets.ImageEffects
{
	[Token(Token = "0x20002AE")]
	public enum AAMode
	{
		[Token(Token = "0x40012A9")]
		FXAA2,
		[Token(Token = "0x40012AA")]
		FXAA3Console,
		[Token(Token = "0x40012AB")]
		FXAA1PresetA,
		[Token(Token = "0x40012AC")]
		FXAA1PresetB,
		[Token(Token = "0x40012AD")]
		NFAA,
		[Token(Token = "0x40012AE")]
		SSAA,
		[Token(Token = "0x40012AF")]
		DLAA
	}
	[Token(Token = "0x20002AF")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x14674B8", Offset = "0x14674B8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x14674B8", Offset = "0x14674B8")]
	public class Antialiasing : PostEffectsBase
	{
		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AAMode mode;

		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool showGeneratedNormals;

		[Token(Token = "0x40012B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float offsetScale;

		[Token(Token = "0x40012B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float blurRadius;

		[Token(Token = "0x40012B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float edgeThresholdMin;

		[Token(Token = "0x40012B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float edgeThreshold;

		[Token(Token = "0x40012B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float edgeSharpness;

		[Token(Token = "0x40012B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool dlaaSharp;

		[Token(Token = "0x40012B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Shader ssaaShader;

		[Token(Token = "0x40012B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material ssaa;

		[Token(Token = "0x40012BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Shader dlaaShader;

		[Token(Token = "0x40012BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material dlaa;

		[Token(Token = "0x40012BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Shader nfaaShader;

		[Token(Token = "0x40012BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material nfaa;

		[Token(Token = "0x40012BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Shader shaderFXAAPreset2;

		[Token(Token = "0x40012BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Material materialFXAAPreset2;

		[Token(Token = "0x40012C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Shader shaderFXAAPreset3;

		[Token(Token = "0x40012C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Material materialFXAAPreset3;

		[Token(Token = "0x40012C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Shader shaderFXAAII;

		[Token(Token = "0x40012C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Material materialFXAAII;

		[Token(Token = "0x40012C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Shader shaderFXAAIII;

		[Token(Token = "0x40012C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Material materialFXAAIII;

		[Token(Token = "0x6001541")]
		[Address(RVA = "0x1F14664", Offset = "0x1F14664", VA = "0x1F14664")]
		public Material CurrentAAMaterial()
		{
			return null;
		}

		[Token(Token = "0x6001542")]
		[Address(RVA = "0x1F146C8", Offset = "0x1F146C8", VA = "0x1F146C8", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0x1F1483C", Offset = "0x1F1483C", VA = "0x1F1483C")]
		public void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001544")]
		[Address(RVA = "0x1F14D84", Offset = "0x1F14D84", VA = "0x1F14D84")]
		public Antialiasing()
		{
		}
	}
	[Token(Token = "0x20002B0")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1467550", Offset = "0x1467550")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1467550", Offset = "0x1467550")]
	public class Bloom : PostEffectsBase
	{
		[Token(Token = "0x200065E")]
		public enum LensFlareStyle
		{
			[Token(Token = "0x4002564")]
			Ghosting,
			[Token(Token = "0x4002565")]
			Anamorphic,
			[Token(Token = "0x4002566")]
			Combined
		}

		[Token(Token = "0x200065F")]
		public enum TweakMode
		{
			[Token(Token = "0x4002568")]
			Basic,
			[Token(Token = "0x4002569")]
			Complex
		}

		[Token(Token = "0x2000660")]
		public enum HDRBloomMode
		{
			[Token(Token = "0x400256B")]
			Auto,
			[Token(Token = "0x400256C")]
			On,
			[Token(Token = "0x400256D")]
			Off
		}

		[Token(Token = "0x2000661")]
		public enum BloomScreenBlendMode
		{
			[Token(Token = "0x400256F")]
			Screen,
			[Token(Token = "0x4002570")]
			Add
		}

		[Token(Token = "0x2000662")]
		public enum BloomQuality
		{
			[Token(Token = "0x4002572")]
			Cheap,
			[Token(Token = "0x4002573")]
			High
		}

		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TweakMode tweakMode;

		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public BloomScreenBlendMode screenBlendMode;

		[Token(Token = "0x40012C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HDRBloomMode hdr;

		[Token(Token = "0x40012C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool doHdr;

		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float sepBlurSpread;

		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public BloomQuality quality;

		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float bloomIntensity;

		[Token(Token = "0x40012CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float bloomThreshold;

		[Token(Token = "0x40012CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnityEngine.Color bloomThresholdColor;

		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int bloomBlurIterations;

		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int hollywoodFlareBlurIterations;

		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float flareRotation;

		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public LensFlareStyle lensflareMode;

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float hollyStretchWidth;

		[Token(Token = "0x40012D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float lensflareIntensity;

		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float lensflareThreshold;

		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float lensFlareSaturation;

		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public UnityEngine.Color flareColorA;

		[Token(Token = "0x40012D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public UnityEngine.Color flareColorB;

		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public UnityEngine.Color flareColorC;

		[Token(Token = "0x40012DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public UnityEngine.Color flareColorD;

		[Token(Token = "0x40012DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Texture2D lensFlareVignetteMask;

		[Token(Token = "0x40012DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Shader lensFlareShader;

		[Token(Token = "0x40012DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Material lensFlareMaterial;

		[Token(Token = "0x40012DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Shader screenBlendShader;

		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Material screenBlend;

		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Shader blurAndFlaresShader;

		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Material blurAndFlaresMaterial;

		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Shader brightPassFilterShader;

		[Token(Token = "0x40012E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Material brightPassFilterMaterial;

		[Token(Token = "0x6001545")]
		[Address(RVA = "0x1F14DA8", Offset = "0x1F14DA8", VA = "0x1F14DA8", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6001546")]
		[Address(RVA = "0x1F14E98", Offset = "0x1F14E98", VA = "0x1F14E98")]
		public void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001547")]
		[Address(RVA = "0x1F16254", Offset = "0x1F16254", VA = "0x1F16254")]
		private void AddTo(float intensity_, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x6001548")]
		[Address(RVA = "0x1F16054", Offset = "0x1F16054", VA = "0x1F16054")]
		private void BlendFlares(RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x6001549")]
		[Address(RVA = "0x1F15D5C", Offset = "0x1F15D5C", VA = "0x1F15D5C")]
		private void BrightFilter(float thresh, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x600154A")]
		[Address(RVA = "0x1F15C78", Offset = "0x1F15C78", VA = "0x1F15C78")]
		private void BrightFilter(UnityEngine.Color threshColor, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x600154B")]
		[Address(RVA = "0x1F15E48", Offset = "0x1F15E48", VA = "0x1F15E48")]
		private void Vignette(float amount, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x600154C")]
		[Address(RVA = "0x1F1631C", Offset = "0x1F1631C", VA = "0x1F1631C")]
		public Bloom()
		{
		}
	}
	[Token(Token = "0x20002B1")]
	public enum LensflareStyle34
	{
		[Token(Token = "0x40012E5")]
		Ghosting,
		[Token(Token = "0x40012E6")]
		Anamorphic,
		[Token(Token = "0x40012E7")]
		Combined
	}
	[Token(Token = "0x20002B2")]
	public enum TweakMode34
	{
		[Token(Token = "0x40012E9")]
		Basic,
		[Token(Token = "0x40012EA")]
		Complex
	}
	[Token(Token = "0x20002B3")]
	public enum HDRBloomMode
	{
		[Token(Token = "0x40012EC")]
		Auto,
		[Token(Token = "0x40012ED")]
		On,
		[Token(Token = "0x40012EE")]
		Off
	}
	[Token(Token = "0x20002B4")]
	public enum BloomScreenBlendMode
	{
		[Token(Token = "0x40012F0")]
		Screen,
		[Token(Token = "0x40012F1")]
		Add
	}
	[Token(Token = "0x20002B5")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x14675E8", Offset = "0x14675E8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x14675E8", Offset = "0x14675E8")]
	public class BloomAndFlares : PostEffectsBase
	{
		[Token(Token = "0x40012F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TweakMode34 tweakMode;

		[Token(Token = "0x40012F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public BloomScreenBlendMode screenBlendMode;

		[Token(Token = "0x40012F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HDRBloomMode hdr;

		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool doHdr;

		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float sepBlurSpread;

		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float useSrcAlphaAsMask;

		[Token(Token = "0x40012F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float bloomIntensity;

		[Token(Token = "0x40012F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float bloomThreshold;

		[Token(Token = "0x40012FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int bloomBlurIterations;

		[Token(Token = "0x40012FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool lensflares;

		[Token(Token = "0x40012FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int hollywoodFlareBlurIterations;

		[Token(Token = "0x40012FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public LensflareStyle34 lensflareMode;

		[Token(Token = "0x40012FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float hollyStretchWidth;

		[Token(Token = "0x40012FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float lensflareIntensity;

		[Token(Token = "0x4001300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float lensflareThreshold;

		[Token(Token = "0x4001301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public UnityEngine.Color flareColorA;

		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public UnityEngine.Color flareColorB;

		[Token(Token = "0x4001303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public UnityEngine.Color flareColorC;

		[Token(Token = "0x4001304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public UnityEngine.Color flareColorD;

		[Token(Token = "0x4001305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Texture2D lensFlareVignetteMask;

		[Token(Token = "0x4001306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Shader lensFlareShader;

		[Token(Token = "0x4001307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Material lensFlareMaterial;

		[Token(Token = "0x4001308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Shader vignetteShader;

		[Token(Token = "0x4001309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Material vignetteMaterial;

		[Token(Token = "0x400130A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Shader separableBlurShader;

		[Token(Token = "0x400130B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Material separableBlurMaterial;

		[Token(Token = "0x400130C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Shader addBrightStuffOneOneShader;

		[Token(Token = "0x400130D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Material addBrightStuffBlendOneOneMaterial;

		[Token(Token = "0x400130E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Shader screenBlendShader;

		[Token(Token = "0x400130F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Material screenBlend;

		[Token(Token = "0x4001310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public Shader hollywoodFlaresShader;

		[Token(Token = "0x4001311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Material hollywoodFlaresMaterial;

		[Token(Token = "0x4001312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public Shader brightPassFilterShader;

		[Token(Token = "0x4001313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Material brightPassFilterMaterial;

		[Token(Token = "0x600154D")]
		[Address(RVA = "0x1F1645C", Offset = "0x1F1645C", VA = "0x1F1645C", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x600154E")]
		[Address(RVA = "0x1F165BC", Offset = "0x1F165BC", VA = "0x1F165BC")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600154F")]
		[Address(RVA = "0x1F17508", Offset = "0x1F17508", VA = "0x1F17508")]
		private void AddTo(float intensity_, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x6001550")]
		[Address(RVA = "0x1F17318", Offset = "0x1F17318", VA = "0x1F17318")]
		private void BlendFlares(RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x6001551")]
		[Address(RVA = "0x1F1709C", Offset = "0x1F1709C", VA = "0x1F1709C")]
		private void BrightFilter(float thresh, float useAlphaAsMask, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x6001552")]
		[Address(RVA = "0x1F171C4", Offset = "0x1F171C4", VA = "0x1F171C4")]
		private void Vignette(float amount, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0x1F175BC", Offset = "0x1F175BC", VA = "0x1F175BC")]
		public BloomAndFlares()
		{
		}
	}
	[Token(Token = "0x20002B6")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1467680", Offset = "0x1467680")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1467680", Offset = "0x1467680")]
	public class BloomOptimized : PostEffectsBase
	{
		[Token(Token = "0x2000663")]
		public enum Resolution
		{
			[Token(Token = "0x4002575")]
			Low,
			[Token(Token = "0x4002576")]
			High
		}

		[Token(Token = "0x2000664")]
		public enum BlurType
		{
			[Token(Token = "0x4002578")]
			Standard,
			[Token(Token = "0x4002579")]
			Sgx
		}

		[Token(Token = "0x4001314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1474B34", Offset = "0x1474B34")]
		public float threshold;

		[Token(Token = "0x4001315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1474B4C", Offset = "0x1474B4C")]
		public float intensity;

		[Token(Token = "0x4001316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1474B64", Offset = "0x1474B64")]
		public float blurSize;

		[Token(Token = "0x4001317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Resolution resolution;

		[Token(Token = "0x4001318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1474B7C", Offset = "0x1474B7C")]
		public int blurIterations;

		[Token(Token = "0x4001319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public BlurType blurType;

		[Token(Token = "0x400131A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Shader fastBloomShader;

		[Token(Token = "0x400131B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material fastBloomMaterial;

		[Token(Token = "0x6001554")]
		[Address(RVA = "0x1F176EC", Offset = "0x1F176EC", VA = "0x1F176EC", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6001555")]
		[Address(RVA = "0x1F17764", Offset = "0x1F17764", VA = "0x1F17764")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001556")]
		[Address(RVA = "0x1F17814", Offset = "0x1F17814", VA = "0x1F17814")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001557")]
		[Address(RVA = "0x1F17BE0", Offset = "0x1F17BE0", VA = "0x1F17BE0")]
		public BloomOptimized()
		{
		}
	}
	[Token(Token = "0x20002B7")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1467718", Offset = "0x1467718")]
	public class Blur : MonoBehaviour
	{
		[Token(Token = "0x400131C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1474B94", Offset = "0x1474B94")]
		public int iterations;

		[Token(Token = "0x400131D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1474BAC", Offset = "0x1474BAC")]
		public float blurSpread;

		[Token(Token = "0x400131E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Shader blurShader;

		[Token(Token = "0x400131F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Material m_Material;

		[Token(Token = "0x1700025E")]
		protected Material material
		{
			[Token(Token = "0x6001558")]
			[Address(RVA = "0x1F17C04", Offset = "0x1F17C04", VA = "0x1F17C04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001559")]
		[Address(RVA = "0x1F17D44", Offset = "0x1F17D44", VA = "0x1F17D44")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x600155A")]
		[Address(RVA = "0x1F17E40", Offset = "0x1F17E40", VA = "0x1F17E40")]
		protected void Start()
		{
		}

		[Token(Token = "0x600155B")]
		[Address(RVA = "0x1F17F00", Offset = "0x1F17F00", VA = "0x1F17F00")]
		public void FourTapCone(RenderTexture source, RenderTexture dest, int iteration)
		{
		}

		[Token(Token = "0x600155C")]
		[Address(RVA = "0x1F180A4", Offset = "0x1F180A4", VA = "0x1F180A4")]
		private void DownSample4x(RenderTexture source, RenderTexture dest)
		{
		}

		[Token(Token = "0x600155D")]
		[Address(RVA = "0x1F1821C", Offset = "0x1F1821C", VA = "0x1F1821C")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600155E")]
		[Address(RVA = "0x1F18388", Offset = "0x1F18388", VA = "0x1F18388")]
		public Blur()
		{
		}
	}
	[Token(Token = "0x20002B8")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1467764", Offset = "0x1467764")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1467764", Offset = "0x1467764")]
	public class BlurOptimized : PostEffectsBase
	{
		[Token(Token = "0x2000665")]
		public enum BlurType
		{
			[Token(Token = "0x400257B")]
			StandardGauss,
			[Token(Token = "0x400257C")]
			SgxGauss
		}

		[Token(Token = "0x4001320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1474BC4", Offset = "0x1474BC4")]
		public int downsample;

		[Token(Token = "0x4001321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1474BDC", Offset = "0x1474BDC")]
		public float blurSize;

		[Token(Token = "0x4001322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1474BF4", Offset = "0x1474BF4")]
		public int blurIterations;

		[Token(Token = "0x4001323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public BlurType blurType;

		[Token(Token = "0x4001324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Shader blurShader;

		[Token(Token = "0x4001325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material blurMaterial;

		[Token(Token = "0x6001560")]
		[Address(RVA = "0x1F183A4", Offset = "0x1F183A4", VA = "0x1F183A4", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6001561")]
		[Address(RVA = "0x1F1841C", Offset = "0x1F1841C", VA = "0x1F1841C")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001562")]
		[Address(RVA = "0x1F184CC", Offset = "0x1F184CC", VA = "0x1F184CC")]
		public void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001563")]
		[Address(RVA = "0x1F18870", Offset = "0x1F18870", VA = "0x1F18870")]
		public BlurOptimized()
		{
		}
	}
	[Token(Token = "0x20002B9")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x14677FC", Offset = "0x14677FC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x14677FC", Offset = "0x14677FC")]
	public class CameraMotionBlur : PostEffectsBase
	{
		[Token(Token = "0x2000666")]
		public enum MotionBlurFilter
		{
			[Token(Token = "0x400257E")]
			CameraMotion,
			[Token(Token = "0x400257F")]
			LocalBlur,
			[Token(Token = "0x4002580")]
			Reconstruction,
			[Token(Token = "0x4002581")]
			ReconstructionDX11,
			[Token(Token = "0x4002582")]
			ReconstructionDisc
		}

		[Token(Token = "0x4001326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float MAX_RADIUS;

		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MotionBlurFilter filterType;

		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool preview;

		[Token(Token = "0x4001329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 previewScale;

		[Token(Token = "0x400132A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float movementScale;

		[Token(Token = "0x400132B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float rotationScale;

		[Token(Token = "0x400132C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float maxVelocity;

		[Token(Token = "0x400132D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float minVelocity;

		[Token(Token = "0x400132E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float velocityScale;

		[Token(Token = "0x400132F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float softZDistance;

		[Token(Token = "0x4001330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int velocityDownsample;

		[Token(Token = "0x4001331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public LayerMask excludeLayers;

		[Token(Token = "0x4001332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject tmpCam;

		[Token(Token = "0x4001333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Shader shader;

		[Token(Token = "0x4001334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Shader dx11MotionBlurShader;

		[Token(Token = "0x4001335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Shader replacementClear;

		[Token(Token = "0x4001336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Material motionBlurMaterial;

		[Token(Token = "0x4001337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Material dx11MotionBlurMaterial;

		[Token(Token = "0x4001338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Texture2D noiseTexture;

		[Token(Token = "0x4001339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float jitter;

		[Token(Token = "0x400133A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public bool showVelocity;

		[Token(Token = "0x400133B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float showVelocityScale;

		[Token(Token = "0x400133C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Matrix4x4 currentViewProjMat;

		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private Matrix4x4 prevViewProjMat;

		[Token(Token = "0x400133E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private int prevFrameCount;

		[Token(Token = "0x400133F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private bool wasActive;

		[Token(Token = "0x4001340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private Vector3 prevFrameForward;

		[Token(Token = "0x4001341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private Vector3 prevFrameUp;

		[Token(Token = "0x4001342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private Vector3 prevFramePos;

		[Token(Token = "0x4001343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Camera _camera;

		[Token(Token = "0x6001564")]
		[Address(RVA = "0x1F1888C", Offset = "0x1F1888C", VA = "0x1F1888C")]
		private void CalculateViewProjection()
		{
		}

		[Token(Token = "0x6001565")]
		[Address(RVA = "0x1F189D8", Offset = "0x1F189D8", VA = "0x1F189D8")]
		private new void Start()
		{
		}

		[Token(Token = "0x6001566")]
		[Address(RVA = "0x1F18B70", Offset = "0x1F18B70", VA = "0x1F18B70")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0x1F18C3C", Offset = "0x1F18C3C", VA = "0x1F18C3C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001568")]
		[Address(RVA = "0x1F18DD8", Offset = "0x1F18DD8", VA = "0x1F18DD8", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6001569")]
		[Address(RVA = "0x1F18E90", Offset = "0x1F18E90", VA = "0x1F18E90")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600156A")]
		[Address(RVA = "0x1F18AC0", Offset = "0x1F18AC0", VA = "0x1F18AC0")]
		private void Remember()
		{
		}

		[Token(Token = "0x600156B")]
		[Address(RVA = "0x1F1A51C", Offset = "0x1F1A51C", VA = "0x1F1A51C")]
		private Camera GetTmpCam()
		{
			return null;
		}

		[Token(Token = "0x600156C")]
		[Address(RVA = "0x1F1A430", Offset = "0x1F1A430", VA = "0x1F1A430")]
		private void StartFrame()
		{
		}

		[Token(Token = "0x600156D")]
		[Address(RVA = "0x1F1A50C", Offset = "0x1F1A50C", VA = "0x1F1A50C")]
		private static int divRoundUp(int x, int d)
		{
			return default(int);
		}

		[Token(Token = "0x600156E")]
		[Address(RVA = "0x1F1A880", Offset = "0x1F1A880", VA = "0x1F1A880")]
		public CameraMotionBlur()
		{
		}
	}
	[Token(Token = "0x20002BA")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1467894", Offset = "0x1467894")]
	public class ColorCorrectionCurves : PostEffectsBase
	{
		[Token(Token = "0x2000667")]
		public enum ColorCorrectionMode
		{
			[Token(Token = "0x4002584")]
			Simple,
			[Token(Token = "0x4002585")]
			Advanced
		}

		[Token(Token = "0x4001344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve redChannel;

		[Token(Token = "0x4001345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve greenChannel;

		[Token(Token = "0x4001346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationCurve blueChannel;

		[Token(Token = "0x4001347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool useDepthCorrection;

		[Token(Token = "0x4001348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AnimationCurve zCurve;

		[Token(Token = "0x4001349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AnimationCurve depthRedChannel;

		[Token(Token = "0x400134A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AnimationCurve depthGreenChannel;

		[Token(Token = "0x400134B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AnimationCurve depthBlueChannel;

		[Token(Token = "0x400134C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Material ccMaterial;

		[Token(Token = "0x400134D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material ccDepthMaterial;

		[Token(Token = "0x400134E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Material selectiveCcMaterial;

		[Token(Token = "0x400134F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Texture2D rgbChannelTex;

		[Token(Token = "0x4001350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Texture2D rgbDepthChannelTex;

		[Token(Token = "0x4001351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Texture2D zCurveTex;

		[Token(Token = "0x4001352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float saturation;

		[Token(Token = "0x4001353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public bool selectiveCc;

		[Token(Token = "0x4001354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public UnityEngine.Color selectiveFromColor;

		[Token(Token = "0x4001355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public UnityEngine.Color selectiveToColor;

		[Token(Token = "0x4001356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public ColorCorrectionMode mode;

		[Token(Token = "0x4001357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public bool updateTextures;

		[Token(Token = "0x4001358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Shader colorCorrectionCurvesShader;

		[Token(Token = "0x4001359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Shader simpleColorCorrectionCurvesShader;

		[Token(Token = "0x400135A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Shader colorCorrectionSelectiveShader;

		[Token(Token = "0x400135B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool updateTexturesOnStartup;

		[Token(Token = "0x6001570")]
		[Address(RVA = "0x2E8078C", Offset = "0x2E8078C", VA = "0x2E8078C")]
		private new void Start()
		{
		}

		[Token(Token = "0x6001571")]
		[Address(RVA = "0x2E807C8", Offset = "0x2E807C8", VA = "0x2E807C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001572")]
		[Address(RVA = "0x2E807CC", Offset = "0x2E807CC", VA = "0x2E807CC", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6001573")]
		[Address(RVA = "0x2E81008", Offset = "0x2E81008", VA = "0x2E81008")]
		public void UpdateParameters()
		{
		}

		[Token(Token = "0x6001574")]
		[Address(RVA = "0x2E81418", Offset = "0x2E81418", VA = "0x2E81418")]
		private void UpdateTextures()
		{
		}

		[Token(Token = "0x6001575")]
		[Address(RVA = "0x2E8141C", Offset = "0x2E8141C", VA = "0x2E8141C")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001576")]
		[Address(RVA = "0x2E81718", Offset = "0x2E81718", VA = "0x2E81718")]
		public ColorCorrectionCurves()
		{
		}
	}
	[Token(Token = "0x20002BB")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x14678E0", Offset = "0x14678E0")]
	public class ColorCorrectionLookup : PostEffectsBase
	{
		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Shader shader;

		[Token(Token = "0x400135D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Material material;

		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Texture3D converted3DLut;

		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string basedOnTempTex;

		[Token(Token = "0x6001577")]
		[Address(RVA = "0x2E81E24", Offset = "0x2E81E24", VA = "0x2E81E24", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6001578")]
		[Address(RVA = "0x2E81E8C", Offset = "0x2E81E8C", VA = "0x2E81E8C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001579")]
		[Address(RVA = "0x2E81F4C", Offset = "0x2E81F4C", VA = "0x2E81F4C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600157A")]
		[Address(RVA = "0x2E81FFC", Offset = "0x2E81FFC", VA = "0x2E81FFC")]
		public void SetIdentityLut()
		{
		}

		[Token(Token = "0x600157B")]
		[Address(RVA = "0x2E82210", Offset = "0x2E82210", VA = "0x2E82210")]
		public bool ValidDimensions(Texture2D tex2d)
		{
			return default(bool);
		}

		[Token(Token = "0x600157C")]
		[Address(RVA = "0x2E82304", Offset = "0x2E82304", VA = "0x2E82304")]
		public void Convert(Texture2D temp2DTex, string path)
		{
		}

		[Token(Token = "0x600157D")]
		[Address(RVA = "0x2E82638", Offset = "0x2E82638", VA = "0x2E82638")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600157E")]
		[Address(RVA = "0x2E82824", Offset = "0x2E82824", VA = "0x2E82824")]
		public ColorCorrectionLookup()
		{
		}
	}
	[Token(Token = "0x20002BC")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x146792C", Offset = "0x146792C")]
	public class ColorCorrectionRamp : ImageEffectBase
	{
		[Token(Token = "0x4001360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Texture textureRamp;

		[Token(Token = "0x600157F")]
		[Address(RVA = "0x2E82880", Offset = "0x2E82880", VA = "0x2E82880")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001580")]
		[Address(RVA = "0x2E82A0C", Offset = "0x2E82A0C", VA = "0x2E82A0C")]
		public ColorCorrectionRamp()
		{
		}
	}
	[Token(Token = "0x20002BD")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1467978", Offset = "0x1467978")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1467978", Offset = "0x1467978")]
	public class ContrastEnhance : PostEffectsBase
	{
		[Token(Token = "0x4001361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1474C0C", Offset = "0x1474C0C")]
		public float intensity;

		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1474C24", Offset = "0x1474C24")]
		public float threshold;

		[Token(Token = "0x4001363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Material separableBlurMaterial;

		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material contrastCompositeMaterial;

		[Token(Token = "0x4001365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1474C40", Offset = "0x1474C40")]
		public float blurSpread;

		[Token(Token = "0x4001366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Shader separableBlurShader;

		[Token(Token = "0x4001367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Shader contrastCompositeShader;

		[Token(Token = "0x6001581")]
		[Address(RVA = "0x2E82A1C", Offset = "0x2E82A1C", VA = "0x2E82A1C", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6001582")]
		[Address(RVA = "0x2E82AAC", Offset = "0x2E82AAC", VA = "0x2E82AAC")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001583")]
		[Address(RVA = "0x2E82E14", Offset = "0x2E82E14", VA = "0x2E82E14")]
		public ContrastEnhance()
		{
		}
	}
	[Token(Token = "0x20002BE")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1467A10", Offset = "0x1467A10")]
	public class ContrastStretch : MonoBehaviour
	{
		[Token(Token = "0x4001368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1474C58", Offset = "0x1474C58")]
		public float adaptationSpeed;

		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1474C74", Offset = "0x1474C74")]
		public float limitMinimum;

		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1474C8C", Offset = "0x1474C8C")]
		public float limitMaximum;

		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RenderTexture[] adaptRenderTex;

		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int curAdaptIndex;

		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Shader shaderLum;

		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material m_materialLum;

		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Shader shaderReduce;

		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material m_materialReduce;

		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Shader shaderAdapt;

		[Token(Token = "0x4001372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material m_materialAdapt;

		[Token(Token = "0x4001373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Shader shaderApply;

		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material m_materialApply;

		[Token(Token = "0x1700025F")]
		protected Material materialLum
		{
			[Token(Token = "0x6001584")]
			[Address(RVA = "0x2E82E28", Offset = "0x2E82E28", VA = "0x2E82E28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000260")]
		protected Material materialReduce
		{
			[Token(Token = "0x6001585")]
			[Address(RVA = "0x2E82EFC", Offset = "0x2E82EFC", VA = "0x2E82EFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000261")]
		protected Material materialAdapt
		{
			[Token(Token = "0x6001586")]
			[Address(RVA = "0x2E82FD0", Offset = "0x2E82FD0", VA = "0x2E82FD0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000262")]
		protected Material materialApply
		{
			[Token(Token = "0x6001587")]
			[Address(RVA = "0x2E830A4", Offset = "0x2E830A4", VA = "0x2E830A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001588")]
		[Address(RVA = "0x2E83178", Offset = "0x2E83178", VA = "0x2E83178")]
		private void Start()
		{
		}

		[Token(Token = "0x6001589")]
		[Address(RVA = "0x2E8320C", Offset = "0x2E8320C", VA = "0x2E8320C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0x2E83364", Offset = "0x2E83364", VA = "0x2E83364")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600158B")]
		[Address(RVA = "0x2E83594", Offset = "0x2E83594", VA = "0x2E83594")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600158C")]
		[Address(RVA = "0x2E837F0", Offset = "0x2E837F0", VA = "0x2E837F0")]
		private void CalculateAdaptation(Texture curTexture)
		{
		}

		[Token(Token = "0x600158D")]
		[Address(RVA = "0x2E83A00", Offset = "0x2E83A00", VA = "0x2E83A00")]
		public ContrastStretch()
		{
		}
	}
	[Token(Token = "0x20002BF")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1467A5C", Offset = "0x1467A5C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1467A5C", Offset = "0x1467A5C")]
	public class CreaseShading : PostEffectsBase
	{
		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float intensity;

		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int softness;

		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float spread;

		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Shader blurShader;

		[Token(Token = "0x4001379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material blurMaterial;

		[Token(Token = "0x400137A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Shader depthFetchShader;

		[Token(Token = "0x400137B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material depthFetchMaterial;

		[Token(Token = "0x400137C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Shader creaseApplyShader;

		[Token(Token = "0x400137D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material creaseApplyMaterial;

		[Token(Token = "0x600158E")]
		[Address(RVA = "0x2E83A84", Offset = "0x2E83A84", VA = "0x2E83A84", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x600158F")]
		[Address(RVA = "0x2E83B40", Offset = "0x2E83B40", VA = "0x2E83B40")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001590")]
		[Address(RVA = "0x2E83EE8", Offset = "0x2E83EE8", VA = "0x2E83EE8")]
		public CreaseShading()
		{
		}
	}
	[Token(Token = "0x20002C0")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1467AF4", Offset = "0x1467AF4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1467AF4", Offset = "0x1467AF4")]
	public class DepthOfFieldDeprecated : PostEffectsBase
	{
		[Token(Token = "0x2000668")]
		public enum Dof34QualitySetting
		{
			[Token(Token = "0x4002587")]
			OnlyBackground = 1,
			[Token(Token = "0x4002588")]
			BackgroundAndForeground
		}

		[Token(Token = "0x2000669")]
		public enum DofResolution
		{
			[Token(Token = "0x400258A")]
			High = 2,
			[Token(Token = "0x400258B")]
			Medium,
			[Token(Token = "0x400258C")]
			Low
		}

		[Token(Token = "0x200066A")]
		public enum DofBlurriness
		{
			[Token(Token = "0x400258E")]
			Low = 1,
			[Token(Token = "0x400258F")]
			High = 2,
			[Token(Token = "0x4002590")]
			VeryHigh = 4
		}

		[Token(Token = "0x200066B")]
		public enum BokehDestination
		{
			[Token(Token = "0x4002592")]
			Background = 1,
			[Token(Token = "0x4002593")]
			Foreground,
			[Token(Token = "0x4002594")]
			BackgroundAndForeground
		}

		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int SMOOTH_DOWNSAMPLE_PASS;

		[Token(Token = "0x400137F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static float BOKEH_EXTRA_BLUR;

		[Token(Token = "0x4001380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Dof34QualitySetting quality;

		[Token(Token = "0x4001381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public DofResolution resolution;

		[Token(Token = "0x4001382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool simpleTweakMode;

		[Token(Token = "0x4001383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float focalPoint;

		[Token(Token = "0x4001384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float smoothness;

		[Token(Token = "0x4001385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float focalZDistance;

		[Token(Token = "0x4001386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float focalZStartCurve;

		[Token(Token = "0x4001387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float focalZEndCurve;

		[Token(Token = "0x4001388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float focalStartCurve;

		[Token(Token = "0x4001389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float focalEndCurve;

		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float focalDistance01;

		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform objectFocus;

		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float focalSize;

		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public DofBlurriness bluriness;

		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float maxBlurSpread;

		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float foregroundBlurExtrude;

		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Shader dofBlurShader;

		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Material dofBlurMaterial;

		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Shader dofShader;

		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Material dofMaterial;

		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool visualize;

		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public BokehDestination bokehDestination;

		[Token(Token = "0x4001396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float widthOverHeight;

		[Token(Token = "0x4001397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float oneOverBaseSize;

		[Token(Token = "0x4001398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public bool bokeh;

		[Token(Token = "0x4001399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		public bool bokehSupport;

		[Token(Token = "0x400139A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Shader bokehShader;

		[Token(Token = "0x400139B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Texture2D bokehTexture;

		[Token(Token = "0x400139C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float bokehScale;

		[Token(Token = "0x400139D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float bokehIntensity;

		[Token(Token = "0x400139E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public float bokehThresholdContrast;

		[Token(Token = "0x400139F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public float bokehThresholdLuminance;

		[Token(Token = "0x40013A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public int bokehDownsample;

		[Token(Token = "0x40013A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Material bokehMaterial;

		[Token(Token = "0x40013A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Camera _camera;

		[Token(Token = "0x40013A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private RenderTexture foregroundTexture;

		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private RenderTexture mediumRezWorkTexture;

		[Token(Token = "0x40013A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private RenderTexture finalDefocus;

		[Token(Token = "0x40013A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private RenderTexture lowRezWorkTexture;

		[Token(Token = "0x40013A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private RenderTexture bokehSource;

		[Token(Token = "0x40013A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private RenderTexture bokehSource2;

		[Token(Token = "0x6001591")]
		[Address(RVA = "0x2E83F00", Offset = "0x2E83F00", VA = "0x2E83F00")]
		private void CreateMaterials()
		{
		}

		[Token(Token = "0x6001592")]
		[Address(RVA = "0x2E84010", Offset = "0x2E84010", VA = "0x2E84010", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6001593")]
		[Address(RVA = "0x2E84148", Offset = "0x2E84148", VA = "0x2E84148")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001594")]
		[Address(RVA = "0x2E84394", Offset = "0x2E84394", VA = "0x2E84394")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001595")]
		[Address(RVA = "0x2E8441C", Offset = "0x2E8441C", VA = "0x2E8441C")]
		private float FocalDistance01(float worldDist)
		{
			return default(float);
		}

		[Token(Token = "0x6001596")]
		[Address(RVA = "0x2E84578", Offset = "0x2E84578", VA = "0x2E84578")]
		private int GetDividerBasedOnQuality()
		{
			return default(int);
		}

		[Token(Token = "0x6001597")]
		[Address(RVA = "0x2E8459C", Offset = "0x2E8459C", VA = "0x2E8459C")]
		private int GetLowResolutionDividerBasedOnQuality(int baseDivider)
		{
			return default(int);
		}

		[Token(Token = "0x6001598")]
		[Address(RVA = "0x2E845C0", Offset = "0x2E845C0", VA = "0x2E845C0")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001599")]
		[Address(RVA = "0x2E85440", Offset = "0x2E85440", VA = "0x2E85440")]
		private void Blur(RenderTexture from, RenderTexture to, DofBlurriness iterations, int blurPass, float spread)
		{
		}

		[Token(Token = "0x600159A")]
		[Address(RVA = "0x2E85AF4", Offset = "0x2E85AF4", VA = "0x2E85AF4")]
		private void BlurFg(RenderTexture from, RenderTexture to, DofBlurriness iterations, int blurPass, float spread)
		{
		}

		[Token(Token = "0x600159B")]
		[Address(RVA = "0x2E85F5C", Offset = "0x2E85F5C", VA = "0x2E85F5C")]
		private void BlurHex(RenderTexture from, RenderTexture to, int blurPass, float spread, RenderTexture tmp)
		{
		}

		[Token(Token = "0x600159C")]
		[Address(RVA = "0x2E852F4", Offset = "0x2E852F4", VA = "0x2E852F4")]
		private void Downsample(RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x600159D")]
		[Address(RVA = "0x2E856DC", Offset = "0x2E856DC", VA = "0x2E856DC")]
		private void AddBokeh(RenderTexture bokehInfo, RenderTexture tempTex, RenderTexture finalTarget)
		{
		}

		[Token(Token = "0x600159E")]
		[Address(RVA = "0x2E85DB0", Offset = "0x2E85DB0", VA = "0x2E85DB0")]
		private void ReleaseTextures()
		{
		}

		[Token(Token = "0x600159F")]
		[Address(RVA = "0x2E84F24", Offset = "0x2E84F24", VA = "0x2E84F24")]
		private void AllocateTextures(bool blurForeground, RenderTexture source, int divider, int lowTexDivider)
		{
		}

		[Token(Token = "0x60015A0")]
		[Address(RVA = "0x2E86458", Offset = "0x2E86458", VA = "0x2E86458")]
		public DepthOfFieldDeprecated()
		{
		}
	}
	[Token(Token = "0x20002C1")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1467B8C", Offset = "0x1467B8C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1467B8C", Offset = "0x1467B8C")]
	public class EdgeDetection : PostEffectsBase
	{
		[Token(Token = "0x200066C")]
		public enum EdgeDetectMode
		{
			[Token(Token = "0x4002596")]
			TriangleDepthNormals,
			[Token(Token = "0x4002597")]
			RobertsCrossDepthNormals,
			[Token(Token = "0x4002598")]
			SobelDepth,
			[Token(Token = "0x4002599")]
			SobelDepthThin,
			[Token(Token = "0x400259A")]
			TriangleLuminance
		}

		[Token(Token = "0x40013A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EdgeDetectMode mode;

		[Token(Token = "0x40013AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float sensitivityDepth;

		[Token(Token = "0x40013AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float sensitivityNormals;

		[Token(Token = "0x40013AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float lumThreshold;

		[Token(Token = "0x40013AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float edgeExp;

		[Token(Token = "0x40013AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float sampleDist;

		[Token(Token = "0x40013AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float edgesOnly;

		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public UnityEngine.Color edgesOnlyBgColor;

		[Token(Token = "0x40013B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Shader edgeDetectShader;

		[Token(Token = "0x40013B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material edgeDetectMaterial;

		[Token(Token = "0x40013B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private EdgeDetectMode oldMode;

		[Token(Token = "0x60015A2")]
		[Address(RVA = "0x2E86530", Offset = "0x2E86530", VA = "0x2E86530", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60015A3")]
		[Address(RVA = "0x2E8667C", Offset = "0x2E8667C", VA = "0x2E8667C")]
		private new void Start()
		{
		}

		[Token(Token = "0x60015A4")]
		[Address(RVA = "0x2E865BC", Offset = "0x2E865BC", VA = "0x2E865BC")]
		private void SetCameraFlag()
		{
		}

		[Token(Token = "0x60015A5")]
		[Address(RVA = "0x2E86688", Offset = "0x2E86688", VA = "0x2E86688")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60015A6")]
		[Address(RVA = "0x2E8668C", Offset = "0x2E8668C", VA = "0x2E8668C")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60015A7")]
		[Address(RVA = "0x2E86878", Offset = "0x2E86878", VA = "0x2E86878")]
		public EdgeDetection()
		{
		}
	}
	[Token(Token = "0x20002C2")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1467C24", Offset = "0x1467C24")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1467C24", Offset = "0x1467C24")]
	public class Fisheye : PostEffectsBase
	{
		[Token(Token = "0x40013B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1474CA4", Offset = "0x1474CA4")]
		public float strengthX;

		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1474CBC", Offset = "0x1474CBC")]
		public float strengthY;

		[Token(Token = "0x40013B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Shader fishEyeShader;

		[Token(Token = "0x40013B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material fisheyeMaterial;

		[Token(Token = "0x60015A8")]
		[Address(RVA = "0x2E868C8", Offset = "0x2E868C8", VA = "0x2E868C8", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60015A9")]
		[Address(RVA = "0x2E86934", Offset = "0x2E86934", VA = "0x2E86934")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60015AA")]
		[Address(RVA = "0x2E86AA4", Offset = "0x2E86AA4", VA = "0x2E86AA4")]
		public Fisheye()
		{
		}
	}
	[Token(Token = "0x20002C3")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1467CBC", Offset = "0x1467CBC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1467CBC", Offset = "0x1467CBC")]
	internal class GlobalFog : PostEffectsBase
	{
		[Token(Token = "0x40013B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1474CD4", Offset = "0x1474CD4")]
		public bool distanceFog;

		[Token(Token = "0x40013B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1474D0C", Offset = "0x1474D0C")]
		public bool excludeFarPixels;

		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1474D44", Offset = "0x1474D44")]
		public bool useRadialDistance;

		[Token(Token = "0x40013BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1474D7C", Offset = "0x1474D7C")]
		public bool heightFog;

		[Token(Token = "0x40013BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1474DB4", Offset = "0x1474DB4")]
		public float height;

		[Token(Token = "0x40013BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1474DEC", Offset = "0x1474DEC")]
		public float heightDensity;

		[Token(Token = "0x40013BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1474E08", Offset = "0x1474E08")]
		public float startDistance;

		[Token(Token = "0x40013BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Shader fogShader;

		[Token(Token = "0x40013C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material fogMaterial;

		[Token(Token = "0x60015AB")]
		[Address(RVA = "0x2E86AB8", Offset = "0x2E86AB8", VA = "0x2E86AB8", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0x2E86B2C", Offset = "0x2E86B2C", VA = "0x2E86B2C")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60015AD")]
		[Address(RVA = "0x2E87354", Offset = "0x2E87354", VA = "0x2E87354")]
		private static void CustomGraphicsBlit(RenderTexture source, RenderTexture dest, Material fxMaterial, int passNr)
		{
		}

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0x2E874C4", Offset = "0x2E874C4", VA = "0x2E874C4")]
		public GlobalFog()
		{
		}
	}
	[Token(Token = "0x20002C4")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1467D54", Offset = "0x1467D54")]
	public class Grayscale : ImageEffectBase
	{
		[Token(Token = "0x40013C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Texture textureRamp;

		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1474E40", Offset = "0x1474E40")]
		public float rampOffset;

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0x2E874E4", Offset = "0x2E874E4", VA = "0x2E874E4")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0x2E875C0", Offset = "0x2E875C0", VA = "0x2E875C0")]
		public Grayscale()
		{
		}
	}
	[Token(Token = "0x20002C5")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1467DA0", Offset = "0x1467DA0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1467DA0", Offset = "0x1467DA0")]
	public class ImageEffectBase : MonoBehaviour
	{
		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Shader shader;

		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material m_Material;

		[Token(Token = "0x17000263")]
		protected Material material
		{
			[Token(Token = "0x60015B2")]
			[Address(RVA = "0x2E82938", Offset = "0x2E82938", VA = "0x2E82938")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0x2E875C8", Offset = "0x2E875C8", VA = "0x2E875C8", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60015B3")]
		[Address(RVA = "0x2E87678", Offset = "0x2E87678", VA = "0x2E87678", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0x2E82A14", Offset = "0x2E82A14", VA = "0x2E82A14")]
		public ImageEffectBase()
		{
		}
	}
	[Token(Token = "0x20002C6")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1467E28", Offset = "0x1467E28")]
	public class ImageEffects
	{
		[Token(Token = "0x60015B5")]
		[Address(RVA = "0x2E87728", Offset = "0x2E87728", VA = "0x2E87728")]
		public static void RenderDistortion(Material material, RenderTexture source, RenderTexture destination, float angle, Vector2 center, Vector2 radius)
		{
		}

		[Token(Token = "0x60015B6")]
		[Address(RVA = "0x2E879A4", Offset = "0x2E879A4", VA = "0x2E879A4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1484BB0", Offset = "0x1484BB0")]
		public static void Blit(RenderTexture source, RenderTexture dest)
		{
		}

		[Token(Token = "0x60015B7")]
		[Address(RVA = "0x2E87A1C", Offset = "0x2E87A1C", VA = "0x2E87A1C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1484BE8", Offset = "0x1484BE8")]
		public static void BlitWithMaterial(Material material, RenderTexture source, RenderTexture dest)
		{
		}

		[Token(Token = "0x60015B8")]
		[Address(RVA = "0x2E87A9C", Offset = "0x2E87A9C", VA = "0x2E87A9C")]
		public ImageEffects()
		{
		}
	}
	[Token(Token = "0x20002C7")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1467E60", Offset = "0x1467E60")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1467E60", Offset = "0x1467E60")]
	public class MotionBlur : ImageEffectBase
	{
		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1474E58", Offset = "0x1474E58")]
		public float blurAmount;

		[Token(Token = "0x40013C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool extraBlur;

		[Token(Token = "0x40013C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RenderTexture accumTexture;

		[Token(Token = "0x60015B9")]
		[Address(RVA = "0x2E87AA4", Offset = "0x2E87AA4", VA = "0x2E87AA4", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60015BA")]
		[Address(RVA = "0x2E87AA8", Offset = "0x2E87AA8", VA = "0x2E87AA8", Slot = "5")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60015BB")]
		[Address(RVA = "0x2E87B1C", Offset = "0x2E87B1C", VA = "0x2E87B1C")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60015BC")]
		[Address(RVA = "0x2E87EB8", Offset = "0x2E87EB8", VA = "0x2E87EB8")]
		public MotionBlur()
		{
		}
	}
	[Token(Token = "0x20002C8")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1467EF8", Offset = "0x1467EF8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1467EF8", Offset = "0x1467EF8")]
	public class NoiseAndGrain : PostEffectsBase
	{
		[Token(Token = "0x40013C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float intensityMultiplier;

		[Token(Token = "0x40013C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float generalIntensity;

		[Token(Token = "0x40013CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float blackIntensity;

		[Token(Token = "0x40013CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float whiteIntensity;

		[Token(Token = "0x40013CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float midGrey;

		[Token(Token = "0x40013CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool dx11Grain;

		[Token(Token = "0x40013CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float softness;

		[Token(Token = "0x40013CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool monochrome;

		[Token(Token = "0x40013D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 intensities;

		[Token(Token = "0x40013D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 tiling;

		[Token(Token = "0x40013D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float monochromeTiling;

		[Token(Token = "0x40013D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public FilterMode filterMode;

		[Token(Token = "0x40013D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture2D noiseTexture;

		[Token(Token = "0x40013D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Shader noiseShader;

		[Token(Token = "0x40013D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Material noiseMaterial;

		[Token(Token = "0x40013D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Shader dx11NoiseShader;

		[Token(Token = "0x40013D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Material dx11NoiseMaterial;

		[Token(Token = "0x40013D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float TILE_AMOUNT;

		[Token(Token = "0x60015BD")]
		[Address(RVA = "0x2E87ECC", Offset = "0x2E87ECC", VA = "0x2E87ECC", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60015BE")]
		[Address(RVA = "0x2E87F6C", Offset = "0x2E87F6C", VA = "0x2E87F6C")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60015BF")]
		[Address(RVA = "0x2E888D4", Offset = "0x2E888D4", VA = "0x2E888D4")]
		private static void DrawNoiseQuadGrid(RenderTexture source, RenderTexture dest, Material fxMaterial, Texture2D noise, int passNr)
		{
		}

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0x2E88C50", Offset = "0x2E88C50", VA = "0x2E88C50")]
		public NoiseAndGrain()
		{
		}
	}
	[Token(Token = "0x20002C9")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1467F90", Offset = "0x1467F90")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1467F90", Offset = "0x1467F90")]
	public class NoiseAndScratches : MonoBehaviour
	{
		[Token(Token = "0x40013DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool monochrome;

		[Token(Token = "0x40013DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool rgbFallback;

		[Token(Token = "0x40013DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1474E74", Offset = "0x1474E74")]
		public float grainIntensityMin;

		[Token(Token = "0x40013DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1474E8C", Offset = "0x1474E8C")]
		public float grainIntensityMax;

		[Token(Token = "0x40013DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1474EA4", Offset = "0x1474EA4")]
		public float grainSize;

		[Token(Token = "0x40013DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1474EC4", Offset = "0x1474EC4")]
		public float scratchIntensityMin;

		[Token(Token = "0x40013E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1474EDC", Offset = "0x1474EDC")]
		public float scratchIntensityMax;

		[Token(Token = "0x40013E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1474EF4", Offset = "0x1474EF4")]
		public float scratchFPS;

		[Token(Token = "0x40013E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1474F0C", Offset = "0x1474F0C")]
		public float scratchJitter;

		[Token(Token = "0x40013E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Texture grainTexture;

		[Token(Token = "0x40013E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Texture scratchTexture;

		[Token(Token = "0x40013E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Shader shaderRGB;

		[Token(Token = "0x40013E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Shader shaderYUV;

		[Token(Token = "0x40013E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Material m_MaterialRGB;

		[Token(Token = "0x40013E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material m_MaterialYUV;

		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float scratchTimeLeft;

		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float scratchX;

		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float scratchY;

		[Token(Token = "0x17000264")]
		protected Material material
		{
			[Token(Token = "0x60015C3")]
			[Address(RVA = "0x2E88E98", Offset = "0x2E88E98", VA = "0x2E88E98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015C2")]
		[Address(RVA = "0x2E88D58", Offset = "0x2E88D58", VA = "0x2E88D58")]
		protected void Start()
		{
		}

		[Token(Token = "0x60015C4")]
		[Address(RVA = "0x2E8900C", Offset = "0x2E8900C", VA = "0x2E8900C")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x60015C5")]
		[Address(RVA = "0x2E89110", Offset = "0x2E89110", VA = "0x2E89110")]
		private void SanitizeParameters()
		{
		}

		[Token(Token = "0x60015C6")]
		[Address(RVA = "0x2E8924C", Offset = "0x2E8924C", VA = "0x2E8924C")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60015C7")]
		[Address(RVA = "0x2E89594", Offset = "0x2E89594", VA = "0x2E89594")]
		public NoiseAndScratches()
		{
		}
	}
	[Token(Token = "0x20002CA")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1468028", Offset = "0x1468028")]
	public class PostEffectsBase : MonoBehaviour
	{
		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool supportHDRTextures;

		[Token(Token = "0x40013ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		protected bool supportDX11;

		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		protected bool isSupported;

		[Token(Token = "0x40013EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Material> createdMaterials;

		[Token(Token = "0x60015C8")]
		[Address(RVA = "0x2E80B9C", Offset = "0x2E80B9C", VA = "0x2E80B9C")]
		protected Material CheckShaderAndCreateMaterial(Shader s, Material m2Create)
		{
			return null;
		}

		[Token(Token = "0x60015C9")]
		[Address(RVA = "0x2E895F4", Offset = "0x2E895F4", VA = "0x2E895F4")]
		protected Material CreateMaterial(Shader s, Material m2Create)
		{
			return null;
		}

		[Token(Token = "0x60015CA")]
		[Address(RVA = "0x2E897D0", Offset = "0x2E897D0", VA = "0x2E897D0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60015CB")]
		[Address(RVA = "0x2E897DC", Offset = "0x2E897DC", VA = "0x2E897DC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60015CC")]
		[Address(RVA = "0x2E897E0", Offset = "0x2E897E0", VA = "0x2E897E0")]
		private void RemoveCreatedMaterials()
		{
		}

		[Token(Token = "0x60015CD")]
		[Address(RVA = "0x2E89890", Offset = "0x2E89890", VA = "0x2E89890")]
		protected bool CheckSupport()
		{
			return default(bool);
		}

		[Token(Token = "0x60015CE")]
		[Address(RVA = "0x2E89898", Offset = "0x2E89898", VA = "0x2E89898", Slot = "4")]
		public virtual bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60015CF")]
		[Address(RVA = "0x2E807BC", Offset = "0x2E807BC", VA = "0x2E807BC")]
		protected void Start()
		{
		}

		[Token(Token = "0x60015D0")]
		[Address(RVA = "0x2E80A94", Offset = "0x2E80A94", VA = "0x2E80A94")]
		protected bool CheckSupport(bool needDepth)
		{
			return default(bool);
		}

		[Token(Token = "0x60015D1")]
		[Address(RVA = "0x2E89948", Offset = "0x2E89948", VA = "0x2E89948")]
		protected bool CheckSupport(bool needDepth, bool needHdr)
		{
			return default(bool);
		}

		[Token(Token = "0x60015D2")]
		[Address(RVA = "0x2E899A4", Offset = "0x2E899A4", VA = "0x2E899A4")]
		public bool Dx11Support()
		{
			return default(bool);
		}

		[Token(Token = "0x60015D3")]
		[Address(RVA = "0x2E80F60", Offset = "0x2E80F60", VA = "0x2E80F60")]
		protected void ReportAutoDisable()
		{
		}

		[Token(Token = "0x60015D4")]
		[Address(RVA = "0x2E899AC", Offset = "0x2E899AC", VA = "0x2E899AC")]
		private bool CheckShader(Shader s)
		{
			return default(bool);
		}

		[Token(Token = "0x60015D5")]
		[Address(RVA = "0x2E895C8", Offset = "0x2E895C8", VA = "0x2E895C8")]
		protected void NotSupported()
		{
		}

		[Token(Token = "0x60015D6")]
		[Address(RVA = "0x2E89BF4", Offset = "0x2E89BF4", VA = "0x2E89BF4")]
		protected void DrawBorder(RenderTexture dest, Material material)
		{
		}

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0x2E81D9C", Offset = "0x2E81D9C", VA = "0x2E81D9C")]
		public PostEffectsBase()
		{
		}
	}
	[Token(Token = "0x20002CB")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x146809C", Offset = "0x146809C")]
	internal class PostEffectsHelper : MonoBehaviour
	{
		[Token(Token = "0x60015D8")]
		[Address(RVA = "0x2E89F70", Offset = "0x2E89F70", VA = "0x2E89F70")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60015D9")]
		[Address(RVA = "0x2E89FDC", Offset = "0x2E89FDC", VA = "0x2E89FDC")]
		private static void DrawLowLevelPlaneAlignedWithCamera(float dist, RenderTexture source, RenderTexture dest, Material material, Camera cameraForProjectionMatrix)
		{
		}

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0x2E8A258", Offset = "0x2E8A258", VA = "0x2E8A258")]
		private static void DrawBorder(RenderTexture dest, Material material)
		{
		}

		[Token(Token = "0x60015DB")]
		[Address(RVA = "0x2E8A5D0", Offset = "0x2E8A5D0", VA = "0x2E8A5D0")]
		private static void DrawLowLevelQuad(float x1, float x2, float y1, float y2, RenderTexture source, RenderTexture dest, Material material)
		{
		}

		[Token(Token = "0x60015DC")]
		[Address(RVA = "0x2E8A77C", Offset = "0x2E8A77C", VA = "0x2E8A77C")]
		public PostEffectsHelper()
		{
		}
	}
	[Token(Token = "0x20002CC")]
	internal class Quads
	{
		[Token(Token = "0x40013F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Mesh[] meshes;

		[Token(Token = "0x40013F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int currentQuads;

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0x2E8A784", Offset = "0x2E8A784", VA = "0x2E8A784")]
		private static bool HasMeshes()
		{
			return default(bool);
		}

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0x2E841A4", Offset = "0x2E841A4", VA = "0x2E841A4")]
		public static void Cleanup()
		{
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0x2E86184", Offset = "0x2E86184", VA = "0x2E86184")]
		public static Mesh[] GetMeshes(int totalWidth, int totalHeight)
		{
			return null;
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0x2E8A8A8", Offset = "0x2E8A8A8", VA = "0x2E8A8A8")]
		private static Mesh GetMesh(int triCount, int triOffset, int totalWidth, int totalHeight)
		{
			return null;
		}

		[Token(Token = "0x60015E1")]
		[Address(RVA = "0x2E8ADDC", Offset = "0x2E8ADDC", VA = "0x2E8ADDC")]
		public Quads()
		{
		}
	}
	[Token(Token = "0x20002CD")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1468110", Offset = "0x1468110")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1468110", Offset = "0x1468110")]
	public class ScreenOverlay : PostEffectsBase
	{
		[Token(Token = "0x200066D")]
		public enum OverlayBlendMode
		{
			[Token(Token = "0x400259C")]
			Additive,
			[Token(Token = "0x400259D")]
			ScreenBlend,
			[Token(Token = "0x400259E")]
			Multiply,
			[Token(Token = "0x400259F")]
			Overlay,
			[Token(Token = "0x40025A0")]
			AlphaBlend
		}

		[Token(Token = "0x40013F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public OverlayBlendMode blendMode;

		[Token(Token = "0x40013F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float intensity;

		[Token(Token = "0x40013F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Texture2D texture;

		[Token(Token = "0x40013F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Shader overlayShader;

		[Token(Token = "0x40013F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material overlayMaterial;

		[Token(Token = "0x60015E3")]
		[Address(RVA = "0x2E8ADE8", Offset = "0x2E8ADE8", VA = "0x2E8ADE8", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60015E4")]
		[Address(RVA = "0x2E8AE54", Offset = "0x2E8AE54", VA = "0x2E8AE54")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0x2E8AFBC", Offset = "0x2E8AFBC", VA = "0x2E8AFBC")]
		public ScreenOverlay()
		{
		}
	}
	[Token(Token = "0x20002CE")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x14681A8", Offset = "0x14681A8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x14681A8", Offset = "0x14681A8")]
	internal class ScreenSpaceAmbientObscurance : PostEffectsBase
	{
		[Token(Token = "0x40013F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1474F24", Offset = "0x1474F24")]
		public float intensity;

		[Token(Token = "0x40013F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1474F3C", Offset = "0x1474F3C")]
		public float radius;

		[Token(Token = "0x40013F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1474F58", Offset = "0x1474F58")]
		public int blurIterations;

		[Token(Token = "0x40013FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1474F70", Offset = "0x1474F70")]
		public float blurFilterDistance;

		[Token(Token = "0x40013FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1474F88", Offset = "0x1474F88")]
		public int downsample;

		[Token(Token = "0x40013FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Texture2D rand;

		[Token(Token = "0x40013FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Shader aoShader;

		[Token(Token = "0x40013FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material aoMaterial;

		[Token(Token = "0x60015E6")]
		[Address(RVA = "0x2E8AFCC", Offset = "0x2E8AFCC", VA = "0x2E8AFCC", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60015E7")]
		[Address(RVA = "0x2E8B040", Offset = "0x2E8B040", VA = "0x2E8B040")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0x2E8B0F0", Offset = "0x2E8B0F0", VA = "0x2E8B0F0")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0x2E8B6C4", Offset = "0x2E8B6C4", VA = "0x2E8B6C4")]
		public ScreenSpaceAmbientObscurance()
		{
		}
	}
	[Token(Token = "0x20002CF")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1468240", Offset = "0x1468240")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1468240", Offset = "0x1468240")]
	public class ScreenSpaceAmbientOcclusion : MonoBehaviour
	{
		[Token(Token = "0x200066E")]
		public enum SSAOSamples
		{
			[Token(Token = "0x40025A2")]
			Low,
			[Token(Token = "0x40025A3")]
			Medium,
			[Token(Token = "0x40025A4")]
			High
		}

		[Token(Token = "0x40013FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1474FA0", Offset = "0x1474FA0")]
		public float m_Radius;

		[Token(Token = "0x4001400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SSAOSamples m_SampleCount;

		[Token(Token = "0x4001401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1474FBC", Offset = "0x1474FBC")]
		public float m_OcclusionIntensity;

		[Token(Token = "0x4001402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1474FD4", Offset = "0x1474FD4")]
		public int m_Blur;

		[Token(Token = "0x4001403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1474FEC", Offset = "0x1474FEC")]
		public int m_Downsampling;

		[Token(Token = "0x4001404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1475004", Offset = "0x1475004")]
		public float m_OcclusionAttenuation;

		[Token(Token = "0x4001405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1475020", Offset = "0x1475020")]
		public float m_MinZ;

		[Token(Token = "0x4001406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Shader m_SSAOShader;

		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material m_SSAOMaterial;

		[Token(Token = "0x4001408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Texture2D m_RandomTexture;

		[Token(Token = "0x4001409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_Supported;

		[Token(Token = "0x60015EA")]
		[Address(RVA = "0x2E8B6E0", Offset = "0x2E8B6E0", VA = "0x2E8B6E0")]
		private static Material CreateMaterial(Shader shader)
		{
			return null;
		}

		[Token(Token = "0x60015EB")]
		[Address(RVA = "0x2E8B790", Offset = "0x2E8B790", VA = "0x2E8B790")]
		private static void DestroyMaterial(Material mat)
		{
		}

		[Token(Token = "0x60015EC")]
		[Address(RVA = "0x2E8B82C", Offset = "0x2E8B82C", VA = "0x2E8B82C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60015ED")]
		[Address(RVA = "0x2E8B834", Offset = "0x2E8B834", VA = "0x2E8B834")]
		private void Start()
		{
		}

		[Token(Token = "0x60015EE")]
		[Address(RVA = "0x2E8B9E8", Offset = "0x2E8B9E8", VA = "0x2E8B9E8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60015EF")]
		[Address(RVA = "0x2E8B90C", Offset = "0x2E8B90C", VA = "0x2E8B90C")]
		private void CreateMaterials()
		{
		}

		[Token(Token = "0x60015F0")]
		[Address(RVA = "0x2E8BA5C", Offset = "0x2E8BA5C", VA = "0x2E8BA5C")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60015F1")]
		[Address(RVA = "0x2E8C118", Offset = "0x2E8C118", VA = "0x2E8C118")]
		public ScreenSpaceAmbientOcclusion()
		{
		}
	}
	[Token(Token = "0x20002D0")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x14682D8", Offset = "0x14682D8")]
	public class SepiaTone : ImageEffectBase
	{
		[Token(Token = "0x60015F2")]
		[Address(RVA = "0x2E8C14C", Offset = "0x2E8C14C", VA = "0x2E8C14C")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60015F3")]
		[Address(RVA = "0x2E8C1DC", Offset = "0x2E8C1DC", VA = "0x2E8C1DC")]
		public SepiaTone()
		{
		}
	}
	[Token(Token = "0x20002D1")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1468324", Offset = "0x1468324")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1468324", Offset = "0x1468324")]
	public class SunShafts : PostEffectsBase
	{
		[Token(Token = "0x200066F")]
		public enum SunShaftsResolution
		{
			[Token(Token = "0x40025A6")]
			Low,
			[Token(Token = "0x40025A7")]
			Normal,
			[Token(Token = "0x40025A8")]
			High
		}

		[Token(Token = "0x2000670")]
		public enum ShaftsScreenBlendMode
		{
			[Token(Token = "0x40025AA")]
			Screen,
			[Token(Token = "0x40025AB")]
			Add
		}

		[Token(Token = "0x400140A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SunShaftsResolution resolution;

		[Token(Token = "0x400140B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public ShaftsScreenBlendMode screenBlendMode;

		[Token(Token = "0x400140C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform sunTransform;

		[Token(Token = "0x400140D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int radialBlurIterations;

		[Token(Token = "0x400140E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public UnityEngine.Color sunColor;

		[Token(Token = "0x400140F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public UnityEngine.Color sunThreshold;

		[Token(Token = "0x4001410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float sunShaftBlurRadius;

		[Token(Token = "0x4001411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float sunShaftIntensity;

		[Token(Token = "0x4001412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float maxRadius;

		[Token(Token = "0x4001413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool useDepthTexture;

		[Token(Token = "0x4001414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Shader sunShaftsShader;

		[Token(Token = "0x4001415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Material sunShaftsMaterial;

		[Token(Token = "0x4001416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Shader simpleClearShader;

		[Token(Token = "0x4001417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Material simpleClearMaterial;

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0x2E8C1E4", Offset = "0x2E8C1E4", VA = "0x2E8C1E4", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60015F5")]
		[Address(RVA = "0x2E8C274", Offset = "0x2E8C274", VA = "0x2E8C274")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60015F6")]
		[Address(RVA = "0x2E8CA60", Offset = "0x2E8CA60", VA = "0x2E8CA60")]
		public SunShafts()
		{
		}
	}
	[Token(Token = "0x20002D2")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x14683BC", Offset = "0x14683BC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x14683BC", Offset = "0x14683BC")]
	internal class TiltShift : PostEffectsBase
	{
		[Token(Token = "0x2000671")]
		public enum TiltShiftMode
		{
			[Token(Token = "0x40025AD")]
			TiltShiftMode,
			[Token(Token = "0x40025AE")]
			IrisMode
		}

		[Token(Token = "0x2000672")]
		public enum TiltShiftQuality
		{
			[Token(Token = "0x40025B0")]
			Preview,
			[Token(Token = "0x40025B1")]
			Normal,
			[Token(Token = "0x40025B2")]
			High
		}

		[Token(Token = "0x4001418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TiltShiftMode mode;

		[Token(Token = "0x4001419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public TiltShiftQuality quality;

		[Token(Token = "0x400141A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x147503C", Offset = "0x147503C")]
		public float blurArea;

		[Token(Token = "0x400141B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1475054", Offset = "0x1475054")]
		public float maxBlurSize;

		[Token(Token = "0x400141C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x147506C", Offset = "0x147506C")]
		public int downsample;

		[Token(Token = "0x400141D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Shader tiltShiftShader;

		[Token(Token = "0x400141E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material tiltShiftMaterial;

		[Token(Token = "0x60015F7")]
		[Address(RVA = "0x2E8CAF4", Offset = "0x2E8CAF4", VA = "0x2E8CAF4", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0x2E8CB68", Offset = "0x2E8CB68", VA = "0x2E8CB68")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60015F9")]
		[Address(RVA = "0x2E8CDF8", Offset = "0x2E8CDF8", VA = "0x2E8CDF8")]
		public TiltShift()
		{
		}
	}
	[Token(Token = "0x20002D3")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1468444", Offset = "0x1468444")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1468444", Offset = "0x1468444")]
	public class Tonemapping : PostEffectsBase
	{
		[Token(Token = "0x2000673")]
		public enum TonemapperType
		{
			[Token(Token = "0x40025B4")]
			SimpleReinhard,
			[Token(Token = "0x40025B5")]
			UserCurve,
			[Token(Token = "0x40025B6")]
			Hable,
			[Token(Token = "0x40025B7")]
			Photographic,
			[Token(Token = "0x40025B8")]
			OptimizedHejiDawson,
			[Token(Token = "0x40025B9")]
			AdaptiveReinhard,
			[Token(Token = "0x40025BA")]
			AdaptiveReinhardAutoWhite
		}

		[Token(Token = "0x2000674")]
		public enum AdaptiveTexSize
		{
			[Token(Token = "0x40025BC")]
			Square16 = 0x10,
			[Token(Token = "0x40025BD")]
			Square32 = 0x20,
			[Token(Token = "0x40025BE")]
			Square64 = 0x40,
			[Token(Token = "0x40025BF")]
			Square128 = 0x80,
			[Token(Token = "0x40025C0")]
			Square256 = 0x100,
			[Token(Token = "0x40025C1")]
			Square512 = 0x200,
			[Token(Token = "0x40025C2")]
			Square1024 = 0x400
		}

		[Token(Token = "0x400141F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TonemapperType type;

		[Token(Token = "0x4001420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public AdaptiveTexSize adaptiveTextureSize;

		[Token(Token = "0x4001421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve remapCurve;

		[Token(Token = "0x4001422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Texture2D curveTex;

		[Token(Token = "0x4001423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float exposureAdjustment;

		[Token(Token = "0x4001424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float middleGrey;

		[Token(Token = "0x4001425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float white;

		[Token(Token = "0x4001426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float adaptionSpeed;

		[Token(Token = "0x4001427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Shader tonemapper;

		[Token(Token = "0x4001428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool validRenderTextureFormat;

		[Token(Token = "0x4001429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material tonemapMaterial;

		[Token(Token = "0x400142A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private RenderTexture rt;

		[Token(Token = "0x400142B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private RenderTextureFormat rtFormat;

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0x2E8CE10", Offset = "0x2E8CE10", VA = "0x2E8CE10", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60015FB")]
		[Address(RVA = "0x2E8CF74", Offset = "0x2E8CF74", VA = "0x2E8CF74")]
		public float UpdateCurve()
		{
			return default(float);
		}

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0x2E8D248", Offset = "0x2E8D248", VA = "0x2E8D248")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0x2E8D3D8", Offset = "0x2E8D3D8", VA = "0x2E8D3D8")]
		private bool CreateInternalRenderTexture()
		{
			return default(bool);
		}

		[Token(Token = "0x60015FE")]
		[Address(RVA = "0x2E8D4D8", Offset = "0x2E8D4D8", VA = "0x2E8D4D8")]
		[ImageEffectTransformsToLDR]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60015FF")]
		[Address(RVA = "0x2E8DCFC", Offset = "0x2E8DCFC", VA = "0x2E8DCFC")]
		public Tonemapping()
		{
		}
	}
	[Token(Token = "0x20002D4")]
	internal class Triangles
	{
		[Token(Token = "0x400142C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Mesh[] meshes;

		[Token(Token = "0x400142D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int currentTris;

		[Token(Token = "0x6001600")]
		[Address(RVA = "0x2E8DD28", Offset = "0x2E8DD28", VA = "0x2E8DD28")]
		private static bool HasMeshes()
		{
			return default(bool);
		}

		[Token(Token = "0x6001601")]
		[Address(RVA = "0x2E8DE64", Offset = "0x2E8DE64", VA = "0x2E8DE64")]
		private static void Cleanup()
		{
		}

		[Token(Token = "0x6001602")]
		[Address(RVA = "0x2E8E054", Offset = "0x2E8E054", VA = "0x2E8E054")]
		private static Mesh[] GetMeshes(int totalWidth, int totalHeight)
		{
			return null;
		}

		[Token(Token = "0x6001603")]
		[Address(RVA = "0x2E8E328", Offset = "0x2E8E328", VA = "0x2E8E328")]
		private static Mesh GetMesh(int triCount, int triOffset, int totalWidth, int totalHeight)
		{
			return null;
		}

		[Token(Token = "0x6001604")]
		[Address(RVA = "0x2E8E758", Offset = "0x2E8E758", VA = "0x2E8E758")]
		public Triangles()
		{
		}
	}
	[Token(Token = "0x20002D5")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x14684DC", Offset = "0x14684DC")]
	public class Twirl : ImageEffectBase
	{
		[Token(Token = "0x400142E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 radius;

		[Token(Token = "0x400142F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1475084", Offset = "0x1475084")]
		public float angle;

		[Token(Token = "0x4001430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector2 center;

		[Token(Token = "0x6001606")]
		[Address(RVA = "0x2E8E764", Offset = "0x2E8E764", VA = "0x2E8E764")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001607")]
		[Address(RVA = "0x2E8E7A8", Offset = "0x2E8E7A8", VA = "0x2E8E7A8")]
		public Twirl()
		{
		}
	}
	[Token(Token = "0x20002D6")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1468528", Offset = "0x1468528")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1468528", Offset = "0x1468528")]
	public class VignetteAndChromaticAberration : PostEffectsBase
	{
		[Token(Token = "0x2000675")]
		public enum AberrationMode
		{
			[Token(Token = "0x40025C4")]
			Simple,
			[Token(Token = "0x40025C5")]
			Advanced
		}

		[Token(Token = "0x4001431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AberrationMode mode;

		[Token(Token = "0x4001432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float intensity;

		[Token(Token = "0x4001433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float chromaticAberration;

		[Token(Token = "0x4001434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float axialAberration;

		[Token(Token = "0x4001435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float blur;

		[Token(Token = "0x4001436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float blurSpread;

		[Token(Token = "0x4001437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float luminanceDependency;

		[Token(Token = "0x4001438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float blurDistance;

		[Token(Token = "0x4001439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Shader vignetteShader;

		[Token(Token = "0x400143A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Shader separableBlurShader;

		[Token(Token = "0x400143B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Shader chromAberrationShader;

		[Token(Token = "0x400143C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material m_VignetteMaterial;

		[Token(Token = "0x400143D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Material m_SeparableBlurMaterial;

		[Token(Token = "0x400143E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material m_ChromAberrationMaterial;

		[Token(Token = "0x6001608")]
		[Address(RVA = "0x2E8E824", Offset = "0x2E8E824", VA = "0x2E8E824", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6001609")]
		[Address(RVA = "0x2E8E8D8", Offset = "0x2E8E8D8", VA = "0x2E8E8D8")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600160A")]
		[Address(RVA = "0x2E8EF04", Offset = "0x2E8EF04", VA = "0x2E8EF04")]
		public VignetteAndChromaticAberration()
		{
		}
	}
	[Token(Token = "0x20002D7")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x14685C0", Offset = "0x14685C0")]
	public class Vortex : ImageEffectBase
	{
		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 radius;

		[Token(Token = "0x4001440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float angle;

		[Token(Token = "0x4001441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector2 center;

		[Token(Token = "0x600160B")]
		[Address(RVA = "0x2E8EF30", Offset = "0x2E8EF30", VA = "0x2E8EF30")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600160C")]
		[Address(RVA = "0x2E8EF74", Offset = "0x2E8EF74", VA = "0x2E8EF74")]
		public Vortex()
		{
		}
	}
}
namespace UnityStandardAssets.CrossPlatformInput
{
	[Token(Token = "0x20002D8")]
	public class AxisTouchButton : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
	{
		[Token(Token = "0x4001442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string axisName;

		[Token(Token = "0x4001443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float axisValue;

		[Token(Token = "0x4001444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float responseSpeed;

		[Token(Token = "0x4001445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float returnToCentreSpeed;

		[Token(Token = "0x4001446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AxisTouchButton m_PairedWith;

		[Token(Token = "0x4001447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CrossPlatformInputManager.VirtualAxis m_Axis;

		[Token(Token = "0x600160D")]
		[Address(RVA = "0x1F0E154", Offset = "0x1F0E154", VA = "0x1F0E154")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600160E")]
		[Address(RVA = "0x1F0E41C", Offset = "0x1F0E41C", VA = "0x1F0E41C")]
		private void FindPairedButton()
		{
		}

		[Token(Token = "0x600160F")]
		[Address(RVA = "0x1F0E5AC", Offset = "0x1F0E5AC", VA = "0x1F0E5AC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001610")]
		[Address(RVA = "0x1F0E62C", Offset = "0x1F0E62C", VA = "0x1F0E62C", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x6001611")]
		[Address(RVA = "0x1F0E714", Offset = "0x1F0E714", VA = "0x1F0E714", Slot = "5")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x6001612")]
		[Address(RVA = "0x1F0E7BC", Offset = "0x1F0E7BC", VA = "0x1F0E7BC")]
		public AxisTouchButton()
		{
		}
	}
	[Token(Token = "0x20002D9")]
	public class ButtonHandler : MonoBehaviour
	{
		[Token(Token = "0x4001448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Name;

		[Token(Token = "0x6001613")]
		[Address(RVA = "0x1F0E830", Offset = "0x1F0E830", VA = "0x1F0E830")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001614")]
		[Address(RVA = "0x1F0E834", Offset = "0x1F0E834", VA = "0x1F0E834")]
		public void SetDownState()
		{
		}

		[Token(Token = "0x6001615")]
		[Address(RVA = "0x1F0E91C", Offset = "0x1F0E91C", VA = "0x1F0E91C")]
		public void SetUpState()
		{
		}

		[Token(Token = "0x6001616")]
		[Address(RVA = "0x1F0EA04", Offset = "0x1F0EA04", VA = "0x1F0EA04")]
		public void SetAxisPositiveState()
		{
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0x1F0EAEC", Offset = "0x1F0EAEC", VA = "0x1F0EAEC")]
		public void SetAxisNeutralState()
		{
		}

		[Token(Token = "0x6001618")]
		[Address(RVA = "0x1F0EBD4", Offset = "0x1F0EBD4", VA = "0x1F0EBD4")]
		public void SetAxisNegativeState()
		{
		}

		[Token(Token = "0x6001619")]
		[Address(RVA = "0x1F0ECBC", Offset = "0x1F0ECBC", VA = "0x1F0ECBC")]
		public void Update()
		{
		}

		[Token(Token = "0x600161A")]
		[Address(RVA = "0x1F0ECC0", Offset = "0x1F0ECC0", VA = "0x1F0ECC0")]
		public ButtonHandler()
		{
		}
	}
	[Token(Token = "0x20002DA")]
	public static class CrossPlatformInputManager
	{
		[Token(Token = "0x2000676")]
		public enum ActiveInputMethod
		{
			[Token(Token = "0x40025C7")]
			Hardware,
			[Token(Token = "0x40025C8")]
			Touch
		}

		[Token(Token = "0x2000677")]
		public class VirtualAxis
		{
			[Token(Token = "0x40025C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147D488", Offset = "0x147D488")]
			private string <name>k__BackingField;

			[Token(Token = "0x40025CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private float m_Value;

			[Token(Token = "0x40025CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147D498", Offset = "0x147D498")]
			private bool <matchWithInputManager>k__BackingField;

			[Token(Token = "0x17000559")]
			public string name
			{
				[Token(Token = "0x600286E")]
				[Address(RVA = "0x1F0FC2C", Offset = "0x1F0FC2C", VA = "0x1F0FC2C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1488F64", Offset = "0x1488F64")]
				get
				{
					return null;
				}
				[Token(Token = "0x600286F")]
				[Address(RVA = "0x1F0FC34", Offset = "0x1F0FC34", VA = "0x1F0FC34")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1488F74", Offset = "0x1488F74")]
				private set
				{
				}
			}

			[Token(Token = "0x1700055A")]
			public bool matchWithInputManager
			{
				[Token(Token = "0x6002870")]
				[Address(RVA = "0x1F0FC3C", Offset = "0x1F0FC3C", VA = "0x1F0FC3C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1488F84", Offset = "0x1488F84")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6002871")]
				[Address(RVA = "0x1F0FC44", Offset = "0x1F0FC44", VA = "0x1F0FC44")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1488F94", Offset = "0x1488F94")]
				private set
				{
				}
			}

			[Token(Token = "0x1700055B")]
			public float GetValue
			{
				[Token(Token = "0x6002876")]
				[Address(RVA = "0x1F0FCA4", Offset = "0x1F0FCA4", VA = "0x1F0FCA4")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x1700055C")]
			public float GetValueRaw
			{
				[Token(Token = "0x6002877")]
				[Address(RVA = "0x1F0FCAC", Offset = "0x1F0FCAC", VA = "0x1F0FCAC")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x6002872")]
			[Address(RVA = "0x1F0E2EC", Offset = "0x1F0E2EC", VA = "0x1F0E2EC")]
			public VirtualAxis(string name)
			{
			}

			[Token(Token = "0x6002873")]
			[Address(RVA = "0x1F0FC50", Offset = "0x1F0FC50", VA = "0x1F0FC50")]
			public VirtualAxis(string name, bool matchToInputSettings)
			{
			}

			[Token(Token = "0x6002874")]
			[Address(RVA = "0x1F0E5C4", Offset = "0x1F0E5C4", VA = "0x1F0E5C4")]
			public void Remove()
			{
			}

			[Token(Token = "0x6002875")]
			[Address(RVA = "0x1F0FC9C", Offset = "0x1F0FC9C", VA = "0x1F0FC9C")]
			public void Update(float value)
			{
			}
		}

		[Token(Token = "0x2000678")]
		public class VirtualButton
		{
			[Token(Token = "0x40025CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147D4A8", Offset = "0x147D4A8")]
			private string <name>k__BackingField;

			[Token(Token = "0x40025CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x147D4B8", Offset = "0x147D4B8")]
			private bool <matchWithInputManager>k__BackingField;

			[Token(Token = "0x40025CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private int m_LastPressedFrame;

			[Token(Token = "0x40025CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int m_ReleasedFrame;

			[Token(Token = "0x40025D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private bool m_Pressed;

			[Token(Token = "0x1700055D")]
			public string name
			{
				[Token(Token = "0x6002878")]
				[Address(RVA = "0x1F0FCB4", Offset = "0x1F0FCB4", VA = "0x1F0FCB4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1488FA4", Offset = "0x1488FA4")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002879")]
				[Address(RVA = "0x1F0FCBC", Offset = "0x1F0FCBC", VA = "0x1F0FCBC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1488FB4", Offset = "0x1488FB4")]
				private set
				{
				}
			}

			[Token(Token = "0x1700055E")]
			public bool matchWithInputManager
			{
				[Token(Token = "0x600287A")]
				[Address(RVA = "0x1F0FCC4", Offset = "0x1F0FCC4", VA = "0x1F0FCC4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1488FC4", Offset = "0x1488FC4")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x600287B")]
				[Address(RVA = "0x1F0FCCC", Offset = "0x1F0FCCC", VA = "0x1F0FCCC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1488FD4", Offset = "0x1488FD4")]
				private set
				{
				}
			}

			[Token(Token = "0x1700055F")]
			public bool GetButton
			{
				[Token(Token = "0x6002881")]
				[Address(RVA = "0x1F0FE44", Offset = "0x1F0FE44", VA = "0x1F0FE44")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000560")]
			public bool GetButtonDown
			{
				[Token(Token = "0x6002882")]
				[Address(RVA = "0x1F0FE4C", Offset = "0x1F0FE4C", VA = "0x1F0FE4C")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000561")]
			public bool GetButtonUp
			{
				[Token(Token = "0x6002883")]
				[Address(RVA = "0x1F0FE7C", Offset = "0x1F0FE7C", VA = "0x1F0FE7C")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x600287C")]
			[Address(RVA = "0x1F0FCD8", Offset = "0x1F0FCD8", VA = "0x1F0FCD8")]
			public VirtualButton(string name)
			{
			}

			[Token(Token = "0x600287D")]
			[Address(RVA = "0x1F0FD20", Offset = "0x1F0FD20", VA = "0x1F0FD20")]
			public VirtualButton(string name, bool matchToInputSettings)
			{
			}

			[Token(Token = "0x600287E")]
			[Address(RVA = "0x1F0FD74", Offset = "0x1F0FD74", VA = "0x1F0FD74")]
			public void Pressed()
			{
			}

			[Token(Token = "0x600287F")]
			[Address(RVA = "0x1F0FDB0", Offset = "0x1F0FDB0", VA = "0x1F0FDB0")]
			public void Released()
			{
			}

			[Token(Token = "0x6002880")]
			[Address(RVA = "0x1F0FDDC", Offset = "0x1F0FDDC", VA = "0x1F0FDDC")]
			public void Remove()
			{
			}
		}

		[Token(Token = "0x4001449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static VirtualInput activeInput;

		[Token(Token = "0x400144A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static VirtualInput s_TouchInput;

		[Token(Token = "0x400144B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static VirtualInput s_HardwareInput;

		[Token(Token = "0x17000265")]
		public static Vector3 mousePosition
		{
			[Token(Token = "0x6001630")]
			[Address(RVA = "0x1F0F8AC", Offset = "0x1F0F8AC", VA = "0x1F0F8AC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x600161B")]
		[Address(RVA = "0x1F0ECC8", Offset = "0x1F0ECC8", VA = "0x1F0ECC8")]
		static CrossPlatformInputManager()
		{
		}

		[Token(Token = "0x600161C")]
		[Address(RVA = "0x1F0ED7C", Offset = "0x1F0ED7C", VA = "0x1F0ED7C")]
		public static void SwitchActiveInputMethod(ActiveInputMethod activeInputMethod)
		{
		}

		[Token(Token = "0x600161D")]
		[Address(RVA = "0x1F0E274", Offset = "0x1F0E274", VA = "0x1F0E274")]
		public static bool AxisExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x600161E")]
		[Address(RVA = "0x1F0EE9C", Offset = "0x1F0EE9C", VA = "0x1F0EE9C")]
		public static bool ButtonExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x600161F")]
		[Address(RVA = "0x1F0E32C", Offset = "0x1F0E32C", VA = "0x1F0E32C")]
		public static void RegisterVirtualAxis(VirtualAxis axis)
		{
		}

		[Token(Token = "0x6001620")]
		[Address(RVA = "0x1F0F0A4", Offset = "0x1F0F0A4", VA = "0x1F0F0A4")]
		public static void RegisterVirtualButton(VirtualButton button)
		{
		}

		[Token(Token = "0x6001621")]
		[Address(RVA = "0x1F0F244", Offset = "0x1F0F244", VA = "0x1F0F244")]
		public static void UnRegisterVirtualAxis(string name)
		{
		}

		[Token(Token = "0x6001622")]
		[Address(RVA = "0x1F0F394", Offset = "0x1F0F394", VA = "0x1F0F394")]
		public static void UnRegisterVirtualButton(string name)
		{
		}

		[Token(Token = "0x6001623")]
		[Address(RVA = "0x1F0E3A4", Offset = "0x1F0E3A4", VA = "0x1F0E3A4")]
		public static VirtualAxis VirtualAxisReference(string name)
		{
			return null;
		}

		[Token(Token = "0x6001624")]
		[Address(RVA = "0x1F0F538", Offset = "0x1F0F538", VA = "0x1F0F538")]
		public static float GetAxis(string name)
		{
			return default(float);
		}

		[Token(Token = "0x6001625")]
		[Address(RVA = "0x1F0F630", Offset = "0x1F0F630", VA = "0x1F0F630")]
		public static float GetAxisRaw(string name)
		{
			return default(float);
		}

		[Token(Token = "0x6001626")]
		[Address(RVA = "0x1F0F5A0", Offset = "0x1F0F5A0", VA = "0x1F0F5A0")]
		private static float GetAxis(string name, bool raw)
		{
			return default(float);
		}

		[Token(Token = "0x6001627")]
		[Address(RVA = "0x1F0F698", Offset = "0x1F0F698", VA = "0x1F0F698")]
		public static bool GetButton(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001628")]
		[Address(RVA = "0x1F0F718", Offset = "0x1F0F718", VA = "0x1F0F718")]
		public static bool GetButtonDown(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001629")]
		[Address(RVA = "0x1F0F798", Offset = "0x1F0F798", VA = "0x1F0F798")]
		public static bool GetButtonUp(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x600162A")]
		[Address(RVA = "0x1F0E89C", Offset = "0x1F0E89C", VA = "0x1F0E89C")]
		public static void SetButtonDown(string name)
		{
		}

		[Token(Token = "0x600162B")]
		[Address(RVA = "0x1F0E984", Offset = "0x1F0E984", VA = "0x1F0E984")]
		public static void SetButtonUp(string name)
		{
		}

		[Token(Token = "0x600162C")]
		[Address(RVA = "0x1F0EA6C", Offset = "0x1F0EA6C", VA = "0x1F0EA6C")]
		public static void SetAxisPositive(string name)
		{
		}

		[Token(Token = "0x600162D")]
		[Address(RVA = "0x1F0EC3C", Offset = "0x1F0EC3C", VA = "0x1F0EC3C")]
		public static void SetAxisNegative(string name)
		{
		}

		[Token(Token = "0x600162E")]
		[Address(RVA = "0x1F0EB54", Offset = "0x1F0EB54", VA = "0x1F0EB54")]
		public static void SetAxisZero(string name)
		{
		}

		[Token(Token = "0x600162F")]
		[Address(RVA = "0x1F0F818", Offset = "0x1F0F818", VA = "0x1F0F818")]
		public static void SetAxis(string name, float value)
		{
		}

		[Token(Token = "0x6001631")]
		[Address(RVA = "0x1F0F928", Offset = "0x1F0F928", VA = "0x1F0F928")]
		public static void SetVirtualMousePositionX(float f)
		{
		}

		[Token(Token = "0x6001632")]
		[Address(RVA = "0x1F0FA24", Offset = "0x1F0FA24", VA = "0x1F0FA24")]
		public static void SetVirtualMousePositionY(float f)
		{
		}

		[Token(Token = "0x6001633")]
		[Address(RVA = "0x1F0FB2C", Offset = "0x1F0FB2C", VA = "0x1F0FB2C")]
		public static void SetVirtualMousePositionZ(float f)
		{
		}
	}
	[Token(Token = "0x20002DB")]
	public class InputAxisScrollbar : MonoBehaviour
	{
		[Token(Token = "0x400144C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string axis;

		[Token(Token = "0x6001634")]
		[Address(RVA = "0x1F0FEAC", Offset = "0x1F0FEAC", VA = "0x1F0FEAC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001635")]
		[Address(RVA = "0x1F0FEB0", Offset = "0x1F0FEB0", VA = "0x1F0FEB0")]
		public void HandleInput(float value)
		{
		}

		[Token(Token = "0x6001636")]
		[Address(RVA = "0x1F0FF30", Offset = "0x1F0FF30", VA = "0x1F0FF30")]
		public InputAxisScrollbar()
		{
		}
	}
	[Token(Token = "0x20002DC")]
	public class Joystick : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler, IDragHandler
	{
		[Token(Token = "0x2000679")]
		public enum AxisOption
		{
			[Token(Token = "0x40025D2")]
			Both,
			[Token(Token = "0x40025D3")]
			OnlyHorizontal,
			[Token(Token = "0x40025D4")]
			OnlyVertical
		}

		[Token(Token = "0x400144D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int MovementRange;

		[Token(Token = "0x400144E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public AxisOption axesToUse;

		[Token(Token = "0x400144F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string horizontalAxisName;

		[Token(Token = "0x4001450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string verticalAxisName;

		[Token(Token = "0x4001451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 m_StartPos;

		[Token(Token = "0x4001452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool m_UseX;

		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		private bool m_UseY;

		[Token(Token = "0x4001454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CrossPlatformInputManager.VirtualAxis m_HorizontalVirtualAxis;

		[Token(Token = "0x4001455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private CrossPlatformInputManager.VirtualAxis m_VerticalVirtualAxis;

		[Token(Token = "0x6001637")]
		[Address(RVA = "0x1F0FF38", Offset = "0x1F0FF38", VA = "0x1F0FF38")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001638")]
		[Address(RVA = "0x1F100B0", Offset = "0x1F100B0", VA = "0x1F100B0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001639")]
		[Address(RVA = "0x1F100EC", Offset = "0x1F100EC", VA = "0x1F100EC")]
		private void UpdateVirtualAxes(Vector3 value)
		{
		}

		[Token(Token = "0x600163A")]
		[Address(RVA = "0x1F0FF3C", Offset = "0x1F0FF3C", VA = "0x1F0FF3C")]
		private void CreateVirtualAxes()
		{
		}

		[Token(Token = "0x600163B")]
		[Address(RVA = "0x1F101DC", Offset = "0x1F101DC", VA = "0x1F101DC", Slot = "6")]
		public void OnDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x600163C")]
		[Address(RVA = "0x1F103CC", Offset = "0x1F103CC", VA = "0x1F103CC", Slot = "5")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x600163D")]
		[Address(RVA = "0x1F10414", Offset = "0x1F10414", VA = "0x1F10414", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x600163E")]
		[Address(RVA = "0x1F10418", Offset = "0x1F10418", VA = "0x1F10418")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600163F")]
		[Address(RVA = "0x1F10468", Offset = "0x1F10468", VA = "0x1F10468")]
		public Joystick()
		{
		}
	}
	[Token(Token = "0x20002DD")]
	[ExecuteInEditMode]
	public class MobileControlRig : MonoBehaviour
	{
		[Token(Token = "0x6001640")]
		[Address(RVA = "0x1F104E8", Offset = "0x1F104E8", VA = "0x1F104E8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001641")]
		[Address(RVA = "0x1F104F8", Offset = "0x1F104F8", VA = "0x1F104F8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001642")]
		[Address(RVA = "0x1F104F0", Offset = "0x1F104F0", VA = "0x1F104F0")]
		private void CheckEnableControlRig()
		{
		}

		[Token(Token = "0x6001643")]
		[Address(RVA = "0x1F105D4", Offset = "0x1F105D4", VA = "0x1F105D4")]
		private void EnableControlRig(bool enabled)
		{
		}

		[Token(Token = "0x6001644")]
		[Address(RVA = "0x1F10840", Offset = "0x1F10840", VA = "0x1F10840")]
		public MobileControlRig()
		{
		}
	}
	[Token(Token = "0x20002DE")]
	public class TiltInput : MonoBehaviour
	{
		[Token(Token = "0x200067A")]
		public enum AxisOptions
		{
			[Token(Token = "0x40025D6")]
			ForwardAxis,
			[Token(Token = "0x40025D7")]
			SidewaysAxis
		}

		[Serializable]
		[Token(Token = "0x200067B")]
		public class AxisMapping
		{
			[Token(Token = "0x2000799")]
			public enum MappingType
			{
				[Token(Token = "0x4002A2F")]
				NamedAxis,
				[Token(Token = "0x4002A30")]
				MousePositionX,
				[Token(Token = "0x4002A31")]
				MousePositionY,
				[Token(Token = "0x4002A32")]
				MousePositionZ
			}

			[Token(Token = "0x40025D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MappingType type;

			[Token(Token = "0x40025D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string axisName;

			[Token(Token = "0x6002884")]
			[Address(RVA = "0x1F11748", Offset = "0x1F11748", VA = "0x1F11748")]
			public AxisMapping()
			{
			}
		}

		[Token(Token = "0x4001456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AxisMapping mapping;

		[Token(Token = "0x4001457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AxisOptions tiltAroundAxis;

		[Token(Token = "0x4001458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float fullTiltAngle;

		[Token(Token = "0x4001459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float centreAngleOffset;

		[Token(Token = "0x400145A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CrossPlatformInputManager.VirtualAxis m_SteerAxis;

		[Token(Token = "0x6001645")]
		[Address(RVA = "0x1F113B8", Offset = "0x1F113B8", VA = "0x1F113B8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001646")]
		[Address(RVA = "0x1F11494", Offset = "0x1F11494", VA = "0x1F11494")]
		private void Update()
		{
		}

		[Token(Token = "0x6001647")]
		[Address(RVA = "0x1F11720", Offset = "0x1F11720", VA = "0x1F11720")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001648")]
		[Address(RVA = "0x1F11738", Offset = "0x1F11738", VA = "0x1F11738")]
		public TiltInput()
		{
		}
	}
	[Token(Token = "0x20002DF")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x146861C", Offset = "0x146861C")]
	public class TouchPad : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
	{
		[Token(Token = "0x200067C")]
		public enum AxisOption
		{
			[Token(Token = "0x40025DB")]
			Both,
			[Token(Token = "0x40025DC")]
			OnlyHorizontal,
			[Token(Token = "0x40025DD")]
			OnlyVertical
		}

		[Token(Token = "0x200067D")]
		public enum ControlStyle
		{
			[Token(Token = "0x40025DF")]
			Absolute,
			[Token(Token = "0x40025E0")]
			Relative,
			[Token(Token = "0x40025E1")]
			Swipe
		}

		[Token(Token = "0x400145B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AxisOption axesToUse;

		[Token(Token = "0x400145C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ControlStyle controlStyle;

		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string horizontalAxisName;

		[Token(Token = "0x400145E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string verticalAxisName;

		[Token(Token = "0x400145F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float Xsensitivity;

		[Token(Token = "0x4001460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float Ysensitivity;

		[Token(Token = "0x4001461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 m_StartPos;

		[Token(Token = "0x4001462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector2 m_PreviousDelta;

		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 m_JoytickOutput;

		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_UseX;

		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool m_UseY;

		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CrossPlatformInputManager.VirtualAxis m_HorizontalVirtualAxis;

		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private CrossPlatformInputManager.VirtualAxis m_VerticalVirtualAxis;

		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_Dragging;

		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int m_Id;

		[Token(Token = "0x400146A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector2 m_PreviousTouchPos;

		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 m_Center;

		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private UnityEngine.UI.Image m_Image;

		[Token(Token = "0x6001649")]
		[Address(RVA = "0x1F11750", Offset = "0x1F11750", VA = "0x1F11750")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600164A")]
		[Address(RVA = "0x1F118C8", Offset = "0x1F118C8", VA = "0x1F118C8")]
		private void Start()
		{
		}

		[Token(Token = "0x600164B")]
		[Address(RVA = "0x1F11754", Offset = "0x1F11754", VA = "0x1F11754")]
		private void CreateVirtualAxes()
		{
		}

		[Token(Token = "0x600164C")]
		[Address(RVA = "0x1F11954", Offset = "0x1F11954", VA = "0x1F11954")]
		private void UpdateVirtualAxes(Vector3 value)
		{
		}

		[Token(Token = "0x600164D")]
		[Address(RVA = "0x1F119C0", Offset = "0x1F119C0", VA = "0x1F119C0", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x600164E")]
		[Address(RVA = "0x1F11A70", Offset = "0x1F11A70", VA = "0x1F11A70")]
		private void Update()
		{
		}

		[Token(Token = "0x600164F")]
		[Address(RVA = "0x1F11C44", Offset = "0x1F11C44", VA = "0x1F11C44", Slot = "5")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x6001650")]
		[Address(RVA = "0x1F11CBC", Offset = "0x1F11CBC", VA = "0x1F11CBC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001651")]
		[Address(RVA = "0x1F11DB0", Offset = "0x1F11DB0", VA = "0x1F11DB0")]
		public TouchPad()
		{
		}
	}
	[Token(Token = "0x20002E0")]
	public abstract class VirtualInput
	{
		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14750A0", Offset = "0x14750A0")]
		private Vector3 <virtualMousePosition>k__BackingField;

		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Dictionary<string, CrossPlatformInputManager.VirtualAxis> m_VirtualAxes;

		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Dictionary<string, CrossPlatformInputManager.VirtualButton> m_VirtualButtons;

		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected List<string> m_AlwaysUseVirtual;

		[Token(Token = "0x17000266")]
		public Vector3 virtualMousePosition
		{
			[Token(Token = "0x6001652")]
			[Address(RVA = "0x1F11E38", Offset = "0x1F11E38", VA = "0x1F11E38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1484C50", Offset = "0x1484C50")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001653")]
			[Address(RVA = "0x1F11E44", Offset = "0x1F11E44", VA = "0x1F11E44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1484C60", Offset = "0x1484C60")]
			private set
			{
			}
		}

		[Token(Token = "0x6001654")]
		[Address(RVA = "0x1F0EE34", Offset = "0x1F0EE34", VA = "0x1F0EE34")]
		public bool AxisExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001655")]
		[Address(RVA = "0x1F0EF14", Offset = "0x1F0EF14", VA = "0x1F0EF14")]
		public bool ButtonExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001656")]
		[Address(RVA = "0x1F0EF7C", Offset = "0x1F0EF7C", VA = "0x1F0EF7C")]
		public void RegisterVirtualAxis(CrossPlatformInputManager.VirtualAxis axis)
		{
		}

		[Token(Token = "0x6001657")]
		[Address(RVA = "0x1F0F11C", Offset = "0x1F0F11C", VA = "0x1F0F11C")]
		public void RegisterVirtualButton(CrossPlatformInputManager.VirtualButton button)
		{
		}

		[Token(Token = "0x6001658")]
		[Address(RVA = "0x1F0F2FC", Offset = "0x1F0F2FC", VA = "0x1F0F2FC")]
		public void UnRegisterVirtualAxis(string name)
		{
		}

		[Token(Token = "0x6001659")]
		[Address(RVA = "0x1F0F40C", Offset = "0x1F0F40C", VA = "0x1F0F40C")]
		public void UnRegisterVirtualButton(string name)
		{
		}

		[Token(Token = "0x600165A")]
		[Address(RVA = "0x1F0F4A4", Offset = "0x1F0F4A4", VA = "0x1F0F4A4")]
		public CrossPlatformInputManager.VirtualAxis VirtualAxisReference(string name)
		{
			return null;
		}

		[Token(Token = "0x600165B")]
		[Address(RVA = "0x1F0F9D8", Offset = "0x1F0F9D8", VA = "0x1F0F9D8")]
		public void SetVirtualMousePositionX(float f)
		{
		}

		[Token(Token = "0x600165C")]
		[Address(RVA = "0x1F0FAD8", Offset = "0x1F0FAD8", VA = "0x1F0FAD8")]
		public void SetVirtualMousePositionY(float f)
		{
		}

		[Token(Token = "0x600165D")]
		[Address(RVA = "0x1F0FBDC", Offset = "0x1F0FBDC", VA = "0x1F0FBDC")]
		public void SetVirtualMousePositionZ(float f)
		{
		}

		[Token(Token = "0x600165E")]
		public abstract float GetAxis(string name, bool raw);

		[Token(Token = "0x600165F")]
		public abstract bool GetButton(string name);

		[Token(Token = "0x6001660")]
		public abstract bool GetButtonDown(string name);

		[Token(Token = "0x6001661")]
		public abstract bool GetButtonUp(string name);

		[Token(Token = "0x6001662")]
		public abstract void SetButtonDown(string name);

		[Token(Token = "0x6001663")]
		public abstract void SetButtonUp(string name);

		[Token(Token = "0x6001664")]
		public abstract void SetAxisPositive(string name);

		[Token(Token = "0x6001665")]
		public abstract void SetAxisNegative(string name);

		[Token(Token = "0x6001666")]
		public abstract void SetAxisZero(string name);

		[Token(Token = "0x6001667")]
		public abstract void SetAxis(string name, float value);

		[Token(Token = "0x6001668")]
		public abstract Vector3 MousePosition();

		[Token(Token = "0x6001669")]
		[Address(RVA = "0x1F1100C", Offset = "0x1F1100C", VA = "0x1F1100C")]
		protected VirtualInput()
		{
		}
	}
}
namespace UnityStandardAssets.CrossPlatformInput.PlatformSpecific
{
	[Token(Token = "0x20002E1")]
	public class MobileInput : VirtualInput
	{
		[Token(Token = "0x600166A")]
		[Address(RVA = "0x1F10848", Offset = "0x1F10848", VA = "0x1F10848")]
		private void AddButton(string name)
		{
		}

		[Token(Token = "0x600166B")]
		[Address(RVA = "0x1F108E8", Offset = "0x1F108E8", VA = "0x1F108E8")]
		private void AddAxes(string name)
		{
		}

		[Token(Token = "0x600166C")]
		[Address(RVA = "0x1F10980", Offset = "0x1F10980", VA = "0x1F10980", Slot = "4")]
		public override float GetAxis(string name, bool raw)
		{
			return default(float);
		}

		[Token(Token = "0x600166D")]
		[Address(RVA = "0x1F10A1C", Offset = "0x1F10A1C", VA = "0x1F10A1C", Slot = "8")]
		public override void SetButtonDown(string name)
		{
		}

		[Token(Token = "0x600166E")]
		[Address(RVA = "0x1F10AD4", Offset = "0x1F10AD4", VA = "0x1F10AD4", Slot = "9")]
		public override void SetButtonUp(string name)
		{
		}

		[Token(Token = "0x600166F")]
		[Address(RVA = "0x1F10B80", Offset = "0x1F10B80", VA = "0x1F10B80", Slot = "10")]
		public override void SetAxisPositive(string name)
		{
		}

		[Token(Token = "0x6001670")]
		[Address(RVA = "0x1F10C20", Offset = "0x1F10C20", VA = "0x1F10C20", Slot = "11")]
		public override void SetAxisNegative(string name)
		{
		}

		[Token(Token = "0x6001671")]
		[Address(RVA = "0x1F10CC0", Offset = "0x1F10CC0", VA = "0x1F10CC0", Slot = "12")]
		public override void SetAxisZero(string name)
		{
		}

		[Token(Token = "0x6001672")]
		[Address(RVA = "0x1F10D5C", Offset = "0x1F10D5C", VA = "0x1F10D5C", Slot = "13")]
		public override void SetAxis(string name, float value)
		{
		}

		[Token(Token = "0x6001673")]
		[Address(RVA = "0x1F10E04", Offset = "0x1F10E04", VA = "0x1F10E04", Slot = "6")]
		public override bool GetButtonDown(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001674")]
		[Address(RVA = "0x1F10EB4", Offset = "0x1F10EB4", VA = "0x1F10EB4", Slot = "7")]
		public override bool GetButtonUp(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001675")]
		[Address(RVA = "0x1F10F64", Offset = "0x1F10F64", VA = "0x1F10F64", Slot = "5")]
		public override bool GetButton(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001676")]
		[Address(RVA = "0x1F11000", Offset = "0x1F11000", VA = "0x1F11000", Slot = "14")]
		public override Vector3 MousePosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001677")]
		[Address(RVA = "0x1F0ED74", Offset = "0x1F0ED74", VA = "0x1F0ED74")]
		public MobileInput()
		{
		}
	}
	[Token(Token = "0x20002E2")]
	public class StandaloneInput : VirtualInput
	{
		[Token(Token = "0x6001678")]
		[Address(RVA = "0x1F110F0", Offset = "0x1F110F0", VA = "0x1F110F0", Slot = "4")]
		public override float GetAxis(string name, bool raw)
		{
			return default(float);
		}

		[Token(Token = "0x6001679")]
		[Address(RVA = "0x1F11104", Offset = "0x1F11104", VA = "0x1F11104", Slot = "5")]
		public override bool GetButton(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x600167A")]
		[Address(RVA = "0x1F11110", Offset = "0x1F11110", VA = "0x1F11110", Slot = "6")]
		public override bool GetButtonDown(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x600167B")]
		[Address(RVA = "0x1F1111C", Offset = "0x1F1111C", VA = "0x1F1111C", Slot = "7")]
		public override bool GetButtonUp(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x600167C")]
		[Address(RVA = "0x1F11128", Offset = "0x1F11128", VA = "0x1F11128", Slot = "8")]
		public override void SetButtonDown(string name)
		{
		}

		[Token(Token = "0x600167D")]
		[Address(RVA = "0x1F11194", Offset = "0x1F11194", VA = "0x1F11194", Slot = "9")]
		public override void SetButtonUp(string name)
		{
		}

		[Token(Token = "0x600167E")]
		[Address(RVA = "0x1F11200", Offset = "0x1F11200", VA = "0x1F11200", Slot = "10")]
		public override void SetAxisPositive(string name)
		{
		}

		[Token(Token = "0x600167F")]
		[Address(RVA = "0x1F1126C", Offset = "0x1F1126C", VA = "0x1F1126C", Slot = "11")]
		public override void SetAxisNegative(string name)
		{
		}

		[Token(Token = "0x6001680")]
		[Address(RVA = "0x1F112D8", Offset = "0x1F112D8", VA = "0x1F112D8", Slot = "12")]
		public override void SetAxisZero(string name)
		{
		}

		[Token(Token = "0x6001681")]
		[Address(RVA = "0x1F11344", Offset = "0x1F11344", VA = "0x1F11344", Slot = "13")]
		public override void SetAxis(string name, float value)
		{
		}

		[Token(Token = "0x6001682")]
		[Address(RVA = "0x1F113B0", Offset = "0x1F113B0", VA = "0x1F113B0", Slot = "14")]
		public override Vector3 MousePosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001683")]
		[Address(RVA = "0x1F0ED78", Offset = "0x1F0ED78", VA = "0x1F0ED78")]
		public StandaloneInput()
		{
		}
	}
}
namespace SkyboxPlus
{
	[Token(Token = "0x20002E3")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1468680", Offset = "0x1468680")]
	public class SkyboxPlusVRComp : MonoBehaviour
	{
		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int LightWorldToLocal;

		[Token(Token = "0x6001684")]
		[Address(RVA = "0x1F03574", Offset = "0x1F03574", VA = "0x1F03574")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001685")]
		[Address(RVA = "0x1F03628", Offset = "0x1F03628", VA = "0x1F03628")]
		public SkyboxPlusVRComp()
		{
		}
	}
}
namespace StylizedSkybox
{
	[Token(Token = "0x20002E4")]
	public class FreeCameraMove : MonoBehaviour
	{
		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float cameraSensitivity;

		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float climbSpeed;

		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float normalMoveSpeed;

		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float slowMoveFactor;

		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fastMoveFactor;

		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float rotationX;

		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float rotationY;

		[Token(Token = "0x6001687")]
		[Address(RVA = "0x1F08FCC", Offset = "0x1F08FCC", VA = "0x1F08FCC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001688")]
		[Address(RVA = "0x1F08FD8", Offset = "0x1F08FD8", VA = "0x1F08FD8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001689")]
		[Address(RVA = "0x1F09914", Offset = "0x1F09914", VA = "0x1F09914")]
		public FreeCameraMove()
		{
		}
	}
	[Token(Token = "0x20002E5")]
	public class Rotate : MonoBehaviour
	{
		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float speed;

		[Token(Token = "0x600168A")]
		[Address(RVA = "0x1F09930", Offset = "0x1F09930", VA = "0x1F09930")]
		private void Update()
		{
		}

		[Token(Token = "0x600168B")]
		[Address(RVA = "0x1F099A8", Offset = "0x1F099A8", VA = "0x1F099A8")]
		public Rotate()
		{
		}
	}
	[Token(Token = "0x20002E6")]
	public class SkyboxSwitch : MonoBehaviour
	{
		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Canvas UI;

		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text text;

		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Light sun;

		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Rotate sunRotator;

		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material[] skybox;

		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int index;

		[Token(Token = "0x600168C")]
		[Address(RVA = "0x1F099B8", Offset = "0x1F099B8", VA = "0x1F099B8")]
		private void Start()
		{
		}

		[Token(Token = "0x600168D")]
		[Address(RVA = "0x1F09B08", Offset = "0x1F09B08", VA = "0x1F09B08")]
		private void Update()
		{
		}

		[Token(Token = "0x600168E")]
		[Address(RVA = "0x1F09A28", Offset = "0x1F09A28", VA = "0x1F09A28")]
		private void SetSkybox()
		{
		}

		[Token(Token = "0x600168F")]
		[Address(RVA = "0x1F09D10", Offset = "0x1F09D10", VA = "0x1F09D10")]
		public SkyboxSwitch()
		{
		}
	}
}
namespace SWS
{
	[Token(Token = "0x20002E7")]
	public class EventCollisionTrigger : MonoBehaviour
	{
		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool onTrigger;

		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool onCollision;

		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent myEvent;

		[Token(Token = "0x6001690")]
		[Address(RVA = "0x289ED0C", Offset = "0x289ED0C", VA = "0x289ED0C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001691")]
		[Address(RVA = "0x289ED34", Offset = "0x289ED34", VA = "0x289ED34")]
		private void OnCollisionEnter(Collision other)
		{
		}

		[Token(Token = "0x6001692")]
		[Address(RVA = "0x289ED5C", Offset = "0x289ED5C", VA = "0x289ED5C")]
		public void ApplyForce(int power)
		{
		}

		[Token(Token = "0x6001693")]
		[Address(RVA = "0x289EFB4", Offset = "0x289EFB4", VA = "0x289EFB4")]
		public EventCollisionTrigger()
		{
		}
	}
	[Token(Token = "0x20002E8")]
	public class MoveAnimator : MonoBehaviour
	{
		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private splineMove sMove;

		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private NavMeshAgent nAgent;

		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Animator animator;

		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float lastRotY;

		[Token(Token = "0x6001694")]
		[Address(RVA = "0x289EFC4", Offset = "0x289EFC4", VA = "0x289EFC4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001695")]
		[Address(RVA = "0x289F0AC", Offset = "0x289F0AC", VA = "0x289F0AC")]
		private void OnAnimatorMove()
		{
		}

		[Token(Token = "0x6001696")]
		[Address(RVA = "0x289F334", Offset = "0x289F334", VA = "0x289F334")]
		public MoveAnimator()
		{
		}
	}
	[Token(Token = "0x20002E9")]
	public class PathIndicator : MonoBehaviour
	{
		[Token(Token = "0x200067E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A6AC", Offset = "0x146A6AC")]
		private sealed class <EmitParticles>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40025E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40025E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40025E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PathIndicator <>4__this;

			[Token(Token = "0x17000562")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002888")]
				[Address(RVA = "0x289F5F8", Offset = "0x289F5F8", VA = "0x289F5F8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000563")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600288A")]
				[Address(RVA = "0x289F660", Offset = "0x289F660", VA = "0x289F660", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002885")]
			[Address(RVA = "0x289F430", Offset = "0x289F430", VA = "0x289F430")]
			[DebuggerHidden]
			public <EmitParticles>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6002886")]
			[Address(RVA = "0x289F464", Offset = "0x289F464", VA = "0x289F464", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002887")]
			[Address(RVA = "0x289F468", Offset = "0x289F468", VA = "0x289F468", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002889")]
			[Address(RVA = "0x289F600", Offset = "0x289F600", VA = "0x289F600", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float modRotation;

		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ParticleSystem pSys;

		[Token(Token = "0x6001697")]
		[Address(RVA = "0x289F33C", Offset = "0x289F33C", VA = "0x289F33C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001698")]
		[Address(RVA = "0x289F3B4", Offset = "0x289F3B4", VA = "0x289F3B4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1484C70", Offset = "0x1484C70")]
		private IEnumerator EmitParticles()
		{
			return null;
		}

		[Token(Token = "0x6001699")]
		[Address(RVA = "0x289F45C", Offset = "0x289F45C", VA = "0x289F45C")]
		public PathIndicator()
		{
		}
	}
	[Token(Token = "0x20002EA")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x14686F4", Offset = "0x14686F4")]
	public class PathRenderer : MonoBehaviour
	{
		[Token(Token = "0x200067F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A6BC", Offset = "0x146A6BC")]
		private sealed class <StartRenderer>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40025E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40025E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40025E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PathRenderer <>4__this;

			[Token(Token = "0x17000564")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600288E")]
				[Address(RVA = "0x28A0958", Offset = "0x28A0958", VA = "0x28A0958", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000565")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002890")]
				[Address(RVA = "0x28A09C0", Offset = "0x28A09C0", VA = "0x28A09C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600288B")]
			[Address(RVA = "0x28A0100", Offset = "0x28A0100", VA = "0x28A0100")]
			[DebuggerHidden]
			public <StartRenderer>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x600288C")]
			[Address(RVA = "0x28A08D0", Offset = "0x28A08D0", VA = "0x28A08D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600288D")]
			[Address(RVA = "0x28A08D4", Offset = "0x28A08D4", VA = "0x28A08D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600288F")]
			[Address(RVA = "0x28A0960", Offset = "0x28A0960", VA = "0x28A0960", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool onUpdate;

		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float spacing;

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PathManager path;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private LineRenderer line;

		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3[] points;

		[Token(Token = "0x600169A")]
		[Address(RVA = "0x289FFA8", Offset = "0x289FFA8", VA = "0x289FFA8")]
		private void Start()
		{
		}

		[Token(Token = "0x600169B")]
		[Address(RVA = "0x28A0084", Offset = "0x28A0084", VA = "0x28A0084")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1484CD4", Offset = "0x1484CD4")]
		private IEnumerator StartRenderer()
		{
			return null;
		}

		[Token(Token = "0x600169C")]
		[Address(RVA = "0x28A012C", Offset = "0x28A012C", VA = "0x28A012C")]
		private void Render()
		{
		}

		[Token(Token = "0x600169D")]
		[Address(RVA = "0x28A0300", Offset = "0x28A0300", VA = "0x28A0300")]
		private void DrawCurved()
		{
		}

		[Token(Token = "0x600169E")]
		[Address(RVA = "0x28A0414", Offset = "0x28A0414", VA = "0x28A0414")]
		private void DrawLinear()
		{
		}

		[Token(Token = "0x600169F")]
		[Address(RVA = "0x28A08BC", Offset = "0x28A08BC", VA = "0x28A08BC")]
		public PathRenderer()
		{
		}
	}
	[Token(Token = "0x20002EB")]
	public class BezierPathManager : PathManager
	{
		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Vector3[] pathPoints;

		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<float> pathWidth;

		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BezierPoint[] bPoints;

		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool showHandles;

		[Token(Token = "0x4001492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		public bool connectHandles;

		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public UnityEngine.Color color3;

		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float pathDetail;

		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool customDetail;

		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public List<float> segmentDetail;

		[Token(Token = "0x60016A0")]
		[Address(RVA = "0x289C87C", Offset = "0x289C87C", VA = "0x289C87C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016A1")]
		[Address(RVA = "0x289D0B8", Offset = "0x289D0B8", VA = "0x289D0B8", Slot = "4")]
		public override void Create(Transform[] waypoints, bool makeChildren = false)
		{
		}

		[Token(Token = "0x60016A2")]
		[Address(RVA = "0x289D3E4", Offset = "0x289D3E4", VA = "0x289D3E4")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60016A3")]
		[Address(RVA = "0x289D9A4", Offset = "0x289D9A4", VA = "0x289D9A4")]
		public Vector3[] GetPathWidthPoints(Vector3[] pathPoints)
		{
			return null;
		}

		[Token(Token = "0x60016A4")]
		[Address(RVA = "0x289DA18", Offset = "0x289DA18", VA = "0x289DA18")]
		public Vector3[] GetPathWidthPoints(Vector3[] pathPoints, float p_width)
		{
			return null;
		}

		[Token(Token = "0x60016A5")]
		[Address(RVA = "0x289DE50", Offset = "0x289DE50", VA = "0x289DE50")]
		private Vector3[] GetPathWidthPoints(Vector3[] p_pathPoints, List<float> p_pathWidth)
		{
			return null;
		}

		[Token(Token = "0x60016A6")]
		[Address(RVA = "0x289DADC", Offset = "0x289DADC", VA = "0x289DADC")]
		private Vector3[] GetPathHeightPoints(Vector3[] p_pathPoints, float p_Height)
		{
			return null;
		}

		[Token(Token = "0x60016A7")]
		[Address(RVA = "0x289E414", Offset = "0x289E414", VA = "0x289E414", Slot = "6")]
		public override Vector3[] GetPathPoints(bool local = false)
		{
			return null;
		}

		[Token(Token = "0x60016A8")]
		[Address(RVA = "0x289E510", Offset = "0x289E510", VA = "0x289E510", Slot = "9")]
		public override int GetWaypointCount()
		{
			return default(int);
		}

		[Token(Token = "0x60016A9")]
		[Address(RVA = "0x289E528", Offset = "0x289E528", VA = "0x289E528", Slot = "7")]
		public override Transform GetWaypoint(int p_index)
		{
			return null;
		}

		[Token(Token = "0x60016AA")]
		[Address(RVA = "0x289E56C", Offset = "0x289E56C", VA = "0x289E56C")]
		public SpeedMod GetSpeedModType(int p_index)
		{
			return default(SpeedMod);
		}

		[Token(Token = "0x60016AB")]
		[Address(RVA = "0x289E5B0", Offset = "0x289E5B0", VA = "0x289E5B0")]
		public float GetSpeedModifier(int p_index)
		{
			return default(float);
		}

		[Token(Token = "0x60016AC")]
		[Address(RVA = "0x289E5F4", Offset = "0x289E5F4", VA = "0x289E5F4")]
		public float GetSpeedModifier(int p_index, float p_instantSpeed, float p_avgSpeed, bool p_bike)
		{
			return default(float);
		}

		[Token(Token = "0x60016AD")]
		[Address(RVA = "0x289E6B0", Offset = "0x289E6B0", VA = "0x289E6B0")]
		public float GetWidthModifier(int p_index)
		{
			return default(float);
		}

		[Token(Token = "0x60016AE")]
		[Address(RVA = "0x289E6F4", Offset = "0x289E6F4", VA = "0x289E6F4", Slot = "8")]
		public override int GetWaypointIndex(int point)
		{
			return default(int);
		}

		[Token(Token = "0x60016AF")]
		[Address(RVA = "0x289CD84", Offset = "0x289CD84", VA = "0x289CD84")]
		public void CalculatePath()
		{
		}

		[Token(Token = "0x60016B0")]
		[Address(RVA = "0x289E7FC", Offset = "0x289E7FC", VA = "0x289E7FC")]
		private List<Vector3> GetPoints(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float detail)
		{
			return null;
		}

		[Token(Token = "0x60016B1")]
		[Address(RVA = "0x289EAC4", Offset = "0x289EAC4", VA = "0x289EAC4")]
		public BezierPathManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002EC")]
	public class BezierPoint
	{
		[Token(Token = "0x4001497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform wp;

		[Token(Token = "0x4001498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform[] cp;

		[Token(Token = "0x4001499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpeedMod speedModType;

		[Token(Token = "0x400149A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x14750B0", Offset = "0x14750B0")]
		public float speedMod;

		[Token(Token = "0x400149B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float widthMod;

		[Token(Token = "0x400149C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool halfForBike;

		[Token(Token = "0x60016B2")]
		[Address(RVA = "0x289D370", Offset = "0x289D370", VA = "0x289D370")]
		public BezierPoint()
		{
		}
	}
	[Token(Token = "0x20002ED")]
	public enum SpeedMod
	{
		[Token(Token = "0x400149E")]
		Additive,
		[Token(Token = "0x400149F")]
		AvgSpeedMultiplier,
		[Token(Token = "0x40014A0")]
		RealSpeedMultiplier
	}
	[Token(Token = "0x20002EE")]
	public class PathManager : MonoBehaviour
	{
		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform[] waypoints;

		[Token(Token = "0x40014A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool drawCurved;

		[Token(Token = "0x40014A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool drawDirection;

		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool drawWidth;

		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		public bool showHoloshipWidth;

		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float holoshipWidth;

		[Token(Token = "0x40014A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float holoshipHeight;

		[Token(Token = "0x40014A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public UnityEngine.Color color1;

		[Token(Token = "0x40014A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public UnityEngine.Color color2;

		[Token(Token = "0x40014AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector3 size;

		[Token(Token = "0x40014AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float radius;

		[Token(Token = "0x40014AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool skipCustomNames;

		[Token(Token = "0x40014AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject replaceObject;

		[Token(Token = "0x60016B3")]
		[Address(RVA = "0x289F668", Offset = "0x289F668", VA = "0x289F668")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016B4")]
		[Address(RVA = "0x289F6E0", Offset = "0x289F6E0", VA = "0x289F6E0")]
		public void Create([Optional] Transform parent)
		{
		}

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0x289F9E0", Offset = "0x289F9E0", VA = "0x289F9E0", Slot = "4")]
		public virtual void Create(Transform[] waypoints, bool makeChildren = false)
		{
		}

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0x289FAF0", Offset = "0x289FAF0", VA = "0x289FAF0")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0x289FDFC", Offset = "0x289FDFC", VA = "0x289FDFC", Slot = "5")]
		public virtual float GetHandleSize(Vector3 pos)
		{
			return default(float);
		}

		[Token(Token = "0x60016B8")]
		[Address(RVA = "0x289FE04", Offset = "0x289FE04", VA = "0x289FE04", Slot = "6")]
		public virtual Vector3[] GetPathPoints(bool local = false)
		{
			return null;
		}

		[Token(Token = "0x60016B9")]
		[Address(RVA = "0x289FF48", Offset = "0x289FF48", VA = "0x289FF48", Slot = "7")]
		public virtual Transform GetWaypoint(int index)
		{
			return null;
		}

		[Token(Token = "0x60016BA")]
		[Address(RVA = "0x289FF84", Offset = "0x289FF84", VA = "0x289FF84", Slot = "8")]
		public virtual int GetWaypointIndex(int point)
		{
			return default(int);
		}

		[Token(Token = "0x60016BB")]
		[Address(RVA = "0x289FF8C", Offset = "0x289FF8C", VA = "0x289FF8C", Slot = "9")]
		public virtual int GetWaypointCount()
		{
			return default(int);
		}

		[Token(Token = "0x60016BC")]
		[Address(RVA = "0x289EBD8", Offset = "0x289EBD8", VA = "0x289EBD8")]
		public PathManager()
		{
		}
	}
	[Token(Token = "0x20002EF")]
	public class WaypointManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000680")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A6CC", Offset = "0x146A6CC")]
		private sealed class <>c
		{
			[Token(Token = "0x40025E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40025E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<KeyValuePair<string, PathManager>, bool> <>9__5_0;

			[Token(Token = "0x40025EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<KeyValuePair<string, PathManager>, string> <>9__5_1;

			[Token(Token = "0x6002892")]
			[Address(RVA = "0x28A1A68", Offset = "0x28A1A68", VA = "0x28A1A68")]
			public <>c()
			{
			}

			[Token(Token = "0x6002893")]
			[Address(RVA = "0x28A1A70", Offset = "0x28A1A70", VA = "0x28A1A70")]
			internal bool <CleanUp>b__5_0(KeyValuePair<string, PathManager> p)
			{
				return default(bool);
			}

			[Token(Token = "0x6002894")]
			[Address(RVA = "0x28A1ADC", Offset = "0x28A1ADC", VA = "0x28A1ADC")]
			internal string <CleanUp>b__5_1(KeyValuePair<string, PathManager> p)
			{
				return null;
			}
		}

		[Token(Token = "0x40014AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyCode placementKey;

		[Token(Token = "0x40014AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public KeyCode viewPlacementKey;

		[Token(Token = "0x40014B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Dictionary<string, PathManager> Paths;

		[Token(Token = "0x60016BD")]
		[Address(RVA = "0x28A09C8", Offset = "0x28A09C8", VA = "0x28A09C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016BE")]
		[Address(RVA = "0x289C918", Offset = "0x289C918", VA = "0x289C918")]
		public static void AddPath(GameObject path)
		{
		}

		[Token(Token = "0x60016BF")]
		[Address(RVA = "0x28A0A34", Offset = "0x28A0A34", VA = "0x28A0A34")]
		public static void CleanUp()
		{
		}

		[Token(Token = "0x60016C0")]
		[Address(RVA = "0x28A0CAC", Offset = "0x28A0CAC", VA = "0x28A0CAC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60016C1")]
		[Address(RVA = "0x289D910", Offset = "0x289D910", VA = "0x289D910")]
		public static void DrawStraight(Vector3[] waypoints)
		{
		}

		[Token(Token = "0x60016C2")]
		[Address(RVA = "0x289D814", Offset = "0x289D814", VA = "0x289D814")]
		public static void DrawCurved(Vector3[] pathPoints)
		{
		}

		[Token(Token = "0x60016C3")]
		[Address(RVA = "0x289D9AC", Offset = "0x289D9AC", VA = "0x289D9AC")]
		public static void DrawPathWidth(Vector3[] pathPoints)
		{
		}

		[Token(Token = "0x60016C4")]
		[Address(RVA = "0x289DDB0", Offset = "0x289DDB0", VA = "0x289DDB0")]
		public static void DrawHoloshipWidth(Vector3[] widthPoints, Vector3[] heightPoints)
		{
		}

		[Token(Token = "0x60016C5")]
		[Address(RVA = "0x28A0EBC", Offset = "0x28A0EBC", VA = "0x28A0EBC")]
		private static Mesh CreatePathWidthMesh(Vector3[] pathPoints)
		{
			return null;
		}

		[Token(Token = "0x60016C6")]
		[Address(RVA = "0x28A11F4", Offset = "0x28A11F4", VA = "0x28A11F4")]
		private static Mesh CreatePathHeightMesh(Vector3[] pathPoints, bool leftSide)
		{
			return null;
		}

		[Token(Token = "0x60016C7")]
		[Address(RVA = "0x28A0D28", Offset = "0x28A0D28", VA = "0x28A0D28")]
		public static Vector3[] GetCurved(Vector3[] waypoints)
		{
			return null;
		}

		[Token(Token = "0x60016C8")]
		[Address(RVA = "0x28A04B8", Offset = "0x28A04B8", VA = "0x28A04B8")]
		public static Vector3 GetPoint(Vector3[] gizmoPoints, double t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016C9")]
		[Address(RVA = "0x28A1574", Offset = "0x28A1574", VA = "0x28A1574")]
		public static float GetPathLength(Vector3[] waypoints)
		{
			return default(float);
		}

		[Token(Token = "0x60016CA")]
		[Address(RVA = "0x28A16A0", Offset = "0x28A16A0", VA = "0x28A16A0")]
		public static List<Vector3> SmoothCurve(List<Vector3> pathToCurve, int interpolations)
		{
			return null;
		}

		[Token(Token = "0x60016CB")]
		[Address(RVA = "0x28A1974", Offset = "0x28A1974", VA = "0x28A1974")]
		public WaypointManager()
		{
		}
	}
	[Token(Token = "0x20002F0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1468758", Offset = "0x1468758")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1468758", Offset = "0x1468758")]
	public class navMove : MonoBehaviour
	{
		[Token(Token = "0x2000681")]
		public enum LoopType
		{
			[Token(Token = "0x40025EC")]
			none,
			[Token(Token = "0x40025ED")]
			loop,
			[Token(Token = "0x40025EE")]
			pingPong,
			[Token(Token = "0x40025EF")]
			random
		}

		[Token(Token = "0x2000682")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A6DC", Offset = "0x146A6DC")]
		private sealed class <Move>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40025F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40025F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40025F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public navMove <>4__this;

			[Token(Token = "0x17000566")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002898")]
				[Address(RVA = "0x28A2A2C", Offset = "0x28A2A2C", VA = "0x28A2A2C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000567")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600289A")]
				[Address(RVA = "0x28A2A94", Offset = "0x28A2A94", VA = "0x28A2A94", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002895")]
			[Address(RVA = "0x28A1E70", Offset = "0x28A1E70", VA = "0x28A1E70")]
			[DebuggerHidden]
			public <Move>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x6002896")]
			[Address(RVA = "0x28A28C0", Offset = "0x28A28C0", VA = "0x28A28C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002897")]
			[Address(RVA = "0x28A28C4", Offset = "0x28A28C4", VA = "0x28A28C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002899")]
			[Address(RVA = "0x28A2A34", Offset = "0x28A2A34", VA = "0x28A2A34", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000683")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A6EC", Offset = "0x146A6EC")]
		private sealed class <NextWaypoint>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40025F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40025F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40025F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public navMove <>4__this;

			[Token(Token = "0x17000568")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600289E")]
				[Address(RVA = "0x28A2DEC", Offset = "0x28A2DEC", VA = "0x28A2DEC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000569")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60028A0")]
				[Address(RVA = "0x28A2E54", Offset = "0x28A2E54", VA = "0x28A2E54", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600289B")]
			[Address(RVA = "0x28A1F18", Offset = "0x28A1F18", VA = "0x28A1F18")]
			[DebuggerHidden]
			public <NextWaypoint>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x600289C")]
			[Address(RVA = "0x28A2A9C", Offset = "0x28A2A9C", VA = "0x28A2A9C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600289D")]
			[Address(RVA = "0x28A2AA0", Offset = "0x28A2AA0", VA = "0x28A2AA0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600289F")]
			[Address(RVA = "0x28A2DF4", Offset = "0x28A2DF4", VA = "0x28A2DF4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000684")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A6FC", Offset = "0x146A6FC")]
		private sealed class <WaitForDestination>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40025F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40025F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40025F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public navMove <>4__this;

			[Token(Token = "0x40025F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <remain>5__2;

			[Token(Token = "0x1700056A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60028A4")]
				[Address(RVA = "0x28A3348", Offset = "0x28A3348", VA = "0x28A3348", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700056B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60028A6")]
				[Address(RVA = "0x28A33B0", Offset = "0x28A33B0", VA = "0x28A33B0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60028A1")]
			[Address(RVA = "0x28A1FC0", Offset = "0x28A1FC0", VA = "0x28A1FC0")]
			[DebuggerHidden]
			public <WaitForDestination>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x60028A2")]
			[Address(RVA = "0x28A3168", Offset = "0x28A3168", VA = "0x28A3168", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60028A3")]
			[Address(RVA = "0x28A316C", Offset = "0x28A316C", VA = "0x28A316C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60028A5")]
			[Address(RVA = "0x28A3350", Offset = "0x28A3350", VA = "0x28A3350", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000685")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A70C", Offset = "0x146A70C")]
		private sealed class <ReachedEnd>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40025FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40025FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40025FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public navMove <>4__this;

			[Token(Token = "0x1700056C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60028AA")]
				[Address(RVA = "0x28A2FC8", Offset = "0x28A2FC8", VA = "0x28A2FC8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700056D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60028AC")]
				[Address(RVA = "0x28A3030", Offset = "0x28A3030", VA = "0x28A3030", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60028A7")]
			[Address(RVA = "0x28A2150", Offset = "0x28A2150", VA = "0x28A2150")]
			[DebuggerHidden]
			public <ReachedEnd>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x60028A8")]
			[Address(RVA = "0x28A2E5C", Offset = "0x28A2E5C", VA = "0x28A2E5C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60028A9")]
			[Address(RVA = "0x28A2E60", Offset = "0x28A2E60", VA = "0x28A2E60", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60028AB")]
			[Address(RVA = "0x28A2FD0", Offset = "0x28A2FD0", VA = "0x28A2FD0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000686")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A71C", Offset = "0x146A71C")]
		private sealed class <Wait>d__28 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40025FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40025FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40025FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float secs;

			[Token(Token = "0x4002600")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public navMove <>4__this;

			[Token(Token = "0x1700056E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60028B0")]
				[Address(RVA = "0x28A30F8", Offset = "0x28A30F8", VA = "0x28A30F8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700056F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60028B2")]
				[Address(RVA = "0x28A3160", Offset = "0x28A3160", VA = "0x28A3160", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60028AD")]
			[Address(RVA = "0x28A25F8", Offset = "0x28A25F8", VA = "0x28A25F8")]
			[DebuggerHidden]
			public <Wait>d__28(int <>1__state)
			{
			}

			[Token(Token = "0x60028AE")]
			[Address(RVA = "0x28A3038", Offset = "0x28A3038", VA = "0x28A3038", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60028AF")]
			[Address(RVA = "0x28A303C", Offset = "0x28A303C", VA = "0x28A303C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60028B1")]
			[Address(RVA = "0x28A3100", Offset = "0x28A3100", VA = "0x28A3100", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40014B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PathManager pathContainer;

		[Token(Token = "0x40014B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool onStart;

		[Token(Token = "0x40014B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool moveToPath;

		[Token(Token = "0x40014B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool reverse;

		[Token(Token = "0x40014B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int startPoint;

		[Token(Token = "0x40014B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public int currentPoint;

		[Token(Token = "0x40014B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool closeLoop;

		[Token(Token = "0x40014B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool updateRotation;

		[Token(Token = "0x40014B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public List<UnityEvent> events;

		[Token(Token = "0x40014BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public LoopType loopType;

		[Token(Token = "0x40014BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public Transform[] waypoints;

		[Token(Token = "0x40014BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool repeat;

		[Token(Token = "0x40014BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private NavMeshAgent agent;

		[Token(Token = "0x40014BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private System.Random rand;

		[Token(Token = "0x40014BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int rndIndex;

		[Token(Token = "0x40014C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool waiting;

		[Token(Token = "0x60016CD")]
		[Address(RVA = "0x28A1B20", Offset = "0x28A1B20", VA = "0x28A1B20")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016CE")]
		[Address(RVA = "0x28A1B80", Offset = "0x28A1B80", VA = "0x28A1B80")]
		private void Start()
		{
		}

		[Token(Token = "0x60016CF")]
		[Address(RVA = "0x28A1B90", Offset = "0x28A1B90", VA = "0x28A1B90")]
		public void StartMove()
		{
		}

		[Token(Token = "0x60016D0")]
		[Address(RVA = "0x28A1DF4", Offset = "0x28A1DF4", VA = "0x28A1DF4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1484D38", Offset = "0x1484D38")]
		private IEnumerator Move()
		{
			return null;
		}

		[Token(Token = "0x60016D1")]
		[Address(RVA = "0x28A1E9C", Offset = "0x28A1E9C", VA = "0x28A1E9C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1484D9C", Offset = "0x1484D9C")]
		private IEnumerator NextWaypoint()
		{
			return null;
		}

		[Token(Token = "0x60016D2")]
		[Address(RVA = "0x28A1F44", Offset = "0x28A1F44", VA = "0x28A1F44")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1484E00", Offset = "0x1484E00")]
		private IEnumerator WaitForDestination()
		{
			return null;
		}

		[Token(Token = "0x60016D3")]
		[Address(RVA = "0x28A1FEC", Offset = "0x28A1FEC", VA = "0x28A1FEC")]
		private void OnWaypointChange(int index)
		{
		}

		[Token(Token = "0x60016D4")]
		[Address(RVA = "0x28A20D4", Offset = "0x28A20D4", VA = "0x28A20D4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1484E64", Offset = "0x1484E64")]
		private IEnumerator ReachedEnd()
		{
			return null;
		}

		[Token(Token = "0x60016D5")]
		[Address(RVA = "0x28A217C", Offset = "0x28A217C", VA = "0x28A217C")]
		private void RandomizeWaypoints()
		{
		}

		[Token(Token = "0x60016D6")]
		[Address(RVA = "0x28A2434", Offset = "0x28A2434", VA = "0x28A2434")]
		public void GoToWaypoint(int index)
		{
		}

		[Token(Token = "0x60016D7")]
		[Address(RVA = "0x28A24DC", Offset = "0x28A24DC", VA = "0x28A24DC")]
		public void Pause(float seconds = 0f)
		{
		}

		[Token(Token = "0x60016D8")]
		[Address(RVA = "0x28A256C", Offset = "0x28A256C", VA = "0x28A256C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1484EC8", Offset = "0x1484EC8")]
		private IEnumerator Wait(float secs = 0f)
		{
			return null;
		}

		[Token(Token = "0x60016D9")]
		[Address(RVA = "0x28A2624", Offset = "0x28A2624", VA = "0x28A2624")]
		public void Resume()
		{
		}

		[Token(Token = "0x60016DA")]
		[Address(RVA = "0x28A2670", Offset = "0x28A2670", VA = "0x28A2670")]
		public void Reverse()
		{
		}

		[Token(Token = "0x60016DB")]
		[Address(RVA = "0x28A26DC", Offset = "0x28A26DC", VA = "0x28A26DC")]
		public void SetPath(PathManager newPath)
		{
		}

		[Token(Token = "0x60016DC")]
		[Address(RVA = "0x289EF5C", Offset = "0x289EF5C", VA = "0x289EF5C")]
		public void Stop()
		{
		}

		[Token(Token = "0x60016DD")]
		[Address(RVA = "0x28A2714", Offset = "0x28A2714", VA = "0x28A2714")]
		public void ResetToStart()
		{
		}

		[Token(Token = "0x60016DE")]
		[Address(RVA = "0x28A27F4", Offset = "0x28A27F4", VA = "0x28A27F4")]
		public void ChangeSpeed(float value)
		{
		}

		[Token(Token = "0x60016DF")]
		[Address(RVA = "0x28A2810", Offset = "0x28A2810", VA = "0x28A2810")]
		public navMove()
		{
		}
	}
	[Token(Token = "0x20002F1")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x14687E0", Offset = "0x14687E0")]
	public class splineMove : MonoBehaviour
	{
		[Token(Token = "0x2000687")]
		public enum TimeValue
		{
			[Token(Token = "0x4002602")]
			time,
			[Token(Token = "0x4002603")]
			speed
		}

		[Token(Token = "0x2000688")]
		public enum LoopType
		{
			[Token(Token = "0x4002605")]
			none,
			[Token(Token = "0x4002606")]
			loop,
			[Token(Token = "0x4002607")]
			pingPong,
			[Token(Token = "0x4002608")]
			random,
			[Token(Token = "0x4002609")]
			yoyo
		}

		[Token(Token = "0x2000689")]
		public enum RotationType
		{
			[Token(Token = "0x400260B")]
			none,
			[Token(Token = "0x400260C")]
			all
		}

		[Token(Token = "0x200068A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A72C", Offset = "0x146A72C")]
		private sealed class <Wait>d__44 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400260D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400260E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400260F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float secs;

			[Token(Token = "0x4002610")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public splineMove <>4__this;

			[Token(Token = "0x17000570")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60028B6")]
				[Address(RVA = "0x1F00744", Offset = "0x1F00744", VA = "0x1F00744", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000571")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60028B8")]
				[Address(RVA = "0x1F007AC", Offset = "0x1F007AC", VA = "0x1F007AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60028B3")]
			[Address(RVA = "0x1F00654", Offset = "0x1F00654", VA = "0x1F00654")]
			[DebuggerHidden]
			public <Wait>d__44(int <>1__state)
			{
			}

			[Token(Token = "0x60028B4")]
			[Address(RVA = "0x1F00680", Offset = "0x1F00680", VA = "0x1F00680", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60028B5")]
			[Address(RVA = "0x1F00684", Offset = "0x1F00684", VA = "0x1F00684", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60028B7")]
			[Address(RVA = "0x1F0074C", Offset = "0x1F0074C", VA = "0x1F0074C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40014C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PathManager pathContainer;

		[Token(Token = "0x40014C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool onStart;

		[Token(Token = "0x40014C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool moveToPath;

		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool reverse;

		[Token(Token = "0x40014C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int startPoint;

		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public int currentPoint;

		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool closeLoop;

		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool local;

		[Token(Token = "0x40014C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float lookAhead;

		[Token(Token = "0x40014CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float sizeToAdd;

		[Token(Token = "0x40014CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TimeValue timeValue;

		[Token(Token = "0x40014CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float speed;

		[Token(Token = "0x40014CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AnimationCurve animEaseType;

		[Token(Token = "0x40014CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public LoopType loopType;

		[Token(Token = "0x40014CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public Vector3[] waypoints;

		[Token(Token = "0x40014D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public List<UnityEvent> events;

		[Token(Token = "0x40014D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public PathType pathType;

		[Token(Token = "0x40014D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public PathMode pathMode;

		[Token(Token = "0x40014D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Ease easeType;

		[Token(Token = "0x40014D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public AxisConstraint lockPosition;

		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AxisConstraint lockRotation;

		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public RotationType waypointRotation;

		[Token(Token = "0x40014D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform rotationTarget;

		[Token(Token = "0x40014D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public Tweener tween;

		[Token(Token = "0x40014D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3[] wpPos;

		[Token(Token = "0x40014DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float originSpeed;

		[Token(Token = "0x40014DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Quaternion originRot;

		[Token(Token = "0x40014DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private System.Random rand;

		[Token(Token = "0x40014DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int[] rndArray;

		[Token(Token = "0x60016E0")]
		[Address(RVA = "0x28A33B8", Offset = "0x28A33B8", VA = "0x28A33B8")]
		private void Start()
		{
		}

		[Token(Token = "0x60016E1")]
		[Address(RVA = "0x289C080", Offset = "0x289C080", VA = "0x289C080")]
		public void StartMove()
		{
		}

		[Token(Token = "0x60016E2")]
		[Address(RVA = "0x28A33C8", Offset = "0x28A33C8", VA = "0x28A33C8")]
		private void Initialize(int startAt = 0)
		{
		}

		[Token(Token = "0x60016E3")]
		[Address(RVA = "0x28A35EC", Offset = "0x28A35EC", VA = "0x28A35EC")]
		private void CreateTween()
		{
		}

		[Token(Token = "0x60016E4")]
		[Address(RVA = "0x28A3D9C", Offset = "0x28A3D9C", VA = "0x28A3D9C")]
		private void OnWaypointReached(int index)
		{
		}

		[Token(Token = "0x60016E5")]
		[Address(RVA = "0x28A3DDC", Offset = "0x28A3DDC", VA = "0x28A3DDC")]
		private void OnWaypointChange(int index)
		{
		}

		[Token(Token = "0x60016E6")]
		[Address(RVA = "0x28A3F5C", Offset = "0x28A3F5C", VA = "0x28A3F5C")]
		private void OnWaypointRotation()
		{
		}

		[Token(Token = "0x60016E7")]
		[Address(RVA = "0x28A4660", Offset = "0x28A4660", VA = "0x28A4660")]
		private void ApplyWaypointRotation(Quaternion rotation)
		{
		}

		[Token(Token = "0x60016E8")]
		[Address(RVA = "0x28A467C", Offset = "0x28A467C", VA = "0x28A467C")]
		private void ReachedEnd()
		{
		}

		[Token(Token = "0x60016E9")]
		[Address(RVA = "0x28A3A70", Offset = "0x28A3A70", VA = "0x28A3A70")]
		private void RandomizeWaypoints()
		{
		}

		[Token(Token = "0x60016EA")]
		[Address(RVA = "0x28A3D30", Offset = "0x28A3D30", VA = "0x28A3D30")]
		public void GoToWaypoint(int index)
		{
		}

		[Token(Token = "0x60016EB")]
		[Address(RVA = "0x289C3F8", Offset = "0x289C3F8", VA = "0x289C3F8")]
		public void Pause(float seconds = 0f)
		{
		}

		[Token(Token = "0x60016EC")]
		[Address(RVA = "0x28A4710", Offset = "0x28A4710", VA = "0x28A4710")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1484F2C", Offset = "0x1484F2C")]
		private IEnumerator Wait(float secs = 0f)
		{
			return null;
		}

		[Token(Token = "0x60016ED")]
		[Address(RVA = "0x289C4A8", Offset = "0x289C4A8", VA = "0x289C4A8")]
		public void Resume()
		{
		}

		[Token(Token = "0x60016EE")]
		[Address(RVA = "0x28A479C", Offset = "0x28A479C", VA = "0x28A479C")]
		public void Reverse()
		{
		}

		[Token(Token = "0x60016EF")]
		[Address(RVA = "0x289C048", Offset = "0x289C048", VA = "0x289C048")]
		public void SetPath(PathManager newPath)
		{
		}

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0x289C250", Offset = "0x289C250", VA = "0x289C250")]
		public void Stop()
		{
		}

		[Token(Token = "0x60016F1")]
		[Address(RVA = "0x289C294", Offset = "0x289C294", VA = "0x289C294")]
		public void ResetToStart()
		{
		}

		[Token(Token = "0x60016F2")]
		[Address(RVA = "0x289C524", Offset = "0x289C524", VA = "0x289C524")]
		public void ChangeSpeed(float value)
		{
		}

		[Token(Token = "0x60016F3")]
		[Address(RVA = "0x28A4848", Offset = "0x28A4848", VA = "0x28A4848")]
		public splineMove()
		{
		}
	}
}
namespace Beebyte.Obfuscator
{
	[Token(Token = "0x20002F2")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x1468818", Offset = "0x1468818")]
	public class DoNotFakeAttribute : Attribute
	{
		[Token(Token = "0x60016F4")]
		[Address(RVA = "0x1ED988C", Offset = "0x1ED988C", VA = "0x1ED988C")]
		public DoNotFakeAttribute()
		{
		}
	}
	[Token(Token = "0x20002F3")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x146882C", Offset = "0x146882C")]
	public class ObfuscateLiteralsAttribute : Attribute
	{
		[Token(Token = "0x60016F5")]
		[Address(RVA = "0x1ED9894", Offset = "0x1ED9894", VA = "0x1ED9894")]
		public ObfuscateLiteralsAttribute()
		{
		}
	}
	[Token(Token = "0x20002F4")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x1468840", Offset = "0x1468840")]
	public class RenameAttribute : Attribute
	{
		[Token(Token = "0x40014DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly string target;

		[Token(Token = "0x60016F6")]
		[Address(RVA = "0x1ED989C", Offset = "0x1ED989C", VA = "0x1ED989C")]
		private RenameAttribute()
		{
		}

		[Token(Token = "0x60016F7")]
		[Address(RVA = "0x1ED98A4", Offset = "0x1ED98A4", VA = "0x1ED98A4")]
		public RenameAttribute(string target)
		{
		}

		[Token(Token = "0x60016F8")]
		[Address(RVA = "0x1ED98D8", Offset = "0x1ED98D8", VA = "0x1ED98D8")]
		public string GetTarget()
		{
			return null;
		}
	}
	[Token(Token = "0x20002F5")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x1468854", Offset = "0x1468854")]
	public class ReplaceLiteralsWithNameAttribute : Attribute
	{
		[Token(Token = "0x60016F9")]
		[Address(RVA = "0x1ED98E0", Offset = "0x1ED98E0", VA = "0x1ED98E0")]
		public ReplaceLiteralsWithNameAttribute()
		{
		}
	}
	[Token(Token = "0x20002F6")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x1468868", Offset = "0x1468868")]
	public class SkipAttribute : Attribute
	{
		[Token(Token = "0x60016FA")]
		[Address(RVA = "0x1ED98E8", Offset = "0x1ED98E8", VA = "0x1ED98E8")]
		public SkipAttribute()
		{
		}
	}
	[Token(Token = "0x20002F7")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x146887C", Offset = "0x146887C")]
	public class SkipRenameAttribute : Attribute
	{
		[Token(Token = "0x60016FB")]
		[Address(RVA = "0x1ED98F0", Offset = "0x1ED98F0", VA = "0x1ED98F0")]
		public SkipRenameAttribute()
		{
		}
	}
}
namespace JBooth.MicroSplat
{
	[Token(Token = "0x20002F8")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1468890", Offset = "0x1468890")]
	public class GlitterLight : MonoBehaviour
	{
		[Token(Token = "0x40014DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Light lght;

		[Token(Token = "0x60016FC")]
		[Address(RVA = "0x2206C14", Offset = "0x2206C14", VA = "0x2206C14")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0x2206C74", Offset = "0x2206C74", VA = "0x2206C74")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60016FE")]
		[Address(RVA = "0x2206CD4", Offset = "0x2206CD4", VA = "0x2206CD4")]
		private void Update()
		{
		}

		[Token(Token = "0x60016FF")]
		[Address(RVA = "0x2206E74", Offset = "0x2206E74", VA = "0x2206E74")]
		public GlitterLight()
		{
		}
	}
	[Token(Token = "0x20002F9")]
	public class MicroSplatRuntimeUtil
	{
		[Token(Token = "0x6001700")]
		[Address(RVA = "0x2206E7C", Offset = "0x2206E7C", VA = "0x2206E7C")]
		public static Vector2 UnityUVScaleToUVScale(Vector2 uv, Terrain t)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001701")]
		[Address(RVA = "0x2206EFC", Offset = "0x2206EFC", VA = "0x2206EFC")]
		public static Vector2 UVScaleToUnityUVScale(Vector2 uv, Terrain t)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001702")]
		[Address(RVA = "0x2206F88", Offset = "0x2206F88", VA = "0x2206F88")]
		public MicroSplatRuntimeUtil()
		{
		}
	}
	[Token(Token = "0x20002FA")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x1468904", Offset = "0x1468904")]
	[ExecuteInEditMode]
	public class TextureArrayConfig : ScriptableObject
	{
		[Token(Token = "0x200068B")]
		public enum AllTextureChannel
		{
			[Token(Token = "0x4002612")]
			R,
			[Token(Token = "0x4002613")]
			G,
			[Token(Token = "0x4002614")]
			B,
			[Token(Token = "0x4002615")]
			A,
			[Token(Token = "0x4002616")]
			Custom
		}

		[Token(Token = "0x200068C")]
		public enum TextureChannel
		{
			[Token(Token = "0x4002618")]
			R,
			[Token(Token = "0x4002619")]
			G,
			[Token(Token = "0x400261A")]
			B,
			[Token(Token = "0x400261B")]
			A
		}

		[Token(Token = "0x200068D")]
		public enum Compression
		{
			[Token(Token = "0x400261D")]
			AutomaticCompressed,
			[Token(Token = "0x400261E")]
			ForceDXT,
			[Token(Token = "0x400261F")]
			ForcePVR,
			[Token(Token = "0x4002620")]
			ForceETC2,
			[Token(Token = "0x4002621")]
			ForceASTC,
			[Token(Token = "0x4002622")]
			ForceCrunch,
			[Token(Token = "0x4002623")]
			Uncompressed
		}

		[Token(Token = "0x200068E")]
		public enum TextureSize
		{
			[Token(Token = "0x4002625")]
			k4096 = 4096,
			[Token(Token = "0x4002626")]
			k2048 = 2048,
			[Token(Token = "0x4002627")]
			k1024 = 1024,
			[Token(Token = "0x4002628")]
			k512 = 512,
			[Token(Token = "0x4002629")]
			k256 = 256,
			[Token(Token = "0x400262A")]
			k128 = 128,
			[Token(Token = "0x400262B")]
			k64 = 64,
			[Token(Token = "0x400262C")]
			k32 = 32
		}

		[Serializable]
		[Token(Token = "0x200068F")]
		public class TextureArraySettings
		{
			[Token(Token = "0x400262D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TextureSize textureSize;

			[Token(Token = "0x400262E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Compression compression;

			[Token(Token = "0x400262F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FilterMode filterMode;

			[Token(Token = "0x4002630")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x147D4C8", Offset = "0x147D4C8")]
			public int Aniso;

			[Token(Token = "0x60028B9")]
			[Address(RVA = "0x2207384", Offset = "0x2207384", VA = "0x2207384")]
			public TextureArraySettings(TextureSize s, Compression c, FilterMode f, int a = 1)
			{
			}
		}

		[Token(Token = "0x2000690")]
		public enum PBRWorkflow
		{
			[Token(Token = "0x4002632")]
			Metallic,
			[Token(Token = "0x4002633")]
			Specular
		}

		[Token(Token = "0x2000691")]
		public enum PackingMode
		{
			[Token(Token = "0x4002635")]
			Fastest,
			[Token(Token = "0x4002636")]
			Quality
		}

		[Token(Token = "0x2000692")]
		public enum SourceTextureSize
		{
			[Token(Token = "0x4002638")]
			Unchanged = 0,
			[Token(Token = "0x4002639")]
			k32 = 0x20,
			[Token(Token = "0x400263A")]
			k256 = 0x100
		}

		[Token(Token = "0x2000693")]
		public enum TextureMode
		{
			[Token(Token = "0x400263C")]
			Basic,
			[Token(Token = "0x400263D")]
			PBR
		}

		[Token(Token = "0x2000694")]
		public enum ClusterMode
		{
			[Token(Token = "0x400263F")]
			None,
			[Token(Token = "0x4002640")]
			TwoVariations,
			[Token(Token = "0x4002641")]
			ThreeVariations
		}

		[Serializable]
		[Token(Token = "0x2000695")]
		public class TextureArrayGroup
		{
			[Token(Token = "0x4002642")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TextureArraySettings diffuseSettings;

			[Token(Token = "0x4002643")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TextureArraySettings normalSettings;

			[Token(Token = "0x4002644")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TextureArraySettings smoothSettings;

			[Token(Token = "0x4002645")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TextureArraySettings antiTileSettings;

			[Token(Token = "0x4002646")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public TextureArraySettings emissiveSettings;

			[Token(Token = "0x4002647")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public TextureArraySettings specularSettings;

			[Token(Token = "0x4002648")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public TextureArraySettings traxDiffuseSettings;

			[Token(Token = "0x4002649")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public TextureArraySettings traxNormalSettings;

			[Token(Token = "0x400264A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public TextureArraySettings decalSplatSettings;

			[Token(Token = "0x60028BA")]
			[Address(RVA = "0x22070E4", Offset = "0x22070E4", VA = "0x22070E4")]
			public TextureArrayGroup()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000696")]
		public class PlatformTextureOverride
		{
			[Token(Token = "0x400264B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TextureArrayGroup settings;

			[Token(Token = "0x60028BB")]
			[Address(RVA = "0x2207314", Offset = "0x2207314", VA = "0x2207314")]
			public PlatformTextureOverride()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000697")]
		public class TextureEntry
		{
			[Token(Token = "0x400264C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Texture2D diffuse;

			[Token(Token = "0x400264D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Texture2D height;

			[Token(Token = "0x400264E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TextureChannel heightChannel;

			[Token(Token = "0x400264F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Texture2D normal;

			[Token(Token = "0x4002650")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Texture2D smoothness;

			[Token(Token = "0x4002651")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public TextureChannel smoothnessChannel;

			[Token(Token = "0x4002652")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public bool isRoughness;

			[Token(Token = "0x4002653")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Texture2D ao;

			[Token(Token = "0x4002654")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public TextureChannel aoChannel;

			[Token(Token = "0x4002655")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Texture2D emis;

			[Token(Token = "0x4002656")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Texture2D metal;

			[Token(Token = "0x4002657")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public TextureChannel metalChannel;

			[Token(Token = "0x4002658")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Texture2D specular;

			[Token(Token = "0x4002659")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public Texture2D noiseNormal;

			[Token(Token = "0x400265A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public Texture2D detailNoise;

			[Token(Token = "0x400265B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public TextureChannel detailChannel;

			[Token(Token = "0x400265C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public Texture2D distanceNoise;

			[Token(Token = "0x400265D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public TextureChannel distanceChannel;

			[Token(Token = "0x400265E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public Texture2D traxDiffuse;

			[Token(Token = "0x400265F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public Texture2D traxHeight;

			[Token(Token = "0x4002660")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			public TextureChannel traxHeightChannel;

			[Token(Token = "0x4002661")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			public Texture2D traxNormal;

			[Token(Token = "0x4002662")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public Texture2D traxSmoothness;

			[Token(Token = "0x4002663")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public TextureChannel traxSmoothnessChannel;

			[Token(Token = "0x4002664")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
			public bool traxIsRoughness;

			[Token(Token = "0x4002665")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public Texture2D traxAO;

			[Token(Token = "0x4002666")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public TextureChannel traxAOChannel;

			[Token(Token = "0x4002667")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			public Texture2D splat;

			[Token(Token = "0x60028BC")]
			[Address(RVA = "0x22073D8", Offset = "0x22073D8", VA = "0x22073D8")]
			public void Reset()
			{
			}

			[Token(Token = "0x60028BD")]
			[Address(RVA = "0x2207514", Offset = "0x2207514", VA = "0x2207514")]
			public bool HasTextures(PBRWorkflow wf)
			{
				return default(bool);
			}

			[Token(Token = "0x60028BE")]
			[Address(RVA = "0x220775C", Offset = "0x220775C", VA = "0x220775C")]
			public TextureEntry()
			{
			}
		}

		[Token(Token = "0x40014E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool diffuseIsLinear;

		[Token(Token = "0x40014E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[HideInInspector]
		public bool antiTileArray;

		[Token(Token = "0x40014E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[HideInInspector]
		public bool emisMetalArray;

		[Token(Token = "0x40014E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool traxArray;

		[Token(Token = "0x40014E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[HideInInspector]
		public TextureMode textureMode;

		[Token(Token = "0x40014E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public ClusterMode clusterMode;

		[Token(Token = "0x40014E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		public PackingMode packingMode;

		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public PBRWorkflow pbrWorkflow;

		[Token(Token = "0x40014E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[HideInInspector]
		public int hash;

		[Token(Token = "0x40014E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public Texture2DArray splatArray;

		[Token(Token = "0x40014EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public Texture2DArray diffuseArray;

		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public Texture2DArray normalSAOArray;

		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public Texture2DArray smoothAOArray;

		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public Texture2DArray specularArray;

		[Token(Token = "0x40014EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Texture2DArray diffuseArray2;

		[Token(Token = "0x40014EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public Texture2DArray normalSAOArray2;

		[Token(Token = "0x40014F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Texture2DArray smoothAOArray2;

		[Token(Token = "0x40014F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public Texture2DArray specularArray2;

		[Token(Token = "0x40014F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public Texture2DArray diffuseArray3;

		[Token(Token = "0x40014F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public Texture2DArray normalSAOArray3;

		[Token(Token = "0x40014F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public Texture2DArray smoothAOArray3;

		[Token(Token = "0x40014F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		public Texture2DArray specularArray3;

		[Token(Token = "0x40014F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public Texture2DArray emisArray;

		[Token(Token = "0x40014F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public Texture2DArray emisArray2;

		[Token(Token = "0x40014F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		public Texture2DArray emisArray3;

		[Token(Token = "0x40014F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public TextureArrayGroup defaultTextureSettings;

		[Token(Token = "0x40014FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public List<PlatformTextureOverride> platformOverrides;

		[Token(Token = "0x40014FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public SourceTextureSize sourceTextureSize;

		[Token(Token = "0x40014FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[HideInInspector]
		public AllTextureChannel allTextureChannelHeight;

		[Token(Token = "0x40014FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[HideInInspector]
		public AllTextureChannel allTextureChannelSmoothness;

		[Token(Token = "0x40014FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[HideInInspector]
		public AllTextureChannel allTextureChannelAO;

		[Token(Token = "0x40014FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[HideInInspector]
		public List<TextureEntry> sourceTextures;

		[Token(Token = "0x4001500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[HideInInspector]
		public List<TextureEntry> sourceTextures2;

		[Token(Token = "0x4001501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[HideInInspector]
		public List<TextureEntry> sourceTextures3;

		[Token(Token = "0x6001703")]
		[Address(RVA = "0x2206F90", Offset = "0x2206F90", VA = "0x2206F90")]
		public bool IsScatter()
		{
			return default(bool);
		}

		[Token(Token = "0x6001704")]
		[Address(RVA = "0x2206F98", Offset = "0x2206F98", VA = "0x2206F98")]
		public bool IsDecal()
		{
			return default(bool);
		}

		[Token(Token = "0x6001705")]
		[Address(RVA = "0x2206FA0", Offset = "0x2206FA0", VA = "0x2206FA0")]
		public bool IsDecalSplat()
		{
			return default(bool);
		}

		[Token(Token = "0x6001706")]
		[Address(RVA = "0x2206FA8", Offset = "0x2206FA8", VA = "0x2206FA8")]
		public TextureArrayConfig()
		{
		}
	}
}
namespace FSG.MeshAnimator
{
	[Token(Token = "0x20002FB")]
	public class AnimatorStateMachine : MonoBehaviour
	{
		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshAnimator meshAnimator;

		[Token(Token = "0x4001503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool crossFade;

		[Token(Token = "0x6001707")]
		[Address(RVA = "0x1E82934", Offset = "0x1E82934", VA = "0x1E82934")]
		private void Start()
		{
		}

		[Token(Token = "0x6001708")]
		[Address(RVA = "0x1E82A18", Offset = "0x1E82A18", VA = "0x1E82A18")]
		private void OnAnimationFinished(string anim)
		{
		}

		[Token(Token = "0x6001709")]
		[Address(RVA = "0x1E82C30", Offset = "0x1E82C30", VA = "0x1E82C30")]
		public AnimatorStateMachine()
		{
		}
	}
	[Token(Token = "0x20002FC")]
	public class CrowdSpawner : MonoBehaviour
	{
		[Token(Token = "0x4001504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] options;

		[Token(Token = "0x4001505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] optionsDesc;

		[Token(Token = "0x4001506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int sizeOfCrowd;

		[Token(Token = "0x4001507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int selectedOption;

		[Token(Token = "0x4001508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int maxSize;

		[Token(Token = "0x4001509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string fps;

		[Token(Token = "0x400150A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int previousFrame;

		[Token(Token = "0x400150B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<GameObject> spawnedObjects;

		[Token(Token = "0x600170A")]
		[Address(RVA = "0x1E83A58", Offset = "0x1E83A58", VA = "0x1E83A58")]
		private void Start()
		{
		}

		[Token(Token = "0x600170B")]
		[Address(RVA = "0x1E84048", Offset = "0x1E84048", VA = "0x1E84048")]
		private void UpdateFPS()
		{
		}

		[Token(Token = "0x600170C")]
		[Address(RVA = "0x1E83AC0", Offset = "0x1E83AC0", VA = "0x1E83AC0")]
		private void SpawnCrowd()
		{
		}

		[Token(Token = "0x600170D")]
		[Address(RVA = "0x1E840DC", Offset = "0x1E840DC", VA = "0x1E840DC")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x600170E")]
		[Address(RVA = "0x1E84EC4", Offset = "0x1E84EC4", VA = "0x1E84EC4")]
		public CrowdSpawner()
		{
		}
	}
	[Token(Token = "0x20002FD")]
	public class PerformanceTester : MonoBehaviour
	{
		[Token(Token = "0x400150C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] animObjects;

		[Token(Token = "0x400150D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] options;

		[Token(Token = "0x400150E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float cameraSpeed;

		[Token(Token = "0x400150F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 spawnOffset;

		[Token(Token = "0x4001510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int[] spawnedMeshes;

		[Token(Token = "0x4001511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<GameObject> meshes;

		[Token(Token = "0x4001512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string fps;

		[Token(Token = "0x4001513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int previousFrame;

		[Token(Token = "0x4001514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 offset;

		[Token(Token = "0x4001515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool crossFade;

		[Token(Token = "0x600170F")]
		[Address(RVA = "0x2978B80", Offset = "0x2978B80", VA = "0x2978B80")]
		private void Start()
		{
		}

		[Token(Token = "0x6001710")]
		[Address(RVA = "0x2978BE0", Offset = "0x2978BE0", VA = "0x2978BE0")]
		private void UpdateFPS()
		{
		}

		[Token(Token = "0x6001711")]
		[Address(RVA = "0x2978C74", Offset = "0x2978C74", VA = "0x2978C74")]
		private void Update()
		{
		}

		[Token(Token = "0x6001712")]
		[Address(RVA = "0x2978FF4", Offset = "0x2978FF4", VA = "0x2978FF4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001713")]
		[Address(RVA = "0x297919C", Offset = "0x297919C", VA = "0x297919C")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001714")]
		[Address(RVA = "0x297A2C0", Offset = "0x297A2C0", VA = "0x297A2C0")]
		public PerformanceTester()
		{
		}
	}
	[Token(Token = "0x20002FE")]
	[ExecuteInEditMode]
	public class AttachObjectToFace : MonoBehaviour
	{
		[Token(Token = "0x4001516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshAnimator meshAnimator;

		[Token(Token = "0x4001517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int faceIndex;

		[Token(Token = "0x4001518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 offset;

		[Token(Token = "0x4001519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 rotationOffset;

		[Token(Token = "0x400151A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool drawFaceDebugInfo;

		[Token(Token = "0x400151B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEngine.Color debugColor;

		[Token(Token = "0x400151C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform mTransform;

		[Token(Token = "0x400151D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform mMeshAnimatorTransform;

		[Token(Token = "0x400151E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int[] triangles;

		[Token(Token = "0x400151F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3[] vertices;

		[Token(Token = "0x6001715")]
		[Address(RVA = "0x1E82C38", Offset = "0x1E82C38", VA = "0x1E82C38")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001716")]
		[Address(RVA = "0x1E82D80", Offset = "0x1E82D80", VA = "0x1E82D80")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001717")]
		[Address(RVA = "0x1E837C4", Offset = "0x1E837C4", VA = "0x1E837C4")]
		public AttachObjectToFace()
		{
		}
	}
	[Token(Token = "0x20002FF")]
	public class MecanimMeshAnimatorController : MonoBehaviour
	{
		[Token(Token = "0x4001520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Animator animator;

		[Token(Token = "0x4001521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeshAnimator meshAnimator;

		[Token(Token = "0x4001522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool crossFade;

		[Token(Token = "0x4001523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<int, string> animHashes;

		[Token(Token = "0x4001524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string cAnim;

		[Token(Token = "0x6001718")]
		[Address(RVA = "0x1E8617C", Offset = "0x1E8617C", VA = "0x1E8617C", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001719")]
		[Address(RVA = "0x1E86324", Offset = "0x1E86324", VA = "0x1E86324", Slot = "5")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x600171A")]
		[Address(RVA = "0x1E8652C", Offset = "0x1E8652C", VA = "0x1E8652C")]
		public MecanimMeshAnimatorController()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000300")]
	public class MeshAnimation : ScriptableObject
	{
		[Token(Token = "0x2000698")]
		public enum RootMotionMode
		{
			[Token(Token = "0x4002669")]
			None,
			[Token(Token = "0x400266A")]
			Baked,
			[Token(Token = "0x400266B")]
			AppliedToTransform
		}

		[Token(Token = "0x2000699")]
		private sealed class VertexEntry
		{
			[Token(Token = "0x400266C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int _reserved;

			[Token(Token = "0x400266D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int[] TriangleIndex;

			[Token(Token = "0x400266E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int[] VertexIndex;

			[Token(Token = "0x400266F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int _count;

			[Token(Token = "0x17000572")]
			public int Count
			{
				[Token(Token = "0x60028BF")]
				[Address(RVA = "0x1E89188", Offset = "0x1E89188", VA = "0x1E89188")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x60028C0")]
			[Address(RVA = "0x1E89190", Offset = "0x1E89190", VA = "0x1E89190")]
			public VertexEntry()
			{
			}

			[Token(Token = "0x60028C1")]
			[Address(RVA = "0x1E88C1C", Offset = "0x1E88C1C", VA = "0x1E88C1C")]
			public void Add(int vertIndex, int triIndex)
			{
			}

			[Token(Token = "0x60028C2")]
			[Address(RVA = "0x1E88B74", Offset = "0x1E88B74", VA = "0x1E88B74")]
			public void PopulateArrays()
			{
			}

			[Token(Token = "0x60028C3")]
			[Address(RVA = "0x1E88D18", Offset = "0x1E88D18", VA = "0x1E88D18")]
			public void Clear()
			{
			}
		}

		[Token(Token = "0x200069A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A73C", Offset = "0x146A73C")]
		private sealed class <>c__DisplayClass37_0
		{
			[Token(Token = "0x4002670")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MeshAnimation <>4__this;

			[Token(Token = "0x4002671")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Mesh mesh;

			[Token(Token = "0x4002672")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float angle;

			[Token(Token = "0x60028C4")]
			[Address(RVA = "0x1E88B5C", Offset = "0x1E88B5C", VA = "0x1E88B5C")]
			public <>c__DisplayClass37_0()
			{
			}
		}

		[Token(Token = "0x200069B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A74C", Offset = "0x146A74C")]
		private sealed class <>c__DisplayClass37_1
		{
			[Token(Token = "0x4002673")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int[] triangles;

			[Token(Token = "0x4002674")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3[] vertices;

			[Token(Token = "0x4002675")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public <>c__DisplayClass37_0 CS$<>8__locals1;

			[Token(Token = "0x60028C5")]
			[Address(RVA = "0x1E88B64", Offset = "0x1E88B64", VA = "0x1E88B64")]
			public <>c__DisplayClass37_1()
			{
			}

			[Token(Token = "0x60028C6")]
			[Address(RVA = "0x1E89084", Offset = "0x1E89084", VA = "0x1E89084")]
			internal void <RecalculateNormals>b__0(object <p0>)
			{
			}
		}

		[Token(Token = "0x200069C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A75C", Offset = "0x146A75C")]
		private sealed class <>c__DisplayClass38_0
		{
			[Token(Token = "0x4002676")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Mesh mesh;

			[Token(Token = "0x4002677")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3[] normals;

			[Token(Token = "0x60028C7")]
			[Address(RVA = "0x1E88B6C", Offset = "0x1E88B6C", VA = "0x1E88B6C")]
			public <>c__DisplayClass38_0()
			{
			}

			[Token(Token = "0x60028C8")]
			[Address(RVA = "0x1E890BC", Offset = "0x1E890BC", VA = "0x1E890BC")]
			internal void <RecalculateNormals>b__0()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200069D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A76C", Offset = "0x146A76C")]
		private sealed class <>c
		{
			[Token(Token = "0x4002678")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x60028CA")]
			[Address(RVA = "0x1E89028", Offset = "0x1E89028", VA = "0x1E89028")]
			public <>c()
			{
			}

			[Token(Token = "0x60028CB")]
			[Address(RVA = "0x1E89030", Offset = "0x1E89030", VA = "0x1E89030")]
			internal bool <.cctor>b__42_0(Vector3 x, Vector3 y)
			{
				return default(bool);
			}

			[Token(Token = "0x60028CC")]
			[Address(RVA = "0x1E89058", Offset = "0x1E89058", VA = "0x1E89058")]
			internal int <.cctor>b__42_1(Vector3 x)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4001525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static Dictionary<Mesh, Dictionary<MeshAnimation, Mesh[]>> generatedFrames;

		[Token(Token = "0x4001526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string animationName;

		[Token(Token = "0x4001527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool preGenerateFrames;

		[Token(Token = "0x4001528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float playbackSpeed;

		[Token(Token = "0x4001529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int smoothNormalsAngle;

		[Token(Token = "0x400152A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool instantNormalCalculation;

		[Token(Token = "0x400152B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool recalculateNormalsOnRotation;

		[Token(Token = "0x400152C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public WrapMode wrapMode;

		[Token(Token = "0x400152D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public RootMotionMode rootMotionMode;

		[Token(Token = "0x400152E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public DeltaCompressedFrameData compressedFrameData;

		[Token(Token = "0x400152F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public string[] exposedTransforms;

		[Token(Token = "0x4001530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public MeshAnimationEvent[] events;

		[Token(Token = "0x4001531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float length;

		[Token(Token = "0x4001532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[HideInInspector]
		public int frameSkip;

		[NonSerialized]
		[Token(Token = "0x4001533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Mesh[] frames;

		[NonSerialized]
		[Token(Token = "0x4001534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int totalFrames;

		[NonSerialized]
		[Token(Token = "0x4001535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool[] generatedMeshes;

		[NonSerialized]
		[Token(Token = "0x4001536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool completelyGenerated;

		[NonSerialized]
		[Token(Token = "0x4001537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private MeshFrameData[] decompressedFrameData;

		[NonSerialized]
		[Token(Token = "0x4001538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Quaternion lastRotation;

		[Token(Token = "0x4001539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Queue<Action> mainThreadActions;

		[Token(Token = "0x400153A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<Mesh, KeyValuePair<int[], Vector3[]>> meshInfoCache;

		[Token(Token = "0x400153B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static IEqualityComparer<Vector3> VectorComparer;

		[Token(Token = "0x17000267")]
		[HideInInspector]
		public MeshFrameData[] frameData
		{
			[Token(Token = "0x600171B")]
			[Address(RVA = "0x1E865C8", Offset = "0x1E865C8", VA = "0x1E865C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600171C")]
		[Address(RVA = "0x1E86674", Offset = "0x1E86674", VA = "0x1E86674")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600171D")]
		[Address(RVA = "0x1E8672C", Offset = "0x1E8672C", VA = "0x1E8672C")]
		public void GenerateFrames(Mesh baseMesh)
		{
		}

		[Token(Token = "0x600171E")]
		[Address(RVA = "0x1E86E7C", Offset = "0x1E86E7C", VA = "0x1E86E7C")]
		public void GenerateFrameIfNeeded(Mesh baseMesh, int frame)
		{
		}

		[Token(Token = "0x600171F")]
		[Address(RVA = "0x1E83438", Offset = "0x1E83438", VA = "0x1E83438")]
		public Vector3[] GetFrame(int frame)
		{
			return null;
		}

		[Token(Token = "0x6001720")]
		[Address(RVA = "0x1E8732C", Offset = "0x1E8732C", VA = "0x1E8732C")]
		public float GetInterpolatingFrames(int frame, out MeshFrameData previousFrame, out MeshFrameData nextFrame)
		{
			return default(float);
		}

		[Token(Token = "0x6001721")]
		[Address(RVA = "0x1E875C8", Offset = "0x1E875C8", VA = "0x1E875C8")]
		public MeshFrameData GetNearestFrame(int frame)
		{
			return null;
		}

		[Token(Token = "0x6001722")]
		[Address(RVA = "0x1E876D0", Offset = "0x1E876D0", VA = "0x1E876D0")]
		public void DisplayFrame(MeshFilter meshFilter, int frame, int previousFrame)
		{
		}

		[Token(Token = "0x6001723")]
		[Address(RVA = "0x1E88598", Offset = "0x1E88598", VA = "0x1E88598")]
		public void FireEvents(GameObject eventReciever, int frame)
		{
		}

		[Token(Token = "0x6001724")]
		[Address(RVA = "0x1E88728", Offset = "0x1E88728", VA = "0x1E88728")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001725")]
		[Address(RVA = "0x1E88868", Offset = "0x1E88868", VA = "0x1E88868")]
		public bool IsName(string animationName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001726")]
		[Address(RVA = "0x1E8729C", Offset = "0x1E8729C", VA = "0x1E8729C")]
		private void CheckFullGeneration(int newFrame)
		{
		}

		[Token(Token = "0x6001727")]
		[Address(RVA = "0x1E869D4", Offset = "0x1E869D4", VA = "0x1E869D4")]
		private Mesh GenerateFrame(Mesh baseMesh, int frame)
		{
			return null;
		}

		[Token(Token = "0x6001728")]
		[Address(RVA = "0x1E888B8", Offset = "0x1E888B8", VA = "0x1E888B8")]
		private void RecalculateNormals(Mesh mesh, float angle)
		{
		}

		[Token(Token = "0x6001729")]
		[Address(RVA = "0x1E87878", Offset = "0x1E87878", VA = "0x1E87878")]
		private void RecalculateNormals(Mesh mesh, float angle, int[] triangles, Vector3[] vertices, bool instant = false)
		{
		}

		[Token(Token = "0x600172A")]
		[Address(RVA = "0x1E88DD0", Offset = "0x1E88DD0", VA = "0x1E88DD0")]
		public MeshAnimation()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000301")]
	public class MeshAnimationEvent
	{
		[Token(Token = "0x200069E")]
		public enum Mode : byte
		{
			[Token(Token = "0x400267A")]
			Data,
			[Token(Token = "0x400267B")]
			String,
			[Token(Token = "0x400267C")]
			Float
		}

		[Token(Token = "0x400153C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string methodName;

		[Token(Token = "0x400153D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int frame;

		[Token(Token = "0x400153E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Mode eventType;

		[Token(Token = "0x400153F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string stringValue;

		[Token(Token = "0x4001540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float floatValue;

		[Token(Token = "0x4001541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEngine.Object data;

		[Token(Token = "0x600172C")]
		[Address(RVA = "0x1E88620", Offset = "0x1E88620", VA = "0x1E88620")]
		public void FireEvent(GameObject eventReciever)
		{
		}

		[Token(Token = "0x600172D")]
		[Address(RVA = "0x1E891A0", Offset = "0x1E891A0", VA = "0x1E891A0")]
		public MeshAnimationEvent()
		{
		}
	}
	[Token(Token = "0x2000302")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1468974", Offset = "0x1468974")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1468974", Offset = "0x1468974")]
	public class MeshAnimator : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200069F")]
		public class MeshAnimatorLODLevel
		{
			[Token(Token = "0x400267D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int fps;

			[Token(Token = "0x400267E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float distance;

			[Token(Token = "0x400267F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float distanceSquared;

			[Token(Token = "0x60028CD")]
			[Address(RVA = "0x2977E94", Offset = "0x2977E94", VA = "0x2977E94")]
			public MeshAnimatorLODLevel()
			{
			}
		}

		[Token(Token = "0x20006A0")]
		private struct CurrentCrossFade
		{
			[Token(Token = "0x4002680")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public MeshFrameData fromFrame;

			[Token(Token = "0x4002681")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public MeshFrameData toFrame;

			[Token(Token = "0x4002682")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int framesNeeded;

			[Token(Token = "0x4002683")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int currentFrame;

			[Token(Token = "0x4002684")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int generatedFrame;

			[Token(Token = "0x4002685")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool isFading;

			[Token(Token = "0x4002686")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float endTime;

			[Token(Token = "0x4002687")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CrossFadeFrameData frame;

			[Token(Token = "0x60028CE")]
			[Address(RVA = "0x2977C04", Offset = "0x2977C04", VA = "0x2977C04")]
			public void Reset()
			{
			}

			[Token(Token = "0x60028CF")]
			[Address(RVA = "0x2977D58", Offset = "0x2977D58", VA = "0x2977D58")]
			public void PopulateFrame(int length)
			{
			}

			[Token(Token = "0x60028D0")]
			[Address(RVA = "0x2977C54", Offset = "0x2977C54", VA = "0x2977C54")]
			public void ReturnFrame()
			{
			}
		}

		[Token(Token = "0x20006A1")]
		private class CrossFadeFrameData
		{
			[Token(Token = "0x4002688")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3[] positions;

			[Token(Token = "0x4002689")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3[] normals;

			[Token(Token = "0x400268A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Bounds bounds;

			[Token(Token = "0x60028D1")]
			[Address(RVA = "0x2977BFC", Offset = "0x2977BFC", VA = "0x2977BFC")]
			public CrossFadeFrameData()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20006A2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A77C", Offset = "0x146A77C")]
		private sealed class <>c
		{
			[Token(Token = "0x400268B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400268C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<string> <>9__80_0;

			[Token(Token = "0x400268D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action <>9__80_1;

			[Token(Token = "0x400268E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Action<bool> <>9__80_2;

			[Token(Token = "0x60028D3")]
			[Address(RVA = "0x2977BE8", Offset = "0x2977BE8", VA = "0x2977BE8")]
			public <>c()
			{
			}

			[Token(Token = "0x60028D4")]
			[Address(RVA = "0x2977BF0", Offset = "0x2977BF0", VA = "0x2977BF0")]
			internal void <.ctor>b__80_0(string <p0>)
			{
			}

			[Token(Token = "0x60028D5")]
			[Address(RVA = "0x2977BF4", Offset = "0x2977BF4", VA = "0x2977BF4")]
			internal void <.ctor>b__80_1()
			{
			}

			[Token(Token = "0x60028D6")]
			[Address(RVA = "0x2977BF8", Offset = "0x2977BF8", VA = "0x2977BF8")]
			internal void <.ctor>b__80_2(bool <p0>)
			{
			}
		}

		[Token(Token = "0x4001542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<Mesh, int> s_meshCount;

		[Token(Token = "0x4001543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<Thread> s_crossfadeThreads;

		[Token(Token = "0x4001544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static bool s_shutDownThreads;

		[Token(Token = "0x4001545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Queue<MeshAnimator> s_crossfadeAnimators;

		[Token(Token = "0x4001546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static List<Stack<Mesh>> s_crossFadePool;

		[Token(Token = "0x4001547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Dictionary<Mesh, int> s_crossFadeIndex;

		[Token(Token = "0x4001548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mesh baseMesh;

		[Token(Token = "0x4001549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeshAnimation defaultAnimation;

		[Token(Token = "0x400154A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MeshAnimation[] animations;

		[Token(Token = "0x400154B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float speed;

		[Token(Token = "0x400154C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool updateWhenOffscreen;

		[Token(Token = "0x400154D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		public bool playAutomatically;

		[Token(Token = "0x400154E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
		public bool resetOnEnable;

		[Token(Token = "0x400154F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject eventReciever;

		[Token(Token = "0x4001550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int FPS;

		[Token(Token = "0x4001551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool skipLastLoopFrame;

		[Token(Token = "0x4001552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		public bool recalculateCrossfadeNormals;

		[Token(Token = "0x4001553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action<string> OnAnimationFinished;

		[Token(Token = "0x4001554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Action OnFrameUpdated;

		[Token(Token = "0x4001555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Action<bool> OnVisibilityChanged;

		[Token(Token = "0x4001556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int currentFrame;

		[Token(Token = "0x4001557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform LODCamera;

		[Token(Token = "0x4001558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public MeshAnimatorLODLevel[] LODLevels;

		[Token(Token = "0x4001559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public float nextTick;

		[Token(Token = "0x400155A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public MeshFilter meshFilter;

		[Token(Token = "0x400155B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public MeshAnimation currentAnimation;

		[Token(Token = "0x400155C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		public MeshTriangleData[] meshTriangleData;

		[Token(Token = "0x400155D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public Vector2[] uv1Data;

		[Token(Token = "0x400155E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public Vector2[] uv2Data;

		[Token(Token = "0x400155F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		public Vector2[] uv3Data;

		[Token(Token = "0x4001560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public Vector2[] uv4Data;

		[Token(Token = "0x4001561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private int currentAnimIndex;

		[Token(Token = "0x4001562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private bool isVisible;

		[Token(Token = "0x4001563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float lastFrameTime;

		[Token(Token = "0x4001564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private bool pingPong;

		[Token(Token = "0x4001565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC5")]
		private bool isPaused;

		[Token(Token = "0x4001566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float currentAnimTime;

		[Token(Token = "0x4001567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Mesh crossFadeMesh;

		[Token(Token = "0x4001568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Queue<string> queuedAnims;

		[Token(Token = "0x4001569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private CurrentCrossFade currentCrossFade;

		[Token(Token = "0x400156A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private int currentLodLevel;

		[Token(Token = "0x400156B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Transform mTransform;

		[Token(Token = "0x400156C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Dictionary<string, Transform> childMap;

		[Token(Token = "0x400156D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private bool initialized;

		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private int previousEventFrame;

		[Token(Token = "0x400156F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private bool hasExposedTransforms;

		[Token(Token = "0x4001570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private int crossFadePoolIndex;

		[Token(Token = "0x600172E")]
		[Address(RVA = "0x1E891A8", Offset = "0x1E891A8", VA = "0x1E891A8")]
		private void Start()
		{
		}

		[Token(Token = "0x600172F")]
		[Address(RVA = "0x1E8975C", Offset = "0x1E8975C", VA = "0x1E8975C")]
		private void OnBecameVisible()
		{
		}

		[Token(Token = "0x6001730")]
		[Address(RVA = "0x1E897C0", Offset = "0x1E897C0", VA = "0x1E897C0")]
		private void OnBecameInvisible()
		{
		}

		[Token(Token = "0x6001731")]
		[Address(RVA = "0x1E89820", Offset = "0x1E89820", VA = "0x1E89820")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001732")]
		[Address(RVA = "0x1E89988", Offset = "0x1E89988", VA = "0x1E89988")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001733")]
		[Address(RVA = "0x1E89A2C", Offset = "0x1E89A2C", VA = "0x1E89A2C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001734")]
		[Address(RVA = "0x1E8A3C0", Offset = "0x1E8A3C0", VA = "0x1E8A3C0")]
		private void FireAnimationEvents(MeshAnimation cAnim, float totalSpeed, bool finished)
		{
		}

		[Token(Token = "0x6001735")]
		[Address(RVA = "0x1E8A548", Offset = "0x1E8A548", VA = "0x1E8A548")]
		private Mesh GetCrossfadeFromPool()
		{
			return null;
		}

		[Token(Token = "0x6001736")]
		[Address(RVA = "0x1E8A0A8", Offset = "0x1E8A0A8", VA = "0x1E8A0A8")]
		private void ReturnCrossfadeToPool()
		{
		}

		[Token(Token = "0x6001737")]
		[Address(RVA = "0x1E8A740", Offset = "0x1E8A740", VA = "0x1E8A740")]
		private void GenerateCrossfadeFrame()
		{
		}

		[Token(Token = "0x6001738")]
		[Address(RVA = "0x1E8AAF8", Offset = "0x1E8AAF8", VA = "0x1E8AAF8")]
		private static void EnqueueAnimatorForCrossfade(MeshAnimator animator)
		{
		}

		[Token(Token = "0x6001739")]
		[Address(RVA = "0x1E8AC0C", Offset = "0x1E8AC0C", VA = "0x1E8AC0C")]
		private static MeshAnimator DequeueAnimatorForCrossfade()
		{
			return null;
		}

		[Token(Token = "0x600173A")]
		[Address(RVA = "0x1E8AD6C", Offset = "0x1E8AD6C", VA = "0x1E8AD6C")]
		private static Matrix4x4 MatrixLerp(Matrix4x4 from, Matrix4x4 to, float time)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x600173B")]
		[Address(RVA = "0x1E8AE78", Offset = "0x1E8AE78", VA = "0x1E8AE78")]
		private static void GenerateThreadedCrossfade()
		{
		}

		[Token(Token = "0x600173C")]
		[Address(RVA = "0x1E8B114", Offset = "0x1E8B114", VA = "0x1E8B114")]
		public void UpdateTick(float time)
		{
		}

		[Token(Token = "0x600173D")]
		[Address(RVA = "0x1E82B3C", Offset = "0x1E82B3C", VA = "0x1E82B3C")]
		public void Crossfade(int index)
		{
		}

		[Token(Token = "0x600173E")]
		[Address(RVA = "0x1E8648C", Offset = "0x1E8648C", VA = "0x1E8648C")]
		public void Crossfade(string animationName)
		{
		}

		[Token(Token = "0x600173F")]
		[Address(RVA = "0x1E8C0A4", Offset = "0x1E8C0A4", VA = "0x1E8C0A4")]
		public void Crossfade(int index, float speed)
		{
		}

		[Token(Token = "0x6001740")]
		[Address(RVA = "0x1E8C250", Offset = "0x1E8C250", VA = "0x1E8C250")]
		public void Crossfade(string animationName, float speed)
		{
		}

		[Token(Token = "0x6001741")]
		[Address(RVA = "0x1E82A10", Offset = "0x1E82A10", VA = "0x1E82A10")]
		public void Play()
		{
		}

		[Token(Token = "0x6001742")]
		[Address(RVA = "0x1E86498", Offset = "0x1E86498", VA = "0x1E86498")]
		public void Play(string animationName)
		{
		}

		[Token(Token = "0x6001743")]
		[Address(RVA = "0x1E82B48", Offset = "0x1E82B48", VA = "0x1E82B48")]
		public void Play(int index)
		{
		}

		[Token(Token = "0x6001744")]
		[Address(RVA = "0x1E8C2F8", Offset = "0x1E8C2F8", VA = "0x1E8C2F8")]
		public void PlayRandom(params string[] animationNames)
		{
		}

		[Token(Token = "0x6001745")]
		[Address(RVA = "0x1E8C3B4", Offset = "0x1E8C3B4", VA = "0x1E8C3B4")]
		public void PlayQueued(string animationName)
		{
		}

		[Token(Token = "0x6001746")]
		[Address(RVA = "0x1E8C458", Offset = "0x1E8C458", VA = "0x1E8C458")]
		public void Pause()
		{
		}

		[Token(Token = "0x6001747")]
		[Address(RVA = "0x1E8C464", Offset = "0x1E8C464", VA = "0x1E8C464")]
		public void RestartAnim()
		{
		}

		[Token(Token = "0x6001748")]
		[Address(RVA = "0x1E8C46C", Offset = "0x1E8C46C", VA = "0x1E8C46C")]
		public void SetTime(float time, bool instantUpdate = false)
		{
		}

		[Token(Token = "0x6001749")]
		[Address(RVA = "0x1E8C564", Offset = "0x1E8C564", VA = "0x1E8C564")]
		public void SetTimeNormalized(float time, bool instantUpdate = false)
		{
		}

		[Token(Token = "0x600174A")]
		[Address(RVA = "0x1E8C658", Offset = "0x1E8C658", VA = "0x1E8C658")]
		public MeshAnimation GetClip(string animationName)
		{
			return null;
		}

		[Token(Token = "0x600174B")]
		[Address(RVA = "0x1E8C6F4", Offset = "0x1E8C6F4", VA = "0x1E8C6F4")]
		public void PrepopulateCrossfadePool(int count)
		{
		}

		[Token(Token = "0x600174C")]
		[Address(RVA = "0x1E8C9F8", Offset = "0x1E8C9F8", VA = "0x1E8C9F8")]
		public MeshAnimator()
		{
		}
	}
	[Token(Token = "0x2000303")]
	public class MeshAnimatorManager : MonoBehaviour
	{
		[Token(Token = "0x20006A3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A78C", Offset = "0x146A78C")]
		private sealed class <UnscaledUpdate>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400268F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002690")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002691")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MeshAnimatorManager <>4__this;

			[Token(Token = "0x17000573")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60028DA")]
				[Address(RVA = "0x2978934", Offset = "0x2978934", VA = "0x2978934", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000574")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60028DC")]
				[Address(RVA = "0x297899C", Offset = "0x297899C", VA = "0x297899C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60028D7")]
			[Address(RVA = "0x29784CC", Offset = "0x29784CC", VA = "0x29784CC")]
			[DebuggerHidden]
			public <UnscaledUpdate>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x60028D8")]
			[Address(RVA = "0x2978864", Offset = "0x2978864", VA = "0x2978864", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60028D9")]
			[Address(RVA = "0x2978868", Offset = "0x2978868", VA = "0x2978868", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60028DB")]
			[Address(RVA = "0x297893C", Offset = "0x297893C", VA = "0x297893C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AnimatorUpdateMode mode;

		[Token(Token = "0x4001572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static MeshAnimatorManager mInstance;

		[Token(Token = "0x4001573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static List<MeshAnimator> mAnimators;

		[Token(Token = "0x17000268")]
		public static int AnimatorCount
		{
			[Token(Token = "0x600174E")]
			[Address(RVA = "0x2977E9C", Offset = "0x2977E9C", VA = "0x2977E9C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000269")]
		public static MeshAnimatorManager Instance
		{
			[Token(Token = "0x600174F")]
			[Address(RVA = "0x2977F6C", Offset = "0x2977F6C", VA = "0x2977F6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001750")]
		[Address(RVA = "0x2978128", Offset = "0x2978128", VA = "0x2978128")]
		public static void AddAnimator(MeshAnimator animator)
		{
		}

		[Token(Token = "0x6001751")]
		[Address(RVA = "0x2978218", Offset = "0x2978218", VA = "0x2978218")]
		public static void RemoveAnimator(MeshAnimator animator)
		{
		}

		[Token(Token = "0x6001752")]
		[Address(RVA = "0x297829C", Offset = "0x297829C", VA = "0x297829C")]
		public static void SetUpdateMode(AnimatorUpdateMode updateMode)
		{
		}

		[Token(Token = "0x6001753")]
		[Address(RVA = "0x2978438", Offset = "0x2978438", VA = "0x2978438")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001754")]
		[Address(RVA = "0x29783BC", Offset = "0x29783BC", VA = "0x29783BC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1484F90", Offset = "0x1484F90")]
		private IEnumerator UnscaledUpdate()
		{
			return null;
		}

		[Token(Token = "0x6001755")]
		[Address(RVA = "0x29784F8", Offset = "0x29784F8", VA = "0x29784F8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001756")]
		[Address(RVA = "0x297873C", Offset = "0x297873C", VA = "0x297873C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001757")]
		[Address(RVA = "0x2978578", Offset = "0x2978578", VA = "0x2978578")]
		private void UpdateTick(float time)
		{
		}

		[Token(Token = "0x6001758")]
		[Address(RVA = "0x29787C0", Offset = "0x29787C0", VA = "0x29787C0")]
		public MeshAnimatorManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000304")]
	public class MeshFrameData
	{
		[NonSerialized]
		[Token(Token = "0x4001574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector3[] decompressed;

		[NonSerialized]
		[Token(Token = "0x4001575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Matrix4x4[] exposedTransforms;

		[NonSerialized]
		[Token(Token = "0x4001576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 rootMotionPosition;

		[NonSerialized]
		[Token(Token = "0x4001577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Quaternion rootMotionRotation;

		[Token(Token = "0x1700026A")]
		public Vector3[] verts
		{
			[Token(Token = "0x600175A")]
			[Address(RVA = "0x29789A4", Offset = "0x29789A4", VA = "0x29789A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600175B")]
		[Address(RVA = "0x29789AC", Offset = "0x29789AC", VA = "0x29789AC")]
		public void SetVerts(Vector3[] v)
		{
		}

		[Token(Token = "0x600175C")]
		[Address(RVA = "0x29789B4", Offset = "0x29789B4", VA = "0x29789B4", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600175D")]
		[Address(RVA = "0x2978B68", Offset = "0x2978B68", VA = "0x2978B68", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x600175E")]
		[Address(RVA = "0x2978B70", Offset = "0x2978B70", VA = "0x2978B70")]
		public MeshFrameData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000305")]
	public class MeshTriangleData
	{
		[Token(Token = "0x4001578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int submesh;

		[Token(Token = "0x4001579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int[] triangles;

		[Token(Token = "0x600175F")]
		[Address(RVA = "0x2978B78", Offset = "0x2978B78", VA = "0x2978B78")]
		public MeshTriangleData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000306")]
	public class DeltaCompressedFrameData
	{
		[Token(Token = "0x400157A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float compressionAccuracy;

		[Token(Token = "0x400157B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float accuracy;

		[Token(Token = "0x400157C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int sizeOffset;

		[Token(Token = "0x400157D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int vertLength;

		[Token(Token = "0x400157E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int exposedLength;

		[Token(Token = "0x400157F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public short[] positionsUShort;

		[Token(Token = "0x4001580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public int[] positions;

		[Token(Token = "0x4001581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public int[] frameIndexes;

		[Token(Token = "0x4001582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public Matrix4x4[] exposedTransforms;

		[Token(Token = "0x4001583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public Vector3[] rootMotionPositions;

		[Token(Token = "0x4001584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public Quaternion[] rootMotionRotations;

		[Token(Token = "0x6001760")]
		[Address(RVA = "0x1E84F50", Offset = "0x1E84F50", VA = "0x1E84F50")]
		public static implicit operator MeshFrameData[](DeltaCompressedFrameData s)
		{
			return null;
		}

		[Token(Token = "0x6001761")]
		[Address(RVA = "0x1E8538C", Offset = "0x1E8538C", VA = "0x1E8538C")]
		public static implicit operator DeltaCompressedFrameData(MeshFrameData[] frames)
		{
			return null;
		}

		[Token(Token = "0x6001762")]
		[Address(RVA = "0x1E85D6C", Offset = "0x1E85D6C", VA = "0x1E85D6C")]
		public DeltaCompressedFrameData()
		{
		}
	}
	[Token(Token = "0x2000307")]
	public static class AllocatedArray<T>
	{
		[Token(Token = "0x4001585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T defaultValue;

		[Token(Token = "0x4001586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<T[]> allocatedArrays;

		[Token(Token = "0x6001764")]
		private static T[] AllocateArray(int size)
		{
			return null;
		}

		[Token(Token = "0x6001765")]
		public static T[] Get(int size)
		{
			return null;
		}

		[Token(Token = "0x6001766")]
		public static void Return(T[] array, bool resetValues = true)
		{
		}
	}
	[Token(Token = "0x2000308")]
	public static class Comparers
	{
		[Serializable]
		[Token(Token = "0x20006A4")]
		public class StringComparer : IEqualityComparer<string>
		{
			[Token(Token = "0x60028DD")]
			[Address(RVA = "0x1E83A28", Offset = "0x1E83A28", VA = "0x1E83A28", Slot = "4")]
			private bool System.Collections.Generic.IEqualityComparer<System.String>.Equals(string x, string y)
			{
				return default(bool);
			}

			[Token(Token = "0x60028DE")]
			[Address(RVA = "0x1E83A38", Offset = "0x1E83A38", VA = "0x1E83A38", Slot = "5")]
			private int System.Collections.Generic.IEqualityComparer<System.String>.GetHashCode(string obj)
			{
				return default(int);
			}

			[Token(Token = "0x60028DF")]
			[Address(RVA = "0x1E83928", Offset = "0x1E83928", VA = "0x1E83928")]
			public StringComparer()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20006A5")]
		public class FloatComparer : IEqualityComparer<float>
		{
			[Token(Token = "0x60028E0")]
			[Address(RVA = "0x1E839C0", Offset = "0x1E839C0", VA = "0x1E839C0", Slot = "4")]
			private bool System.Collections.Generic.IEqualityComparer<System.Single>.Equals(float x, float y)
			{
				return default(bool);
			}

			[Token(Token = "0x60028E1")]
			[Address(RVA = "0x1E839CC", Offset = "0x1E839CC", VA = "0x1E839CC", Slot = "5")]
			private int System.Collections.Generic.IEqualityComparer<System.Single>.GetHashCode(float obj)
			{
				return default(int);
			}

			[Token(Token = "0x60028E2")]
			[Address(RVA = "0x1E83930", Offset = "0x1E83930", VA = "0x1E83930")]
			public FloatComparer()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20006A6")]
		public class IntComparer : IEqualityComparer<int>
		{
			[Token(Token = "0x60028E3")]
			[Address(RVA = "0x1E839F4", Offset = "0x1E839F4", VA = "0x1E839F4", Slot = "4")]
			private bool System.Collections.Generic.IEqualityComparer<System.Int32>.Equals(int x, int y)
			{
				return default(bool);
			}

			[Token(Token = "0x60028E4")]
			[Address(RVA = "0x1E83A00", Offset = "0x1E83A00", VA = "0x1E83A00", Slot = "5")]
			private int System.Collections.Generic.IEqualityComparer<System.Int32>.GetHashCode(int obj)
			{
				return default(int);
			}

			[Token(Token = "0x60028E5")]
			[Address(RVA = "0x1E83938", Offset = "0x1E83938", VA = "0x1E83938")]
			public IntComparer()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20006A7")]
		public class ByteComparer : IEqualityComparer<byte>
		{
			[Token(Token = "0x60028E6")]
			[Address(RVA = "0x1E83988", Offset = "0x1E83988", VA = "0x1E83988", Slot = "4")]
			private bool System.Collections.Generic.IEqualityComparer<System.Byte>.Equals(byte x, byte y)
			{
				return default(bool);
			}

			[Token(Token = "0x60028E7")]
			[Address(RVA = "0x1E83998", Offset = "0x1E83998", VA = "0x1E83998", Slot = "5")]
			private int System.Collections.Generic.IEqualityComparer<System.Byte>.GetHashCode(byte obj)
			{
				return default(int);
			}

			[Token(Token = "0x60028E8")]
			[Address(RVA = "0x1E83940", Offset = "0x1E83940", VA = "0x1E83940")]
			public ByteComparer()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20006A8")]
		public class BoolComparer : IEqualityComparer<bool>
		{
			[Token(Token = "0x60028E9")]
			[Address(RVA = "0x1E83950", Offset = "0x1E83950", VA = "0x1E83950", Slot = "4")]
			private bool System.Collections.Generic.IEqualityComparer<System.Boolean>.Equals(bool x, bool y)
			{
				return default(bool);
			}

			[Token(Token = "0x60028EA")]
			[Address(RVA = "0x1E8395C", Offset = "0x1E8395C", VA = "0x1E8395C", Slot = "5")]
			private int System.Collections.Generic.IEqualityComparer<System.Boolean>.GetHashCode(bool obj)
			{
				return default(int);
			}

			[Token(Token = "0x60028EB")]
			[Address(RVA = "0x1E83948", Offset = "0x1E83948", VA = "0x1E83948")]
			public BoolComparer()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20006A9")]
		private class FuncEqualityComparer<T> : EqualityComparer<T>
		{
			[Token(Token = "0x4002692")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Func<T, T, bool> equals;

			[Token(Token = "0x4002693")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Func<T, int> hash;

			[Token(Token = "0x60028EC")]
			public FuncEqualityComparer(Func<T, T, bool> equals, Func<T, int> hash)
			{
			}

			[Token(Token = "0x60028ED")]
			public override bool Equals(T a, T b)
			{
				return default(bool);
			}

			[Token(Token = "0x60028EE")]
			public override int GetHashCode(T obj)
			{
				return default(int);
			}
		}

		[Serializable]
		[Token(Token = "0x20006AA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A79C", Offset = "0x146A79C")]
		private sealed class <>c__10<T>
		{
			[Token(Token = "0x4002694")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c__10<T> <>9;

			[Token(Token = "0x4002695")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<T, int> <>9__10_0;

			[Token(Token = "0x60028F0")]
			public <>c__10()
			{
			}

			[Token(Token = "0x60028F1")]
			internal int <Create>b__10_0(T t)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4001587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly StringComparer String;

		[Token(Token = "0x4001588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly FloatComparer Float;

		[Token(Token = "0x4001589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly IntComparer Int;

		[Token(Token = "0x400158A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly ByteComparer Byte;

		[Token(Token = "0x400158B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly BoolComparer Bool;

		[Token(Token = "0x6001768")]
		public static IEqualityComparer<T> Create<T>(Func<T, T, bool> equals, [Optional] Func<T, int> hash)
		{
			return null;
		}
	}
	[Token(Token = "0x2000309")]
	public static class GenericObjectPool<T>
	{
		[Token(Token = "0x400158C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Stack<T> pool;

		[Token(Token = "0x1700026B")]
		public static int Count
		{
			[Token(Token = "0x600176A")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600176B")]
		public static void InitPool(int count)
		{
		}

		[Token(Token = "0x600176C")]
		public static T Get()
		{
			return (T)null;
		}

		[Token(Token = "0x600176D")]
		public static void Return(T obj)
		{
		}
	}
	[Token(Token = "0x200030A")]
	public static class MatrixUtils
	{
		[Token(Token = "0x600176F")]
		[Address(RVA = "0x1E85DD4", Offset = "0x1E85DD4", VA = "0x1E85DD4")]
		public static void FromMatrix4x4(Transform transform, Matrix4x4 matrix)
		{
		}

		[Token(Token = "0x6001770")]
		[Address(RVA = "0x1E85F14", Offset = "0x1E85F14", VA = "0x1E85F14")]
		public static Quaternion GetRotation(Matrix4x4 matrix)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001771")]
		[Address(RVA = "0x1E85E70", Offset = "0x1E85E70", VA = "0x1E85E70")]
		public static Vector3 GetPosition(Matrix4x4 matrix)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001772")]
		[Address(RVA = "0x1E860B8", Offset = "0x1E860B8", VA = "0x1E860B8")]
		public static Vector3 GetScale(Matrix4x4 m)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x200030B")]
	public class PooledDictionary<T, T2> : Dictionary<T, T2>
	{
		[Token(Token = "0x400158D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Stack<PooledDictionary<T, T2>> stack;

		[Token(Token = "0x400158E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static uint checkedOut;

		[Token(Token = "0x400158F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static uint returned;

		[Token(Token = "0x4001590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1475448", Offset = "0x1475448")]
		private bool <recycleable>k__BackingField;

		[Token(Token = "0x1700026C")]
		public bool recycleable
		{
			[Token(Token = "0x6001773")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1484FF4", Offset = "0x1484FF4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001774")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1485004", Offset = "0x1485004")]
			set
			{
			}
		}

		[Token(Token = "0x6001775")]
		public static void Init(int initialPoolSize = 10)
		{
		}

		[Token(Token = "0x6001776")]
		public static PooledDictionary<T, T2> Get(int capacity, [Optional] IEqualityComparer<T> comparer)
		{
			return null;
		}

		[Token(Token = "0x6001777")]
		public static PooledDictionary<T, T2> Get()
		{
			return null;
		}

		[Token(Token = "0x6001778")]
		public static PooledDictionary<T, T2> Get(IEqualityComparer<T> comparer)
		{
			return null;
		}

		[Token(Token = "0x6001779")]
		public PooledDictionary()
		{
		}

		[Token(Token = "0x600177A")]
		public PooledDictionary(int capacity)
		{
		}

		[Token(Token = "0x600177B")]
		public PooledDictionary(int capacity, IEqualityComparer<T> comparer)
		{
		}

		[Token(Token = "0x600177C")]
		public void ReturnToPool(bool force = false)
		{
		}
	}
}
namespace UnityEngine
{
	[Token(Token = "0x200030C")]
	public struct Mathd
	{
		[Token(Token = "0x4001591")]
		public const double Infinity = double.PositiveInfinity;

		[Token(Token = "0x600177E")]
		[Address(RVA = "0x1F0DF60", Offset = "0x1F0DF60", VA = "0x1F0DF60")]
		public static double Abs(double v)
		{
			return default(double);
		}

		[Token(Token = "0x600177F")]
		[Address(RVA = "0x1F0DFCC", Offset = "0x1F0DFCC", VA = "0x1F0DFCC")]
		public static double Floor(double v)
		{
			return default(double);
		}

		[Token(Token = "0x6001780")]
		[Address(RVA = "0x1F0E038", Offset = "0x1F0E038", VA = "0x1F0E038")]
		public static int FloorToInt(double v)
		{
			return default(int);
		}

		[Token(Token = "0x6001781")]
		[Address(RVA = "0x1F0E064", Offset = "0x1F0E064", VA = "0x1F0E064")]
		public static double Ceil(double v)
		{
			return default(double);
		}

		[Token(Token = "0x6001782")]
		[Address(RVA = "0x1F0E0D0", Offset = "0x1F0E0D0", VA = "0x1F0E0D0")]
		public static int CeilToInt(double v)
		{
			return default(int);
		}

		[Token(Token = "0x6001783")]
		[Address(RVA = "0x1F0E0FC", Offset = "0x1F0E0FC", VA = "0x1F0E0FC")]
		public static double Min(double a, double b)
		{
			return default(double);
		}

		[Token(Token = "0x6001784")]
		[Address(RVA = "0x1F0E108", Offset = "0x1F0E108", VA = "0x1F0E108")]
		public static double Max(double a, double b)
		{
			return default(double);
		}

		[Token(Token = "0x6001785")]
		[Address(RVA = "0x1F0E114", Offset = "0x1F0E114", VA = "0x1F0E114")]
		public static double Clamp01(double v)
		{
			return default(double);
		}

		[Token(Token = "0x6001786")]
		[Address(RVA = "0x1F0E130", Offset = "0x1F0E130", VA = "0x1F0E130")]
		public static double Lerp(double a, double b, double t)
		{
			return default(double);
		}
	}
}
namespace proto
{
	[Token(Token = "0x200030D")]
	[DebuggerNonUserCode]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14689FC", Offset = "0x14689FC")]
	[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x14689FC", Offset = "0x14689FC")]
	public sealed class PhoneEvent : GeneratedMessageLite<PhoneEvent, PhoneEvent.Builder>
	{
		[Token(Token = "0x20006AB")]
		[DebuggerNonUserCode]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A7AC", Offset = "0x146A7AC")]
		[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x146A7AC", Offset = "0x146A7AC")]
		public static class Types
		{
			[Token(Token = "0x200079A")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146AB6C", Offset = "0x146AB6C")]
			[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x146AB6C", Offset = "0x146AB6C")]
			public enum Type
			{
				[Token(Token = "0x4002A34")]
				MOTION = 1,
				[Token(Token = "0x4002A35")]
				GYROSCOPE,
				[Token(Token = "0x4002A36")]
				ACCELEROMETER,
				[Token(Token = "0x4002A37")]
				DEPTH_MAP,
				[Token(Token = "0x4002A38")]
				ORIENTATION,
				[Token(Token = "0x4002A39")]
				KEY
			}

			[Token(Token = "0x200079B")]
			[DebuggerNonUserCode]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146ABCC", Offset = "0x146ABCC")]
			[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x146ABCC", Offset = "0x146ABCC")]
			public sealed class MotionEvent : GeneratedMessageLite<MotionEvent, MotionEvent.Builder>
			{
				[Token(Token = "0x20007AE")]
				[DebuggerNonUserCode]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146AE6C", Offset = "0x146AE6C")]
				[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x146AE6C", Offset = "0x146AE6C")]
				public static class Types
				{
					[Token(Token = "0x20007B8")]
					[DebuggerNonUserCode]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146B17C", Offset = "0x146B17C")]
					[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x146B17C", Offset = "0x146B17C")]
					public sealed class Pointer : GeneratedMessageLite<Pointer, Pointer.Builder>
					{
						[Token(Token = "0x20007B9")]
						[DebuggerNonUserCode]
						[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146B1EC", Offset = "0x146B1EC")]
						[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x146B1EC", Offset = "0x146B1EC")]
						public sealed class Builder : GeneratedBuilderLite<Pointer, Builder>
						{
							[Token(Token = "0x4002AF0")]
							[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
							private bool resultIsReadOnly;

							[Token(Token = "0x4002AF1")]
							[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
							private Pointer result;

							[Token(Token = "0x170006A8")]
							protected override Builder ThisBuilder
							{
								[Token(Token = "0x6002E28")]
								[Address(RVA = "0x3FDFCD0", Offset = "0x3FDFCD0", VA = "0x3FDFCD0", Slot = "7")]
								get
								{
									return null;
								}
							}

							[Token(Token = "0x170006A9")]
							public override bool IsInitialized
							{
								[Token(Token = "0x6002E2C")]
								[Address(RVA = "0x3FDFD74", Offset = "0x3FDFD74", VA = "0x3FDFD74", Slot = "8")]
								get
								{
									return default(bool);
								}
							}

							[Token(Token = "0x170006AA")]
							protected override Pointer MessageBeingBuilt
							{
								[Token(Token = "0x6002E2D")]
								[Address(RVA = "0x3FDFD94", Offset = "0x3FDFD94", VA = "0x3FDFD94", Slot = "25")]
								get
								{
									return null;
								}
							}

							[Token(Token = "0x170006AB")]
							public override Pointer DefaultInstanceForType
							{
								[Token(Token = "0x6002E30")]
								[Address(RVA = "0x3FDFF0C", Offset = "0x3FDFF0C", VA = "0x3FDFF0C", Slot = "9")]
								get
								{
									return null;
								}
							}

							[Token(Token = "0x170006AC")]
							public bool HasId
							{
								[Token(Token = "0x6002E36")]
								[Address(RVA = "0x3FE067C", Offset = "0x3FE067C", VA = "0x3FE067C")]
								get
								{
									return default(bool);
								}
							}

							[Token(Token = "0x170006AD")]
							public int Id
							{
								[Token(Token = "0x6002E37")]
								[Address(RVA = "0x3FE0698", Offset = "0x3FE0698", VA = "0x3FE0698")]
								get
								{
									return default(int);
								}
								[Token(Token = "0x6002E38")]
								[Address(RVA = "0x3FE0198", Offset = "0x3FE0198", VA = "0x3FE0198")]
								set
								{
								}
							}

							[Token(Token = "0x170006AE")]
							public bool HasNormalizedX
							{
								[Token(Token = "0x6002E3B")]
								[Address(RVA = "0x3FE073C", Offset = "0x3FE073C", VA = "0x3FE073C")]
								get
								{
									return default(bool);
								}
							}

							[Token(Token = "0x170006AF")]
							public float NormalizedX
							{
								[Token(Token = "0x6002E3C")]
								[Address(RVA = "0x3FE0758", Offset = "0x3FE0758", VA = "0x3FE0758")]
								get
								{
									return default(float);
								}
								[Token(Token = "0x6002E3D")]
								[Address(RVA = "0x3FE019C", Offset = "0x3FE019C", VA = "0x3FE019C")]
								set
								{
								}
							}

							[Token(Token = "0x170006B0")]
							public bool HasNormalizedY
							{
								[Token(Token = "0x6002E40")]
								[Address(RVA = "0x3FE0804", Offset = "0x3FE0804", VA = "0x3FE0804")]
								get
								{
									return default(bool);
								}
							}

							[Token(Token = "0x170006B1")]
							public float NormalizedY
							{
								[Token(Token = "0x6002E41")]
								[Address(RVA = "0x3FE0820", Offset = "0x3FE0820", VA = "0x3FE0820")]
								get
								{
									return default(float);
								}
								[Token(Token = "0x6002E42")]
								[Address(RVA = "0x3FE01A0", Offset = "0x3FE01A0", VA = "0x3FE01A0")]
								set
								{
								}
							}

							[Token(Token = "0x6002E29")]
							[Address(RVA = "0x3FDF870", Offset = "0x3FDF870", VA = "0x3FDF870")]
							public Builder()
							{
							}

							[Token(Token = "0x6002E2A")]
							[Address(RVA = "0x3FDFA64", Offset = "0x3FDFA64", VA = "0x3FDFA64")]
							internal Builder(Pointer cloneFrom)
							{
							}

							[Token(Token = "0x6002E2B")]
							[Address(RVA = "0x3FDFCD4", Offset = "0x3FDFCD4", VA = "0x3FDFCD4")]
							private Pointer PrepareBuilder()
							{
								return null;
							}

							[Token(Token = "0x6002E2E")]
							[Address(RVA = "0x3FDFD98", Offset = "0x3FDFD98", VA = "0x3FDFD98", Slot = "10")]
							public override Builder Clear()
							{
								return null;
							}

							[Token(Token = "0x6002E2F")]
							[Address(RVA = "0x3FDFE60", Offset = "0x3FDFE60", VA = "0x3FDFE60", Slot = "11")]
							public override Builder Clone()
							{
								return null;
							}

							[Token(Token = "0x6002E31")]
							[Address(RVA = "0x3FDFFB0", Offset = "0x3FDFFB0", VA = "0x3FDFFB0", Slot = "13")]
							public override Pointer BuildPartial()
							{
								return null;
							}

							[Token(Token = "0x6002E32")]
							[Address(RVA = "0x3FDFFE4", Offset = "0x3FDFFE4", VA = "0x3FDFFE4", Slot = "14")]
							public override Builder MergeFrom(IMessageLite other)
							{
								return null;
							}

							[Token(Token = "0x6002E33")]
							[Address(RVA = "0x3FE008C", Offset = "0x3FE008C", VA = "0x3FE008C", Slot = "26")]
							public override Builder MergeFrom(Pointer other)
							{
								return null;
							}

							[Token(Token = "0x6002E34")]
							[Address(RVA = "0x3FE01A4", Offset = "0x3FE01A4", VA = "0x3FE01A4", Slot = "16")]
							public override Builder MergeFrom(ICodedInputStream input)
							{
								return null;
							}

							[Token(Token = "0x6002E35")]
							[Address(RVA = "0x3FE026C", Offset = "0x3FE026C", VA = "0x3FE026C", Slot = "15")]
							public override Builder MergeFrom(ICodedInputStream input, ExtensionRegistry extensionRegistry)
							{
								return null;
							}

							[Token(Token = "0x6002E39")]
							[Address(RVA = "0x3FE06B4", Offset = "0x3FE06B4", VA = "0x3FE06B4")]
							public Builder SetId(int value)
							{
								return null;
							}

							[Token(Token = "0x6002E3A")]
							[Address(RVA = "0x3FE06FC", Offset = "0x3FE06FC", VA = "0x3FE06FC")]
							public Builder ClearId()
							{
								return null;
							}

							[Token(Token = "0x6002E3E")]
							[Address(RVA = "0x3FE0774", Offset = "0x3FE0774", VA = "0x3FE0774")]
							public Builder SetNormalizedX(float value)
							{
								return null;
							}

							[Token(Token = "0x6002E3F")]
							[Address(RVA = "0x3FE07C4", Offset = "0x3FE07C4", VA = "0x3FE07C4")]
							public Builder ClearNormalizedX()
							{
								return null;
							}

							[Token(Token = "0x6002E43")]
							[Address(RVA = "0x3FE083C", Offset = "0x3FE083C", VA = "0x3FE083C")]
							public Builder SetNormalizedY(float value)
							{
								return null;
							}

							[Token(Token = "0x6002E44")]
							[Address(RVA = "0x3FE088C", Offset = "0x3FE088C", VA = "0x3FE088C")]
							public Builder ClearNormalizedY()
							{
								return null;
							}
						}

						[Token(Token = "0x4002AE3")]
						[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
						private static readonly Pointer defaultInstance;

						[Token(Token = "0x4002AE4")]
						[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
						private static readonly string[] _pointerFieldNames;

						[Token(Token = "0x4002AE5")]
						[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
						private static readonly uint[] _pointerFieldTags;

						[Token(Token = "0x4002AE6")]
						public const int IdFieldNumber = 1;

						[Token(Token = "0x4002AE7")]
						[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
						private bool hasId;

						[Token(Token = "0x4002AE8")]
						[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
						private int id_;

						[Token(Token = "0x4002AE9")]
						public const int NormalizedXFieldNumber = 2;

						[Token(Token = "0x4002AEA")]
						[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
						private bool hasNormalizedX;

						[Token(Token = "0x4002AEB")]
						[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
						private float normalizedX_;

						[Token(Token = "0x4002AEC")]
						public const int NormalizedYFieldNumber = 3;

						[Token(Token = "0x4002AED")]
						[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
						private bool hasNormalizedY;

						[Token(Token = "0x4002AEE")]
						[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
						private float normalizedY_;

						[Token(Token = "0x4002AEF")]
						[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
						private int memoizedSerializedSize;

						[Token(Token = "0x1700069D")]
						public static Pointer DefaultInstance
						{
							[Token(Token = "0x6002E09")]
							[Address(RVA = "0x3FDEA6C", Offset = "0x3FDEA6C", VA = "0x3FDEA6C")]
							get
							{
								return null;
							}
						}

						[Token(Token = "0x1700069E")]
						public override Pointer DefaultInstanceForType
						{
							[Token(Token = "0x6002E0A")]
							[Address(RVA = "0x3FDEAD4", Offset = "0x3FDEAD4", VA = "0x3FDEAD4", Slot = "9")]
							get
							{
								return null;
							}
						}

						[Token(Token = "0x1700069F")]
						protected override Pointer ThisMessage
						{
							[Token(Token = "0x6002E0B")]
							[Address(RVA = "0x3FDEB78", Offset = "0x3FDEB78", VA = "0x3FDEB78", Slot = "17")]
							get
							{
								return null;
							}
						}

						[Token(Token = "0x170006A0")]
						public bool HasId
						{
							[Token(Token = "0x6002E0C")]
							[Address(RVA = "0x3FDEB7C", Offset = "0x3FDEB7C", VA = "0x3FDEB7C")]
							get
							{
								return default(bool);
							}
						}

						[Token(Token = "0x170006A1")]
						public int Id
						{
							[Token(Token = "0x6002E0D")]
							[Address(RVA = "0x3FDEB84", Offset = "0x3FDEB84", VA = "0x3FDEB84")]
							get
							{
								return default(int);
							}
						}

						[Token(Token = "0x170006A2")]
						public bool HasNormalizedX
						{
							[Token(Token = "0x6002E0E")]
							[Address(RVA = "0x3FDEB8C", Offset = "0x3FDEB8C", VA = "0x3FDEB8C")]
							get
							{
								return default(bool);
							}
						}

						[Token(Token = "0x170006A3")]
						public float NormalizedX
						{
							[Token(Token = "0x6002E0F")]
							[Address(RVA = "0x3FDEB94", Offset = "0x3FDEB94", VA = "0x3FDEB94")]
							get
							{
								return default(float);
							}
						}

						[Token(Token = "0x170006A4")]
						public bool HasNormalizedY
						{
							[Token(Token = "0x6002E10")]
							[Address(RVA = "0x3FDEB9C", Offset = "0x3FDEB9C", VA = "0x3FDEB9C")]
							get
							{
								return default(bool);
							}
						}

						[Token(Token = "0x170006A5")]
						public float NormalizedY
						{
							[Token(Token = "0x6002E11")]
							[Address(RVA = "0x3FDEBA4", Offset = "0x3FDEBA4", VA = "0x3FDEBA4")]
							get
							{
								return default(float);
							}
						}

						[Token(Token = "0x170006A6")]
						public override bool IsInitialized
						{
							[Token(Token = "0x6002E12")]
							[Address(RVA = "0x3FDEBAC", Offset = "0x3FDEBAC", VA = "0x3FDEBAC", Slot = "10")]
							get
							{
								return default(bool);
							}
						}

						[Token(Token = "0x170006A7")]
						public override int SerializedSize
						{
							[Token(Token = "0x6002E14")]
							[Address(RVA = "0x3FDEE28", Offset = "0x3FDEE28", VA = "0x3FDEE28", Slot = "11")]
							get
							{
								return default(int);
							}
						}

						[Token(Token = "0x6002E08")]
						[Address(RVA = "0x3FDEA14", Offset = "0x3FDEA14", VA = "0x3FDEA14")]
						private Pointer()
						{
						}

						[Token(Token = "0x6002E13")]
						[Address(RVA = "0x3FDEBB4", Offset = "0x3FDEBB4", VA = "0x3FDEBB4", Slot = "14")]
						public override void WriteTo(ICodedOutputStream output)
						{
						}

						[Token(Token = "0x6002E15")]
						[Address(RVA = "0x3FDEF4C", Offset = "0x3FDEF4C", VA = "0x3FDEF4C", Slot = "2")]
						public override int GetHashCode()
						{
							return default(int);
						}

						[Token(Token = "0x6002E16")]
						[Address(RVA = "0x3FDEFD4", Offset = "0x3FDEFD4", VA = "0x3FDEFD4", Slot = "0")]
						public override bool Equals(object obj)
						{
							return default(bool);
						}

						[Token(Token = "0x6002E17")]
						[Address(RVA = "0x3FDF0FC", Offset = "0x3FDF0FC", VA = "0x3FDF0FC", Slot = "15")]
						public override void PrintTo(TextWriter writer)
						{
						}

						[Token(Token = "0x6002E18")]
						[Address(RVA = "0x3FDF224", Offset = "0x3FDF224", VA = "0x3FDF224")]
						public static Pointer ParseFrom(ByteString data)
						{
							return null;
						}

						[Token(Token = "0x6002E19")]
						[Address(RVA = "0x3FDF30C", Offset = "0x3FDF30C", VA = "0x3FDF30C")]
						public static Pointer ParseFrom(ByteString data, ExtensionRegistry extensionRegistry)
						{
							return null;
						}

						[Token(Token = "0x6002E1A")]
						[Address(RVA = "0x3FDF3AC", Offset = "0x3FDF3AC", VA = "0x3FDF3AC")]
						public static Pointer ParseFrom(byte[] data)
						{
							return null;
						}

						[Token(Token = "0x6002E1B")]
						[Address(RVA = "0x3FDF43C", Offset = "0x3FDF43C", VA = "0x3FDF43C")]
						public static Pointer ParseFrom(byte[] data, ExtensionRegistry extensionRegistry)
						{
							return null;
						}

						[Token(Token = "0x6002E1C")]
						[Address(RVA = "0x3FDF4DC", Offset = "0x3FDF4DC", VA = "0x3FDF4DC")]
						public static Pointer ParseFrom(Stream input)
						{
							return null;
						}

						[Token(Token = "0x6002E1D")]
						[Address(RVA = "0x3FDF56C", Offset = "0x3FDF56C", VA = "0x3FDF56C")]
						public static Pointer ParseFrom(Stream input, ExtensionRegistry extensionRegistry)
						{
							return null;
						}

						[Token(Token = "0x6002E1E")]
						[Address(RVA = "0x3FDF60C", Offset = "0x3FDF60C", VA = "0x3FDF60C")]
						public static Pointer ParseDelimitedFrom(Stream input)
						{
							return null;
						}

						[Token(Token = "0x6002E1F")]
						[Address(RVA = "0x3FDF69C", Offset = "0x3FDF69C", VA = "0x3FDF69C")]
						public static Pointer ParseDelimitedFrom(Stream input, ExtensionRegistry extensionRegistry)
						{
							return null;
						}

						[Token(Token = "0x6002E20")]
						[Address(RVA = "0x3FDF73C", Offset = "0x3FDF73C", VA = "0x3FDF73C")]
						public static Pointer ParseFrom(ICodedInputStream input)
						{
							return null;
						}

						[Token(Token = "0x6002E21")]
						[Address(RVA = "0x3FDF7CC", Offset = "0x3FDF7CC", VA = "0x3FDF7CC")]
						public static Pointer ParseFrom(ICodedInputStream input, ExtensionRegistry extensionRegistry)
						{
							return null;
						}

						[Token(Token = "0x6002E22")]
						[Address(RVA = "0x3FDF86C", Offset = "0x3FDF86C", VA = "0x3FDF86C")]
						private Pointer MakeReadOnly()
						{
							return null;
						}

						[Token(Token = "0x6002E23")]
						[Address(RVA = "0x3FDF2B4", Offset = "0x3FDF2B4", VA = "0x3FDF2B4")]
						public static Builder CreateBuilder()
						{
							return null;
						}

						[Token(Token = "0x6002E24")]
						[Address(RVA = "0x3FDF948", Offset = "0x3FDF948", VA = "0x3FDF948", Slot = "13")]
						public override Builder ToBuilder()
						{
							return null;
						}

						[Token(Token = "0x6002E25")]
						[Address(RVA = "0x3FDFA0C", Offset = "0x3FDFA0C", VA = "0x3FDFA0C", Slot = "12")]
						public override Builder CreateBuilderForType()
						{
							return null;
						}

						[Token(Token = "0x6002E26")]
						[Address(RVA = "0x3FDF9AC", Offset = "0x3FDF9AC", VA = "0x3FDF9AC")]
						public static Builder CreateBuilder(Pointer prototype)
						{
							return null;
						}

						[Token(Token = "0x6002E27")]
						[Address(RVA = "0x3FDFADC", Offset = "0x3FDFADC", VA = "0x3FDFADC")]
						static Pointer()
						{
						}
					}
				}

				[Token(Token = "0x20007AF")]
				[DebuggerNonUserCode]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146AEDC", Offset = "0x146AEDC")]
				[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x146AEDC", Offset = "0x146AEDC")]
				public sealed class Builder : GeneratedBuilderLite<MotionEvent, Builder>
				{
					[Token(Token = "0x4002ACE")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
					private bool resultIsReadOnly;

					[Token(Token = "0x4002ACF")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
					private MotionEvent result;

					[Token(Token = "0x17000659")]
					protected override Builder ThisBuilder
					{
						[Token(Token = "0x6002D3C")]
						[Address(RVA = "0x3FDD8D8", Offset = "0x3FDD8D8", VA = "0x3FDD8D8", Slot = "7")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x1700065A")]
					public override bool IsInitialized
					{
						[Token(Token = "0x6002D40")]
						[Address(RVA = "0x3FDDAD0", Offset = "0x3FDDAD0", VA = "0x3FDDAD0", Slot = "8")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x1700065B")]
					protected override MotionEvent MessageBeingBuilt
					{
						[Token(Token = "0x6002D41")]
						[Address(RVA = "0x3FDDAF0", Offset = "0x3FDDAF0", VA = "0x3FDDAF0", Slot = "25")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x1700065C")]
					public override MotionEvent DefaultInstanceForType
					{
						[Token(Token = "0x6002D44")]
						[Address(RVA = "0x3FDDC68", Offset = "0x3FDDC68", VA = "0x3FDDC68", Slot = "9")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x1700065D")]
					public bool HasTimestamp
					{
						[Token(Token = "0x6002D4A")]
						[Address(RVA = "0x3FDE4AC", Offset = "0x3FDE4AC", VA = "0x3FDE4AC")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x1700065E")]
					public long Timestamp
					{
						[Token(Token = "0x6002D4B")]
						[Address(RVA = "0x3FDE4C8", Offset = "0x3FDE4C8", VA = "0x3FDE4C8")]
						get
						{
							return default(long);
						}
						[Token(Token = "0x6002D4C")]
						[Address(RVA = "0x3FDDF24", Offset = "0x3FDDF24", VA = "0x3FDDF24")]
						set
						{
						}
					}

					[Token(Token = "0x1700065F")]
					public bool HasAction
					{
						[Token(Token = "0x6002D4F")]
						[Address(RVA = "0x3FDE56C", Offset = "0x3FDE56C", VA = "0x3FDE56C")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x17000660")]
					public int Action
					{
						[Token(Token = "0x6002D50")]
						[Address(RVA = "0x3FDE588", Offset = "0x3FDE588", VA = "0x3FDE588")]
						get
						{
							return default(int);
						}
						[Token(Token = "0x6002D51")]
						[Address(RVA = "0x3FDDF28", Offset = "0x3FDDF28", VA = "0x3FDDF28")]
						set
						{
						}
					}

					[Token(Token = "0x17000661")]
					public IPopsicleList<Types.Pointer> PointersList
					{
						[Token(Token = "0x6002D54")]
						[Address(RVA = "0x3FDE62C", Offset = "0x3FDE62C", VA = "0x3FDE62C")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x17000662")]
					public int PointersCount
					{
						[Token(Token = "0x6002D55")]
						[Address(RVA = "0x3FDE64C", Offset = "0x3FDE64C", VA = "0x3FDE64C")]
						get
						{
							return default(int);
						}
					}

					[Token(Token = "0x6002D3D")]
					[Address(RVA = "0x3FDD8DC", Offset = "0x3FDD8DC", VA = "0x3FDD8DC")]
					public Builder()
					{
					}

					[Token(Token = "0x6002D3E")]
					[Address(RVA = "0x3FDD9B4", Offset = "0x3FDD9B4", VA = "0x3FDD9B4")]
					internal Builder(MotionEvent cloneFrom)
					{
					}

					[Token(Token = "0x6002D3F")]
					[Address(RVA = "0x3FDDA2C", Offset = "0x3FDDA2C", VA = "0x3FDDA2C")]
					private MotionEvent PrepareBuilder()
					{
						return null;
					}

					[Token(Token = "0x6002D42")]
					[Address(RVA = "0x3FDDAF4", Offset = "0x3FDDAF4", VA = "0x3FDDAF4", Slot = "10")]
					public override Builder Clear()
					{
						return null;
					}

					[Token(Token = "0x6002D43")]
					[Address(RVA = "0x3FDDBBC", Offset = "0x3FDDBBC", VA = "0x3FDDBBC", Slot = "11")]
					public override Builder Clone()
					{
						return null;
					}

					[Token(Token = "0x6002D45")]
					[Address(RVA = "0x3FDDD0C", Offset = "0x3FDDD0C", VA = "0x3FDDD0C", Slot = "13")]
					public override MotionEvent BuildPartial()
					{
						return null;
					}

					[Token(Token = "0x6002D46")]
					[Address(RVA = "0x3FDDD44", Offset = "0x3FDDD44", VA = "0x3FDDD44", Slot = "14")]
					public override Builder MergeFrom(IMessageLite other)
					{
						return null;
					}

					[Token(Token = "0x6002D47")]
					[Address(RVA = "0x3FDDDEC", Offset = "0x3FDDDEC", VA = "0x3FDDDEC", Slot = "26")]
					public override Builder MergeFrom(MotionEvent other)
					{
						return null;
					}

					[Token(Token = "0x6002D48")]
					[Address(RVA = "0x3FDDF2C", Offset = "0x3FDDF2C", VA = "0x3FDDF2C", Slot = "16")]
					public override Builder MergeFrom(ICodedInputStream input)
					{
						return null;
					}

					[Token(Token = "0x6002D49")]
					[Address(RVA = "0x3FDDFF4", Offset = "0x3FDDFF4", VA = "0x3FDDFF4", Slot = "15")]
					public override Builder MergeFrom(ICodedInputStream input, ExtensionRegistry extensionRegistry)
					{
						return null;
					}

					[Token(Token = "0x6002D4D")]
					[Address(RVA = "0x3FDE4E4", Offset = "0x3FDE4E4", VA = "0x3FDE4E4")]
					public Builder SetTimestamp(long value)
					{
						return null;
					}

					[Token(Token = "0x6002D4E")]
					[Address(RVA = "0x3FDE52C", Offset = "0x3FDE52C", VA = "0x3FDE52C")]
					public Builder ClearTimestamp()
					{
						return null;
					}

					[Token(Token = "0x6002D52")]
					[Address(RVA = "0x3FDE5A4", Offset = "0x3FDE5A4", VA = "0x3FDE5A4")]
					public Builder SetAction(int value)
					{
						return null;
					}

					[Token(Token = "0x6002D53")]
					[Address(RVA = "0x3FDE5EC", Offset = "0x3FDE5EC", VA = "0x3FDE5EC")]
					public Builder ClearAction()
					{
						return null;
					}

					[Token(Token = "0x6002D56")]
					[Address(RVA = "0x3FDE668", Offset = "0x3FDE668", VA = "0x3FDE668")]
					public Types.Pointer GetPointers(int index)
					{
						return null;
					}

					[Token(Token = "0x6002D57")]
					[Address(RVA = "0x3FDE684", Offset = "0x3FDE684", VA = "0x3FDE684")]
					public Builder SetPointers(int index, Types.Pointer value)
					{
						return null;
					}

					[Token(Token = "0x6002D58")]
					[Address(RVA = "0x3FDE724", Offset = "0x3FDE724", VA = "0x3FDE724")]
					public Builder SetPointers(int index, Types.Pointer.Builder builderForValue)
					{
						return null;
					}

					[Token(Token = "0x6002D59")]
					[Address(RVA = "0x3FDE7DC", Offset = "0x3FDE7DC", VA = "0x3FDE7DC")]
					public Builder AddPointers(Types.Pointer value)
					{
						return null;
					}

					[Token(Token = "0x6002D5A")]
					[Address(RVA = "0x3FDE874", Offset = "0x3FDE874", VA = "0x3FDE874")]
					public Builder AddPointers(Types.Pointer.Builder builderForValue)
					{
						return null;
					}

					[Token(Token = "0x6002D5B")]
					[Address(RVA = "0x3FDE924", Offset = "0x3FDE924", VA = "0x3FDE924")]
					public Builder AddRangePointers(IEnumerable<Types.Pointer> values)
					{
						return null;
					}

					[Token(Token = "0x6002D5C")]
					[Address(RVA = "0x3FDE9A4", Offset = "0x3FDE9A4", VA = "0x3FDE9A4")]
					public Builder ClearPointers()
					{
						return null;
					}
				}

				[Token(Token = "0x4002A3A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private static readonly MotionEvent defaultInstance;

				[Token(Token = "0x4002A3B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				private static readonly string[] _motionEventFieldNames;

				[Token(Token = "0x4002A3C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private static readonly uint[] _motionEventFieldTags;

				[Token(Token = "0x4002A3D")]
				public const int TimestampFieldNumber = 1;

				[Token(Token = "0x4002A3E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private bool hasTimestamp;

				[Token(Token = "0x4002A3F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private long timestamp_;

				[Token(Token = "0x4002A40")]
				public const int ActionFieldNumber = 2;

				[Token(Token = "0x4002A41")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				private bool hasAction;

				[Token(Token = "0x4002A42")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
				private int action_;

				[Token(Token = "0x4002A43")]
				public const int PointersFieldNumber = 3;

				[Token(Token = "0x4002A44")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private PopsicleList<Types.Pointer> pointers_;

				[Token(Token = "0x4002A45")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				private int memoizedSerializedSize;

				[Token(Token = "0x17000605")]
				public static MotionEvent DefaultInstance
				{
					[Token(Token = "0x6002C3E")]
					[Address(RVA = "0x2A9520C", Offset = "0x2A9520C", VA = "0x2A9520C")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000606")]
				public override MotionEvent DefaultInstanceForType
				{
					[Token(Token = "0x6002C3F")]
					[Address(RVA = "0x2A95274", Offset = "0x2A95274", VA = "0x2A95274", Slot = "9")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000607")]
				protected override MotionEvent ThisMessage
				{
					[Token(Token = "0x6002C40")]
					[Address(RVA = "0x2A95318", Offset = "0x2A95318", VA = "0x2A95318", Slot = "17")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000608")]
				public bool HasTimestamp
				{
					[Token(Token = "0x6002C41")]
					[Address(RVA = "0x2A9531C", Offset = "0x2A9531C", VA = "0x2A9531C")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x17000609")]
				public long Timestamp
				{
					[Token(Token = "0x6002C42")]
					[Address(RVA = "0x2A95324", Offset = "0x2A95324", VA = "0x2A95324")]
					get
					{
						return default(long);
					}
				}

				[Token(Token = "0x1700060A")]
				public bool HasAction
				{
					[Token(Token = "0x6002C43")]
					[Address(RVA = "0x2A9532C", Offset = "0x2A9532C", VA = "0x2A9532C")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x1700060B")]
				public int Action
				{
					[Token(Token = "0x6002C44")]
					[Address(RVA = "0x2A95334", Offset = "0x2A95334", VA = "0x2A95334")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x1700060C")]
				public IList<Types.Pointer> PointersList
				{
					[Token(Token = "0x6002C45")]
					[Address(RVA = "0x2A9533C", Offset = "0x2A9533C", VA = "0x2A9533C")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x1700060D")]
				public int PointersCount
				{
					[Token(Token = "0x6002C46")]
					[Address(RVA = "0x2A95344", Offset = "0x2A95344", VA = "0x2A95344")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x1700060E")]
				public override bool IsInitialized
				{
					[Token(Token = "0x6002C48")]
					[Address(RVA = "0x2A95404", Offset = "0x2A95404", VA = "0x2A95404", Slot = "10")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x1700060F")]
				public override int SerializedSize
				{
					[Token(Token = "0x6002C4A")]
					[Address(RVA = "0x2A956A8", Offset = "0x2A956A8", VA = "0x2A956A8", Slot = "11")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x6002C3D")]
				[Address(RVA = "0x2A95180", Offset = "0x2A95180", VA = "0x2A95180")]
				private MotionEvent()
				{
				}

				[Token(Token = "0x6002C47")]
				[Address(RVA = "0x2A9539C", Offset = "0x2A9539C", VA = "0x2A9539C")]
				public Types.Pointer GetPointers(int index)
				{
					return null;
				}

				[Token(Token = "0x6002C49")]
				[Address(RVA = "0x2A9540C", Offset = "0x2A9540C", VA = "0x2A9540C", Slot = "14")]
				public override void WriteTo(ICodedOutputStream output)
				{
				}

				[Token(Token = "0x6002C4B")]
				[Address(RVA = "0x2A959DC", Offset = "0x2A959DC", VA = "0x2A959DC", Slot = "2")]
				public override int GetHashCode()
				{
					return default(int);
				}

				[Token(Token = "0x6002C4C")]
				[Address(RVA = "0x2A95C40", Offset = "0x2A95C40", VA = "0x2A95C40", Slot = "0")]
				public override bool Equals(object obj)
				{
					return default(bool);
				}

				[Token(Token = "0x6002C4D")]
				[Address(RVA = "0x2A95DEC", Offset = "0x2A95DEC", VA = "0x2A95DEC", Slot = "15")]
				public override void PrintTo(TextWriter writer)
				{
				}

				[Token(Token = "0x6002C4E")]
				[Address(RVA = "0x2A95EF4", Offset = "0x2A95EF4", VA = "0x2A95EF4")]
				public static MotionEvent ParseFrom(ByteString data)
				{
					return null;
				}

				[Token(Token = "0x6002C4F")]
				[Address(RVA = "0x2A95F84", Offset = "0x2A95F84", VA = "0x2A95F84")]
				public static MotionEvent ParseFrom(ByteString data, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x6002C50")]
				[Address(RVA = "0x2A96024", Offset = "0x2A96024", VA = "0x2A96024")]
				public static MotionEvent ParseFrom(byte[] data)
				{
					return null;
				}

				[Token(Token = "0x6002C51")]
				[Address(RVA = "0x2A960B4", Offset = "0x2A960B4", VA = "0x2A960B4")]
				public static MotionEvent ParseFrom(byte[] data, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x6002C52")]
				[Address(RVA = "0x2A96154", Offset = "0x2A96154", VA = "0x2A96154")]
				public static MotionEvent ParseFrom(Stream input)
				{
					return null;
				}

				[Token(Token = "0x6002C53")]
				[Address(RVA = "0x2A961E4", Offset = "0x2A961E4", VA = "0x2A961E4")]
				public static MotionEvent ParseFrom(Stream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x6002C54")]
				[Address(RVA = "0x2A96284", Offset = "0x2A96284", VA = "0x2A96284")]
				public static MotionEvent ParseDelimitedFrom(Stream input)
				{
					return null;
				}

				[Token(Token = "0x6002C55")]
				[Address(RVA = "0x2A96314", Offset = "0x2A96314", VA = "0x2A96314")]
				public static MotionEvent ParseDelimitedFrom(Stream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x6002C56")]
				[Address(RVA = "0x2A963B4", Offset = "0x2A963B4", VA = "0x2A963B4")]
				public static MotionEvent ParseFrom(ICodedInputStream input)
				{
					return null;
				}

				[Token(Token = "0x6002C57")]
				[Address(RVA = "0x2A96444", Offset = "0x2A96444", VA = "0x2A96444")]
				public static MotionEvent ParseFrom(ICodedInputStream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x6002C58")]
				[Address(RVA = "0x2A964E4", Offset = "0x2A964E4", VA = "0x2A964E4")]
				private MotionEvent MakeReadOnly()
				{
					return null;
				}

				[Token(Token = "0x6002C59")]
				[Address(RVA = "0x2A8BE48", Offset = "0x2A8BE48", VA = "0x2A8BE48")]
				public static Builder CreateBuilder()
				{
					return null;
				}

				[Token(Token = "0x6002C5A")]
				[Address(RVA = "0x2A96544", Offset = "0x2A96544", VA = "0x2A96544", Slot = "13")]
				public override Builder ToBuilder()
				{
					return null;
				}

				[Token(Token = "0x6002C5B")]
				[Address(RVA = "0x2A965A8", Offset = "0x2A965A8", VA = "0x2A965A8", Slot = "12")]
				public override Builder CreateBuilderForType()
				{
					return null;
				}

				[Token(Token = "0x6002C5C")]
				[Address(RVA = "0x2A8C2D4", Offset = "0x2A8C2D4", VA = "0x2A8C2D4")]
				public static Builder CreateBuilder(MotionEvent prototype)
				{
					return null;
				}

				[Token(Token = "0x6002C5D")]
				[Address(RVA = "0x2A96604", Offset = "0x2A96604", VA = "0x2A96604")]
				static MotionEvent()
				{
				}
			}

			[Token(Token = "0x200079C")]
			[DebuggerNonUserCode]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146AC3C", Offset = "0x146AC3C")]
			[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x146AC3C", Offset = "0x146AC3C")]
			public sealed class GyroscopeEvent : GeneratedMessageLite<GyroscopeEvent, GyroscopeEvent.Builder>
			{
				[Token(Token = "0x20007B0")]
				[DebuggerNonUserCode]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146AF4C", Offset = "0x146AF4C")]
				[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x146AF4C", Offset = "0x146AF4C")]
				public sealed class Builder : GeneratedBuilderLite<GyroscopeEvent, Builder>
				{
					[Token(Token = "0x4002AD0")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
					private bool resultIsReadOnly;

					[Token(Token = "0x4002AD1")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
					private GyroscopeEvent result;

					[Token(Token = "0x17000663")]
					protected override Builder ThisBuilder
					{
						[Token(Token = "0x6002D5D")]
						[Address(RVA = "0x2A92958", Offset = "0x2A92958", VA = "0x2A92958", Slot = "7")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x17000664")]
					public override bool IsInitialized
					{
						[Token(Token = "0x6002D61")]
						[Address(RVA = "0x2A929FC", Offset = "0x2A929FC", VA = "0x2A929FC", Slot = "8")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x17000665")]
					protected override GyroscopeEvent MessageBeingBuilt
					{
						[Token(Token = "0x6002D62")]
						[Address(RVA = "0x2A92A1C", Offset = "0x2A92A1C", VA = "0x2A92A1C", Slot = "25")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x17000666")]
					public override GyroscopeEvent DefaultInstanceForType
					{
						[Token(Token = "0x6002D65")]
						[Address(RVA = "0x2A92B94", Offset = "0x2A92B94", VA = "0x2A92B94", Slot = "9")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x17000667")]
					public bool HasTimestamp
					{
						[Token(Token = "0x6002D6B")]
						[Address(RVA = "0x2A933A4", Offset = "0x2A933A4", VA = "0x2A933A4")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x17000668")]
					public long Timestamp
					{
						[Token(Token = "0x6002D6C")]
						[Address(RVA = "0x2A933C0", Offset = "0x2A933C0", VA = "0x2A933C0")]
						get
						{
							return default(long);
						}
						[Token(Token = "0x6002D6D")]
						[Address(RVA = "0x2A92E34", Offset = "0x2A92E34", VA = "0x2A92E34")]
						set
						{
						}
					}

					[Token(Token = "0x17000669")]
					public bool HasX
					{
						[Token(Token = "0x6002D70")]
						[Address(RVA = "0x2A93464", Offset = "0x2A93464", VA = "0x2A93464")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x1700066A")]
					public float X
					{
						[Token(Token = "0x6002D71")]
						[Address(RVA = "0x2A93480", Offset = "0x2A93480", VA = "0x2A93480")]
						get
						{
							return default(float);
						}
						[Token(Token = "0x6002D72")]
						[Address(RVA = "0x2A92E38", Offset = "0x2A92E38", VA = "0x2A92E38")]
						set
						{
						}
					}

					[Token(Token = "0x1700066B")]
					public bool HasY
					{
						[Token(Token = "0x6002D75")]
						[Address(RVA = "0x2A9352C", Offset = "0x2A9352C", VA = "0x2A9352C")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x1700066C")]
					public float Y
					{
						[Token(Token = "0x6002D76")]
						[Address(RVA = "0x2A93548", Offset = "0x2A93548", VA = "0x2A93548")]
						get
						{
							return default(float);
						}
						[Token(Token = "0x6002D77")]
						[Address(RVA = "0x2A92E3C", Offset = "0x2A92E3C", VA = "0x2A92E3C")]
						set
						{
						}
					}

					[Token(Token = "0x1700066D")]
					public bool HasZ
					{
						[Token(Token = "0x6002D7A")]
						[Address(RVA = "0x2A935F4", Offset = "0x2A935F4", VA = "0x2A935F4")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x1700066E")]
					public float Z
					{
						[Token(Token = "0x6002D7B")]
						[Address(RVA = "0x2A93610", Offset = "0x2A93610", VA = "0x2A93610")]
						get
						{
							return default(float);
						}
						[Token(Token = "0x6002D7C")]
						[Address(RVA = "0x2A92E40", Offset = "0x2A92E40", VA = "0x2A92E40")]
						set
						{
						}
					}

					[Token(Token = "0x6002D5E")]
					[Address(RVA = "0x2A92514", Offset = "0x2A92514", VA = "0x2A92514")]
					public Builder()
					{
					}

					[Token(Token = "0x6002D5F")]
					[Address(RVA = "0x2A926A8", Offset = "0x2A926A8", VA = "0x2A926A8")]
					internal Builder(GyroscopeEvent cloneFrom)
					{
					}

					[Token(Token = "0x6002D60")]
					[Address(RVA = "0x2A9295C", Offset = "0x2A9295C", VA = "0x2A9295C")]
					private GyroscopeEvent PrepareBuilder()
					{
						return null;
					}

					[Token(Token = "0x6002D63")]
					[Address(RVA = "0x2A92A20", Offset = "0x2A92A20", VA = "0x2A92A20", Slot = "10")]
					public override Builder Clear()
					{
						return null;
					}

					[Token(Token = "0x6002D64")]
					[Address(RVA = "0x2A92AE8", Offset = "0x2A92AE8", VA = "0x2A92AE8", Slot = "11")]
					public override Builder Clone()
					{
						return null;
					}

					[Token(Token = "0x6002D66")]
					[Address(RVA = "0x2A92C38", Offset = "0x2A92C38", VA = "0x2A92C38", Slot = "13")]
					public override GyroscopeEvent BuildPartial()
					{
						return null;
					}

					[Token(Token = "0x6002D67")]
					[Address(RVA = "0x2A92C6C", Offset = "0x2A92C6C", VA = "0x2A92C6C", Slot = "14")]
					public override Builder MergeFrom(IMessageLite other)
					{
						return null;
					}

					[Token(Token = "0x6002D68")]
					[Address(RVA = "0x2A92D14", Offset = "0x2A92D14", VA = "0x2A92D14", Slot = "26")]
					public override Builder MergeFrom(GyroscopeEvent other)
					{
						return null;
					}

					[Token(Token = "0x6002D69")]
					[Address(RVA = "0x2A92E44", Offset = "0x2A92E44", VA = "0x2A92E44", Slot = "16")]
					public override Builder MergeFrom(ICodedInputStream input)
					{
						return null;
					}

					[Token(Token = "0x6002D6A")]
					[Address(RVA = "0x2A92F0C", Offset = "0x2A92F0C", VA = "0x2A92F0C", Slot = "15")]
					public override Builder MergeFrom(ICodedInputStream input, ExtensionRegistry extensionRegistry)
					{
						return null;
					}

					[Token(Token = "0x6002D6E")]
					[Address(RVA = "0x2A933DC", Offset = "0x2A933DC", VA = "0x2A933DC")]
					public Builder SetTimestamp(long value)
					{
						return null;
					}

					[Token(Token = "0x6002D6F")]
					[Address(RVA = "0x2A93424", Offset = "0x2A93424", VA = "0x2A93424")]
					public Builder ClearTimestamp()
					{
						return null;
					}

					[Token(Token = "0x6002D73")]
					[Address(RVA = "0x2A9349C", Offset = "0x2A9349C", VA = "0x2A9349C")]
					public Builder SetX(float value)
					{
						return null;
					}

					[Token(Token = "0x6002D74")]
					[Address(RVA = "0x2A934EC", Offset = "0x2A934EC", VA = "0x2A934EC")]
					public Builder ClearX()
					{
						return null;
					}

					[Token(Token = "0x6002D78")]
					[Address(RVA = "0x2A93564", Offset = "0x2A93564", VA = "0x2A93564")]
					public Builder SetY(float value)
					{
						return null;
					}

					[Token(Token = "0x6002D79")]
					[Address(RVA = "0x2A935B4", Offset = "0x2A935B4", VA = "0x2A935B4")]
					public Builder ClearY()
					{
						return null;
					}

					[Token(Token = "0x6002D7D")]
					[Address(RVA = "0x2A9362C", Offset = "0x2A9362C", VA = "0x2A9362C")]
					public Builder SetZ(float value)
					{
						return null;
					}

					[Token(Token = "0x6002D7E")]
					[Address(RVA = "0x2A9367C", Offset = "0x2A9367C", VA = "0x2A9367C")]
					public Builder ClearZ()
					{
						return null;
					}
				}

				[Token(Token = "0x4002A46")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private static readonly GyroscopeEvent defaultInstance;

				[Token(Token = "0x4002A47")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				private static readonly string[] _gyroscopeEventFieldNames;

				[Token(Token = "0x4002A48")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private static readonly uint[] _gyroscopeEventFieldTags;

				[Token(Token = "0x4002A49")]
				public const int TimestampFieldNumber = 1;

				[Token(Token = "0x4002A4A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private bool hasTimestamp;

				[Token(Token = "0x4002A4B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private long timestamp_;

				[Token(Token = "0x4002A4C")]
				public const int XFieldNumber = 2;

				[Token(Token = "0x4002A4D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				private bool hasX;

				[Token(Token = "0x4002A4E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
				private float x_;

				[Token(Token = "0x4002A4F")]
				public const int YFieldNumber = 3;

				[Token(Token = "0x4002A50")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private bool hasY;

				[Token(Token = "0x4002A51")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
				private float y_;

				[Token(Token = "0x4002A52")]
				public const int ZFieldNumber = 4;

				[Token(Token = "0x4002A53")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				private bool hasZ;

				[Token(Token = "0x4002A54")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
				private float z_;

				[Token(Token = "0x4002A55")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
				private int memoizedSerializedSize;

				[Token(Token = "0x17000610")]
				public static GyroscopeEvent DefaultInstance
				{
					[Token(Token = "0x6002C5F")]
					[Address(RVA = "0x2A915F4", Offset = "0x2A915F4", VA = "0x2A915F4")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000611")]
				public override GyroscopeEvent DefaultInstanceForType
				{
					[Token(Token = "0x6002C60")]
					[Address(RVA = "0x2A9165C", Offset = "0x2A9165C", VA = "0x2A9165C", Slot = "9")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000612")]
				protected override GyroscopeEvent ThisMessage
				{
					[Token(Token = "0x6002C61")]
					[Address(RVA = "0x2A91700", Offset = "0x2A91700", VA = "0x2A91700", Slot = "17")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000613")]
				public bool HasTimestamp
				{
					[Token(Token = "0x6002C62")]
					[Address(RVA = "0x2A91704", Offset = "0x2A91704", VA = "0x2A91704")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x17000614")]
				public long Timestamp
				{
					[Token(Token = "0x6002C63")]
					[Address(RVA = "0x2A9170C", Offset = "0x2A9170C", VA = "0x2A9170C")]
					get
					{
						return default(long);
					}
				}

				[Token(Token = "0x17000615")]
				public bool HasX
				{
					[Token(Token = "0x6002C64")]
					[Address(RVA = "0x2A91714", Offset = "0x2A91714", VA = "0x2A91714")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x17000616")]
				public float X
				{
					[Token(Token = "0x6002C65")]
					[Address(RVA = "0x2A9171C", Offset = "0x2A9171C", VA = "0x2A9171C")]
					get
					{
						return default(float);
					}
				}

				[Token(Token = "0x17000617")]
				public bool HasY
				{
					[Token(Token = "0x6002C66")]
					[Address(RVA = "0x2A91724", Offset = "0x2A91724", VA = "0x2A91724")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x17000618")]
				public float Y
				{
					[Token(Token = "0x6002C67")]
					[Address(RVA = "0x2A9172C", Offset = "0x2A9172C", VA = "0x2A9172C")]
					get
					{
						return default(float);
					}
				}

				[Token(Token = "0x17000619")]
				public bool HasZ
				{
					[Token(Token = "0x6002C68")]
					[Address(RVA = "0x2A91734", Offset = "0x2A91734", VA = "0x2A91734")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x1700061A")]
				public float Z
				{
					[Token(Token = "0x6002C69")]
					[Address(RVA = "0x2A9173C", Offset = "0x2A9173C", VA = "0x2A9173C")]
					get
					{
						return default(float);
					}
				}

				[Token(Token = "0x1700061B")]
				public override bool IsInitialized
				{
					[Token(Token = "0x6002C6A")]
					[Address(RVA = "0x2A91744", Offset = "0x2A91744", VA = "0x2A91744", Slot = "10")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x1700061C")]
				public override int SerializedSize
				{
					[Token(Token = "0x6002C6C")]
					[Address(RVA = "0x2A91A58", Offset = "0x2A91A58", VA = "0x2A91A58", Slot = "11")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x6002C5E")]
				[Address(RVA = "0x2A9159C", Offset = "0x2A9159C", VA = "0x2A9159C")]
				private GyroscopeEvent()
				{
				}

				[Token(Token = "0x6002C6B")]
				[Address(RVA = "0x2A9174C", Offset = "0x2A9174C", VA = "0x2A9174C", Slot = "14")]
				public override void WriteTo(ICodedOutputStream output)
				{
				}

				[Token(Token = "0x6002C6D")]
				[Address(RVA = "0x2A91BBC", Offset = "0x2A91BBC", VA = "0x2A91BBC", Slot = "2")]
				public override int GetHashCode()
				{
					return default(int);
				}

				[Token(Token = "0x6002C6E")]
				[Address(RVA = "0x2A91C5C", Offset = "0x2A91C5C", VA = "0x2A91C5C", Slot = "0")]
				public override bool Equals(object obj)
				{
					return default(bool);
				}

				[Token(Token = "0x6002C6F")]
				[Address(RVA = "0x2A91DBC", Offset = "0x2A91DBC", VA = "0x2A91DBC", Slot = "15")]
				public override void PrintTo(TextWriter writer)
				{
				}

				[Token(Token = "0x6002C70")]
				[Address(RVA = "0x2A91F20", Offset = "0x2A91F20", VA = "0x2A91F20")]
				public static GyroscopeEvent ParseFrom(ByteString data)
				{
					return null;
				}

				[Token(Token = "0x6002C71")]
				[Address(RVA = "0x2A91FB0", Offset = "0x2A91FB0", VA = "0x2A91FB0")]
				public static GyroscopeEvent ParseFrom(ByteString data, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x6002C72")]
				[Address(RVA = "0x2A92050", Offset = "0x2A92050", VA = "0x2A92050")]
				public static GyroscopeEvent ParseFrom(byte[] data)
				{
					return null;
				}

				[Token(Token = "0x6002C73")]
				[Address(RVA = "0x2A920E0", Offset = "0x2A920E0", VA = "0x2A920E0")]
				public static GyroscopeEvent ParseFrom(byte[] data, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x6002C74")]
				[Address(RVA = "0x2A92180", Offset = "0x2A92180", VA = "0x2A92180")]
				public static GyroscopeEvent ParseFrom(Stream input)
				{
					return null;
				}

				[Token(Token = "0x6002C75")]
				[Address(RVA = "0x2A92210", Offset = "0x2A92210", VA = "0x2A92210")]
				public static GyroscopeEvent ParseFrom(Stream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x6002C76")]
				[Address(RVA = "0x2A922B0", Offset = "0x2A922B0", VA = "0x2A922B0")]
				public static GyroscopeEvent ParseDelimitedFrom(Stream input)
				{
					return null;
				}

				[Token(Token = "0x6002C77")]
				[Address(RVA = "0x2A92340", Offset = "0x2A92340", VA = "0x2A92340")]
				public static GyroscopeEvent ParseDelimitedFrom(Stream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x6002C78")]
				[Address(RVA = "0x2A923E0", Offset = "0x2A923E0", VA = "0x2A923E0")]
				public static GyroscopeEvent ParseFrom(ICodedInputStream input)
				{
					return null;
				}

				[Token(Token = "0x6002C79")]
				[Address(RVA = "0x2A92470", Offset = "0x2A92470", VA = "0x2A92470")]
				public static GyroscopeEvent ParseFrom(ICodedInputStream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x6002C7A")]
				[Address(RVA = "0x2A92510", Offset = "0x2A92510", VA = "0x2A92510")]
				private GyroscopeEvent MakeReadOnly()
				{
					return null;
				}

				[Token(Token = "0x6002C7B")]
				[Address(RVA = "0x2A8BEC0", Offset = "0x2A8BEC0", VA = "0x2A8BEC0")]
				public static Builder CreateBuilder()
				{
					return null;
				}

				[Token(Token = "0x6002C7C")]
				[Address(RVA = "0x2A925EC", Offset = "0x2A925EC", VA = "0x2A925EC", Slot = "13")]
				public override Builder ToBuilder()
				{
					return null;
				}

				[Token(Token = "0x6002C7D")]
				[Address(RVA = "0x2A92650", Offset = "0x2A92650", VA = "0x2A92650", Slot = "12")]
				public override Builder CreateBuilderForType()
				{
					return null;
				}

				[Token(Token = "0x6002C7E")]
				[Address(RVA = "0x2A8C4E4", Offset = "0x2A8C4E4", VA = "0x2A8C4E4")]
				public static Builder CreateBuilder(GyroscopeEvent prototype)
				{
					return null;
				}

				[Token(Token = "0x6002C7F")]
				[Address(RVA = "0x2A92720", Offset = "0x2A92720", VA = "0x2A92720")]
				static GyroscopeEvent()
				{
				}
			}

			[Token(Token = "0x200079D")]
			[DebuggerNonUserCode]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146ACAC", Offset = "0x146ACAC")]
			[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x146ACAC", Offset = "0x146ACAC")]
			public sealed class AccelerometerEvent : GeneratedMessageLite<AccelerometerEvent, AccelerometerEvent.Builder>
			{
				[Token(Token = "0x20007B1")]
				[DebuggerNonUserCode]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146AFBC", Offset = "0x146AFBC")]
				[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x146AFBC", Offset = "0x146AFBC")]
				public sealed class Builder : GeneratedBuilderLite<AccelerometerEvent, Builder>
				{
					[Token(Token = "0x4002AD2")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
					private bool resultIsReadOnly;

					[Token(Token = "0x4002AD3")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
					private AccelerometerEvent result;

					[Token(Token = "0x1700066F")]
					protected override Builder ThisBuilder
					{
						[Token(Token = "0x6002D7F")]
						[Address(RVA = "0x2A8E118", Offset = "0x2A8E118", VA = "0x2A8E118", Slot = "7")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x17000670")]
					public override bool IsInitialized
					{
						[Token(Token = "0x6002D83")]
						[Address(RVA = "0x2A8E1BC", Offset = "0x2A8E1BC", VA = "0x2A8E1BC", Slot = "8")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x17000671")]
					protected override AccelerometerEvent MessageBeingBuilt
					{
						[Token(Token = "0x6002D84")]
						[Address(RVA = "0x2A8E1DC", Offset = "0x2A8E1DC", VA = "0x2A8E1DC", Slot = "25")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x17000672")]
					public override AccelerometerEvent DefaultInstanceForType
					{
						[Token(Token = "0x6002D87")]
						[Address(RVA = "0x2A8E354", Offset = "0x2A8E354", VA = "0x2A8E354", Slot = "9")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x17000673")]
					public bool HasTimestamp
					{
						[Token(Token = "0x6002D8D")]
						[Address(RVA = "0x2A8EB64", Offset = "0x2A8EB64", VA = "0x2A8EB64")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x17000674")]
					public long Timestamp
					{
						[Token(Token = "0x6002D8E")]
						[Address(RVA = "0x2A8EB80", Offset = "0x2A8EB80", VA = "0x2A8EB80")]
						get
						{
							return default(long);
						}
						[Token(Token = "0x6002D8F")]
						[Address(RVA = "0x2A8E5F4", Offset = "0x2A8E5F4", VA = "0x2A8E5F4")]
						set
						{
						}
					}

					[Token(Token = "0x17000675")]
					public bool HasX
					{
						[Token(Token = "0x6002D92")]
						[Address(RVA = "0x2A8EC24", Offset = "0x2A8EC24", VA = "0x2A8EC24")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x17000676")]
					public float X
					{
						[Token(Token = "0x6002D93")]
						[Address(RVA = "0x2A8EC40", Offset = "0x2A8EC40", VA = "0x2A8EC40")]
						get
						{
							return default(float);
						}
						[Token(Token = "0x6002D94")]
						[Address(RVA = "0x2A8E5F8", Offset = "0x2A8E5F8", VA = "0x2A8E5F8")]
						set
						{
						}
					}

					[Token(Token = "0x17000677")]
					public bool HasY
					{
						[Token(Token = "0x6002D97")]
						[Address(RVA = "0x2A8ECEC", Offset = "0x2A8ECEC", VA = "0x2A8ECEC")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x17000678")]
					public float Y
					{
						[Token(Token = "0x6002D98")]
						[Address(RVA = "0x2A8ED08", Offset = "0x2A8ED08", VA = "0x2A8ED08")]
						get
						{
							return default(float);
						}
						[Token(Token = "0x6002D99")]
						[Address(RVA = "0x2A8E5FC", Offset = "0x2A8E5FC", VA = "0x2A8E5FC")]
						set
						{
						}
					}

					[Token(Token = "0x17000679")]
					public bool HasZ
					{
						[Token(Token = "0x6002D9C")]
						[Address(RVA = "0x2A8EDB4", Offset = "0x2A8EDB4", VA = "0x2A8EDB4")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x1700067A")]
					public float Z
					{
						[Token(Token = "0x6002D9D")]
						[Address(RVA = "0x2A8EDD0", Offset = "0x2A8EDD0", VA = "0x2A8EDD0")]
						get
						{
							return default(float);
						}
						[Token(Token = "0x6002D9E")]
						[Address(RVA = "0x2A8E600", Offset = "0x2A8E600", VA = "0x2A8E600")]
						set
						{
						}
					}

					[Token(Token = "0x6002D80")]
					[Address(RVA = "0x2A8DCD4", Offset = "0x2A8DCD4", VA = "0x2A8DCD4")]
					public Builder()
					{
					}

					[Token(Token = "0x6002D81")]
					[Address(RVA = "0x2A8DE68", Offset = "0x2A8DE68", VA = "0x2A8DE68")]
					internal Builder(AccelerometerEvent cloneFrom)
					{
					}

					[Token(Token = "0x6002D82")]
					[Address(RVA = "0x2A8E11C", Offset = "0x2A8E11C", VA = "0x2A8E11C")]
					private AccelerometerEvent PrepareBuilder()
					{
						return null;
					}

					[Token(Token = "0x6002D85")]
					[Address(RVA = "0x2A8E1E0", Offset = "0x2A8E1E0", VA = "0x2A8E1E0", Slot = "10")]
					public override Builder Clear()
					{
						return null;
					}

					[Token(Token = "0x6002D86")]
					[Address(RVA = "0x2A8E2A8", Offset = "0x2A8E2A8", VA = "0x2A8E2A8", Slot = "11")]
					public override Builder Clone()
					{
						return null;
					}

					[Token(Token = "0x6002D88")]
					[Address(RVA = "0x2A8E3F8", Offset = "0x2A8E3F8", VA = "0x2A8E3F8", Slot = "13")]
					public override AccelerometerEvent BuildPartial()
					{
						return null;
					}

					[Token(Token = "0x6002D89")]
					[Address(RVA = "0x2A8E42C", Offset = "0x2A8E42C", VA = "0x2A8E42C", Slot = "14")]
					public override Builder MergeFrom(IMessageLite other)
					{
						return null;
					}

					[Token(Token = "0x6002D8A")]
					[Address(RVA = "0x2A8E4D4", Offset = "0x2A8E4D4", VA = "0x2A8E4D4", Slot = "26")]
					public override Builder MergeFrom(AccelerometerEvent other)
					{
						return null;
					}

					[Token(Token = "0x6002D8B")]
					[Address(RVA = "0x2A8E604", Offset = "0x2A8E604", VA = "0x2A8E604", Slot = "16")]
					public override Builder MergeFrom(ICodedInputStream input)
					{
						return null;
					}

					[Token(Token = "0x6002D8C")]
					[Address(RVA = "0x2A8E6CC", Offset = "0x2A8E6CC", VA = "0x2A8E6CC", Slot = "15")]
					public override Builder MergeFrom(ICodedInputStream input, ExtensionRegistry extensionRegistry)
					{
						return null;
					}

					[Token(Token = "0x6002D90")]
					[Address(RVA = "0x2A8EB9C", Offset = "0x2A8EB9C", VA = "0x2A8EB9C")]
					public Builder SetTimestamp(long value)
					{
						return null;
					}

					[Token(Token = "0x6002D91")]
					[Address(RVA = "0x2A8EBE4", Offset = "0x2A8EBE4", VA = "0x2A8EBE4")]
					public Builder ClearTimestamp()
					{
						return null;
					}

					[Token(Token = "0x6002D95")]
					[Address(RVA = "0x2A8EC5C", Offset = "0x2A8EC5C", VA = "0x2A8EC5C")]
					public Builder SetX(float value)
					{
						return null;
					}

					[Token(Token = "0x6002D96")]
					[Address(RVA = "0x2A8ECAC", Offset = "0x2A8ECAC", VA = "0x2A8ECAC")]
					public Builder ClearX()
					{
						return null;
					}

					[Token(Token = "0x6002D9A")]
					[Address(RVA = "0x2A8ED24", Offset = "0x2A8ED24", VA = "0x2A8ED24")]
					public Builder SetY(float value)
					{
						return null;
					}

					[Token(Token = "0x6002D9B")]
					[Address(RVA = "0x2A8ED74", Offset = "0x2A8ED74", VA = "0x2A8ED74")]
					public Builder ClearY()
					{
						return null;
					}

					[Token(Token = "0x6002D9F")]
					[Address(RVA = "0x2A8EDEC", Offset = "0x2A8EDEC", VA = "0x2A8EDEC")]
					public Builder SetZ(float value)
					{
						return null;
					}

					[Token(Token = "0x6002DA0")]
					[Address(RVA = "0x2A8EE3C", Offset = "0x2A8EE3C", VA = "0x2A8EE3C")]
					public Builder ClearZ()
					{
						return null;
					}
				}

				[Token(Token = "0x4002A56")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private static readonly AccelerometerEvent defaultInstance;

				[Token(Token = "0x4002A57")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				private static readonly string[] _accelerometerEventFieldNames;

				[Token(Token = "0x4002A58")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private static readonly uint[] _accelerometerEventFieldTags;

				[Token(Token = "0x4002A59")]
				public const int TimestampFieldNumber = 1;

				[Token(Token = "0x4002A5A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private bool hasTimestamp;

				[Token(Token = "0x4002A5B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private long timestamp_;

				[Token(Token = "0x4002A5C")]
				public const int XFieldNumber = 2;

				[Token(Token = "0x4002A5D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				private bool hasX;

				[Token(Token = "0x4002A5E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
				private float x_;

				[Token(Token = "0x4002A5F")]
				public const int YFieldNumber = 3;

				[Token(Token = "0x4002A60")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private bool hasY;

				[Token(Token = "0x4002A61")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
				private float y_;

				[Token(Token = "0x4002A62")]
				public const int ZFieldNumber = 4;

				[Token(Token = "0x4002A63")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				private bool hasZ;

				[Token(Token = "0x4002A64")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
				private float z_;

				[Token(Token = "0x4002A65")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
				private int memoizedSerializedSize;

				[Token(Token = "0x1700061D")]
				public static AccelerometerEvent DefaultInstance
				{
					[Token(Token = "0x6002C81")]
					[Address(RVA = "0x2A8CDB4", Offset = "0x2A8CDB4", VA = "0x2A8CDB4")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x1700061E")]
				public override AccelerometerEvent DefaultInstanceForType
				{
					[Token(Token = "0x6002C82")]
					[Address(RVA = "0x2A8CE1C", Offset = "0x2A8CE1C", VA = "0x2A8CE1C", Slot = "9")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x1700061F")]
				protected override AccelerometerEvent ThisMessage
				{
					[Token(Token = "0x6002C83")]
					[Address(RVA = "0x2A8CEC0", Offset = "0x2A8CEC0", VA = "0x2A8CEC0", Slot = "17")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000620")]
				public bool HasTimestamp
				{
					[Token(Token = "0x6002C84")]
					[Address(RVA = "0x2A8CEC4", Offset = "0x2A8CEC4", VA = "0x2A8CEC4")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x17000621")]
				public long Timestamp
				{
					[Token(Token = "0x6002C85")]
					[Address(RVA = "0x2A8CECC", Offset = "0x2A8CECC", VA = "0x2A8CECC")]
					get
					{
						return default(long);
					}
				}

				[Token(Token = "0x17000622")]
				public bool HasX
				{
					[Token(Token = "0x6002C86")]
					[Address(RVA = "0x2A8CED4", Offset = "0x2A8CED4", VA = "0x2A8CED4")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x17000623")]
				public float X
				{
					[Token(Token = "0x6002C87")]
					[Address(RVA = "0x2A8CEDC", Offset = "0x2A8CEDC", VA = "0x2A8CEDC")]
					get
					{
						return default(float);
					}
				}

				[Token(Token = "0x17000624")]
				public bool HasY
				{
					[Token(Token = "0x6002C88")]
					[Address(RVA = "0x2A8CEE4", Offset = "0x2A8CEE4", VA = "0x2A8CEE4")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x17000625")]
				public float Y
				{
					[Token(Token = "0x6002C89")]
					[Address(RVA = "0x2A8CEEC", Offset = "0x2A8CEEC", VA = "0x2A8CEEC")]
					get
					{
						return default(float);
					}
				}

				[Token(Token = "0x17000626")]
				public bool HasZ
				{
					[Token(Token = "0x6002C8A")]
					[Address(RVA = "0x2A8CEF4", Offset = "0x2A8CEF4", VA = "0x2A8CEF4")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x17000627")]
				public float Z
				{
					[Token(Token = "0x6002C8B")]
					[Address(RVA = "0x2A8CEFC", Offset = "0x2A8CEFC", VA = "0x2A8CEFC")]
					get
					{
						return default(float);
					}
				}

				[Token(Token = "0x17000628")]
				public override bool IsInitialized
				{
					[Token(Token = "0x6002C8C")]
					[Address(RVA = "0x2A8CF04", Offset = "0x2A8CF04", VA = "0x2A8CF04", Slot = "10")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x17000629")]
				public override int SerializedSize
				{
					[Token(Token = "0x6002C8E")]
					[Address(RVA = "0x2A8D218", Offset = "0x2A8D218", VA = "0x2A8D218", Slot = "11")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x6002C80")]
				[Address(RVA = "0x2A8CD5C", Offset = "0x2A8CD5C", VA = "0x2A8CD5C")]
				private AccelerometerEvent()
				{
				}

				[Token(Token = "0x6002C8D")]
				[Address(RVA = "0x2A8CF0C", Offset = "0x2A8CF0C", VA = "0x2A8CF0C", Slot = "14")]
				public override void WriteTo(ICodedOutputStream output)
				{
				}

				[Token(Token = "0x6002C8F")]
				[Address(RVA = "0x2A8D37C", Offset = "0x2A8D37C", VA = "0x2A8D37C", Slot = "2")]
				public override int GetHashCode()
				{
					return default(int);
				}

				[Token(Token = "0x6002C90")]
				[Address(RVA = "0x2A8D41C", Offset = "0x2A8D41C", VA = "0x2A8D41C", Slot = "0")]
				public override bool Equals(object obj)
				{
					return default(bool);
				}

				[Token(Token = "0x6002C91")]
				[Address(RVA = "0x2A8D57C", Offset = "0x2A8D57C", VA = "0x2A8D57C", Slot = "15")]
				public override void PrintTo(TextWriter writer)
				{
				}

				[Token(Token = "0x6002C92")]
				[Address(RVA = "0x2A8D6E0", Offset = "0x2A8D6E0", VA = "0x2A8D6E0")]
				public static AccelerometerEvent ParseFrom(ByteString data)
				{
					return null;
				}

				[Token(Token = "0x6002C93")]
				[Address(RVA = "0x2A8D770", Offset = "0x2A8D770", VA = "0x2A8D770")]
				public static AccelerometerEvent ParseFrom(ByteString data, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x6002C94")]
				[Address(RVA = "0x2A8D810", Offset = "0x2A8D810", VA = "0x2A8D810")]
				public static AccelerometerEvent ParseFrom(byte[] data)
				{
					return null;
				}

				[Token(Token = "0x6002C95")]
				[Address(RVA = "0x2A8D8A0", Offset = "0x2A8D8A0", VA = "0x2A8D8A0")]
				public static AccelerometerEvent ParseFrom(byte[] data, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x6002C96")]
				[Address(RVA = "0x2A8D940", Offset = "0x2A8D940", VA = "0x2A8D940")]
				public static AccelerometerEvent ParseFrom(Stream input)
				{
					return null;
				}

				[Token(Token = "0x6002C97")]
				[Address(RVA = "0x2A8D9D0", Offset = "0x2A8D9D0", VA = "0x2A8D9D0")]
				public static AccelerometerEvent ParseFrom(Stream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x6002C98")]
				[Address(RVA = "0x2A8DA70", Offset = "0x2A8DA70", VA = "0x2A8DA70")]
				public static AccelerometerEvent ParseDelimitedFrom(Stream input)
				{
					return null;
				}

				[Token(Token = "0x6002C99")]
				[Address(RVA = "0x2A8DB00", Offset = "0x2A8DB00", VA = "0x2A8DB00")]
				public static AccelerometerEvent ParseDelimitedFrom(Stream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x6002C9A")]
				[Address(RVA = "0x2A8DBA0", Offset = "0x2A8DBA0", VA = "0x2A8DBA0")]
				public static AccelerometerEvent ParseFrom(ICodedInputStream input)
				{
					return null;
				}

				[Token(Token = "0x6002C9B")]
				[Address(RVA = "0x2A8DC30", Offset = "0x2A8DC30", VA = "0x2A8DC30")]
				public static AccelerometerEvent ParseFrom(ICodedInputStream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x6002C9C")]
				[Address(RVA = "0x2A8DCD0", Offset = "0x2A8DCD0", VA = "0x2A8DCD0")]
				private AccelerometerEvent MakeReadOnly()
				{
					return null;
				}

				[Token(Token = "0x6002C9D")]
				[Address(RVA = "0x2A8BF34", Offset = "0x2A8BF34", VA = "0x2A8BF34")]
				public static Builder CreateBuilder()
				{
					return null;
				}

				[Token(Token = "0x6002C9E")]
				[Address(RVA = "0x2A8DDAC", Offset = "0x2A8DDAC", VA = "0x2A8DDAC", Slot = "13")]
				public override Builder ToBuilder()
				{
					return null;
				}

				[Token(Token = "0x6002C9F")]
				[Address(RVA = "0x2A8DE10", Offset = "0x2A8DE10", VA = "0x2A8DE10", Slot = "12")]
				public override Builder CreateBuilderForType()
				{
					return null;
				}

				[Token(Token = "0x6002CA0")]
				[Address(RVA = "0x2A8C6F0", Offset = "0x2A8C6F0", VA = "0x2A8C6F0")]
				public static Builder CreateBuilder(AccelerometerEvent prototype)
				{
					return null;
				}

				[Token(Token = "0x6002CA1")]
				[Address(RVA = "0x2A8DEE0", Offset = "0x2A8DEE0", VA = "0x2A8DEE0")]
				static AccelerometerEvent()
				{
				}
			}

			[Token(Token = "0x200079E")]
			[DebuggerNonUserCode]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146AD1C", Offset = "0x146AD1C")]
			[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x146AD1C", Offset = "0x146AD1C")]
			public sealed class DepthMapEvent : GeneratedMessageLite<DepthMapEvent, DepthMapEvent.Builder>
			{
				[Token(Token = "0x20007B2")]
				[DebuggerNonUserCode]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146B02C", Offset = "0x146B02C")]
				[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x146B02C", Offset = "0x146B02C")]
				public sealed class Builder : GeneratedBuilderLite<DepthMapEvent, Builder>
				{
					[Token(Token = "0x4002AD4")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
					private bool resultIsReadOnly;

					[Token(Token = "0x4002AD5")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
					private DepthMapEvent result;

					[Token(Token = "0x1700067B")]
					protected override Builder ThisBuilder
					{
						[Token(Token = "0x6002DA1")]
						[Address(RVA = "0x2A90664", Offset = "0x2A90664", VA = "0x2A90664", Slot = "7")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x1700067C")]
					public override bool IsInitialized
					{
						[Token(Token = "0x6002DA5")]
						[Address(RVA = "0x2A90708", Offset = "0x2A90708", VA = "0x2A90708", Slot = "8")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x1700067D")]
					protected override DepthMapEvent MessageBeingBuilt
					{
						[Token(Token = "0x6002DA6")]
						[Address(RVA = "0x2A90728", Offset = "0x2A90728", VA = "0x2A90728", Slot = "25")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x1700067E")]
					public override DepthMapEvent DefaultInstanceForType
					{
						[Token(Token = "0x6002DA9")]
						[Address(RVA = "0x2A908A0", Offset = "0x2A908A0", VA = "0x2A908A0", Slot = "9")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x1700067F")]
					public bool HasTimestamp
					{
						[Token(Token = "0x6002DAF")]
						[Address(RVA = "0x2A9110C", Offset = "0x2A9110C", VA = "0x2A9110C")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x17000680")]
					public long Timestamp
					{
						[Token(Token = "0x6002DB0")]
						[Address(RVA = "0x2A91128", Offset = "0x2A91128", VA = "0x2A91128")]
						get
						{
							return default(long);
						}
						[Token(Token = "0x6002DB1")]
						[Address(RVA = "0x2A90B6C", Offset = "0x2A90B6C", VA = "0x2A90B6C")]
						set
						{
						}
					}

					[Token(Token = "0x17000681")]
					public bool HasWidth
					{
						[Token(Token = "0x6002DB4")]
						[Address(RVA = "0x2A911CC", Offset = "0x2A911CC", VA = "0x2A911CC")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x17000682")]
					public int Width
					{
						[Token(Token = "0x6002DB5")]
						[Address(RVA = "0x2A911E8", Offset = "0x2A911E8", VA = "0x2A911E8")]
						get
						{
							return default(int);
						}
						[Token(Token = "0x6002DB6")]
						[Address(RVA = "0x2A90B70", Offset = "0x2A90B70", VA = "0x2A90B70")]
						set
						{
						}
					}

					[Token(Token = "0x17000683")]
					public bool HasHeight
					{
						[Token(Token = "0x6002DB9")]
						[Address(RVA = "0x2A9128C", Offset = "0x2A9128C", VA = "0x2A9128C")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x17000684")]
					public int Height
					{
						[Token(Token = "0x6002DBA")]
						[Address(RVA = "0x2A912A8", Offset = "0x2A912A8", VA = "0x2A912A8")]
						get
						{
							return default(int);
						}
						[Token(Token = "0x6002DBB")]
						[Address(RVA = "0x2A90B74", Offset = "0x2A90B74", VA = "0x2A90B74")]
						set
						{
						}
					}

					[Token(Token = "0x17000685")]
					public IPopsicleList<float> ZDistancesList
					{
						[Token(Token = "0x6002DBE")]
						[Address(RVA = "0x2A9134C", Offset = "0x2A9134C", VA = "0x2A9134C")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x17000686")]
					public int ZDistancesCount
					{
						[Token(Token = "0x6002DBF")]
						[Address(RVA = "0x2A9136C", Offset = "0x2A9136C", VA = "0x2A9136C")]
						get
						{
							return default(int);
						}
					}

					[Token(Token = "0x6002DA2")]
					[Address(RVA = "0x2A90218", Offset = "0x2A90218", VA = "0x2A90218")]
					public Builder()
					{
					}

					[Token(Token = "0x6002DA3")]
					[Address(RVA = "0x2A903AC", Offset = "0x2A903AC", VA = "0x2A903AC")]
					internal Builder(DepthMapEvent cloneFrom)
					{
					}

					[Token(Token = "0x6002DA4")]
					[Address(RVA = "0x2A90668", Offset = "0x2A90668", VA = "0x2A90668")]
					private DepthMapEvent PrepareBuilder()
					{
						return null;
					}

					[Token(Token = "0x6002DA7")]
					[Address(RVA = "0x2A9072C", Offset = "0x2A9072C", VA = "0x2A9072C", Slot = "10")]
					public override Builder Clear()
					{
						return null;
					}

					[Token(Token = "0x6002DA8")]
					[Address(RVA = "0x2A907F4", Offset = "0x2A907F4", VA = "0x2A907F4", Slot = "11")]
					public override Builder Clone()
					{
						return null;
					}

					[Token(Token = "0x6002DAA")]
					[Address(RVA = "0x2A90944", Offset = "0x2A90944", VA = "0x2A90944", Slot = "13")]
					public override DepthMapEvent BuildPartial()
					{
						return null;
					}

					[Token(Token = "0x6002DAB")]
					[Address(RVA = "0x2A90978", Offset = "0x2A90978", VA = "0x2A90978", Slot = "14")]
					public override Builder MergeFrom(IMessageLite other)
					{
						return null;
					}

					[Token(Token = "0x6002DAC")]
					[Address(RVA = "0x2A90A20", Offset = "0x2A90A20", VA = "0x2A90A20", Slot = "26")]
					public override Builder MergeFrom(DepthMapEvent other)
					{
						return null;
					}

					[Token(Token = "0x6002DAD")]
					[Address(RVA = "0x2A90B78", Offset = "0x2A90B78", VA = "0x2A90B78", Slot = "16")]
					public override Builder MergeFrom(ICodedInputStream input)
					{
						return null;
					}

					[Token(Token = "0x6002DAE")]
					[Address(RVA = "0x2A90C40", Offset = "0x2A90C40", VA = "0x2A90C40", Slot = "15")]
					public override Builder MergeFrom(ICodedInputStream input, ExtensionRegistry extensionRegistry)
					{
						return null;
					}

					[Token(Token = "0x6002DB2")]
					[Address(RVA = "0x2A91144", Offset = "0x2A91144", VA = "0x2A91144")]
					public Builder SetTimestamp(long value)
					{
						return null;
					}

					[Token(Token = "0x6002DB3")]
					[Address(RVA = "0x2A9118C", Offset = "0x2A9118C", VA = "0x2A9118C")]
					public Builder ClearTimestamp()
					{
						return null;
					}

					[Token(Token = "0x6002DB7")]
					[Address(RVA = "0x2A91204", Offset = "0x2A91204", VA = "0x2A91204")]
					public Builder SetWidth(int value)
					{
						return null;
					}

					[Token(Token = "0x6002DB8")]
					[Address(RVA = "0x2A9124C", Offset = "0x2A9124C", VA = "0x2A9124C")]
					public Builder ClearWidth()
					{
						return null;
					}

					[Token(Token = "0x6002DBC")]
					[Address(RVA = "0x2A912C4", Offset = "0x2A912C4", VA = "0x2A912C4")]
					public Builder SetHeight(int value)
					{
						return null;
					}

					[Token(Token = "0x6002DBD")]
					[Address(RVA = "0x2A9130C", Offset = "0x2A9130C", VA = "0x2A9130C")]
					public Builder ClearHeight()
					{
						return null;
					}

					[Token(Token = "0x6002DC0")]
					[Address(RVA = "0x2A91384", Offset = "0x2A91384", VA = "0x2A91384")]
					public float GetZDistances(int index)
					{
						return default(float);
					}

					[Token(Token = "0x6002DC1")]
					[Address(RVA = "0x2A9139C", Offset = "0x2A9139C", VA = "0x2A9139C")]
					public Builder SetZDistances(int index, float value)
					{
						return null;
					}

					[Token(Token = "0x6002DC2")]
					[Address(RVA = "0x2A9142C", Offset = "0x2A9142C", VA = "0x2A9142C")]
					public Builder AddZDistances(float value)
					{
						return null;
					}

					[Token(Token = "0x6002DC3")]
					[Address(RVA = "0x2A914AC", Offset = "0x2A914AC", VA = "0x2A914AC")]
					public Builder AddRangeZDistances(IEnumerable<float> values)
					{
						return null;
					}

					[Token(Token = "0x6002DC4")]
					[Address(RVA = "0x2A9152C", Offset = "0x2A9152C", VA = "0x2A9152C")]
					public Builder ClearZDistances()
					{
						return null;
					}
				}

				[Token(Token = "0x4002A66")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private static readonly DepthMapEvent defaultInstance;

				[Token(Token = "0x4002A67")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				private static readonly string[] _depthMapEventFieldNames;

				[Token(Token = "0x4002A68")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private static readonly uint[] _depthMapEventFieldTags;

				[Token(Token = "0x4002A69")]
				public const int TimestampFieldNumber = 1;

				[Token(Token = "0x4002A6A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private bool hasTimestamp;

				[Token(Token = "0x4002A6B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private long timestamp_;

				[Token(Token = "0x4002A6C")]
				public const int WidthFieldNumber = 2;

				[Token(Token = "0x4002A6D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				private bool hasWidth;

				[Token(Token = "0x4002A6E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
				private int width_;

				[Token(Token = "0x4002A6F")]
				public const int HeightFieldNumber = 3;

				[Token(Token = "0x4002A70")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private bool hasHeight;

				[Token(Token = "0x4002A71")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
				private int height_;

				[Token(Token = "0x4002A72")]
				public const int ZDistancesFieldNumber = 4;

				[Token(Token = "0x4002A73")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				private int zDistancesMemoizedSerializedSize;

				[Token(Token = "0x4002A74")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
				private PopsicleList<float> zDistances_;

				[Token(Token = "0x4002A75")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
				private int memoizedSerializedSize;

				[Token(Token = "0x1700062A")]
				public static DepthMapEvent DefaultInstance
				{
					[Token(Token = "0x6002CA3")]
					[Address(RVA = "0x2A8EF08", Offset = "0x2A8EF08", VA = "0x2A8EF08")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x1700062B")]
				public override DepthMapEvent DefaultInstanceForType
				{
					[Token(Token = "0x6002CA4")]
					[Address(RVA = "0x2A8EF70", Offset = "0x2A8EF70", VA = "0x2A8EF70", Slot = "9")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x1700062C")]
				protected override DepthMapEvent ThisMessage
				{
					[Token(Token = "0x6002CA5")]
					[Address(RVA = "0x2A8F014", Offset = "0x2A8F014", VA = "0x2A8F014", Slot = "17")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x1700062D")]
				public bool HasTimestamp
				{
					[Token(Token = "0x6002CA6")]
					[Address(RVA = "0x2A8F018", Offset = "0x2A8F018", VA = "0x2A8F018")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x1700062E")]
				public long Timestamp
				{
					[Token(Token = "0x6002CA7")]
					[Address(RVA = "0x2A8F020", Offset = "0x2A8F020", VA = "0x2A8F020")]
					get
					{
						return default(long);
					}
				}

				[Token(Token = "0x1700062F")]
				public bool HasWidth
				{
					[Token(Token = "0x6002CA8")]
					[Address(RVA = "0x2A8F028", Offset = "0x2A8F028", VA = "0x2A8F028")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x17000630")]
				public int Width
				{
					[Token(Token = "0x6002CA9")]
					[Address(RVA = "0x2A8F030", Offset = "0x2A8F030", VA = "0x2A8F030")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x17000631")]
				public bool HasHeight
				{
					[Token(Token = "0x6002CAA")]
					[Address(RVA = "0x2A8F038", Offset = "0x2A8F038", VA = "0x2A8F038")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x17000632")]
				public int Height
				{
					[Token(Token = "0x6002CAB")]
					[Address(RVA = "0x2A8F040", Offset = "0x2A8F040", VA = "0x2A8F040")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x17000633")]
				public IList<float> ZDistancesList
				{
					[Token(Token = "0x6002CAC")]
					[Address(RVA = "0x2A8F048", Offset = "0x2A8F048", VA = "0x2A8F048")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000634")]
				public int ZDistancesCount
				{
					[Token(Token = "0x6002CAD")]
					[Address(RVA = "0x2A8F098", Offset = "0x2A8F098", VA = "0x2A8F098")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x17000635")]
				public override bool IsInitialized
				{
					[Token(Token = "0x6002CAF")]
					[Address(RVA = "0x2A8F158", Offset = "0x2A8F158", VA = "0x2A8F158", Slot = "10")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x17000636")]
				public override int SerializedSize
				{
					[Token(Token = "0x6002CB1")]
					[Address(RVA = "0x2A8F48C", Offset = "0x2A8F48C", VA = "0x2A8F48C", Slot = "11")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x6002CA2")]
				[Address(RVA = "0x2A8EE7C", Offset = "0x2A8EE7C", VA = "0x2A8EE7C")]
				private DepthMapEvent()
				{
				}

				[Token(Token = "0x6002CAE")]
				[Address(RVA = "0x2A8F0F0", Offset = "0x2A8F0F0", VA = "0x2A8F0F0")]
				public float GetZDistances(int index)
				{
					return default(float);
				}

				[Token(Token = "0x6002CB0")]
				[Address(RVA = "0x2A8F160", Offset = "0x2A8F160", VA = "0x2A8F160", Slot = "14")]
				public override void WriteTo(ICodedOutputStream output)
				{
				}

				[Token(Token = "0x6002CB2")]
				[Address(RVA = "0x2A8F624", Offset = "0x2A8F624", VA = "0x2A8F624", Slot = "2")]
				public override int GetHashCode()
				{
					return default(int);
				}

				[Token(Token = "0x6002CB3")]
				[Address(RVA = "0x2A8F8A4", Offset = "0x2A8F8A4", VA = "0x2A8F8A4", Slot = "0")]
				public override bool Equals(object obj)
				{
					return default(bool);
				}

				[Token(Token = "0x6002CB4")]
				[Address(RVA = "0x2A8FA7C", Offset = "0x2A8FA7C", VA = "0x2A8FA7C", Slot = "15")]
				public override void PrintTo(TextWriter writer)
				{
				}

				[Token(Token = "0x6002CB5")]
				[Address(RVA = "0x2A8FBC8", Offset = "0x2A8FBC8", VA = "0x2A8FBC8")]
				public static DepthMapEvent ParseFrom(ByteString data)
				{
					return null;
				}

				[Token(Token = "0x6002CB6")]
				[Address(RVA = "0x2A8FC58", Offset = "0x2A8FC58", VA = "0x2A8FC58")]
				public static DepthMapEvent ParseFrom(ByteString data, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x6002CB7")]
				[Address(RVA = "0x2A8FCF8", Offset = "0x2A8FCF8", VA = "0x2A8FCF8")]
				public static DepthMapEvent ParseFrom(byte[] data)
				{
					return null;
				}

				[Token(Token = "0x6002CB8")]
				[Address(RVA = "0x2A8FD88", Offset = "0x2A8FD88", VA = "0x2A8FD88")]
				public static DepthMapEvent ParseFrom(byte[] data, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x6002CB9")]
				[Address(RVA = "0x2A8FE28", Offset = "0x2A8FE28", VA = "0x2A8FE28")]
				public static DepthMapEvent ParseFrom(Stream input)
				{
					return null;
				}

				[Token(Token = "0x6002CBA")]
				[Address(RVA = "0x2A8FEB8", Offset = "0x2A8FEB8", VA = "0x2A8FEB8")]
				public static DepthMapEvent ParseFrom(Stream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x6002CBB")]
				[Address(RVA = "0x2A8FF58", Offset = "0x2A8FF58", VA = "0x2A8FF58")]
				public static DepthMapEvent ParseDelimitedFrom(Stream input)
				{
					return null;
				}

				[Token(Token = "0x6002CBC")]
				[Address(RVA = "0x2A8FFE8", Offset = "0x2A8FFE8", VA = "0x2A8FFE8")]
				public static DepthMapEvent ParseDelimitedFrom(Stream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x6002CBD")]
				[Address(RVA = "0x2A90088", Offset = "0x2A90088", VA = "0x2A90088")]
				public static DepthMapEvent ParseFrom(ICodedInputStream input)
				{
					return null;
				}

				[Token(Token = "0x6002CBE")]
				[Address(RVA = "0x2A90118", Offset = "0x2A90118", VA = "0x2A90118")]
				public static DepthMapEvent ParseFrom(ICodedInputStream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x6002CBF")]
				[Address(RVA = "0x2A901B8", Offset = "0x2A901B8", VA = "0x2A901B8")]
				private DepthMapEvent MakeReadOnly()
				{
					return null;
				}

				[Token(Token = "0x6002CC0")]
				[Address(RVA = "0x2A8BFA8", Offset = "0x2A8BFA8", VA = "0x2A8BFA8")]
				public static Builder CreateBuilder()
				{
					return null;
				}

				[Token(Token = "0x6002CC1")]
				[Address(RVA = "0x2A902F0", Offset = "0x2A902F0", VA = "0x2A902F0", Slot = "13")]
				public override Builder ToBuilder()
				{
					return null;
				}

				[Token(Token = "0x6002CC2")]
				[Address(RVA = "0x2A90354", Offset = "0x2A90354", VA = "0x2A90354", Slot = "12")]
				public override Builder CreateBuilderForType()
				{
					return null;
				}

				[Token(Token = "0x6002CC3")]
				[Address(RVA = "0x2A8C8FC", Offset = "0x2A8C8FC", VA = "0x2A8C8FC")]
				public static Builder CreateBuilder(DepthMapEvent prototype)
				{
					return null;
				}

				[Token(Token = "0x6002CC4")]
				[Address(RVA = "0x2A90424", Offset = "0x2A90424", VA = "0x2A90424")]
				static DepthMapEvent()
				{
				}
			}

			[Token(Token = "0x200079F")]
			[DebuggerNonUserCode]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146AD8C", Offset = "0x146AD8C")]
			[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x146AD8C", Offset = "0x146AD8C")]
			public sealed class OrientationEvent : GeneratedMessageLite<OrientationEvent, OrientationEvent.Builder>
			{
				[Token(Token = "0x20007B3")]
				[DebuggerNonUserCode]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146B09C", Offset = "0x146B09C")]
				[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x146B09C", Offset = "0x146B09C")]
				public sealed class Builder : GeneratedBuilderLite<OrientationEvent, Builder>
				{
					[Token(Token = "0x4002AD6")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
					private bool resultIsReadOnly;

					[Token(Token = "0x4002AD7")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
					private OrientationEvent result;

					[Token(Token = "0x17000687")]
					protected override Builder ThisBuilder
					{
						[Token(Token = "0x6002DC5")]
						[Address(RVA = "0x3FE1EF8", Offset = "0x3FE1EF8", VA = "0x3FE1EF8", Slot = "7")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x17000688")]
					public override bool IsInitialized
					{
						[Token(Token = "0x6002DC9")]
						[Address(RVA = "0x3FE1F9C", Offset = "0x3FE1F9C", VA = "0x3FE1F9C", Slot = "8")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x17000689")]
					protected override OrientationEvent MessageBeingBuilt
					{
						[Token(Token = "0x6002DCA")]
						[Address(RVA = "0x3FE1FBC", Offset = "0x3FE1FBC", VA = "0x3FE1FBC", Slot = "25")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x1700068A")]
					public override OrientationEvent DefaultInstanceForType
					{
						[Token(Token = "0x6002DCD")]
						[Address(RVA = "0x3FE2134", Offset = "0x3FE2134", VA = "0x3FE2134", Slot = "9")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x1700068B")]
					public bool HasTimestamp
					{
						[Token(Token = "0x6002DD3")]
						[Address(RVA = "0x3FE29E8", Offset = "0x3FE29E8", VA = "0x3FE29E8")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x1700068C")]
					public long Timestamp
					{
						[Token(Token = "0x6002DD4")]
						[Address(RVA = "0x3FE2A04", Offset = "0x3FE2A04", VA = "0x3FE2A04")]
						get
						{
							return default(long);
						}
						[Token(Token = "0x6002DD5")]
						[Address(RVA = "0x3FE23E8", Offset = "0x3FE23E8", VA = "0x3FE23E8")]
						set
						{
						}
					}

					[Token(Token = "0x1700068D")]
					public bool HasX
					{
						[Token(Token = "0x6002DD8")]
						[Address(RVA = "0x3FE2AA8", Offset = "0x3FE2AA8", VA = "0x3FE2AA8")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x1700068E")]
					public float X
					{
						[Token(Token = "0x6002DD9")]
						[Address(RVA = "0x3FE2AC4", Offset = "0x3FE2AC4", VA = "0x3FE2AC4")]
						get
						{
							return default(float);
						}
						[Token(Token = "0x6002DDA")]
						[Address(RVA = "0x3FE23EC", Offset = "0x3FE23EC", VA = "0x3FE23EC")]
						set
						{
						}
					}

					[Token(Token = "0x1700068F")]
					public bool HasY
					{
						[Token(Token = "0x6002DDD")]
						[Address(RVA = "0x3FE2B70", Offset = "0x3FE2B70", VA = "0x3FE2B70")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x17000690")]
					public float Y
					{
						[Token(Token = "0x6002DDE")]
						[Address(RVA = "0x3FE2B8C", Offset = "0x3FE2B8C", VA = "0x3FE2B8C")]
						get
						{
							return default(float);
						}
						[Token(Token = "0x6002DDF")]
						[Address(RVA = "0x3FE23F0", Offset = "0x3FE23F0", VA = "0x3FE23F0")]
						set
						{
						}
					}

					[Token(Token = "0x17000691")]
					public bool HasZ
					{
						[Token(Token = "0x6002DE2")]
						[Address(RVA = "0x3FE2C38", Offset = "0x3FE2C38", VA = "0x3FE2C38")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x17000692")]
					public float Z
					{
						[Token(Token = "0x6002DE3")]
						[Address(RVA = "0x3FE2C54", Offset = "0x3FE2C54", VA = "0x3FE2C54")]
						get
						{
							return default(float);
						}
						[Token(Token = "0x6002DE4")]
						[Address(RVA = "0x3FE23F4", Offset = "0x3FE23F4", VA = "0x3FE23F4")]
						set
						{
						}
					}

					[Token(Token = "0x17000693")]
					public bool HasW
					{
						[Token(Token = "0x6002DE7")]
						[Address(RVA = "0x3FE2D00", Offset = "0x3FE2D00", VA = "0x3FE2D00")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x17000694")]
					public float W
					{
						[Token(Token = "0x6002DE8")]
						[Address(RVA = "0x3FE2D1C", Offset = "0x3FE2D1C", VA = "0x3FE2D1C")]
						get
						{
							return default(float);
						}
						[Token(Token = "0x6002DE9")]
						[Address(RVA = "0x3FE23F8", Offset = "0x3FE23F8", VA = "0x3FE23F8")]
						set
						{
						}
					}

					[Token(Token = "0x6002DC6")]
					[Address(RVA = "0x3FE1A10", Offset = "0x3FE1A10", VA = "0x3FE1A10")]
					public Builder()
					{
					}

					[Token(Token = "0x6002DC7")]
					[Address(RVA = "0x3FE1C04", Offset = "0x3FE1C04", VA = "0x3FE1C04")]
					internal Builder(OrientationEvent cloneFrom)
					{
					}

					[Token(Token = "0x6002DC8")]
					[Address(RVA = "0x3FE1EFC", Offset = "0x3FE1EFC", VA = "0x3FE1EFC")]
					private OrientationEvent PrepareBuilder()
					{
						return null;
					}

					[Token(Token = "0x6002DCB")]
					[Address(RVA = "0x3FE1FC0", Offset = "0x3FE1FC0", VA = "0x3FE1FC0", Slot = "10")]
					public override Builder Clear()
					{
						return null;
					}

					[Token(Token = "0x6002DCC")]
					[Address(RVA = "0x3FE2088", Offset = "0x3FE2088", VA = "0x3FE2088", Slot = "11")]
					public override Builder Clone()
					{
						return null;
					}

					[Token(Token = "0x6002DCE")]
					[Address(RVA = "0x3FE21D8", Offset = "0x3FE21D8", VA = "0x3FE21D8", Slot = "13")]
					public override OrientationEvent BuildPartial()
					{
						return null;
					}

					[Token(Token = "0x6002DCF")]
					[Address(RVA = "0x3FE220C", Offset = "0x3FE220C", VA = "0x3FE220C", Slot = "14")]
					public override Builder MergeFrom(IMessageLite other)
					{
						return null;
					}

					[Token(Token = "0x6002DD0")]
					[Address(RVA = "0x3FE22B4", Offset = "0x3FE22B4", VA = "0x3FE22B4", Slot = "26")]
					public override Builder MergeFrom(OrientationEvent other)
					{
						return null;
					}

					[Token(Token = "0x6002DD1")]
					[Address(RVA = "0x3FE23FC", Offset = "0x3FE23FC", VA = "0x3FE23FC", Slot = "16")]
					public override Builder MergeFrom(ICodedInputStream input)
					{
						return null;
					}

					[Token(Token = "0x6002DD2")]
					[Address(RVA = "0x3FE24C4", Offset = "0x3FE24C4", VA = "0x3FE24C4", Slot = "15")]
					public override Builder MergeFrom(ICodedInputStream input, ExtensionRegistry extensionRegistry)
					{
						return null;
					}

					[Token(Token = "0x6002DD6")]
					[Address(RVA = "0x3FE2A20", Offset = "0x3FE2A20", VA = "0x3FE2A20")]
					public Builder SetTimestamp(long value)
					{
						return null;
					}

					[Token(Token = "0x6002DD7")]
					[Address(RVA = "0x3FE2A68", Offset = "0x3FE2A68", VA = "0x3FE2A68")]
					public Builder ClearTimestamp()
					{
						return null;
					}

					[Token(Token = "0x6002DDB")]
					[Address(RVA = "0x3FE2AE0", Offset = "0x3FE2AE0", VA = "0x3FE2AE0")]
					public Builder SetX(float value)
					{
						return null;
					}

					[Token(Token = "0x6002DDC")]
					[Address(RVA = "0x3FE2B30", Offset = "0x3FE2B30", VA = "0x3FE2B30")]
					public Builder ClearX()
					{
						return null;
					}

					[Token(Token = "0x6002DE0")]
					[Address(RVA = "0x3FE2BA8", Offset = "0x3FE2BA8", VA = "0x3FE2BA8")]
					public Builder SetY(float value)
					{
						return null;
					}

					[Token(Token = "0x6002DE1")]
					[Address(RVA = "0x3FE2BF8", Offset = "0x3FE2BF8", VA = "0x3FE2BF8")]
					public Builder ClearY()
					{
						return null;
					}

					[Token(Token = "0x6002DE5")]
					[Address(RVA = "0x3FE2C70", Offset = "0x3FE2C70", VA = "0x3FE2C70")]
					public Builder SetZ(float value)
					{
						return null;
					}

					[Token(Token = "0x6002DE6")]
					[Address(RVA = "0x3FE2CC0", Offset = "0x3FE2CC0", VA = "0x3FE2CC0")]
					public Builder ClearZ()
					{
						return null;
					}

					[Token(Token = "0x6002DEA")]
					[Address(RVA = "0x3FE2D38", Offset = "0x3FE2D38", VA = "0x3FE2D38")]
					public Builder SetW(float value)
					{
						return null;
					}

					[Token(Token = "0x6002DEB")]
					[Address(RVA = "0x3FE2D88", Offset = "0x3FE2D88", VA = "0x3FE2D88")]
					public Builder ClearW()
					{
						return null;
					}
				}

				[Token(Token = "0x4002A76")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private static readonly OrientationEvent defaultInstance;

				[Token(Token = "0x4002A77")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				private static readonly string[] _orientationEventFieldNames;

				[Token(Token = "0x4002A78")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private static readonly uint[] _orientationEventFieldTags;

				[Token(Token = "0x4002A79")]
				public const int TimestampFieldNumber = 1;

				[Token(Token = "0x4002A7A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private bool hasTimestamp;

				[Token(Token = "0x4002A7B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private long timestamp_;

				[Token(Token = "0x4002A7C")]
				public const int XFieldNumber = 2;

				[Token(Token = "0x4002A7D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				private bool hasX;

				[Token(Token = "0x4002A7E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
				private float x_;

				[Token(Token = "0x4002A7F")]
				public const int YFieldNumber = 3;

				[Token(Token = "0x4002A80")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private bool hasY;

				[Token(Token = "0x4002A81")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
				private float y_;

				[Token(Token = "0x4002A82")]
				public const int ZFieldNumber = 4;

				[Token(Token = "0x4002A83")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				private bool hasZ;

				[Token(Token = "0x4002A84")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
				private float z_;

				[Token(Token = "0x4002A85")]
				public const int WFieldNumber = 5;

				[Token(Token = "0x4002A86")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
				private bool hasW;

				[Token(Token = "0x4002A87")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
				private float w_;

				[Token(Token = "0x4002A88")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
				private int memoizedSerializedSize;

				[Token(Token = "0x17000637")]
				public static OrientationEvent DefaultInstance
				{
					[Token(Token = "0x6002CC6")]
					[Address(RVA = "0x3FE0924", Offset = "0x3FE0924", VA = "0x3FE0924")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000638")]
				public override OrientationEvent DefaultInstanceForType
				{
					[Token(Token = "0x6002CC7")]
					[Address(RVA = "0x3FE098C", Offset = "0x3FE098C", VA = "0x3FE098C", Slot = "9")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000639")]
				protected override OrientationEvent ThisMessage
				{
					[Token(Token = "0x6002CC8")]
					[Address(RVA = "0x3FE0A30", Offset = "0x3FE0A30", VA = "0x3FE0A30", Slot = "17")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x1700063A")]
				public bool HasTimestamp
				{
					[Token(Token = "0x6002CC9")]
					[Address(RVA = "0x3FE0A34", Offset = "0x3FE0A34", VA = "0x3FE0A34")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x1700063B")]
				public long Timestamp
				{
					[Token(Token = "0x6002CCA")]
					[Address(RVA = "0x3FE0A3C", Offset = "0x3FE0A3C", VA = "0x3FE0A3C")]
					get
					{
						return default(long);
					}
				}

				[Token(Token = "0x1700063C")]
				public bool HasX
				{
					[Token(Token = "0x6002CCB")]
					[Address(RVA = "0x3FE0A44", Offset = "0x3FE0A44", VA = "0x3FE0A44")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x1700063D")]
				public float X
				{
					[Token(Token = "0x6002CCC")]
					[Address(RVA = "0x3FE0A4C", Offset = "0x3FE0A4C", VA = "0x3FE0A4C")]
					get
					{
						return default(float);
					}
				}

				[Token(Token = "0x1700063E")]
				public bool HasY
				{
					[Token(Token = "0x6002CCD")]
					[Address(RVA = "0x3FE0A54", Offset = "0x3FE0A54", VA = "0x3FE0A54")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x1700063F")]
				public float Y
				{
					[Token(Token = "0x6002CCE")]
					[Address(RVA = "0x3FE0A5C", Offset = "0x3FE0A5C", VA = "0x3FE0A5C")]
					get
					{
						return default(float);
					}
				}

				[Token(Token = "0x17000640")]
				public bool HasZ
				{
					[Token(Token = "0x6002CCF")]
					[Address(RVA = "0x3FE0A64", Offset = "0x3FE0A64", VA = "0x3FE0A64")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x17000641")]
				public float Z
				{
					[Token(Token = "0x6002CD0")]
					[Address(RVA = "0x3FE0A6C", Offset = "0x3FE0A6C", VA = "0x3FE0A6C")]
					get
					{
						return default(float);
					}
				}

				[Token(Token = "0x17000642")]
				public bool HasW
				{
					[Token(Token = "0x6002CD1")]
					[Address(RVA = "0x3FE0A74", Offset = "0x3FE0A74", VA = "0x3FE0A74")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x17000643")]
				public float W
				{
					[Token(Token = "0x6002CD2")]
					[Address(RVA = "0x3FE0A7C", Offset = "0x3FE0A7C", VA = "0x3FE0A7C")]
					get
					{
						return default(float);
					}
				}

				[Token(Token = "0x17000644")]
				public override bool IsInitialized
				{
					[Token(Token = "0x6002CD3")]
					[Address(RVA = "0x3FE0A84", Offset = "0x3FE0A84", VA = "0x3FE0A84", Slot = "10")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x17000645")]
				public override int SerializedSize
				{
					[Token(Token = "0x6002CD5")]
					[Address(RVA = "0x3FE0E30", Offset = "0x3FE0E30", VA = "0x3FE0E30", Slot = "11")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x6002CC5")]
				[Address(RVA = "0x3FE08CC", Offset = "0x3FE08CC", VA = "0x3FE08CC")]
				private OrientationEvent()
				{
				}

				[Token(Token = "0x6002CD4")]
				[Address(RVA = "0x3FE0A8C", Offset = "0x3FE0A8C", VA = "0x3FE0A8C", Slot = "14")]
				public override void WriteTo(ICodedOutputStream output)
				{
				}

				[Token(Token = "0x6002CD6")]
				[Address(RVA = "0x3FE0FD4", Offset = "0x3FE0FD4", VA = "0x3FE0FD4", Slot = "2")]
				public override int GetHashCode()
				{
					return default(int);
				}

				[Token(Token = "0x6002CD7")]
				[Address(RVA = "0x3FE108C", Offset = "0x3FE108C", VA = "0x3FE108C", Slot = "0")]
				public override bool Equals(object obj)
				{
					return default(bool);
				}

				[Token(Token = "0x6002CD8")]
				[Address(RVA = "0x3FE1224", Offset = "0x3FE1224", VA = "0x3FE1224", Slot = "15")]
				public override void PrintTo(TextWriter writer)
				{
				}

				[Token(Token = "0x6002CD9")]
				[Address(RVA = "0x3FE13C4", Offset = "0x3FE13C4", VA = "0x3FE13C4")]
				public static OrientationEvent ParseFrom(ByteString data)
				{
					return null;
				}

				[Token(Token = "0x6002CDA")]
				[Address(RVA = "0x3FE14AC", Offset = "0x3FE14AC", VA = "0x3FE14AC")]
				public static OrientationEvent ParseFrom(ByteString data, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x6002CDB")]
				[Address(RVA = "0x3FE154C", Offset = "0x3FE154C", VA = "0x3FE154C")]
				public static OrientationEvent ParseFrom(byte[] data)
				{
					return null;
				}

				[Token(Token = "0x6002CDC")]
				[Address(RVA = "0x3FE15DC", Offset = "0x3FE15DC", VA = "0x3FE15DC")]
				public static OrientationEvent ParseFrom(byte[] data, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x6002CDD")]
				[Address(RVA = "0x3FE167C", Offset = "0x3FE167C", VA = "0x3FE167C")]
				public static OrientationEvent ParseFrom(Stream input)
				{
					return null;
				}

				[Token(Token = "0x6002CDE")]
				[Address(RVA = "0x3FE170C", Offset = "0x3FE170C", VA = "0x3FE170C")]
				public static OrientationEvent ParseFrom(Stream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x6002CDF")]
				[Address(RVA = "0x3FE17AC", Offset = "0x3FE17AC", VA = "0x3FE17AC")]
				public static OrientationEvent ParseDelimitedFrom(Stream input)
				{
					return null;
				}

				[Token(Token = "0x6002CE0")]
				[Address(RVA = "0x3FE183C", Offset = "0x3FE183C", VA = "0x3FE183C")]
				public static OrientationEvent ParseDelimitedFrom(Stream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x6002CE1")]
				[Address(RVA = "0x3FE18DC", Offset = "0x3FE18DC", VA = "0x3FE18DC")]
				public static OrientationEvent ParseFrom(ICodedInputStream input)
				{
					return null;
				}

				[Token(Token = "0x6002CE2")]
				[Address(RVA = "0x3FE196C", Offset = "0x3FE196C", VA = "0x3FE196C")]
				public static OrientationEvent ParseFrom(ICodedInputStream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x6002CE3")]
				[Address(RVA = "0x3FE1A0C", Offset = "0x3FE1A0C", VA = "0x3FE1A0C")]
				private OrientationEvent MakeReadOnly()
				{
					return null;
				}

				[Token(Token = "0x6002CE4")]
				[Address(RVA = "0x3FE1454", Offset = "0x3FE1454", VA = "0x3FE1454")]
				public static Builder CreateBuilder()
				{
					return null;
				}

				[Token(Token = "0x6002CE5")]
				[Address(RVA = "0x3FE1AE8", Offset = "0x3FE1AE8", VA = "0x3FE1AE8", Slot = "13")]
				public override Builder ToBuilder()
				{
					return null;
				}

				[Token(Token = "0x6002CE6")]
				[Address(RVA = "0x3FE1BAC", Offset = "0x3FE1BAC", VA = "0x3FE1BAC", Slot = "12")]
				public override Builder CreateBuilderForType()
				{
					return null;
				}

				[Token(Token = "0x6002CE7")]
				[Address(RVA = "0x3FE1B4C", Offset = "0x3FE1B4C", VA = "0x3FE1B4C")]
				public static Builder CreateBuilder(OrientationEvent prototype)
				{
					return null;
				}

				[Token(Token = "0x6002CE8")]
				[Address(RVA = "0x3FE1C7C", Offset = "0x3FE1C7C", VA = "0x3FE1C7C")]
				static OrientationEvent()
				{
				}
			}

			[Token(Token = "0x20007A0")]
			[DebuggerNonUserCode]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146ADFC", Offset = "0x146ADFC")]
			[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x146ADFC", Offset = "0x146ADFC")]
			public sealed class KeyEvent : GeneratedMessageLite<KeyEvent, KeyEvent.Builder>
			{
				[Token(Token = "0x20007B4")]
				[DebuggerNonUserCode]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146B10C", Offset = "0x146B10C")]
				[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x146B10C", Offset = "0x146B10C")]
				public sealed class Builder : GeneratedBuilderLite<KeyEvent, Builder>
				{
					[Token(Token = "0x4002AD8")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
					private bool resultIsReadOnly;

					[Token(Token = "0x4002AD9")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
					private KeyEvent result;

					[Token(Token = "0x17000695")]
					protected override Builder ThisBuilder
					{
						[Token(Token = "0x6002DEC")]
						[Address(RVA = "0x2A946FC", Offset = "0x2A946FC", VA = "0x2A946FC", Slot = "7")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x17000696")]
					public override bool IsInitialized
					{
						[Token(Token = "0x6002DF0")]
						[Address(RVA = "0x2A947A0", Offset = "0x2A947A0", VA = "0x2A947A0", Slot = "8")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x17000697")]
					protected override KeyEvent MessageBeingBuilt
					{
						[Token(Token = "0x6002DF1")]
						[Address(RVA = "0x2A947C0", Offset = "0x2A947C0", VA = "0x2A947C0", Slot = "25")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x17000698")]
					public override KeyEvent DefaultInstanceForType
					{
						[Token(Token = "0x6002DF4")]
						[Address(RVA = "0x2A94938", Offset = "0x2A94938", VA = "0x2A94938", Slot = "9")]
						get
						{
							return null;
						}
					}

					[Token(Token = "0x17000699")]
					public bool HasAction
					{
						[Token(Token = "0x6002DFA")]
						[Address(RVA = "0x2A95000", Offset = "0x2A95000", VA = "0x2A95000")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x1700069A")]
					public int Action
					{
						[Token(Token = "0x6002DFB")]
						[Address(RVA = "0x2A9501C", Offset = "0x2A9501C", VA = "0x2A9501C")]
						get
						{
							return default(int);
						}
						[Token(Token = "0x6002DFC")]
						[Address(RVA = "0x2A94BB0", Offset = "0x2A94BB0", VA = "0x2A94BB0")]
						set
						{
						}
					}

					[Token(Token = "0x1700069B")]
					public bool HasCode
					{
						[Token(Token = "0x6002DFF")]
						[Address(RVA = "0x2A950C0", Offset = "0x2A950C0", VA = "0x2A950C0")]
						get
						{
							return default(bool);
						}
					}

					[Token(Token = "0x1700069C")]
					public int Code
					{
						[Token(Token = "0x6002E00")]
						[Address(RVA = "0x2A950DC", Offset = "0x2A950DC", VA = "0x2A950DC")]
						get
						{
							return default(int);
						}
						[Token(Token = "0x6002E01")]
						[Address(RVA = "0x2A94BB4", Offset = "0x2A94BB4", VA = "0x2A94BB4")]
						set
						{
						}
					}

					[Token(Token = "0x6002DED")]
					[Address(RVA = "0x2A94334", Offset = "0x2A94334", VA = "0x2A94334")]
					public Builder()
					{
					}

					[Token(Token = "0x6002DEE")]
					[Address(RVA = "0x2A944C8", Offset = "0x2A944C8", VA = "0x2A944C8")]
					internal Builder(KeyEvent cloneFrom)
					{
					}

					[Token(Token = "0x6002DEF")]
					[Address(RVA = "0x2A94700", Offset = "0x2A94700", VA = "0x2A94700")]
					private KeyEvent PrepareBuilder()
					{
						return null;
					}

					[Token(Token = "0x6002DF2")]
					[Address(RVA = "0x2A947C4", Offset = "0x2A947C4", VA = "0x2A947C4", Slot = "10")]
					public override Builder Clear()
					{
						return null;
					}

					[Token(Token = "0x6002DF3")]
					[Address(RVA = "0x2A9488C", Offset = "0x2A9488C", VA = "0x2A9488C", Slot = "11")]
					public override Builder Clone()
					{
						return null;
					}

					[Token(Token = "0x6002DF5")]
					[Address(RVA = "0x2A949DC", Offset = "0x2A949DC", VA = "0x2A949DC", Slot = "13")]
					public override KeyEvent BuildPartial()
					{
						return null;
					}

					[Token(Token = "0x6002DF6")]
					[Address(RVA = "0x2A94A10", Offset = "0x2A94A10", VA = "0x2A94A10", Slot = "14")]
					public override Builder MergeFrom(IMessageLite other)
					{
						return null;
					}

					[Token(Token = "0x6002DF7")]
					[Address(RVA = "0x2A94AB8", Offset = "0x2A94AB8", VA = "0x2A94AB8", Slot = "26")]
					public override Builder MergeFrom(KeyEvent other)
					{
						return null;
					}

					[Token(Token = "0x6002DF8")]
					[Address(RVA = "0x2A94BB8", Offset = "0x2A94BB8", VA = "0x2A94BB8", Slot = "16")]
					public override Builder MergeFrom(ICodedInputStream input)
					{
						return null;
					}

					[Token(Token = "0x6002DF9")]
					[Address(RVA = "0x2A94C80", Offset = "0x2A94C80", VA = "0x2A94C80", Slot = "15")]
					public override Builder MergeFrom(ICodedInputStream input, ExtensionRegistry extensionRegistry)
					{
						return null;
					}

					[Token(Token = "0x6002DFD")]
					[Address(RVA = "0x2A95038", Offset = "0x2A95038", VA = "0x2A95038")]
					public Builder SetAction(int value)
					{
						return null;
					}

					[Token(Token = "0x6002DFE")]
					[Address(RVA = "0x2A95080", Offset = "0x2A95080", VA = "0x2A95080")]
					public Builder ClearAction()
					{
						return null;
					}

					[Token(Token = "0x6002E02")]
					[Address(RVA = "0x2A950F8", Offset = "0x2A950F8", VA = "0x2A950F8")]
					public Builder SetCode(int value)
					{
						return null;
					}

					[Token(Token = "0x6002E03")]
					[Address(RVA = "0x2A95140", Offset = "0x2A95140", VA = "0x2A95140")]
					public Builder ClearCode()
					{
						return null;
					}
				}

				[Token(Token = "0x4002A89")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private static readonly KeyEvent defaultInstance;

				[Token(Token = "0x4002A8A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				private static readonly string[] _keyEventFieldNames;

				[Token(Token = "0x4002A8B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private static readonly uint[] _keyEventFieldTags;

				[Token(Token = "0x4002A8C")]
				public const int ActionFieldNumber = 1;

				[Token(Token = "0x4002A8D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private bool hasAction;

				[Token(Token = "0x4002A8E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				private int action_;

				[Token(Token = "0x4002A8F")]
				public const int CodeFieldNumber = 2;

				[Token(Token = "0x4002A90")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private bool hasCode;

				[Token(Token = "0x4002A91")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
				private int code_;

				[Token(Token = "0x4002A92")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				private int memoizedSerializedSize;

				[Token(Token = "0x17000646")]
				public static KeyEvent DefaultInstance
				{
					[Token(Token = "0x6002CEA")]
					[Address(RVA = "0x2A93714", Offset = "0x2A93714", VA = "0x2A93714")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000647")]
				public override KeyEvent DefaultInstanceForType
				{
					[Token(Token = "0x6002CEB")]
					[Address(RVA = "0x2A9377C", Offset = "0x2A9377C", VA = "0x2A9377C", Slot = "9")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000648")]
				protected override KeyEvent ThisMessage
				{
					[Token(Token = "0x6002CEC")]
					[Address(RVA = "0x2A93820", Offset = "0x2A93820", VA = "0x2A93820", Slot = "17")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000649")]
				public bool HasAction
				{
					[Token(Token = "0x6002CED")]
					[Address(RVA = "0x2A93824", Offset = "0x2A93824", VA = "0x2A93824")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x1700064A")]
				public int Action
				{
					[Token(Token = "0x6002CEE")]
					[Address(RVA = "0x2A9382C", Offset = "0x2A9382C", VA = "0x2A9382C")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x1700064B")]
				public bool HasCode
				{
					[Token(Token = "0x6002CEF")]
					[Address(RVA = "0x2A93834", Offset = "0x2A93834", VA = "0x2A93834")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x1700064C")]
				public int Code
				{
					[Token(Token = "0x6002CF0")]
					[Address(RVA = "0x2A9383C", Offset = "0x2A9383C", VA = "0x2A9383C")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x1700064D")]
				public override bool IsInitialized
				{
					[Token(Token = "0x6002CF1")]
					[Address(RVA = "0x2A93844", Offset = "0x2A93844", VA = "0x2A93844", Slot = "10")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x1700064E")]
				public override int SerializedSize
				{
					[Token(Token = "0x6002CF3")]
					[Address(RVA = "0x2A93A20", Offset = "0x2A93A20", VA = "0x2A93A20", Slot = "11")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x6002CE9")]
				[Address(RVA = "0x2A936BC", Offset = "0x2A936BC", VA = "0x2A936BC")]
				private KeyEvent()
				{
				}

				[Token(Token = "0x6002CF2")]
				[Address(RVA = "0x2A9384C", Offset = "0x2A9384C", VA = "0x2A9384C", Slot = "14")]
				public override void WriteTo(ICodedOutputStream output)
				{
				}

				[Token(Token = "0x6002CF4")]
				[Address(RVA = "0x2A93B04", Offset = "0x2A93B04", VA = "0x2A93B04", Slot = "2")]
				public override int GetHashCode()
				{
					return default(int);
				}

				[Token(Token = "0x6002CF5")]
				[Address(RVA = "0x2A93B74", Offset = "0x2A93B74", VA = "0x2A93B74", Slot = "0")]
				public override bool Equals(object obj)
				{
					return default(bool);
				}

				[Token(Token = "0x6002CF6")]
				[Address(RVA = "0x2A93C64", Offset = "0x2A93C64", VA = "0x2A93C64", Slot = "15")]
				public override void PrintTo(TextWriter writer)
				{
				}

				[Token(Token = "0x6002CF7")]
				[Address(RVA = "0x2A93D40", Offset = "0x2A93D40", VA = "0x2A93D40")]
				public static KeyEvent ParseFrom(ByteString data)
				{
					return null;
				}

				[Token(Token = "0x6002CF8")]
				[Address(RVA = "0x2A93DD0", Offset = "0x2A93DD0", VA = "0x2A93DD0")]
				public static KeyEvent ParseFrom(ByteString data, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x6002CF9")]
				[Address(RVA = "0x2A93E70", Offset = "0x2A93E70", VA = "0x2A93E70")]
				public static KeyEvent ParseFrom(byte[] data)
				{
					return null;
				}

				[Token(Token = "0x6002CFA")]
				[Address(RVA = "0x2A93F00", Offset = "0x2A93F00", VA = "0x2A93F00")]
				public static KeyEvent ParseFrom(byte[] data, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x6002CFB")]
				[Address(RVA = "0x2A93FA0", Offset = "0x2A93FA0", VA = "0x2A93FA0")]
				public static KeyEvent ParseFrom(Stream input)
				{
					return null;
				}

				[Token(Token = "0x6002CFC")]
				[Address(RVA = "0x2A94030", Offset = "0x2A94030", VA = "0x2A94030")]
				public static KeyEvent ParseFrom(Stream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x6002CFD")]
				[Address(RVA = "0x2A940D0", Offset = "0x2A940D0", VA = "0x2A940D0")]
				public static KeyEvent ParseDelimitedFrom(Stream input)
				{
					return null;
				}

				[Token(Token = "0x6002CFE")]
				[Address(RVA = "0x2A94160", Offset = "0x2A94160", VA = "0x2A94160")]
				public static KeyEvent ParseDelimitedFrom(Stream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x6002CFF")]
				[Address(RVA = "0x2A94200", Offset = "0x2A94200", VA = "0x2A94200")]
				public static KeyEvent ParseFrom(ICodedInputStream input)
				{
					return null;
				}

				[Token(Token = "0x6002D00")]
				[Address(RVA = "0x2A94290", Offset = "0x2A94290", VA = "0x2A94290")]
				public static KeyEvent ParseFrom(ICodedInputStream input, ExtensionRegistry extensionRegistry)
				{
					return null;
				}

				[Token(Token = "0x6002D01")]
				[Address(RVA = "0x2A94330", Offset = "0x2A94330", VA = "0x2A94330")]
				private KeyEvent MakeReadOnly()
				{
					return null;
				}

				[Token(Token = "0x6002D02")]
				[Address(RVA = "0x2A8C038", Offset = "0x2A8C038", VA = "0x2A8C038")]
				public static Builder CreateBuilder()
				{
					return null;
				}

				[Token(Token = "0x6002D03")]
				[Address(RVA = "0x2A9440C", Offset = "0x2A9440C", VA = "0x2A9440C", Slot = "13")]
				public override Builder ToBuilder()
				{
					return null;
				}

				[Token(Token = "0x6002D04")]
				[Address(RVA = "0x2A94470", Offset = "0x2A94470", VA = "0x2A94470", Slot = "12")]
				public override Builder CreateBuilderForType()
				{
					return null;
				}

				[Token(Token = "0x6002D05")]
				[Address(RVA = "0x2A8CCB4", Offset = "0x2A8CCB4", VA = "0x2A8CCB4")]
				public static Builder CreateBuilder(KeyEvent prototype)
				{
					return null;
				}

				[Token(Token = "0x6002D06")]
				[Address(RVA = "0x2A94540", Offset = "0x2A94540", VA = "0x2A94540")]
				static KeyEvent()
				{
				}
			}
		}

		[Token(Token = "0x20006AC")]
		[DebuggerNonUserCode]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A81C", Offset = "0x146A81C")]
		[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x146A81C", Offset = "0x146A81C")]
		public sealed class Builder : GeneratedBuilderLite<PhoneEvent, Builder>
		{
			[Token(Token = "0x4002696")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private bool resultIsReadOnly;

			[Token(Token = "0x4002697")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private PhoneEvent result;

			[Token(Token = "0x17000575")]
			protected override Builder ThisBuilder
			{
				[Token(Token = "0x60028F2")]
				[Address(RVA = "0x2A8A5F0", Offset = "0x2A8A5F0", VA = "0x2A8A5F0", Slot = "7")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000576")]
			public override bool IsInitialized
			{
				[Token(Token = "0x60028F6")]
				[Address(RVA = "0x2A8A694", Offset = "0x2A8A694", VA = "0x2A8A694", Slot = "8")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000577")]
			protected override PhoneEvent MessageBeingBuilt
			{
				[Token(Token = "0x60028F7")]
				[Address(RVA = "0x2A8A6B4", Offset = "0x2A8A6B4", VA = "0x2A8A6B4", Slot = "25")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000578")]
			public override PhoneEvent DefaultInstanceForType
			{
				[Token(Token = "0x60028FA")]
				[Address(RVA = "0x2A8A82C", Offset = "0x2A8A82C", VA = "0x2A8A82C", Slot = "9")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000579")]
			public bool HasType
			{
				[Token(Token = "0x6002900")]
				[Address(RVA = "0x2A8C0AC", Offset = "0x2A8C0AC", VA = "0x2A8C0AC")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700057A")]
			public Types.Type Type
			{
				[Token(Token = "0x6002901")]
				[Address(RVA = "0x2A8C0C8", Offset = "0x2A8C0C8", VA = "0x2A8C0C8")]
				get
				{
					return default(Types.Type);
				}
				[Token(Token = "0x6002902")]
				[Address(RVA = "0x2A8AB38", Offset = "0x2A8AB38", VA = "0x2A8AB38")]
				set
				{
				}
			}

			[Token(Token = "0x1700057B")]
			public bool HasMotionEvent
			{
				[Token(Token = "0x6002905")]
				[Address(RVA = "0x2A8C170", Offset = "0x2A8C170", VA = "0x2A8C170")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700057C")]
			public Types.MotionEvent MotionEvent
			{
				[Token(Token = "0x6002906")]
				[Address(RVA = "0x2A8BEA4", Offset = "0x2A8BEA4", VA = "0x2A8BEA4")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002907")]
				[Address(RVA = "0x2A8BEBC", Offset = "0x2A8BEBC", VA = "0x2A8BEBC")]
				set
				{
				}
			}

			[Token(Token = "0x1700057D")]
			public bool HasGyroscopeEvent
			{
				[Token(Token = "0x600290C")]
				[Address(RVA = "0x2A8C380", Offset = "0x2A8C380", VA = "0x2A8C380")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700057E")]
			public Types.GyroscopeEvent GyroscopeEvent
			{
				[Token(Token = "0x600290D")]
				[Address(RVA = "0x2A8BF18", Offset = "0x2A8BF18", VA = "0x2A8BF18")]
				get
				{
					return null;
				}
				[Token(Token = "0x600290E")]
				[Address(RVA = "0x2A8BF30", Offset = "0x2A8BF30", VA = "0x2A8BF30")]
				set
				{
				}
			}

			[Token(Token = "0x1700057F")]
			public bool HasAccelerometerEvent
			{
				[Token(Token = "0x6002913")]
				[Address(RVA = "0x2A8C58C", Offset = "0x2A8C58C", VA = "0x2A8C58C")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000580")]
			public Types.AccelerometerEvent AccelerometerEvent
			{
				[Token(Token = "0x6002914")]
				[Address(RVA = "0x2A8BF8C", Offset = "0x2A8BF8C", VA = "0x2A8BF8C")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002915")]
				[Address(RVA = "0x2A8BFA4", Offset = "0x2A8BFA4", VA = "0x2A8BFA4")]
				set
				{
				}
			}

			[Token(Token = "0x17000581")]
			public bool HasDepthMapEvent
			{
				[Token(Token = "0x600291A")]
				[Address(RVA = "0x2A8C798", Offset = "0x2A8C798", VA = "0x2A8C798")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000582")]
			public Types.DepthMapEvent DepthMapEvent
			{
				[Token(Token = "0x600291B")]
				[Address(RVA = "0x2A8C000", Offset = "0x2A8C000", VA = "0x2A8C000")]
				get
				{
					return null;
				}
				[Token(Token = "0x600291C")]
				[Address(RVA = "0x2A8C018", Offset = "0x2A8C018", VA = "0x2A8C018")]
				set
				{
				}
			}

			[Token(Token = "0x17000583")]
			public bool HasOrientationEvent
			{
				[Token(Token = "0x6002921")]
				[Address(RVA = "0x2A8C9A4", Offset = "0x2A8C9A4", VA = "0x2A8C9A4")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000584")]
			public Types.OrientationEvent OrientationEvent
			{
				[Token(Token = "0x6002922")]
				[Address(RVA = "0x2A8C01C", Offset = "0x2A8C01C", VA = "0x2A8C01C")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002923")]
				[Address(RVA = "0x2A8C034", Offset = "0x2A8C034", VA = "0x2A8C034")]
				set
				{
				}
			}

			[Token(Token = "0x17000585")]
			public bool HasKeyEvent
			{
				[Token(Token = "0x6002928")]
				[Address(RVA = "0x2A8CB50", Offset = "0x2A8CB50", VA = "0x2A8CB50")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000586")]
			public Types.KeyEvent KeyEvent
			{
				[Token(Token = "0x6002929")]
				[Address(RVA = "0x2A8C090", Offset = "0x2A8C090", VA = "0x2A8C090")]
				get
				{
					return null;
				}
				[Token(Token = "0x600292A")]
				[Address(RVA = "0x2A8C0A8", Offset = "0x2A8C0A8", VA = "0x2A8C0A8")]
				set
				{
				}
			}

			[Token(Token = "0x60028F3")]
			[Address(RVA = "0x2A8A080", Offset = "0x2A8A080", VA = "0x2A8A080")]
			public Builder()
			{
			}

			[Token(Token = "0x60028F4")]
			[Address(RVA = "0x2A8A274", Offset = "0x2A8A274", VA = "0x2A8A274")]
			internal Builder(PhoneEvent cloneFrom)
			{
			}

			[Token(Token = "0x60028F5")]
			[Address(RVA = "0x2A8A5F4", Offset = "0x2A8A5F4", VA = "0x2A8A5F4")]
			private PhoneEvent PrepareBuilder()
			{
				return null;
			}

			[Token(Token = "0x60028F8")]
			[Address(RVA = "0x2A8A6B8", Offset = "0x2A8A6B8", VA = "0x2A8A6B8", Slot = "10")]
			public override Builder Clear()
			{
				return null;
			}

			[Token(Token = "0x60028F9")]
			[Address(RVA = "0x2A8A780", Offset = "0x2A8A780", VA = "0x2A8A780", Slot = "11")]
			public override Builder Clone()
			{
				return null;
			}

			[Token(Token = "0x60028FB")]
			[Address(RVA = "0x2A8A8D0", Offset = "0x2A8A8D0", VA = "0x2A8A8D0", Slot = "13")]
			public override PhoneEvent BuildPartial()
			{
				return null;
			}

			[Token(Token = "0x60028FC")]
			[Address(RVA = "0x2A8A904", Offset = "0x2A8A904", VA = "0x2A8A904", Slot = "14")]
			public override Builder MergeFrom(IMessageLite other)
			{
				return null;
			}

			[Token(Token = "0x60028FD")]
			[Address(RVA = "0x2A8A9AC", Offset = "0x2A8A9AC", VA = "0x2A8A9AC", Slot = "26")]
			public override Builder MergeFrom(PhoneEvent other)
			{
				return null;
			}

			[Token(Token = "0x60028FE")]
			[Address(RVA = "0x2A8B470", Offset = "0x2A8B470", VA = "0x2A8B470", Slot = "16")]
			public override Builder MergeFrom(ICodedInputStream input)
			{
				return null;
			}

			[Token(Token = "0x60028FF")]
			[Address(RVA = "0x2A8B538", Offset = "0x2A8B538", VA = "0x2A8B538", Slot = "15")]
			public override Builder MergeFrom(ICodedInputStream input, ExtensionRegistry extensionRegistry)
			{
				return null;
			}

			[Token(Token = "0x6002903")]
			[Address(RVA = "0x2A8C0E4", Offset = "0x2A8C0E4", VA = "0x2A8C0E4")]
			public Builder SetType(Types.Type value)
			{
				return null;
			}

			[Token(Token = "0x6002904")]
			[Address(RVA = "0x2A8C12C", Offset = "0x2A8C12C", VA = "0x2A8C12C")]
			public Builder ClearType()
			{
				return null;
			}

			[Token(Token = "0x6002908")]
			[Address(RVA = "0x2A8C18C", Offset = "0x2A8C18C", VA = "0x2A8C18C")]
			public Builder SetMotionEvent(Types.MotionEvent value)
			{
				return null;
			}

			[Token(Token = "0x6002909")]
			[Address(RVA = "0x2A8C224", Offset = "0x2A8C224", VA = "0x2A8C224")]
			public Builder SetMotionEvent(Types.MotionEvent.Builder builderForValue)
			{
				return null;
			}

			[Token(Token = "0x600290A")]
			[Address(RVA = "0x2A8AB3C", Offset = "0x2A8AB3C", VA = "0x2A8AB3C")]
			public Builder MergeMotionEvent(Types.MotionEvent value)
			{
				return null;
			}

			[Token(Token = "0x600290B")]
			[Address(RVA = "0x2A8C338", Offset = "0x2A8C338", VA = "0x2A8C338")]
			public Builder ClearMotionEvent()
			{
				return null;
			}

			[Token(Token = "0x600290F")]
			[Address(RVA = "0x2A8C39C", Offset = "0x2A8C39C", VA = "0x2A8C39C")]
			public Builder SetGyroscopeEvent(Types.GyroscopeEvent value)
			{
				return null;
			}

			[Token(Token = "0x6002910")]
			[Address(RVA = "0x2A8C434", Offset = "0x2A8C434", VA = "0x2A8C434")]
			public Builder SetGyroscopeEvent(Types.GyroscopeEvent.Builder builderForValue)
			{
				return null;
			}

			[Token(Token = "0x6002911")]
			[Address(RVA = "0x2A8ACC4", Offset = "0x2A8ACC4", VA = "0x2A8ACC4")]
			public Builder MergeGyroscopeEvent(Types.GyroscopeEvent value)
			{
				return null;
			}

			[Token(Token = "0x6002912")]
			[Address(RVA = "0x2A8C544", Offset = "0x2A8C544", VA = "0x2A8C544")]
			public Builder ClearGyroscopeEvent()
			{
				return null;
			}

			[Token(Token = "0x6002916")]
			[Address(RVA = "0x2A8C5A8", Offset = "0x2A8C5A8", VA = "0x2A8C5A8")]
			public Builder SetAccelerometerEvent(Types.AccelerometerEvent value)
			{
				return null;
			}

			[Token(Token = "0x6002917")]
			[Address(RVA = "0x2A8C640", Offset = "0x2A8C640", VA = "0x2A8C640")]
			public Builder SetAccelerometerEvent(Types.AccelerometerEvent.Builder builderForValue)
			{
				return null;
			}

			[Token(Token = "0x6002918")]
			[Address(RVA = "0x2A8AE4C", Offset = "0x2A8AE4C", VA = "0x2A8AE4C")]
			public Builder MergeAccelerometerEvent(Types.AccelerometerEvent value)
			{
				return null;
			}

			[Token(Token = "0x6002919")]
			[Address(RVA = "0x2A8C750", Offset = "0x2A8C750", VA = "0x2A8C750")]
			public Builder ClearAccelerometerEvent()
			{
				return null;
			}

			[Token(Token = "0x600291D")]
			[Address(RVA = "0x2A8C7B4", Offset = "0x2A8C7B4", VA = "0x2A8C7B4")]
			public Builder SetDepthMapEvent(Types.DepthMapEvent value)
			{
				return null;
			}

			[Token(Token = "0x600291E")]
			[Address(RVA = "0x2A8C84C", Offset = "0x2A8C84C", VA = "0x2A8C84C")]
			public Builder SetDepthMapEvent(Types.DepthMapEvent.Builder builderForValue)
			{
				return null;
			}

			[Token(Token = "0x600291F")]
			[Address(RVA = "0x2A8AFD4", Offset = "0x2A8AFD4", VA = "0x2A8AFD4")]
			public Builder MergeDepthMapEvent(Types.DepthMapEvent value)
			{
				return null;
			}

			[Token(Token = "0x6002920")]
			[Address(RVA = "0x2A8C95C", Offset = "0x2A8C95C", VA = "0x2A8C95C")]
			public Builder ClearDepthMapEvent()
			{
				return null;
			}

			[Token(Token = "0x6002924")]
			[Address(RVA = "0x2A8C9C0", Offset = "0x2A8C9C0", VA = "0x2A8C9C0")]
			public Builder SetOrientationEvent(Types.OrientationEvent value)
			{
				return null;
			}

			[Token(Token = "0x6002925")]
			[Address(RVA = "0x2A8CA58", Offset = "0x2A8CA58", VA = "0x2A8CA58")]
			public Builder SetOrientationEvent(Types.OrientationEvent.Builder builderForValue)
			{
				return null;
			}

			[Token(Token = "0x6002926")]
			[Address(RVA = "0x2A8B15C", Offset = "0x2A8B15C", VA = "0x2A8B15C")]
			public Builder MergeOrientationEvent(Types.OrientationEvent value)
			{
				return null;
			}

			[Token(Token = "0x6002927")]
			[Address(RVA = "0x2A8CB08", Offset = "0x2A8CB08", VA = "0x2A8CB08")]
			public Builder ClearOrientationEvent()
			{
				return null;
			}

			[Token(Token = "0x600292B")]
			[Address(RVA = "0x2A8CB6C", Offset = "0x2A8CB6C", VA = "0x2A8CB6C")]
			public Builder SetKeyEvent(Types.KeyEvent value)
			{
				return null;
			}

			[Token(Token = "0x600292C")]
			[Address(RVA = "0x2A8CC04", Offset = "0x2A8CC04", VA = "0x2A8CC04")]
			public Builder SetKeyEvent(Types.KeyEvent.Builder builderForValue)
			{
				return null;
			}

			[Token(Token = "0x600292D")]
			[Address(RVA = "0x2A8B2E8", Offset = "0x2A8B2E8", VA = "0x2A8B2E8")]
			public Builder MergeKeyEvent(Types.KeyEvent value)
			{
				return null;
			}

			[Token(Token = "0x600292E")]
			[Address(RVA = "0x2A8CD14", Offset = "0x2A8CD14", VA = "0x2A8CD14")]
			public Builder ClearKeyEvent()
			{
				return null;
			}
		}

		[Token(Token = "0x4001592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly PhoneEvent defaultInstance;

		[Token(Token = "0x4001593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly string[] _phoneEventFieldNames;

		[Token(Token = "0x4001594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly uint[] _phoneEventFieldTags;

		[Token(Token = "0x4001595")]
		public const int TypeFieldNumber = 1;

		[Token(Token = "0x4001596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool hasType;

		[Token(Token = "0x4001597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Types.Type type_;

		[Token(Token = "0x4001598")]
		public const int MotionEventFieldNumber = 2;

		[Token(Token = "0x4001599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool hasMotionEvent;

		[Token(Token = "0x400159A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Types.MotionEvent motionEvent_;

		[Token(Token = "0x400159B")]
		public const int GyroscopeEventFieldNumber = 3;

		[Token(Token = "0x400159C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool hasGyroscopeEvent;

		[Token(Token = "0x400159D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Types.GyroscopeEvent gyroscopeEvent_;

		[Token(Token = "0x400159E")]
		public const int AccelerometerEventFieldNumber = 4;

		[Token(Token = "0x400159F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool hasAccelerometerEvent;

		[Token(Token = "0x40015A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Types.AccelerometerEvent accelerometerEvent_;

		[Token(Token = "0x40015A1")]
		public const int DepthMapEventFieldNumber = 5;

		[Token(Token = "0x40015A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool hasDepthMapEvent;

		[Token(Token = "0x40015A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Types.DepthMapEvent depthMapEvent_;

		[Token(Token = "0x40015A4")]
		public const int OrientationEventFieldNumber = 6;

		[Token(Token = "0x40015A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool hasOrientationEvent;

		[Token(Token = "0x40015A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Types.OrientationEvent orientationEvent_;

		[Token(Token = "0x40015A7")]
		public const int KeyEventFieldNumber = 7;

		[Token(Token = "0x40015A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool hasKeyEvent;

		[Token(Token = "0x40015A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Types.KeyEvent keyEvent_;

		[Token(Token = "0x40015AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int memoizedSerializedSize;

		[Token(Token = "0x1700026D")]
		public static PhoneEvent DefaultInstance
		{
			[Token(Token = "0x6001788")]
			[Address(RVA = "0x2A88820", Offset = "0x2A88820", VA = "0x2A88820")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026E")]
		public override PhoneEvent DefaultInstanceForType
		{
			[Token(Token = "0x6001789")]
			[Address(RVA = "0x2A88888", Offset = "0x2A88888", VA = "0x2A88888", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026F")]
		protected override PhoneEvent ThisMessage
		{
			[Token(Token = "0x600178A")]
			[Address(RVA = "0x2A8892C", Offset = "0x2A8892C", VA = "0x2A8892C", Slot = "17")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000270")]
		public bool HasType
		{
			[Token(Token = "0x600178B")]
			[Address(RVA = "0x2A88930", Offset = "0x2A88930", VA = "0x2A88930")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000271")]
		public Types.Type Type
		{
			[Token(Token = "0x600178C")]
			[Address(RVA = "0x2A88938", Offset = "0x2A88938", VA = "0x2A88938")]
			get
			{
				return default(Types.Type);
			}
		}

		[Token(Token = "0x17000272")]
		public bool HasMotionEvent
		{
			[Token(Token = "0x600178D")]
			[Address(RVA = "0x2A88940", Offset = "0x2A88940", VA = "0x2A88940")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000273")]
		public Types.MotionEvent MotionEvent
		{
			[Token(Token = "0x600178E")]
			[Address(RVA = "0x2A88948", Offset = "0x2A88948", VA = "0x2A88948")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000274")]
		public bool HasGyroscopeEvent
		{
			[Token(Token = "0x600178F")]
			[Address(RVA = "0x2A889F8", Offset = "0x2A889F8", VA = "0x2A889F8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000275")]
		public Types.GyroscopeEvent GyroscopeEvent
		{
			[Token(Token = "0x6001790")]
			[Address(RVA = "0x2A88A00", Offset = "0x2A88A00", VA = "0x2A88A00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000276")]
		public bool HasAccelerometerEvent
		{
			[Token(Token = "0x6001791")]
			[Address(RVA = "0x2A88AB0", Offset = "0x2A88AB0", VA = "0x2A88AB0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000277")]
		public Types.AccelerometerEvent AccelerometerEvent
		{
			[Token(Token = "0x6001792")]
			[Address(RVA = "0x2A88AB8", Offset = "0x2A88AB8", VA = "0x2A88AB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000278")]
		public bool HasDepthMapEvent
		{
			[Token(Token = "0x6001793")]
			[Address(RVA = "0x2A88B68", Offset = "0x2A88B68", VA = "0x2A88B68")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000279")]
		public Types.DepthMapEvent DepthMapEvent
		{
			[Token(Token = "0x6001794")]
			[Address(RVA = "0x2A88B70", Offset = "0x2A88B70", VA = "0x2A88B70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027A")]
		public bool HasOrientationEvent
		{
			[Token(Token = "0x6001795")]
			[Address(RVA = "0x2A88C20", Offset = "0x2A88C20", VA = "0x2A88C20")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700027B")]
		public Types.OrientationEvent OrientationEvent
		{
			[Token(Token = "0x6001796")]
			[Address(RVA = "0x2A88C28", Offset = "0x2A88C28", VA = "0x2A88C28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027C")]
		public bool HasKeyEvent
		{
			[Token(Token = "0x6001797")]
			[Address(RVA = "0x2A88CD8", Offset = "0x2A88CD8", VA = "0x2A88CD8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700027D")]
		public Types.KeyEvent KeyEvent
		{
			[Token(Token = "0x6001798")]
			[Address(RVA = "0x2A88CE0", Offset = "0x2A88CE0", VA = "0x2A88CE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027E")]
		public override bool IsInitialized
		{
			[Token(Token = "0x6001799")]
			[Address(RVA = "0x2A88D90", Offset = "0x2A88D90", VA = "0x2A88D90", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700027F")]
		public override int SerializedSize
		{
			[Token(Token = "0x600179B")]
			[Address(RVA = "0x2A892C0", Offset = "0x2A892C0", VA = "0x2A892C0", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001787")]
		[Address(RVA = "0x2A887C0", Offset = "0x2A887C0", VA = "0x2A887C0")]
		private PhoneEvent()
		{
		}

		[Token(Token = "0x600179A")]
		[Address(RVA = "0x2A88D98", Offset = "0x2A88D98", VA = "0x2A88D98", Slot = "14")]
		public override void WriteTo(ICodedOutputStream output)
		{
		}

		[Token(Token = "0x600179C")]
		[Address(RVA = "0x2A8952C", Offset = "0x2A8952C", VA = "0x2A8952C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x600179D")]
		[Address(RVA = "0x2A89644", Offset = "0x2A89644", VA = "0x2A89644", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600179E")]
		[Address(RVA = "0x2A898D4", Offset = "0x2A898D4", VA = "0x2A898D4", Slot = "15")]
		public override void PrintTo(TextWriter writer)
		{
		}

		[Token(Token = "0x600179F")]
		[Address(RVA = "0x2A89A34", Offset = "0x2A89A34", VA = "0x2A89A34")]
		public static PhoneEvent ParseFrom(ByteString data)
		{
			return null;
		}

		[Token(Token = "0x60017A0")]
		[Address(RVA = "0x2A89B1C", Offset = "0x2A89B1C", VA = "0x2A89B1C")]
		public static PhoneEvent ParseFrom(ByteString data, ExtensionRegistry extensionRegistry)
		{
			return null;
		}

		[Token(Token = "0x60017A1")]
		[Address(RVA = "0x2A89BBC", Offset = "0x2A89BBC", VA = "0x2A89BBC")]
		public static PhoneEvent ParseFrom(byte[] data)
		{
			return null;
		}

		[Token(Token = "0x60017A2")]
		[Address(RVA = "0x2A89C4C", Offset = "0x2A89C4C", VA = "0x2A89C4C")]
		public static PhoneEvent ParseFrom(byte[] data, ExtensionRegistry extensionRegistry)
		{
			return null;
		}

		[Token(Token = "0x60017A3")]
		[Address(RVA = "0x2A89CEC", Offset = "0x2A89CEC", VA = "0x2A89CEC")]
		public static PhoneEvent ParseFrom(Stream input)
		{
			return null;
		}

		[Token(Token = "0x60017A4")]
		[Address(RVA = "0x2A89D7C", Offset = "0x2A89D7C", VA = "0x2A89D7C")]
		public static PhoneEvent ParseFrom(Stream input, ExtensionRegistry extensionRegistry)
		{
			return null;
		}

		[Token(Token = "0x60017A5")]
		[Address(RVA = "0x2A89E1C", Offset = "0x2A89E1C", VA = "0x2A89E1C")]
		public static PhoneEvent ParseDelimitedFrom(Stream input)
		{
			return null;
		}

		[Token(Token = "0x60017A6")]
		[Address(RVA = "0x2A89EAC", Offset = "0x2A89EAC", VA = "0x2A89EAC")]
		public static PhoneEvent ParseDelimitedFrom(Stream input, ExtensionRegistry extensionRegistry)
		{
			return null;
		}

		[Token(Token = "0x60017A7")]
		[Address(RVA = "0x2A89F4C", Offset = "0x2A89F4C", VA = "0x2A89F4C")]
		public static PhoneEvent ParseFrom(ICodedInputStream input)
		{
			return null;
		}

		[Token(Token = "0x60017A8")]
		[Address(RVA = "0x2A89FDC", Offset = "0x2A89FDC", VA = "0x2A89FDC")]
		public static PhoneEvent ParseFrom(ICodedInputStream input, ExtensionRegistry extensionRegistry)
		{
			return null;
		}

		[Token(Token = "0x60017A9")]
		[Address(RVA = "0x2A8A07C", Offset = "0x2A8A07C", VA = "0x2A8A07C")]
		private PhoneEvent MakeReadOnly()
		{
			return null;
		}

		[Token(Token = "0x60017AA")]
		[Address(RVA = "0x2A89AC4", Offset = "0x2A89AC4", VA = "0x2A89AC4")]
		public static Builder CreateBuilder()
		{
			return null;
		}

		[Token(Token = "0x60017AB")]
		[Address(RVA = "0x2A8A158", Offset = "0x2A8A158", VA = "0x2A8A158", Slot = "13")]
		public override Builder ToBuilder()
		{
			return null;
		}

		[Token(Token = "0x60017AC")]
		[Address(RVA = "0x2A8A21C", Offset = "0x2A8A21C", VA = "0x2A8A21C", Slot = "12")]
		public override Builder CreateBuilderForType()
		{
			return null;
		}

		[Token(Token = "0x60017AD")]
		[Address(RVA = "0x2A8A1BC", Offset = "0x2A8A1BC", VA = "0x2A8A1BC")]
		public static Builder CreateBuilder(PhoneEvent prototype)
		{
			return null;
		}

		[Token(Token = "0x60017AE")]
		[Address(RVA = "0x2A8A2EC", Offset = "0x2A8A2EC", VA = "0x2A8A2EC")]
		static PhoneEvent()
		{
		}
	}
}
namespace proto.Proto
{
	[Token(Token = "0x200030E")]
	[DebuggerNonUserCode]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1468A6C", Offset = "0x1468A6C")]
	[AttributeAttribute(Name = "GeneratedCodeAttribute", RVA = "0x1468A6C", Offset = "0x1468A6C")]
	public static class PhoneEvent
	{
		[Token(Token = "0x40015AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly object Descriptor;

		[Token(Token = "0x60017AF")]
		[Address(RVA = "0x3FE2DC8", Offset = "0x3FE2DC8", VA = "0x3FE2DC8")]
		public static void RegisterAllExtensions(ExtensionRegistry registry)
		{
		}

		[Token(Token = "0x60017B0")]
		[Address(RVA = "0x3FE2DCC", Offset = "0x3FE2DCC", VA = "0x3FE2DCC")]
		static PhoneEvent()
		{
		}
	}
}
namespace Gvr.Internal
{
	[Token(Token = "0x200030F")]
	public class GvrBetaHeadsetProvider
	{
		[Token(Token = "0x40015AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr seeThroughConfig;

		[Token(Token = "0x60017B1")]
		[Address(RVA = "0x20ABBF4", Offset = "0x20ABBF4", VA = "0x20ABBF4")]
		private static void Initialize()
		{
		}

		[Token(Token = "0x60017B2")]
		[Address(RVA = "0x209E610", Offset = "0x209E610", VA = "0x209E610")]
		public static void SetSeeThroughConfig(GvrBetaSeeThroughCameraMode cameraMode, GvrBetaSeeThroughSceneType sceneType)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60017B3")]
		[Address(RVA = "0x20ABC50", Offset = "0x20ABC50", VA = "0x20ABC50")]
		private static extern IntPtr gvr_beta_see_through_config_create(IntPtr gvr_context);

		[PreserveSig]
		[Token(Token = "0x60017B4")]
		[Address(RVA = "0x20ABCD0", Offset = "0x20ABCD0", VA = "0x20ABCD0")]
		private static extern void gvr_beta_see_through_config_set_camera_mode(IntPtr config, int camera_mode);

		[PreserveSig]
		[Token(Token = "0x60017B5")]
		[Address(RVA = "0x20ABD60", Offset = "0x20ABD60", VA = "0x20ABD60")]
		private static extern void gvr_beta_see_through_config_set_scene_type(IntPtr config, int scene_type);

		[PreserveSig]
		[Token(Token = "0x60017B6")]
		[Address(RVA = "0x20ABDF0", Offset = "0x20ABDF0", VA = "0x20ABDF0")]
		private static extern void gvr_beta_set_see_through_config(IntPtr context, IntPtr config);

		[Token(Token = "0x60017B7")]
		[Address(RVA = "0x20ABE80", Offset = "0x20ABE80", VA = "0x20ABE80")]
		public GvrBetaHeadsetProvider()
		{
		}
	}
	[Token(Token = "0x2000310")]
	public class GvrBetaSettingsProvider
	{
		[Serializable]
		[Token(Token = "0x20006AD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A88C", Offset = "0x146A88C")]
		private sealed class <>c
		{
			[Token(Token = "0x4002698")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002699")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Converter<GvrBetaFeature, int> <>9__3_0;

			[Token(Token = "0x6002930")]
			[Address(RVA = "0x2B241D0", Offset = "0x2B241D0", VA = "0x2B241D0")]
			public <>c()
			{
			}

			[Token(Token = "0x6002931")]
			[Address(RVA = "0x2B241D8", Offset = "0x2B241D8", VA = "0x2B241D8")]
			internal int <FeaturesToIds>b__3_0(GvrBetaFeature value)
			{
				return default(int);
			}
		}

		[Token(Token = "0x60017B8")]
		[Address(RVA = "0x2B23DE4", Offset = "0x2B23DE4", VA = "0x2B23DE4")]
		public static bool IsFeatureSupported(GvrBetaFeature feature)
		{
			return default(bool);
		}

		[Token(Token = "0x60017B9")]
		[Address(RVA = "0x2B23E10", Offset = "0x2B23E10", VA = "0x2B23E10")]
		public static bool IsFeatureEnabled(GvrBetaFeature feature)
		{
			return default(bool);
		}

		[Token(Token = "0x60017BA")]
		[Address(RVA = "0x2B23ED8", Offset = "0x2B23ED8", VA = "0x2B23ED8")]
		public static void RequestFeatures(GvrBetaFeature[] requiredFeatures, GvrBetaFeature[] optionalFeatures)
		{
		}

		[Token(Token = "0x60017BB")]
		[Address(RVA = "0x2B23F84", Offset = "0x2B23F84", VA = "0x2B23F84")]
		private static int[] FeaturesToIds(GvrBetaFeature[] features)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60017BC")]
		[Address(RVA = "0x2B23E40", Offset = "0x2B23E40", VA = "0x2B23E40")]
		private static extern bool gvr_user_prefs_is_feature_enabled(IntPtr user_prefs, int runtime_feature);

		[PreserveSig]
		[Token(Token = "0x60017BD")]
		[Address(RVA = "0x2B24090", Offset = "0x2B24090", VA = "0x2B24090")]
		private static extern void gvr_request_features(IntPtr gvr_context, int[] required_features, int required_count, int[] optional_features, int optional_count, IntPtr on_complete_activity);

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0x2B24160", Offset = "0x2B24160", VA = "0x2B24160")]
		public GvrBetaSettingsProvider()
		{
		}
	}
	[Token(Token = "0x2000311")]
	internal static class ControllerProviderFactory
	{
		[Token(Token = "0x60017BF")]
		[Address(RVA = "0x20A9D50", Offset = "0x20A9D50", VA = "0x20A9D50")]
		internal static IControllerProvider CreateControllerProvider(GvrControllerInput owner)
		{
			return null;
		}
	}
	[Token(Token = "0x2000312")]
	internal class AndroidNativeShimControllerProvider : IControllerProvider, IDisposable
	{
		[Token(Token = "0x20006AE")]
		private enum GvrShimUnitySupport
		{
			[Token(Token = "0x400269B")]
			Supported,
			[Token(Token = "0x400269C")]
			PluginNotPresent,
			[Token(Token = "0x400269D")]
			ApiLevelUnavailable,
			[Token(Token = "0x400269E")]
			DeviceNotSupported
		}

		[Token(Token = "0x20006AF")]
		private enum GvrShimConnectionStatus
		{
			[Token(Token = "0x40026A0")]
			Disconnected = 0,
			[Token(Token = "0x40026A1")]
			Scanning = 1,
			[Token(Token = "0x40026A2")]
			Connecting = 2,
			[Token(Token = "0x40026A3")]
			Connected = 3,
			[Token(Token = "0x40026A4")]
			Error = 100
		}

		[Token(Token = "0x20006B0")]
		private enum GvrShimTrackedDataAvailableFlags
		{
			[Token(Token = "0x40026A6")]
			PositionAvailable = 2,
			[Token(Token = "0x40026A7")]
			RotationAvailable = 4,
			[Token(Token = "0x40026A8")]
			GyroAvailable = 8,
			[Token(Token = "0x40026A9")]
			AccelerationAvailable = 0x10
		}

		[Token(Token = "0x20006B1")]
		private struct GvrShimUnityControllerState
		{
			[Token(Token = "0x40026AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 position;

			[Token(Token = "0x40026AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Quaternion orientation;

			[Token(Token = "0x40026AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 gyro;

			[Token(Token = "0x40026AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 acceleration;

			[Token(Token = "0x40026AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Vector2 touchPos;

			[Token(Token = "0x40026AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public int buttonState;

			[Token(Token = "0x40026B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int buttonUp;

			[Token(Token = "0x40026B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public int buttonDown;

			[Token(Token = "0x40026B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public int recentered;

			[Token(Token = "0x40026B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public int batteryCharging;

			[Token(Token = "0x40026B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public int batteryLevel;

			[Token(Token = "0x40026B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public int connectionState;

			[Token(Token = "0x40026B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public int trackedDataAvailable;
		}

		[Token(Token = "0x40015AD")]
		private const int GVR_SHIM_UNITY_API_LEVEL = 1;

		[Token(Token = "0x40015AE")]
		private const int GVR_SHIM_OK = 1;

		[Token(Token = "0x40015AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int lastUpdateFrame;

		[Token(Token = "0x40015B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MutablePose3D pose3d;

		[Token(Token = "0x40015B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GvrControllerButton[] lastButtonStates;

		[Token(Token = "0x40015B2")]
		private const string shimDllName = "gvrshim";

		[Token(Token = "0x17000280")]
		public bool SupportsBatteryStatus
		{
			[Token(Token = "0x60017C4")]
			[Address(RVA = "0x20A957C", Offset = "0x20A957C", VA = "0x20A957C", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000281")]
		public int MaxControllerCount
		{
			[Token(Token = "0x60017C5")]
			[Address(RVA = "0x20A9584", Offset = "0x20A9584", VA = "0x20A9584", Slot = "5")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0x20A8F98", Offset = "0x20A8F98", VA = "0x20A8F98")]
		public static bool ShimAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x60017C1")]
		[Address(RVA = "0x20A91C0", Offset = "0x20A91C0", VA = "0x20A91C0")]
		internal AndroidNativeShimControllerProvider()
		{
		}

		[Token(Token = "0x60017C2")]
		[Address(RVA = "0x20A9400", Offset = "0x20A9400", VA = "0x20A9400", Slot = "9")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0x20A947C", Offset = "0x20A947C", VA = "0x20A947C", Slot = "10")]
		protected virtual void Dispose(bool disposing)
		{
		}

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0x20A9694", Offset = "0x20A9694", VA = "0x20A9694", Slot = "6")]
		public void OnPause()
		{
		}

		[Token(Token = "0x60017C7")]
		[Address(RVA = "0x20A978C", Offset = "0x20A978C", VA = "0x20A978C", Slot = "7")]
		public void OnResume()
		{
		}

		[Token(Token = "0x60017C8")]
		[Address(RVA = "0x20A9810", Offset = "0x20A9810", VA = "0x20A9810")]
		private static GvrConnectionState ConvertConnectionState(int connectionState)
		{
			return default(GvrConnectionState);
		}

		[Token(Token = "0x60017C9")]
		[Address(RVA = "0x20A981C", Offset = "0x20A981C", VA = "0x20A981C", Slot = "8")]
		public void ReadState(ControllerState outState, int controller_id)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60017CA")]
		[Address(RVA = "0x20A9CD0", Offset = "0x20A9CD0", VA = "0x20A9CD0")]
		private static extern int GvrShimUnity_getGVRVersion(ref float version);

		[PreserveSig]
		[Token(Token = "0x60017CB")]
		[Address(RVA = "0x20A9130", Offset = "0x20A9130", VA = "0x20A9130")]
		private static extern int GvrShimUnity_getGVRShimSupportStatus(uint expected_api_level, ref int gvrshim_support_status);

		[PreserveSig]
		[Token(Token = "0x60017CC")]
		[Address(RVA = "0x20A930C", Offset = "0x20A930C", VA = "0x20A930C")]
		private static extern int GvrShimUnity_initShimWithContext(IntPtr gvr_context);

		[PreserveSig]
		[Token(Token = "0x60017CD")]
		[Address(RVA = "0x20A9508", Offset = "0x20A9508", VA = "0x20A9508")]
		private static extern int GvrShimUnity_destroyShim();

		[PreserveSig]
		[Token(Token = "0x60017CE")]
		[Address(RVA = "0x20A9718", Offset = "0x20A9718", VA = "0x20A9718")]
		private static extern int GvrShimUnity_pauseShim();

		[PreserveSig]
		[Token(Token = "0x60017CF")]
		[Address(RVA = "0x20A938C", Offset = "0x20A938C", VA = "0x20A938C")]
		private static extern int GvrShimUnity_resumeShim();

		[PreserveSig]
		[Token(Token = "0x60017D0")]
		[Address(RVA = "0x20A9B28", Offset = "0x20A9B28", VA = "0x20A9B28")]
		private static extern int GvrShimUnity_updateState();

		[PreserveSig]
		[Token(Token = "0x60017D1")]
		[Address(RVA = "0x20A9B9C", Offset = "0x20A9B9C", VA = "0x20A9B9C")]
		private static extern int GvrShimUnity_getControllerConnectionStatus(int device, ref int status);

		[PreserveSig]
		[Token(Token = "0x60017D2")]
		[Address(RVA = "0x20A9C2C", Offset = "0x20A9C2C", VA = "0x20A9C2C")]
		private static extern int GvrShimUnity_getControllerState(int device, ref GvrShimUnityControllerState state);

		[PreserveSig]
		[Token(Token = "0x60017D3")]
		[Address(RVA = "0x20A9614", Offset = "0x20A9614", VA = "0x20A9614")]
		private static extern int GvrShimUnity_getControllerCount(ref int count);
	}
	[Token(Token = "0x2000313")]
	internal class DummyControllerProvider : IControllerProvider, IDisposable
	{
		[Token(Token = "0x40015B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ControllerState dummyState;

		[Token(Token = "0x17000282")]
		public bool SupportsBatteryStatus
		{
			[Token(Token = "0x60017D4")]
			[Address(RVA = "0x20AA44C", Offset = "0x20AA44C", VA = "0x20AA44C", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000283")]
		public int MaxControllerCount
		{
			[Token(Token = "0x60017D5")]
			[Address(RVA = "0x20AA454", Offset = "0x20AA454", VA = "0x20AA454", Slot = "5")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60017D6")]
		[Address(RVA = "0x20A9E00", Offset = "0x20A9E00", VA = "0x20A9E00")]
		internal DummyControllerProvider()
		{
		}

		[Token(Token = "0x60017D7")]
		[Address(RVA = "0x20AA45C", Offset = "0x20AA45C", VA = "0x20AA45C", Slot = "9")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60017D8")]
		[Address(RVA = "0x20AA460", Offset = "0x20AA460", VA = "0x20AA460", Slot = "8")]
		public void ReadState(ControllerState outState, int controller_id)
		{
		}

		[Token(Token = "0x60017D9")]
		[Address(RVA = "0x20AA480", Offset = "0x20AA480", VA = "0x20AA480", Slot = "6")]
		public void OnPause()
		{
		}

		[Token(Token = "0x60017DA")]
		[Address(RVA = "0x20AA484", Offset = "0x20AA484", VA = "0x20AA484", Slot = "7")]
		public void OnResume()
		{
		}
	}
	[Token(Token = "0x2000314")]
	internal class MouseControllerProvider : IControllerProvider, IDisposable
	{
		[Token(Token = "0x40015B4")]
		private const string AXIS_MOUSE_X = "Mouse X";

		[Token(Token = "0x40015B5")]
		private const string AXIS_MOUSE_Y = "Mouse Y";

		[Token(Token = "0x40015B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ControllerState state;

		[Token(Token = "0x40015B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector2 mouseDelta;

		[Token(Token = "0x40015B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool wasTouching;

		[Token(Token = "0x40015B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private GvrControllerButton lastButtonsState;

		[Token(Token = "0x40015BA")]
		private const float ROTATE_SENSITIVITY = 4.5f;

		[Token(Token = "0x40015BB")]
		private const float TOUCH_SENSITIVITY = 0.12f;

		[Token(Token = "0x40015BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Vector3 INVERT_Y;

		[Token(Token = "0x40015BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly ControllerState dummyState;

		[Token(Token = "0x17000284")]
		public static bool IsMouseAvailable
		{
			[Token(Token = "0x60017DB")]
			[Address(RVA = "0x2B2454C", Offset = "0x2B2454C", VA = "0x2B2454C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000285")]
		public static bool IsActivateButtonPressed
		{
			[Token(Token = "0x60017DC")]
			[Address(RVA = "0x2B245C4", Offset = "0x2B245C4", VA = "0x2B245C4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000286")]
		public static bool IsClickButtonPressed
		{
			[Token(Token = "0x60017DD")]
			[Address(RVA = "0x2B245F8", Offset = "0x2B245F8", VA = "0x2B245F8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000287")]
		public static bool IsAppButtonPressed
		{
			[Token(Token = "0x60017DE")]
			[Address(RVA = "0x2B24604", Offset = "0x2B24604", VA = "0x2B24604")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000288")]
		public static bool IsHomeButtonPressed
		{
			[Token(Token = "0x60017DF")]
			[Address(RVA = "0x2B24610", Offset = "0x2B24610", VA = "0x2B24610")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000289")]
		public static bool IsTouching
		{
			[Token(Token = "0x60017E0")]
			[Address(RVA = "0x2B2461C", Offset = "0x2B2461C", VA = "0x2B2461C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700028A")]
		public bool SupportsBatteryStatus
		{
			[Token(Token = "0x60017E1")]
			[Address(RVA = "0x2B24650", Offset = "0x2B24650", VA = "0x2B24650", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700028B")]
		public int MaxControllerCount
		{
			[Token(Token = "0x60017E2")]
			[Address(RVA = "0x2B24658", Offset = "0x2B24658", VA = "0x2B24658", Slot = "5")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60017E3")]
		[Address(RVA = "0x2B24660", Offset = "0x2B24660", VA = "0x2B24660")]
		internal MouseControllerProvider()
		{
		}

		[Token(Token = "0x60017E4")]
		[Address(RVA = "0x2B246D4", Offset = "0x2B246D4", VA = "0x2B246D4", Slot = "9")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60017E5")]
		[Address(RVA = "0x2B246D8", Offset = "0x2B246D8", VA = "0x2B246D8", Slot = "8")]
		public void ReadState(ControllerState outState, int controller_id)
		{
		}

		[Token(Token = "0x60017E6")]
		[Address(RVA = "0x2B2494C", Offset = "0x2B2494C", VA = "0x2B2494C", Slot = "6")]
		public void OnPause()
		{
		}

		[Token(Token = "0x60017E7")]
		[Address(RVA = "0x2B24950", Offset = "0x2B24950", VA = "0x2B24950", Slot = "7")]
		public void OnResume()
		{
		}

		[Token(Token = "0x60017E8")]
		[Address(RVA = "0x2B2480C", Offset = "0x2B2480C", VA = "0x2B2480C")]
		private void UpdateState()
		{
		}

		[Token(Token = "0x60017E9")]
		[Address(RVA = "0x2B24B2C", Offset = "0x2B24B2C", VA = "0x2B24B2C")]
		private void UpdateTouchPos()
		{
		}

		[Token(Token = "0x60017EA")]
		[Address(RVA = "0x2B24C34", Offset = "0x2B24C34", VA = "0x2B24C34")]
		private void UpdateOrientation()
		{
		}

		[Token(Token = "0x60017EB")]
		[Address(RVA = "0x2B24998", Offset = "0x2B24998", VA = "0x2B24998")]
		private void UpdateButtonStates()
		{
		}

		[Token(Token = "0x60017EC")]
		[Address(RVA = "0x2B24EBC", Offset = "0x2B24EBC", VA = "0x2B24EBC")]
		private void Recenter()
		{
		}

		[Token(Token = "0x60017ED")]
		[Address(RVA = "0x2B24E78", Offset = "0x2B24E78", VA = "0x2B24E78")]
		private void ClearTouchPos()
		{
		}

		[Token(Token = "0x60017EE")]
		[Address(RVA = "0x2B24954", Offset = "0x2B24954", VA = "0x2B24954")]
		private void ClearState()
		{
		}
	}
	[Token(Token = "0x2000315")]
	internal class ControllerState
	{
		[Token(Token = "0x40015BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal GvrConnectionState connectionState;

		[Token(Token = "0x40015BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal GvrControllerApiStatus apiStatus;

		[Token(Token = "0x40015C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal Quaternion orientation;

		[Token(Token = "0x40015C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal Vector3 position;

		[Token(Token = "0x40015C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal Vector3 gyro;

		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal Vector3 accel;

		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		internal Vector2 touchPos;

		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		internal bool recentered;

		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		internal bool is6DoF;

		[Token(Token = "0x40015C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal GvrControllerButton buttonsState;

		[Token(Token = "0x40015C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		internal GvrControllerButton buttonsDown;

		[Token(Token = "0x40015C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal GvrControllerButton buttonsUp;

		[Token(Token = "0x40015CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal string errorDetails;

		[Token(Token = "0x40015CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal IntPtr gvrPtr;

		[Token(Token = "0x40015CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal bool isCharging;

		[Token(Token = "0x40015CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		internal GvrControllerBatteryLevel batteryLevel;

		[Token(Token = "0x60017F0")]
		[Address(RVA = "0x20A9E70", Offset = "0x20A9E70", VA = "0x20A9E70")]
		public void CopyFrom(ControllerState other)
		{
		}

		[Token(Token = "0x60017F1")]
		[Address(RVA = "0x20A9F38", Offset = "0x20A9F38", VA = "0x20A9F38")]
		public void ClearTransientState()
		{
		}

		[Token(Token = "0x60017F2")]
		[Address(RVA = "0x20A9CBC", Offset = "0x20A9CBC", VA = "0x20A9CBC")]
		public void SetButtonsUpDownFromPrevious(GvrControllerButton prevButtonsState)
		{
		}

		[Token(Token = "0x60017F3")]
		[Address(RVA = "0x20A9F48", Offset = "0x20A9F48", VA = "0x20A9F48")]
		public ControllerState()
		{
		}
	}
	[Token(Token = "0x2000316")]
	internal class ControllerUtils
	{
		[Token(Token = "0x40015CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly GvrControllerHand[] AllHands;

		[Token(Token = "0x60017F4")]
		[Address(RVA = "0x20AA060", Offset = "0x20AA060", VA = "0x20AA060")]
		public static bool AnyButton(GvrControllerButton buttons)
		{
			return default(bool);
		}

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0x20AA17C", Offset = "0x20AA17C", VA = "0x20AA17C")]
		public static bool AnyButtonDown(GvrControllerButton buttons)
		{
			return default(bool);
		}

		[Token(Token = "0x60017F6")]
		[Address(RVA = "0x20AA298", Offset = "0x20AA298", VA = "0x20AA298")]
		public static bool AnyButtonUp(GvrControllerButton buttons)
		{
			return default(bool);
		}

		[Token(Token = "0x60017F7")]
		[Address(RVA = "0x20AA3B4", Offset = "0x20AA3B4", VA = "0x20AA3B4")]
		public ControllerUtils()
		{
		}
	}
	[Token(Token = "0x2000317")]
	internal class EmulatorConfig : MonoBehaviour
	{
		[Token(Token = "0x20006B2")]
		public enum Mode
		{
			[Token(Token = "0x40026B8")]
			OFF,
			[Token(Token = "0x40026B9")]
			USB,
			[Token(Token = "0x40026BA")]
			WIFI
		}

		[Token(Token = "0x40015CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static EmulatorConfig instance;

		[Token(Token = "0x40015D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mode PHONE_EVENT_MODE;

		[Token(Token = "0x40015D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly string USB_SERVER_IP;

		[Token(Token = "0x40015D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly string WIFI_SERVER_IP;

		[Token(Token = "0x1700028C")]
		public static EmulatorConfig Instance
		{
			[Token(Token = "0x60017F9")]
			[Address(RVA = "0x20AA7D4", Offset = "0x20AA7D4", VA = "0x20AA7D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017FA")]
		[Address(RVA = "0x20AAAAC", Offset = "0x20AAAAC", VA = "0x20AAAAC")]
		public EmulatorConfig()
		{
		}
	}
	[Token(Token = "0x2000318")]
	internal struct EmulatorGyroEvent
	{
		[Token(Token = "0x40015D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly long timestamp;

		[Token(Token = "0x40015D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly Vector3 value;

		[Token(Token = "0x60017FC")]
		[Address(RVA = "0x20AAB40", Offset = "0x20AAB40", VA = "0x20AAB40")]
		public EmulatorGyroEvent(PhoneEvent.Types.GyroscopeEvent proto)
		{
		}
	}
	[Token(Token = "0x2000319")]
	internal struct EmulatorAccelEvent
	{
		[Token(Token = "0x40015D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly long timestamp;

		[Token(Token = "0x40015D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly Vector3 value;

		[Token(Token = "0x60017FD")]
		[Address(RVA = "0x20AA744", Offset = "0x20AA744", VA = "0x20AA744")]
		public EmulatorAccelEvent(PhoneEvent.Types.AccelerometerEvent proto)
		{
		}
	}
	[Token(Token = "0x200031A")]
	internal struct EmulatorTouchEvent
	{
		[Token(Token = "0x20006B3")]
		public enum Action
		{
			[Token(Token = "0x40026BC")]
			kActionDown = 0,
			[Token(Token = "0x40026BD")]
			kActionUp = 1,
			[Token(Token = "0x40026BE")]
			kActionMove = 2,
			[Token(Token = "0x40026BF")]
			kActionCancel = 3,
			[Token(Token = "0x40026C0")]
			kActionPointerDown = 5,
			[Token(Token = "0x40026C1")]
			kActionPointerUp = 6,
			[Token(Token = "0x40026C2")]
			kActionHoverMove = 7,
			[Token(Token = "0x40026C3")]
			kActionHoverEnter = 9,
			[Token(Token = "0x40026C4")]
			kActionHoverExit = 10
		}

		[Token(Token = "0x20006B4")]
		public struct Pointer
		{
			[Token(Token = "0x40026C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly int fingerId;

			[Token(Token = "0x40026C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public readonly float normalizedX;

			[Token(Token = "0x40026C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public readonly float normalizedY;

			[Token(Token = "0x6002932")]
			[Address(RVA = "0x20AB410", Offset = "0x20AB410", VA = "0x20AB410")]
			public Pointer(int fingerId, float normalizedX, float normalizedY)
			{
			}

			[Token(Token = "0x6002933")]
			[Address(RVA = "0x20ABB2C", Offset = "0x20ABB2C", VA = "0x20ABB2C", Slot = "3")]
			public override string ToString()
			{
				return null;
			}
		}

		[Token(Token = "0x40015D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly int action;

		[Token(Token = "0x40015D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public readonly int relativeTimestamp;

		[Token(Token = "0x40015D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly List<Pointer> pointers;

		[Token(Token = "0x40015DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int ACTION_POINTER_INDEX_SHIFT;

		[Token(Token = "0x40015DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int ACTION_POINTER_INDEX_MASK;

		[Token(Token = "0x40015DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int ACTION_MASK;

		[Token(Token = "0x60017FE")]
		[Address(RVA = "0x20AB0E4", Offset = "0x20AB0E4", VA = "0x20AB0E4")]
		public EmulatorTouchEvent(PhoneEvent.Types.MotionEvent proto, long lastDownTimeMs)
		{
		}

		[Token(Token = "0x60017FF")]
		[Address(RVA = "0x20AB41C", Offset = "0x20AB41C", VA = "0x20AB41C")]
		public EmulatorTouchEvent(Action action, int pointerId, int relativeTimestamp, List<Pointer> pointers)
		{
		}

		[Token(Token = "0x6001800")]
		[Address(RVA = "0x20AB6A8", Offset = "0x20AB6A8", VA = "0x20AB6A8")]
		public Action getActionMasked()
		{
			return default(Action);
		}

		[Token(Token = "0x6001801")]
		[Address(RVA = "0x20AB71C", Offset = "0x20AB71C", VA = "0x20AB71C")]
		public Pointer getActionPointer()
		{
			return default(Pointer);
		}

		[Token(Token = "0x6001802")]
		[Address(RVA = "0x20AB628", Offset = "0x20AB628", VA = "0x20AB628")]
		private static int getActionUnmasked(Action action, int fingerIndex)
		{
			return default(int);
		}

		[Token(Token = "0x6001803")]
		[Address(RVA = "0x20AB580", Offset = "0x20AB580", VA = "0x20AB580")]
		private static int findPointerIndex(int fingerId, List<Pointer> pointers)
		{
			return default(int);
		}

		[Token(Token = "0x6001804")]
		[Address(RVA = "0x20AB7D4", Offset = "0x20AB7D4", VA = "0x20AB7D4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200031B")]
	internal struct EmulatorOrientationEvent
	{
		[Token(Token = "0x40015DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly long timestamp;

		[Token(Token = "0x40015DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly Quaternion orientation;

		[Token(Token = "0x6001806")]
		[Address(RVA = "0x20AB084", Offset = "0x20AB084", VA = "0x20AB084")]
		public EmulatorOrientationEvent(PhoneEvent.Types.OrientationEvent proto)
		{
		}
	}
	[Token(Token = "0x200031C")]
	internal struct EmulatorButtonEvent
	{
		[Token(Token = "0x20006B5")]
		public enum ButtonCode
		{
			[Token(Token = "0x40026C9")]
			kNone = 0,
			[Token(Token = "0x40026CA")]
			kHome = 3,
			[Token(Token = "0x40026CB")]
			kVolumeUp = 25,
			[Token(Token = "0x40026CC")]
			kVolumeDown = 24,
			[Token(Token = "0x40026CD")]
			kClick = 66,
			[Token(Token = "0x40026CE")]
			kApp = 82
		}

		[Token(Token = "0x40015DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly ButtonCode code;

		[Token(Token = "0x40015E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public readonly bool down;

		[Token(Token = "0x6001807")]
		[Address(RVA = "0x20AA7A8", Offset = "0x20AA7A8", VA = "0x20AA7A8")]
		public EmulatorButtonEvent(PhoneEvent.Types.KeyEvent proto)
		{
		}
	}
	[Token(Token = "0x200031D")]
	internal interface IControllerProvider : IDisposable
	{
		[Token(Token = "0x1700028D")]
		bool SupportsBatteryStatus
		{
			[Token(Token = "0x6001808")]
			get;
		}

		[Token(Token = "0x1700028E")]
		int MaxControllerCount
		{
			[Token(Token = "0x6001809")]
			get;
		}

		[Token(Token = "0x600180A")]
		void OnPause();

		[Token(Token = "0x600180B")]
		void OnResume();

		[Token(Token = "0x600180C")]
		void ReadState(ControllerState outState, int controller_id);
	}
	[Token(Token = "0x200031E")]
	internal static class HeadsetProviderFactory
	{
		[Token(Token = "0x600180D")]
		[Address(RVA = "0x2B24304", Offset = "0x2B24304", VA = "0x2B24304")]
		internal static IHeadsetProvider CreateProvider()
		{
			return null;
		}
	}
	[Token(Token = "0x200031F")]
	internal enum gvr_feature
	{
		[Token(Token = "0x40015E2")]
		HeadPose6dof = 3
	}
	[Token(Token = "0x2000320")]
	internal enum gvr_property_type
	{
		[Token(Token = "0x40015E4")]
		TrackingFloorHeight = 1,
		[Token(Token = "0x40015E5")]
		RecenterTransform,
		[Token(Token = "0x40015E6")]
		SafetyRegion,
		[Token(Token = "0x40015E7")]
		SafetyCylinderInnerRadius,
		[Token(Token = "0x40015E8")]
		SafetyCylinderOuterRadius
	}
	[Token(Token = "0x2000321")]
	internal enum gvr_value_type
	{
		[Token(Token = "0x40015EA")]
		None,
		[Token(Token = "0x40015EB")]
		Float,
		[Token(Token = "0x40015EC")]
		Double,
		[Token(Token = "0x40015ED")]
		Int,
		[Token(Token = "0x40015EE")]
		Int64,
		[Token(Token = "0x40015EF")]
		Flags,
		[Token(Token = "0x40015F0")]
		Sizei,
		[Token(Token = "0x40015F1")]
		Recti,
		[Token(Token = "0x40015F2")]
		Rectf,
		[Token(Token = "0x40015F3")]
		Vec2f,
		[Token(Token = "0x40015F4")]
		Vec3f,
		[Token(Token = "0x40015F5")]
		Quat,
		[Token(Token = "0x40015F6")]
		Mat4f,
		[Token(Token = "0x40015F7")]
		ClockTimePoint
	}
	[Token(Token = "0x2000322")]
	internal enum gvr_recenter_flags
	{
		[Token(Token = "0x40015F9")]
		None
	}
	[Token(Token = "0x2000323")]
	internal class AndroidNativeHeadsetProvider : IHeadsetProvider
	{
		[Token(Token = "0x20006B6")]
		private class GvrValue
		{
			[Token(Token = "0x40026CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static readonly int HEADER_SIZE;

			[Token(Token = "0x40026D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private gvr_value_header valueHeader;

			[Token(Token = "0x40026D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private byte[] buffer;

			[Token(Token = "0x40026D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private IntPtr bufferPtr;

			[Token(Token = "0x40026D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private IntPtr valuePtr;

			[Token(Token = "0x40026D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private GCHandle bufferHandle;

			[Token(Token = "0x17000587")]
			public IntPtr BufferPtr
			{
				[Token(Token = "0x6002936")]
				[Address(RVA = "0x20A6B44", Offset = "0x20A6B44", VA = "0x20A6B44")]
				get
				{
					return default(IntPtr);
				}
			}

			[Token(Token = "0x17000588")]
			public gvr_value_type TypeEnum
			{
				[Token(Token = "0x6002937")]
				[Address(RVA = "0x20A6AB0", Offset = "0x20A6AB0", VA = "0x20A6AB0")]
				get
				{
					return default(gvr_value_type);
				}
			}

			[Token(Token = "0x6002934")]
			[Address(RVA = "0x20A5A40", Offset = "0x20A5A40", VA = "0x20A5A40")]
			public GvrValue()
			{
			}

			[Token(Token = "0x6002935")]
			[Address(RVA = "0x20A6AD4", Offset = "0x20A6AD4", VA = "0x20A6AD4", Slot = "1")]
			~GvrValue()
			{
			}

			[Token(Token = "0x6002938")]
			[Address(RVA = "0x20A6A34", Offset = "0x20A6A34", VA = "0x20A6A34")]
			public void Parse()
			{
			}

			[Token(Token = "0x6002939")]
			[Address(RVA = "0x20A67B8", Offset = "0x20A67B8", VA = "0x20A67B8")]
			public int ToInt32()
			{
				return default(int);
			}

			[Token(Token = "0x600293A")]
			[Address(RVA = "0x20A6B4C", Offset = "0x20A6B4C", VA = "0x20A6B4C")]
			public long ToInt64()
			{
				return default(long);
			}

			[Token(Token = "0x600293B")]
			[Address(RVA = "0x20A64B0", Offset = "0x20A64B0", VA = "0x20A64B0")]
			public float ToFloat()
			{
				return default(float);
			}

			[Token(Token = "0x600293C")]
			[Address(RVA = "0x20A6BEC", Offset = "0x20A6BEC", VA = "0x20A6BEC")]
			public double ToDouble()
			{
				return default(double);
			}

			[Token(Token = "0x600293D")]
			[Address(RVA = "0x20A6C8C", Offset = "0x20A6C8C", VA = "0x20A6C8C")]
			public Vector2 ToVector2()
			{
				return default(Vector2);
			}

			[Token(Token = "0x600293E")]
			[Address(RVA = "0x20A6D74", Offset = "0x20A6D74", VA = "0x20A6D74")]
			public Vector3 ToVector3()
			{
				return default(Vector3);
			}

			[Token(Token = "0x600293F")]
			[Address(RVA = "0x20A6E60", Offset = "0x20A6E60", VA = "0x20A6E60")]
			public Vector4 ToVector4()
			{
				return default(Vector4);
			}

			[Token(Token = "0x6002940")]
			[Address(RVA = "0x20A6F4C", Offset = "0x20A6F4C", VA = "0x20A6F4C")]
			public Quaternion ToQuaternion()
			{
				return default(Quaternion);
			}

			[Token(Token = "0x6002941")]
			[Address(RVA = "0x20A7038", Offset = "0x20A7038", VA = "0x20A7038")]
			public gvr_rectf ToGvrRectf()
			{
				return default(gvr_rectf);
			}

			[Token(Token = "0x6002942")]
			[Address(RVA = "0x20A7124", Offset = "0x20A7124", VA = "0x20A7124")]
			public gvr_recti ToGvrRecti()
			{
				return default(gvr_recti);
			}

			[Token(Token = "0x6002943")]
			[Address(RVA = "0x20A6604", Offset = "0x20A6604", VA = "0x20A6604")]
			public Matrix4x4 ToMatrix4x4()
			{
				return default(Matrix4x4);
			}
		}

		[StructLayout(0)]
		[Token(Token = "0x20006B7")]
		private class gvr_recenter_event_data
		{
			[Token(Token = "0x40026D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal int recenter_event_type;

			[Token(Token = "0x40026D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal uint recenter_event_flags;

			[Token(Token = "0x40026D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal float[] pose_transform;

			[Token(Token = "0x6002945")]
			[Address(RVA = "0x20A5B74", Offset = "0x20A5B74", VA = "0x20A5B74")]
			public gvr_recenter_event_data()
			{
			}
		}

		[StructLayout(2)]
		[Token(Token = "0x20006B8")]
		private class gvr_event_header
		{
			[Token(Token = "0x40026D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal long timestamp;

			[Token(Token = "0x40026D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal int type;

			[Token(Token = "0x40026DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal int flags;

			[Token(Token = "0x6002946")]
			[Address(RVA = "0x20A5B6C", Offset = "0x20A5B6C", VA = "0x20A5B6C")]
			public gvr_event_header()
			{
			}
		}

		[StructLayout(2)]
		[Token(Token = "0x20006B9")]
		private class gvr_value_header
		{
			[Token(Token = "0x40026DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal gvr_value_type value_type;

			[Token(Token = "0x40026DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal int flags;

			[Token(Token = "0x6002947")]
			[Address(RVA = "0x20A6ACC", Offset = "0x20A6ACC", VA = "0x20A6ACC")]
			public gvr_value_header()
			{
			}
		}

		[Token(Token = "0x20006BA")]
		public struct gvr_sizei
		{
			[Token(Token = "0x40026DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal int width;

			[Token(Token = "0x40026DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal int height;
		}

		[Token(Token = "0x20006BB")]
		public struct gvr_recti
		{
			[Token(Token = "0x40026DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal int left;

			[Token(Token = "0x40026E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal int right;

			[Token(Token = "0x40026E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal int bottom;

			[Token(Token = "0x40026E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal int top;
		}

		[Token(Token = "0x20006BC")]
		public struct gvr_rectf
		{
			[Token(Token = "0x40026E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal float left;

			[Token(Token = "0x40026E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal float right;

			[Token(Token = "0x40026E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal float bottom;

			[Token(Token = "0x40026E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal float top;
		}

		[Token(Token = "0x40015FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr gvrContextPtr;

		[Token(Token = "0x40015FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GvrValue gvrValue;

		[Token(Token = "0x40015FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private gvr_event_header gvrEventHeader;

		[Token(Token = "0x40015FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private gvr_recenter_event_data gvrRecenterEventData;

		[Token(Token = "0x40015FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private byte[] gvrEventBuffer;

		[Token(Token = "0x40015FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GCHandle gvrEventHandle;

		[Token(Token = "0x4001600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private IntPtr gvrEventPtr;

		[Token(Token = "0x4001601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private IntPtr gvrPropertiesPtr;

		[Token(Token = "0x4001602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int supportsPositionalTracking;

		[Token(Token = "0x4001603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MutablePose3D transientRecenteredPose3d;

		[Token(Token = "0x4001604")]
		private const string DLL_NAME = "gvr";

		[Token(Token = "0x1700028F")]
		public bool SupportsPositionalTracking
		{
			[Token(Token = "0x600180E")]
			[Address(RVA = "0x20A57F4", Offset = "0x20A57F4", VA = "0x20A57F4", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600180F")]
		[Address(RVA = "0x20A58CC", Offset = "0x20A58CC", VA = "0x20A58CC")]
		internal AndroidNativeHeadsetProvider()
		{
		}

		[Token(Token = "0x6001810")]
		[Address(RVA = "0x20A5BE0", Offset = "0x20A5BE0", VA = "0x20A5BE0", Slot = "1")]
		~AndroidNativeHeadsetProvider()
		{
		}

		[Token(Token = "0x6001811")]
		[Address(RVA = "0x20A5C50", Offset = "0x20A5C50", VA = "0x20A5C50", Slot = "5")]
		public void PollEventState(ref HeadsetState state)
		{
		}

		[Token(Token = "0x6001812")]
		[Address(RVA = "0x20A5FE0", Offset = "0x20A5FE0", VA = "0x20A5FE0", Slot = "6")]
		public bool TryGetFloorHeight(ref float floorHeight)
		{
			return default(bool);
		}

		[Token(Token = "0x6001813")]
		[Address(RVA = "0x20A6550", Offset = "0x20A6550", VA = "0x20A6550", Slot = "7")]
		public bool TryGetRecenterTransform(ref Vector3 position, ref Quaternion rotation)
		{
			return default(bool);
		}

		[Token(Token = "0x6001814")]
		[Address(RVA = "0x20A6768", Offset = "0x20A6768", VA = "0x20A6768", Slot = "8")]
		public bool TryGetSafetyRegionType(ref GvrSafetyRegionType safetyType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001815")]
		[Address(RVA = "0x20A6858", Offset = "0x20A6858", VA = "0x20A6858", Slot = "9")]
		public bool TryGetSafetyCylinderInnerRadius(ref float innerRadius)
		{
			return default(bool);
		}

		[Token(Token = "0x6001816")]
		[Address(RVA = "0x20A68A8", Offset = "0x20A68A8", VA = "0x20A68A8", Slot = "10")]
		public bool TryGetSafetyCylinderOuterRadius(ref float outerRadius)
		{
			return default(bool);
		}

		[Token(Token = "0x6001817")]
		[Address(RVA = "0x20A6030", Offset = "0x20A6030", VA = "0x20A6030")]
		private bool _GvrGetProperty(gvr_property_type propertyType, GvrValue valueOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6001818")]
		[Address(RVA = "0x20A5F1C", Offset = "0x20A5F1C", VA = "0x20A5F1C")]
		private void _HandleRecenterEvent(ref HeadsetState state, gvr_recenter_event_data eventData)
		{
		}

		[Token(Token = "0x6001819")]
		[Address(RVA = "0x20A68F8", Offset = "0x20A68F8", VA = "0x20A68F8")]
		private gvr_value_type GetPropertyValueType(gvr_property_type propertyType)
		{
			return default(gvr_value_type);
		}

		[PreserveSig]
		[Token(Token = "0x600181A")]
		[Address(RVA = "0x20A5834", Offset = "0x20A5834", VA = "0x20A5834")]
		internal static extern bool gvr_is_feature_supported(IntPtr gvr_context, int feature);

		[PreserveSig]
		[Token(Token = "0x600181B")]
		[Address(RVA = "0x20A5E8C", Offset = "0x20A5E8C", VA = "0x20A5E8C")]
		private static extern int gvr_poll_event(IntPtr gvr_context, IntPtr event_out);

		[PreserveSig]
		[Token(Token = "0x600181C")]
		[Address(RVA = "0x20A691C", Offset = "0x20A691C", VA = "0x20A691C")]
		private static extern IntPtr gvr_get_current_properties(IntPtr gvr_context);

		[PreserveSig]
		[Token(Token = "0x600181D")]
		[Address(RVA = "0x20A699C", Offset = "0x20A699C", VA = "0x20A699C")]
		private static extern int gvr_properties_get(IntPtr gvr_properties, gvr_property_type property_type, IntPtr value_out);
	}
	[Token(Token = "0x2000324")]
	internal class DummyHeadsetProvider : IHeadsetProvider
	{
		[Token(Token = "0x4001605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private HeadsetState dummyState;

		[Token(Token = "0x17000290")]
		public bool SupportsPositionalTracking
		{
			[Token(Token = "0x600181E")]
			[Address(RVA = "0x20AA488", Offset = "0x20AA488", VA = "0x20AA488", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600181F")]
		[Address(RVA = "0x20AA490", Offset = "0x20AA490", VA = "0x20AA490", Slot = "5")]
		public void PollEventState(ref HeadsetState state)
		{
		}

		[Token(Token = "0x6001820")]
		[Address(RVA = "0x20AA494", Offset = "0x20AA494", VA = "0x20AA494", Slot = "6")]
		public bool TryGetFloorHeight(ref float floorHeight)
		{
			return default(bool);
		}

		[Token(Token = "0x6001821")]
		[Address(RVA = "0x20AA49C", Offset = "0x20AA49C", VA = "0x20AA49C", Slot = "7")]
		public bool TryGetRecenterTransform(ref Vector3 position, ref Quaternion rotation)
		{
			return default(bool);
		}

		[Token(Token = "0x6001822")]
		[Address(RVA = "0x20AA4A4", Offset = "0x20AA4A4", VA = "0x20AA4A4", Slot = "8")]
		public bool TryGetSafetyRegionType(ref GvrSafetyRegionType safetyType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001823")]
		[Address(RVA = "0x20AA4AC", Offset = "0x20AA4AC", VA = "0x20AA4AC", Slot = "9")]
		public bool TryGetSafetyCylinderInnerRadius(ref float innerRadius)
		{
			return default(bool);
		}

		[Token(Token = "0x6001824")]
		[Address(RVA = "0x20AA4B4", Offset = "0x20AA4B4", VA = "0x20AA4B4", Slot = "10")]
		public bool TryGetSafetyCylinderOuterRadius(ref float outerRadius)
		{
			return default(bool);
		}

		[Token(Token = "0x6001825")]
		[Address(RVA = "0x20AA4BC", Offset = "0x20AA4BC", VA = "0x20AA4BC")]
		public DummyHeadsetProvider()
		{
		}
	}
	[Token(Token = "0x2000325")]
	public class EditorHeadsetProvider : IHeadsetProvider
	{
		[Token(Token = "0x4001606")]
		public const float DEFAULT_FLOOR_HEIGHT_3DOF = -1.6f;

		[Token(Token = "0x4001607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Vector3 DEFAULT_RECENTER_TRANSFORM_POSITION;

		[Token(Token = "0x4001608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static readonly Quaternion DEFAULT_RECENTER_TRANSFORM_ROTATION;

		[Token(Token = "0x4001609")]
		public const GvrSafetyRegionType DEFAULT_SAFETY_REGION_TYPE_3DOF = GvrSafetyRegionType.Cylinder;

		[Token(Token = "0x400160A")]
		public const float DEFAULT_SAFETY_CYLINDER_ENTER_RADIUS_3DOF = 0.6f;

		[Token(Token = "0x400160B")]
		public const float DEFAULT_SAFETY_CYLINDER_EXIT_RADIUS_3DOF = 0.7f;

		[Token(Token = "0x400160C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private HeadsetState dummyState;

		[Token(Token = "0x17000291")]
		public bool SupportsPositionalTracking
		{
			[Token(Token = "0x6001826")]
			[Address(RVA = "0x20AA598", Offset = "0x20AA598", VA = "0x20AA598", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001827")]
		[Address(RVA = "0x20AA5A0", Offset = "0x20AA5A0", VA = "0x20AA5A0", Slot = "5")]
		public void PollEventState(ref HeadsetState state)
		{
		}

		[Token(Token = "0x6001828")]
		[Address(RVA = "0x20AA5A4", Offset = "0x20AA5A4", VA = "0x20AA5A4", Slot = "6")]
		public bool TryGetFloorHeight(ref float floorHeight)
		{
			return default(bool);
		}

		[Token(Token = "0x6001829")]
		[Address(RVA = "0x20AA5B8", Offset = "0x20AA5B8", VA = "0x20AA5B8", Slot = "7")]
		public bool TryGetRecenterTransform(ref Vector3 position, ref Quaternion rotation)
		{
			return default(bool);
		}

		[Token(Token = "0x600182A")]
		[Address(RVA = "0x20AA650", Offset = "0x20AA650", VA = "0x20AA650", Slot = "8")]
		public bool TryGetSafetyRegionType(ref GvrSafetyRegionType safetyType)
		{
			return default(bool);
		}

		[Token(Token = "0x600182B")]
		[Address(RVA = "0x20AA660", Offset = "0x20AA660", VA = "0x20AA660", Slot = "9")]
		public bool TryGetSafetyCylinderInnerRadius(ref float innerRadius)
		{
			return default(bool);
		}

		[Token(Token = "0x600182C")]
		[Address(RVA = "0x20AA674", Offset = "0x20AA674", VA = "0x20AA674", Slot = "10")]
		public bool TryGetSafetyCylinderOuterRadius(ref float outerRadius)
		{
			return default(bool);
		}

		[Token(Token = "0x600182D")]
		[Address(RVA = "0x20AA688", Offset = "0x20AA688", VA = "0x20AA688")]
		public EditorHeadsetProvider()
		{
		}
	}
	[Token(Token = "0x2000326")]
	public struct HeadsetState
	{
		[Token(Token = "0x400160D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal GvrEventType eventType;

		[Token(Token = "0x400160E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal int eventFlags;

		[Token(Token = "0x400160F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal long eventTimestampNs;

		[Token(Token = "0x4001610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal GvrRecenterEventType recenterEventType;

		[Token(Token = "0x4001611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal uint recenterEventFlags;

		[Token(Token = "0x4001612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal Vector3 recenteredPosition;

		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal Quaternion recenteredRotation;

		[Token(Token = "0x600182F")]
		[Address(RVA = "0x2B24360", Offset = "0x2B24360", VA = "0x2B24360")]
		public void Initialize()
		{
		}
	}
	[Token(Token = "0x2000327")]
	internal interface IHeadsetProvider
	{
		[Token(Token = "0x17000292")]
		bool SupportsPositionalTracking
		{
			[Token(Token = "0x6001830")]
			get;
		}

		[Token(Token = "0x6001831")]
		void PollEventState(ref HeadsetState outState);

		[Token(Token = "0x6001832")]
		bool TryGetFloorHeight(ref float floorHeight);

		[Token(Token = "0x6001833")]
		bool TryGetRecenterTransform(ref Vector3 position, ref Quaternion rotation);

		[Token(Token = "0x6001834")]
		bool TryGetSafetyRegionType(ref GvrSafetyRegionType safetyType);

		[Token(Token = "0x6001835")]
		bool TryGetSafetyCylinderInnerRadius(ref float innerRadius);

		[Token(Token = "0x6001836")]
		bool TryGetSafetyCylinderOuterRadius(ref float outerRadius);
	}
	[Token(Token = "0x2000328")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x1468ADC", Offset = "0x1468ADC")]
	public class InstantPreview : MonoBehaviour
	{
		[Token(Token = "0x20006BD")]
		public enum Resolutions
		{
			[Token(Token = "0x40026E8")]
			Big,
			[Token(Token = "0x40026E9")]
			Regular,
			[Token(Token = "0x40026EA")]
			WindowSized
		}

		[Token(Token = "0x20006BE")]
		private struct ResolutionSize
		{
			[Token(Token = "0x40026EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int width;

			[Token(Token = "0x40026EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int height;
		}

		[Token(Token = "0x20006BF")]
		public enum MultisampleCounts
		{
			[Token(Token = "0x40026EE")]
			One,
			[Token(Token = "0x40026EF")]
			Two,
			[Token(Token = "0x40026F0")]
			Four,
			[Token(Token = "0x40026F1")]
			Eight
		}

		[Token(Token = "0x20006C0")]
		public enum BitRates
		{
			[Token(Token = "0x40026F3")]
			_2000,
			[Token(Token = "0x40026F4")]
			_4000,
			[Token(Token = "0x40026F5")]
			_8000,
			[Token(Token = "0x40026F6")]
			_16000,
			[Token(Token = "0x40026F7")]
			_24000,
			[Token(Token = "0x40026F8")]
			_32000
		}

		[Token(Token = "0x20006C1")]
		private struct UnityRect
		{
			[Token(Token = "0x40026F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float right;

			[Token(Token = "0x40026FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float left;

			[Token(Token = "0x40026FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float top;

			[Token(Token = "0x40026FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float bottom;
		}

		[Token(Token = "0x20006C2")]
		private struct UnityEyeViews
		{
			[Token(Token = "0x40026FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Matrix4x4 leftEyePose;

			[Token(Token = "0x40026FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Matrix4x4 rightEyePose;

			[Token(Token = "0x40026FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public UnityRect leftEyeViewSize;

			[Token(Token = "0x4002700")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public UnityRect rightEyeViewSize;
		}

		[Token(Token = "0x20006C3")]
		public struct UnityBoolAtom
		{
			[Token(Token = "0x4002701")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool value;

			[Token(Token = "0x4002702")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public bool isValid;
		}

		[Token(Token = "0x20006C4")]
		public struct UnityFloatAtom
		{
			[Token(Token = "0x4002703")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float value;

			[Token(Token = "0x4002704")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public bool isValid;
		}

		[Token(Token = "0x20006C5")]
		public struct UnityIntAtom
		{
			[Token(Token = "0x4002705")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int value;

			[Token(Token = "0x4002706")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public bool isValid;
		}

		[Token(Token = "0x20006C6")]
		public struct UnityGvrMat4fAtom
		{
			[Token(Token = "0x4002707")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Matrix4x4 value;

			[Token(Token = "0x4002708")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public bool isValid;
		}

		[Token(Token = "0x20006C7")]
		private struct UnityGlobalGvrProperties
		{
			[Token(Token = "0x4002709")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal UnityBoolAtom supportsPositionalHeadTracking;

			[Token(Token = "0x400270A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
			internal UnityBoolAtom supportsSeeThrough;

			[Token(Token = "0x400270B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal UnityFloatAtom floorHeight;

			[Token(Token = "0x400270C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal UnityGvrMat4fAtom recenterTransform;

			[Token(Token = "0x400270D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			internal UnityIntAtom safetyRegionType;

			[Token(Token = "0x400270E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			internal UnityFloatAtom safetyCylinderEnterRadius;

			[Token(Token = "0x400270F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			internal UnityFloatAtom safetyCylinderExitRadius;
		}

		[Token(Token = "0x20006C8")]
		public enum GvrEventType
		{
			[Token(Token = "0x4002711")]
			GVR_EVENT_NONE,
			[Token(Token = "0x4002712")]
			GVR_EVENT_RECENTER,
			[Token(Token = "0x4002713")]
			GVR_EVENT_SAFETY_REGION_EXIT,
			[Token(Token = "0x4002714")]
			GVR_EVENT_SAFETY_REGION_ENTER,
			[Token(Token = "0x4002715")]
			GVR_EVENT_HEAD_TRACKING_RESUMED,
			[Token(Token = "0x4002716")]
			GVR_EVENT_HEAD_TRACKING_PAUSED
		}

		[Token(Token = "0x20006C9")]
		public enum GvrRecenterEventType
		{
			[Token(Token = "0x4002718")]
			GVR_RECENTER_EVENT_NONE,
			[Token(Token = "0x4002719")]
			GVR_RECENTER_EVENT_RESTART,
			[Token(Token = "0x400271A")]
			GVR_RECENTER_EVENT_ALIGNED,
			[Token(Token = "0x400271B")]
			GVR_RECENTER_EVENT_DON
		}

		[Token(Token = "0x20006CA")]
		internal struct UnityGvrRecenterEventData
		{
			[Token(Token = "0x400271C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal GvrRecenterEventType recenter_type;

			[Token(Token = "0x400271D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal uint recenter_event_flags;

			[Token(Token = "0x400271E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal Matrix4x4 start_space_from_tracking_space_transform;
		}

		[Token(Token = "0x20006CB")]
		internal struct UnityGvrEvent
		{
			[Token(Token = "0x400271F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal long timestamp;

			[Token(Token = "0x4002720")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal GvrEventType type;

			[Token(Token = "0x4002721")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal uint flags;

			[Token(Token = "0x4002722")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal UnityGvrRecenterEventData gvr_recenter_event_data;
		}

		[Serializable]
		[Token(Token = "0x20006CC")]
		public struct UnityGvrUserPreferences
		{
			[Token(Token = "0x4002723")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GvrSettings.UserPrefsHandedness handedness;
		}

		[Token(Token = "0x4001614")]
		private const string NoDevicesFoundAdbResult = "error: no devices/emulators found";

		[Token(Token = "0x4001615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1475458", Offset = "0x1475458")]
		private static InstantPreview <Instance>k__BackingField;

		[Token(Token = "0x4001616")]
		internal const string dllName = "instant_preview_unity_plugin";

		[Token(Token = "0x4001617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1475468", Offset = "0x1475468")]
		public Resolutions OutputResolution;

		[Token(Token = "0x4001618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x14754A0", Offset = "0x14754A0")]
		public MultisampleCounts MultisampleCount;

		[Token(Token = "0x4001619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x14754D8", Offset = "0x14754D8")]
		public BitRates BitRate;

		[Token(Token = "0x400161A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1475510", Offset = "0x1475510")]
		public bool InstallApkOnRun;

		[Token(Token = "0x400161B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEngine.Object InstantPreviewApk;

		[Token(Token = "0x400161C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1475548", Offset = "0x1475548")]
		public bool overrideDeviceUserPrefs;

		[Token(Token = "0x400161D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public UnityGvrUserPreferences editorUserPrefs;

		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1475590", Offset = "0x1475590")]
		private UnityGvrUserPreferences <deviceUserPrefs>k__BackingField;

		[Token(Token = "0x17000293")]
		public static bool IsActive
		{
			[Token(Token = "0x6001837")]
			[Address(RVA = "0x2B24410", Offset = "0x2B24410", VA = "0x2B24410")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000294")]
		internal static InstantPreview Instance
		{
			[Token(Token = "0x6001838")]
			[Address(RVA = "0x2B24418", Offset = "0x2B24418", VA = "0x2B24418")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1485014", Offset = "0x1485014")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001839")]
			[Address(RVA = "0x2B24468", Offset = "0x2B24468", VA = "0x2B24468")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1485024", Offset = "0x1485024")]
			set
			{
			}
		}

		[Token(Token = "0x17000295")]
		public UnityGvrUserPreferences deviceUserPrefs
		{
			[Token(Token = "0x600183A")]
			[Address(RVA = "0x2B244C0", Offset = "0x2B244C0", VA = "0x2B244C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1485034", Offset = "0x1485034")]
			get
			{
				return default(UnityGvrUserPreferences);
			}
			[Token(Token = "0x600183B")]
			[Address(RVA = "0x2B244C8", Offset = "0x2B244C8", VA = "0x2B244C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1485044", Offset = "0x1485044")]
			private set
			{
			}
		}

		[Token(Token = "0x17000296")]
		public bool IsCurrentlyConnected
		{
			[Token(Token = "0x600183C")]
			[Address(RVA = "0x2B244D0", Offset = "0x2B244D0", VA = "0x2B244D0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600183D")]
		[Address(RVA = "0x2B244D8", Offset = "0x2B244D8", VA = "0x2B244D8")]
		public InstantPreview()
		{
		}
	}
	[Token(Token = "0x2000329")]
	public class EditorCameraOriginDict : MonoBehaviour
	{
		[Token(Token = "0x600183E")]
		[Address(RVA = "0x20AA590", Offset = "0x20AA590", VA = "0x20AA590")]
		public EditorCameraOriginDict()
		{
		}
	}
	[Token(Token = "0x200032A")]
	internal interface IKeyboardProvider
	{
		[Token(Token = "0x17000297")]
		string EditorText
		{
			[Token(Token = "0x6001848")]
			get;
			[Token(Token = "0x6001849")]
			set;
		}

		[Token(Token = "0x600183F")]
		void OnPause();

		[Token(Token = "0x6001840")]
		void OnResume();

		[Token(Token = "0x6001841")]
		void ReadState(KeyboardState outState);

		[Token(Token = "0x6001842")]
		bool Create(GvrKeyboard.KeyboardCallback keyboardEvent);

		[Token(Token = "0x6001843")]
		void UpdateData();

		[Token(Token = "0x6001844")]
		void Render(int eye, Matrix4x4 modelview, Matrix4x4 projection, Rect viewport);

		[Token(Token = "0x6001845")]
		void Hide();

		[Token(Token = "0x6001846")]
		void Show(Matrix4x4 controllerMatrix, bool useRecommended, float distance, Matrix4x4 model);

		[Token(Token = "0x6001847")]
		void SetInputMode(GvrKeyboardInputMode mode);
	}
	[Token(Token = "0x200032B")]
	internal static class KeyboardProviderFactory
	{
		[Token(Token = "0x600184A")]
		[Address(RVA = "0x2B244F0", Offset = "0x2B244F0", VA = "0x2B244F0")]
		internal static IKeyboardProvider CreateKeyboardProvider(GvrKeyboard owner)
		{
			return null;
		}
	}
	[Token(Token = "0x200032C")]
	public class AndroidNativeKeyboardProvider : IKeyboardProvider
	{
		[Token(Token = "0x20006CD")]
		private struct gvr_clock_time_point
		{
			[Token(Token = "0x4002724")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public long monotonic_system_time_nanos;
		}

		[Token(Token = "0x20006CE")]
		private struct gvr_recti
		{
			[Token(Token = "0x4002725")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int left;

			[Token(Token = "0x4002726")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int right;

			[Token(Token = "0x4002727")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int bottom;

			[Token(Token = "0x4002728")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int top;
		}

		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr renderEventFunction;

		[Token(Token = "0x4001620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float currentDistance;

		[Token(Token = "0x4001621")]
		private const string METHOD_NAME_GET_PACKAGE_MANAGER = "getPackageManager";

		[Token(Token = "0x4001622")]
		private const string METHOD_NAME_GET_PACKAGE_INFO = "getPackageInfo";

		[Token(Token = "0x4001623")]
		private const string PACKAGE_NAME_VRINPUTMETHOD = "com.google.android.vr.inputmethod";

		[Token(Token = "0x4001624")]
		private const string FIELD_NAME_VERSION_CODE = "versionCode";

		[Token(Token = "0x4001625")]
		private const int MIN_VERSION_VRINPUTMETHOD = 170509062;

		[Token(Token = "0x4001626")]
		private const string dllName = "gvr_keyboard_shim_unity";

		[Token(Token = "0x4001627")]
		private const int TRIGGER_NONE = 0;

		[Token(Token = "0x4001628")]
		private const int TRIGGER_PRESSED = 1;

		[Token(Token = "0x4001629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IntPtr keyboard_context;

		[Token(Token = "0x400162A")]
		private const int advanceID = 1571584315;

		[Token(Token = "0x400162B")]
		private const int renderLeftID = 1022982717;

		[Token(Token = "0x400162C")]
		private const int renderRightID = 1022982718;

		[Token(Token = "0x400162D")]
		private const string KEYBOARD_JAVA_CLASS = "com.google.vr.keyboard.GvrKeyboardUnity";

		[Token(Token = "0x400162E")]
		private const long kPredictionTimeWithoutVsyncNanos = 50000000L;

		[Token(Token = "0x400162F")]
		private const int kGvrControllerButtonClick = 1;

		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GvrKeyboardInputMode mode;

		[Token(Token = "0x4001631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string editorText;

		[Token(Token = "0x4001632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Matrix4x4 worldMatrix;

		[Token(Token = "0x4001633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool isValid;

		[Token(Token = "0x4001634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		private bool isReady;

		[Token(Token = "0x17000298")]
		public string EditorText
		{
			[Token(Token = "0x600185D")]
			[Address(RVA = "0x20A7C64", Offset = "0x20A7C64", VA = "0x20A7C64", Slot = "13")]
			get
			{
				return null;
			}
			[Token(Token = "0x600185E")]
			[Address(RVA = "0x20A7CF4", Offset = "0x20A7CF4", VA = "0x20A7CF4", Slot = "14")]
			set
			{
			}
		}

		[PreserveSig]
		[Token(Token = "0x600184B")]
		[Address(RVA = "0x20A72CC", Offset = "0x20A72CC", VA = "0x20A72CC")]
		private static extern gvr_clock_time_point gvr_get_time_point_now();

		[PreserveSig]
		[Token(Token = "0x600184C")]
		[Address(RVA = "0x20A7340", Offset = "0x20A7340", VA = "0x20A7340")]
		private static extern GvrKeyboardInputMode gvr_keyboard_get_input_mode(IntPtr keyboard_context);

		[PreserveSig]
		[Token(Token = "0x600184D")]
		[Address(RVA = "0x20A73C0", Offset = "0x20A73C0", VA = "0x20A73C0")]
		private static extern void gvr_keyboard_set_input_mode(IntPtr keyboard_context, GvrKeyboardInputMode mode);

		[PreserveSig]
		[Token(Token = "0x600184E")]
		[Address(RVA = "0x20A7450", Offset = "0x20A7450", VA = "0x20A7450")]
		private static extern IntPtr gvr_keyboard_initialize(AndroidJavaObject app_context, AndroidJavaObject class_loader);

		[PreserveSig]
		[Token(Token = "0x600184F")]
		[Address(RVA = "0x20A746C", Offset = "0x20A746C", VA = "0x20A746C")]
		private static extern IntPtr gvr_keyboard_create(IntPtr closure, GvrKeyboard.KeyboardCallback callback);

		[PreserveSig]
		[Token(Token = "0x6001850")]
		[Address(RVA = "0x20A7504", Offset = "0x20A7504", VA = "0x20A7504")]
		private static extern void gvr_keyboard_get_recommended_world_from_keyboard_matrix(float distance_from_eye, IntPtr matrix);

		[PreserveSig]
		[Token(Token = "0x6001851")]
		[Address(RVA = "0x20A7594", Offset = "0x20A7594", VA = "0x20A7594")]
		private static extern void gvr_keyboard_set_world_from_keyboard_matrix(IntPtr keyboard_context, IntPtr matrix);

		[PreserveSig]
		[Token(Token = "0x6001852")]
		[Address(RVA = "0x20A7624", Offset = "0x20A7624", VA = "0x20A7624")]
		private static extern void gvr_keyboard_show(IntPtr keyboard_context);

		[PreserveSig]
		[Token(Token = "0x6001853")]
		[Address(RVA = "0x20A76A4", Offset = "0x20A76A4", VA = "0x20A76A4")]
		private static extern void gvr_keyboard_update_button_state(IntPtr keyboard_context, int buttonIndex, bool pressed);

		[PreserveSig]
		[Token(Token = "0x6001854")]
		[Address(RVA = "0x20A773C", Offset = "0x20A773C", VA = "0x20A773C")]
		private static extern bool gvr_keyboard_update_controller_ray(IntPtr keyboard_context, IntPtr vector3Start, IntPtr vector3End, IntPtr vector3Hit);

		[PreserveSig]
		[Token(Token = "0x6001855")]
		[Address(RVA = "0x20A77EC", Offset = "0x20A77EC", VA = "0x20A77EC")]
		private static extern void gvr_keyboard_update_controller_touch(IntPtr keyboard_context, bool touched, IntPtr vector2Pos);

		[PreserveSig]
		[Token(Token = "0x6001856")]
		[Address(RVA = "0x20A7884", Offset = "0x20A7884", VA = "0x20A7884")]
		private static extern IntPtr gvr_keyboard_get_text(IntPtr keyboard_context);

		[PreserveSig]
		[Token(Token = "0x6001857")]
		[Address(RVA = "0x20A7904", Offset = "0x20A7904", VA = "0x20A7904")]
		private static extern int gvr_keyboard_set_text(IntPtr keyboard_context, IntPtr edit_text);

		[PreserveSig]
		[Token(Token = "0x6001858")]
		[Address(RVA = "0x20A7994", Offset = "0x20A7994", VA = "0x20A7994")]
		private static extern void gvr_keyboard_hide(IntPtr keyboard_context);

		[PreserveSig]
		[Token(Token = "0x6001859")]
		[Address(RVA = "0x20A7A14", Offset = "0x20A7A14", VA = "0x20A7A14")]
		private static extern void gvr_keyboard_destroy(IntPtr keyboard_context);

		[PreserveSig]
		[Token(Token = "0x600185A")]
		[Address(RVA = "0x20A7A94", Offset = "0x20A7A94", VA = "0x20A7A94")]
		private static extern void GvrKeyboardSetFrameData(IntPtr keyboard_context, gvr_clock_time_point t);

		[PreserveSig]
		[Token(Token = "0x600185B")]
		[Address(RVA = "0x20A7B20", Offset = "0x20A7B20", VA = "0x20A7B20")]
		private static extern void GvrKeyboardSetEyeData(int eye_type, Matrix4x4 modelview, Matrix4x4 projection, gvr_recti viewport);

		[PreserveSig]
		[Token(Token = "0x600185C")]
		[Address(RVA = "0x20A7BF0", Offset = "0x20A7BF0", VA = "0x20A7BF0")]
		private static extern IntPtr GetKeyboardRenderEventFunc();

		[Token(Token = "0x600185F")]
		[Address(RVA = "0x20A7D90", Offset = "0x20A7D90", VA = "0x20A7D90", Slot = "12")]
		public void SetInputMode(GvrKeyboardInputMode mode)
		{
		}

		[Token(Token = "0x6001860")]
		[Address(RVA = "0x20A7E54", Offset = "0x20A7E54", VA = "0x20A7E54", Slot = "4")]
		public void OnPause()
		{
		}

		[Token(Token = "0x6001861")]
		[Address(RVA = "0x20A7E58", Offset = "0x20A7E58", VA = "0x20A7E58", Slot = "5")]
		public void OnResume()
		{
		}

		[Token(Token = "0x6001862")]
		[Address(RVA = "0x20A7E5C", Offset = "0x20A7E5C", VA = "0x20A7E5C", Slot = "6")]
		public void ReadState(KeyboardState outState)
		{
		}

		[Token(Token = "0x6001863")]
		[Address(RVA = "0x20A7EC4", Offset = "0x20A7EC4", VA = "0x20A7EC4")]
		public AndroidNativeKeyboardProvider()
		{
		}

		[Token(Token = "0x6001864")]
		[Address(RVA = "0x20A8110", Offset = "0x20A8110", VA = "0x20A8110", Slot = "1")]
		~AndroidNativeKeyboardProvider()
		{
		}

		[Token(Token = "0x6001865")]
		[Address(RVA = "0x20A81B8", Offset = "0x20A81B8", VA = "0x20A81B8", Slot = "7")]
		public bool Create(GvrKeyboard.KeyboardCallback keyboardEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x6001866")]
		[Address(RVA = "0x20A851C", Offset = "0x20A851C", VA = "0x20A851C", Slot = "11")]
		public void Show(Matrix4x4 userMatrix, bool useRecommended, float distance, Matrix4x4 model)
		{
		}

		[Token(Token = "0x6001867")]
		[Address(RVA = "0x20A8928", Offset = "0x20A8928", VA = "0x20A8928", Slot = "8")]
		public void UpdateData()
		{
		}

		[Token(Token = "0x6001868")]
		[Address(RVA = "0x20A8CD8", Offset = "0x20A8CD8", VA = "0x20A8CD8", Slot = "9")]
		public void Render(int eye, Matrix4x4 modelview, Matrix4x4 projection, Rect viewport)
		{
		}

		[Token(Token = "0x6001869")]
		[Address(RVA = "0x20A8F90", Offset = "0x20A8F90", VA = "0x20A8F90", Slot = "10")]
		public void Hide()
		{
		}

		[Token(Token = "0x600186A")]
		[Address(RVA = "0x20A8764", Offset = "0x20A8764", VA = "0x20A8764")]
		private Matrix4x4 getRecommendedMatrix(float inputDistance)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x600186B")]
		[Address(RVA = "0x20A8240", Offset = "0x20A8240", VA = "0x20A8240")]
		private bool IsVrInputMethodAppMinVersion(GvrKeyboard.KeyboardCallback keyboardEvent)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200032D")]
	internal class DummyKeyboardProvider : IKeyboardProvider
	{
		[Token(Token = "0x4001635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private KeyboardState dummyState;

		[Token(Token = "0x4001636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14755A0", Offset = "0x14755A0")]
		private string <EditorText>k__BackingField;

		[Token(Token = "0x17000299")]
		public string EditorText
		{
			[Token(Token = "0x6001876")]
			[Address(RVA = "0x20AA580", Offset = "0x20AA580", VA = "0x20AA580", Slot = "13")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1485054", Offset = "0x1485054")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001877")]
			[Address(RVA = "0x20AA588", Offset = "0x20AA588", VA = "0x20AA588", Slot = "14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1485064", Offset = "0x1485064")]
			set
			{
			}
		}

		[Token(Token = "0x600186C")]
		[Address(RVA = "0x20AA4C4", Offset = "0x20AA4C4", VA = "0x20AA4C4")]
		internal DummyKeyboardProvider()
		{
		}

		[Token(Token = "0x600186D")]
		[Address(RVA = "0x20AA538", Offset = "0x20AA538", VA = "0x20AA538", Slot = "6")]
		public void ReadState(KeyboardState outState)
		{
		}

		[Token(Token = "0x600186E")]
		[Address(RVA = "0x20AA55C", Offset = "0x20AA55C", VA = "0x20AA55C", Slot = "4")]
		public void OnPause()
		{
		}

		[Token(Token = "0x600186F")]
		[Address(RVA = "0x20AA560", Offset = "0x20AA560", VA = "0x20AA560", Slot = "5")]
		public void OnResume()
		{
		}

		[Token(Token = "0x6001870")]
		[Address(RVA = "0x20AA564", Offset = "0x20AA564", VA = "0x20AA564", Slot = "8")]
		public void UpdateData()
		{
		}

		[Token(Token = "0x6001871")]
		[Address(RVA = "0x20AA568", Offset = "0x20AA568", VA = "0x20AA568", Slot = "9")]
		public void Render(int eye, Matrix4x4 modelview, Matrix4x4 projection, Rect viewport)
		{
		}

		[Token(Token = "0x6001872")]
		[Address(RVA = "0x20AA56C", Offset = "0x20AA56C", VA = "0x20AA56C", Slot = "10")]
		public void Hide()
		{
		}

		[Token(Token = "0x6001873")]
		[Address(RVA = "0x20AA570", Offset = "0x20AA570", VA = "0x20AA570", Slot = "11")]
		public void Show(Matrix4x4 controllerMatrix, bool useRecommended, float distance, Matrix4x4 model)
		{
		}

		[Token(Token = "0x6001874")]
		[Address(RVA = "0x20AA574", Offset = "0x20AA574", VA = "0x20AA574", Slot = "7")]
		public bool Create(GvrKeyboard.KeyboardCallback keyboardEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x6001875")]
		[Address(RVA = "0x20AA57C", Offset = "0x20AA57C", VA = "0x20AA57C", Slot = "12")]
		public void SetInputMode(GvrKeyboardInputMode mode)
		{
		}
	}
	[Token(Token = "0x200032E")]
	public class EmulatorKeyboardProvider : IKeyboardProvider
	{
		[Token(Token = "0x4001637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private GameObject stub;

		[Token(Token = "0x4001638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool showing;

		[Token(Token = "0x4001639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GvrKeyboard.KeyboardCallback keyboardCallback;

		[Token(Token = "0x400163A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string editorText;

		[Token(Token = "0x400163B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GvrKeyboardInputMode mode;

		[Token(Token = "0x400163C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Matrix4x4 worldMatrix;

		[Token(Token = "0x400163D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool isValid;

		[Token(Token = "0x1700029A")]
		public string EditorText
		{
			[Token(Token = "0x6001878")]
			[Address(RVA = "0x20AABA4", Offset = "0x20AABA4", VA = "0x20AABA4", Slot = "13")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001879")]
			[Address(RVA = "0x20AABAC", Offset = "0x20AABAC", VA = "0x20AABAC", Slot = "14")]
			set
			{
			}
		}

		[Token(Token = "0x600187A")]
		[Address(RVA = "0x20AABB4", Offset = "0x20AABB4", VA = "0x20AABB4", Slot = "12")]
		public void SetInputMode(GvrKeyboardInputMode mode)
		{
		}

		[Token(Token = "0x600187B")]
		[Address(RVA = "0x20AABBC", Offset = "0x20AABBC", VA = "0x20AABBC")]
		public EmulatorKeyboardProvider()
		{
		}

		[Token(Token = "0x600187C")]
		[Address(RVA = "0x20AAC68", Offset = "0x20AAC68", VA = "0x20AAC68", Slot = "4")]
		public void OnPause()
		{
		}

		[Token(Token = "0x600187D")]
		[Address(RVA = "0x20AAC6C", Offset = "0x20AAC6C", VA = "0x20AAC6C", Slot = "5")]
		public void OnResume()
		{
		}

		[Token(Token = "0x600187E")]
		[Address(RVA = "0x20AAC70", Offset = "0x20AAC70", VA = "0x20AAC70", Slot = "6")]
		public void ReadState(KeyboardState outState)
		{
		}

		[Token(Token = "0x600187F")]
		[Address(RVA = "0x20AACD8", Offset = "0x20AACD8", VA = "0x20AACD8", Slot = "7")]
		public bool Create(GvrKeyboard.KeyboardCallback keyboardEvent)
		{
			return default(bool);
		}

		[Token(Token = "0x6001880")]
		[Address(RVA = "0x20AAD5C", Offset = "0x20AAD5C", VA = "0x20AAD5C", Slot = "11")]
		public void Show(Matrix4x4 controllerMatrix, bool useRecommended, float distance, Matrix4x4 model)
		{
		}

		[Token(Token = "0x6001881")]
		[Address(RVA = "0x20AAE00", Offset = "0x20AAE00", VA = "0x20AAE00", Slot = "8")]
		public void UpdateData()
		{
		}

		[Token(Token = "0x6001882")]
		[Address(RVA = "0x20AB010", Offset = "0x20AB010", VA = "0x20AB010", Slot = "9")]
		public void Render(int eye, Matrix4x4 modelview, Matrix4x4 projection, Rect viewport)
		{
		}

		[Token(Token = "0x6001883")]
		[Address(RVA = "0x20AB014", Offset = "0x20AB014", VA = "0x20AB014", Slot = "10")]
		public void Hide()
		{
		}

		[Token(Token = "0x6001884")]
		[Address(RVA = "0x20AAFB8", Offset = "0x20AAFB8", VA = "0x20AAFB8")]
		private void SendUpdateNotification()
		{
		}
	}
	[Token(Token = "0x200032F")]
	public class GvrCursorHelper
	{
		[Token(Token = "0x400163E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool cachedHeadEmulationActive;

		[Token(Token = "0x400163F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		private static bool cachedControllerEmulationActive;

		[Token(Token = "0x1700029B")]
		public static bool HeadEmulationActive
		{
			[Token(Token = "0x6001885")]
			[Address(RVA = "0x2B241E0", Offset = "0x2B241E0", VA = "0x2B241E0")]
			set
			{
			}
		}

		[Token(Token = "0x1700029C")]
		public static bool ControllerEmulationActive
		{
			[Token(Token = "0x6001886")]
			[Address(RVA = "0x2B242A4", Offset = "0x2B242A4", VA = "0x2B242A4")]
			set
			{
			}
		}

		[Token(Token = "0x6001887")]
		[Address(RVA = "0x2B24238", Offset = "0x2B24238", VA = "0x2B24238")]
		private static void UpdateCursorLockState()
		{
		}

		[Token(Token = "0x6001888")]
		[Address(RVA = "0x2B242FC", Offset = "0x2B242FC", VA = "0x2B242FC")]
		public GvrCursorHelper()
		{
		}
	}
	[Token(Token = "0x2000330")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x1468B14", Offset = "0x1468B14")]
	public class SuppressMemoryAllocationErrorAttribute : Attribute
	{
		[Token(Token = "0x4001640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14755B0", Offset = "0x14755B0")]
		private bool <IsWarning>k__BackingField;

		[Token(Token = "0x4001641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14755C0", Offset = "0x14755C0")]
		private string <Reason>k__BackingField;

		[Token(Token = "0x1700029D")]
		public bool IsWarning
		{
			[Token(Token = "0x600188A")]
			[Address(RVA = "0x2B250EC", Offset = "0x2B250EC", VA = "0x2B250EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1485074", Offset = "0x1485074")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600188B")]
			[Address(RVA = "0x2B250F4", Offset = "0x2B250F4", VA = "0x2B250F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1485084", Offset = "0x1485084")]
			set
			{
			}
		}

		[Token(Token = "0x1700029E")]
		public string Reason
		{
			[Token(Token = "0x600188C")]
			[Address(RVA = "0x2B25100", Offset = "0x2B25100", VA = "0x2B25100")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1485094", Offset = "0x1485094")]
			get
			{
				return null;
			}
			[Token(Token = "0x600188D")]
			[Address(RVA = "0x2B25108", Offset = "0x2B25108", VA = "0x2B25108")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14850A4", Offset = "0x14850A4")]
			set
			{
			}
		}

		[Token(Token = "0x6001889")]
		[Address(RVA = "0x2B25088", Offset = "0x2B25088", VA = "0x2B25088")]
		public SuppressMemoryAllocationErrorAttribute()
		{
		}
	}
}
namespace GoogleVR.VideoDemo
{
	[Token(Token = "0x2000331")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1468B48", Offset = "0x1468B48")]
	public class AutoPlayVideo : MonoBehaviour
	{
		[Token(Token = "0x4001642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float delay;

		[Token(Token = "0x4001643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool loop;

		[Token(Token = "0x4001644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		private bool done;

		[Token(Token = "0x4001645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float t;

		[Token(Token = "0x4001646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GvrVideoPlayerTexture player;

		[Token(Token = "0x600188E")]
		[Address(RVA = "0x20A2A64", Offset = "0x20A2A64", VA = "0x20A2A64")]
		private void Start()
		{
		}

		[Token(Token = "0x600188F")]
		[Address(RVA = "0x20A2B28", Offset = "0x20A2B28", VA = "0x20A2B28")]
		private void Update()
		{
		}

		[Token(Token = "0x6001890")]
		[Address(RVA = "0x20A2C7C", Offset = "0x20A2C7C", VA = "0x20A2C7C")]
		public AutoPlayVideo()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000332")]
	public class BoolEvent : UnityEvent<bool>
	{
		[Token(Token = "0x6001891")]
		[Address(RVA = "0x20A2C8C", Offset = "0x20A2C8C", VA = "0x20A2C8C")]
		public BoolEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000333")]
	public class ButtonEvent : UnityEvent
	{
		[Token(Token = "0x6001892")]
		[Address(RVA = "0x20A2CDC", Offset = "0x20A2CDC", VA = "0x20A2CDC")]
		public ButtonEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000334")]
	public class FloatEvent : UnityEvent<float>
	{
		[Token(Token = "0x6001893")]
		[Address(RVA = "0x20A2CE4", Offset = "0x20A2CE4", VA = "0x20A2CE4")]
		public FloatEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000335")]
	public class GameObjectEvent : UnityEvent<GameObject>
	{
		[Token(Token = "0x6001894")]
		[Address(RVA = "0x20A2D34", Offset = "0x20A2D34", VA = "0x20A2D34")]
		public GameObjectEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000336")]
	public class TouchPadEvent : UnityEvent
	{
		[Token(Token = "0x6001895")]
		[Address(RVA = "0x20A38F4", Offset = "0x20A38F4", VA = "0x20A38F4")]
		public TouchPadEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000337")]
	public class TransformEvent : UnityEvent<Transform>
	{
		[Token(Token = "0x6001896")]
		[Address(RVA = "0x20A38FC", Offset = "0x20A38FC", VA = "0x20A38FC")]
		public TransformEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000338")]
	public class Vector2Event : UnityEvent<Vector2>
	{
		[Token(Token = "0x6001897")]
		[Address(RVA = "0x20A394C", Offset = "0x20A394C", VA = "0x20A394C")]
		public Vector2Event()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000339")]
	public class Vector3Event : UnityEvent<Vector3>
	{
		[Token(Token = "0x6001898")]
		[Address(RVA = "0x20A399C", Offset = "0x20A399C", VA = "0x20A399C")]
		public Vector3Event()
		{
		}
	}
	[Token(Token = "0x200033A")]
	public class ScrubberEvents : MonoBehaviour
	{
		[Token(Token = "0x4001647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject newPositionHandle;

		[Token(Token = "0x4001648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3[] corners;

		[Token(Token = "0x4001649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Slider slider;

		[Token(Token = "0x400164A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private VideoControlsManager mgr;

		[Token(Token = "0x1700029F")]
		public VideoControlsManager ControlManager
		{
			[Token(Token = "0x6001899")]
			[Address(RVA = "0x20A2D84", Offset = "0x20A2D84", VA = "0x20A2D84")]
			set
			{
			}
		}

		[Token(Token = "0x600189A")]
		[Address(RVA = "0x20A2D8C", Offset = "0x20A2D8C", VA = "0x20A2D8C")]
		public void OnPointerEnter(BaseEventData data)
		{
		}

		[Token(Token = "0x600189B")]
		[Address(RVA = "0x20A2F14", Offset = "0x20A2F14", VA = "0x20A2F14")]
		public void OnPointerExit(BaseEventData data)
		{
		}

		[Token(Token = "0x600189C")]
		[Address(RVA = "0x20A2F34", Offset = "0x20A2F34", VA = "0x20A2F34")]
		public void OnPointerClick(BaseEventData data)
		{
		}

		[Token(Token = "0x600189D")]
		[Address(RVA = "0x20A306C", Offset = "0x20A306C", VA = "0x20A306C")]
		private void Start()
		{
		}

		[Token(Token = "0x600189E")]
		[Address(RVA = "0x20A31E4", Offset = "0x20A31E4", VA = "0x20A31E4")]
		private void Update()
		{
		}

		[Token(Token = "0x600189F")]
		[Address(RVA = "0x20A339C", Offset = "0x20A339C", VA = "0x20A339C")]
		public ScrubberEvents()
		{
		}
	}
	[Token(Token = "0x200033B")]
	public class SwitchVideos : MonoBehaviour
	{
		[Token(Token = "0x400164B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject localVideoSample;

		[Token(Token = "0x400164C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject dashVideoSample;

		[Token(Token = "0x400164D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject panoVideoSample;

		[Token(Token = "0x400164E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text missingLibText;

		[Token(Token = "0x400164F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject[] videoSamples;

		[Token(Token = "0x60018A0")]
		[Address(RVA = "0x20A33A4", Offset = "0x20A33A4", VA = "0x20A33A4")]
		public void Awake()
		{
		}

		[Token(Token = "0x60018A1")]
		[Address(RVA = "0x20A36D0", Offset = "0x20A36D0", VA = "0x20A36D0")]
		public void ShowMainMenu()
		{
		}

		[Token(Token = "0x60018A2")]
		[Address(RVA = "0x20A38D4", Offset = "0x20A38D4", VA = "0x20A38D4")]
		public void OnFlatLocal()
		{
		}

		[Token(Token = "0x60018A3")]
		[Address(RVA = "0x20A38DC", Offset = "0x20A38DC", VA = "0x20A38DC")]
		public void OnDash()
		{
		}

		[Token(Token = "0x60018A4")]
		[Address(RVA = "0x20A38E4", Offset = "0x20A38E4", VA = "0x20A38E4")]
		public void On360Video()
		{
		}

		[Token(Token = "0x60018A5")]
		[Address(RVA = "0x20A36D8", Offset = "0x20A36D8", VA = "0x20A36D8")]
		private void ShowSample(int index)
		{
		}

		[Token(Token = "0x60018A6")]
		[Address(RVA = "0x20A38EC", Offset = "0x20A38EC", VA = "0x20A38EC")]
		public SwitchVideos()
		{
		}
	}
	[Token(Token = "0x200033C")]
	public class VideoControlsManager : MonoBehaviour
	{
		[Token(Token = "0x20006CF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A89C", Offset = "0x146A89C")]
		private sealed class <DoAppear>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002729")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400272A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400272B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VideoControlsManager <>4__this;

			[Token(Token = "0x400272C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private CanvasGroup <cg>5__2;

			[Token(Token = "0x17000589")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600294B")]
				[Address(RVA = "0x20A4BC4", Offset = "0x20A4BC4", VA = "0x20A4BC4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700058A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600294D")]
				[Address(RVA = "0x20A4C2C", Offset = "0x20A4C2C", VA = "0x20A4C2C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002948")]
			[Address(RVA = "0x20A4A40", Offset = "0x20A4A40", VA = "0x20A4A40")]
			[DebuggerHidden]
			public <DoAppear>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x6002949")]
			[Address(RVA = "0x20A4AA0", Offset = "0x20A4AA0", VA = "0x20A4AA0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600294A")]
			[Address(RVA = "0x20A4AA4", Offset = "0x20A4AA4", VA = "0x20A4AA4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600294C")]
			[Address(RVA = "0x20A4BCC", Offset = "0x20A4BCC", VA = "0x20A4BCC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A8AC", Offset = "0x146A8AC")]
		private sealed class <DoFade>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400272D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400272E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400272F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VideoControlsManager <>4__this;

			[Token(Token = "0x4002730")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private CanvasGroup <cg>5__2;

			[Token(Token = "0x1700058B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002951")]
				[Address(RVA = "0x20A4D68", Offset = "0x20A4D68", VA = "0x20A4D68", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700058C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002953")]
				[Address(RVA = "0x20A4DD0", Offset = "0x20A4DD0", VA = "0x20A4DD0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600294E")]
			[Address(RVA = "0x20A4A6C", Offset = "0x20A4A6C", VA = "0x20A4A6C")]
			[DebuggerHidden]
			public <DoFade>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x600294F")]
			[Address(RVA = "0x20A4C34", Offset = "0x20A4C34", VA = "0x20A4C34", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002950")]
			[Address(RVA = "0x20A4C38", Offset = "0x20A4C38", VA = "0x20A4C38", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002952")]
			[Address(RVA = "0x20A4D70", Offset = "0x20A4D70", VA = "0x20A4D70", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject pauseSprite;

		[Token(Token = "0x4001651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject playSprite;

		[Token(Token = "0x4001652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Slider videoScrubber;

		[Token(Token = "0x4001653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Slider volumeSlider;

		[Token(Token = "0x4001654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject volumeWidget;

		[Token(Token = "0x4001655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject settingsPanel;

		[Token(Token = "0x4001656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject bufferedBackground;

		[Token(Token = "0x4001657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 basePosition;

		[Token(Token = "0x4001658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Text videoPosition;

		[Token(Token = "0x4001659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Text videoDuration;

		[Token(Token = "0x400165A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14755D0", Offset = "0x14755D0")]
		private GvrVideoPlayerTexture <Player>k__BackingField;

		[Token(Token = "0x170002A0")]
		public GvrVideoPlayerTexture Player
		{
			[Token(Token = "0x60018A7")]
			[Address(RVA = "0x20A39EC", Offset = "0x20A39EC", VA = "0x20A39EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14850B4", Offset = "0x14850B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018A8")]
			[Address(RVA = "0x20A39F4", Offset = "0x20A39F4", VA = "0x20A39F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14850C4", Offset = "0x14850C4")]
			set
			{
			}
		}

		[Token(Token = "0x60018A9")]
		[Address(RVA = "0x20A39FC", Offset = "0x20A39FC", VA = "0x20A39FC")]
		public void OnVolumeUp()
		{
		}

		[Token(Token = "0x60018AA")]
		[Address(RVA = "0x20A3A78", Offset = "0x20A3A78", VA = "0x20A3A78")]
		public void OnVolumeDown()
		{
		}

		[Token(Token = "0x60018AB")]
		[Address(RVA = "0x20A3ADC", Offset = "0x20A3ADC", VA = "0x20A3ADC")]
		public void OnToggleVolume()
		{
		}

		[Token(Token = "0x60018AC")]
		[Address(RVA = "0x20A3B50", Offset = "0x20A3B50", VA = "0x20A3B50")]
		public void OnToggleSettings()
		{
		}

		[Token(Token = "0x60018AD")]
		[Address(RVA = "0x20A3BC4", Offset = "0x20A3BC4", VA = "0x20A3BC4")]
		public void OnPlayPause()
		{
		}

		[Token(Token = "0x60018AE")]
		[Address(RVA = "0x20A3C94", Offset = "0x20A3C94", VA = "0x20A3C94")]
		public void OnVolumePositionChanged(float val)
		{
		}

		[Token(Token = "0x60018AF")]
		[Address(RVA = "0x20A3C50", Offset = "0x20A3C50", VA = "0x20A3C50")]
		public void CloseSubPanels()
		{
		}

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0x20A3D8C", Offset = "0x20A3D8C", VA = "0x20A3D8C")]
		public void Fade(bool show)
		{
		}

		[Token(Token = "0x60018B1")]
		[Address(RVA = "0x20A3EBC", Offset = "0x20A3EBC", VA = "0x20A3EBC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018B2")]
		[Address(RVA = "0x20A43A8", Offset = "0x20A43A8", VA = "0x20A43A8")]
		private void Start()
		{
		}

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0x20A44B4", Offset = "0x20A44B4", VA = "0x20A44B4")]
		private void Update()
		{
		}

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0x20A3DC4", Offset = "0x20A3DC4", VA = "0x20A3DC4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x14850D4", Offset = "0x14850D4")]
		private IEnumerator DoAppear()
		{
			return null;
		}

		[Token(Token = "0x60018B5")]
		[Address(RVA = "0x20A3E40", Offset = "0x20A3E40", VA = "0x20A3E40")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1485138", Offset = "0x1485138")]
		private IEnumerator DoFade()
		{
			return null;
		}

		[Token(Token = "0x60018B6")]
		[Address(RVA = "0x20A48CC", Offset = "0x20A48CC", VA = "0x20A48CC")]
		private string FormatTime(long ms)
		{
			return null;
		}

		[Token(Token = "0x60018B7")]
		[Address(RVA = "0x20A4A98", Offset = "0x20A4A98", VA = "0x20A4A98")]
		public VideoControlsManager()
		{
		}
	}
	[Token(Token = "0x200033D")]
	public class VideoPlayerReference : MonoBehaviour
	{
		[Token(Token = "0x400165B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GvrVideoPlayerTexture player;

		[Token(Token = "0x60018B8")]
		[Address(RVA = "0x20A4DD8", Offset = "0x20A4DD8", VA = "0x20A4DD8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018B9")]
		[Address(RVA = "0x20A4E40", Offset = "0x20A4E40", VA = "0x20A4E40")]
		public VideoPlayerReference()
		{
		}
	}
}
namespace GoogleVR.PermissionsDemo
{
	[Token(Token = "0x200033E")]
	public class PermissionsFlowManager : MonoBehaviour
	{
		[Token(Token = "0x400165C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text statusText;

		[Token(Token = "0x400165D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string[] permissionNames;

		[Token(Token = "0x400165E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<GvrPermissionsRequester.PermissionStatus> permissionList;

		[Token(Token = "0x60018BA")]
		[Address(RVA = "0x20A2148", Offset = "0x20A2148", VA = "0x20A2148")]
		public void CheckPermission()
		{
		}

		[Token(Token = "0x60018BB")]
		[Address(RVA = "0x20A22A8", Offset = "0x20A22A8", VA = "0x20A22A8")]
		public void RequestPermissions()
		{
		}

		[Token(Token = "0x60018BC")]
		[Address(RVA = "0x20A2554", Offset = "0x20A2554", VA = "0x20A2554")]
		public PermissionsFlowManager()
		{
		}

		[Token(Token = "0x60018BE")]
		[Address(RVA = "0x20A2660", Offset = "0x20A2660", VA = "0x20A2660")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148519C", Offset = "0x148519C")]
		private void <RequestPermissions>b__4_0(GvrPermissionsRequester.PermissionStatus[] permissionResults)
		{
		}
	}
}
namespace GoogleVR.KeyboardDemo
{
	[Token(Token = "0x200033F")]
	public class KeyboardDelegateExample : GvrKeyboardDelegateBase
	{
		[Token(Token = "0x400165F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text keyboardText;

		[Token(Token = "0x4001660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Canvas updateCanvas;

		[Token(Token = "0x4001661")]
		private const string DD_KEYBOARD_NOT_INSTALLED_MSG = "Please update the Daydream Keyboard app from the Play Store.";

		[Token(Token = "0x14000047")]
		public override event EventHandler KeyboardHidden
		{
			[Token(Token = "0x60018BF")]
			[Address(RVA = "0x20A18C4", Offset = "0x20A18C4", VA = "0x20A18C4", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14851AC", Offset = "0x14851AC")]
			add
			{
			}
			[Token(Token = "0x60018C0")]
			[Address(RVA = "0x20A1968", Offset = "0x20A1968", VA = "0x20A1968", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14851BC", Offset = "0x14851BC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000048")]
		public override event EventHandler KeyboardShown
		{
			[Token(Token = "0x60018C1")]
			[Address(RVA = "0x20A1A0C", Offset = "0x20A1A0C", VA = "0x20A1A0C", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14851CC", Offset = "0x14851CC")]
			add
			{
			}
			[Token(Token = "0x60018C2")]
			[Address(RVA = "0x20A1AB0", Offset = "0x20A1AB0", VA = "0x20A1AB0", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14851DC", Offset = "0x14851DC")]
			remove
			{
			}
		}

		[Token(Token = "0x60018C3")]
		[Address(RVA = "0x20A1B54", Offset = "0x20A1B54", VA = "0x20A1B54", Slot = "8")]
		public override void OnKeyboardShow()
		{
		}

		[Token(Token = "0x60018C4")]
		[Address(RVA = "0x20A1BE8", Offset = "0x20A1BE8", VA = "0x20A1BE8", Slot = "9")]
		public override void OnKeyboardHide()
		{
		}

		[Token(Token = "0x60018C5")]
		[Address(RVA = "0x20A1C7C", Offset = "0x20A1C7C", VA = "0x20A1C7C", Slot = "10")]
		public override void OnKeyboardUpdate(string text)
		{
		}

		[Token(Token = "0x60018C6")]
		[Address(RVA = "0x20A1D5C", Offset = "0x20A1D5C", VA = "0x20A1D5C", Slot = "11")]
		public override void OnKeyboardEnterPressed(string text)
		{
		}

		[Token(Token = "0x60018C7")]
		[Address(RVA = "0x20A1DE4", Offset = "0x20A1DE4", VA = "0x20A1DE4", Slot = "12")]
		public override void OnKeyboardError(GvrKeyboardError errCode)
		{
		}

		[Token(Token = "0x60018C8")]
		[Address(RVA = "0x20A1FE4", Offset = "0x20A1FE4", VA = "0x20A1FE4")]
		public void LaunchPlayStore()
		{
		}

		[Token(Token = "0x60018C9")]
		[Address(RVA = "0x20A209C", Offset = "0x20A209C", VA = "0x20A209C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018CA")]
		[Address(RVA = "0x20A2140", Offset = "0x20A2140", VA = "0x20A2140")]
		public KeyboardDelegateExample()
		{
		}
	}
}
namespace GoogleVR.HelloVR
{
	[Token(Token = "0x2000340")]
	public class HeadsetDemoManager : MonoBehaviour
	{
		[Token(Token = "0x20006D1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A8BC", Offset = "0x146A8BC")]
		private sealed class <StatusUpdateLoop>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002731")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002732")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002733")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HeadsetDemoManager <>4__this;

			[Token(Token = "0x1700058D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002957")]
				[Address(RVA = "0x20A0EE0", Offset = "0x20A0EE0", VA = "0x20A0EE0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700058E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002959")]
				[Address(RVA = "0x20A0F48", Offset = "0x20A0F48", VA = "0x20A0F48", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002954")]
			[Address(RVA = "0x20A0DA0", Offset = "0x20A0DA0", VA = "0x20A0DA0")]
			[DebuggerHidden]
			public <StatusUpdateLoop>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6002955")]
			[Address(RVA = "0x20A0E44", Offset = "0x20A0E44", VA = "0x20A0E44", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002956")]
			[Address(RVA = "0x20A0E48", Offset = "0x20A0E48", VA = "0x20A0E48", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002958")]
			[Address(RVA = "0x20A0EE8", Offset = "0x20A0EE8", VA = "0x20A0EE8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject safetyRing;

		[Token(Token = "0x4001665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool enableDebugLog;

		[Token(Token = "0x4001666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSeconds waitFourSeconds;

		[Token(Token = "0x60018CB")]
		[Address(RVA = "0x209FB8C", Offset = "0x209FB8C", VA = "0x209FB8C")]
		public void OnSafetyRegionEvent(bool enter)
		{
		}

		[Token(Token = "0x60018CC")]
		[Address(RVA = "0x209FC50", Offset = "0x209FC50", VA = "0x209FC50")]
		public void OnRecenterEvent(GvrRecenterEventType recenterType, GvrRecenterFlags recenterFlags, Vector3 recenteredPosition, Quaternion recenteredOrientation)
		{
		}

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0x209FEB8", Offset = "0x209FEB8", VA = "0x209FEB8")]
		public void FindFloorHeight()
		{
		}

		[Token(Token = "0x60018CE")]
		[Address(RVA = "0x20A00B4", Offset = "0x20A00B4", VA = "0x20A00B4")]
		public void FindRecenterTransform()
		{
		}

		[Token(Token = "0x60018CF")]
		[Address(RVA = "0x20A03B8", Offset = "0x20A03B8", VA = "0x20A03B8")]
		public void FindSafetyRegionType()
		{
		}

		[Token(Token = "0x60018D0")]
		[Address(RVA = "0x20A05B4", Offset = "0x20A05B4", VA = "0x20A05B4")]
		public void FindSafetyInnerRadius()
		{
		}

		[Token(Token = "0x60018D1")]
		[Address(RVA = "0x20A086C", Offset = "0x20A086C", VA = "0x20A086C")]
		public void FindSafetyOuterRadius()
		{
		}

		[Token(Token = "0x60018D2")]
		[Address(RVA = "0x20A0A6C", Offset = "0x20A0A6C", VA = "0x20A0A6C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60018D3")]
		[Address(RVA = "0x20A0C1C", Offset = "0x20A0C1C", VA = "0x20A0C1C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60018D4")]
		[Address(RVA = "0x20A0CE0", Offset = "0x20A0CE0", VA = "0x20A0CE0")]
		private void Start()
		{
		}

		[Token(Token = "0x60018D5")]
		[Address(RVA = "0x20A0BA0", Offset = "0x20A0BA0", VA = "0x20A0BA0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x14851EC", Offset = "0x14851EC")]
		private IEnumerator StatusUpdateLoop()
		{
			return null;
		}

		[Token(Token = "0x60018D6")]
		[Address(RVA = "0x20A0DCC", Offset = "0x20A0DCC", VA = "0x20A0DCC")]
		public HeadsetDemoManager()
		{
		}
	}
	[Token(Token = "0x2000341")]
	public class HelloVRManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20006D2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A8CC", Offset = "0x146A8CC")]
		private sealed class <>c
		{
			[Token(Token = "0x4002734")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002735")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<bool> <>9__2_0;

			[Token(Token = "0x4002736")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<bool> <>9__3_0;

			[Token(Token = "0x600295B")]
			[Address(RVA = "0x20A1264", Offset = "0x20A1264", VA = "0x20A1264")]
			public <>c()
			{
			}

			[Token(Token = "0x600295C")]
			[Address(RVA = "0x20A126C", Offset = "0x20A126C", VA = "0x20A126C")]
			internal void <LaunchVrHome>b__2_0(bool success)
			{
			}

			[Token(Token = "0x600295D")]
			[Address(RVA = "0x20A12EC", Offset = "0x20A12EC", VA = "0x20A12EC")]
			internal void <Start>b__3_0(bool success)
			{
			}
		}

		[Token(Token = "0x4001667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject launchVrHomeButton;

		[Token(Token = "0x4001668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DemoInputManager demoInputManager;

		[Token(Token = "0x60018D7")]
		[Address(RVA = "0x20A0F50", Offset = "0x20A0F50", VA = "0x20A0F50")]
		public void LaunchVrHome()
		{
		}

		[Token(Token = "0x60018D8")]
		[Address(RVA = "0x20A1034", Offset = "0x20A1034", VA = "0x20A1034")]
		private void Start()
		{
		}

		[Token(Token = "0x60018D9")]
		[Address(RVA = "0x20A1118", Offset = "0x20A1118", VA = "0x20A1118")]
		private void Update()
		{
		}

		[Token(Token = "0x60018DA")]
		[Address(RVA = "0x20A11F4", Offset = "0x20A11F4", VA = "0x20A11F4")]
		public HelloVRManager()
		{
		}
	}
	[Token(Token = "0x2000342")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1468BAC", Offset = "0x1468BAC")]
	public class ObjectController : MonoBehaviour
	{
		[Token(Token = "0x4001669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material inactiveMaterial;

		[Token(Token = "0x400166A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material gazedAtMaterial;

		[Token(Token = "0x400166B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 startingPosition;

		[Token(Token = "0x400166C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Renderer myRenderer;

		[Token(Token = "0x60018DB")]
		[Address(RVA = "0x20A136C", Offset = "0x20A136C", VA = "0x20A136C")]
		public void SetGazedAt(bool gazedAt)
		{
		}

		[Token(Token = "0x60018DC")]
		[Address(RVA = "0x20A1460", Offset = "0x20A1460", VA = "0x20A1460")]
		public void Reset()
		{
		}

		[Token(Token = "0x60018DD")]
		[Address(RVA = "0x20A1554", Offset = "0x20A1554", VA = "0x20A1554")]
		public void Recenter()
		{
		}

		[Token(Token = "0x60018DE")]
		[Address(RVA = "0x20A155C", Offset = "0x20A155C", VA = "0x20A155C")]
		public void TeleportRandomly(BaseEventData eventData)
		{
		}

		[Token(Token = "0x60018DF")]
		[Address(RVA = "0x20A182C", Offset = "0x20A182C", VA = "0x20A182C")]
		private void Start()
		{
		}

		[Token(Token = "0x60018E0")]
		[Address(RVA = "0x20A18BC", Offset = "0x20A18BC", VA = "0x20A18BC")]
		public ObjectController()
		{
		}
	}
}
namespace GoogleVR.Demos
{
	[Token(Token = "0x2000343")]
	public class DemoInfoPanel : MonoBehaviour
	{
		[Token(Token = "0x60018E1")]
		[Address(RVA = "0x209E6D4", Offset = "0x209E6D4", VA = "0x209E6D4")]
		private void Start()
		{
		}

		[Token(Token = "0x60018E2")]
		[Address(RVA = "0x209E7D0", Offset = "0x209E7D0", VA = "0x209E7D0")]
		public DemoInfoPanel()
		{
		}
	}
	[Token(Token = "0x2000344")]
	public class DemoInputManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20006D3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A8DC", Offset = "0x146A8DC")]
		private sealed class <>c
		{
			[Token(Token = "0x4002737")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002738")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<string> <>9__27_0;

			[Token(Token = "0x4002739")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Predicate<string> <>9__28_0;

			[Token(Token = "0x600295F")]
			[Address(RVA = "0x209FA8C", Offset = "0x209FA8C", VA = "0x209FA8C")]
			public <>c()
			{
			}

			[Token(Token = "0x6002960")]
			[Address(RVA = "0x209FA94", Offset = "0x209FA94", VA = "0x209FA94")]
			internal bool <playerSettingsHasDaydream>b__27_0(string element)
			{
				return default(bool);
			}

			[Token(Token = "0x6002961")]
			[Address(RVA = "0x209FAF0", Offset = "0x209FAF0", VA = "0x209FAF0")]
			internal bool <playerSettingsHasCardboard>b__28_0(string element)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400166D")]
		public const string CONTROLLER_MAIN_PROP_NAME = "controllerMain";

		[Token(Token = "0x400166E")]
		public const string CONTROLLER_POINTER_PROP_NAME = "controllerPointers";

		[Token(Token = "0x400166F")]
		public const string RETICLE_POINTER_PROP_NAME = "reticlePointer";

		[Token(Token = "0x4001670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1475600", Offset = "0x1475600")]
		public GameObject controllerMain;

		[Token(Token = "0x4001671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1475638", Offset = "0x1475638")]
		public GameObject[] controllerPointers;

		[Token(Token = "0x4001672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1475670", Offset = "0x1475670")]
		public GameObject reticlePointer;

		[Token(Token = "0x4001673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject messageCanvas;

		[Token(Token = "0x4001674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Text messageText;

		[Token(Token = "0x4001675")]
		private const string MESSAGE_CANVAS_NAME = "MessageCanvas";

		[Token(Token = "0x4001676")]
		private const string MESSAGE_TEXT_NAME = "MessageText";

		[Token(Token = "0x4001677")]
		private const string LASER_GAMEOBJECT_NAME = "Laser";

		[Token(Token = "0x4001678")]
		private const string CONTROLLER_CONNECTING_MESSAGE = "Daydream controller connecting...";

		[Token(Token = "0x4001679")]
		private const string CONTROLLER_DISCONNECTED_MESSAGE = "Daydream controller not connected";

		[Token(Token = "0x400167A")]
		private const string CONTROLLER_SCANNING_MESSAGE = "Scanning for Daydream controller...";

		[Token(Token = "0x400167B")]
		private const string NON_GVR_PLATFORM = "Please select a supported Google VR platform via 'Build Settings > Android | iOS > Switch Platform'\n";

		[Token(Token = "0x400167C")]
		private const string VR_SUPPORT_NOT_CHECKED = "Please make sure 'Player Settings > Virtual Reality Supported' is checked\n";

		[Token(Token = "0x400167D")]
		private const string EMPTY_VR_SDK_WARNING_MESSAGE = "Please add 'Daydream' or 'Cardboard' under 'Player Settings > Virtual Reality SDKs'\n";

		[Token(Token = "0x400167E")]
		private const int ANDROID_MIN_DAYDREAM_API = 24;

		[Token(Token = "0x400167F")]
		private const string FIELD_SDK_INT = "SDK_INT";

		[Token(Token = "0x4001680")]
		private const string PACKAGE_BUILD_VERSION = "android.os.Build$VERSION";

		[Token(Token = "0x4001681")]
		private const string PACKAGE_DAYDREAM_API_CLASS = "com.google.vr.ndk.base.DaydreamApi";

		[Token(Token = "0x4001682")]
		private const string METHOD_IS_DAYDREAM_READY = "isDaydreamReadyPlatform";

		[Token(Token = "0x4001683")]
		private const GvrControllerButton POINTER_BUTTON_MASK = (GvrControllerButton)202;

		[Token(Token = "0x4001684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly GvrControllerHand[] ALL_HANDS;

		[Token(Token = "0x4001685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GvrSettings.ViewerPlatformType viewerPlatform;

		[Token(Token = "0x4001686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool isDaydream;

		[Token(Token = "0x4001687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int activeControllerPointer;

		[Token(Token = "0x60018E3")]
		[Address(RVA = "0x209E7D8", Offset = "0x209E7D8", VA = "0x209E7D8")]
		public static bool playerSettingsHasDaydream()
		{
			return default(bool);
		}

		[Token(Token = "0x60018E4")]
		[Address(RVA = "0x209E8DC", Offset = "0x209E8DC", VA = "0x209E8DC")]
		public static bool playerSettingsHasCardboard()
		{
			return default(bool);
		}

		[Token(Token = "0x60018E5")]
		[Address(RVA = "0x209E9E0", Offset = "0x209E9E0", VA = "0x209E9E0")]
		public bool IsCurrentlyDaydream()
		{
			return default(bool);
		}

		[Token(Token = "0x60018E6")]
		[Address(RVA = "0x209E9E8", Offset = "0x209E9E8", VA = "0x209E9E8")]
		private static bool IsDeviceDaydreamReady()
		{
			return default(bool);
		}

		[Token(Token = "0x60018E7")]
		[Address(RVA = "0x209ECF0", Offset = "0x209ECF0", VA = "0x209ECF0")]
		private void Start()
		{
		}

		[Token(Token = "0x60018E8")]
		[Address(RVA = "0x209F0B8", Offset = "0x209F0B8", VA = "0x209F0B8")]
		private void Update()
		{
		}

		[Token(Token = "0x60018E9")]
		[Address(RVA = "0x209F328", Offset = "0x209F328", VA = "0x209F328")]
		private void UpdateStatusMessage()
		{
		}

		[Token(Token = "0x60018EA")]
		[Address(RVA = "0x209F084", Offset = "0x209F084", VA = "0x209F084")]
		private void SetVRInputMechanism()
		{
		}

		[Token(Token = "0x60018EB")]
		[Address(RVA = "0x209F720", Offset = "0x209F720", VA = "0x209F720")]
		private void SetGazeInputActive(bool active)
		{
		}

		[Token(Token = "0x60018EC")]
		[Address(RVA = "0x209F824", Offset = "0x209F824", VA = "0x209F824")]
		private void SetControllerInputActive(bool active)
		{
		}

		[Token(Token = "0x60018ED")]
		[Address(RVA = "0x209F98C", Offset = "0x209F98C", VA = "0x209F98C")]
		public DemoInputManager()
		{
		}
	}
	[Token(Token = "0x2000345")]
	public class DemoSceneManager : MonoBehaviour
	{
		[Token(Token = "0x60018EF")]
		[Address(RVA = "0x209FB4C", Offset = "0x209FB4C", VA = "0x209FB4C")]
		private void Start()
		{
		}

		[Token(Token = "0x60018F0")]
		[Address(RVA = "0x209FB58", Offset = "0x209FB58", VA = "0x209FB58")]
		private void Update()
		{
		}

		[Token(Token = "0x60018F1")]
		[Address(RVA = "0x209FB84", Offset = "0x209FB84", VA = "0x209FB84")]
		public DemoSceneManager()
		{
		}
	}
}
namespace GoogleVR.Beta
{
	[Token(Token = "0x2000346")]
	public class GvrBetaControllerInput
	{
		[Token(Token = "0x20006D4")]
		public enum Configuration
		{
			[Token(Token = "0x400273B")]
			Unknown,
			[Token(Token = "0x400273C")]
			Is3DoF,
			[Token(Token = "0x400273D")]
			Is6DoF
		}

		[Token(Token = "0x20006D5")]
		public enum TrackingStatusFlags
		{
			[Token(Token = "0x400273F")]
			Unknown = 1,
			[Token(Token = "0x4002740")]
			Nominal = 2,
			[Token(Token = "0x4002741")]
			Occluded = 4,
			[Token(Token = "0x4002742")]
			OutOfFov = 8
		}

		[Token(Token = "0x60018F2")]
		[Address(RVA = "0x209E2F4", Offset = "0x209E2F4", VA = "0x209E2F4")]
		internal static Configuration GetConfigurationType(int device)
		{
			return default(Configuration);
		}

		[Token(Token = "0x60018F3")]
		[Address(RVA = "0x209E2F8", Offset = "0x209E2F8", VA = "0x209E2F8")]
		internal static TrackingStatusFlags GetTrackingStatusFlags(int device)
		{
			return default(TrackingStatusFlags);
		}

		[Token(Token = "0x60018F4")]
		[Address(RVA = "0x209E2FC", Offset = "0x209E2FC", VA = "0x209E2FC")]
		public GvrBetaControllerInput()
		{
		}
	}
	[Token(Token = "0x2000347")]
	internal class GvrBetaControllerState
	{
		[Token(Token = "0x4001688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal GvrBetaControllerInput.Configuration betaConfigurationType;

		[Token(Token = "0x4001689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal GvrBetaControllerInput.TrackingStatusFlags betaTrackingStatusFlags;

		[Token(Token = "0x60018F5")]
		[Address(RVA = "0x209E304", Offset = "0x209E304", VA = "0x209E304")]
		public void CopyFrom(GvrBetaControllerState other)
		{
		}

		[Token(Token = "0x60018F6")]
		[Address(RVA = "0x209E328", Offset = "0x209E328", VA = "0x209E328")]
		public GvrBetaControllerState()
		{
		}
	}
	[Token(Token = "0x2000348")]
	public class GvrBetaControllerVisualMulti : GvrControllerVisual
	{
		[Token(Token = "0x400168A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private VisualAssets[] visualsAssets;

		[Token(Token = "0x170002A1")]
		public override float PreferredAlpha
		{
			[Token(Token = "0x60018F7")]
			[Address(RVA = "0x209E338", Offset = "0x209E338", VA = "0x209E338", Slot = "7")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60018F8")]
		[Address(RVA = "0x209E3B8", Offset = "0x209E3B8", VA = "0x209E3B8", Slot = "8")]
		protected override VisualAssets GetVisualAssets()
		{
			return default(VisualAssets);
		}

		[Token(Token = "0x60018F9")]
		[Address(RVA = "0x209E4B0", Offset = "0x209E4B0", VA = "0x209E4B0")]
		public GvrBetaControllerVisualMulti()
		{
		}
	}
	[Token(Token = "0x2000349")]
	public enum GvrBetaSeeThroughCameraMode
	{
		[Token(Token = "0x400168C")]
		Disabled,
		[Token(Token = "0x400168D")]
		RawImage,
		[Token(Token = "0x400168E")]
		ToneMap
	}
	[Token(Token = "0x200034A")]
	public enum GvrBetaSeeThroughSceneType
	{
		[Token(Token = "0x4001690")]
		Virtual,
		[Token(Token = "0x4001691")]
		Augmented
	}
	[Token(Token = "0x200034B")]
	public class GvrBetaHeadset : GvrHeadset
	{
		[Token(Token = "0x4001692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GvrBetaSeeThroughCameraMode currentCameraMode;

		[Token(Token = "0x4001693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static GvrBetaSeeThroughSceneType currentSceneType;

		[Token(Token = "0x4001694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GvrBetaSeeThroughCameraMode initialCameraMode;

		[Token(Token = "0x4001695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private GvrBetaSeeThroughSceneType initialSceneType;

		[Token(Token = "0x170002A2")]
		public static GvrBetaSeeThroughCameraMode CameraMode
		{
			[Token(Token = "0x60018FA")]
			[Address(RVA = "0x209E4C0", Offset = "0x209E4C0", VA = "0x209E4C0")]
			get
			{
				return default(GvrBetaSeeThroughCameraMode);
			}
			[Token(Token = "0x60018FB")]
			[Address(RVA = "0x209E510", Offset = "0x209E510", VA = "0x209E510")]
			set
			{
			}
		}

		[Token(Token = "0x170002A3")]
		public static GvrBetaSeeThroughSceneType SceneType
		{
			[Token(Token = "0x60018FC")]
			[Address(RVA = "0x209E568", Offset = "0x209E568", VA = "0x209E568")]
			get
			{
				return default(GvrBetaSeeThroughSceneType);
			}
			[Token(Token = "0x60018FD")]
			[Address(RVA = "0x209E5B8", Offset = "0x209E5B8", VA = "0x209E5B8")]
			set
			{
			}
		}

		[Token(Token = "0x60018FE")]
		[Address(RVA = "0x209E168", Offset = "0x209E168", VA = "0x209E168")]
		public static void SetSeeThroughConfig(GvrBetaSeeThroughCameraMode cameraMode, GvrBetaSeeThroughSceneType sceneType)
		{
		}

		[Token(Token = "0x60018FF")]
		[Address(RVA = "0x209E6C0", Offset = "0x209E6C0", VA = "0x209E6C0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001900")]
		[Address(RVA = "0x209E6CC", Offset = "0x209E6CC", VA = "0x209E6CC")]
		public GvrBetaHeadset()
		{
		}
	}
	[Token(Token = "0x200034C")]
	public enum GvrBetaFeature
	{
		[Token(Token = "0x4001697")]
		SeeThrough = 1001
	}
	[Token(Token = "0x200034D")]
	public static class GvrBetaSettings
	{
		[Token(Token = "0x6001901")]
		[Address(RVA = "0x209DEB8", Offset = "0x209DEB8", VA = "0x209DEB8")]
		public static bool IsFeatureSupported(GvrBetaFeature feature)
		{
			return default(bool);
		}

		[Token(Token = "0x6001902")]
		[Address(RVA = "0x209DEC0", Offset = "0x209DEC0", VA = "0x209DEC0")]
		public static bool IsFeatureEnabled(GvrBetaFeature feature)
		{
			return default(bool);
		}

		[Token(Token = "0x6001903")]
		[Address(RVA = "0x209DEC8", Offset = "0x209DEC8", VA = "0x209DEC8")]
		public static void RequestFeatures(GvrBetaFeature[] requiredFeatures, GvrBetaFeature[] optionalFeatures)
		{
		}
	}
	[Token(Token = "0x200034E")]
	public static class GvrControllerInputDeviceExtension
	{
		[Token(Token = "0x6001904")]
		[Address(RVA = "0x209E488", Offset = "0x209E488", VA = "0x209E488")]
		public static GvrBetaControllerInput.Configuration GetConfigurationType(this GvrControllerInputDevice device)
		{
			return default(GvrBetaControllerInput.Configuration);
		}

		[Token(Token = "0x6001905")]
		[Address(RVA = "0x209E390", Offset = "0x209E390", VA = "0x209E390")]
		public static GvrBetaControllerInput.TrackingStatusFlags GetTrackingStatusFlags(this GvrControllerInputDevice device)
		{
			return default(GvrBetaControllerInput.TrackingStatusFlags);
		}
	}
	[Token(Token = "0x200034F")]
	internal class GvrBetaAndroidNativeControllerInputProvider
	{
		[Token(Token = "0x4001698")]
		private const string shimDllName = "gvrshim";

		[Token(Token = "0x6001906")]
		[Address(RVA = "0x209E1E4", Offset = "0x209E1E4", VA = "0x209E1E4")]
		internal static GvrBetaControllerInput.Configuration GetConfigurationType(int device)
		{
			return default(GvrBetaControllerInput.Configuration);
		}

		[Token(Token = "0x6001907")]
		[Address(RVA = "0x209E268", Offset = "0x209E268", VA = "0x209E268")]
		internal static GvrBetaControllerInput.TrackingStatusFlags GetTrackingStatusFlags(int device)
		{
			return default(GvrBetaControllerInput.TrackingStatusFlags);
		}

		[PreserveSig]
		[Token(Token = "0x6001908")]
		[Address(RVA = "0x209E1E8", Offset = "0x209E1E8", VA = "0x209E1E8")]
		private static extern int GvrShimUnity_betaControllerGetConfigurationType(int device);

		[PreserveSig]
		[Token(Token = "0x6001909")]
		[Address(RVA = "0x209E26C", Offset = "0x209E26C", VA = "0x209E26C")]
		private static extern int GvrShimUnity_betaControllerStateGetTrackingStatus(int device);

		[Token(Token = "0x600190A")]
		[Address(RVA = "0x209E2EC", Offset = "0x209E2EC", VA = "0x209E2EC")]
		public GvrBetaAndroidNativeControllerInputProvider()
		{
		}
	}
	[Token(Token = "0x2000350")]
	internal class GvrBetaEditorControllerInputProvider
	{
		[Token(Token = "0x600190B")]
		[Address(RVA = "0x209E4B8", Offset = "0x209E4B8", VA = "0x209E4B8")]
		public GvrBetaEditorControllerInputProvider()
		{
		}
	}
}
namespace GoogleVR.Beta.Demos
{
	[Token(Token = "0x2000351")]
	public class DemoObjectController6DoF : MonoBehaviour
	{
		[Token(Token = "0x4001699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material inactiveMaterial;

		[Token(Token = "0x400169A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material gazedAtMaterial;

		[Token(Token = "0x400169B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 startingPosition;

		[Token(Token = "0x400169C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 startingScale;

		[Token(Token = "0x400169D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool isLockedToController;

		[Token(Token = "0x400169E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Renderer myRenderer;

		[Token(Token = "0x400169F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GvrTrackedController grabController;

		[Token(Token = "0x600190C")]
		[Address(RVA = "0x209D220", Offset = "0x209D220", VA = "0x209D220")]
		public void UpdateStartPosition()
		{
		}

		[Token(Token = "0x600190D")]
		[Address(RVA = "0x209D27C", Offset = "0x209D27C", VA = "0x209D27C")]
		public void SetGazedAt(bool gazedAt)
		{
		}

		[Token(Token = "0x600190E")]
		[Address(RVA = "0x209D370", Offset = "0x209D370", VA = "0x209D370")]
		public void GripStartGrab(BaseEventData eventData)
		{
		}

		[Token(Token = "0x600190F")]
		[Address(RVA = "0x209D438", Offset = "0x209D438", VA = "0x209D438")]
		public void GripEndGrab(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6001910")]
		[Address(RVA = "0x209D4E0", Offset = "0x209D4E0", VA = "0x209D4E0")]
		public void ClickTeleport(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6001911")]
		[Address(RVA = "0x209D81C", Offset = "0x209D81C", VA = "0x209D81C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001912")]
		[Address(RVA = "0x209D8CC", Offset = "0x209D8CC", VA = "0x209D8CC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001913")]
		[Address(RVA = "0x209D58C", Offset = "0x209D58C", VA = "0x209D58C")]
		private void TeleportRandomly()
		{
		}

		[Token(Token = "0x6001914")]
		[Address(RVA = "0x209DD00", Offset = "0x209DD00", VA = "0x209DD00")]
		public DemoObjectController6DoF()
		{
		}
	}
	[Token(Token = "0x2000352")]
	public class DemoSeeThroughController : MonoBehaviour
	{
		[Token(Token = "0x40016A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text infoText;

		[Token(Token = "0x40016A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text statusText;

		[Token(Token = "0x40016A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject[] hideDuringSeeThrough;

		[Token(Token = "0x6001915")]
		[Address(RVA = "0x209DD08", Offset = "0x209DD08", VA = "0x209DD08")]
		private void Start()
		{
		}

		[Token(Token = "0x6001916")]
		[Address(RVA = "0x209DED0", Offset = "0x209DED0", VA = "0x209DED0")]
		private void OnApplicationPause(bool didPause)
		{
		}

		[Token(Token = "0x6001917")]
		[Address(RVA = "0x209DEDC", Offset = "0x209DEDC", VA = "0x209DEDC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001918")]
		[Address(RVA = "0x209E15C", Offset = "0x209E15C", VA = "0x209E15C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001919")]
		[Address(RVA = "0x209DDC0", Offset = "0x209DDC0", VA = "0x209DDC0")]
		private void UpdateInfoText()
		{
		}

		[Token(Token = "0x600191A")]
		[Address(RVA = "0x209DFE8", Offset = "0x209DFE8", VA = "0x209DFE8")]
		private void CycleSeeThroughModes()
		{
		}

		[Token(Token = "0x600191B")]
		[Address(RVA = "0x209E1DC", Offset = "0x209E1DC", VA = "0x209E1DC")]
		public DemoSeeThroughController()
		{
		}
	}
}
namespace GoogleARCoreInternal
{
	[Token(Token = "0x2000353")]
	public static class InstantPreviewManager
	{
		[Token(Token = "0x20006D6")]
		private struct NativeApi
		{
			[PreserveSig]
			[Token(Token = "0x6002962")]
			[Address(RVA = "0x2095884", Offset = "0x2095884", VA = "0x2095884")]
			public static extern bool InitializeInstantPreview(string adbPath, StringBuilder version, int versionStringLength);

			[PreserveSig]
			[Token(Token = "0x6002963")]
			[Address(RVA = "0x20974D8", Offset = "0x20974D8", VA = "0x20974D8")]
			public static extern void Update();

			[PreserveSig]
			[Token(Token = "0x6002964")]
			[Address(RVA = "0x2097464", Offset = "0x2097464", VA = "0x2097464")]
			public static extern IntPtr GetRenderEventFunc();

			[PreserveSig]
			[Token(Token = "0x6002965")]
			[Address(RVA = "0x2097640", Offset = "0x2097640", VA = "0x2097640")]
			public static extern void SendFrame(IntPtr renderTexture);

			[PreserveSig]
			[Token(Token = "0x6002966")]
			[Address(RVA = "0x20952B8", Offset = "0x20952B8", VA = "0x20952B8")]
			public static extern bool LockCameraTexture(out IntPtr pixelBytes, out int width, out int height);

			[PreserveSig]
			[Token(Token = "0x6002967")]
			[Address(RVA = "0x2095358", Offset = "0x2095358", VA = "0x2095358")]
			public static extern void UnlockCameraTexture();

			[PreserveSig]
			[Token(Token = "0x6002968")]
			[Address(RVA = "0x2097730", Offset = "0x2097730", VA = "0x2097730")]
			public static extern bool IsConnected();

			[PreserveSig]
			[Token(Token = "0x6002969")]
			[Address(RVA = "0x2097548", Offset = "0x2097548", VA = "0x2097548")]
			public static extern bool AppShowedTouchWarning();

			[PreserveSig]
			[Token(Token = "0x600296A")]
			[Address(RVA = "0x20975C4", Offset = "0x20975C4", VA = "0x20975C4")]
			public static extern bool UnityLoggedTouchWarning();

			[PreserveSig]
			[Token(Token = "0x600296B")]
			[Address(RVA = "0x2095010", Offset = "0x2095010", VA = "0x2095010")]
			public static extern void SendToast(string toastMessage);
		}

		[Token(Token = "0x20006D7")]
		private class Result
		{
			[Token(Token = "0x4002743")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool ShouldPromptForInstall;

			[Token(Token = "0x600296C")]
			[Address(RVA = "0x2096CE8", Offset = "0x2096CE8", VA = "0x2096CE8")]
			public Result()
			{
			}
		}

		[Token(Token = "0x20006D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A8EC", Offset = "0x146A8EC")]
		private sealed class <InitializeIfNeeded>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002744")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002745")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002746")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private string <adbPath>5__2;

			[Token(Token = "0x1700058F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002970")]
				[Address(RVA = "0x2096924", Offset = "0x2096924", VA = "0x2096924", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000590")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002972")]
				[Address(RVA = "0x209698C", Offset = "0x209698C", VA = "0x209698C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600296D")]
			[Address(RVA = "0x2095100", Offset = "0x2095100", VA = "0x2095100")]
			[DebuggerHidden]
			public <InitializeIfNeeded>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x600296E")]
			[Address(RVA = "0x2096534", Offset = "0x2096534", VA = "0x2096534", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600296F")]
			[Address(RVA = "0x2096538", Offset = "0x2096538", VA = "0x2096538", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002971")]
			[Address(RVA = "0x209692C", Offset = "0x209692C", VA = "0x209692C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006D9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A8FC", Offset = "0x146A8FC")]
		private sealed class <UpdateLoop>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002747")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002748")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002749")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string adbPath;

			[Token(Token = "0x400274A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private IntPtr <renderEventFunc>5__2;

			[Token(Token = "0x400274B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private bool <shouldConvertToBgra>5__3;

			[Token(Token = "0x400274C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
			private bool <loggedAspectRatioWarning>5__4;

			[Token(Token = "0x400274D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int <currentWidth>5__5;

			[Token(Token = "0x400274E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <currentHeight>5__6;

			[Token(Token = "0x400274F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private bool <needToStartActivity>5__7;

			[Token(Token = "0x4002750")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
			private bool <prevFrameLandscape>5__8;

			[Token(Token = "0x4002751")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private RenderTexture <screenTexture>5__9;

			[Token(Token = "0x4002752")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private RenderTexture <targetTexture>5__10;

			[Token(Token = "0x4002753")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private RenderTexture <bgrTexture>5__11;

			[Token(Token = "0x17000591")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002976")]
				[Address(RVA = "0x20976C0", Offset = "0x20976C0", VA = "0x20976C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000592")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002978")]
				[Address(RVA = "0x2097728", Offset = "0x2097728", VA = "0x2097728", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002973")]
			[Address(RVA = "0x2095444", Offset = "0x2095444", VA = "0x2095444")]
			[DebuggerHidden]
			public <UpdateLoop>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6002974")]
			[Address(RVA = "0x2096D60", Offset = "0x2096D60", VA = "0x2096D60", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002975")]
			[Address(RVA = "0x2096D64", Offset = "0x2096D64", VA = "0x2096D64", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002977")]
			[Address(RVA = "0x20976C8", Offset = "0x20976C8", VA = "0x20976C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006DA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A90C", Offset = "0x146A90C")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x4002754")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string adbPath;

			[Token(Token = "0x4002755")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string apkPath;

			[Token(Token = "0x4002756")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string localVersion;

			[Token(Token = "0x6002979")]
			[Address(RVA = "0x2095C60", Offset = "0x2095C60", VA = "0x2095C60")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x600297A")]
			[Address(RVA = "0x2095C68", Offset = "0x2095C68", VA = "0x2095C68")]
			internal void <InstallApkAndRunIfConnected>b__0(object obj)
			{
			}

			[Token(Token = "0x600297B")]
			[Address(RVA = "0x20962C8", Offset = "0x20962C8", VA = "0x20962C8")]
			internal void <InstallApkAndRunIfConnected>b__1()
			{
			}
		}

		[Token(Token = "0x20006DB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A91C", Offset = "0x146A91C")]
		private sealed class <InstallApkAndRunIfConnected>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002757")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002758")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002759")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string adbPath;

			[Token(Token = "0x400275A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string localVersion;

			[Token(Token = "0x400275B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass21_0 <>8__1;

			[Token(Token = "0x400275C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Result <result>5__2;

			[Token(Token = "0x400275D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Thread <checkAdbThread>5__3;

			[Token(Token = "0x400275E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Thread <installThread>5__4;

			[Token(Token = "0x17000593")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600297F")]
				[Address(RVA = "0x2096CF0", Offset = "0x2096CF0", VA = "0x2096CF0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000594")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002981")]
				[Address(RVA = "0x2096D58", Offset = "0x2096D58", VA = "0x2096D58", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600297C")]
			[Address(RVA = "0x2095654", Offset = "0x2095654", VA = "0x2095654")]
			[DebuggerHidden]
			public <InstallApkAndRunIfConnected>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x600297D")]
			[Address(RVA = "0x2096994", Offset = "0x2096994", VA = "0x2096994", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600297E")]
			[Address(RVA = "0x2096998", Offset = "0x2096998", VA = "0x2096998", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002980")]
			[Address(RVA = "0x2096CF8", Offset = "0x2096CF8", VA = "0x2096CF8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40016A3")]
		public const string InstantPreviewNativeApi = "arcore_instant_preview_unity_plugin";

		[Token(Token = "0x40016A4")]
		private const string k_ApkGuid = "cf7b10762fe921e40a18151a6c92a8a6";

		[Token(Token = "0x40016A5")]
		private const string k_NoDevicesFoundAdbResult = "error: no devices/emulators found";

		[Token(Token = "0x40016A6")]
		private const float k_MaxTolerableAspectRatioDifference = 0.1f;

		[Token(Token = "0x40016A7")]
		private const string k_MismatchedAspectRatioWarningFormatString = "Instant Preview camera texture aspect ratio ({0}) is different than Game view aspect ratio ({1}).\n To avoid distorted preview while using Instant Preview, set the Game view Aspect to match the camera texture resolution ({2}x{3}).";

		[Token(Token = "0x40016A8")]
		private const string k_InstantPreviewInputWarning = "Touch ignored. Make sure your script contains `using Input = InstantPreviewInput;` when using editor Play mode.\nTo learn more, see https://developers.google.com/ar/develop/unity/instant-preview";

		[Token(Token = "0x40016A9")]
		private const string k_WarningToastFormat = "Instant Preview is not able to {0}. See Unity console.";

		[Token(Token = "0x40016AA")]
		private const int k_WarningThrottleTimeSeconds = 5;

		[Token(Token = "0x40016AB")]
		private const float k_UnknownGameViewScale = float.MinValue;

		[Token(Token = "0x40016AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly WaitForEndOfFrame k_WaitForEndOfFrame;

		[Token(Token = "0x40016AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<string, DateTime> s_SentWarnings;

		[Token(Token = "0x40016AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static HashSet<string> s_OneTimeWarnings;

		[Token(Token = "0x170002A4")]
		public static bool IsProvidingPlatform
		{
			[Token(Token = "0x600191C")]
			[Address(RVA = "0x20949E0", Offset = "0x20949E0", VA = "0x20949E0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600191D")]
		[Address(RVA = "0x2094A6C", Offset = "0x2094A6C", VA = "0x2094A6C")]
		public static bool ValidateSessionConfig(ARCoreSessionConfig config)
		{
			return default(bool);
		}

		[Token(Token = "0x600191E")]
		[Address(RVA = "0x2094F14", Offset = "0x2094F14", VA = "0x2094F14")]
		public static ARCoreSessionConfig GenerateInstantPreviewSupportedConfig(ARCoreSessionConfig config)
		{
			return null;
		}

		[Token(Token = "0x600191F")]
		[Address(RVA = "0x2094C20", Offset = "0x2094C20", VA = "0x2094C20")]
		public static void LogLimitedSupportMessage(string featureName, bool logOnce = false)
		{
		}

		[Token(Token = "0x6001920")]
		[Address(RVA = "0x20950A0", Offset = "0x20950A0", VA = "0x20950A0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1485270", Offset = "0x1485270")]
		public static IEnumerator InitializeIfNeeded()
		{
			return null;
		}

		[Token(Token = "0x6001921")]
		[Address(RVA = "0x209512C", Offset = "0x209512C", VA = "0x209512C")]
		public static bool UpdateBackgroundTextureIfNeeded(ref Texture2D backgroundTexture)
		{
			return default(bool);
		}

		[Token(Token = "0x6001922")]
		[Address(RVA = "0x20953C8", Offset = "0x20953C8", VA = "0x20953C8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x14852D4", Offset = "0x14852D4")]
		private static IEnumerator UpdateLoop(string adbPath)
		{
			return null;
		}

		[Token(Token = "0x6001923")]
		[Address(RVA = "0x2095470", Offset = "0x2095470", VA = "0x2095470")]
		private static void AddInstantPreviewTrackedPoseDriverWhenNeeded()
		{
		}

		[Token(Token = "0x6001924")]
		[Address(RVA = "0x20955BC", Offset = "0x20955BC", VA = "0x20955BC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1485338", Offset = "0x1485338")]
		private static IEnumerator InstallApkAndRunIfConnected(string adbPath, string localVersion)
		{
			return null;
		}

		[Token(Token = "0x6001925")]
		[Address(RVA = "0x2095680", Offset = "0x2095680", VA = "0x2095680")]
		private static bool PromptToInstall()
		{
			return default(bool);
		}

		[Token(Token = "0x6001926")]
		[Address(RVA = "0x2095688", Offset = "0x2095688", VA = "0x2095688")]
		private static bool PromptToRebuildAugmentedImagesDatabase()
		{
			return default(bool);
		}

		[Token(Token = "0x6001927")]
		[Address(RVA = "0x2095690", Offset = "0x2095690", VA = "0x2095690")]
		private static bool StartServer(string adbPath, out string version)
		{
			return default(bool);
		}

		[Token(Token = "0x6001928")]
		[Address(RVA = "0x209595C", Offset = "0x209595C", VA = "0x209595C")]
		private static int RoundUpToNearestMultipleOf16(int value)
		{
			return default(int);
		}

		[Token(Token = "0x6001929")]
		[Address(RVA = "0x2095968", Offset = "0x2095968", VA = "0x2095968")]
		private static float GetMinGameViewScaleOrUnknown()
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000354")]
	internal class NativeSession
	{
		[Token(Token = "0x40016AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool s_ReportedEngineType;

		[Token(Token = "0x40016B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PointCloudManager m_PointCloudManager;

		[Token(Token = "0x40016B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TrackableManager m_TrackableManager;

		[Token(Token = "0x40016B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14756D8", Offset = "0x14756D8")]
		private bool <IsDestroyed>k__BackingField;

		[Token(Token = "0x40016B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14756E8", Offset = "0x14756E8")]
		private IntPtr <SessionHandle>k__BackingField;

		[Token(Token = "0x40016B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14756F8", Offset = "0x14756F8")]
		private IntPtr <FrameHandle>k__BackingField;

		[Token(Token = "0x40016B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1475708", Offset = "0x1475708")]
		private AnchorApi <AnchorApi>k__BackingField;

		[Token(Token = "0x40016B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1475718", Offset = "0x1475718")]
		private AugmentedFaceApi <AugmentedFaceApi>k__BackingField;

		[Token(Token = "0x40016B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1475728", Offset = "0x1475728")]
		private AugmentedImageApi <AugmentedImageApi>k__BackingField;

		[Token(Token = "0x40016B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1475738", Offset = "0x1475738")]
		private AugmentedImageDatabaseApi <AugmentedImageDatabaseApi>k__BackingField;

		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1475748", Offset = "0x1475748")]
		private CameraApi <CameraApi>k__BackingField;

		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1475758", Offset = "0x1475758")]
		private CameraConfigApi <CameraConfigApi>k__BackingField;

		[Token(Token = "0x40016BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1475768", Offset = "0x1475768")]
		private CameraConfigFilterApi <CameraConfigFilterApi>k__BackingField;

		[Token(Token = "0x40016BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1475778", Offset = "0x1475778")]
		private CameraConfigListApi <CameraConfigListApi>k__BackingField;

		[Token(Token = "0x40016BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1475788", Offset = "0x1475788")]
		private CameraMetadataApi <CameraMetadataApi>k__BackingField;

		[Token(Token = "0x40016BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1475798", Offset = "0x1475798")]
		private FrameApi <FrameApi>k__BackingField;

		[Token(Token = "0x40016BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14757A8", Offset = "0x14757A8")]
		private HitTestApi <HitTestApi>k__BackingField;

		[Token(Token = "0x40016C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14757B8", Offset = "0x14757B8")]
		private ImageApi <ImageApi>k__BackingField;

		[Token(Token = "0x40016C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14757C8", Offset = "0x14757C8")]
		private LightEstimateApi <LightEstimateApi>k__BackingField;

		[Token(Token = "0x40016C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14757D8", Offset = "0x14757D8")]
		private PlaneApi <PlaneApi>k__BackingField;

		[Token(Token = "0x40016C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14757E8", Offset = "0x14757E8")]
		private PointApi <PointApi>k__BackingField;

		[Token(Token = "0x40016C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14757F8", Offset = "0x14757F8")]
		private PointCloudApi <PointCloudApi>k__BackingField;

		[Token(Token = "0x40016C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1475808", Offset = "0x1475808")]
		private PoseApi <PoseApi>k__BackingField;

		[Token(Token = "0x40016C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1475818", Offset = "0x1475818")]
		private SessionApi <SessionApi>k__BackingField;

		[Token(Token = "0x40016C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1475828", Offset = "0x1475828")]
		private SessionConfigApi <SessionConfigApi>k__BackingField;

		[Token(Token = "0x40016C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1475838", Offset = "0x1475838")]
		private TrackableApi <TrackableApi>k__BackingField;

		[Token(Token = "0x40016C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1475848", Offset = "0x1475848")]
		private TrackableListApi <TrackableListApi>k__BackingField;

		[Token(Token = "0x170002A5")]
		public bool IsDestroyed
		{
			[Token(Token = "0x600192C")]
			[Address(RVA = "0x2099404", Offset = "0x2099404", VA = "0x2099404")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148539C", Offset = "0x148539C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600192D")]
			[Address(RVA = "0x209940C", Offset = "0x209940C", VA = "0x209940C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14853AC", Offset = "0x14853AC")]
			private set
			{
			}
		}

		[Token(Token = "0x170002A6")]
		public IntPtr SessionHandle
		{
			[Token(Token = "0x600192E")]
			[Address(RVA = "0x2099418", Offset = "0x2099418", VA = "0x2099418")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14853BC", Offset = "0x14853BC")]
			get
			{
				return default(IntPtr);
			}
			[Token(Token = "0x600192F")]
			[Address(RVA = "0x2099420", Offset = "0x2099420", VA = "0x2099420")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14853CC", Offset = "0x14853CC")]
			private set
			{
			}
		}

		[Token(Token = "0x170002A7")]
		public IntPtr FrameHandle
		{
			[Token(Token = "0x6001930")]
			[Address(RVA = "0x2099428", Offset = "0x2099428", VA = "0x2099428")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14853DC", Offset = "0x14853DC")]
			get
			{
				return default(IntPtr);
			}
			[Token(Token = "0x6001931")]
			[Address(RVA = "0x2099430", Offset = "0x2099430", VA = "0x2099430")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14853EC", Offset = "0x14853EC")]
			private set
			{
			}
		}

		[Token(Token = "0x170002A8")]
		public IntPtr PointCloudHandle
		{
			[Token(Token = "0x6001932")]
			[Address(RVA = "0x2099438", Offset = "0x2099438", VA = "0x2099438")]
			get
			{
				return default(IntPtr);
			}
		}

		[Token(Token = "0x170002A9")]
		public bool IsPointCloudNew
		{
			[Token(Token = "0x6001933")]
			[Address(RVA = "0x2099454", Offset = "0x2099454", VA = "0x2099454")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002AA")]
		public AnchorApi AnchorApi
		{
			[Token(Token = "0x6001934")]
			[Address(RVA = "0x20994B4", Offset = "0x20994B4", VA = "0x20994B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14853FC", Offset = "0x14853FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001935")]
			[Address(RVA = "0x20994BC", Offset = "0x20994BC", VA = "0x20994BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148540C", Offset = "0x148540C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002AB")]
		public AugmentedFaceApi AugmentedFaceApi
		{
			[Token(Token = "0x6001936")]
			[Address(RVA = "0x20994C4", Offset = "0x20994C4", VA = "0x20994C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148541C", Offset = "0x148541C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001937")]
			[Address(RVA = "0x20994CC", Offset = "0x20994CC", VA = "0x20994CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148542C", Offset = "0x148542C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002AC")]
		public AugmentedImageApi AugmentedImageApi
		{
			[Token(Token = "0x6001938")]
			[Address(RVA = "0x20994D4", Offset = "0x20994D4", VA = "0x20994D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148543C", Offset = "0x148543C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001939")]
			[Address(RVA = "0x20994DC", Offset = "0x20994DC", VA = "0x20994DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148544C", Offset = "0x148544C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002AD")]
		public AugmentedImageDatabaseApi AugmentedImageDatabaseApi
		{
			[Token(Token = "0x600193A")]
			[Address(RVA = "0x20994E4", Offset = "0x20994E4", VA = "0x20994E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148545C", Offset = "0x148545C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600193B")]
			[Address(RVA = "0x20994EC", Offset = "0x20994EC", VA = "0x20994EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148546C", Offset = "0x148546C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002AE")]
		public CameraApi CameraApi
		{
			[Token(Token = "0x600193C")]
			[Address(RVA = "0x20994F4", Offset = "0x20994F4", VA = "0x20994F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148547C", Offset = "0x148547C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600193D")]
			[Address(RVA = "0x20994FC", Offset = "0x20994FC", VA = "0x20994FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148548C", Offset = "0x148548C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002AF")]
		public CameraConfigApi CameraConfigApi
		{
			[Token(Token = "0x600193E")]
			[Address(RVA = "0x2099504", Offset = "0x2099504", VA = "0x2099504")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148549C", Offset = "0x148549C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600193F")]
			[Address(RVA = "0x209950C", Offset = "0x209950C", VA = "0x209950C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14854AC", Offset = "0x14854AC")]
			private set
			{
			}
		}

		[Token(Token = "0x170002B0")]
		public CameraConfigFilterApi CameraConfigFilterApi
		{
			[Token(Token = "0x6001940")]
			[Address(RVA = "0x2099514", Offset = "0x2099514", VA = "0x2099514")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14854BC", Offset = "0x14854BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001941")]
			[Address(RVA = "0x209951C", Offset = "0x209951C", VA = "0x209951C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14854CC", Offset = "0x14854CC")]
			private set
			{
			}
		}

		[Token(Token = "0x170002B1")]
		public CameraConfigListApi CameraConfigListApi
		{
			[Token(Token = "0x6001942")]
			[Address(RVA = "0x2099524", Offset = "0x2099524", VA = "0x2099524")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14854DC", Offset = "0x14854DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001943")]
			[Address(RVA = "0x209952C", Offset = "0x209952C", VA = "0x209952C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14854EC", Offset = "0x14854EC")]
			private set
			{
			}
		}

		[Token(Token = "0x170002B2")]
		public CameraMetadataApi CameraMetadataApi
		{
			[Token(Token = "0x6001944")]
			[Address(RVA = "0x2099534", Offset = "0x2099534", VA = "0x2099534")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14854FC", Offset = "0x14854FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001945")]
			[Address(RVA = "0x209953C", Offset = "0x209953C", VA = "0x209953C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148550C", Offset = "0x148550C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002B3")]
		public FrameApi FrameApi
		{
			[Token(Token = "0x6001946")]
			[Address(RVA = "0x2099544", Offset = "0x2099544", VA = "0x2099544")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148551C", Offset = "0x148551C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001947")]
			[Address(RVA = "0x209954C", Offset = "0x209954C", VA = "0x209954C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148552C", Offset = "0x148552C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002B4")]
		public HitTestApi HitTestApi
		{
			[Token(Token = "0x6001948")]
			[Address(RVA = "0x2099554", Offset = "0x2099554", VA = "0x2099554")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148553C", Offset = "0x148553C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001949")]
			[Address(RVA = "0x209955C", Offset = "0x209955C", VA = "0x209955C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148554C", Offset = "0x148554C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002B5")]
		public ImageApi ImageApi
		{
			[Token(Token = "0x600194A")]
			[Address(RVA = "0x2099564", Offset = "0x2099564", VA = "0x2099564")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148555C", Offset = "0x148555C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600194B")]
			[Address(RVA = "0x209956C", Offset = "0x209956C", VA = "0x209956C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148556C", Offset = "0x148556C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002B6")]
		public LightEstimateApi LightEstimateApi
		{
			[Token(Token = "0x600194C")]
			[Address(RVA = "0x2099574", Offset = "0x2099574", VA = "0x2099574")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148557C", Offset = "0x148557C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600194D")]
			[Address(RVA = "0x209957C", Offset = "0x209957C", VA = "0x209957C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148558C", Offset = "0x148558C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002B7")]
		public PlaneApi PlaneApi
		{
			[Token(Token = "0x600194E")]
			[Address(RVA = "0x2099584", Offset = "0x2099584", VA = "0x2099584")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148559C", Offset = "0x148559C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600194F")]
			[Address(RVA = "0x209958C", Offset = "0x209958C", VA = "0x209958C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14855AC", Offset = "0x14855AC")]
			private set
			{
			}
		}

		[Token(Token = "0x170002B8")]
		public PointApi PointApi
		{
			[Token(Token = "0x6001950")]
			[Address(RVA = "0x2099594", Offset = "0x2099594", VA = "0x2099594")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14855BC", Offset = "0x14855BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001951")]
			[Address(RVA = "0x209959C", Offset = "0x209959C", VA = "0x209959C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14855CC", Offset = "0x14855CC")]
			private set
			{
			}
		}

		[Token(Token = "0x170002B9")]
		public PointCloudApi PointCloudApi
		{
			[Token(Token = "0x6001952")]
			[Address(RVA = "0x20995A4", Offset = "0x20995A4", VA = "0x20995A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14855DC", Offset = "0x14855DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001953")]
			[Address(RVA = "0x20995AC", Offset = "0x20995AC", VA = "0x20995AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14855EC", Offset = "0x14855EC")]
			private set
			{
			}
		}

		[Token(Token = "0x170002BA")]
		public PoseApi PoseApi
		{
			[Token(Token = "0x6001954")]
			[Address(RVA = "0x20995B4", Offset = "0x20995B4", VA = "0x20995B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14855FC", Offset = "0x14855FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001955")]
			[Address(RVA = "0x20995BC", Offset = "0x20995BC", VA = "0x20995BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148560C", Offset = "0x148560C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002BB")]
		public SessionApi SessionApi
		{
			[Token(Token = "0x6001956")]
			[Address(RVA = "0x20995C4", Offset = "0x20995C4", VA = "0x20995C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148561C", Offset = "0x148561C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001957")]
			[Address(RVA = "0x20995CC", Offset = "0x20995CC", VA = "0x20995CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148562C", Offset = "0x148562C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002BC")]
		public SessionConfigApi SessionConfigApi
		{
			[Token(Token = "0x6001958")]
			[Address(RVA = "0x20995D4", Offset = "0x20995D4", VA = "0x20995D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148563C", Offset = "0x148563C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001959")]
			[Address(RVA = "0x20995DC", Offset = "0x20995DC", VA = "0x20995DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148564C", Offset = "0x148564C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002BD")]
		public TrackableApi TrackableApi
		{
			[Token(Token = "0x600195A")]
			[Address(RVA = "0x20995E4", Offset = "0x20995E4", VA = "0x20995E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148565C", Offset = "0x148565C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600195B")]
			[Address(RVA = "0x20995EC", Offset = "0x20995EC", VA = "0x20995EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148566C", Offset = "0x148566C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002BE")]
		public TrackableListApi TrackableListApi
		{
			[Token(Token = "0x600195C")]
			[Address(RVA = "0x20995F4", Offset = "0x20995F4", VA = "0x20995F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148567C", Offset = "0x148567C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600195D")]
			[Address(RVA = "0x20995FC", Offset = "0x20995FC", VA = "0x20995FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148568C", Offset = "0x148568C")]
			private set
			{
			}
		}

		[Token(Token = "0x600192B")]
		[Address(RVA = "0x2098A20", Offset = "0x2098A20", VA = "0x2098A20")]
		public NativeSession(IntPtr sessionHandle, IntPtr frameHandle)
		{
		}

		[Token(Token = "0x600195E")]
		[Address(RVA = "0x20943A8", Offset = "0x20943A8", VA = "0x20943A8")]
		public Trackable TrackableFactory(IntPtr nativeHandle)
		{
			return null;
		}

		[Token(Token = "0x600195F")]
		public void GetTrackables<T>(List<T> trackables, TrackableQueryFilter filter) where T : Trackable
		{
		}

		[Token(Token = "0x6001960")]
		[Address(RVA = "0x2099854", Offset = "0x2099854", VA = "0x2099854")]
		public void OnUpdate(IntPtr frameHandle)
		{
		}

		[Token(Token = "0x6001961")]
		[Address(RVA = "0x2099938", Offset = "0x2099938", VA = "0x2099938")]
		public void MarkDestroyed()
		{
		}
	}
	[Token(Token = "0x2000355")]
	internal enum ApiApkInstallationStatus
	{
		[Token(Token = "0x40016CB")]
		Uninitialized = 0,
		[Token(Token = "0x40016CC")]
		Requested = 1,
		[Token(Token = "0x40016CD")]
		Success = 100,
		[Token(Token = "0x40016CE")]
		Error = 200,
		[Token(Token = "0x40016CF")]
		ErrorDeviceNotCompatible = 201,
		[Token(Token = "0x40016D0")]
		ErrorUserDeclined = 203
	}
	[Token(Token = "0x2000356")]
	internal enum ApiArStatus
	{
		[Token(Token = "0x40016D2")]
		Success = 0,
		[Token(Token = "0x40016D3")]
		ErrorInvalidArgument = -1,
		[Token(Token = "0x40016D4")]
		ErrorFatal = -2,
		[Token(Token = "0x40016D5")]
		ErrorSessionPaused = -3,
		[Token(Token = "0x40016D6")]
		ErrorSessionNotPaused = -4,
		[Token(Token = "0x40016D7")]
		ErrorNotTracking = -5,
		[Token(Token = "0x40016D8")]
		ErrorTextureNotSet = -6,
		[Token(Token = "0x40016D9")]
		ErrorMissingGlContext = -7,
		[Token(Token = "0x40016DA")]
		ErrorUnsupportedConfiguration = -8,
		[Token(Token = "0x40016DB")]
		ErrorCameraPermissionNotGranted = -9,
		[Token(Token = "0x40016DC")]
		ErrorDeadlineExceeded = -10,
		[Token(Token = "0x40016DD")]
		ErrorResourceExhausted = -11,
		[Token(Token = "0x40016DE")]
		ErrorNotYetAvailable = -12,
		[Token(Token = "0x40016DF")]
		ErrorCameraNotAvailable = -13,
		[Token(Token = "0x40016E0")]
		ErrorCloudAnchorsNotConfigured = -14,
		[Token(Token = "0x40016E1")]
		ErrorInternetPermissionNotGranted = -15,
		[Token(Token = "0x40016E2")]
		ErrorAnchorNotSupportedForHosting = -16,
		[Token(Token = "0x40016E3")]
		ErrorImageInsufficientQuality = -17,
		[Token(Token = "0x40016E4")]
		ErrorDataInvalidFormat = -18,
		[Token(Token = "0x40016E5")]
		ErrorDatatUnsupportedVersion = -19,
		[Token(Token = "0x40016E6")]
		UnavailableArCoreNotInstalled = -100,
		[Token(Token = "0x40016E7")]
		UnavailableDeviceNotCompatible = -101,
		[Token(Token = "0x40016E8")]
		UnavailableApkTooOld = -103,
		[Token(Token = "0x40016E9")]
		UnavailableSdkTooOld = -104,
		[Token(Token = "0x40016EA")]
		UnavailableUserDeclinedInstall = -105
	}
	[Token(Token = "0x2000357")]
	internal enum ApiAugmentedFaceMode
	{
		[Token(Token = "0x40016EC")]
		Disabled = 0,
		[Token(Token = "0x40016ED")]
		Mesh3D = 2
	}
	[Token(Token = "0x2000358")]
	internal enum ApiAugmentedFaceRegionType
	{
		[Token(Token = "0x40016EF")]
		Nose,
		[Token(Token = "0x40016F0")]
		ForeheadLeft,
		[Token(Token = "0x40016F1")]
		ForeheadRight
	}
	[Token(Token = "0x2000359")]
	internal enum ApiAvailability
	{
		[Token(Token = "0x40016F3")]
		UnknownError = 0,
		[Token(Token = "0x40016F4")]
		UnknownChecking = 1,
		[Token(Token = "0x40016F5")]
		UnknownTimedOut = 2,
		[Token(Token = "0x40016F6")]
		UnsupportedDeviceNotCapable = 100,
		[Token(Token = "0x40016F7")]
		SupportedNotInstalled = 201,
		[Token(Token = "0x40016F8")]
		SupportedApkTooOld = 202,
		[Token(Token = "0x40016F9")]
		SupportedInstalled = 203
	}
	[Token(Token = "0x200035A")]
	internal enum ApiCameraConfigFacingDirection
	{
		[Token(Token = "0x40016FB")]
		Back,
		[Token(Token = "0x40016FC")]
		Front
	}
	[Token(Token = "0x200035B")]
	[Flags]
	internal enum ApiCameraConfigTargetFps
	{
		[Token(Token = "0x40016FE")]
		TargetFps30 = 1,
		[Token(Token = "0x40016FF")]
		TargetFps60 = 2
	}
	[Token(Token = "0x200035C")]
	internal enum ApiCameraFocusMode
	{
		[Token(Token = "0x4001701")]
		Fixed,
		[Token(Token = "0x4001702")]
		Auto
	}
	[Token(Token = "0x200035D")]
	internal enum NdkCameraMetadataType
	{
		[Token(Token = "0x4001704")]
		Byte,
		[Token(Token = "0x4001705")]
		Int32,
		[Token(Token = "0x4001706")]
		Float,
		[Token(Token = "0x4001707")]
		Int64,
		[Token(Token = "0x4001708")]
		Double,
		[Token(Token = "0x4001709")]
		Rational,
		[Token(Token = "0x400170A")]
		NumTypes
	}
	[Token(Token = "0x200035E")]
	internal enum NdkCameraStatus
	{
		[Token(Token = "0x400170C")]
		Ok = 0,
		[Token(Token = "0x400170D")]
		ErrorBase = -10000,
		[Token(Token = "0x400170E")]
		ErrorUnknown = -10000,
		[Token(Token = "0x400170F")]
		ErrorInvalidParameter = -10001,
		[Token(Token = "0x4001710")]
		ErrorMetadataNotFound = -10004
	}
	[StructLayout(2)]
	[Token(Token = "0x200035F")]
	internal struct NdkCameraMetadata
	{
		[Token(Token = "0x4001711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int Tag;

		[Token(Token = "0x4001712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public NdkCameraMetadataType Type;

		[Token(Token = "0x4001713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int Count;

		[Token(Token = "0x4001714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public IntPtr Value;
	}
	[Token(Token = "0x2000360")]
	internal static class ApiConstants
	{
		[Token(Token = "0x4001715")]
		public const string ARCoreNativeApi = "arcore_sdk_c";

		[Token(Token = "0x4001716")]
		public const string ARCoreARKitIntegrationApi = "NOT_AVAILABLE";

		[Token(Token = "0x4001717")]
		public const string ARCoreShimApi = "arcore_unity_api";

		[Token(Token = "0x4001718")]
		public const string ARPrestoApi = "arpresto_api";

		[Token(Token = "0x4001719")]
		public const string MediaNdk = "mediandk";

		[Token(Token = "0x400171A")]
		public const string NdkCameraApi = "camera2ndk";
	}
	[Token(Token = "0x2000361")]
	internal enum ApiCoordinates2dType
	{
		[Token(Token = "0x400171C")]
		TexturePixels,
		[Token(Token = "0x400171D")]
		TextureNormalized,
		[Token(Token = "0x400171E")]
		ImagePixels,
		[Token(Token = "0x400171F")]
		ImageNormalized,
		[Token(Token = "0x4001720")]
		FeatureTrackingImage,
		[Token(Token = "0x4001721")]
		FeatureTrackingImageNormalized,
		[Token(Token = "0x4001722")]
		OpenGLDeviceNormalized,
		[Token(Token = "0x4001723")]
		View,
		[Token(Token = "0x4001724")]
		ViewNormalized
	}
	[Token(Token = "0x2000362")]
	public struct ApiDisplayUvCoords
	{
		[Token(Token = "0x4001725")]
		public const int NumFloats = 8;

		[Token(Token = "0x4001726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector2 TopLeft;

		[Token(Token = "0x4001727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 TopRight;

		[Token(Token = "0x4001728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector2 BottomLeft;

		[Token(Token = "0x4001729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 BottomRight;

		[Token(Token = "0x6001963")]
		[Address(RVA = "0x2AB7DBC", Offset = "0x2AB7DBC", VA = "0x2AB7DBC")]
		public ApiDisplayUvCoords(Vector2 topLeft, Vector2 topRight, Vector2 bottomLeft, Vector2 bottomRight)
		{
		}
	}
	[Token(Token = "0x2000363")]
	public enum ApiFeaturePointOrientationMode
	{
		[Token(Token = "0x400172B")]
		Identity,
		[Token(Token = "0x400172C")]
		SurfaceNormal
	}
	[Token(Token = "0x2000364")]
	internal enum ApiLightEstimateState
	{
		[Token(Token = "0x400172E")]
		NotValid,
		[Token(Token = "0x400172F")]
		Valid
	}
	[Token(Token = "0x2000365")]
	public enum ApiLightEstimationMode
	{
		[Token(Token = "0x4001731")]
		Disabled,
		[Token(Token = "0x4001732")]
		AmbientIntensity,
		[Token(Token = "0x4001733")]
		EnvironmentalHDR
	}
	[Token(Token = "0x2000366")]
	internal enum ApiPlaneFindingMode
	{
		[Token(Token = "0x4001735")]
		Disabled,
		[Token(Token = "0x4001736")]
		Horizontal,
		[Token(Token = "0x4001737")]
		Vertical,
		[Token(Token = "0x4001738")]
		HorizontalAndVertical
	}
	[Token(Token = "0x2000367")]
	internal enum ApiPlaneType
	{
		[Token(Token = "0x400173A")]
		HorizontalUpwardFacing,
		[Token(Token = "0x400173B")]
		HorizontalDownwardFacing,
		[Token(Token = "0x400173C")]
		Vertical
	}
	[Token(Token = "0x2000368")]
	public struct ApiPoseData
	{
		[Token(Token = "0x400173D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float Qx;

		[Token(Token = "0x400173E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float Qy;

		[Token(Token = "0x400173F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float Qz;

		[Token(Token = "0x4001740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float Qw;

		[Token(Token = "0x4001741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float X;

		[Token(Token = "0x4001742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float Y;

		[Token(Token = "0x4001743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Z;

		[Token(Token = "0x6001964")]
		[Address(RVA = "0x2AC4E20", Offset = "0x2AC4E20", VA = "0x2AC4E20")]
		public ApiPoseData(Pose unityPose)
		{
		}

		[Token(Token = "0x6001965")]
		[Address(RVA = "0x2AC51A0", Offset = "0x2AC51A0", VA = "0x2AC51A0")]
		public Pose ToUnityPose()
		{
			return default(Pose);
		}

		[Token(Token = "0x6001966")]
		[Address(RVA = "0x2AC5590", Offset = "0x2AC5590", VA = "0x2AC5590", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000369")]
	internal enum ApiPrestoDeviceCameraDirection
	{
		[Token(Token = "0x4001745")]
		BackFacing,
		[Token(Token = "0x4001746")]
		FrontFacing
	}
	[Token(Token = "0x200036A")]
	internal enum ApiPrestoStatus
	{
		[Token(Token = "0x4001748")]
		Uninitialized = 0,
		[Token(Token = "0x4001749")]
		RequestingApkInstall = 1,
		[Token(Token = "0x400174A")]
		RequestingPermission = 2,
		[Token(Token = "0x400174B")]
		Resumed = 100,
		[Token(Token = "0x400174C")]
		ResumedNotTracking = 101,
		[Token(Token = "0x400174D")]
		Paused = 102,
		[Token(Token = "0x400174E")]
		ErrorFatal = 200,
		[Token(Token = "0x400174F")]
		ErrorApkNotAvailable = 201,
		[Token(Token = "0x4001750")]
		ErrorPermissionNotGranted = 202,
		[Token(Token = "0x4001751")]
		ErrorSessionConfigurationNotSupported = 203
	}
	[Token(Token = "0x200036B")]
	internal enum ApiTextureDataType
	{
		[Token(Token = "0x4001753")]
		Byte,
		[Token(Token = "0x4001754")]
		Half,
		[Token(Token = "0x4001755")]
		Float
	}
	[Token(Token = "0x200036C")]
	internal enum ApiTrackableType
	{
		[Token(Token = "0x4001757")]
		Invalid = 0,
		[Token(Token = "0x4001758")]
		BaseTrackable = 1095893248,
		[Token(Token = "0x4001759")]
		Plane = 1095893249,
		[Token(Token = "0x400175A")]
		Point = 1095893250,
		[Token(Token = "0x400175B")]
		AugmentedImage = 1095893252,
		[Token(Token = "0x400175C")]
		AugmentedFace = 1095893253
	}
	[Token(Token = "0x200036D")]
	internal enum ApiTrackingState
	{
		[Token(Token = "0x400175E")]
		Tracking,
		[Token(Token = "0x400175F")]
		Paused,
		[Token(Token = "0x4001760")]
		Stopped
	}
	[Token(Token = "0x200036E")]
	internal static class ApiTypeExtensions
	{
		[Token(Token = "0x6001967")]
		[Address(RVA = "0x2AC2314", Offset = "0x2AC2314", VA = "0x2AC2314")]
		public static ApkAvailabilityStatus ToApkAvailabilityStatus(this ApiAvailability apiStatus)
		{
			return default(ApkAvailabilityStatus);
		}

		[Token(Token = "0x6001968")]
		[Address(RVA = "0x2AC2564", Offset = "0x2AC2564", VA = "0x2AC2564")]
		public static ApkInstallationStatus ToApkInstallationStatus(this ApiApkInstallationStatus apiStatus)
		{
			return default(ApkInstallationStatus);
		}

		[Token(Token = "0x6001969")]
		[Address(RVA = "0x2ABFE54", Offset = "0x2ABFE54", VA = "0x2ABFE54")]
		public static SessionStatus ToSessionStatus(this ApiPrestoStatus prestoStatus)
		{
			return default(SessionStatus);
		}

		[Token(Token = "0x600196A")]
		[Address(RVA = "0x2AC4818", Offset = "0x2AC4818", VA = "0x2AC4818")]
		public static TrackingState ToTrackingState(this ApiTrackingState apiTrackingState)
		{
			return default(TrackingState);
		}

		[Token(Token = "0x600196B")]
		[Address(RVA = "0x2AB6AC4", Offset = "0x2AB6AC4", VA = "0x2AB6AC4")]
		public static XPTrackingState ToXPTrackingState(this TrackingState apiTrackingState)
		{
			return default(XPTrackingState);
		}

		[Token(Token = "0x600196C")]
		[Address(RVA = "0x2AC5848", Offset = "0x2AC5848", VA = "0x2AC5848")]
		public static LostTrackingReason ToLostTrackingReason(this ApiTrackingFailureReason apiTrackingFailureReason)
		{
			return default(LostTrackingReason);
		}

		[Token(Token = "0x600196D")]
		[Address(RVA = "0x2AC5858", Offset = "0x2AC5858", VA = "0x2AC5858")]
		public static DeviceCameraDirection ToDeviceCameraDirection(this ApiCameraConfigFacingDirection direction)
		{
			return default(DeviceCameraDirection);
		}

		[Token(Token = "0x600196E")]
		[Address(RVA = "0x2AC5864", Offset = "0x2AC5864", VA = "0x2AC5864")]
		public static LightEstimateState ToLightEstimateState(this ApiLightEstimateState apiState)
		{
			return default(LightEstimateState);
		}

		[Token(Token = "0x600196F")]
		[Address(RVA = "0x2AC5874", Offset = "0x2AC5874", VA = "0x2AC5874")]
		public static ApiLightEstimationMode ToApiLightEstimationMode(this LightEstimationMode mode)
		{
			return default(ApiLightEstimationMode);
		}

		[Token(Token = "0x6001970")]
		[Address(RVA = "0x2AC5994", Offset = "0x2AC5994", VA = "0x2AC5994")]
		public static ApiPlaneFindingMode ToApiPlaneFindingMode(this DetectedPlaneFindingMode mode)
		{
			return default(ApiPlaneFindingMode);
		}

		[Token(Token = "0x6001971")]
		[Address(RVA = "0x2AC5AB4", Offset = "0x2AC5AB4", VA = "0x2AC5AB4")]
		public static ApiAugmentedFaceMode ToApiAugmentedFaceMode(this AugmentedFaceMode mode)
		{
			return default(ApiAugmentedFaceMode);
		}

		[Token(Token = "0x6001972")]
		[Address(RVA = "0x2AC5BCC", Offset = "0x2AC5BCC", VA = "0x2AC5BCC")]
		public static ApiCameraFocusMode ToApiCameraFocusMode(this CameraFocusMode mode)
		{
			return default(ApiCameraFocusMode);
		}

		[Token(Token = "0x6001973")]
		[Address(RVA = "0x2AC5CE4", Offset = "0x2AC5CE4", VA = "0x2AC5CE4")]
		public static DetectedPlaneType ToDetectedPlaneType(this ApiPlaneType apiPlaneType)
		{
			return default(DetectedPlaneType);
		}

		[Token(Token = "0x6001974")]
		[Address(RVA = "0x2AB9E84", Offset = "0x2AB9E84", VA = "0x2AB9E84")]
		public static DisplayUvCoords ToDisplayUvCoords(this ApiDisplayUvCoords apiCoords)
		{
			return default(DisplayUvCoords);
		}

		[Token(Token = "0x6001975")]
		[Address(RVA = "0x2AC5CF8", Offset = "0x2AC5CF8", VA = "0x2AC5CF8")]
		public static FeaturePointOrientationMode ToFeaturePointOrientationMode(this ApiFeaturePointOrientationMode apiMode)
		{
			return default(FeaturePointOrientationMode);
		}

		[Token(Token = "0x6001976")]
		[Address(RVA = "0x2AC5D5C", Offset = "0x2AC5D5C", VA = "0x2AC5D5C")]
		public static CloudServiceResponse ToCloudServiceResponse(this ApiArStatus status)
		{
			return default(CloudServiceResponse);
		}

		[Token(Token = "0x6001977")]
		[Address(RVA = "0x2AC5D98", Offset = "0x2AC5D98", VA = "0x2AC5D98")]
		public static CloudServiceResponse ToCloudServiceResponse(this ApiCloudAnchorState anchorState)
		{
			return default(CloudServiceResponse);
		}
	}
	[Token(Token = "0x200036F")]
	internal enum ApiUpdateMode
	{
		[Token(Token = "0x4001762")]
		Blocking,
		[Token(Token = "0x4001763")]
		LatestCameraImage
	}
	[Token(Token = "0x2000370")]
	internal class AnchorApi
	{
		[Token(Token = "0x20006DC")]
		private struct ExternApi
		{
			[PreserveSig]
			[Token(Token = "0x6002982")]
			[Address(RVA = "0x2AC46E8", Offset = "0x2AC46E8", VA = "0x2AC46E8")]
			public static extern void ArAnchor_getPose(IntPtr sessionHandle, IntPtr anchorHandle, IntPtr poseHandle);

			[PreserveSig]
			[Token(Token = "0x6002983")]
			[Address(RVA = "0x2AC4780", Offset = "0x2AC4780", VA = "0x2AC4780")]
			public static extern void ArAnchor_getTrackingState(IntPtr sessionHandle, IntPtr anchorHandle, ref ApiTrackingState trackingState);

			[PreserveSig]
			[Token(Token = "0x6002984")]
			[Address(RVA = "0x2AC4860", Offset = "0x2AC4860", VA = "0x2AC4860")]
			public static extern void ArAnchor_getCloudAnchorState(IntPtr sessionHandle, IntPtr anchorHandle, ref ApiCloudAnchorState state);

			[PreserveSig]
			[Token(Token = "0x6002985")]
			[Address(RVA = "0x2AC48F8", Offset = "0x2AC48F8", VA = "0x2AC48F8")]
			public static extern void ArAnchor_acquireCloudAnchorId(IntPtr sessionHandle, IntPtr anchorHandle, ref IntPtr hostingIdHandle);

			[PreserveSig]
			[Token(Token = "0x6002986")]
			[Address(RVA = "0x2AC4668", Offset = "0x2AC4668", VA = "0x2AC4668")]
			public static extern void ArAnchor_release(IntPtr anchorHandle);

			[PreserveSig]
			[Token(Token = "0x6002987")]
			[Address(RVA = "0x2AC4A10", Offset = "0x2AC4A10", VA = "0x2AC4A10")]
			public static extern void ArAnchor_detach(IntPtr sessionHandle, IntPtr anchorHandle);

			[PreserveSig]
			[Token(Token = "0x6002988")]
			[Address(RVA = "0x2AC4990", Offset = "0x2AC4990", VA = "0x2AC4990")]
			public static extern void ArString_release(IntPtr stringHandle);

			[PreserveSig]
			[Token(Token = "0x6002989")]
			[Address(RVA = "0x2AC4B08", Offset = "0x2AC4B08", VA = "0x2AC4B08")]
			public static extern void ArAnchorList_create(IntPtr sessionHandle, ref IntPtr outputAnchorListHandle);

			[PreserveSig]
			[Token(Token = "0x600298A")]
			[Address(RVA = "0x2AC4D98", Offset = "0x2AC4D98", VA = "0x2AC4D98")]
			public static extern void ArAnchorList_destroy(IntPtr anchorListHandle);

			[PreserveSig]
			[Token(Token = "0x600298B")]
			[Address(RVA = "0x2AC4BD0", Offset = "0x2AC4BD0", VA = "0x2AC4BD0")]
			public static extern void ArAnchorList_getSize(IntPtr sessionHandle, IntPtr anchorListHandle, ref int outputSize);

			[PreserveSig]
			[Token(Token = "0x600298C")]
			[Address(RVA = "0x2AC4CE8", Offset = "0x2AC4CE8", VA = "0x2AC4CE8")]
			public static extern void ArAnchorList_acquireItem(IntPtr sessionHandle, IntPtr anchorListHandle, int index, ref IntPtr outputAnchorHandle);
		}

		[Token(Token = "0x4001764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private NativeSession m_NativeSession;

		[Token(Token = "0x6001978")]
		[Address(RVA = "0x2AC4634", Offset = "0x2AC4634", VA = "0x2AC4634")]
		public AnchorApi(NativeSession nativeSession)
		{
		}

		[Token(Token = "0x6001979")]
		[Address(RVA = "0x2AB6CB4", Offset = "0x2AB6CB4", VA = "0x2AB6CB4")]
		public static void Release(IntPtr anchorHandle)
		{
		}

		[Token(Token = "0x600197A")]
		[Address(RVA = "0x2AB710C", Offset = "0x2AB710C", VA = "0x2AB710C")]
		public Pose GetPose(IntPtr anchorHandle)
		{
			return default(Pose);
		}

		[Token(Token = "0x600197B")]
		[Address(RVA = "0x2AB6A80", Offset = "0x2AB6A80", VA = "0x2AB6A80")]
		public TrackingState GetTrackingState(IntPtr anchorHandle)
		{
			return default(TrackingState);
		}

		[Token(Token = "0x600197C")]
		[Address(RVA = "0x2AC4828", Offset = "0x2AC4828", VA = "0x2AC4828")]
		public ApiCloudAnchorState GetCloudAnchorState(IntPtr anchorHandle)
		{
			return default(ApiCloudAnchorState);
		}

		[Token(Token = "0x600197D")]
		[Address(RVA = "0x2AB6CB8", Offset = "0x2AB6CB8", VA = "0x2AB6CB8")]
		public string GetCloudAnchorId(IntPtr anchorHandle)
		{
			return null;
		}

		[Token(Token = "0x600197E")]
		[Address(RVA = "0x2AB7274", Offset = "0x2AB7274", VA = "0x2AB7274")]
		public void Detach(IntPtr anchorHandle)
		{
		}

		[Token(Token = "0x600197F")]
		[Address(RVA = "0x2AC4AA0", Offset = "0x2AC4AA0", VA = "0x2AC4AA0")]
		public IntPtr CreateList()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001980")]
		[Address(RVA = "0x2AC4B98", Offset = "0x2AC4B98", VA = "0x2AC4B98")]
		public int GetListSize(IntPtr anchorListHandle)
		{
			return default(int);
		}

		[Token(Token = "0x6001981")]
		[Address(RVA = "0x2AC4C68", Offset = "0x2AC4C68", VA = "0x2AC4C68")]
		public IntPtr AcquireListItem(IntPtr anchorListHandle, int index)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001982")]
		[Address(RVA = "0x2AC4D90", Offset = "0x2AC4D90", VA = "0x2AC4D90")]
		public void DestroyList(IntPtr anchorListHandle)
		{
		}
	}
	[Token(Token = "0x2000371")]
	internal class AugmentedFaceApi
	{
		[Token(Token = "0x20006DD")]
		private struct ExternApi
		{
			[PreserveSig]
			[Token(Token = "0x600298D")]
			[Address(RVA = "0x2AC5DF0", Offset = "0x2AC5DF0", VA = "0x2AC5DF0")]
			public static extern void ArAugmentedFace_getCenterPose(IntPtr sessionHandle, IntPtr faceHandle, IntPtr poseHandle);

			[PreserveSig]
			[Token(Token = "0x600298E")]
			[Address(RVA = "0x2AC5F30", Offset = "0x2AC5F30", VA = "0x2AC5F30")]
			public static extern void ArAugmentedFace_getMeshVertices(IntPtr sessionHandle, IntPtr faceHandle, ref IntPtr vertices, ref int numberOfVertices);

			[PreserveSig]
			[Token(Token = "0x600298F")]
			[Address(RVA = "0x2AC5FD8", Offset = "0x2AC5FD8", VA = "0x2AC5FD8")]
			public static extern void ArAugmentedFace_getMeshNormals(IntPtr sessionHandle, IntPtr faceHandle, ref IntPtr normals, ref int numberOfVertices);

			[PreserveSig]
			[Token(Token = "0x6002990")]
			[Address(RVA = "0x2AC6080", Offset = "0x2AC6080", VA = "0x2AC6080")]
			public static extern void ArAugmentedFace_getMeshTextureCoordinates(IntPtr sessionHandle, IntPtr faceHandle, ref IntPtr uvs, ref int numberOfVertices);

			[PreserveSig]
			[Token(Token = "0x6002991")]
			[Address(RVA = "0x2AC6128", Offset = "0x2AC6128", VA = "0x2AC6128")]
			public static extern void ArAugmentedFace_getMeshTriangleIndices(IntPtr sessionHandle, IntPtr faceHandle, ref IntPtr indices, ref int numberOfTriangles);

			[PreserveSig]
			[Token(Token = "0x6002992")]
			[Address(RVA = "0x2AC5E88", Offset = "0x2AC5E88", VA = "0x2AC5E88")]
			public static extern void ArAugmentedFace_getRegionPose(IntPtr sessionHandle, IntPtr faceHandle, ApiAugmentedFaceRegionType regionType, IntPtr poseHandle);
		}

		[Token(Token = "0x4001765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private NativeSession m_NativeSession;

		[Token(Token = "0x4001766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float[] m_TempVertices;

		[Token(Token = "0x4001767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float[] m_TempNormals;

		[Token(Token = "0x4001768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float[] m_TempUVs;

		[Token(Token = "0x4001769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private short[] m_TempIndices;

		[Token(Token = "0x6001983")]
		[Address(RVA = "0x2AC5DBC", Offset = "0x2AC5DBC", VA = "0x2AC5DBC")]
		public AugmentedFaceApi(NativeSession nativeSession)
		{
		}

		[Token(Token = "0x6001984")]
		[Address(RVA = "0x2AB442C", Offset = "0x2AB442C", VA = "0x2AB442C")]
		public Pose GetCenterPose(IntPtr faceHandle)
		{
			return default(Pose);
		}

		[Token(Token = "0x6001985")]
		[Address(RVA = "0x2AB4590", Offset = "0x2AB4590", VA = "0x2AB4590")]
		public Pose GetRegionPose(IntPtr faceHandle, ApiAugmentedFaceRegionType regionType)
		{
			return default(Pose);
		}

		[Token(Token = "0x6001986")]
		[Address(RVA = "0x2AB46EC", Offset = "0x2AB46EC", VA = "0x2AB46EC")]
		public void GetVertices(IntPtr faceHandle, List<Vector3> vertices)
		{
		}

		[Token(Token = "0x6001987")]
		[Address(RVA = "0x2AB4BD0", Offset = "0x2AB4BD0", VA = "0x2AB4BD0")]
		public void GetNormals(IntPtr faceHandle, List<Vector3> normals)
		{
		}

		[Token(Token = "0x6001988")]
		[Address(RVA = "0x2AB4970", Offset = "0x2AB4970", VA = "0x2AB4970")]
		public void GetTextureCoordinates(IntPtr faceHandle, List<Vector2> textureCoordinates)
		{
		}

		[Token(Token = "0x6001989")]
		[Address(RVA = "0x2AB4E54", Offset = "0x2AB4E54", VA = "0x2AB4E54")]
		public void GetTriangleIndices(IntPtr faceHandle, List<int> indices)
		{
		}
	}
	[Token(Token = "0x2000372")]
	internal class AugmentedImageApi
	{
		[Token(Token = "0x20006DE")]
		private struct ExternApi
		{
			[PreserveSig]
			[Token(Token = "0x6002993")]
			[Address(RVA = "0x2AC6204", Offset = "0x2AC6204", VA = "0x2AC6204")]
			public static extern void ArAugmentedImage_getIndex(IntPtr sessionHandle, IntPtr augmentedImageHandle, ref int outIndex);

			[PreserveSig]
			[Token(Token = "0x6002994")]
			[Address(RVA = "0x2AC629C", Offset = "0x2AC629C", VA = "0x2AC629C")]
			public static extern void ArAugmentedImage_getCenterPose(IntPtr sessionHandle, IntPtr augmentedImageHandle, IntPtr outPoseHandle);

			[PreserveSig]
			[Token(Token = "0x6002995")]
			[Address(RVA = "0x2AC6334", Offset = "0x2AC6334", VA = "0x2AC6334")]
			public static extern void ArAugmentedImage_getExtentX(IntPtr sessionHandle, IntPtr augmentedImageHandle, ref float outExtentX);

			[PreserveSig]
			[Token(Token = "0x6002996")]
			[Address(RVA = "0x2AC63CC", Offset = "0x2AC63CC", VA = "0x2AC63CC")]
			public static extern void ArAugmentedImage_getExtentZ(IntPtr sessionHandle, IntPtr augmentedImageHandle, ref float outExtentZ);

			[PreserveSig]
			[Token(Token = "0x6002997")]
			[Address(RVA = "0x2AC6464", Offset = "0x2AC6464", VA = "0x2AC6464")]
			public static extern void ArAugmentedImage_acquireName(IntPtr sessionHandle, IntPtr augmentedImageHandle, ref IntPtr outName);

			[PreserveSig]
			[Token(Token = "0x6002998")]
			[Address(RVA = "0x2AC657C", Offset = "0x2AC657C", VA = "0x2AC657C")]
			public static extern void ArAugmentedImage_getTrackingMethod(IntPtr sessionHandle, IntPtr augmentedImageHandle, ref AugmentedImageTrackingMethod trackingMethod);

			[PreserveSig]
			[Token(Token = "0x6002999")]
			[Address(RVA = "0x2AC64FC", Offset = "0x2AC64FC", VA = "0x2AC64FC")]
			public static extern void ArString_release(IntPtr str);
		}

		[Token(Token = "0x400176A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private NativeSession m_NativeSession;

		[Token(Token = "0x600198A")]
		[Address(RVA = "0x2AC61D0", Offset = "0x2AC61D0", VA = "0x2AC61D0")]
		public AugmentedImageApi(NativeSession nativeSession)
		{
		}

		[Token(Token = "0x600198B")]
		[Address(RVA = "0x2AB506C", Offset = "0x2AB506C", VA = "0x2AB506C")]
		public int GetDatabaseIndex(IntPtr augmentedImageHandle)
		{
			return default(int);
		}

		[Token(Token = "0x600198C")]
		[Address(RVA = "0x2AB51B0", Offset = "0x2AB51B0", VA = "0x2AB51B0")]
		public Pose GetCenterPose(IntPtr augmentedImageHandle)
		{
			return default(Pose);
		}

		[Token(Token = "0x600198D")]
		[Address(RVA = "0x2AB5278", Offset = "0x2AB5278", VA = "0x2AB5278")]
		public float GetExtentX(IntPtr augmentedImageHandle)
		{
			return default(float);
		}

		[Token(Token = "0x600198E")]
		[Address(RVA = "0x2AB52DC", Offset = "0x2AB52DC", VA = "0x2AB52DC")]
		public float GetExtentZ(IntPtr augmentedImageHandle)
		{
			return default(float);
		}

		[Token(Token = "0x600198F")]
		[Address(RVA = "0x2AB50D4", Offset = "0x2AB50D4", VA = "0x2AB50D4")]
		public string GetName(IntPtr augmentedImageHandle)
		{
			return null;
		}

		[Token(Token = "0x6001990")]
		[Address(RVA = "0x2AB5340", Offset = "0x2AB5340", VA = "0x2AB5340")]
		public AugmentedImageTrackingMethod GetTrackingMethod(IntPtr augmentedImageHandle)
		{
			return default(AugmentedImageTrackingMethod);
		}
	}
	[Token(Token = "0x2000373")]
	internal class AugmentedImageDatabaseApi
	{
		[Token(Token = "0x20006DF")]
		private struct ExternApi
		{
			[PreserveSig]
			[Token(Token = "0x600299A")]
			[Address(RVA = "0x2AC6774", Offset = "0x2AC6774", VA = "0x2AC6774")]
			public static extern void ArAugmentedImageDatabase_create(IntPtr session, ref IntPtr out_augmented_image_database);

			[PreserveSig]
			[Token(Token = "0x600299B")]
			[Address(RVA = "0x2AC664C", Offset = "0x2AC664C", VA = "0x2AC664C")]
			public static extern void ArAugmentedImageDatabase_destroy(IntPtr augmented_image_database);

			[PreserveSig]
			[Token(Token = "0x600299C")]
			[Address(RVA = "0x2AC66CC", Offset = "0x2AC66CC", VA = "0x2AC66CC")]
			public static extern ApiArStatus ArAugmentedImageDatabase_deserialize(IntPtr session, IntPtr database_raw_bytes, long database_raw_bytes_size, ref IntPtr out_augmented_image_database);

			[PreserveSig]
			[Token(Token = "0x600299D")]
			[Address(RVA = "0x2AC6B30", Offset = "0x2AC6B30", VA = "0x2AC6B30")]
			public static extern ApiArStatus ArAugmentedImageDatabase_addImageWithPhysicalSize(IntPtr session, IntPtr augmented_image_database, string image_name, IntPtr image_grayscale_pixels, int image_width_in_pixels, int image_height_in_pixels, int image_stride_in_pixels, float image_width_in_meters, ref int out_index);

			[PreserveSig]
			[Token(Token = "0x600299E")]
			[Address(RVA = "0x2AC6C34", Offset = "0x2AC6C34", VA = "0x2AC6C34")]
			public static extern ApiArStatus ArAugmentedImageDatabase_addImage(IntPtr session, IntPtr augmented_image_database, string image_name, IntPtr image_grayscale_pixels, int image_width_in_pixels, int image_height_in_pixels, int image_stride_in_pixels, ref int out_index);
		}

		[Token(Token = "0x400176B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private NativeSession m_NativeSession;

		[Token(Token = "0x6001991")]
		[Address(RVA = "0x2AC6614", Offset = "0x2AC6614", VA = "0x2AC6614")]
		public AugmentedImageDatabaseApi(NativeSession nativeSession)
		{
		}

		[Token(Token = "0x6001992")]
		[Address(RVA = "0x2AC6648", Offset = "0x2AC6648", VA = "0x2AC6648")]
		public static void Release(IntPtr augmentedImageDatabaseHandle)
		{
		}

		[Token(Token = "0x6001993")]
		[Address(RVA = "0x2AB55F4", Offset = "0x2AB55F4", VA = "0x2AB55F4")]
		public IntPtr Create(byte[] rawData)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001994")]
		[Address(RVA = "0x2AB5AB8", Offset = "0x2AB5AB8", VA = "0x2AB5AB8")]
		public int AddAugmentedImageAtRuntime(IntPtr augmentedImageDatabaseHandle, string name, Texture2D image, float width)
		{
			return default(int);
		}

		[Token(Token = "0x6001995")]
		[Address(RVA = "0x2AC6804", Offset = "0x2AC6804", VA = "0x2AC6804")]
		private GCHandle _ConvertTextureToGrayscaleBytes(Texture2D image)
		{
			return default(GCHandle);
		}
	}
	[Token(Token = "0x2000374")]
	internal class CameraApi
	{
		[Token(Token = "0x20006E0")]
		private struct ExternApi
		{
			[PreserveSig]
			[Token(Token = "0x600299F")]
			[Address(RVA = "0x2AC6DA0", Offset = "0x2AC6DA0", VA = "0x2AC6DA0")]
			public static extern void ArCamera_getTrackingState(IntPtr sessionHandle, IntPtr cameraHandle, ref ApiTrackingState outTrackingState);

			[PreserveSig]
			[Token(Token = "0x60029A0")]
			[Address(RVA = "0x2AC6E38", Offset = "0x2AC6E38", VA = "0x2AC6E38")]
			public static extern void ArCamera_getTrackingFailureReason(IntPtr sessionHandle, IntPtr cameraHandle, ref ApiTrackingFailureReason outTrackingState);

			[PreserveSig]
			[Token(Token = "0x60029A1")]
			[Address(RVA = "0x2AC6ED0", Offset = "0x2AC6ED0", VA = "0x2AC6ED0")]
			public static extern void ArCamera_getDisplayOrientedPose(IntPtr sessionHandle, IntPtr cameraHandle, IntPtr outPose);

			[PreserveSig]
			[Token(Token = "0x60029A2")]
			[Address(RVA = "0x2AC6F68", Offset = "0x2AC6F68", VA = "0x2AC6F68")]
			public static extern void ArCamera_getProjectionMatrix(IntPtr sessionHandle, IntPtr cameraHandle, float near, float far, ref Matrix4x4 outMatrix);

			[PreserveSig]
			[Token(Token = "0x60029A3")]
			[Address(RVA = "0x2AC70A8", Offset = "0x2AC70A8", VA = "0x2AC70A8")]
			public static extern void ArCamera_getTextureIntrinsics(IntPtr sessionHandle, IntPtr cameraHandle, IntPtr outCameraIntrinsics);

			[PreserveSig]
			[Token(Token = "0x60029A4")]
			[Address(RVA = "0x2AC72A8", Offset = "0x2AC72A8", VA = "0x2AC72A8")]
			public static extern void ArCamera_getImageIntrinsics(IntPtr sessionHandle, IntPtr cameraHandle, IntPtr outCameraIntrinsics);

			[PreserveSig]
			[Token(Token = "0x60029A5")]
			[Address(RVA = "0x2AC7340", Offset = "0x2AC7340", VA = "0x2AC7340")]
			public static extern void ArCamera_release(IntPtr cameraHandle);

			[PreserveSig]
			[Token(Token = "0x60029A6")]
			[Address(RVA = "0x2AC7018", Offset = "0x2AC7018", VA = "0x2AC7018")]
			public static extern void ArCameraIntrinsics_create(IntPtr sessionHandle, ref IntPtr outCameraIntrinsics);

			[PreserveSig]
			[Token(Token = "0x60029A7")]
			[Address(RVA = "0x2AC73C0", Offset = "0x2AC73C0", VA = "0x2AC73C0")]
			public static extern void ArCameraIntrinsics_getFocalLength(IntPtr sessionHandle, IntPtr intrinsicsHandle, ref float outFx, ref float outFy);

			[PreserveSig]
			[Token(Token = "0x60029A8")]
			[Address(RVA = "0x2AC7468", Offset = "0x2AC7468", VA = "0x2AC7468")]
			public static extern void ArCameraIntrinsics_getPrincipalPoint(IntPtr sessionHandle, IntPtr intrinsicsHandle, ref float outCx, ref float outCy);

			[PreserveSig]
			[Token(Token = "0x60029A9")]
			[Address(RVA = "0x2AC7510", Offset = "0x2AC7510", VA = "0x2AC7510")]
			public static extern void ArCameraIntrinsics_getImageDimensions(IntPtr sessionHandle, IntPtr intrinsicsHandle, ref int outWidth, ref int outWeight);

			[PreserveSig]
			[Token(Token = "0x60029AA")]
			[Address(RVA = "0x2AC7228", Offset = "0x2AC7228", VA = "0x2AC7228")]
			public static extern void ArCameraIntrinsics_destroy(IntPtr intrinsicsHandle);
		}

		[Token(Token = "0x400176C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private NativeSession m_NativeSession;

		[Token(Token = "0x6001996")]
		[Address(RVA = "0x2AC6D28", Offset = "0x2AC6D28", VA = "0x2AC6D28")]
		public CameraApi(NativeSession nativeSession)
		{
		}

		[Token(Token = "0x6001997")]
		[Address(RVA = "0x2AC6D5C", Offset = "0x2AC6D5C", VA = "0x2AC6D5C")]
		public TrackingState GetTrackingState(IntPtr cameraHandle)
		{
			return default(TrackingState);
		}

		[Token(Token = "0x6001998")]
		[Address(RVA = "0x2ABFF98", Offset = "0x2ABFF98", VA = "0x2ABFF98")]
		public LostTrackingReason GetLostTrackingReason(IntPtr cameraHandle)
		{
			return default(LostTrackingReason);
		}

		[Token(Token = "0x6001999")]
		[Address(RVA = "0x2AB8CE4", Offset = "0x2AB8CE4", VA = "0x2AB8CE4")]
		public Pose GetPose(IntPtr cameraHandle)
		{
			return default(Pose);
		}

		[Token(Token = "0x600199A")]
		[Address(RVA = "0x2ABAB08", Offset = "0x2ABAB08", VA = "0x2ABAB08")]
		public Matrix4x4 GetProjectionMatrix(IntPtr cameraHandle, float near, float far)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x600199B")]
		[Address(RVA = "0x2ABA30C", Offset = "0x2ABA30C", VA = "0x2ABA30C")]
		public CameraIntrinsics GetTextureIntrinsics(IntPtr cameraHandle)
		{
			return default(CameraIntrinsics);
		}

		[Token(Token = "0x600199C")]
		[Address(RVA = "0x2ABA54C", Offset = "0x2ABA54C", VA = "0x2ABA54C")]
		public CameraIntrinsics GetImageIntrinsics(IntPtr cameraHandle)
		{
			return default(CameraIntrinsics);
		}

		[Token(Token = "0x600199D")]
		[Address(RVA = "0x2AB8DF0", Offset = "0x2AB8DF0", VA = "0x2AB8DF0")]
		public void Release(IntPtr cameraHandle)
		{
		}

		[Token(Token = "0x600199E")]
		[Address(RVA = "0x2AC7140", Offset = "0x2AC7140", VA = "0x2AC7140")]
		private CameraIntrinsics _GetCameraIntrinsicsFromHandle(IntPtr intrinsicsHandle)
		{
			return default(CameraIntrinsics);
		}
	}
	[Token(Token = "0x2000375")]
	internal class CameraConfigApi
	{
		[Token(Token = "0x20006E1")]
		private struct ExternApi
		{
			[PreserveSig]
			[Token(Token = "0x60029AB")]
			[Address(RVA = "0x2AC76B8", Offset = "0x2AC76B8", VA = "0x2AC76B8")]
			public static extern void ArCameraConfig_create(IntPtr sessionHandle, ref IntPtr cameraConfigHandle);

			[PreserveSig]
			[Token(Token = "0x60029AC")]
			[Address(RVA = "0x2AC7748", Offset = "0x2AC7748", VA = "0x2AC7748")]
			public static extern void ArCameraConfig_destroy(IntPtr cameraConfigHandle);

			[PreserveSig]
			[Token(Token = "0x60029AD")]
			[Address(RVA = "0x2AC78B4", Offset = "0x2AC78B4", VA = "0x2AC78B4")]
			public static extern void ArCameraConfig_getImageDimensions(IntPtr sessionHandle, IntPtr cameraConfigHandle, ref int width, ref int height);

			[PreserveSig]
			[Token(Token = "0x60029AE")]
			[Address(RVA = "0x2AC7A48", Offset = "0x2AC7A48", VA = "0x2AC7A48")]
			public static extern void ArCameraConfig_getTextureDimensions(IntPtr sessionHandle, IntPtr cameraConfigHandle, ref int width, ref int height);

			[PreserveSig]
			[Token(Token = "0x60029AF")]
			[Address(RVA = "0x2AC7F60", Offset = "0x2AC7F60", VA = "0x2AC7F60")]
			public static extern void ArCameraConfig_getTextureHeight(IntPtr sessionHandle, IntPtr cameraConfigHandle, ref int height);

			[PreserveSig]
			[Token(Token = "0x60029B0")]
			[Address(RVA = "0x2AC7BC4", Offset = "0x2AC7BC4", VA = "0x2AC7BC4")]
			public static extern void ArCameraConfig_getFacingDirection(IntPtr sessionHandle, IntPtr cameraConfigHandle, ref ApiCameraConfigFacingDirection facingDirection);

			[PreserveSig]
			[Token(Token = "0x60029B1")]
			[Address(RVA = "0x2AC7D48", Offset = "0x2AC7D48", VA = "0x2AC7D48")]
			public static extern void ArCameraConfig_getFpsRange(IntPtr sessionHandle, IntPtr cameraConfigHandle, ref int minFps, ref int maxFps);

			[PreserveSig]
			[Token(Token = "0x60029B2")]
			[Address(RVA = "0x2AC7EC8", Offset = "0x2AC7EC8", VA = "0x2AC7EC8")]
			public static extern void ArCameraConfig_getDepthSensorUsage(IntPtr sessionHandle, IntPtr cameraConfigHandle, ref int depthSensorUsage);
		}

		[Token(Token = "0x400176D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private NativeSession m_NativeSession;

		[Token(Token = "0x600199F")]
		[Address(RVA = "0x2AC75B8", Offset = "0x2AC75B8", VA = "0x2AC75B8")]
		public CameraConfigApi(NativeSession nativeSession)
		{
		}

		[Token(Token = "0x60019A0")]
		[Address(RVA = "0x2AC75EC", Offset = "0x2AC75EC", VA = "0x2AC75EC")]
		public IntPtr Create()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60019A1")]
		[Address(RVA = "0x2ABF450", Offset = "0x2ABF450", VA = "0x2ABF450")]
		public void Destroy(IntPtr cameraConfigHandle)
		{
		}

		[Token(Token = "0x60019A2")]
		[Address(RVA = "0x2AC77C8", Offset = "0x2AC77C8", VA = "0x2AC77C8")]
		public void GetImageDimensions(IntPtr cameraConfigHandle, out int width, out int height)
		{
		}

		[Token(Token = "0x60019A3")]
		[Address(RVA = "0x2AC795C", Offset = "0x2AC795C", VA = "0x2AC795C")]
		public void GetTextureDimensions(IntPtr cameraConfigHandle, out int width, out int height)
		{
		}

		[Token(Token = "0x60019A4")]
		[Address(RVA = "0x2AC7AF0", Offset = "0x2AC7AF0", VA = "0x2AC7AF0")]
		public ApiCameraConfigFacingDirection GetFacingDirection(IntPtr cameraConfigHandle)
		{
			return default(ApiCameraConfigFacingDirection);
		}

		[Token(Token = "0x60019A5")]
		[Address(RVA = "0x2AC7C5C", Offset = "0x2AC7C5C", VA = "0x2AC7C5C")]
		public void GetFpsRange(IntPtr cameraConfigHandle, out int minFps, out int maxFps)
		{
		}

		[Token(Token = "0x60019A6")]
		[Address(RVA = "0x2AC7DF0", Offset = "0x2AC7DF0", VA = "0x2AC7DF0")]
		public CameraConfigDepthSensorUsages GetDepthSensorUsage(IntPtr cameraConfigHandle)
		{
			return default(CameraConfigDepthSensorUsages);
		}
	}
	[Token(Token = "0x2000376")]
	internal class CameraConfigFilterApi
	{
		[Token(Token = "0x20006E2")]
		private struct ExternApi
		{
			[PreserveSig]
			[Token(Token = "0x60029B3")]
			[Address(RVA = "0x2AC8130", Offset = "0x2AC8130", VA = "0x2AC8130")]
			public static extern void ArCameraConfigFilter_create(IntPtr sessionHandle, ref IntPtr cameraConfigFilterHandle);

			[PreserveSig]
			[Token(Token = "0x60029B4")]
			[Address(RVA = "0x2AC8348", Offset = "0x2AC8348", VA = "0x2AC8348")]
			public static extern void ArCameraConfigFilter_destroy(IntPtr cameraConfigFilterHandle);

			[PreserveSig]
			[Token(Token = "0x60029B5")]
			[Address(RVA = "0x2AC81E8", Offset = "0x2AC81E8", VA = "0x2AC81E8")]
			public static extern void ArCameraConfigFilter_setTargetFps(IntPtr sessionHandle, IntPtr cameraConfigFilterHandle, int fpsFilter);

			[PreserveSig]
			[Token(Token = "0x60029B6")]
			[Address(RVA = "0x2AC82A8", Offset = "0x2AC82A8", VA = "0x2AC82A8")]
			public static extern void ArCameraConfigFilter_setDepthSensorUsage(IntPtr sessionHandle, IntPtr cameraConfigFilterHandle, int depthFilter);
		}

		[Token(Token = "0x400176E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private NativeSession m_NativeSession;

		[Token(Token = "0x60019A7")]
		[Address(RVA = "0x2AC7FF8", Offset = "0x2AC7FF8", VA = "0x2AC7FF8")]
		public CameraConfigFilterApi(NativeSession nativeSession)
		{
		}

		[Token(Token = "0x60019A8")]
		[Address(RVA = "0x2AC802C", Offset = "0x2AC802C", VA = "0x2AC802C")]
		public IntPtr Create(ARCoreCameraConfigFilter filter)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60019A9")]
		[Address(RVA = "0x2AC8340", Offset = "0x2AC8340", VA = "0x2AC8340")]
		public void Destroy(IntPtr cameraConfigListHandle)
		{
		}

		[Token(Token = "0x60019AA")]
		[Address(RVA = "0x2AC81C0", Offset = "0x2AC81C0", VA = "0x2AC81C0")]
		private int _ConvertToFpsFilter(ARCoreCameraConfigFilter.TargetCameraFramerateFilter targetCameraFramerate)
		{
			return default(int);
		}

		[Token(Token = "0x60019AB")]
		[Address(RVA = "0x2AC8280", Offset = "0x2AC8280", VA = "0x2AC8280")]
		private int _ConvertToDepthFilter(ARCoreCameraConfigFilter.DepthSensorUsageFilter depthSensorUsage)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000377")]
	internal class CameraConfigListApi
	{
		[Token(Token = "0x20006E3")]
		private struct ExternApi
		{
			[PreserveSig]
			[Token(Token = "0x60029B7")]
			[Address(RVA = "0x2AC83FC", Offset = "0x2AC83FC", VA = "0x2AC83FC")]
			public static extern void ArCameraConfigList_create(IntPtr sessionHandle, ref IntPtr cameraConfigListHandle);

			[PreserveSig]
			[Token(Token = "0x60029B8")]
			[Address(RVA = "0x2AC848C", Offset = "0x2AC848C", VA = "0x2AC848C")]
			public static extern void ArCameraConfigList_destroy(IntPtr cameraConfigListHandle);

			[PreserveSig]
			[Token(Token = "0x60029B9")]
			[Address(RVA = "0x2AC8544", Offset = "0x2AC8544", VA = "0x2AC8544")]
			public static extern void ArCameraConfigList_getSize(IntPtr sessionHandle, IntPtr cameraConfigListHandle, ref int size);

			[PreserveSig]
			[Token(Token = "0x60029BA")]
			[Address(RVA = "0x2AC85F8", Offset = "0x2AC85F8", VA = "0x2AC85F8")]
			public static extern void ArCameraConfigList_getItem(IntPtr sessionHandle, IntPtr cameraConfigListHandle, int index, IntPtr itemHandle);
		}

		[Token(Token = "0x400176F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private NativeSession m_NativeSession;

		[Token(Token = "0x60019AC")]
		[Address(RVA = "0x2AC83C8", Offset = "0x2AC83C8", VA = "0x2AC83C8")]
		public CameraConfigListApi(NativeSession nativeSession)
		{
		}

		[Token(Token = "0x60019AD")]
		[Address(RVA = "0x2ABF3E8", Offset = "0x2ABF3E8", VA = "0x2ABF3E8")]
		public IntPtr Create()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60019AE")]
		[Address(RVA = "0x2ABF458", Offset = "0x2ABF458", VA = "0x2ABF458")]
		public void Destroy(IntPtr cameraConfigListHandle)
		{
		}

		[Token(Token = "0x60019AF")]
		[Address(RVA = "0x2AC850C", Offset = "0x2AC850C", VA = "0x2AC850C")]
		public int GetSize(IntPtr cameraConfigListHandle)
		{
			return default(int);
		}

		[Token(Token = "0x60019B0")]
		[Address(RVA = "0x2AC85DC", Offset = "0x2AC85DC", VA = "0x2AC85DC")]
		public void GetItemAt(IntPtr cameraConfigListHandle, int index, IntPtr cameraConfigHandle)
		{
		}
	}
	[Token(Token = "0x2000378")]
	internal class CameraMetadataApi
	{
		[Token(Token = "0x20006E4")]
		private struct ExternApi
		{
			[PreserveSig]
			[Token(Token = "0x60029BB")]
			[Address(RVA = "0x2AC87B8", Offset = "0x2AC87B8", VA = "0x2AC87B8")]
			public static extern void ArImageMetadata_getNdkCameraMetadata(IntPtr session, IntPtr image_metadata, ref IntPtr out_ndk_metadata);

			[PreserveSig]
			[Token(Token = "0x60029BC")]
			[Address(RVA = "0x2AC8738", Offset = "0x2AC8738", VA = "0x2AC8738")]
			public static extern void ArImageMetadata_release(IntPtr metadata);

			[PreserveSig]
			[Token(Token = "0x60029BD")]
			[Address(RVA = "0x2AC8850", Offset = "0x2AC8850", VA = "0x2AC8850")]
			public static extern NdkCameraStatus ACameraMetadata_getConstEntry(IntPtr ndkCameraMetadata, CameraMetadataTag tag, ref NdkCameraMetadata entry);

			[PreserveSig]
			[Token(Token = "0x60029BE")]
			[Address(RVA = "0x2AC8940", Offset = "0x2AC8940", VA = "0x2AC8940")]
			public static extern NdkCameraStatus ACameraMetadata_getAllTags(IntPtr ndkCameraMetadata, ref int numEntries, ref IntPtr tags);
		}

		[Token(Token = "0x4001770")]
		private const int k_MaximumTagCountForWarning = 5000;

		[Token(Token = "0x4001771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private HashSet<int> m_WarningTags;

		[Token(Token = "0x4001772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private NativeSession m_NativeSession;

		[Token(Token = "0x60019B1")]
		[Address(RVA = "0x2AC86A0", Offset = "0x2AC86A0", VA = "0x2AC86A0")]
		public CameraMetadataApi(NativeSession nativeSession)
		{
		}

		[Token(Token = "0x60019B2")]
		[Address(RVA = "0x2ABB5F4", Offset = "0x2ABB5F4", VA = "0x2ABB5F4")]
		public void Release(IntPtr arCameraMetadataHandle)
		{
		}

		[Token(Token = "0x60019B3")]
		[Address(RVA = "0x2ABAE5C", Offset = "0x2ABAE5C", VA = "0x2ABAE5C")]
		public bool TryGetValues(IntPtr cameraMetadataHandle, CameraMetadataTag tag, List<CameraMetadataValue> resultList)
		{
			return default(bool);
		}

		[Token(Token = "0x60019B4")]
		[Address(RVA = "0x2ABB734", Offset = "0x2ABB734", VA = "0x2ABB734")]
		public bool GetAllCameraMetadataTags(IntPtr cameraMetadataHandle, List<CameraMetadataTag> resultList)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000379")]
	internal class FrameApi
	{
		[Token(Token = "0x20006E5")]
		private struct ExternApi
		{
			[PreserveSig]
			[Token(Token = "0x60029BF")]
			[Address(RVA = "0x2ACA708", Offset = "0x2ACA708", VA = "0x2ACA708")]
			public static extern void ArFrame_release(IntPtr frame);

			[PreserveSig]
			[Token(Token = "0x60029C0")]
			[Address(RVA = "0x2ACA788", Offset = "0x2ACA788", VA = "0x2ACA788")]
			public static extern void ArFrame_getTimestamp(IntPtr sessionHandle, IntPtr frame, ref long timestamp);

			[PreserveSig]
			[Token(Token = "0x60029C1")]
			[Address(RVA = "0x2ACA820", Offset = "0x2ACA820", VA = "0x2ACA820")]
			public static extern void ArFrame_acquireCamera(IntPtr sessionHandle, IntPtr frameHandle, ref IntPtr cameraHandle);

			[PreserveSig]
			[Token(Token = "0x60029C2")]
			[Address(RVA = "0x2ACA8B8", Offset = "0x2ACA8B8", VA = "0x2ACA8B8")]
			public static extern ApiArStatus ArFrame_acquireCameraImage(IntPtr sessionHandle, IntPtr frameHandle, ref IntPtr imageHandle);

			[PreserveSig]
			[Token(Token = "0x60029C3")]
			[Address(RVA = "0x2ACAA84", Offset = "0x2ACAA84", VA = "0x2ACAA84")]
			public static extern ApiArStatus ArFrame_acquirePointCloud(IntPtr sessionHandle, IntPtr frameHandle, ref IntPtr pointCloudHandle);

			[PreserveSig]
			[Token(Token = "0x60029C4")]
			[Address(RVA = "0x2ACAC48", Offset = "0x2ACAC48", VA = "0x2ACAC48")]
			public static extern void ArFrame_transformDisplayUvCoords(IntPtr session, IntPtr frame, int numElements, ref ApiDisplayUvCoords uvsIn, ref ApiDisplayUvCoords uvsOut);

			[PreserveSig]
			[Token(Token = "0x60029C5")]
			[Address(RVA = "0x2ACACF8", Offset = "0x2ACACF8", VA = "0x2ACACF8")]
			public static extern void ArFrame_transformCoordinates2d(IntPtr session, IntPtr frame, ApiCoordinates2dType inputType, int numVertices, ref Vector2 uvsIn, ApiCoordinates2dType outputType, ref Vector2 uvsOut);

			[PreserveSig]
			[Token(Token = "0x60029C6")]
			[Address(RVA = "0x2ACAF64", Offset = "0x2ACAF64", VA = "0x2ACAF64")]
			public static extern void ArFrame_getUpdatedTrackables(IntPtr sessionHandle, IntPtr frameHandle, ApiTrackableType filterType, IntPtr outTrackableList);

			[PreserveSig]
			[Token(Token = "0x60029C7")]
			[Address(RVA = "0x2ACABB4", Offset = "0x2ACABB4", VA = "0x2ACABB4")]
			public static extern void ArFrame_getLightEstimate(IntPtr sessionHandle, IntPtr frameHandle, IntPtr lightEstimateHandle);

			[PreserveSig]
			[Token(Token = "0x60029C8")]
			[Address(RVA = "0x2ACAB1C", Offset = "0x2ACAB1C", VA = "0x2ACAB1C")]
			public static extern ApiArStatus ArFrame_acquireImageMetadata(IntPtr sessionHandle, IntPtr frameHandle, ref IntPtr outMetadata);
		}

		[Token(Token = "0x4001773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private NativeSession m_NativeSession;

		[Token(Token = "0x4001774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float[,] m_AmbientSH;

		[Token(Token = "0x60019B5")]
		[Address(RVA = "0x2ACA664", Offset = "0x2ACA664", VA = "0x2ACA664")]
		public FrameApi(NativeSession nativeSession)
		{
		}

		[Token(Token = "0x60019B6")]
		[Address(RVA = "0x2AC14FC", Offset = "0x2AC14FC", VA = "0x2AC14FC")]
		public void Release(IntPtr frameHandle)
		{
		}

		[Token(Token = "0x60019B7")]
		[Address(RVA = "0x2AB99EC", Offset = "0x2AB99EC", VA = "0x2AB99EC")]
		public long GetTimestamp()
		{
			return default(long);
		}

		[Token(Token = "0x60019B8")]
		[Address(RVA = "0x2AB8C7C", Offset = "0x2AB8C7C", VA = "0x2AB8C7C")]
		public IntPtr AcquireCamera()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60019B9")]
		[Address(RVA = "0x2ABA7F4", Offset = "0x2ABA7F4", VA = "0x2ABA7F4")]
		public CameraImageBytes AcquireCameraImageBytes()
		{
			return default(CameraImageBytes);
		}

		[Token(Token = "0x60019BA")]
		[Address(RVA = "0x2ACA950", Offset = "0x2ACA950", VA = "0x2ACA950")]
		public bool TryAcquirePointCloudHandle(out IntPtr pointCloudHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x60019BB")]
		[Address(RVA = "0x2ABAD2C", Offset = "0x2ABAD2C", VA = "0x2ABAD2C")]
		public bool AcquireImageMetadata(ref IntPtr imageMetadataHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x60019BC")]
		[Address(RVA = "0x2AB8F5C", Offset = "0x2AB8F5C", VA = "0x2AB8F5C")]
		public LightEstimate GetLightEstimate()
		{
			return default(LightEstimate);
		}

		[Token(Token = "0x60019BD")]
		[Address(RVA = "0x2ABCE04", Offset = "0x2ABCE04", VA = "0x2ABCE04")]
		public Cubemap GetReflectionCubemap()
		{
			return null;
		}

		[Token(Token = "0x60019BE")]
		[Address(RVA = "0x2AB9E30", Offset = "0x2AB9E30", VA = "0x2AB9E30")]
		public void TransformDisplayUvCoords(ref ApiDisplayUvCoords uv)
		{
		}

		[Token(Token = "0x60019BF")]
		[Address(RVA = "0x2ABA658", Offset = "0x2ABA658", VA = "0x2ABA658")]
		public void TransformCoordinates2d(ref Vector2 uv, DisplayUvCoordinateType inputType, DisplayUvCoordinateType outputType)
		{
		}

		[Token(Token = "0x60019C0")]
		[Address(RVA = "0x2ACADC0", Offset = "0x2ACADC0", VA = "0x2ACADC0")]
		public void GetUpdatedTrackables(List<Trackable> trackables)
		{
		}
	}
	[Token(Token = "0x200037A")]
	internal class HitTestApi
	{
		[Token(Token = "0x20006E6")]
		private struct ExternApi
		{
			[PreserveSig]
			[Token(Token = "0x60029C9")]
			[Address(RVA = "0x2093668", Offset = "0x2093668", VA = "0x2093668")]
			public static extern void ArFrame_hitTest(IntPtr session, IntPtr frame, float pixel_x, float pixel_y, IntPtr hit_result_list);

			[PreserveSig]
			[Token(Token = "0x60029CA")]
			[Address(RVA = "0x20939E4", Offset = "0x20939E4", VA = "0x20939E4")]
			public static extern void ArFrame_hitTestRay(IntPtr session, IntPtr frame, ref Vector3 origin, ref Vector3 direction, IntPtr hit_result_list);

			[PreserveSig]
			[Token(Token = "0x60029CB")]
			[Address(RVA = "0x20935D8", Offset = "0x20935D8", VA = "0x20935D8")]
			public static extern void ArHitResultList_create(IntPtr session, ref IntPtr out_hit_result_list);

			[PreserveSig]
			[Token(Token = "0x60029CC")]
			[Address(RVA = "0x2093840", Offset = "0x2093840", VA = "0x2093840")]
			public static extern void ArHitResultList_destroy(IntPtr hit_result_list);

			[PreserveSig]
			[Token(Token = "0x60029CD")]
			[Address(RVA = "0x2093A94", Offset = "0x2093A94", VA = "0x2093A94")]
			public static extern void ArHitResultList_getSize(IntPtr session, IntPtr hit_result_list, ref int out_size);

			[PreserveSig]
			[Token(Token = "0x60029CE")]
			[Address(RVA = "0x2093F4C", Offset = "0x2093F4C", VA = "0x2093F4C")]
			public static extern void ArHitResultList_getItem(IntPtr session, IntPtr hit_result_list, int index, IntPtr out_hit_result);

			[PreserveSig]
			[Token(Token = "0x60029CF")]
			[Address(RVA = "0x2093EBC", Offset = "0x2093EBC", VA = "0x2093EBC")]
			public static extern void ArHitResult_create(IntPtr session, ref IntPtr out_hit_result);

			[PreserveSig]
			[Token(Token = "0x60029D0")]
			[Address(RVA = "0x2093FF4", Offset = "0x2093FF4", VA = "0x2093FF4")]
			public static extern void ArHitResult_destroy(IntPtr hit_result);

			[PreserveSig]
			[Token(Token = "0x60029D1")]
			[Address(RVA = "0x2094278", Offset = "0x2094278", VA = "0x2094278")]
			public static extern void ArHitResult_getDistance(IntPtr session, IntPtr hit_result, ref float out_distance);

			[PreserveSig]
			[Token(Token = "0x60029D2")]
			[Address(RVA = "0x2094104", Offset = "0x2094104", VA = "0x2094104")]
			public static extern void ArHitResult_getHitPose(IntPtr session, IntPtr hit_result, IntPtr out_pose);

			[PreserveSig]
			[Token(Token = "0x60029D3")]
			[Address(RVA = "0x2094310", Offset = "0x2094310", VA = "0x2094310")]
			public static extern void ArHitResult_acquireTrackable(IntPtr session, IntPtr hit_result, ref IntPtr out_trackable);
		}

		[Token(Token = "0x4001775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private NativeSession m_NativeSession;

		[Token(Token = "0x60019C1")]
		[Address(RVA = "0x20934B0", Offset = "0x20934B0", VA = "0x20934B0")]
		public HitTestApi(NativeSession nativeSession)
		{
		}

		[Token(Token = "0x60019C2")]
		[Address(RVA = "0x20934E4", Offset = "0x20934E4", VA = "0x20934E4")]
		public bool Raycast(IntPtr frameHandle, float x, float y, TrackableHitFlags filter, List<TrackableHit> outHitList)
		{
			return default(bool);
		}

		[Token(Token = "0x60019C3")]
		[Address(RVA = "0x20938C0", Offset = "0x20938C0", VA = "0x20938C0")]
		public bool Raycast(IntPtr frameHandle, Vector3 origin, Vector3 direction, float maxDistance, TrackableHitFlags filter, List<TrackableHit> outHitList)
		{
			return default(bool);
		}

		[Token(Token = "0x60019C4")]
		[Address(RVA = "0x2093718", Offset = "0x2093718", VA = "0x2093718")]
		private void FilterTrackableHits(IntPtr hitResultListHandle, float maxDistance, TrackableHitFlags filter, List<TrackableHit> outHitList)
		{
		}

		[Token(Token = "0x60019C5")]
		[Address(RVA = "0x2093B2C", Offset = "0x2093B2C", VA = "0x2093B2C")]
		private bool HitResultListGetItemAt(IntPtr hitResultListHandle, int index, out TrackableHit outTrackableHit)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200037B")]
	internal class ImageApi
	{
		[Token(Token = "0x20006E7")]
		private struct ExternApi
		{
			[PreserveSig]
			[Token(Token = "0x60029D4")]
			[Address(RVA = "0x20945CC", Offset = "0x20945CC", VA = "0x20945CC")]
			public static extern void ArImage_getNdkImage(IntPtr imageHandle, ref IntPtr ndkImage);

			[PreserveSig]
			[Token(Token = "0x60029D5")]
			[Address(RVA = "0x2094958", Offset = "0x2094958", VA = "0x2094958")]
			public static extern void ArImage_release(IntPtr imageHandle);

			[PreserveSig]
			[Token(Token = "0x60029D6")]
			[Address(RVA = "0x209465C", Offset = "0x209465C", VA = "0x209465C")]
			public static extern int AImage_getWidth(IntPtr ndkImageHandle, ref int width);

			[PreserveSig]
			[Token(Token = "0x60029D7")]
			[Address(RVA = "0x20946EC", Offset = "0x20946EC", VA = "0x20946EC")]
			public static extern int AImage_getHeight(IntPtr ndkImageHandle, ref int height);

			[PreserveSig]
			[Token(Token = "0x60029D8")]
			[Address(RVA = "0x2094778", Offset = "0x2094778", VA = "0x2094778")]
			public static extern int AImage_getPlaneData(IntPtr imageHandle, int planeIdx, ref IntPtr data, ref int dataLength);

			[PreserveSig]
			[Token(Token = "0x60029D9")]
			[Address(RVA = "0x20948B8", Offset = "0x20948B8", VA = "0x20948B8")]
			public static extern int AImage_getPlanePixelStride(IntPtr imageHandle, int planeIdx, ref int pixelStride);

			[PreserveSig]
			[Token(Token = "0x60029DA")]
			[Address(RVA = "0x2094820", Offset = "0x2094820", VA = "0x2094820")]
			public static extern int AImage_getPlaneRowStride(IntPtr imageHandle, int planeIdx, ref int rowStride);
		}

		[Token(Token = "0x60019C6")]
		[Address(RVA = "0x2094490", Offset = "0x2094490", VA = "0x2094490")]
		public void GetImageBuffer(IntPtr imageHandle, out int width, out int height, out IntPtr yPlane, out IntPtr uPlane, out IntPtr vPlane, out int yRowStride, out int uvPixelStride, out int uvRowStride)
		{
		}

		[Token(Token = "0x60019C7")]
		[Address(RVA = "0x2094950", Offset = "0x2094950", VA = "0x2094950")]
		public void Release(IntPtr imageHandle)
		{
		}

		[Token(Token = "0x60019C8")]
		[Address(RVA = "0x20949D8", Offset = "0x20949D8", VA = "0x20949D8")]
		public ImageApi()
		{
		}
	}
	[Token(Token = "0x200037C")]
	internal class LightEstimateApi
	{
		[Token(Token = "0x20006E8")]
		private struct ExternApi
		{
			[PreserveSig]
			[Token(Token = "0x60029DB")]
			[Address(RVA = "0x2097AC8", Offset = "0x2097AC8", VA = "0x2097AC8")]
			public static extern void ArLightEstimate_create(IntPtr sessionHandle, ref IntPtr lightEstimateHandle);

			[PreserveSig]
			[Token(Token = "0x60029DC")]
			[Address(RVA = "0x2097B60", Offset = "0x2097B60", VA = "0x2097B60")]
			public static extern void ArLightEstimate_destroy(IntPtr lightEstimateHandle);

			[PreserveSig]
			[Token(Token = "0x60029DD")]
			[Address(RVA = "0x2097C20", Offset = "0x2097C20", VA = "0x2097C20")]
			public static extern void ArLightEstimate_getState(IntPtr sessionHandle, IntPtr lightEstimateHandle, ref ApiLightEstimateState state);

			[PreserveSig]
			[Token(Token = "0x60029DE")]
			[Address(RVA = "0x2097CEC", Offset = "0x2097CEC", VA = "0x2097CEC")]
			public static extern void ArLightEstimate_getPixelIntensity(IntPtr sessionHandle, IntPtr lightEstimateHandle, ref float pixelIntensity);

			[PreserveSig]
			[Token(Token = "0x60029DF")]
			[Address(RVA = "0x2097DE0", Offset = "0x2097DE0", VA = "0x2097DE0")]
			public static extern void ArLightEstimate_getColorCorrection(IntPtr sessionHandle, IntPtr lightEstimateHandle, ref UnityEngine.Color colorCorrection);

			[PreserveSig]
			[Token(Token = "0x60029E0")]
			[Address(RVA = "0x2098100", Offset = "0x2098100", VA = "0x2098100")]
			public static extern void ArLightEstimate_getEnvironmentalHdrMainLightDirection(IntPtr sessionHandle, IntPtr lightEstimateHandle, float[] direction);

			[PreserveSig]
			[Token(Token = "0x60029E1")]
			[Address(RVA = "0x2098060", Offset = "0x2098060", VA = "0x2098060")]
			public static extern void ArLightEstimate_getEnvironmentalHdrMainLightIntensity(IntPtr sessionHandle, IntPtr lightEstimateHandle, float[] color);

			[PreserveSig]
			[Token(Token = "0x60029E2")]
			[Address(RVA = "0x2098328", Offset = "0x2098328", VA = "0x2098328")]
			public static extern void ArLightEstimate_getEnvironmentalHdrAmbientSphericalHarmonics(IntPtr session, IntPtr light_estimate, float[] out_coefficients_27);

			[PreserveSig]
			[Token(Token = "0x60029E3")]
			[Address(RVA = "0x20988E8", Offset = "0x20988E8", VA = "0x20988E8")]
			public static extern void ArLightEstimate_acquireEnvironmentalHdrCubemap(IntPtr session, IntPtr light_estimate, ref IntPtr out_textures_6);

			[PreserveSig]
			[Token(Token = "0x60029E4")]
			[Address(RVA = "0x2098850", Offset = "0x2098850", VA = "0x2098850")]
			public static extern void ArLightEstimate_getTimestamp(IntPtr session, IntPtr light_estimate, ref long timestamp);

			[PreserveSig]
			[Token(Token = "0x60029E5")]
			[Address(RVA = "0x2098574", Offset = "0x2098574", VA = "0x2098574")]
			public static extern void ARCoreRenderingUtils_SetTextureDataType(ApiTextureDataType texture_data_type, bool create_gl_texture);

			[PreserveSig]
			[Token(Token = "0x60029E6")]
			[Address(RVA = "0x2098604", Offset = "0x2098604", VA = "0x2098604")]
			public static extern void ARCoreRenderingUtils_SetActiveColorSpace(bool is_gamma_space);

			[PreserveSig]
			[Token(Token = "0x60029E7")]
			[Address(RVA = "0x209874C", Offset = "0x209874C", VA = "0x209874C")]
			public static extern void ARCoreRenderingUtils_SetARCoreLightEstimation(IntPtr session, IntPtr cubemap_image);

			[PreserveSig]
			[Token(Token = "0x60029E8")]
			[Address(RVA = "0x2098684", Offset = "0x2098684", VA = "0x2098684")]
			public static extern void ARCoreRenderingUtils_GetCubemapTexture(ref int out_texture_id, ref int out_width_height);

			[PreserveSig]
			[Token(Token = "0x60029E9")]
			[Address(RVA = "0x2098980", Offset = "0x2098980", VA = "0x2098980")]
			public static extern void ARCoreRenderingUtils_GetCubemapRawColors(int face_index, UnityEngine.Color[] out_pixel_colors);

			[PreserveSig]
			[Token(Token = "0x60029EA")]
			[Address(RVA = "0x20987DC", Offset = "0x20987DC", VA = "0x20987DC")]
			public static extern IntPtr ARCoreRenderingUtils_GetRenderEventFunc();
		}

		[Token(Token = "0x4001776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly float[] k_SHConstants;

		[Token(Token = "0x4001777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private NativeSession m_NativeSession;

		[Token(Token = "0x4001778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float[] m_TempVector;

		[Token(Token = "0x4001779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float[] m_TempColor;

		[Token(Token = "0x400177A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float[] m_TempSHCoefficients;

		[Token(Token = "0x400177B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Cubemap m_HDRCubemap;

		[Token(Token = "0x400177C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private long m_CubemapTimestamp;

		[Token(Token = "0x400177D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int m_CubemapTextureId;

		[Token(Token = "0x400177E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool m_PluginInitialized;

		[Token(Token = "0x60019C9")]
		[Address(RVA = "0x2097964", Offset = "0x2097964", VA = "0x2097964")]
		public LightEstimateApi(NativeSession nativeSession)
		{
		}

		[Token(Token = "0x60019CA")]
		[Address(RVA = "0x2097A60", Offset = "0x2097A60", VA = "0x2097A60")]
		public IntPtr Create()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60019CB")]
		[Address(RVA = "0x2097B58", Offset = "0x2097B58", VA = "0x2097B58")]
		public void Destroy(IntPtr lightEstimateHandle)
		{
		}

		[Token(Token = "0x60019CC")]
		[Address(RVA = "0x2097BE0", Offset = "0x2097BE0", VA = "0x2097BE0")]
		public LightEstimateState GetState(IntPtr lightEstimateHandle)
		{
			return default(LightEstimateState);
		}

		[Token(Token = "0x60019CD")]
		[Address(RVA = "0x2097CB4", Offset = "0x2097CB4", VA = "0x2097CB4")]
		public float GetPixelIntensity(IntPtr lightEstimateHandle)
		{
			return default(float);
		}

		[Token(Token = "0x60019CE")]
		[Address(RVA = "0x2097D84", Offset = "0x2097D84", VA = "0x2097D84")]
		public UnityEngine.Color GetColorCorrection(IntPtr lightEstimateHandle)
		{
			return default(UnityEngine.Color);
		}

		[Token(Token = "0x60019CF")]
		[Address(RVA = "0x2097E78", Offset = "0x2097E78", VA = "0x2097E78")]
		public void GetMainDirectionalLight(IntPtr sessionHandle, IntPtr lightEstimateHandle, out Quaternion lightRotation, out UnityEngine.Color lightColor)
		{
		}

		[Token(Token = "0x60019D0")]
		[Address(RVA = "0x20981A0", Offset = "0x20981A0", VA = "0x20981A0")]
		public void GetAmbientSH(IntPtr sessionHandle, IntPtr lightEstimateHandle, float[,] outSHCoefficients)
		{
		}

		[Token(Token = "0x60019D1")]
		[Address(RVA = "0x20983C8", Offset = "0x20983C8", VA = "0x20983C8")]
		public Cubemap GetReflectionCubemap(IntPtr sessionHandle, IntPtr lightEstimateHandle)
		{
			return null;
		}

		[Token(Token = "0x60019D2")]
		[Address(RVA = "0x2098714", Offset = "0x2098714", VA = "0x2098714")]
		public long GetTimestamp(IntPtr sessionHandle, IntPtr lightEstimateHandle)
		{
			return default(long);
		}
	}
	[Token(Token = "0x200037D")]
	internal class PlaneApi
	{
		[Token(Token = "0x20006E9")]
		private struct ExternApi
		{
			[PreserveSig]
			[Token(Token = "0x60029EB")]
			[Address(RVA = "0x2099A48", Offset = "0x2099A48", VA = "0x2099A48")]
			public static extern void ArPlane_getCenterPose(IntPtr sessionHandle, IntPtr planeHandle, IntPtr poseHandle);

			[PreserveSig]
			[Token(Token = "0x60029EC")]
			[Address(RVA = "0x209A108", Offset = "0x209A108", VA = "0x209A108")]
			public static extern void ArPlane_acquireSubsumedBy(IntPtr sessionHandle, IntPtr planeHandle, ref IntPtr subsumerHandle);

			[PreserveSig]
			[Token(Token = "0x60029ED")]
			[Address(RVA = "0x2099B18", Offset = "0x2099B18", VA = "0x2099B18")]
			public static extern void ArPlane_getExtentX(IntPtr sessionHandle, IntPtr planeHandle, ref float extentX);

			[PreserveSig]
			[Token(Token = "0x60029EE")]
			[Address(RVA = "0x2099BE8", Offset = "0x2099BE8", VA = "0x2099BE8")]
			public static extern void ArPlane_getExtentZ(IntPtr sessionHandle, IntPtr planeHandle, ref float extentZ);

			[PreserveSig]
			[Token(Token = "0x60029EF")]
			[Address(RVA = "0x209A1E4", Offset = "0x209A1E4", VA = "0x209A1E4")]
			public static extern void ArPlane_getType(IntPtr sessionHandle, IntPtr planeHandle, ref ApiPlaneType planeType);

			[PreserveSig]
			[Token(Token = "0x60029F0")]
			[Address(RVA = "0x2099F14", Offset = "0x2099F14", VA = "0x2099F14")]
			public static extern void ArPlane_getPolygonSize(IntPtr sessionHandle, IntPtr planeHandle, ref int polygonSize);

			[PreserveSig]
			[Token(Token = "0x60029F1")]
			[Address(RVA = "0x2099FAC", Offset = "0x2099FAC", VA = "0x2099FAC")]
			public static extern void ArPlane_getPolygon(IntPtr sessionHandle, IntPtr planeHandle, IntPtr polygonXZ);

			[PreserveSig]
			[Token(Token = "0x60029F2")]
			[Address(RVA = "0x209A3D4", Offset = "0x209A3D4", VA = "0x209A3D4")]
			public static extern void ArPlane_isPoseInExtents(IntPtr sessionHandle, IntPtr planeHandle, IntPtr poseHandle, ref int isPoseInExtents);

			[PreserveSig]
			[Token(Token = "0x60029F3")]
			[Address(RVA = "0x209A530", Offset = "0x209A530", VA = "0x209A530")]
			public static extern void ArPlane_isPoseInPolygon(IntPtr sessionHandle, IntPtr planeHandle, IntPtr poseHandle, ref int isPoseInPolygon);
		}

		[Token(Token = "0x400177F")]
		private const int k_MaxPolygonSize = 1024;

		[Token(Token = "0x4001780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private NativeSession m_NativeSession;

		[Token(Token = "0x4001781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float[] m_TmpPoints;

		[Token(Token = "0x4001782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GCHandle m_TmpPointsHandle;

		[Token(Token = "0x60019D3")]
		[Address(RVA = "0x2099138", Offset = "0x2099138", VA = "0x2099138")]
		public PlaneApi(NativeSession nativeSession)
		{
		}

		[Token(Token = "0x60019D4")]
		[Address(RVA = "0x2099948", Offset = "0x2099948", VA = "0x2099948", Slot = "1")]
		~PlaneApi()
		{
		}

		[Token(Token = "0x60019D5")]
		[Address(RVA = "0x20999B8", Offset = "0x20999B8", VA = "0x20999B8")]
		public Pose GetCenterPose(IntPtr planeHandle)
		{
			return default(Pose);
		}

		[Token(Token = "0x60019D6")]
		[Address(RVA = "0x2099AE0", Offset = "0x2099AE0", VA = "0x2099AE0")]
		public float GetExtentX(IntPtr planeHandle)
		{
			return default(float);
		}

		[Token(Token = "0x60019D7")]
		[Address(RVA = "0x2099BB0", Offset = "0x2099BB0", VA = "0x2099BB0")]
		public float GetExtentZ(IntPtr planeHandle)
		{
			return default(float);
		}

		[Token(Token = "0x60019D8")]
		[Address(RVA = "0x2099C80", Offset = "0x2099C80", VA = "0x2099C80")]
		public void GetPolygon(IntPtr planeHandle, List<Vector3> points)
		{
		}

		[Token(Token = "0x60019D9")]
		[Address(RVA = "0x209A044", Offset = "0x209A044", VA = "0x209A044")]
		public DetectedPlane GetSubsumedBy(IntPtr planeHandle)
		{
			return null;
		}

		[Token(Token = "0x60019DA")]
		[Address(RVA = "0x209A1A0", Offset = "0x209A1A0", VA = "0x209A1A0")]
		public DetectedPlaneType GetPlaneType(IntPtr planeHandle)
		{
			return default(DetectedPlaneType);
		}

		[Token(Token = "0x60019DB")]
		[Address(RVA = "0x209A27C", Offset = "0x209A27C", VA = "0x209A27C")]
		public bool IsPoseInExtents(IntPtr planeHandle, Pose pose)
		{
			return default(bool);
		}

		[Token(Token = "0x60019DC")]
		[Address(RVA = "0x2094410", Offset = "0x2094410", VA = "0x2094410")]
		public bool IsPoseInExtents(IntPtr planeHandle, IntPtr poseHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x60019DD")]
		[Address(RVA = "0x209A47C", Offset = "0x209A47C", VA = "0x209A47C")]
		public bool IsPoseInPolygon(IntPtr planeHandle, Pose pose)
		{
			return default(bool);
		}

		[Token(Token = "0x60019DE")]
		[Address(RVA = "0x20943D0", Offset = "0x20943D0", VA = "0x20943D0")]
		public bool IsPoseInPolygon(IntPtr planeHandle, IntPtr poseHandle)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200037E")]
	internal class PointApi
	{
		[Token(Token = "0x20006EA")]
		private struct ExternApi
		{
			[PreserveSig]
			[Token(Token = "0x60029F4")]
			[Address(RVA = "0x209A668", Offset = "0x209A668", VA = "0x209A668")]
			public static extern void ArPoint_getPose(IntPtr session, IntPtr point, IntPtr out_pose);

			[PreserveSig]
			[Token(Token = "0x60029F5")]
			[Address(RVA = "0x209A740", Offset = "0x209A740", VA = "0x209A740")]
			public static extern void ArPoint_getOrientationMode(IntPtr session, IntPtr point, ref ApiFeaturePointOrientationMode orientationMode);
		}

		[Token(Token = "0x4001783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private NativeSession m_NativeSession;

		[Token(Token = "0x60019DF")]
		[Address(RVA = "0x20991D8", Offset = "0x20991D8", VA = "0x20991D8")]
		public PointApi(NativeSession nativeSession)
		{
		}

		[Token(Token = "0x60019E0")]
		[Address(RVA = "0x209A5D8", Offset = "0x209A5D8", VA = "0x209A5D8")]
		public Pose GetPose(IntPtr pointHandle)
		{
			return default(Pose);
		}

		[Token(Token = "0x60019E1")]
		[Address(RVA = "0x209A700", Offset = "0x209A700", VA = "0x209A700")]
		public FeaturePointOrientationMode GetOrientationMode(IntPtr pointHandle)
		{
			return default(FeaturePointOrientationMode);
		}
	}
	[Token(Token = "0x200037F")]
	internal class PointCloudApi
	{
		[Token(Token = "0x20006EB")]
		private struct ExternApi
		{
			[PreserveSig]
			[Token(Token = "0x60029F6")]
			[Address(RVA = "0x209A810", Offset = "0x209A810", VA = "0x209A810")]
			public static extern void ArPointCloud_getTimestamp(IntPtr session, IntPtr pointCloudHandle, ref long timestamp);

			[PreserveSig]
			[Token(Token = "0x60029F7")]
			[Address(RVA = "0x209A8E0", Offset = "0x209A8E0", VA = "0x209A8E0")]
			public static extern void ArPointCloud_getNumberOfPoints(IntPtr session, IntPtr pointCloudHandle, ref int pointCount);

			[PreserveSig]
			[Token(Token = "0x60029F8")]
			[Address(RVA = "0x209AB4C", Offset = "0x209AB4C", VA = "0x209AB4C")]
			public static extern void ArPointCloud_getData(IntPtr session, IntPtr pointCloudHandle, ref IntPtr pointCloudData);

			[PreserveSig]
			[Token(Token = "0x60029F9")]
			[Address(RVA = "0x209AD88", Offset = "0x209AD88", VA = "0x209AD88")]
			public static extern void ArPointCloud_getPointIds(IntPtr session, IntPtr pointCloudHandle, ref IntPtr pointIds);

			[PreserveSig]
			[Token(Token = "0x60029FA")]
			[Address(RVA = "0x209AD08", Offset = "0x209AD08", VA = "0x209AD08")]
			public static extern void ArPointCloud_release(IntPtr pointCloudHandle);
		}

		[Token(Token = "0x4001784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private NativeSession m_NativeSession;

		[Token(Token = "0x4001785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float[] m_CachedVector;

		[Token(Token = "0x60019E2")]
		[Address(RVA = "0x209920C", Offset = "0x209920C", VA = "0x209920C")]
		public PointCloudApi(NativeSession nativeSession)
		{
		}

		[Token(Token = "0x60019E3")]
		[Address(RVA = "0x209A7D8", Offset = "0x209A7D8", VA = "0x209A7D8")]
		public long GetTimestamp(IntPtr pointCloudHandle)
		{
			return default(long);
		}

		[Token(Token = "0x60019E4")]
		[Address(RVA = "0x209A8A8", Offset = "0x209A8A8", VA = "0x209A8A8")]
		public int GetNumberOfPoints(IntPtr pointCloudHandle)
		{
			return default(int);
		}

		[Token(Token = "0x60019E5")]
		[Address(RVA = "0x209A978", Offset = "0x209A978", VA = "0x209A978")]
		public PointCloudPoint GetPoint(IntPtr pointCloudHandle, int index)
		{
			return default(PointCloudPoint);
		}

		[Token(Token = "0x60019E6")]
		[Address(RVA = "0x209AD00", Offset = "0x209AD00", VA = "0x209AD00")]
		public void Release(IntPtr pointCloudHandle)
		{
		}

		[Token(Token = "0x60019E7")]
		[Address(RVA = "0x209ABE4", Offset = "0x209ABE4", VA = "0x209ABE4")]
		private int _GetPointId(IntPtr pointCloudHandle, int index)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000380")]
	internal class PoseApi
	{
		[Token(Token = "0x20006EC")]
		private struct ExternApi
		{
			[PreserveSig]
			[Token(Token = "0x60029FB")]
			[Address(RVA = "0x209AE2C", Offset = "0x209AE2C", VA = "0x209AE2C")]
			public static extern void ArPose_create(IntPtr session, ref ApiPoseData rawPose, ref IntPtr poseHandle);

			[PreserveSig]
			[Token(Token = "0x60029FC")]
			[Address(RVA = "0x209AEC4", Offset = "0x209AEC4", VA = "0x209AEC4")]
			public static extern void ArPose_destroy(IntPtr poseHandle);

			[PreserveSig]
			[Token(Token = "0x60029FD")]
			[Address(RVA = "0x209AF44", Offset = "0x209AF44", VA = "0x209AF44")]
			public static extern void ArPose_getPoseRaw(IntPtr sessionHandle, IntPtr poseHandle, ref ApiPoseData rawPose);
		}

		[Token(Token = "0x4001786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private NativeSession m_NativeSession;

		[Token(Token = "0x60019E8")]
		[Address(RVA = "0x2099294", Offset = "0x2099294", VA = "0x2099294")]
		public PoseApi(NativeSession nativeSession)
		{
		}

		[Token(Token = "0x60019E9")]
		[Address(RVA = "0x2094074", Offset = "0x2094074", VA = "0x2094074")]
		public IntPtr Create()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60019EA")]
		[Address(RVA = "0x209A330", Offset = "0x209A330", VA = "0x209A330")]
		public IntPtr Create(Pose pose)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60019EB")]
		[Address(RVA = "0x20943C8", Offset = "0x20943C8", VA = "0x20943C8")]
		public void Destroy(IntPtr nativePose)
		{
		}

		[Token(Token = "0x60019EC")]
		[Address(RVA = "0x209419C", Offset = "0x209419C", VA = "0x209419C")]
		public Pose ExtractPoseValue(IntPtr poseHandle)
		{
			return default(Pose);
		}
	}
	[Token(Token = "0x2000381")]
	internal class SessionApi
	{
		[Token(Token = "0x20006ED")]
		private struct ExternApi
		{
			[PreserveSig]
			[Token(Token = "0x60029FE")]
			[Address(RVA = "0x209B2D8", Offset = "0x209B2D8", VA = "0x209B2D8")]
			public static extern int ArSession_configure(IntPtr sessionHandle, IntPtr config);

			[PreserveSig]
			[Token(Token = "0x60029FF")]
			[Address(RVA = "0x209B568", Offset = "0x209B568", VA = "0x209B568")]
			public static extern void ArSession_getSupportedCameraConfigsWithFilter(IntPtr sessionHandle, IntPtr cameraConfigFilterHandle, IntPtr cameraConfigListHandle);

			[PreserveSig]
			[Token(Token = "0x6002A00")]
			[Address(RVA = "0x209B74C", Offset = "0x209B74C", VA = "0x209B74C")]
			public static extern ApiArStatus ArSession_setCameraConfig(IntPtr sessionHandle, IntPtr cameraConfigHandle);

			[PreserveSig]
			[Token(Token = "0x6002A01")]
			[Address(RVA = "0x209B8F8", Offset = "0x209B8F8", VA = "0x209B8F8")]
			public static extern void ArSession_getCameraConfig(IntPtr sessionHandle, IntPtr cameraConfigHandle);

			[PreserveSig]
			[Token(Token = "0x6002A02")]
			[Address(RVA = "0x209BB50", Offset = "0x209BB50", VA = "0x209BB50")]
			public static extern void ArSession_getAllTrackables(IntPtr sessionHandle, ApiTrackableType filterType, IntPtr trackableList);

			[PreserveSig]
			[Token(Token = "0x6002A03")]
			[Address(RVA = "0x209BCE4", Offset = "0x209BCE4", VA = "0x209BCE4")]
			public static extern void ArSession_setDisplayGeometry(IntPtr sessionHandle, int rotation, int width, int height);

			[PreserveSig]
			[Token(Token = "0x6002A04")]
			[Address(RVA = "0x209BE9C", Offset = "0x209BE9C", VA = "0x209BE9C")]
			public static extern int ArSession_acquireNewAnchor(IntPtr sessionHandle, IntPtr poseHandle, ref IntPtr anchorHandle);

			[PreserveSig]
			[Token(Token = "0x6002A05")]
			[Address(RVA = "0x209AFDC", Offset = "0x209AFDC", VA = "0x209AFDC")]
			public static extern void ArSession_reportEngineType(IntPtr sessionHandle, string engineType, string engineVersion);

			[PreserveSig]
			[Token(Token = "0x6002A06")]
			[Address(RVA = "0x209BFA0", Offset = "0x209BFA0", VA = "0x209BFA0")]
			public static extern ApiArStatus ArSession_hostAndAcquireNewCloudAnchor(IntPtr sessionHandle, IntPtr anchorHandle, ref IntPtr cloudAnchorHandle);

			[PreserveSig]
			[Token(Token = "0x6002A07")]
			[Address(RVA = "0x209C0A4", Offset = "0x209C0A4", VA = "0x209C0A4")]
			public static extern ApiArStatus ArSession_resolveAndAcquireNewCloudAnchor(IntPtr sessionHandle, string cloudAnchorId, ref IntPtr cloudAnchorHandle);
		}

		[Token(Token = "0x4001787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private NativeSession m_NativeSession;

		[Token(Token = "0x60019ED")]
		[Address(RVA = "0x20992C8", Offset = "0x20992C8", VA = "0x20992C8")]
		public SessionApi(NativeSession nativeSession)
		{
		}

		[Token(Token = "0x60019EE")]
		[Address(RVA = "0x2099398", Offset = "0x2099398", VA = "0x2099398")]
		public void ReportEngineType()
		{
		}

		[Token(Token = "0x60019EF")]
		[Address(RVA = "0x209B09C", Offset = "0x209B09C", VA = "0x209B09C")]
		public bool SetConfiguration(ARCoreSessionConfig sessionConfig)
		{
			return default(bool);
		}

		[Token(Token = "0x60019F0")]
		[Address(RVA = "0x209B370", Offset = "0x209B370", VA = "0x209B370")]
		public void GetSupportedCameraConfigurationsWithFilter(ARCoreCameraConfigFilter cameraConfigFilter, IntPtr cameraConfigListHandle, List<IntPtr> supportedCameraConfigHandles, List<CameraConfig> supportedCameraConfigs, DeviceCameraDirection cameraFacingDirection)
		{
		}

		[Token(Token = "0x60019F1")]
		[Address(RVA = "0x209B730", Offset = "0x209B730", VA = "0x209B730")]
		public ApiArStatus SetCameraConfig(IntPtr cameraConfigHandle)
		{
			return default(ApiArStatus);
		}

		[Token(Token = "0x60019F2")]
		[Address(RVA = "0x209B7DC", Offset = "0x209B7DC", VA = "0x209B7DC")]
		public CameraConfig GetCameraConfig()
		{
			return default(CameraConfig);
		}

		[Token(Token = "0x60019F3")]
		[Address(RVA = "0x209B988", Offset = "0x209B988", VA = "0x209B988")]
		public void GetAllTrackables(List<Trackable> trackables)
		{
		}

		[Token(Token = "0x60019F4")]
		[Address(RVA = "0x209BCA8", Offset = "0x209BCA8", VA = "0x209BCA8")]
		public void SetDisplayGeometry(ScreenOrientation orientation, int width, int height)
		{
		}

		[Token(Token = "0x60019F5")]
		[Address(RVA = "0x209BD8C", Offset = "0x209BD8C", VA = "0x209BD8C")]
		public GoogleARCore.Anchor CreateAnchor(Pose pose)
		{
			return null;
		}

		[Token(Token = "0x60019F6")]
		[Address(RVA = "0x209BF34", Offset = "0x209BF34", VA = "0x209BF34")]
		public ApiArStatus CreateCloudAnchor(IntPtr platformAnchorHandle, out IntPtr cloudAnchorHandle)
		{
			return default(ApiArStatus);
		}

		[Token(Token = "0x60019F7")]
		[Address(RVA = "0x209C038", Offset = "0x209C038", VA = "0x209C038")]
		public ApiArStatus ResolveCloudAnchor(string cloudAnchorId, out IntPtr cloudAnchorHandle)
		{
			return default(ApiArStatus);
		}

		[Token(Token = "0x60019F8")]
		[Address(RVA = "0x209B600", Offset = "0x209B600", VA = "0x209B600")]
		private CameraConfig _CreateCameraConfig(IntPtr cameraConfigHandle)
		{
			return default(CameraConfig);
		}
	}
	[Token(Token = "0x2000382")]
	internal class SessionConfigApi
	{
		[Token(Token = "0x20006EE")]
		private struct ExternApi
		{
			[PreserveSig]
			[Token(Token = "0x6002A08")]
			[Address(RVA = "0x209C580", Offset = "0x209C580", VA = "0x209C580")]
			public static extern void ArConfig_create(IntPtr session, ref IntPtr out_config);

			[PreserveSig]
			[Token(Token = "0x6002A09")]
			[Address(RVA = "0x209C610", Offset = "0x209C610", VA = "0x209C610")]
			public static extern void ArConfig_destroy(IntPtr config);

			[PreserveSig]
			[Token(Token = "0x6002A0A")]
			[Address(RVA = "0x209C158", Offset = "0x209C158", VA = "0x209C158")]
			public static extern void ArConfig_setLightEstimationMode(IntPtr session, IntPtr config, ApiLightEstimationMode light_estimation_mode);

			[PreserveSig]
			[Token(Token = "0x6002A0B")]
			[Address(RVA = "0x209C1F0", Offset = "0x209C1F0", VA = "0x209C1F0")]
			public static extern void ArConfig_setPlaneFindingMode(IntPtr session, IntPtr config, ApiPlaneFindingMode plane_finding_mode);

			[PreserveSig]
			[Token(Token = "0x6002A0C")]
			[Address(RVA = "0x209C288", Offset = "0x209C288", VA = "0x209C288")]
			public static extern void ArConfig_setUpdateMode(IntPtr session, IntPtr config, ApiUpdateMode update_mode);

			[PreserveSig]
			[Token(Token = "0x6002A0D")]
			[Address(RVA = "0x209C320", Offset = "0x209C320", VA = "0x209C320")]
			public static extern void ArConfig_setCloudAnchorMode(IntPtr session, IntPtr config, ApiCloudAnchorMode cloud_anchor_mode);

			[PreserveSig]
			[Token(Token = "0x6002A0E")]
			[Address(RVA = "0x209C3B8", Offset = "0x209C3B8", VA = "0x209C3B8")]
			public static extern void ArConfig_setAugmentedImageDatabase(IntPtr session, IntPtr config, IntPtr augmented_image_database);

			[PreserveSig]
			[Token(Token = "0x6002A0F")]
			[Address(RVA = "0x209C450", Offset = "0x209C450", VA = "0x209C450")]
			public static extern void ArConfig_setAugmentedFaceMode(IntPtr session, IntPtr config, ApiAugmentedFaceMode augmented_face_mode);

			[PreserveSig]
			[Token(Token = "0x6002A10")]
			[Address(RVA = "0x209C4E8", Offset = "0x209C4E8", VA = "0x209C4E8")]
			public static extern void ArConfig_setFocusMode(IntPtr session, IntPtr config, ApiCameraFocusMode focus_mode);
		}

		[Token(Token = "0x4001788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private NativeSession m_NativeSession;

		[Token(Token = "0x60019F9")]
		[Address(RVA = "0x20992FC", Offset = "0x20992FC", VA = "0x20992FC")]
		public SessionConfigApi(NativeSession nativeSession)
		{
		}

		[Token(Token = "0x60019FA")]
		[Address(RVA = "0x209B198", Offset = "0x209B198", VA = "0x209B198")]
		public static void UpdateApiConfigWithARCoreSessionConfig(IntPtr sessionHandle, IntPtr configHandle, ARCoreSessionConfig sessionConfig)
		{
		}

		[Token(Token = "0x60019FB")]
		[Address(RVA = "0x209B130", Offset = "0x209B130", VA = "0x209B130")]
		public IntPtr Create()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60019FC")]
		[Address(RVA = "0x209B368", Offset = "0x209B368", VA = "0x209B368")]
		public void Destroy(IntPtr configHandle)
		{
		}
	}
	[Token(Token = "0x2000383")]
	internal class TrackableApi
	{
		[Token(Token = "0x20006EF")]
		private struct ExternApi
		{
			[PreserveSig]
			[Token(Token = "0x6002A11")]
			[Address(RVA = "0x209C934", Offset = "0x209C934", VA = "0x209C934")]
			public static extern void ArTrackable_getType(IntPtr sessionHandle, IntPtr trackableHandle, ref ApiTrackableType trackableType);

			[PreserveSig]
			[Token(Token = "0x6002A12")]
			[Address(RVA = "0x209CA10", Offset = "0x209CA10", VA = "0x209CA10")]
			public static extern void ArTrackable_getTrackingState(IntPtr sessionHandle, IntPtr trackableHandle, ref ApiTrackingState trackingState);

			[PreserveSig]
			[Token(Token = "0x6002A13")]
			[Address(RVA = "0x209CB90", Offset = "0x209CB90", VA = "0x209CB90")]
			public static extern int ArTrackable_acquireNewAnchor(IntPtr sessionHandle, IntPtr trackableHandle, IntPtr poseHandle, ref IntPtr anchorHandle);

			[PreserveSig]
			[Token(Token = "0x6002A14")]
			[Address(RVA = "0x209CC38", Offset = "0x209CC38", VA = "0x209CC38")]
			public static extern void ArTrackable_release(IntPtr trackableHandle);

			[PreserveSig]
			[Token(Token = "0x6002A15")]
			[Address(RVA = "0x209CF38", Offset = "0x209CF38", VA = "0x209CF38")]
			public static extern void ArTrackable_getAnchors(IntPtr sessionHandle, IntPtr trackableHandle, IntPtr outputListHandle);
		}

		[Token(Token = "0x4001789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private NativeSession m_NativeSession;

		[Token(Token = "0x60019FD")]
		[Address(RVA = "0x2099330", Offset = "0x2099330", VA = "0x2099330")]
		public TrackableApi(NativeSession nativeSession)
		{
		}

		[Token(Token = "0x60019FE")]
		[Address(RVA = "0x2094450", Offset = "0x2094450", VA = "0x2094450")]
		public ApiTrackableType GetType(IntPtr trackableHandle)
		{
			return default(ApiTrackableType);
		}

		[Token(Token = "0x60019FF")]
		[Address(RVA = "0x209C9CC", Offset = "0x209C9CC", VA = "0x209C9CC")]
		public TrackingState GetTrackingState(IntPtr trackableHandle)
		{
			return default(TrackingState);
		}

		[Token(Token = "0x6001A00")]
		[Address(RVA = "0x209CAA8", Offset = "0x209CAA8", VA = "0x209CAA8")]
		public bool AcquireNewAnchor(IntPtr trackableHandle, Pose pose, out IntPtr anchorHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A01")]
		[Address(RVA = "0x20943C0", Offset = "0x20943C0", VA = "0x20943C0")]
		public void Release(IntPtr trackableHandle)
		{
		}

		[Token(Token = "0x6001A02")]
		[Address(RVA = "0x209CCB8", Offset = "0x209CCB8", VA = "0x209CCB8")]
		public void GetAnchors(IntPtr trackableHandle, List<GoogleARCore.Anchor> anchors)
		{
		}
	}
	[Token(Token = "0x2000384")]
	internal class TrackableListApi
	{
		[Token(Token = "0x20006F0")]
		private struct ExternApi
		{
			[PreserveSig]
			[Token(Token = "0x6002A16")]
			[Address(RVA = "0x209CFD0", Offset = "0x209CFD0", VA = "0x209CFD0")]
			public static extern void ArTrackableList_create(IntPtr sessionHandle, ref IntPtr trackableListHandle);

			[PreserveSig]
			[Token(Token = "0x6002A17")]
			[Address(RVA = "0x209D060", Offset = "0x209D060", VA = "0x209D060")]
			public static extern void ArTrackableList_destroy(IntPtr trackableListHandle);

			[PreserveSig]
			[Token(Token = "0x6002A18")]
			[Address(RVA = "0x209D0E0", Offset = "0x209D0E0", VA = "0x209D0E0")]
			public static extern void ArTrackableList_getSize(IntPtr sessionHandle, IntPtr trackableListHandle, ref int outSize);

			[PreserveSig]
			[Token(Token = "0x6002A19")]
			[Address(RVA = "0x209D178", Offset = "0x209D178", VA = "0x209D178")]
			public static extern void ArTrackableList_acquireItem(IntPtr sessionHandle, IntPtr trackableListHandle, int index, ref IntPtr outTrackable);
		}

		[Token(Token = "0x400178A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private NativeSession m_NativeSession;

		[Token(Token = "0x6001A03")]
		[Address(RVA = "0x2099364", Offset = "0x2099364", VA = "0x2099364")]
		public TrackableListApi(NativeSession nativeSession)
		{
		}

		[Token(Token = "0x6001A04")]
		[Address(RVA = "0x209BAE8", Offset = "0x209BAE8", VA = "0x209BAE8")]
		public IntPtr Create()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001A05")]
		[Address(RVA = "0x209BCA0", Offset = "0x209BCA0", VA = "0x209BCA0")]
		public void Destroy(IntPtr listHandle)
		{
		}

		[Token(Token = "0x6001A06")]
		[Address(RVA = "0x209BBE8", Offset = "0x209BBE8", VA = "0x209BBE8")]
		public int GetCount(IntPtr listHandle)
		{
			return default(int);
		}

		[Token(Token = "0x6001A07")]
		[Address(RVA = "0x209BC20", Offset = "0x209BC20", VA = "0x209BC20")]
		public IntPtr AcquireItem(IntPtr listHandle, int index)
		{
			return default(IntPtr);
		}
	}
	[Token(Token = "0x2000385")]
	public class WaitForTaskCompletionYieldInstruction<T> : CustomYieldInstruction
	{
		[Token(Token = "0x400178B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private AsyncTask<T> m_Task;

		[Token(Token = "0x170002BF")]
		public override bool keepWaiting
		{
			[Token(Token = "0x6001A09")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A08")]
		public WaitForTaskCompletionYieldInstruction(AsyncTask<T> task)
		{
		}
	}
	[Token(Token = "0x2000386")]
	internal abstract class ExperimentBase
	{
		[Token(Token = "0x6001A0A")]
		[Address(RVA = "0x2AC9CB8", Offset = "0x2AC9CB8", VA = "0x2AC9CB8", Slot = "4")]
		public virtual int GetExperimentalFeatureFlags()
		{
			return default(int);
		}

		[Token(Token = "0x6001A0B")]
		[Address(RVA = "0x2AC9CC0", Offset = "0x2AC9CC0", VA = "0x2AC9CC0", Slot = "5")]
		public virtual void OnUpdateSessionFeatures()
		{
		}

		[Token(Token = "0x6001A0C")]
		[Address(RVA = "0x2AC9CC4", Offset = "0x2AC9CC4", VA = "0x2AC9CC4", Slot = "6")]
		public virtual void OnEarlyUpdate()
		{
		}

		[Token(Token = "0x6001A0D")]
		[Address(RVA = "0x2AC9CC8", Offset = "0x2AC9CC8", VA = "0x2AC9CC8", Slot = "7")]
		public virtual bool IsConfigurationDirty()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A0E")]
		[Address(RVA = "0x2AC9CD0", Offset = "0x2AC9CD0", VA = "0x2AC9CD0", Slot = "8")]
		public virtual void OnSetConfiguration(IntPtr sessionHandle, IntPtr configHandle)
		{
		}

		[Token(Token = "0x6001A0F")]
		[Address(RVA = "0x2AC9CD4", Offset = "0x2AC9CD4", VA = "0x2AC9CD4", Slot = "9")]
		public virtual bool IsManagingTrackableType(int trackableType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A10")]
		[Address(RVA = "0x2AC9CDC", Offset = "0x2AC9CDC", VA = "0x2AC9CDC", Slot = "10")]
		public virtual TrackableHitFlags GetTrackableHitFlags(int trackableType)
		{
			return default(TrackableHitFlags);
		}

		[Token(Token = "0x6001A11")]
		[Address(RVA = "0x2AC9CE4", Offset = "0x2AC9CE4", VA = "0x2AC9CE4", Slot = "11")]
		public virtual Trackable TrackableFactory(int trackableType, IntPtr trackableHandle)
		{
			return null;
		}

		[Token(Token = "0x6001A12")]
		[Address(RVA = "0x2AC9CEC", Offset = "0x2AC9CEC", VA = "0x2AC9CEC")]
		protected ExperimentBase()
		{
		}
	}
	[Token(Token = "0x2000387")]
	internal class ExperimentManager
	{
		[Token(Token = "0x400178C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ExperimentManager s_Instance;

		[Token(Token = "0x400178D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<ExperimentBase> m_Experiments;

		[Token(Token = "0x400178E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1475858", Offset = "0x1475858")]
		private bool <IsSessionExperimental>k__BackingField;

		[Token(Token = "0x170002C0")]
		public static ExperimentManager Instance
		{
			[Token(Token = "0x6001A14")]
			[Address(RVA = "0x2ABE5C0", Offset = "0x2ABE5C0", VA = "0x2ABE5C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C1")]
		public bool IsSessionExperimental
		{
			[Token(Token = "0x6001A15")]
			[Address(RVA = "0x2ACA184", Offset = "0x2ACA184", VA = "0x2ACA184")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14857AC", Offset = "0x14857AC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A16")]
			[Address(RVA = "0x2ACA18C", Offset = "0x2ACA18C", VA = "0x2ACA18C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14857BC", Offset = "0x14857BC")]
			private set
			{
			}
		}

		[Token(Token = "0x170002C2")]
		public bool IsConfigurationDirty
		{
			[Token(Token = "0x6001A17")]
			[Address(RVA = "0x2AC0594", Offset = "0x2AC0594", VA = "0x2AC0594")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A13")]
		[Address(RVA = "0x2AC9CF4", Offset = "0x2AC9CF4", VA = "0x2AC9CF4")]
		public ExperimentManager()
		{
		}

		[Token(Token = "0x6001A18")]
		[Address(RVA = "0x2ABE644", Offset = "0x2ABE644", VA = "0x2ABE644")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001A19")]
		[Address(RVA = "0x2ACA198", Offset = "0x2ACA198", VA = "0x2ACA198")]
		public bool IsManagingTrackableType(int trackableType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A1A")]
		[Address(RVA = "0x2ACA2D8", Offset = "0x2ACA2D8", VA = "0x2ACA2D8")]
		public TrackableHitFlags GetTrackableHitFlags(int trackableType)
		{
			return default(TrackableHitFlags);
		}

		[Token(Token = "0x6001A1B")]
		[Address(RVA = "0x2ACA314", Offset = "0x2ACA314", VA = "0x2ACA314")]
		public Trackable TrackableFactory(int trackableType, IntPtr trackableHandle)
		{
			return null;
		}

		[Token(Token = "0x6001A1C")]
		[Address(RVA = "0x2ACA358", Offset = "0x2ACA358", VA = "0x2ACA358")]
		public void OnUpdateSessionFeatures()
		{
		}

		[Token(Token = "0x6001A1D")]
		[Address(RVA = "0x2ACA454", Offset = "0x2ACA454", VA = "0x2ACA454")]
		private void _OnEarlyUpdate()
		{
		}

		[Token(Token = "0x6001A1E")]
		[Address(RVA = "0x2ACA550", Offset = "0x2ACA550", VA = "0x2ACA550")]
		private void _SetConfiguration(IntPtr sessionHandle, IntPtr configHandle)
		{
		}

		[Token(Token = "0x6001A1F")]
		[Address(RVA = "0x2ACA1B4", Offset = "0x2ACA1B4", VA = "0x2ACA1B4")]
		private ExperimentBase _GetTrackableTypeManager(int trackableType)
		{
			return null;
		}
	}
	[Token(Token = "0x2000388")]
	internal class ARCoreAndroidLifecycleManager : ILifecycleManager
	{
		[Token(Token = "0x20006F1")]
		private struct ExternApi
		{
			[PreserveSig]
			[Token(Token = "0x6002A1A")]
			[Address(RVA = "0x2AC02D0", Offset = "0x2AC02D0", VA = "0x2AC02D0")]
			public static extern int ArCoreUnity_getBackgroundTextureId();

			[PreserveSig]
			[Token(Token = "0x6002A1B")]
			[Address(RVA = "0x2AC0A14", Offset = "0x2AC0A14", VA = "0x2AC0A14")]
			public static extern void ArPresto_setDisplayGeometry(AndroidNativeHelper.AndroidSurfaceRotation rotation, int width, int height);

			[PreserveSig]
			[Token(Token = "0x6002A1C")]
			[Address(RVA = "0x2ABF900", Offset = "0x2ABF900", VA = "0x2ABF900")]
			public static extern void ArPresto_getSession(ref IntPtr sessionHandle);

			[PreserveSig]
			[Token(Token = "0x6002A1D")]
			[Address(RVA = "0x2AC03C4", Offset = "0x2AC03C4", VA = "0x2AC03C4")]
			public static extern void ArPresto_setDeviceCameraDirection(ApiPrestoDeviceCameraDirection cameraDirection);

			[PreserveSig]
			[Token(Token = "0x6002A1E")]
			[Address(RVA = "0x2AC0344", Offset = "0x2AC0344", VA = "0x2AC0344")]
			public static extern void ArPresto_setEnabled(bool isEnabled);

			[PreserveSig]
			[Token(Token = "0x6002A1F")]
			[Address(RVA = "0x2AC007C", Offset = "0x2AC007C", VA = "0x2AC007C")]
			public static extern void ArPresto_getFrame(ref IntPtr frameHandle);

			[PreserveSig]
			[Token(Token = "0x6002A20")]
			[Address(RVA = "0x2ABFDD4", Offset = "0x2ABFDD4", VA = "0x2ABFDD4")]
			public static extern void ArPresto_getStatus(ref ApiPrestoStatus prestoStatus);

			[PreserveSig]
			[Token(Token = "0x6002A21")]
			[Address(RVA = "0x2ABFD64", Offset = "0x2ABFD64", VA = "0x2ABFD64")]
			public static extern void ArPresto_update();

			[PreserveSig]
			[Token(Token = "0x6002A22")]
			[Address(RVA = "0x2AC06B0", Offset = "0x2AC06B0", VA = "0x2AC06B0")]
			public static extern void ArPresto_setConfigurationDirty();

			[PreserveSig]
			[Token(Token = "0x6002A23")]
			[Address(RVA = "0x2ABEF80", Offset = "0x2ABEF80", VA = "0x2ABEF80")]
			public static extern void ArPresto_reset();
		}

		[Token(Token = "0x400178F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ARCoreAndroidLifecycleManager s_Instance;

		[Token(Token = "0x4001790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr m_CachedSessionHandle;

		[Token(Token = "0x4001791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private IntPtr m_CachedFrameHandle;

		[Token(Token = "0x4001792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<IntPtr, NativeSession> m_NativeSessions;

		[Token(Token = "0x4001793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private DeviceCameraDirection? m_CachedCameraDirection;

		[Token(Token = "0x4001794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ARCoreSessionConfig m_CachedConfig;

		[Token(Token = "0x4001795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ScreenOrientation? m_CachedScreenOrientation;

		[Token(Token = "0x4001796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool? m_DesiredSessionState;

		[Token(Token = "0x4001797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		private bool m_DisabledSessionOnErrorState;

		[Token(Token = "0x4001798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
		private bool m_HaveDisableToEnableTransition;

		[Token(Token = "0x4001799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private AndroidNativeHelper.AndroidSurfaceRotation m_CachedDisplayRotation;

		[Token(Token = "0x400179A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<IntPtr> m_TempCameraConfigHandles;

		[Token(Token = "0x400179B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<CameraConfig> m_TempCameraConfigs;

		[Token(Token = "0x40017A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14758B8", Offset = "0x14758B8")]
		private SessionStatus <SessionStatus>k__BackingField;

		[Token(Token = "0x40017A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14758C8", Offset = "0x14758C8")]
		private LostTrackingReason <LostTrackingReason>k__BackingField;

		[Token(Token = "0x40017A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14758D8", Offset = "0x14758D8")]
		private ARCoreSession <SessionComponent>k__BackingField;

		[Token(Token = "0x40017A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14758E8", Offset = "0x14758E8")]
		private bool <IsSessionChangedThisFrame>k__BackingField;

		[Token(Token = "0x40017A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14758F8", Offset = "0x14758F8")]
		private Texture2D <BackgroundTexture>k__BackingField;

		[Token(Token = "0x170002C3")]
		public static ARCoreAndroidLifecycleManager Instance
		{
			[Token(Token = "0x6001A2A")]
			[Address(RVA = "0x2AB9A24", Offset = "0x2AB9A24", VA = "0x2AB9A24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C4")]
		public SessionStatus SessionStatus
		{
			[Token(Token = "0x6001A2B")]
			[Address(RVA = "0x2ABE8B8", Offset = "0x2ABE8B8", VA = "0x2ABE8B8", Slot = "14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148586C", Offset = "0x148586C")]
			get
			{
				return default(SessionStatus);
			}
			[Token(Token = "0x6001A2C")]
			[Address(RVA = "0x2ABE8C0", Offset = "0x2ABE8C0", VA = "0x2ABE8C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148587C", Offset = "0x148587C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002C5")]
		public LostTrackingReason LostTrackingReason
		{
			[Token(Token = "0x6001A2D")]
			[Address(RVA = "0x2ABE8C8", Offset = "0x2ABE8C8", VA = "0x2ABE8C8", Slot = "15")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148588C", Offset = "0x148588C")]
			get
			{
				return default(LostTrackingReason);
			}
			[Token(Token = "0x6001A2E")]
			[Address(RVA = "0x2ABE8D0", Offset = "0x2ABE8D0", VA = "0x2ABE8D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148589C", Offset = "0x148589C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002C6")]
		public ARCoreSession SessionComponent
		{
			[Token(Token = "0x6001A2F")]
			[Address(RVA = "0x2ABE8D8", Offset = "0x2ABE8D8", VA = "0x2ABE8D8", Slot = "16")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14858AC", Offset = "0x14858AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A30")]
			[Address(RVA = "0x2ABE8E0", Offset = "0x2ABE8E0", VA = "0x2ABE8E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14858BC", Offset = "0x14858BC")]
			private set
			{
			}
		}

		[Token(Token = "0x170002C7")]
		public NativeSession NativeSession
		{
			[Token(Token = "0x6001A31")]
			[Address(RVA = "0x2ABE8E8", Offset = "0x2ABE8E8", VA = "0x2ABE8E8", Slot = "17")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C8")]
		public bool IsSessionChangedThisFrame
		{
			[Token(Token = "0x6001A32")]
			[Address(RVA = "0x2ABEA24", Offset = "0x2ABEA24", VA = "0x2ABEA24", Slot = "18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14858CC", Offset = "0x14858CC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A33")]
			[Address(RVA = "0x2ABEA2C", Offset = "0x2ABEA2C", VA = "0x2ABEA2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14858DC", Offset = "0x14858DC")]
			private set
			{
			}
		}

		[Token(Token = "0x170002C9")]
		public Texture2D BackgroundTexture
		{
			[Token(Token = "0x6001A34")]
			[Address(RVA = "0x2ABEA38", Offset = "0x2ABEA38", VA = "0x2ABEA38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14858EC", Offset = "0x14858EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A35")]
			[Address(RVA = "0x2ABEA40", Offset = "0x2ABEA40", VA = "0x2ABEA40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14858FC", Offset = "0x14858FC")]
			private set
			{
			}
		}

		[Token(Token = "0x14000049")]
		public event Action UpdateSessionFeatures
		{
			[Token(Token = "0x6001A20")]
			[Address(RVA = "0x2ABDA0C", Offset = "0x2ABDA0C", VA = "0x2ABDA0C", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14857CC", Offset = "0x14857CC")]
			add
			{
			}
			[Token(Token = "0x6001A21")]
			[Address(RVA = "0x2ABDAB0", Offset = "0x2ABDAB0", VA = "0x2ABDAB0", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14857DC", Offset = "0x14857DC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004A")]
		public event Action EarlyUpdate
		{
			[Token(Token = "0x6001A22")]
			[Address(RVA = "0x2ABDB54", Offset = "0x2ABDB54", VA = "0x2ABDB54", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14857EC", Offset = "0x14857EC")]
			add
			{
			}
			[Token(Token = "0x6001A23")]
			[Address(RVA = "0x2ABDBF8", Offset = "0x2ABDBF8", VA = "0x2ABDBF8", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14857FC", Offset = "0x14857FC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004B")]
		public event Action<bool> OnSessionSetEnabled
		{
			[Token(Token = "0x6001A24")]
			[Address(RVA = "0x2ABDC9C", Offset = "0x2ABDC9C", VA = "0x2ABDC9C", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148580C", Offset = "0x148580C")]
			add
			{
			}
			[Token(Token = "0x6001A25")]
			[Address(RVA = "0x2ABDD40", Offset = "0x2ABDD40", VA = "0x2ABDD40", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148581C", Offset = "0x148581C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004C")]
		public event Action<IntPtr, IntPtr> OnSetConfiguration
		{
			[Token(Token = "0x6001A26")]
			[Address(RVA = "0x2ABDDE4", Offset = "0x2ABDDE4", VA = "0x2ABDDE4", Slot = "10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148582C", Offset = "0x148582C")]
			add
			{
			}
			[Token(Token = "0x6001A27")]
			[Address(RVA = "0x2ABDE88", Offset = "0x2ABDE88", VA = "0x2ABDE88", Slot = "11")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148583C", Offset = "0x148583C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004D")]
		public event Action OnResetInstance
		{
			[Token(Token = "0x6001A28")]
			[Address(RVA = "0x2ABDF2C", Offset = "0x2ABDF2C", VA = "0x2ABDF2C", Slot = "12")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148584C", Offset = "0x148584C")]
			add
			{
			}
			[Token(Token = "0x6001A29")]
			[Address(RVA = "0x2ABDFD0", Offset = "0x2ABDFD0", VA = "0x2ABDFD0", Slot = "13")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148585C", Offset = "0x148585C")]
			remove
			{
			}
		}

		[Token(Token = "0x6001A36")]
		[Address(RVA = "0x2ABEA48", Offset = "0x2ABEA48", VA = "0x2ABEA48", Slot = "19")]
		public AsyncTask<ApkAvailabilityStatus> CheckApkAvailability()
		{
			return null;
		}

		[Token(Token = "0x6001A37")]
		[Address(RVA = "0x2ABEB68", Offset = "0x2ABEB68", VA = "0x2ABEB68", Slot = "20")]
		public AsyncTask<ApkInstallationStatus> RequestApkInstallation(bool userRequested)
		{
			return null;
		}

		[Token(Token = "0x6001A38")]
		[Address(RVA = "0x2ABECA8", Offset = "0x2ABECA8", VA = "0x2ABECA8", Slot = "21")]
		public void CreateSession(ARCoreSession sessionComponent)
		{
		}

		[Token(Token = "0x6001A39")]
		[Address(RVA = "0x2ABEDDC", Offset = "0x2ABEDDC", VA = "0x2ABEDDC", Slot = "22")]
		public void EnableSession()
		{
		}

		[Token(Token = "0x6001A3A")]
		[Address(RVA = "0x2ABEE74", Offset = "0x2ABEE74", VA = "0x2ABEE74", Slot = "23")]
		public void DisableSession()
		{
		}

		[Token(Token = "0x6001A3B")]
		[Address(RVA = "0x2ABEEE0", Offset = "0x2ABEEE0", VA = "0x2ABEEE0", Slot = "24")]
		public void ResetSession()
		{
		}

		[Token(Token = "0x6001A3C")]
		[Address(RVA = "0x2ABEFF0", Offset = "0x2ABEFF0", VA = "0x2ABEFF0")]
		internal static void ResetInstance()
		{
		}

		[Token(Token = "0x6001A3D")]
		[Address(RVA = "0x2ABF0E8", Offset = "0x2ABF0E8", VA = "0x2ABF0E8")]
		private void _OnBeforeResumeSession(IntPtr sessionHandle)
		{
		}

		[Token(Token = "0x6001A3E")]
		[Address(RVA = "0x2ABF460", Offset = "0x2ABF460", VA = "0x2ABF460")]
		private void _OnEarlyUpdate()
		{
		}

		[Token(Token = "0x6001A3F")]
		[Address(RVA = "0x2ABE184", Offset = "0x2ABE184", VA = "0x2ABE184")]
		private void _Initialize()
		{
		}

		[Token(Token = "0x6001A40")]
		[Address(RVA = "0x2AC00FC", Offset = "0x2AC00FC", VA = "0x2AC00FC")]
		private void _UpdateTextureIfNeeded()
		{
		}

		[Token(Token = "0x6001A41")]
		[Address(RVA = "0x2ABF848", Offset = "0x2ABF848", VA = "0x2ABF848")]
		private void _SetSessionEnabled(bool sessionEnabled)
		{
		}

		[Token(Token = "0x6001A42")]
		[Address(RVA = "0x2ABF980", Offset = "0x2ABF980", VA = "0x2ABF980")]
		private bool _SetCameraDirection(DeviceCameraDirection cameraDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A43")]
		[Address(RVA = "0x2AC0444", Offset = "0x2AC0444", VA = "0x2AC0444")]
		private void _SetSessionConfiguration(IntPtr sessionHandle, IntPtr configHandle)
		{
		}

		[Token(Token = "0x6001A44")]
		[Address(RVA = "0x2ABFB30", Offset = "0x2ABFB30", VA = "0x2ABFB30")]
		private void _UpdateConfiguration(ARCoreSessionConfig config)
		{
		}

		[Token(Token = "0x6001A45")]
		[Address(RVA = "0x2ABFC94", Offset = "0x2ABFC94", VA = "0x2ABFC94")]
		private void _UpdateDisplayGeometry()
		{
		}

		[Token(Token = "0x6001A46")]
		[Address(RVA = "0x2ABE954", Offset = "0x2ABE954", VA = "0x2ABE954")]
		private NativeSession _GetNativeSession(IntPtr sessionHandle)
		{
			return null;
		}

		[Token(Token = "0x6001A47")]
		[Address(RVA = "0x2ABEF0C", Offset = "0x2ABEF0C", VA = "0x2ABEF0C")]
		private void _FireOnSessionSetEnabled(bool isEnabled)
		{
		}

		[Token(Token = "0x6001A48")]
		[Address(RVA = "0x2ABE074", Offset = "0x2ABE074", VA = "0x2ABE074")]
		public ARCoreAndroidLifecycleManager()
		{
		}
	}
	[Token(Token = "0x2000389")]
	internal class ARCoreIOSLifecycleManager : ILifecycleManager
	{
		[Token(Token = "0x20006F2")]
		private struct ExternApi
		{
			[Token(Token = "0x6002A24")]
			[Address(RVA = "0x2AC15C0", Offset = "0x2AC15C0", VA = "0x2AC15C0")]
			public static IntPtr ARCoreARKitIntegration_castUnitySessionToARKitSession(IntPtr sessionToCast)
			{
				return default(IntPtr);
			}

			[Token(Token = "0x6002A25")]
			[Address(RVA = "0x2AC1600", Offset = "0x2AC1600", VA = "0x2AC1600")]
			public static IntPtr ARCoreARKitIntegration_getCurrentFrame(IntPtr arkitSessionHandle)
			{
				return default(IntPtr);
			}

			[Token(Token = "0x6002A26")]
			[Address(RVA = "0x2AC1640", Offset = "0x2AC1640", VA = "0x2AC1640")]
			public static ApiArStatus ArSession_create(string apiKey, string bundleIdentifier, ref IntPtr sessionHandle)
			{
				return default(ApiArStatus);
			}

			[Token(Token = "0x6002A27")]
			[Address(RVA = "0x2AC1504", Offset = "0x2AC1504", VA = "0x2AC1504")]
			public static void ArSession_destroy(IntPtr session)
			{
			}

			[Token(Token = "0x6002A28")]
			[Address(RVA = "0x2AC1648", Offset = "0x2AC1648", VA = "0x2AC1648")]
			public static ApiArStatus ArSession_updateAndAcquireArFrame(IntPtr sessionHandle, IntPtr arkitFrameHandle, ref IntPtr arFrame)
			{
				return default(ApiArStatus);
			}
		}

		[Token(Token = "0x40017A6")]
		private const string k_CloudServicesApiKeyPath = "RuntimeSettings/CloudServicesApiKey";

		[Token(Token = "0x40017A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ARCoreIOSLifecycleManager s_Instance;

		[Token(Token = "0x40017A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr m_SessionHandle;

		[Token(Token = "0x40017A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private IntPtr m_FrameHandle;

		[Token(Token = "0x40017AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string m_CloudServicesApiKey;

		[Token(Token = "0x40017AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_SessionEnabled;

		[Token(Token = "0x40017AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IntPtr m_RealArKitSessionHandle;

		[Token(Token = "0x40017B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1475958", Offset = "0x1475958")]
		private SessionStatus <SessionStatus>k__BackingField;

		[Token(Token = "0x40017B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1475968", Offset = "0x1475968")]
		private LostTrackingReason <LostTrackingReason>k__BackingField;

		[Token(Token = "0x40017B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1475978", Offset = "0x1475978")]
		private ARCoreSession <SessionComponent>k__BackingField;

		[Token(Token = "0x40017B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1475988", Offset = "0x1475988")]
		private NativeSession <NativeSession>k__BackingField;

		[Token(Token = "0x40017B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1475998", Offset = "0x1475998")]
		private bool <IsSessionChangedThisFrame>k__BackingField;

		[Token(Token = "0x170002CA")]
		public static ARCoreIOSLifecycleManager Instance
		{
			[Token(Token = "0x6001A54")]
			[Address(RVA = "0x2AC1114", Offset = "0x2AC1114", VA = "0x2AC1114")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CB")]
		public SessionStatus SessionStatus
		{
			[Token(Token = "0x6001A55")]
			[Address(RVA = "0x2AC1298", Offset = "0x2AC1298", VA = "0x2AC1298", Slot = "14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14859AC", Offset = "0x14859AC")]
			get
			{
				return default(SessionStatus);
			}
			[Token(Token = "0x6001A56")]
			[Address(RVA = "0x2AC12A0", Offset = "0x2AC12A0", VA = "0x2AC12A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14859BC", Offset = "0x14859BC")]
			private set
			{
			}
		}

		[Token(Token = "0x170002CC")]
		public LostTrackingReason LostTrackingReason
		{
			[Token(Token = "0x6001A57")]
			[Address(RVA = "0x2AC12A8", Offset = "0x2AC12A8", VA = "0x2AC12A8", Slot = "15")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14859CC", Offset = "0x14859CC")]
			get
			{
				return default(LostTrackingReason);
			}
			[Token(Token = "0x6001A58")]
			[Address(RVA = "0x2AC12B0", Offset = "0x2AC12B0", VA = "0x2AC12B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14859DC", Offset = "0x14859DC")]
			private set
			{
			}
		}

		[Token(Token = "0x170002CD")]
		public ARCoreSession SessionComponent
		{
			[Token(Token = "0x6001A59")]
			[Address(RVA = "0x2AC12B8", Offset = "0x2AC12B8", VA = "0x2AC12B8", Slot = "16")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14859EC", Offset = "0x14859EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A5A")]
			[Address(RVA = "0x2AC12C0", Offset = "0x2AC12C0", VA = "0x2AC12C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14859FC", Offset = "0x14859FC")]
			private set
			{
			}
		}

		[Token(Token = "0x170002CE")]
		public NativeSession NativeSession
		{
			[Token(Token = "0x6001A5B")]
			[Address(RVA = "0x2AC12C8", Offset = "0x2AC12C8", VA = "0x2AC12C8", Slot = "17")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1485A0C", Offset = "0x1485A0C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A5C")]
			[Address(RVA = "0x2AC12D0", Offset = "0x2AC12D0", VA = "0x2AC12D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1485A1C", Offset = "0x1485A1C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002CF")]
		public bool IsSessionChangedThisFrame
		{
			[Token(Token = "0x6001A5D")]
			[Address(RVA = "0x2AC12D8", Offset = "0x2AC12D8", VA = "0x2AC12D8", Slot = "18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1485A2C", Offset = "0x1485A2C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A5E")]
			[Address(RVA = "0x2AC12E0", Offset = "0x2AC12E0", VA = "0x2AC12E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1485A3C", Offset = "0x1485A3C")]
			private set
			{
			}
		}

		[Token(Token = "0x1400004E")]
		public event Action UpdateSessionFeatures
		{
			[Token(Token = "0x6001A4A")]
			[Address(RVA = "0x2AC0AAC", Offset = "0x2AC0AAC", VA = "0x2AC0AAC", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148590C", Offset = "0x148590C")]
			add
			{
			}
			[Token(Token = "0x6001A4B")]
			[Address(RVA = "0x2AC0B50", Offset = "0x2AC0B50", VA = "0x2AC0B50", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148591C", Offset = "0x148591C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004F")]
		public event Action EarlyUpdate
		{
			[Token(Token = "0x6001A4C")]
			[Address(RVA = "0x2AC0BF4", Offset = "0x2AC0BF4", VA = "0x2AC0BF4", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148592C", Offset = "0x148592C")]
			add
			{
			}
			[Token(Token = "0x6001A4D")]
			[Address(RVA = "0x2AC0C98", Offset = "0x2AC0C98", VA = "0x2AC0C98", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148593C", Offset = "0x148593C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000050")]
		public event Action<bool> OnSessionSetEnabled
		{
			[Token(Token = "0x6001A4E")]
			[Address(RVA = "0x2AC0D3C", Offset = "0x2AC0D3C", VA = "0x2AC0D3C", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148594C", Offset = "0x148594C")]
			add
			{
			}
			[Token(Token = "0x6001A4F")]
			[Address(RVA = "0x2AC0DE0", Offset = "0x2AC0DE0", VA = "0x2AC0DE0", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148595C", Offset = "0x148595C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000051")]
		public event Action<IntPtr, IntPtr> OnSetConfiguration
		{
			[Token(Token = "0x6001A50")]
			[Address(RVA = "0x2AC0E84", Offset = "0x2AC0E84", VA = "0x2AC0E84", Slot = "10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148596C", Offset = "0x148596C")]
			add
			{
			}
			[Token(Token = "0x6001A51")]
			[Address(RVA = "0x2AC0F28", Offset = "0x2AC0F28", VA = "0x2AC0F28", Slot = "11")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148597C", Offset = "0x148597C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000052")]
		public event Action OnResetInstance
		{
			[Token(Token = "0x6001A52")]
			[Address(RVA = "0x2AC0FCC", Offset = "0x2AC0FCC", VA = "0x2AC0FCC", Slot = "12")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148598C", Offset = "0x148598C")]
			add
			{
			}
			[Token(Token = "0x6001A53")]
			[Address(RVA = "0x2AC1070", Offset = "0x2AC1070", VA = "0x2AC1070", Slot = "13")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148599C", Offset = "0x148599C")]
			remove
			{
			}
		}

		[Token(Token = "0x6001A5F")]
		[Address(RVA = "0x2AC12EC", Offset = "0x2AC12EC", VA = "0x2AC12EC", Slot = "19")]
		public AsyncTask<ApkAvailabilityStatus> CheckApkAvailability()
		{
			return null;
		}

		[Token(Token = "0x6001A60")]
		[Address(RVA = "0x2AC1354", Offset = "0x2AC1354", VA = "0x2AC1354", Slot = "20")]
		public AsyncTask<ApkInstallationStatus> RequestApkInstallation(bool userRequested)
		{
			return null;
		}

		[Token(Token = "0x6001A61")]
		[Address(RVA = "0x2AC13BC", Offset = "0x2AC13BC", VA = "0x2AC13BC", Slot = "21")]
		public void CreateSession(ARCoreSession sessionComponent)
		{
		}

		[Token(Token = "0x6001A62")]
		[Address(RVA = "0x2AC1428", Offset = "0x2AC1428", VA = "0x2AC1428", Slot = "22")]
		public void EnableSession()
		{
		}

		[Token(Token = "0x6001A63")]
		[Address(RVA = "0x2AC143C", Offset = "0x2AC143C", VA = "0x2AC143C", Slot = "23")]
		public void DisableSession()
		{
		}

		[Token(Token = "0x6001A64")]
		[Address(RVA = "0x2AC144C", Offset = "0x2AC144C", VA = "0x2AC144C", Slot = "24")]
		public void ResetSession()
		{
		}

		[Token(Token = "0x6001A65")]
		[Address(RVA = "0x2AC1508", Offset = "0x2AC1508", VA = "0x2AC1508")]
		internal static void ResetInstance()
		{
		}

		[Token(Token = "0x6001A66")]
		[Address(RVA = "0x2AC1280", Offset = "0x2AC1280", VA = "0x2AC1280")]
		private void _Initialize()
		{
		}

		[Token(Token = "0x6001A67")]
		[Address(RVA = "0x2AC1580", Offset = "0x2AC1580", VA = "0x2AC1580")]
		private IntPtr _GetSessionHandleFromArkitPlugin()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001A68")]
		[Address(RVA = "0x2AC1230", Offset = "0x2AC1230", VA = "0x2AC1230")]
		public ARCoreIOSLifecycleManager()
		{
		}
	}
	[Token(Token = "0x200038A")]
	internal class ARPrestoCallbackManager
	{
		[Token(Token = "0x20006F3")]
		public delegate void EarlyUpdateCallback();

		[Token(Token = "0x20006F4")]
		private delegate void OnBeforeSetConfigurationCallback(IntPtr sessionHandle, IntPtr configHandle);

		[Token(Token = "0x20006F5")]
		private delegate void OnBeforeResumeSessionCallback(IntPtr sessionHandle);

		[Token(Token = "0x20006F6")]
		private delegate void CameraPermissionRequestProvider(CameraPermissionsResultCallback onComplete, IntPtr context);

		[Token(Token = "0x20006F7")]
		private delegate void CameraPermissionsResultCallback(bool granted, IntPtr context);

		[Token(Token = "0x20006F8")]
		private delegate void CheckApkAvailabilityResultCallback(ApiAvailability status, IntPtr context);

		[Token(Token = "0x20006F9")]
		private delegate void RequestApkInstallationResultCallback(ApiApkInstallationStatus status, IntPtr context);

		[Token(Token = "0x20006FA")]
		private delegate void SessionCreationResultCallback(IntPtr sessionHandle, IntPtr frameHandle, IntPtr context, ApiArStatus status);

		[Token(Token = "0x20006FB")]
		private struct ExternApi
		{
			[PreserveSig]
			[Token(Token = "0x6002A49")]
			[Address(RVA = "0x2AC297C", Offset = "0x2AC297C", VA = "0x2AC297C")]
			public static extern void ArCoreUnity_getJniInfo(ref IntPtr javaVM, ref IntPtr activity);

			[PreserveSig]
			[Token(Token = "0x6002A4A")]
			[Address(RVA = "0x2AC28F0", Offset = "0x2AC28F0", VA = "0x2AC28F0")]
			public static extern bool ArCoreUnity_setArPrestoInitialized(EarlyUpdateCallback onEarlyUpdate);

			[PreserveSig]
			[Token(Token = "0x6002A4B")]
			[Address(RVA = "0x2AC2A6C", Offset = "0x2AC2A6C", VA = "0x2AC2A6C")]
			public static extern void ArPresto_initialize(IntPtr javaVM, IntPtr activity, CameraPermissionRequestProvider requestCameraPermission, OnBeforeSetConfigurationCallback onBeforeSetConfiguration, OnBeforeResumeSessionCallback onBeforeResumeSession);

			[PreserveSig]
			[Token(Token = "0x6002A4C")]
			[Address(RVA = "0x2AC218C", Offset = "0x2AC218C", VA = "0x2AC218C")]
			public static extern void ArPresto_checkApkAvailability(CheckApkAvailabilityResultCallback onResult, IntPtr context);

			[PreserveSig]
			[Token(Token = "0x6002A4D")]
			[Address(RVA = "0x2AC2220", Offset = "0x2AC2220", VA = "0x2AC2220")]
			public static extern void ArPresto_requestApkInstallation(bool user_requested, RequestApkInstallationResultCallback onResult, IntPtr context);
		}

		[Token(Token = "0x20006FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A92C", Offset = "0x146A92C")]
		private sealed class <>c__DisplayClass40_0
		{
			[Token(Token = "0x400275F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CameraPermissionsResultCallback onComplete;

			[Token(Token = "0x4002760")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public IntPtr context;

			[Token(Token = "0x6002A4E")]
			[Address(RVA = "0x2AC2B3C", Offset = "0x2AC2B3C", VA = "0x2AC2B3C")]
			public <>c__DisplayClass40_0()
			{
			}

			[Token(Token = "0x6002A4F")]
			[Address(RVA = "0x2AC2B44", Offset = "0x2AC2B44", VA = "0x2AC2B44")]
			internal void <_RequestCameraPermission>b__0(AndroidPermissionsRequestResult grantResult)
			{
			}
		}

		[Token(Token = "0x40017B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ARPrestoCallbackManager s_Instance;

		[Token(Token = "0x40017B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private CheckApkAvailabilityResultCallback m_CheckApkAvailabilityResultCallback;

		[Token(Token = "0x40017B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private RequestApkInstallationResultCallback m_RequestApkInstallationResultCallback;

		[Token(Token = "0x40017BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CameraPermissionRequestProvider m_RequestCameraPermissionCallback;

		[Token(Token = "0x40017BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private EarlyUpdateCallback m_EarlyUpdateCallback;

		[Token(Token = "0x40017BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OnBeforeSetConfigurationCallback m_OnBeforeSetConfigurationCallback;

		[Token(Token = "0x40017BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OnBeforeResumeSessionCallback m_OnBeforeResumeSessionCallback;

		[Token(Token = "0x40017BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Action<ApkAvailabilityStatus>> m_PendingAvailabilityCheckCallbacks;

		[Token(Token = "0x40017BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Action<ApkInstallationStatus>> m_PendingInstallationRequestCallbacks;

		[Token(Token = "0x170002D0")]
		public static ARPrestoCallbackManager Instance
		{
			[Token(Token = "0x6001A6F")]
			[Address(RVA = "0x2ABE338", Offset = "0x2ABE338", VA = "0x2ABE338")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000053")]
		public event Action EarlyUpdate
		{
			[Token(Token = "0x6001A69")]
			[Address(RVA = "0x2ABE3D4", Offset = "0x2ABE3D4", VA = "0x2ABE3D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1485A4C", Offset = "0x1485A4C")]
			add
			{
			}
			[Token(Token = "0x6001A6A")]
			[Address(RVA = "0x2AC1C48", Offset = "0x2AC1C48", VA = "0x2AC1C48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1485A5C", Offset = "0x1485A5C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000054")]
		public event Action<IntPtr> BeforeResumeSession
		{
			[Token(Token = "0x6001A6B")]
			[Address(RVA = "0x2ABE478", Offset = "0x2ABE478", VA = "0x2ABE478")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1485A6C", Offset = "0x1485A6C")]
			add
			{
			}
			[Token(Token = "0x6001A6C")]
			[Address(RVA = "0x2AC1CEC", Offset = "0x2AC1CEC", VA = "0x2AC1CEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1485A7C", Offset = "0x1485A7C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000055")]
		public event Action<IntPtr, IntPtr> OnSetConfiguration
		{
			[Token(Token = "0x6001A6D")]
			[Address(RVA = "0x2ABE51C", Offset = "0x2ABE51C", VA = "0x2ABE51C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1485A8C", Offset = "0x1485A8C")]
			add
			{
			}
			[Token(Token = "0x6001A6E")]
			[Address(RVA = "0x2AC1D90", Offset = "0x2AC1D90", VA = "0x2AC1D90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1485A9C", Offset = "0x1485A9C")]
			remove
			{
			}
		}

		[Token(Token = "0x6001A70")]
		[Address(RVA = "0x2ABEA64", Offset = "0x2ABEA64", VA = "0x2ABEA64")]
		public AsyncTask<ApkAvailabilityStatus> CheckApkAvailability()
		{
			return null;
		}

		[Token(Token = "0x6001A71")]
		[Address(RVA = "0x2ABEB94", Offset = "0x2ABEB94", VA = "0x2ABEB94")]
		public AsyncTask<ApkInstallationStatus> RequestApkInstallation(bool userRequested)
		{
			return null;
		}

		[Token(Token = "0x6001A72")]
		[Address(RVA = "0x2AC22C0", Offset = "0x2AC22C0", VA = "0x2AC22C0")]
		internal static void ResetInstance()
		{
		}

		[Token(Token = "0x6001A73")]
		[Address(RVA = "0x2AC1A48", Offset = "0x2AC1A48", VA = "0x2AC1A48")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x1485AAC", Offset = "0x1485AAC")]
		private static void _OnCheckApkAvailabilityResultTrampoline(ApiAvailability status, IntPtr context)
		{
		}

		[Token(Token = "0x6001A74")]
		[Address(RVA = "0x2AC1A84", Offset = "0x2AC1A84", VA = "0x2AC1A84")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x1485B10", Offset = "0x1485B10")]
		private static void _OnApkInstallationResultTrampoline(ApiApkInstallationStatus status, IntPtr context)
		{
		}

		[Token(Token = "0x6001A75")]
		[Address(RVA = "0x2AC1AC0", Offset = "0x2AC1AC0", VA = "0x2AC1AC0")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x1485B74", Offset = "0x1485B74")]
		private static void _RequestCameraPermissionTrampoline(CameraPermissionsResultCallback onComplete, IntPtr context)
		{
		}

		[Token(Token = "0x6001A76")]
		[Address(RVA = "0x2AC1AF4", Offset = "0x2AC1AF4", VA = "0x2AC1AF4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x1485BD8", Offset = "0x1485BD8")]
		private static void _EarlyUpdateTrampoline()
		{
		}

		[Token(Token = "0x6001A77")]
		[Address(RVA = "0x2AC1B34", Offset = "0x2AC1B34", VA = "0x2AC1B34")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x1485C3C", Offset = "0x1485C3C")]
		private static void _BeforeSetConfigurationTrampoline(IntPtr sessionHandle, IntPtr configHandle)
		{
		}

		[Token(Token = "0x6001A78")]
		[Address(RVA = "0x2AC1BC8", Offset = "0x2AC1BC8", VA = "0x2AC1BC8")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x1485CA0", Offset = "0x1485CA0")]
		private static void _BeforeResumeSessionTrampoline(IntPtr sessionHandle)
		{
		}

		[Token(Token = "0x6001A79")]
		[Address(RVA = "0x2AC1EE4", Offset = "0x2AC1EE4", VA = "0x2AC1EE4")]
		private void _Initialize()
		{
		}

		[Token(Token = "0x6001A7A")]
		[Address(RVA = "0x2AC243C", Offset = "0x2AC243C", VA = "0x2AC243C")]
		private void _OnCheckApkAvailabilityResult(ApkAvailabilityStatus status)
		{
		}

		[Token(Token = "0x6001A7B")]
		[Address(RVA = "0x2AC26A4", Offset = "0x2AC26A4", VA = "0x2AC26A4")]
		private void _OnRequestApkInstallationResult(ApkInstallationStatus status)
		{
		}

		[Token(Token = "0x6001A7C")]
		[Address(RVA = "0x2AC27CC", Offset = "0x2AC27CC", VA = "0x2AC27CC")]
		private void _RequestCameraPermission(CameraPermissionsResultCallback onComplete, IntPtr context)
		{
		}

		[Token(Token = "0x6001A7D")]
		[Address(RVA = "0x2AC1E34", Offset = "0x2AC1E34", VA = "0x2AC1E34")]
		public ARPrestoCallbackManager()
		{
		}
	}
	[Token(Token = "0x200038B")]
	internal interface ILifecycleManager
	{
		[Token(Token = "0x170002D1")]
		SessionStatus SessionStatus
		{
			[Token(Token = "0x6001A88")]
			get;
		}

		[Token(Token = "0x170002D2")]
		LostTrackingReason LostTrackingReason
		{
			[Token(Token = "0x6001A89")]
			get;
		}

		[Token(Token = "0x170002D3")]
		ARCoreSession SessionComponent
		{
			[Token(Token = "0x6001A8A")]
			get;
		}

		[Token(Token = "0x170002D4")]
		NativeSession NativeSession
		{
			[Token(Token = "0x6001A8B")]
			get;
		}

		[Token(Token = "0x170002D5")]
		bool IsSessionChangedThisFrame
		{
			[Token(Token = "0x6001A8C")]
			get;
		}

		[Token(Token = "0x14000056")]
		event Action UpdateSessionFeatures;

		[Token(Token = "0x14000057")]
		event Action EarlyUpdate;

		[Token(Token = "0x14000058")]
		event Action<bool> OnSessionSetEnabled;

		[Token(Token = "0x14000059")]
		event Action<IntPtr, IntPtr> OnSetConfiguration;

		[Token(Token = "0x1400005A")]
		event Action OnResetInstance;

		[Token(Token = "0x6001A8D")]
		AsyncTask<ApkAvailabilityStatus> CheckApkAvailability();

		[Token(Token = "0x6001A8E")]
		AsyncTask<ApkInstallationStatus> RequestApkInstallation(bool userRequested);

		[Token(Token = "0x6001A8F")]
		void CreateSession(ARCoreSession session);

		[Token(Token = "0x6001A90")]
		void EnableSession();

		[Token(Token = "0x6001A91")]
		void DisableSession();

		[Token(Token = "0x6001A92")]
		void ResetSession();
	}
	[Token(Token = "0x200038C")]
	internal class LifecycleManager
	{
		[Token(Token = "0x40017C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ILifecycleManager s_Instance;

		[Token(Token = "0x170002D6")]
		public static ILifecycleManager Instance
		{
			[Token(Token = "0x6001A93")]
			[Address(RVA = "0x20977EC", Offset = "0x20977EC", VA = "0x20977EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A94")]
		[Address(RVA = "0x20978A8", Offset = "0x20978A8", VA = "0x20978A8")]
		internal static void ResetInstance()
		{
		}

		[Token(Token = "0x6001A95")]
		[Address(RVA = "0x209795C", Offset = "0x209795C", VA = "0x209795C")]
		public LifecycleManager()
		{
		}
	}
	[Token(Token = "0x200038D")]
	internal class PointCloudManager
	{
		[Token(Token = "0x40017C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private NativeSession m_NativeSession;

		[Token(Token = "0x40017C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_LastReleasedPointcloudTimestamp;

		[Token(Token = "0x40017C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14759D8", Offset = "0x14759D8")]
		private IntPtr <PointCloudHandle>k__BackingField;

		[Token(Token = "0x170002D7")]
		public IntPtr PointCloudHandle
		{
			[Token(Token = "0x6001A97")]
			[Address(RVA = "0x209AE1C", Offset = "0x209AE1C", VA = "0x209AE1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1485DA4", Offset = "0x1485DA4")]
			get
			{
				return default(IntPtr);
			}
			[Token(Token = "0x6001A98")]
			[Address(RVA = "0x209AE24", Offset = "0x209AE24", VA = "0x209AE24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1485DB4", Offset = "0x1485DB4")]
			private set
			{
			}
		}

		[Token(Token = "0x170002D8")]
		public bool IsPointCloudNew
		{
			[Token(Token = "0x6001A99")]
			[Address(RVA = "0x209946C", Offset = "0x209946C", VA = "0x209946C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A96")]
		[Address(RVA = "0x2098F8C", Offset = "0x2098F8C", VA = "0x2098F8C")]
		public PointCloudManager(NativeSession session)
		{
		}

		[Token(Token = "0x6001A9A")]
		[Address(RVA = "0x2099874", Offset = "0x2099874", VA = "0x2099874")]
		public void OnUpdate()
		{
		}
	}
	[Token(Token = "0x200038E")]
	internal class TrackableManager
	{
		[Token(Token = "0x40017C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<IntPtr, Trackable> m_TrackableDict;

		[Token(Token = "0x40017C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private NativeSession m_NativeSession;

		[Token(Token = "0x40017C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_LastUpdateFrame;

		[Token(Token = "0x40017CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Trackable> m_NewTrackables;

		[Token(Token = "0x40017CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Trackable> m_AllTrackables;

		[Token(Token = "0x40017CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Trackable> m_UpdatedTrackables;

		[Token(Token = "0x40017CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private HashSet<Trackable> m_OldTrackables;

		[Token(Token = "0x6001A9B")]
		[Address(RVA = "0x2098FC0", Offset = "0x2098FC0", VA = "0x2098FC0")]
		public TrackableManager(NativeSession nativeSession)
		{
		}

		[Token(Token = "0x6001A9C")]
		[Address(RVA = "0x2099604", Offset = "0x2099604", VA = "0x2099604")]
		public Trackable TrackableFactory(IntPtr nativeHandle)
		{
			return null;
		}

		[Token(Token = "0x6001A9D")]
		public void GetTrackables<T>(List<T> trackables, TrackableQueryFilter filter) where T : Trackable
		{
		}

		[Token(Token = "0x6001A9E")]
		private void _SafeAdd<T>(Trackable trackable, List<T> trackables) where T : Trackable
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200038F")]
	public class ARCoreProjectSettings
	{
		[Token(Token = "0x40017CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Version;

		[Token(Token = "0x40017CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsARCoreRequired;

		[Token(Token = "0x40017D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool IsInstantPreviewEnabled;

		[Token(Token = "0x40017D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool IsIOSSupportEnabled;

		[Token(Token = "0x40017D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string CloudServicesApiKey;

		[Token(Token = "0x40017D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string IosCloudServicesApiKey;

		[Token(Token = "0x40017D4")]
		private const string k_ProjectSettingsPath = "ProjectSettings/ARCoreProjectSettings.json";

		[Token(Token = "0x40017D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ARCoreProjectSettings s_Instance;

		[Token(Token = "0x170002D9")]
		public static ARCoreProjectSettings Instance
		{
			[Token(Token = "0x6001A9F")]
			[Address(RVA = "0x2AB8174", Offset = "0x2AB8174", VA = "0x2AB8174")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001AA0")]
		[Address(RVA = "0x2AC1658", Offset = "0x2AC1658", VA = "0x2AC1658")]
		public void Load()
		{
		}

		[Token(Token = "0x6001AA1")]
		[Address(RVA = "0x2AC18B8", Offset = "0x2AC18B8", VA = "0x2AC18B8")]
		public void Save()
		{
		}

		[Token(Token = "0x6001AA2")]
		[Address(RVA = "0x2AC1650", Offset = "0x2AC1650", VA = "0x2AC1650")]
		public ARCoreProjectSettings()
		{
		}
	}
	[Token(Token = "0x2000390")]
	public class ARDebug
	{
		[Token(Token = "0x6001AA4")]
		[Address(RVA = "0x2AC1920", Offset = "0x2AC1920", VA = "0x2AC1920")]
		public static void LogError(object message)
		{
		}

		[Token(Token = "0x6001AA5")]
		[Address(RVA = "0x2AB65A4", Offset = "0x2AB65A4", VA = "0x2AB65A4")]
		public static void LogErrorFormat(string format, params object[] args)
		{
		}

		[Token(Token = "0x6001AA6")]
		[Address(RVA = "0x2AC1A40", Offset = "0x2AC1A40", VA = "0x2AC1A40")]
		public ARDebug()
		{
		}
	}
	[Token(Token = "0x2000391")]
	public class AndroidNativeHelper
	{
		[Token(Token = "0x20006FD")]
		public enum AndroidSurfaceRotation
		{
			[Token(Token = "0x4002762")]
			Rotation0,
			[Token(Token = "0x4002763")]
			Rotation90,
			[Token(Token = "0x4002764")]
			Rotation180,
			[Token(Token = "0x4002765")]
			Rotation270
		}

		[Token(Token = "0x6001AA7")]
		[Address(RVA = "0x2AC0720", Offset = "0x2AC0720", VA = "0x2AC0720")]
		public static AndroidSurfaceRotation GetDisplayRotation()
		{
			return default(AndroidSurfaceRotation);
		}

		[Token(Token = "0x6001AA8")]
		[Address(RVA = "0x2AC4E18", Offset = "0x2AC4E18", VA = "0x2AC4E18")]
		public AndroidNativeHelper()
		{
		}
	}
	[Token(Token = "0x2000392")]
	internal class ConversionHelper
	{
		[Token(Token = "0x40017D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Matrix4x4 k_UnityWorldToGLWorld;

		[Token(Token = "0x40017D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly Matrix4x4 k_UnityWorldToGLWorldInverse;

		[Token(Token = "0x6001AA9")]
		[Address(RVA = "0x2AC4EC0", Offset = "0x2AC4EC0", VA = "0x2AC4EC0")]
		public static void UnityPoseToApiPose(Pose unityPose, out ApiPoseData apiPose)
		{
		}

		[Token(Token = "0x6001AAA")]
		[Address(RVA = "0x2AC525C", Offset = "0x2AC525C", VA = "0x2AC525C")]
		public static void ApiPoseToUnityPose(ApiPoseData apiPose, out Pose unityPose)
		{
		}

		[Token(Token = "0x6001AAB")]
		[Address(RVA = "0x2AC89D8", Offset = "0x2AC89D8", VA = "0x2AC89D8")]
		public static void ApiVectorToUnityVector(float[] ApiVector, out Vector3 unityVector)
		{
		}

		[Token(Token = "0x6001AAC")]
		[Address(RVA = "0x2AC8B58", Offset = "0x2AC8B58", VA = "0x2AC8B58")]
		public ConversionHelper()
		{
		}
	}
	[Token(Token = "0x2000393")]
	internal class DllImportNoop : Attribute
	{
		[Token(Token = "0x6001AAE")]
		[Address(RVA = "0x2AC9CB0", Offset = "0x2AC9CB0", VA = "0x2AC9CB0")]
		public DllImportNoop(string dllName)
		{
		}
	}
	[Token(Token = "0x2000394")]
	public class HelpAttribute : PropertyAttribute
	{
		[Token(Token = "0x20006FE")]
		public enum HelpMessageType
		{
			[Token(Token = "0x4002767")]
			None,
			[Token(Token = "0x4002768")]
			Info,
			[Token(Token = "0x4002769")]
			Warning,
			[Token(Token = "0x400276A")]
			Error
		}

		[Token(Token = "0x40017D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string HelpMessage;

		[Token(Token = "0x40017D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly HelpMessageType MessageType;

		[Token(Token = "0x6001AAF")]
		[Address(RVA = "0x2093468", Offset = "0x2093468", VA = "0x2093468")]
		public HelpAttribute(string helpMessage, HelpMessageType messageType = HelpMessageType.None)
		{
		}
	}
	[Token(Token = "0x2000395")]
	internal class IntPtrEqualityComparer : IEqualityComparer<IntPtr>
	{
		[Token(Token = "0x6001AB0")]
		[Address(RVA = "0x20977AC", Offset = "0x20977AC", VA = "0x20977AC", Slot = "4")]
		public bool Equals(IntPtr intPtr1, IntPtr intPtr2)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AB1")]
		[Address(RVA = "0x20977BC", Offset = "0x20977BC", VA = "0x20977BC", Slot = "5")]
		public int GetHashCode(IntPtr intPtr)
		{
			return default(int);
		}

		[Token(Token = "0x6001AB2")]
		[Address(RVA = "0x20977E4", Offset = "0x20977E4", VA = "0x20977E4")]
		public IntPtrEqualityComparer()
		{
		}
	}
	[Token(Token = "0x2000396")]
	public class MarshalingHelper
	{
		[Token(Token = "0x6001AB3")]
		public static void AddUnmanagedStructArrayToList<T>(IntPtr arrayPtr, int arrayLength, List<T> list) where T : struct
		{
		}

		[Token(Token = "0x6001AB4")]
		public static IntPtr GetPtrToUnmanagedArrayElement<T>(IntPtr arrayPtr, int arrayIndex) where T : struct
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001AB5")]
		[Address(RVA = "0x2098A18", Offset = "0x2098A18", VA = "0x2098A18")]
		public MarshalingHelper()
		{
		}
	}
	[Token(Token = "0x2000397")]
	public static class ShellHelper
	{
		[Token(Token = "0x20006FF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A93C", Offset = "0x146A93C")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x400276B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public StringBuilder outputBuilder;

			[Token(Token = "0x400276C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public StringBuilder errorBuilder;

			[Token(Token = "0x6002A50")]
			[Address(RVA = "0x209C690", Offset = "0x209C690", VA = "0x209C690")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6002A51")]
			[Address(RVA = "0x209C734", Offset = "0x209C734", VA = "0x209C734")]
			internal void <RunCommand>b__0(object sender, DataReceivedEventArgs ef)
			{
			}

			[Token(Token = "0x6002A52")]
			[Address(RVA = "0x209C75C", Offset = "0x209C75C", VA = "0x209C75C")]
			internal void <RunCommand>b__1(object sender, DataReceivedEventArgs ef)
			{
			}
		}

		[Token(Token = "0x6001AB6")]
		[Address(RVA = "0x2095F74", Offset = "0x2095F74", VA = "0x2095F74")]
		public static void RunCommand(string fileName, string arguments, out string output, out string error)
		{
		}

		[Token(Token = "0x6001AB7")]
		[Address(RVA = "0x209686C", Offset = "0x209686C", VA = "0x209686C")]
		public static string GetAdbPath()
		{
			return null;
		}

		[Token(Token = "0x6001AB8")]
		[Address(RVA = "0x209C698", Offset = "0x209C698", VA = "0x209C698")]
		public static string GetAdbFileName()
		{
			return null;
		}
	}
	[Token(Token = "0x2000398")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x1468C40", Offset = "0x1468C40")]
	public class SuppressMemoryAllocationErrorAttribute : Attribute
	{
		[Token(Token = "0x40017DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14759E8", Offset = "0x14759E8")]
		private bool <IsWarning>k__BackingField;

		[Token(Token = "0x40017DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14759F8", Offset = "0x14759F8")]
		private string <Reason>k__BackingField;

		[Token(Token = "0x170002DA")]
		public bool IsWarning
		{
			[Token(Token = "0x6001ABA")]
			[Address(RVA = "0x209C7E8", Offset = "0x209C7E8", VA = "0x209C7E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1485DC4", Offset = "0x1485DC4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001ABB")]
			[Address(RVA = "0x209C7F0", Offset = "0x209C7F0", VA = "0x209C7F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1485DD4", Offset = "0x1485DD4")]
			set
			{
			}
		}

		[Token(Token = "0x170002DB")]
		public string Reason
		{
			[Token(Token = "0x6001ABC")]
			[Address(RVA = "0x209C7FC", Offset = "0x209C7FC", VA = "0x209C7FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1485DE4", Offset = "0x1485DE4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001ABD")]
			[Address(RVA = "0x209C804", Offset = "0x209C804", VA = "0x209C804")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1485DF4", Offset = "0x1485DF4")]
			set
			{
			}
		}

		[Token(Token = "0x6001AB9")]
		[Address(RVA = "0x209C784", Offset = "0x209C784", VA = "0x209C784")]
		public SuppressMemoryAllocationErrorAttribute()
		{
		}
	}
	[Token(Token = "0x2000399")]
	internal class ThrottledLogMessage
	{
		[Token(Token = "0x40017DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float m_LastMessageTime;

		[Token(Token = "0x40017DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float m_MinLogIntervalSeconds;

		[Token(Token = "0x6001ABE")]
		[Address(RVA = "0x209C80C", Offset = "0x209C80C", VA = "0x209C80C")]
		public ThrottledLogMessage(float minLogIntervalSeconds)
		{
		}

		[Token(Token = "0x6001ABF")]
		[Address(RVA = "0x209C848", Offset = "0x209C848", VA = "0x209C848")]
		public void ThrottledLogWarningFormat(string format, params object[] args)
		{
		}

		[Token(Token = "0x6001AC0")]
		[Address(RVA = "0x209C8F0", Offset = "0x209C8F0", VA = "0x209C8F0")]
		private bool ShouldLog()
		{
			return default(bool);
		}
	}
}
namespace GoogleARCoreInternal.CrossPlatform
{
	[Token(Token = "0x200039A")]
	internal enum ApiCloudAnchorMode
	{
		[Token(Token = "0x40017DF")]
		Disabled,
		[Token(Token = "0x40017E0")]
		Enabled
	}
	[Token(Token = "0x200039B")]
	internal enum ApiCloudAnchorState
	{
		[Token(Token = "0x40017E2")]
		None = 0,
		[Token(Token = "0x40017E3")]
		TaskInProgress = 1,
		[Token(Token = "0x40017E4")]
		Success = 2,
		[Token(Token = "0x40017E5")]
		ErrorInternal = -1,
		[Token(Token = "0x40017E6")]
		ErrorNotAuthorized = -2,
		[Token(Token = "0x40017E7")]
		ErrorResourceExhausted = -4,
		[Token(Token = "0x40017E8")]
		ErrorHostingDatasetProcessingFailed = -5,
		[Token(Token = "0x40017E9")]
		ErrorResolveingCloudIdNotFound = -6,
		[Token(Token = "0x40017EA")]
		ErrorResolvingSDKTooOld = -8,
		[Token(Token = "0x40017EB")]
		ErrorResolvingSDKTooNew = -9,
		[Token(Token = "0x40017EC")]
		ErrorHostingServiceUnavailable = -10
	}
	[Token(Token = "0x200039C")]
	internal class CloudServiceManager
	{
		[Token(Token = "0x2000700")]
		private struct ExternApi
		{
			[PreserveSig]
			[Token(Token = "0x6002A53")]
			[Address(RVA = "0x2AC917C", Offset = "0x2AC917C", VA = "0x2AC917C")]
			public static extern void ARKitAnchor_create(IntPtr poseHandle, ref IntPtr arkitAnchorHandle);

			[PreserveSig]
			[Token(Token = "0x6002A54")]
			[Address(RVA = "0x2AC920C", Offset = "0x2AC920C", VA = "0x2AC920C")]
			public static extern void ARKitAnchor_release(IntPtr arkitAnchorHandle);
		}

		[Token(Token = "0x2000701")]
		private class CloudAnchorRequest
		{
			[Token(Token = "0x400276D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool IsComplete;

			[Token(Token = "0x400276E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public NativeSession NativeSession;

			[Token(Token = "0x400276F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string CloudAnchorId;

			[Token(Token = "0x4002770")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IntPtr AnchorHandle;

			[Token(Token = "0x4002771")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action<CloudAnchorResult> OnTaskComplete;

			[Token(Token = "0x6002A55")]
			[Address(RVA = "0x2AC97AC", Offset = "0x2AC97AC", VA = "0x2AC97AC")]
			public CloudAnchorRequest()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000702")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A94C", Offset = "0x146A94C")]
		private sealed class <>c
		{
			[Token(Token = "0x4002772")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002773")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<CloudAnchorRequest> <>9__11_0;

			[Token(Token = "0x4002774")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Predicate<CloudAnchorRequest> <>9__13_0;

			[Token(Token = "0x6002A57")]
			[Address(RVA = "0x2AC9C78", Offset = "0x2AC9C78", VA = "0x2AC9C78")]
			public <>c()
			{
			}

			[Token(Token = "0x6002A58")]
			[Address(RVA = "0x2AC9C80", Offset = "0x2AC9C80", VA = "0x2AC9C80")]
			internal bool <_CancelCloudAnchorRequest>b__11_0(CloudAnchorRequest x)
			{
				return default(bool);
			}

			[Token(Token = "0x6002A59")]
			[Address(RVA = "0x2AC9C98", Offset = "0x2AC9C98", VA = "0x2AC9C98")]
			internal bool <_OnEarlyUpdate>b__13_0(CloudAnchorRequest x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40017ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static CloudServiceManager s_Instance;

		[Token(Token = "0x40017EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<CloudAnchorRequest> m_CloudAnchorRequests;

		[Token(Token = "0x170002DC")]
		public static CloudServiceManager Instance
		{
			[Token(Token = "0x6001AC1")]
			[Address(RVA = "0x2AB743C", Offset = "0x2AB743C", VA = "0x2AB743C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001AC2")]
		[Address(RVA = "0x2AB7630", Offset = "0x2AB7630", VA = "0x2AB7630")]
		public AsyncTask<CloudAnchorResult> CreateCloudAnchor(GoogleARCore.Anchor anchor)
		{
			return null;
		}

		[Token(Token = "0x6001AC3")]
		[Address(RVA = "0x2AC8FA0", Offset = "0x2AC8FA0", VA = "0x2AC8FA0")]
		public AsyncTask<CloudAnchorResult> CreateCloudAnchor(Pose pose)
		{
			return null;
		}

		[Token(Token = "0x6001AC4")]
		[Address(RVA = "0x2AB76B4", Offset = "0x2AB76B4", VA = "0x2AB76B4")]
		public AsyncTask<CloudAnchorResult> ResolveCloudAnchor(string cloudAnchorId)
		{
			return null;
		}

		[Token(Token = "0x6001AC5")]
		[Address(RVA = "0x2AB7880", Offset = "0x2AB7880", VA = "0x2AB7880")]
		public void CancelCloudAnchorAsyncTask(string cloudAnchorId)
		{
		}

		[Token(Token = "0x6001AC6")]
		[Address(RVA = "0x2AC8CC0", Offset = "0x2AC8CC0", VA = "0x2AC8CC0")]
		protected internal bool _CreateCloudAnchorResultAsyncTask(out Action<CloudAnchorResult> onComplete, out AsyncTask<CloudAnchorResult> task)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AC7")]
		[Address(RVA = "0x2AC928C", Offset = "0x2AC928C", VA = "0x2AC928C")]
		protected internal void _CreateAndTrackCloudAnchorRequest(IntPtr cloudAnchorHandle, Action<CloudAnchorResult> onComplete, [Optional] string cloudAnchorId)
		{
		}

		[Token(Token = "0x6001AC8")]
		[Address(RVA = "0x2AC8E18", Offset = "0x2AC8E18", VA = "0x2AC8E18")]
		protected internal void _CreateCloudAnchor(Action<CloudAnchorResult> onComplete, IntPtr anchorNativeHandle)
		{
		}

		[Token(Token = "0x6001AC9")]
		[Address(RVA = "0x2AC94E0", Offset = "0x2AC94E0", VA = "0x2AC94E0")]
		protected internal void _CancelCloudAnchorRequest(string cloudAnchorId)
		{
		}

		[Token(Token = "0x6001ACA")]
		[Address(RVA = "0x2AC9A0C", Offset = "0x2AC9A0C", VA = "0x2AC9A0C")]
		private static void _ResetInstance()
		{
		}

		[Token(Token = "0x6001ACB")]
		[Address(RVA = "0x2AC9A60", Offset = "0x2AC9A60", VA = "0x2AC9A60")]
		private void _OnEarlyUpdate()
		{
		}

		[Token(Token = "0x6001ACC")]
		[Address(RVA = "0x2AC97B4", Offset = "0x2AC97B4", VA = "0x2AC97B4")]
		private void _UpdateCloudAnchorRequest(CloudAnchorRequest request, bool isNewRequest = false)
		{
		}

		[Token(Token = "0x6001ACD")]
		[Address(RVA = "0x2AC8C44", Offset = "0x2AC8C44", VA = "0x2AC8C44")]
		public CloudServiceManager()
		{
		}
	}
}
namespace GoogleARCore
{
	[Token(Token = "0x200039D")]
	public static class InstantPreviewInput
	{
		[Token(Token = "0x2000703")]
		private struct NativeTouch
		{
			[Token(Token = "0x4002775")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TouchPhase Phase;

			[Token(Token = "0x4002776")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float X;

			[Token(Token = "0x4002777")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float Y;

			[Token(Token = "0x4002778")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float Pressure;

			[Token(Token = "0x4002779")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int Id;
		}

		[Token(Token = "0x2000704")]
		private struct NativeApi
		{
			[PreserveSig]
			[Token(Token = "0x6002A5A")]
			[Address(RVA = "0x2ABC8AC", Offset = "0x2ABC8AC", VA = "0x2ABC8AC")]
			public static extern void GetTouches(out IntPtr touches, out int count);

			[PreserveSig]
			[Token(Token = "0x6002A5B")]
			[Address(RVA = "0x2ABBF7C", Offset = "0x2ABBF7C", VA = "0x2ABBF7C")]
			public static extern void UnityGotTouches();
		}

		[Token(Token = "0x2000705")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A95C", Offset = "0x146A95C")]
		private sealed class <>c__DisplayClass17_0
		{
			[Token(Token = "0x400277A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Touch newTouch;

			[Token(Token = "0x6002A5C")]
			[Address(RVA = "0x2ABC93C", Offset = "0x2ABC93C", VA = "0x2ABC93C")]
			public <>c__DisplayClass17_0()
			{
			}

			[Token(Token = "0x6002A5D")]
			[Address(RVA = "0x2ABC9E8", Offset = "0x2ABC9E8", VA = "0x2ABC9E8")]
			internal bool <Update>b__0(Touch touch)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40017EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Touch[] s_Touches;

		[Token(Token = "0x40017F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<Touch> s_TouchList;

		[Token(Token = "0x170002DD")]
		public static string inputString
		{
			[Token(Token = "0x6001ACE")]
			[Address(RVA = "0x2ABBF08", Offset = "0x2ABBF08", VA = "0x2ABBF08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DE")]
		public static Touch[] touches
		{
			[Token(Token = "0x6001ACF")]
			[Address(RVA = "0x2ABBF10", Offset = "0x2ABBF10", VA = "0x2ABBF10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DF")]
		public static int touchCount
		{
			[Token(Token = "0x6001AD0")]
			[Address(RVA = "0x2ABBFEC", Offset = "0x2ABBFEC", VA = "0x2ABBFEC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002E0")]
		public static Vector3 mousePosition
		{
			[Token(Token = "0x6001AD1")]
			[Address(RVA = "0x2ABC058", Offset = "0x2ABC058", VA = "0x2ABC058")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002E1")]
		public static bool mousePresent
		{
			[Token(Token = "0x6001AD2")]
			[Address(RVA = "0x2ABC060", Offset = "0x2ABC060", VA = "0x2ABC060")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001AD3")]
		[Address(RVA = "0x2ABC068", Offset = "0x2ABC068", VA = "0x2ABC068")]
		public static Touch GetTouch(int index)
		{
			return default(Touch);
		}

		[Token(Token = "0x6001AD4")]
		[Address(RVA = "0x2ABC10C", Offset = "0x2ABC10C", VA = "0x2ABC10C")]
		public static bool GetKey(KeyCode keyCode)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AD5")]
		[Address(RVA = "0x2ABC114", Offset = "0x2ABC114", VA = "0x2ABC114")]
		public static bool GetMouseButton(int button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AD6")]
		[Address(RVA = "0x2ABC11C", Offset = "0x2ABC11C", VA = "0x2ABC11C")]
		public static bool GetMouseButtonDown(int button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AD7")]
		[Address(RVA = "0x2ABC124", Offset = "0x2ABC124", VA = "0x2ABC124")]
		public static bool GetMouseButtonUp(int button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AD8")]
		[Address(RVA = "0x2ABC12C", Offset = "0x2ABC12C", VA = "0x2ABC12C")]
		public static void Update()
		{
		}
	}
	[Token(Token = "0x200039E")]
	public class InstantPreviewTrackedPoseDriver : MonoBehaviour
	{
		[Token(Token = "0x6001ADA")]
		[Address(RVA = "0x2ABCA28", Offset = "0x2ABCA28", VA = "0x2ABCA28")]
		public void Update()
		{
		}

		[Token(Token = "0x6001ADB")]
		[Address(RVA = "0x2ABCB04", Offset = "0x2ABCB04", VA = "0x2ABCB04")]
		public InstantPreviewTrackedPoseDriver()
		{
		}
	}
	[Token(Token = "0x200039F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1468C74", Offset = "0x1468C74")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x1468C74", Offset = "0x1468C74")]
	public class ARCoreBackgroundRenderer : MonoBehaviour
	{
		[Token(Token = "0x2000706")]
		private enum BackgroundTransitionState
		{
			[Token(Token = "0x400277C")]
			BlackScreen,
			[Token(Token = "0x400277D")]
			FadingIn,
			[Token(Token = "0x400277E")]
			CameraImage
		}

		[Token(Token = "0x40017F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1475A08", Offset = "0x1475A08")]
		public Material BackgroundMaterial;

		[Token(Token = "0x40017F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly float k_BlackScreenDuration;

		[Token(Token = "0x40017F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly float k_FadingInDuration;

		[Token(Token = "0x40017F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Camera m_Camera;

		[Token(Token = "0x40017F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Texture m_TransitionImageTexture;

		[Token(Token = "0x40017F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private BackgroundTransitionState m_TransitionState;

		[Token(Token = "0x40017F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float m_CurrentStateElapsed;

		[Token(Token = "0x40017F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_SessionEnabled;

		[Token(Token = "0x40017F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool m_UserInvertCullingValue;

		[Token(Token = "0x40017FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private CameraClearFlags m_CameraClearFlags;

		[Token(Token = "0x40017FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CommandBuffer m_CommandBuffer;

		[Token(Token = "0x6001ADC")]
		[Address(RVA = "0x298DF3C", Offset = "0x298DF3C", VA = "0x298DF3C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001ADD")]
		[Address(RVA = "0x298E2CC", Offset = "0x298E2CC", VA = "0x298E2CC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001ADE")]
		[Address(RVA = "0x298E4B8", Offset = "0x298E4B8", VA = "0x298E4B8")]
		private void OnPreRender()
		{
		}

		[Token(Token = "0x6001ADF")]
		[Address(RVA = "0x298E5E8", Offset = "0x298E5E8", VA = "0x298E5E8")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x6001AE0")]
		[Address(RVA = "0x298E5F4", Offset = "0x298E5F4", VA = "0x298E5F4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AE1")]
		[Address(RVA = "0x298E638", Offset = "0x298E638", VA = "0x298E638")]
		private void _UpdateState()
		{
		}

		[Token(Token = "0x6001AE2")]
		[Address(RVA = "0x298E734", Offset = "0x298E734", VA = "0x298E734")]
		private void _UpdateShaderVariables()
		{
		}

		[Token(Token = "0x6001AE3")]
		[Address(RVA = "0x298EBF0", Offset = "0x298EBF0", VA = "0x298EBF0")]
		private void _OnSessionSetEnabled(bool sessionEnabled)
		{
		}

		[Token(Token = "0x6001AE4")]
		[Address(RVA = "0x298E9D8", Offset = "0x298E9D8", VA = "0x298E9D8")]
		private float _CosineLerp(float elapsed, float duration)
		{
			return default(float);
		}

		[Token(Token = "0x6001AE5")]
		[Address(RVA = "0x298EA70", Offset = "0x298EA70", VA = "0x298EA70")]
		private Vector4 _TextureTransform()
		{
			return default(Vector4);
		}

		[Token(Token = "0x6001AE6")]
		[Address(RVA = "0x298E12C", Offset = "0x298E12C", VA = "0x298E12C")]
		private void EnableARBackgroundRendering()
		{
		}

		[Token(Token = "0x6001AE7")]
		[Address(RVA = "0x298E3E8", Offset = "0x298E3E8", VA = "0x298E3E8")]
		private void DisableARBackgroundRendering()
		{
		}

		[Token(Token = "0x6001AE8")]
		[Address(RVA = "0x298EC2C", Offset = "0x298EC2C", VA = "0x298EC2C")]
		public ARCoreBackgroundRenderer()
		{
		}
	}
	[Token(Token = "0x20003A0")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x1468CFC", Offset = "0x1468CFC")]
	public class ARCoreCameraConfigFilter : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x2000707")]
		public class TargetCameraFramerateFilter
		{
			[Token(Token = "0x400277F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147D4E0", Offset = "0x147D4E0")]
			public bool Target30FPS;

			[Token(Token = "0x4002780")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147D518", Offset = "0x147D518")]
			public bool Target60FPS;

			[Token(Token = "0x6002A5E")]
			[Address(RVA = "0x298EDEC", Offset = "0x298EDEC", VA = "0x298EDEC")]
			public TargetCameraFramerateFilter()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000708")]
		public class DepthSensorUsageFilter
		{
			[Token(Token = "0x4002781")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147D550", Offset = "0x147D550")]
			public bool RequireAndUse;

			[Token(Token = "0x4002782")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147D588", Offset = "0x147D588")]
			public bool DoNotUse;

			[Token(Token = "0x6002A5F")]
			[Address(RVA = "0x298EDDC", Offset = "0x298EDDC", VA = "0x298EDDC")]
			public DepthSensorUsageFilter()
			{
			}
		}

		[Token(Token = "0x40017FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TargetCameraFramerateFilter TargetCameraFramerate;

		[Token(Token = "0x40017FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DepthSensorUsageFilter DepthSensorUsage;

		[Token(Token = "0x6001AEA")]
		[Address(RVA = "0x298EC9C", Offset = "0x298EC9C", VA = "0x298EC9C")]
		public void OnValidate()
		{
		}

		[Token(Token = "0x6001AEB")]
		[Address(RVA = "0x298EDD4", Offset = "0x298EDD4", VA = "0x298EDD4")]
		public ARCoreCameraConfigFilter()
		{
		}
	}
	[Token(Token = "0x20003A1")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x1468D68", Offset = "0x1468D68")]
	public class ARCoreSession : MonoBehaviour
	{
		[Token(Token = "0x2000709")]
		public delegate int OnChooseCameraConfigurationDelegate(List<CameraConfig> supportedConfigurations);

		[Token(Token = "0x40017FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1475A40", Offset = "0x1475A40")]
		public DeviceCameraDirection DeviceCameraDirection;

		[Token(Token = "0x40017FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1475A78", Offset = "0x1475A78")]
		public ARCoreSessionConfig SessionConfig;

		[Token(Token = "0x4001800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1475AB0", Offset = "0x1475AB0")]
		public ARCoreCameraConfigFilter CameraConfigFilter;

		[Token(Token = "0x4001801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OnChooseCameraConfigurationDelegate m_OnChooseCameraConfiguration;

		[Token(Token = "0x6001AEC")]
		[Address(RVA = "0x298EDFC", Offset = "0x298EDFC", VA = "0x298EDFC", Slot = "4")]
		[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x1485E04", Offset = "0x1485E04")]
		public virtual void Awake()
		{
		}

		[Token(Token = "0x6001AED")]
		[Address(RVA = "0x298EF74", Offset = "0x298EF74", VA = "0x298EF74", Slot = "5")]
		[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x1485E48", Offset = "0x1485E48")]
		public virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001AEE")]
		[Address(RVA = "0x298F02C", Offset = "0x298F02C", VA = "0x298F02C")]
		[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x1485E94", Offset = "0x1485E94")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001AEF")]
		[Address(RVA = "0x298F0E4", Offset = "0x298F0E4", VA = "0x298F0E4")]
		[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x1485ED8", Offset = "0x1485ED8")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001AF0")]
		[Address(RVA = "0x298F19C", Offset = "0x298F19C", VA = "0x298F19C")]
		public void OnValidate()
		{
		}

		[Token(Token = "0x6001AF1")]
		[Address(RVA = "0x298F780", Offset = "0x298F780", VA = "0x298F780")]
		public void RegisterChooseCameraConfigurationCallback(OnChooseCameraConfigurationDelegate onChooseCameraConfiguration)
		{
		}

		[Token(Token = "0x6001AF2")]
		[Address(RVA = "0x298F788", Offset = "0x298F788", VA = "0x298F788")]
		internal OnChooseCameraConfigurationDelegate GetChooseCameraConfigurationCallback()
		{
			return null;
		}

		[Token(Token = "0x6001AF3")]
		[Address(RVA = "0x298F790", Offset = "0x298F790", VA = "0x298F790")]
		public ARCoreSession()
		{
		}
	}
	[Token(Token = "0x20003A2")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x1468DA0", Offset = "0x1468DA0")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x1468DA0", Offset = "0x1468DA0")]
	public class ARCoreSessionConfig : ScriptableObject
	{
		[Token(Token = "0x4001802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1475AE8", Offset = "0x1475AE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1475AE8", Offset = "0x1475AE8")]
		public bool MatchCameraFramerate;

		[Token(Token = "0x4001803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1475B48", Offset = "0x1475B48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1475B48", Offset = "0x1475B48")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x1475B48", Offset = "0x1475B48")]
		public DetectedPlaneFindingMode PlaneFindingMode;

		[Token(Token = "0x4001804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1475BCC", Offset = "0x1475BCC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1475BCC", Offset = "0x1475BCC")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x1475BCC", Offset = "0x1475BCC")]
		[AttributeAttribute(Name = "HelpAttribute", RVA = "0x1475BCC", Offset = "0x1475BCC")]
		public LightEstimationMode LightEstimationMode;

		[Token(Token = "0x4001805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1475C78", Offset = "0x1475C78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1475C78", Offset = "0x1475C78")]
		public bool EnableCloudAnchor;

		[Token(Token = "0x4001806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1475CD8", Offset = "0x1475CD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1475CD8", Offset = "0x1475CD8")]
		public AugmentedImageDatabase AugmentedImageDatabase;

		[Token(Token = "0x4001807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1475D38", Offset = "0x1475D38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1475D38", Offset = "0x1475D38")]
		[AttributeAttribute(Name = "HelpAttribute", RVA = "0x1475D38", Offset = "0x1475D38")]
		public CameraFocusMode CameraFocusMode;

		[Token(Token = "0x4001808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public AugmentedFaceMode AugmentedFaceMode;

		[Token(Token = "0x170002E2")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x148A344", Offset = "0x148A344")]
		public bool EnablePlaneFinding
		{
			[Token(Token = "0x6001AF4")]
			[Address(RVA = "0x298FB98", Offset = "0x298FB98", VA = "0x298FB98")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001AF5")]
			[Address(RVA = "0x298FBA8", Offset = "0x298FBA8", VA = "0x298FBA8")]
			set
			{
			}
		}

		[Token(Token = "0x170002E3")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x148A37C", Offset = "0x148A37C")]
		public bool EnableLightEstimation
		{
			[Token(Token = "0x6001AF6")]
			[Address(RVA = "0x298FBC4", Offset = "0x298FBC4", VA = "0x298FBC4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001AF7")]
			[Address(RVA = "0x298FBD4", Offset = "0x298FBD4", VA = "0x298FBD4")]
			set
			{
			}
		}

		[Token(Token = "0x6001AF8")]
		[Address(RVA = "0x298FBF0", Offset = "0x298FBF0", VA = "0x298FBF0", Slot = "0")]
		public override bool Equals(object other)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AF9")]
		[Address(RVA = "0x298FD3C", Offset = "0x298FD3C", VA = "0x298FD3C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001AFA")]
		[Address(RVA = "0x298FD44", Offset = "0x298FD44", VA = "0x298FD44")]
		public void CopyFrom(ARCoreSessionConfig other)
		{
		}

		[Token(Token = "0x6001AFB")]
		[Address(RVA = "0x298FDAC", Offset = "0x298FDAC", VA = "0x298FDAC")]
		public void OnValidate()
		{
		}

		[Token(Token = "0x6001AFC")]
		[Address(RVA = "0x298FF20", Offset = "0x298FF20", VA = "0x298FF20")]
		public ARCoreSessionConfig()
		{
		}
	}
	[Token(Token = "0x20003A3")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x1468E30", Offset = "0x1468E30")]
	public class Anchor : MonoBehaviour
	{
		[Token(Token = "0x4001809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<IntPtr, Anchor> s_AnchorDict;

		[Token(Token = "0x400180A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TrackingState m_LastFrameTrackingState;

		[Token(Token = "0x400180B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool m_IsSessionDestroyed;

		[Token(Token = "0x400180C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1475DC0", Offset = "0x1475DC0")]
		private NativeSession <NativeSession>k__BackingField;

		[Token(Token = "0x400180D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1475DD0", Offset = "0x1475DD0")]
		private IntPtr <NativeHandle>k__BackingField;

		[Token(Token = "0x170002E4")]
		public TrackingState TrackingState
		{
			[Token(Token = "0x6001AFD")]
			[Address(RVA = "0x298FF3C", Offset = "0x298FF3C", VA = "0x298FF3C")]
			get
			{
				return default(TrackingState);
			}
		}

		[Token(Token = "0x170002E5")]
		internal NativeSession NativeSession
		{
			[Token(Token = "0x6001AFE")]
			[Address(RVA = "0x29901A0", Offset = "0x29901A0", VA = "0x29901A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1485F24", Offset = "0x1485F24")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AFF")]
			[Address(RVA = "0x29901A8", Offset = "0x29901A8", VA = "0x29901A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1485F34", Offset = "0x1485F34")]
			private set
			{
			}
		}

		[Token(Token = "0x170002E6")]
		internal IntPtr NativeHandle
		{
			[Token(Token = "0x6001B00")]
			[Address(RVA = "0x29901B0", Offset = "0x29901B0", VA = "0x29901B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1485F44", Offset = "0x1485F44")]
			get
			{
				return default(IntPtr);
			}
			[Token(Token = "0x6001B01")]
			[Address(RVA = "0x29901B8", Offset = "0x29901B8", VA = "0x29901B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1485F54", Offset = "0x1485F54")]
			private set
			{
			}
		}

		[Token(Token = "0x6001B02")]
		[Address(RVA = "0x29901C0", Offset = "0x29901C0", VA = "0x29901C0")]
		internal static Anchor Factory(NativeSession nativeApi, IntPtr anchorNativeHandle, bool isCreate = true)
		{
			return null;
		}

		[Token(Token = "0x6001B03")]
		[Address(RVA = "0x2990360", Offset = "0x2990360", VA = "0x2990360")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B04")]
		[Address(RVA = "0x2990708", Offset = "0x2990708", VA = "0x2990708")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001B05")]
		[Address(RVA = "0x298FF8C", Offset = "0x298FF8C", VA = "0x298FF8C")]
		private bool _IsSessionDestroyed()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B06")]
		[Address(RVA = "0x29907DC", Offset = "0x29907DC", VA = "0x29907DC")]
		public Anchor()
		{
		}
	}
	[Token(Token = "0x20003A4")]
	public class AndroidPermissionsManager : AndroidJavaProxy
	{
		[Token(Token = "0x400180E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AndroidPermissionsManager s_Instance;

		[Token(Token = "0x400180F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static AndroidJavaObject s_Activity;

		[Token(Token = "0x4001810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static AndroidJavaObject s_PermissionService;

		[Token(Token = "0x4001811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static AsyncTask<AndroidPermissionsRequestResult> s_CurrentRequest;

		[Token(Token = "0x4001812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Action<AndroidPermissionsRequestResult> s_OnPermissionsRequestFinished;

		[Token(Token = "0x6001B08")]
		[Address(RVA = "0x2990884", Offset = "0x2990884", VA = "0x2990884")]
		public AndroidPermissionsManager()
		{
		}

		[Token(Token = "0x6001B09")]
		[Address(RVA = "0x29908F8", Offset = "0x29908F8", VA = "0x29908F8")]
		[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x1485F64", Offset = "0x1485F64")]
		public static bool IsPermissionGranted(string permissionName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B0A")]
		[Address(RVA = "0x2990CE8", Offset = "0x2990CE8", VA = "0x2990CE8")]
		[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x1485FB0", Offset = "0x1485FB0")]
		public static AsyncTask<AndroidPermissionsRequestResult> RequestPermission(string permissionName)
		{
			return null;
		}

		[Token(Token = "0x6001B0B")]
		[Address(RVA = "0x2991138", Offset = "0x2991138", VA = "0x2991138", Slot = "9")]
		[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x1485FFC", Offset = "0x1485FFC")]
		public virtual void OnPermissionGranted(string permissionName)
		{
		}

		[Token(Token = "0x6001B0C")]
		[Address(RVA = "0x2991374", Offset = "0x2991374", VA = "0x2991374", Slot = "10")]
		[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x1486048", Offset = "0x1486048")]
		public virtual void OnPermissionDenied(string permissionName)
		{
		}

		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0x299137C", Offset = "0x299137C", VA = "0x299137C", Slot = "11")]
		[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x1486094", Offset = "0x1486094")]
		public virtual void OnActivityResult()
		{
		}

		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0x2991070", Offset = "0x2991070", VA = "0x2991070")]
		private static AndroidPermissionsManager GetInstance()
		{
			return null;
		}

		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0x2990BD4", Offset = "0x2990BD4", VA = "0x2990BD4")]
		private static AndroidJavaObject GetUnityActivity()
		{
			return null;
		}

		[Token(Token = "0x6001B10")]
		[Address(RVA = "0x2990A58", Offset = "0x2990A58", VA = "0x2990A58")]
		private static AndroidJavaObject GetPermissionsService()
		{
			return null;
		}

		[Token(Token = "0x6001B11")]
		[Address(RVA = "0x2991140", Offset = "0x2991140", VA = "0x2991140")]
		private void _OnPermissionResult(string permissionName, bool granted)
		{
		}
	}
	[Token(Token = "0x20003A5")]
	public struct AndroidPermissionsRequestResult
	{
		[Token(Token = "0x4001813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1475DE0", Offset = "0x1475DE0")]
		private string[] <PermissionNames>k__BackingField;

		[Token(Token = "0x4001814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1475DF0", Offset = "0x1475DF0")]
		private bool[] <GrantResults>k__BackingField;

		[Token(Token = "0x170002E7")]
		public string[] PermissionNames
		{
			[Token(Token = "0x6001B14")]
			[Address(RVA = "0x2991384", Offset = "0x2991384", VA = "0x2991384")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14860E0", Offset = "0x14860E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B15")]
			[Address(RVA = "0x299138C", Offset = "0x299138C", VA = "0x299138C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14860F0", Offset = "0x14860F0")]
			private set
			{
			}
		}

		[Token(Token = "0x170002E8")]
		public bool[] GrantResults
		{
			[Token(Token = "0x6001B16")]
			[Address(RVA = "0x2991394", Offset = "0x2991394", VA = "0x2991394")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1486100", Offset = "0x1486100")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B17")]
			[Address(RVA = "0x299139C", Offset = "0x299139C", VA = "0x299139C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1486110", Offset = "0x1486110")]
			private set
			{
			}
		}

		[Token(Token = "0x170002E9")]
		public bool IsAllGranted
		{
			[Token(Token = "0x6001B18")]
			[Address(RVA = "0x29913A4", Offset = "0x29913A4", VA = "0x29913A4")]
			[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x1486120", Offset = "0x1486120")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001B13")]
		[Address(RVA = "0x2991038", Offset = "0x2991038", VA = "0x2991038")]
		public AndroidPermissionsRequestResult(string[] permissionNames, bool[] grantResults)
		{
		}
	}
	[Token(Token = "0x20003A6")]
	internal enum ApiTrackingFailureReason
	{
		[Token(Token = "0x4001816")]
		None,
		[Token(Token = "0x4001817")]
		BadState,
		[Token(Token = "0x4001818")]
		InsufficientLight,
		[Token(Token = "0x4001819")]
		ExcessiveMotion,
		[Token(Token = "0x400181A")]
		InsufficientFeatures,
		[Token(Token = "0x400181B")]
		CameraUnavailable
	}
	[Token(Token = "0x20003A7")]
	public enum ApkAvailabilityStatus
	{
		[Token(Token = "0x400181D")]
		UnknownError = 0,
		[Token(Token = "0x400181E")]
		UnknownChecking = 1,
		[Token(Token = "0x400181F")]
		UnknownTimedOut = 2,
		[Token(Token = "0x4001820")]
		UnsupportedDeviceNotCapable = 100,
		[Token(Token = "0x4001821")]
		SupportedNotInstalled = 201,
		[Token(Token = "0x4001822")]
		SupportedApkTooOld = 202,
		[Token(Token = "0x4001823")]
		SupportedInstalled = 203
	}
	[Token(Token = "0x20003A8")]
	public enum ApkInstallationStatus
	{
		[Token(Token = "0x4001825")]
		Uninitialized = 0,
		[Token(Token = "0x4001826")]
		Requested = 1,
		[Token(Token = "0x4001827")]
		Success = 100,
		[Token(Token = "0x4001828")]
		Error = 200,
		[Token(Token = "0x4001829")]
		ErrorDeviceNotCompatible = 201,
		[Token(Token = "0x400182A")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1475E00", Offset = "0x1475E00")]
		ErrorAndroidVersionNotSupported = 202,
		[Token(Token = "0x400182B")]
		ErrorUserDeclined = 203
	}
	[Token(Token = "0x20003A9")]
	public class AsyncTask<T>
	{
		[Token(Token = "0x200070A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A96C", Offset = "0x146A96C")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4002783")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T result;

			[Token(Token = "0x4002784")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncTask<T> <>4__this;

			[Token(Token = "0x6002A64")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6002A65")]
			internal void <.ctor>b__1()
			{
			}
		}

		[Token(Token = "0x400182C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<Action<T>> m_ActionsUponTaskCompletion;

		[Token(Token = "0x400182D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1475E38", Offset = "0x1475E38")]
		private bool <IsComplete>k__BackingField;

		[Token(Token = "0x400182E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1475E48", Offset = "0x1475E48")]
		private T <Result>k__BackingField;

		[Token(Token = "0x170002EA")]
		public bool IsComplete
		{
			[Token(Token = "0x6001B1B")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148616C", Offset = "0x148616C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148617C", Offset = "0x148617C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002EB")]
		public T Result
		{
			[Token(Token = "0x6001B1D")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148618C", Offset = "0x148618C")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6001B1E")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148619C", Offset = "0x148619C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001B19")]
		internal AsyncTask(out Action<T> asyncOperationComplete)
		{
		}

		[Token(Token = "0x6001B1A")]
		internal AsyncTask(T result)
		{
		}

		[Token(Token = "0x6001B1F")]
		[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x14861AC", Offset = "0x14861AC")]
		public CustomYieldInstruction WaitForCompletion()
		{
			return null;
		}

		[Token(Token = "0x6001B20")]
		[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x14861F0", Offset = "0x14861F0")]
		public AsyncTask<T> ThenAction(Action<T> doAfterTaskComplete)
		{
			return null;
		}

		[Token(Token = "0x6001B21")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1486234", Offset = "0x1486234")]
		private void <.ctor>b__1_0(T result)
		{
		}
	}
	[Token(Token = "0x20003AA")]
	internal class AsyncTask
	{
		[Token(Token = "0x400182F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Queue<Action> s_UpdateActionQueue;

		[Token(Token = "0x4001830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static object s_LockObject;

		[Token(Token = "0x4001831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1475E58", Offset = "0x1475E58")]
		private static bool <IsInitialized>k__BackingField;

		[Token(Token = "0x170002EC")]
		public static bool IsInitialized
		{
			[Token(Token = "0x6001B22")]
			[Address(RVA = "0x2991408", Offset = "0x2991408", VA = "0x2991408")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1486244", Offset = "0x1486244")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B23")]
			[Address(RVA = "0x2991470", Offset = "0x2991470", VA = "0x2991470")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1486254", Offset = "0x1486254")]
			private set
			{
			}
		}

		[Token(Token = "0x6001B24")]
		[Address(RVA = "0x29914E0", Offset = "0x29914E0", VA = "0x29914E0")]
		public static void PerformActionInUpdate(Action action)
		{
		}

		[Token(Token = "0x6001B25")]
		[Address(RVA = "0x29915F4", Offset = "0x29915F4", VA = "0x29915F4")]
		public static void OnUpdate()
		{
		}

		[Token(Token = "0x6001B26")]
		[Address(RVA = "0x299175C", Offset = "0x299175C", VA = "0x299175C")]
		public static void InitAsyncTask()
		{
		}

		[Token(Token = "0x6001B27")]
		[Address(RVA = "0x29919CC", Offset = "0x29919CC", VA = "0x29919CC")]
		public static void ResetAsyncTask()
		{
		}

		[Token(Token = "0x6001B28")]
		[Address(RVA = "0x2991B90", Offset = "0x2991B90", VA = "0x2991B90")]
		public AsyncTask()
		{
		}
	}
	[Token(Token = "0x20003AB")]
	public class AugmentedFace : Trackable
	{
		[Token(Token = "0x170002ED")]
		public Pose CenterPose
		{
			[Token(Token = "0x6001B2B")]
			[Address(RVA = "0x2AB4350", Offset = "0x2AB4350", VA = "0x2AB4350")]
			get
			{
				return default(Pose);
			}
		}

		[Token(Token = "0x6001B2A")]
		[Address(RVA = "0x2AB42A0", Offset = "0x2AB42A0", VA = "0x2AB42A0")]
		internal AugmentedFace(IntPtr nativeHandle, NativeSession nativeApi)
		{
		}

		[Token(Token = "0x6001B2C")]
		[Address(RVA = "0x2AB44C8", Offset = "0x2AB44C8", VA = "0x2AB44C8")]
		public Pose GetRegionPose(AugmentedFaceRegion region)
		{
			return default(Pose);
		}

		[Token(Token = "0x6001B2D")]
		[Address(RVA = "0x2AB463C", Offset = "0x2AB463C", VA = "0x2AB463C")]
		public void GetVertices(List<Vector3> vertices)
		{
		}

		[Token(Token = "0x6001B2E")]
		[Address(RVA = "0x2AB48C0", Offset = "0x2AB48C0", VA = "0x2AB48C0")]
		public void GetTextureCoordinates(List<Vector2> textureCoordinates)
		{
		}

		[Token(Token = "0x6001B2F")]
		[Address(RVA = "0x2AB4B20", Offset = "0x2AB4B20", VA = "0x2AB4B20")]
		public void GetNormals(List<Vector3> normals)
		{
		}

		[Token(Token = "0x6001B30")]
		[Address(RVA = "0x2AB4DA4", Offset = "0x2AB4DA4", VA = "0x2AB4DA4")]
		public void GetTriangleIndices(List<int> indices)
		{
		}
	}
	[Token(Token = "0x20003AC")]
	public enum AugmentedFaceMode
	{
		[Token(Token = "0x4001833")]
		Disabled = 0,
		[Token(Token = "0x4001834")]
		Mesh = 2
	}
	[Token(Token = "0x20003AD")]
	public enum AugmentedFaceRegion
	{
		[Token(Token = "0x4001836")]
		NoseTip,
		[Token(Token = "0x4001837")]
		ForeheadLeft,
		[Token(Token = "0x4001838")]
		ForeheadRight
	}
	[Token(Token = "0x20003AE")]
	public class AugmentedImage : Trackable
	{
		[Token(Token = "0x170002EE")]
		public int DatabaseIndex
		{
			[Token(Token = "0x6001B32")]
			[Address(RVA = "0x2AB5040", Offset = "0x2AB5040", VA = "0x2AB5040")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002EF")]
		public string Name
		{
			[Token(Token = "0x6001B33")]
			[Address(RVA = "0x2AB50A8", Offset = "0x2AB50A8", VA = "0x2AB50A8")]
			[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x1486264", Offset = "0x1486264")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F0")]
		public Pose CenterPose
		{
			[Token(Token = "0x6001B34")]
			[Address(RVA = "0x2AB5184", Offset = "0x2AB5184", VA = "0x2AB5184")]
			get
			{
				return default(Pose);
			}
		}

		[Token(Token = "0x170002F1")]
		public float ExtentX
		{
			[Token(Token = "0x6001B35")]
			[Address(RVA = "0x2AB524C", Offset = "0x2AB524C", VA = "0x2AB524C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002F2")]
		public float ExtentZ
		{
			[Token(Token = "0x6001B36")]
			[Address(RVA = "0x2AB52B0", Offset = "0x2AB52B0", VA = "0x2AB52B0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002F3")]
		public AugmentedImageTrackingMethod TrackingMethod
		{
			[Token(Token = "0x6001B37")]
			[Address(RVA = "0x2AB5314", Offset = "0x2AB5314", VA = "0x2AB5314")]
			get
			{
				return default(AugmentedImageTrackingMethod);
			}
		}

		[Token(Token = "0x6001B31")]
		[Address(RVA = "0x2AB503C", Offset = "0x2AB503C", VA = "0x2AB503C")]
		internal AugmentedImage(IntPtr nativeHandle, NativeSession nativeApi)
		{
		}
	}
	[Token(Token = "0x20003AF")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x1468E68", Offset = "0x1468E68")]
	public class AugmentedImageDatabase : ScriptableObject
	{
		[Token(Token = "0x4001839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private IntPtr m_ArAugmentedImageDatabase;

		[Token(Token = "0x400183A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<AugmentedImageDatabaseEntry> m_Images;

		[Token(Token = "0x400183B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private byte[] m_RawData;

		[Token(Token = "0x400183C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool m_IsRawDataDirty;

		[Token(Token = "0x400183D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string m_CliVersion;

		[Token(Token = "0x400183E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1475EA8", Offset = "0x1475EA8")]
		private bool <IsDirty>k__BackingField;

		[Token(Token = "0x170002F4")]
		public int Count
		{
			[Token(Token = "0x6001B39")]
			[Address(RVA = "0x2AB5428", Offset = "0x2AB5428", VA = "0x2AB5428")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002F5")]
		internal bool IsDirty
		{
			[Token(Token = "0x6001B3A")]
			[Address(RVA = "0x2AB54E8", Offset = "0x2AB54E8", VA = "0x2AB54E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14862B0", Offset = "0x14862B0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B3B")]
			[Address(RVA = "0x2AB54F0", Offset = "0x2AB54F0", VA = "0x2AB54F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14862C0", Offset = "0x14862C0")]
			private set
			{
			}
		}

		[Token(Token = "0x170002F6")]
		internal IntPtr NativeHandle
		{
			[Token(Token = "0x6001B3C")]
			[Address(RVA = "0x2AB54FC", Offset = "0x2AB54FC", VA = "0x2AB54FC")]
			get
			{
				return default(IntPtr);
			}
			[Token(Token = "0x6001B3D")]
			[Address(RVA = "0x2AB57AC", Offset = "0x2AB57AC", VA = "0x2AB57AC")]
			private set
			{
			}
		}

		[Token(Token = "0x170002F7")]
		public AugmentedImageDatabaseEntry Item
		{
			[Token(Token = "0x6001B3E")]
			[Address(RVA = "0x2AB57B4", Offset = "0x2AB57B4", VA = "0x2AB57B4")]
			get
			{
				return default(AugmentedImageDatabaseEntry);
			}
		}

		[Token(Token = "0x6001B38")]
		[Address(RVA = "0x2AB5378", Offset = "0x2AB5378", VA = "0x2AB5378")]
		public AugmentedImageDatabase()
		{
		}

		[Token(Token = "0x6001B3F")]
		[Address(RVA = "0x2AB58D0", Offset = "0x2AB58D0", VA = "0x2AB58D0")]
		[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x14862D0", Offset = "0x14862D0")]
		public int AddImage(string name, Texture2D image, float width = 0f)
		{
			return default(int);
		}
	}
	[Serializable]
	[Token(Token = "0x20003B0")]
	public struct AugmentedImageDatabaseEntry
	{
		[Token(Token = "0x400183F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string Name;

		[Token(Token = "0x4001840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float Width;

		[Token(Token = "0x4001841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Quality;

		[Token(Token = "0x4001842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string TextureGUID;

		[Token(Token = "0x4001843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string LastModifiedTime;

		[Token(Token = "0x6001B40")]
		[Address(RVA = "0x2AB5D3C", Offset = "0x2AB5D3C", VA = "0x2AB5D3C")]
		public AugmentedImageDatabaseEntry(string name, float width)
		{
		}
	}
	[Token(Token = "0x20003B1")]
	public enum AugmentedImageTrackingMethod
	{
		[Token(Token = "0x4001845")]
		NotTracking,
		[Token(Token = "0x4001846")]
		FullTracking,
		[Token(Token = "0x4001847")]
		LastKnownPose
	}
	[Token(Token = "0x20003B2")]
	[Flags]
	public enum CameraConfigDepthSensorUsages
	{
		[Token(Token = "0x4001849")]
		RequireAndUse = 1,
		[Token(Token = "0x400184A")]
		DoNotUse = 2
	}
	[Token(Token = "0x20003B3")]
	public struct CameraConfig
	{
		[Token(Token = "0x400184B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1475EB8", Offset = "0x1475EB8")]
		private Vector2 <ImageSize>k__BackingField;

		[Token(Token = "0x400184C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1475EC8", Offset = "0x1475EC8")]
		private Vector2 <TextureSize>k__BackingField;

		[Token(Token = "0x400184D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1475ED8", Offset = "0x1475ED8")]
		private int <MinFPS>k__BackingField;

		[Token(Token = "0x400184E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1475EE8", Offset = "0x1475EE8")]
		private int <MaxFPS>k__BackingField;

		[Token(Token = "0x400184F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1475EF8", Offset = "0x1475EF8")]
		private CameraConfigDepthSensorUsages <DepthSensorUsage>k__BackingField;

		[Token(Token = "0x170002F8")]
		public Vector2 ImageSize
		{
			[Token(Token = "0x6001B42")]
			[Address(RVA = "0x2AB5E08", Offset = "0x2AB5E08", VA = "0x2AB5E08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1486314", Offset = "0x1486314")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6001B43")]
			[Address(RVA = "0x2AB5E10", Offset = "0x2AB5E10", VA = "0x2AB5E10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1486324", Offset = "0x1486324")]
			private set
			{
			}
		}

		[Token(Token = "0x170002F9")]
		public Vector2 TextureSize
		{
			[Token(Token = "0x6001B44")]
			[Address(RVA = "0x2AB5E18", Offset = "0x2AB5E18", VA = "0x2AB5E18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1486334", Offset = "0x1486334")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6001B45")]
			[Address(RVA = "0x2AB5E20", Offset = "0x2AB5E20", VA = "0x2AB5E20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1486344", Offset = "0x1486344")]
			private set
			{
			}
		}

		[Token(Token = "0x170002FA")]
		public int MinFPS
		{
			[Token(Token = "0x6001B46")]
			[Address(RVA = "0x2AB5E28", Offset = "0x2AB5E28", VA = "0x2AB5E28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1486354", Offset = "0x1486354")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001B47")]
			[Address(RVA = "0x2AB5E30", Offset = "0x2AB5E30", VA = "0x2AB5E30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1486364", Offset = "0x1486364")]
			private set
			{
			}
		}

		[Token(Token = "0x170002FB")]
		public int MaxFPS
		{
			[Token(Token = "0x6001B48")]
			[Address(RVA = "0x2AB5E38", Offset = "0x2AB5E38", VA = "0x2AB5E38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1486374", Offset = "0x1486374")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001B49")]
			[Address(RVA = "0x2AB5E40", Offset = "0x2AB5E40", VA = "0x2AB5E40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1486384", Offset = "0x1486384")]
			private set
			{
			}
		}

		[Token(Token = "0x170002FC")]
		public CameraConfigDepthSensorUsages DepthSensorUsage
		{
			[Token(Token = "0x6001B4A")]
			[Address(RVA = "0x2AB5E48", Offset = "0x2AB5E48", VA = "0x2AB5E48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1486394", Offset = "0x1486394")]
			get
			{
				return default(CameraConfigDepthSensorUsages);
			}
			[Token(Token = "0x6001B4B")]
			[Address(RVA = "0x2AB5E50", Offset = "0x2AB5E50", VA = "0x2AB5E50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14863A4", Offset = "0x14863A4")]
			private set
			{
			}
		}

		[Token(Token = "0x6001B41")]
		[Address(RVA = "0x2AB5DF4", Offset = "0x2AB5DF4", VA = "0x2AB5DF4")]
		internal CameraConfig(Vector2 imageSize, Vector2 textureSize, int minFPS, int maxFPS, CameraConfigDepthSensorUsages depthSensor)
		{
		}
	}
	[Token(Token = "0x20003B4")]
	public enum CameraFocusMode
	{
		[Token(Token = "0x4001851")]
		FixedFocus,
		[Token(Token = "0x4001852")]
		AutoFocus
	}
	[Token(Token = "0x20003B5")]
	public struct CameraImageBytes : IDisposable
	{
		[Token(Token = "0x4001853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IntPtr m_ImageHandle;

		[Token(Token = "0x4001854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1475F08", Offset = "0x1475F08")]
		private bool <IsAvailable>k__BackingField;

		[Token(Token = "0x4001855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1475F18", Offset = "0x1475F18")]
		private int <Width>k__BackingField;

		[Token(Token = "0x4001856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1475F28", Offset = "0x1475F28")]
		private int <Height>k__BackingField;

		[Token(Token = "0x4001857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1475F38", Offset = "0x1475F38")]
		private IntPtr <Y>k__BackingField;

		[Token(Token = "0x4001858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1475F48", Offset = "0x1475F48")]
		private IntPtr <U>k__BackingField;

		[Token(Token = "0x4001859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1475F58", Offset = "0x1475F58")]
		private IntPtr <V>k__BackingField;

		[Token(Token = "0x400185A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1475F68", Offset = "0x1475F68")]
		private int <YRowStride>k__BackingField;

		[Token(Token = "0x400185B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1475F78", Offset = "0x1475F78")]
		private int <UVPixelStride>k__BackingField;

		[Token(Token = "0x400185C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1475F88", Offset = "0x1475F88")]
		private int <UVRowStride>k__BackingField;

		[Token(Token = "0x170002FD")]
		public bool IsAvailable
		{
			[Token(Token = "0x6001B4D")]
			[Address(RVA = "0x2AB6008", Offset = "0x2AB6008", VA = "0x2AB6008")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14863B4", Offset = "0x14863B4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B4E")]
			[Address(RVA = "0x2AB6010", Offset = "0x2AB6010", VA = "0x2AB6010")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14863C4", Offset = "0x14863C4")]
			private set
			{
			}
		}

		[Token(Token = "0x170002FE")]
		public int Width
		{
			[Token(Token = "0x6001B4F")]
			[Address(RVA = "0x2AB601C", Offset = "0x2AB601C", VA = "0x2AB601C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14863D4", Offset = "0x14863D4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001B50")]
			[Address(RVA = "0x2AB6024", Offset = "0x2AB6024", VA = "0x2AB6024")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14863E4", Offset = "0x14863E4")]
			private set
			{
			}
		}

		[Token(Token = "0x170002FF")]
		public int Height
		{
			[Token(Token = "0x6001B51")]
			[Address(RVA = "0x2AB602C", Offset = "0x2AB602C", VA = "0x2AB602C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14863F4", Offset = "0x14863F4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001B52")]
			[Address(RVA = "0x2AB6034", Offset = "0x2AB6034", VA = "0x2AB6034")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1486404", Offset = "0x1486404")]
			private set
			{
			}
		}

		[Token(Token = "0x17000300")]
		public IntPtr Y
		{
			[Token(Token = "0x6001B53")]
			[Address(RVA = "0x2AB603C", Offset = "0x2AB603C", VA = "0x2AB603C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1486414", Offset = "0x1486414")]
			get
			{
				return default(IntPtr);
			}
			[Token(Token = "0x6001B54")]
			[Address(RVA = "0x2AB6044", Offset = "0x2AB6044", VA = "0x2AB6044")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1486424", Offset = "0x1486424")]
			private set
			{
			}
		}

		[Token(Token = "0x17000301")]
		public IntPtr U
		{
			[Token(Token = "0x6001B55")]
			[Address(RVA = "0x2AB604C", Offset = "0x2AB604C", VA = "0x2AB604C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1486434", Offset = "0x1486434")]
			get
			{
				return default(IntPtr);
			}
			[Token(Token = "0x6001B56")]
			[Address(RVA = "0x2AB6054", Offset = "0x2AB6054", VA = "0x2AB6054")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1486444", Offset = "0x1486444")]
			private set
			{
			}
		}

		[Token(Token = "0x17000302")]
		public IntPtr V
		{
			[Token(Token = "0x6001B57")]
			[Address(RVA = "0x2AB605C", Offset = "0x2AB605C", VA = "0x2AB605C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1486454", Offset = "0x1486454")]
			get
			{
				return default(IntPtr);
			}
			[Token(Token = "0x6001B58")]
			[Address(RVA = "0x2AB6064", Offset = "0x2AB6064", VA = "0x2AB6064")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1486464", Offset = "0x1486464")]
			private set
			{
			}
		}

		[Token(Token = "0x17000303")]
		public int YRowStride
		{
			[Token(Token = "0x6001B59")]
			[Address(RVA = "0x2AB606C", Offset = "0x2AB606C", VA = "0x2AB606C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1486474", Offset = "0x1486474")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001B5A")]
			[Address(RVA = "0x2AB6074", Offset = "0x2AB6074", VA = "0x2AB6074")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1486484", Offset = "0x1486484")]
			private set
			{
			}
		}

		[Token(Token = "0x17000304")]
		public int UVPixelStride
		{
			[Token(Token = "0x6001B5B")]
			[Address(RVA = "0x2AB607C", Offset = "0x2AB607C", VA = "0x2AB607C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1486494", Offset = "0x1486494")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001B5C")]
			[Address(RVA = "0x2AB6084", Offset = "0x2AB6084", VA = "0x2AB6084")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14864A4", Offset = "0x14864A4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000305")]
		public int UVRowStride
		{
			[Token(Token = "0x6001B5D")]
			[Address(RVA = "0x2AB608C", Offset = "0x2AB608C", VA = "0x2AB608C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14864B4", Offset = "0x14864B4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001B5E")]
			[Address(RVA = "0x2AB6094", Offset = "0x2AB6094", VA = "0x2AB6094")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14864C4", Offset = "0x14864C4")]
			private set
			{
			}
		}

		[Token(Token = "0x6001B4C")]
		[Address(RVA = "0x2AB5E58", Offset = "0x2AB5E58", VA = "0x2AB5E58")]
		internal CameraImageBytes(IntPtr imageHandle)
		{
		}

		[Token(Token = "0x6001B5F")]
		[Address(RVA = "0x2AB609C", Offset = "0x2AB609C", VA = "0x2AB609C")]
		public void Release()
		{
		}

		[Token(Token = "0x6001B60")]
		[Address(RVA = "0x2AB618C", Offset = "0x2AB618C", VA = "0x2AB618C", Slot = "4")]
		[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x14864D4", Offset = "0x14864D4")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x20003B6")]
	public struct CameraIntrinsics
	{
		[Token(Token = "0x400185D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector2 FocalLength;

		[Token(Token = "0x400185E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 PrincipalPoint;

		[Token(Token = "0x400185F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector2Int ImageDimensions;

		[Token(Token = "0x6001B61")]
		[Address(RVA = "0x2AB6190", Offset = "0x2AB6190", VA = "0x2AB6190")]
		internal CameraIntrinsics(Vector2 focalLength, Vector2 principalPoint, Vector2Int imageDimensions)
		{
		}
	}
	[Token(Token = "0x20003B7")]
	public enum CameraMetadataTag
	{
		[Token(Token = "0x4001861")]
		SectionColorCorrection = 0,
		[Token(Token = "0x4001862")]
		SectionControl = 1,
		[Token(Token = "0x4001863")]
		SectionEdge = 3,
		[Token(Token = "0x4001864")]
		SectionFlash = 4,
		[Token(Token = "0x4001865")]
		SectionFlashInfo = 5,
		[Token(Token = "0x4001866")]
		SectionHotPixel = 6,
		[Token(Token = "0x4001867")]
		SectionJpeg = 7,
		[Token(Token = "0x4001868")]
		SectionLens = 8,
		[Token(Token = "0x4001869")]
		SectionLensInfo = 9,
		[Token(Token = "0x400186A")]
		SectionNoiseReduction = 10,
		[Token(Token = "0x400186B")]
		SectionRequest = 12,
		[Token(Token = "0x400186C")]
		SectionScaler = 13,
		[Token(Token = "0x400186D")]
		SectionSensor = 14,
		[Token(Token = "0x400186E")]
		SectionSensorInfo = 15,
		[Token(Token = "0x400186F")]
		SectionShading = 16,
		[Token(Token = "0x4001870")]
		SectionStatistics = 17,
		[Token(Token = "0x4001871")]
		SectionStatisticsInfo = 18,
		[Token(Token = "0x4001872")]
		SectionTonemap = 19,
		[Token(Token = "0x4001873")]
		SectionInfo = 21,
		[Token(Token = "0x4001874")]
		SectionBlackLevel = 22,
		[Token(Token = "0x4001875")]
		SectionSync = 23,
		[Token(Token = "0x4001876")]
		SectionDepth = 25,
		[Token(Token = "0x4001877")]
		ColorCorrectionStart = 0,
		[Token(Token = "0x4001878")]
		ControlStart = 65536,
		[Token(Token = "0x4001879")]
		EdgeStart = 196608,
		[Token(Token = "0x400187A")]
		FlashStart = 262144,
		[Token(Token = "0x400187B")]
		FlashInfoStart = 327680,
		[Token(Token = "0x400187C")]
		HotPixelStart = 393216,
		[Token(Token = "0x400187D")]
		JpegStart = 458752,
		[Token(Token = "0x400187E")]
		LensStart = 524288,
		[Token(Token = "0x400187F")]
		LensInfoStart = 589824,
		[Token(Token = "0x4001880")]
		NoiseReductionStart = 655360,
		[Token(Token = "0x4001881")]
		RequestStart = 786432,
		[Token(Token = "0x4001882")]
		ScalerStart = 851968,
		[Token(Token = "0x4001883")]
		SensorStart = 917504,
		[Token(Token = "0x4001884")]
		SensorInfoStart = 983040,
		[Token(Token = "0x4001885")]
		ShadingStart = 1048576,
		[Token(Token = "0x4001886")]
		StatisticsStart = 1114112,
		[Token(Token = "0x4001887")]
		StatisticsInfoStart = 1179648,
		[Token(Token = "0x4001888")]
		TonemapStart = 1245184,
		[Token(Token = "0x4001889")]
		InfoStart = 1376256,
		[Token(Token = "0x400188A")]
		BlackLevelStart = 1441792,
		[Token(Token = "0x400188B")]
		SyncStart = 1507328,
		[Token(Token = "0x400188C")]
		DepthStart = 1638400,
		[Token(Token = "0x400188D")]
		ColorCorrectionMode = 0,
		[Token(Token = "0x400188E")]
		ColorCorrectionTransform = 1,
		[Token(Token = "0x400188F")]
		ColorCorrectionGains = 2,
		[Token(Token = "0x4001890")]
		ColorCorrectionAberrationMode = 3,
		[Token(Token = "0x4001891")]
		ControlAeAntibandingMode = 65536,
		[Token(Token = "0x4001892")]
		ControlAeExposureCompensation = 65537,
		[Token(Token = "0x4001893")]
		ControlAeLock = 65538,
		[Token(Token = "0x4001894")]
		ControlAeMode = 65539,
		[Token(Token = "0x4001895")]
		ControlAeRegions = 65540,
		[Token(Token = "0x4001896")]
		ControlAeTargetFpsRange = 65541,
		[Token(Token = "0x4001897")]
		ControlAePrecaptureTrigger = 65542,
		[Token(Token = "0x4001898")]
		ControlAfMode = 65543,
		[Token(Token = "0x4001899")]
		ControlAfRegions = 65544,
		[Token(Token = "0x400189A")]
		ControlAfTrigger = 65545,
		[Token(Token = "0x400189B")]
		ControlAwbLock = 65546,
		[Token(Token = "0x400189C")]
		ControlAwbMode = 65547,
		[Token(Token = "0x400189D")]
		ControlAwbRegions = 65548,
		[Token(Token = "0x400189E")]
		ControlCaptureIntent = 65549,
		[Token(Token = "0x400189F")]
		ControlEffectMode = 65550,
		[Token(Token = "0x40018A0")]
		ControlMode = 65551,
		[Token(Token = "0x40018A1")]
		ControlSceneMode = 65552,
		[Token(Token = "0x40018A2")]
		ControlVideoStabilizationMode = 65553,
		[Token(Token = "0x40018A3")]
		ControlAeState = 65567,
		[Token(Token = "0x40018A4")]
		ControlAfState = 65568,
		[Token(Token = "0x40018A5")]
		ControlAwbState = 65570,
		[Token(Token = "0x40018A6")]
		ControlPostRawSensitivityBoost = 65576,
		[Token(Token = "0x40018A7")]
		EdgeMode = 196608,
		[Token(Token = "0x40018A8")]
		FlashMode = 262146,
		[Token(Token = "0x40018A9")]
		FlashState = 262149,
		[Token(Token = "0x40018AA")]
		HotPixelMode = 393216,
		[Token(Token = "0x40018AB")]
		JpegGpsCoordinates = 458752,
		[Token(Token = "0x40018AC")]
		JpegGpsProcessingMethod = 458753,
		[Token(Token = "0x40018AD")]
		JpegGpsTimestamp = 458754,
		[Token(Token = "0x40018AE")]
		JpegOrientation = 458755,
		[Token(Token = "0x40018AF")]
		JpegQuality = 458756,
		[Token(Token = "0x40018B0")]
		JpegThumbnailQuality = 458757,
		[Token(Token = "0x40018B1")]
		JpegThumbnailSize = 458758,
		[Token(Token = "0x40018B2")]
		LensAperture = 524288,
		[Token(Token = "0x40018B3")]
		LensFilterDensity = 524289,
		[Token(Token = "0x40018B4")]
		LensFocalLength = 524290,
		[Token(Token = "0x40018B5")]
		LensFocusDistance = 524291,
		[Token(Token = "0x40018B6")]
		LensOpticalStabilizationMode = 524292,
		[Token(Token = "0x40018B7")]
		LensPoseRotation = 524294,
		[Token(Token = "0x40018B8")]
		LensPoseTranslation = 524295,
		[Token(Token = "0x40018B9")]
		LensFocusRange = 524296,
		[Token(Token = "0x40018BA")]
		LensState = 524297,
		[Token(Token = "0x40018BB")]
		LensIntrinsicCalibration = 524298,
		[Token(Token = "0x40018BC")]
		LensRadialDistortion = 524299,
		[Token(Token = "0x40018BD")]
		NoiseReductionMode = 655360,
		[Token(Token = "0x40018BE")]
		RequestPipelineDepth = 786441,
		[Token(Token = "0x40018BF")]
		ScalerCropRegion = 851968,
		[Token(Token = "0x40018C0")]
		SensorExposureTime = 917504,
		[Token(Token = "0x40018C1")]
		SensorFrameDuration = 917505,
		[Token(Token = "0x40018C2")]
		SensorSensitivity = 917506,
		[Token(Token = "0x40018C3")]
		SensorTimestamp = 917520,
		[Token(Token = "0x40018C4")]
		SensorNeutralColorPoint = 917522,
		[Token(Token = "0x40018C5")]
		SensorNoiseProfile = 917523,
		[Token(Token = "0x40018C6")]
		SensorGreenSplit = 917526,
		[Token(Token = "0x40018C7")]
		SensorTestPatternData = 917527,
		[Token(Token = "0x40018C8")]
		SensorTestPatternMode = 917528,
		[Token(Token = "0x40018C9")]
		SensorRollingShutterSkew = 917530,
		[Token(Token = "0x40018CA")]
		SensorDynamicBlackLevel = 917532,
		[Token(Token = "0x40018CB")]
		SensorDynamicWhiteLevel = 917533,
		[Token(Token = "0x40018CC")]
		ShadingMode = 1048576,
		[Token(Token = "0x40018CD")]
		StatisticsFaceDetectMode = 1114112,
		[Token(Token = "0x40018CE")]
		StatisticsHotPixelMapMode = 1114115,
		[Token(Token = "0x40018CF")]
		StatisticsFaceIds = 1114116,
		[Token(Token = "0x40018D0")]
		StatisticsFaceLandmarks = 1114117,
		[Token(Token = "0x40018D1")]
		StatisticsFaceRectangles = 1114118,
		[Token(Token = "0x40018D2")]
		StatisticsFaceScores = 1114119,
		[Token(Token = "0x40018D3")]
		StatisticsLensShadingMap = 1114123,
		[Token(Token = "0x40018D4")]
		StatisticsSceneFlicker = 1114126,
		[Token(Token = "0x40018D5")]
		StatisticsHotPixelMap = 1114127,
		[Token(Token = "0x40018D6")]
		StatisticsLensShadingMapMode = 1114128,
		[Token(Token = "0x40018D7")]
		TonemapCurveBlue = 1245184,
		[Token(Token = "0x40018D8")]
		TonemapCurveGreen = 1245185,
		[Token(Token = "0x40018D9")]
		TonemapCurveRed = 1245186,
		[Token(Token = "0x40018DA")]
		TonemapMode = 1245187,
		[Token(Token = "0x40018DB")]
		TonemapGamma = 1245190,
		[Token(Token = "0x40018DC")]
		TonemapPresetCurve = 1245191,
		[Token(Token = "0x40018DD")]
		BlackLevelLock = 1441792,
		[Token(Token = "0x40018DE")]
		SyncFrameNumber = 1507328
	}
	[StructLayout(2)]
	[Token(Token = "0x20003B8")]
	public struct CameraMetadataValue
	{
		[Token(Token = "0x40018DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private NdkCameraMetadataType m_Type;

		[Token(Token = "0x40018E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private sbyte m_ByteValue;

		[Token(Token = "0x40018E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private int m_IntValue;

		[Token(Token = "0x40018E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private long m_LongValue;

		[Token(Token = "0x40018E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private float m_FloatValue;

		[Token(Token = "0x40018E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private double m_DoubleValue;

		[Token(Token = "0x40018E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private CameraMetadataRational m_RationalValue;

		[Token(Token = "0x17000306")]
		public Type ValueType
		{
			[Token(Token = "0x6001B68")]
			[Address(RVA = "0x2AB6204", Offset = "0x2AB6204", VA = "0x2AB6204")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B62")]
		[Address(RVA = "0x2AB61A0", Offset = "0x2AB61A0", VA = "0x2AB61A0")]
		public CameraMetadataValue(sbyte byteValue)
		{
		}

		[Token(Token = "0x6001B63")]
		[Address(RVA = "0x2AB61B0", Offset = "0x2AB61B0", VA = "0x2AB61B0")]
		public CameraMetadataValue(int intValue)
		{
		}

		[Token(Token = "0x6001B64")]
		[Address(RVA = "0x2AB61C0", Offset = "0x2AB61C0", VA = "0x2AB61C0")]
		public CameraMetadataValue(long longValue)
		{
		}

		[Token(Token = "0x6001B65")]
		[Address(RVA = "0x2AB61D0", Offset = "0x2AB61D0", VA = "0x2AB61D0")]
		public CameraMetadataValue(float floatValue)
		{
		}

		[Token(Token = "0x6001B66")]
		[Address(RVA = "0x2AB61E4", Offset = "0x2AB61E4", VA = "0x2AB61E4")]
		public CameraMetadataValue(double doubleValue)
		{
		}

		[Token(Token = "0x6001B67")]
		[Address(RVA = "0x2AB61F4", Offset = "0x2AB61F4", VA = "0x2AB61F4")]
		public CameraMetadataValue(CameraMetadataRational rationalValue)
		{
		}

		[Token(Token = "0x6001B69")]
		[Address(RVA = "0x2AB6320", Offset = "0x2AB6320", VA = "0x2AB6320")]
		public sbyte AsByte()
		{
			return default(sbyte);
		}

		[Token(Token = "0x6001B6A")]
		[Address(RVA = "0x2AB648C", Offset = "0x2AB648C", VA = "0x2AB648C")]
		public int AsInt()
		{
			return default(int);
		}

		[Token(Token = "0x6001B6B")]
		[Address(RVA = "0x2AB64C4", Offset = "0x2AB64C4", VA = "0x2AB64C4")]
		public float AsFloat()
		{
			return default(float);
		}

		[Token(Token = "0x6001B6C")]
		[Address(RVA = "0x2AB64FC", Offset = "0x2AB64FC", VA = "0x2AB64FC")]
		public long AsLong()
		{
			return default(long);
		}

		[Token(Token = "0x6001B6D")]
		[Address(RVA = "0x2AB6534", Offset = "0x2AB6534", VA = "0x2AB6534")]
		public double AsDouble()
		{
			return default(double);
		}

		[Token(Token = "0x6001B6E")]
		[Address(RVA = "0x2AB656C", Offset = "0x2AB656C", VA = "0x2AB656C")]
		public CameraMetadataRational AsRational()
		{
			return default(CameraMetadataRational);
		}

		[Token(Token = "0x6001B6F")]
		[Address(RVA = "0x2AB6354", Offset = "0x2AB6354", VA = "0x2AB6354")]
		private void LogError(NdkCameraMetadataType requestedType)
		{
		}
	}
	[Token(Token = "0x20003B9")]
	public struct CameraMetadataRational
	{
		[Token(Token = "0x40018E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int Numerator;

		[Token(Token = "0x40018E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int Denominator;
	}
	[Token(Token = "0x20003BA")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1468EB0", Offset = "0x1468EB0")]
	public class TrackedPlane : DetectedPlane
	{
		[Token(Token = "0x17000307")]
		public new TrackedPlane SubsumedBy
		{
			[Token(Token = "0x6001B71")]
			[Address(RVA = "0x2ABD924", Offset = "0x2ABD924", VA = "0x2ABD924")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B70")]
		[Address(RVA = "0x2ABD8E4", Offset = "0x2ABD8E4", VA = "0x2ABD8E4")]
		internal TrackedPlane(IntPtr nativeHandle, NativeSession nativeApi)
		{
		}
	}
	[Token(Token = "0x20003BB")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1468EE8", Offset = "0x1468EE8")]
	public class TrackedPoint : FeaturePoint
	{
		[Token(Token = "0x17000308")]
		public new TrackedPointOrientationMode OrientationMode
		{
			[Token(Token = "0x6001B73")]
			[Address(RVA = "0x2ABD9AC", Offset = "0x2ABD9AC", VA = "0x2ABD9AC")]
			get
			{
				return default(TrackedPointOrientationMode);
			}
		}

		[Token(Token = "0x6001B72")]
		[Address(RVA = "0x2ABD9A8", Offset = "0x2ABD9A8", VA = "0x2ABD9A8")]
		internal TrackedPoint(IntPtr nativeHandle, NativeSession nativeApi)
		{
		}
	}
	[Token(Token = "0x20003BC")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1468F20", Offset = "0x1468F20")]
	public enum TrackedPointOrientationMode
	{
		[Token(Token = "0x40018E9")]
		Identity,
		[Token(Token = "0x40018EA")]
		SurfaceNormal
	}
	[Token(Token = "0x20003BD")]
	public class DetectedPlane : Trackable
	{
		[Token(Token = "0x17000309")]
		public DetectedPlane SubsumedBy
		{
			[Token(Token = "0x6001B75")]
			[Address(RVA = "0x2AB7964", Offset = "0x2AB7964", VA = "0x2AB7964")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030A")]
		public Pose CenterPose
		{
			[Token(Token = "0x6001B76")]
			[Address(RVA = "0x2AB7A0C", Offset = "0x2AB7A0C", VA = "0x2AB7A0C")]
			get
			{
				return default(Pose);
			}
		}

		[Token(Token = "0x1700030B")]
		public float ExtentX
		{
			[Token(Token = "0x6001B77")]
			[Address(RVA = "0x2AB7AD0", Offset = "0x2AB7AD0", VA = "0x2AB7AD0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700030C")]
		public float ExtentZ
		{
			[Token(Token = "0x6001B78")]
			[Address(RVA = "0x2AB7B78", Offset = "0x2AB7B78", VA = "0x2AB7B78")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700030D")]
		public DetectedPlaneType PlaneType
		{
			[Token(Token = "0x6001B79")]
			[Address(RVA = "0x2AB7C20", Offset = "0x2AB7C20", VA = "0x2AB7C20")]
			get
			{
				return default(DetectedPlaneType);
			}
		}

		[Token(Token = "0x6001B74")]
		[Address(RVA = "0x2AB7924", Offset = "0x2AB7924", VA = "0x2AB7924")]
		internal DetectedPlane(IntPtr nativeHandle, NativeSession nativeApi)
		{
		}

		[Token(Token = "0x6001B7A")]
		[Address(RVA = "0x2AB7CC8", Offset = "0x2AB7CC8", VA = "0x2AB7CC8")]
		[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x1486520", Offset = "0x1486520")]
		public void GetBoundaryPolygon(List<Vector3> boundaryPolygonPoints)
		{
		}
	}
	[Token(Token = "0x20003BE")]
	public enum DetectedPlaneFindingMode
	{
		[Token(Token = "0x40018EC")]
		Disabled,
		[Token(Token = "0x40018ED")]
		HorizontalAndVertical,
		[Token(Token = "0x40018EE")]
		Horizontal,
		[Token(Token = "0x40018EF")]
		Vertical
	}
	[Token(Token = "0x20003BF")]
	public enum DetectedPlaneType
	{
		[Token(Token = "0x40018F1")]
		HorizontalUpwardFacing,
		[Token(Token = "0x40018F2")]
		HorizontalDownwardFacing,
		[Token(Token = "0x40018F3")]
		Vertical
	}
	[Token(Token = "0x20003C0")]
	public enum DeviceCameraDirection
	{
		[Token(Token = "0x40018F5")]
		BackFacing,
		[Token(Token = "0x40018F6")]
		FrontFacing
	}
	[Token(Token = "0x20003C1")]
	public enum DisplayUvCoordinateType
	{
		[Token(Token = "0x40018F8")]
		BackgroundTexture,
		[Token(Token = "0x40018F9")]
		BackgroundImage,
		[Token(Token = "0x40018FA")]
		UnityScreen
	}
	[Token(Token = "0x20003C2")]
	internal static class DisplayUvCoordinateTypeExtension
	{
		[Token(Token = "0x6001B7B")]
		[Address(RVA = "0x2AB7D7C", Offset = "0x2AB7D7C", VA = "0x2AB7D7C")]
		public static ApiCoordinates2dType ToApiCoordinates2dType(this DisplayUvCoordinateType coordinateType)
		{
			return default(ApiCoordinates2dType);
		}
	}
	[Token(Token = "0x20003C3")]
	public struct DisplayUvCoords
	{
		[Token(Token = "0x40018FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly DisplayUvCoords FullScreenUvCoords;

		[Token(Token = "0x40018FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector2 TopLeft;

		[Token(Token = "0x40018FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 TopRight;

		[Token(Token = "0x40018FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector2 BottomLeft;

		[Token(Token = "0x40018FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 BottomRight;

		[Token(Token = "0x6001B7C")]
		[Address(RVA = "0x2AB7D9C", Offset = "0x2AB7D9C", VA = "0x2AB7D9C")]
		public DisplayUvCoords(Vector2 topLeft, Vector2 topRight, Vector2 bottomLeft, Vector2 bottomRight)
		{
		}

		[Token(Token = "0x6001B7D")]
		[Address(RVA = "0x2AB7DB0", Offset = "0x2AB7DB0", VA = "0x2AB7DB0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1486574", Offset = "0x1486574")]
		public static implicit operator ApiDisplayUvCoords(DisplayUvCoords coords)
		{
			return default(ApiDisplayUvCoords);
		}
	}
	[Token(Token = "0x20003C4")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x1468F68", Offset = "0x1468F68")]
	public class EnvironmentalLight : MonoBehaviour
	{
		[Token(Token = "0x4001900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Light DirectionalLight;

		[Token(Token = "0x4001901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private long m_LightEstimateTimestamp;

		[Token(Token = "0x6001B7F")]
		[Address(RVA = "0x2AB7EA0", Offset = "0x2AB7EA0", VA = "0x2AB7EA0")]
		[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x14865AC", Offset = "0x14865AC")]
		public void Update()
		{
		}

		[Token(Token = "0x6001B80")]
		[Address(RVA = "0x2AB8990", Offset = "0x2AB8990", VA = "0x2AB8990")]
		public EnvironmentalLight()
		{
		}
	}
	[Token(Token = "0x20003C5")]
	public class FeaturePoint : Trackable
	{
		[Token(Token = "0x1700030E")]
		public Pose Pose
		{
			[Token(Token = "0x6001B82")]
			[Address(RVA = "0x2AB89A4", Offset = "0x2AB89A4", VA = "0x2AB89A4")]
			get
			{
				return default(Pose);
			}
		}

		[Token(Token = "0x1700030F")]
		public FeaturePointOrientationMode OrientationMode
		{
			[Token(Token = "0x6001B83")]
			[Address(RVA = "0x2AB8A68", Offset = "0x2AB8A68", VA = "0x2AB8A68")]
			[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x14865F8", Offset = "0x14865F8")]
			get
			{
				return default(FeaturePointOrientationMode);
			}
		}

		[Token(Token = "0x6001B81")]
		[Address(RVA = "0x2AB89A0", Offset = "0x2AB89A0", VA = "0x2AB89A0")]
		internal FeaturePoint(IntPtr nativeHandle, NativeSession nativeApi)
		{
		}
	}
	[Token(Token = "0x20003C6")]
	public enum FeaturePointOrientationMode
	{
		[Token(Token = "0x4001903")]
		Identity,
		[Token(Token = "0x4001904")]
		SurfaceNormal
	}
	[Token(Token = "0x20003C7")]
	public class Frame
	{
		[Token(Token = "0x200070B")]
		public static class CameraMetadata
		{
			[Token(Token = "0x6002A66")]
			[Address(RVA = "0x2ABABEC", Offset = "0x2ABABEC", VA = "0x2ABABEC")]
			public static bool TryGetValues(CameraMetadataTag metadataTag, List<CameraMetadataValue> outMetadataList)
			{
				return default(bool);
			}

			[Token(Token = "0x6002A67")]
			[Address(RVA = "0x2ABB5FC", Offset = "0x2ABB5FC", VA = "0x2ABB5FC")]
			public static bool GetAllCameraMetadataTags(List<CameraMetadataTag> outMetadataTags)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200070C")]
		public static class PointCloud
		{
			[Token(Token = "0x17000595")]
			public static bool IsUpdatedThisFrame
			{
				[Token(Token = "0x6002A68")]
				[Address(RVA = "0x2ABB9E0", Offset = "0x2ABB9E0", VA = "0x2ABB9E0")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000596")]
			public static int PointCount
			{
				[Token(Token = "0x6002A69")]
				[Address(RVA = "0x2ABBB30", Offset = "0x2ABBB30", VA = "0x2ABBB30")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x6002A6A")]
			[Address(RVA = "0x2ABBC18", Offset = "0x2ABBC18", VA = "0x2ABBC18")]
			[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1489494", Offset = "0x1489494")]
			public static Vector4 GetPoint(int index)
			{
				return default(Vector4);
			}

			[Token(Token = "0x6002A6B")]
			[Address(RVA = "0x2ABBC58", Offset = "0x2ABBC58", VA = "0x2ABBC58")]
			public static PointCloudPoint GetPointAsStruct(int index)
			{
				return default(PointCloudPoint);
			}

			[Token(Token = "0x6002A6C")]
			[Address(RVA = "0x2ABBDBC", Offset = "0x2ABBDBC", VA = "0x2ABBDBC")]
			[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x14894CC", Offset = "0x14894CC")]
			public static void CopyPoints(List<Vector4> points)
			{
			}
		}

		[Token(Token = "0x200070D")]
		public static class CameraImage
		{
			[Token(Token = "0x17000597")]
			public static Texture Texture
			{
				[Token(Token = "0x6002A6D")]
				[Address(RVA = "0x2AB98F0", Offset = "0x2AB98F0", VA = "0x2AB98F0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000598")]
			[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x148A68C", Offset = "0x148A68C")]
			public static DisplayUvCoords DisplayUvCoords
			{
				[Token(Token = "0x6002A6E")]
				[Address(RVA = "0x2AB9C24", Offset = "0x2AB9C24", VA = "0x2AB9C24")]
				get
				{
					return default(DisplayUvCoords);
				}
			}

			[Token(Token = "0x17000599")]
			public static DisplayUvCoords TextureDisplayUvs
			{
				[Token(Token = "0x6002A6F")]
				[Address(RVA = "0x2AB9C28", Offset = "0x2AB9C28", VA = "0x2AB9C28")]
				get
				{
					return default(DisplayUvCoords);
				}
			}

			[Token(Token = "0x1700059A")]
			public static DisplayUvCoords ImageDisplayUvs
			{
				[Token(Token = "0x6002A70")]
				[Address(RVA = "0x2ABA040", Offset = "0x2ABA040", VA = "0x2ABA040")]
				get
				{
					return default(DisplayUvCoords);
				}
			}

			[Token(Token = "0x1700059B")]
			public static CameraIntrinsics TextureIntrinsics
			{
				[Token(Token = "0x6002A71")]
				[Address(RVA = "0x2ABA1D8", Offset = "0x2ABA1D8", VA = "0x2ABA1D8")]
				get
				{
					return default(CameraIntrinsics);
				}
			}

			[Token(Token = "0x1700059C")]
			public static CameraIntrinsics ImageIntrinsics
			{
				[Token(Token = "0x6002A72")]
				[Address(RVA = "0x2ABA418", Offset = "0x2ABA418", VA = "0x2ABA418")]
				get
				{
					return default(CameraIntrinsics);
				}
			}

			[Token(Token = "0x6002A73")]
			[Address(RVA = "0x2AB9E90", Offset = "0x2AB9E90", VA = "0x2AB9E90")]
			public static Vector2 TransformCoordinate(Vector2 coordinate, DisplayUvCoordinateType sourceType, DisplayUvCoordinateType targetType)
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002A74")]
			[Address(RVA = "0x2ABA704", Offset = "0x2ABA704", VA = "0x2ABA704")]
			public static CameraImageBytes AcquireCameraImageBytes()
			{
				return default(CameraImageBytes);
			}

			[Token(Token = "0x6002A75")]
			[Address(RVA = "0x2ABA954", Offset = "0x2ABA954", VA = "0x2ABA954")]
			public static Matrix4x4 GetCameraProjectionMatrix(float nearClipping, float farClipping)
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x4001905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<TrackableHit> s_TmpTrackableHitList;

		[Token(Token = "0x17000310")]
		public static Pose Pose
		{
			[Token(Token = "0x6001B84")]
			[Address(RVA = "0x2AB8B10", Offset = "0x2AB8B10", VA = "0x2AB8B10")]
			get
			{
				return default(Pose);
			}
		}

		[Token(Token = "0x17000311")]
		public static LightEstimate LightEstimate
		{
			[Token(Token = "0x6001B85")]
			[Address(RVA = "0x2AB82A0", Offset = "0x2AB82A0", VA = "0x2AB82A0")]
			get
			{
				return default(LightEstimate);
			}
		}

		[Token(Token = "0x6001B86")]
		[Address(RVA = "0x2AB91A4", Offset = "0x2AB91A4", VA = "0x2AB91A4")]
		[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x1486644", Offset = "0x1486644")]
		public static bool Raycast(float x, float y, TrackableHitFlags filter, out TrackableHit hitResult)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B87")]
		[Address(RVA = "0x2AB9394", Offset = "0x2AB9394", VA = "0x2AB9394")]
		[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x1486690", Offset = "0x1486690")]
		public static bool Raycast(Vector3 origin, Vector3 direction, out TrackableHit hitResult, float maxDistance = float.PositiveInfinity, TrackableHitFlags filter = TrackableHitFlags.Default)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B88")]
		[Address(RVA = "0x2AB95B4", Offset = "0x2AB95B4", VA = "0x2AB95B4")]
		[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x14866DC", Offset = "0x14866DC")]
		public static bool RaycastAll(float x, float y, TrackableHitFlags filter, List<TrackableHit> hitResults)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B89")]
		[Address(RVA = "0x2AB96F4", Offset = "0x2AB96F4", VA = "0x2AB96F4")]
		[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x1486728", Offset = "0x1486728")]
		public static bool RaycastAll(Vector3 origin, Vector3 direction, List<TrackableHit> hitResults, float maxDistance = float.PositiveInfinity, TrackableHitFlags filter = TrackableHitFlags.Default)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B8A")]
		[Address(RVA = "0x2AB9870", Offset = "0x2AB9870", VA = "0x2AB9870")]
		public Frame()
		{
		}
	}
	[Token(Token = "0x20003C8")]
	public struct LightEstimate
	{
		[Token(Token = "0x4001906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float m_PixelIntensity;

		[Token(Token = "0x4001907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private UnityEngine.Color m_ColorCorrection;

		[Token(Token = "0x4001908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Quaternion m_DirectionalLightRotation;

		[Token(Token = "0x4001909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private UnityEngine.Color m_DirectionalLightColor;

		[Token(Token = "0x400190A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private SphericalHarmonicsL2 m_AmbientProbe;

		[Token(Token = "0x400190B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Cubemap m_CachedCubemap;

		[Token(Token = "0x400190C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1475F98", Offset = "0x1475F98")]
		private LightEstimationMode <Mode>k__BackingField;

		[Token(Token = "0x400190D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1475FA8", Offset = "0x1475FA8")]
		private LightEstimateState <State>k__BackingField;

		[Token(Token = "0x400190E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1475FB8", Offset = "0x1475FB8")]
		private long <Timestamp>k__BackingField;

		[Token(Token = "0x17000312")]
		public LightEstimationMode Mode
		{
			[Token(Token = "0x6001B8E")]
			[Address(RVA = "0x2ABCD9C", Offset = "0x2ABCD9C", VA = "0x2ABCD9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14867AC", Offset = "0x14867AC")]
			get
			{
				return default(LightEstimationMode);
			}
			[Token(Token = "0x6001B8F")]
			[Address(RVA = "0x2ABCDA4", Offset = "0x2ABCDA4", VA = "0x2ABCDA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14867BC", Offset = "0x14867BC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000313")]
		public LightEstimateState State
		{
			[Token(Token = "0x6001B90")]
			[Address(RVA = "0x2ABCDAC", Offset = "0x2ABCDAC", VA = "0x2ABCDAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14867CC", Offset = "0x14867CC")]
			get
			{
				return default(LightEstimateState);
			}
			[Token(Token = "0x6001B91")]
			[Address(RVA = "0x2ABCDB4", Offset = "0x2ABCDB4", VA = "0x2ABCDB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14867DC", Offset = "0x14867DC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000314")]
		public float PixelIntensity
		{
			[Token(Token = "0x6001B92")]
			[Address(RVA = "0x2AB856C", Offset = "0x2AB856C", VA = "0x2AB856C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001B93")]
			[Address(RVA = "0x2ABCDBC", Offset = "0x2ABCDBC", VA = "0x2ABCDBC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000315")]
		public UnityEngine.Color ColorCorrection
		{
			[Token(Token = "0x6001B94")]
			[Address(RVA = "0x2AB85F0", Offset = "0x2AB85F0", VA = "0x2AB85F0")]
			get
			{
				return default(UnityEngine.Color);
			}
			[Token(Token = "0x6001B95")]
			[Address(RVA = "0x2ABCDC4", Offset = "0x2ABCDC4", VA = "0x2ABCDC4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000316")]
		public Quaternion DirectionalLightRotation
		{
			[Token(Token = "0x6001B96")]
			[Address(RVA = "0x2AB8678", Offset = "0x2AB8678", VA = "0x2AB8678")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6001B97")]
			[Address(RVA = "0x2ABCDD0", Offset = "0x2ABCDD0", VA = "0x2ABCDD0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000317")]
		public UnityEngine.Color DirectionalLightColor
		{
			[Token(Token = "0x6001B98")]
			[Address(RVA = "0x2AB8704", Offset = "0x2AB8704", VA = "0x2AB8704")]
			get
			{
				return default(UnityEngine.Color);
			}
			[Token(Token = "0x6001B99")]
			[Address(RVA = "0x2ABCDDC", Offset = "0x2ABCDDC", VA = "0x2ABCDDC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000318")]
		public SphericalHarmonicsL2 AmbientProbe
		{
			[Token(Token = "0x6001B9A")]
			[Address(RVA = "0x2AB8790", Offset = "0x2AB8790", VA = "0x2AB8790")]
			get
			{
				return default(SphericalHarmonicsL2);
			}
			[Token(Token = "0x6001B9B")]
			[Address(RVA = "0x2ABCDE8", Offset = "0x2ABCDE8", VA = "0x2ABCDE8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000319")]
		public Cubemap ReflectionProbe
		{
			[Token(Token = "0x6001B9C")]
			[Address(RVA = "0x2AB882C", Offset = "0x2AB882C", VA = "0x2AB882C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031A")]
		public long Timestamp
		{
			[Token(Token = "0x6001B9D")]
			[Address(RVA = "0x2ABCEC8", Offset = "0x2ABCEC8", VA = "0x2ABCEC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14867EC", Offset = "0x14867EC")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6001B9E")]
			[Address(RVA = "0x2ABCED0", Offset = "0x2ABCED0", VA = "0x2ABCED0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14867FC", Offset = "0x14867FC")]
			private set
			{
			}
		}

		[Token(Token = "0x6001B8C")]
		[Address(RVA = "0x2ABCB0C", Offset = "0x2ABCB0C", VA = "0x2ABCB0C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1486774", Offset = "0x1486774")]
		public LightEstimate(LightEstimateState state, float pixelIntensity, UnityEngine.Color colorCorrection)
		{
		}

		[Token(Token = "0x6001B8D")]
		[Address(RVA = "0x2AB8DF8", Offset = "0x2AB8DF8", VA = "0x2AB8DF8")]
		public LightEstimate(LightEstimateState state, float pixelIntensity, UnityEngine.Color colorCorrection, Quaternion directionalLightRotation, UnityEngine.Color directionalLightColor, float[,] ambientSHCoefficients, long timestamp)
		{
		}

		[Token(Token = "0x6001B9F")]
		[Address(RVA = "0x2ABCC0C", Offset = "0x2ABCC0C", VA = "0x2ABCC0C")]
		private void _InitializeLightEstimateMode()
		{
		}
	}
	[Token(Token = "0x20003C9")]
	public enum LightEstimateState
	{
		[Token(Token = "0x4001910")]
		NotValid,
		[Token(Token = "0x4001911")]
		Valid
	}
	[Token(Token = "0x20003CA")]
	public enum LightEstimationMode
	{
		[Token(Token = "0x4001913")]
		Disabled,
		[Token(Token = "0x4001914")]
		AmbientIntensity,
		[Token(Token = "0x4001915")]
		EnvironmentalHDRWithoutReflections,
		[Token(Token = "0x4001916")]
		EnvironmentalHDRWithReflections
	}
	[Token(Token = "0x20003CB")]
	public enum LostTrackingReason
	{
		[Token(Token = "0x4001918")]
		None,
		[Token(Token = "0x4001919")]
		BadState,
		[Token(Token = "0x400191A")]
		InsufficientLight,
		[Token(Token = "0x400191B")]
		ExcessiveMotion,
		[Token(Token = "0x400191C")]
		InsufficientFeatures,
		[Token(Token = "0x400191D")]
		CameraUnavailable
	}
	[Token(Token = "0x20003CC")]
	public struct PointCloudPoint
	{
		[Token(Token = "0x400191E")]
		public const int InvalidPointId = -1;

		[Token(Token = "0x400191F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int m_Id;

		[Token(Token = "0x4001920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1475FC8", Offset = "0x1475FC8")]
		private Vector3 <Position>k__BackingField;

		[Token(Token = "0x4001921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1475FD8", Offset = "0x1475FD8")]
		private float <Confidence>k__BackingField;

		[Token(Token = "0x1700031B")]
		public int Id
		{
			[Token(Token = "0x6001BA1")]
			[Address(RVA = "0x2ABCED8", Offset = "0x2ABCED8", VA = "0x2ABCED8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001BA2")]
			[Address(RVA = "0x2ABCF80", Offset = "0x2ABCF80", VA = "0x2ABCF80")]
			set
			{
			}
		}

		[Token(Token = "0x1700031C")]
		public Vector3 Position
		{
			[Token(Token = "0x6001BA3")]
			[Address(RVA = "0x2ABCF88", Offset = "0x2ABCF88", VA = "0x2ABCF88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148680C", Offset = "0x148680C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001BA4")]
			[Address(RVA = "0x2ABCF94", Offset = "0x2ABCF94", VA = "0x2ABCF94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148681C", Offset = "0x148681C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700031D")]
		public float Confidence
		{
			[Token(Token = "0x6001BA5")]
			[Address(RVA = "0x2ABCFA0", Offset = "0x2ABCFA0", VA = "0x2ABCFA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148682C", Offset = "0x148682C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001BA6")]
			[Address(RVA = "0x2ABCFA8", Offset = "0x2ABCFA8", VA = "0x2ABCFA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x148683C", Offset = "0x148683C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001BA0")]
		[Address(RVA = "0x2ABBDAC", Offset = "0x2ABBDAC", VA = "0x2ABBDAC")]
		public PointCloudPoint(int id, Vector3 position, float confidence)
		{
		}

		[Token(Token = "0x6001BA7")]
		[Address(RVA = "0x2ABCFB0", Offset = "0x2ABCFB0", VA = "0x2ABCFB0")]
		public static implicit operator Vector3(PointCloudPoint point)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x20003CD")]
	public static class Session
	{
		[Token(Token = "0x1700031E")]
		public static SessionStatus Status
		{
			[Token(Token = "0x6001BA8")]
			[Address(RVA = "0x2ABCFBC", Offset = "0x2ABCFBC", VA = "0x2ABCFBC")]
			get
			{
				return default(SessionStatus);
			}
		}

		[Token(Token = "0x1700031F")]
		public static LostTrackingReason LostTrackingReason
		{
			[Token(Token = "0x6001BA9")]
			[Address(RVA = "0x2ABD074", Offset = "0x2ABD074", VA = "0x2ABD074")]
			get
			{
				return default(LostTrackingReason);
			}
		}

		[Token(Token = "0x6001BAA")]
		[Address(RVA = "0x2ABD12C", Offset = "0x2ABD12C", VA = "0x2ABD12C")]
		[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x148684C", Offset = "0x148684C")]
		public static Anchor CreateAnchor(Pose pose, [Optional] Trackable trackable)
		{
			return null;
		}

		[Token(Token = "0x6001BAB")]
		[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x1486890", Offset = "0x1486890")]
		public static void GetTrackables<T>(List<T> trackables, TrackableQueryFilter filter = TrackableQueryFilter.All) where T : Trackable
		{
		}

		[Token(Token = "0x6001BAC")]
		[Address(RVA = "0x2ABD278", Offset = "0x2ABD278", VA = "0x2ABD278")]
		public static CameraConfig GetCameraConfig()
		{
			return default(CameraConfig);
		}

		[Token(Token = "0x6001BAD")]
		[Address(RVA = "0x2ABD364", Offset = "0x2ABD364", VA = "0x2ABD364")]
		[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x14868D4", Offset = "0x14868D4")]
		public static AsyncTask<ApkAvailabilityStatus> CheckApkAvailability()
		{
			return null;
		}

		[Token(Token = "0x6001BAE")]
		[Address(RVA = "0x2ABD41C", Offset = "0x2ABD41C", VA = "0x2ABD41C")]
		[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x1486918", Offset = "0x1486918")]
		public static AsyncTask<ApkInstallationStatus> RequestApkInstallation(bool userRequested)
		{
			return null;
		}
	}
	[Token(Token = "0x20003CE")]
	public enum SessionStatus
	{
		[Token(Token = "0x4001923")]
		None = 0,
		[Token(Token = "0x4001924")]
		Initializing = 1,
		[Token(Token = "0x4001925")]
		Tracking = 100,
		[Token(Token = "0x4001926")]
		LostTracking = 101,
		[Token(Token = "0x4001927")]
		NotTracking = 102,
		[Token(Token = "0x4001928")]
		FatalError = 200,
		[Token(Token = "0x4001929")]
		ErrorApkNotAvailable = 201,
		[Token(Token = "0x400192A")]
		ErrorPermissionNotGranted = 202,
		[Token(Token = "0x400192B")]
		ErrorSessionConfigurationNotSupported = 203
	}
	[Token(Token = "0x20003CF")]
	public static class SessionStatusExtensions
	{
		[Token(Token = "0x400192C")]
		private const int k_NotInitializedGroupStart = 0;

		[Token(Token = "0x400192D")]
		private const int k_ValidSessionGroupStart = 100;

		[Token(Token = "0x400192E")]
		private const int k_ErrorGroupStart = 200;

		[Token(Token = "0x6001BAF")]
		[Address(RVA = "0x2ABD4DC", Offset = "0x2ABD4DC", VA = "0x2ABD4DC")]
		public static bool IsNotInitialized(this SessionStatus status)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BB0")]
		[Address(RVA = "0x2ABD4E8", Offset = "0x2ABD4E8", VA = "0x2ABD4E8")]
		public static bool IsValid(this SessionStatus status)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BB1")]
		[Address(RVA = "0x2ABD4F8", Offset = "0x2ABD4F8", VA = "0x2ABD4F8")]
		public static bool IsError(this SessionStatus status)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003D0")]
	public abstract class Trackable
	{
		[Token(Token = "0x400192F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal IntPtr m_TrackableNativeHandle;

		[Token(Token = "0x4001930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal NativeSession m_NativeSession;

		[Token(Token = "0x17000320")]
		public virtual TrackingState TrackingState
		{
			[Token(Token = "0x6001BB5")]
			[Address(RVA = "0x2ABD5E0", Offset = "0x2ABD5E0", VA = "0x2ABD5E0", Slot = "4")]
			[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x148698C", Offset = "0x148698C")]
			get
			{
				return default(TrackingState);
			}
		}

		[Token(Token = "0x6001BB2")]
		[Address(RVA = "0x2ABD508", Offset = "0x2ABD508", VA = "0x2ABD508")]
		internal Trackable()
		{
		}

		[Token(Token = "0x6001BB3")]
		[Address(RVA = "0x2AB42E0", Offset = "0x2AB42E0", VA = "0x2AB42E0")]
		internal Trackable(IntPtr trackableNativeHandle, NativeSession nativeSession)
		{
		}

		[Token(Token = "0x6001BB4")]
		[Address(RVA = "0x2ABD554", Offset = "0x2ABD554", VA = "0x2ABD554", Slot = "1")]
		~Trackable()
		{
		}

		[Token(Token = "0x6001BB6")]
		[Address(RVA = "0x2ABD624", Offset = "0x2ABD624", VA = "0x2ABD624", Slot = "5")]
		[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x14869D8", Offset = "0x14869D8")]
		public virtual Anchor CreateAnchor(Pose pose)
		{
			return null;
		}

		[Token(Token = "0x6001BB7")]
		[Address(RVA = "0x2ABD780", Offset = "0x2ABD780", VA = "0x2ABD780", Slot = "6")]
		[AttributeAttribute(Name = "SuppressMemoryAllocationErrorAttribute", RVA = "0x1486A1C", Offset = "0x1486A1C")]
		public virtual void GetAllAnchors(List<Anchor> anchors)
		{
		}

		[Token(Token = "0x6001BB8")]
		[Address(RVA = "0x2AB4410", Offset = "0x2AB4410", VA = "0x2AB4410")]
		protected bool _IsSessionDestroyed()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003D1")]
	public struct TrackableHit
	{
		[Token(Token = "0x4001931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1475FE8", Offset = "0x1475FE8")]
		private Pose <Pose>k__BackingField;

		[Token(Token = "0x4001932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1475FF8", Offset = "0x1475FF8")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x4001933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1476008", Offset = "0x1476008")]
		private TrackableHitFlags <Flags>k__BackingField;

		[Token(Token = "0x4001934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1476018", Offset = "0x1476018")]
		private Trackable <Trackable>k__BackingField;

		[Token(Token = "0x17000321")]
		public Pose Pose
		{
			[Token(Token = "0x6001BBA")]
			[Address(RVA = "0x2ABD884", Offset = "0x2ABD884", VA = "0x2ABD884")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1486A60", Offset = "0x1486A60")]
			get
			{
				return default(Pose);
			}
			[Token(Token = "0x6001BBB")]
			[Address(RVA = "0x2ABD898", Offset = "0x2ABD898", VA = "0x2ABD898")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1486A70", Offset = "0x1486A70")]
			private set
			{
			}
		}

		[Token(Token = "0x17000322")]
		public float Distance
		{
			[Token(Token = "0x6001BBC")]
			[Address(RVA = "0x2ABD8B4", Offset = "0x2ABD8B4", VA = "0x2ABD8B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1486A80", Offset = "0x1486A80")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001BBD")]
			[Address(RVA = "0x2ABD8BC", Offset = "0x2ABD8BC", VA = "0x2ABD8BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1486A90", Offset = "0x1486A90")]
			private set
			{
			}
		}

		[Token(Token = "0x17000323")]
		public TrackableHitFlags Flags
		{
			[Token(Token = "0x6001BBE")]
			[Address(RVA = "0x2ABD8C4", Offset = "0x2ABD8C4", VA = "0x2ABD8C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1486AA0", Offset = "0x1486AA0")]
			get
			{
				return default(TrackableHitFlags);
			}
			[Token(Token = "0x6001BBF")]
			[Address(RVA = "0x2ABD8CC", Offset = "0x2ABD8CC", VA = "0x2ABD8CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1486AB0", Offset = "0x1486AB0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000324")]
		public Trackable Trackable
		{
			[Token(Token = "0x6001BC0")]
			[Address(RVA = "0x2ABD8D4", Offset = "0x2ABD8D4", VA = "0x2ABD8D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1486AC0", Offset = "0x1486AC0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BC1")]
			[Address(RVA = "0x2ABD8DC", Offset = "0x2ABD8DC", VA = "0x2ABD8DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1486AD0", Offset = "0x1486AD0")]
			private set
			{
			}
		}

		[Token(Token = "0x6001BB9")]
		[Address(RVA = "0x2ABD84C", Offset = "0x2ABD84C", VA = "0x2ABD84C")]
		internal TrackableHit(Pose pose, float distance, TrackableHitFlags flags, Trackable trackable)
		{
		}
	}
	[Token(Token = "0x20003D2")]
	[Flags]
	public enum TrackableHitFlags
	{
		[Token(Token = "0x4001936")]
		None = 0,
		[Token(Token = "0x4001937")]
		PlaneWithinPolygon = 1,
		[Token(Token = "0x4001938")]
		PlaneWithinBounds = 2,
		[Token(Token = "0x4001939")]
		PlaneWithinInfinity = 4,
		[Token(Token = "0x400193A")]
		FeaturePoint = 8,
		[Token(Token = "0x400193B")]
		FeaturePointWithSurfaceNormal = 0x10,
		[Token(Token = "0x400193C")]
		Default = 0x11
	}
	[Token(Token = "0x20003D3")]
	public enum TrackableQueryFilter
	{
		[Token(Token = "0x400193E")]
		All,
		[Token(Token = "0x400193F")]
		New,
		[Token(Token = "0x4001940")]
		Updated
	}
	[Token(Token = "0x20003D4")]
	public enum TrackingState
	{
		[Token(Token = "0x4001942")]
		Tracking,
		[Token(Token = "0x4001943")]
		Paused,
		[Token(Token = "0x4001944")]
		Stopped
	}
	[Token(Token = "0x20003D5")]
	public static class VersionInfo
	{
		[Token(Token = "0x4001945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string Version;
	}
}
namespace GoogleARCore.CrossPlatform
{
	[Token(Token = "0x20003D6")]
	public struct CloudAnchorResult
	{
		[Token(Token = "0x4001946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public CloudServiceResponse Response;

		[Token(Token = "0x4001947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public XPAnchor Anchor;
	}
	[Token(Token = "0x20003D7")]
	public enum CloudServiceResponse
	{
		[Token(Token = "0x4001949")]
		Success,
		[Token(Token = "0x400194A")]
		ErrorNotSupportedByConfiguration,
		[Token(Token = "0x400194B")]
		ErrorNotTracking,
		[Token(Token = "0x400194C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1476028", Offset = "0x1476028")]
		ErrorServiceUnreachable,
		[Token(Token = "0x400194D")]
		ErrorNotAuthorized,
		[Token(Token = "0x400194E")]
		ErrorApiQuotaExceeded,
		[Token(Token = "0x400194F")]
		ErrorDatasetInadequate,
		[Token(Token = "0x4001950")]
		ErrorCloudIdNotFound,
		[Token(Token = "0x4001951")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1476060", Offset = "0x1476060")]
		ErrorLocalizationFailed,
		[Token(Token = "0x4001952")]
		ErrorSDKTooOld,
		[Token(Token = "0x4001953")]
		ErrorSDKTooNew,
		[Token(Token = "0x4001954")]
		ErrorInternal,
		[Token(Token = "0x4001955")]
		ErrorHostingServiceUnavailable,
		[Token(Token = "0x4001956")]
		ErrorRequestCancelled
	}
	[Token(Token = "0x20003D8")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x1468FD4", Offset = "0x1468FD4")]
	public class XPAnchor : MonoBehaviour
	{
		[Token(Token = "0x4001957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<IntPtr, XPAnchor> s_AnchorDict;

		[Token(Token = "0x4001958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private XPTrackingState m_LastFrameTrackingState;

		[Token(Token = "0x4001959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool m_IsSessionDestroyed;

		[Token(Token = "0x400195A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1476098", Offset = "0x1476098")]
		private string <CloudId>k__BackingField;

		[Token(Token = "0x400195B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14760A8", Offset = "0x14760A8")]
		private NativeSession <NativeSession>k__BackingField;

		[Token(Token = "0x400195C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x14760B8", Offset = "0x14760B8")]
		private IntPtr <NativeHandle>k__BackingField;

		[Token(Token = "0x17000325")]
		public string CloudId
		{
			[Token(Token = "0x6001BC3")]
			[Address(RVA = "0x2AB6808", Offset = "0x2AB6808", VA = "0x2AB6808")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1486AE0", Offset = "0x1486AE0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BC4")]
			[Address(RVA = "0x2AB6810", Offset = "0x2AB6810", VA = "0x2AB6810")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1486AF0", Offset = "0x1486AF0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000326")]
		public XPTrackingState TrackingState
		{
			[Token(Token = "0x6001BC5")]
			[Address(RVA = "0x2AB6818", Offset = "0x2AB6818", VA = "0x2AB6818")]
			get
			{
				return default(XPTrackingState);
			}
		}

		[Token(Token = "0x17000327")]
		internal NativeSession NativeSession
		{
			[Token(Token = "0x6001BC6")]
			[Address(RVA = "0x2AB6AD4", Offset = "0x2AB6AD4", VA = "0x2AB6AD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1486B00", Offset = "0x1486B00")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BC7")]
			[Address(RVA = "0x2AB6ADC", Offset = "0x2AB6ADC", VA = "0x2AB6ADC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1486B10", Offset = "0x1486B10")]
			private set
			{
			}
		}

		[Token(Token = "0x17000328")]
		internal IntPtr NativeHandle
		{
			[Token(Token = "0x6001BC8")]
			[Address(RVA = "0x2AB6AE4", Offset = "0x2AB6AE4", VA = "0x2AB6AE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1486B20", Offset = "0x1486B20")]
			get
			{
				return default(IntPtr);
			}
			[Token(Token = "0x6001BC9")]
			[Address(RVA = "0x2AB6AEC", Offset = "0x2AB6AEC", VA = "0x2AB6AEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1486B30", Offset = "0x1486B30")]
			private set
			{
			}
		}

		[Token(Token = "0x6001BCA")]
		[Address(RVA = "0x2AB6AF4", Offset = "0x2AB6AF4", VA = "0x2AB6AF4")]
		internal static XPAnchor Factory(NativeSession nativeSession, IntPtr anchorHandle, bool isCreate = true)
		{
			return null;
		}

		[Token(Token = "0x6001BCB")]
		[Address(RVA = "0x2AB6D68", Offset = "0x2AB6D68", VA = "0x2AB6D68")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BCC")]
		[Address(RVA = "0x2AB71A8", Offset = "0x2AB71A8", VA = "0x2AB71A8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001BCD")]
		[Address(RVA = "0x2AB686C", Offset = "0x2AB686C", VA = "0x2AB686C")]
		private bool _IsSessionDestroyed()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BCE")]
		[Address(RVA = "0x2AB7368", Offset = "0x2AB7368", VA = "0x2AB7368")]
		public XPAnchor()
		{
		}
	}
	[Token(Token = "0x20003D9")]
	public static class XPSession
	{
		[Token(Token = "0x6001BD0")]
		[Address(RVA = "0x2AB7410", Offset = "0x2AB7410", VA = "0x2AB7410")]
		public static AsyncTask<CloudAnchorResult> CreateCloudAnchor(Anchor anchor)
		{
			return null;
		}

		[Token(Token = "0x6001BD1")]
		[Address(RVA = "0x2AB7688", Offset = "0x2AB7688", VA = "0x2AB7688")]
		public static AsyncTask<CloudAnchorResult> ResolveCloudAnchor(string cloudAnchorId)
		{
			return null;
		}

		[Token(Token = "0x6001BD2")]
		[Address(RVA = "0x2AB7854", Offset = "0x2AB7854", VA = "0x2AB7854")]
		public static void CancelCloudAnchorAsyncTask(string cloudAnchorId)
		{
		}
	}
	[Token(Token = "0x20003DA")]
	public enum XPSessionStatus
	{
		[Token(Token = "0x400195E")]
		None = 0,
		[Token(Token = "0x400195F")]
		Initializing = 1,
		[Token(Token = "0x4001960")]
		Tracking = 100,
		[Token(Token = "0x4001961")]
		LostTracking = 101,
		[Token(Token = "0x4001962")]
		NotTracking = 102,
		[Token(Token = "0x4001963")]
		FatalError = 200,
		[Token(Token = "0x4001964")]
		ErrorApkNotAvailable = 201,
		[Token(Token = "0x4001965")]
		ErrorPermissionNotGranted = 202,
		[Token(Token = "0x4001966")]
		ErrorSessionConfigurationNotSupported = 203
	}
	[Token(Token = "0x20003DB")]
	public enum XPTrackingState
	{
		[Token(Token = "0x4001968")]
		Tracking,
		[Token(Token = "0x4001969")]
		Paused,
		[Token(Token = "0x400196A")]
		Stopped
	}
}
namespace DynamicMeshCutter
{
	[Token(Token = "0x20003DC")]
	public class AsycWorker
	{
		[Token(Token = "0x200070E")]
		private class CuttingTask
		{
			[Token(Token = "0x4002785")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public WaitCallback Callback;

			[Token(Token = "0x4002786")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public object Arg;

			[Token(Token = "0x6002A76")]
			[Address(RVA = "0x1E75670", Offset = "0x1E75670", VA = "0x1E75670")]
			public CuttingTask()
			{
			}
		}

		[Token(Token = "0x400196B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private CutterBehaviour _behaviour;

		[Token(Token = "0x400196C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public OnCut OnCut;

		[Token(Token = "0x400196D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly AutoResetEvent _autoReset;

		[Token(Token = "0x400196E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Queue<CuttingTask> _queue;

		[Token(Token = "0x400196F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Thread[] _pool;

		[Token(Token = "0x4001970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MeshCutting _meshCut;

		[Token(Token = "0x6001BD3")]
		[Address(RVA = "0x1E75048", Offset = "0x1E75048", VA = "0x1E75048")]
		public AsycWorker(CutterBehaviour behaviour)
		{
		}

		[Token(Token = "0x6001BD4")]
		[Address(RVA = "0x1E75190", Offset = "0x1E75190", VA = "0x1E75190")]
		private void Initialize(int threads)
		{
		}

		[Token(Token = "0x6001BD5")]
		[Address(RVA = "0x1E75394", Offset = "0x1E75394", VA = "0x1E75394")]
		private void Thread()
		{
		}

		[Token(Token = "0x6001BD6")]
		[Address(RVA = "0x1E7558C", Offset = "0x1E7558C", VA = "0x1E7558C")]
		public void Enqeue(Info info)
		{
		}

		[Token(Token = "0x6001BD7")]
		[Address(RVA = "0x1E75678", Offset = "0x1E75678", VA = "0x1E75678")]
		private void AsyncCutting(object args)
		{
		}
	}
	[Token(Token = "0x20003DD")]
	public class DynamicMesh
	{
		[Token(Token = "0x4001971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<int> Triangles;

		[Token(Token = "0x4001972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Vector3> Vertices;

		[Token(Token = "0x4001973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Vector3> Normals;

		[Token(Token = "0x4001974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Vector2> UVs;

		[Token(Token = "0x4001975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<BoneWeight> BoneWeights;

		[Token(Token = "0x4001976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<List<int>> SubIndices;

		[Token(Token = "0x4001977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int AmountOfClusters;

		[Token(Token = "0x4001978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int AmountOfUniqueVertices;

		[Token(Token = "0x4001979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int[] Cluster;

		[Token(Token = "0x400197A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int[] SubMesh;

		[Token(Token = "0x400197B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public DynamicRagdoll DynamicRagdoll;

		[Token(Token = "0x400197C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<int> RD;

		[Token(Token = "0x400197D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Dictionary<int, List<Vector3>> ColliderGroups;

		[Token(Token = "0x400197E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private VirtualMesh _targetMesh;

		[Token(Token = "0x6001BD8")]
		[Address(RVA = "0x1E786FC", Offset = "0x1E786FC", VA = "0x1E786FC")]
		public void SetTargetMesh(VirtualMesh targetMesh)
		{
		}

		[Token(Token = "0x6001BD9")]
		[Address(RVA = "0x1E78704", Offset = "0x1E78704", VA = "0x1E78704")]
		public void AddTriangle(int[] triangle, int sub, DynamicMesh parent)
		{
		}

		[Token(Token = "0x6001BDA")]
		[Address(RVA = "0x1E78AC8", Offset = "0x1E78AC8", VA = "0x1E78AC8")]
		public void AddTriangle(int[] triangle, int sub)
		{
		}

		[Token(Token = "0x6001BDB")]
		[Address(RVA = "0x1E78E5C", Offset = "0x1E78E5C", VA = "0x1E78E5C")]
		public void AddTriangle(Vector3[] vertices, Vector3[] normals, Vector2[] uvs, BoneWeight[] boneWeights, int[] rd, Vector3 faceNormal, int submesh)
		{
		}

		[Token(Token = "0x6001BDC")]
		[Address(RVA = "0x1E79348", Offset = "0x1E79348", VA = "0x1E79348")]
		public DynamicMesh()
		{
		}
	}
	[Token(Token = "0x20003DE")]
	public class MeshCreationData
	{
		[Token(Token = "0x400197F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject[] CreatedObjects;

		[Token(Token = "0x4001980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshTarget[] CreatedTargets;

		[Token(Token = "0x6001BDD")]
		[Address(RVA = "0x1E7A3B8", Offset = "0x1E7A3B8", VA = "0x1E7A3B8")]
		public MeshCreationData(int size)
		{
		}
	}
	[Token(Token = "0x20003DF")]
	public static class MeshCreation
	{
		[Token(Token = "0x4001981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float _ragdoll_vertex_threshold;

		[Token(Token = "0x6001BDE")]
		[Address(RVA = "0x1E7745C", Offset = "0x1E7745C", VA = "0x1E7745C")]
		public static MeshCreationData CreateObjects(Info info, Material defaultMaterial)
		{
			return null;
		}

		[Token(Token = "0x6001BDF")]
		[Address(RVA = "0x1E7A628", Offset = "0x1E7A628", VA = "0x1E7A628")]
		private static void CreateMesh(ref GameObject root, ref Transform parent, MeshTarget target, Mesh mesh, VirtualMesh vMesh, Material[] materials, int bt, bool forcePhysics = false)
		{
		}

		[Token(Token = "0x6001BE0")]
		[Address(RVA = "0x1E7AA44", Offset = "0x1E7AA44", VA = "0x1E7AA44")]
		private static bool WillBeValidRagdoll(DynamicRagdoll ragdoll, VirtualMesh vMesh)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BE1")]
		[Address(RVA = "0x1E7BB58", Offset = "0x1E7BB58", VA = "0x1E7BB58")]
		private static void TrimRagdoll(DynamicRagdoll ragdoll, MeshTarget target, VirtualMesh vMesh)
		{
		}

		[Token(Token = "0x6001BE2")]
		[Address(RVA = "0x1E7ACA0", Offset = "0x1E7ACA0", VA = "0x1E7ACA0")]
		private static void CreateRagdoll(ref GameObject root, ref Transform parent, Info info, MeshTarget target, Mesh mesh, VirtualMesh vMesh, Material[] materials, int bt, Behaviour behaviour)
		{
		}

		[Token(Token = "0x6001BE3")]
		[Address(RVA = "0x1E7B7DC", Offset = "0x1E7B7DC", VA = "0x1E7B7DC")]
		private static void CreateAnimatedMesh(ref GameObject root, ref Transform parent, Info info, MeshTarget target, Mesh mesh, VirtualMesh vMesh, Material[] materials, int bt, Behaviour behaviour)
		{
		}

		[Token(Token = "0x6001BE4")]
		[Address(RVA = "0x1E7C024", Offset = "0x1E7C024", VA = "0x1E7C024")]
		public static Transform CreateSkinnedMeshRenderer(ref GameObject meshRoot, ref Transform parent, Info info, MeshTarget target, Mesh mesh, VirtualMesh vMesh, Material[] materials, int bt, Behaviour behaviour)
		{
			return null;
		}

		[Token(Token = "0x6001BE5")]
		[Address(RVA = "0x1E7C2EC", Offset = "0x1E7C2EC", VA = "0x1E7C2EC")]
		public static void TranslateCreatedObjects(Info info, GameObject[] createdObjects, MeshTarget[] targets, float separation)
		{
		}

		[Token(Token = "0x6001BE6")]
		[Address(RVA = "0x1E7A454", Offset = "0x1E7A454", VA = "0x1E7A454")]
		public static Material[] GetMaterials(GameObject target)
		{
			return null;
		}

		[Token(Token = "0x6001BE7")]
		public static T GetComponentInParentIgnoreSelf<T>(this Component target, bool includeInactive = false) where T : Component
		{
			return null;
		}

		[Token(Token = "0x6001BE8")]
		[Address(RVA = "0x1E79D28", Offset = "0x1E79D28", VA = "0x1E79D28")]
		public static void GetMeshInfo(MeshTarget target, out Mesh outMesh, out Matrix4x4[] outBindposes)
		{
		}
	}
	[Token(Token = "0x20003E0")]
	public class MeshCutting
	{
		[Token(Token = "0x200070F")]
		private class InternalData
		{
			[Token(Token = "0x4002787")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VirtualMesh MeshTarget;

			[Token(Token = "0x4002788")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public VirtualPlane Plane;

			[Token(Token = "0x4002789")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DynamicMesh[] Sides;

			[Token(Token = "0x400278A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<Vector3> AddedVertices;

			[Token(Token = "0x400278B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public List<BoneWeight> AddedBoneweights;

			[Token(Token = "0x6002A77")]
			[Address(RVA = "0x1E7C634", Offset = "0x1E7C634", VA = "0x1E7C634")]
			public InternalData(VirtualMesh meshTarget, VirtualPlane plane)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000710")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A97C", Offset = "0x146A97C")]
		private sealed class <>c
		{
			[Token(Token = "0x400278C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400278D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<KeyValuePair<int, float>, float> <>9__6_0;

			[Token(Token = "0x6002A79")]
			[Address(RVA = "0x1E7FE50", Offset = "0x1E7FE50", VA = "0x1E7FE50")]
			public <>c()
			{
			}

			[Token(Token = "0x6002A7A")]
			[Address(RVA = "0x1E7FE58", Offset = "0x1E7FE58", VA = "0x1E7FE58")]
			internal float <GetBoneweightCenter>b__6_0(KeyValuePair<int, float> b)
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001BEA")]
		[Address(RVA = "0x1E75858", Offset = "0x1E75858", VA = "0x1E75858")]
		public VirtualMesh[] Cut(ref Info info)
		{
			return null;
		}

		[Token(Token = "0x6001BEB")]
		[Address(RVA = "0x1E7C97C", Offset = "0x1E7C97C", VA = "0x1E7C97C")]
		private void CutTriangle(int submesh, int[] sides, int[] triangle, InternalData data)
		{
		}

		[Token(Token = "0x6001BEC")]
		[Address(RVA = "0x1E7E0A4", Offset = "0x1E7E0A4", VA = "0x1E7E0A4")]
		private void CreateFaces(InternalData data)
		{
		}

		[Token(Token = "0x6001BED")]
		[Address(RVA = "0x1E7EF9C", Offset = "0x1E7EF9C", VA = "0x1E7EF9C")]
		private void FillFace(InternalData data, List<Vector3> fVertices, List<BoneWeight> fBoneWeights)
		{
		}

		[Token(Token = "0x6001BEE")]
		[Address(RVA = "0x1E7F740", Offset = "0x1E7F740", VA = "0x1E7F740")]
		public Vector3 GetVerticeCenter(List<Vector3> fVertices)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001BEF")]
		[Address(RVA = "0x1E7F8A0", Offset = "0x1E7F8A0", VA = "0x1E7F8A0")]
		public BoneWeight GetBoneweightCenter(List<BoneWeight> fBoneWeights)
		{
			return default(BoneWeight);
		}

		[Token(Token = "0x6001BF0")]
		[Address(RVA = "0x1E75188", Offset = "0x1E75188", VA = "0x1E75188")]
		public MeshCutting()
		{
		}
	}
	[Token(Token = "0x20003E1")]
	public static class MeshSeperation
	{
		[StructLayout(3)]
		[Token(Token = "0x2000711")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A98C", Offset = "0x146A98C")]
		private struct <>c__DisplayClass0_0
		{
			[Token(Token = "0x400278E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Dictionary<Vector3, VertexInfo> uniqueVertices;

			[Token(Token = "0x400278F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public List<Vector3> visited;

			[Token(Token = "0x4002790")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<Vector3> gray;
		}

		[Serializable]
		[Token(Token = "0x2000712")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A99C", Offset = "0x146A99C")]
		private sealed class <>c
		{
			[Token(Token = "0x4002791")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002792")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<KeyValuePair<int, List<Vector3>>, int> <>9__2_0;

			[Token(Token = "0x4002793")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<KeyValuePair<int, List<Vector3>>, Vector3[]> <>9__2_1;

			[Token(Token = "0x6002A7C")]
			[Address(RVA = "0x1E81000", Offset = "0x1E81000", VA = "0x1E81000")]
			public <>c()
			{
			}

			[Token(Token = "0x6002A7D")]
			[Address(RVA = "0x1E81008", Offset = "0x1E81008", VA = "0x1E81008")]
			internal int <ConstructVirtualMeshFromDynamic>b__2_0(KeyValuePair<int, List<Vector3>> entry)
			{
				return default(int);
			}

			[Token(Token = "0x6002A7E")]
			[Address(RVA = "0x1E8104C", Offset = "0x1E8104C", VA = "0x1E8104C")]
			internal Vector3[] <ConstructVirtualMeshFromDynamic>b__2_1(KeyValuePair<int, List<Vector3>> entry)
			{
				return null;
			}
		}

		[Token(Token = "0x6001BF1")]
		[Address(RVA = "0x1E7FEA8", Offset = "0x1E7FEA8", VA = "0x1E7FEA8")]
		public static void FloodFillClusters(DynamicMesh mesh)
		{
		}

		[Token(Token = "0x6001BF2")]
		[Address(RVA = "0x1E7E8C8", Offset = "0x1E7E8C8", VA = "0x1E7E8C8")]
		public static VirtualMesh[] GetVirtualMeshes(DynamicMesh dynamicMesh, bool seperateByClusters)
		{
			return null;
		}

		[Token(Token = "0x6001BF3")]
		[Address(RVA = "0x1E80B60", Offset = "0x1E80B60", VA = "0x1E80B60")]
		private static VirtualMesh ConstructVirtualMeshFromDynamic(DynamicMesh dynamicMesh)
		{
			return null;
		}

		[Token(Token = "0x6001BF4")]
		[Address(RVA = "0x1E80998", Offset = "0x1E80998", VA = "0x1E80998")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1486B50", Offset = "0x1486B50")]
		internal static void <FloodFillClusters>g__PopulateGrey|0_0(Vector3 vertex, ref <>c__DisplayClass0_0 P_1)
		{
		}
	}
	[Token(Token = "0x20003E2")]
	public class VertexInfo
	{
		[Token(Token = "0x4001982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Vertex;

		[Token(Token = "0x4001983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<int> Occasions_Vertex;

		[Token(Token = "0x4001984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<int> Occasions_Submesh;

		[Token(Token = "0x4001985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Vector3> Neighbors;

		[Token(Token = "0x6001BF5")]
		[Address(RVA = "0x1E80870", Offset = "0x1E80870", VA = "0x1E80870")]
		public VertexInfo(int occasion_Vertex, int occasion_Submesh)
		{
		}
	}
	[Token(Token = "0x20003E3")]
	public class VirtualMesh
	{
		[Token(Token = "0x4001986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh Mesh;

		[Token(Token = "0x4001987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int[] Triangles;

		[Token(Token = "0x4001988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3[] Vertices;

		[Token(Token = "0x4001989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3[] Normals;

		[Token(Token = "0x400198A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector2[] UVs;

		[Token(Token = "0x400198B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BoneWeight[] BoneWeights;

		[Token(Token = "0x400198C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public DynamicRagdoll DynamicRagdoll;

		[Token(Token = "0x400198D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int[] Assignments;

		[Token(Token = "0x400198E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Dictionary<int, Vector3[]> DynamicGroups;

		[Token(Token = "0x400198F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Dictionary<int, Bounds> AdjustedBounds;

		[Token(Token = "0x4001990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int _subMeshCount;

		[Token(Token = "0x4001991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int[][] _subMeshIndices;

		[Token(Token = "0x4001992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int UniqueVerticesCount;

		[Token(Token = "0x4001993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool _hasBoneWeight;

		[Token(Token = "0x17000329")]
		public int SubMeshCount
		{
			[Token(Token = "0x6001BF6")]
			[Address(RVA = "0x1E82060", Offset = "0x1E82060", VA = "0x1E82060")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700032A")]
		public bool HasBoneWeight
		{
			[Token(Token = "0x6001BF7")]
			[Address(RVA = "0x1E82068", Offset = "0x1E82068", VA = "0x1E82068")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001BF8")]
		[Address(RVA = "0x1E80F50", Offset = "0x1E80F50", VA = "0x1E80F50")]
		public VirtualMesh()
		{
		}

		[Token(Token = "0x6001BF9")]
		[Address(RVA = "0x1E7A190", Offset = "0x1E7A190", VA = "0x1E7A190")]
		public VirtualMesh(Mesh mesh)
		{
		}

		[Token(Token = "0x6001BFA")]
		[Address(RVA = "0x1E7A5EC", Offset = "0x1E7A5EC", VA = "0x1E7A5EC")]
		public int[] GetIndices(int index)
		{
			return null;
		}

		[Token(Token = "0x6001BFB")]
		[Address(RVA = "0x1E80F60", Offset = "0x1E80F60", VA = "0x1E80F60")]
		public void SetIndices(int[][] indices)
		{
		}

		[Token(Token = "0x6001BFC")]
		[Address(RVA = "0x1E7C534", Offset = "0x1E7C534", VA = "0x1E7C534")]
		public void FillUVs()
		{
		}

		[Token(Token = "0x6001BFD")]
		[Address(RVA = "0x1E7A37C", Offset = "0x1E7A37C", VA = "0x1E7A37C")]
		public void AssignRagdoll(DynamicRagdoll dynamicRagdoll)
		{
		}

		[Token(Token = "0x6001BFE")]
		[Address(RVA = "0x1E82070", Offset = "0x1E82070", VA = "0x1E82070")]
		public void SetupRagdoll()
		{
		}
	}
	[Token(Token = "0x20003E4")]
	public class VirtualPlane
	{
		[Token(Token = "0x4001994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector3 _localposition;

		[Token(Token = "0x4001995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Vector3 _localNormal;

		[Token(Token = "0x4001996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 _worldPosition;

		[Token(Token = "0x4001997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 _worldNormal;

		[Token(Token = "0x1700032B")]
		public Vector3 LocalPosition
		{
			[Token(Token = "0x6001BFF")]
			[Address(RVA = "0x1E82074", Offset = "0x1E82074", VA = "0x1E82074")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700032C")]
		public Vector3 LocalNormal
		{
			[Token(Token = "0x6001C00")]
			[Address(RVA = "0x1E82080", Offset = "0x1E82080", VA = "0x1E82080")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700032D")]
		public Vector3 WorldPosition
		{
			[Token(Token = "0x6001C01")]
			[Address(RVA = "0x1E8208C", Offset = "0x1E8208C", VA = "0x1E8208C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700032E")]
		public Vector3 WorldNormal
		{
			[Token(Token = "0x6001C02")]
			[Address(RVA = "0x1E82098", Offset = "0x1E82098", VA = "0x1E82098")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001C03")]
		[Address(RVA = "0x1E76E74", Offset = "0x1E76E74", VA = "0x1E76E74")]
		public VirtualPlane(Vector3 localPosition, Vector3 localNormal, Vector3 worldPosition, Vector3 worldNormal)
		{
		}

		[Token(Token = "0x6001C04")]
		[Address(RVA = "0x1E7C880", Offset = "0x1E7C880", VA = "0x1E7C880")]
		public int GetSide(Vector3 point)
		{
			return default(int);
		}

		[Token(Token = "0x6001C05")]
		[Address(RVA = "0x1E7EE04", Offset = "0x1E7EE04", VA = "0x1E7EE04")]
		public void Raycast(Ray ray, out float distance)
		{
		}
	}
	[Token(Token = "0x20003E5")]
	public class DynamicRagdoll : MonoBehaviour, ISerializationCallbackReceiver
	{
		[Token(Token = "0x4001998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int[] Assignments;

		[Token(Token = "0x4001999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Dictionary<int, DynamicRagdollPart> Parts;

		[Token(Token = "0x400199A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<DynamicRagdollPart> _values;

		[Token(Token = "0x400199B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private List<int> _keys;

		[Token(Token = "0x400199C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Renderer Renderer;

		[Token(Token = "0x400199D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool IsRagdollKinematic;

		[Token(Token = "0x6001C06")]
		[Address(RVA = "0x1E79528", Offset = "0x1E79528", VA = "0x1E79528")]
		public void SetRagdollKinematic(bool value)
		{
		}

		[Token(Token = "0x6001C07")]
		[Address(RVA = "0x1E796E8", Offset = "0x1E796E8", VA = "0x1E796E8", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6001C08")]
		[Address(RVA = "0x1E79860", Offset = "0x1E79860", VA = "0x1E79860", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6001C09")]
		[Address(RVA = "0x1E79958", Offset = "0x1E79958", VA = "0x1E79958")]
		public DynamicRagdoll()
		{
		}
	}
	[Token(Token = "0x20003E6")]
	public class DynamicRagdollPart : MonoBehaviour
	{
		[Token(Token = "0x400199E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Name;

		[Token(Token = "0x400199F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int Index;

		[Token(Token = "0x40019A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Rigidbody Rigidbody;

		[Token(Token = "0x40019A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public CharacterJoint Joint;

		[Token(Token = "0x40019A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Collider[] Colliders;

		[Token(Token = "0x40019A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3[] Vertices;

		[Token(Token = "0x40019A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnityEngine.Color Color;

		[Token(Token = "0x6001C0A")]
		[Address(RVA = "0x1E79A3C", Offset = "0x1E79A3C", VA = "0x1E79A3C")]
		public DynamicRagdollPart()
		{
		}
	}
	[Token(Token = "0x20003E7")]
	public enum Behaviour
	{
		[Token(Token = "0x40019A6")]
		Stone,
		[Token(Token = "0x40019A7")]
		Ragdoll,
		[Token(Token = "0x40019A8")]
		Animation
	}
	[Token(Token = "0x20003E8")]
	public enum RagdollPhysics
	{
		[Token(Token = "0x40019AA")]
		LeaveAsIs,
		[Token(Token = "0x40019AB")]
		Kinematic,
		[Token(Token = "0x40019AC")]
		NonKinematic
	}
	[Token(Token = "0x20003E9")]
	public enum GroupCondition
	{
		[Token(Token = "0x40019AE")]
		Exact,
		[Token(Token = "0x40019AF")]
		ContainsAll,
		[Token(Token = "0x40019B0")]
		ContainsAny
	}
	[Serializable]
	[Token(Token = "0x20003EA")]
	public class GroupBehaviours
	{
		[Token(Token = "0x40019B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x40019B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Behaviour Behaviour;

		[Token(Token = "0x40019B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public GroupCondition Condition;

		[Token(Token = "0x40019B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<DynamicRagdollPart> Parts;

		[Token(Token = "0x40019B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<int> Indices;

		[Token(Token = "0x6001C0B")]
		[Address(RVA = "0x1E79A70", Offset = "0x1E79A70", VA = "0x1E79A70")]
		public bool Passes(int[] indices)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C0C")]
		[Address(RVA = "0x1E79C78", Offset = "0x1E79C78", VA = "0x1E79C78")]
		public GroupBehaviours()
		{
		}
	}
	[Token(Token = "0x20003EB")]
	public delegate void OnCut(bool success, Info info);
	[Token(Token = "0x20003EC")]
	public delegate void OnCreated(Info info, MeshCreationData creationData);
	[Token(Token = "0x20003ED")]
	public class Info
	{
		[Token(Token = "0x40019B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MeshTarget MeshTarget;

		[Token(Token = "0x40019B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VirtualPlane Plane;

		[Token(Token = "0x40019B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Mesh TargetOriginalMesh;

		[Token(Token = "0x40019B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VirtualMesh TargetVirtualMesh;

		[Token(Token = "0x40019BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Matrix4x4[] Bindposes;

		[Token(Token = "0x40019BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public VirtualMesh[] CreatedMeshes;

		[Token(Token = "0x40019BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int[] Sides;

		[Token(Token = "0x40019BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int[] BT;

		[Token(Token = "0x40019BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OnCut OnCutCallback;

		[Token(Token = "0x40019BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OnCreated OnCreatedCallback;

		[Token(Token = "0x40019C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public object BoxedUserData;

		[Token(Token = "0x6001C15")]
		[Address(RVA = "0x1E76F10", Offset = "0x1E76F10", VA = "0x1E76F10")]
		public Info(MeshTarget target, VirtualPlane plane, OnCut onCut, OnCreated onCreated, object boxed)
		{
		}
	}
	[Token(Token = "0x20003EE")]
	public abstract class CutterBehaviour : MonoBehaviour
	{
		[Token(Token = "0x40019C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Separation;

		[Token(Token = "0x40019C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool DestroyTargets;

		[Token(Token = "0x40019C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool UseAsync;

		[Token(Token = "0x40019C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material DefaultMaterial;

		[Token(Token = "0x40019C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _cutterIsEnabled;

		[Token(Token = "0x40019C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool ApplicationHasQuit;

		[Token(Token = "0x40019C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AsycWorker _asyncWorker;

		[Token(Token = "0x40019C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Info> _successes;

		[Token(Token = "0x40019C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Info> _fails;

		[Token(Token = "0x40019CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Queue<Info> _qSuccesses;

		[Token(Token = "0x40019CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Queue<Info> _qFails;

		[Token(Token = "0x40019CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _isInitialized;

		[Token(Token = "0x1700032F")]
		public bool CutterIsEnabled
		{
			[Token(Token = "0x6001C16")]
			[Address(RVA = "0x1E7618C", Offset = "0x1E7618C", VA = "0x1E7618C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000330")]
		public AsycWorker AsyncWorker
		{
			[Token(Token = "0x6001C17")]
			[Address(RVA = "0x1E76194", Offset = "0x1E76194", VA = "0x1E76194")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C18")]
		[Address(RVA = "0x1E761C4", Offset = "0x1E761C4", VA = "0x1E761C4")]
		private void InitializeWorker()
		{
		}

		[Token(Token = "0x6001C19")]
		[Address(RVA = "0x1E762FC", Offset = "0x1E762FC", VA = "0x1E762FC")]
		private void Terminate()
		{
		}

		[Token(Token = "0x6001C1A")]
		[Address(RVA = "0x1E76308", Offset = "0x1E76308", VA = "0x1E76308")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001C1B")]
		[Address(RVA = "0x1E76374", Offset = "0x1E76374", VA = "0x1E76374")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C1C")]
		[Address(RVA = "0x1E763DC", Offset = "0x1E763DC", VA = "0x1E763DC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001C1D")]
		[Address(RVA = "0x1E763E8", Offset = "0x1E763E8", VA = "0x1E763E8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001C1E")]
		[Address(RVA = "0x1E763F8", Offset = "0x1E763F8", VA = "0x1E763F8", Slot = "4")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001C1F")]
		[Address(RVA = "0x1E76778", Offset = "0x1E76778", VA = "0x1E76778")]
		public void Cut(MeshTarget target, Vector3 worldPosition, Vector3 worldNormal, [Optional] OnCut onCut, [Optional] OnCreated onCreated, [Optional] object boxedUserData)
		{
		}

		[Token(Token = "0x6001C20")]
		[Address(RVA = "0x1E77250", Offset = "0x1E77250", VA = "0x1E77250", Slot = "5")]
		protected virtual void CreateGameObjects(Info info)
		{
		}

		[Token(Token = "0x6001C21")]
		[Address(RVA = "0x1E770AC", Offset = "0x1E770AC", VA = "0x1E770AC")]
		private void OnCut(bool success, Info info)
		{
		}

		[Token(Token = "0x6001C22")]
		[Address(RVA = "0x1E78594", Offset = "0x1E78594", VA = "0x1E78594")]
		protected CutterBehaviour()
		{
		}
	}
	[Token(Token = "0x20003EF")]
	public class MeshTarget : MonoBehaviour
	{
		[Token(Token = "0x40019CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x14760E8", Offset = "0x14760E8")]
		public GameObject GameobjectRoot;

		[Token(Token = "0x40019CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material OverrideFaceMaterial;

		[Token(Token = "0x40019CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool SeparateMeshes;

		[Token(Token = "0x40019D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool ApplyTranslation;

		[Token(Token = "0x40019D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Behaviour[] DefaultBehaviour;

		[Token(Token = "0x40019D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public DynamicRagdoll DynamicRagdoll;

		[Token(Token = "0x40019D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Animator Animator;

		[Token(Token = "0x40019D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<GroupBehaviours> GroupBehaviours;

		[Token(Token = "0x40019D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool[] CreateRigidbody;

		[Token(Token = "0x40019D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool[] CreateMeshCollider;

		[Token(Token = "0x40019D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public RagdollPhysics[] Physics;

		[Token(Token = "0x40019D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool[] Inherit;

		[Token(Token = "0x40019D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x40019DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SkinnedMeshRenderer _skinnedMeshRenderer;

		[Token(Token = "0x17000331")]
		public MeshRenderer MeshRenderer
		{
			[Token(Token = "0x6001C24")]
			[Address(RVA = "0x1E810A4", Offset = "0x1E810A4", VA = "0x1E810A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000332")]
		public SkinnedMeshRenderer SkinnedMeshRenderer
		{
			[Token(Token = "0x6001C25")]
			[Address(RVA = "0x1E81150", Offset = "0x1E81150", VA = "0x1E81150")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000333")]
		public bool IsSkinned
		{
			[Token(Token = "0x6001C26")]
			[Address(RVA = "0x1E7C270", Offset = "0x1E7C270", VA = "0x1E7C270")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000334")]
		public Renderer Renderer
		{
			[Token(Token = "0x6001C27")]
			[Address(RVA = "0x1E811FC", Offset = "0x1E811FC", VA = "0x1E811FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000335")]
		public Material FaceMaterial
		{
			[Token(Token = "0x6001C28")]
			[Address(RVA = "0x1E7A560", Offset = "0x1E7A560", VA = "0x1E7A560")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000336")]
		public bool RequireLocal
		{
			[Token(Token = "0x6001C29")]
			[Address(RVA = "0x1E76DEC", Offset = "0x1E76DEC", VA = "0x1E76DEC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001C2A")]
		[Address(RVA = "0x1E8133C", Offset = "0x1E8133C", VA = "0x1E8133C", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001C2B")]
		[Address(RVA = "0x1E81234", Offset = "0x1E81234", VA = "0x1E81234")]
		public Material TryGetMaterial()
		{
			return null;
		}

		[Token(Token = "0x6001C2C")]
		[Address(RVA = "0x1E813F0", Offset = "0x1E813F0", VA = "0x1E813F0")]
		public MeshTarget()
		{
		}
	}
	[Token(Token = "0x20003F0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x146901C", Offset = "0x146901C")]
	public class MouseBehaviour : CutterBehaviour
	{
		[Token(Token = "0x40019DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 _from;

		[Token(Token = "0x40019DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 _to;

		[Token(Token = "0x40019DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool _isDragging;

		[Token(Token = "0x17000337")]
		public LineRenderer LR
		{
			[Token(Token = "0x6001C2D")]
			[Address(RVA = "0x1E81588", Offset = "0x1E81588", VA = "0x1E81588")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C2E")]
		[Address(RVA = "0x1E815D8", Offset = "0x1E815D8", VA = "0x1E815D8", Slot = "4")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001C2F")]
		[Address(RVA = "0x1E8186C", Offset = "0x1E8186C", VA = "0x1E8186C")]
		private void Cut()
		{
		}

		[Token(Token = "0x6001C30")]
		[Address(RVA = "0x1E81ACC", Offset = "0x1E81ACC", VA = "0x1E81ACC")]
		private void OnCreated(Info info, MeshCreationData cData)
		{
		}

		[Token(Token = "0x6001C31")]
		[Address(RVA = "0x1E81758", Offset = "0x1E81758", VA = "0x1E81758")]
		private void VisualizeLine(bool value)
		{
		}

		[Token(Token = "0x6001C32")]
		[Address(RVA = "0x1E81B64", Offset = "0x1E81B64", VA = "0x1E81B64")]
		public MouseBehaviour()
		{
		}
	}
	[Token(Token = "0x20003F1")]
	public class PlaneBehaviour : CutterBehaviour
	{
		[Token(Token = "0x40019DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float DebugPlaneLength;

		[Token(Token = "0x6001C33")]
		[Address(RVA = "0x1E81CAC", Offset = "0x1E81CAC", VA = "0x1E81CAC")]
		public void Cut()
		{
		}

		[Token(Token = "0x6001C34")]
		[Address(RVA = "0x1E81EC4", Offset = "0x1E81EC4", VA = "0x1E81EC4")]
		private void OnCreated(Info info, MeshCreationData cData)
		{
		}

		[Token(Token = "0x6001C35")]
		[Address(RVA = "0x1E81F5C", Offset = "0x1E81F5C", VA = "0x1E81F5C")]
		public PlaneBehaviour()
		{
		}
	}
	[Token(Token = "0x20003F2")]
	public class ReloadDemo : MonoBehaviour
	{
		[Token(Token = "0x6001C36")]
		[Address(RVA = "0x1E81FC8", Offset = "0x1E81FC8", VA = "0x1E81FC8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C37")]
		[Address(RVA = "0x1E82058", Offset = "0x1E82058", VA = "0x1E82058")]
		public ReloadDemo()
		{
		}
	}
}
namespace DynamicFogAndMist
{
	[Token(Token = "0x20003F3")]
	public class Demo1 : MonoBehaviour
	{
		[Token(Token = "0x40019DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GUIStyle labelStyle;

		[Token(Token = "0x6001C38")]
		[Address(RVA = "0x34E6B58", Offset = "0x34E6B58", VA = "0x34E6B58")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001C39")]
		[Address(RVA = "0x34E6CDC", Offset = "0x34E6CDC", VA = "0x34E6CDC")]
		public Demo1()
		{
		}
	}
	[Token(Token = "0x20003F4")]
	public class Demo2 : MonoBehaviour
	{
		[Token(Token = "0x40019E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GUIStyle labelStyle;

		[Token(Token = "0x6001C3A")]
		[Address(RVA = "0x34E6CE4", Offset = "0x34E6CE4", VA = "0x34E6CE4")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001C3B")]
		[Address(RVA = "0x34E6E68", Offset = "0x34E6E68", VA = "0x34E6E68")]
		public Demo2()
		{
		}
	}
	[Token(Token = "0x20003F5")]
	public class RotatingSign : MonoBehaviour
	{
		[Token(Token = "0x6001C3C")]
		[Address(RVA = "0x1E74DF0", Offset = "0x1E74DF0", VA = "0x1E74DF0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C3D")]
		[Address(RVA = "0x1E74F7C", Offset = "0x1E74F7C", VA = "0x1E74F7C")]
		private void ToggleFogStyle()
		{
		}

		[Token(Token = "0x6001C3E")]
		[Address(RVA = "0x1E75040", Offset = "0x1E75040", VA = "0x1E75040")]
		public RotatingSign()
		{
		}
	}
	[Token(Token = "0x20003F6")]
	public class MyFPSCounter : MonoBehaviour
	{
		[Token(Token = "0x40019E1")]
		private const float fpsMeasurePeriod = 0.5f;

		[Token(Token = "0x40019E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int m_FpsAccumulator;

		[Token(Token = "0x40019E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_FpsNextPeriod;

		[Token(Token = "0x40019E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_CurrentFps;

		[Token(Token = "0x40019E5")]
		private const string display = "{0} FPS";

		[Token(Token = "0x40019E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Text m_GuiText;

		[Token(Token = "0x6001C3F")]
		[Address(RVA = "0x1E749F4", Offset = "0x1E749F4", VA = "0x1E749F4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C40")]
		[Address(RVA = "0x1E74A68", Offset = "0x1E74A68", VA = "0x1E74A68")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C41")]
		[Address(RVA = "0x1E74B64", Offset = "0x1E74B64", VA = "0x1E74B64")]
		public MyFPSCounter()
		{
		}
	}
	[Token(Token = "0x20003F7")]
	public class DemoFogOfWar : MonoBehaviour
	{
		[Token(Token = "0x40019E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool fogCuttingOn;

		[Token(Token = "0x40019E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GUIStyle labelStyle;

		[Token(Token = "0x6001C42")]
		[Address(RVA = "0x34E70EC", Offset = "0x34E70EC", VA = "0x34E70EC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C43")]
		[Address(RVA = "0x34E79D8", Offset = "0x34E79D8", VA = "0x34E79D8")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001C44")]
		[Address(RVA = "0x34E7D24", Offset = "0x34E7D24", VA = "0x34E7D24")]
		public DemoFogOfWar()
		{
		}
	}
	[Token(Token = "0x20003F8")]
	public class BonusCylinderHit : MonoBehaviour
	{
		[Token(Token = "0x2000713")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A9AC", Offset = "0x146A9AC")]
		private sealed class <DestroyCylinder>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002794")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002795")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002796")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BonusCylinderHit <>4__this;

			[Token(Token = "0x4002797")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject ball;

			[Token(Token = "0x4002798")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <k>5__2;

			[Token(Token = "0x1700059D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002A82")]
				[Address(RVA = "0x34E6AE8", Offset = "0x34E6AE8", VA = "0x34E6AE8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700059E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A84")]
				[Address(RVA = "0x34E6B50", Offset = "0x34E6B50", VA = "0x34E6B50", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A7F")]
			[Address(RVA = "0x34E6844", Offset = "0x34E6844", VA = "0x34E6844")]
			[DebuggerHidden]
			public <DestroyCylinder>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x6002A80")]
			[Address(RVA = "0x34E6878", Offset = "0x34E6878", VA = "0x34E6878", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002A81")]
			[Address(RVA = "0x34E687C", Offset = "0x34E687C", VA = "0x34E687C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A83")]
			[Address(RVA = "0x34E6AF0", Offset = "0x34E6AF0", VA = "0x34E6AF0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6001C45")]
		[Address(RVA = "0x34E667C", Offset = "0x34E667C", VA = "0x34E667C")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001C46")]
		[Address(RVA = "0x34E67AC", Offset = "0x34E67AC", VA = "0x34E67AC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1486B60", Offset = "0x1486B60")]
		private IEnumerator DestroyCylinder(GameObject ball)
		{
			return null;
		}

		[Token(Token = "0x6001C47")]
		[Address(RVA = "0x34E6870", Offset = "0x34E6870", VA = "0x34E6870")]
		public BonusCylinderHit()
		{
		}
	}
	[Token(Token = "0x20003F9")]
	public class Game : MonoBehaviour
	{
		[Token(Token = "0x2000714")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A9BC", Offset = "0x146A9BC")]
		private sealed class <LaunchBall>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002799")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400279A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400279B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Game <>4__this;

			[Token(Token = "0x400279C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private GameObject <ballClone>5__2;

			[Token(Token = "0x1700059F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002A88")]
				[Address(RVA = "0x1E74984", Offset = "0x1E74984", VA = "0x1E74984", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005A0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A8A")]
				[Address(RVA = "0x1E749EC", Offset = "0x1E749EC", VA = "0x1E749EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A85")]
			[Address(RVA = "0x1E74624", Offset = "0x1E74624", VA = "0x1E74624")]
			[DebuggerHidden]
			public <LaunchBall>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6002A86")]
			[Address(RVA = "0x1E7466C", Offset = "0x1E7466C", VA = "0x1E7466C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002A87")]
			[Address(RVA = "0x1E74670", Offset = "0x1E74670", VA = "0x1E74670", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A89")]
			[Address(RVA = "0x1E7498C", Offset = "0x1E7498C", VA = "0x1E7498C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40019E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject ball;

		[Token(Token = "0x40019EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GUIStyle labelStyle;

		[Token(Token = "0x40019EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int score;

		[Token(Token = "0x40019EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int impacts;

		[Token(Token = "0x40019ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int fireCount;

		[Token(Token = "0x40019EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string scoreText;

		[Token(Token = "0x40019EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Game _instance;

		[Token(Token = "0x17000338")]
		public static Game instance
		{
			[Token(Token = "0x6001C48")]
			[Address(RVA = "0x1E739E4", Offset = "0x1E739E4", VA = "0x1E739E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C49")]
		[Address(RVA = "0x1E73AB8", Offset = "0x1E73AB8", VA = "0x1E73AB8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C4A")]
		[Address(RVA = "0x1E73D98", Offset = "0x1E73D98", VA = "0x1E73D98")]
		private void AddBonusCylinder(Transform pillarTransform)
		{
		}

		[Token(Token = "0x6001C4B")]
		[Address(RVA = "0x1E742C0", Offset = "0x1E742C0", VA = "0x1E742C0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001C4C")]
		[Address(RVA = "0x1E743E8", Offset = "0x1E743E8", VA = "0x1E743E8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C4D")]
		[Address(RVA = "0x1E744B0", Offset = "0x1E744B0", VA = "0x1E744B0")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001C4E")]
		[Address(RVA = "0x1E74434", Offset = "0x1E74434", VA = "0x1E74434")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1486BC4", Offset = "0x1486BC4")]
		private IEnumerator LaunchBall()
		{
			return null;
		}

		[Token(Token = "0x6001C4F")]
		[Address(RVA = "0x1E74650", Offset = "0x1E74650", VA = "0x1E74650")]
		public void AnnotateScore(int points)
		{
		}

		[Token(Token = "0x6001C50")]
		[Address(RVA = "0x1E7400C", Offset = "0x1E7400C", VA = "0x1E7400C")]
		private void UpdateScoreText()
		{
		}

		[Token(Token = "0x6001C51")]
		[Address(RVA = "0x1E74664", Offset = "0x1E74664", VA = "0x1E74664")]
		public Game()
		{
		}
	}
	[Token(Token = "0x20003FA")]
	public class PillarManager : MonoBehaviour
	{
		[Token(Token = "0x40019F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float initialX;

		[Token(Token = "0x6001C52")]
		[Address(RVA = "0x1E74B6C", Offset = "0x1E74B6C", VA = "0x1E74B6C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C53")]
		[Address(RVA = "0x1E74CEC", Offset = "0x1E74CEC", VA = "0x1E74CEC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C54")]
		[Address(RVA = "0x1E74BA8", Offset = "0x1E74BA8", VA = "0x1E74BA8")]
		private void RepositionPillar()
		{
		}

		[Token(Token = "0x6001C55")]
		[Address(RVA = "0x1E74D88", Offset = "0x1E74D88", VA = "0x1E74D88")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001C56")]
		[Address(RVA = "0x1E74DE8", Offset = "0x1E74DE8", VA = "0x1E74DE8")]
		public PillarManager()
		{
		}
	}
	[Token(Token = "0x20003FB")]
	public class DemoFoWPlane : MonoBehaviour
	{
		[Token(Token = "0x40019F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Terrain terrain;

		[Token(Token = "0x40019F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GUIStyle labelStyle;

		[Token(Token = "0x40019F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private DynamicFogOfWar fow;

		[Token(Token = "0x6001C57")]
		[Address(RVA = "0x34E6E70", Offset = "0x34E6E70", VA = "0x34E6E70")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C58")]
		[Address(RVA = "0x34E6EC0", Offset = "0x34E6EC0", VA = "0x34E6EC0")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001C59")]
		[Address(RVA = "0x34E7038", Offset = "0x34E7038", VA = "0x34E7038")]
		private void OnMouseDrag()
		{
		}

		[Token(Token = "0x6001C5A")]
		[Address(RVA = "0x34E70E4", Offset = "0x34E70E4", VA = "0x34E70E4")]
		public DemoFoWPlane()
		{
		}
	}
	[Token(Token = "0x20003FC")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1469080", Offset = "0x1469080")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x1469080", Offset = "0x1469080")]
	[ImageEffectAllowedInSceneView]
	public class DynamicFog : DynamicFogBase
	{
		[Token(Token = "0x6001C5B")]
		[Address(RVA = "0x34E7D34", Offset = "0x34E7D34", VA = "0x34E7D34")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001C5C")]
		[Address(RVA = "0x34E8E94", Offset = "0x34E8E94", VA = "0x34E8E94")]
		public DynamicFog()
		{
		}
	}
	[Token(Token = "0x20003FD")]
	public enum FOG_TYPE
	{
		[Token(Token = "0x40019F5")]
		DesktopFogWithSkyHaze,
		[Token(Token = "0x40019F6")]
		MobileFogWithSkyHaze,
		[Token(Token = "0x40019F7")]
		MobileFogOnlyGround,
		[Token(Token = "0x40019F8")]
		DesktopFogPlusWithSkyHaze,
		[Token(Token = "0x40019F9")]
		MobileFogSimple,
		[Token(Token = "0x40019FA")]
		MobileFogBasic,
		[Token(Token = "0x40019FB")]
		MobileFogOrthogonal,
		[Token(Token = "0x40019FC")]
		DesktopFogPlusOrthogonal
	}
	[Token(Token = "0x20003FE")]
	internal static class FOG_TYPE_Ext
	{
		[Token(Token = "0x6001C5D")]
		[Address(RVA = "0x1E733A8", Offset = "0x1E733A8", VA = "0x1E733A8")]
		public static bool isPlus(this FOG_TYPE fogType)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003FF")]
	public enum FOG_PRESET
	{
		[Token(Token = "0x40019FE")]
		Clear,
		[Token(Token = "0x40019FF")]
		Mist,
		[Token(Token = "0x4001A00")]
		WindyMist,
		[Token(Token = "0x4001A01")]
		GroundFog,
		[Token(Token = "0x4001A02")]
		Fog,
		[Token(Token = "0x4001A03")]
		HeavyFog,
		[Token(Token = "0x4001A04")]
		SandStorm,
		[Token(Token = "0x4001A05")]
		Custom
	}
	[Token(Token = "0x2000400")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1469138", Offset = "0x1469138")]
	public class DynamicFogBase : MonoBehaviour
	{
		[Token(Token = "0x4001A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private FOG_TYPE _effectType;

		[Token(Token = "0x4001A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private FOG_PRESET _preset;

		[Token(Token = "0x4001A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DynamicFogProfile _profile;

		[Token(Token = "0x4001A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool _profileSync;

		[Token(Token = "0x4001A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool _useFogVolumes;

		[Token(Token = "0x4001A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		[SerializeField]
		private bool _enableDithering;

		[Token(Token = "0x4001A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1476180", Offset = "0x1476180")]
		private float _ditherStrength;

		[Token(Token = "0x4001A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x14761C4", Offset = "0x14761C4")]
		protected float _alpha;

		[Token(Token = "0x4001A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1476204", Offset = "0x1476204")]
		private float _noiseStrength;

		[Token(Token = "0x4001A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1476244", Offset = "0x1476244")]
		private float _noiseScale;

		[Token(Token = "0x4001A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1476288", Offset = "0x1476288")]
		private float _distance;

		[Token(Token = "0x4001A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x14762CC", Offset = "0x14762CC")]
		private float _distanceFallOff;

		[Token(Token = "0x4001A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1476310", Offset = "0x1476310")]
		private float _maxDistance;

		[Token(Token = "0x4001A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1476354", Offset = "0x1476354")]
		private float _maxDistanceFallOff;

		[Token(Token = "0x4001A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1476398", Offset = "0x1476398")]
		private float _height;

		[Token(Token = "0x4001A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x14763DC", Offset = "0x14763DC")]
		private float _maxHeight;

		[Token(Token = "0x4001A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1476420", Offset = "0x1476420")]
		private float _heightFallOff;

		[Token(Token = "0x4001A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float _baselineHeight;

		[Token(Token = "0x4001A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private bool _clipUnderBaseline;

		[Token(Token = "0x4001A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1476484", Offset = "0x1476484")]
		private float _turbulence;

		[Token(Token = "0x4001A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x14764C4", Offset = "0x14764C4")]
		private float _speed;

		[Token(Token = "0x4001A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Vector3 _windDirection;

		[Token(Token = "0x4001A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private UnityEngine.Color _color;

		[Token(Token = "0x4001A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private UnityEngine.Color _color2;

		[Token(Token = "0x4001A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1476534", Offset = "0x1476534")]
		private float _skyHaze;

		[Token(Token = "0x4001A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1476578", Offset = "0x1476578")]
		private float _skySpeed;

		[Token(Token = "0x4001A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x14765B8", Offset = "0x14765B8")]
		private float _skyNoiseStrength;

		[Token(Token = "0x4001A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x14765F8", Offset = "0x14765F8")]
		private float _skyAlpha;

		[Token(Token = "0x4001A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private GameObject _sun;

		[Token(Token = "0x4001A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private bool _fogOfWarEnabled;

		[Token(Token = "0x4001A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		private Vector3 _fogOfWarCenter;

		[Token(Token = "0x4001A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private Vector3 _fogOfWarSize;

		[Token(Token = "0x4001A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private int _fogOfWarTextureSize;

		[Token(Token = "0x4001A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		protected bool _useSinglePassStereoRenderingMatrix;

		[Token(Token = "0x4001A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		[SerializeField]
		private bool _useXZDistance;

		[Token(Token = "0x4001A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x14766A8", Offset = "0x14766A8")]
		private float _scattering;

		[Token(Token = "0x4001A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private UnityEngine.Color _scatteringColor;

		[Token(Token = "0x4001A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Material fogMatAdv;

		[Token(Token = "0x4001A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Material fogMatFogSky;

		[Token(Token = "0x4001A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Material fogMatOnlyFog;

		[Token(Token = "0x4001A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Material fogMatVol;

		[Token(Token = "0x4001A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Material fogMatSimple;

		[Token(Token = "0x4001A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Material fogMatBasic;

		[Token(Token = "0x4001A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Material fogMatOrthogonal;

		[Token(Token = "0x4001A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Material fogMatDesktopPlusOrthogonal;

		[Token(Token = "0x4001A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		protected Material fogMat;

		[Token(Token = "0x4001A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private float initialFogAlpha;

		[Token(Token = "0x4001A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private float targetFogAlpha;

		[Token(Token = "0x4001A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private float initialSkyHazeAlpha;

		[Token(Token = "0x4001A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private float targetSkyHazeAlpha;

		[Token(Token = "0x4001A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private bool targetFogColors;

		[Token(Token = "0x4001A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private UnityEngine.Color initialFogColor1;

		[Token(Token = "0x4001A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private UnityEngine.Color targetFogColor1;

		[Token(Token = "0x4001A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private UnityEngine.Color initialFogColor2;

		[Token(Token = "0x4001A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private UnityEngine.Color targetFogColor2;

		[Token(Token = "0x4001A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		private float transitionDuration;

		[Token(Token = "0x4001A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private float transitionStartTime;

		[Token(Token = "0x4001A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		private float currentFogAlpha;

		[Token(Token = "0x4001A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private float currentSkyHazeAlpha;

		[Token(Token = "0x4001A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		private bool transitionAlpha;

		[Token(Token = "0x4001A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x195")]
		private bool transitionColor;

		[Token(Token = "0x4001A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x196")]
		private bool transitionProfile;

		[Token(Token = "0x4001A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private DynamicFogProfile initialProfile;

		[Token(Token = "0x4001A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private DynamicFogProfile targetProfile;

		[Token(Token = "0x4001A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private UnityEngine.Color currentFogColor1;

		[Token(Token = "0x4001A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private UnityEngine.Color currentFogColor2;

		[Token(Token = "0x4001A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		protected Camera currentCamera;

		[Token(Token = "0x4001A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private Texture2D fogOfWarTexture;

		[Token(Token = "0x4001A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private Color32[] fogOfWarColorBuffer;

		[Token(Token = "0x4001A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private Light sunLight;

		[Token(Token = "0x4001A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private Vector3 sunDirection;

		[Token(Token = "0x4001A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		private UnityEngine.Color sunColor;

		[Token(Token = "0x4001A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		private float sunIntensity;

		[Token(Token = "0x4001A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static DynamicFog _fog;

		[Token(Token = "0x4001A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private List<string> shaderKeywords;

		[Token(Token = "0x4001A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		protected bool matOrtho;

		[Token(Token = "0x4001A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x211")]
		protected bool shouldUpdateMaterialProperties;

		[Token(Token = "0x17000339")]
		public FOG_TYPE effectType
		{
			[Token(Token = "0x6001C5E")]
			[Address(RVA = "0x34E906C", Offset = "0x34E906C", VA = "0x34E906C")]
			get
			{
				return default(FOG_TYPE);
			}
			[Token(Token = "0x6001C5F")]
			[Address(RVA = "0x34E9074", Offset = "0x34E9074", VA = "0x34E9074")]
			set
			{
			}
		}

		[Token(Token = "0x1700033A")]
		public FOG_PRESET preset
		{
			[Token(Token = "0x6001C60")]
			[Address(RVA = "0x34E9108", Offset = "0x34E9108", VA = "0x34E9108")]
			get
			{
				return default(FOG_PRESET);
			}
			[Token(Token = "0x6001C61")]
			[Address(RVA = "0x34E73A4", Offset = "0x34E73A4", VA = "0x34E73A4")]
			set
			{
			}
		}

		[Token(Token = "0x1700033B")]
		public DynamicFogProfile profile
		{
			[Token(Token = "0x6001C62")]
			[Address(RVA = "0x34E9110", Offset = "0x34E9110", VA = "0x34E9110")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C63")]
			[Address(RVA = "0x34E9118", Offset = "0x34E9118", VA = "0x34E9118")]
			set
			{
			}
		}

		[Token(Token = "0x1700033C")]
		public bool profileSync
		{
			[Token(Token = "0x6001C64")]
			[Address(RVA = "0x34E9234", Offset = "0x34E9234", VA = "0x34E9234")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C65")]
			[Address(RVA = "0x34E923C", Offset = "0x34E923C", VA = "0x34E923C")]
			set
			{
			}
		}

		[Token(Token = "0x1700033D")]
		public bool useFogVolumes
		{
			[Token(Token = "0x6001C66")]
			[Address(RVA = "0x34E925C", Offset = "0x34E925C", VA = "0x34E925C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C67")]
			[Address(RVA = "0x34E9264", Offset = "0x34E9264", VA = "0x34E9264")]
			set
			{
			}
		}

		[Token(Token = "0x1700033E")]
		public bool enableDithering
		{
			[Token(Token = "0x6001C68")]
			[Address(RVA = "0x34E9284", Offset = "0x34E9284", VA = "0x34E9284")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C69")]
			[Address(RVA = "0x34E928C", Offset = "0x34E928C", VA = "0x34E928C")]
			set
			{
			}
		}

		[Token(Token = "0x1700033F")]
		public float ditherStrength
		{
			[Token(Token = "0x6001C6A")]
			[Address(RVA = "0x34E92E8", Offset = "0x34E92E8", VA = "0x34E92E8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C6B")]
			[Address(RVA = "0x34E92F0", Offset = "0x34E92F0", VA = "0x34E92F0")]
			set
			{
			}
		}

		[Token(Token = "0x17000340")]
		public float alpha
		{
			[Token(Token = "0x6001C6C")]
			[Address(RVA = "0x34E9340", Offset = "0x34E9340", VA = "0x34E9340")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C6D")]
			[Address(RVA = "0x34E9348", Offset = "0x34E9348", VA = "0x34E9348")]
			set
			{
			}
		}

		[Token(Token = "0x17000341")]
		public float noiseStrength
		{
			[Token(Token = "0x6001C6E")]
			[Address(RVA = "0x34E9368", Offset = "0x34E9368", VA = "0x34E9368")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C6F")]
			[Address(RVA = "0x34E9370", Offset = "0x34E9370", VA = "0x34E9370")]
			set
			{
			}
		}

		[Token(Token = "0x17000342")]
		public float noiseScale
		{
			[Token(Token = "0x6001C70")]
			[Address(RVA = "0x34E9390", Offset = "0x34E9390", VA = "0x34E9390")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C71")]
			[Address(RVA = "0x34E9398", Offset = "0x34E9398", VA = "0x34E9398")]
			set
			{
			}
		}

		[Token(Token = "0x17000343")]
		public float distance
		{
			[Token(Token = "0x6001C72")]
			[Address(RVA = "0x34E93F0", Offset = "0x34E93F0", VA = "0x34E93F0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C73")]
			[Address(RVA = "0x34E93F8", Offset = "0x34E93F8", VA = "0x34E93F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000344")]
		public float distanceFallOff
		{
			[Token(Token = "0x6001C74")]
			[Address(RVA = "0x34E9418", Offset = "0x34E9418", VA = "0x34E9418")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C75")]
			[Address(RVA = "0x34E9420", Offset = "0x34E9420", VA = "0x34E9420")]
			set
			{
			}
		}

		[Token(Token = "0x17000345")]
		public float maxDistance
		{
			[Token(Token = "0x6001C76")]
			[Address(RVA = "0x34E9440", Offset = "0x34E9440", VA = "0x34E9440")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C77")]
			[Address(RVA = "0x34E9448", Offset = "0x34E9448", VA = "0x34E9448")]
			set
			{
			}
		}

		[Token(Token = "0x17000346")]
		public float maxDistanceFallOff
		{
			[Token(Token = "0x6001C78")]
			[Address(RVA = "0x34E9468", Offset = "0x34E9468", VA = "0x34E9468")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C79")]
			[Address(RVA = "0x34E9470", Offset = "0x34E9470", VA = "0x34E9470")]
			set
			{
			}
		}

		[Token(Token = "0x17000347")]
		public float height
		{
			[Token(Token = "0x6001C7A")]
			[Address(RVA = "0x34E9490", Offset = "0x34E9490", VA = "0x34E9490")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C7B")]
			[Address(RVA = "0x34E9498", Offset = "0x34E9498", VA = "0x34E9498")]
			set
			{
			}
		}

		[Token(Token = "0x17000348")]
		public float maxHeight
		{
			[Token(Token = "0x6001C7C")]
			[Address(RVA = "0x34E94B8", Offset = "0x34E94B8", VA = "0x34E94B8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C7D")]
			[Address(RVA = "0x34E94C0", Offset = "0x34E94C0", VA = "0x34E94C0")]
			set
			{
			}
		}

		[Token(Token = "0x17000349")]
		public float heightFallOff
		{
			[Token(Token = "0x6001C7E")]
			[Address(RVA = "0x34E9518", Offset = "0x34E9518", VA = "0x34E9518")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C7F")]
			[Address(RVA = "0x34E9520", Offset = "0x34E9520", VA = "0x34E9520")]
			set
			{
			}
		}

		[Token(Token = "0x1700034A")]
		public float baselineHeight
		{
			[Token(Token = "0x6001C80")]
			[Address(RVA = "0x34E9540", Offset = "0x34E9540", VA = "0x34E9540")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C81")]
			[Address(RVA = "0x34E9548", Offset = "0x34E9548", VA = "0x34E9548")]
			set
			{
			}
		}

		[Token(Token = "0x1700034B")]
		public bool clipUnderBaseline
		{
			[Token(Token = "0x6001C82")]
			[Address(RVA = "0x34E9598", Offset = "0x34E9598", VA = "0x34E9598")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C83")]
			[Address(RVA = "0x34E95A0", Offset = "0x34E95A0", VA = "0x34E95A0")]
			set
			{
			}
		}

		[Token(Token = "0x1700034C")]
		public float turbulence
		{
			[Token(Token = "0x6001C84")]
			[Address(RVA = "0x34E95FC", Offset = "0x34E95FC", VA = "0x34E95FC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C85")]
			[Address(RVA = "0x34E9604", Offset = "0x34E9604", VA = "0x34E9604")]
			set
			{
			}
		}

		[Token(Token = "0x1700034D")]
		public float speed
		{
			[Token(Token = "0x6001C86")]
			[Address(RVA = "0x34E9624", Offset = "0x34E9624", VA = "0x34E9624")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C87")]
			[Address(RVA = "0x34E962C", Offset = "0x34E962C", VA = "0x34E962C")]
			set
			{
			}
		}

		[Token(Token = "0x1700034E")]
		public Vector3 windDirection
		{
			[Token(Token = "0x6001C88")]
			[Address(RVA = "0x34E964C", Offset = "0x34E964C", VA = "0x34E964C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001C89")]
			[Address(RVA = "0x34E9658", Offset = "0x34E9658", VA = "0x34E9658")]
			set
			{
			}
		}

		[Token(Token = "0x1700034F")]
		public UnityEngine.Color color
		{
			[Token(Token = "0x6001C8A")]
			[Address(RVA = "0x34E9740", Offset = "0x34E9740", VA = "0x34E9740")]
			get
			{
				return default(UnityEngine.Color);
			}
			[Token(Token = "0x6001C8B")]
			[Address(RVA = "0x34E974C", Offset = "0x34E974C", VA = "0x34E974C")]
			set
			{
			}
		}

		[Token(Token = "0x17000350")]
		public UnityEngine.Color color2
		{
			[Token(Token = "0x6001C8C")]
			[Address(RVA = "0x34E97C4", Offset = "0x34E97C4", VA = "0x34E97C4")]
			get
			{
				return default(UnityEngine.Color);
			}
			[Token(Token = "0x6001C8D")]
			[Address(RVA = "0x34E97D0", Offset = "0x34E97D0", VA = "0x34E97D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000351")]
		public float skyHaze
		{
			[Token(Token = "0x6001C8E")]
			[Address(RVA = "0x34E9848", Offset = "0x34E9848", VA = "0x34E9848")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C8F")]
			[Address(RVA = "0x34E9850", Offset = "0x34E9850", VA = "0x34E9850")]
			set
			{
			}
		}

		[Token(Token = "0x17000352")]
		public float skySpeed
		{
			[Token(Token = "0x6001C90")]
			[Address(RVA = "0x34E9870", Offset = "0x34E9870", VA = "0x34E9870")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C91")]
			[Address(RVA = "0x34E9878", Offset = "0x34E9878", VA = "0x34E9878")]
			set
			{
			}
		}

		[Token(Token = "0x17000353")]
		public float skyNoiseStrength
		{
			[Token(Token = "0x6001C92")]
			[Address(RVA = "0x34E9898", Offset = "0x34E9898", VA = "0x34E9898")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C93")]
			[Address(RVA = "0x34E98A0", Offset = "0x34E98A0", VA = "0x34E98A0")]
			set
			{
			}
		}

		[Token(Token = "0x17000354")]
		public float skyAlpha
		{
			[Token(Token = "0x6001C94")]
			[Address(RVA = "0x34E98C0", Offset = "0x34E98C0", VA = "0x34E98C0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C95")]
			[Address(RVA = "0x34E98C8", Offset = "0x34E98C8", VA = "0x34E98C8")]
			set
			{
			}
		}

		[Token(Token = "0x17000355")]
		public GameObject sun
		{
			[Token(Token = "0x6001C96")]
			[Address(RVA = "0x34E98E8", Offset = "0x34E98E8", VA = "0x34E98E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C97")]
			[Address(RVA = "0x34E98F0", Offset = "0x34E98F0", VA = "0x34E98F0")]
			set
			{
			}
		}

		[Token(Token = "0x17000356")]
		public bool fogOfWarEnabled
		{
			[Token(Token = "0x6001C98")]
			[Address(RVA = "0x34E99B0", Offset = "0x34E99B0", VA = "0x34E99B0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C99")]
			[Address(RVA = "0x34E73BC", Offset = "0x34E73BC", VA = "0x34E73BC")]
			set
			{
			}
		}

		[Token(Token = "0x17000357")]
		public Vector3 fogOfWarCenter
		{
			[Token(Token = "0x6001C9A")]
			[Address(RVA = "0x34E99B8", Offset = "0x34E99B8", VA = "0x34E99B8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001C9B")]
			[Address(RVA = "0x34E99C4", Offset = "0x34E99C4", VA = "0x34E99C4")]
			set
			{
			}
		}

		[Token(Token = "0x17000358")]
		public Vector3 fogOfWarSize
		{
			[Token(Token = "0x6001C9C")]
			[Address(RVA = "0x34E9AAC", Offset = "0x34E9AAC", VA = "0x34E9AAC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001C9D")]
			[Address(RVA = "0x34E9AB8", Offset = "0x34E9AB8", VA = "0x34E9AB8")]
			set
			{
			}
		}

		[Token(Token = "0x17000359")]
		public int fogOfWarTextureSize
		{
			[Token(Token = "0x6001C9E")]
			[Address(RVA = "0x34E9BA0", Offset = "0x34E9BA0", VA = "0x34E9BA0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001C9F")]
			[Address(RVA = "0x34E9BA8", Offset = "0x34E9BA8", VA = "0x34E9BA8")]
			set
			{
			}
		}

		[Token(Token = "0x1700035A")]
		public bool useSinglePassStereoRenderingMatrix
		{
			[Token(Token = "0x6001CA0")]
			[Address(RVA = "0x34E9BF8", Offset = "0x34E9BF8", VA = "0x34E9BF8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001CA1")]
			[Address(RVA = "0x34E9C00", Offset = "0x34E9C00", VA = "0x34E9C00")]
			set
			{
			}
		}

		[Token(Token = "0x1700035B")]
		public bool useXZDistance
		{
			[Token(Token = "0x6001CA2")]
			[Address(RVA = "0x34E9C5C", Offset = "0x34E9C5C", VA = "0x34E9C5C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001CA3")]
			[Address(RVA = "0x34E9C64", Offset = "0x34E9C64", VA = "0x34E9C64")]
			set
			{
			}
		}

		[Token(Token = "0x1700035C")]
		public float scattering
		{
			[Token(Token = "0x6001CA4")]
			[Address(RVA = "0x34E9CC0", Offset = "0x34E9CC0", VA = "0x34E9CC0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001CA5")]
			[Address(RVA = "0x34E9CC8", Offset = "0x34E9CC8", VA = "0x34E9CC8")]
			set
			{
			}
		}

		[Token(Token = "0x1700035D")]
		public UnityEngine.Color scatteringColor
		{
			[Token(Token = "0x6001CA6")]
			[Address(RVA = "0x34E9D18", Offset = "0x34E9D18", VA = "0x34E9D18")]
			get
			{
				return default(UnityEngine.Color);
			}
			[Token(Token = "0x6001CA7")]
			[Address(RVA = "0x34E9D24", Offset = "0x34E9D24", VA = "0x34E9D24")]
			set
			{
			}
		}

		[Token(Token = "0x1700035E")]
		public static DynamicFog instance
		{
			[Token(Token = "0x6001CA8")]
			[Address(RVA = "0x34E7250", Offset = "0x34E7250", VA = "0x34E7250")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035F")]
		public Camera fogCamera
		{
			[Token(Token = "0x6001CAA")]
			[Address(RVA = "0x34E9DA8", Offset = "0x34E9DA8", VA = "0x34E9DA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CA9")]
		[Address(RVA = "0x34E7C4C", Offset = "0x34E7C4C", VA = "0x34E7C4C")]
		public string GetCurrentPresetName()
		{
			return null;
		}

		[Token(Token = "0x6001CAB")]
		[Address(RVA = "0x34E9DB0", Offset = "0x34E9DB0", VA = "0x34E9DB0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001CAC")]
		[Address(RVA = "0x34E9EAC", Offset = "0x34E9EAC", VA = "0x34E9EAC")]
		private void Reset()
		{
		}

		[Token(Token = "0x6001CAD")]
		[Address(RVA = "0x34E9EB0", Offset = "0x34E9EB0", VA = "0x34E9EB0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001CAE")]
		[Address(RVA = "0x34E9DD4", Offset = "0x34E9DD4", VA = "0x34E9DD4")]
		private void Init()
		{
		}

		[Token(Token = "0x6001CAF")]
		[Address(RVA = "0x34EA440", Offset = "0x34EA440", VA = "0x34EA440")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CB0")]
		[Address(RVA = "0x34EAFA4", Offset = "0x34EAFA4", VA = "0x34EAFA4")]
		private void OnDidApplyAnimationProperties()
		{
		}

		[Token(Token = "0x6001CB1")]
		[Address(RVA = "0x34EAFB0", Offset = "0x34EAFB0", VA = "0x34EAFB0")]
		public void CheckPreset()
		{
		}

		[Token(Token = "0x6001CB2")]
		[Address(RVA = "0x34EBD4C", Offset = "0x34EBD4C", VA = "0x34EBD4C")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6001CB3")]
		[Address(RVA = "0x34EBDF4", Offset = "0x34EBDF4", VA = "0x34EBDF4")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001CB4")]
		[Address(RVA = "0x34E8DC0", Offset = "0x34E8DC0", VA = "0x34E8DC0")]
		protected void ResetMaterial()
		{
		}

		[Token(Token = "0x6001CB5")]
		[Address(RVA = "0x34E90C8", Offset = "0x34E90C8", VA = "0x34E90C8")]
		public void UpdateMaterialProperties()
		{
		}

		[Token(Token = "0x6001CB6")]
		[Address(RVA = "0x34E807C", Offset = "0x34E807C", VA = "0x34E807C")]
		protected void UpdateMaterialPropertiesNow()
		{
		}

		[Token(Token = "0x6001CB7")]
		[Address(RVA = "0x34EC13C", Offset = "0x34EC13C", VA = "0x34EC13C")]
		private void CopyTransitionValues()
		{
		}

		[Token(Token = "0x6001CB8")]
		[Address(RVA = "0x34EAACC", Offset = "0x34EAACC", VA = "0x34EAACC")]
		private void SetSkyData()
		{
		}

		[Token(Token = "0x6001CB9")]
		[Address(RVA = "0x34EAB58", Offset = "0x34EAB58", VA = "0x34EAB58")]
		private void UpdateFogColor()
		{
		}

		[Token(Token = "0x6001CBA")]
		[Address(RVA = "0x34EC168", Offset = "0x34EC168", VA = "0x34EC168")]
		public void SetTargetProfile(DynamicFogProfile targetProfile, float duration)
		{
		}

		[Token(Token = "0x6001CBB")]
		[Address(RVA = "0x34EC244", Offset = "0x34EC244", VA = "0x34EC244")]
		public void ClearTargetProfile(float duration)
		{
		}

		[Token(Token = "0x6001CBC")]
		[Address(RVA = "0x34EC24C", Offset = "0x34EC24C", VA = "0x34EC24C")]
		public void SetTargetAlpha(float newFogAlpha, float newSkyHazeAlpha, float duration)
		{
		}

		[Token(Token = "0x6001CBD")]
		[Address(RVA = "0x34EC2D8", Offset = "0x34EC2D8", VA = "0x34EC2D8")]
		public void ClearTargetAlpha(float duration)
		{
		}

		[Token(Token = "0x6001CBE")]
		[Address(RVA = "0x34EC2E8", Offset = "0x34EC2E8", VA = "0x34EC2E8")]
		public void SetTargetColors(UnityEngine.Color color1, UnityEngine.Color color2, float duration)
		{
		}

		[Token(Token = "0x6001CBF")]
		[Address(RVA = "0x34EC3E0", Offset = "0x34EC3E0", VA = "0x34EC3E0")]
		public void ClearTargetColors(float duration)
		{
		}

		[Token(Token = "0x6001CC0")]
		[Address(RVA = "0x34EA334", Offset = "0x34EA334", VA = "0x34EA334")]
		private void UpdateFogOfWarTexture()
		{
		}

		[Token(Token = "0x6001CC1")]
		[Address(RVA = "0x34E7598", Offset = "0x34E7598", VA = "0x34E7598")]
		public void SetFogOfWarAlpha(Vector3 worldPosition, float radius, float fogNewAlpha)
		{
		}

		[Token(Token = "0x6001CC2")]
		[Address(RVA = "0x34EC45C", Offset = "0x34EC45C", VA = "0x34EC45C")]
		public void ResetFogOfWarAlpha(Vector3 worldPosition, float radius)
		{
		}

		[Token(Token = "0x6001CC3")]
		[Address(RVA = "0x34E7418", Offset = "0x34E7418", VA = "0x34E7418")]
		public void ResetFogOfWar()
		{
		}

		[Token(Token = "0x6001CC4")]
		[Address(RVA = "0x34EC418", Offset = "0x34EC418", VA = "0x34EC418")]
		private int GetScaledSize(int size, float factor)
		{
			return default(int);
		}

		[Token(Token = "0x6001CC5")]
		[Address(RVA = "0x34E8E98", Offset = "0x34E8E98", VA = "0x34E8E98")]
		public DynamicFogBase()
		{
		}
	}
	[Token(Token = "0x2000401")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1469170", Offset = "0x1469170")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x1469170", Offset = "0x1469170")]
	[ImageEffectAllowedInSceneView]
	public class DynamicFogExclusive : DynamicFogBase
	{
		[Token(Token = "0x4001A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private RenderTexture rt;

		[Token(Token = "0x4001A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1476708", Offset = "0x1476708")]
		public float renderScale;

		[Token(Token = "0x6001CC6")]
		[Address(RVA = "0x1E7111C", Offset = "0x1E7111C", VA = "0x1E7111C")]
		private void OnPreRender()
		{
		}

		[Token(Token = "0x6001CC7")]
		[Address(RVA = "0x1E71358", Offset = "0x1E71358", VA = "0x1E71358")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x6001CC8")]
		[Address(RVA = "0x1E7168C", Offset = "0x1E7168C", VA = "0x1E7168C")]
		public DynamicFogExclusive()
		{
		}
	}
	[Token(Token = "0x2000402")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x1469218", Offset = "0x1469218")]
	public class DynamicFogManager : MonoBehaviour
	{
		[Token(Token = "0x4001A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1476724", Offset = "0x1476724")]
		public float alpha;

		[Token(Token = "0x4001A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x147673C", Offset = "0x147673C")]
		public float noiseStrength;

		[Token(Token = "0x4001A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1476754", Offset = "0x1476754")]
		public float distance;

		[Token(Token = "0x4001A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1476770", Offset = "0x1476770")]
		public float distanceFallOff;

		[Token(Token = "0x4001A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1476788", Offset = "0x1476788")]
		public float height;

		[Token(Token = "0x4001A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x14767A4", Offset = "0x14767A4")]
		public float heightFallOff;

		[Token(Token = "0x4001A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float baselineHeight;

		[Token(Token = "0x4001A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public UnityEngine.Color color;

		[Token(Token = "0x4001A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject sun;

		[Token(Token = "0x4001A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Light sunLight;

		[Token(Token = "0x4001A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 sunDirection;

		[Token(Token = "0x4001A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private UnityEngine.Color sunColor;

		[Token(Token = "0x4001A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float sunIntensity;

		[Token(Token = "0x6001CC9")]
		[Address(RVA = "0x1E7169C", Offset = "0x1E7169C", VA = "0x1E7169C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001CCA")]
		[Address(RVA = "0x1E716E4", Offset = "0x1E716E4", VA = "0x1E716E4")]
		private void Reset()
		{
		}

		[Token(Token = "0x6001CCB")]
		[Address(RVA = "0x1E71708", Offset = "0x1E71708", VA = "0x1E71708")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CCC")]
		[Address(RVA = "0x1E716C0", Offset = "0x1E716C0", VA = "0x1E716C0")]
		public void UpdateMaterialProperties()
		{
		}

		[Token(Token = "0x6001CCD")]
		[Address(RVA = "0x1E71B44", Offset = "0x1E71B44", VA = "0x1E71B44")]
		private void UpdateFogData()
		{
		}

		[Token(Token = "0x6001CCE")]
		[Address(RVA = "0x1E718A8", Offset = "0x1E718A8", VA = "0x1E718A8")]
		private void UpdateFogColor()
		{
		}

		[Token(Token = "0x6001CCF")]
		[Address(RVA = "0x1E71C2C", Offset = "0x1E71C2C", VA = "0x1E71C2C")]
		public DynamicFogManager()
		{
		}
	}
	[Token(Token = "0x2000403")]
	[ExecuteInEditMode]
	public class DynamicFogOfWar : MonoBehaviour
	{
		[Token(Token = "0x4001A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int fogOfWarTextureSize;

		[Token(Token = "0x4001A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material fogMat;

		[Token(Token = "0x4001A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static DynamicFogOfWar _instance;

		[Token(Token = "0x4001A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Texture2D fogOfWarTexture;

		[Token(Token = "0x4001A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color32[] fogOfWarColorBuffer;

		[Token(Token = "0x17000360")]
		public static DynamicFogOfWar instance
		{
			[Token(Token = "0x6001CD0")]
			[Address(RVA = "0x1E71D08", Offset = "0x1E71D08", VA = "0x1E71D08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CD1")]
		[Address(RVA = "0x1E71DE0", Offset = "0x1E71DE0", VA = "0x1E71DE0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001CD2")]
		[Address(RVA = "0x1E71F60", Offset = "0x1E71F60", VA = "0x1E71F60")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001CD3")]
		[Address(RVA = "0x1E72024", Offset = "0x1E72024", VA = "0x1E72024")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CD4")]
		[Address(RVA = "0x1E71E58", Offset = "0x1E71E58", VA = "0x1E71E58")]
		private void UpdateFogOfWarTexture()
		{
		}

		[Token(Token = "0x6001CD5")]
		[Address(RVA = "0x1E72134", Offset = "0x1E72134", VA = "0x1E72134")]
		private int GetScaledSize(int size, float factor)
		{
			return default(int);
		}

		[Token(Token = "0x6001CD6")]
		[Address(RVA = "0x1E722F8", Offset = "0x1E722F8", VA = "0x1E722F8")]
		public void SetFogOfWarAlpha(Vector3 worldPosition, float radius, float fogNewAlpha)
		{
		}

		[Token(Token = "0x6001CD7")]
		[Address(RVA = "0x1E72178", Offset = "0x1E72178", VA = "0x1E72178")]
		public void ResetFogOfWar()
		{
		}

		[Token(Token = "0x6001CD8")]
		[Address(RVA = "0x1E72790", Offset = "0x1E72790", VA = "0x1E72790")]
		public void SetFogOfWarTerrainBoundary(Terrain terrain, float borderWidth)
		{
		}

		[Token(Token = "0x6001CD9")]
		[Address(RVA = "0x1E72A30", Offset = "0x1E72A30", VA = "0x1E72A30")]
		public DynamicFogOfWar()
		{
		}
	}
	[Token(Token = "0x2000404")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x1469274", Offset = "0x1469274")]
	public class DynamicFogProfile : ScriptableObject
	{
		[Token(Token = "0x4001A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FOG_TYPE effectType;

		[Token(Token = "0x4001A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool enableDithering;

		[Token(Token = "0x4001A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x14767BC", Offset = "0x14767BC")]
		public float ditherStrength;

		[Token(Token = "0x4001A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x14767D8", Offset = "0x14767D8")]
		public float alpha;

		[Token(Token = "0x4001A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x14767F0", Offset = "0x14767F0")]
		public float noiseStrength;

		[Token(Token = "0x4001A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1476808", Offset = "0x1476808")]
		public float noiseScale;

		[Token(Token = "0x4001A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1476824", Offset = "0x1476824")]
		public float distance;

		[Token(Token = "0x4001A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1476840", Offset = "0x1476840")]
		public float distanceFallOff;

		[Token(Token = "0x4001A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x147685C", Offset = "0x147685C")]
		public float maxDistance;

		[Token(Token = "0x4001A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1476878", Offset = "0x1476878")]
		public float maxDistanceFallOff;

		[Token(Token = "0x4001A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1476894", Offset = "0x1476894")]
		public float height;

		[Token(Token = "0x4001A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x14768B0", Offset = "0x14768B0")]
		public float maxHeight;

		[Token(Token = "0x4001A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x14768CC", Offset = "0x14768CC")]
		public float heightFallOff;

		[Token(Token = "0x4001A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float baselineHeight;

		[Token(Token = "0x4001A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool clipUnderBaseline;

		[Token(Token = "0x4001A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x14768E8", Offset = "0x14768E8")]
		public float turbulence;

		[Token(Token = "0x4001A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1476900", Offset = "0x1476900")]
		public float speed;

		[Token(Token = "0x4001A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Vector3 windDirection;

		[Token(Token = "0x4001A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public UnityEngine.Color color;

		[Token(Token = "0x4001A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public UnityEngine.Color color2;

		[Token(Token = "0x4001A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1476918", Offset = "0x1476918")]
		public float skyHaze;

		[Token(Token = "0x4001A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1476934", Offset = "0x1476934")]
		public float skySpeed;

		[Token(Token = "0x4001A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x147694C", Offset = "0x147694C")]
		public float skyNoiseStrength;

		[Token(Token = "0x4001A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1476964", Offset = "0x1476964")]
		public float skyAlpha;

		[Token(Token = "0x4001A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool useXZDistance;

		[Token(Token = "0x4001A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x147697C", Offset = "0x147697C")]
		public float scattering;

		[Token(Token = "0x4001A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public UnityEngine.Color scatteringColor;

		[Token(Token = "0x6001CDA")]
		[Address(RVA = "0x1E72A40", Offset = "0x1E72A40", VA = "0x1E72A40")]
		public void Load(DynamicFogBase fog)
		{
		}

		[Token(Token = "0x6001CDB")]
		[Address(RVA = "0x1E72C34", Offset = "0x1E72C34", VA = "0x1E72C34")]
		public void Save(DynamicFogBase fog)
		{
		}

		[Token(Token = "0x6001CDC")]
		[Address(RVA = "0x1E72D28", Offset = "0x1E72D28", VA = "0x1E72D28")]
		public static void Lerp(DynamicFogProfile profile1, DynamicFogProfile profile2, float t, DynamicFogBase fog)
		{
		}

		[Token(Token = "0x6001CDD")]
		[Address(RVA = "0x1E73280", Offset = "0x1E73280", VA = "0x1E73280")]
		public DynamicFogProfile()
		{
		}
	}
	[Token(Token = "0x2000405")]
	public class FogVolume : MonoBehaviour
	{
		[Token(Token = "0x4001A82")]
		private const float GRAY = 0.8901961f;

		[Token(Token = "0x4001A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1476994", Offset = "0x1476994")]
		public bool enableProfileTransition;

		[Token(Token = "0x4001A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x14769CC", Offset = "0x14769CC")]
		public DynamicFogProfile targetProfile;

		[Token(Token = "0x4001A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1476A04", Offset = "0x1476A04")]
		public bool enableAlphaTransition;

		[Token(Token = "0x4001A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1476A3C", Offset = "0x1476A3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1476A3C", Offset = "0x1476A3C")]
		public float targetFogAlpha;

		[Token(Token = "0x4001A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1476A90", Offset = "0x1476A90")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1476A90", Offset = "0x1476A90")]
		public float targetSkyHazeAlpha;

		[Token(Token = "0x4001A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1476AE4", Offset = "0x1476AE4")]
		public bool enableFogColorTransition;

		[Token(Token = "0x4001A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1476B1C", Offset = "0x1476B1C")]
		public UnityEngine.Color targetFogColor1;

		[Token(Token = "0x4001A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1476B54", Offset = "0x1476B54")]
		public UnityEngine.Color targetFogColor2;

		[Token(Token = "0x4001A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1476B8C", Offset = "0x1476B8C")]
		public float transitionDuration;

		[Token(Token = "0x4001A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1476BC4", Offset = "0x1476BC4")]
		public Collider targetCollider;

		[Token(Token = "0x4001A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1476BFC", Offset = "0x1476BFC")]
		public bool debugMode;

		[Token(Token = "0x4001A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1476C34", Offset = "0x1476C34")]
		public DynamicFog targetFog;

		[Token(Token = "0x4001A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool cameraInside;

		[Token(Token = "0x6001CDE")]
		[Address(RVA = "0x1E733CC", Offset = "0x1E733CC", VA = "0x1E733CC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001CDF")]
		[Address(RVA = "0x1E734B8", Offset = "0x1E734B8", VA = "0x1E734B8")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001CE0")]
		[Address(RVA = "0x1E73718", Offset = "0x1E73718", VA = "0x1E73718")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001CE1")]
		[Address(RVA = "0x1E7394C", Offset = "0x1E7394C", VA = "0x1E7394C")]
		public FogVolume()
		{
		}
	}
}
namespace Dreamteck
{
	[Token(Token = "0x2000406")]
	public static class DMath
	{
		[Token(Token = "0x6001CE2")]
		[Address(RVA = "0x1CB37B0", Offset = "0x1CB37B0", VA = "0x1CB37B0")]
		public static double Sin(double a)
		{
			return default(double);
		}

		[Token(Token = "0x6001CE3")]
		[Address(RVA = "0x1CB381C", Offset = "0x1CB381C", VA = "0x1CB381C")]
		public static double Cos(double a)
		{
			return default(double);
		}

		[Token(Token = "0x6001CE4")]
		[Address(RVA = "0x1CB3888", Offset = "0x1CB3888", VA = "0x1CB3888")]
		public static double Tan(double a)
		{
			return default(double);
		}

		[Token(Token = "0x6001CE5")]
		[Address(RVA = "0x1CB38F4", Offset = "0x1CB38F4", VA = "0x1CB38F4")]
		public static double Pow(double x, double y)
		{
			return default(double);
		}

		[Token(Token = "0x6001CE6")]
		[Address(RVA = "0x1CB396C", Offset = "0x1CB396C", VA = "0x1CB396C")]
		public static double Log(double a, double newBase)
		{
			return default(double);
		}

		[Token(Token = "0x6001CE7")]
		[Address(RVA = "0x1CB39E4", Offset = "0x1CB39E4", VA = "0x1CB39E4")]
		public static double Log10(double a)
		{
			return default(double);
		}

		[Token(Token = "0x6001CE8")]
		[Address(RVA = "0x1CB3A50", Offset = "0x1CB3A50", VA = "0x1CB3A50")]
		public static double Clamp01(double a)
		{
			return default(double);
		}

		[Token(Token = "0x6001CE9")]
		[Address(RVA = "0x1CB3A70", Offset = "0x1CB3A70", VA = "0x1CB3A70")]
		public static double Clamp(double a, double min, double max)
		{
			return default(double);
		}

		[Token(Token = "0x6001CEA")]
		[Address(RVA = "0x1CB3A8C", Offset = "0x1CB3A8C", VA = "0x1CB3A8C")]
		public static double Lerp(double a, double b, double t)
		{
			return default(double);
		}

		[Token(Token = "0x6001CEB")]
		[Address(RVA = "0x1CB3AB0", Offset = "0x1CB3AB0", VA = "0x1CB3AB0")]
		public static double InverseLerp(double a, double b, double t)
		{
			return default(double);
		}

		[Token(Token = "0x6001CEC")]
		[Address(RVA = "0x1CB3AE4", Offset = "0x1CB3AE4", VA = "0x1CB3AE4")]
		public static Vector3 LerpVector3(Vector3 a, Vector3 b, double t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001CED")]
		[Address(RVA = "0x1CB3C10", Offset = "0x1CB3C10", VA = "0x1CB3C10")]
		public static double Round(double a)
		{
			return default(double);
		}

		[Token(Token = "0x6001CEE")]
		[Address(RVA = "0x1CB3CE8", Offset = "0x1CB3CE8", VA = "0x1CB3CE8")]
		public static int RoundInt(double a)
		{
			return default(int);
		}

		[Token(Token = "0x6001CEF")]
		[Address(RVA = "0x1CB3DD8", Offset = "0x1CB3DD8", VA = "0x1CB3DD8")]
		public static double Ceil(double a)
		{
			return default(double);
		}

		[Token(Token = "0x6001CF0")]
		[Address(RVA = "0x1CB3E44", Offset = "0x1CB3E44", VA = "0x1CB3E44")]
		public static int CeilInt(double a)
		{
			return default(int);
		}

		[Token(Token = "0x6001CF1")]
		[Address(RVA = "0x1CB3EC8", Offset = "0x1CB3EC8", VA = "0x1CB3EC8")]
		public static double Floor(double a)
		{
			return default(double);
		}

		[Token(Token = "0x6001CF2")]
		[Address(RVA = "0x1CB3F34", Offset = "0x1CB3F34", VA = "0x1CB3F34")]
		public static int FloorInt(double a)
		{
			return default(int);
		}

		[Token(Token = "0x6001CF3")]
		[Address(RVA = "0x1CB3FB8", Offset = "0x1CB3FB8", VA = "0x1CB3FB8")]
		public static double Move(double current, double target, double amount)
		{
			return default(double);
		}

		[Token(Token = "0x6001CF4")]
		[Address(RVA = "0x1CB3FE8", Offset = "0x1CB3FE8", VA = "0x1CB3FE8")]
		public static double Abs(double a)
		{
			return default(double);
		}
	}
	[Token(Token = "0x2000407")]
	public static class LinearAlgebraUtility
	{
		[Token(Token = "0x6001CF5")]
		[Address(RVA = "0x1CB3FF8", Offset = "0x1CB3FF8", VA = "0x1CB3FF8")]
		public static Vector3 ProjectOnLine(Vector3 fromPoint, Vector3 toPoint, Vector3 project)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001CF6")]
		[Address(RVA = "0x1CB420C", Offset = "0x1CB420C", VA = "0x1CB420C")]
		public static float InverseLerp(Vector3 a, Vector3 b, Vector3 value)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000408")]
	public class MeshUtility
	{
		[Token(Token = "0x4001A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3[] tan1;

		[Token(Token = "0x4001A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Vector3[] tan2;

		[Token(Token = "0x6001CF7")]
		[Address(RVA = "0x1CB433C", Offset = "0x1CB433C", VA = "0x1CB433C")]
		public static int[] GeneratePlaneTriangles(int x, int z, bool flip, int startTriangleIndex = 0, int startVertex = 0)
		{
			return null;
		}

		[Token(Token = "0x6001CF8")]
		[Address(RVA = "0x1CB4400", Offset = "0x1CB4400", VA = "0x1CB4400")]
		public static int[] GeneratePlaneTriangles(ref int[] triangles, int x, int z, bool flip, int startTriangleIndex = 0, int startVertex = 0, bool reallocateArray = false)
		{
			return null;
		}

		[Token(Token = "0x6001CF9")]
		[Address(RVA = "0x1CB4714", Offset = "0x1CB4714", VA = "0x1CB4714")]
		public static void CalculateTangents(TS_Mesh mesh)
		{
		}

		[Token(Token = "0x6001CFA")]
		[Address(RVA = "0x1CB4F28", Offset = "0x1CB4F28", VA = "0x1CB4F28")]
		public static void MakeDoublesided(Mesh input)
		{
		}

		[Token(Token = "0x6001CFB")]
		[Address(RVA = "0x1CB599C", Offset = "0x1CB599C", VA = "0x1CB599C")]
		public static void MakeDoublesided(TS_Mesh input)
		{
		}

		[Token(Token = "0x6001CFC")]
		[Address(RVA = "0x1CB62F4", Offset = "0x1CB62F4", VA = "0x1CB62F4")]
		public static void MakeDoublesidedHalf(TS_Mesh input)
		{
		}

		[Token(Token = "0x6001CFD")]
		[Address(RVA = "0x1CB6904", Offset = "0x1CB6904", VA = "0x1CB6904")]
		public static void InverseTransformMesh(TS_Mesh input, TS_Transform transform)
		{
		}

		[Token(Token = "0x6001CFE")]
		[Address(RVA = "0x1CB69F4", Offset = "0x1CB69F4", VA = "0x1CB69F4")]
		public static void TransformMesh(TS_Mesh input, TS_Transform transform)
		{
		}

		[Token(Token = "0x6001CFF")]
		[Address(RVA = "0x1CB6AE4", Offset = "0x1CB6AE4", VA = "0x1CB6AE4")]
		public static void InverseTransformMesh(TS_Mesh input, Transform transform)
		{
		}

		[Token(Token = "0x6001D00")]
		[Address(RVA = "0x1CB6BD4", Offset = "0x1CB6BD4", VA = "0x1CB6BD4")]
		public static void TransformMesh(TS_Mesh input, Transform transform)
		{
		}

		[Token(Token = "0x6001D01")]
		[Address(RVA = "0x1CB6CC4", Offset = "0x1CB6CC4", VA = "0x1CB6CC4")]
		public static void InverseTransformMesh(Mesh input, Transform transform)
		{
		}

		[Token(Token = "0x6001D02")]
		[Address(RVA = "0x1CB6E18", Offset = "0x1CB6E18", VA = "0x1CB6E18")]
		public static void TransformMesh(Mesh input, Transform transform)
		{
		}

		[Token(Token = "0x6001D03")]
		[Address(RVA = "0x1CB6FB0", Offset = "0x1CB6FB0", VA = "0x1CB6FB0")]
		public static void TransformVertices(Vector3[] vertices, Transform transform)
		{
		}

		[Token(Token = "0x6001D04")]
		[Address(RVA = "0x1CB7044", Offset = "0x1CB7044", VA = "0x1CB7044")]
		public static void InverseTransformVertices(Vector3[] vertices, Transform transform)
		{
		}

		[Token(Token = "0x6001D05")]
		[Address(RVA = "0x1CB70D8", Offset = "0x1CB70D8", VA = "0x1CB70D8")]
		public static void TransformNormals(Vector3[] normals, Transform transform)
		{
		}

		[Token(Token = "0x6001D06")]
		[Address(RVA = "0x1CB716C", Offset = "0x1CB716C", VA = "0x1CB716C")]
		public static void InverseTransformNormals(Vector3[] normals, Transform transform)
		{
		}

		[Token(Token = "0x6001D07")]
		[Address(RVA = "0x1CB7200", Offset = "0x1CB7200", VA = "0x1CB7200")]
		public static string ToOBJString(Mesh mesh, Material[] materials)
		{
			return null;
		}

		[Token(Token = "0x6001D08")]
		[Address(RVA = "0x1CB7B5C", Offset = "0x1CB7B5C", VA = "0x1CB7B5C")]
		public static Mesh Copy(Mesh input)
		{
			return null;
		}

		[Token(Token = "0x6001D09")]
		[Address(RVA = "0x1CB7D58", Offset = "0x1CB7D58", VA = "0x1CB7D58")]
		public static void Triangulate(Vector2[] points, ref int[] output)
		{
		}

		[Token(Token = "0x6001D0A")]
		[Address(RVA = "0x1CB83C8", Offset = "0x1CB83C8", VA = "0x1CB83C8")]
		public static void FlipTriangles(ref int[] triangles)
		{
		}

		[Token(Token = "0x6001D0B")]
		[Address(RVA = "0x1CB8450", Offset = "0x1CB8450", VA = "0x1CB8450")]
		public static void FlipFaces(TS_Mesh input)
		{
		}

		[Token(Token = "0x6001D0C")]
		[Address(RVA = "0x1CB85E8", Offset = "0x1CB85E8", VA = "0x1CB85E8")]
		public static void BreakMesh(Mesh input, bool keepNormals = true)
		{
		}

		[Token(Token = "0x6001D0D")]
		[Address(RVA = "0x1CB8110", Offset = "0x1CB8110", VA = "0x1CB8110")]
		private static float Area(Vector2[] points, int maxCount)
		{
			return default(float);
		}

		[Token(Token = "0x6001D0E")]
		[Address(RVA = "0x1CB81A8", Offset = "0x1CB81A8", VA = "0x1CB81A8")]
		private static bool Snip(Vector2[] points, int u, int v, int w, int n, int[] V)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D0F")]
		[Address(RVA = "0x1CB8FD0", Offset = "0x1CB8FD0", VA = "0x1CB8FD0")]
		private static bool InsideTriangle(Vector2 A, Vector2 B, Vector2 C, Vector2 P)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D10")]
		[Address(RVA = "0x1CB904C", Offset = "0x1CB904C", VA = "0x1CB904C")]
		public MeshUtility()
		{
		}
	}
	[Token(Token = "0x2000409")]
	public static class ResourceUtility
	{
		[Token(Token = "0x6001D12")]
		[Address(RVA = "0x1CB90E4", Offset = "0x1CB90E4", VA = "0x1CB90E4")]
		public static string FindFolder(string dir, string folderPattern)
		{
			return null;
		}

		[Token(Token = "0x6001D13")]
		[Address(RVA = "0x1CB94EC", Offset = "0x1CB94EC", VA = "0x1CB94EC")]
		public static Texture2D LoadTexture(string dreamteckPath, string textureFileName)
		{
			return null;
		}

		[Token(Token = "0x6001D14")]
		[Address(RVA = "0x1CB9650", Offset = "0x1CB9650", VA = "0x1CB9650")]
		public static Texture2D LoadTexture(string path)
		{
			return null;
		}
	}
	[Token(Token = "0x200040A")]
	public static class SceneUtility
	{
		[Token(Token = "0x6001D15")]
		[Address(RVA = "0x1CB9744", Offset = "0x1CB9744", VA = "0x1CB9744")]
		public static void GetChildrenRecursively(Transform current, ref List<Transform> transformList)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200040B")]
	public class TS_Bounds
	{
		[Token(Token = "0x4001A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 center;

		[Token(Token = "0x4001A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 extents;

		[Token(Token = "0x4001A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 max;

		[Token(Token = "0x4001A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 min;

		[Token(Token = "0x4001A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 size;

		[Token(Token = "0x6001D16")]
		[Address(RVA = "0x34E1958", Offset = "0x34E1958", VA = "0x34E1958")]
		public TS_Bounds()
		{
		}

		[Token(Token = "0x6001D17")]
		[Address(RVA = "0x34E1A10", Offset = "0x34E1A10", VA = "0x34E1A10")]
		public TS_Bounds(Bounds bounds)
		{
		}

		[Token(Token = "0x6001D18")]
		[Address(RVA = "0x34E1B3C", Offset = "0x34E1B3C", VA = "0x34E1B3C")]
		public TS_Bounds(Vector3 c, Vector3 s)
		{
		}

		[Token(Token = "0x6001D19")]
		[Address(RVA = "0x34E1CA4", Offset = "0x34E1CA4", VA = "0x34E1CA4")]
		public TS_Bounds(Vector3 min, Vector3 max, Vector3 center)
		{
		}

		[Token(Token = "0x6001D1A")]
		[Address(RVA = "0x34E1E04", Offset = "0x34E1E04", VA = "0x34E1E04")]
		public void CreateFromMinMax(Vector3 min, Vector3 max)
		{
		}

		[Token(Token = "0x6001D1B")]
		[Address(RVA = "0x34E1F14", Offset = "0x34E1F14", VA = "0x34E1F14")]
		public bool Contains(Vector3 point)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200040C")]
	public class TS_Mesh
	{
		[Token(Token = "0x4001A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3[] vertices;

		[Token(Token = "0x4001A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3[] normals;

		[Token(Token = "0x4001A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector4[] tangents;

		[Token(Token = "0x4001A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEngine.Color[] colors;

		[Token(Token = "0x4001A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector2[] uv;

		[Token(Token = "0x4001A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector2[] uv2;

		[Token(Token = "0x4001A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector2[] uv3;

		[Token(Token = "0x4001A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector2[] uv4;

		[Token(Token = "0x4001A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int[] triangles;

		[Token(Token = "0x4001AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<int[]> subMeshes;

		[Token(Token = "0x4001AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TS_Bounds bounds;

		[Token(Token = "0x4001AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool hasUpdate;

		[Token(Token = "0x17000361")]
		public int vertexCount
		{
			[Token(Token = "0x6001D1C")]
			[Address(RVA = "0x34E1F68", Offset = "0x34E1F68", VA = "0x34E1F68")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001D1D")]
			[Address(RVA = "0x34E1F84", Offset = "0x34E1F84", VA = "0x34E1F84")]
			set
			{
			}
		}

		[Token(Token = "0x6001D1E")]
		[Address(RVA = "0x34E1F88", Offset = "0x34E1F88", VA = "0x34E1F88")]
		public TS_Mesh()
		{
		}

		[Token(Token = "0x6001D1F")]
		[Address(RVA = "0x34E21D4", Offset = "0x34E21D4", VA = "0x34E21D4")]
		public TS_Mesh(Mesh mesh)
		{
		}

		[Token(Token = "0x6001D20")]
		[Address(RVA = "0x34E2640", Offset = "0x34E2640", VA = "0x34E2640")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001D21")]
		[Address(RVA = "0x34E2430", Offset = "0x34E2430", VA = "0x34E2430")]
		public void CreateFromMesh(Mesh mesh)
		{
		}

		[Token(Token = "0x6001D22")]
		[Address(RVA = "0x34E2880", Offset = "0x34E2880", VA = "0x34E2880")]
		public void Combine(List<TS_Mesh> newMeshes, bool overwrite = false)
		{
		}

		[Token(Token = "0x6001D23")]
		[Address(RVA = "0x34E3E2C", Offset = "0x34E3E2C", VA = "0x34E3E2C")]
		public void Combine(TS_Mesh newMesh)
		{
		}

		[Token(Token = "0x6001D24")]
		[Address(RVA = "0x34E4598", Offset = "0x34E4598", VA = "0x34E4598")]
		public static TS_Mesh Copy(TS_Mesh input)
		{
			return null;
		}

		[Token(Token = "0x6001D25")]
		[Address(RVA = "0x34E49FC", Offset = "0x34E49FC", VA = "0x34E49FC")]
		public void Absorb(TS_Mesh input)
		{
		}

		[Token(Token = "0x6001D26")]
		[Address(RVA = "0x34E50A8", Offset = "0x34E50A8", VA = "0x34E50A8")]
		public void WriteMesh(ref Mesh input)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200040D")]
	public class TS_Transform
	{
		[Token(Token = "0x4001AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool setPosition;

		[Token(Token = "0x4001AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool setRotation;

		[Token(Token = "0x4001AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		private bool setScale;

		[Token(Token = "0x4001AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		private bool setLocalPosition;

		[Token(Token = "0x4001AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool setLocalRotation;

		[Token(Token = "0x4001AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[HideInInspector]
		private Transform _transform;

		[Token(Token = "0x4001AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		private float posX;

		[Token(Token = "0x4001AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[HideInInspector]
		private float posY;

		[Token(Token = "0x4001AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[HideInInspector]
		private float posZ;

		[Token(Token = "0x4001AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[HideInInspector]
		private float scaleX;

		[Token(Token = "0x4001AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[HideInInspector]
		private float scaleY;

		[Token(Token = "0x4001AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		[HideInInspector]
		private float scaleZ;

		[Token(Token = "0x4001AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[HideInInspector]
		private float lossyScaleX;

		[Token(Token = "0x4001AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		[HideInInspector]
		private float lossyScaleY;

		[Token(Token = "0x4001AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		private float lossyScaleZ;

		[Token(Token = "0x4001AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		[HideInInspector]
		private float rotX;

		[Token(Token = "0x4001AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[HideInInspector]
		private float rotY;

		[Token(Token = "0x4001AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		[HideInInspector]
		private float rotZ;

		[Token(Token = "0x4001AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[HideInInspector]
		private float rotW;

		[Token(Token = "0x4001AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		[HideInInspector]
		private float lposX;

		[Token(Token = "0x4001AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[HideInInspector]
		private float lposY;

		[Token(Token = "0x4001AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		[HideInInspector]
		private float lposZ;

		[Token(Token = "0x4001AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[HideInInspector]
		private float lrotX;

		[Token(Token = "0x4001ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		[HideInInspector]
		private float lrotY;

		[Token(Token = "0x4001ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[HideInInspector]
		private float lrotZ;

		[Token(Token = "0x4001ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		[HideInInspector]
		private float lrotW;

		[Token(Token = "0x17000362")]
		public Vector3 position
		{
			[Token(Token = "0x6001D27")]
			[Address(RVA = "0x34E5384", Offset = "0x34E5384", VA = "0x34E5384")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001D28")]
			[Address(RVA = "0x34E53F8", Offset = "0x34E53F8", VA = "0x34E53F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000363")]
		public Quaternion rotation
		{
			[Token(Token = "0x6001D29")]
			[Address(RVA = "0x34E5454", Offset = "0x34E5454", VA = "0x34E5454")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6001D2A")]
			[Address(RVA = "0x34E54D0", Offset = "0x34E54D0", VA = "0x34E54D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000364")]
		public Vector3 scale
		{
			[Token(Token = "0x6001D2B")]
			[Address(RVA = "0x34E5538", Offset = "0x34E5538", VA = "0x34E5538")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001D2C")]
			[Address(RVA = "0x34E55AC", Offset = "0x34E55AC", VA = "0x34E55AC")]
			set
			{
			}
		}

		[Token(Token = "0x17000365")]
		public Vector3 lossyScale
		{
			[Token(Token = "0x6001D2D")]
			[Address(RVA = "0x34E5604", Offset = "0x34E5604", VA = "0x34E5604")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001D2E")]
			[Address(RVA = "0x34E5678", Offset = "0x34E5678", VA = "0x34E5678")]
			set
			{
			}
		}

		[Token(Token = "0x17000366")]
		public Vector3 localPosition
		{
			[Token(Token = "0x6001D2F")]
			[Address(RVA = "0x34E56D0", Offset = "0x34E56D0", VA = "0x34E56D0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001D30")]
			[Address(RVA = "0x34E5744", Offset = "0x34E5744", VA = "0x34E5744")]
			set
			{
			}
		}

		[Token(Token = "0x17000367")]
		public Quaternion localRotation
		{
			[Token(Token = "0x6001D31")]
			[Address(RVA = "0x34E57A0", Offset = "0x34E57A0", VA = "0x34E57A0")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6001D32")]
			[Address(RVA = "0x34E581C", Offset = "0x34E581C", VA = "0x34E581C")]
			set
			{
			}
		}

		[Token(Token = "0x17000368")]
		public Transform transform
		{
			[Token(Token = "0x6001D33")]
			[Address(RVA = "0x34E5884", Offset = "0x34E5884", VA = "0x34E5884")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D34")]
		[Address(RVA = "0x34E588C", Offset = "0x34E588C", VA = "0x34E588C")]
		public TS_Transform(Transform input)
		{
		}

		[Token(Token = "0x6001D35")]
		[Address(RVA = "0x34E5940", Offset = "0x34E5940", VA = "0x34E5940")]
		public void Update()
		{
		}

		[Token(Token = "0x6001D36")]
		[Address(RVA = "0x34E5910", Offset = "0x34E5910", VA = "0x34E5910")]
		public void SetTransform(Transform input)
		{
		}

		[Token(Token = "0x6001D37")]
		[Address(RVA = "0x34E5B1C", Offset = "0x34E5B1C", VA = "0x34E5B1C")]
		public bool HasChange()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D38")]
		[Address(RVA = "0x34E5B60", Offset = "0x34E5B60", VA = "0x34E5B60")]
		public bool HasPositionChange()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D39")]
		[Address(RVA = "0x34E5BF0", Offset = "0x34E5BF0", VA = "0x34E5BF0")]
		public bool HasRotationChange()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D3A")]
		[Address(RVA = "0x34E5CA0", Offset = "0x34E5CA0", VA = "0x34E5CA0")]
		public bool HasScaleChange()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D3B")]
		[Address(RVA = "0x34E5D30", Offset = "0x34E5D30", VA = "0x34E5D30")]
		public Vector3 TransformPoint(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001D3C")]
		[Address(RVA = "0x34E5EA0", Offset = "0x34E5EA0", VA = "0x34E5EA0")]
		public Vector3 TransformDirection(Vector3 direction)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001D3D")]
		[Address(RVA = "0x34E5F74", Offset = "0x34E5F74", VA = "0x34E5F74")]
		public Vector3 InverseTransformPoint(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001D3E")]
		[Address(RVA = "0x34E6030", Offset = "0x34E6030", VA = "0x34E6030")]
		public Vector3 InverseTransformDirection(Vector3 direction)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001D3F")]
		public T GetComponent<T>()
		{
			return (T)null;
		}
	}
	[Token(Token = "0x200040E")]
	public static class TransformUtility
	{
		[Token(Token = "0x6001D40")]
		[Address(RVA = "0x34E6154", Offset = "0x34E6154", VA = "0x34E6154")]
		public static Vector3 GetPosition(ref Matrix4x4 m)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001D41")]
		[Address(RVA = "0x34E61F8", Offset = "0x34E61F8", VA = "0x34E61F8")]
		public static Quaternion GetRotation(ref Matrix4x4 m)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001D42")]
		[Address(RVA = "0x34E6314", Offset = "0x34E6314", VA = "0x34E6314")]
		public static Vector3 GetScale(ref Matrix4x4 m)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001D43")]
		[Address(RVA = "0x34E63D8", Offset = "0x34E63D8", VA = "0x34E63D8")]
		public static void SetPosition(ref Matrix4x4 m, ref Vector3 p)
		{
		}

		[Token(Token = "0x6001D44")]
		[Address(RVA = "0x34E6430", Offset = "0x34E6430", VA = "0x34E6430")]
		public static void GetChildCount(Transform parent, ref int count)
		{
		}
	}
}
namespace Dreamteck.Splines
{
	[Token(Token = "0x200040F")]
	public class BlankUser : SplineUser
	{
		[Token(Token = "0x6001D45")]
		[Address(RVA = "0x1CB99A0", Offset = "0x1CB99A0", VA = "0x1CB99A0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D46")]
		[Address(RVA = "0x1CB99A4", Offset = "0x1CB99A4", VA = "0x1CB99A4", Slot = "19")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x6001D47")]
		[Address(RVA = "0x1CB99AC", Offset = "0x1CB99AC", VA = "0x1CB99AC", Slot = "20")]
		protected override void Build()
		{
		}

		[Token(Token = "0x6001D48")]
		[Address(RVA = "0x1CB99B4", Offset = "0x1CB99B4", VA = "0x1CB99B4", Slot = "21")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x6001D49")]
		[Address(RVA = "0x1CB99BC", Offset = "0x1CB99BC", VA = "0x1CB99BC")]
		public BlankUser()
		{
		}
	}
	[Token(Token = "0x2000410")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x14692E0", Offset = "0x14692E0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x14692E0", Offset = "0x14692E0")]
	public class EdgeColliderGenerator : SplineUser
	{
		[Token(Token = "0x4001ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		[HideInInspector]
		private float _offset;

		[Token(Token = "0x4001ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		[HideInInspector]
		protected EdgeCollider2D edgeCollider;

		[Token(Token = "0x4001ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		[HideInInspector]
		protected Vector2[] vertices;

		[Token(Token = "0x4001AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[HideInInspector]
		public float updateRate;

		[Token(Token = "0x4001AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		protected float lastUpdateTime;

		[Token(Token = "0x4001AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool updateCollider;

		[Token(Token = "0x17000369")]
		public float offset
		{
			[Token(Token = "0x6001D4A")]
			[Address(RVA = "0x1CBAE0C", Offset = "0x1CBAE0C", VA = "0x1CBAE0C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D4B")]
			[Address(RVA = "0x1CBAE14", Offset = "0x1CBAE14", VA = "0x1CBAE14")]
			set
			{
			}
		}

		[Token(Token = "0x6001D4C")]
		[Address(RVA = "0x1CBAE38", Offset = "0x1CBAE38", VA = "0x1CBAE38", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001D4D")]
		[Address(RVA = "0x1CBAEA4", Offset = "0x1CBAEA4", VA = "0x1CBAEA4", Slot = "5")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x6001D4E")]
		[Address(RVA = "0x1CBAEAC", Offset = "0x1CBAEAC", VA = "0x1CBAEAC", Slot = "6")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001D4F")]
		[Address(RVA = "0x1CBAEB4", Offset = "0x1CBAEB4", VA = "0x1CBAEB4", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001D50")]
		[Address(RVA = "0x1CBAEBC", Offset = "0x1CBAEBC", VA = "0x1CBAEBC", Slot = "8")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001D51")]
		[Address(RVA = "0x1CBAEC4", Offset = "0x1CBAEC4", VA = "0x1CBAEC4", Slot = "19")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x6001D52")]
		[Address(RVA = "0x1CBAF98", Offset = "0x1CBAF98", VA = "0x1CBAF98", Slot = "20")]
		protected override void Build()
		{
		}

		[Token(Token = "0x6001D53")]
		[Address(RVA = "0x1CBB278", Offset = "0x1CBB278", VA = "0x1CBB278", Slot = "21")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x6001D54")]
		[Address(RVA = "0x1CBB418", Offset = "0x1CBB418", VA = "0x1CBB418")]
		public EdgeColliderGenerator()
		{
		}
	}
	[Token(Token = "0x2000411")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1469368", Offset = "0x1469368")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1469368", Offset = "0x1469368")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1469368", Offset = "0x1469368")]
	public class ExtrudeMesh : MeshGenerator
	{
		[Token(Token = "0x2000715")]
		public enum Axis
		{
			[Token(Token = "0x400279E")]
			X,
			[Token(Token = "0x400279F")]
			Y,
			[Token(Token = "0x40027A0")]
			Z
		}

		[Token(Token = "0x2000716")]
		public enum Iteration
		{
			[Token(Token = "0x40027A2")]
			Ordered,
			[Token(Token = "0x40027A3")]
			Random
		}

		[Token(Token = "0x2000717")]
		public enum MirrorMethod
		{
			[Token(Token = "0x40027A5")]
			None,
			[Token(Token = "0x40027A6")]
			X,
			[Token(Token = "0x40027A7")]
			Y,
			[Token(Token = "0x40027A8")]
			Z
		}

		[Token(Token = "0x2000718")]
		public enum TileUVs
		{
			[Token(Token = "0x40027AA")]
			None,
			[Token(Token = "0x40027AB")]
			U,
			[Token(Token = "0x40027AC")]
			V,
			[Token(Token = "0x40027AD")]
			UniformU,
			[Token(Token = "0x40027AE")]
			UniformV
		}

		[Serializable]
		[Token(Token = "0x2000719")]
		internal class ExtrudableMesh
		{
			[Serializable]
			[Token(Token = "0x20007A1")]
			public class VertexGroup
			{
				[Token(Token = "0x4002A93")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public float value;

				[Token(Token = "0x4002A94")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public int[] ids;

				[Token(Token = "0x6002D07")]
				[Address(RVA = "0x1CC065C", Offset = "0x1CC065C", VA = "0x1CC065C")]
				public VertexGroup(float val, int[] vertIds)
				{
				}

				[Token(Token = "0x6002D08")]
				[Address(RVA = "0x1CC06A0", Offset = "0x1CC06A0", VA = "0x1CC06A0")]
				public void AddId(int id)
				{
				}
			}

			[Serializable]
			[Token(Token = "0x20007A2")]
			public class Submesh
			{
				[Token(Token = "0x4002A95")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public int[] triangles;

				[Token(Token = "0x6002D09")]
				[Address(RVA = "0x1CC0764", Offset = "0x1CC0764", VA = "0x1CC0764")]
				public Submesh()
				{
				}

				[Token(Token = "0x6002D0A")]
				[Address(RVA = "0x1CBF9C0", Offset = "0x1CBF9C0", VA = "0x1CBF9C0")]
				public Submesh(int[] input)
				{
				}
			}

			[Token(Token = "0x40027AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3[] vertices;

			[Token(Token = "0x40027B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3[] normals;

			[Token(Token = "0x40027B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector4[] tangents;

			[Token(Token = "0x40027B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UnityEngine.Color[] colors;

			[Token(Token = "0x40027B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector2[] uv;

			[Token(Token = "0x40027B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public List<Submesh> subMeshes;

			[Token(Token = "0x40027B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public TS_Bounds bounds;

			[Token(Token = "0x40027B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public List<VertexGroup> vertexGroups;

			[Token(Token = "0x40027B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[SerializeField]
			private MirrorMethod _mirror;

			[Token(Token = "0x40027B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			[SerializeField]
			private Axis _axis;

			[Token(Token = "0x170005A1")]
			public MirrorMethod mirror
			{
				[Token(Token = "0x6002A8B")]
				[Address(RVA = "0x1CBEE54", Offset = "0x1CBEE54", VA = "0x1CBEE54")]
				get
				{
					return default(MirrorMethod);
				}
				[Token(Token = "0x6002A8C")]
				[Address(RVA = "0x1CBC36C", Offset = "0x1CBC36C", VA = "0x1CBC36C")]
				set
				{
				}
			}

			[Token(Token = "0x6002A8D")]
			[Address(RVA = "0x1CBF5F4", Offset = "0x1CBF5F4", VA = "0x1CBF5F4")]
			public ExtrudableMesh()
			{
			}

			[Token(Token = "0x6002A8E")]
			[Address(RVA = "0x1CBC6C0", Offset = "0x1CBC6C0", VA = "0x1CBC6C0")]
			public ExtrudableMesh(Mesh inputMesh, Axis axis)
			{
			}

			[Token(Token = "0x6002A8F")]
			[Address(RVA = "0x1CBE7EC", Offset = "0x1CBE7EC", VA = "0x1CBE7EC")]
			public void Update(Mesh inputMesh, Axis axis)
			{
			}

			[Token(Token = "0x6002A90")]
			[Address(RVA = "0x1CBEE5C", Offset = "0x1CBEE5C", VA = "0x1CBEE5C")]
			private void Mirror(MirrorMethod method)
			{
			}

			[Token(Token = "0x6002A91")]
			[Address(RVA = "0x1CBFA74", Offset = "0x1CBFA74", VA = "0x1CBFA74")]
			private void GroupVertices(Axis axis)
			{
			}

			[Token(Token = "0x6002A92")]
			[Address(RVA = "0x1CC0540", Offset = "0x1CC0540", VA = "0x1CC0540")]
			private int FindInsertIndex(Vector3 pos, float value)
			{
				return default(int);
			}

			[Token(Token = "0x6002A93")]
			[Address(RVA = "0x1CBFE1C", Offset = "0x1CBFE1C", VA = "0x1CBFE1C")]
			private void CalculateTangents()
			{
			}
		}

		[Token(Token = "0x4001AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		[HideInInspector]
		private Mesh _startMesh;

		[Token(Token = "0x4001AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		[HideInInspector]
		private Mesh _endMesh;

		[Token(Token = "0x4001AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		[HideInInspector]
		private bool _dontStretchCaps;

		[Token(Token = "0x4001AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		[SerializeField]
		[HideInInspector]
		private TileUVs _tileUVs;

		[Token(Token = "0x4001AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		[HideInInspector]
		private Mesh[] _middleMeshes;

		[Token(Token = "0x4001AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		[HideInInspector]
		private List<ExtrudableMesh> extrudableMeshes;

		[Token(Token = "0x4001AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		[HideInInspector]
		private Axis _axis;

		[Token(Token = "0x4001ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		[SerializeField]
		[HideInInspector]
		private Iteration _iteration;

		[Token(Token = "0x4001ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		[HideInInspector]
		private int _randomSeed;

		[Token(Token = "0x4001ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		[SerializeField]
		[HideInInspector]
		private int _repeat;

		[Token(Token = "0x4001ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		[HideInInspector]
		private double _spacing;

		[Token(Token = "0x4001ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		[HideInInspector]
		private Vector2 _scale;

		[Token(Token = "0x4001ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private SplineResult lastResult;

		[Token(Token = "0x4001AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private bool useLastResult;

		[Token(Token = "0x4001AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private List<TS_Mesh> combineMeshes;

		[Token(Token = "0x4001AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private System.Random random;

		[Token(Token = "0x4001AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private int iterations;

		[Token(Token = "0x4001AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		private bool _hasAnyMesh;

		[Token(Token = "0x4001AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19D")]
		private bool _hasStartMesh;

		[Token(Token = "0x4001AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19E")]
		private bool _hasEndMesh;

		[Token(Token = "0x4001AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private Matrix4x4 vertexMatrix;

		[Token(Token = "0x4001AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private Matrix4x4 normalMatrix;

		[Token(Token = "0x1700036A")]
		public Axis axis
		{
			[Token(Token = "0x6001D55")]
			[Address(RVA = "0x1CBB6E8", Offset = "0x1CBB6E8", VA = "0x1CBB6E8")]
			get
			{
				return default(Axis);
			}
			[Token(Token = "0x6001D56")]
			[Address(RVA = "0x1CBB6F0", Offset = "0x1CBB6F0", VA = "0x1CBB6F0")]
			set
			{
			}
		}

		[Token(Token = "0x1700036B")]
		public Iteration iteration
		{
			[Token(Token = "0x6001D57")]
			[Address(RVA = "0x1CBBA64", Offset = "0x1CBBA64", VA = "0x1CBBA64")]
			get
			{
				return default(Iteration);
			}
			[Token(Token = "0x6001D58")]
			[Address(RVA = "0x1CBBA6C", Offset = "0x1CBBA6C", VA = "0x1CBBA6C")]
			set
			{
			}
		}

		[Token(Token = "0x1700036C")]
		public int randomSeed
		{
			[Token(Token = "0x6001D59")]
			[Address(RVA = "0x1CBBAB0", Offset = "0x1CBBAB0", VA = "0x1CBBAB0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001D5A")]
			[Address(RVA = "0x1CBBAB8", Offset = "0x1CBBAB8", VA = "0x1CBBAB8")]
			set
			{
			}
		}

		[Token(Token = "0x1700036D")]
		public int repeat
		{
			[Token(Token = "0x6001D5B")]
			[Address(RVA = "0x1CBBB14", Offset = "0x1CBBB14", VA = "0x1CBBB14")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001D5C")]
			[Address(RVA = "0x1CBBB1C", Offset = "0x1CBBB1C", VA = "0x1CBBB1C")]
			set
			{
			}
		}

		[Token(Token = "0x1700036E")]
		public bool dontStretchCaps
		{
			[Token(Token = "0x6001D5D")]
			[Address(RVA = "0x1CBBE74", Offset = "0x1CBBE74", VA = "0x1CBBE74")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D5E")]
			[Address(RVA = "0x1CBBE7C", Offset = "0x1CBBE7C", VA = "0x1CBBE7C")]
			set
			{
			}
		}

		[Token(Token = "0x1700036F")]
		public TileUVs tileUVs
		{
			[Token(Token = "0x6001D5F")]
			[Address(RVA = "0x1CBBEAC", Offset = "0x1CBBEAC", VA = "0x1CBBEAC")]
			get
			{
				return default(TileUVs);
			}
			[Token(Token = "0x6001D60")]
			[Address(RVA = "0x1CBBEB4", Offset = "0x1CBBEB4", VA = "0x1CBBEB4")]
			set
			{
			}
		}

		[Token(Token = "0x17000370")]
		public double spacing
		{
			[Token(Token = "0x6001D61")]
			[Address(RVA = "0x1CBBED8", Offset = "0x1CBBED8", VA = "0x1CBBED8")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001D62")]
			[Address(RVA = "0x1CBBEE0", Offset = "0x1CBBEE0", VA = "0x1CBBEE0")]
			set
			{
			}
		}

		[Token(Token = "0x17000371")]
		public Vector2 scale
		{
			[Token(Token = "0x6001D63")]
			[Address(RVA = "0x1CBBF54", Offset = "0x1CBBF54", VA = "0x1CBBF54")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6001D64")]
			[Address(RVA = "0x1CBBF60", Offset = "0x1CBBF60", VA = "0x1CBBF60")]
			set
			{
			}
		}

		[Token(Token = "0x17000372")]
		public bool hasAnyMesh
		{
			[Token(Token = "0x6001D65")]
			[Address(RVA = "0x1CBC028", Offset = "0x1CBC028", VA = "0x1CBC028")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001D66")]
		[Address(RVA = "0x1CBC030", Offset = "0x1CBC030", VA = "0x1CBC030", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001D67")]
		[Address(RVA = "0x1CBC1E4", Offset = "0x1CBC1E4", VA = "0x1CBC1E4")]
		public Mesh GetStartMesh()
		{
			return null;
		}

		[Token(Token = "0x6001D68")]
		[Address(RVA = "0x1CBC1EC", Offset = "0x1CBC1EC", VA = "0x1CBC1EC")]
		public Mesh GetEndMesh()
		{
			return null;
		}

		[Token(Token = "0x6001D69")]
		[Address(RVA = "0x1CBC1F4", Offset = "0x1CBC1F4", VA = "0x1CBC1F4")]
		public MirrorMethod GetStartMeshMirror()
		{
			return default(MirrorMethod);
		}

		[Token(Token = "0x6001D6A")]
		[Address(RVA = "0x1CBC260", Offset = "0x1CBC260", VA = "0x1CBC260")]
		public MirrorMethod GetEndMeshMirror()
		{
			return default(MirrorMethod);
		}

		[Token(Token = "0x6001D6B")]
		[Address(RVA = "0x1CBC2D0", Offset = "0x1CBC2D0", VA = "0x1CBC2D0")]
		public void SetStartMeshMirror(MirrorMethod mirror)
		{
		}

		[Token(Token = "0x6001D6C")]
		[Address(RVA = "0x1CBC3B0", Offset = "0x1CBC3B0", VA = "0x1CBC3B0")]
		public void SetEndMeshMirror(MirrorMethod mirror)
		{
		}

		[Token(Token = "0x6001D6D")]
		[Address(RVA = "0x1CBC450", Offset = "0x1CBC450", VA = "0x1CBC450")]
		public void SetMeshMirror(int index, MirrorMethod mirror)
		{
		}

		[Token(Token = "0x6001D6E")]
		[Address(RVA = "0x1CBC538", Offset = "0x1CBC538", VA = "0x1CBC538")]
		public void SetStartMesh(Mesh inputMesh, MirrorMethod mirror = MirrorMethod.None)
		{
		}

		[Token(Token = "0x6001D6F")]
		[Address(RVA = "0x1CBC8F4", Offset = "0x1CBC8F4", VA = "0x1CBC8F4")]
		public void SetEndMesh(Mesh inputMesh, MirrorMethod mirror = MirrorMethod.None)
		{
		}

		[Token(Token = "0x6001D70")]
		[Address(RVA = "0x1CBCAA0", Offset = "0x1CBCAA0", VA = "0x1CBCAA0")]
		public Mesh GetMesh(int index)
		{
			return null;
		}

		[Token(Token = "0x6001D71")]
		[Address(RVA = "0x1CBCADC", Offset = "0x1CBCADC", VA = "0x1CBCADC")]
		public MirrorMethod GetMeshMirror(int index)
		{
			return default(MirrorMethod);
		}

		[Token(Token = "0x6001D72")]
		[Address(RVA = "0x1CBCB98", Offset = "0x1CBCB98", VA = "0x1CBCB98")]
		public void SetMesh(int index, Mesh inputMesh, MirrorMethod mirror = MirrorMethod.None)
		{
		}

		[Token(Token = "0x6001D73")]
		[Address(RVA = "0x1CBCCF4", Offset = "0x1CBCCF4", VA = "0x1CBCCF4")]
		public void RemoveMesh(int index)
		{
		}

		[Token(Token = "0x6001D74")]
		[Address(RVA = "0x1CBCEB4", Offset = "0x1CBCEB4", VA = "0x1CBCEB4")]
		public void AddMesh(Mesh inputMesh)
		{
		}

		[Token(Token = "0x6001D75")]
		[Address(RVA = "0x1CBC0A0", Offset = "0x1CBC0A0", VA = "0x1CBC0A0")]
		private void CheckMeshes()
		{
		}

		[Token(Token = "0x6001D76")]
		[Address(RVA = "0x1CBD010", Offset = "0x1CBD010", VA = "0x1CBD010")]
		public int GetMeshCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001D77")]
		[Address(RVA = "0x1CBD02C", Offset = "0x1CBD02C", VA = "0x1CBD02C", Slot = "29")]
		protected override void BuildMesh()
		{
		}

		[Token(Token = "0x6001D78")]
		[Address(RVA = "0x1CBD0A8", Offset = "0x1CBD0A8", VA = "0x1CBD0A8")]
		private void Generate()
		{
		}

		[Token(Token = "0x6001D79")]
		[Address(RVA = "0x1CBD460", Offset = "0x1CBD460", VA = "0x1CBD460")]
		private int GetMeshIndex(int repeatIndex)
		{
			return default(int);
		}

		[Token(Token = "0x6001D7A")]
		[Address(RVA = "0x1CBDF04", Offset = "0x1CBDF04", VA = "0x1CBDF04")]
		private void TRS(ExtrudableMesh source, TS_Mesh target, double percent)
		{
		}

		[Token(Token = "0x6001D7B")]
		[Address(RVA = "0x1CBE440", Offset = "0x1CBE440", VA = "0x1CBE440")]
		private void CreateTSFromExtrudableMesh(ExtrudableMesh source, ref TS_Mesh target)
		{
		}

		[Token(Token = "0x6001D7C")]
		[Address(RVA = "0x1CBD540", Offset = "0x1CBD540", VA = "0x1CBD540")]
		private void Stretch(ExtrudableMesh source, TS_Mesh target, double from, double to)
		{
		}

		[Token(Token = "0x6001D7D")]
		[Address(RVA = "0x1CBB734", Offset = "0x1CBB734", VA = "0x1CBB734")]
		private void UpdateExtrudableMeshes()
		{
		}

		[Token(Token = "0x6001D7E")]
		[Address(RVA = "0x1CBEAA0", Offset = "0x1CBEAA0", VA = "0x1CBEAA0")]
		private void UpdateStartExtrudeMesh()
		{
		}

		[Token(Token = "0x6001D7F")]
		[Address(RVA = "0x1CBBB68", Offset = "0x1CBBB68", VA = "0x1CBBB68")]
		private void UpdateEndExtrudeMesh()
		{
		}

		[Token(Token = "0x6001D80")]
		[Address(RVA = "0x1CBECF4", Offset = "0x1CBECF4", VA = "0x1CBECF4")]
		public ExtrudeMesh()
		{
		}
	}
	[Token(Token = "0x2000412")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1469418", Offset = "0x1469418")]
	public class LengthCalculator : SplineUser
	{
		[Serializable]
		[Token(Token = "0x200071A")]
		public class LengthEvent
		{
			[Token(Token = "0x20007A3")]
			public enum Type
			{
				[Token(Token = "0x4002A97")]
				Growing,
				[Token(Token = "0x4002A98")]
				Shrinking,
				[Token(Token = "0x4002A99")]
				Both
			}

			[Token(Token = "0x40027B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool enabled;

			[Token(Token = "0x40027BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float targetLength;

			[Token(Token = "0x40027BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SplineAction action;

			[Token(Token = "0x40027BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Type type;

			[Token(Token = "0x6002A94")]
			[Address(RVA = "0x33D1E50", Offset = "0x33D1E50", VA = "0x33D1E50")]
			public LengthEvent()
			{
			}

			[Token(Token = "0x6002A95")]
			[Address(RVA = "0x33D1F30", Offset = "0x33D1F30", VA = "0x33D1F30")]
			public LengthEvent(Type t)
			{
			}

			[Token(Token = "0x6002A96")]
			[Address(RVA = "0x33D13A8", Offset = "0x33D13A8", VA = "0x33D13A8")]
			public LengthEvent(Type t, SplineAction a)
			{
			}

			[Token(Token = "0x6002A97")]
			[Address(RVA = "0x33D10FC", Offset = "0x33D10FC", VA = "0x33D10FC")]
			public void Check(float fromLength, float toLength)
			{
			}
		}

		[Token(Token = "0x4001AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		public LengthEvent[] lengthEvents;

		[Token(Token = "0x4001ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public float idealLength;

		[Token(Token = "0x4001ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float _length;

		[Token(Token = "0x4001ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float lastLength;

		[Token(Token = "0x17000373")]
		public float length
		{
			[Token(Token = "0x6001D81")]
			[Address(RVA = "0x33D0DD0", Offset = "0x33D0DD0", VA = "0x33D0DD0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001D82")]
		[Address(RVA = "0x33D0DD8", Offset = "0x33D0DD8", VA = "0x33D0DD8", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001D83")]
		[Address(RVA = "0x33D1058", Offset = "0x33D1058", VA = "0x33D1058", Slot = "20")]
		protected override void Build()
		{
		}

		[Token(Token = "0x6001D84")]
		[Address(RVA = "0x33D1178", Offset = "0x33D1178", VA = "0x33D1178")]
		private void AddEvent(LengthEvent lengthEvent)
		{
		}

		[Token(Token = "0x6001D85")]
		[Address(RVA = "0x33D1268", Offset = "0x33D1268", VA = "0x33D1268")]
		public void AddEvent(LengthEvent.Type t, UnityAction call, float targetLength = 0f, LengthEvent.Type type = LengthEvent.Type.Both)
		{
		}

		[Token(Token = "0x6001D86")]
		[Address(RVA = "0x33D1458", Offset = "0x33D1458", VA = "0x33D1458")]
		public void AddEvent(LengthEvent.Type t, UnityAction<int> call, int value, float targetLength = 0f, LengthEvent.Type type = LengthEvent.Type.Both)
		{
		}

		[Token(Token = "0x6001D87")]
		[Address(RVA = "0x33D15AC", Offset = "0x33D15AC", VA = "0x33D15AC")]
		public void AddEvent(LengthEvent.Type t, UnityAction<float> call, float value, float targetLength = 0f, LengthEvent.Type type = LengthEvent.Type.Both)
		{
		}

		[Token(Token = "0x6001D88")]
		[Address(RVA = "0x33D1708", Offset = "0x33D1708", VA = "0x33D1708")]
		public void AddEvent(LengthEvent.Type t, UnityAction<double> call, double value, float targetLength = 0f, LengthEvent.Type type = LengthEvent.Type.Both)
		{
		}

		[Token(Token = "0x6001D89")]
		[Address(RVA = "0x33D1864", Offset = "0x33D1864", VA = "0x33D1864")]
		public void AddTrigger(LengthEvent.Type t, UnityAction<string> call, string value, float targetLength = 0f, LengthEvent.Type type = LengthEvent.Type.Both)
		{
		}

		[Token(Token = "0x6001D8A")]
		[Address(RVA = "0x33D19C4", Offset = "0x33D19C4", VA = "0x33D19C4")]
		public void AddEvent(LengthEvent.Type t, UnityAction<bool> call, bool value, float targetLength = 0f, LengthEvent.Type type = LengthEvent.Type.Both)
		{
		}

		[Token(Token = "0x6001D8B")]
		[Address(RVA = "0x33D1B1C", Offset = "0x33D1B1C", VA = "0x33D1B1C")]
		public void AddEvent(LengthEvent.Type t, UnityAction<GameObject> call, GameObject value, float targetLength = 0f, LengthEvent.Type type = LengthEvent.Type.Both)
		{
		}

		[Token(Token = "0x6001D8C")]
		[Address(RVA = "0x33D1C7C", Offset = "0x33D1C7C", VA = "0x33D1C7C")]
		public void AddEvent(LengthEvent.Type t, UnityAction<Transform> call, Transform value, float targetLength = 0f, LengthEvent.Type type = LengthEvent.Type.Both)
		{
		}

		[Token(Token = "0x6001D8D")]
		[Address(RVA = "0x33D1DDC", Offset = "0x33D1DDC", VA = "0x33D1DDC")]
		public LengthCalculator()
		{
		}
	}
	[Token(Token = "0x2000413")]
	public class MeshGenerator : SplineUser
	{
		[Token(Token = "0x200071B")]
		public enum UVMode
		{
			[Token(Token = "0x40027BE")]
			Clip,
			[Token(Token = "0x40027BF")]
			UniformClip,
			[Token(Token = "0x40027C0")]
			Clamp,
			[Token(Token = "0x40027C1")]
			UniformClamp
		}

		[Token(Token = "0x4001ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		[HideInInspector]
		private bool _baked;

		[Token(Token = "0x4001ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		[HideInInspector]
		private float _size;

		[Token(Token = "0x4001ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		[HideInInspector]
		private UnityEngine.Color _color;

		[Token(Token = "0x4001AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		[HideInInspector]
		private Vector3 _offset;

		[Token(Token = "0x4001AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		[HideInInspector]
		private int _normalMethod;

		[Token(Token = "0x4001AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		[HideInInspector]
		private bool _tangents;

		[Token(Token = "0x4001AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		[HideInInspector]
		private float _rotation;

		[Token(Token = "0x4001AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		[HideInInspector]
		private bool _flipFaces;

		[Token(Token = "0x4001AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
		[SerializeField]
		[HideInInspector]
		private bool _doubleSided;

		[Token(Token = "0x4001AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		[HideInInspector]
		private UVMode _uvMode;

		[Token(Token = "0x4001AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		[HideInInspector]
		private Vector2 _uvScale;

		[Token(Token = "0x4001AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		[HideInInspector]
		private Vector2 _uvOffset;

		[Token(Token = "0x4001AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		[HideInInspector]
		private float _uvRotation;

		[Token(Token = "0x4001AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		[HideInInspector]
		protected MeshCollider meshCollider;

		[Token(Token = "0x4001AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		[HideInInspector]
		protected MeshFilter filter;

		[Token(Token = "0x4001AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		[HideInInspector]
		protected MeshRenderer meshRenderer;

		[Token(Token = "0x4001AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		[HideInInspector]
		protected TS_Mesh tsMesh;

		[Token(Token = "0x4001AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		[HideInInspector]
		protected Mesh mesh;

		[Token(Token = "0x4001AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[HideInInspector]
		public float colliderUpdateRate;

		[Token(Token = "0x4001AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		protected bool updateCollider;

		[Token(Token = "0x4001AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		protected float lastUpdateTime;

		[Token(Token = "0x4001AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private float vDist;

		[Token(Token = "0x4001AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static Vector2 uvs;

		[Token(Token = "0x17000374")]
		public float size
		{
			[Token(Token = "0x6001D8E")]
			[Address(RVA = "0x33D1FC4", Offset = "0x33D1FC4", VA = "0x33D1FC4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D8F")]
			[Address(RVA = "0x33D1FCC", Offset = "0x33D1FCC", VA = "0x33D1FCC")]
			set
			{
			}
		}

		[Token(Token = "0x17000375")]
		public UnityEngine.Color color
		{
			[Token(Token = "0x6001D90")]
			[Address(RVA = "0x33D1FF0", Offset = "0x33D1FF0", VA = "0x33D1FF0")]
			get
			{
				return default(UnityEngine.Color);
			}
			[Token(Token = "0x6001D91")]
			[Address(RVA = "0x33D1FFC", Offset = "0x33D1FFC", VA = "0x33D1FFC")]
			set
			{
			}
		}

		[Token(Token = "0x17000376")]
		public Vector3 offset
		{
			[Token(Token = "0x6001D92")]
			[Address(RVA = "0x33D2078", Offset = "0x33D2078", VA = "0x33D2078")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001D93")]
			[Address(RVA = "0x33D2084", Offset = "0x33D2084", VA = "0x33D2084")]
			set
			{
			}
		}

		[Token(Token = "0x17000377")]
		public int normalMethod
		{
			[Token(Token = "0x6001D94")]
			[Address(RVA = "0x33D2164", Offset = "0x33D2164", VA = "0x33D2164")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001D95")]
			[Address(RVA = "0x33D216C", Offset = "0x33D216C", VA = "0x33D216C")]
			set
			{
			}
		}

		[Token(Token = "0x17000378")]
		public bool calculateTangents
		{
			[Token(Token = "0x6001D96")]
			[Address(RVA = "0x33D2190", Offset = "0x33D2190", VA = "0x33D2190")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D97")]
			[Address(RVA = "0x33D2198", Offset = "0x33D2198", VA = "0x33D2198")]
			set
			{
			}
		}

		[Token(Token = "0x17000379")]
		public float rotation
		{
			[Token(Token = "0x6001D98")]
			[Address(RVA = "0x33D21C8", Offset = "0x33D21C8", VA = "0x33D21C8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D99")]
			[Address(RVA = "0x33D21D0", Offset = "0x33D21D0", VA = "0x33D21D0")]
			set
			{
			}
		}

		[Token(Token = "0x1700037A")]
		public bool flipFaces
		{
			[Token(Token = "0x6001D9A")]
			[Address(RVA = "0x33D21F4", Offset = "0x33D21F4", VA = "0x33D21F4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D9B")]
			[Address(RVA = "0x33D21FC", Offset = "0x33D21FC", VA = "0x33D21FC")]
			set
			{
			}
		}

		[Token(Token = "0x1700037B")]
		public bool doubleSided
		{
			[Token(Token = "0x6001D9C")]
			[Address(RVA = "0x33D222C", Offset = "0x33D222C", VA = "0x33D222C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D9D")]
			[Address(RVA = "0x33D2234", Offset = "0x33D2234", VA = "0x33D2234")]
			set
			{
			}
		}

		[Token(Token = "0x1700037C")]
		public UVMode uvMode
		{
			[Token(Token = "0x6001D9E")]
			[Address(RVA = "0x33D2264", Offset = "0x33D2264", VA = "0x33D2264")]
			get
			{
				return default(UVMode);
			}
			[Token(Token = "0x6001D9F")]
			[Address(RVA = "0x33D226C", Offset = "0x33D226C", VA = "0x33D226C")]
			set
			{
			}
		}

		[Token(Token = "0x1700037D")]
		public Vector2 uvScale
		{
			[Token(Token = "0x6001DA0")]
			[Address(RVA = "0x33D2290", Offset = "0x33D2290", VA = "0x33D2290")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6001DA1")]
			[Address(RVA = "0x33D2298", Offset = "0x33D2298", VA = "0x33D2298")]
			set
			{
			}
		}

		[Token(Token = "0x1700037E")]
		public Vector2 uvOffset
		{
			[Token(Token = "0x6001DA2")]
			[Address(RVA = "0x33D2358", Offset = "0x33D2358", VA = "0x33D2358")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6001DA3")]
			[Address(RVA = "0x33D2360", Offset = "0x33D2360", VA = "0x33D2360")]
			set
			{
			}
		}

		[Token(Token = "0x1700037F")]
		public float uvRotation
		{
			[Token(Token = "0x6001DA4")]
			[Address(RVA = "0x33D2420", Offset = "0x33D2420", VA = "0x33D2420")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001DA5")]
			[Address(RVA = "0x33D2428", Offset = "0x33D2428", VA = "0x33D2428")]
			set
			{
			}
		}

		[Token(Token = "0x17000380")]
		public bool baked
		{
			[Token(Token = "0x6001DA6")]
			[Address(RVA = "0x33D244C", Offset = "0x33D244C", VA = "0x33D244C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001DA7")]
		[Address(RVA = "0x33D2454", Offset = "0x33D2454", VA = "0x33D2454", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001DA8")]
		[Address(RVA = "0x33D2578", Offset = "0x33D2578", VA = "0x33D2578", Slot = "5")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x6001DA9")]
		[Address(RVA = "0x33D269C", Offset = "0x33D269C", VA = "0x33D269C")]
		public void CloneMesh()
		{
		}

		[Token(Token = "0x6001DAA")]
		[Address(RVA = "0x33D27D8", Offset = "0x33D27D8", VA = "0x33D27D8", Slot = "11")]
		public override void Rebuild(bool sampleComputer)
		{
		}

		[Token(Token = "0x6001DAB")]
		[Address(RVA = "0x33D27F0", Offset = "0x33D27F0", VA = "0x33D27F0", Slot = "12")]
		public override void RebuildImmediate(bool sampleComputer)
		{
		}

		[Token(Token = "0x6001DAC")]
		[Address(RVA = "0x33D2808", Offset = "0x33D2808", VA = "0x33D2808", Slot = "6")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001DAD")]
		[Address(RVA = "0x33D2810", Offset = "0x33D2810", VA = "0x33D2810", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001DAE")]
		[Address(RVA = "0x33D2818", Offset = "0x33D2818", VA = "0x33D2818", Slot = "8")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001DAF")]
		[Address(RVA = "0x33D2938", Offset = "0x33D2938", VA = "0x33D2938")]
		public void UpdateCollider()
		{
		}

		[Token(Token = "0x6001DB0")]
		[Address(RVA = "0x33D2A38", Offset = "0x33D2A38", VA = "0x33D2A38", Slot = "19")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x6001DB1")]
		[Address(RVA = "0x33D2B2C", Offset = "0x33D2B2C", VA = "0x33D2B2C", Slot = "20")]
		protected override void Build()
		{
		}

		[Token(Token = "0x6001DB2")]
		[Address(RVA = "0x33D2B88", Offset = "0x33D2B88", VA = "0x33D2B88", Slot = "21")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x6001DB3")]
		[Address(RVA = "0x33D2BBC", Offset = "0x33D2BBC", VA = "0x33D2BBC", Slot = "29")]
		protected virtual void BuildMesh()
		{
		}

		[Token(Token = "0x6001DB4")]
		[Address(RVA = "0x33D2BC0", Offset = "0x33D2BC0", VA = "0x33D2BC0", Slot = "30")]
		protected virtual void WriteMesh()
		{
		}

		[Token(Token = "0x6001DB5")]
		[Address(RVA = "0x33D2F74", Offset = "0x33D2F74", VA = "0x33D2F74", Slot = "31")]
		protected virtual void AllocateMesh(int vertexCount, int trisCount)
		{
		}

		[Token(Token = "0x6001DB6")]
		[Address(RVA = "0x33D3114", Offset = "0x33D3114", VA = "0x33D3114")]
		protected void ResetUVDistance()
		{
		}

		[Token(Token = "0x6001DB7")]
		[Address(RVA = "0x33D318C", Offset = "0x33D318C", VA = "0x33D318C")]
		protected void AddUVDistance(int sampleIndex)
		{
		}

		[Token(Token = "0x6001DB8")]
		[Address(RVA = "0x33D32BC", Offset = "0x33D32BC", VA = "0x33D32BC")]
		protected void CalculateUVs(double percent, float u)
		{
		}

		[Token(Token = "0x6001DB9")]
		[Address(RVA = "0x33D3460", Offset = "0x33D3460", VA = "0x33D3460")]
		public MeshGenerator()
		{
		}
	}
	[Token(Token = "0x2000414")]
	public class Node : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200071C")]
		public class Connection
		{
			[Token(Token = "0x40027C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool invertTangents;

			[Token(Token = "0x40027C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[SerializeField]
			private int _pointIndex;

			[Token(Token = "0x40027C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private SplineComputer _computer;

			[Token(Token = "0x40027C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			[HideInInspector]
			internal SplinePoint point;

			[Token(Token = "0x170005A2")]
			public SplineComputer computer
			{
				[Token(Token = "0x6002A98")]
				[Address(RVA = "0x33D511C", Offset = "0x33D511C", VA = "0x33D511C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005A3")]
			public int pointIndex
			{
				[Token(Token = "0x6002A99")]
				[Address(RVA = "0x33D5124", Offset = "0x33D5124", VA = "0x33D5124")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x170005A4")]
			internal bool isValid
			{
				[Token(Token = "0x6002A9A")]
				[Address(RVA = "0x33D45FC", Offset = "0x33D45FC", VA = "0x33D45FC")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6002A9B")]
			[Address(RVA = "0x33D4D68", Offset = "0x33D4D68", VA = "0x33D4D68")]
			internal Connection(SplineComputer comp, int index, SplinePoint inputPoint)
			{
			}
		}

		[Token(Token = "0x200071D")]
		public enum Type
		{
			[Token(Token = "0x40027C7")]
			Smooth,
			[Token(Token = "0x40027C8")]
			Free
		}

		[Token(Token = "0x4001AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Type type;

		[Token(Token = "0x4001AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Connection[] connections;

		[Token(Token = "0x4001AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool _transformSize;

		[Token(Token = "0x4001AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool _transformNormals;

		[Token(Token = "0x4001AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		[SerializeField]
		private bool _transformTangents;

		[Token(Token = "0x4001AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TS_Transform tsTransform;

		[Token(Token = "0x17000381")]
		public bool transformNormals
		{
			[Token(Token = "0x6001DBB")]
			[Address(RVA = "0x33D35E4", Offset = "0x33D35E4", VA = "0x33D35E4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001DBC")]
			[Address(RVA = "0x33D35EC", Offset = "0x33D35EC", VA = "0x33D35EC")]
			set
			{
			}
		}

		[Token(Token = "0x17000382")]
		public bool transformSize
		{
			[Token(Token = "0x6001DBD")]
			[Address(RVA = "0x33D3748", Offset = "0x33D3748", VA = "0x33D3748")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001DBE")]
			[Address(RVA = "0x33D3750", Offset = "0x33D3750", VA = "0x33D3750")]
			set
			{
			}
		}

		[Token(Token = "0x17000383")]
		public bool transformTangents
		{
			[Token(Token = "0x6001DBF")]
			[Address(RVA = "0x33D3774", Offset = "0x33D3774", VA = "0x33D3774")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001DC0")]
			[Address(RVA = "0x33D377C", Offset = "0x33D377C", VA = "0x33D377C")]
			set
			{
			}
		}

		[Token(Token = "0x6001DC1")]
		[Address(RVA = "0x33D37A0", Offset = "0x33D37A0", VA = "0x33D37A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DC2")]
		[Address(RVA = "0x33D3828", Offset = "0x33D3828", VA = "0x33D3828")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001DC3")]
		[Address(RVA = "0x33D3884", Offset = "0x33D3884", VA = "0x33D3884")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DC4")]
		[Address(RVA = "0x33D382C", Offset = "0x33D382C", VA = "0x33D382C")]
		private void Run()
		{
		}

		[Token(Token = "0x6001DC5")]
		[Address(RVA = "0x33D3C24", Offset = "0x33D3C24", VA = "0x33D3C24")]
		public SplinePoint GetPoint(int connectionIndex, bool swapTangents)
		{
			return default(SplinePoint);
		}

		[Token(Token = "0x6001DC6")]
		[Address(RVA = "0x33D3E94", Offset = "0x33D3E94", VA = "0x33D3E94")]
		public void SetPoint(int connectionIndex, SplinePoint worldPoint, bool swappedTangents)
		{
		}

		[Token(Token = "0x6001DC7")]
		[Address(RVA = "0x33D44D8", Offset = "0x33D44D8", VA = "0x33D44D8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001DC8")]
		[Address(RVA = "0x33D44DC", Offset = "0x33D44DC", VA = "0x33D44DC")]
		public void ClearConnections()
		{
		}

		[Token(Token = "0x6001DC9")]
		[Address(RVA = "0x33D3888", Offset = "0x33D3888", VA = "0x33D3888")]
		public void UpdateConnectedComputers([Optional] SplineComputer excludeComputer)
		{
		}

		[Token(Token = "0x6001DCA")]
		[Address(RVA = "0x33D48B0", Offset = "0x33D48B0", VA = "0x33D48B0")]
		public void UpdatePoint(SplineComputer computer, int pointIndex, SplinePoint point, bool updatePosition = true)
		{
		}

		[Token(Token = "0x6001DCB")]
		[Address(RVA = "0x33D3610", Offset = "0x33D3610", VA = "0x33D3610")]
		private void UpdatePoints()
		{
		}

		[Token(Token = "0x6001DCC")]
		[Address(RVA = "0x33D4A10", Offset = "0x33D4A10", VA = "0x33D4A10")]
		protected void RemoveInvalidConnections()
		{
		}

		[Token(Token = "0x6001DCD")]
		[Address(RVA = "0x33D4AA0", Offset = "0x33D4AA0", VA = "0x33D4AA0", Slot = "4")]
		public virtual void AddConnection(SplineComputer computer, int pointIndex)
		{
		}

		[Token(Token = "0x6001DCE")]
		[Address(RVA = "0x33D4354", Offset = "0x33D4354", VA = "0x33D4354")]
		protected SplinePoint PointToLocal(SplinePoint worldPoint)
		{
			return default(SplinePoint);
		}

		[Token(Token = "0x6001DCF")]
		[Address(RVA = "0x33D3D48", Offset = "0x33D3D48", VA = "0x33D3D48")]
		protected SplinePoint PointToWorld(SplinePoint localPoint)
		{
			return default(SplinePoint);
		}

		[Token(Token = "0x6001DD0")]
		[Address(RVA = "0x33D4DC4", Offset = "0x33D4DC4", VA = "0x33D4DC4", Slot = "5")]
		public virtual void RemoveConnection(SplineComputer computer, int pointIndex)
		{
		}

		[Token(Token = "0x6001DD1")]
		[Address(RVA = "0x33D469C", Offset = "0x33D469C", VA = "0x33D469C")]
		private void RemoveConnection(int index)
		{
		}

		[Token(Token = "0x6001DD2")]
		[Address(RVA = "0x33D4F44", Offset = "0x33D4F44", VA = "0x33D4F44", Slot = "6")]
		public virtual bool HasConnection(SplineComputer computer, int pointIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DD3")]
		[Address(RVA = "0x33D5098", Offset = "0x33D5098", VA = "0x33D5098")]
		public Connection[] GetConnections()
		{
			return null;
		}

		[Token(Token = "0x6001DD4")]
		[Address(RVA = "0x33D50A0", Offset = "0x33D50A0", VA = "0x33D50A0")]
		public Node()
		{
		}
	}
	[Token(Token = "0x2000415")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1469450", Offset = "0x1469450")]
	public class ObjectBender : SplineUser
	{
		[Token(Token = "0x200071E")]
		public enum Axis
		{
			[Token(Token = "0x40027CA")]
			X,
			[Token(Token = "0x40027CB")]
			Y,
			[Token(Token = "0x40027CC")]
			Z
		}

		[Token(Token = "0x200071F")]
		public enum NormalMode
		{
			[Token(Token = "0x40027CE")]
			Spline,
			[Token(Token = "0x40027CF")]
			Auto,
			[Token(Token = "0x40027D0")]
			Custom
		}

		[Token(Token = "0x2000720")]
		public enum ForwardMode
		{
			[Token(Token = "0x40027D2")]
			Spline,
			[Token(Token = "0x40027D3")]
			Custom
		}

		[Serializable]
		[Token(Token = "0x2000721")]
		public class BendProperty
		{
			[Token(Token = "0x40027D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool enabled;

			[Token(Token = "0x40027D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TS_Transform transform;

			[Token(Token = "0x40027D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool applyRotation;

			[Token(Token = "0x40027D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
			public bool applyScale;

			[Token(Token = "0x40027D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
			public bool generateLightmapUVs;

			[Token(Token = "0x40027D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
			[SerializeField]
			[HideInInspector]
			private bool _bendMesh;

			[Token(Token = "0x40027DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[SerializeField]
			[HideInInspector]
			private bool _bendSpline;

			[Token(Token = "0x40027DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
			[SerializeField]
			[HideInInspector]
			private bool _bendCollider;

			[Token(Token = "0x40027DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float colliderUpdateDue;

			[Token(Token = "0x40027DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float colliderUpdateRate;

			[Token(Token = "0x40027DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private bool updateCollider;

			[Token(Token = "0x40027DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Vector3 originalPosition;

			[Token(Token = "0x40027E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Vector3 originalScale;

			[Token(Token = "0x40027E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public Quaternion originalRotation;

			[Token(Token = "0x40027E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public Quaternion parentRotation;

			[Token(Token = "0x40027E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public Vector3 positionPercent;

			[Token(Token = "0x40027E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public Vector3[] vertexPercents;

			[Token(Token = "0x40027E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public Vector3[] normals;

			[Token(Token = "0x40027E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public Vector3[] colliderVertexPercents;

			[Token(Token = "0x40027E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public Vector3[] colliderNormals;

			[Token(Token = "0x40027E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			[SerializeField]
			[HideInInspector]
			private Mesh originalMesh;

			[Token(Token = "0x40027E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			[SerializeField]
			[HideInInspector]
			private Mesh originalColliderMesh;

			[Token(Token = "0x40027EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private Spline _originalSpline;

			[Token(Token = "0x40027EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			[SerializeField]
			[HideInInspector]
			private Mesh destinationMesh;

			[Token(Token = "0x40027EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			[SerializeField]
			[HideInInspector]
			private Mesh destinationColliderMesh;

			[Token(Token = "0x40027ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public Spline destinationSpline;

			[Token(Token = "0x40027EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public TS_Mesh _editMesh;

			[Token(Token = "0x40027EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public TS_Mesh _editColliderMesh;

			[Token(Token = "0x40027F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			public MeshFilter filter;

			[Token(Token = "0x40027F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			public MeshCollider collider;

			[Token(Token = "0x40027F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			public SplineComputer splineComputer;

			[Token(Token = "0x40027F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			public Vector3[] splinePointPercents;

			[Token(Token = "0x40027F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			public Vector3[] primaryTangentPercents;

			[Token(Token = "0x40027F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
			public Vector3[] secondaryTangentPercents;

			[Token(Token = "0x40027F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
			[SerializeField]
			[HideInInspector]
			private bool parent;

			[Token(Token = "0x170005A5")]
			public bool isValid
			{
				[Token(Token = "0x6002A9C")]
				[Address(RVA = "0x33D92EC", Offset = "0x33D92EC", VA = "0x33D92EC")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170005A6")]
			public bool bendMesh
			{
				[Token(Token = "0x6002A9D")]
				[Address(RVA = "0x33D9374", Offset = "0x33D9374", VA = "0x33D9374")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6002A9E")]
				[Address(RVA = "0x33D6828", Offset = "0x33D6828", VA = "0x33D6828")]
				set
				{
				}
			}

			[Token(Token = "0x170005A7")]
			public bool bendCollider
			{
				[Token(Token = "0x6002A9F")]
				[Address(RVA = "0x33D9418", Offset = "0x33D9418", VA = "0x33D9418")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6002AA0")]
				[Address(RVA = "0x33D69D0", Offset = "0x33D69D0", VA = "0x33D69D0")]
				set
				{
				}
			}

			[Token(Token = "0x170005A8")]
			public bool bendSpline
			{
				[Token(Token = "0x6002AA1")]
				[Address(RVA = "0x33D94BC", Offset = "0x33D94BC", VA = "0x33D94BC")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6002AA2")]
				[Address(RVA = "0x33D94C4", Offset = "0x33D94C4", VA = "0x33D94C4")]
				set
				{
				}
			}

			[Token(Token = "0x170005A9")]
			public TS_Mesh editMesh
			{
				[Token(Token = "0x6002AA3")]
				[Address(RVA = "0x33D7818", Offset = "0x33D7818", VA = "0x33D7818")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005AA")]
			public TS_Mesh editColliderMesh
			{
				[Token(Token = "0x6002AA4")]
				[Address(RVA = "0x33D792C", Offset = "0x33D792C", VA = "0x33D792C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005AB")]
			public Spline originalSpline
			{
				[Token(Token = "0x6002AA5")]
				[Address(RVA = "0x33D7A70", Offset = "0x33D7A70", VA = "0x33D7A70")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002AA6")]
			[Address(RVA = "0x33D60E4", Offset = "0x33D60E4", VA = "0x33D60E4")]
			public BendProperty(Transform t, bool isParent = false)
			{
			}

			[Token(Token = "0x6002AA7")]
			[Address(RVA = "0x33D7CBC", Offset = "0x33D7CBC", VA = "0x33D7CBC")]
			public void Revert()
			{
			}

			[Token(Token = "0x6002AA8")]
			[Address(RVA = "0x33D937C", Offset = "0x33D937C", VA = "0x33D937C")]
			private void RevertMesh()
			{
			}

			[Token(Token = "0x6002AA9")]
			[Address(RVA = "0x33D94D0", Offset = "0x33D94D0", VA = "0x33D94D0")]
			private void RevertTransform()
			{
			}

			[Token(Token = "0x6002AAA")]
			[Address(RVA = "0x33D9420", Offset = "0x33D9420", VA = "0x33D9420")]
			private void RevertCollider()
			{
			}

			[Token(Token = "0x6002AAB")]
			[Address(RVA = "0x33D7E14", Offset = "0x33D7E14", VA = "0x33D7E14")]
			public void Apply(bool applyTransform)
			{
			}

			[Token(Token = "0x6002AAC")]
			[Address(RVA = "0x33D7FA0", Offset = "0x33D7FA0", VA = "0x33D7FA0")]
			public void Update()
			{
			}

			[Token(Token = "0x6002AAD")]
			[Address(RVA = "0x33D9554", Offset = "0x33D9554", VA = "0x33D9554")]
			private void ApplyMesh()
			{
			}

			[Token(Token = "0x6002AAE")]
			[Address(RVA = "0x33D9714", Offset = "0x33D9714", VA = "0x33D9714")]
			private void ApplyCollider()
			{
			}

			[Token(Token = "0x6002AAF")]
			[Address(RVA = "0x33D96E4", Offset = "0x33D96E4", VA = "0x33D96E4")]
			private void ApplySpline()
			{
			}
		}

		[Token(Token = "0x4001AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		[HideInInspector]
		private bool _bend;

		[Token(Token = "0x4001AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public BendProperty[] bendProperties;

		[Token(Token = "0x4001AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		[HideInInspector]
		private TS_Bounds bounds;

		[Token(Token = "0x4001AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		[HideInInspector]
		private Axis _axis;

		[Token(Token = "0x4001AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		[HideInInspector]
		private NormalMode _normalMode;

		[Token(Token = "0x4001AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		[HideInInspector]
		private ForwardMode _forwardMode;

		[Token(Token = "0x4001B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		[HideInInspector]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x14779E4", Offset = "0x14779E4")]
		private Vector3 _customNormal;

		[Token(Token = "0x4001B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		[HideInInspector]
		private Vector3 _customForward;

		[Token(Token = "0x4001B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private SplineResult bendResult;

		[Token(Token = "0x4001B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Matrix4x4 normalMatrix;

		[Token(Token = "0x4001B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Quaternion bendRotation;

		[Token(Token = "0x17000384")]
		public bool bend
		{
			[Token(Token = "0x6001DD5")]
			[Address(RVA = "0x33D512C", Offset = "0x33D512C", VA = "0x33D512C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001DD6")]
			[Address(RVA = "0x33D5134", Offset = "0x33D5134", VA = "0x33D5134")]
			set
			{
			}
		}

		[Token(Token = "0x17000385")]
		public Axis axis
		{
			[Token(Token = "0x6001DD7")]
			[Address(RVA = "0x33D53D0", Offset = "0x33D53D0", VA = "0x33D53D0")]
			get
			{
				return default(Axis);
			}
			[Token(Token = "0x6001DD8")]
			[Address(RVA = "0x33D53D8", Offset = "0x33D53D8", VA = "0x33D53D8")]
			set
			{
			}
		}

		[Token(Token = "0x17000386")]
		public NormalMode upMode
		{
			[Token(Token = "0x6001DD9")]
			[Address(RVA = "0x33D54A8", Offset = "0x33D54A8", VA = "0x33D54A8")]
			get
			{
				return default(NormalMode);
			}
			[Token(Token = "0x6001DDA")]
			[Address(RVA = "0x33D54B0", Offset = "0x33D54B0", VA = "0x33D54B0")]
			set
			{
			}
		}

		[Token(Token = "0x17000387")]
		public Vector3 customNormal
		{
			[Token(Token = "0x6001DDB")]
			[Address(RVA = "0x33D5578", Offset = "0x33D5578", VA = "0x33D5578")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001DDC")]
			[Address(RVA = "0x33D5584", Offset = "0x33D5584", VA = "0x33D5584")]
			set
			{
			}
		}

		[Token(Token = "0x17000388")]
		public ForwardMode forwardMode
		{
			[Token(Token = "0x6001DDD")]
			[Address(RVA = "0x33D56B4", Offset = "0x33D56B4", VA = "0x33D56B4")]
			get
			{
				return default(ForwardMode);
			}
			[Token(Token = "0x6001DDE")]
			[Address(RVA = "0x33D56BC", Offset = "0x33D56BC", VA = "0x33D56BC")]
			set
			{
			}
		}

		[Token(Token = "0x17000389")]
		public Vector3 customForward
		{
			[Token(Token = "0x6001DDF")]
			[Address(RVA = "0x33D5784", Offset = "0x33D5784", VA = "0x33D5784")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001DE0")]
			[Address(RVA = "0x33D5790", Offset = "0x33D5790", VA = "0x33D5790")]
			set
			{
			}
		}

		[Token(Token = "0x6001DE1")]
		[Address(RVA = "0x33D58C0", Offset = "0x33D58C0", VA = "0x33D58C0")]
		private void GetTransformsRecursively(Transform current, ref List<Transform> transformList)
		{
		}

		[Token(Token = "0x6001DE2")]
		[Address(RVA = "0x33D5B38", Offset = "0x33D5B38", VA = "0x33D5B38")]
		private void GetObjects()
		{
		}

		[Token(Token = "0x6001DE3")]
		[Address(RVA = "0x33D601C", Offset = "0x33D601C", VA = "0x33D601C")]
		public TS_Bounds GetBounds()
		{
			return null;
		}

		[Token(Token = "0x6001DE4")]
		[Address(RVA = "0x33D5C68", Offset = "0x33D5C68", VA = "0x33D5C68")]
		private void CreateProperty(ref BendProperty property, Transform t)
		{
		}

		[Token(Token = "0x6001DE5")]
		[Address(RVA = "0x33D6B44", Offset = "0x33D6B44", VA = "0x33D6B44")]
		private void CalculateBounds()
		{
		}

		[Token(Token = "0x6001DE6")]
		[Address(RVA = "0x33D6D0C", Offset = "0x33D6D0C", VA = "0x33D6D0C")]
		private void CalculatePropertyBounds(ref BendProperty property)
		{
		}

		[Token(Token = "0x6001DE7")]
		[Address(RVA = "0x33D72D4", Offset = "0x33D72D4", VA = "0x33D72D4")]
		public void CalculatePercents(BendProperty property)
		{
		}

		[Token(Token = "0x6001DE8")]
		[Address(RVA = "0x33D5368", Offset = "0x33D5368", VA = "0x33D5368")]
		private void Revert()
		{
		}

		[Token(Token = "0x6001DE9")]
		[Address(RVA = "0x33D51A4", Offset = "0x33D51A4", VA = "0x33D51A4")]
		public void UpdateReferences()
		{
		}

		[Token(Token = "0x6001DEA")]
		[Address(RVA = "0x33D7FEC", Offset = "0x33D7FEC", VA = "0x33D7FEC")]
		private void GetBendResult(Vector3 percentage)
		{
		}

		[Token(Token = "0x6001DEB")]
		[Address(RVA = "0x33D7BC4", Offset = "0x33D7BC4", VA = "0x33D7BC4")]
		private Vector3 GetPercentage(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001DEC")]
		[Address(RVA = "0x33D8724", Offset = "0x33D8724", VA = "0x33D8724", Slot = "20")]
		protected override void Build()
		{
		}

		[Token(Token = "0x6001DED")]
		[Address(RVA = "0x33D7D84", Offset = "0x33D7D84", VA = "0x33D7D84")]
		private void Bend()
		{
		}

		[Token(Token = "0x6001DEE")]
		[Address(RVA = "0x33D8760", Offset = "0x33D8760", VA = "0x33D8760")]
		public void BendObject(BendProperty p)
		{
		}

		[Token(Token = "0x6001DEF")]
		[Address(RVA = "0x33D8E10", Offset = "0x33D8E10", VA = "0x33D8E10")]
		private void BendMesh(Vector3[] vertexPercents, Vector3[] originalNormals, TS_Mesh mesh, Matrix4x4 worldToLocalMatrix)
		{
		}

		[Token(Token = "0x6001DF0")]
		[Address(RVA = "0x33D9008", Offset = "0x33D9008", VA = "0x33D9008", Slot = "21")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x6001DF1")]
		[Address(RVA = "0x33D915C", Offset = "0x33D915C", VA = "0x33D915C", Slot = "19")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x6001DF2")]
		[Address(RVA = "0x33D91CC", Offset = "0x33D91CC", VA = "0x33D91CC")]
		public ObjectBender()
		{
		}
	}
	[Token(Token = "0x2000416")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1469488", Offset = "0x1469488")]
	public class ObjectController : SplineUser
	{
		[Serializable]
		[Token(Token = "0x2000722")]
		internal class ObjectControl
		{
			[Token(Token = "0x40027F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject gameObject;

			[Token(Token = "0x40027F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 position;

			[Token(Token = "0x40027F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Quaternion rotation;

			[Token(Token = "0x40027FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Vector3 scale;

			[Token(Token = "0x40027FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public bool active;

			[Token(Token = "0x40027FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public Vector3 baseScale;

			[Token(Token = "0x170005AC")]
			public bool isNull
			{
				[Token(Token = "0x6002AB0")]
				[Address(RVA = "0x33DC684", Offset = "0x33DC684", VA = "0x33DC684")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170005AD")]
			public Transform transform
			{
				[Token(Token = "0x6002AB1")]
				[Address(RVA = "0x33DA900", Offset = "0x33DA900", VA = "0x33DA900")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002AB2")]
			[Address(RVA = "0x33DB05C", Offset = "0x33DB05C", VA = "0x33DB05C")]
			public ObjectControl(GameObject input)
			{
			}

			[Token(Token = "0x6002AB3")]
			[Address(RVA = "0x33DA998", Offset = "0x33DA998", VA = "0x33DA998")]
			public void Destroy()
			{
			}

			[Token(Token = "0x6002AB4")]
			[Address(RVA = "0x33DAA4C", Offset = "0x33DAA4C", VA = "0x33DAA4C")]
			public void DestroyImmediate()
			{
			}

			[Token(Token = "0x6002AB5")]
			[Address(RVA = "0x33DC24C", Offset = "0x33DC24C", VA = "0x33DC24C")]
			public void Apply()
			{
			}
		}

		[Token(Token = "0x2000723")]
		public enum ObjectMethod
		{
			[Token(Token = "0x40027FE")]
			Instantiate,
			[Token(Token = "0x40027FF")]
			GetChildren
		}

		[Token(Token = "0x2000724")]
		public enum Positioning
		{
			[Token(Token = "0x4002801")]
			Stretch,
			[Token(Token = "0x4002802")]
			Clip
		}

		[Token(Token = "0x2000725")]
		public enum Iteration
		{
			[Token(Token = "0x4002804")]
			Ordered,
			[Token(Token = "0x4002805")]
			Random
		}

		[Token(Token = "0x2000726")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A9CC", Offset = "0x146A9CC")]
		private sealed class <InstantiateAllWithDelay>d__101 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002806")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002807")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002808")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ObjectController <>4__this;

			[Token(Token = "0x4002809")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x170005AE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002AB9")]
				[Address(RVA = "0x33DC614", Offset = "0x33DC614", VA = "0x33DC614", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005AF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002ABB")]
				[Address(RVA = "0x33DC67C", Offset = "0x33DC67C", VA = "0x33DC67C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002AB6")]
			[Address(RVA = "0x33DB33C", Offset = "0x33DB33C", VA = "0x33DB33C")]
			[DebuggerHidden]
			public <InstantiateAllWithDelay>d__101(int <>1__state)
			{
			}

			[Token(Token = "0x6002AB7")]
			[Address(RVA = "0x33DC4C0", Offset = "0x33DC4C0", VA = "0x33DC4C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002AB8")]
			[Address(RVA = "0x33DC4C4", Offset = "0x33DC4C4", VA = "0x33DC4C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002ABA")]
			[Address(RVA = "0x33DC61C", Offset = "0x33DC61C", VA = "0x33DC61C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		[HideInInspector]
		public GameObject[] objects;

		[Token(Token = "0x4001B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		[HideInInspector]
		private float _positionOffset;

		[Token(Token = "0x4001B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		[HideInInspector]
		private int _spawnCount;

		[Token(Token = "0x4001B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		[HideInInspector]
		private Positioning _objectPositioning;

		[Token(Token = "0x4001B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[SerializeField]
		[HideInInspector]
		private Iteration _iteration;

		[Token(Token = "0x4001B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		[HideInInspector]
		private int _randomSeed;

		[Token(Token = "0x4001B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		[HideInInspector]
		private Vector2 _randomSize;

		[Token(Token = "0x4001B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		[HideInInspector]
		private Vector3 _offset;

		[Token(Token = "0x4001B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		[HideInInspector]
		private bool _offsetUseWorldCoords;

		[Token(Token = "0x4001B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		[HideInInspector]
		private Vector3 _minRotationOffset;

		[Token(Token = "0x4001B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		[HideInInspector]
		private Vector3 _maxRotationOffset;

		[Token(Token = "0x4001B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[SerializeField]
		[HideInInspector]
		private Vector3 _minScaleMultiplier;

		[Token(Token = "0x4001B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		[HideInInspector]
		private Vector3 _maxScaleMultiplier;

		[Token(Token = "0x4001B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[SerializeField]
		[HideInInspector]
		private bool _randomizeOffset;

		[Token(Token = "0x4001B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10D")]
		[SerializeField]
		[HideInInspector]
		private bool _useRandomOffsetRotation;

		[Token(Token = "0x4001B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10E")]
		[SerializeField]
		[HideInInspector]
		private bool _shellOffset;

		[Token(Token = "0x4001B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10F")]
		[SerializeField]
		[HideInInspector]
		private bool _randomOffset;

		[Token(Token = "0x4001B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		[HideInInspector]
		private bool _applyRotation;

		[Token(Token = "0x4001B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x111")]
		[SerializeField]
		[HideInInspector]
		private bool _applyScale;

		[Token(Token = "0x4001B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[SerializeField]
		[HideInInspector]
		private ObjectMethod _objectMethod;

		[Token(Token = "0x4001B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[HideInInspector]
		public bool delayedSpawn;

		[Token(Token = "0x4001B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[HideInInspector]
		public float spawnDelay;

		[Token(Token = "0x4001B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		[HideInInspector]
		private int lastChildCount;

		[Token(Token = "0x4001B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		[HideInInspector]
		private ObjectControl[] spawned;

		[Token(Token = "0x4001B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private SplineResult evaluateResult;

		[Token(Token = "0x4001B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private System.Random randomizer;

		[Token(Token = "0x4001B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private System.Random randomizer2;

		[Token(Token = "0x4001B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private System.Random rotationRandomizer;

		[Token(Token = "0x4001B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private System.Random scaleRandomizer;

		[Token(Token = "0x1700038A")]
		public ObjectMethod objectMethod
		{
			[Token(Token = "0x6001DF3")]
			[Address(RVA = "0x33D98F8", Offset = "0x33D98F8", VA = "0x33D98F8")]
			get
			{
				return default(ObjectMethod);
			}
			[Token(Token = "0x6001DF4")]
			[Address(RVA = "0x33D9900", Offset = "0x33D9900", VA = "0x33D9900")]
			set
			{
			}
		}

		[Token(Token = "0x1700038B")]
		public int spawnCount
		{
			[Token(Token = "0x6001DF5")]
			[Address(RVA = "0x33D99D4", Offset = "0x33D99D4", VA = "0x33D99D4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001DF6")]
			[Address(RVA = "0x33D99DC", Offset = "0x33D99DC", VA = "0x33D99DC")]
			set
			{
			}
		}

		[Token(Token = "0x1700038C")]
		public Positioning objectPositioning
		{
			[Token(Token = "0x6001DF7")]
			[Address(RVA = "0x33D9C78", Offset = "0x33D9C78", VA = "0x33D9C78")]
			get
			{
				return default(Positioning);
			}
			[Token(Token = "0x6001DF8")]
			[Address(RVA = "0x33D9C80", Offset = "0x33D9C80", VA = "0x33D9C80")]
			set
			{
			}
		}

		[Token(Token = "0x1700038D")]
		public Iteration iteration
		{
			[Token(Token = "0x6001DF9")]
			[Address(RVA = "0x33D9CA4", Offset = "0x33D9CA4", VA = "0x33D9CA4")]
			get
			{
				return default(Iteration);
			}
			[Token(Token = "0x6001DFA")]
			[Address(RVA = "0x33D9CAC", Offset = "0x33D9CAC", VA = "0x33D9CAC")]
			set
			{
			}
		}

		[Token(Token = "0x1700038E")]
		public int randomSeed
		{
			[Token(Token = "0x6001DFB")]
			[Address(RVA = "0x33D9CD0", Offset = "0x33D9CD0", VA = "0x33D9CD0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001DFC")]
			[Address(RVA = "0x33D9CD8", Offset = "0x33D9CD8", VA = "0x33D9CD8")]
			set
			{
			}
		}

		[Token(Token = "0x1700038F")]
		public Vector3 offset
		{
			[Token(Token = "0x6001DFD")]
			[Address(RVA = "0x33D9CFC", Offset = "0x33D9CFC", VA = "0x33D9CFC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001DFE")]
			[Address(RVA = "0x33D9D08", Offset = "0x33D9D08", VA = "0x33D9D08")]
			set
			{
			}
		}

		[Token(Token = "0x17000390")]
		public bool offsetUseWorldCoords
		{
			[Token(Token = "0x6001DFF")]
			[Address(RVA = "0x33D9DE8", Offset = "0x33D9DE8", VA = "0x33D9DE8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E00")]
			[Address(RVA = "0x33D9DF0", Offset = "0x33D9DF0", VA = "0x33D9DF0")]
			set
			{
			}
		}

		[Token(Token = "0x17000391")]
		public Vector3 minRotationOffset
		{
			[Token(Token = "0x6001E01")]
			[Address(RVA = "0x33D9E20", Offset = "0x33D9E20", VA = "0x33D9E20")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001E02")]
			[Address(RVA = "0x33D9E2C", Offset = "0x33D9E2C", VA = "0x33D9E2C")]
			set
			{
			}
		}

		[Token(Token = "0x17000392")]
		public Vector3 maxRotationOffset
		{
			[Token(Token = "0x6001E03")]
			[Address(RVA = "0x33D9F0C", Offset = "0x33D9F0C", VA = "0x33D9F0C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001E04")]
			[Address(RVA = "0x33D9F18", Offset = "0x33D9F18", VA = "0x33D9F18")]
			set
			{
			}
		}

		[Token(Token = "0x17000393")]
		public Vector3 rotationOffset
		{
			[Token(Token = "0x6001E05")]
			[Address(RVA = "0x33D9FF8", Offset = "0x33D9FF8", VA = "0x33D9FF8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001E06")]
			[Address(RVA = "0x33DA0A4", Offset = "0x33DA0A4", VA = "0x33DA0A4")]
			set
			{
			}
		}

		[Token(Token = "0x17000394")]
		public Vector3 minScaleMultiplier
		{
			[Token(Token = "0x6001E07")]
			[Address(RVA = "0x33DA1CC", Offset = "0x33DA1CC", VA = "0x33DA1CC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001E08")]
			[Address(RVA = "0x33DA1D8", Offset = "0x33DA1D8", VA = "0x33DA1D8")]
			set
			{
			}
		}

		[Token(Token = "0x17000395")]
		public Vector3 maxScaleMultiplier
		{
			[Token(Token = "0x6001E09")]
			[Address(RVA = "0x33DA2B8", Offset = "0x33DA2B8", VA = "0x33DA2B8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001E0A")]
			[Address(RVA = "0x33DA2C8", Offset = "0x33DA2C8", VA = "0x33DA2C8")]
			set
			{
			}
		}

		[Token(Token = "0x17000396")]
		public Vector3 scaleMultiplier
		{
			[Token(Token = "0x6001E0B")]
			[Address(RVA = "0x33DA3B0", Offset = "0x33DA3B0", VA = "0x33DA3B0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001E0C")]
			[Address(RVA = "0x33DA460", Offset = "0x33DA460", VA = "0x33DA460")]
			set
			{
			}
		}

		[Token(Token = "0x17000397")]
		public bool randomizeOffset
		{
			[Token(Token = "0x6001E0D")]
			[Address(RVA = "0x33DA590", Offset = "0x33DA590", VA = "0x33DA590")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E0E")]
			[Address(RVA = "0x33DA598", Offset = "0x33DA598", VA = "0x33DA598")]
			set
			{
			}
		}

		[Token(Token = "0x17000398")]
		public bool useRandomOffsetRotation
		{
			[Token(Token = "0x6001E0F")]
			[Address(RVA = "0x33DA5C8", Offset = "0x33DA5C8", VA = "0x33DA5C8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E10")]
			[Address(RVA = "0x33DA5D0", Offset = "0x33DA5D0", VA = "0x33DA5D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000399")]
		public bool shellOffset
		{
			[Token(Token = "0x6001E11")]
			[Address(RVA = "0x33DA600", Offset = "0x33DA600", VA = "0x33DA600")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E12")]
			[Address(RVA = "0x33DA608", Offset = "0x33DA608", VA = "0x33DA608")]
			set
			{
			}
		}

		[Token(Token = "0x1700039A")]
		public bool randomOffset
		{
			[Token(Token = "0x6001E13")]
			[Address(RVA = "0x33DA638", Offset = "0x33DA638", VA = "0x33DA638")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E14")]
			[Address(RVA = "0x33DA640", Offset = "0x33DA640", VA = "0x33DA640")]
			set
			{
			}
		}

		[Token(Token = "0x1700039B")]
		public bool applyRotation
		{
			[Token(Token = "0x6001E15")]
			[Address(RVA = "0x33DA670", Offset = "0x33DA670", VA = "0x33DA670")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E16")]
			[Address(RVA = "0x33DA678", Offset = "0x33DA678", VA = "0x33DA678")]
			set
			{
			}
		}

		[Token(Token = "0x1700039C")]
		public bool applyScale
		{
			[Token(Token = "0x6001E17")]
			[Address(RVA = "0x33DA6A8", Offset = "0x33DA6A8", VA = "0x33DA6A8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E18")]
			[Address(RVA = "0x33DA6B0", Offset = "0x33DA6B0", VA = "0x33DA6B0")]
			set
			{
			}
		}

		[Token(Token = "0x1700039D")]
		public Vector2 randomSize
		{
			[Token(Token = "0x6001E19")]
			[Address(RVA = "0x33DA6E0", Offset = "0x33DA6E0", VA = "0x33DA6E0")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6001E1A")]
			[Address(RVA = "0x33DA6E8", Offset = "0x33DA6E8", VA = "0x33DA6E8")]
			set
			{
			}
		}

		[Token(Token = "0x1700039E")]
		public float positionOffset
		{
			[Token(Token = "0x6001E1B")]
			[Address(RVA = "0x33DA7A8", Offset = "0x33DA7A8", VA = "0x33DA7A8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E1C")]
			[Address(RVA = "0x33DA7B0", Offset = "0x33DA7B0", VA = "0x33DA7B0")]
			set
			{
			}
		}

		[Token(Token = "0x6001E1D")]
		[Address(RVA = "0x33DA7D4", Offset = "0x33DA7D4", VA = "0x33DA7D4")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001E1E")]
		[Address(RVA = "0x33D9A10", Offset = "0x33D9A10", VA = "0x33D9A10")]
		private void Remove()
		{
		}

		[Token(Token = "0x6001E1F")]
		[Address(RVA = "0x33DAB00", Offset = "0x33DAB00", VA = "0x33DAB00")]
		public void GetAll()
		{
		}

		[Token(Token = "0x6001E20")]
		[Address(RVA = "0x33D9920", Offset = "0x33D9920", VA = "0x33D9920")]
		public void Spawn()
		{
		}

		[Token(Token = "0x6001E21")]
		[Address(RVA = "0x33DB2C0", Offset = "0x33DB2C0", VA = "0x33DB2C0", Slot = "19")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x6001E22")]
		[Address(RVA = "0x33DB178", Offset = "0x33DB178", VA = "0x33DB178")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1486C38", Offset = "0x1486C38")]
		private IEnumerator InstantiateAllWithDelay()
		{
			return null;
		}

		[Token(Token = "0x6001E23")]
		[Address(RVA = "0x33DB1F4", Offset = "0x33DB1F4", VA = "0x33DB1F4")]
		private void InstantiateAll()
		{
		}

		[Token(Token = "0x6001E24")]
		[Address(RVA = "0x33DB368", Offset = "0x33DB368", VA = "0x33DB368")]
		private void InstantiateSingle()
		{
		}

		[Token(Token = "0x6001E25")]
		[Address(RVA = "0x33DB68C", Offset = "0x33DB68C", VA = "0x33DB68C", Slot = "20")]
		protected override void Build()
		{
		}

		[Token(Token = "0x6001E26")]
		[Address(RVA = "0x33DC1DC", Offset = "0x33DC1DC", VA = "0x33DC1DC", Slot = "21")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x6001E27")]
		[Address(RVA = "0x33DC338", Offset = "0x33DC338", VA = "0x33DC338", Slot = "8")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001E28")]
		[Address(RVA = "0x33DC340", Offset = "0x33DC340", VA = "0x33DC340")]
		public ObjectController()
		{
		}
	}
	[Token(Token = "0x2000417")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x14694C0", Offset = "0x14694C0")]
	public class ParticleController : SplineUser
	{
		[Token(Token = "0x2000727")]
		public enum EmitPoint
		{
			[Token(Token = "0x400280B")]
			Beginning,
			[Token(Token = "0x400280C")]
			Ending,
			[Token(Token = "0x400280D")]
			Random,
			[Token(Token = "0x400280E")]
			Ordered
		}

		[Token(Token = "0x2000728")]
		public enum MotionType
		{
			[Token(Token = "0x4002810")]
			None,
			[Token(Token = "0x4002811")]
			UseParticleSystem,
			[Token(Token = "0x4002812")]
			FollowForward,
			[Token(Token = "0x4002813")]
			FollowBackward,
			[Token(Token = "0x4002814")]
			ByNormal,
			[Token(Token = "0x4002815")]
			ByNormalRandomized
		}

		[Token(Token = "0x2000729")]
		public enum Wrap
		{
			[Token(Token = "0x4002817")]
			Default,
			[Token(Token = "0x4002818")]
			Loop
		}

		[Token(Token = "0x200072A")]
		public class Particle
		{
			[Token(Token = "0x4002819")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Vector2 startOffset;

			[Token(Token = "0x400281A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Vector2 endOffset;

			[Token(Token = "0x400281B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal float cycleSpeed;

			[Token(Token = "0x400281C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal float startLifetime;

			[Token(Token = "0x400281D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal UnityEngine.Color startColor;

			[Token(Token = "0x400281E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal float remainingLifetime;

			[Token(Token = "0x400281F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal float lifeTime;

			[Token(Token = "0x4002820")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal double startPercent;

			[Token(Token = "0x6002ABC")]
			[Address(RVA = "0x33DE1E8", Offset = "0x33DE1E8", VA = "0x33DE1E8")]
			internal double GetSplinePercent(Wrap wrap, ParticleSystem.Particle particle)
			{
				return default(double);
			}

			[Token(Token = "0x6002ABD")]
			[Address(RVA = "0x33DCC0C", Offset = "0x33DCC0C", VA = "0x33DCC0C")]
			public Particle()
			{
			}
		}

		[Token(Token = "0x4001B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		public ParticleSystem _particleSystem;

		[Token(Token = "0x4001B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public bool volumetric;

		[Token(Token = "0x4001B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		[HideInInspector]
		public bool emitFromShell;

		[Token(Token = "0x4001B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[HideInInspector]
		public Vector2 scale;

		[Token(Token = "0x4001B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[HideInInspector]
		public EmitPoint emitPoint;

		[Token(Token = "0x4001B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[HideInInspector]
		public MotionType motionType;

		[Token(Token = "0x4001B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[HideInInspector]
		public Wrap wrapMode;

		[Token(Token = "0x4001B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[HideInInspector]
		public float minCycles;

		[Token(Token = "0x4001B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[HideInInspector]
		public float maxCycles;

		[Token(Token = "0x4001B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private ParticleSystem.Particle[] particles;

		[Token(Token = "0x4001B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Particle[] controllers;

		[Token(Token = "0x4001B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private int particleCount;

		[Token(Token = "0x4001B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private int birthIndex;

		[Token(Token = "0x4001B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private SplineResult evalResult;

		[Token(Token = "0x6001E29")]
		[Address(RVA = "0x33DC6F4", Offset = "0x33DC6F4", VA = "0x33DC6F4", Slot = "19")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x6001E2A")]
		[Address(RVA = "0x33DCBA0", Offset = "0x33DCBA0", VA = "0x33DCBA0")]
		private void TransformParticle(ref ParticleSystem.Particle particle, Transform trs)
		{
		}

		[Token(Token = "0x6001E2B")]
		[Address(RVA = "0x33DDB50", Offset = "0x33DDB50", VA = "0x33DDB50")]
		private void InverseTransformParticle(ref ParticleSystem.Particle particle, Transform trs)
		{
		}

		[Token(Token = "0x6001E2C")]
		[Address(RVA = "0x33DE120", Offset = "0x33DE120", VA = "0x33DE120", Slot = "5")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x6001E2D")]
		[Address(RVA = "0x33DDBBC", Offset = "0x33DDBBC", VA = "0x33DDBBC")]
		private void HandleParticle(int index)
		{
		}

		[Token(Token = "0x6001E2E")]
		[Address(RVA = "0x33DE324", Offset = "0x33DE324", VA = "0x33DE324")]
		private void OnParticleDie(int index)
		{
		}

		[Token(Token = "0x6001E2F")]
		[Address(RVA = "0x33DCC9C", Offset = "0x33DCC9C", VA = "0x33DCC9C")]
		private void OnParticleBorn(int index)
		{
		}

		[Token(Token = "0x6001E30")]
		[Address(RVA = "0x33DE328", Offset = "0x33DE328", VA = "0x33DE328")]
		public ParticleController()
		{
		}
	}
	[Token(Token = "0x2000418")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x146950C", Offset = "0x146950C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x146950C", Offset = "0x146950C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x146950C", Offset = "0x146950C")]
	public class PathGenerator : MeshGenerator
	{
		[Token(Token = "0x4001B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		[HideInInspector]
		private int _slices;

		[Token(Token = "0x4001B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[SerializeField]
		[HideInInspector]
		private bool _useShapeCurve;

		[Token(Token = "0x4001B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		[HideInInspector]
		private AnimationCurve _shape;

		[Token(Token = "0x4001B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		[HideInInspector]
		private AnimationCurve _lastShape;

		[Token(Token = "0x4001B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		[HideInInspector]
		private float _shapeExposure;

		[Token(Token = "0x1700039F")]
		public int slices
		{
			[Token(Token = "0x6001E31")]
			[Address(RVA = "0x33DE424", Offset = "0x33DE424", VA = "0x33DE424")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001E32")]
			[Address(RVA = "0x33DE42C", Offset = "0x33DE42C", VA = "0x33DE42C")]
			set
			{
			}
		}

		[Token(Token = "0x170003A0")]
		public bool useShapeCurve
		{
			[Token(Token = "0x6001E33")]
			[Address(RVA = "0x33DE458", Offset = "0x33DE458", VA = "0x33DE458")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E34")]
			[Address(RVA = "0x33DE460", Offset = "0x33DE460", VA = "0x33DE460")]
			set
			{
			}
		}

		[Token(Token = "0x170003A1")]
		public float shapeExposure
		{
			[Token(Token = "0x6001E35")]
			[Address(RVA = "0x33DE5C0", Offset = "0x33DE5C0", VA = "0x33DE5C0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E36")]
			[Address(RVA = "0x33DE5C8", Offset = "0x33DE5C8", VA = "0x33DE5C8")]
			set
			{
			}
		}

		[Token(Token = "0x170003A2")]
		public AnimationCurve shape
		{
			[Token(Token = "0x6001E37")]
			[Address(RVA = "0x33DE68C", Offset = "0x33DE68C", VA = "0x33DE68C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E38")]
			[Address(RVA = "0x33DE694", Offset = "0x33DE694", VA = "0x33DE694")]
			set
			{
			}
		}

		[Token(Token = "0x6001E39")]
		[Address(RVA = "0x33DEA14", Offset = "0x33DEA14", VA = "0x33DEA14", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001E3A")]
		[Address(RVA = "0x33DEA78", Offset = "0x33DEA78", VA = "0x33DEA78", Slot = "5")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x6001E3B")]
		[Address(RVA = "0x33DEA7C", Offset = "0x33DEA7C", VA = "0x33DEA7C", Slot = "29")]
		protected override void BuildMesh()
		{
		}

		[Token(Token = "0x6001E3C")]
		[Address(RVA = "0x33DEB5C", Offset = "0x33DEB5C", VA = "0x33DEB5C")]
		private void GenerateVertices()
		{
		}

		[Token(Token = "0x6001E3D")]
		[Address(RVA = "0x33DFB08", Offset = "0x33DFB08", VA = "0x33DFB08")]
		public PathGenerator()
		{
		}
	}
	[Token(Token = "0x2000419")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x14695BC", Offset = "0x14695BC")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x14695BC", Offset = "0x14695BC")]
	public class PolygonColliderGenerator : SplineUser
	{
		[Token(Token = "0x200072B")]
		public enum Type
		{
			[Token(Token = "0x4002822")]
			Path,
			[Token(Token = "0x4002823")]
			Shape
		}

		[Token(Token = "0x4001B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		[HideInInspector]
		private Type _type;

		[Token(Token = "0x4001B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		[HideInInspector]
		private float _size;

		[Token(Token = "0x4001B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		[HideInInspector]
		private float _offset;

		[Token(Token = "0x4001B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		[HideInInspector]
		protected PolygonCollider2D polygonCollider;

		[Token(Token = "0x4001B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		[HideInInspector]
		protected Vector2[] vertices;

		[Token(Token = "0x4001B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[HideInInspector]
		public float updateRate;

		[Token(Token = "0x4001B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		protected float lastUpdateTime;

		[Token(Token = "0x4001B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private bool updateCollider;

		[Token(Token = "0x170003A3")]
		public Type type
		{
			[Token(Token = "0x6001E3E")]
			[Address(RVA = "0x33DFB7C", Offset = "0x33DFB7C", VA = "0x33DFB7C")]
			get
			{
				return default(Type);
			}
			[Token(Token = "0x6001E3F")]
			[Address(RVA = "0x33DFB84", Offset = "0x33DFB84", VA = "0x33DFB84")]
			set
			{
			}
		}

		[Token(Token = "0x170003A4")]
		public float size
		{
			[Token(Token = "0x6001E40")]
			[Address(RVA = "0x33DFBA8", Offset = "0x33DFBA8", VA = "0x33DFBA8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E41")]
			[Address(RVA = "0x33DFBB0", Offset = "0x33DFBB0", VA = "0x33DFBB0")]
			set
			{
			}
		}

		[Token(Token = "0x170003A5")]
		public float offset
		{
			[Token(Token = "0x6001E42")]
			[Address(RVA = "0x33DFBD4", Offset = "0x33DFBD4", VA = "0x33DFBD4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E43")]
			[Address(RVA = "0x33DFBDC", Offset = "0x33DFBDC", VA = "0x33DFBDC")]
			set
			{
			}
		}

		[Token(Token = "0x6001E44")]
		[Address(RVA = "0x33DFC00", Offset = "0x33DFC00", VA = "0x33DFC00", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001E45")]
		[Address(RVA = "0x33DFC6C", Offset = "0x33DFC6C", VA = "0x33DFC6C", Slot = "5")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x6001E46")]
		[Address(RVA = "0x33DFC74", Offset = "0x33DFC74", VA = "0x33DFC74", Slot = "6")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001E47")]
		[Address(RVA = "0x33DFC7C", Offset = "0x33DFC7C", VA = "0x33DFC7C", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001E48")]
		[Address(RVA = "0x33DFC84", Offset = "0x33DFC84", VA = "0x33DFC84", Slot = "8")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001E49")]
		[Address(RVA = "0x33DFC8C", Offset = "0x33DFC8C", VA = "0x33DFC8C", Slot = "19")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x6001E4A")]
		[Address(RVA = "0x33DFD64", Offset = "0x33DFD64", VA = "0x33DFD64", Slot = "20")]
		protected override void Build()
		{
		}

		[Token(Token = "0x6001E4B")]
		[Address(RVA = "0x33E04CC", Offset = "0x33E04CC", VA = "0x33E04CC", Slot = "21")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x6001E4C")]
		[Address(RVA = "0x33DFDD4", Offset = "0x33DFDD4", VA = "0x33DFDD4")]
		private void GeneratePath()
		{
		}

		[Token(Token = "0x6001E4D")]
		[Address(RVA = "0x33E0210", Offset = "0x33E0210", VA = "0x33E0210")]
		private void GenerateShape()
		{
		}

		[Token(Token = "0x6001E4E")]
		[Address(RVA = "0x33E0670", Offset = "0x33E0670", VA = "0x33E0670")]
		public PolygonColliderGenerator()
		{
		}
	}
	[Token(Token = "0x200041A")]
	public delegate void EmptySplineHandler();
	[Token(Token = "0x200041B")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1469644", Offset = "0x1469644")]
	public class SplineComputer : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200072C")]
		public class NodeLink
		{
			[Token(Token = "0x4002824")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Node node;

			[Token(Token = "0x4002825")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int pointIndex;

			[Token(Token = "0x6002ABE")]
			[Address(RVA = "0x341B9BC", Offset = "0x341B9BC", VA = "0x341B9BC")]
			public NodeLink()
			{
			}
		}

		[Token(Token = "0x200072D")]
		public enum Space
		{
			[Token(Token = "0x4002827")]
			World,
			[Token(Token = "0x4002828")]
			Local
		}

		[Serializable]
		[Token(Token = "0x200072E")]
		public class Morph
		{
			[Serializable]
			[Token(Token = "0x20007A4")]
			internal class SplineMorphState
			{
				[Token(Token = "0x4002A9A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public SplinePoint[] points;

				[Token(Token = "0x4002A9B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public float percent;

				[Token(Token = "0x4002A9C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public string name;

				[Token(Token = "0x6002D0B")]
				[Address(RVA = "0x3420E60", Offset = "0x3420E60", VA = "0x3420E60")]
				public SplineMorphState()
				{
				}
			}

			[Token(Token = "0x4002829")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private SplineComputer computer;

			[Token(Token = "0x400282A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private SplineMorphState[] morphStates;

			[Token(Token = "0x400282B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			internal bool initialized;

			[Token(Token = "0x6002ABF")]
			[Address(RVA = "0x341A7A0", Offset = "0x341A7A0", VA = "0x341A7A0")]
			public Morph(SplineComputer input)
			{
			}

			[Token(Token = "0x6002AC0")]
			[Address(RVA = "0x341F5F0", Offset = "0x341F5F0", VA = "0x341F5F0")]
			public void SetWeight(int index, float weight)
			{
			}

			[Token(Token = "0x6002AC1")]
			[Address(RVA = "0x3420784", Offset = "0x3420784", VA = "0x3420784")]
			public void SetWeight(string name, float weight)
			{
			}

			[Token(Token = "0x6002AC2")]
			[Address(RVA = "0x342094C", Offset = "0x342094C", VA = "0x342094C")]
			public void CaptureSnapshot(int index)
			{
			}

			[Token(Token = "0x6002AC3")]
			[Address(RVA = "0x3420ABC", Offset = "0x3420ABC", VA = "0x3420ABC")]
			public void CaptureSnapshot(string name)
			{
			}

			[Token(Token = "0x6002AC4")]
			[Address(RVA = "0x3420AE4", Offset = "0x3420AE4", VA = "0x3420AE4")]
			public void Clear()
			{
			}

			[Token(Token = "0x6002AC5")]
			[Address(RVA = "0x3420B44", Offset = "0x3420B44", VA = "0x3420B44")]
			public SplinePoint[] GetSnapshot(int index)
			{
				return null;
			}

			[Token(Token = "0x6002AC6")]
			[Address(RVA = "0x3420B88", Offset = "0x3420B88", VA = "0x3420B88")]
			public SplinePoint[] GetSnapshot(string name)
			{
				return null;
			}

			[Token(Token = "0x6002AC7")]
			[Address(RVA = "0x341FA60", Offset = "0x341FA60", VA = "0x341FA60")]
			public float GetWeight(int index)
			{
				return default(float);
			}

			[Token(Token = "0x6002AC8")]
			[Address(RVA = "0x3420BDC", Offset = "0x3420BDC", VA = "0x3420BDC")]
			public float GetWeight(string name)
			{
				return default(float);
			}

			[Token(Token = "0x6002AC9")]
			[Address(RVA = "0x3420C30", Offset = "0x3420C30", VA = "0x3420C30")]
			public void AddChannel(string name)
			{
			}

			[Token(Token = "0x6002ACA")]
			[Address(RVA = "0x3420EEC", Offset = "0x3420EEC", VA = "0x3420EEC")]
			public void RemoveChannel(string name)
			{
			}

			[Token(Token = "0x6002ACB")]
			[Address(RVA = "0x3420F14", Offset = "0x3420F14", VA = "0x3420F14")]
			public void RemoveChannel(int index)
			{
			}

			[Token(Token = "0x6002ACC")]
			[Address(RVA = "0x3420128", Offset = "0x3420128", VA = "0x3420128")]
			private void Update()
			{
			}

			[Token(Token = "0x6002ACD")]
			[Address(RVA = "0x3420850", Offset = "0x3420850", VA = "0x3420850")]
			private int GetChannelIndex(string name)
			{
				return default(int);
			}

			[Token(Token = "0x6002ACE")]
			[Address(RVA = "0x341A864", Offset = "0x341A864", VA = "0x341A864")]
			public int GetChannelCount()
			{
				return default(int);
			}

			[Token(Token = "0x6002ACF")]
			[Address(RVA = "0x341F800", Offset = "0x341F800", VA = "0x341F800")]
			public string[] GetChannelNames()
			{
				return null;
			}
		}

		[Token(Token = "0x4001B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		[SerializeField]
		private Spline spline;

		[Token(Token = "0x4001B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		[SerializeField]
		private Morph _morph;

		[Token(Token = "0x4001B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		[SerializeField]
		private Space _space;

		[Token(Token = "0x4001B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		[SerializeField]
		private SplineUser[] subscribers;

		[Token(Token = "0x4001B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		[SerializeField]
		private NodeLink[] _nodeLinks;

		[Token(Token = "0x4001B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool rebuildPending;

		[Token(Token = "0x4001B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TS_Transform tsTransform;

		[Token(Token = "0x4001B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool updateRebuild;

		[Token(Token = "0x4001B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool lateUpdateRebuild;

		[Token(Token = "0x4001B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private SplineUser.UpdateMethod method;

		[Token(Token = "0x170003A6")]
		public Space space
		{
			[Token(Token = "0x6001E53")]
			[Address(RVA = "0x341A550", Offset = "0x341A550", VA = "0x341A550")]
			get
			{
				return default(Space);
			}
			[Token(Token = "0x6001E54")]
			[Address(RVA = "0x341A558", Offset = "0x341A558", VA = "0x341A558")]
			set
			{
			}
		}

		[Token(Token = "0x170003A7")]
		public Spline.Type type
		{
			[Token(Token = "0x6001E55")]
			[Address(RVA = "0x341A580", Offset = "0x341A580", VA = "0x341A580")]
			get
			{
				return default(Spline.Type);
			}
			[Token(Token = "0x6001E56")]
			[Address(RVA = "0x341A59C", Offset = "0x341A59C", VA = "0x341A59C")]
			set
			{
			}
		}

		[Token(Token = "0x170003A8")]
		public double precision
		{
			[Token(Token = "0x6001E57")]
			[Address(RVA = "0x341A5CC", Offset = "0x341A5CC", VA = "0x341A5CC")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001E58")]
			[Address(RVA = "0x341A5E8", Offset = "0x341A5E8", VA = "0x341A5E8")]
			set
			{
			}
		}

		[Token(Token = "0x170003A9")]
		public AnimationCurve customValueInterpolation
		{
			[Token(Token = "0x6001E59")]
			[Address(RVA = "0x341A634", Offset = "0x341A634", VA = "0x341A634")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E5A")]
			[Address(RVA = "0x341A650", Offset = "0x341A650", VA = "0x341A650")]
			set
			{
			}
		}

		[Token(Token = "0x170003AA")]
		public AnimationCurve customNormalInterpolation
		{
			[Token(Token = "0x6001E5B")]
			[Address(RVA = "0x341A688", Offset = "0x341A688", VA = "0x341A688")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E5C")]
			[Address(RVA = "0x341A6A4", Offset = "0x341A6A4", VA = "0x341A6A4")]
			set
			{
			}
		}

		[Token(Token = "0x170003AB")]
		public int iterations
		{
			[Token(Token = "0x6001E5D")]
			[Address(RVA = "0x341A6DC", Offset = "0x341A6DC", VA = "0x341A6DC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003AC")]
		public double moveStep
		{
			[Token(Token = "0x6001E5E")]
			[Address(RVA = "0x3417C2C", Offset = "0x3417C2C", VA = "0x3417C2C")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170003AD")]
		public bool isClosed
		{
			[Token(Token = "0x6001E5F")]
			[Address(RVA = "0x341A6F8", Offset = "0x341A6F8", VA = "0x341A6F8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003AE")]
		public int pointCount
		{
			[Token(Token = "0x6001E60")]
			[Address(RVA = "0x3417AE0", Offset = "0x3417AE0", VA = "0x3417AE0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003AF")]
		public Morph morph
		{
			[Token(Token = "0x6001E61")]
			[Address(RVA = "0x341A714", Offset = "0x341A714", VA = "0x341A714")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B0")]
		public NodeLink[] nodeLinks
		{
			[Token(Token = "0x6001E62")]
			[Address(RVA = "0x341A834", Offset = "0x341A834", VA = "0x341A834")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B1")]
		public bool hasMorph
		{
			[Token(Token = "0x6001E63")]
			[Address(RVA = "0x341A83C", Offset = "0x341A83C", VA = "0x341A83C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003B2")]
		public Vector3 position
		{
			[Token(Token = "0x6001E64")]
			[Address(RVA = "0x341A87C", Offset = "0x341A87C", VA = "0x341A87C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170003B3")]
		public Quaternion rotation
		{
			[Token(Token = "0x6001E65")]
			[Address(RVA = "0x341A8B8", Offset = "0x341A8B8", VA = "0x341A8B8")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x170003B4")]
		public Vector3 scale
		{
			[Token(Token = "0x6001E66")]
			[Address(RVA = "0x341A8F4", Offset = "0x341A8F4", VA = "0x341A8F4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170003B5")]
		public int subscriberCount
		{
			[Token(Token = "0x6001E67")]
			[Address(RVA = "0x341A930", Offset = "0x341A930", VA = "0x341A930")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1400005B")]
		public event EmptySplineHandler onRebuild
		{
			[Token(Token = "0x6001E68")]
			[Address(RVA = "0x341A94C", Offset = "0x341A94C", VA = "0x341A94C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1486C9C", Offset = "0x1486C9C")]
			add
			{
			}
			[Token(Token = "0x6001E69")]
			[Address(RVA = "0x341A9F0", Offset = "0x341A9F0", VA = "0x341A9F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1486CAC", Offset = "0x1486CAC")]
			remove
			{
			}
		}

		[Token(Token = "0x6001E6A")]
		[Address(RVA = "0x341AA94", Offset = "0x341AA94", VA = "0x341AA94")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E6B")]
		[Address(RVA = "0x341AB1C", Offset = "0x341AB1C", VA = "0x341AB1C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001E6C")]
		[Address(RVA = "0x341AD84", Offset = "0x341AD84", VA = "0x341AD84")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E6D")]
		[Address(RVA = "0x341AB58", Offset = "0x341AB58", VA = "0x341AB58")]
		private void Run()
		{
		}

		[Token(Token = "0x6001E6E")]
		[Address(RVA = "0x341AF78", Offset = "0x341AF78", VA = "0x341AF78")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001E6F")]
		[Address(RVA = "0x341AF5C", Offset = "0x341AF5C", VA = "0x341AF5C")]
		public void ResampleTransform()
		{
		}

		[Token(Token = "0x6001E70")]
		[Address(RVA = "0x341AF90", Offset = "0x341AF90", VA = "0x341AF90")]
		public void Subscribe(SplineUser input)
		{
		}

		[Token(Token = "0x6001E71")]
		[Address(RVA = "0x341B194", Offset = "0x341B194", VA = "0x341B194")]
		public void Unsubscribe(SplineUser input)
		{
		}

		[Token(Token = "0x6001E72")]
		[Address(RVA = "0x341B384", Offset = "0x341B384", VA = "0x341B384")]
		public bool IsSubscribed(SplineUser user)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E73")]
		[Address(RVA = "0x341B45C", Offset = "0x341B45C", VA = "0x341B45C")]
		public SplineUser[] GetSubscribers()
		{
			return null;
		}

		[Token(Token = "0x6001E74")]
		[Address(RVA = "0x341B464", Offset = "0x341B464", VA = "0x341B464")]
		public void AddNodeLink(Node node, int pointIndex)
		{
		}

		[Token(Token = "0x6001E75")]
		[Address(RVA = "0x341B9C4", Offset = "0x341B9C4", VA = "0x341B9C4")]
		public void RemoveNodeLink(int pointIndex)
		{
		}

		[Token(Token = "0x6001E76")]
		[Address(RVA = "0x341BEFC", Offset = "0x341BEFC", VA = "0x341BEFC")]
		public SplinePoint[] GetPoints(Space getSpace = Space.World)
		{
			return null;
		}

		[Token(Token = "0x6001E77")]
		[Address(RVA = "0x341C2AC", Offset = "0x341C2AC", VA = "0x341C2AC")]
		public SplinePoint GetPoint(int index, Space getSpace = Space.World)
		{
			return default(SplinePoint);
		}

		[Token(Token = "0x6001E78")]
		[Address(RVA = "0x341C458", Offset = "0x341C458", VA = "0x341C458")]
		public Vector3 GetPointPosition(int index, Space getSpace = Space.World)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001E79")]
		[Address(RVA = "0x341C4E4", Offset = "0x341C4E4", VA = "0x341C4E4")]
		public Vector3 GetPointNormal(int index, Space getSpace = Space.World)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001E7A")]
		[Address(RVA = "0x341C574", Offset = "0x341C574", VA = "0x341C574")]
		public Vector3 GetPointTangent(int index, Space getSpace = Space.World)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001E7B")]
		[Address(RVA = "0x341C600", Offset = "0x341C600", VA = "0x341C600")]
		public Vector3 GetPointTangent2(int index, Space getSpace = Space.World)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001E7C")]
		[Address(RVA = "0x341C68C", Offset = "0x341C68C", VA = "0x341C68C")]
		public float GetPointSize(int index, Space getSpace = Space.World)
		{
			return default(float);
		}

		[Token(Token = "0x6001E7D")]
		[Address(RVA = "0x341C6D4", Offset = "0x341C6D4", VA = "0x341C6D4")]
		public UnityEngine.Color GetPointColor(int index, Space getSpace = Space.World)
		{
			return default(UnityEngine.Color);
		}

		[Token(Token = "0x6001E7E")]
		[Address(RVA = "0x341C720", Offset = "0x341C720", VA = "0x341C720")]
		public void SetPoints(SplinePoint[] points, Space setSpace = Space.World)
		{
		}

		[Token(Token = "0x6001E7F")]
		[Address(RVA = "0x341D0EC", Offset = "0x341D0EC", VA = "0x341D0EC")]
		public void SetPointPosition(int index, Vector3 pos, Space setSpace = Space.World)
		{
		}

		[Token(Token = "0x6001E80")]
		[Address(RVA = "0x341D42C", Offset = "0x341D42C", VA = "0x341D42C")]
		public void SetPointTangents(int index, Vector3 tan1, Vector3 tan2, Space setSpace = Space.World)
		{
		}

		[Token(Token = "0x6001E81")]
		[Address(RVA = "0x341D750", Offset = "0x341D750", VA = "0x341D750")]
		public void SetPointNormal(int index, Vector3 nrm, Space setSpace = Space.World)
		{
		}

		[Token(Token = "0x6001E82")]
		[Address(RVA = "0x341D908", Offset = "0x341D908", VA = "0x341D908")]
		public void SetPointSize(int index, float size)
		{
		}

		[Token(Token = "0x6001E83")]
		[Address(RVA = "0x341D9DC", Offset = "0x341D9DC", VA = "0x341D9DC")]
		public void SetPointColor(int index, UnityEngine.Color color)
		{
		}

		[Token(Token = "0x6001E84")]
		[Address(RVA = "0x341DB10", Offset = "0x341DB10", VA = "0x341DB10")]
		public void SetPoint(int index, SplinePoint point, Space setSpace = Space.World)
		{
		}

		[Token(Token = "0x6001E85")]
		[Address(RVA = "0x341D2A4", Offset = "0x341D2A4", VA = "0x341D2A4")]
		private void AppendPoints(int count)
		{
		}

		[Token(Token = "0x6001E86")]
		[Address(RVA = "0x341DF90", Offset = "0x341DF90", VA = "0x341DF90")]
		public double GetPointPercent(int pointIndex)
		{
			return default(double);
		}

		[Token(Token = "0x6001E87")]
		[Address(RVA = "0x34186CC", Offset = "0x34186CC", VA = "0x34186CC")]
		public Vector3 EvaluatePosition(double percent)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001E88")]
		[Address(RVA = "0x341DFC4", Offset = "0x341DFC4", VA = "0x341DFC4")]
		public SplineResult Evaluate(double percent)
		{
			return null;
		}

		[Token(Token = "0x6001E89")]
		[Address(RVA = "0x341E03C", Offset = "0x341E03C", VA = "0x341E03C")]
		public SplineResult Evaluate(int pointIndex)
		{
			return null;
		}

		[Token(Token = "0x6001E8A")]
		[Address(RVA = "0x341E0D0", Offset = "0x341E0D0", VA = "0x341E0D0")]
		public void Evaluate(SplineResult result, int pointIndex)
		{
		}

		[Token(Token = "0x6001E8B")]
		[Address(RVA = "0x34183D0", Offset = "0x34183D0", VA = "0x34183D0")]
		public void Evaluate(SplineResult result, double percent)
		{
		}

		[Token(Token = "0x6001E8C")]
		[Address(RVA = "0x341E1A4", Offset = "0x341E1A4", VA = "0x341E1A4")]
		public void Evaluate(ref SplineResult[] samples, double from = 0.0, double to = 1.0)
		{
		}

		[Token(Token = "0x6001E8D")]
		[Address(RVA = "0x341E234", Offset = "0x341E234", VA = "0x341E234")]
		public void EvaluatePositions(ref Vector3[] positions, double from = 0.0, double to = 1.0)
		{
		}

		[Token(Token = "0x6001E8E")]
		[Address(RVA = "0x341E2EC", Offset = "0x341E2EC", VA = "0x341E2EC")]
		public double Travel(double start, float distance, Spline.Direction direction)
		{
			return default(double);
		}

		[Token(Token = "0x6001E8F")]
		[Address(RVA = "0x341E120", Offset = "0x341E120", VA = "0x341E120")]
		private void TransformResult(SplineResult result)
		{
		}

		[Token(Token = "0x6001E90")]
		[Address(RVA = "0x341A574", Offset = "0x341A574", VA = "0x341A574")]
		public void Rebuild()
		{
		}

		[Token(Token = "0x6001E91")]
		[Address(RVA = "0x341E564", Offset = "0x341E564", VA = "0x341E564")]
		public void RebuildImmediate()
		{
		}

		[Token(Token = "0x6001E92")]
		[Address(RVA = "0x341E740", Offset = "0x341E740", VA = "0x341E740")]
		private void RemoveSubscriber(int index)
		{
		}

		[Token(Token = "0x6001E93")]
		[Address(RVA = "0x341ABC4", Offset = "0x341ABC4", VA = "0x341ABC4")]
		private void RebuildOnUpdate()
		{
		}

		[Token(Token = "0x6001E94")]
		[Address(RVA = "0x341E898", Offset = "0x341E898", VA = "0x341E898")]
		public void RebuildConnectedUsers()
		{
		}

		[Token(Token = "0x6001E95")]
		[Address(RVA = "0x341E89C", Offset = "0x341E89C", VA = "0x341E89C")]
		private void RebuildUser(int index)
		{
		}

		[Token(Token = "0x6001E96")]
		[Address(RVA = "0x3418CC8", Offset = "0x3418CC8", VA = "0x3418CC8")]
		public double Project(Vector3 point, int subdivide = 3, double from = 0.0, double to = 1.0)
		{
			return default(double);
		}

		[Token(Token = "0x6001E97")]
		[Address(RVA = "0x341CCB0", Offset = "0x341CCB0", VA = "0x341CCB0")]
		public void Break()
		{
		}

		[Token(Token = "0x6001E98")]
		[Address(RVA = "0x341E9C4", Offset = "0x341E9C4", VA = "0x341E9C4")]
		public void Break(int at)
		{
		}

		[Token(Token = "0x6001E99")]
		[Address(RVA = "0x341EA18", Offset = "0x341EA18", VA = "0x341EA18")]
		public void Close()
		{
		}

		[Token(Token = "0x6001E9A")]
		[Address(RVA = "0x341EA64", Offset = "0x341EA64", VA = "0x341EA64")]
		public void ConvertToBezier()
		{
		}

		[Token(Token = "0x6001E9B")]
		[Address(RVA = "0x341905C", Offset = "0x341905C", VA = "0x341905C")]
		public float CalculateLength(double from = 0.0, double to = 1.0, double resolution = 1.0)
		{
			return default(float);
		}

		[Token(Token = "0x6001E9C")]
		[Address(RVA = "0x341EA80", Offset = "0x341EA80", VA = "0x341EA80")]
		public bool Raycast(out RaycastHit hit, out double hitPercent, LayerMask layerMask, double resolution = 1.0, double from = 0.0, double to = 1.0, QueryTriggerInteraction hitTriggers = QueryTriggerInteraction.UseGlobal)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E9D")]
		[Address(RVA = "0x341ECDC", Offset = "0x341ECDC", VA = "0x341ECDC")]
		public bool RaycastAll(out RaycastHit[] hits, out double[] hitPercents, LayerMask layerMask, double resolution = 1.0, double from = 0.0, double to = 1.0, QueryTriggerInteraction hitTriggers = QueryTriggerInteraction.UseGlobal)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E9E")]
		[Address(RVA = "0x341F0D8", Offset = "0x341F0D8", VA = "0x341F0D8")]
		public int[] GetAvailableNodeLinksAtPosition(double percent, Spline.Direction direction)
		{
			return null;
		}

		[Token(Token = "0x6001E9F")]
		[Address(RVA = "0x341F20C", Offset = "0x341F20C", VA = "0x341F20C")]
		public void GetConnectedComputers(List<SplineComputer> computers, List<int> connectionIndices, List<int> connectedIndices, double percent, Spline.Direction direction, bool includeEqual)
		{
		}

		[Token(Token = "0x6001EA0")]
		[Address(RVA = "0x341F554", Offset = "0x341F554", VA = "0x341F554")]
		public void SetMorphState(int index)
		{
		}

		[Token(Token = "0x6001EA1")]
		[Address(RVA = "0x341F6AC", Offset = "0x341F6AC", VA = "0x341F6AC")]
		public void SetMorphState(string morphName)
		{
		}

		[Token(Token = "0x6001EA2")]
		[Address(RVA = "0x341F920", Offset = "0x341F920", VA = "0x341F920")]
		public void SetMorphState(int index, float percent)
		{
		}

		[Token(Token = "0x6001EA3")]
		[Address(RVA = "0x341FAA4", Offset = "0x341FAA4", VA = "0x341FAA4")]
		public void SetMorphState(string morphName, float percent)
		{
		}

		[Token(Token = "0x6001EA4")]
		[Address(RVA = "0x341FC10", Offset = "0x341FC10", VA = "0x341FC10")]
		public void SetMorphState(float percent)
		{
		}

		[Token(Token = "0x6001EA5")]
		[Address(RVA = "0x341FD04", Offset = "0x341FD04", VA = "0x341FD04")]
		public List<SplineComputer> GetConnectedComputers()
		{
			return null;
		}

		[Token(Token = "0x6001EA6")]
		[Address(RVA = "0x341FDB4", Offset = "0x341FDB4", VA = "0x341FDB4")]
		private void GetConnectedComputers(ref List<SplineComputer> computers)
		{
		}

		[Token(Token = "0x6001EA7")]
		[Address(RVA = "0x341BB48", Offset = "0x341BB48", VA = "0x341BB48")]
		private void RemoveNodeLinkAt(int index)
		{
		}

		[Token(Token = "0x6001EA8")]
		[Address(RVA = "0x341D35C", Offset = "0x341D35C", VA = "0x341D35C")]
		private void SetNodeForPoint(int index, SplinePoint worldPoint)
		{
		}

		[Token(Token = "0x6001EA9")]
		[Address(RVA = "0x341CE90", Offset = "0x341CE90", VA = "0x341CE90")]
		private void UpdateConnectedNodes(SplinePoint[] worldPoints)
		{
		}

		[Token(Token = "0x6001EAA")]
		[Address(RVA = "0x341ADBC", Offset = "0x341ADBC", VA = "0x341ADBC")]
		private void UpdateConnectedNodes()
		{
		}

		[Token(Token = "0x6001EAB")]
		[Address(RVA = "0x341C0D4", Offset = "0x341C0D4", VA = "0x341C0D4")]
		public Vector3 TransformPoint(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001EAC")]
		[Address(RVA = "0x341CCB8", Offset = "0x341CCB8", VA = "0x341CCB8")]
		public Vector3 InverseTransformPoint(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001EAD")]
		[Address(RVA = "0x341C1C0", Offset = "0x341C1C0", VA = "0x341C1C0")]
		public Vector3 TransformDirection(Vector3 direction)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001EAE")]
		[Address(RVA = "0x341CDA4", Offset = "0x341CDA4", VA = "0x341CDA4")]
		public Vector3 InverseTransformDirection(Vector3 direction)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001EAF")]
		[Address(RVA = "0x3420060", Offset = "0x3420060", VA = "0x3420060")]
		public SplineComputer()
		{
		}
	}
	[Token(Token = "0x200041C")]
	public delegate void SplineReachHandler();
	[Token(Token = "0x200041D")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x146967C", Offset = "0x146967C")]
	public class SplineFollower : SplineTracer
	{
		[Token(Token = "0x200072F")]
		public enum FollowMode
		{
			[Token(Token = "0x400282D")]
			Uniform,
			[Token(Token = "0x400282E")]
			Time
		}

		[Token(Token = "0x2000730")]
		public enum Wrap
		{
			[Token(Token = "0x4002830")]
			Default,
			[Token(Token = "0x4002831")]
			Loop,
			[Token(Token = "0x4002832")]
			PingPong
		}

		[Token(Token = "0x4001B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[HideInInspector]
		public Wrap wrapMode;

		[Token(Token = "0x4001B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[HideInInspector]
		public FollowMode followMode;

		[Token(Token = "0x4001B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[HideInInspector]
		public bool autoStartPosition;

		[Token(Token = "0x4001B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x121")]
		[HideInInspector]
		public bool autoFollow;

		[Token(Token = "0x4001B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		[HideInInspector]
		private float _followSpeed;

		[Token(Token = "0x4001B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[SerializeField]
		[HideInInspector]
		private float _followDuration;

		[Token(Token = "0x4001B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private double lastClippedPercent;

		[Token(Token = "0x4001B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private SplineResult from;

		[Token(Token = "0x4001B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private SplineResult to;

		[Token(Token = "0x4001B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private bool followStarted;

		[Token(Token = "0x170003B6")]
		public float followSpeed
		{
			[Token(Token = "0x6001EB4")]
			[Address(RVA = "0x34210A0", Offset = "0x34210A0", VA = "0x34210A0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001EB5")]
			[Address(RVA = "0x34210A8", Offset = "0x34210A8", VA = "0x34210A8")]
			set
			{
			}
		}

		[Token(Token = "0x170003B7")]
		public float followDuration
		{
			[Token(Token = "0x6001EB6")]
			[Address(RVA = "0x34210C4", Offset = "0x34210C4", VA = "0x34210C4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001EB7")]
			[Address(RVA = "0x34210CC", Offset = "0x34210CC", VA = "0x34210CC")]
			set
			{
			}
		}

		[Token(Token = "0x170003B8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x148A3B4", Offset = "0x148A3B4")]
		public SplineResult followResult
		{
			[Token(Token = "0x6001EB8")]
			[Address(RVA = "0x34210E8", Offset = "0x34210E8", VA = "0x34210E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B9")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x148A3EC", Offset = "0x148A3EC")]
		public SplineResult offsettedFollowResult
		{
			[Token(Token = "0x6001EB9")]
			[Address(RVA = "0x34210F0", Offset = "0x34210F0", VA = "0x34210F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400005C")]
		public event SplineReachHandler onEndReached
		{
			[Token(Token = "0x6001EBA")]
			[Address(RVA = "0x3421484", Offset = "0x3421484", VA = "0x3421484")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1486CBC", Offset = "0x1486CBC")]
			add
			{
			}
			[Token(Token = "0x6001EBB")]
			[Address(RVA = "0x342152C", Offset = "0x342152C", VA = "0x342152C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1486CCC", Offset = "0x1486CCC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400005D")]
		public event SplineReachHandler onBeginningReached
		{
			[Token(Token = "0x6001EBC")]
			[Address(RVA = "0x34215D4", Offset = "0x34215D4", VA = "0x34215D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1486CDC", Offset = "0x1486CDC")]
			add
			{
			}
			[Token(Token = "0x6001EBD")]
			[Address(RVA = "0x342167C", Offset = "0x342167C", VA = "0x342167C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1486CEC", Offset = "0x1486CEC")]
			remove
			{
			}
		}

		[Token(Token = "0x6001EBE")]
		[Address(RVA = "0x3421724", Offset = "0x3421724", VA = "0x3421724", Slot = "29")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001EBF")]
		[Address(RVA = "0x34217C0", Offset = "0x34217C0", VA = "0x34217C0", Slot = "19")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x6001EC0")]
		[Address(RVA = "0x34218F4", Offset = "0x34218F4", VA = "0x34218F4", Slot = "21")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x6001EC1")]
		[Address(RVA = "0x34217FC", Offset = "0x34217FC", VA = "0x34217FC")]
		private void AutoFollow()
		{
		}

		[Token(Token = "0x6001EC2")]
		[Address(RVA = "0x3422B98", Offset = "0x3422B98", VA = "0x3422B98")]
		public void Restart(double startPosition = 0.0)
		{
		}

		[Token(Token = "0x6001EC3")]
		[Address(RVA = "0x3422C4C", Offset = "0x3422C4C", VA = "0x3422C4C", Slot = "30")]
		public override void SetPercent(double percent, bool checkTriggers = false)
		{
		}

		[Token(Token = "0x6001EC4")]
		[Address(RVA = "0x3422D50", Offset = "0x3422D50", VA = "0x3422D50", Slot = "31")]
		public override void SetDistance(float distance, bool checkTriggers = false)
		{
		}

		[Token(Token = "0x6001EC5")]
		[Address(RVA = "0x34227F8", Offset = "0x34227F8", VA = "0x34227F8")]
		public void Move(double percent)
		{
		}

		[Token(Token = "0x6001EC6")]
		[Address(RVA = "0x3421D5C", Offset = "0x3421D5C", VA = "0x3421D5C")]
		public void Move(float distance)
		{
		}

		[Token(Token = "0x6001EC7")]
		[Address(RVA = "0x34233A4", Offset = "0x34233A4", VA = "0x34233A4")]
		public SplineFollower()
		{
		}
	}
	[Token(Token = "0x200041E")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x14696B4", Offset = "0x14696B4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x14696B4", Offset = "0x14696B4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x14696B4", Offset = "0x14696B4")]
	public class SplineMesh : MeshGenerator
	{
		[Serializable]
		[Token(Token = "0x2000731")]
		public class Channel
		{
			[Token(Token = "0x20007A5")]
			public delegate float FloatHandler(double percent);

			[Token(Token = "0x20007A6")]
			public delegate Vector2 Vector2Handler(double percent);

			[Token(Token = "0x20007A7")]
			public delegate Vector3 Vector3Handler(double percent);

			[Token(Token = "0x20007A8")]
			public delegate Quaternion QuaternionHandler(double percent);

			[Token(Token = "0x20007A9")]
			public enum Type
			{
				[Token(Token = "0x4002A9E")]
				Extrude,
				[Token(Token = "0x4002A9F")]
				Place
			}

			[Token(Token = "0x20007AA")]
			public enum UVOverride
			{
				[Token(Token = "0x4002AA1")]
				None,
				[Token(Token = "0x4002AA2")]
				ClampU,
				[Token(Token = "0x4002AA3")]
				ClampV,
				[Token(Token = "0x4002AA4")]
				UniformU,
				[Token(Token = "0x4002AA5")]
				UniformV
			}

			[Serializable]
			[Token(Token = "0x20007AB")]
			public class MeshDefinition
			{
				[Token(Token = "0x20007B5")]
				public enum MirrorMethod
				{
					[Token(Token = "0x4002ADB")]
					None,
					[Token(Token = "0x4002ADC")]
					X,
					[Token(Token = "0x4002ADD")]
					Y,
					[Token(Token = "0x4002ADE")]
					Z
				}

				[Serializable]
				[Token(Token = "0x20007B6")]
				public class Submesh
				{
					[Token(Token = "0x4002ADF")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
					public int[] triangles;

					[Token(Token = "0x6002E04")]
					[Address(RVA = "0x342BAA4", Offset = "0x342BAA4", VA = "0x342BAA4")]
					public Submesh()
					{
					}

					[Token(Token = "0x6002E05")]
					[Address(RVA = "0x3429EF0", Offset = "0x3429EF0", VA = "0x3429EF0")]
					public Submesh(int[] input)
					{
					}
				}

				[Serializable]
				[Token(Token = "0x20007B7")]
				public class VertexGroup
				{
					[Token(Token = "0x4002AE0")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
					public float value;

					[Token(Token = "0x4002AE1")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
					public double percent;

					[Token(Token = "0x4002AE2")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
					public int[] ids;

					[Token(Token = "0x6002E06")]
					[Address(RVA = "0x342B994", Offset = "0x342B994", VA = "0x342B994")]
					public VertexGroup(float val, double perc, int[] vertIds)
					{
					}

					[Token(Token = "0x6002E07")]
					[Address(RVA = "0x342B9E0", Offset = "0x342B9E0", VA = "0x342B9E0")]
					public void AddId(int id)
					{
					}
				}

				[Token(Token = "0x4002AA6")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[SerializeField]
				[HideInInspector]
				internal Vector3[] vertices;

				[Token(Token = "0x4002AA7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				[SerializeField]
				[HideInInspector]
				internal Vector3[] normals;

				[Token(Token = "0x4002AA8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				[SerializeField]
				[HideInInspector]
				internal Vector4[] tangents;

				[Token(Token = "0x4002AA9")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				[SerializeField]
				[HideInInspector]
				internal UnityEngine.Color[] colors;

				[Token(Token = "0x4002AAA")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				[SerializeField]
				[HideInInspector]
				internal Vector2[] uv;

				[Token(Token = "0x4002AAB")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
				[SerializeField]
				[HideInInspector]
				internal Vector2[] uv2;

				[Token(Token = "0x4002AAC")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
				[SerializeField]
				[HideInInspector]
				internal Vector2[] uv3;

				[Token(Token = "0x4002AAD")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
				[SerializeField]
				[HideInInspector]
				internal Vector2[] uv4;

				[Token(Token = "0x4002AAE")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
				[SerializeField]
				[HideInInspector]
				internal int[] triangles;

				[Token(Token = "0x4002AAF")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
				[SerializeField]
				[HideInInspector]
				internal List<Submesh> subMeshes;

				[Token(Token = "0x4002AB0")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
				[SerializeField]
				[HideInInspector]
				internal TS_Bounds bounds;

				[Token(Token = "0x4002AB1")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
				[SerializeField]
				[HideInInspector]
				internal List<VertexGroup> vertexGroups;

				[Token(Token = "0x4002AB2")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
				[SerializeField]
				[HideInInspector]
				private Mesh _mesh;

				[Token(Token = "0x4002AB3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
				[SerializeField]
				[HideInInspector]
				private Vector3 _rotation;

				[Token(Token = "0x4002AB4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
				[SerializeField]
				[HideInInspector]
				private Vector2 _offset;

				[Token(Token = "0x4002AB5")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
				[SerializeField]
				[HideInInspector]
				private Vector3 _scale;

				[Token(Token = "0x4002AB6")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
				[SerializeField]
				[HideInInspector]
				private Vector2 _uvScale;

				[Token(Token = "0x4002AB7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
				[SerializeField]
				[HideInInspector]
				private Vector2 _uvOffset;

				[Token(Token = "0x4002AB8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
				[SerializeField]
				[HideInInspector]
				private float _uvRotation;

				[Token(Token = "0x4002AB9")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
				[SerializeField]
				[HideInInspector]
				private MirrorMethod _mirror;

				[Token(Token = "0x4002ABA")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
				[SerializeField]
				[HideInInspector]
				private bool _flipFaces;

				[Token(Token = "0x4002ABB")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
				[SerializeField]
				[HideInInspector]
				private bool _doubleSided;

				[Token(Token = "0x1700064F")]
				public Mesh mesh
				{
					[Token(Token = "0x6002D1C")]
					[Address(RVA = "0x34299B0", Offset = "0x34299B0", VA = "0x34299B0")]
					get
					{
						return null;
					}
					[Token(Token = "0x6002D1D")]
					[Address(RVA = "0x34299B8", Offset = "0x34299B8", VA = "0x34299B8")]
					set
					{
					}
				}

				[Token(Token = "0x17000650")]
				public Vector3 rotation
				{
					[Token(Token = "0x6002D1E")]
					[Address(RVA = "0x3429A64", Offset = "0x3429A64", VA = "0x3429A64")]
					get
					{
						return default(Vector3);
					}
					[Token(Token = "0x6002D1F")]
					[Address(RVA = "0x3429A70", Offset = "0x3429A70", VA = "0x3429A70")]
					set
					{
					}
				}

				[Token(Token = "0x17000651")]
				public Vector2 offset
				{
					[Token(Token = "0x6002D20")]
					[Address(RVA = "0x3429B44", Offset = "0x3429B44", VA = "0x3429B44")]
					get
					{
						return default(Vector2);
					}
					[Token(Token = "0x6002D21")]
					[Address(RVA = "0x3429B4C", Offset = "0x3429B4C", VA = "0x3429B4C")]
					set
					{
					}
				}

				[Token(Token = "0x17000652")]
				public Vector3 scale
				{
					[Token(Token = "0x6002D22")]
					[Address(RVA = "0x3429C00", Offset = "0x3429C00", VA = "0x3429C00")]
					get
					{
						return default(Vector3);
					}
					[Token(Token = "0x6002D23")]
					[Address(RVA = "0x3429C0C", Offset = "0x3429C0C", VA = "0x3429C0C")]
					set
					{
					}
				}

				[Token(Token = "0x17000653")]
				public Vector2 uvScale
				{
					[Token(Token = "0x6002D24")]
					[Address(RVA = "0x3429CE0", Offset = "0x3429CE0", VA = "0x3429CE0")]
					get
					{
						return default(Vector2);
					}
					[Token(Token = "0x6002D25")]
					[Address(RVA = "0x3429CE8", Offset = "0x3429CE8", VA = "0x3429CE8")]
					set
					{
					}
				}

				[Token(Token = "0x17000654")]
				public Vector2 uvOffset
				{
					[Token(Token = "0x6002D26")]
					[Address(RVA = "0x3429D9C", Offset = "0x3429D9C", VA = "0x3429D9C")]
					get
					{
						return default(Vector2);
					}
					[Token(Token = "0x6002D27")]
					[Address(RVA = "0x3429DA4", Offset = "0x3429DA4", VA = "0x3429DA4")]
					set
					{
					}
				}

				[Token(Token = "0x17000655")]
				public float uvRotation
				{
					[Token(Token = "0x6002D28")]
					[Address(RVA = "0x3429E58", Offset = "0x3429E58", VA = "0x3429E58")]
					get
					{
						return default(float);
					}
					[Token(Token = "0x6002D29")]
					[Address(RVA = "0x3429E60", Offset = "0x3429E60", VA = "0x3429E60")]
					set
					{
					}
				}

				[Token(Token = "0x17000656")]
				public MirrorMethod mirror
				{
					[Token(Token = "0x6002D2A")]
					[Address(RVA = "0x3429E78", Offset = "0x3429E78", VA = "0x3429E78")]
					get
					{
						return default(MirrorMethod);
					}
					[Token(Token = "0x6002D2B")]
					[Address(RVA = "0x3429E80", Offset = "0x3429E80", VA = "0x3429E80")]
					set
					{
					}
				}

				[Token(Token = "0x17000657")]
				public bool flipFaces
				{
					[Token(Token = "0x6002D2C")]
					[Address(RVA = "0x3429E98", Offset = "0x3429E98", VA = "0x3429E98")]
					get
					{
						return default(bool);
					}
					[Token(Token = "0x6002D2D")]
					[Address(RVA = "0x3429EA0", Offset = "0x3429EA0", VA = "0x3429EA0")]
					set
					{
					}
				}

				[Token(Token = "0x17000658")]
				public bool doubleSided
				{
					[Token(Token = "0x6002D2E")]
					[Address(RVA = "0x3429EC4", Offset = "0x3429EC4", VA = "0x3429EC4")]
					get
					{
						return default(bool);
					}
					[Token(Token = "0x6002D2F")]
					[Address(RVA = "0x3429ECC", Offset = "0x3429ECC", VA = "0x3429ECC")]
					set
					{
					}
				}

				[Token(Token = "0x6002D30")]
				[Address(RVA = "0x3427CC8", Offset = "0x3427CC8", VA = "0x3427CC8")]
				internal MeshDefinition Copy()
				{
					return null;
				}

				[Token(Token = "0x6002D31")]
				[Address(RVA = "0x34277BC", Offset = "0x34277BC", VA = "0x34277BC")]
				public MeshDefinition(Mesh input)
				{
				}

				[Token(Token = "0x6002D32")]
				[Address(RVA = "0x3428F70", Offset = "0x3428F70", VA = "0x3428F70")]
				public void Refresh()
				{
				}

				[Token(Token = "0x6002D33")]
				[Address(RVA = "0x342A678", Offset = "0x342A678", VA = "0x342A678")]
				private void FlipFaces()
				{
				}

				[Token(Token = "0x6002D34")]
				[Address(RVA = "0x342A388", Offset = "0x342A388", VA = "0x342A388")]
				private void DoubleSided()
				{
				}

				[Token(Token = "0x6002D35")]
				[Address(RVA = "0x34256CC", Offset = "0x34256CC", VA = "0x34256CC")]
				public void Write(TS_Mesh target, int forceMaterialId = -1)
				{
				}

				[Token(Token = "0x6002D36")]
				[Address(RVA = "0x342AC70", Offset = "0x342AC70", VA = "0x342AC70")]
				private void CalculateBounds()
				{
				}

				[Token(Token = "0x6002D37")]
				[Address(RVA = "0x3429FA4", Offset = "0x3429FA4", VA = "0x3429FA4")]
				private void Mirror()
				{
				}

				[Token(Token = "0x6002D38")]
				[Address(RVA = "0x342A7AC", Offset = "0x342A7AC", VA = "0x342A7AC")]
				private void TransformVertices()
				{
				}

				[Token(Token = "0x6002D39")]
				[Address(RVA = "0x342ADCC", Offset = "0x342ADCC", VA = "0x342ADCC")]
				private void GroupVertices()
				{
				}

				[Token(Token = "0x6002D3A")]
				[Address(RVA = "0x342B878", Offset = "0x342B878", VA = "0x342B878")]
				private int FindInsertIndex(Vector3 pos, float value)
				{
					return default(int);
				}

				[Token(Token = "0x6002D3B")]
				[Address(RVA = "0x342B154", Offset = "0x342B154", VA = "0x342B154")]
				private void CalculateTangents()
				{
				}
			}

			[Token(Token = "0x4002833")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x4002834")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private System.Random iterationRandom;

			[Token(Token = "0x4002835")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			[HideInInspector]
			private int _iterationSeed;

			[Token(Token = "0x4002836")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[SerializeField]
			[HideInInspector]
			private int _offsetSeed;

			[Token(Token = "0x4002837")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private System.Random offsetRandom;

			[Token(Token = "0x4002838")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector2Handler _offsetHandler;

			[Token(Token = "0x4002839")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[SerializeField]
			[HideInInspector]
			private int _rotationSeed;

			[Token(Token = "0x400283A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private System.Random rotationRandom;

			[Token(Token = "0x400283B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private QuaternionHandler _placeRotationHandler;

			[Token(Token = "0x400283C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private FloatHandler _extrudeRotationHandler;

			[Token(Token = "0x400283D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[SerializeField]
			[HideInInspector]
			private int _scaleSeed;

			[Token(Token = "0x400283E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private System.Random scaleRandom;

			[Token(Token = "0x400283F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private Vector3Handler _scaleHandler;

			[Token(Token = "0x4002840")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[SerializeField]
			internal SplineMesh owner;

			[Token(Token = "0x4002841")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			[SerializeField]
			[HideInInspector]
			private List<MeshDefinition> meshes;

			[Token(Token = "0x4002842")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[SerializeField]
			[HideInInspector]
			private double _clipFrom;

			[Token(Token = "0x4002843")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			[SerializeField]
			[HideInInspector]
			private double _clipTo;

			[Token(Token = "0x4002844")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			[SerializeField]
			[HideInInspector]
			private bool _randomOrder;

			[Token(Token = "0x4002845")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			[SerializeField]
			[HideInInspector]
			private UVOverride _overrideUVs;

			[Token(Token = "0x4002846")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			[SerializeField]
			[HideInInspector]
			private Vector2 _uvScale;

			[Token(Token = "0x4002847")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			[SerializeField]
			[HideInInspector]
			private Vector2 _uvOffset;

			[Token(Token = "0x4002848")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			[SerializeField]
			[HideInInspector]
			private bool _overrideNormal;

			[Token(Token = "0x4002849")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
			[SerializeField]
			[HideInInspector]
			private Vector3 _customNormal;

			[Token(Token = "0x400284A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			[SerializeField]
			[HideInInspector]
			private Type _type;

			[Token(Token = "0x400284B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			[SerializeField]
			[HideInInspector]
			private int _count;

			[Token(Token = "0x400284C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			[SerializeField]
			[HideInInspector]
			private double _spacing;

			[Token(Token = "0x400284D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			[SerializeField]
			[HideInInspector]
			private bool _randomRotation;

			[Token(Token = "0x400284E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			[SerializeField]
			[HideInInspector]
			private Vector3 _minRotation;

			[Token(Token = "0x400284F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			[SerializeField]
			[HideInInspector]
			private Vector3 _maxRotation;

			[Token(Token = "0x4002850")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
			[SerializeField]
			[HideInInspector]
			private bool _randomOffset;

			[Token(Token = "0x4002851")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			[SerializeField]
			[HideInInspector]
			private Vector2 _minOffset;

			[Token(Token = "0x4002852")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			[SerializeField]
			[HideInInspector]
			private Vector2 _maxOffset;

			[Token(Token = "0x4002853")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			[SerializeField]
			[HideInInspector]
			private bool _randomScale;

			[Token(Token = "0x4002854")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
			[SerializeField]
			[HideInInspector]
			private bool _uniformRandomScale;

			[Token(Token = "0x4002855")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
			[SerializeField]
			[HideInInspector]
			private Vector3 _minScale;

			[Token(Token = "0x4002856")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
			[SerializeField]
			[HideInInspector]
			private Vector3 _maxScale;

			[Token(Token = "0x4002857")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
			private int iterator;

			[Token(Token = "0x4002858")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
			[SerializeField]
			[HideInInspector]
			private bool _overrideMaterialID;

			[Token(Token = "0x4002859")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
			[SerializeField]
			[HideInInspector]
			private int _targetMaterialID;

			[Token(Token = "0x170005B0")]
			public double clipFrom
			{
				[Token(Token = "0x6002AD0")]
				[Address(RVA = "0x3426A70", Offset = "0x3426A70", VA = "0x3426A70")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x6002AD1")]
				[Address(RVA = "0x3426A78", Offset = "0x3426A78", VA = "0x3426A78")]
				set
				{
				}
			}

			[Token(Token = "0x170005B1")]
			public double clipTo
			{
				[Token(Token = "0x6002AD2")]
				[Address(RVA = "0x3426B2C", Offset = "0x3426B2C", VA = "0x3426B2C")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x6002AD3")]
				[Address(RVA = "0x3426B34", Offset = "0x3426B34", VA = "0x3426B34")]
				set
				{
				}
			}

			[Token(Token = "0x170005B2")]
			public bool randomOffset
			{
				[Token(Token = "0x6002AD4")]
				[Address(RVA = "0x3426B4C", Offset = "0x3426B4C", VA = "0x3426B4C")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6002AD5")]
				[Address(RVA = "0x3426B54", Offset = "0x3426B54", VA = "0x3426B54")]
				set
				{
				}
			}

			[Token(Token = "0x170005B3")]
			public Vector2Handler offsetHandler
			{
				[Token(Token = "0x6002AD6")]
				[Address(RVA = "0x3426B78", Offset = "0x3426B78", VA = "0x3426B78")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002AD7")]
				[Address(RVA = "0x3426B80", Offset = "0x3426B80", VA = "0x3426B80")]
				set
				{
				}
			}

			[Token(Token = "0x170005B4")]
			public bool overrideMaterialID
			{
				[Token(Token = "0x6002AD8")]
				[Address(RVA = "0x3426BE8", Offset = "0x3426BE8", VA = "0x3426BE8")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6002AD9")]
				[Address(RVA = "0x3426BF0", Offset = "0x3426BF0", VA = "0x3426BF0")]
				set
				{
				}
			}

			[Token(Token = "0x170005B5")]
			public int targetMaterialID
			{
				[Token(Token = "0x6002ADA")]
				[Address(RVA = "0x3426C14", Offset = "0x3426C14", VA = "0x3426C14")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002ADB")]
				[Address(RVA = "0x3426C1C", Offset = "0x3426C1C", VA = "0x3426C1C")]
				set
				{
				}
			}

			[Token(Token = "0x170005B6")]
			public bool randomRotation
			{
				[Token(Token = "0x6002ADC")]
				[Address(RVA = "0x3426C34", Offset = "0x3426C34", VA = "0x3426C34")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6002ADD")]
				[Address(RVA = "0x3426C3C", Offset = "0x3426C3C", VA = "0x3426C3C")]
				set
				{
				}
			}

			[Token(Token = "0x170005B7")]
			public QuaternionHandler placeRotationHandler
			{
				[Token(Token = "0x6002ADE")]
				[Address(RVA = "0x3426C60", Offset = "0x3426C60", VA = "0x3426C60")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002ADF")]
				[Address(RVA = "0x3426C68", Offset = "0x3426C68", VA = "0x3426C68")]
				set
				{
				}
			}

			[Token(Token = "0x170005B8")]
			public FloatHandler extrudeRotationHandler
			{
				[Token(Token = "0x6002AE0")]
				[Address(RVA = "0x3426CD0", Offset = "0x3426CD0", VA = "0x3426CD0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002AE1")]
				[Address(RVA = "0x3426CD8", Offset = "0x3426CD8", VA = "0x3426CD8")]
				set
				{
				}
			}

			[Token(Token = "0x170005B9")]
			public bool randomScale
			{
				[Token(Token = "0x6002AE2")]
				[Address(RVA = "0x3426D40", Offset = "0x3426D40", VA = "0x3426D40")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6002AE3")]
				[Address(RVA = "0x3426D48", Offset = "0x3426D48", VA = "0x3426D48")]
				set
				{
				}
			}

			[Token(Token = "0x170005BA")]
			public Vector3Handler scaleHandler
			{
				[Token(Token = "0x6002AE4")]
				[Address(RVA = "0x3426D6C", Offset = "0x3426D6C", VA = "0x3426D6C")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002AE5")]
				[Address(RVA = "0x3426D74", Offset = "0x3426D74", VA = "0x3426D74")]
				set
				{
				}
			}

			[Token(Token = "0x170005BB")]
			public bool uniformRandomScale
			{
				[Token(Token = "0x6002AE6")]
				[Address(RVA = "0x3426DDC", Offset = "0x3426DDC", VA = "0x3426DDC")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6002AE7")]
				[Address(RVA = "0x3426DE4", Offset = "0x3426DE4", VA = "0x3426DE4")]
				set
				{
				}
			}

			[Token(Token = "0x170005BC")]
			public int offsetSeed
			{
				[Token(Token = "0x6002AE8")]
				[Address(RVA = "0x3426E08", Offset = "0x3426E08", VA = "0x3426E08")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002AE9")]
				[Address(RVA = "0x3426E10", Offset = "0x3426E10", VA = "0x3426E10")]
				set
				{
				}
			}

			[Token(Token = "0x170005BD")]
			public int rotationSeed
			{
				[Token(Token = "0x6002AEA")]
				[Address(RVA = "0x3426E28", Offset = "0x3426E28", VA = "0x3426E28")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002AEB")]
				[Address(RVA = "0x3426E30", Offset = "0x3426E30", VA = "0x3426E30")]
				set
				{
				}
			}

			[Token(Token = "0x170005BE")]
			public int scaleSeed
			{
				[Token(Token = "0x6002AEC")]
				[Address(RVA = "0x3426E48", Offset = "0x3426E48", VA = "0x3426E48")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002AED")]
				[Address(RVA = "0x3426E50", Offset = "0x3426E50", VA = "0x3426E50")]
				set
				{
				}
			}

			[Token(Token = "0x170005BF")]
			public double spacing
			{
				[Token(Token = "0x6002AEE")]
				[Address(RVA = "0x3426E68", Offset = "0x3426E68", VA = "0x3426E68")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x6002AEF")]
				[Address(RVA = "0x3426E70", Offset = "0x3426E70", VA = "0x3426E70")]
				set
				{
				}
			}

			[Token(Token = "0x170005C0")]
			public Vector2 minOffset
			{
				[Token(Token = "0x6002AF0")]
				[Address(RVA = "0x3426E88", Offset = "0x3426E88", VA = "0x3426E88")]
				get
				{
					return default(Vector2);
				}
				[Token(Token = "0x6002AF1")]
				[Address(RVA = "0x3426E90", Offset = "0x3426E90", VA = "0x3426E90")]
				set
				{
				}
			}

			[Token(Token = "0x170005C1")]
			public Vector2 maxOffset
			{
				[Token(Token = "0x6002AF2")]
				[Address(RVA = "0x3426F44", Offset = "0x3426F44", VA = "0x3426F44")]
				get
				{
					return default(Vector2);
				}
				[Token(Token = "0x6002AF3")]
				[Address(RVA = "0x3426F4C", Offset = "0x3426F4C", VA = "0x3426F4C")]
				set
				{
				}
			}

			[Token(Token = "0x170005C2")]
			public Vector3 minRotation
			{
				[Token(Token = "0x6002AF4")]
				[Address(RVA = "0x3427000", Offset = "0x3427000", VA = "0x3427000")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6002AF5")]
				[Address(RVA = "0x342700C", Offset = "0x342700C", VA = "0x342700C")]
				set
				{
				}
			}

			[Token(Token = "0x170005C3")]
			public Vector3 maxRotation
			{
				[Token(Token = "0x6002AF6")]
				[Address(RVA = "0x34270E0", Offset = "0x34270E0", VA = "0x34270E0")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6002AF7")]
				[Address(RVA = "0x34270EC", Offset = "0x34270EC", VA = "0x34270EC")]
				set
				{
				}
			}

			[Token(Token = "0x170005C4")]
			public Vector3 minScale
			{
				[Token(Token = "0x6002AF8")]
				[Address(RVA = "0x34271C0", Offset = "0x34271C0", VA = "0x34271C0")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6002AF9")]
				[Address(RVA = "0x34271CC", Offset = "0x34271CC", VA = "0x34271CC")]
				set
				{
				}
			}

			[Token(Token = "0x170005C5")]
			public Vector3 maxScale
			{
				[Token(Token = "0x6002AFA")]
				[Address(RVA = "0x34272A0", Offset = "0x34272A0", VA = "0x34272A0")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6002AFB")]
				[Address(RVA = "0x34272B0", Offset = "0x34272B0", VA = "0x34272B0")]
				set
				{
				}
			}

			[Token(Token = "0x170005C6")]
			public Type type
			{
				[Token(Token = "0x6002AFC")]
				[Address(RVA = "0x342738C", Offset = "0x342738C", VA = "0x342738C")]
				get
				{
					return default(Type);
				}
				[Token(Token = "0x6002AFD")]
				[Address(RVA = "0x3427394", Offset = "0x3427394", VA = "0x3427394")]
				set
				{
				}
			}

			[Token(Token = "0x170005C7")]
			public bool randomOrder
			{
				[Token(Token = "0x6002AFE")]
				[Address(RVA = "0x34273AC", Offset = "0x34273AC", VA = "0x34273AC")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6002AFF")]
				[Address(RVA = "0x34273B4", Offset = "0x34273B4", VA = "0x34273B4")]
				set
				{
				}
			}

			[Token(Token = "0x170005C8")]
			public int randomSeed
			{
				[Token(Token = "0x6002B00")]
				[Address(RVA = "0x34273D8", Offset = "0x34273D8", VA = "0x34273D8")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002B01")]
				[Address(RVA = "0x34273E0", Offset = "0x34273E0", VA = "0x34273E0")]
				set
				{
				}
			}

			[Token(Token = "0x170005C9")]
			public int count
			{
				[Token(Token = "0x6002B02")]
				[Address(RVA = "0x3427400", Offset = "0x3427400", VA = "0x3427400")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002B03")]
				[Address(RVA = "0x3427408", Offset = "0x3427408", VA = "0x3427408")]
				set
				{
				}
			}

			[Token(Token = "0x170005CA")]
			public UVOverride overrideUVs
			{
				[Token(Token = "0x6002B04")]
				[Address(RVA = "0x3427428", Offset = "0x3427428", VA = "0x3427428")]
				get
				{
					return default(UVOverride);
				}
				[Token(Token = "0x6002B05")]
				[Address(RVA = "0x3427430", Offset = "0x3427430", VA = "0x3427430")]
				set
				{
				}
			}

			[Token(Token = "0x170005CB")]
			public Vector2 uvOffset
			{
				[Token(Token = "0x6002B06")]
				[Address(RVA = "0x3427448", Offset = "0x3427448", VA = "0x3427448")]
				get
				{
					return default(Vector2);
				}
				[Token(Token = "0x6002B07")]
				[Address(RVA = "0x3427450", Offset = "0x3427450", VA = "0x3427450")]
				set
				{
				}
			}

			[Token(Token = "0x170005CC")]
			public Vector2 uvScale
			{
				[Token(Token = "0x6002B08")]
				[Address(RVA = "0x3427504", Offset = "0x3427504", VA = "0x3427504")]
				get
				{
					return default(Vector2);
				}
				[Token(Token = "0x6002B09")]
				[Address(RVA = "0x342750C", Offset = "0x342750C", VA = "0x342750C")]
				set
				{
				}
			}

			[Token(Token = "0x170005CD")]
			public bool overrideNormal
			{
				[Token(Token = "0x6002B0A")]
				[Address(RVA = "0x34275C0", Offset = "0x34275C0", VA = "0x34275C0")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6002B0B")]
				[Address(RVA = "0x34275C8", Offset = "0x34275C8", VA = "0x34275C8")]
				set
				{
				}
			}

			[Token(Token = "0x170005CE")]
			public Vector3 customNormal
			{
				[Token(Token = "0x6002B0C")]
				[Address(RVA = "0x34275EC", Offset = "0x34275EC", VA = "0x34275EC")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6002B0D")]
				[Address(RVA = "0x34275F8", Offset = "0x34275F8", VA = "0x34275F8")]
				set
				{
				}
			}

			[Token(Token = "0x6002B0E")]
			[Address(RVA = "0x3423B18", Offset = "0x3423B18", VA = "0x3423B18")]
			public Channel(string n, SplineMesh parent)
			{
			}

			[Token(Token = "0x6002B0F")]
			[Address(RVA = "0x342391C", Offset = "0x342391C", VA = "0x342391C")]
			public Channel(string n, Mesh inputMesh, SplineMesh parent)
			{
			}

			[Token(Token = "0x6002B10")]
			[Address(RVA = "0x34276CC", Offset = "0x34276CC", VA = "0x34276CC")]
			private void Init()
			{
			}

			[Token(Token = "0x6002B11")]
			[Address(RVA = "0x3427AC4", Offset = "0x3427AC4", VA = "0x3427AC4")]
			public void CopyTo(Channel target)
			{
			}

			[Token(Token = "0x6002B12")]
			[Address(RVA = "0x3424558", Offset = "0x3424558", VA = "0x3424558")]
			public int GetMeshCount()
			{
				return default(int);
			}

			[Token(Token = "0x6002B13")]
			[Address(RVA = "0x34281E4", Offset = "0x34281E4", VA = "0x34281E4")]
			public void SwapMeshes(int a, int b)
			{
			}

			[Token(Token = "0x6002B14")]
			[Address(RVA = "0x3428304", Offset = "0x3428304", VA = "0x3428304")]
			public void DuplicateMesh(int index)
			{
			}

			[Token(Token = "0x6002B15")]
			[Address(RVA = "0x34283B8", Offset = "0x34283B8", VA = "0x34283B8")]
			public MeshDefinition GetMesh(int index)
			{
				return null;
			}

			[Token(Token = "0x6002B16")]
			[Address(RVA = "0x3428430", Offset = "0x3428430", VA = "0x3428430")]
			public void AddMesh(Mesh input)
			{
			}

			[Token(Token = "0x6002B17")]
			[Address(RVA = "0x34284C0", Offset = "0x34284C0", VA = "0x34284C0")]
			public void RemoveMesh(int index)
			{
			}

			[Token(Token = "0x6002B18")]
			[Address(RVA = "0x34245A8", Offset = "0x34245A8", VA = "0x34245A8")]
			public void ResetIteration()
			{
			}

			[Token(Token = "0x6002B19")]
			[Address(RVA = "0x3425E5C", Offset = "0x3425E5C", VA = "0x3425E5C")]
			public Vector2 NextOffset(double percent)
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002B1A")]
			[Address(RVA = "0x34262E8", Offset = "0x34262E8", VA = "0x34262E8")]
			public Quaternion NextPlaceRotation(double percent)
			{
				return default(Quaternion);
			}

			[Token(Token = "0x6002B1B")]
			[Address(RVA = "0x3426890", Offset = "0x3426890", VA = "0x3426890")]
			public float NextExtrudeRotation(double percent)
			{
				return default(float);
			}

			[Token(Token = "0x6002B1C")]
			[Address(RVA = "0x34266A0", Offset = "0x34266A0", VA = "0x34266A0")]
			public Vector3 NextExtrudeScale(double percent)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002B1D")]
			[Address(RVA = "0x34264A4", Offset = "0x34264A4", VA = "0x34264A4")]
			public Vector3 NextPlaceScale()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002B1E")]
			[Address(RVA = "0x34255FC", Offset = "0x34255FC", VA = "0x34255FC")]
			public MeshDefinition NextMesh()
			{
				return null;
			}

			[Token(Token = "0x6002B1F")]
			[Address(RVA = "0x3426A90", Offset = "0x3426A90", VA = "0x3426A90")]
			internal void Rebuild()
			{
			}

			[Token(Token = "0x6002B20")]
			[Address(RVA = "0x3428ED8", Offset = "0x3428ED8", VA = "0x3428ED8")]
			private void Refresh()
			{
			}
		}

		[Token(Token = "0x4001B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		[HideInInspector]
		private List<Channel> channels;

		[Token(Token = "0x4001B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private SplineResult lastResult;

		[Token(Token = "0x4001B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private bool useLastResult;

		[Token(Token = "0x4001B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private List<TS_Mesh> combineMeshes;

		[Token(Token = "0x4001B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private int meshCount;

		[Token(Token = "0x4001B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private Matrix4x4 vertexMatrix;

		[Token(Token = "0x4001B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		private Matrix4x4 normalMatrix;

		[Token(Token = "0x6001EC8")]
		[Address(RVA = "0x3423588", Offset = "0x3423588", VA = "0x3423588", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001EC9")]
		[Address(RVA = "0x34235F0", Offset = "0x34235F0", VA = "0x34235F0", Slot = "5")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x6001ECA")]
		[Address(RVA = "0x34236DC", Offset = "0x34236DC", VA = "0x34236DC")]
		public void RemoveChannel(int index)
		{
		}

		[Token(Token = "0x6001ECB")]
		[Address(RVA = "0x3423758", Offset = "0x3423758", VA = "0x3423758")]
		public void SwapChannels(int a, int b)
		{
		}

		[Token(Token = "0x6001ECC")]
		[Address(RVA = "0x3423884", Offset = "0x3423884", VA = "0x3423884")]
		public Channel AddChannel(Mesh inputMesh, string name)
		{
			return null;
		}

		[Token(Token = "0x6001ECD")]
		[Address(RVA = "0x342364C", Offset = "0x342364C", VA = "0x342364C")]
		public Channel AddChannel(string name)
		{
			return null;
		}

		[Token(Token = "0x6001ECE")]
		[Address(RVA = "0x3423CC4", Offset = "0x3423CC4", VA = "0x3423CC4")]
		public int GetChannelCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001ECF")]
		[Address(RVA = "0x3423D14", Offset = "0x3423D14", VA = "0x3423D14")]
		public Channel GetChannel(int index)
		{
			return null;
		}

		[Token(Token = "0x6001ED0")]
		[Address(RVA = "0x3423D8C", Offset = "0x3423D8C", VA = "0x3423D8C", Slot = "29")]
		protected override void BuildMesh()
		{
		}

		[Token(Token = "0x6001ED1")]
		[Address(RVA = "0x3423DDC", Offset = "0x3423DDC", VA = "0x3423DDC")]
		private void Generate()
		{
		}

		[Token(Token = "0x6001ED2")]
		[Address(RVA = "0x3424FBC", Offset = "0x3424FBC", VA = "0x3424FBC")]
		private void Place(Channel channel, TS_Mesh target, double percent)
		{
		}

		[Token(Token = "0x6001ED3")]
		[Address(RVA = "0x34246E4", Offset = "0x34246E4", VA = "0x34246E4")]
		private void Stretch(Channel channel, TS_Mesh target, double from, double to)
		{
		}

		[Token(Token = "0x6001ED4")]
		[Address(RVA = "0x3426978", Offset = "0x3426978", VA = "0x3426978")]
		public SplineMesh()
		{
		}
	}
	[Token(Token = "0x200041F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1469764", Offset = "0x1469764")]
	public class SplinePositioner : SplineTracer
	{
		[Token(Token = "0x2000732")]
		public enum Mode
		{
			[Token(Token = "0x400285B")]
			Percent,
			[Token(Token = "0x400285C")]
			Distance
		}

		[Token(Token = "0x4001B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		[HideInInspector]
		private Transform _applyTransform;

		[Token(Token = "0x4001B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		[HideInInspector]
		private GameObject _targetObject;

		[Token(Token = "0x4001B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		[HideInInspector]
		private double _position;

		[Token(Token = "0x4001B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		[HideInInspector]
		private float animPosition;

		[Token(Token = "0x4001B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[SerializeField]
		[HideInInspector]
		private Mode _mode;

		[Token(Token = "0x170003BA")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x148A424", Offset = "0x148A424")]
		public Transform applyTransform
		{
			[Token(Token = "0x6001ED5")]
			[Address(RVA = "0x342CBBC", Offset = "0x342CBBC", VA = "0x342CBBC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001ED6")]
			[Address(RVA = "0x342CCE4", Offset = "0x342CCE4", VA = "0x342CCE4")]
			set
			{
			}
		}

		[Token(Token = "0x170003BB")]
		public GameObject targetObject
		{
			[Token(Token = "0x6001ED7")]
			[Address(RVA = "0x342CBDC", Offset = "0x342CBDC", VA = "0x342CBDC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001ED8")]
			[Address(RVA = "0x342CD8C", Offset = "0x342CD8C", VA = "0x342CD8C")]
			set
			{
			}
		}

		[Token(Token = "0x170003BC")]
		public double position
		{
			[Token(Token = "0x6001ED9")]
			[Address(RVA = "0x342CECC", Offset = "0x342CECC", VA = "0x342CECC")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001EDA")]
			[Address(RVA = "0x342CED4", Offset = "0x342CED4", VA = "0x342CED4")]
			set
			{
			}
		}

		[Token(Token = "0x170003BD")]
		public Mode mode
		{
			[Token(Token = "0x6001EDB")]
			[Address(RVA = "0x342CF24", Offset = "0x342CF24", VA = "0x342CF24")]
			get
			{
				return default(Mode);
			}
			[Token(Token = "0x6001EDC")]
			[Address(RVA = "0x342CF2C", Offset = "0x342CF2C", VA = "0x342CF2C")]
			set
			{
			}
		}

		[Token(Token = "0x170003BE")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x148A45C", Offset = "0x148A45C")]
		public SplineResult positionResult
		{
			[Token(Token = "0x6001EDD")]
			[Address(RVA = "0x342CF50", Offset = "0x342CF50", VA = "0x342CF50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003BF")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x148A494", Offset = "0x148A494")]
		public SplineResult offsettedPositionResult
		{
			[Token(Token = "0x6001EDE")]
			[Address(RVA = "0x342CF58", Offset = "0x342CF58", VA = "0x342CF58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EDF")]
		[Address(RVA = "0x342CF5C", Offset = "0x342CF5C", VA = "0x342CF5C", Slot = "10")]
		protected override void OnDidApplyAnimationProperties()
		{
		}

		[Token(Token = "0x6001EE0")]
		[Address(RVA = "0x342CF9C", Offset = "0x342CF9C", VA = "0x342CF9C", Slot = "34")]
		protected override Transform GetTransform()
		{
			return null;
		}

		[Token(Token = "0x6001EE1")]
		[Address(RVA = "0x342CFBC", Offset = "0x342CFBC", VA = "0x342CFBC", Slot = "32")]
		protected override Rigidbody GetRigidbody()
		{
			return null;
		}

		[Token(Token = "0x6001EE2")]
		[Address(RVA = "0x342D018", Offset = "0x342D018", VA = "0x342D018", Slot = "33")]
		protected override Rigidbody2D GetRigidbody2D()
		{
			return null;
		}

		[Token(Token = "0x6001EE3")]
		[Address(RVA = "0x342D074", Offset = "0x342D074", VA = "0x342D074", Slot = "21")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x6001EE4")]
		[Address(RVA = "0x342D100", Offset = "0x342D100", VA = "0x342D100", Slot = "30")]
		public override void SetPercent(double percent, bool checkTriggers = false)
		{
		}

		[Token(Token = "0x6001EE5")]
		[Address(RVA = "0x342D134", Offset = "0x342D134", VA = "0x342D134", Slot = "31")]
		public override void SetDistance(float distance, bool checkTriggers = false)
		{
		}

		[Token(Token = "0x6001EE6")]
		[Address(RVA = "0x342D16C", Offset = "0x342D16C", VA = "0x342D16C")]
		public SplinePositioner()
		{
		}
	}
	[Token(Token = "0x2000420")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x146979C", Offset = "0x146979C")]
	public class SplineProjector : SplineTracer
	{
		[Token(Token = "0x2000733")]
		public enum Mode
		{
			[Token(Token = "0x400285E")]
			Accurate,
			[Token(Token = "0x400285F")]
			Cached
		}

		[Token(Token = "0x4001B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		[HideInInspector]
		private Mode _mode;

		[Token(Token = "0x4001B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[SerializeField]
		[HideInInspector]
		private bool _autoProject;

		[Token(Token = "0x4001B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		[HideInInspector]
		private int _subdivide;

		[Token(Token = "0x4001B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		[HideInInspector]
		private Transform _projectTarget;

		[Token(Token = "0x4001B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		[HideInInspector]
		private Transform applyTarget;

		[Token(Token = "0x4001B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		[HideInInspector]
		private GameObject _targetObject;

		[Token(Token = "0x4001B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		[HideInInspector]
		private TS_Transform finalTarget;

		[Token(Token = "0x4001B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private double traceFromA;

		[Token(Token = "0x4001B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private double traceToA;

		[Token(Token = "0x4001B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private double traceFromB;

		[Token(Token = "0x4001B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		[HideInInspector]
		public Vector2 _offset;

		[Token(Token = "0x4001B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		[HideInInspector]
		public Vector3 _rotationOffset;

		[Token(Token = "0x170003C0")]
		public Mode mode
		{
			[Token(Token = "0x6001EE7")]
			[Address(RVA = "0x342D170", Offset = "0x342D170", VA = "0x342D170")]
			get
			{
				return default(Mode);
			}
			[Token(Token = "0x6001EE8")]
			[Address(RVA = "0x342D178", Offset = "0x342D178", VA = "0x342D178")]
			set
			{
			}
		}

		[Token(Token = "0x170003C1")]
		public bool autoProject
		{
			[Token(Token = "0x6001EE9")]
			[Address(RVA = "0x342D19C", Offset = "0x342D19C", VA = "0x342D19C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001EEA")]
			[Address(RVA = "0x342D1A4", Offset = "0x342D1A4", VA = "0x342D1A4")]
			set
			{
			}
		}

		[Token(Token = "0x170003C2")]
		public int subdivide
		{
			[Token(Token = "0x6001EEB")]
			[Address(RVA = "0x342D1D8", Offset = "0x342D1D8", VA = "0x342D1D8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001EEC")]
			[Address(RVA = "0x342D1E0", Offset = "0x342D1E0", VA = "0x342D1E0")]
			set
			{
			}
		}

		[Token(Token = "0x170003C3")]
		public Transform projectTarget
		{
			[Token(Token = "0x6001EED")]
			[Address(RVA = "0x342D20C", Offset = "0x342D20C", VA = "0x342D20C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EEE")]
			[Address(RVA = "0x342D29C", Offset = "0x342D29C", VA = "0x342D29C")]
			set
			{
			}
		}

		[Token(Token = "0x170003C4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x148A4CC", Offset = "0x148A4CC")]
		public Transform target
		{
			[Token(Token = "0x6001EEF")]
			[Address(RVA = "0x342D384", Offset = "0x342D384", VA = "0x342D384")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EF0")]
			[Address(RVA = "0x342D494", Offset = "0x342D494", VA = "0x342D494")]
			set
			{
			}
		}

		[Token(Token = "0x170003C5")]
		public GameObject targetObject
		{
			[Token(Token = "0x6001EF1")]
			[Address(RVA = "0x342D3A4", Offset = "0x342D3A4", VA = "0x342D3A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EF2")]
			[Address(RVA = "0x342D548", Offset = "0x342D548", VA = "0x342D548")]
			set
			{
			}
		}

		[Token(Token = "0x170003C6")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x148A504", Offset = "0x148A504")]
		public SplineResult projectResult
		{
			[Token(Token = "0x6001EF3")]
			[Address(RVA = "0x342D604", Offset = "0x342D604", VA = "0x342D604")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400005E")]
		public event SplineReachHandler onEndReached
		{
			[Token(Token = "0x6001EF4")]
			[Address(RVA = "0x342D60C", Offset = "0x342D60C", VA = "0x342D60C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1486CFC", Offset = "0x1486CFC")]
			add
			{
			}
			[Token(Token = "0x6001EF5")]
			[Address(RVA = "0x342D6B4", Offset = "0x342D6B4", VA = "0x342D6B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1486D0C", Offset = "0x1486D0C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400005F")]
		public event SplineReachHandler onBeginningReached
		{
			[Token(Token = "0x6001EF6")]
			[Address(RVA = "0x342D75C", Offset = "0x342D75C", VA = "0x342D75C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1486D1C", Offset = "0x1486D1C")]
			add
			{
			}
			[Token(Token = "0x6001EF7")]
			[Address(RVA = "0x342D804", Offset = "0x342D804", VA = "0x342D804")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1486D2C", Offset = "0x1486D2C")]
			remove
			{
			}
		}

		[Token(Token = "0x6001EF8")]
		[Address(RVA = "0x342D8AC", Offset = "0x342D8AC", VA = "0x342D8AC", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001EF9")]
		[Address(RVA = "0x342D9A8", Offset = "0x342D9A8", VA = "0x342D9A8", Slot = "34")]
		protected override Transform GetTransform()
		{
			return null;
		}

		[Token(Token = "0x6001EFA")]
		[Address(RVA = "0x342DA50", Offset = "0x342DA50", VA = "0x342DA50", Slot = "32")]
		protected override Rigidbody GetRigidbody()
		{
			return null;
		}

		[Token(Token = "0x6001EFB")]
		[Address(RVA = "0x342DAFC", Offset = "0x342DAFC", VA = "0x342DAFC", Slot = "33")]
		protected override Rigidbody2D GetRigidbody2D()
		{
			return null;
		}

		[Token(Token = "0x6001EFC")]
		[Address(RVA = "0x342D8D4", Offset = "0x342D8D4", VA = "0x342D8D4")]
		private void GetProjectTarget()
		{
		}

		[Token(Token = "0x6001EFD")]
		[Address(RVA = "0x342DBA8", Offset = "0x342DBA8", VA = "0x342DBA8", Slot = "19")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x6001EFE")]
		[Address(RVA = "0x342DC88", Offset = "0x342DC88", VA = "0x342DC88", Slot = "21")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x6001EFF")]
		[Address(RVA = "0x342DFB4", Offset = "0x342DFB4", VA = "0x342DFB4")]
		private void CheckTriggers()
		{
		}

		[Token(Token = "0x6001F00")]
		[Address(RVA = "0x342E170", Offset = "0x342E170", VA = "0x342E170")]
		public void CalculateProjection()
		{
		}

		[Token(Token = "0x6001F01")]
		[Address(RVA = "0x342DD50", Offset = "0x342DD50", VA = "0x342DD50")]
		private void InternalCalculateProjection()
		{
		}

		[Token(Token = "0x6001F02")]
		[Address(RVA = "0x342E1B0", Offset = "0x342E1B0", VA = "0x342E1B0")]
		public SplineProjector()
		{
		}
	}
	[Token(Token = "0x2000421")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x14697D4", Offset = "0x14697D4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x14697D4", Offset = "0x14697D4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x14697D4", Offset = "0x14697D4")]
	[ExecuteInEditMode]
	public class SplineRenderer : MeshGenerator
	{
		[Token(Token = "0x4001B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[HideInInspector]
		public bool autoOrient;

		[Token(Token = "0x4001B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[HideInInspector]
		public int updateFrameInterval;

		[Token(Token = "0x4001B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private int currentFrame;

		[Token(Token = "0x4001B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[SerializeField]
		[HideInInspector]
		private int _slices;

		[Token(Token = "0x4001B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		[HideInInspector]
		private Vector3 vertexDirection;

		[Token(Token = "0x4001B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private bool orthographic;

		[Token(Token = "0x4001B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14D")]
		private bool init;

		[Token(Token = "0x170003C7")]
		public int slices
		{
			[Token(Token = "0x6001F03")]
			[Address(RVA = "0x342E298", Offset = "0x342E298", VA = "0x342E298")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001F04")]
			[Address(RVA = "0x342E2A0", Offset = "0x342E2A0", VA = "0x342E2A0")]
			set
			{
			}
		}

		[Token(Token = "0x6001F05")]
		[Address(RVA = "0x342E2CC", Offset = "0x342E2CC", VA = "0x342E2CC", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001F06")]
		[Address(RVA = "0x342E334", Offset = "0x342E334", VA = "0x342E334")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F07")]
		[Address(RVA = "0x342E3D8", Offset = "0x342E3D8", VA = "0x342E3D8", Slot = "19")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x6001F08")]
		[Address(RVA = "0x342E3FC", Offset = "0x342E3FC", VA = "0x342E3FC", Slot = "29")]
		protected override void BuildMesh()
		{
		}

		[Token(Token = "0x6001F09")]
		[Address(RVA = "0x342ED8C", Offset = "0x342ED8C", VA = "0x342ED8C")]
		public void RenderWithCamera(Camera cam)
		{
		}

		[Token(Token = "0x6001F0A")]
		[Address(RVA = "0x342EF10", Offset = "0x342EF10", VA = "0x342EF10")]
		private void OnWillRenderObject()
		{
		}

		[Token(Token = "0x6001F0B")]
		[Address(RVA = "0x342E4D0", Offset = "0x342E4D0", VA = "0x342E4D0")]
		public void GenerateVertices(Vector3 vertexDirection, bool orthoGraphic)
		{
		}

		[Token(Token = "0x6001F0C")]
		[Address(RVA = "0x342EF90", Offset = "0x342EF90", VA = "0x342EF90")]
		public SplineRenderer()
		{
		}
	}
	[Token(Token = "0x2000422")]
	public class SplineTracer : SplineUser
	{
		[Token(Token = "0x2000734")]
		public enum PhysicsMode
		{
			[Token(Token = "0x4002861")]
			Transform,
			[Token(Token = "0x4002862")]
			Rigidbody,
			[Token(Token = "0x4002863")]
			Rigidbody2D
		}

		[Token(Token = "0x4001B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Trigger[] triggerInvokeQueue;

		[Token(Token = "0x4001B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int addTriggerIndex;

		[Token(Token = "0x4001B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[HideInInspector]
		public bool applyDirectionRotation;

		[Token(Token = "0x4001B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		[HideInInspector]
		protected Spline.Direction _direction;

		[Token(Token = "0x4001B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[SerializeField]
		[HideInInspector]
		protected PhysicsMode _physicsMode;

		[Token(Token = "0x4001B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		[HideInInspector]
		protected TransformModule _motion;

		[Token(Token = "0x4001B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[HideInInspector]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x14788E0", Offset = "0x14788E0")]
		protected SplineTrigger[] triggers_old;

		[Token(Token = "0x4001B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[HideInInspector]
		public Trigger[] triggers;

		[Token(Token = "0x4001B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		[HideInInspector]
		protected CustomRotationModule _customRotations;

		[Token(Token = "0x4001B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		[HideInInspector]
		protected CustomOffsetModule _customOffsets;

		[Token(Token = "0x4001B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		[HideInInspector]
		protected Rigidbody targetRigidbody;

		[Token(Token = "0x4001B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		[HideInInspector]
		protected Rigidbody2D targetRigidbody2D;

		[Token(Token = "0x4001B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		[HideInInspector]
		protected Transform targetTransform;

		[Token(Token = "0x4001B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		[HideInInspector]
		protected SplineResult _result;

		[Token(Token = "0x4001B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private bool setPercentOnRebuild;

		[Token(Token = "0x4001B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private double targetPercentOnRebuild;

		[Token(Token = "0x170003C8")]
		public PhysicsMode physicsMode
		{
			[Token(Token = "0x6001F0D")]
			[Address(RVA = "0x342F568", Offset = "0x342F568", VA = "0x342F568")]
			get
			{
				return default(PhysicsMode);
			}
			[Token(Token = "0x6001F0E")]
			[Address(RVA = "0x342F570", Offset = "0x342F570", VA = "0x342F570")]
			set
			{
			}
		}

		[Token(Token = "0x170003C9")]
		public TransformModule motion
		{
			[Token(Token = "0x6001F0F")]
			[Address(RVA = "0x342F578", Offset = "0x342F578", VA = "0x342F578")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003CA")]
		public CustomRotationModule customRotations
		{
			[Token(Token = "0x6001F10")]
			[Address(RVA = "0x342F5F0", Offset = "0x342F5F0", VA = "0x342F5F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003CB")]
		public CustomOffsetModule customOffsets
		{
			[Token(Token = "0x6001F11")]
			[Address(RVA = "0x342F668", Offset = "0x342F668", VA = "0x342F668")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003CC")]
		public SplineResult result
		{
			[Token(Token = "0x6001F12")]
			[Address(RVA = "0x342F6E0", Offset = "0x342F6E0", VA = "0x342F6E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003CD")]
		public SplineResult offsettedResult
		{
			[Token(Token = "0x6001F13")]
			[Address(RVA = "0x34210F4", Offset = "0x34210F4", VA = "0x34210F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003CE")]
		public Spline.Direction direction
		{
			[Token(Token = "0x6001F14")]
			[Address(RVA = "0x342F6E8", Offset = "0x342F6E8", VA = "0x342F6E8")]
			get
			{
				return default(Spline.Direction);
			}
			[Token(Token = "0x6001F15")]
			[Address(RVA = "0x342F6F0", Offset = "0x342F6F0", VA = "0x342F6F0")]
			set
			{
			}
		}

		[Token(Token = "0x170003CF")]
		public double clampedPercent
		{
			[Token(Token = "0x6001F16")]
			[Address(RVA = "0x342F708", Offset = "0x342F708", VA = "0x342F708")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170003D0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x148A53C", Offset = "0x148A53C")]
		public bool applyPosition
		{
			[Token(Token = "0x6001F17")]
			[Address(RVA = "0x342F728", Offset = "0x342F728", VA = "0x342F728")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F18")]
			[Address(RVA = "0x342F748", Offset = "0x342F748", VA = "0x342F748")]
			set
			{
			}
		}

		[Token(Token = "0x170003D1")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x148A574", Offset = "0x148A574")]
		public bool applyRotation
		{
			[Token(Token = "0x6001F19")]
			[Address(RVA = "0x342F778", Offset = "0x342F778", VA = "0x342F778")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F1A")]
			[Address(RVA = "0x342F798", Offset = "0x342F798", VA = "0x342F798")]
			set
			{
			}
		}

		[Token(Token = "0x170003D2")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x148A5AC", Offset = "0x148A5AC")]
		public bool applyScale
		{
			[Token(Token = "0x6001F1B")]
			[Address(RVA = "0x342F7C8", Offset = "0x342F7C8", VA = "0x342F7C8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F1C")]
			[Address(RVA = "0x342F7E8", Offset = "0x342F7E8", VA = "0x342F7E8")]
			set
			{
			}
		}

		[Token(Token = "0x170003D3")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x148A5E4", Offset = "0x148A5E4")]
		public Vector2 offset
		{
			[Token(Token = "0x6001F1D")]
			[Address(RVA = "0x342F818", Offset = "0x342F818", VA = "0x342F818")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6001F1E")]
			[Address(RVA = "0x342F838", Offset = "0x342F838", VA = "0x342F838")]
			set
			{
			}
		}

		[Token(Token = "0x170003D4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x148A61C", Offset = "0x148A61C")]
		public Vector3 rotationOffset
		{
			[Token(Token = "0x6001F1F")]
			[Address(RVA = "0x342F870", Offset = "0x342F870", VA = "0x342F870")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001F20")]
			[Address(RVA = "0x342F894", Offset = "0x342F894", VA = "0x342F894")]
			set
			{
			}
		}

		[Token(Token = "0x6001F21")]
		[Address(RVA = "0x34217BC", Offset = "0x34217BC", VA = "0x34217BC", Slot = "29")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001F22")]
		[Address(RVA = "0x342F8DC", Offset = "0x342F8DC", VA = "0x342F8DC")]
		public Node GetNextNode()
		{
			return null;
		}

		[Token(Token = "0x6001F23")]
		[Address(RVA = "0x342FAB8", Offset = "0x342FAB8", VA = "0x342FAB8")]
		public void GetCurrentComputer(out SplineComputer comp, out double percent, out Spline.Direction dir)
		{
		}

		[Token(Token = "0x6001F24")]
		[Address(RVA = "0x3422BE0", Offset = "0x3422BE0", VA = "0x3422BE0")]
		public void ResetTriggers()
		{
		}

		[Token(Token = "0x6001F25")]
		[Address(RVA = "0x3422CB0", Offset = "0x3422CB0", VA = "0x3422CB0", Slot = "30")]
		public virtual void SetPercent(double percent, bool checkTriggers = false)
		{
		}

		[Token(Token = "0x6001F26")]
		[Address(RVA = "0x3422DD8", Offset = "0x3422DD8", VA = "0x3422DD8", Slot = "31")]
		public virtual void SetDistance(float distance, bool checkTriggers = false)
		{
		}

		[Token(Token = "0x6001F27")]
		[Address(RVA = "0x34219B0", Offset = "0x34219B0", VA = "0x34219B0", Slot = "21")]
		protected override void PostBuild()
		{
		}

		[Token(Token = "0x6001F28")]
		[Address(RVA = "0x342FDD4", Offset = "0x342FDD4", VA = "0x342FDD4", Slot = "13")]
		public override void EnterAddress(Node node, int pointIndex, Spline.Direction direction = Spline.Direction.Forward)
		{
		}

		[Token(Token = "0x6001F29")]
		[Address(RVA = "0x342FE8C", Offset = "0x342FE8C", VA = "0x342FE8C", Slot = "14")]
		public override void AddComputer(SplineComputer computer, int connectionIndex, int connectedIndex, Spline.Direction direction = Spline.Direction.Forward)
		{
		}

		[Token(Token = "0x6001F2A")]
		[Address(RVA = "0x342FF4C", Offset = "0x342FF4C", VA = "0x342FF4C", Slot = "17")]
		public override void ExitAddress(int depth)
		{
		}

		[Token(Token = "0x6001F2B")]
		[Address(RVA = "0x342FFEC", Offset = "0x342FFEC", VA = "0x342FFEC", Slot = "32")]
		protected virtual Rigidbody GetRigidbody()
		{
			return null;
		}

		[Token(Token = "0x6001F2C")]
		[Address(RVA = "0x343003C", Offset = "0x343003C", VA = "0x343003C", Slot = "33")]
		protected virtual Rigidbody2D GetRigidbody2D()
		{
			return null;
		}

		[Token(Token = "0x6001F2D")]
		[Address(RVA = "0x343008C", Offset = "0x343008C", VA = "0x343008C", Slot = "34")]
		protected virtual Transform GetTransform()
		{
			return null;
		}

		[Token(Token = "0x6001F2E")]
		[Address(RVA = "0x3421A2C", Offset = "0x3421A2C", VA = "0x3421A2C")]
		protected void ApplyMotion()
		{
		}

		[Token(Token = "0x6001F2F")]
		[Address(RVA = "0x342E0C0", Offset = "0x342E0C0", VA = "0x342E0C0")]
		protected void CheckTriggers(double from, double to)
		{
		}

		[Token(Token = "0x6001F30")]
		[Address(RVA = "0x3422F00", Offset = "0x3422F00", VA = "0x3422F00")]
		protected void CheckTriggersClipped(double from, double to)
		{
		}

		[Token(Token = "0x6001F31")]
		[Address(RVA = "0x342317C", Offset = "0x342317C", VA = "0x342317C")]
		protected void InvokeTriggers()
		{
		}

		[Token(Token = "0x6001F32")]
		[Address(RVA = "0x34301BC", Offset = "0x34301BC", VA = "0x34301BC")]
		private bool MigrateTriggers()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F33")]
		[Address(RVA = "0x342CE48", Offset = "0x342CE48", VA = "0x342CE48")]
		protected void RefreshTargets()
		{
		}

		[Token(Token = "0x6001F34")]
		[Address(RVA = "0x3430094", Offset = "0x3430094", VA = "0x3430094")]
		private void AddTriggerToQueue(Trigger trigger)
		{
		}

		[Token(Token = "0x6001F35")]
		[Address(RVA = "0x34304E8", Offset = "0x34304E8", VA = "0x34304E8")]
		private void AddTrigger(Trigger trigger)
		{
		}

		[Token(Token = "0x6001F36")]
		[Address(RVA = "0x34305D8", Offset = "0x34305D8", VA = "0x34305D8")]
		public void AddTrigger(UnityAction call, double position = 0.0, Trigger.Type type = Trigger.Type.Double)
		{
		}

		[Token(Token = "0x6001F37")]
		[Address(RVA = "0x343067C", Offset = "0x343067C", VA = "0x343067C")]
		public void AddTrigger(UnityAction<int> call, int value, double position = 0.0, Trigger.Type type = Trigger.Type.Double)
		{
		}

		[Token(Token = "0x6001F38")]
		[Address(RVA = "0x3430730", Offset = "0x3430730", VA = "0x3430730")]
		public void AddTrigger(UnityAction<float> call, float value, double position = 0.0, Trigger.Type type = Trigger.Type.Double)
		{
		}

		[Token(Token = "0x6001F39")]
		[Address(RVA = "0x34307DC", Offset = "0x34307DC", VA = "0x34307DC")]
		public void AddTrigger(UnityAction<double> call, double value, double position = 0.0, Trigger.Type type = Trigger.Type.Double)
		{
		}

		[Token(Token = "0x6001F3A")]
		[Address(RVA = "0x3430888", Offset = "0x3430888", VA = "0x3430888")]
		public void AddTrigger(UnityAction<string> call, string value, double position = 0.0, Trigger.Type type = Trigger.Type.Double)
		{
		}

		[Token(Token = "0x6001F3B")]
		[Address(RVA = "0x343093C", Offset = "0x343093C", VA = "0x343093C")]
		public void AddTrigger(UnityAction<bool> call, bool value, double position = 0.0, Trigger.Type type = Trigger.Type.Double)
		{
		}

		[Token(Token = "0x6001F3C")]
		[Address(RVA = "0x34309F0", Offset = "0x34309F0", VA = "0x34309F0")]
		public void AddTrigger(UnityAction<GameObject> call, GameObject value, double position = 0.0, Trigger.Type type = Trigger.Type.Double)
		{
		}

		[Token(Token = "0x6001F3D")]
		[Address(RVA = "0x3430AA4", Offset = "0x3430AA4", VA = "0x3430AA4")]
		public void AddTrigger(UnityAction<Transform> call, Transform value, double position = 0.0, Trigger.Type type = Trigger.Type.Double)
		{
		}

		[Token(Token = "0x6001F3E")]
		[Address(RVA = "0x34219F0", Offset = "0x34219F0", VA = "0x34219F0")]
		public void EvaluateClipped(SplineResult result, double clippedPercent)
		{
		}

		[Token(Token = "0x6001F3F")]
		[Address(RVA = "0x3430B58", Offset = "0x3430B58", VA = "0x3430B58")]
		public Vector3 EvaluatePositionClipped(double clippedPercent)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001F40")]
		[Address(RVA = "0x342FAE0", Offset = "0x342FAE0", VA = "0x342FAE0")]
		public double TravelClipped(double start, float distance, Spline.Direction direction)
		{
			return default(double);
		}

		[Token(Token = "0x6001F41")]
		[Address(RVA = "0x3430B90", Offset = "0x3430B90", VA = "0x3430B90")]
		public SplineResult ProjectClipped(Vector3 point)
		{
			return null;
		}

		[Token(Token = "0x6001F42")]
		[Address(RVA = "0x3423450", Offset = "0x3423450", VA = "0x3423450")]
		public SplineTracer()
		{
		}
	}
	[Token(Token = "0x2000423")]
	public class SplineUser : MonoBehaviour
	{
		[Token(Token = "0x2000735")]
		public enum UpdateMethod
		{
			[Token(Token = "0x4002865")]
			Update,
			[Token(Token = "0x4002866")]
			FixedUpdate,
			[Token(Token = "0x4002867")]
			LateUpdate
		}

		[Token(Token = "0x2000736")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A9DC", Offset = "0x146A9DC")]
		private sealed class <UpdateSubscribersRoutine>d__82 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002868")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002869")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400286A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SplineUser <>4__this;

			[Token(Token = "0x170005CF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B24")]
				[Address(RVA = "0x34D9278", Offset = "0x34D9278", VA = "0x34D9278", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005D0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B26")]
				[Address(RVA = "0x34D92E0", Offset = "0x34D92E0", VA = "0x34D92E0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B21")]
			[Address(RVA = "0x34D5330", Offset = "0x34D5330", VA = "0x34D5330")]
			[DebuggerHidden]
			public <UpdateSubscribersRoutine>d__82(int <>1__state)
			{
			}

			[Token(Token = "0x6002B22")]
			[Address(RVA = "0x34D920C", Offset = "0x34D920C", VA = "0x34D920C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B23")]
			[Address(RVA = "0x34D9210", Offset = "0x34D9210", VA = "0x34D9210", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B25")]
			[Address(RVA = "0x34D9280", Offset = "0x34D9280", VA = "0x34D9280", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public SplineAddress _address;

		[Token(Token = "0x4001B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		private SplineUser[] subscribers;

		[Token(Token = "0x4001B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public UpdateMethod updateMethod;

		[Token(Token = "0x4001B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		[SerializeField]
		private SplineUser _user;

		[Token(Token = "0x4001B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[HideInInspector]
		private double _resolution;

		[Token(Token = "0x4001B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		private double _clipTo;

		[Token(Token = "0x4001B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[HideInInspector]
		private double _clipFrom;

		[Token(Token = "0x4001B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[HideInInspector]
		private bool _autoUpdate;

		[Token(Token = "0x4001B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[SerializeField]
		[HideInInspector]
		private bool _loopSamples;

		[Token(Token = "0x4001B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		[SerializeField]
		[HideInInspector]
		private bool _uniformSample;

		[Token(Token = "0x4001B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		[SerializeField]
		[HideInInspector]
		private bool _uniformPreserveClipRange;

		[Token(Token = "0x4001B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[HideInInspector]
		private SplineResult[] _samples;

		[Token(Token = "0x4001B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[HideInInspector]
		private SplineResult[] _clippedSamples;

		[Token(Token = "0x4001B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[HideInInspector]
		private float animClipFrom;

		[Token(Token = "0x4001B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		[HideInInspector]
		private float animClipTo;

		[Token(Token = "0x4001B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[HideInInspector]
		private double animResolution;

		[Token(Token = "0x4001B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[HideInInspector]
		protected bool sampleUser;

		[Token(Token = "0x4001B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		private bool rebuild;

		[Token(Token = "0x4001B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
		private bool sample;

		[Token(Token = "0x4001B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7B")]
		private bool getClippedSamples;

		[Token(Token = "0x4001B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected Transform trs;

		[Token(Token = "0x4001B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public bool multithreaded;

		[Token(Token = "0x4001B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		[HideInInspector]
		public bool buildOnAwake;

		[Token(Token = "0x4001B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
		[HideInInspector]
		public bool buildOnEnable;

		[Token(Token = "0x4001B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Thread buildThread;

		[Token(Token = "0x4001B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool postThread;

		[Token(Token = "0x4001B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		private bool threadSample;

		[Token(Token = "0x4001BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
		private bool threadWork;

		[Token(Token = "0x4001BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9B")]
		private bool _threadWorking;

		[Token(Token = "0x4001BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private object locker;

		[Token(Token = "0x170003D5")]
		public SplineUser user
		{
			[Token(Token = "0x6001F43")]
			[Address(RVA = "0x34D31DC", Offset = "0x34D31DC", VA = "0x34D31DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F44")]
			[Address(RVA = "0x34D31E4", Offset = "0x34D31E4", VA = "0x34D31E4")]
			set
			{
			}
		}

		[Token(Token = "0x170003D6")]
		public SplineUser rootUser
		{
			[Token(Token = "0x6001F45")]
			[Address(RVA = "0x34D34C0", Offset = "0x34D34C0", VA = "0x34D34C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D7")]
		public SplineComputer computer
		{
			[Token(Token = "0x6001F46")]
			[Address(RVA = "0x34D35D8", Offset = "0x34D35D8", VA = "0x34D35D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F47")]
			[Address(RVA = "0x34D35F8", Offset = "0x34D35F8", VA = "0x34D35F8")]
			set
			{
			}
		}

		[Token(Token = "0x170003D8")]
		public double resolution
		{
			[Token(Token = "0x6001F48")]
			[Address(RVA = "0x34D3D4C", Offset = "0x34D3D4C", VA = "0x34D3D4C")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001F49")]
			[Address(RVA = "0x34D3D54", Offset = "0x34D3D54", VA = "0x34D3D54")]
			set
			{
			}
		}

		[Token(Token = "0x170003D9")]
		public double clipFrom
		{
			[Token(Token = "0x6001F4A")]
			[Address(RVA = "0x34D3D8C", Offset = "0x34D3D8C", VA = "0x34D3D8C")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001F4B")]
			[Address(RVA = "0x34D3D94", Offset = "0x34D3D94", VA = "0x34D3D94")]
			set
			{
			}
		}

		[Token(Token = "0x170003DA")]
		public double clipTo
		{
			[Token(Token = "0x6001F4C")]
			[Address(RVA = "0x34D3E30", Offset = "0x34D3E30", VA = "0x34D3E30")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001F4D")]
			[Address(RVA = "0x34D3E38", Offset = "0x34D3E38", VA = "0x34D3E38")]
			set
			{
			}
		}

		[Token(Token = "0x170003DB")]
		public bool autoUpdate
		{
			[Token(Token = "0x6001F4E")]
			[Address(RVA = "0x34D3ED4", Offset = "0x34D3ED4", VA = "0x34D3ED4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F4F")]
			[Address(RVA = "0x34D3EDC", Offset = "0x34D3EDC", VA = "0x34D3EDC")]
			set
			{
			}
		}

		[Token(Token = "0x170003DC")]
		public bool loopSamples
		{
			[Token(Token = "0x6001F50")]
			[Address(RVA = "0x34D3F10", Offset = "0x34D3F10", VA = "0x34D3F10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F51")]
			[Address(RVA = "0x34D3F18", Offset = "0x34D3F18", VA = "0x34D3F18")]
			set
			{
			}
		}

		[Token(Token = "0x170003DD")]
		public bool uniformSample
		{
			[Token(Token = "0x6001F52")]
			[Address(RVA = "0x34D3F4C", Offset = "0x34D3F4C", VA = "0x34D3F4C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F53")]
			[Address(RVA = "0x34D3F54", Offset = "0x34D3F54", VA = "0x34D3F54")]
			set
			{
			}
		}

		[Token(Token = "0x170003DE")]
		public bool uniformPreserveClipRange
		{
			[Token(Token = "0x6001F54")]
			[Address(RVA = "0x34D3F84", Offset = "0x34D3F84", VA = "0x34D3F84")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F55")]
			[Address(RVA = "0x34D3F8C", Offset = "0x34D3F8C", VA = "0x34D3F8C")]
			set
			{
			}
		}

		[Token(Token = "0x170003DF")]
		public double span
		{
			[Token(Token = "0x6001F56")]
			[Address(RVA = "0x34D3FBC", Offset = "0x34D3FBC", VA = "0x34D3FBC")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170003E0")]
		public SplineAddress address
		{
			[Token(Token = "0x6001F57")]
			[Address(RVA = "0x34D3CD0", Offset = "0x34D3CD0", VA = "0x34D3CD0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E1")]
		public bool samplesAreLooped
		{
			[Token(Token = "0x6001F58")]
			[Address(RVA = "0x34D3FFC", Offset = "0x34D3FFC", VA = "0x34D3FFC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003E2")]
		public SplineResult[] samples
		{
			[Token(Token = "0x6001F59")]
			[Address(RVA = "0x34D40C8", Offset = "0x34D40C8", VA = "0x34D40C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E3")]
		public SplineResult[] clippedSamples
		{
			[Token(Token = "0x6001F5A")]
			[Address(RVA = "0x34D40EC", Offset = "0x34D40EC", VA = "0x34D40EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E4")]
		protected bool willRebuild
		{
			[Token(Token = "0x6001F5B")]
			[Address(RVA = "0x34D4D40", Offset = "0x34D4D40", VA = "0x34D4D40")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003E5")]
		public bool threadWorking
		{
			[Token(Token = "0x6001F5C")]
			[Address(RVA = "0x34D4D48", Offset = "0x34D4D48", VA = "0x34D4D48")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001F5D")]
		[Address(RVA = "0x34D4D50", Offset = "0x34D4D50", VA = "0x34D4D50", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001F5E")]
		[Address(RVA = "0x34D4F78", Offset = "0x34D4F78", VA = "0x34D4F78", Slot = "5")]
		protected virtual void Reset()
		{
		}

		[Token(Token = "0x6001F5F")]
		[Address(RVA = "0x34D4F7C", Offset = "0x34D4F7C", VA = "0x34D4F7C", Slot = "6")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001F60")]
		[Address(RVA = "0x34D5040", Offset = "0x34D5040", VA = "0x34D5040", Slot = "7")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001F61")]
		[Address(RVA = "0x34D50E8", Offset = "0x34D50E8", VA = "0x34D50E8", Slot = "8")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001F62")]
		[Address(RVA = "0x34D5140", Offset = "0x34D5140", VA = "0x34D5140", Slot = "9")]
		protected virtual void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001F63")]
		[Address(RVA = "0x34D5198", Offset = "0x34D5198", VA = "0x34D5198", Slot = "10")]
		protected virtual void OnDidApplyAnimationProperties()
		{
		}

		[Token(Token = "0x6001F64")]
		[Address(RVA = "0x34D5240", Offset = "0x34D5240", VA = "0x34D5240", Slot = "11")]
		public virtual void Rebuild(bool sampleComputer)
		{
		}

		[Token(Token = "0x6001F65")]
		[Address(RVA = "0x34D52B4", Offset = "0x34D52B4", VA = "0x34D52B4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1486D3C", Offset = "0x1486D3C")]
		private IEnumerator UpdateSubscribersRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001F66")]
		[Address(RVA = "0x34D535C", Offset = "0x34D535C", VA = "0x34D535C", Slot = "12")]
		public virtual void RebuildImmediate(bool sampleComputer)
		{
		}

		[Token(Token = "0x6001F67")]
		[Address(RVA = "0x34D5C88", Offset = "0x34D5C88", VA = "0x34D5C88")]
		public void GetClippedSamplesImmediate()
		{
		}

		[Token(Token = "0x6001F68")]
		[Address(RVA = "0x34D5CBC", Offset = "0x34D5CBC", VA = "0x34D5CBC", Slot = "13")]
		public virtual void EnterAddress(Node node, int connectionIndex, Spline.Direction direction = Spline.Direction.Forward)
		{
		}

		[Token(Token = "0x6001F69")]
		[Address(RVA = "0x34D5D70", Offset = "0x34D5D70", VA = "0x34D5D70", Slot = "14")]
		public virtual void AddComputer(SplineComputer computer, int connectionIndex, int connectedIndex, Spline.Direction direction = Spline.Direction.Forward)
		{
		}

		[Token(Token = "0x6001F6A")]
		[Address(RVA = "0x34D5E2C", Offset = "0x34D5E2C", VA = "0x34D5E2C", Slot = "15")]
		public virtual void CollapseAddress()
		{
		}

		[Token(Token = "0x6001F6B")]
		[Address(RVA = "0x34D5E80", Offset = "0x34D5E80", VA = "0x34D5E80", Slot = "16")]
		public virtual void ClearAddress()
		{
		}

		[Token(Token = "0x6001F6C")]
		[Address(RVA = "0x34D5F04", Offset = "0x34D5F04", VA = "0x34D5F04", Slot = "17")]
		public virtual void ExitAddress(int depth)
		{
		}

		[Token(Token = "0x6001F6D")]
		[Address(RVA = "0x34D5F9C", Offset = "0x34D5F9C", VA = "0x34D5F9C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F6E")]
		[Address(RVA = "0x34D6210", Offset = "0x34D6210", VA = "0x34D6210")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001F6F")]
		[Address(RVA = "0x34D6224", Offset = "0x34D6224", VA = "0x34D6224")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001F70")]
		[Address(RVA = "0x34D5B6C", Offset = "0x34D5B6C", VA = "0x34D5B6C")]
		private void UpdateSubscribers()
		{
		}

		[Token(Token = "0x6001F71")]
		[Address(RVA = "0x34D5FAC", Offset = "0x34D5FAC", VA = "0x34D5FAC")]
		private void RunMain()
		{
		}

		[Token(Token = "0x6001F72")]
		[Address(RVA = "0x34D6390", Offset = "0x34D6390", VA = "0x34D6390")]
		private void RunThread()
		{
		}

		[Token(Token = "0x6001F73")]
		[Address(RVA = "0x34D6614", Offset = "0x34D6614", VA = "0x34D6614", Slot = "18")]
		protected virtual void Run()
		{
		}

		[Token(Token = "0x6001F74")]
		[Address(RVA = "0x34D6618", Offset = "0x34D6618", VA = "0x34D6618", Slot = "19")]
		protected virtual void LateRun()
		{
		}

		[Token(Token = "0x6001F75")]
		[Address(RVA = "0x34D661C", Offset = "0x34D661C", VA = "0x34D661C", Slot = "20")]
		protected virtual void Build()
		{
		}

		[Token(Token = "0x6001F76")]
		[Address(RVA = "0x34D6620", Offset = "0x34D6620", VA = "0x34D6620", Slot = "21")]
		protected virtual void PostBuild()
		{
		}

		[Token(Token = "0x6001F77")]
		[Address(RVA = "0x34D6624", Offset = "0x34D6624", VA = "0x34D6624")]
		public void SetClipRange(double from, double to)
		{
		}

		[Token(Token = "0x6001F78")]
		[Address(RVA = "0x34D5448", Offset = "0x34D5448", VA = "0x34D5448")]
		private void SampleComputer()
		{
		}

		[Token(Token = "0x6001F79")]
		[Address(RVA = "0x34D4138", Offset = "0x34D4138", VA = "0x34D4138")]
		private void GetClippedSamples()
		{
		}

		[Token(Token = "0x6001F7A")]
		[Address(RVA = "0x34D66B4", Offset = "0x34D66B4", VA = "0x34D66B4", Slot = "22")]
		public virtual SplineResult Evaluate(double percent)
		{
			return null;
		}

		[Token(Token = "0x6001F7B")]
		[Address(RVA = "0x34D6C6C", Offset = "0x34D6C6C", VA = "0x34D6C6C", Slot = "23")]
		public virtual void Evaluate(SplineResult result, double percent)
		{
		}

		[Token(Token = "0x6001F7C")]
		[Address(RVA = "0x34D71FC", Offset = "0x34D71FC", VA = "0x34D71FC", Slot = "24")]
		public virtual Vector3 EvaluatePosition(double percent, bool overrideUniformClipRange = false)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001F7D")]
		[Address(RVA = "0x34D7808", Offset = "0x34D7808", VA = "0x34D7808")]
		public double ClipPercent(double percent)
		{
			return default(double);
		}

		[Token(Token = "0x6001F7E")]
		[Address(RVA = "0x34D7830", Offset = "0x34D7830", VA = "0x34D7830")]
		public void ClipPercent(ref double percent)
		{
		}

		[Token(Token = "0x6001F7F")]
		[Address(RVA = "0x34D797C", Offset = "0x34D797C", VA = "0x34D797C")]
		public double UnclipPercent(double percent)
		{
			return default(double);
		}

		[Token(Token = "0x6001F80")]
		[Address(RVA = "0x34D79A4", Offset = "0x34D79A4", VA = "0x34D79A4")]
		public void UnclipPercent(ref double percent)
		{
		}

		[Token(Token = "0x6001F81")]
		[Address(RVA = "0x34D6C2C", Offset = "0x34D6C2C", VA = "0x34D6C2C")]
		public int GetSampleIndex(double percent)
		{
			return default(int);
		}

		[Token(Token = "0x6001F82")]
		[Address(RVA = "0x34D7AEC", Offset = "0x34D7AEC", VA = "0x34D7AEC")]
		public int GetClippedSampleIndex(double percent)
		{
			return default(int);
		}

		[Token(Token = "0x6001F83")]
		[Address(RVA = "0x34D7B28", Offset = "0x34D7B28", VA = "0x34D7B28", Slot = "25")]
		public virtual SplineResult Project(Vector3 point, double from = 0.0, double to = 1.0)
		{
			return null;
		}

		[Token(Token = "0x6001F84")]
		[Address(RVA = "0x34D7BE0", Offset = "0x34D7BE0", VA = "0x34D7BE0", Slot = "26")]
		public virtual void Project(SplineResult result, Vector3 point, double from = 0.0, double to = 1.0)
		{
		}

		[Token(Token = "0x6001F85")]
		[Address(RVA = "0x34D8B60", Offset = "0x34D8B60", VA = "0x34D8B60", Slot = "27")]
		public virtual double Travel(double start, float distance, Spline.Direction direction)
		{
			return default(double);
		}

		[Token(Token = "0x6001F86")]
		[Address(RVA = "0x34D3AA0", Offset = "0x34D3AA0", VA = "0x34D3AA0")]
		private void Subscribe(SplineUser input)
		{
		}

		[Token(Token = "0x6001F87")]
		[Address(RVA = "0x34D3880", Offset = "0x34D3880", VA = "0x34D3880")]
		private void Unsubscribe(SplineUser input)
		{
		}

		[Token(Token = "0x6001F88")]
		[Address(RVA = "0x34D8EC8", Offset = "0x34D8EC8", VA = "0x34D8EC8", Slot = "28")]
		public virtual float CalculateLength(double from = 0.0, double to = 1.0)
		{
			return default(float);
		}

		[Token(Token = "0x6001F89")]
		[Address(RVA = "0x34D6238", Offset = "0x34D6238", VA = "0x34D6238")]
		private void RemoveSubscriber(int index)
		{
		}

		[Token(Token = "0x6001F8A")]
		[Address(RVA = "0x34D4EA0", Offset = "0x34D4EA0", VA = "0x34D4EA0")]
		private bool IsSubscribed(SplineUser user)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F8B")]
		[Address(RVA = "0x34D9114", Offset = "0x34D9114", VA = "0x34D9114")]
		public SplineUser()
		{
		}
	}
	[Token(Token = "0x2000424")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1469894", Offset = "0x1469894")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1469894", Offset = "0x1469894")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1469894", Offset = "0x1469894")]
	public class SurfaceGenerator : MeshGenerator
	{
		[Token(Token = "0x4001BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		[HideInInspector]
		private float _expand;

		[Token(Token = "0x4001BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[SerializeField]
		[HideInInspector]
		private float _extrude;

		[Token(Token = "0x4001BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		[HideInInspector]
		private Vector2 _sideUvScale;

		[Token(Token = "0x4001BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		[HideInInspector]
		private Vector2 _sideUvOffset;

		[Token(Token = "0x4001BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		[HideInInspector]
		private SplineComputer _extrudeComputer;

		[Token(Token = "0x4001BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		[HideInInspector]
		private SplineResult[] extrudeResults;

		[Token(Token = "0x4001BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		[HideInInspector]
		private Vector3[] identityVertices;

		[Token(Token = "0x4001BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		[HideInInspector]
		private Vector3[] identityNormals;

		[Token(Token = "0x4001BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		[HideInInspector]
		private Vector2[] projectedVerts;

		[Token(Token = "0x4001BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		[HideInInspector]
		private int[] capTris;

		[Token(Token = "0x4001BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		[HideInInspector]
		private int[] wallTris;

		[Token(Token = "0x4001BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		[HideInInspector]
		private double _extrudeFrom;

		[Token(Token = "0x4001BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		[HideInInspector]
		private double _extrudeTo;

		[Token(Token = "0x4001BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[SerializeField]
		[HideInInspector]
		private bool _uniformUvs;

		[Token(Token = "0x170003E6")]
		public float expand
		{
			[Token(Token = "0x6001F8C")]
			[Address(RVA = "0x34D92E8", Offset = "0x34D92E8", VA = "0x34D92E8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F8D")]
			[Address(RVA = "0x34D92F0", Offset = "0x34D92F0", VA = "0x34D92F0")]
			set
			{
			}
		}

		[Token(Token = "0x170003E7")]
		public float extrude
		{
			[Token(Token = "0x6001F8E")]
			[Address(RVA = "0x34D9314", Offset = "0x34D9314", VA = "0x34D9314")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F8F")]
			[Address(RVA = "0x34D931C", Offset = "0x34D931C", VA = "0x34D931C")]
			set
			{
			}
		}

		[Token(Token = "0x170003E8")]
		public double extrudeClipFrom
		{
			[Token(Token = "0x6001F90")]
			[Address(RVA = "0x34D9340", Offset = "0x34D9340", VA = "0x34D9340")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001F91")]
			[Address(RVA = "0x34D9348", Offset = "0x34D9348", VA = "0x34D9348")]
			set
			{
			}
		}

		[Token(Token = "0x170003E9")]
		public double extrudeClipTo
		{
			[Token(Token = "0x6001F92")]
			[Address(RVA = "0x34D936C", Offset = "0x34D936C", VA = "0x34D936C")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001F93")]
			[Address(RVA = "0x34D9374", Offset = "0x34D9374", VA = "0x34D9374")]
			set
			{
			}
		}

		[Token(Token = "0x170003EA")]
		public Vector2 sideUvScale
		{
			[Token(Token = "0x6001F94")]
			[Address(RVA = "0x34D9398", Offset = "0x34D9398", VA = "0x34D9398")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6001F95")]
			[Address(RVA = "0x34D93A4", Offset = "0x34D93A4", VA = "0x34D93A4")]
			set
			{
			}
		}

		[Token(Token = "0x170003EB")]
		public Vector2 sideUvOffset
		{
			[Token(Token = "0x6001F96")]
			[Address(RVA = "0x34D946C", Offset = "0x34D946C", VA = "0x34D946C")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6001F97")]
			[Address(RVA = "0x34D9478", Offset = "0x34D9478", VA = "0x34D9478")]
			set
			{
			}
		}

		[Token(Token = "0x170003EC")]
		public SplineComputer extrudeComputer
		{
			[Token(Token = "0x6001F98")]
			[Address(RVA = "0x34D9540", Offset = "0x34D9540", VA = "0x34D9540")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F99")]
			[Address(RVA = "0x34D9548", Offset = "0x34D9548", VA = "0x34D9548")]
			set
			{
			}
		}

		[Token(Token = "0x170003ED")]
		public bool uniformUvs
		{
			[Token(Token = "0x6001F9A")]
			[Address(RVA = "0x34D9694", Offset = "0x34D9694", VA = "0x34D9694")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F9B")]
			[Address(RVA = "0x34D969C", Offset = "0x34D969C", VA = "0x34D969C")]
			set
			{
			}
		}

		[Token(Token = "0x6001F9C")]
		[Address(RVA = "0x34D96CC", Offset = "0x34D96CC", VA = "0x34D96CC", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001F9D")]
		[Address(RVA = "0x34D9734", Offset = "0x34D9734", VA = "0x34D9734", Slot = "29")]
		protected override void BuildMesh()
		{
		}

		[Token(Token = "0x6001F9E")]
		[Address(RVA = "0x34D9784", Offset = "0x34D9784", VA = "0x34D9784")]
		public void Generate()
		{
		}

		[Token(Token = "0x6001F9F")]
		[Address(RVA = "0x34DBA94", Offset = "0x34DBA94", VA = "0x34DBA94")]
		private void GenerateCapTris(bool flip)
		{
		}

		[Token(Token = "0x6001FA0")]
		[Address(RVA = "0x34DBF80", Offset = "0x34DBF80", VA = "0x34DBF80")]
		private int WriteTris(ref int[] tris, ref int[] target, int vertexOffset, int trisOffset, bool flip)
		{
			return default(int);
		}

		[Token(Token = "0x6001FA1")]
		[Address(RVA = "0x34DB9C8", Offset = "0x34DB9C8", VA = "0x34DB9C8")]
		private bool IsClockwise(Vector2[] points2D)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FA2")]
		[Address(RVA = "0x34DBB4C", Offset = "0x34DBB4C", VA = "0x34DBB4C")]
		private void GetIdentityVerts(Vector3 center, Vector3 normal, bool clockwise)
		{
		}

		[Token(Token = "0x6001FA3")]
		[Address(RVA = "0x34DB638", Offset = "0x34DB638", VA = "0x34DB638")]
		private void GetProjectedVertices(Vector3[] points, Vector3 normal, Vector3 center, int count = 0)
		{
		}

		[Token(Token = "0x6001FA4")]
		[Address(RVA = "0x34DC154", Offset = "0x34DC154", VA = "0x34DC154")]
		public SurfaceGenerator()
		{
		}
	}
	[Token(Token = "0x2000425")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1469944", Offset = "0x1469944")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1469944", Offset = "0x1469944")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1469944", Offset = "0x1469944")]
	public class TubeGenerator : MeshGenerator
	{
		[Token(Token = "0x2000737")]
		public enum CapMethod
		{
			[Token(Token = "0x400286C")]
			None,
			[Token(Token = "0x400286D")]
			Flat,
			[Token(Token = "0x400286E")]
			Round
		}

		[Token(Token = "0x4001BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		[HideInInspector]
		private int _sides;

		[Token(Token = "0x4001BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[SerializeField]
		[HideInInspector]
		private int _roundCapLatitude;

		[Token(Token = "0x4001BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		[HideInInspector]
		private CapMethod _capMode;

		[Token(Token = "0x4001BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[SerializeField]
		[HideInInspector]
		private float _integrity;

		[Token(Token = "0x4001BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		[HideInInspector]
		private float _capUVScale;

		[Token(Token = "0x4001BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private int bodyVertexCount;

		[Token(Token = "0x4001BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private int bodyTrisCount;

		[Token(Token = "0x4001BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private int capVertexCount;

		[Token(Token = "0x4001BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private int capTrisCount;

		[Token(Token = "0x170003EE")]
		public int sides
		{
			[Token(Token = "0x6001FA5")]
			[Address(RVA = "0x34DE9CC", Offset = "0x34DE9CC", VA = "0x34DE9CC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001FA6")]
			[Address(RVA = "0x34DE9D4", Offset = "0x34DE9D4", VA = "0x34DE9D4")]
			set
			{
			}
		}

		[Token(Token = "0x170003EF")]
		public CapMethod capMode
		{
			[Token(Token = "0x6001FA7")]
			[Address(RVA = "0x34DEA04", Offset = "0x34DEA04", VA = "0x34DEA04")]
			get
			{
				return default(CapMethod);
			}
			[Token(Token = "0x6001FA8")]
			[Address(RVA = "0x34DEA0C", Offset = "0x34DEA0C", VA = "0x34DEA0C")]
			set
			{
			}
		}

		[Token(Token = "0x170003F0")]
		public int roundCapLatitude
		{
			[Token(Token = "0x6001FA9")]
			[Address(RVA = "0x34DEA30", Offset = "0x34DEA30", VA = "0x34DEA30")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001FAA")]
			[Address(RVA = "0x34DEA38", Offset = "0x34DEA38", VA = "0x34DEA38")]
			set
			{
			}
		}

		[Token(Token = "0x170003F1")]
		public float integrity
		{
			[Token(Token = "0x6001FAB")]
			[Address(RVA = "0x34DEA70", Offset = "0x34DEA70", VA = "0x34DEA70")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FAC")]
			[Address(RVA = "0x34DEA78", Offset = "0x34DEA78", VA = "0x34DEA78")]
			set
			{
			}
		}

		[Token(Token = "0x170003F2")]
		public float capUVScale
		{
			[Token(Token = "0x6001FAD")]
			[Address(RVA = "0x34DEA9C", Offset = "0x34DEA9C", VA = "0x34DEA9C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FAE")]
			[Address(RVA = "0x34DEAA4", Offset = "0x34DEAA4", VA = "0x34DEAA4")]
			set
			{
			}
		}

		[Token(Token = "0x170003F3")]
		private bool useCap
		{
			[Token(Token = "0x6001FAF")]
			[Address(RVA = "0x34DEAC8", Offset = "0x34DEAC8", VA = "0x34DEAC8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001FB0")]
		[Address(RVA = "0x34DEC6C", Offset = "0x34DEC6C", VA = "0x34DEC6C", Slot = "5")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x6001FB1")]
		[Address(RVA = "0x34DEC74", Offset = "0x34DEC74", VA = "0x34DEC74", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001FB2")]
		[Address(RVA = "0x34DECDC", Offset = "0x34DECDC", VA = "0x34DECDC", Slot = "29")]
		protected override void BuildMesh()
		{
		}

		[Token(Token = "0x6001FB3")]
		[Address(RVA = "0x34DEE64", Offset = "0x34DEE64", VA = "0x34DEE64")]
		private void Generate()
		{
		}

		[Token(Token = "0x6001FB4")]
		[Address(RVA = "0x34DF5BC", Offset = "0x34DF5BC", VA = "0x34DF5BC")]
		private void GenerateFlatCaps()
		{
		}

		[Token(Token = "0x6001FB5")]
		[Address(RVA = "0x34DFD90", Offset = "0x34DFD90", VA = "0x34DFD90")]
		private void GenerateRoundCaps()
		{
		}

		[Token(Token = "0x6001FB6")]
		[Address(RVA = "0x34E0DD4", Offset = "0x34E0DD4", VA = "0x34E0DD4")]
		public TubeGenerator()
		{
		}
	}
	[Token(Token = "0x2000426")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x14699F4", Offset = "0x14699F4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x14699F4", Offset = "0x14699F4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x14699F4", Offset = "0x14699F4")]
	public class WaveformGenerator : MeshGenerator
	{
		[Token(Token = "0x2000738")]
		public enum Axis
		{
			[Token(Token = "0x4002870")]
			X,
			[Token(Token = "0x4002871")]
			Y,
			[Token(Token = "0x4002872")]
			Z
		}

		[Token(Token = "0x2000739")]
		public enum Space
		{
			[Token(Token = "0x4002874")]
			World,
			[Token(Token = "0x4002875")]
			Local
		}

		[Token(Token = "0x200073A")]
		public enum UVWrapMode
		{
			[Token(Token = "0x4002877")]
			Clamp,
			[Token(Token = "0x4002878")]
			UniformX,
			[Token(Token = "0x4002879")]
			UniformY,
			[Token(Token = "0x400287A")]
			Uniform
		}

		[Token(Token = "0x4001BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		[HideInInspector]
		private Axis _axis;

		[Token(Token = "0x4001BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[SerializeField]
		[HideInInspector]
		private bool _symmetry;

		[Token(Token = "0x4001BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		[HideInInspector]
		private UVWrapMode _uvWrapMode;

		[Token(Token = "0x4001BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[SerializeField]
		[HideInInspector]
		private int _slices;

		[Token(Token = "0x170003F4")]
		public Axis axis
		{
			[Token(Token = "0x6001FB7")]
			[Address(RVA = "0x34E0E58", Offset = "0x34E0E58", VA = "0x34E0E58")]
			get
			{
				return default(Axis);
			}
			[Token(Token = "0x6001FB8")]
			[Address(RVA = "0x34E0E60", Offset = "0x34E0E60", VA = "0x34E0E60")]
			set
			{
			}
		}

		[Token(Token = "0x170003F5")]
		public bool symmetry
		{
			[Token(Token = "0x6001FB9")]
			[Address(RVA = "0x34E0E84", Offset = "0x34E0E84", VA = "0x34E0E84")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001FBA")]
			[Address(RVA = "0x34E0E8C", Offset = "0x34E0E8C", VA = "0x34E0E8C")]
			set
			{
			}
		}

		[Token(Token = "0x170003F6")]
		public UVWrapMode uvWrapMode
		{
			[Token(Token = "0x6001FBB")]
			[Address(RVA = "0x34E0EBC", Offset = "0x34E0EBC", VA = "0x34E0EBC")]
			get
			{
				return default(UVWrapMode);
			}
			[Token(Token = "0x6001FBC")]
			[Address(RVA = "0x34E0EC4", Offset = "0x34E0EC4", VA = "0x34E0EC4")]
			set
			{
			}
		}

		[Token(Token = "0x170003F7")]
		public int slices
		{
			[Token(Token = "0x6001FBD")]
			[Address(RVA = "0x34E0EE8", Offset = "0x34E0EE8", VA = "0x34E0EE8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001FBE")]
			[Address(RVA = "0x34E0EF0", Offset = "0x34E0EF0", VA = "0x34E0EF0")]
			set
			{
			}
		}

		[Token(Token = "0x6001FBF")]
		[Address(RVA = "0x34E0F1C", Offset = "0x34E0F1C", VA = "0x34E0F1C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001FC0")]
		[Address(RVA = "0x34E0F84", Offset = "0x34E0F84", VA = "0x34E0F84", Slot = "29")]
		protected override void BuildMesh()
		{
		}

		[Token(Token = "0x6001FC1")]
		[Address(RVA = "0x34E18D4", Offset = "0x34E18D4", VA = "0x34E18D4", Slot = "20")]
		protected override void Build()
		{
		}

		[Token(Token = "0x6001FC2")]
		[Address(RVA = "0x34E18DC", Offset = "0x34E18DC", VA = "0x34E18DC", Slot = "19")]
		protected override void LateRun()
		{
		}

		[Token(Token = "0x6001FC3")]
		[Address(RVA = "0x34E0FAC", Offset = "0x34E0FAC", VA = "0x34E0FAC")]
		private void Generate()
		{
		}

		[Token(Token = "0x6001FC4")]
		[Address(RVA = "0x34E18E4", Offset = "0x34E18E4", VA = "0x34E18E4")]
		public WaveformGenerator()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000427")]
	public class CustomOffsetModule
	{
		[Serializable]
		[Token(Token = "0x200073B")]
		public class Key
		{
			[Token(Token = "0x400287B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private Vector2 _offset;

			[Token(Token = "0x400287C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private double _from;

			[Token(Token = "0x400287D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private double _to;

			[Token(Token = "0x400287E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			private double _center;

			[Token(Token = "0x400287F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[SerializeField]
			private bool _loop;

			[Token(Token = "0x4002880")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AnimationCurve interpolation;

			[Token(Token = "0x170005D1")]
			public Vector2 offset
			{
				[Token(Token = "0x6002B27")]
				[Address(RVA = "0x1CBA244", Offset = "0x1CBA244", VA = "0x1CBA244")]
				get
				{
					return default(Vector2);
				}
				[Token(Token = "0x6002B28")]
				[Address(RVA = "0x1CBA24C", Offset = "0x1CBA24C", VA = "0x1CBA24C")]
				set
				{
				}
			}

			[Token(Token = "0x170005D2")]
			public double center
			{
				[Token(Token = "0x6002B29")]
				[Address(RVA = "0x1CBA254", Offset = "0x1CBA254", VA = "0x1CBA254")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x6002B2A")]
				[Address(RVA = "0x1CBA25C", Offset = "0x1CBA25C", VA = "0x1CBA25C")]
				set
				{
				}
			}

			[Token(Token = "0x170005D3")]
			public double from
			{
				[Token(Token = "0x6002B2B")]
				[Address(RVA = "0x1CBA278", Offset = "0x1CBA278", VA = "0x1CBA278")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x6002B2C")]
				[Address(RVA = "0x1CBA280", Offset = "0x1CBA280", VA = "0x1CBA280")]
				set
				{
				}
			}

			[Token(Token = "0x170005D4")]
			public double to
			{
				[Token(Token = "0x6002B2D")]
				[Address(RVA = "0x1CBA29C", Offset = "0x1CBA29C", VA = "0x1CBA29C")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x6002B2E")]
				[Address(RVA = "0x1CBA2A4", Offset = "0x1CBA2A4", VA = "0x1CBA2A4")]
				set
				{
				}
			}

			[Token(Token = "0x170005D5")]
			public bool loop
			{
				[Token(Token = "0x6002B2F")]
				[Address(RVA = "0x1CBA2C0", Offset = "0x1CBA2C0", VA = "0x1CBA2C0")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6002B30")]
				[Address(RVA = "0x1CBA2C8", Offset = "0x1CBA2C8", VA = "0x1CBA2C8")]
				set
				{
				}
			}

			[Token(Token = "0x170005D6")]
			public double position
			{
				[Token(Token = "0x6002B31")]
				[Address(RVA = "0x1CBA1D4", Offset = "0x1CBA1D4", VA = "0x1CBA1D4")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x6002B32")]
				[Address(RVA = "0x1CBA2D4", Offset = "0x1CBA2D4", VA = "0x1CBA2D4")]
				set
				{
				}
			}

			[Token(Token = "0x6002B33")]
			[Address(RVA = "0x1CB9BBC", Offset = "0x1CB9BBC", VA = "0x1CB9BBC")]
			public Key(Vector2 o, double f, double t, double c)
			{
			}

			[Token(Token = "0x6002B34")]
			[Address(RVA = "0x1CBA228", Offset = "0x1CBA228", VA = "0x1CBA228")]
			public float Evaluate(float t)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4001BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Key> keys;

		[Token(Token = "0x4001BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _blend;

		[Token(Token = "0x170003F8")]
		public float blend
		{
			[Token(Token = "0x6001FC5")]
			[Address(RVA = "0x1CB99C4", Offset = "0x1CB99C4", VA = "0x1CB99C4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FC6")]
			[Address(RVA = "0x1CB99CC", Offset = "0x1CB99CC", VA = "0x1CB99CC")]
			set
			{
			}
		}

		[Token(Token = "0x6001FC7")]
		[Address(RVA = "0x1CB9A48", Offset = "0x1CB9A48", VA = "0x1CB9A48")]
		public CustomOffsetModule()
		{
		}

		[Token(Token = "0x6001FC8")]
		[Address(RVA = "0x1CB9B04", Offset = "0x1CB9B04", VA = "0x1CB9B04")]
		public void AddKey(Vector2 offset, double f, double t, double c)
		{
		}

		[Token(Token = "0x6001FC9")]
		[Address(RVA = "0x1CB9CBC", Offset = "0x1CB9CBC", VA = "0x1CB9CBC")]
		public Vector2 Evaluate(double time)
		{
			return default(Vector2);
		}
	}
	[Serializable]
	[Token(Token = "0x2000428")]
	public class CustomRotationModule
	{
		[Serializable]
		[Token(Token = "0x200073C")]
		public class Key
		{
			[Token(Token = "0x4002881")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private Vector3 _rotation;

			[Token(Token = "0x4002882")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private double _from;

			[Token(Token = "0x4002883")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			private double _to;

			[Token(Token = "0x4002884")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[SerializeField]
			private double _center;

			[Token(Token = "0x4002885")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[SerializeField]
			private bool _loop;

			[Token(Token = "0x4002886")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public AnimationCurve interpolation;

			[Token(Token = "0x170005D7")]
			public Vector3 rotation
			{
				[Token(Token = "0x6002B35")]
				[Address(RVA = "0x1CBACE4", Offset = "0x1CBACE4", VA = "0x1CBACE4")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6002B36")]
				[Address(RVA = "0x1CBACF0", Offset = "0x1CBACF0", VA = "0x1CBACF0")]
				set
				{
				}
			}

			[Token(Token = "0x170005D8")]
			public double center
			{
				[Token(Token = "0x6002B37")]
				[Address(RVA = "0x1CBACFC", Offset = "0x1CBACFC", VA = "0x1CBACFC")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x6002B38")]
				[Address(RVA = "0x1CBAD04", Offset = "0x1CBAD04", VA = "0x1CBAD04")]
				set
				{
				}
			}

			[Token(Token = "0x170005D9")]
			public double from
			{
				[Token(Token = "0x6002B39")]
				[Address(RVA = "0x1CBAD20", Offset = "0x1CBAD20", VA = "0x1CBAD20")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x6002B3A")]
				[Address(RVA = "0x1CBAD28", Offset = "0x1CBAD28", VA = "0x1CBAD28")]
				set
				{
				}
			}

			[Token(Token = "0x170005DA")]
			public double to
			{
				[Token(Token = "0x6002B3B")]
				[Address(RVA = "0x1CBAD44", Offset = "0x1CBAD44", VA = "0x1CBAD44")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x6002B3C")]
				[Address(RVA = "0x1CBAD4C", Offset = "0x1CBAD4C", VA = "0x1CBAD4C")]
				set
				{
				}
			}

			[Token(Token = "0x170005DB")]
			public bool loop
			{
				[Token(Token = "0x6002B3D")]
				[Address(RVA = "0x1CBAD68", Offset = "0x1CBAD68", VA = "0x1CBAD68")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6002B3E")]
				[Address(RVA = "0x1CBAD70", Offset = "0x1CBAD70", VA = "0x1CBAD70")]
				set
				{
				}
			}

			[Token(Token = "0x170005DC")]
			public double position
			{
				[Token(Token = "0x6002B3F")]
				[Address(RVA = "0x1CBAC74", Offset = "0x1CBAC74", VA = "0x1CBAC74")]
				get
				{
					return default(double);
				}
				[Token(Token = "0x6002B40")]
				[Address(RVA = "0x1CBAD7C", Offset = "0x1CBAD7C", VA = "0x1CBAD7C")]
				set
				{
				}
			}

			[Token(Token = "0x6002B41")]
			[Address(RVA = "0x1CBA564", Offset = "0x1CBA564", VA = "0x1CBA564")]
			public Key(Vector3 r, double f, double t, double c)
			{
			}

			[Token(Token = "0x6002B42")]
			[Address(RVA = "0x1CBACC8", Offset = "0x1CBACC8", VA = "0x1CBACC8")]
			public float Evaluate(float t)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4001BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Key> keys;

		[Token(Token = "0x4001BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _blend;

		[Token(Token = "0x170003F9")]
		public float blend
		{
			[Token(Token = "0x6001FCA")]
			[Address(RVA = "0x1CBA364", Offset = "0x1CBA364", VA = "0x1CBA364")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001FCB")]
			[Address(RVA = "0x1CBA36C", Offset = "0x1CBA36C", VA = "0x1CBA36C")]
			set
			{
			}
		}

		[Token(Token = "0x6001FCC")]
		[Address(RVA = "0x1CBA3E8", Offset = "0x1CBA3E8", VA = "0x1CBA3E8")]
		public CustomRotationModule()
		{
		}

		[Token(Token = "0x6001FCD")]
		[Address(RVA = "0x1CBA4A4", Offset = "0x1CBA4A4", VA = "0x1CBA4A4")]
		public void AddKey(Vector3 rotation, double f, double t, double c)
		{
		}

		[Token(Token = "0x6001FCE")]
		[Address(RVA = "0x1CBA670", Offset = "0x1CBA670", VA = "0x1CBA670")]
		public Quaternion Evaluate(Quaternion baseRotation, double time)
		{
			return default(Quaternion);
		}
	}
	[Serializable]
	[Token(Token = "0x2000429")]
	public class ObjectSequence<T>
	{
		[Token(Token = "0x200073D")]
		public enum Iteration
		{
			[Token(Token = "0x4002888")]
			Ordered,
			[Token(Token = "0x4002889")]
			Random
		}

		[Token(Token = "0x4001BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T startObject;

		[Token(Token = "0x4001BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T endObject;

		[Token(Token = "0x4001BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T[] objects;

		[Token(Token = "0x4001BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Iteration iteration;

		[Token(Token = "0x4001BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[HideInInspector]
		private int _randomSeed;

		[Token(Token = "0x4001BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[HideInInspector]
		private int index;

		[Token(Token = "0x4001BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[HideInInspector]
		private System.Random randomizer;

		[Token(Token = "0x170003FA")]
		public int randomSeed
		{
			[Token(Token = "0x6001FCF")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001FD0")]
			set
			{
			}
		}

		[Token(Token = "0x6001FD1")]
		public ObjectSequence()
		{
		}

		[Token(Token = "0x6001FD2")]
		public T GetFirst()
		{
			return (T)null;
		}

		[Token(Token = "0x6001FD3")]
		public T GetLast()
		{
			return (T)null;
		}

		[Token(Token = "0x6001FD4")]
		public T Next()
		{
			return (T)null;
		}
	}
	[Serializable]
	[Token(Token = "0x200042A")]
	public class Spline
	{
		[Token(Token = "0x200073E")]
		public enum Direction
		{
			[Token(Token = "0x400288B")]
			Forward = 1,
			[Token(Token = "0x400288C")]
			Backward = -1
		}

		[Token(Token = "0x200073F")]
		public enum Type
		{
			[Token(Token = "0x400288E")]
			Hermite,
			[Token(Token = "0x400288F")]
			BSpline,
			[Token(Token = "0x4002890")]
			Bezier,
			[Token(Token = "0x4002891")]
			Linear
		}

		[Token(Token = "0x4001BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SplinePoint[] points;

		[Token(Token = "0x4001BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool closed;

		[Token(Token = "0x4001BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Type type;

		[Token(Token = "0x4001BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve customValueInterpolation;

		[Token(Token = "0x4001BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve customNormalInterpolation;

		[Token(Token = "0x4001BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1479414", Offset = "0x1479414")]
		public double precision;

		[Token(Token = "0x4001BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] hermitePoints;

		[Token(Token = "0x170003FB")]
		public bool isClosed
		{
			[Token(Token = "0x6001FD5")]
			[Address(RVA = "0x33CFC4C", Offset = "0x33CFC4C", VA = "0x33CFC4C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001FD6")]
			[Address(RVA = "0x33E3898", Offset = "0x33E3898", VA = "0x33E3898")]
			set
			{
			}
		}

		[Token(Token = "0x170003FC")]
		public double moveStep
		{
			[Token(Token = "0x6001FD7")]
			[Address(RVA = "0x33E389C", Offset = "0x33E389C", VA = "0x33E389C")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001FD8")]
			[Address(RVA = "0x33E3944", Offset = "0x33E3944", VA = "0x33E3944")]
			set
			{
			}
		}

		[Token(Token = "0x170003FD")]
		public int iterations
		{
			[Token(Token = "0x6001FD9")]
			[Address(RVA = "0x33E38E4", Offset = "0x33E38E4", VA = "0x33E38E4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001FDA")]
			[Address(RVA = "0x33E3948", Offset = "0x33E3948", VA = "0x33E3948")]
			set
			{
			}
		}

		[Token(Token = "0x6001FDB")]
		[Address(RVA = "0x33D043C", Offset = "0x33D043C", VA = "0x33D043C")]
		public Spline(Type t)
		{
		}

		[Token(Token = "0x6001FDC")]
		[Address(RVA = "0x33E394C", Offset = "0x33E394C", VA = "0x33E394C")]
		public Spline(Type t, double p)
		{
		}

		[Token(Token = "0x6001FDD")]
		[Address(RVA = "0x33E3A34", Offset = "0x33E3A34", VA = "0x33E3A34")]
		public float CalculateLength(double from = 0.0, double to = 1.0, double resolution = 1.0)
		{
			return default(float);
		}

		[Token(Token = "0x6001FDE")]
		[Address(RVA = "0x33E3C90", Offset = "0x33E3C90", VA = "0x33E3C90")]
		public double Project(Vector3 point, int subdivide = 3, double from = 0.0, double to = 1.0)
		{
			return default(double);
		}

		[Token(Token = "0x6001FDF")]
		[Address(RVA = "0x33E41F8", Offset = "0x33E41F8", VA = "0x33E41F8")]
		public bool Raycast(out RaycastHit hit, out double hitPercent, LayerMask layerMask, double resolution = 1.0, double from = 0.0, double to = 1.0, QueryTriggerInteraction hitTriggers = QueryTriggerInteraction.UseGlobal)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FE0")]
		[Address(RVA = "0x33E4484", Offset = "0x33E4484", VA = "0x33E4484")]
		public bool RaycastAll(out RaycastHit[] hits, out double[] hitPercents, LayerMask layerMask, double resolution = 1.0, double from = 0.0, double to = 1.0, QueryTriggerInteraction hitTriggers = QueryTriggerInteraction.UseGlobal)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FE1")]
		[Address(RVA = "0x33E48DC", Offset = "0x33E48DC", VA = "0x33E48DC")]
		public double GetPointPercent(int pointIndex)
		{
			return default(double);
		}

		[Token(Token = "0x6001FE2")]
		[Address(RVA = "0x33E3BD4", Offset = "0x33E3BD4", VA = "0x33E3BD4")]
		public Vector3 EvaluatePosition(double percent)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001FE3")]
		[Address(RVA = "0x33E4A10", Offset = "0x33E4A10", VA = "0x33E4A10")]
		public SplineResult Evaluate(double percent)
		{
			return null;
		}

		[Token(Token = "0x6001FE4")]
		[Address(RVA = "0x33E51DC", Offset = "0x33E51DC", VA = "0x33E51DC")]
		public SplineResult Evaluate(int pointIndex)
		{
			return null;
		}

		[Token(Token = "0x6001FE5")]
		[Address(RVA = "0x33E5260", Offset = "0x33E5260", VA = "0x33E5260")]
		public void Evaluate(SplineResult result, int pointIndex)
		{
		}

		[Token(Token = "0x6001FE6")]
		[Address(RVA = "0x33E4A8C", Offset = "0x33E4A8C", VA = "0x33E4A8C")]
		public void Evaluate(SplineResult result, double percent)
		{
		}

		[Token(Token = "0x6001FE7")]
		[Address(RVA = "0x33E5394", Offset = "0x33E5394", VA = "0x33E5394")]
		public void Evaluate(ref SplineResult[] samples, double from = 0.0, double to = 1.0)
		{
		}

		[Token(Token = "0x6001FE8")]
		[Address(RVA = "0x33E55E4", Offset = "0x33E55E4", VA = "0x33E55E4")]
		public void EvaluatePositions(ref Vector3[] positions, double from = 0.0, double to = 1.0)
		{
		}

		[Token(Token = "0x6001FE9")]
		[Address(RVA = "0x33E57D4", Offset = "0x33E57D4", VA = "0x33E57D4")]
		public double Travel(double start, float distance, Direction direction)
		{
			return default(double);
		}

		[Token(Token = "0x6001FEA")]
		[Address(RVA = "0x33E490C", Offset = "0x33E490C", VA = "0x33E490C")]
		public void EvaluatePosition(ref Vector3 point, double percent)
		{
		}

		[Token(Token = "0x6001FEB")]
		[Address(RVA = "0x33E5290", Offset = "0x33E5290", VA = "0x33E5290")]
		public void EvaluateTangent(ref Vector3 tangent, double percent)
		{
		}

		[Token(Token = "0x6001FEC")]
		[Address(RVA = "0x33E3F58", Offset = "0x33E3F58", VA = "0x33E3F58")]
		private double GetClosestPoint(int iterations, Vector3 point, double start, double end, int slices)
		{
			return default(double);
		}

		[Token(Token = "0x6001FED")]
		[Address(RVA = "0x33E32AC", Offset = "0x33E32AC", VA = "0x33E32AC")]
		public void Break()
		{
		}

		[Token(Token = "0x6001FEE")]
		[Address(RVA = "0x33E5BC4", Offset = "0x33E5BC4", VA = "0x33E5BC4")]
		public void Break(int at)
		{
		}

		[Token(Token = "0x6001FEF")]
		[Address(RVA = "0x33D0514", Offset = "0x33D0514", VA = "0x33D0514")]
		public void Close()
		{
		}

		[Token(Token = "0x6001FF0")]
		[Address(RVA = "0x33E5E18", Offset = "0x33E5E18", VA = "0x33E5E18")]
		public void ConvertToBezier()
		{
		}

		[Token(Token = "0x6001FF1")]
		[Address(RVA = "0x33E5A1C", Offset = "0x33E5A1C", VA = "0x33E5A1C")]
		private void GetPoint(ref Vector3 point, double percent, int pointIndex)
		{
		}

		[Token(Token = "0x6001FF2")]
		[Address(RVA = "0x33E5B9C", Offset = "0x33E5B9C", VA = "0x33E5B9C")]
		private void GetTangent(ref Vector3 tangent, double percent, int pointIndex)
		{
		}

		[Token(Token = "0x6001FF3")]
		[Address(RVA = "0x33E72A0", Offset = "0x33E72A0", VA = "0x33E72A0")]
		private void LinearGetPoint(ref Vector3 point, double t, int i)
		{
		}

		[Token(Token = "0x6001FF4")]
		[Address(RVA = "0x33E7AC8", Offset = "0x33E7AC8", VA = "0x33E7AC8")]
		private void LinearGetTangent(ref Vector3 tangent, double t, int i)
		{
		}

		[Token(Token = "0x6001FF5")]
		[Address(RVA = "0x33E6DD4", Offset = "0x33E6DD4", VA = "0x33E6DD4")]
		private void BSPGetPoint(ref Vector3 point, double time, int i)
		{
		}

		[Token(Token = "0x6001FF6")]
		[Address(RVA = "0x33E6B1C", Offset = "0x33E6B1C", VA = "0x33E6B1C")]
		private void BezierGetPoint(ref Vector3 point, double t, int i)
		{
		}

		[Token(Token = "0x6001FF7")]
		[Address(RVA = "0x33E7744", Offset = "0x33E7744", VA = "0x33E7744")]
		private void BezierGetTangent(ref Vector3 tangent, double t, int i)
		{
		}

		[Token(Token = "0x6001FF8")]
		[Address(RVA = "0x33E66F8", Offset = "0x33E66F8", VA = "0x33E66F8")]
		private void HermiteGetPoint(ref Vector3 point, double t, int i)
		{
		}

		[Token(Token = "0x6001FF9")]
		[Address(RVA = "0x33E7468", Offset = "0x33E7468", VA = "0x33E7468")]
		private void GetHermiteTangent(ref Vector3 direction, double t, int i)
		{
		}

		[Token(Token = "0x6001FFA")]
		[Address(RVA = "0x33E62BC", Offset = "0x33E62BC", VA = "0x33E62BC")]
		private void GetHermitePoints(int i)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200042B")]
	public class SplineAddress
	{
		[Serializable]
		[Token(Token = "0x2000740")]
		public class Element
		{
			[Token(Token = "0x4002892")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SplineComputer computer;

			[Token(Token = "0x4002893")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private int _startPoint;

			[Token(Token = "0x4002894")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[SerializeField]
			private int _endPoint;

			[Token(Token = "0x170005DD")]
			public int startPoint
			{
				[Token(Token = "0x6002B43")]
				[Address(RVA = "0x341A548", Offset = "0x341A548", VA = "0x341A548")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002B44")]
				[Address(RVA = "0x3419BA4", Offset = "0x3419BA4", VA = "0x3419BA4")]
				set
				{
				}
			}

			[Token(Token = "0x170005DE")]
			public int endPoint
			{
				[Token(Token = "0x6002B45")]
				[Address(RVA = "0x3419B74", Offset = "0x3419B74", VA = "0x3419B74")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002B46")]
				[Address(RVA = "0x3417774", Offset = "0x3417774", VA = "0x3417774")]
				set
				{
				}
			}

			[Token(Token = "0x170005DF")]
			public double startPercent
			{
				[Token(Token = "0x6002B47")]
				[Address(RVA = "0x34187C0", Offset = "0x34187C0", VA = "0x34187C0")]
				get
				{
					return default(double);
				}
			}

			[Token(Token = "0x170005E0")]
			public double endPercent
			{
				[Token(Token = "0x6002B48")]
				[Address(RVA = "0x3418800", Offset = "0x3418800", VA = "0x3418800")]
				get
				{
					return default(double);
				}
			}

			[Token(Token = "0x170005E1")]
			public int span
			{
				[Token(Token = "0x6002B49")]
				[Address(RVA = "0x3418710", Offset = "0x3418710", VA = "0x3418710")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x6002B4A")]
			[Address(RVA = "0x3417764", Offset = "0x3417764", VA = "0x3417764")]
			public Element()
			{
			}
		}

		[Token(Token = "0x4001BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Element[] _elements;

		[Token(Token = "0x170003FE")]
		public int depth
		{
			[Token(Token = "0x6001FFB")]
			[Address(RVA = "0x34175E4", Offset = "0x34175E4", VA = "0x34175E4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003FF")]
		public SplineComputer root
		{
			[Token(Token = "0x6001FFC")]
			[Address(RVA = "0x34175FC", Offset = "0x34175FC", VA = "0x34175FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001FFD")]
			[Address(RVA = "0x341763C", Offset = "0x341763C", VA = "0x341763C")]
			set
			{
			}
		}

		[Token(Token = "0x17000400")]
		public Element[] elements
		{
			[Token(Token = "0x6001FFE")]
			[Address(RVA = "0x34179CC", Offset = "0x34179CC", VA = "0x34179CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000401")]
		public double moveStep
		{
			[Token(Token = "0x6001FFF")]
			[Address(RVA = "0x34179D4", Offset = "0x34179D4", VA = "0x34179D4")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x6002000")]
		[Address(RVA = "0x3417C48", Offset = "0x3417C48", VA = "0x3417C48")]
		public SplineAddress(SplineComputer rootComp)
		{
		}

		[Token(Token = "0x6002001")]
		[Address(RVA = "0x3417D84", Offset = "0x3417D84", VA = "0x3417D84")]
		public SplineAddress(SplineAddress copy)
		{
		}

		[Token(Token = "0x6002002")]
		[Address(RVA = "0x3417F54", Offset = "0x3417F54", VA = "0x3417F54")]
		public SplineResult Evaluate(double percent)
		{
			return null;
		}

		[Token(Token = "0x6002003")]
		[Address(RVA = "0x341807C", Offset = "0x341807C", VA = "0x341807C")]
		public void Evaluate(SplineResult result, double percent)
		{
		}

		[Token(Token = "0x6002004")]
		[Address(RVA = "0x3418424", Offset = "0x3418424", VA = "0x3418424")]
		public Vector3 EvaluatePosition(double percent)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002005")]
		[Address(RVA = "0x3418848", Offset = "0x3418848", VA = "0x3418848")]
		public double Project(Vector3 point, int subdivide = 4, double from = 0.0, double to = 1.0)
		{
			return default(double);
		}

		[Token(Token = "0x6002006")]
		[Address(RVA = "0x3418F14", Offset = "0x3418F14", VA = "0x3418F14")]
		public float CalculateLength(double from = 0.0, double to = 1.0)
		{
			return default(float);
		}

		[Token(Token = "0x6002007")]
		[Address(RVA = "0x3419200", Offset = "0x3419200", VA = "0x3419200")]
		public double Travel(double start, float distance, Spline.Direction direction, int iterations)
		{
			return default(double);
		}

		[Token(Token = "0x6002008")]
		[Address(RVA = "0x3419408", Offset = "0x3419408", VA = "0x3419408")]
		public int GetElementIndex(double percent)
		{
			return default(int);
		}

		[Token(Token = "0x6002009")]
		[Address(RVA = "0x3418AB8", Offset = "0x3418AB8", VA = "0x3418AB8")]
		public double PathToLocalPercent(double pathPercent, int elementIndex)
		{
			return default(double);
		}

		[Token(Token = "0x600200A")]
		[Address(RVA = "0x3418D28", Offset = "0x3418D28", VA = "0x3418D28")]
		public double LocalToPathPercent(double localPercent, int elementIndex)
		{
			return default(double);
		}

		[Token(Token = "0x600200B")]
		[Address(RVA = "0x3417B08", Offset = "0x3417B08", VA = "0x3417B08")]
		public int GetTotalPointCount()
		{
			return default(int);
		}

		[Token(Token = "0x600200C")]
		[Address(RVA = "0x3418198", Offset = "0x3418198", VA = "0x3418198")]
		public void GetEvaluationValues(double inputPercent, out SplineComputer computer, out double percent, out Spline.Direction direction)
		{
		}

		[Token(Token = "0x600200D")]
		[Address(RVA = "0x34195A0", Offset = "0x34195A0", VA = "0x34195A0")]
		private int LocalToPathPoint(int point, int elementIndex)
		{
			return default(int);
		}

		[Token(Token = "0x600200E")]
		[Address(RVA = "0x34196A8", Offset = "0x34196A8", VA = "0x34196A8")]
		private void PathToLocalPoint(int point, out int computerIndex, out int localPoint)
		{
		}

		[Token(Token = "0x600200F")]
		[Address(RVA = "0x34197B4", Offset = "0x34197B4", VA = "0x34197B4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x1486DA0", Offset = "0x1486DA0")]
		public void Enter(Node node, int connectionIndex, Spline.Direction direction = Spline.Direction.Forward)
		{
		}

		[Token(Token = "0x6002010")]
		[Address(RVA = "0x34197B8", Offset = "0x34197B8", VA = "0x34197B8")]
		public void AddSpline(Node node, int connectionIndex, Spline.Direction direction = Spline.Direction.Forward)
		{
		}

		[Token(Token = "0x6002011")]
		[Address(RVA = "0x3419DBC", Offset = "0x3419DBC", VA = "0x3419DBC")]
		public void AddSpline(SplineComputer computer, int connectionIndex, int connectedIndex, Spline.Direction direction = Spline.Direction.Forward)
		{
		}

		[Token(Token = "0x6002012")]
		[Address(RVA = "0x341A138", Offset = "0x341A138", VA = "0x341A138")]
		public void Exit(int exitDepth)
		{
		}

		[Token(Token = "0x6002013")]
		[Address(RVA = "0x341A2D4", Offset = "0x341A2D4", VA = "0x341A2D4")]
		public void Collapse()
		{
		}

		[Token(Token = "0x6002014")]
		[Address(RVA = "0x341A458", Offset = "0x341A458", VA = "0x341A458")]
		public void Clear()
		{
		}

		[Token(Token = "0x6002015")]
		[Address(RVA = "0x3417E64", Offset = "0x3417E64", VA = "0x3417E64")]
		private void AddElement(Element element)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200042C")]
	public struct SplinePoint
	{
		[Token(Token = "0x2000741")]
		public enum Type
		{
			[Token(Token = "0x4002896")]
			SmoothMirrored,
			[Token(Token = "0x4002897")]
			Broken,
			[Token(Token = "0x4002898")]
			SmoothFree
		}

		[Token(Token = "0x4001BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x1479430", Offset = "0x1479430")]
		public Type _type;

		[Token(Token = "0x4001BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Vector3 position;

		[Token(Token = "0x4001BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UnityEngine.Color color;

		[Token(Token = "0x4001BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 normal;

		[Token(Token = "0x4001BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float size;

		[Token(Token = "0x4001BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 tangent;

		[Token(Token = "0x4001BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 tangent2;

		[Token(Token = "0x17000402")]
		public Type type
		{
			[Token(Token = "0x6002016")]
			[Address(RVA = "0x342BD7C", Offset = "0x342BD7C", VA = "0x342BD7C")]
			get
			{
				return default(Type);
			}
			[Token(Token = "0x6002017")]
			[Address(RVA = "0x3421090", Offset = "0x3421090", VA = "0x3421090")]
			set
			{
			}
		}

		[Token(Token = "0x6002018")]
		[Address(RVA = "0x342BE54", Offset = "0x342BE54", VA = "0x342BE54")]
		public static SplinePoint Lerp(SplinePoint a, SplinePoint b, float t)
		{
			return default(SplinePoint);
		}

		[Token(Token = "0x6002019")]
		[Address(RVA = "0x342C060", Offset = "0x342C060", VA = "0x342C060")]
		private static void GetInterpolatedTangents(SplinePoint a, SplinePoint b, float t, out Vector3 t1, out Vector3 t2)
		{
		}

		[Token(Token = "0x600201A")]
		[Address(RVA = "0x342C314", Offset = "0x342C314", VA = "0x342C314")]
		public void SetPosition(Vector3 pos)
		{
		}

		[Token(Token = "0x600201B")]
		[Address(RVA = "0x341D72C", Offset = "0x341D72C", VA = "0x341D72C")]
		public void SetTangentPosition(Vector3 pos)
		{
		}

		[Token(Token = "0x600201C")]
		[Address(RVA = "0x341D708", Offset = "0x341D708", VA = "0x341D708")]
		public void SetTangent2Position(Vector3 pos)
		{
		}

		[Token(Token = "0x600201D")]
		[Address(RVA = "0x342C7C4", Offset = "0x342C7C4", VA = "0x342C7C4")]
		public SplinePoint(Vector3 p)
		{
		}

		[Token(Token = "0x600201E")]
		[Address(RVA = "0x342C884", Offset = "0x342C884", VA = "0x342C884")]
		public SplinePoint(Vector3 p, Vector3 t)
		{
		}

		[Token(Token = "0x600201F")]
		[Address(RVA = "0x342C99C", Offset = "0x342C99C", VA = "0x342C99C")]
		public SplinePoint(Vector3 pos, Vector3 tan, Vector3 nor, float s, UnityEngine.Color col)
		{
		}

		[Token(Token = "0x6002020")]
		[Address(RVA = "0x342CB04", Offset = "0x342CB04", VA = "0x342CB04")]
		public SplinePoint(Vector3 pos, Vector3 tan, Vector3 tan2, Vector3 nor, float s, UnityEngine.Color col)
		{
		}

		[Token(Token = "0x6002021")]
		[Address(RVA = "0x342CB4C", Offset = "0x342CB4C", VA = "0x342CB4C")]
		public SplinePoint(SplinePoint source)
		{
		}

		[Token(Token = "0x6002022")]
		[Address(RVA = "0x342BD84", Offset = "0x342BD84", VA = "0x342BD84")]
		private void SmoothMirrorTangent2()
		{
		}

		[Token(Token = "0x6002023")]
		[Address(RVA = "0x342C5AC", Offset = "0x342C5AC", VA = "0x342C5AC")]
		private void SmoothMirrorTangent()
		{
		}

		[Token(Token = "0x6002024")]
		[Address(RVA = "0x342C464", Offset = "0x342C464", VA = "0x342C464")]
		private void SmoothFreeTangent2()
		{
		}

		[Token(Token = "0x6002025")]
		[Address(RVA = "0x342C67C", Offset = "0x342C67C", VA = "0x342C67C")]
		private void SmoothFreeTangent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200042D")]
	public class SplineResult
	{
		[Token(Token = "0x4001BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 position;

		[Token(Token = "0x4001BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 normal;

		[Token(Token = "0x4001BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 direction;

		[Token(Token = "0x4001BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public UnityEngine.Color color;

		[Token(Token = "0x4001BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float size;

		[Token(Token = "0x4001BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public double percent;

		[Token(Token = "0x17000403")]
		public Quaternion rotation
		{
			[Token(Token = "0x6002026")]
			[Address(RVA = "0x3426134", Offset = "0x3426134", VA = "0x3426134")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x17000404")]
		public Vector3 right
		{
			[Token(Token = "0x6002027")]
			[Address(RVA = "0x3425F8C", Offset = "0x3425F8C", VA = "0x3425F8C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6002028")]
		[Address(RVA = "0x342F038", Offset = "0x342F038", VA = "0x342F038")]
		public static SplineResult Lerp(SplineResult a, SplineResult b, float t)
		{
			return null;
		}

		[Token(Token = "0x6002029")]
		[Address(RVA = "0x342F270", Offset = "0x342F270", VA = "0x342F270")]
		public static SplineResult Lerp(SplineResult a, SplineResult b, double t)
		{
			return null;
		}

		[Token(Token = "0x600202A")]
		[Address(RVA = "0x34231F4", Offset = "0x34231F4", VA = "0x34231F4")]
		public static void Lerp(SplineResult a, SplineResult b, double t, SplineResult target)
		{
		}

		[Token(Token = "0x600202B")]
		[Address(RVA = "0x342F0C0", Offset = "0x342F0C0", VA = "0x342F0C0")]
		public static void Lerp(SplineResult a, SplineResult b, float t, SplineResult target)
		{
		}

		[Token(Token = "0x600202C")]
		[Address(RVA = "0x342F2F8", Offset = "0x342F2F8", VA = "0x342F2F8")]
		public void Lerp(SplineResult b, double t)
		{
		}

		[Token(Token = "0x600202D")]
		[Address(RVA = "0x342F300", Offset = "0x342F300", VA = "0x342F300")]
		public void Lerp(SplineResult b, float t)
		{
		}

		[Token(Token = "0x600202E")]
		[Address(RVA = "0x3422EA4", Offset = "0x3422EA4", VA = "0x3422EA4")]
		public void CopyFrom(SplineResult input)
		{
		}

		[Token(Token = "0x600202F")]
		[Address(RVA = "0x3417FCC", Offset = "0x3417FCC", VA = "0x3417FCC")]
		public SplineResult()
		{
		}

		[Token(Token = "0x6002030")]
		[Address(RVA = "0x342F308", Offset = "0x342F308", VA = "0x342F308")]
		public SplineResult(Vector3 p, Vector3 n, Vector3 d, UnityEngine.Color c, float s, double t)
		{
		}

		[Token(Token = "0x6002031")]
		[Address(RVA = "0x342F458", Offset = "0x342F458", VA = "0x342F458")]
		public SplineResult(SplineResult input)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200042E")]
	public class SplineAction
	{
		[Token(Token = "0x4001BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public UnityEngine.Object target;

		[Token(Token = "0x4001BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int intValue;

		[Token(Token = "0x4001BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float floatValue;

		[Token(Token = "0x4001BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public double doubleValue;

		[Token(Token = "0x4001BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string stringValue;

		[Token(Token = "0x4001BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool boolValue;

		[Token(Token = "0x4001BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject goValue;

		[Token(Token = "0x4001BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform transformValue;

		[Token(Token = "0x4001BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private UnityAction action;

		[Token(Token = "0x4001BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private UnityAction<int> intAction;

		[Token(Token = "0x4001BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private UnityAction<float> floatAction;

		[Token(Token = "0x4001BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private UnityAction<double> doubleAction;

		[Token(Token = "0x4001BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private UnityAction<string> stringAction;

		[Token(Token = "0x4001BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private UnityAction<bool> boolAction;

		[Token(Token = "0x4001BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private UnityAction<GameObject> goAction;

		[Token(Token = "0x4001BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private UnityAction<Transform> transformAction;

		[Token(Token = "0x4001BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MethodInfo methodInfo;

		[Token(Token = "0x4001BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private string methodName;

		[Token(Token = "0x4001BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private int paramType;

		[Token(Token = "0x6002032")]
		[Address(RVA = "0x33D1ED0", Offset = "0x33D1ED0", VA = "0x33D1ED0")]
		public SplineAction()
		{
		}

		[Token(Token = "0x6002033")]
		[Address(RVA = "0x33D1324", Offset = "0x33D1324", VA = "0x33D1324")]
		public SplineAction(UnityAction call)
		{
		}

		[Token(Token = "0x6002034")]
		[Address(RVA = "0x33D151C", Offset = "0x33D151C", VA = "0x33D151C")]
		public SplineAction(UnityAction<int> call, int value)
		{
		}

		[Token(Token = "0x6002035")]
		[Address(RVA = "0x33D1670", Offset = "0x33D1670", VA = "0x33D1670")]
		public SplineAction(UnityAction<float> call, float value)
		{
		}

		[Token(Token = "0x6002036")]
		[Address(RVA = "0x33D17CC", Offset = "0x33D17CC", VA = "0x33D17CC")]
		public SplineAction(UnityAction<double> call, double value)
		{
		}

		[Token(Token = "0x6002037")]
		[Address(RVA = "0x33D1928", Offset = "0x33D1928", VA = "0x33D1928")]
		public SplineAction(UnityAction<string> call, string value)
		{
		}

		[Token(Token = "0x6002038")]
		[Address(RVA = "0x33D1A88", Offset = "0x33D1A88", VA = "0x33D1A88")]
		public SplineAction(UnityAction<bool> call, bool value)
		{
		}

		[Token(Token = "0x6002039")]
		[Address(RVA = "0x33D1BE0", Offset = "0x33D1BE0", VA = "0x33D1BE0")]
		public SplineAction(UnityAction<GameObject> call, GameObject value)
		{
		}

		[Token(Token = "0x600203A")]
		[Address(RVA = "0x33D1D40", Offset = "0x33D1D40", VA = "0x33D1D40")]
		public SplineAction(UnityAction<Transform> call, Transform value)
		{
		}

		[Token(Token = "0x600203B")]
		[Address(RVA = "0x33E7C48", Offset = "0x33E7C48", VA = "0x33E7C48")]
		public void SetMethod(MethodInfo newMethod)
		{
		}

		[Token(Token = "0x600203C")]
		[Address(RVA = "0x33E8570", Offset = "0x33E8570", VA = "0x33E8570")]
		private Type GetParamType()
		{
			return null;
		}

		[Token(Token = "0x600203D")]
		[Address(RVA = "0x33E86A8", Offset = "0x33E86A8", VA = "0x33E86A8")]
		public MethodInfo GetMethod()
		{
			return null;
		}

		[Token(Token = "0x600203E")]
		[Address(RVA = "0x33E8074", Offset = "0x33E8074", VA = "0x33E8074")]
		private void ConstructUnityAction()
		{
		}

		[Token(Token = "0x600203F")]
		[Address(RVA = "0x33D0E78", Offset = "0x33D0E78", VA = "0x33D0E78")]
		public void Invoke()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200042F")]
	public class SplineTrigger : ScriptableObject
	{
		[Token(Token = "0x2000742")]
		public enum Type
		{
			[Token(Token = "0x400289A")]
			Double,
			[Token(Token = "0x400289B")]
			Forward,
			[Token(Token = "0x400289C")]
			Backward
		}

		[Token(Token = "0x4001BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Type type;

		[Token(Token = "0x4001BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x14794A8", Offset = "0x14794A8")]
		public double position;

		[Token(Token = "0x4001BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public bool enabled;

		[Token(Token = "0x4001BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		public UnityEngine.Color color;

		[Token(Token = "0x4001BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		public SplineAction[] actions;

		[Token(Token = "0x4001BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject[] gameObjects;

		[Token(Token = "0x6002040")]
		[Address(RVA = "0x34D3150", Offset = "0x34D3150", VA = "0x34D3150")]
		public SplineTrigger()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000430")]
	public class Trigger
	{
		[Token(Token = "0x2000743")]
		public enum Type
		{
			[Token(Token = "0x400289E")]
			Double,
			[Token(Token = "0x400289F")]
			Forward,
			[Token(Token = "0x40028A0")]
			Backward
		}

		[Token(Token = "0x4001BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4001BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Type type;

		[Token(Token = "0x4001BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool workOnce;

		[Token(Token = "0x4001BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		private bool worked;

		[Token(Token = "0x4001BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1479528", Offset = "0x1479528")]
		public double position;

		[Token(Token = "0x4001BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public bool enabled;

		[Token(Token = "0x4001BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		public UnityEngine.Color color;

		[Token(Token = "0x4001BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		public SplineAction[] actions;

		[Token(Token = "0x4001BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject[] gameObjects;

		[Token(Token = "0x6002041")]
		[Address(RVA = "0x34DD6C0", Offset = "0x34DD6C0", VA = "0x34DD6C0")]
		public void Create(Type t, UnityAction call)
		{
		}

		[Token(Token = "0x6002042")]
		[Address(RVA = "0x34DD824", Offset = "0x34DD824", VA = "0x34DD824")]
		public void Create(Type t, UnityAction<int> call, int value)
		{
		}

		[Token(Token = "0x6002043")]
		[Address(RVA = "0x34DD8A0", Offset = "0x34DD8A0", VA = "0x34DD8A0")]
		public void Create(Type t, UnityAction<float> call, float value)
		{
		}

		[Token(Token = "0x6002044")]
		[Address(RVA = "0x34DD924", Offset = "0x34DD924", VA = "0x34DD924")]
		public void Create(Type t, UnityAction<double> call, double value)
		{
		}

		[Token(Token = "0x6002045")]
		[Address(RVA = "0x34DD9A8", Offset = "0x34DD9A8", VA = "0x34DD9A8")]
		public void Create(Type t, UnityAction<string> call, string value)
		{
		}

		[Token(Token = "0x6002046")]
		[Address(RVA = "0x34DDA24", Offset = "0x34DDA24", VA = "0x34DDA24")]
		public void Create(Type t, UnityAction<bool> call, bool value)
		{
		}

		[Token(Token = "0x6002047")]
		[Address(RVA = "0x34DDAA0", Offset = "0x34DDAA0", VA = "0x34DDAA0")]
		public void Create(Type t, UnityAction<Transform> call, Transform value)
		{
		}

		[Token(Token = "0x6002048")]
		[Address(RVA = "0x34DDB1C", Offset = "0x34DDB1C", VA = "0x34DDB1C")]
		public void Create(Type t, UnityAction<GameObject> call, GameObject value)
		{
		}

		[Token(Token = "0x6002049")]
		[Address(RVA = "0x34DD744", Offset = "0x34DD744", VA = "0x34DD744")]
		public void Create(Type t)
		{
		}

		[Token(Token = "0x600204A")]
		[Address(RVA = "0x34DDB98", Offset = "0x34DDB98", VA = "0x34DDB98")]
		public void ResetWorkOnce()
		{
		}

		[Token(Token = "0x600204B")]
		[Address(RVA = "0x34DDBA0", Offset = "0x34DDBA0", VA = "0x34DDBA0")]
		public bool Check(double previousPercent, double currentPercent)
		{
			return default(bool);
		}

		[Token(Token = "0x600204C")]
		[Address(RVA = "0x34DDC34", Offset = "0x34DDC34", VA = "0x34DDC34")]
		public void Invoke()
		{
		}

		[Token(Token = "0x600204D")]
		[Address(RVA = "0x34DDCA0", Offset = "0x34DDCA0", VA = "0x34DDCA0")]
		private void AddAction()
		{
		}

		[Token(Token = "0x600204E")]
		[Address(RVA = "0x34DDDA8", Offset = "0x34DDDA8", VA = "0x34DDDA8")]
		public void AddListener(MonoBehaviour behavior, string method, object arg)
		{
		}

		[Token(Token = "0x600204F")]
		[Address(RVA = "0x34DD7A8", Offset = "0x34DD7A8", VA = "0x34DD7A8")]
		public void AddAction(SplineAction action)
		{
		}

		[Token(Token = "0x6002050")]
		[Address(RVA = "0x34DE928", Offset = "0x34DE928", VA = "0x34DE928")]
		public Trigger()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000431")]
	public class TransformModule
	{
		[Token(Token = "0x2000744")]
		public enum VelocityHandleMode
		{
			[Token(Token = "0x40028A2")]
			Zero,
			[Token(Token = "0x40028A3")]
			Preserve,
			[Token(Token = "0x40028A4")]
			Align,
			[Token(Token = "0x40028A5")]
			AlignRealistic
		}

		[Token(Token = "0x4001C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[HideInInspector]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x1479598", Offset = "0x1479598")]
		private Vector2 _offset;

		[Token(Token = "0x4001C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[HideInInspector]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x14795F4", Offset = "0x14795F4")]
		private Vector3 _rotationOffset;

		[Token(Token = "0x4001C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[HideInInspector]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x1479650", Offset = "0x1479650")]
		private Vector3 _baseScale;

		[Token(Token = "0x4001C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public VelocityHandleMode velocityHandleMode;

		[Token(Token = "0x4001C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SplineResult _splineResult;

		[Token(Token = "0x4001C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public CustomRotationModule customRotation;

		[Token(Token = "0x4001C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public CustomOffsetModule customOffset;

		[Token(Token = "0x4001C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool applyPositionX;

		[Token(Token = "0x4001C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool applyPositionY;

		[Token(Token = "0x4001C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		public bool applyPositionZ;

		[Token(Token = "0x4001C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Spline.Direction direction;

		[Token(Token = "0x4001C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool applyRotationX;

		[Token(Token = "0x4001C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool applyRotationY;

		[Token(Token = "0x4001C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		public bool applyRotationZ;

		[Token(Token = "0x4001C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
		public bool applyScaleX;

		[Token(Token = "0x4001C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool applyScaleY;

		[Token(Token = "0x4001C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		public bool applyScaleZ;

		[Token(Token = "0x4001C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public SplineUser targetUser;

		[Token(Token = "0x4001C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 position;

		[Token(Token = "0x4001C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static Quaternion rotation;

		[Token(Token = "0x17000405")]
		public Vector2 offset
		{
			[Token(Token = "0x6002051")]
			[Address(RVA = "0x34DC2CC", Offset = "0x34DC2CC", VA = "0x34DC2CC")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6002052")]
			[Address(RVA = "0x34DC2D4", Offset = "0x34DC2D4", VA = "0x34DC2D4")]
			set
			{
			}
		}

		[Token(Token = "0x17000406")]
		public Vector3 rotationOffset
		{
			[Token(Token = "0x6002053")]
			[Address(RVA = "0x34DC3D4", Offset = "0x34DC3D4", VA = "0x34DC3D4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002054")]
			[Address(RVA = "0x34DC3E0", Offset = "0x34DC3E0", VA = "0x34DC3E0")]
			set
			{
			}
		}

		[Token(Token = "0x17000407")]
		public Vector3 baseScale
		{
			[Token(Token = "0x6002055")]
			[Address(RVA = "0x34DC500", Offset = "0x34DC500", VA = "0x34DC500")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002056")]
			[Address(RVA = "0x34DC50C", Offset = "0x34DC50C", VA = "0x34DC50C")]
			set
			{
			}
		}

		[Token(Token = "0x17000408")]
		public SplineResult splineResult
		{
			[Token(Token = "0x6002057")]
			[Address(RVA = "0x34DC62C", Offset = "0x34DC62C", VA = "0x34DC62C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002058")]
			[Address(RVA = "0x34DC6A4", Offset = "0x34DC6A4", VA = "0x34DC6A4")]
			set
			{
			}
		}

		[Token(Token = "0x17000409")]
		public bool applyPosition
		{
			[Token(Token = "0x6002059")]
			[Address(RVA = "0x34DC73C", Offset = "0x34DC73C", VA = "0x34DC73C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600205A")]
			[Address(RVA = "0x34DC764", Offset = "0x34DC764", VA = "0x34DC764")]
			set
			{
			}
		}

		[Token(Token = "0x1700040A")]
		public bool applyRotation
		{
			[Token(Token = "0x600205B")]
			[Address(RVA = "0x34DC778", Offset = "0x34DC778", VA = "0x34DC778")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600205C")]
			[Address(RVA = "0x34DC7A0", Offset = "0x34DC7A0", VA = "0x34DC7A0")]
			set
			{
			}
		}

		[Token(Token = "0x1700040B")]
		public bool applyScale
		{
			[Token(Token = "0x600205D")]
			[Address(RVA = "0x34DC7B4", Offset = "0x34DC7B4", VA = "0x34DC7B4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600205E")]
			[Address(RVA = "0x34DC7DC", Offset = "0x34DC7DC", VA = "0x34DC7DC")]
			set
			{
			}
		}

		[Token(Token = "0x600205F")]
		[Address(RVA = "0x34DC7F0", Offset = "0x34DC7F0", VA = "0x34DC7F0")]
		public void ApplyTransform(Transform input)
		{
		}

		[Token(Token = "0x6002060")]
		[Address(RVA = "0x34DCF8C", Offset = "0x34DCF8C", VA = "0x34DCF8C")]
		public void ApplyRigidbody(Rigidbody input)
		{
		}

		[Token(Token = "0x6002061")]
		[Address(RVA = "0x34DD3A8", Offset = "0x34DD3A8", VA = "0x34DD3A8")]
		public void ApplyRigidbody2D(Rigidbody2D input)
		{
		}

		[Token(Token = "0x6002062")]
		[Address(RVA = "0x34DD0B0", Offset = "0x34DD0B0", VA = "0x34DD0B0")]
		private Vector3 HandleVelocity(Vector3 velocity)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002063")]
		[Address(RVA = "0x34DC874", Offset = "0x34DC874", VA = "0x34DC874")]
		private Vector3 GetPosition(Vector3 inputPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002064")]
		[Address(RVA = "0x34DCBA0", Offset = "0x34DCBA0", VA = "0x34DCBA0")]
		private Quaternion GetRotation(Quaternion inputRotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002065")]
		[Address(RVA = "0x34DCF24", Offset = "0x34DCF24", VA = "0x34DCF24")]
		private Vector3 GetScale(Vector3 inputScale)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002066")]
		[Address(RVA = "0x34DD568", Offset = "0x34DD568", VA = "0x34DD568")]
		public TransformModule()
		{
		}
	}
}
namespace Dreamteck.Splines.Primitives
{
	[Token(Token = "0x2000432")]
	public class Capsule : SplinePrimitive
	{
		[Token(Token = "0x4001C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float radius;

		[Token(Token = "0x4001C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float height;

		[Token(Token = "0x6002068")]
		[Address(RVA = "0x33E06F0", Offset = "0x33E06F0", VA = "0x33E06F0", Slot = "4")]
		protected override void Generate()
		{
		}

		[Token(Token = "0x6002069")]
		[Address(RVA = "0x33E1018", Offset = "0x33E1018", VA = "0x33E1018")]
		public Capsule()
		{
		}
	}
	[Token(Token = "0x2000433")]
	public class Ellipse : SplinePrimitive
	{
		[Token(Token = "0x4001C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float xRadius;

		[Token(Token = "0x4001C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float yRadius;

		[Token(Token = "0x600206A")]
		[Address(RVA = "0x33E10E4", Offset = "0x33E10E4", VA = "0x33E10E4", Slot = "4")]
		protected override void Generate()
		{
		}

		[Token(Token = "0x600206B")]
		[Address(RVA = "0x33E14F8", Offset = "0x33E14F8", VA = "0x33E14F8")]
		public Ellipse()
		{
		}
	}
	[Token(Token = "0x2000434")]
	public class Line : SplinePrimitive
	{
		[Token(Token = "0x4001C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool mirror;

		[Token(Token = "0x4001C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float length;

		[Token(Token = "0x4001C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int segments;

		[Token(Token = "0x600206C")]
		[Address(RVA = "0x33E1504", Offset = "0x33E1504", VA = "0x33E1504", Slot = "4")]
		protected override void Generate()
		{
		}

		[Token(Token = "0x600206D")]
		[Address(RVA = "0x33E1764", Offset = "0x33E1764", VA = "0x33E1764")]
		public Line()
		{
		}
	}
	[Token(Token = "0x2000435")]
	public class Ngon : SplinePrimitive
	{
		[Token(Token = "0x4001C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float radius;

		[Token(Token = "0x4001C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int sides;

		[Token(Token = "0x600206E")]
		[Address(RVA = "0x33E177C", Offset = "0x33E177C", VA = "0x33E177C", Slot = "4")]
		protected override void Generate()
		{
		}

		[Token(Token = "0x600206F")]
		[Address(RVA = "0x33E1958", Offset = "0x33E1958", VA = "0x33E1958")]
		public Ngon()
		{
		}
	}
	[Token(Token = "0x2000436")]
	public class Rectangle : SplinePrimitive
	{
		[Token(Token = "0x4001C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector2 size;

		[Token(Token = "0x6002070")]
		[Address(RVA = "0x33E1968", Offset = "0x33E1968", VA = "0x33E1968", Slot = "4")]
		protected override void Generate()
		{
		}

		[Token(Token = "0x6002071")]
		[Address(RVA = "0x33E1C98", Offset = "0x33E1C98", VA = "0x33E1C98")]
		public Rectangle()
		{
		}
	}
	[Token(Token = "0x2000437")]
	public class RoundedRectangle : SplinePrimitive
	{
		[Token(Token = "0x4001C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector2 size;

		[Token(Token = "0x4001C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float xRadius;

		[Token(Token = "0x4001C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float yRadius;

		[Token(Token = "0x6002072")]
		[Address(RVA = "0x33E1D08", Offset = "0x33E1D08", VA = "0x33E1D08", Slot = "4")]
		protected override void Generate()
		{
		}

		[Token(Token = "0x6002073")]
		[Address(RVA = "0x33E2660", Offset = "0x33E2660", VA = "0x33E2660")]
		public RoundedRectangle()
		{
		}
	}
	[Token(Token = "0x2000438")]
	public class Spiral : SplinePrimitive
	{
		[Token(Token = "0x4001C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float startRadius;

		[Token(Token = "0x4001C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float endRadius;

		[Token(Token = "0x4001C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float stretch;

		[Token(Token = "0x4001C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int iterations;

		[Token(Token = "0x4001C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AnimationCurve curve;

		[Token(Token = "0x6002074")]
		[Address(RVA = "0x33E26D8", Offset = "0x33E26D8", VA = "0x33E26D8", Slot = "4")]
		protected override void Generate()
		{
		}

		[Token(Token = "0x6002075")]
		[Address(RVA = "0x33E2CEC", Offset = "0x33E2CEC", VA = "0x33E2CEC")]
		public Spiral()
		{
		}
	}
	[Token(Token = "0x2000439")]
	public class SplinePrimitive
	{
		[Token(Token = "0x2000745")]
		public enum Axis
		{
			[Token(Token = "0x40028A7")]
			X,
			[Token(Token = "0x40028A8")]
			Y,
			[Token(Token = "0x40028A9")]
			Z,
			[Token(Token = "0x40028AA")]
			nX,
			[Token(Token = "0x40028AB")]
			nY,
			[Token(Token = "0x40028AC")]
			nZ
		}

		[Token(Token = "0x4001C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected bool closed;

		[Token(Token = "0x4001C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected SplinePoint[] points;

		[Token(Token = "0x4001C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Spline.Type type;

		[Token(Token = "0x4001C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Axis axis;

		[Token(Token = "0x4001C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 offset;

		[Token(Token = "0x4001C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 rotation;

		[Token(Token = "0x6002076")]
		[Address(RVA = "0x33E0E9C", Offset = "0x33E0E9C", VA = "0x33E0E9C", Slot = "4")]
		protected virtual void Generate()
		{
		}

		[Token(Token = "0x6002077")]
		[Address(RVA = "0x33E2D70", Offset = "0x33E2D70", VA = "0x33E2D70")]
		public Spline GetSpline()
		{
			return null;
		}

		[Token(Token = "0x6002078")]
		[Address(RVA = "0x33E31F8", Offset = "0x33E31F8", VA = "0x33E31F8")]
		public void UpdateSpline(Spline spline)
		{
		}

		[Token(Token = "0x6002079")]
		[Address(RVA = "0x33E32B4", Offset = "0x33E32B4", VA = "0x33E32B4")]
		public SplineComputer CreateSplineComputer(string name, Vector3 position, Quaternion rotation)
		{
			return null;
		}

		[Token(Token = "0x600207A")]
		[Address(RVA = "0x33E341C", Offset = "0x33E341C", VA = "0x33E341C")]
		public void UpdateSplineComputer(SplineComputer comp)
		{
		}

		[Token(Token = "0x600207B")]
		[Address(RVA = "0x33E2E1C", Offset = "0x33E2E1C", VA = "0x33E2E1C")]
		private void ApplyOffset()
		{
		}

		[Token(Token = "0x600207C")]
		[Address(RVA = "0x33E0EA0", Offset = "0x33E0EA0", VA = "0x33E0EA0")]
		protected void CreatePoints(int count, SplinePoint.Type type)
		{
		}

		[Token(Token = "0x600207D")]
		[Address(RVA = "0x33E34C0", Offset = "0x33E34C0", VA = "0x33E34C0")]
		protected Vector3 GetNormal()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600207E")]
		[Address(RVA = "0x33E1028", Offset = "0x33E1028", VA = "0x33E1028")]
		public SplinePrimitive()
		{
		}
	}
	[Token(Token = "0x200043A")]
	public class Star : SplinePrimitive
	{
		[Token(Token = "0x4001C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float radius;

		[Token(Token = "0x4001C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float depth;

		[Token(Token = "0x4001C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int sides;

		[Token(Token = "0x600207F")]
		[Address(RVA = "0x33E3634", Offset = "0x33E3634", VA = "0x33E3634", Slot = "4")]
		protected override void Generate()
		{
		}

		[Token(Token = "0x6002080")]
		[Address(RVA = "0x33E3880", Offset = "0x33E3880", VA = "0x33E3880")]
		public Star()
		{
		}
	}
}
namespace Dreamteck.Splines.IO
{
	[Token(Token = "0x200043B")]
	public class CSV : SplineParser
	{
		[Token(Token = "0x2000746")]
		public enum ColumnType
		{
			[Token(Token = "0x40028AE")]
			Position,
			[Token(Token = "0x40028AF")]
			Tangent,
			[Token(Token = "0x40028B0")]
			Tangent2,
			[Token(Token = "0x40028B1")]
			Normal,
			[Token(Token = "0x40028B2")]
			Size,
			[Token(Token = "0x40028B3")]
			Color
		}

		[Token(Token = "0x4001C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<ColumnType> columns;

		[Token(Token = "0x6002081")]
		[Address(RVA = "0x1CC07D0", Offset = "0x1CC07D0", VA = "0x1CC07D0")]
		public CSV(SplineComputer computer)
		{
		}

		[Token(Token = "0x6002082")]
		[Address(RVA = "0x1CC09C0", Offset = "0x1CC09C0", VA = "0x1CC09C0")]
		public CSV(string filePath, [Optional] List<ColumnType> customColumns)
		{
		}

		[Token(Token = "0x6002083")]
		[Address(RVA = "0x1CC0C44", Offset = "0x1CC0C44", VA = "0x1CC0C44")]
		private void Read(string[] lines)
		{
		}

		[Token(Token = "0x6002084")]
		[Address(RVA = "0x1CC173C", Offset = "0x1CC173C", VA = "0x1CC173C")]
		public SplineComputer CreateSplineComputer(Vector3 position, Quaternion rotation)
		{
			return null;
		}

		[Token(Token = "0x6002085")]
		[Address(RVA = "0x1CC1758", Offset = "0x1CC1758", VA = "0x1CC1758")]
		public Spline CreateSpline()
		{
			return null;
		}

		[Token(Token = "0x6002086")]
		[Address(RVA = "0x1CC1774", Offset = "0x1CC1774", VA = "0x1CC1774")]
		public void FlatX()
		{
		}

		[Token(Token = "0x6002087")]
		[Address(RVA = "0x1CC18F8", Offset = "0x1CC18F8", VA = "0x1CC18F8")]
		public void FlatY()
		{
		}

		[Token(Token = "0x6002088")]
		[Address(RVA = "0x1CC1A80", Offset = "0x1CC1A80", VA = "0x1CC1A80")]
		public void FlatZ()
		{
		}

		[Token(Token = "0x6002089")]
		[Address(RVA = "0x1CC1C48", Offset = "0x1CC1C48", VA = "0x1CC1C48")]
		private void AddTitle(ref string[] content, string title)
		{
		}

		[Token(Token = "0x600208A")]
		[Address(RVA = "0x1CC1D28", Offset = "0x1CC1D28", VA = "0x1CC1D28")]
		private void AddVector3Title(ref string[] content, string prefix)
		{
		}

		[Token(Token = "0x600208B")]
		[Address(RVA = "0x1CC1F24", Offset = "0x1CC1F24", VA = "0x1CC1F24")]
		private void AddColorTitle(ref string[] content, string prefix)
		{
		}

		[Token(Token = "0x600208C")]
		[Address(RVA = "0x1CC2198", Offset = "0x1CC2198", VA = "0x1CC2198")]
		private void AddVector3(ref string[] content, int index, Vector3 vector)
		{
		}

		[Token(Token = "0x600208D")]
		[Address(RVA = "0x1CC2304", Offset = "0x1CC2304", VA = "0x1CC2304")]
		private void AddColor(ref string[] content, int index, UnityEngine.Color color)
		{
		}

		[Token(Token = "0x600208E")]
		[Address(RVA = "0x1CC21E8", Offset = "0x1CC21E8", VA = "0x1CC21E8")]
		private void AddFloat(ref string[] content, int index, float value)
		{
		}

		[Token(Token = "0x600208F")]
		[Address(RVA = "0x1CC2370", Offset = "0x1CC2370", VA = "0x1CC2370")]
		public void Write(string filePath)
		{
		}
	}
	[Token(Token = "0x200043C")]
	public class SVG : SplineParser
	{
		[Token(Token = "0x2000747")]
		public enum Axis
		{
			[Token(Token = "0x40028B5")]
			X,
			[Token(Token = "0x40028B6")]
			Y,
			[Token(Token = "0x40028B7")]
			Z
		}

		[Token(Token = "0x2000748")]
		internal class PathSegment
		{
			[Token(Token = "0x20007AC")]
			internal enum Type
			{
				[Token(Token = "0x4002ABD")]
				Cubic,
				[Token(Token = "0x4002ABE")]
				CubicShort,
				[Token(Token = "0x4002ABF")]
				Quadratic,
				[Token(Token = "0x4002AC0")]
				QuadraticShort
			}

			[Token(Token = "0x40028B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal Vector3 startTangent;

			[Token(Token = "0x40028B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal Vector3 endTangent;

			[Token(Token = "0x40028BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal Vector3 endPoint;

			[Token(Token = "0x6002B4B")]
			[Address(RVA = "0x33CE498", Offset = "0x33CE498", VA = "0x33CE498")]
			internal PathSegment(Vector2 s, Vector2 e, Vector2 c)
			{
			}

			[Token(Token = "0x6002B4C")]
			[Address(RVA = "0x33CE5CC", Offset = "0x33CE5CC", VA = "0x33CE5CC")]
			internal PathSegment()
			{
			}
		}

		[Token(Token = "0x2000749")]
		public enum Element
		{
			[Token(Token = "0x40028BC")]
			All,
			[Token(Token = "0x40028BD")]
			Path,
			[Token(Token = "0x40028BE")]
			Polygon,
			[Token(Token = "0x40028BF")]
			Ellipse,
			[Token(Token = "0x40028C0")]
			Rectangle,
			[Token(Token = "0x40028C1")]
			Line
		}

		[Serializable]
		[Token(Token = "0x200074A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A9EC", Offset = "0x146A9EC")]
		private sealed class <>c
		{
			[Token(Token = "0x40028C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40028C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<string, bool> <>9__23_0;

			[Token(Token = "0x6002B4E")]
			[Address(RVA = "0x33CE46C", Offset = "0x33CE46C", VA = "0x33CE46C")]
			public <>c()
			{
			}

			[Token(Token = "0x6002B4F")]
			[Address(RVA = "0x33CE474", Offset = "0x33CE474", VA = "0x33CE474")]
			internal bool <ReadPath>b__23_0(string t)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<SplineDefinition> paths;

		[Token(Token = "0x4001C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<SplineDefinition> polygons;

		[Token(Token = "0x4001C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<SplineDefinition> ellipses;

		[Token(Token = "0x4001C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<SplineDefinition> rectangles;

		[Token(Token = "0x4001C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<SplineDefinition> lines;

		[Token(Token = "0x4001C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Transformation> transformBuffer;

		[Token(Token = "0x6002090")]
		[Address(RVA = "0x1CC283C", Offset = "0x1CC283C", VA = "0x1CC283C")]
		public SVG(string filePath)
		{
		}

		[Token(Token = "0x6002091")]
		[Address(RVA = "0x1CC2C1C", Offset = "0x1CC2C1C", VA = "0x1CC2C1C")]
		public SVG(List<SplineComputer> computers)
		{
		}

		[Token(Token = "0x6002092")]
		[Address(RVA = "0x1CC2FC8", Offset = "0x1CC2FC8", VA = "0x1CC2FC8")]
		public void Write(string filePath, Axis ax = Axis.Z)
		{
		}

		[Token(Token = "0x6002093")]
		[Address(RVA = "0x1CC3EE0", Offset = "0x1CC3EE0", VA = "0x1CC3EE0")]
		private Vector2 MapPoint(Vector3 original, Axis ax)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002094")]
		[Address(RVA = "0x1CC2B98", Offset = "0x1CC2B98", VA = "0x1CC2B98")]
		private void Read(XmlDocument doc)
		{
		}

		[Token(Token = "0x6002095")]
		[Address(RVA = "0x1CC3FC8", Offset = "0x1CC3FC8", VA = "0x1CC3FC8")]
		private void Traverse(XmlNodeList nodes)
		{
		}

		[Token(Token = "0x6002096")]
		[Address(RVA = "0x1CC5AF0", Offset = "0x1CC5AF0", VA = "0x1CC5AF0")]
		public List<SplineComputer> CreateSplineComputers(Vector3 position, Quaternion rotation, Element elements = Element.All)
		{
			return null;
		}

		[Token(Token = "0x6002097")]
		[Address(RVA = "0x1CC6138", Offset = "0x1CC6138", VA = "0x1CC6138")]
		public List<Spline> CreateSplines(Element elements = Element.All)
		{
			return null;
		}

		[Token(Token = "0x6002098")]
		[Address(RVA = "0x1CC565C", Offset = "0x1CC565C", VA = "0x1CC565C")]
		private int ReadRectangle(XmlNode rectNode)
		{
			return default(int);
		}

		[Token(Token = "0x6002099")]
		[Address(RVA = "0x1CC5384", Offset = "0x1CC5384", VA = "0x1CC5384")]
		private int ReadLine(XmlNode lineNode)
		{
			return default(int);
		}

		[Token(Token = "0x600209A")]
		[Address(RVA = "0x1CC4F64", Offset = "0x1CC4F64", VA = "0x1CC4F64")]
		private int ReadEllipse(XmlNode ellipseNode)
		{
			return default(int);
		}

		[Token(Token = "0x600209B")]
		[Address(RVA = "0x1CC4C7C", Offset = "0x1CC4C7C", VA = "0x1CC4C7C")]
		private int ReadPolygon(XmlNode polyNode, bool closed)
		{
			return default(int);
		}

		[Token(Token = "0x600209C")]
		[Address(RVA = "0x1CC44F4", Offset = "0x1CC44F4", VA = "0x1CC44F4")]
		private int ParseTransformation(XmlNode node)
		{
			return default(int);
		}

		[Token(Token = "0x600209D")]
		[Address(RVA = "0x1CC6880", Offset = "0x1CC6880", VA = "0x1CC6880")]
		private List<Transformation> ParseTransformations(string transformContent)
		{
			return null;
		}

		[Token(Token = "0x600209E")]
		[Address(RVA = "0x1CC45B0", Offset = "0x1CC45B0", VA = "0x1CC45B0")]
		private int ReadPath(XmlNode pathNode)
		{
			return default(int);
		}

		[Token(Token = "0x600209F")]
		[Address(RVA = "0x1CC72C8", Offset = "0x1CC72C8", VA = "0x1CC72C8")]
		private void PathStart(string name, string coords, bool relative)
		{
		}

		[Token(Token = "0x60020A0")]
		[Address(RVA = "0x1CC74A4", Offset = "0x1CC74A4", VA = "0x1CC74A4")]
		private void PathClose()
		{
		}

		[Token(Token = "0x60020A1")]
		[Address(RVA = "0x1CC74C4", Offset = "0x1CC74C4", VA = "0x1CC74C4")]
		private void PathLineTo(string coords, bool relative)
		{
		}

		[Token(Token = "0x60020A2")]
		[Address(RVA = "0x1CC7650", Offset = "0x1CC7650", VA = "0x1CC7650")]
		private void PathHorizontalLineTo(string coords, bool relative)
		{
		}

		[Token(Token = "0x60020A3")]
		[Address(RVA = "0x1CC76FC", Offset = "0x1CC76FC", VA = "0x1CC76FC")]
		private void PathVerticalLineTo(string coords, bool relative)
		{
		}

		[Token(Token = "0x60020A4")]
		[Address(RVA = "0x1CC77B0", Offset = "0x1CC77B0", VA = "0x1CC77B0")]
		private void PathCurveTo(string coords, PathSegment.Type type, bool relative)
		{
		}

		[Token(Token = "0x60020A5")]
		[Address(RVA = "0x1CC67F0", Offset = "0x1CC67F0", VA = "0x1CC67F0")]
		private void WriteBufferTo(List<SplineDefinition> list)
		{
		}

		[Token(Token = "0x60020A6")]
		[Address(RVA = "0x1CC7D9C", Offset = "0x1CC7D9C", VA = "0x1CC7D9C")]
		private PathSegment[] ParsePathSegment(string coord, PathSegment.Type type)
		{
			return null;
		}

		[Token(Token = "0x60020A7")]
		[Address(RVA = "0x1CC3818", Offset = "0x1CC3818", VA = "0x1CC3818")]
		private string EncodePath(SplineDefinition definition, Axis ax)
		{
			return null;
		}

		[Token(Token = "0x60020A8")]
		[Address(RVA = "0x1CC3568", Offset = "0x1CC3568", VA = "0x1CC3568")]
		private string EncodePolygon(SplineDefinition definition, Axis ax)
		{
			return null;
		}

		[Token(Token = "0x60020A9")]
		[Address(RVA = "0x1CC66B8", Offset = "0x1CC66B8", VA = "0x1CC66B8")]
		private string GetAttributeContent(XmlNode node, string attributeName)
		{
			return null;
		}
	}
	[Token(Token = "0x200043D")]
	public class SplineParser
	{
		[Token(Token = "0x200074B")]
		internal class Transformation
		{
			[Token(Token = "0x40028C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			protected static Matrix4x4 matrix;

			[Token(Token = "0x6002B50")]
			[Address(RVA = "0x33D0824", Offset = "0x33D0824", VA = "0x33D0824")]
			internal static void ResetMatrix()
			{
			}

			[Token(Token = "0x6002B51")]
			[Address(RVA = "0x33D0B00", Offset = "0x33D0B00", VA = "0x33D0B00", Slot = "4")]
			internal virtual void Push()
			{
			}

			[Token(Token = "0x6002B52")]
			[Address(RVA = "0x33D0950", Offset = "0x33D0950", VA = "0x33D0950")]
			internal static void Apply(SplinePoint[] points)
			{
			}

			[Token(Token = "0x6002B53")]
			[Address(RVA = "0x33CEE24", Offset = "0x33CEE24", VA = "0x33CEE24")]
			public Transformation()
			{
			}
		}

		[Token(Token = "0x200074C")]
		internal class Translate : Transformation
		{
			[Token(Token = "0x40028C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Vector2 offset;

			[Token(Token = "0x6002B55")]
			[Address(RVA = "0x33D0B08", Offset = "0x33D0B08", VA = "0x33D0B08")]
			public Translate(Vector2 o)
			{
			}

			[Token(Token = "0x6002B56")]
			[Address(RVA = "0x33D0BB4", Offset = "0x33D0BB4", VA = "0x33D0BB4", Slot = "4")]
			internal override void Push()
			{
			}
		}

		[Token(Token = "0x200074D")]
		internal class Rotate : Transformation
		{
			[Token(Token = "0x40028C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private float angle;

			[Token(Token = "0x6002B57")]
			[Address(RVA = "0x33CEF30", Offset = "0x33CEF30", VA = "0x33CEF30")]
			public Rotate(float a)
			{
			}

			[Token(Token = "0x6002B58")]
			[Address(RVA = "0x33CEFAC", Offset = "0x33CEFAC", VA = "0x33CEFAC", Slot = "4")]
			internal override void Push()
			{
			}
		}

		[Token(Token = "0x200074E")]
		internal class Scale : Transformation
		{
			[Token(Token = "0x40028C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Vector2 multiplier;

			[Token(Token = "0x6002B59")]
			[Address(RVA = "0x33CF1B4", Offset = "0x33CF1B4", VA = "0x33CF1B4")]
			public Scale(Vector2 s)
			{
			}

			[Token(Token = "0x6002B5A")]
			[Address(RVA = "0x33CF260", Offset = "0x33CF260", VA = "0x33CF260", Slot = "4")]
			internal override void Push()
			{
			}
		}

		[Token(Token = "0x200074F")]
		internal class SkewX : Transformation
		{
			[Token(Token = "0x40028C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private float amount;

			[Token(Token = "0x6002B5B")]
			[Address(RVA = "0x33CF46C", Offset = "0x33CF46C", VA = "0x33CF46C")]
			public SkewX(float a)
			{
			}

			[Token(Token = "0x6002B5C")]
			[Address(RVA = "0x33CF4E8", Offset = "0x33CF4E8", VA = "0x33CF4E8", Slot = "4")]
			internal override void Push()
			{
			}
		}

		[Token(Token = "0x2000750")]
		internal class SkewY : Transformation
		{
			[Token(Token = "0x40028C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private float amount;

			[Token(Token = "0x6002B5D")]
			[Address(RVA = "0x33CF6B8", Offset = "0x33CF6B8", VA = "0x33CF6B8")]
			public SkewY(float a)
			{
			}

			[Token(Token = "0x6002B5E")]
			[Address(RVA = "0x33CF734", Offset = "0x33CF734", VA = "0x33CF734", Slot = "4")]
			internal override void Push()
			{
			}
		}

		[Token(Token = "0x2000751")]
		internal class MatrixTransform : Transformation
		{
			[Token(Token = "0x40028CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Matrix4x4 transformMatrix;

			[Token(Token = "0x6002B5F")]
			[Address(RVA = "0x33CEC98", Offset = "0x33CEC98", VA = "0x33CEC98")]
			public MatrixTransform(float a, float b, float c, float d, float e, float f)
			{
			}

			[Token(Token = "0x6002B60")]
			[Address(RVA = "0x33CEE2C", Offset = "0x33CEE2C", VA = "0x33CEE2C", Slot = "4")]
			internal override void Push()
			{
			}
		}

		[Token(Token = "0x2000752")]
		internal class SplineDefinition
		{
			[Token(Token = "0x40028CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal string name;

			[Token(Token = "0x40028CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal Spline.Type type;

			[Token(Token = "0x40028CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal List<SplinePoint> points;

			[Token(Token = "0x40028CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool closed;

			[Token(Token = "0x40028CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal Vector3 position;

			[Token(Token = "0x40028D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal Vector3 tangent;

			[Token(Token = "0x40028D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			internal Vector3 tangent2;

			[Token(Token = "0x40028D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			internal Vector3 normal;

			[Token(Token = "0x40028D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			internal float size;

			[Token(Token = "0x40028D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			internal UnityEngine.Color color;

			[Token(Token = "0x170005E2")]
			internal int pointCount
			{
				[Token(Token = "0x6002B61")]
				[Address(RVA = "0x33CF904", Offset = "0x33CF904", VA = "0x33CF904")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x6002B62")]
			[Address(RVA = "0x33CF954", Offset = "0x33CF954", VA = "0x33CF954")]
			internal SplineDefinition(string n, Spline.Type t)
			{
			}

			[Token(Token = "0x6002B63")]
			[Address(RVA = "0x33CFA9C", Offset = "0x33CFA9C", VA = "0x33CFA9C")]
			internal SplineDefinition(string n, Spline spline)
			{
			}

			[Token(Token = "0x6002B64")]
			[Address(RVA = "0x33CFC80", Offset = "0x33CFC80", VA = "0x33CFC80")]
			internal SplinePoint GetLastPoint()
			{
				return default(SplinePoint);
			}

			[Token(Token = "0x6002B65")]
			[Address(RVA = "0x33CFD1C", Offset = "0x33CFD1C", VA = "0x33CFD1C")]
			internal void SetLastPoint(SplinePoint point)
			{
			}

			[Token(Token = "0x6002B66")]
			[Address(RVA = "0x33CFDC8", Offset = "0x33CFDC8", VA = "0x33CFDC8")]
			internal void CreateClosingPoint()
			{
			}

			[Token(Token = "0x6002B67")]
			[Address(RVA = "0x33CFEAC", Offset = "0x33CFEAC", VA = "0x33CFEAC")]
			internal void CreateSmooth()
			{
			}

			[Token(Token = "0x6002B68")]
			[Address(RVA = "0x33CFFD0", Offset = "0x33CFFD0", VA = "0x33CFFD0")]
			internal void CreateBroken()
			{
			}

			[Token(Token = "0x6002B69")]
			[Address(RVA = "0x33D0170", Offset = "0x33D0170", VA = "0x33D0170")]
			internal void CreateLinear()
			{
			}

			[Token(Token = "0x6002B6A")]
			[Address(RVA = "0x33D0184", Offset = "0x33D0184", VA = "0x33D0184")]
			internal SplineComputer CreateSplineComputer(Vector3 position, Quaternion rotation)
			{
				return null;
			}

			[Token(Token = "0x6002B6B")]
			[Address(RVA = "0x33D0390", Offset = "0x33D0390", VA = "0x33D0390")]
			internal Spline CreateSpline()
			{
				return null;
			}

			[Token(Token = "0x6002B6C")]
			[Address(RVA = "0x33D05B0", Offset = "0x33D05B0", VA = "0x33D05B0")]
			internal void Transform(List<Transformation> trs)
			{
			}
		}

		[Token(Token = "0x4001C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected string fileName;

		[Token(Token = "0x4001C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal SplineDefinition buffer;

		[Token(Token = "0x1700040C")]
		public string name
		{
			[Token(Token = "0x60020AA")]
			[Address(RVA = "0x33CE664", Offset = "0x33CE664", VA = "0x33CE664")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020AB")]
		[Address(RVA = "0x33CE66C", Offset = "0x33CE66C", VA = "0x33CE66C")]
		internal Vector2[] ParseVector2(string coord)
		{
			return null;
		}

		[Token(Token = "0x60020AC")]
		[Address(RVA = "0x33CEA7C", Offset = "0x33CEA7C", VA = "0x33CEA7C")]
		internal float[] ParseFloat(string coord)
		{
			return null;
		}

		[Token(Token = "0x60020AD")]
		[Address(RVA = "0x33CE878", Offset = "0x33CE878", VA = "0x33CE878")]
		internal List<float> ParseFloatArray(string content)
		{
			return null;
		}

		[Token(Token = "0x60020AE")]
		[Address(RVA = "0x33CEB74", Offset = "0x33CEB74", VA = "0x33CEB74")]
		public bool IsWHiteSpace(string s)
		{
			return default(bool);
		}

		[Token(Token = "0x60020AF")]
		[Address(RVA = "0x33CEC38", Offset = "0x33CEC38", VA = "0x33CEC38")]
		public SplineParser()
		{
		}
	}
}
namespace CurvedUI
{
	[Token(Token = "0x200043E")]
	public class CUI_AnimateCurvedFillOnStart : MonoBehaviour
	{
		[Token(Token = "0x60020B0")]
		[Address(RVA = "0x2D0DA2C", Offset = "0x2D0DA2C", VA = "0x2D0DA2C")]
		private void Update()
		{
		}

		[Token(Token = "0x60020B1")]
		[Address(RVA = "0x2D0DBE0", Offset = "0x2D0DBE0", VA = "0x2D0DBE0")]
		public CUI_AnimateCurvedFillOnStart()
		{
		}
	}
	[Token(Token = "0x200043F")]
	public class CUI_CameraController : MonoBehaviour
	{
		[Token(Token = "0x4001C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CUI_CameraController instance;

		[Token(Token = "0x4001C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform CameraObject;

		[Token(Token = "0x4001C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float rotationMargin;

		[Token(Token = "0x4001C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private bool runInEditorOnly;

		[Token(Token = "0x60020B2")]
		[Address(RVA = "0x2D0DBE8", Offset = "0x2D0DBE8", VA = "0x2D0DBE8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60020B3")]
		[Address(RVA = "0x2D0DC40", Offset = "0x2D0DC40", VA = "0x2D0DC40")]
		public CUI_CameraController()
		{
		}
	}
	[Token(Token = "0x2000440")]
	public class CUI_ChangeColor : MonoBehaviour
	{
		[Token(Token = "0x60020B4")]
		[Address(RVA = "0x2D0DC58", Offset = "0x2D0DC58", VA = "0x2D0DC58")]
		public void ChangeColorToBlue()
		{
		}

		[Token(Token = "0x60020B5")]
		[Address(RVA = "0x2D0DCD4", Offset = "0x2D0DCD4", VA = "0x2D0DCD4")]
		public void ChangeColorToCyan()
		{
		}

		[Token(Token = "0x60020B6")]
		[Address(RVA = "0x2D0DD50", Offset = "0x2D0DD50", VA = "0x2D0DD50")]
		public void ChangeColorToWhite()
		{
		}

		[Token(Token = "0x60020B7")]
		[Address(RVA = "0x2D0DDCC", Offset = "0x2D0DDCC", VA = "0x2D0DDCC")]
		public CUI_ChangeColor()
		{
		}
	}
	[Token(Token = "0x2000441")]
	public class CUI_ChangeValueOnHold : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4001C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool pressed;

		[Token(Token = "0x4001C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool selected;

		[Token(Token = "0x4001C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEngine.UI.Image bg;

		[Token(Token = "0x4001C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEngine.Color SelectedColor;

		[Token(Token = "0x4001C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private UnityEngine.Color NormalColor;

		[Token(Token = "0x4001C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private CanvasGroup IntroCG;

		[Token(Token = "0x4001C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private CanvasGroup MenuCG;

		[Token(Token = "0x60020B8")]
		[Address(RVA = "0x2D0DDD4", Offset = "0x2D0DDD4", VA = "0x2D0DDD4")]
		private void Update()
		{
		}

		[Token(Token = "0x60020B9")]
		[Address(RVA = "0x2D0DE58", Offset = "0x2D0DE58", VA = "0x2D0DE58")]
		private void ChangeVal()
		{
		}

		[Token(Token = "0x60020BA")]
		[Address(RVA = "0x2D0DFC0", Offset = "0x2D0DFC0", VA = "0x2D0DFC0", Slot = "4")]
		public void OnPointerEnter(PointerEventData data)
		{
		}

		[Token(Token = "0x60020BB")]
		[Address(RVA = "0x2D0E054", Offset = "0x2D0E054", VA = "0x2D0E054", Slot = "5")]
		public void OnPointerExit(PointerEventData data)
		{
		}

		[Token(Token = "0x60020BC")]
		[Address(RVA = "0x2D0E0E4", Offset = "0x2D0E0E4", VA = "0x2D0E0E4")]
		public CUI_ChangeValueOnHold()
		{
		}
	}
	[Token(Token = "0x2000442")]
	public class CUI_DragBetweenCanvases : MonoBehaviour, IBeginDragHandler, IEventSystemHandler, IEndDragHandler, IDragHandler
	{
		[Token(Token = "0x4001C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector2 dragPoint;

		[Token(Token = "0x60020BD")]
		[Address(RVA = "0x2D0E0EC", Offset = "0x2D0E0EC", VA = "0x2D0E0EC", Slot = "4")]
		public void OnBeginDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x60020BE")]
		[Address(RVA = "0x2D0E430", Offset = "0x2D0E430", VA = "0x2D0E430", Slot = "6")]
		public void OnDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x60020BF")]
		[Address(RVA = "0x2D0E94C", Offset = "0x2D0E94C", VA = "0x2D0E94C", Slot = "5")]
		public void OnEndDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x60020C0")]
		[Address(RVA = "0x2D0E234", Offset = "0x2D0E234", VA = "0x2D0E234")]
		private void RaycastPosition(out Vector2 newPos)
		{
		}

		[Token(Token = "0x60020C1")]
		[Address(RVA = "0x2D0E9B8", Offset = "0x2D0E9B8", VA = "0x2D0E9B8")]
		public CUI_DragBetweenCanvases()
		{
		}
	}
	[Token(Token = "0x2000443")]
	public class CUI_GunController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000753")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146A9FC", Offset = "0x146A9FC")]
		private sealed class <>c
		{
			[Token(Token = "0x40028D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40028D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<GameObject> <>9__2_0;

			[Token(Token = "0x6002B6E")]
			[Address(RVA = "0x2D0EEBC", Offset = "0x2D0EEBC", VA = "0x2D0EEBC")]
			public <>c()
			{
			}

			[Token(Token = "0x6002B6F")]
			[Address(RVA = "0x2D0EEC4", Offset = "0x2D0EEC4", VA = "0x2D0EEC4")]
			internal bool <Update>b__2_0(GameObject x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CurvedUISettings ControlledCanvas;

		[Token(Token = "0x4001C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform LaserBeamTransform;

		[Token(Token = "0x60020C2")]
		[Address(RVA = "0x2D0E9C0", Offset = "0x2D0E9C0", VA = "0x2D0E9C0")]
		private void Update()
		{
		}

		[Token(Token = "0x60020C3")]
		[Address(RVA = "0x2D0EE4C", Offset = "0x2D0EE4C", VA = "0x2D0EE4C")]
		public CUI_GunController()
		{
		}
	}
	[Token(Token = "0x2000444")]
	public class CUI_GunMovement : MonoBehaviour
	{
		[Token(Token = "0x4001C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CurvedUISettings mySettings;

		[Token(Token = "0x4001C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform pivot;

		[Token(Token = "0x4001C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float sensitivity;

		[Token(Token = "0x4001C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 lastMouse;

		[Token(Token = "0x60020C4")]
		[Address(RVA = "0x2D0EF8C", Offset = "0x2D0EF8C", VA = "0x2D0EF8C")]
		private void Start()
		{
		}

		[Token(Token = "0x60020C5")]
		[Address(RVA = "0x2D0EFB8", Offset = "0x2D0EFB8", VA = "0x2D0EFB8")]
		private void Update()
		{
		}

		[Token(Token = "0x60020C6")]
		[Address(RVA = "0x2D0F1D4", Offset = "0x2D0F1D4", VA = "0x2D0F1D4")]
		public CUI_GunMovement()
		{
		}
	}
	[Token(Token = "0x2000445")]
	public class CUI_OrientOnCurvedSpace : MonoBehaviour
	{
		[Token(Token = "0x4001C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CurvedUISettings mySettings;

		[Token(Token = "0x60020C7")]
		[Address(RVA = "0x2D0F1E8", Offset = "0x2D0F1E8", VA = "0x2D0F1E8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60020C8")]
		[Address(RVA = "0x2D0F248", Offset = "0x2D0F248", VA = "0x2D0F248")]
		private void Update()
		{
		}

		[Token(Token = "0x60020C9")]
		[Address(RVA = "0x2D0F440", Offset = "0x2D0F440", VA = "0x2D0F440")]
		public CUI_OrientOnCurvedSpace()
		{
		}
	}
	[Token(Token = "0x2000446")]
	public class CUI_PerlinNoisePosition : MonoBehaviour
	{
		[Token(Token = "0x4001C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float samplingSpeed;

		[Token(Token = "0x4001C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector2 Range;

		[Token(Token = "0x4001C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RectTransform rectie;

		[Token(Token = "0x60020CA")]
		[Address(RVA = "0x2D0F448", Offset = "0x2D0F448", VA = "0x2D0F448")]
		private void Start()
		{
		}

		[Token(Token = "0x60020CB")]
		[Address(RVA = "0x2D0F4C0", Offset = "0x2D0F4C0", VA = "0x2D0F4C0")]
		private void Update()
		{
		}

		[Token(Token = "0x60020CC")]
		[Address(RVA = "0x2D0F618", Offset = "0x2D0F618", VA = "0x2D0F618")]
		public CUI_PerlinNoisePosition()
		{
		}
	}
	[Token(Token = "0x2000447")]
	public class CUI_PerlinNoiseRotation : MonoBehaviour
	{
		[Token(Token = "0x4001C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float samplingSpeed;

		[Token(Token = "0x4001C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float maxrotation;

		[Token(Token = "0x4001C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RectTransform rectie;

		[Token(Token = "0x60020CD")]
		[Address(RVA = "0x2D0F628", Offset = "0x2D0F628", VA = "0x2D0F628")]
		private void Start()
		{
		}

		[Token(Token = "0x60020CE")]
		[Address(RVA = "0x2D0F6A0", Offset = "0x2D0F6A0", VA = "0x2D0F6A0")]
		private void Update()
		{
		}

		[Token(Token = "0x60020CF")]
		[Address(RVA = "0x2D0F794", Offset = "0x2D0F794", VA = "0x2D0F794")]
		public CUI_PerlinNoiseRotation()
		{
		}
	}
	[Token(Token = "0x2000448")]
	public class CUI_PickImageFromSet : MonoBehaviour
	{
		[Token(Token = "0x4001C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static CUI_PickImageFromSet picked;

		[Token(Token = "0x60020D0")]
		[Address(RVA = "0x2D0F7A8", Offset = "0x2D0F7A8", VA = "0x2D0F7A8")]
		public void PickThis()
		{
		}

		[Token(Token = "0x60020D1")]
		[Address(RVA = "0x2D0F974", Offset = "0x2D0F974", VA = "0x2D0F974")]
		public CUI_PickImageFromSet()
		{
		}
	}
	[Token(Token = "0x2000449")]
	public class CUI_RaycastToCanvas : MonoBehaviour
	{
		[Token(Token = "0x4001C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x60020D3")]
		[Address(RVA = "0x2D0F980", Offset = "0x2D0F980", VA = "0x2D0F980")]
		private void Start()
		{
		}

		[Token(Token = "0x60020D4")]
		[Address(RVA = "0x2D0F9E0", Offset = "0x2D0F9E0", VA = "0x2D0F9E0")]
		private void Update()
		{
		}

		[Token(Token = "0x60020D5")]
		[Address(RVA = "0x2D0FAE4", Offset = "0x2D0FAE4", VA = "0x2D0FAE4")]
		public CUI_RaycastToCanvas()
		{
		}
	}
	[Token(Token = "0x200044A")]
	public class CUI_RiseChildrenOverTime : MonoBehaviour
	{
		[Token(Token = "0x4001C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float current;

		[Token(Token = "0x4001C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float Speed;

		[Token(Token = "0x4001C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float RiseBy;

		[Token(Token = "0x60020D6")]
		[Address(RVA = "0x2D0FAEC", Offset = "0x2D0FAEC", VA = "0x2D0FAEC")]
		private void Start()
		{
		}

		[Token(Token = "0x60020D7")]
		[Address(RVA = "0x2D0FAF0", Offset = "0x2D0FAF0", VA = "0x2D0FAF0")]
		private void Update()
		{
		}

		[Token(Token = "0x60020D8")]
		[Address(RVA = "0x2D0FCE8", Offset = "0x2D0FCE8", VA = "0x2D0FCE8")]
		public CUI_RiseChildrenOverTime()
		{
		}
	}
	[Token(Token = "0x200044B")]
	public class CUI_TMPChecker : MonoBehaviour
	{
		[Token(Token = "0x4001C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject testMsg;

		[Token(Token = "0x4001C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject enabledMsg;

		[Token(Token = "0x4001C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject disabledMsg;

		[Token(Token = "0x60020D9")]
		[Address(RVA = "0x2D0FCFC", Offset = "0x2D0FCFC", VA = "0x2D0FCFC")]
		private void Start()
		{
		}

		[Token(Token = "0x60020DA")]
		[Address(RVA = "0x2D0FD78", Offset = "0x2D0FD78", VA = "0x2D0FD78")]
		public CUI_TMPChecker()
		{
		}
	}
	[Token(Token = "0x200044C")]
	public class CUI_ViveButtonState : MonoBehaviour
	{
		[Token(Token = "0x2000754")]
		private enum ViveButton
		{
			[Token(Token = "0x40028D8")]
			Trigger,
			[Token(Token = "0x40028D9")]
			TouchpadTouch,
			[Token(Token = "0x40028DA")]
			TouchpadPress,
			[Token(Token = "0x40028DB")]
			Grip,
			[Token(Token = "0x40028DC")]
			Menu
		}

		[Token(Token = "0x4001C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UnityEngine.Color ActiveColor;

		[Token(Token = "0x4001C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEngine.Color InActiveColor;

		[Token(Token = "0x4001C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ViveButton ShowStateFor;

		[Token(Token = "0x60020DB")]
		[Address(RVA = "0x2D0FD80", Offset = "0x2D0FD80", VA = "0x2D0FD80")]
		public CUI_ViveButtonState()
		{
		}
	}
	[Token(Token = "0x200044D")]
	public class CUI_ViveHapticPulse : MonoBehaviour
	{
		[Token(Token = "0x4001C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float PulseStrength;

		[Token(Token = "0x60020DC")]
		[Address(RVA = "0x2D0FDC4", Offset = "0x2D0FDC4", VA = "0x2D0FDC4")]
		private void Start()
		{
		}

		[Token(Token = "0x60020DD")]
		[Address(RVA = "0x2D0FDD0", Offset = "0x2D0FDD0", VA = "0x2D0FDD0")]
		public void SetPulseStrength(float newStr)
		{
		}

		[Token(Token = "0x60020DE")]
		[Address(RVA = "0x2D0FE54", Offset = "0x2D0FE54", VA = "0x2D0FE54")]
		public void TriggerPulse()
		{
		}

		[Token(Token = "0x60020DF")]
		[Address(RVA = "0x2D0FE58", Offset = "0x2D0FE58", VA = "0x2D0FE58")]
		public CUI_ViveHapticPulse()
		{
		}
	}
	[Token(Token = "0x200044E")]
	public class CUI_WorldSpaceCursorFollow : MonoBehaviour
	{
		[Token(Token = "0x4001C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x60020E0")]
		[Address(RVA = "0x2D0FE60", Offset = "0x2D0FE60", VA = "0x2D0FE60")]
		private void Start()
		{
		}

		[Token(Token = "0x60020E1")]
		[Address(RVA = "0x2D0FFC8", Offset = "0x2D0FFC8", VA = "0x2D0FFC8")]
		private void Update()
		{
		}

		[Token(Token = "0x60020E2")]
		[Address(RVA = "0x2D1009C", Offset = "0x2D1009C", VA = "0x2D1009C")]
		public CUI_WorldSpaceCursorFollow()
		{
		}
	}
	[Token(Token = "0x200044F")]
	public class CUI_WorldSpaceMouseMultipleCanvases : MonoBehaviour
	{
		[Token(Token = "0x4001C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<CurvedUISettings> ControlledCanvases;

		[Token(Token = "0x4001C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform WorldSpaceMouse;

		[Token(Token = "0x4001C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CurvedUISettings MouseCanvas;

		[Token(Token = "0x60020E3")]
		[Address(RVA = "0x2D100A4", Offset = "0x2D100A4", VA = "0x2D100A4")]
		private void Update()
		{
		}

		[Token(Token = "0x60020E4")]
		[Address(RVA = "0x2D10444", Offset = "0x2D10444", VA = "0x2D10444")]
		public CUI_WorldSpaceMouseMultipleCanvases()
		{
		}
	}
	[Token(Token = "0x2000450")]
	public class CUI_draggable : MonoBehaviour, IBeginDragHandler, IEventSystemHandler, IEndDragHandler, IDragHandler
	{
		[Token(Token = "0x4001C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector2 savedVector;

		[Token(Token = "0x4001C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool isDragged;

		[Token(Token = "0x60020E5")]
		[Address(RVA = "0x2D1044C", Offset = "0x2D1044C", VA = "0x2D1044C", Slot = "4")]
		public void OnBeginDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x60020E6")]
		[Address(RVA = "0x2D10798", Offset = "0x2D10798", VA = "0x2D10798", Slot = "6")]
		public void OnDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x60020E7")]
		[Address(RVA = "0x2D1079C", Offset = "0x2D1079C", VA = "0x2D1079C", Slot = "5")]
		public void OnEndDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x60020E8")]
		[Address(RVA = "0x2D10814", Offset = "0x2D10814", VA = "0x2D10814")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60020E9")]
		[Address(RVA = "0x2D1059C", Offset = "0x2D1059C", VA = "0x2D1059C")]
		private void RaycastPosition(out Vector2 newPos)
		{
		}

		[Token(Token = "0x60020EA")]
		[Address(RVA = "0x2D10928", Offset = "0x2D10928", VA = "0x2D10928")]
		public CUI_draggable()
		{
		}
	}
	[Token(Token = "0x2000451")]
	public class CUI_inventory_paralax : MonoBehaviour
	{
		[Token(Token = "0x4001C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform front;

		[Token(Token = "0x4001C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform back;

		[Token(Token = "0x4001C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 initFG;

		[Token(Token = "0x4001C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 initBG;

		[Token(Token = "0x4001C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float change;

		[Token(Token = "0x60020EB")]
		[Address(RVA = "0x2D10930", Offset = "0x2D10930", VA = "0x2D10930")]
		private void Start()
		{
		}

		[Token(Token = "0x60020EC")]
		[Address(RVA = "0x2D10980", Offset = "0x2D10980", VA = "0x2D10980")]
		private void Update()
		{
		}

		[Token(Token = "0x60020ED")]
		[Address(RVA = "0x2D10BBC", Offset = "0x2D10BBC", VA = "0x2D10BBC")]
		public CUI_inventory_paralax()
		{
		}
	}
	[Token(Token = "0x2000452")]
	public class CurvedUIEventSystem : EventSystem
	{
		[Token(Token = "0x4001C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CurvedUIEventSystem instance;

		[Token(Token = "0x60020EE")]
		[Address(RVA = "0x2D10BCC", Offset = "0x2D10BCC", VA = "0x2D10BCC", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60020EF")]
		[Address(RVA = "0x2D10C30", Offset = "0x2D10C30", VA = "0x2D10C30", Slot = "17")]
		protected override void OnApplicationFocus(bool hasFocus)
		{
		}

		[Token(Token = "0x60020F0")]
		[Address(RVA = "0x2D10C3C", Offset = "0x2D10C3C", VA = "0x2D10C3C")]
		public CurvedUIEventSystem()
		{
		}
	}
	[Token(Token = "0x2000453")]
	public static class CurvedUIExtensionMethods
	{
		[Token(Token = "0x60020F1")]
		[Address(RVA = "0x2D10CA4", Offset = "0x2D10CA4", VA = "0x2D10CA4")]
		public static bool AlmostEqual(this Vector3 a, Vector3 b, double accuracy = 0.01)
		{
			return default(bool);
		}

		[Token(Token = "0x60020F2")]
		[Address(RVA = "0x2D0F5FC", Offset = "0x2D0F5FC", VA = "0x2D0F5FC")]
		public static float Remap(this float value, float from1, float to1, float from2, float to2)
		{
			return default(float);
		}

		[Token(Token = "0x60020F3")]
		[Address(RVA = "0x2D10D70", Offset = "0x2D10D70", VA = "0x2D10D70")]
		public static float RemapAndClamp(this float value, float from1, float to1, float from2, float to2)
		{
			return default(float);
		}

		[Token(Token = "0x60020F4")]
		[Address(RVA = "0x2D10E1C", Offset = "0x2D10E1C", VA = "0x2D10E1C")]
		public static float Remap(this int value, float from1, float to1, float from2, float to2)
		{
			return default(float);
		}

		[Token(Token = "0x60020F5")]
		[Address(RVA = "0x2D10E3C", Offset = "0x2D10E3C", VA = "0x2D10E3C")]
		public static double Remap(this double value, double from1, double to1, double from2, double to2)
		{
			return default(double);
		}

		[Token(Token = "0x60020F6")]
		[Address(RVA = "0x2D10D94", Offset = "0x2D10D94", VA = "0x2D10D94")]
		public static float Clamp(this float value, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x60020F7")]
		[Address(RVA = "0x2D10E58", Offset = "0x2D10E58", VA = "0x2D10E58")]
		public static float Clamp(this int value, int min, int max)
		{
			return default(float);
		}

		[Token(Token = "0x60020F8")]
		[Address(RVA = "0x2D10EE0", Offset = "0x2D10EE0", VA = "0x2D10EE0")]
		public static int Abs(this int value)
		{
			return default(int);
		}

		[Token(Token = "0x60020F9")]
		[Address(RVA = "0x2D10F48", Offset = "0x2D10F48", VA = "0x2D10F48")]
		public static float Abs(this float value)
		{
			return default(float);
		}

		[Token(Token = "0x60020FA")]
		[Address(RVA = "0x2D10FB4", Offset = "0x2D10FB4", VA = "0x2D10FB4")]
		public static int ToInt(this float value)
		{
			return default(int);
		}

		[Token(Token = "0x60020FB")]
		[Address(RVA = "0x2D11024", Offset = "0x2D11024", VA = "0x2D11024")]
		public static int FloorToInt(this float value)
		{
			return default(int);
		}

		[Token(Token = "0x60020FC")]
		[Address(RVA = "0x2D11094", Offset = "0x2D11094", VA = "0x2D11094")]
		public static int CeilToInt(this float value)
		{
			return default(int);
		}

		[Token(Token = "0x60020FD")]
		[Address(RVA = "0x2D0EDDC", Offset = "0x2D0EDDC", VA = "0x2D0EDDC")]
		public static Vector3 ModifyX(this Vector3 trans, float newVal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60020FE")]
		[Address(RVA = "0x2D0EE14", Offset = "0x2D0EE14", VA = "0x2D0EE14")]
		public static Vector3 ModifyY(this Vector3 trans, float newVal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60020FF")]
		[Address(RVA = "0x2D0EDA4", Offset = "0x2D0EDA4", VA = "0x2D0EDA4")]
		public static Vector3 ModifyZ(this Vector3 trans, float newVal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002100")]
		[Address(RVA = "0x2D11104", Offset = "0x2D11104", VA = "0x2D11104")]
		public static Vector2 ModifyVectorX(this Vector2 trans, float newVal)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002101")]
		[Address(RVA = "0x2D111A4", Offset = "0x2D111A4", VA = "0x2D111A4")]
		public static Vector2 ModifyVectorY(this Vector2 trans, float newVal)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002102")]
		[Address(RVA = "0x2D0E88C", Offset = "0x2D0E88C", VA = "0x2D0E88C")]
		public static void ResetTransform(this Transform trans)
		{
		}

		[Token(Token = "0x6002103")]
		public static T AddComponentIfMissing<T>(this GameObject go) where T : Component
		{
			return null;
		}

		[Token(Token = "0x6002104")]
		public static T AddComponentIfMissing<T>(this Component go) where T : Component
		{
			return null;
		}
	}
	[Token(Token = "0x2000454")]
	public class CurvedUIHandSwitcher : MonoBehaviour
	{
		[Token(Token = "0x4001C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public GameObject LaserBeam;

		[Token(Token = "0x4001C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x147984C", Offset = "0x147984C")]
		private bool autoSwitchHands;

		[Token(Token = "0x4001C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x1479898", Offset = "0x1479898")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1479898", Offset = "0x1479898")]
		private Transform leftHandOverride;

		[Token(Token = "0x4001C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1479908", Offset = "0x1479908")]
		private Transform rightHandOverride;

		[Token(Token = "0x6002105")]
		[Address(RVA = "0x2D11244", Offset = "0x2D11244", VA = "0x2D11244")]
		private void Start()
		{
		}

		[Token(Token = "0x6002106")]
		[Address(RVA = "0x2D11248", Offset = "0x2D11248", VA = "0x2D11248")]
		private void Update()
		{
		}

		[Token(Token = "0x6002107")]
		[Address(RVA = "0x2D115AC", Offset = "0x2D115AC", VA = "0x2D115AC")]
		private void SwitchHandTo(CurvedUIInputModule.Hand newHand)
		{
		}

		[Token(Token = "0x6002108")]
		[Address(RVA = "0x2D11914", Offset = "0x2D11914", VA = "0x2D11914")]
		public void EnableLaserBeam()
		{
		}

		[Token(Token = "0x6002109")]
		[Address(RVA = "0x2D11934", Offset = "0x2D11934", VA = "0x2D11934")]
		public void DisableLaserBeam()
		{
		}

		[Token(Token = "0x600210A")]
		[Address(RVA = "0x2D11954", Offset = "0x2D11954", VA = "0x2D11954")]
		public CurvedUIHandSwitcher()
		{
		}
	}
	[Token(Token = "0x2000455")]
	public class CurvedUIInputFieldCaret : MonoBehaviour, ISelectHandler, IEventSystemHandler, IDeselectHandler
	{
		[Token(Token = "0x2000755")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146AA0C", Offset = "0x146AA0C")]
		private sealed class <CaretBlinker>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40028DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40028DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40028DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CurvedUIInputFieldCaret <>4__this;

			[Token(Token = "0x170005E3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B73")]
				[Address(RVA = "0x1BF7604", Offset = "0x1BF7604", VA = "0x1BF7604", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005E4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B75")]
				[Address(RVA = "0x1BF766C", Offset = "0x1BF766C", VA = "0x1BF766C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B70")]
			[Address(RVA = "0x1BF71B0", Offset = "0x1BF71B0", VA = "0x1BF71B0")]
			[DebuggerHidden]
			public <CaretBlinker>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6002B71")]
			[Address(RVA = "0x1BF74DC", Offset = "0x1BF74DC", VA = "0x1BF74DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B72")]
			[Address(RVA = "0x1BF74E0", Offset = "0x1BF74E0", VA = "0x1BF74E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B74")]
			[Address(RVA = "0x1BF760C", Offset = "0x1BF760C", VA = "0x1BF760C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private InputField myField;

		[Token(Token = "0x4001C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RectTransform myCaret;

		[Token(Token = "0x4001C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityEngine.Color origCaretColor;

		[Token(Token = "0x4001C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UnityEngine.Color origSelectionColor;

		[Token(Token = "0x4001C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool selected;

		[Token(Token = "0x4001C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool selectingText;

		[Token(Token = "0x4001C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int lastCharDist;

		[Token(Token = "0x1700040D")]
		public UnityEngine.Color CaretColor
		{
			[Token(Token = "0x6002113")]
			[Address(RVA = "0x1BF7464", Offset = "0x1BF7464", VA = "0x1BF7464")]
			get
			{
				return default(UnityEngine.Color);
			}
			[Token(Token = "0x6002114")]
			[Address(RVA = "0x1BF7470", Offset = "0x1BF7470", VA = "0x1BF7470")]
			set
			{
			}
		}

		[Token(Token = "0x1700040E")]
		public UnityEngine.Color SelectionColor
		{
			[Token(Token = "0x6002115")]
			[Address(RVA = "0x1BF747C", Offset = "0x1BF747C", VA = "0x1BF747C")]
			get
			{
				return default(UnityEngine.Color);
			}
			[Token(Token = "0x6002116")]
			[Address(RVA = "0x1BF7488", Offset = "0x1BF7488", VA = "0x1BF7488")]
			set
			{
			}
		}

		[Token(Token = "0x1700040F")]
		public float CaretBlinkRate
		{
			[Token(Token = "0x6002117")]
			[Address(RVA = "0x1BF7494", Offset = "0x1BF7494", VA = "0x1BF7494")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002118")]
			[Address(RVA = "0x1BF74B0", Offset = "0x1BF74B0", VA = "0x1BF74B0")]
			set
			{
			}
		}

		[Token(Token = "0x600210B")]
		[Address(RVA = "0x1BF697C", Offset = "0x1BF697C", VA = "0x1BF697C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600210C")]
		[Address(RVA = "0x1BF69DC", Offset = "0x1BF69DC", VA = "0x1BF69DC")]
		private void Update()
		{
		}

		[Token(Token = "0x600210D")]
		[Address(RVA = "0x1BF6D1C", Offset = "0x1BF6D1C", VA = "0x1BF6D1C", Slot = "4")]
		public void OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x600210E")]
		[Address(RVA = "0x1BF7178", Offset = "0x1BF7178", VA = "0x1BF7178", Slot = "5")]
		public void OnDeselect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x600210F")]
		[Address(RVA = "0x1BF70FC", Offset = "0x1BF70FC", VA = "0x1BF70FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1486F18", Offset = "0x1486F18")]
		private IEnumerator CaretBlinker()
		{
			return null;
		}

		[Token(Token = "0x6002110")]
		[Address(RVA = "0x1BF6DDC", Offset = "0x1BF6DDC", VA = "0x1BF6DDC")]
		private void CreateCaret()
		{
		}

		[Token(Token = "0x6002111")]
		[Address(RVA = "0x1BF69EC", Offset = "0x1BF69EC", VA = "0x1BF69EC")]
		private void UpdateCaret()
		{
		}

		[Token(Token = "0x6002112")]
		[Address(RVA = "0x1BF71DC", Offset = "0x1BF71DC", VA = "0x1BF71DC")]
		private Vector2 GetLocalPositionInText(int charNo)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002119")]
		[Address(RVA = "0x1BF74CC", Offset = "0x1BF74CC", VA = "0x1BF74CC")]
		public CurvedUIInputFieldCaret()
		{
		}
	}
	[Token(Token = "0x2000456")]
	public class CurvedUILaserBeam : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000756")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146AA1C", Offset = "0x146AA1C")]
		private sealed class <>c
		{
			[Token(Token = "0x40028E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40028E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<GameObject> <>9__3_0;

			[Token(Token = "0x6002B77")]
			[Address(RVA = "0x1BF7D4C", Offset = "0x1BF7D4C", VA = "0x1BF7D4C")]
			public <>c()
			{
			}

			[Token(Token = "0x6002B78")]
			[Address(RVA = "0x1BF7D54", Offset = "0x1BF7D54", VA = "0x1BF7D54")]
			internal bool <Update>b__3_0(GameObject x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform LaserBeamTransform;

		[Token(Token = "0x4001C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform LaserBeamDot;

		[Token(Token = "0x4001C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool hideWhenNotAimingAtCanvas;

		[Token(Token = "0x600211A")]
		[Address(RVA = "0x1BF7674", Offset = "0x1BF7674", VA = "0x1BF7674")]
		protected void Update()
		{
		}

		[Token(Token = "0x600211B")]
		[Address(RVA = "0x1BF7CDC", Offset = "0x1BF7CDC", VA = "0x1BF7CDC")]
		public CurvedUILaserBeam()
		{
		}
	}
	[Token(Token = "0x2000457")]
	public class CurvedUIPhysicsRaycaster : BaseRaycaster
	{
		[Token(Token = "0x4001C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected int sortOrder;

		[Token(Token = "0x4001C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private RaycastHit hitInfo;

		[Token(Token = "0x4001C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RaycastResult result;

		[Token(Token = "0x17000410")]
		public int CompoundEventMask
		{
			[Token(Token = "0x600211E")]
			[Address(RVA = "0x1BF8370", Offset = "0x1BF8370", VA = "0x1BF8370")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000411")]
		public override Camera eventCamera
		{
			[Token(Token = "0x600211F")]
			[Address(RVA = "0x1BF846C", Offset = "0x1BF846C", VA = "0x1BF846C", Slot = "18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000412")]
		public virtual int Depth
		{
			[Token(Token = "0x6002120")]
			[Address(RVA = "0x1BF8534", Offset = "0x1BF8534", VA = "0x1BF8534", Slot = "22")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000413")]
		public override int sortOrderPriority
		{
			[Token(Token = "0x6002121")]
			[Address(RVA = "0x1BF860C", Offset = "0x1BF860C", VA = "0x1BF860C", Slot = "20")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600211C")]
		[Address(RVA = "0x1BF7E48", Offset = "0x1BF7E48", VA = "0x1BF7E48")]
		protected CurvedUIPhysicsRaycaster()
		{
		}

		[Token(Token = "0x600211D")]
		[Address(RVA = "0x1BF7E58", Offset = "0x1BF7E58", VA = "0x1BF7E58", Slot = "17")]
		public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}
	}
	[Token(Token = "0x2000458")]
	public class CurvedUIPointerEventData : PointerEventData
	{
		[Token(Token = "0x2000757")]
		public enum ControllerType
		{
			[Token(Token = "0x40028E3")]
			NONE = -1,
			[Token(Token = "0x40028E4")]
			VIVE
		}

		[Token(Token = "0x4001C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public GameObject Controller;

		[Token(Token = "0x4001C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public Vector2 TouchPadAxis;

		[Token(Token = "0x6002122")]
		[Address(RVA = "0x1BF8614", Offset = "0x1BF8614", VA = "0x1BF8614")]
		public CurvedUIPointerEventData(EventSystem eventSystem)
		{
		}
	}
	[Token(Token = "0x2000459")]
	public class CurvedUIRaycaster : GraphicRaycaster
	{
		[Serializable]
		[Token(Token = "0x2000758")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146AA2C", Offset = "0x146AA2C")]
		private sealed class <>c
		{
			[Token(Token = "0x40028E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40028E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<GameObject> <>9__21_0;

			[Token(Token = "0x40028E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Comparison<Graphic> <>9__32_0;

			[Token(Token = "0x40028E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Comparison<Graphic> <>9__55_0;

			[Token(Token = "0x6002B7A")]
			[Address(RVA = "0x1C00E5C", Offset = "0x1C00E5C", VA = "0x1C00E5C")]
			public <>c()
			{
			}

			[Token(Token = "0x6002B7B")]
			[Address(RVA = "0x1C00E64", Offset = "0x1C00E64", VA = "0x1C00E64")]
			internal bool <Update>b__21_0(GameObject obj)
			{
				return default(bool);
			}

			[Token(Token = "0x6002B7C")]
			[Address(RVA = "0x1C00F28", Offset = "0x1C00F28", VA = "0x1C00F28")]
			internal int <FlatRaycastAndSort>b__32_0(Graphic g1, Graphic g2)
			{
				return default(int);
			}

			[Token(Token = "0x6002B7D")]
			[Address(RVA = "0x1C00F80", Offset = "0x1C00F80", VA = "0x1C00F80")]
			internal int <GetObjectsHitByRay>b__55_0(Graphic g1, Graphic g2)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4001C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool showDebug;

		[Token(Token = "0x4001C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool overrideEventData;

		[Token(Token = "0x4001C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Canvas myCanvas;

		[Token(Token = "0x4001C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x4001C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 cyllinderMidPoint;

		[Token(Token = "0x4001C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<GameObject> objectsUnderPointer;

		[Token(Token = "0x4001C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector2 lastCanvasPos;

		[Token(Token = "0x4001C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private GameObject colliderContainer;

		[Token(Token = "0x4001C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private PointerEventData lastFrameEventData;

		[Token(Token = "0x4001C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private PointerEventData curEventData;

		[Token(Token = "0x4001C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private PointerEventData eventDataToUse;

		[Token(Token = "0x4001C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Ray cachedRay;

		[Token(Token = "0x4001C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Graphic gph;

		[Token(Token = "0x4001C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private List<GameObject> selectablesUnderGaze;

		[Token(Token = "0x4001C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private List<GameObject> selectablesUnderGazeLastFrame;

		[Token(Token = "0x4001C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float objectsUnderGazeLastChangeTime;

		[Token(Token = "0x4001C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private bool gazeClickExecuted;

		[Token(Token = "0x4001C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		private bool pointingAtCanvas;

		[Token(Token = "0x4001C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCE")]
		private bool pointingAtCanvasLastFrame;

		[NonSerialized]
		[Token(Token = "0x4001C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private List<Graphic> m_RaycastResults;

		[NonSerialized]
		[Token(Token = "0x4001C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<Graphic> s_SortedGraphics;

		[Token(Token = "0x17000414")]
		private UnityEngine.UI.Image GazeProgressImage
		{
			[Token(Token = "0x6002136")]
			[Address(RVA = "0x1BF96B8", Offset = "0x1BF96B8", VA = "0x1BF96B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000415")]
		public bool PointingAtCanvas
		{
			[Token(Token = "0x600213F")]
			[Address(RVA = "0x1C00404", Offset = "0x1C00404", VA = "0x1C00404")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002123")]
		[Address(RVA = "0x1BF869C", Offset = "0x1BF869C", VA = "0x1BF869C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002124")]
		[Address(RVA = "0x1BF8944", Offset = "0x1BF8944", VA = "0x1BF8944", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6002125")]
		[Address(RVA = "0x1BF9100", Offset = "0x1BF9100", VA = "0x1BF9100", Slot = "22")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6002126")]
		[Address(RVA = "0x1BF9508", Offset = "0x1BF9508", VA = "0x1BF9508")]
		private void ProcessGazeTimedClick()
		{
		}

		[Token(Token = "0x6002127")]
		[Address(RVA = "0x1BF94DC", Offset = "0x1BF94DC", VA = "0x1BF94DC")]
		private void ResetGazeTimedClick()
		{
		}

		[Token(Token = "0x6002128")]
		[Address(RVA = "0x1BF9CB0", Offset = "0x1BF9CB0", VA = "0x1BF9CB0", Slot = "17")]
		public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}

		[Token(Token = "0x6002129")]
		[Address(RVA = "0x1BFB184", Offset = "0x1BFB184", VA = "0x1BFB184", Slot = "23")]
		public virtual bool RaycastToCyllinderCanvas(Ray ray3D, out Vector2 o_canvasPos, bool OutputInCanvasSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600212A")]
		[Address(RVA = "0x1BFBA48", Offset = "0x1BFBA48", VA = "0x1BFBA48", Slot = "24")]
		public virtual bool RaycastToCyllinderVerticalCanvas(Ray ray3D, out Vector2 o_canvasPos, bool OutputInCanvasSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600212B")]
		[Address(RVA = "0x1BFC15C", Offset = "0x1BFC15C", VA = "0x1BFC15C", Slot = "25")]
		public virtual bool RaycastToRingCanvas(Ray ray3D, out Vector2 o_canvasPos, bool OutputInCanvasSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600212C")]
		[Address(RVA = "0x1BFC6D8", Offset = "0x1BFC6D8", VA = "0x1BFC6D8", Slot = "26")]
		public virtual bool RaycastToSphereCanvas(Ray ray3D, out Vector2 o_canvasPos, bool OutputInCanvasSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600212D")]
		[Address(RVA = "0x1BFAAE8", Offset = "0x1BFAAE8", VA = "0x1BFAAE8")]
		private void FlatRaycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}

		[Token(Token = "0x600212E")]
		[Address(RVA = "0x1BFD258", Offset = "0x1BFD258", VA = "0x1BFD258")]
		private static void FlatRaycastAndSort(Canvas canvas, Camera eventCamera, Vector2 pointerPosition, IList<Graphic> foundGraphics, List<Graphic> results)
		{
		}

		[Token(Token = "0x600212F")]
		[Address(RVA = "0x1BF8BD4", Offset = "0x1BF8BD4", VA = "0x1BF8BD4")]
		protected void CreateCollider()
		{
		}

		[Token(Token = "0x6002130")]
		[Address(RVA = "0x1BFED14", Offset = "0x1BFED14", VA = "0x1BFED14")]
		private void SetupMeshColliderUsingMesh(Mesh meshie)
		{
		}

		[Token(Token = "0x6002131")]
		[Address(RVA = "0x1BFD718", Offset = "0x1BFD718", VA = "0x1BFD718")]
		private GameObject CreateConvexCyllinderCollider(bool vertical = false)
		{
			return null;
		}

		[Token(Token = "0x6002132")]
		[Address(RVA = "0x1BFE3A4", Offset = "0x1BFE3A4", VA = "0x1BFE3A4")]
		private Mesh CreateCyllinderColliderMesh(bool vertical = false)
		{
			return null;
		}

		[Token(Token = "0x6002133")]
		[Address(RVA = "0x1BFEDC4", Offset = "0x1BFEDC4", VA = "0x1BFEDC4")]
		private Mesh CreateSphereColliderMesh()
		{
			return null;
		}

		[Token(Token = "0x6002134")]
		[Address(RVA = "0x1BFF928", Offset = "0x1BFF928", VA = "0x1BFF928")]
		private bool IsInLayerMask(int layer, LayerMask layermask)
		{
			return default(bool);
		}

		[Token(Token = "0x6002135")]
		[Address(RVA = "0x1BFB898", Offset = "0x1BFB898", VA = "0x1BFB898")]
		private LayerMask GetRaycastLayerMask()
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6002137")]
		[Address(RVA = "0x1BFB904", Offset = "0x1BFB904", VA = "0x1BFB904")]
		private float AngleSigned(Vector3 v1, Vector3 v2, Vector3 n)
		{
			return default(float);
		}

		[Token(Token = "0x6002138")]
		[Address(RVA = "0x1BFF980", Offset = "0x1BFF980", VA = "0x1BFF980")]
		private bool ShouldStartDrag(Vector2 pressPos, Vector2 currentPos, float threshold, bool useDragThreshold)
		{
			return default(bool);
		}

		[Token(Token = "0x6002139")]
		[Address(RVA = "0x1BFFA50", Offset = "0x1BFFA50", VA = "0x1BFFA50", Slot = "27")]
		protected virtual void ProcessMove(PointerEventData pointerEvent)
		{
		}

		[Token(Token = "0x600213A")]
		[Address(RVA = "0x1BFA4DC", Offset = "0x1BFA4DC", VA = "0x1BFA4DC")]
		protected void UpdateSelectedObjects(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600213B")]
		[Address(RVA = "0x1BFFA68", Offset = "0x1BFFA68", VA = "0x1BFFA68")]
		protected void HandlePointerExitAndEnter(PointerEventData currentPointerData, GameObject newEnterTarget)
		{
		}

		[Token(Token = "0x600213C")]
		[Address(RVA = "0x1C000D0", Offset = "0x1C000D0", VA = "0x1C000D0")]
		protected static GameObject FindCommonRoot(GameObject g1, GameObject g2)
		{
			return null;
		}

		[Token(Token = "0x600213D")]
		[Address(RVA = "0x1C00278", Offset = "0x1C00278", VA = "0x1C00278")]
		private bool GetScreenSpacePointByRay(Ray ray, out Vector2 o_positionOnCanvas)
		{
			return default(bool);
		}

		[Token(Token = "0x600213E")]
		[Address(RVA = "0x1BF89D4", Offset = "0x1BF89D4", VA = "0x1BF89D4")]
		private bool CheckEventCamera()
		{
			return default(bool);
		}

		[Token(Token = "0x6002140")]
		[Address(RVA = "0x1C0040C", Offset = "0x1C0040C", VA = "0x1C0040C")]
		public void RebuildCollider()
		{
		}

		[Token(Token = "0x6002141")]
		[Address(RVA = "0x1C00478", Offset = "0x1C00478", VA = "0x1C00478")]
		public List<GameObject> GetObjectsUnderPointer()
		{
			return null;
		}

		[Token(Token = "0x6002142")]
		[Address(RVA = "0x1C004F8", Offset = "0x1C004F8", VA = "0x1C004F8")]
		public List<GameObject> GetObjectsUnderScreenPos(Vector2 screenPos, [Optional] Camera eventCamera)
		{
			return null;
		}

		[Token(Token = "0x6002143")]
		[Address(RVA = "0x1C00608", Offset = "0x1C00608", VA = "0x1C00608")]
		public List<GameObject> GetObjectsHitByRay(Ray ray)
		{
			return null;
		}

		[Token(Token = "0x6002144")]
		[Address(RVA = "0x1BF9724", Offset = "0x1BF9724", VA = "0x1BF9724")]
		public void Click()
		{
		}

		[Token(Token = "0x6002145")]
		[Address(RVA = "0x1BFF5C4", Offset = "0x1BFF5C4", VA = "0x1BFF5C4")]
		private void ModifyQuad(List<Vector3> verts, int vertexIndex, Vector2 requiredSize)
		{
		}

		[Token(Token = "0x6002146")]
		[Address(RVA = "0x1C00A34", Offset = "0x1C00A34", VA = "0x1C00A34")]
		private Vector3 TesselateQuad(List<Vector3> quad, float x, float y)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002147")]
		[Address(RVA = "0x1C00C28", Offset = "0x1C00C28", VA = "0x1C00C28")]
		public CurvedUIRaycaster()
		{
		}
	}
	[Token(Token = "0x200045A")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x1469AB4", Offset = "0x1469AB4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1469AB4", Offset = "0x1469AB4")]
	public class CurvedUISettings : MonoBehaviour
	{
		[Token(Token = "0x2000759")]
		public enum CurvedUIShape
		{
			[Token(Token = "0x40028EA")]
			CYLINDER,
			[Token(Token = "0x40028EB")]
			RING,
			[Token(Token = "0x40028EC")]
			SPHERE,
			[Token(Token = "0x40028ED")]
			CYLINDER_VERTICAL
		}

		[Token(Token = "0x4001C91")]
		public const string Version = "3.1p1";

		[Token(Token = "0x4001C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CurvedUIShape shape;

		[Token(Token = "0x4001C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float quality;

		[Token(Token = "0x4001C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool interactable;

		[Token(Token = "0x4001C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		private bool blocksRaycasts;

		[Token(Token = "0x4001C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		[SerializeField]
		private bool forceUseBoxCollider;

		[Token(Token = "0x4001C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int angle;

		[Token(Token = "0x4001C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool preserveAspect;

		[Token(Token = "0x4001C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private int vertAngle;

		[Token(Token = "0x4001C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float ringFill;

		[Token(Token = "0x4001C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private int ringExternalDiamater;

		[Token(Token = "0x4001C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool ringFlipVertical;

		[Token(Token = "0x4001C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int baseCircleSegments;

		[Token(Token = "0x4001C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector2 savedRectSize;

		[Token(Token = "0x4001C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float savedRadius;

		[Token(Token = "0x4001CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Canvas myCanvas;

		[Token(Token = "0x4001CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RectTransform m_rectTransform;

		[Token(Token = "0x17000416")]
		private RectTransform RectTransform
		{
			[Token(Token = "0x6002153")]
			[Address(RVA = "0x1C01064", Offset = "0x1C01064", VA = "0x1C01064")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000417")]
		public int BaseCircleSegments
		{
			[Token(Token = "0x600215C")]
			[Address(RVA = "0x1C029B8", Offset = "0x1C029B8", VA = "0x1C029B8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000418")]
		public int Angle
		{
			[Token(Token = "0x600215D")]
			[Address(RVA = "0x1C029C0", Offset = "0x1C029C0", VA = "0x1C029C0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600215E")]
			[Address(RVA = "0x1C029C8", Offset = "0x1C029C8", VA = "0x1C029C8")]
			set
			{
			}
		}

		[Token(Token = "0x17000419")]
		public float Quality
		{
			[Token(Token = "0x600215F")]
			[Address(RVA = "0x1C029DC", Offset = "0x1C029DC", VA = "0x1C029DC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002160")]
			[Address(RVA = "0x1C029E4", Offset = "0x1C029E4", VA = "0x1C029E4")]
			set
			{
			}
		}

		[Token(Token = "0x1700041A")]
		public CurvedUIShape Shape
		{
			[Token(Token = "0x6002161")]
			[Address(RVA = "0x1C02A00", Offset = "0x1C02A00", VA = "0x1C02A00")]
			get
			{
				return default(CurvedUIShape);
			}
			[Token(Token = "0x6002162")]
			[Address(RVA = "0x1C02A08", Offset = "0x1C02A08", VA = "0x1C02A08")]
			set
			{
			}
		}

		[Token(Token = "0x1700041B")]
		public int VerticalAngle
		{
			[Token(Token = "0x6002163")]
			[Address(RVA = "0x1C02A28", Offset = "0x1C02A28", VA = "0x1C02A28")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002164")]
			[Address(RVA = "0x1C02A30", Offset = "0x1C02A30", VA = "0x1C02A30")]
			set
			{
			}
		}

		[Token(Token = "0x1700041C")]
		public float RingFill
		{
			[Token(Token = "0x6002165")]
			[Address(RVA = "0x1C02A50", Offset = "0x1C02A50", VA = "0x1C02A50")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002166")]
			[Address(RVA = "0x1C02A58", Offset = "0x1C02A58", VA = "0x1C02A58")]
			set
			{
			}
		}

		[Token(Token = "0x1700041D")]
		public float SavedRadius
		{
			[Token(Token = "0x6002167")]
			[Address(RVA = "0x1C01A74", Offset = "0x1C01A74", VA = "0x1C01A74")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700041E")]
		public int RingExternalDiameter
		{
			[Token(Token = "0x6002168")]
			[Address(RVA = "0x1C02A74", Offset = "0x1C02A74", VA = "0x1C02A74")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002169")]
			[Address(RVA = "0x1C02A7C", Offset = "0x1C02A7C", VA = "0x1C02A7C")]
			set
			{
			}
		}

		[Token(Token = "0x1700041F")]
		public bool RingFlipVertical
		{
			[Token(Token = "0x600216A")]
			[Address(RVA = "0x1C02A9C", Offset = "0x1C02A9C", VA = "0x1C02A9C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600216B")]
			[Address(RVA = "0x1C02AA4", Offset = "0x1C02AA4", VA = "0x1C02AA4")]
			set
			{
			}
		}

		[Token(Token = "0x17000420")]
		public bool PreserveAspect
		{
			[Token(Token = "0x600216C")]
			[Address(RVA = "0x1C02AD0", Offset = "0x1C02AD0", VA = "0x1C02AD0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600216D")]
			[Address(RVA = "0x1C02AD8", Offset = "0x1C02AD8", VA = "0x1C02AD8")]
			set
			{
			}
		}

		[Token(Token = "0x17000421")]
		public bool Interactable
		{
			[Token(Token = "0x600216E")]
			[Address(RVA = "0x1C02B04", Offset = "0x1C02B04", VA = "0x1C02B04")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600216F")]
			[Address(RVA = "0x1C02B0C", Offset = "0x1C02B0C", VA = "0x1C02B0C")]
			set
			{
			}
		}

		[Token(Token = "0x17000422")]
		public bool ForceUseBoxCollider
		{
			[Token(Token = "0x6002170")]
			[Address(RVA = "0x1C02B18", Offset = "0x1C02B18", VA = "0x1C02B18")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002171")]
			[Address(RVA = "0x1C02B20", Offset = "0x1C02B20", VA = "0x1C02B20")]
			set
			{
			}
		}

		[Token(Token = "0x17000423")]
		public bool BlocksRaycasts
		{
			[Token(Token = "0x6002172")]
			[Address(RVA = "0x1C02B2C", Offset = "0x1C02B2C", VA = "0x1C02B2C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002173")]
			[Address(RVA = "0x1C02B34", Offset = "0x1C02B34", VA = "0x1C02B34")]
			set
			{
			}
		}

		[Token(Token = "0x17000424")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x148A654", Offset = "0x148A654")]
		public bool RaycastMyLayerOnly
		{
			[Token(Token = "0x6002174")]
			[Address(RVA = "0x1C02C1C", Offset = "0x1C02C1C", VA = "0x1C02C1C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002175")]
			[Address(RVA = "0x1C02C24", Offset = "0x1C02C24", VA = "0x1C02C24")]
			set
			{
			}
		}

		[Token(Token = "0x17000425")]
		public bool PointingAtCanvas
		{
			[Token(Token = "0x6002177")]
			[Address(RVA = "0x1C02CE4", Offset = "0x1C02CE4", VA = "0x1C02CE4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000426")]
		public CurvedUIInputModule.CUIControlMethod ControlMethod
		{
			[Token(Token = "0x6002179")]
			[Address(RVA = "0x1C00074", Offset = "0x1C00074", VA = "0x1C00074")]
			get
			{
				return default(CurvedUIInputModule.CUIControlMethod);
			}
			[Token(Token = "0x600217A")]
			[Address(RVA = "0x1C02E94", Offset = "0x1C02E94", VA = "0x1C02E94")]
			set
			{
			}
		}

		[Token(Token = "0x17000427")]
		public bool GazeUseTimedClick
		{
			[Token(Token = "0x600217E")]
			[Address(RVA = "0x1C031EC", Offset = "0x1C031EC", VA = "0x1C031EC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600217F")]
			[Address(RVA = "0x1C03258", Offset = "0x1C03258", VA = "0x1C03258")]
			set
			{
			}
		}

		[Token(Token = "0x17000428")]
		public float GazeClickTimer
		{
			[Token(Token = "0x6002180")]
			[Address(RVA = "0x1C032CC", Offset = "0x1C032CC", VA = "0x1C032CC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002181")]
			[Address(RVA = "0x1C03338", Offset = "0x1C03338", VA = "0x1C03338")]
			set
			{
			}
		}

		[Token(Token = "0x17000429")]
		public float GazeClickTimerDelay
		{
			[Token(Token = "0x6002182")]
			[Address(RVA = "0x1C03430", Offset = "0x1C03430", VA = "0x1C03430")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002183")]
			[Address(RVA = "0x1C0349C", Offset = "0x1C0349C", VA = "0x1C0349C")]
			set
			{
			}
		}

		[Token(Token = "0x1700042A")]
		public float GazeTimerProgress
		{
			[Token(Token = "0x6002184")]
			[Address(RVA = "0x1C03594", Offset = "0x1C03594", VA = "0x1C03594")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002149")]
		[Address(RVA = "0x1C00FD8", Offset = "0x1C00FD8", VA = "0x1C00FD8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600214A")]
		[Address(RVA = "0x1C01128", Offset = "0x1C01128", VA = "0x1C01128")]
		private void Start()
		{
		}

		[Token(Token = "0x600214B")]
		[Address(RVA = "0x1C0147C", Offset = "0x1C0147C", VA = "0x1C0147C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600214C")]
		[Address(RVA = "0x1C0152C", Offset = "0x1C0152C", VA = "0x1C0152C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600214D")]
		[Address(RVA = "0x1C015DC", Offset = "0x1C015DC", VA = "0x1C015DC")]
		private void Update()
		{
		}

		[Token(Token = "0x600214E")]
		[Address(RVA = "0x1C01730", Offset = "0x1C01730", VA = "0x1C01730")]
		private void SetUIAngle(int newAngle)
		{
		}

		[Token(Token = "0x600214F")]
		[Address(RVA = "0x1C01944", Offset = "0x1C01944", VA = "0x1C01944")]
		private Vector3 CanvasToCyllinder(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002150")]
		[Address(RVA = "0x1C01AA4", Offset = "0x1C01AA4", VA = "0x1C01AA4")]
		private Vector3 CanvasToCyllinderVertical(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002151")]
		[Address(RVA = "0x1C01BD4", Offset = "0x1C01BD4", VA = "0x1C01BD4")]
		private Vector3 CanvasToRing(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002152")]
		[Address(RVA = "0x1C01D0C", Offset = "0x1C01D0C", VA = "0x1C01D0C")]
		private Vector3 CanvasToSphere(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002154")]
		[Address(RVA = "0x1C01F14", Offset = "0x1C01F14", VA = "0x1C01F14")]
		public void AddEffectToChildren()
		{
		}

		[Token(Token = "0x6002155")]
		[Address(RVA = "0x1C02254", Offset = "0x1C02254", VA = "0x1C02254")]
		public Vector3 VertexPositionToCurvedCanvas(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002156")]
		[Address(RVA = "0x1BFA9C8", Offset = "0x1BFA9C8", VA = "0x1BFA9C8")]
		public Vector3 CanvasToCurvedCanvas(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002157")]
		[Address(RVA = "0x1C02384", Offset = "0x1C02384", VA = "0x1C02384")]
		public Vector3 CanvasToCurvedCanvasNormal(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002158")]
		[Address(RVA = "0x1C0270C", Offset = "0x1C0270C", VA = "0x1C0270C")]
		public bool RaycastToCanvasSpace(Ray ray, out Vector2 o_positionOnCanvas)
		{
			return default(bool);
		}

		[Token(Token = "0x6002159")]
		[Address(RVA = "0x1BF87C8", Offset = "0x1BF87C8", VA = "0x1BF87C8")]
		public float GetCyllinderRadiusInCanvasSpace()
		{
			return default(float);
		}

		[Token(Token = "0x600215A")]
		[Address(RVA = "0x1BFF390", Offset = "0x1BFF390", VA = "0x1BFF390")]
		public Vector2 GetTesslationSize(bool modifiedByQuality = true)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600215B")]
		[Address(RVA = "0x1C028BC", Offset = "0x1C028BC", VA = "0x1C028BC")]
		private float GetSegmentsByAngle(float angle)
		{
			return default(float);
		}

		[Token(Token = "0x6002176")]
		[Address(RVA = "0x1C02C28", Offset = "0x1C02C28", VA = "0x1C02C28")]
		public void SetAllChildrenDirty(bool recalculateCurveOnly = false)
		{
		}

		[Token(Token = "0x6002178")]
		[Address(RVA = "0x1C02DD8", Offset = "0x1C02DD8", VA = "0x1C02DD8")]
		public void Click()
		{
		}

		[Token(Token = "0x600217B")]
		[Address(RVA = "0x1BF7BF8", Offset = "0x1BF7BF8", VA = "0x1BF7BF8")]
		public List<GameObject> GetObjectsUnderPointer()
		{
			return null;
		}

		[Token(Token = "0x600217C")]
		[Address(RVA = "0x1C02F94", Offset = "0x1C02F94", VA = "0x1C02F94")]
		public List<GameObject> GetObjectsUnderScreenPos(Vector2 pos, [Optional] Camera eventCamera)
		{
			return null;
		}

		[Token(Token = "0x600217D")]
		[Address(RVA = "0x1C030DC", Offset = "0x1C030DC", VA = "0x1C030DC")]
		public List<GameObject> GetObjectsHitByRay(Ray ray)
		{
			return null;
		}

		[Token(Token = "0x6002185")]
		[Address(RVA = "0x1C03600", Offset = "0x1C03600", VA = "0x1C03600")]
		public CurvedUISettings()
		{
		}
	}
	[Token(Token = "0x200045B")]
	public class CurvedUIVertexEffect : BaseMeshEffect
	{
		[Token(Token = "0x4001CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x1479A54", Offset = "0x1479A54")]
		public bool DoNotTesselate;

		[Token(Token = "0x4001CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Canvas myCanvas;

		[Token(Token = "0x4001CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x4001CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Graphic myGraphic;

		[Token(Token = "0x4001CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Text myText;

		[Token(Token = "0x4001CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TextMeshProUGUI myTMP;

		[Token(Token = "0x4001CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CurvedUITMPSubmesh myTMPSubMesh;

		[Token(Token = "0x4001CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_tesselationRequired;

		[Token(Token = "0x4001CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool curvingRequired;

		[Token(Token = "0x4001CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		private bool TransformMisaligned;

		[Token(Token = "0x4001CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Matrix4x4 CanvasToWorld;

		[Token(Token = "0x4001CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Matrix4x4 CanvasToLocal;

		[Token(Token = "0x4001CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private Matrix4x4 MyToWorld;

		[Token(Token = "0x4001CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private Matrix4x4 MyToLocal;

		[Token(Token = "0x4001CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private List<UIVertex> m_tesselatedVerts;

		[Token(Token = "0x4001CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private List<UIVertex> m_curvedVerts;

		[Token(Token = "0x4001CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private List<UIVertex> m_vertsInQuads;

		[Token(Token = "0x4001CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private UIVertex m_ret;

		[Token(Token = "0x4001CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private UIVertex[] m_quad;

		[Token(Token = "0x4001CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private float[] m_weights;

		[Token(Token = "0x4001CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[SerializeField]
		[HideInInspector]
		private Vector3 savedPos;

		[Token(Token = "0x4001CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		[SerializeField]
		[HideInInspector]
		private Vector3 savedUp;

		[Token(Token = "0x4001CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[SerializeField]
		[HideInInspector]
		private Vector2 savedRectSize;

		[Token(Token = "0x4001CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[SerializeField]
		[HideInInspector]
		private UnityEngine.Color savedColor;

		[Token(Token = "0x4001CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[SerializeField]
		[HideInInspector]
		private Vector2 savedTextUV0;

		[Token(Token = "0x4001CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[SerializeField]
		[HideInInspector]
		private float savedFill;

		[Token(Token = "0x4001CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		private Vector2 _uv0;

		[Token(Token = "0x4001CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
		private Vector2 _uv1;

		[Token(Token = "0x4001CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		private Vector3 _pos;

		[Token(Token = "0x1700042B")]
		private bool tesselationRequired
		{
			[Token(Token = "0x6002186")]
			[Address(RVA = "0x1C05E78", Offset = "0x1C05E78", VA = "0x1C05E78")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002187")]
			[Address(RVA = "0x1C05E80", Offset = "0x1C05E80", VA = "0x1C05E80")]
			set
			{
			}
		}

		[Token(Token = "0x1700042C")]
		public bool TesselationRequired
		{
			[Token(Token = "0x600219A")]
			[Address(RVA = "0x1C08CC8", Offset = "0x1C08CC8", VA = "0x1C08CC8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600219B")]
			[Address(RVA = "0x1C08CBC", Offset = "0x1C08CBC", VA = "0x1C08CBC")]
			set
			{
			}
		}

		[Token(Token = "0x1700042D")]
		public bool CurvingRequired
		{
			[Token(Token = "0x600219C")]
			[Address(RVA = "0x1C08CD0", Offset = "0x1C08CD0", VA = "0x1C08CD0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600219D")]
			[Address(RVA = "0x1C08CD8", Offset = "0x1C08CD8", VA = "0x1C08CD8")]
			set
			{
			}
		}

		[Token(Token = "0x6002188")]
		[Address(RVA = "0x1C05E8C", Offset = "0x1C05E8C", VA = "0x1C05E8C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6002189")]
		[Address(RVA = "0x1C05F64", Offset = "0x1C05F64", VA = "0x1C05F64", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x600218A")]
		[Address(RVA = "0x1C06228", Offset = "0x1C06228", VA = "0x1C06228", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600218B")]
		[Address(RVA = "0x1C06840", Offset = "0x1C06840", VA = "0x1C06840", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x600218C")]
		[Address(RVA = "0x1C069C0", Offset = "0x1C069C0", VA = "0x1C069C0")]
		private void TesselationRequiredCallback()
		{
		}

		[Token(Token = "0x600218D")]
		[Address(RVA = "0x1C069CC", Offset = "0x1C069CC", VA = "0x1C069CC")]
		private void FontTextureRebuiltCallback(Font fontie)
		{
		}

		[Token(Token = "0x600218E")]
		[Address(RVA = "0x1C06A70", Offset = "0x1C06A70", VA = "0x1C06A70")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600218F")]
		[Address(RVA = "0x1C07030", Offset = "0x1C07030", VA = "0x1C07030", Slot = "20")]
		public override void ModifyMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x6002190")]
		[Address(RVA = "0x1C04568", Offset = "0x1C04568", VA = "0x1C04568")]
		public void ModifyTMPMesh(ref List<UIVertex> vertexList)
		{
		}

		[Token(Token = "0x6002191")]
		[Address(RVA = "0x1C076D8", Offset = "0x1C076D8", VA = "0x1C076D8")]
		private bool ShouldModify()
		{
			return default(bool);
		}

		[Token(Token = "0x6002192")]
		[Address(RVA = "0x1C077DC", Offset = "0x1C077DC", VA = "0x1C077DC")]
		private void CheckTextFontMaterial()
		{
		}

		[Token(Token = "0x6002193")]
		[Address(RVA = "0x1C06108", Offset = "0x1C06108", VA = "0x1C06108")]
		public CurvedUISettings FindParentSettings(bool forceNew = false)
		{
			return null;
		}

		[Token(Token = "0x6002194")]
		[Address(RVA = "0x1C07C5C", Offset = "0x1C07C5C", VA = "0x1C07C5C")]
		private UIVertex CurveVertex(UIVertex input, float cylinder_angle, float radius, Vector2 canvasSize)
		{
			return default(UIVertex);
		}

		[Token(Token = "0x6002195")]
		[Address(RVA = "0x1C07A80", Offset = "0x1C07A80", VA = "0x1C07A80")]
		private void TesselateGeometry(List<UIVertex> verts)
		{
		}

		[Token(Token = "0x6002196")]
		[Address(RVA = "0x1C08294", Offset = "0x1C08294", VA = "0x1C08294")]
		private void ModifyQuad(List<UIVertex> verts, int vertexIndex, Vector2 requiredSize)
		{
		}

		[Token(Token = "0x6002197")]
		[Address(RVA = "0x1C08034", Offset = "0x1C08034", VA = "0x1C08034")]
		private void TrisToQuads(List<UIVertex> verts)
		{
		}

		[Token(Token = "0x6002198")]
		[Address(RVA = "0x1C08930", Offset = "0x1C08930", VA = "0x1C08930")]
		private UIVertex TesselateQuad(float x, float y)
		{
			return default(UIVertex);
		}

		[Token(Token = "0x6002199")]
		[Address(RVA = "0x1C01938", Offset = "0x1C01938", VA = "0x1C01938")]
		public void SetDirty()
		{
		}

		[Token(Token = "0x600219E")]
		[Address(RVA = "0x1C08CE4", Offset = "0x1C08CE4", VA = "0x1C08CE4")]
		public CurvedUIVertexEffect()
		{
		}
	}
	[Token(Token = "0x200045C")]
	public class CurvedUIViveController : MonoBehaviour
	{
		[Token(Token = "0x600219F")]
		[Address(RVA = "0x1C08E00", Offset = "0x1C08E00", VA = "0x1C08E00")]
		public CurvedUIViveController()
		{
		}
	}
	[Token(Token = "0x200045D")]
	public struct ViveInputArgs
	{
		[Token(Token = "0x4001CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint controllerIndex;

		[Token(Token = "0x4001CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float buttonPressure;

		[Token(Token = "0x4001CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 touchpadAxis;
	}
	[Token(Token = "0x200045E")]
	public delegate void ViveInputEvent(object sender, ViveInputArgs e);
	[Token(Token = "0x200045F")]
	public delegate void ViveEvent(object sender);
	[Token(Token = "0x2000460")]
	[ExecuteInEditMode]
	public class CurvedUITMP : MonoBehaviour
	{
		[Token(Token = "0x4001CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CurvedUIVertexEffect crvdVE;

		[Token(Token = "0x4001CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMeshProUGUI tmpText;

		[Token(Token = "0x4001CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x4001CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<UIVertex> m_UIVerts;

		[Token(Token = "0x4001CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UIVertex m_tempVertex;

		[Token(Token = "0x4001CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private CurvedUITMPSubmesh m_tempSubMsh;

		[Token(Token = "0x4001CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector2 savedSize;

		[Token(Token = "0x4001CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 savedUp;

		[Token(Token = "0x4001CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector3 savedPos;

		[Token(Token = "0x4001CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 savedLocalScale;

		[Token(Token = "0x4001CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Vector3 savedGlobalScale;

		[Token(Token = "0x4001CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private List<CurvedUITMPSubmesh> subMeshes;

		[Token(Token = "0x4001CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public bool Dirty;

		[Token(Token = "0x4001CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		private bool curvingRequired;

		[Token(Token = "0x4001CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD2")]
		private bool tesselationRequired;

		[Token(Token = "0x4001CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD3")]
		private bool quitting;

		[Token(Token = "0x4001CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Vector3[] vertices;

		[Token(Token = "0x60021A8")]
		[Address(RVA = "0x1C03644", Offset = "0x1C03644", VA = "0x1C03644")]
		private void Start()
		{
		}

		[Token(Token = "0x60021A9")]
		[Address(RVA = "0x1C036F8", Offset = "0x1C036F8", VA = "0x1C036F8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60021AA")]
		[Address(RVA = "0x1C039C0", Offset = "0x1C039C0", VA = "0x1C039C0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60021AB")]
		[Address(RVA = "0x1C03B0C", Offset = "0x1C03B0C", VA = "0x1C03B0C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60021AC")]
		[Address(RVA = "0x1C03B18", Offset = "0x1C03B18", VA = "0x1C03B18")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60021AD")]
		[Address(RVA = "0x1C0433C", Offset = "0x1C0433C", VA = "0x1C0433C")]
		private void CreateUIVertexList(Mesh mesh)
		{
		}

		[Token(Token = "0x60021AE")]
		[Address(RVA = "0x1C04E7C", Offset = "0x1C04E7C", VA = "0x1C04E7C")]
		private void GetUIVertexFromMesh(ref UIVertex vert, int i)
		{
		}

		[Token(Token = "0x60021AF")]
		[Address(RVA = "0x1C0481C", Offset = "0x1C0481C", VA = "0x1C0481C")]
		private void FillMeshWithUIVertexList(Mesh mesh, List<UIVertex> list)
		{
		}

		[Token(Token = "0x60021B0")]
		[Address(RVA = "0x1C0387C", Offset = "0x1C0387C", VA = "0x1C0387C")]
		private void FindTMP()
		{
		}

		[Token(Token = "0x60021B1")]
		[Address(RVA = "0x1C04970", Offset = "0x1C04970", VA = "0x1C04970")]
		private void FindSubmeshes()
		{
		}

		[Token(Token = "0x60021B2")]
		[Address(RVA = "0x1C03FB4", Offset = "0x1C03FB4", VA = "0x1C03FB4")]
		private bool ShouldTesselate()
		{
			return default(bool);
		}

		[Token(Token = "0x60021B3")]
		[Address(RVA = "0x1C04ECC", Offset = "0x1C04ECC", VA = "0x1C04ECC")]
		private void TMPTextChangedCallback(object obj)
		{
		}

		[Token(Token = "0x60021B4")]
		[Address(RVA = "0x1C04EE8", Offset = "0x1C04EE8", VA = "0x1C04EE8")]
		private void TesselationRequiredCallback()
		{
		}

		[Token(Token = "0x60021B5")]
		[Address(RVA = "0x1C04EF4", Offset = "0x1C04EF4", VA = "0x1C04EF4")]
		public CurvedUITMP()
		{
		}
	}
	[Token(Token = "0x2000461")]
	[ExecuteInEditMode]
	public class CurvedUITMPInputFieldCaret : MonoBehaviour, ISelectHandler, IEventSystemHandler, IDeselectHandler
	{
		[Token(Token = "0x200075A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146AA3C", Offset = "0x146AA3C")]
		private sealed class <CaretBlinker>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40028EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40028EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40028F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CurvedUITMPInputFieldCaret <>4__this;

			[Token(Token = "0x170005E5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B81")]
				[Address(RVA = "0x1C05E00", Offset = "0x1C05E00", VA = "0x1C05E00", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005E6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B83")]
				[Address(RVA = "0x1C05E68", Offset = "0x1C05E68", VA = "0x1C05E68", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B7E")]
			[Address(RVA = "0x1C05B48", Offset = "0x1C05B48", VA = "0x1C05B48")]
			[DebuggerHidden]
			public <CaretBlinker>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6002B7F")]
			[Address(RVA = "0x1C05CD8", Offset = "0x1C05CD8", VA = "0x1C05CD8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B80")]
			[Address(RVA = "0x1C05CDC", Offset = "0x1C05CDC", VA = "0x1C05CDC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B82")]
			[Address(RVA = "0x1C05E08", Offset = "0x1C05E08", VA = "0x1C05E08", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_InputField myField;

		[Token(Token = "0x4001CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RectTransform myCaret;

		[Token(Token = "0x4001CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityEngine.Color origCaretColor;

		[Token(Token = "0x4001CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UnityEngine.Color origSelectionColor;

		[Token(Token = "0x4001CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool selected;

		[Token(Token = "0x4001CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool selectingText;

		[Token(Token = "0x1700042E")]
		public UnityEngine.Color CaretColor
		{
			[Token(Token = "0x60021BF")]
			[Address(RVA = "0x1C05C68", Offset = "0x1C05C68", VA = "0x1C05C68")]
			get
			{
				return default(UnityEngine.Color);
			}
			[Token(Token = "0x60021C0")]
			[Address(RVA = "0x1C05C74", Offset = "0x1C05C74", VA = "0x1C05C74")]
			set
			{
			}
		}

		[Token(Token = "0x1700042F")]
		public UnityEngine.Color SelectionColor
		{
			[Token(Token = "0x60021C1")]
			[Address(RVA = "0x1C05C80", Offset = "0x1C05C80", VA = "0x1C05C80")]
			get
			{
				return default(UnityEngine.Color);
			}
			[Token(Token = "0x60021C2")]
			[Address(RVA = "0x1C05C8C", Offset = "0x1C05C8C", VA = "0x1C05C8C")]
			set
			{
			}
		}

		[Token(Token = "0x17000430")]
		public float CaretBlinkRate
		{
			[Token(Token = "0x60021C3")]
			[Address(RVA = "0x1C05C98", Offset = "0x1C05C98", VA = "0x1C05C98")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60021C4")]
			[Address(RVA = "0x1C05CB4", Offset = "0x1C05CB4", VA = "0x1C05CB4")]
			set
			{
			}
		}

		[Token(Token = "0x60021B6")]
		[Address(RVA = "0x1C04FA4", Offset = "0x1C04FA4", VA = "0x1C04FA4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60021B7")]
		[Address(RVA = "0x1C05368", Offset = "0x1C05368", VA = "0x1C05368")]
		private void Update()
		{
		}

		[Token(Token = "0x60021B8")]
		[Address(RVA = "0x1C05694", Offset = "0x1C05694", VA = "0x1C05694", Slot = "4")]
		public void OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x60021B9")]
		[Address(RVA = "0x1C05B10", Offset = "0x1C05B10", VA = "0x1C05B10", Slot = "5")]
		public void OnDeselect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x60021BA")]
		[Address(RVA = "0x1C05A94", Offset = "0x1C05A94", VA = "0x1C05A94")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1486F7C", Offset = "0x1486F7C")]
		private IEnumerator CaretBlinker()
		{
			return null;
		}

		[Token(Token = "0x60021BB")]
		[Address(RVA = "0x1C05754", Offset = "0x1C05754", VA = "0x1C05754")]
		private void CreateCaret()
		{
		}

		[Token(Token = "0x60021BC")]
		[Address(RVA = "0x1C05378", Offset = "0x1C05378", VA = "0x1C05378")]
		private void UpdateCaret()
		{
		}

		[Token(Token = "0x60021BD")]
		[Address(RVA = "0x1C05B74", Offset = "0x1C05B74", VA = "0x1C05B74")]
		private Vector2 GetLocalPositionInText(int charNo)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60021BE")]
		[Address(RVA = "0x1C0504C", Offset = "0x1C0504C", VA = "0x1C0504C")]
		private void CheckAndConvertMask()
		{
		}

		[Token(Token = "0x60021C5")]
		[Address(RVA = "0x1C05CD0", Offset = "0x1C05CD0", VA = "0x1C05CD0")]
		public CurvedUITMPInputFieldCaret()
		{
		}
	}
	[Token(Token = "0x2000462")]
	[ExecuteInEditMode]
	public class CurvedUITMPSubmesh : MonoBehaviour
	{
		[Token(Token = "0x4001CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VertexHelper vh;

		[Token(Token = "0x4001CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Mesh straightMesh;

		[Token(Token = "0x4001CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Mesh curvedMesh;

		[Token(Token = "0x4001CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CurvedUIVertexEffect crvdVE;

		[Token(Token = "0x4001CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TMP_SubMeshUI TMPsub;

		[Token(Token = "0x4001CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TextMeshProUGUI TMPtext;

		[Token(Token = "0x60021C6")]
		[Address(RVA = "0x1C04A90", Offset = "0x1C04A90", VA = "0x1C04A90")]
		public void UpdateSubmesh(bool tesselate, bool curve)
		{
		}

		[Token(Token = "0x60021C7")]
		[Address(RVA = "0x1C05E70", Offset = "0x1C05E70", VA = "0x1C05E70")]
		public CurvedUITMPSubmesh()
		{
		}
	}
	[Token(Token = "0x2000463")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x1469B6C", Offset = "0x1469B6C")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x1469B6C", Offset = "0x1469B6C")]
	public class OptionalDependencyAttribute : Attribute
	{
		[Token(Token = "0x4001CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string dependentClass;

		[Token(Token = "0x4001CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string define;

		[Token(Token = "0x60021C8")]
		[Address(RVA = "0x1C08E08", Offset = "0x1C08E08", VA = "0x1C08E08")]
		public OptionalDependencyAttribute(string dependentClass, string define)
		{
		}
	}
}
namespace CPA
{
	[Token(Token = "0x2000464")]
	public class UnityVersionWrapper
	{
		[Token(Token = "0x60021C9")]
		[Address(RVA = "0x3629254", Offset = "0x3629254", VA = "0x3629254")]
		public UnityVersionWrapper()
		{
		}
	}
}
namespace CP.ProChart
{
	[Token(Token = "0x2000465")]
	public class BarChart : Chart, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerClickHandler
	{
		[Token(Token = "0x200075B")]
		public delegate void OnSelectDelegate(int row, int column);

		[Token(Token = "0x200075C")]
		public delegate void OnOverDelegate(int row, int column);

		[Token(Token = "0x200075D")]
		public delegate void OnEnabledDelegate(bool enabled);

		[Token(Token = "0x200075E")]
		private class Bar
		{
			[Token(Token = "0x40028F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rect rect;

			[Token(Token = "0x40028F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int firstVertex;

			[Token(Token = "0x40028F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int row;

			[Token(Token = "0x40028F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int column;

			[Token(Token = "0x6002B90")]
			[Address(RVA = "0x3619974", Offset = "0x3619974", VA = "0x3619974")]
			public Bar()
			{
			}
		}

		[Token(Token = "0x4001CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public OnSelectDelegate onSelectDelegate;

		[Token(Token = "0x4001CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public OnOverDelegate onOverDelegate;

		[Token(Token = "0x4001CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public OnEnabledDelegate onEnabledDelegate;

		[Token(Token = "0x4001CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private ChartData2D values;

		[Token(Token = "0x4001CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private List<Bar> bars;

		[Token(Token = "0x4001CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1479BDC", Offset = "0x1479BDC")]
		private float spacing;

		[Token(Token = "0x4001CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1479C1C", Offset = "0x1479C1C")]
		private float thickness;

		[Token(Token = "0x17000431")]
		public float Spacing
		{
			[Token(Token = "0x60021CA")]
			[Address(RVA = "0x3617E78", Offset = "0x3617E78", VA = "0x3617E78")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60021CB")]
			[Address(RVA = "0x3617E80", Offset = "0x3617E80", VA = "0x3617E80")]
			set
			{
			}
		}

		[Token(Token = "0x17000432")]
		public float Thickness
		{
			[Token(Token = "0x60021CC")]
			[Address(RVA = "0x3617EB8", Offset = "0x3617EB8", VA = "0x3617EB8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60021CD")]
			[Address(RVA = "0x3617EC0", Offset = "0x3617EC0", VA = "0x3617EC0")]
			set
			{
			}
		}

		[Token(Token = "0x60021CE")]
		[Address(RVA = "0x3617EF8", Offset = "0x3617EF8", VA = "0x3617EF8", Slot = "51")]
		protected override void Update()
		{
		}

		[Token(Token = "0x60021CF")]
		[Address(RVA = "0x361882C", Offset = "0x361882C", VA = "0x361882C", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60021D0")]
		[Address(RVA = "0x3618AD8", Offset = "0x3618AD8", VA = "0x3618AD8")]
		private void OnEnabled(bool enabled)
		{
		}

		[Token(Token = "0x60021D1")]
		[Address(RVA = "0x3618D5C", Offset = "0x3618D5C", VA = "0x3618D5C", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60021D2")]
		[Address(RVA = "0x3618D90", Offset = "0x3618D90", VA = "0x3618D90", Slot = "8")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60021D3")]
		[Address(RVA = "0x3618E80", Offset = "0x3618E80", VA = "0x3618E80")]
		public void OnDataChangeDelegate()
		{
		}

		[Token(Token = "0x60021D4")]
		[Address(RVA = "0x361895C", Offset = "0x361895C", VA = "0x361895C")]
		public void SetValues(ref ChartData2D values)
		{
		}

		[Token(Token = "0x60021D5")]
		[Address(RVA = "0x3618E8C", Offset = "0x3618E8C", VA = "0x3618E8C", Slot = "50")]
		protected override void Create()
		{
		}

		[Token(Token = "0x60021D6")]
		[Address(RVA = "0x36194D4", Offset = "0x36194D4", VA = "0x36194D4")]
		private void AddQuad(Vector2 topLeft, Vector2 bottomRight, int row, int column)
		{
		}

		[Token(Token = "0x60021D7")]
		[Address(RVA = "0x3618240", Offset = "0x3618240", VA = "0x3618240")]
		private void ChangeCursor(int newCursor)
		{
		}

		[Token(Token = "0x60021D8")]
		[Address(RVA = "0x3619BF8", Offset = "0x3619BF8", VA = "0x3619BF8", Slot = "55")]
		public virtual void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60021D9")]
		[Address(RVA = "0x3619C04", Offset = "0x3619C04", VA = "0x3619C04", Slot = "56")]
		public virtual void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60021DA")]
		[Address(RVA = "0x3619C2C", Offset = "0x3619C2C", VA = "0x3619C2C", Slot = "57")]
		public virtual void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60021DB")]
		[Address(RVA = "0x3619F94", Offset = "0x3619F94", VA = "0x3619F94")]
		public BarChart()
		{
		}
	}
	[Token(Token = "0x2000466")]
	public class BarChartMesh : ChartMesh
	{
		[Token(Token = "0x4001CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ChartData2D values;

		[Token(Token = "0x4001CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1479C60", Offset = "0x1479C60")]
		private float spacing;

		[Token(Token = "0x4001CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1479CA0", Offset = "0x1479CA0")]
		private float thickness;

		[Token(Token = "0x17000433")]
		public float Spacing
		{
			[Token(Token = "0x60021DC")]
			[Address(RVA = "0x361AC1C", Offset = "0x361AC1C", VA = "0x361AC1C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60021DD")]
			[Address(RVA = "0x361AC24", Offset = "0x361AC24", VA = "0x361AC24")]
			set
			{
			}
		}

		[Token(Token = "0x17000434")]
		public float Thickness
		{
			[Token(Token = "0x60021DE")]
			[Address(RVA = "0x361AC5C", Offset = "0x361AC5C", VA = "0x361AC5C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60021DF")]
			[Address(RVA = "0x361AC64", Offset = "0x361AC64", VA = "0x361AC64")]
			set
			{
			}
		}

		[Token(Token = "0x60021E0")]
		[Address(RVA = "0x361AC9C", Offset = "0x361AC9C", VA = "0x361AC9C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60021E1")]
		[Address(RVA = "0x361ADA8", Offset = "0x361ADA8", VA = "0x361ADA8")]
		public void SetValues(ref ChartData2D values)
		{
		}

		[Token(Token = "0x60021E2")]
		[Address(RVA = "0x361AF24", Offset = "0x361AF24", VA = "0x361AF24", Slot = "4")]
		protected override void Create()
		{
		}

		[Token(Token = "0x60021E3")]
		[Address(RVA = "0x361C488", Offset = "0x361C488", VA = "0x361C488")]
		private void AddTriangle(Vector3 p1, Vector3 p2, Vector3 p3, Color32 color1, Color32 color2, Color32 color3)
		{
		}

		[Token(Token = "0x60021E4")]
		[Address(RVA = "0x361C630", Offset = "0x361C630", VA = "0x361C630")]
		public BarChartMesh()
		{
		}
	}
	[Token(Token = "0x2000467")]
	public abstract class Chart : Graphic
	{
		[Token(Token = "0x4001CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1479CE0", Offset = "0x1479CE0")]
		private bool <Dirty>k__BackingField;

		[Token(Token = "0x4001CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		protected int cursor;

		[Token(Token = "0x4001CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected List<Vector3> Vertices;

		[Token(Token = "0x4001CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected List<Color32> VertexColors;

		[Token(Token = "0x4001CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected List<int> Triangles;

		[Token(Token = "0x4001CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected Rect rect;

		[Token(Token = "0x4001CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		protected bool interactable;

		[Token(Token = "0x4001CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
		protected bool isPointerInside;

		[Token(Token = "0x4001CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected Color32[,] colors;

		[Token(Token = "0x4001CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected Color32[,] selectedColors;

		[Token(Token = "0x4001CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected int colorCount;

		[Token(Token = "0x17000435")]
		public bool Dirty
		{
			[Token(Token = "0x60021E5")]
			[Address(RVA = "0x361CB9C", Offset = "0x361CB9C", VA = "0x361CB9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1486FE0", Offset = "0x1486FE0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60021E6")]
			[Address(RVA = "0x361CBA4", Offset = "0x361CBA4", VA = "0x361CBA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1486FF0", Offset = "0x1486FF0")]
			set
			{
			}
		}

		[Token(Token = "0x17000436")]
		public bool Interactable
		{
			[Token(Token = "0x60021E7")]
			[Address(RVA = "0x361CBB0", Offset = "0x361CBB0", VA = "0x361CBB0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60021E8")]
			[Address(RVA = "0x361CBB8", Offset = "0x361CBB8", VA = "0x361CBB8")]
			set
			{
			}
		}

		[Token(Token = "0x60021E9")]
		protected abstract void Create();

		[Token(Token = "0x60021EA")]
		[Address(RVA = "0x361CBCC", Offset = "0x361CBCC", VA = "0x361CBCC")]
		public void SetColor(int row, Color32 color1, [Optional] Color32 color2)
		{
		}

		[Token(Token = "0x60021EB")]
		[Address(RVA = "0x361CCA4", Offset = "0x361CCA4", VA = "0x361CCA4")]
		public void SetSelectedColor(int row, Color32 color1, [Optional] Color32 color2)
		{
		}

		[Token(Token = "0x60021EC")]
		[Address(RVA = "0x361CD7C", Offset = "0x361CD7C", VA = "0x361CD7C", Slot = "44")]
		protected override void OnPopulateMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x60021ED")]
		[Address(RVA = "0x3618224", Offset = "0x3618224", VA = "0x3618224", Slot = "51")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60021EE")]
		[Address(RVA = "0x3619FA0", Offset = "0x3619FA0", VA = "0x3619FA0")]
		protected Chart()
		{
		}
	}
	[Token(Token = "0x2000468")]
	public abstract class ChartData
	{
		[Token(Token = "0x200075F")]
		public delegate void OnDataChangeDelegate();

		[Token(Token = "0x4001CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnDataChangeDelegate onDataChangeDelegate;

		[Token(Token = "0x4001CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<List<float>> values;

		[Token(Token = "0x4001CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int sizeY;

		[Token(Token = "0x4001CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int sizeX;

		[Token(Token = "0x17000437")]
		public bool isEmpty
		{
			[Token(Token = "0x60021EF")]
			[Address(RVA = "0x36194B0", Offset = "0x36194B0", VA = "0x36194B0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000438")]
		public int Rows
		{
			[Token(Token = "0x60021F0")]
			[Address(RVA = "0x361D024", Offset = "0x361D024", VA = "0x361D024")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000439")]
		public int Columns
		{
			[Token(Token = "0x60021F1")]
			[Address(RVA = "0x361D02C", Offset = "0x361D02C", VA = "0x361D02C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60021F2")]
		[Address(RVA = "0x361D034", Offset = "0x361D034", VA = "0x361D034")]
		public void Clear()
		{
		}

		[Token(Token = "0x60021F3")]
		[Address(RVA = "0x361D094", Offset = "0x361D094", VA = "0x361D094")]
		public void Resize(int rows, int columns)
		{
		}

		[Token(Token = "0x60021F4")]
		[Address(RVA = "0x361D228", Offset = "0x361D228", VA = "0x361D228")]
		protected void SetInternal(int row, int column, float value)
		{
		}

		[Token(Token = "0x60021F5")]
		[Address(RVA = "0x361D51C", Offset = "0x361D51C", VA = "0x361D51C")]
		protected float GetInternal(int row, int column)
		{
			return default(float);
		}

		[Token(Token = "0x60021F6")]
		[Address(RVA = "0x361D610", Offset = "0x361D610", VA = "0x361D610")]
		protected ChartData()
		{
		}
	}
	[Token(Token = "0x2000469")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x1469BCC", Offset = "0x1469BCC")]
	public class ChartData2D : ChartData
	{
		[Token(Token = "0x1700043A")]
		public float Item
		{
			[Token(Token = "0x60021F7")]
			[Address(RVA = "0x36194D0", Offset = "0x36194D0", VA = "0x36194D0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60021F8")]
			[Address(RVA = "0x3618958", Offset = "0x3618958", VA = "0x3618958")]
			set
			{
			}
		}

		[Token(Token = "0x60021F9")]
		[Address(RVA = "0x3618954", Offset = "0x3618954", VA = "0x3618954")]
		public ChartData2D()
		{
		}
	}
	[Token(Token = "0x200046A")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x1469C04", Offset = "0x1469C04")]
	public class ChartData1D : ChartData
	{
		[Token(Token = "0x1700043B")]
		public float Item
		{
			[Token(Token = "0x60021FA")]
			[Address(RVA = "0x361D6C4", Offset = "0x361D6C4", VA = "0x361D6C4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60021FB")]
			[Address(RVA = "0x361D6D0", Offset = "0x361D6D0", VA = "0x361D6D0")]
			set
			{
			}
		}

		[Token(Token = "0x60021FC")]
		[Address(RVA = "0x361D6DC", Offset = "0x361D6DC", VA = "0x361D6DC")]
		public ChartData1D()
		{
		}
	}
	[Token(Token = "0x200046B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1469C3C", Offset = "0x1469C3C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x1469C3C", Offset = "0x1469C3C")]
	[ExecuteInEditMode]
	public abstract class ChartMesh : MonoBehaviour
	{
		[Token(Token = "0x4001CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 size;

		[Token(Token = "0x4001CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool mode_3d;

		[Token(Token = "0x4001CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1479D00", Offset = "0x1479D00")]
		private bool <Dirty>k__BackingField;

		[Token(Token = "0x4001CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected List<Vector3> Vertices;

		[Token(Token = "0x4001CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected List<Color32> VertexColors;

		[Token(Token = "0x4001CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<int> Triangles;

		[Token(Token = "0x4001D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Color32[,] colors;

		[Token(Token = "0x4001D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected int colorCount;

		[Token(Token = "0x1700043C")]
		public bool Dirty
		{
			[Token(Token = "0x60021FE")]
			[Address(RVA = "0x361D6EC", Offset = "0x361D6EC", VA = "0x361D6EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1487010", Offset = "0x1487010")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60021FD")]
			[Address(RVA = "0x361D6E0", Offset = "0x361D6E0", VA = "0x361D6E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x1487000", Offset = "0x1487000")]
			set
			{
			}
		}

		[Token(Token = "0x60021FF")]
		[Address(RVA = "0x361D6F4", Offset = "0x361D6F4", VA = "0x361D6F4")]
		private void Update()
		{
		}

		[Token(Token = "0x6002200")]
		protected abstract void Create();

		[Token(Token = "0x6002201")]
		[Address(RVA = "0x361D70C", Offset = "0x361D70C", VA = "0x361D70C")]
		public void SetColor(int row, Color32 color1, [Optional] Color32 color2)
		{
		}

		[Token(Token = "0x6002202")]
		[Address(RVA = "0x361D7F4", Offset = "0x361D7F4", VA = "0x361D7F4")]
		public void OnDataChangeDelegate()
		{
		}

		[Token(Token = "0x6002203")]
		[Address(RVA = "0x361D800", Offset = "0x361D800", VA = "0x361D800")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6002204")]
		[Address(RVA = "0x361C63C", Offset = "0x361C63C", VA = "0x361C63C")]
		protected ChartMesh()
		{
		}
	}
	[Token(Token = "0x200046C")]
	public class LineChart : Chart, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerClickHandler
	{
		[Token(Token = "0x2000760")]
		public enum ChartType
		{
			[Token(Token = "0x40028F6")]
			LINE,
			[Token(Token = "0x40028F7")]
			CURVE
		}

		[Token(Token = "0x2000761")]
		public enum PointType
		{
			[Token(Token = "0x40028F9")]
			NONE,
			[Token(Token = "0x40028FA")]
			CIRCLE,
			[Token(Token = "0x40028FB")]
			RECTANGLE,
			[Token(Token = "0x40028FC")]
			TRIANGLE
		}

		[Token(Token = "0x2000762")]
		public delegate void OnSelectDelegate(int row, int column);

		[Token(Token = "0x2000763")]
		public delegate void OnOverDelegate(int row, int column);

		[Token(Token = "0x2000764")]
		public delegate void OnEnabledDelegate(bool enabled);

		[Token(Token = "0x2000765")]
		private class ActivePoint
		{
			[Token(Token = "0x40028FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rect rect;

			[Token(Token = "0x40028FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int firstVertex;

			[Token(Token = "0x40028FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int quadsCount;

			[Token(Token = "0x4002900")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int row;

			[Token(Token = "0x4002901")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int column;

			[Token(Token = "0x6002BA1")]
			[Address(RVA = "0x3621494", Offset = "0x3621494", VA = "0x3621494")]
			public ActivePoint()
			{
			}
		}

		[Token(Token = "0x4001D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		private ChartType chart;

		[Token(Token = "0x4001D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private PointType point;

		[Token(Token = "0x4001D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public OnSelectDelegate onSelectDelegate;

		[Token(Token = "0x4001D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public OnOverDelegate onOverDelegate;

		[Token(Token = "0x4001D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public OnEnabledDelegate onEnabledDelegate;

		[Token(Token = "0x4001D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1479D30", Offset = "0x1479D30")]
		private float thickness;

		[Token(Token = "0x4001D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1479D74", Offset = "0x1479D74")]
		private float pointSize;

		[Token(Token = "0x4001D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private ChartData2D values;

		[Token(Token = "0x4001D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private List<ActivePoint> points;

		[Token(Token = "0x4001D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private bool newLine;

		[Token(Token = "0x1700043D")]
		public ChartType Chart
		{
			[Token(Token = "0x6002205")]
			[Address(RVA = "0x361E0B0", Offset = "0x361E0B0", VA = "0x361E0B0")]
			get
			{
				return default(ChartType);
			}
			[Token(Token = "0x6002206")]
			[Address(RVA = "0x361E0B8", Offset = "0x361E0B8", VA = "0x361E0B8")]
			set
			{
			}
		}

		[Token(Token = "0x1700043E")]
		public PointType Point
		{
			[Token(Token = "0x6002207")]
			[Address(RVA = "0x361E0D4", Offset = "0x361E0D4", VA = "0x361E0D4")]
			get
			{
				return default(PointType);
			}
			[Token(Token = "0x6002208")]
			[Address(RVA = "0x361E0DC", Offset = "0x361E0DC", VA = "0x361E0DC")]
			set
			{
			}
		}

		[Token(Token = "0x1700043F")]
		public float Thickness
		{
			[Token(Token = "0x6002209")]
			[Address(RVA = "0x361E0F8", Offset = "0x361E0F8", VA = "0x361E0F8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600220A")]
			[Address(RVA = "0x361E100", Offset = "0x361E100", VA = "0x361E100")]
			set
			{
			}
		}

		[Token(Token = "0x17000440")]
		public float PointSize
		{
			[Token(Token = "0x600220B")]
			[Address(RVA = "0x361E134", Offset = "0x361E134", VA = "0x361E134")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600220C")]
			[Address(RVA = "0x361E13C", Offset = "0x361E13C", VA = "0x361E13C")]
			set
			{
			}
		}

		[Token(Token = "0x600220D")]
		[Address(RVA = "0x361E170", Offset = "0x361E170", VA = "0x361E170", Slot = "51")]
		protected override void Update()
		{
		}

		[Token(Token = "0x600220E")]
		[Address(RVA = "0x361E914", Offset = "0x361E914", VA = "0x361E914", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x600220F")]
		[Address(RVA = "0x361EBFC", Offset = "0x361EBFC", VA = "0x361EBFC")]
		private void OnEnabled(bool enabled)
		{
		}

		[Token(Token = "0x6002210")]
		[Address(RVA = "0x361EE80", Offset = "0x361EE80", VA = "0x361EE80", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6002211")]
		[Address(RVA = "0x361EEB4", Offset = "0x361EEB4", VA = "0x361EEB4", Slot = "8")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6002212")]
		[Address(RVA = "0x361EF90", Offset = "0x361EF90", VA = "0x361EF90")]
		public void OnDataChangeDelegate()
		{
		}

		[Token(Token = "0x6002213")]
		[Address(RVA = "0x361EA88", Offset = "0x361EA88", VA = "0x361EA88")]
		public void SetValues(ref ChartData2D values)
		{
		}

		[Token(Token = "0x6002214")]
		[Address(RVA = "0x361EF9C", Offset = "0x361EF9C", VA = "0x361EF9C", Slot = "50")]
		protected override void Create()
		{
		}

		[Token(Token = "0x6002215")]
		[Address(RVA = "0x3620C80", Offset = "0x3620C80", VA = "0x3620C80")]
		private void calcControlPoints(Vector2 p0, Vector2 p1, Vector2 p2, Vector2 p3, out Vector2 c1, out Vector2 c2)
		{
		}

		[Token(Token = "0x6002216")]
		[Address(RVA = "0x3620D1C", Offset = "0x3620D1C", VA = "0x3620D1C")]
		private void calcLineSegments(Vector2 p0, Vector2 c0, Vector2 c1, Vector2 p1, Color32 color)
		{
		}

		[Token(Token = "0x6002217")]
		[Address(RVA = "0x361FB44", Offset = "0x361FB44", VA = "0x361FB44")]
		private void AddLineSegment(float x1, float y1, float x2, float y2, Color32 color)
		{
		}

		[Token(Token = "0x6002218")]
		[Address(RVA = "0x3620F20", Offset = "0x3620F20", VA = "0x3620F20")]
		private bool lineSegmentIntersection(Vector3 v0, Vector3 v1, Vector3 v2, Vector3 v3)
		{
			return default(bool);
		}

		[Token(Token = "0x6002219")]
		[Address(RVA = "0x3621128", Offset = "0x3621128", VA = "0x3621128")]
		private bool vectorIntersection(Vector3 v0, Vector3 v1, Vector3 v2, Vector3 v3)
		{
			return default(bool);
		}

		[Token(Token = "0x600221A")]
		[Address(RVA = "0x362132C", Offset = "0x362132C", VA = "0x362132C")]
		private Vector3 lineIntersectionPoint(Vector3 v0, Vector3 v1, Vector3 v2, Vector3 v3)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600221B")]
		[Address(RVA = "0x3620430", Offset = "0x3620430", VA = "0x3620430")]
		private void CreatePoint(Vector3 center, int row, int column)
		{
		}

		[Token(Token = "0x600221C")]
		[Address(RVA = "0x362149C", Offset = "0x362149C", VA = "0x362149C")]
		private void AddQuad(Vector2 p0, Vector2 p1, Vector2 p2, Vector2 p3, Color32 color)
		{
		}

		[Token(Token = "0x600221D")]
		[Address(RVA = "0x361E4A0", Offset = "0x361E4A0", VA = "0x361E4A0")]
		private void ChangeCursor(int newCursor)
		{
		}

		[Token(Token = "0x600221E")]
		[Address(RVA = "0x3621988", Offset = "0x3621988", VA = "0x3621988", Slot = "55")]
		public virtual void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600221F")]
		[Address(RVA = "0x3621994", Offset = "0x3621994", VA = "0x3621994", Slot = "56")]
		public virtual void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002220")]
		[Address(RVA = "0x36219BC", Offset = "0x36219BC", VA = "0x36219BC", Slot = "57")]
		public virtual void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002221")]
		[Address(RVA = "0x3621D24", Offset = "0x3621D24", VA = "0x3621D24")]
		public LineChart()
		{
		}
	}
	[Token(Token = "0x200046D")]
	public class LineChartMesh : ChartMesh
	{
		[Token(Token = "0x2000766")]
		public enum ChartType
		{
			[Token(Token = "0x4002903")]
			LINE,
			[Token(Token = "0x4002904")]
			CURVE
		}

		[Token(Token = "0x2000767")]
		public enum PointType
		{
			[Token(Token = "0x4002906")]
			NONE,
			[Token(Token = "0x4002907")]
			CIRCLE,
			[Token(Token = "0x4002908")]
			RECTANGLE,
			[Token(Token = "0x4002909")]
			TRIANGLE
		}

		[Token(Token = "0x4001D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private ChartType chart;

		[Token(Token = "0x4001D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private PointType point;

		[Token(Token = "0x4001D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1479DD8", Offset = "0x1479DD8")]
		private float thickness;

		[Token(Token = "0x4001D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1479E1C", Offset = "0x1479E1C")]
		private float pointSize;

		[Token(Token = "0x4001D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<Vector3> vertices;

		[Token(Token = "0x4001D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float z0;

		[Token(Token = "0x4001D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float z1;

		[Token(Token = "0x4001D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private ChartData2D values;

		[Token(Token = "0x17000441")]
		public ChartType Chart
		{
			[Token(Token = "0x6002222")]
			[Address(RVA = "0x3621F74", Offset = "0x3621F74", VA = "0x3621F74")]
			get
			{
				return default(ChartType);
			}
			[Token(Token = "0x6002223")]
			[Address(RVA = "0x3621F7C", Offset = "0x3621F7C", VA = "0x3621F7C")]
			set
			{
			}
		}

		[Token(Token = "0x17000442")]
		public PointType Point
		{
			[Token(Token = "0x6002224")]
			[Address(RVA = "0x3621F98", Offset = "0x3621F98", VA = "0x3621F98")]
			get
			{
				return default(PointType);
			}
			[Token(Token = "0x6002225")]
			[Address(RVA = "0x3621FA0", Offset = "0x3621FA0", VA = "0x3621FA0")]
			set
			{
			}
		}

		[Token(Token = "0x17000443")]
		public float Thickness
		{
			[Token(Token = "0x6002226")]
			[Address(RVA = "0x3621FBC", Offset = "0x3621FBC", VA = "0x3621FBC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002227")]
			[Address(RVA = "0x3621FC4", Offset = "0x3621FC4", VA = "0x3621FC4")]
			set
			{
			}
		}

		[Token(Token = "0x17000444")]
		public float PointSize
		{
			[Token(Token = "0x6002228")]
			[Address(RVA = "0x3621FF8", Offset = "0x3621FF8", VA = "0x3621FF8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002229")]
			[Address(RVA = "0x3622000", Offset = "0x3622000", VA = "0x3622000")]
			set
			{
			}
		}

		[Token(Token = "0x600222A")]
		[Address(RVA = "0x3622034", Offset = "0x3622034", VA = "0x3622034")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600222B")]
		[Address(RVA = "0x3622308", Offset = "0x3622308", VA = "0x3622308")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600222C")]
		[Address(RVA = "0x362218C", Offset = "0x362218C", VA = "0x362218C")]
		public void SetValues(ref ChartData2D values)
		{
		}

		[Token(Token = "0x600222D")]
		[Address(RVA = "0x36223EC", Offset = "0x36223EC", VA = "0x36223EC", Slot = "4")]
		protected override void Create()
		{
		}

		[Token(Token = "0x600222E")]
		[Address(RVA = "0x3624C04", Offset = "0x3624C04", VA = "0x3624C04")]
		private void calcControlPoints(Vector2 p0, Vector2 p1, Vector2 p2, Vector2 p3, out Vector2 c1, out Vector2 c2)
		{
		}

		[Token(Token = "0x600222F")]
		[Address(RVA = "0x3624CA0", Offset = "0x3624CA0", VA = "0x3624CA0")]
		private void calcLineSegments(Vector2 p0, Vector2 c0, Vector2 c1, Vector2 p1, Color32 color)
		{
		}

		[Token(Token = "0x6002230")]
		[Address(RVA = "0x3623350", Offset = "0x3623350", VA = "0x3623350")]
		private void AddLineSegment(float x1, float y1, float x2, float y2, Color32 color)
		{
		}

		[Token(Token = "0x6002231")]
		[Address(RVA = "0x3624EA4", Offset = "0x3624EA4", VA = "0x3624EA4")]
		private bool lineSegmentIntersection(Vector3 v0, Vector3 v1, Vector3 v2, Vector3 v3)
		{
			return default(bool);
		}

		[Token(Token = "0x6002232")]
		[Address(RVA = "0x36250AC", Offset = "0x36250AC", VA = "0x36250AC")]
		private bool vectorIntersection(Vector3 v0, Vector3 v1, Vector3 v2, Vector3 v3)
		{
			return default(bool);
		}

		[Token(Token = "0x6002233")]
		[Address(RVA = "0x36252B0", Offset = "0x36252B0", VA = "0x36252B0")]
		private Vector3 lineIntersectionPoint(Vector3 v0, Vector3 v1, Vector3 v2, Vector3 v3)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002234")]
		[Address(RVA = "0x3623904", Offset = "0x3623904", VA = "0x3623904")]
		private void CloseLine(Color32 color)
		{
		}

		[Token(Token = "0x6002235")]
		[Address(RVA = "0x36240E0", Offset = "0x36240E0", VA = "0x36240E0")]
		private void CreatePoint(Vector3 center, int row, int column)
		{
		}

		[Token(Token = "0x6002236")]
		[Address(RVA = "0x3625418", Offset = "0x3625418", VA = "0x3625418")]
		private void AddTriangle(Vector3 p1, Vector3 p2, Vector3 p3, Color32 color1, Color32 color2)
		{
		}

		[Token(Token = "0x6002237")]
		[Address(RVA = "0x36255C0", Offset = "0x36255C0", VA = "0x36255C0")]
		public LineChartMesh()
		{
		}
	}
	[Token(Token = "0x200046E")]
	public class PieChart : Chart, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerClickHandler
	{
		[Token(Token = "0x2000768")]
		public delegate void OnSelectDelegate(int column);

		[Token(Token = "0x2000769")]
		public delegate void OnOverDelegate(int column);

		[Token(Token = "0x200076A")]
		public delegate void OnEnabledDelegate(bool enabled);

		[Token(Token = "0x200076B")]
		private class Sector
		{
			[Token(Token = "0x400290A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int firstVertex;

			[Token(Token = "0x400290B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int quadsCount;

			[Token(Token = "0x400290C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int column;

			[Token(Token = "0x400290D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float start;

			[Token(Token = "0x400290E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float end;

			[Token(Token = "0x6002BAE")]
			[Address(RVA = "0x362757C", Offset = "0x362757C", VA = "0x362757C")]
			public Sector()
			{
			}
		}

		[Token(Token = "0x4001D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public OnSelectDelegate onSelectDelegate;

		[Token(Token = "0x4001D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public OnOverDelegate onOverDelegate;

		[Token(Token = "0x4001D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public OnEnabledDelegate onEnabledDelegate;

		[Token(Token = "0x4001D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1479E60", Offset = "0x1479E60")]
		private float innerRadius;

		[Token(Token = "0x4001D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1479EA4", Offset = "0x1479EA4")]
		private float startAngle;

		[Token(Token = "0x4001D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1479EE8", Offset = "0x1479EE8")]
		private float chartSize;

		[Token(Token = "0x4001D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private ChartData1D values;

		[Token(Token = "0x4001D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private List<Sector> sectors;

		[Token(Token = "0x17000445")]
		public float InnerRadius
		{
			[Token(Token = "0x6002238")]
			[Address(RVA = "0x36255DC", Offset = "0x36255DC", VA = "0x36255DC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002239")]
			[Address(RVA = "0x36255E4", Offset = "0x36255E4", VA = "0x36255E4")]
			set
			{
			}
		}

		[Token(Token = "0x17000446")]
		public float StartAngle
		{
			[Token(Token = "0x600223A")]
			[Address(RVA = "0x3625618", Offset = "0x3625618", VA = "0x3625618")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600223B")]
			[Address(RVA = "0x3625620", Offset = "0x3625620", VA = "0x3625620")]
			set
			{
			}
		}

		[Token(Token = "0x17000447")]
		public float ChartSize
		{
			[Token(Token = "0x600223C")]
			[Address(RVA = "0x3625654", Offset = "0x3625654", VA = "0x3625654")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600223D")]
			[Address(RVA = "0x362565C", Offset = "0x362565C", VA = "0x362565C")]
			set
			{
			}
		}

		[Token(Token = "0x600223E")]
		[Address(RVA = "0x3625698", Offset = "0x3625698", VA = "0x3625698", Slot = "51")]
		protected override void Update()
		{
		}

		[Token(Token = "0x600223F")]
		[Address(RVA = "0x36261E0", Offset = "0x36261E0", VA = "0x36261E0", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6002240")]
		[Address(RVA = "0x3626478", Offset = "0x3626478", VA = "0x3626478")]
		private void OnEnabled(bool enabled)
		{
		}

		[Token(Token = "0x6002241")]
		[Address(RVA = "0x36266FC", Offset = "0x36266FC", VA = "0x36266FC", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6002242")]
		[Address(RVA = "0x3626730", Offset = "0x3626730", VA = "0x3626730", Slot = "8")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6002243")]
		[Address(RVA = "0x362680C", Offset = "0x362680C", VA = "0x362680C")]
		public void OnDataChangeDelegate()
		{
		}

		[Token(Token = "0x6002244")]
		[Address(RVA = "0x3626304", Offset = "0x3626304", VA = "0x3626304")]
		public void SetValues(ref ChartData1D values)
		{
		}

		[Token(Token = "0x6002245")]
		[Address(RVA = "0x3626818", Offset = "0x3626818", VA = "0x3626818")]
		private void AddQuad(Vector2 p0, Vector2 p1, Vector2 p2, Vector2 p3, Color32 color1, Color32 color2)
		{
		}

		[Token(Token = "0x6002246")]
		[Address(RVA = "0x3625AC4", Offset = "0x3625AC4", VA = "0x3625AC4")]
		private float Angle(Vector3 a, Vector3 b)
		{
			return default(float);
		}

		[Token(Token = "0x6002247")]
		[Address(RVA = "0x3626C64", Offset = "0x3626C64", VA = "0x3626C64", Slot = "50")]
		protected override void Create()
		{
		}

		[Token(Token = "0x6002248")]
		[Address(RVA = "0x3625B80", Offset = "0x3625B80", VA = "0x3625B80")]
		private void ChangeCursor(int newCursor, bool create = false)
		{
		}

		[Token(Token = "0x6002249")]
		[Address(RVA = "0x36277E4", Offset = "0x36277E4", VA = "0x36277E4", Slot = "55")]
		public virtual void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600224A")]
		[Address(RVA = "0x36277F0", Offset = "0x36277F0", VA = "0x36277F0", Slot = "56")]
		public virtual void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600224B")]
		[Address(RVA = "0x362781C", Offset = "0x362781C", VA = "0x362781C", Slot = "57")]
		public virtual void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600224C")]
		[Address(RVA = "0x3627B30", Offset = "0x3627B30", VA = "0x3627B30")]
		public PieChart()
		{
		}
	}
	[Token(Token = "0x200046F")]
	public class PieChartMesh : ChartMesh
	{
		[Token(Token = "0x4001D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1479F30", Offset = "0x1479F30")]
		private float innerRadius;

		[Token(Token = "0x4001D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1479F74", Offset = "0x1479F74")]
		private float startAngle;

		[Token(Token = "0x4001D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x1479FB8", Offset = "0x1479FB8")]
		private float chartSize;

		[Token(Token = "0x4001D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ChartData1D values;

		[Token(Token = "0x17000448")]
		public float InnerRadius
		{
			[Token(Token = "0x600224D")]
			[Address(RVA = "0x3627D44", Offset = "0x3627D44", VA = "0x3627D44")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600224E")]
			[Address(RVA = "0x3627D4C", Offset = "0x3627D4C", VA = "0x3627D4C")]
			set
			{
			}
		}

		[Token(Token = "0x17000449")]
		public float StartAngle
		{
			[Token(Token = "0x600224F")]
			[Address(RVA = "0x3627D80", Offset = "0x3627D80", VA = "0x3627D80")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002250")]
			[Address(RVA = "0x3627D88", Offset = "0x3627D88", VA = "0x3627D88")]
			set
			{
			}
		}

		[Token(Token = "0x1700044A")]
		public float ChartSize
		{
			[Token(Token = "0x6002251")]
			[Address(RVA = "0x3627DBC", Offset = "0x3627DBC", VA = "0x3627DBC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002252")]
			[Address(RVA = "0x3627DC4", Offset = "0x3627DC4", VA = "0x3627DC4")]
			set
			{
			}
		}

		[Token(Token = "0x6002253")]
		[Address(RVA = "0x3627E00", Offset = "0x3627E00", VA = "0x3627E00")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002254")]
		[Address(RVA = "0x3627F08", Offset = "0x3627F08", VA = "0x3627F08")]
		public void SetValues(ref ChartData1D values)
		{
		}

		[Token(Token = "0x6002255")]
		[Address(RVA = "0x3628084", Offset = "0x3628084", VA = "0x3628084", Slot = "4")]
		protected override void Create()
		{
		}

		[Token(Token = "0x6002256")]
		[Address(RVA = "0x3628E98", Offset = "0x3628E98", VA = "0x3628E98")]
		private void AddQuad(Vector2 p0, Vector2 p1, Vector2 p2, Vector2 p3, Color32 color1, Color32 color2)
		{
		}

		[Token(Token = "0x6002257")]
		[Address(RVA = "0x362918C", Offset = "0x362918C", VA = "0x362918C")]
		private float Angle(Vector3 a, Vector3 b)
		{
			return default(float);
		}

		[Token(Token = "0x6002258")]
		[Address(RVA = "0x3629248", Offset = "0x3629248", VA = "0x3629248")]
		public PieChartMesh()
		{
		}
	}
}
namespace Boxophobic
{
	[Token(Token = "0x2000470")]
	public class BCategoryAttribute : PropertyAttribute
	{
		[Token(Token = "0x4001D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Category;

		[Token(Token = "0x6002259")]
		[Address(RVA = "0x3616D38", Offset = "0x3616D38", VA = "0x3616D38")]
		public BCategoryAttribute(string c)
		{
		}
	}
	[Token(Token = "0x2000471")]
	public class BInteractiveAttribute : PropertyAttribute
	{
		[Token(Token = "0x4001D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Value;

		[Token(Token = "0x4001D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Keyword;

		[Token(Token = "0x4001D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int Type;

		[Token(Token = "0x600225A")]
		[Address(RVA = "0x3616D6C", Offset = "0x3616D6C", VA = "0x3616D6C")]
		public BInteractiveAttribute(int v)
		{
		}

		[Token(Token = "0x600225B")]
		[Address(RVA = "0x3616D9C", Offset = "0x3616D9C", VA = "0x3616D9C")]
		public BInteractiveAttribute(string k)
		{
		}
	}
	[Token(Token = "0x2000472")]
	public class BMessageAttribute : PropertyAttribute
	{
		[Token(Token = "0x4001D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Type;

		[Token(Token = "0x4001D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Message;

		[Token(Token = "0x4001D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Top;

		[Token(Token = "0x4001D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float Down;

		[Token(Token = "0x600225C")]
		[Address(RVA = "0x3616DD8", Offset = "0x3616DD8", VA = "0x3616DD8")]
		public BMessageAttribute(string t, string m, float top, float down)
		{
		}
	}
	[Token(Token = "0x2000473")]
	public class BRangeOptionsAttribute : PropertyAttribute
	{
		[Token(Token = "0x4001D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float min;

		[Token(Token = "0x4001D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float max;

		[Token(Token = "0x4001D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] options;

		[Token(Token = "0x600225D")]
		[Address(RVA = "0x3616E40", Offset = "0x3616E40", VA = "0x3616E40")]
		public BRangeOptionsAttribute(float m_min, float m_max, string[] m_options)
		{
		}
	}
	[Token(Token = "0x2000474")]
	public class BRangeSimpleAttribute : PropertyAttribute
	{
		[Token(Token = "0x4001D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float min;

		[Token(Token = "0x4001D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float max;

		[Token(Token = "0x600225E")]
		[Address(RVA = "0x3616E8C", Offset = "0x3616E8C", VA = "0x3616E8C")]
		public BRangeSimpleAttribute(float m_min, float m_max)
		{
		}
	}
}
namespace Boxophobic.StyledGUI
{
	[Token(Token = "0x2000475")]
	public class StyledBanner : PropertyAttribute
	{
		[Token(Token = "0x4001D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float colorR;

		[Token(Token = "0x4001D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float colorG;

		[Token(Token = "0x4001D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float colorB;

		[Token(Token = "0x4001D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string title;

		[Token(Token = "0x4001D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string subtitle;

		[Token(Token = "0x4001D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int spaceTop;

		[Token(Token = "0x4001D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int spaceBottom;

		[Token(Token = "0x4001D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string helpURL;

		[Token(Token = "0x600225F")]
		[Address(RVA = "0x3616EC4", Offset = "0x3616EC4", VA = "0x3616EC4")]
		public StyledBanner(string title, string subtitle, string helpURL)
		{
		}

		[Token(Token = "0x6002260")]
		[Address(RVA = "0x3616F38", Offset = "0x3616F38", VA = "0x3616F38")]
		public StyledBanner(float colorR, float colorG, float colorB, string title, string subtitle, string helpURL)
		{
		}

		[Token(Token = "0x6002261")]
		[Address(RVA = "0x3616FC8", Offset = "0x3616FC8", VA = "0x3616FC8")]
		public StyledBanner(float colorR, float colorG, float colorB, string title, string subtitle, int spaceTop, int spaceBottom, string helpURL)
		{
		}
	}
	[Token(Token = "0x2000476")]
	public class StyledCategory : PropertyAttribute
	{
		[Token(Token = "0x4001D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string category;

		[Token(Token = "0x6002262")]
		[Address(RVA = "0x3617064", Offset = "0x3617064", VA = "0x3617064")]
		public StyledCategory(string category)
		{
		}
	}
	[Token(Token = "0x2000477")]
	public class StyledInteractive : PropertyAttribute
	{
		[Token(Token = "0x4001D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int value;

		[Token(Token = "0x4001D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string keyword;

		[Token(Token = "0x4001D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int type;

		[Token(Token = "0x6002263")]
		[Address(RVA = "0x3617098", Offset = "0x3617098", VA = "0x3617098")]
		public StyledInteractive(int v)
		{
		}

		[Token(Token = "0x6002264")]
		[Address(RVA = "0x36170C8", Offset = "0x36170C8", VA = "0x36170C8")]
		public StyledInteractive(string k)
		{
		}
	}
	[Token(Token = "0x2000478")]
	public class StyledMessage : PropertyAttribute
	{
		[Token(Token = "0x4001D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Type;

		[Token(Token = "0x4001D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Message;

		[Token(Token = "0x4001D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Top;

		[Token(Token = "0x4001D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float Down;

		[Token(Token = "0x6002265")]
		[Address(RVA = "0x3617104", Offset = "0x3617104", VA = "0x3617104")]
		public StyledMessage(string Type, string Message)
		{
		}

		[Token(Token = "0x6002266")]
		[Address(RVA = "0x361715C", Offset = "0x361715C", VA = "0x361715C")]
		public StyledMessage(string Type, string Message, float Top, float Down)
		{
		}
	}
	[Token(Token = "0x2000479")]
	public class StyledPopupArray : PropertyAttribute
	{
		[Token(Token = "0x4001D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string array;

		[Token(Token = "0x6002267")]
		[Address(RVA = "0x36171CC", Offset = "0x36171CC", VA = "0x36171CC")]
		public StyledPopupArray(string array)
		{
		}
	}
	[Token(Token = "0x200047A")]
	public class StyledPopupLayers : PropertyAttribute
	{
		[Token(Token = "0x6002268")]
		[Address(RVA = "0x3617200", Offset = "0x3617200", VA = "0x3617200")]
		public StyledPopupLayers()
		{
		}
	}
	[Token(Token = "0x200047B")]
	public class StyledRangeOptions : PropertyAttribute
	{
		[Token(Token = "0x4001D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool simple;

		[Token(Token = "0x4001D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float min;

		[Token(Token = "0x4001D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float max;

		[Token(Token = "0x4001D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string displayLabel;

		[Token(Token = "0x4001D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] options;

		[Token(Token = "0x6002269")]
		[Address(RVA = "0x3617208", Offset = "0x3617208", VA = "0x3617208")]
		public StyledRangeOptions(float min, float max, string displayLabel, string[] options)
		{
		}
	}
	[Token(Token = "0x200047C")]
	public class StyledSpace : PropertyAttribute
	{
		[Token(Token = "0x4001D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int space;

		[Token(Token = "0x600226A")]
		[Address(RVA = "0x3617270", Offset = "0x3617270", VA = "0x3617270")]
		public StyledSpace(int space)
		{
		}
	}
	[Token(Token = "0x200047D")]
	public class StyledTexturePreview : PropertyAttribute
	{
		[Token(Token = "0x600226B")]
		[Address(RVA = "0x361729C", Offset = "0x361729C", VA = "0x361729C")]
		public StyledTexturePreview()
		{
		}
	}
	[Token(Token = "0x200047E")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x1469CD8", Offset = "0x1469CD8")]
	public sealed class StyledMonoHideScriptField : Attribute
	{
		[Token(Token = "0x600226C")]
		[Address(RVA = "0x36171C4", Offset = "0x36171C4", VA = "0x36171C4")]
		public StyledMonoHideScriptField()
		{
		}
	}
}
namespace Boxophobic.Utils
{
	[Token(Token = "0x200047F")]
	public class SettingsData : ScriptableObject
	{
		[Token(Token = "0x4001D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x147A000", Offset = "0x147A000")]
		public string data;

		[Token(Token = "0x600226D")]
		[Address(RVA = "0x36172A4", Offset = "0x36172A4", VA = "0x36172A4")]
		public SettingsData()
		{
		}
	}
}
namespace AmplitudeNS.MiniJSON
{
	[Token(Token = "0x2000480")]
	public static class Json
	{
		[Token(Token = "0x200076C")]
		private sealed class Parser : IDisposable
		{
			[Token(Token = "0x20007AD")]
			private enum TOKEN
			{
				[Token(Token = "0x4002AC2")]
				NONE,
				[Token(Token = "0x4002AC3")]
				CURLY_OPEN,
				[Token(Token = "0x4002AC4")]
				CURLY_CLOSE,
				[Token(Token = "0x4002AC5")]
				SQUARED_OPEN,
				[Token(Token = "0x4002AC6")]
				SQUARED_CLOSE,
				[Token(Token = "0x4002AC7")]
				COLON,
				[Token(Token = "0x4002AC8")]
				COMMA,
				[Token(Token = "0x4002AC9")]
				STRING,
				[Token(Token = "0x4002ACA")]
				NUMBER,
				[Token(Token = "0x4002ACB")]
				TRUE,
				[Token(Token = "0x4002ACC")]
				FALSE,
				[Token(Token = "0x4002ACD")]
				NULL
			}

			[Token(Token = "0x400290F")]
			private const string WHITE_SPACE = " \t\n\r";

			[Token(Token = "0x4002910")]
			private const string WORD_BREAK = " \t\n\r{}[],:\"";

			[Token(Token = "0x4002911")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private StringReader json;

			[Token(Token = "0x170005E7")]
			private char PeekChar
			{
				[Token(Token = "0x6002BB9")]
				[Address(RVA = "0x1ED4FDC", Offset = "0x1ED4FDC", VA = "0x1ED4FDC")]
				get
				{
					return default(char);
				}
			}

			[Token(Token = "0x170005E8")]
			private char NextChar
			{
				[Token(Token = "0x6002BBA")]
				[Address(RVA = "0x1ED4DCC", Offset = "0x1ED4DCC", VA = "0x1ED4DCC")]
				get
				{
					return default(char);
				}
			}

			[Token(Token = "0x170005E9")]
			private string NextWord
			{
				[Token(Token = "0x6002BBB")]
				[Address(RVA = "0x1ED4E54", Offset = "0x1ED4E54", VA = "0x1ED4E54")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005EA")]
			private TOKEN NextToken
			{
				[Token(Token = "0x6002BBC")]
				[Address(RVA = "0x1ED4748", Offset = "0x1ED4748", VA = "0x1ED4748")]
				get
				{
					return default(TOKEN);
				}
			}

			[Token(Token = "0x6002BAF")]
			[Address(RVA = "0x1ED454C", Offset = "0x1ED454C", VA = "0x1ED454C")]
			private Parser(string jsonString)
			{
			}

			[Token(Token = "0x6002BB0")]
			[Address(RVA = "0x1ED43A4", Offset = "0x1ED43A4", VA = "0x1ED43A4")]
			public static object Parse(string jsonString)
			{
				return null;
			}

			[Token(Token = "0x6002BB1")]
			[Address(RVA = "0x1ED45F8", Offset = "0x1ED45F8", VA = "0x1ED45F8", Slot = "4")]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002BB2")]
			[Address(RVA = "0x1ED4634", Offset = "0x1ED4634", VA = "0x1ED4634")]
			private Dictionary<string, object> ParseObject()
			{
				return null;
			}

			[Token(Token = "0x6002BB3")]
			[Address(RVA = "0x1ED4B60", Offset = "0x1ED4B60", VA = "0x1ED4B60")]
			private List<object> ParseArray()
			{
				return null;
			}

			[Token(Token = "0x6002BB4")]
			[Address(RVA = "0x1ED45D0", Offset = "0x1ED45D0", VA = "0x1ED45D0")]
			private object ParseValue()
			{
				return null;
			}

			[Token(Token = "0x6002BB5")]
			[Address(RVA = "0x1ED4C34", Offset = "0x1ED4C34", VA = "0x1ED4C34")]
			private object ParseByToken(TOKEN token)
			{
				return null;
			}

			[Token(Token = "0x6002BB6")]
			[Address(RVA = "0x1ED48F8", Offset = "0x1ED48F8", VA = "0x1ED48F8")]
			private string ParseString()
			{
				return null;
			}

			[Token(Token = "0x6002BB7")]
			[Address(RVA = "0x1ED4D10", Offset = "0x1ED4D10", VA = "0x1ED4D10")]
			private object ParseNumber()
			{
				return null;
			}

			[Token(Token = "0x6002BB8")]
			[Address(RVA = "0x1ED4F38", Offset = "0x1ED4F38", VA = "0x1ED4F38")]
			private void EatWhitespace()
			{
			}
		}

		[Token(Token = "0x200076D")]
		private sealed class Serializer
		{
			[Token(Token = "0x4002912")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private StringBuilder builder;

			[Token(Token = "0x6002BBD")]
			[Address(RVA = "0x1ED5064", Offset = "0x1ED5064", VA = "0x1ED5064")]
			private Serializer()
			{
			}

			[Token(Token = "0x6002BBE")]
			[Address(RVA = "0x1ED44D0", Offset = "0x1ED44D0", VA = "0x1ED44D0")]
			public static string Serialize(object obj)
			{
				return null;
			}

			[Token(Token = "0x6002BBF")]
			[Address(RVA = "0x1ED50D8", Offset = "0x1ED50D8", VA = "0x1ED50D8")]
			private void SerializeValue(object value)
			{
			}

			[Token(Token = "0x6002BC0")]
			[Address(RVA = "0x1ED5788", Offset = "0x1ED5788", VA = "0x1ED5788")]
			private void SerializeObject(IDictionary obj)
			{
			}

			[Token(Token = "0x6002BC1")]
			[Address(RVA = "0x1ED54CC", Offset = "0x1ED54CC", VA = "0x1ED54CC")]
			private void SerializeArray(IList anArray)
			{
			}

			[Token(Token = "0x6002BC2")]
			[Address(RVA = "0x1ED525C", Offset = "0x1ED525C", VA = "0x1ED525C")]
			private void SerializeString(string str)
			{
			}

			[Token(Token = "0x6002BC3")]
			[Address(RVA = "0x1ED5B70", Offset = "0x1ED5B70", VA = "0x1ED5B70")]
			private void SerializeOther(object value)
			{
			}
		}

		[Token(Token = "0x600226E")]
		[Address(RVA = "0x1ED4398", Offset = "0x1ED4398", VA = "0x1ED4398")]
		public static object Deserialize(string json)
		{
			return null;
		}

		[Token(Token = "0x600226F")]
		[Address(RVA = "0x1EC6F68", Offset = "0x1EC6F68", VA = "0x1EC6F68")]
		public static string Serialize(object obj)
		{
			return null;
		}
	}
}
namespace LSToolKit
{
	[Token(Token = "0x2000481")]
	public class LS360VRCamera : MonoBehaviour
	{
		[Token(Token = "0x200076E")]
		public enum ImageFormat
		{
			[Token(Token = "0x4002914")]
			PNG,
			[Token(Token = "0x4002915")]
			JPEG,
			[Token(Token = "0x4002916")]
			BMP
		}

		[Token(Token = "0x200076F")]
		public enum AntiAliasing
		{
			[Token(Token = "0x4002918")]
			_1 = 1,
			[Token(Token = "0x4002919")]
			_2 = 2,
			[Token(Token = "0x400291A")]
			_4 = 4,
			[Token(Token = "0x400291B")]
			_8 = 8
		}

		[Token(Token = "0x2000770")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146AA4C", Offset = "0x146AA4C")]
		private sealed class <StartFullCapture>d__95 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400291C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400291D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400291E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LS360VRCamera <>4__this;

			[Token(Token = "0x170005EB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BC7")]
				[Address(RVA = "0x1D80124", Offset = "0x1D80124", VA = "0x1D80124", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005EC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BC9")]
				[Address(RVA = "0x1D8018C", Offset = "0x1D8018C", VA = "0x1D8018C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BC4")]
			[Address(RVA = "0x1D7FF94", Offset = "0x1D7FF94", VA = "0x1D7FF94")]
			[DebuggerHidden]
			public <StartFullCapture>d__95(int <>1__state)
			{
			}

			[Token(Token = "0x6002BC5")]
			[Address(RVA = "0x1D7FFC0", Offset = "0x1D7FFC0", VA = "0x1D7FFC0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BC6")]
			[Address(RVA = "0x1D7FFC4", Offset = "0x1D7FFC4", VA = "0x1D7FFC4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BC8")]
			[Address(RVA = "0x1D8012C", Offset = "0x1D8012C", VA = "0x1D8012C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000771")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146AA5C", Offset = "0x146AA5C")]
		private sealed class <FadeOut>d__103 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400291F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002920")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002921")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LS360VRCamera <>4__this;

			[Token(Token = "0x4002922")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IEnumerable<LSFadeController> fadeControls;

			[Token(Token = "0x4002923")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x4002924")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private UnityEngine.Color <color>5__3;

			[Token(Token = "0x170005ED")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BCD")]
				[Address(RVA = "0x1D7FF24", Offset = "0x1D7FF24", VA = "0x1D7FF24", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005EE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BCF")]
				[Address(RVA = "0x1D7FF8C", Offset = "0x1D7FF8C", VA = "0x1D7FF8C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BCA")]
			[Address(RVA = "0x1D7FD5C", Offset = "0x1D7FD5C", VA = "0x1D7FD5C")]
			[DebuggerHidden]
			public <FadeOut>d__103(int <>1__state)
			{
			}

			[Token(Token = "0x6002BCB")]
			[Address(RVA = "0x1D7FD88", Offset = "0x1D7FD88", VA = "0x1D7FD88", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BCC")]
			[Address(RVA = "0x1D7FD8C", Offset = "0x1D7FD8C", VA = "0x1D7FD8C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BCE")]
			[Address(RVA = "0x1D7FF2C", Offset = "0x1D7FF2C", VA = "0x1D7FF2C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000772")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146AA6C", Offset = "0x146AA6C")]
		private sealed class <FadeIn>d__104 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002925")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002926")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002927")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LS360VRCamera <>4__this;

			[Token(Token = "0x4002928")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IEnumerable<LSFadeController> fadeControls;

			[Token(Token = "0x4002929")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x400292A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private UnityEngine.Color <color>5__3;

			[Token(Token = "0x170005EF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BD3")]
				[Address(RVA = "0x1D7FCEC", Offset = "0x1D7FCEC", VA = "0x1D7FCEC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005F0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BD5")]
				[Address(RVA = "0x1D7FD54", Offset = "0x1D7FD54", VA = "0x1D7FD54", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BD0")]
			[Address(RVA = "0x1D7FB10", Offset = "0x1D7FB10", VA = "0x1D7FB10")]
			[DebuggerHidden]
			public <FadeIn>d__104(int <>1__state)
			{
			}

			[Token(Token = "0x6002BD1")]
			[Address(RVA = "0x1D7FB3C", Offset = "0x1D7FB3C", VA = "0x1D7FB3C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BD2")]
			[Address(RVA = "0x1D7FB40", Offset = "0x1D7FB40", VA = "0x1D7FB40", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BD4")]
			[Address(RVA = "0x1D7FCF4", Offset = "0x1D7FCF4", VA = "0x1D7FCF4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000773")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146AA7C", Offset = "0x146AA7C")]
		private sealed class <>c__DisplayClass105_0
		{
			[Token(Token = "0x400292B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LS360VRCamera <>4__this;

			[Token(Token = "0x400292C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string filePath;

			[Token(Token = "0x6002BD6")]
			[Address(RVA = "0x2217150", Offset = "0x2217150", VA = "0x2217150")]
			public <>c__DisplayClass105_0()
			{
			}
		}

		[Token(Token = "0x2000774")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146AA8C", Offset = "0x146AA8C")]
		private sealed class <>c__DisplayClass105_1
		{
			[Token(Token = "0x400292D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Bitmap bitmap;

			[Token(Token = "0x400292E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public EncoderParameters myEncoderParameters;

			[Token(Token = "0x400292F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public <>c__DisplayClass105_0 CS$<>8__locals1;

			[Token(Token = "0x6002BD7")]
			[Address(RVA = "0x2217158", Offset = "0x2217158", VA = "0x2217158")]
			public <>c__DisplayClass105_1()
			{
			}

			[Token(Token = "0x6002BD8")]
			[Address(RVA = "0x2217160", Offset = "0x2217160", VA = "0x2217160")]
			internal void <CaptureScreenshotAsyncHelper>b__1()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000775")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146AA9C", Offset = "0x146AA9C")]
		private sealed class <>c
		{
			[Token(Token = "0x4002930")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002931")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<Camera> <>9__105_0;

			[Token(Token = "0x6002BDA")]
			[Address(RVA = "0x22170F4", Offset = "0x22170F4", VA = "0x22170F4")]
			public <>c()
			{
			}

			[Token(Token = "0x6002BDB")]
			[Address(RVA = "0x22170FC", Offset = "0x22170FC", VA = "0x22170FC")]
			internal int <CaptureScreenshotAsyncHelper>b__105_0(Camera x, Camera y)
			{
				return default(int);
			}
		}

		[Token(Token = "0x2000776")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146AAAC", Offset = "0x146AAAC")]
		private sealed class <CaptureScreenshotAsyncHelper>d__105 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002932")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002933")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002934")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LS360VRCamera <>4__this;

			[Token(Token = "0x4002935")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool async;

			[Token(Token = "0x4002936")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass105_0 <>8__1;

			[Token(Token = "0x4002937")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string filenameBase;

			[Token(Token = "0x4002938")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private <>c__DisplayClass105_1 <>8__2;

			[Token(Token = "0x4002939")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Camera[] <cameras>5__2;

			[Token(Token = "0x400293A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private List<LSFadeController> <fadeControls>5__3;

			[Token(Token = "0x400293B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private ComputeBuffer <convertPanoramaResultBuffer>5__4;

			[Token(Token = "0x400293C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private ComputeBuffer <forceWaitResultConvertPanoramaStereoBuffer>5__5;

			[Token(Token = "0x400293D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private ComputeBuffer <cameraPixelsBuffer>5__6;

			[Token(Token = "0x400293E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private ComputeBuffer <forceWaitResultTextureToBufferBuffer>5__7;

			[Token(Token = "0x400293F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private float <startTime>5__8;

			[Token(Token = "0x4002940")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private string <suffix>5__9;

			[Token(Token = "0x4002941")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private string <imagePath>5__10;

			[Token(Token = "0x4002942")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private bool <producedImageSuccess>5__11;

			[Token(Token = "0x4002943")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			private int <i>5__12;

			[Token(Token = "0x4002944")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private BitmapData <bmpData>5__13;

			[Token(Token = "0x4002945")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private IntPtr <ptr>5__14;

			[Token(Token = "0x4002946")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private byte[] <pixelValues>5__15;

			[Token(Token = "0x4002947")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			private Thread <thread>5__16;

			[Token(Token = "0x170005F1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BDF")]
				[Address(RVA = "0x221999C", Offset = "0x221999C", VA = "0x221999C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005F2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BE1")]
				[Address(RVA = "0x2219A04", Offset = "0x2219A04", VA = "0x2219A04", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BDC")]
			[Address(RVA = "0x22155F8", Offset = "0x22155F8", VA = "0x22155F8")]
			[DebuggerHidden]
			public <CaptureScreenshotAsyncHelper>d__105(int <>1__state)
			{
			}

			[Token(Token = "0x6002BDD")]
			[Address(RVA = "0x221726C", Offset = "0x221726C", VA = "0x221726C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BDE")]
			[Address(RVA = "0x2217270", Offset = "0x2217270", VA = "0x2217270", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BE0")]
			[Address(RVA = "0x22199A4", Offset = "0x22199A4", VA = "0x22199A4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000777")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146AABC", Offset = "0x146AABC")]
		private sealed class <CubemapToEquirectangular>d__115 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002948")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002949")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400294A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LS360VRCamera <>4__this;

			[Token(Token = "0x400294B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ComputeBuffer convertPanoramaResultBuffer;

			[Token(Token = "0x400294C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public byte[] pixelValues;

			[Token(Token = "0x400294D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int stride;

			[Token(Token = "0x400294E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public int panoramaWidth;

			[Token(Token = "0x400294F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int panoramaHeight;

			[Token(Token = "0x4002950")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public uint[] cameraPixels;

			[Token(Token = "0x4002951")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public bool async;

			[Token(Token = "0x4002952")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public int cameraWidth;

			[Token(Token = "0x4002953")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public int cameraHeight;

			[Token(Token = "0x4002954")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public int ssaaFactor;

			[Token(Token = "0x4002955")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private float <processingTimePerFrame>5__2;

			[Token(Token = "0x4002956")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			private int <y>5__3;

			[Token(Token = "0x4002957")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private int <x>5__4;

			[Token(Token = "0x170005F3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BE5")]
				[Address(RVA = "0x221A66C", Offset = "0x221A66C", VA = "0x221A66C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005F4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BE7")]
				[Address(RVA = "0x221A6D4", Offset = "0x221A6D4", VA = "0x221A6D4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BE2")]
			[Address(RVA = "0x2216344", Offset = "0x2216344", VA = "0x2216344")]
			[DebuggerHidden]
			public <CubemapToEquirectangular>d__115(int <>1__state)
			{
			}

			[Token(Token = "0x6002BE3")]
			[Address(RVA = "0x2219A0C", Offset = "0x2219A0C", VA = "0x2219A0C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BE4")]
			[Address(RVA = "0x2219A10", Offset = "0x2219A10", VA = "0x2219A10", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BE6")]
			[Address(RVA = "0x221A674", Offset = "0x221A674", VA = "0x221A674", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000778")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146AACC", Offset = "0x146AACC")]
		private sealed class <CubemapToEquirectangularCpu>d__117 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002958")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002959")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400295A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LS360VRCamera <>4__this;

			[Token(Token = "0x400295B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int cameraWidth;

			[Token(Token = "0x400295C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int cameraHeight;

			[Token(Token = "0x400295D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int ssaaFactor;

			[Token(Token = "0x400295E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int panoramaHeight;

			[Token(Token = "0x400295F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int panoramaWidth;

			[Token(Token = "0x4002960")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public bool async;

			[Token(Token = "0x4002961")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public uint[] cameraPixels;

			[Token(Token = "0x4002962")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public byte[] pixelValues;

			[Token(Token = "0x4002963")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public int stride;

			[Token(Token = "0x4002964")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private float <startTime>5__2;

			[Token(Token = "0x4002965")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private float <processingTimePerFrame>5__3;

			[Token(Token = "0x4002966")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			private float <maxWidth>5__4;

			[Token(Token = "0x4002967")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private float <maxHeight>5__5;

			[Token(Token = "0x4002968")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			private int <numPixelsAveraged>5__6;

			[Token(Token = "0x4002969")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private int <endYPositive>5__7;

			[Token(Token = "0x400296A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			private int <startYNegative>5__8;

			[Token(Token = "0x400296B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private int <endTopMixedRegion>5__9;

			[Token(Token = "0x400296C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			private int <startBottomMixedRegion>5__10;

			[Token(Token = "0x400296D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private int <startXNegative>5__11;

			[Token(Token = "0x400296E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			private int <endXNegative>5__12;

			[Token(Token = "0x400296F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private int <startZPositive>5__13;

			[Token(Token = "0x4002970")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			private int <endZPositive>5__14;

			[Token(Token = "0x4002971")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private int <startXPositive>5__15;

			[Token(Token = "0x4002972")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			private int <endXPositive>5__16;

			[Token(Token = "0x4002973")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private int <startZNegative>5__17;

			[Token(Token = "0x4002974")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			private int <endZNegative>5__18;

			[Token(Token = "0x170005F5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BEB")]
				[Address(RVA = "0x221B818", Offset = "0x221B818", VA = "0x221B818", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005F6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BED")]
				[Address(RVA = "0x221B880", Offset = "0x221B880", VA = "0x221B880", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BE8")]
			[Address(RVA = "0x2216570", Offset = "0x2216570", VA = "0x2216570")]
			[DebuggerHidden]
			public <CubemapToEquirectangularCpu>d__117(int <>1__state)
			{
			}

			[Token(Token = "0x6002BE9")]
			[Address(RVA = "0x221A6DC", Offset = "0x221A6DC", VA = "0x221A6DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BEA")]
			[Address(RVA = "0x221A6E0", Offset = "0x221A6E0", VA = "0x221A6E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BEC")]
			[Address(RVA = "0x221B820", Offset = "0x221B820", VA = "0x221B820", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000779")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146AADC", Offset = "0x146AADC")]
		private sealed class <CubemapToEquirectangularCpuPositiveY>d__118 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002975")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002976")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002977")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int startY;

			[Token(Token = "0x4002978")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int startX;

			[Token(Token = "0x4002979")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int ssaaFactor;

			[Token(Token = "0x400297A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int panoramaWidth;

			[Token(Token = "0x400297B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int panoramaHeight;

			[Token(Token = "0x400297C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public LS360VRCamera <>4__this;

			[Token(Token = "0x400297D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public uint[] cameraPixels;

			[Token(Token = "0x400297E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public int stride;

			[Token(Token = "0x400297F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public byte[] pixelValues;

			[Token(Token = "0x4002980")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public int numPixelsAveraged;

			[Token(Token = "0x4002981")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public float startTime;

			[Token(Token = "0x4002982")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public float processingTimePerFrame;

			[Token(Token = "0x4002983")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public int endX;

			[Token(Token = "0x4002984")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public int endY;

			[Token(Token = "0x4002985")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			private int <y>5__2;

			[Token(Token = "0x4002986")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private int <x>5__3;

			[Token(Token = "0x170005F7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BF1")]
				[Address(RVA = "0x1D7F640", Offset = "0x1D7F640", VA = "0x1D7F640", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005F8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BF3")]
				[Address(RVA = "0x1D7F6A8", Offset = "0x1D7F6A8", VA = "0x1D7F6A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BEE")]
			[Address(RVA = "0x1D7F250", Offset = "0x1D7F250", VA = "0x1D7F250")]
			[DebuggerHidden]
			public <CubemapToEquirectangularCpuPositiveY>d__118(int <>1__state)
			{
			}

			[Token(Token = "0x6002BEF")]
			[Address(RVA = "0x1D7F27C", Offset = "0x1D7F27C", VA = "0x1D7F27C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BF0")]
			[Address(RVA = "0x1D7F280", Offset = "0x1D7F280", VA = "0x1D7F280", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BF2")]
			[Address(RVA = "0x1D7F648", Offset = "0x1D7F648", VA = "0x1D7F648", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200077A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146AAEC", Offset = "0x146AAEC")]
		private sealed class <CubemapToEquirectangularCpuNegativeY>d__119 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002987")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002988")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002989")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int startY;

			[Token(Token = "0x400298A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int startX;

			[Token(Token = "0x400298B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int ssaaFactor;

			[Token(Token = "0x400298C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int panoramaWidth;

			[Token(Token = "0x400298D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int panoramaHeight;

			[Token(Token = "0x400298E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public LS360VRCamera <>4__this;

			[Token(Token = "0x400298F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public uint[] cameraPixels;

			[Token(Token = "0x4002990")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public int stride;

			[Token(Token = "0x4002991")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public byte[] pixelValues;

			[Token(Token = "0x4002992")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public int numPixelsAveraged;

			[Token(Token = "0x4002993")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public float startTime;

			[Token(Token = "0x4002994")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public float processingTimePerFrame;

			[Token(Token = "0x4002995")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public int endX;

			[Token(Token = "0x4002996")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public int endY;

			[Token(Token = "0x4002997")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			private int <y>5__2;

			[Token(Token = "0x4002998")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private int <x>5__3;

			[Token(Token = "0x170005F9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BF7")]
				[Address(RVA = "0x221C60C", Offset = "0x221C60C", VA = "0x221C60C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005FA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BF9")]
				[Address(RVA = "0x221C674", Offset = "0x221C674", VA = "0x221C674", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BF4")]
			[Address(RVA = "0x22167E4", Offset = "0x22167E4", VA = "0x22167E4")]
			[DebuggerHidden]
			public <CubemapToEquirectangularCpuNegativeY>d__119(int <>1__state)
			{
			}

			[Token(Token = "0x6002BF5")]
			[Address(RVA = "0x221C24C", Offset = "0x221C24C", VA = "0x221C24C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BF6")]
			[Address(RVA = "0x221C250", Offset = "0x221C250", VA = "0x221C250", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BF8")]
			[Address(RVA = "0x221C614", Offset = "0x221C614", VA = "0x221C614", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200077B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146AAFC", Offset = "0x146AAFC")]
		private sealed class <CubemapToEquirectangularCpuPositiveX>d__120 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002999")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400299A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400299B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int startY;

			[Token(Token = "0x400299C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int startX;

			[Token(Token = "0x400299D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int ssaaFactor;

			[Token(Token = "0x400299E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int panoramaWidth;

			[Token(Token = "0x400299F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int panoramaHeight;

			[Token(Token = "0x40029A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public LS360VRCamera <>4__this;

			[Token(Token = "0x40029A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public uint[] cameraPixels;

			[Token(Token = "0x40029A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public int stride;

			[Token(Token = "0x40029A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public byte[] pixelValues;

			[Token(Token = "0x40029A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public int numPixelsAveraged;

			[Token(Token = "0x40029A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public float startTime;

			[Token(Token = "0x40029A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public float processingTimePerFrame;

			[Token(Token = "0x40029A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public int endX;

			[Token(Token = "0x40029A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public int endY;

			[Token(Token = "0x40029A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			private int <y>5__2;

			[Token(Token = "0x40029AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private int <x>5__3;

			[Token(Token = "0x170005FB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BFD")]
				[Address(RVA = "0x221CE6C", Offset = "0x221CE6C", VA = "0x221CE6C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005FC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BFF")]
				[Address(RVA = "0x221CED4", Offset = "0x221CED4", VA = "0x221CED4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BFA")]
			[Address(RVA = "0x2216934", Offset = "0x2216934", VA = "0x2216934")]
			[DebuggerHidden]
			public <CubemapToEquirectangularCpuPositiveX>d__120(int <>1__state)
			{
			}

			[Token(Token = "0x6002BFB")]
			[Address(RVA = "0x221CAAC", Offset = "0x221CAAC", VA = "0x221CAAC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BFC")]
			[Address(RVA = "0x221CAB0", Offset = "0x221CAB0", VA = "0x221CAB0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BFE")]
			[Address(RVA = "0x221CE74", Offset = "0x221CE74", VA = "0x221CE74", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200077C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146AB0C", Offset = "0x146AB0C")]
		private sealed class <CubemapToEquirectangularCpuNegativeX>d__121 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40029AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40029AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40029AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int startY;

			[Token(Token = "0x40029AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int startX;

			[Token(Token = "0x40029AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int ssaaFactor;

			[Token(Token = "0x40029B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int panoramaWidth;

			[Token(Token = "0x40029B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int panoramaHeight;

			[Token(Token = "0x40029B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public LS360VRCamera <>4__this;

			[Token(Token = "0x40029B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public uint[] cameraPixels;

			[Token(Token = "0x40029B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public int stride;

			[Token(Token = "0x40029B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public byte[] pixelValues;

			[Token(Token = "0x40029B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public int numPixelsAveraged;

			[Token(Token = "0x40029B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public float startTime;

			[Token(Token = "0x40029B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public float processingTimePerFrame;

			[Token(Token = "0x40029B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public int endX;

			[Token(Token = "0x40029BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public int endY;

			[Token(Token = "0x40029BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			private int <y>5__2;

			[Token(Token = "0x40029BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private int <x>5__3;

			[Token(Token = "0x170005FD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C03")]
				[Address(RVA = "0x221C1DC", Offset = "0x221C1DC", VA = "0x221C1DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170005FE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C05")]
				[Address(RVA = "0x221C244", Offset = "0x221C244", VA = "0x221C244", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C00")]
			[Address(RVA = "0x2216A84", Offset = "0x2216A84", VA = "0x2216A84")]
			[DebuggerHidden]
			public <CubemapToEquirectangularCpuNegativeX>d__121(int <>1__state)
			{
			}

			[Token(Token = "0x6002C01")]
			[Address(RVA = "0x221BE1C", Offset = "0x221BE1C", VA = "0x221BE1C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C02")]
			[Address(RVA = "0x221BE20", Offset = "0x221BE20", VA = "0x221BE20", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C04")]
			[Address(RVA = "0x221C1E4", Offset = "0x221C1E4", VA = "0x221C1E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200077D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146AB1C", Offset = "0x146AB1C")]
		private sealed class <CubemapToEquirectangularCpuPositiveZ>d__122 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40029BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40029BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40029BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int startY;

			[Token(Token = "0x40029C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int startX;

			[Token(Token = "0x40029C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int ssaaFactor;

			[Token(Token = "0x40029C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int panoramaWidth;

			[Token(Token = "0x40029C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int panoramaHeight;

			[Token(Token = "0x40029C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public LS360VRCamera <>4__this;

			[Token(Token = "0x40029C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public uint[] cameraPixels;

			[Token(Token = "0x40029C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public int stride;

			[Token(Token = "0x40029C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public byte[] pixelValues;

			[Token(Token = "0x40029C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public int numPixelsAveraged;

			[Token(Token = "0x40029C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public float startTime;

			[Token(Token = "0x40029CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public float processingTimePerFrame;

			[Token(Token = "0x40029CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public int endX;

			[Token(Token = "0x40029CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public int endY;

			[Token(Token = "0x40029CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			private int <y>5__2;

			[Token(Token = "0x40029CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private int <x>5__3;

			[Token(Token = "0x170005FF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C09")]
				[Address(RVA = "0x1D7FAA0", Offset = "0x1D7FAA0", VA = "0x1D7FAA0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000600")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C0B")]
				[Address(RVA = "0x1D7FB08", Offset = "0x1D7FB08", VA = "0x1D7FB08", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C06")]
			[Address(RVA = "0x1D7F6B0", Offset = "0x1D7F6B0", VA = "0x1D7F6B0")]
			[DebuggerHidden]
			public <CubemapToEquirectangularCpuPositiveZ>d__122(int <>1__state)
			{
			}

			[Token(Token = "0x6002C07")]
			[Address(RVA = "0x1D7F6DC", Offset = "0x1D7F6DC", VA = "0x1D7F6DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C08")]
			[Address(RVA = "0x1D7F6E0", Offset = "0x1D7F6E0", VA = "0x1D7F6E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C0A")]
			[Address(RVA = "0x1D7FAA8", Offset = "0x1D7FAA8", VA = "0x1D7FAA8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200077E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146AB2C", Offset = "0x146AB2C")]
		private sealed class <CubemapToEquirectangularCpuNegativeZ>d__123 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40029CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40029D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40029D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int startY;

			[Token(Token = "0x40029D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int startX;

			[Token(Token = "0x40029D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int ssaaFactor;

			[Token(Token = "0x40029D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int panoramaWidth;

			[Token(Token = "0x40029D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int panoramaHeight;

			[Token(Token = "0x40029D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public LS360VRCamera <>4__this;

			[Token(Token = "0x40029D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public uint[] cameraPixels;

			[Token(Token = "0x40029D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public int stride;

			[Token(Token = "0x40029D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public byte[] pixelValues;

			[Token(Token = "0x40029DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public int numPixelsAveraged;

			[Token(Token = "0x40029DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public float startTime;

			[Token(Token = "0x40029DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public float processingTimePerFrame;

			[Token(Token = "0x40029DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public int endX;

			[Token(Token = "0x40029DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public int endY;

			[Token(Token = "0x40029DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			private int <y>5__2;

			[Token(Token = "0x40029E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private int <x>5__3;

			[Token(Token = "0x17000601")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C0F")]
				[Address(RVA = "0x221CA3C", Offset = "0x221CA3C", VA = "0x221CA3C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000602")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C11")]
				[Address(RVA = "0x221CAA4", Offset = "0x221CAA4", VA = "0x221CAA4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C0C")]
			[Address(RVA = "0x2216CF8", Offset = "0x2216CF8", VA = "0x2216CF8")]
			[DebuggerHidden]
			public <CubemapToEquirectangularCpuNegativeZ>d__123(int <>1__state)
			{
			}

			[Token(Token = "0x6002C0D")]
			[Address(RVA = "0x221C67C", Offset = "0x221C67C", VA = "0x221C67C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C0E")]
			[Address(RVA = "0x221C680", Offset = "0x221C680", VA = "0x221C680", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C10")]
			[Address(RVA = "0x221CA44", Offset = "0x221CA44", VA = "0x221CA44", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200077F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x146AB3C", Offset = "0x146AB3C")]
		private sealed class <CubemapToEquirectangularCpuGeneralCase>d__124 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40029E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40029E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40029E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int startY;

			[Token(Token = "0x40029E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int startX;

			[Token(Token = "0x40029E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int ssaaFactor;

			[Token(Token = "0x40029E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int panoramaWidth;

			[Token(Token = "0x40029E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int panoramaHeight;

			[Token(Token = "0x40029E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float maxWidth;

			[Token(Token = "0x40029E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float maxHeight;

			[Token(Token = "0x40029EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public LS360VRCamera <>4__this;

			[Token(Token = "0x40029EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public uint[] cameraPixels;

			[Token(Token = "0x40029EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public int stride;

			[Token(Token = "0x40029ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public byte[] pixelValues;

			[Token(Token = "0x40029EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public int numPixelsAveraged;

			[Token(Token = "0x40029EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public float startTime;

			[Token(Token = "0x40029F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public float processingTimePerFrame;

			[Token(Token = "0x40029F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public int endX;

			[Token(Token = "0x40029F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public int endY;

			[Token(Token = "0x40029F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			private int <y>5__2;

			[Token(Token = "0x40029F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private int <x>5__3;

			[Token(Token = "0x17000603")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C15")]
				[Address(RVA = "0x221BDAC", Offset = "0x221BDAC", VA = "0x221BDAC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000604")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C17")]
				[Address(RVA = "0x221BE14", Offset = "0x221BE14", VA = "0x221BE14", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C12")]
			[Address(RVA = "0x2216E5C", Offset = "0x2216E5C", VA = "0x2216E5C")]
			[DebuggerHidden]
			public <CubemapToEquirectangularCpuGeneralCase>d__124(int <>1__state)
			{
			}

			[Token(Token = "0x6002C13")]
			[Address(RVA = "0x221B888", Offset = "0x221B888", VA = "0x221B888", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C14")]
			[Address(RVA = "0x221B88C", Offset = "0x221B88C", VA = "0x221B88C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C16")]
			[Address(RVA = "0x221BDB4", Offset = "0x221BDB4", VA = "0x221BDB4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x147A010", Offset = "0x147A010")]
		public bool disableOVR;

		[Token(Token = "0x4001D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x147A048", Offset = "0x147A048")]
		public string captureFileName;

		[Token(Token = "0x4001D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string saveImagePath;

		[Token(Token = "0x4001D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x147A080", Offset = "0x147A080")]
		public KeyCode captureStill3DKey;

		[Token(Token = "0x4001D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public KeyCode captureStillKey;

		[Token(Token = "0x4001D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public KeyCode captureVideoKey;

		[Token(Token = "0x4001D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x147A0B8", Offset = "0x147A0B8")]
		public ImageFormat imageFormat;

		[Token(Token = "0x4001D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int still3DResolutionWidth;

		[Token(Token = "0x4001D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int stillResolutionWidth;

		[Token(Token = "0x4001D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int videoResolutionWidth;

		[Token(Token = "0x4001D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int resolutionWidth;

		[Token(Token = "0x4001D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AntiAliasing antiAliasing;

		[Token(Token = "0x4001D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int ssaaFactor;

		[Token(Token = "0x4001D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x147A0F0", Offset = "0x147A0F0")]
		public int frameRate;

		[Token(Token = "0x4001D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int maxFramesToRecord;

		[Token(Token = "0x4001D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x147A128", Offset = "0x147A128")]
		public bool fadeDuringCapture;

		[Token(Token = "0x4001D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float fadeTime;

		[Token(Token = "0x4001D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public UnityEngine.Color fadeColor;

		[Token(Token = "0x4001D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x147A160", Offset = "0x147A160")]
		public bool enableDebugging;

		[Token(Token = "0x4001D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Camera targetCamera;

		[Token(Token = "0x4001D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private GameObject[] camGos;

		[Token(Token = "0x4001D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Camera cam;

		[Token(Token = "0x4001D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private LSCopyCamImageEffect copyCameraScript;

		[Token(Token = "0x4001D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private ComputeShader convertPanoramaShader;

		[Token(Token = "0x4001D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private ComputeShader convertPanoramaStereoShader;

		[Token(Token = "0x4001D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private ComputeShader textureToBufferShader;

		[Token(Token = "0x4001D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Material fadeMaterial;

		[Token(Token = "0x4001D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool captureStereoscopic;

		[Token(Token = "0x4001D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float interpupillaryDistance;

		[Token(Token = "0x4001D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private int numCirclePoints;

		[Token(Token = "0x4001D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private int frameNumberDigits;

		[Token(Token = "0x4001D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float cpuMillisecondsPerFrame;

		[Token(Token = "0x4001D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[HideInInspector]
		public bool captureEveryFrame;

		[Token(Token = "0x4001D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
		private bool capturingEveryFrame;

		[Token(Token = "0x4001D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD6")]
		private bool usingGpuTransform;

		[Token(Token = "0x4001D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private CubemapFace[] faces;

		[Token(Token = "0x4001D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private int panoramaHeight;

		[Token(Token = "0x4001D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private int cameraWidth;

		[Token(Token = "0x4001D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private int cameraHeight;

		[Token(Token = "0x4001D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private RenderTexture cubemapRenderTexture;

		[Token(Token = "0x4001D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Texture2D forceWaitTexture;

		[Token(Token = "0x4001D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private int convertPanoramaKernelIdx;

		[Token(Token = "0x4001D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private int convertPanoramaYPositiveKernelIdx;

		[Token(Token = "0x4001D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private int convertPanoramaYNegativeKernelIdx;

		[Token(Token = "0x4001D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private int textureToBufferIdx;

		[Token(Token = "0x4001D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private int renderStereoIdx;

		[Token(Token = "0x4001D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private int[] convertPanoramaKernelIdxs;

		[Token(Token = "0x4001D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private byte[] imageFileBytes;

		[Token(Token = "0x4001D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private string videoBaseName;

		[Token(Token = "0x4001D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private int frameNumber;

		[Token(Token = "0x4001D77")]
		private const int ResultBufferSlices = 8;

		[Token(Token = "0x4001D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private float hFov;

		[Token(Token = "0x4001D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private float vFov;

		[Token(Token = "0x4001D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private float hFovAdjustDegrees;

		[Token(Token = "0x4001D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private float vFovAdjustDegrees;

		[Token(Token = "0x4001D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private float circleRadius;

		[Token(Token = "0x4001D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private int threadsX;

		[Token(Token = "0x4001D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private int threadsY;

		[Token(Token = "0x4001D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private int numCameras;

		[Token(Token = "0x4001D80")]
		private const int CamerasPerCirclePoint = 4;

		[Token(Token = "0x4001D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private uint[] cameraPixels;

		[Token(Token = "0x4001D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private uint[] resultPixels;

		[Token(Token = "0x4001D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private float tanHalfHFov;

		[Token(Token = "0x4001D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private float tanHalfVFov;

		[Token(Token = "0x4001D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private float hFovAdjust;

		[Token(Token = "0x4001D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private float vFovAdjust;

		[Token(Token = "0x4001D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private int overlapTextures;

		[Token(Token = "0x4001D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private bool initializeFailed;

		[Token(Token = "0x4001D89")]
		private const uint BufferSentinelValue = 1419455993u;

		[Token(Token = "0x4001D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private int lastConfiguredPanoramaWidth;

		[Token(Token = "0x4001D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		private int lastConfiguredNumCirclePoints;

		[Token(Token = "0x4001D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private int lastConfiguredSsaaFactor;

		[Token(Token = "0x4001D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		private float lastConfiguredInterpupillaryDistance;

		[Token(Token = "0x4001D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private bool lastConfiguredCaptureStereoscopic;

		[Token(Token = "0x4001D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x191")]
		private bool lastConfiguredSaveCubemap;

		[Token(Token = "0x4001D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x192")]
		private bool lastConfiguredUseGpuTransform;

		[Token(Token = "0x4001D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		private AntiAliasing lastConfiguredAntiAliasing;

		[Token(Token = "0x4001D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static LS360VRCamera instance;

		[Token(Token = "0x4001D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		internal bool Capturing;

		[Token(Token = "0x4001D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<Process> resizingProcessList;

		[Token(Token = "0x4001D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static List<string> resizingFilenames;

		[Token(Token = "0x6002270")]
		[Address(RVA = "0x22134AC", Offset = "0x22134AC", VA = "0x22134AC")]
		private System.Drawing.Imaging.ImageFormat FormatToDrawingFormat(ImageFormat format)
		{
			return null;
		}

		[Token(Token = "0x6002271")]
		[Address(RVA = "0x2213640", Offset = "0x2213640", VA = "0x2213640")]
		private string FormatMimeType(ImageFormat format)
		{
			return null;
		}

		[Token(Token = "0x6002272")]
		[Address(RVA = "0x22136A4", Offset = "0x22136A4", VA = "0x22136A4")]
		private string FormatToExtension(ImageFormat format)
		{
			return null;
		}

		[Token(Token = "0x6002273")]
		[Address(RVA = "0x2213708", Offset = "0x2213708", VA = "0x2213708")]
		public static LS360VRCamera Instance()
		{
			return null;
		}

		[Token(Token = "0x6002274")]
		[Address(RVA = "0x2213770", Offset = "0x2213770", VA = "0x2213770")]
		public string GetCaptureBaseName()
		{
			return null;
		}

		[Token(Token = "0x6002275")]
		[Address(RVA = "0x2213778", Offset = "0x2213778", VA = "0x2213778")]
		public void Awake()
		{
		}

		[Token(Token = "0x6002276")]
		[Address(RVA = "0x221388C", Offset = "0x221388C", VA = "0x221388C")]
		public void Start()
		{
		}

		[Token(Token = "0x6002277")]
		[Address(RVA = "0x2213A74", Offset = "0x2213A74", VA = "0x2213A74")]
		private float IpdScaleFunction(float latitudeNormalized)
		{
			return default(float);
		}

		[Token(Token = "0x6002278")]
		[Address(RVA = "0x2213AFC", Offset = "0x2213AFC", VA = "0x2213AFC")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6002279")]
		[Address(RVA = "0x2213B00", Offset = "0x2213B00", VA = "0x2213B00")]
		private void Cleanup()
		{
		}

		[Token(Token = "0x600227A")]
		[Address(RVA = "0x221399C", Offset = "0x221399C", VA = "0x221399C")]
		private void Reinitialize()
		{
		}

		[Token(Token = "0x600227B")]
		[Address(RVA = "0x2213DC4", Offset = "0x2213DC4", VA = "0x2213DC4")]
		private void ReinitializeBody()
		{
		}

		[Token(Token = "0x600227C")]
		[Address(RVA = "0x2214A4C", Offset = "0x2214A4C", VA = "0x2214A4C")]
		private void Log(string s)
		{
		}

		[Token(Token = "0x600227D")]
		[Address(RVA = "0x2214ADC", Offset = "0x2214ADC", VA = "0x2214ADC")]
		public void Update()
		{
		}

		[Token(Token = "0x600227E")]
		[Address(RVA = "0x22150BC", Offset = "0x22150BC", VA = "0x22150BC")]
		public void StartCaptureEveryFrame()
		{
		}

		[Token(Token = "0x600227F")]
		[Address(RVA = "0x2215140", Offset = "0x2215140", VA = "0x2215140")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1487020", Offset = "0x1487020")]
		private IEnumerator StartFullCapture()
		{
			return null;
		}

		[Token(Token = "0x6002280")]
		[Address(RVA = "0x2214FA0", Offset = "0x2214FA0", VA = "0x2214FA0")]
		public void StopCaptureEveryFrame()
		{
		}

		[Token(Token = "0x6002281")]
		[Address(RVA = "0x2214FE8", Offset = "0x2214FE8", VA = "0x2214FE8")]
		public void CaptureScreenshotSync(string filenameBase)
		{
		}

		[Token(Token = "0x6002282")]
		[Address(RVA = "0x2215110", Offset = "0x2215110", VA = "0x2215110")]
		public void CaptureScreenshotAsync(string filenameBase)
		{
		}

		[Token(Token = "0x6002283")]
		[Address(RVA = "0x2215260", Offset = "0x2215260", VA = "0x2215260")]
		private void SetFadersEnabled(IEnumerable<LSFadeController> fadeControls, bool value)
		{
		}

		[Token(Token = "0x6002284")]
		[Address(RVA = "0x22154C8", Offset = "0x22154C8", VA = "0x22154C8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1487084", Offset = "0x1487084")]
		public IEnumerator FadeOut(IEnumerable<LSFadeController> fadeControls)
		{
			return null;
		}

		[Token(Token = "0x6002285")]
		[Address(RVA = "0x2215560", Offset = "0x2215560", VA = "0x2215560")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x14870E8", Offset = "0x14870E8")]
		public IEnumerator FadeIn(IEnumerable<LSFadeController> fadeControls)
		{
			return null;
		}

		[Token(Token = "0x6002286")]
		[Address(RVA = "0x22151BC", Offset = "0x22151BC", VA = "0x22151BC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x148714C", Offset = "0x148714C")]
		public IEnumerator CaptureScreenshotAsyncHelper(string filenameBase, bool async)
		{
			return null;
		}

		[Token(Token = "0x6002287")]
		[Address(RVA = "0x2215624", Offset = "0x2215624", VA = "0x2215624", Slot = "4")]
		public virtual bool OnCaptureStart()
		{
			return default(bool);
		}

		[Token(Token = "0x6002288")]
		[Address(RVA = "0x221562C", Offset = "0x221562C", VA = "0x221562C")]
		private ImageCodecInfo GetEncoder(System.Drawing.Imaging.ImageFormat format)
		{
			return null;
		}

		[Token(Token = "0x6002289")]
		[Address(RVA = "0x2215730", Offset = "0x2215730", VA = "0x2215730", Slot = "5")]
		public virtual Camera[] GetCaptureCameras()
		{
			return null;
		}

		[Token(Token = "0x600228A")]
		[Address(RVA = "0x2215844", Offset = "0x2215844", VA = "0x2215844", Slot = "6")]
		public virtual void BeforeRenderPanorama()
		{
		}

		[Token(Token = "0x600228B")]
		[Address(RVA = "0x2215848", Offset = "0x2215848", VA = "0x2215848", Slot = "7")]
		public virtual void AfterRenderPanorama()
		{
		}

		[Token(Token = "0x600228C")]
		[Address(RVA = "0x221584C", Offset = "0x221584C", VA = "0x221584C")]
		private static void ReportOutOfGraphicsMemory()
		{
		}

		[Token(Token = "0x600228D")]
		[Address(RVA = "0x22158B8", Offset = "0x22158B8", VA = "0x22158B8")]
		private void SaveCubemapImage(uint[] cameraPixels, string filenameBase, string suffix, string imagePath, int i, int bufferIdx)
		{
		}

		[Token(Token = "0x600228E")]
		[Address(RVA = "0x2215DBC", Offset = "0x2215DBC", VA = "0x2215DBC")]
		private Color32 GetCameraPixelBilinear(uint[] cameraPixels, int cameraNum, float u, float v)
		{
			return default(Color32);
		}

		[Token(Token = "0x600228F")]
		[Address(RVA = "0x22160EC", Offset = "0x22160EC", VA = "0x22160EC")]
		internal void ClearProcessQueue()
		{
		}

		[Token(Token = "0x6002290")]
		[Address(RVA = "0x221622C", Offset = "0x221622C", VA = "0x221622C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x14871B0", Offset = "0x14871B0")]
		private IEnumerator CubemapToEquirectangular(ComputeBuffer cameraPixelsBuffer, uint[] cameraPixels, ComputeBuffer convertPanoramaResultBuffer, int cameraWidth, int cameraHeight, byte[] pixelValues, int stride, int panoramaWidth, int panoramaHeight, int ssaaFactor, bool async)
		{
			return null;
		}

		[Token(Token = "0x6002291")]
		[Address(RVA = "0x2216370", Offset = "0x2216370", VA = "0x2216370")]
		private void writeOutputPixels(byte[] pixelValues, int stride, int bitmapWidth, int inHeight, int outHeight, int yStart)
		{
		}

		[Token(Token = "0x6002292")]
		[Address(RVA = "0x221646C", Offset = "0x221646C", VA = "0x221646C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1487214", Offset = "0x1487214")]
		private IEnumerator CubemapToEquirectangularCpu(uint[] cameraPixels, int cameraWidth, int cameraHeight, byte[] pixelValues, int stride, int panoramaWidth, int panoramaHeight, int ssaaFactor, bool async)
		{
			return null;
		}

		[Token(Token = "0x6002293")]
		[Address(RVA = "0x221659C", Offset = "0x221659C", VA = "0x221659C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1487278", Offset = "0x1487278")]
		private IEnumerator CubemapToEquirectangularCpuPositiveY(uint[] cameraPixels, byte[] pixelValues, int stride, int panoramaWidth, int panoramaHeight, int ssaaFactor, float startTime, float processingTimePerFrame, int numPixelsAveraged, int startX, int startY, int endX, int endY)
		{
			return null;
		}

		[Token(Token = "0x6002294")]
		[Address(RVA = "0x22166C0", Offset = "0x22166C0", VA = "0x22166C0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x14872DC", Offset = "0x14872DC")]
		private IEnumerator CubemapToEquirectangularCpuNegativeY(uint[] cameraPixels, byte[] pixelValues, int stride, int panoramaWidth, int panoramaHeight, int ssaaFactor, float startTime, float processingTimePerFrame, int numPixelsAveraged, int startX, int startY, int endX, int endY)
		{
			return null;
		}

		[Token(Token = "0x6002295")]
		[Address(RVA = "0x2216810", Offset = "0x2216810", VA = "0x2216810")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1487340", Offset = "0x1487340")]
		private IEnumerator CubemapToEquirectangularCpuPositiveX(uint[] cameraPixels, byte[] pixelValues, int stride, int panoramaWidth, int panoramaHeight, int ssaaFactor, float startTime, float processingTimePerFrame, int numPixelsAveraged, int startX, int startY, int endX, int endY)
		{
			return null;
		}

		[Token(Token = "0x6002296")]
		[Address(RVA = "0x2216960", Offset = "0x2216960", VA = "0x2216960")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x14873A4", Offset = "0x14873A4")]
		private IEnumerator CubemapToEquirectangularCpuNegativeX(uint[] cameraPixels, byte[] pixelValues, int stride, int panoramaWidth, int panoramaHeight, int ssaaFactor, float startTime, float processingTimePerFrame, int numPixelsAveraged, int startX, int startY, int endX, int endY)
		{
			return null;
		}

		[Token(Token = "0x6002297")]
		[Address(RVA = "0x2216AB0", Offset = "0x2216AB0", VA = "0x2216AB0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x1487408", Offset = "0x1487408")]
		private IEnumerator CubemapToEquirectangularCpuPositiveZ(uint[] cameraPixels, byte[] pixelValues, int stride, int panoramaWidth, int panoramaHeight, int ssaaFactor, float startTime, float processingTimePerFrame, int numPixelsAveraged, int startX, int startY, int endX, int endY)
		{
			return null;
		}

		[Token(Token = "0x6002298")]
		[Address(RVA = "0x2216BD4", Offset = "0x2216BD4", VA = "0x2216BD4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x148746C", Offset = "0x148746C")]
		private IEnumerator CubemapToEquirectangularCpuNegativeZ(uint[] cameraPixels, byte[] pixelValues, int stride, int panoramaWidth, int panoramaHeight, int ssaaFactor, float startTime, float processingTimePerFrame, int numPixelsAveraged, int startX, int startY, int endX, int endY)
		{
			return null;
		}

		[Token(Token = "0x6002299")]
		[Address(RVA = "0x2216D24", Offset = "0x2216D24", VA = "0x2216D24")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x14874D0", Offset = "0x14874D0")]
		private IEnumerator CubemapToEquirectangularCpuGeneralCase(uint[] cameraPixels, byte[] pixelValues, int stride, int panoramaWidth, int panoramaHeight, int ssaaFactor, float startTime, float processingTimePerFrame, float maxWidth, float maxHeight, int numPixelsAveraged, int startX, int startY, int endX, int endY)
		{
			return null;
		}

		[Token(Token = "0x600229A")]
		[Address(RVA = "0x2216E88", Offset = "0x2216E88", VA = "0x2216E88")]
		public LS360VRCamera()
		{
		}
	}
}
namespace LSToolKit.Helpers
{
	[Token(Token = "0x2000482")]
	public class LSCopyCamImageEffect : MonoBehaviour
	{
		[Token(Token = "0x2000780")]
		public struct InstanceMethodPair
		{
			[Token(Token = "0x40029F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public object Instance;

			[Token(Token = "0x40029F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public MethodInfo Method;
		}

		[Token(Token = "0x4001D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<InstanceMethodPair> onRenderImageMethods;

		[Token(Token = "0x4001D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RenderTexture[] temp;

		[Token(Token = "0x600229C")]
		[Address(RVA = "0x2212968", Offset = "0x2212968", VA = "0x2212968")]
		public static List<InstanceMethodPair> GenerateMethodList(Camera camToCopy)
		{
			return null;
		}

		[Token(Token = "0x600229D")]
		[Address(RVA = "0x2212BF0", Offset = "0x2212BF0", VA = "0x2212BF0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600229E")]
		[Address(RVA = "0x2212D20", Offset = "0x2212D20", VA = "0x2212D20")]
		private void OnRenderImage(RenderTexture src, RenderTexture dest)
		{
		}

		[Token(Token = "0x600229F")]
		[Address(RVA = "0x221332C", Offset = "0x221332C", VA = "0x221332C")]
		public LSCopyCamImageEffect()
		{
		}
	}
	[Token(Token = "0x2000483")]
	public class LSFadeController : MonoBehaviour
	{
		[Token(Token = "0x4001D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material fadeSourceMaterial;

		[Token(Token = "0x60022A0")]
		[Address(RVA = "0x22133CC", Offset = "0x22133CC", VA = "0x22133CC")]
		private void Start()
		{
		}

		[Token(Token = "0x60022A1")]
		[Address(RVA = "0x22133D0", Offset = "0x22133D0", VA = "0x22133D0")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x60022A2")]
		[Address(RVA = "0x22134A4", Offset = "0x22134A4", VA = "0x22134A4")]
		public LSFadeController()
		{
		}
	}
}
