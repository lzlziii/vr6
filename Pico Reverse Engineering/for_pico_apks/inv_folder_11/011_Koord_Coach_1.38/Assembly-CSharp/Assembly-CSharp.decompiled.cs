using System;
using System.Collections;
using System.Collections.Concurrent;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Text;
using Facebook.WitAi;
using Facebook.WitAi.Lib;
using Il2CppDummyDll;
using Oculus.Platform;
using Oculus.Platform.Models;
using TMPro;
using Unity.XR.PXR;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Rendering;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityEngine.XR;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class RotateObj : MonoBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject rotateObject;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 rotateSpeed;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0xA10ABC", Offset = "0xA10ABC", VA = "0xA10ABC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0xA10AC0", Offset = "0xA10AC0", VA = "0xA10AC0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0xA10B00", Offset = "0xA10B00", VA = "0xA10B00")]
	public RotateObj()
	{
	}
}
[Token(Token = "0x2000003")]
public class CameraHolder : MonoBehaviour
{
	[Token(Token = "0x2000004")]
	public struct SVA
	{
		[Token(Token = "0x4000016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float S;

		[Token(Token = "0x4000017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float V;

		[Token(Token = "0x4000018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float A;
	}

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Holder;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float currDistance;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float xRotate;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float yRotate;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float yMinLimit;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float yMaxLimit;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float prevDistance;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float x;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float y;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x69E600", Offset = "0x69E600")]
	private float windowDpi;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject[] Prefabs;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int Prefab;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject Instance;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float StartColor;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float HueColor;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Texture HueTexture;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ParticleSystem[] particleSystems;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<SVA> svList;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float H;

	[Token(Token = "0x6000004")]
	[Address(RVA = "0xF2524C", Offset = "0xF2524C", VA = "0xF2524C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0xF255A0", Offset = "0xF255A0", VA = "0xF255A0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0xF252DC", Offset = "0xF252DC", VA = "0xF252DC")]
	private void Counter(int count)
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0xF259D4", Offset = "0xF259D4", VA = "0xF259D4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0xF25DD8", Offset = "0xF25DD8", VA = "0xF25DD8")]
	private static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0xF25E08", Offset = "0xF25E08", VA = "0xF25E08")]
	public CameraHolder()
	{
	}
}
[Token(Token = "0x2000005")]
public class DemoShooting : MonoBehaviour
{
	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject FirePoint;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Camera Cam;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float MaxLength;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] Prefabs;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Ray RayMouse;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 direction;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion rotation;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x69E638", Offset = "0x69E638")]
	private float windowDpi;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int Prefab;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private GameObject Instance;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float hSliderValue;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float fireCountdown;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float buttonSaver;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Animation camAnim;

	[Token(Token = "0x600000A")]
	[Address(RVA = "0xA7A828", Offset = "0xA7A828", VA = "0xA7A828")]
	private void Start()
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0xA7A8E0", Offset = "0xA7A8E0", VA = "0xA7A8E0")]
	private void Update()
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0xA7AE60", Offset = "0xA7AE60", VA = "0xA7AE60")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0xA7A898", Offset = "0xA7A898", VA = "0xA7A898")]
	private void Counter(int count)
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0xA7AD84", Offset = "0xA7AD84", VA = "0xA7AD84")]
	private void RotateToMouseDirection(GameObject obj, Vector3 destination)
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0xA7B088", Offset = "0xA7B088", VA = "0xA7B088")]
	public DemoShooting()
	{
	}
}
[Token(Token = "0x2000006")]
public class AutoDestroyPS : MonoBehaviour
{
	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float timeLeft;

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x14A8150", Offset = "0x14A8150", VA = "0x14A8150")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x14A8238", Offset = "0x14A8238", VA = "0x14A8238")]
	public AutoDestroyPS()
	{
	}
}
[Token(Token = "0x2000007")]
public class ParticleCollisionInstance : MonoBehaviour
{
	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] EffectsOnCollision;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float DestroyTimeDelay;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool UseWorldSpacePosition;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float Offset;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 rotationOffset;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool useOnlyRotationOffset;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool UseFirePointRotation;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool DestoyMainEffect;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ParticleSystem part;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<ParticleCollisionEvent> collisionEvents;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ParticleSystem ps;

	[Token(Token = "0x6000012")]
	[Address(RVA = "0xA62084", Offset = "0xA62084", VA = "0xA62084")]
	private void Start()
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0xA620E0", Offset = "0xA620E0", VA = "0xA620E0")]
	private void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0xA625C0", Offset = "0xA625C0", VA = "0xA625C0")]
	public ParticleCollisionInstance()
	{
	}
}
[Token(Token = "0x2000008")]
public class ProjectileMover : MonoBehaviour
{
	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float hitOffset;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool UseFirePointRotation;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 rotationOffset;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject hit;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject flash;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Rigidbody rb;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject[] Detached;

	[Token(Token = "0x6000015")]
	[Address(RVA = "0xA0A000", Offset = "0xA0A000", VA = "0xA0A000")]
	private void Start()
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0xA0A2B0", Offset = "0xA0A2B0", VA = "0xA0A2B0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0xA0A31C", Offset = "0xA0A31C", VA = "0xA0A31C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0xA0A80C", Offset = "0xA0A80C", VA = "0xA0A80C")]
	public ProjectileMover()
	{
	}
}
[Token(Token = "0x2000009")]
public class ME_DemoGUI : MonoBehaviour
{
	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Character;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Model;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int Current;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] Prefabs;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Light Sun;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ReflectionProbe ReflectionProbe;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Light[] NightLights;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Texture HUETexture;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool UseMobileVersion;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject MobileCharacter;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject Target;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Color guiColor;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int currentNomber;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject characterInstance;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private GameObject modelInstance;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GUIStyle guiStyleHeader;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private GUIStyle guiStyleHeaderMobile;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float dpiScale;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool isDay;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float colorHUE;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float startSunIntensity;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Quaternion startSunRotation;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Color startAmbientLight;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float startAmbientIntencity;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float startReflectionIntencity;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private LightShadows startLightShadows;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private bool isButtonPressed;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private GameObject instanceShieldProjectile;

	[Token(Token = "0x6000019")]
	[Address(RVA = "0xD84E2C", Offset = "0xD84E2C", VA = "0xD84E2C")]
	private void Start()
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0xD852D4", Offset = "0xD852D4", VA = "0xD852D4")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0xD84FA0", Offset = "0xD84FA0", VA = "0xD84FA0")]
	private void ChangeCurrent(int delta)
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0xD859F8", Offset = "0xD859F8", VA = "0xD859F8")]
	private void RemoveClones()
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0xD85B20", Offset = "0xD85B20", VA = "0xD85B20")]
	private void ReactivateEffect()
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0xD85B8C", Offset = "0xD85B8C", VA = "0xD85B8C")]
	public ME_DemoGUI()
	{
	}
}
[Token(Token = "0x200000A")]
public class ME_MouseOrbit : MonoBehaviour
{
	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject target;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float distance;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float xSpeed;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ySpeed;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float yMinLimit;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float yMaxLimit;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float x;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float y;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float prevDistance;

	[Token(Token = "0x600001F")]
	[Address(RVA = "0xD85FD0", Offset = "0xD85FD0", VA = "0xD85FD0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0xD86008", Offset = "0xD86008", VA = "0xD86008")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0xD86450", Offset = "0xD86450", VA = "0xD86450")]
	private static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0xD86480", Offset = "0xD86480", VA = "0xD86480")]
	public ME_MouseOrbit()
	{
	}
}
[Token(Token = "0x200000B")]
public class ME_RealtimeReflection : MonoBehaviour
{
	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ReflectionProbe probe;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform camT;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool CanUpdate;

	[Token(Token = "0x6000023")]
	[Address(RVA = "0xD883C8", Offset = "0xD883C8", VA = "0xD883C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0xD8844C", Offset = "0xD8844C", VA = "0xD8844C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0xD884E8", Offset = "0xD884E8", VA = "0xD884E8")]
	public ME_RealtimeReflection()
	{
	}
}
[Token(Token = "0x200000C")]
public class ME_AnimatorEvents : MonoBehaviour
{
	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject EffectPrefab;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject SwordPrefab;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform SwordPosition;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform StartSwordPosition;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject EffectInstance;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject SwordInstance;

	[Token(Token = "0x6000026")]
	[Address(RVA = "0xD819D0", Offset = "0xD819D0", VA = "0xD819D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0xD81B78", Offset = "0xD81B78", VA = "0xD81B78")]
	public void ActivateEffect()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0xD81DA4", Offset = "0xD81DA4", VA = "0xD81DA4")]
	public void ActivateSword()
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0xD81E6C", Offset = "0xD81E6C", VA = "0xD81E6C")]
	public void UpdateColor(float HUE)
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0xD8240C", Offset = "0xD8240C", VA = "0xD8240C")]
	public ME_AnimatorEvents()
	{
	}
}
[Token(Token = "0x200000D")]
public static class ME_ColorHelper
{
	[Token(Token = "0x200000E")]
	public struct HSBColor
	{
		[Token(Token = "0x400006B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float H;

		[Token(Token = "0x400006C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float S;

		[Token(Token = "0x400006D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float B;

		[Token(Token = "0x400006E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float A;

		[Token(Token = "0x6000032")]
		[Address(RVA = "0x149113C", Offset = "0x149113C", VA = "0x149113C")]
		public HSBColor(float h, float s, float b, float a)
		{
		}
	}

	[Token(Token = "0x4000069")]
	private const float TOLERANCE = 0.0001f;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string[] colorProperties;

	[Token(Token = "0x600002B")]
	[Address(RVA = "0xD81FE4", Offset = "0xD81FE4", VA = "0xD81FE4")]
	public static HSBColor ColorToHSV(Color color)
	{
		return default(HSBColor);
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0xD821CC", Offset = "0xD821CC", VA = "0xD821CC")]
	public static Color HSVToColor(HSBColor hsbColor)
	{
		return default(Color);
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0xD82414", Offset = "0xD82414", VA = "0xD82414")]
	public static Color ConvertRGBColorByHUE(Color rgbColor, float hue)
	{
		return default(Color);
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0xD82530", Offset = "0xD82530", VA = "0xD82530")]
	public static void ChangeObjectColorByHUE(GameObject go, float hue)
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0xD831CC", Offset = "0xD831CC", VA = "0xD831CC")]
	private static Material setMatHUEColor(Material mat, string name, float hueColor)
	{
		return null;
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0xD832A4", Offset = "0xD832A4", VA = "0xD832A4")]
	private static Material setMatAlphaColor(Material mat, string name, float alpha)
	{
		return null;
	}
}
[Token(Token = "0x200000F")]
public class ME_EffectSettingColor : MonoBehaviour
{
	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color Color;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color previousColor;

	[Token(Token = "0x6000033")]
	[Address(RVA = "0xD85C68", Offset = "0xD85C68", VA = "0xD85C68")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0xD85C6C", Offset = "0xD85C6C", VA = "0xD85C6C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0xD85CB4", Offset = "0xD85CB4", VA = "0xD85CB4")]
	private void UpdateColor()
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0xD85D5C", Offset = "0xD85D5C", VA = "0xD85D5C")]
	public ME_EffectSettingColor()
	{
	}
}
[Token(Token = "0x2000010")]
[ExecuteInEditMode]
public class ME_CustomLight : MonoBehaviour
{
	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int MaxLightsCount;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Texture2D PointLightAttenuation;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Light> sceneLights;

	[Token(Token = "0x6000037")]
	[Address(RVA = "0xD836A8", Offset = "0xD836A8", VA = "0xD836A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0xD83A80", Offset = "0xD83A80", VA = "0xD83A80")]
	private void Update()
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0xD84C9C", Offset = "0xD84C9C", VA = "0xD84C9C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0xD83C5C", Offset = "0xD83C5C", VA = "0xD83C5C")]
	private List<Light> GetAllLights()
	{
		return null;
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0xD83E48", Offset = "0xD83E48", VA = "0xD83E48")]
	private int FillDirectionalLights(List<Light> lights, List<Vector4> lightPositions, List<Vector4> lightColors)
	{
		return default(int);
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0xD8437C", Offset = "0xD8437C", VA = "0xD8437C")]
	private int FillPointLights(List<Light> lights, List<Vector4> lightPositions, List<Vector4> lightColors)
	{
		return default(int);
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0xD83840", Offset = "0xD83840", VA = "0xD83840")]
	private Vector4[] ListToArrayWithMaxCount(List<Vector4> list, int count)
	{
		return null;
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0xD8409C", Offset = "0xD8409C", VA = "0xD8409C")]
	private List<Light> SortPointLightsByDistance(List<Light> lights)
	{
		return null;
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0xD84614", Offset = "0xD84614", VA = "0xD84614")]
	public Color SampleLightProbesUp(Vector3 pos, float grayScaleFactor)
	{
		return default(Color);
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0xD83960", Offset = "0xD83960", VA = "0xD83960")]
	private Texture2D GeneratePointAttenuationTexture()
	{
		return null;
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0xD84DD4", Offset = "0xD84DD4", VA = "0xD84DD4")]
	public ME_CustomLight()
	{
	}
}
[Token(Token = "0x2000011")]
public class ME_FixParticlesAligment : MonoBehaviour
{
	[Token(Token = "0x6000043")]
	[Address(RVA = "0xD85D90", Offset = "0xD85D90", VA = "0xD85D90")]
	private void Start()
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0xD85E10", Offset = "0xD85E10", VA = "0xD85E10")]
	public ME_FixParticlesAligment()
	{
	}
}
[Token(Token = "0x2000012")]
public class ME_LightCurves : MonoBehaviour
{
	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve LightCurve;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float GraphTimeMultiplier;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float GraphIntensityMultiplier;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool IsLoop;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool canUpdate;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float startTime;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Light lightSource;

	[Token(Token = "0x6000045")]
	[Address(RVA = "0xD85E18", Offset = "0xD85E18", VA = "0xD85E18")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0xD85EA0", Offset = "0xD85EA0", VA = "0xD85EA0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0xD85ED0", Offset = "0xD85ED0", VA = "0xD85ED0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0xD85F74", Offset = "0xD85F74", VA = "0xD85F74")]
	public ME_LightCurves()
	{
	}
}
[Token(Token = "0x2000013")]
public class ME_MeshMaterialEffect : MonoBehaviour
{
	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material Material;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool IsFirstMaterial;

	[Token(Token = "0x6000049")]
	[Address(RVA = "0xD85FC8", Offset = "0xD85FC8", VA = "0xD85FC8")]
	public ME_MeshMaterialEffect()
	{
	}
}
[Token(Token = "0x2000014")]
[ExecuteInEditMode]
public class ME_ParticleCollisionDecal : MonoBehaviour
{
	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem DecalParticles;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool IsBilboard;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool InstantiateWhenZeroSpeed;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float MaxGroundAngleDeviation;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float MinDistanceBetweenDecals;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float MinDistanceBetweenSurface;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<ParticleCollisionEvent> collisionEvents;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ParticleSystem initiatorPS;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<GameObject> collidedGameObjects;

	[Token(Token = "0x600004A")]
	[Address(RVA = "0xD8649C", Offset = "0xD8649C", VA = "0xD8649C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0xD865E4", Offset = "0xD865E4", VA = "0xD865E4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0xD86648", Offset = "0xD86648", VA = "0xD86648")]
	private void CollisionDetect()
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0xD86788", Offset = "0xD86788", VA = "0xD86788")]
	private void OnParticleCollisionManual(GameObject other, int aliveParticles = -1)
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0xD86BEC", Offset = "0xD86BEC", VA = "0xD86BEC")]
	private void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0xD86CB0", Offset = "0xD86CB0", VA = "0xD86CB0")]
	public ME_ParticleCollisionDecal()
	{
	}
}
[Token(Token = "0x2000015")]
[ExecuteInEditMode]
public class ME_ParticleGravityPoint : MonoBehaviour
{
	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Force;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool DistanceRelative;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem ps;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ParticleSystem.MainModule mainModule;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 prevPos;

	[Token(Token = "0x6000050")]
	[Address(RVA = "0xD86D98", Offset = "0xD86D98", VA = "0xD86D98")]
	private void Start()
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0xD86E18", Offset = "0xD86E18", VA = "0xD86E18")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0xD870D0", Offset = "0xD870D0", VA = "0xD870D0")]
	public ME_ParticleGravityPoint()
	{
	}
}
[Token(Token = "0x2000016")]
public class ME_ParticleTrails : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000017")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69C5A4", Offset = "0x69C5A4")]
	private sealed class <>c
	{
		[Token(Token = "0x4000094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<KeyValuePair<uint, GameObject>, bool> <>9__13_0;

		[Token(Token = "0x4000096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<KeyValuePair<uint, GameObject>, uint> <>9__13_1;

		[Token(Token = "0x4000097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<KeyValuePair<uint, GameObject>, GameObject> <>9__13_2;

		[Token(Token = "0x600005D")]
		[Address(RVA = "0x14911AC", Offset = "0x14911AC", VA = "0x14911AC")]
		public <>c()
		{
		}

		[Token(Token = "0x600005E")]
		[Address(RVA = "0x14911B4", Offset = "0x14911B4", VA = "0x14911B4")]
		internal bool <ClearEmptyHashes>b__13_0(KeyValuePair<uint, GameObject> h)
		{
			return default(bool);
		}

		[Token(Token = "0x600005F")]
		[Address(RVA = "0x1491228", Offset = "0x1491228", VA = "0x1491228")]
		internal uint <ClearEmptyHashes>b__13_1(KeyValuePair<uint, GameObject> h)
		{
			return default(uint);
		}

		[Token(Token = "0x6000060")]
		[Address(RVA = "0x1491268", Offset = "0x1491268", VA = "0x1491268")]
		internal GameObject <ClearEmptyHashes>b__13_2(KeyValuePair<uint, GameObject> h)
		{
			return null;
		}
	}

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject TrailPrefab;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem ps;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<uint, GameObject> hashTrails;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<uint, GameObject> newHashTrails;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<GameObject> currentGO;

	[Token(Token = "0x6000053")]
	[Address(RVA = "0xD870E0", Offset = "0xD870E0", VA = "0xD870E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0xD871A4", Offset = "0xD871A4", VA = "0xD871A4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0xD871FC", Offset = "0xD871FC", VA = "0xD871FC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0xD87254", Offset = "0xD87254", VA = "0xD87254")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0xD873BC", Offset = "0xD873BC", VA = "0xD873BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0xD873C0", Offset = "0xD873C0", VA = "0xD873C0")]
	private void UpdateTrail()
	{
	}

	[Token(Token = "0x6000059")]
	public void AddRange<T, S>(Dictionary<T, S> source, Dictionary<T, S> collection)
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0xD87B54", Offset = "0xD87B54", VA = "0xD87B54")]
	private void ClearEmptyHashes()
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0xD87E34", Offset = "0xD87E34", VA = "0xD87E34")]
	public ME_ParticleTrails()
	{
	}
}
[Token(Token = "0x2000018")]
public class ME_Reflection : MonoBehaviour
{
	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RenderTexture tex;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ReflectionProbe reflectionProbe;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Light> dirLight;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<float> lightIntencity;

	[Token(Token = "0x6000061")]
	[Address(RVA = "0xD884F8", Offset = "0xD884F8", VA = "0xD884F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0xD887F8", Offset = "0xD887F8", VA = "0xD887F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0xD889C4", Offset = "0xD889C4", VA = "0xD889C4")]
	public ME_Reflection()
	{
	}
}
[Token(Token = "0x2000019")]
public class ME_TrailRendererNoise : MonoBehaviour
{
	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x69E670", Offset = "0x69E670")]
	public float MinVertexDistance;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float VertexTime;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float TotalLifeTime;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool SmoothCurves;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool IsRibbon;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	public bool IsActive;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x69E68C", Offset = "0x69E68C")]
	public float Frequency;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x69E6A8", Offset = "0x69E6A8")]
	public float TimeScale;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x69E6C4", Offset = "0x69E6C4")]
	public float Amplitude;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float Gravity;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float TurbulenceStrength;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool AutodestructWhenNotActive;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform t;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 prevPos;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<Vector3> points;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<float> lifeTimes;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<Vector3> velocities;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float randomOffset;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<Vector3> controlPoints;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int curveCount;

	[Token(Token = "0x40000B1")]
	private const float MinimumSqrDistance = 0.01f;

	[Token(Token = "0x40000B2")]
	private const float DivisionThreshold = -0.99f;

	[Token(Token = "0x40000B3")]
	private const float SmoothCurvesScale = 0.5f;

	[Token(Token = "0x6000064")]
	[Address(RVA = "0xD889CC", Offset = "0xD889CC", VA = "0xD889CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0xD88B30", Offset = "0xD88B30", VA = "0xD88B30")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0xD88BB8", Offset = "0xD88BB8", VA = "0xD88BB8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0xD88CCC", Offset = "0xD88CCC", VA = "0xD88CCC")]
	private void AddNewPoints()
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0xD88EAC", Offset = "0xD88EAC", VA = "0xD88EAC")]
	private void UpdatetPoints()
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0xD89098", Offset = "0xD89098", VA = "0xD89098")]
	private void UpdateLineRendererBezier()
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0xD89168", Offset = "0xD89168", VA = "0xD89168")]
	private void UpdateLineRenderer()
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0xD89218", Offset = "0xD89218", VA = "0xD89218")]
	private void CalculateTurbuelence(Vector3 position, float speed, float scale, float height, float gravity, int index)
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0xD893E4", Offset = "0xD893E4", VA = "0xD893E4")]
	public void InterpolateBezier(List<Vector3> segmentPoints, float scale)
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0xD89784", Offset = "0xD89784", VA = "0xD89784")]
	public List<Vector3> GetDrawingPoints()
	{
		return null;
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0xD8988C", Offset = "0xD8988C", VA = "0xD8988C")]
	private List<Vector3> FindDrawingPoints(int curveIndex)
	{
		return null;
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0xD89B50", Offset = "0xD89B50", VA = "0xD89B50")]
	private int FindDrawingPoints(int curveIndex, float t0, float t1, List<Vector3> pointList, int insertionIndex)
	{
		return default(int);
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0xD899C0", Offset = "0xD899C0", VA = "0xD899C0")]
	public Vector3 CalculateBezierPoint(int curveIndex, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0xD89D78", Offset = "0xD89D78", VA = "0xD89D78")]
	private Vector3 CalculateBezierPoint(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0xD89E0C", Offset = "0xD89E0C", VA = "0xD89E0C")]
	public ME_TrailRendererNoise()
	{
	}
}
[Token(Token = "0x200001A")]
[ExecuteInEditMode]
public class PSMeshRendererUpdater : MonoBehaviour
{
	[Token(Token = "0x200001B")]
	private class ParticleStartInfo
	{
		[Token(Token = "0x40000C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ParticleSystem.MinMaxCurve StartSize;

		[Token(Token = "0x40000C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ParticleSystem.MinMaxCurve StartSpeed;

		[Token(Token = "0x6000086")]
		[Address(RVA = "0x1494FF8", Offset = "0x1494FF8", VA = "0x1494FF8")]
		public ParticleStartInfo()
		{
		}
	}

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject MeshObject;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float StartScaleMultiplier;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Color Color;

	[Token(Token = "0x40000B7")]
	private const string materialName = "MeshEffect";

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Material[]> rendererMaterials;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Material[]> skinnedMaterials;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool IsActive;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float FadeTime;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool currentActiveStatus;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool needUpdateAlpha;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Color oldColor;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float currentAlphaTime;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string[] colorProperties;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float alpha;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float prevAlpha;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Dictionary<string, float> startAlphaColors;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool previousActiveStatus;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool needUpdate;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	private bool needLastUpdate;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Dictionary<ParticleSystem, ParticleStartInfo> startParticleParameters;

	[Token(Token = "0x6000073")]
	[Address(RVA = "0xA5E200", Offset = "0xA5E200", VA = "0xA5E200")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0xA5E210", Offset = "0xA5E210", VA = "0xA5E210")]
	private void Update()
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0xA5E3A0", Offset = "0xA5E3A0", VA = "0xA5E3A0")]
	private void InitStartAlphaColors()
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0xA5F438", Offset = "0xA5F438", VA = "0xA5F438")]
	private void InitStartParticleParameters()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0xA5EA38", Offset = "0xA5EA38", VA = "0xA5EA38")]
	private void UpdateVisibleStatus()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0xA5F620", Offset = "0xA5F620", VA = "0xA5F620")]
	private void UpdateAlphaByProperties(string rendName, int materialNumber, Material mat, float alpha)
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0xA5F290", Offset = "0xA5F290", VA = "0xA5F290")]
	private void GetStartAlphaByProperties(string rendName, int materialNumber, Material mat)
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0xA5F19C", Offset = "0xA5F19C", VA = "0xA5F19C")]
	public void UpdateColor(Color color)
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0xA5F780", Offset = "0xA5F780", VA = "0xA5F780")]
	public void UpdateColor(float HUE)
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0xA5F84C", Offset = "0xA5F84C", VA = "0xA5F84C")]
	public void UpdateMeshEffect()
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0xA601B8", Offset = "0xA601B8", VA = "0xA601B8")]
	public void updateMeshEffectNoTransformModification()
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0xA60284", Offset = "0xA60284", VA = "0xA60284")]
	private void CheckScaleIncludedParticles()
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0xA60288", Offset = "0xA60288", VA = "0xA60288")]
	public void UpdateMeshEffect(GameObject go)
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0xA5F968", Offset = "0xA5F968", VA = "0xA5F968")]
	private void UpdatePSMesh(GameObject go)
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0xA603BC", Offset = "0xA603BC", VA = "0xA603BC")]
	private ParticleSystem.MinMaxCurve UpdateParticleParam(ParticleSystem.MinMaxCurve startParam, ParticleSystem.MinMaxCurve currentParam, float scale)
	{
		return default(ParticleSystem.MinMaxCurve);
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0xA5FF94", Offset = "0xA5FF94", VA = "0xA5FF94")]
	private void AddMaterialToMesh(GameObject go)
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0xA60478", Offset = "0xA60478", VA = "0xA60478")]
	private Material[] AddToSharedMaterial(Material[] sharedMaterials, ME_MeshMaterialEffect meshMatEffect)
	{
		return null;
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0xA60664", Offset = "0xA60664", VA = "0xA60664")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0xA60B0C", Offset = "0xA60B0C", VA = "0xA60B0C")]
	public PSMeshRendererUpdater()
	{
	}
}
[Token(Token = "0x200001C")]
public class ME_PerPlatformSettings : MonoBehaviour
{
	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool DisableOnMobiles;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool RenderMobileDistortion;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x69E6E0", Offset = "0x69E6E0")]
	public float ParticleBudgetForMobiles;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isMobile;

	[Token(Token = "0x6000087")]
	[Address(RVA = "0xD87F30", Offset = "0xD87F30", VA = "0xD87F30")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0xD87FB4", Offset = "0xD87FB4", VA = "0xD87FB4")]
	private bool IsMobilePlatform()
	{
		return default(bool);
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0xD87FBC", Offset = "0xD87FBC", VA = "0xD87FBC")]
	private void ChangeParticlesBudget(float particlesMul)
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0xD883B8", Offset = "0xD883B8", VA = "0xD883B8")]
	public ME_PerPlatformSettings()
	{
	}
}
[Token(Token = "0x200001D")]
public class HandPresence : MonoBehaviour
{
	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InputDeviceCharacteristics controllerCharacteristics;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private InputDevice targetDevice;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Animator handAnimator;

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x9FAFE8", Offset = "0x9FAFE8", VA = "0x9FAFE8")]
	private void Start()
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x9FAFEC", Offset = "0x9FAFEC", VA = "0x9FAFEC")]
	private void TryInitialize()
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x9FB0A0", Offset = "0x9FB0A0", VA = "0x9FB0A0")]
	private void UpdateHandAnimation()
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x9FB1F0", Offset = "0x9FB1F0", VA = "0x9FB1F0")]
	private void Update()
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x9FB230", Offset = "0x9FB230", VA = "0x9FB230")]
	public HandPresence()
	{
	}
}
[Token(Token = "0x200001E")]
public class OvrAvatarTestDriver : OvrAvatarDriver
{
	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 headPos;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion headRot;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x6000090")]
	[Address(RVA = "0xA5BF84", Offset = "0xA5BF84", VA = "0xA5BF84")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0xA5C0E8", Offset = "0xA5C0E8", VA = "0xA5C0E8")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0xA5C484", Offset = "0xA5C484", VA = "0xA5C484")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0xA5C628", Offset = "0xA5C628", VA = "0xA5C628", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0xA5C654", Offset = "0xA5C654", VA = "0xA5C654")]
	public OvrAvatarTestDriver()
	{
	}
}
[Token(Token = "0x200001F")]
public class PoseEditHelper : MonoBehaviour
{
	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform poseRoot;

	[Token(Token = "0x6000095")]
	[Address(RVA = "0xA06F6C", Offset = "0xA06F6C", VA = "0xA06F6C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0xA06FF4", Offset = "0xA06FF4", VA = "0xA06FF4")]
	private void DrawJoints(Transform joint)
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0xA07168", Offset = "0xA07168", VA = "0xA07168")]
	public PoseEditHelper()
	{
	}
}
[Token(Token = "0x2000020")]
public class GazeTargetSpawner : MonoBehaviour
{
	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GazeTargetPrefab;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int NumberOfDummyTargets;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int RadiusMultiplier;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool isVisible;

	[Token(Token = "0x17000001")]
	public bool IsVisible
	{
		[Token(Token = "0x6000098")]
		[Address(RVA = "0x9F42B4", Offset = "0x9F42B4", VA = "0x9F42B4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000099")]
		[Address(RVA = "0x9F42BC", Offset = "0x9F42BC", VA = "0x9F42BC")]
		set
		{
		}
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0x9F43F8", Offset = "0x9F43F8", VA = "0x9F43F8")]
	private void Start()
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x9F45C0", Offset = "0x9F45C0", VA = "0x9F45C0")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x9F45C8", Offset = "0x9F45C8", VA = "0x9F45C8")]
	public GazeTargetSpawner()
	{
	}
}
[Token(Token = "0x2000021")]
public class RemoteLoopbackManager : MonoBehaviour
{
	[Token(Token = "0x2000022")]
	private class PacketLatencyPair
	{
		[Token(Token = "0x40000DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] PacketData;

		[Token(Token = "0x40000DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FakeLatency;

		[Token(Token = "0x60000A3")]
		[Address(RVA = "0x14983F8", Offset = "0x14983F8", VA = "0x14983F8")]
		public PacketLatencyPair()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000023")]
	public class SimulatedLatencySettings
	{
		[Token(Token = "0x40000E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x69E70C", Offset = "0x69E70C")]
		public float FakeLatencyMax;

		[Token(Token = "0x40000E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x69E724", Offset = "0x69E724")]
		public float FakeLatencyMin;

		[Token(Token = "0x40000E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x69E73C", Offset = "0x69E73C")]
		public float LatencyWeight;

		[Token(Token = "0x40000E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x69E754", Offset = "0x69E754")]
		public int MaxSamples;

		[Token(Token = "0x40000E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float AverageWindow;

		[Token(Token = "0x40000E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal float LatencySum;

		[Token(Token = "0x40000E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal LinkedList<float> LatencyValues;

		[Token(Token = "0x60000A4")]
		[Address(RVA = "0x1498400", Offset = "0x1498400", VA = "0x1498400")]
		public float NextValue()
		{
			return default(float);
		}

		[Token(Token = "0x60000A5")]
		[Address(RVA = "0x1498538", Offset = "0x1498538", VA = "0x1498538")]
		public SimulatedLatencySettings()
		{
		}
	}

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OvrAvatar LocalAvatar;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar LoopbackAvatar;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimulatedLatencySettings LatencySettings;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int PacketSequence;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LinkedList<PacketLatencyPair> packetQueue;

	[Token(Token = "0x600009D")]
	[Address(RVA = "0xA0D5D4", Offset = "0xA0D5D4", VA = "0xA0D5D4")]
	private void Start()
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0xA0D72C", Offset = "0xA0D72C", VA = "0xA0D72C")]
	private void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0xA0DB10", Offset = "0xA0DB10", VA = "0xA0DB10")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0xA0DA5C", Offset = "0xA0DA5C", VA = "0xA0DA5C")]
	private void SendPacketData(byte[] data)
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0xA0DE40", Offset = "0xA0DE40", VA = "0xA0DE40")]
	private void ReceivePacketData(byte[] data)
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0xA0E128", Offset = "0xA0E128", VA = "0xA0E128")]
	public RemoteLoopbackManager()
	{
	}
}
[Token(Token = "0x2000024")]
public class P2PManager
{
	[Token(Token = "0x2000025")]
	private enum MessageType : byte
	{
		[Token(Token = "0x40000E8")]
		Update = 1
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0xA5D218", Offset = "0xA5D218", VA = "0xA5D218")]
	public P2PManager()
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0xA5D2F8", Offset = "0xA5D2F8", VA = "0xA5D2F8")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0xA5D3DC", Offset = "0xA5D3DC", VA = "0xA5D3DC")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0xA5D45C", Offset = "0xA5D45C", VA = "0xA5D45C")]
	private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0xA5D5CC", Offset = "0xA5D5CC", VA = "0xA5D5CC")]
	private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0xA5D80C", Offset = "0xA5D80C", VA = "0xA5D80C")]
	public void SendAvatarUpdate(ulong userID, Transform rootTransform, uint sequence, byte[] avatarPacket)
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0xA5DBFC", Offset = "0xA5DBFC", VA = "0xA5DBFC")]
	public void GetRemotePackets()
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0xA5DEB8", Offset = "0xA5DEB8", VA = "0xA5DEB8")]
	public void processAvatarPacket(RemotePlayer remote, ref byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0xA5D9D8", Offset = "0xA5D9D8", VA = "0xA5D9D8")]
	private void PackByte(byte b, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0xA5DDEC", Offset = "0xA5DDEC", VA = "0xA5DDEC")]
	private byte ReadByte(byte[] buf, ref int offset)
	{
		return default(byte);
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0xA5DABC", Offset = "0xA5DABC", VA = "0xA5DABC")]
	private void PackFloat(float f, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0xA5E0F0", Offset = "0xA5E0F0", VA = "0xA5E0F0")]
	private float ReadFloat(byte[] buf, ref int offset)
	{
		return default(float);
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0xA5DA20", Offset = "0xA5DA20", VA = "0xA5DA20")]
	private void PackULong(ulong u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0xA5DE30", Offset = "0xA5DE30", VA = "0xA5DE30")]
	private ulong ReadULong(byte[] buf, ref int offset)
	{
		return default(ulong);
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0xA5DB60", Offset = "0xA5DB60", VA = "0xA5DB60")]
	private void PackUInt32(uint u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0xA5E178", Offset = "0xA5E178", VA = "0xA5E178")]
	private uint ReadUInt32(byte[] buf, ref int offset)
	{
		return default(uint);
	}
}
[Token(Token = "0x2000026")]
public class PlayerController : SocialPlatformManager
{
	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Camera spyCamera;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject cameraRig;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool showUI;

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0xA66C58", Offset = "0xA66C58", VA = "0xA66C58", Slot = "5")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0xA66C9C", Offset = "0xA66C9C", VA = "0xA66C9C", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0xA66CD4", Offset = "0xA66CD4", VA = "0xA66CD4", Slot = "4")]
	public override void Update()
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0xA66CFC", Offset = "0xA66CFC", VA = "0xA66CFC")]
	private void checkInput()
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xA66E98", Offset = "0xA66E98", VA = "0xA66E98")]
	private void ToggleCamera()
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xA66F18", Offset = "0xA66F18", VA = "0xA66F18")]
	private void ToggleUI()
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0xA66F6C", Offset = "0xA66F6C", VA = "0xA66F6C")]
	public PlayerController()
	{
	}
}
[Token(Token = "0x2000027")]
public class RemotePlayer
{
	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong remoteUserID;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool stillInRoom;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PeerConnectionState p2pConnectionState;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PeerConnectionState voipConnectionState;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar RemoteAvatar;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 receivedRootPosition;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 receivedRootPositionPrior;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Quaternion receivedRootRotation;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Quaternion receivedRootRotationPrior;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VoipAudioSourceHiLevel voipSource;

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0xA0E1E4", Offset = "0xA0E1E4", VA = "0xA0E1E4")]
	public RemotePlayer()
	{
	}
}
[Token(Token = "0x2000028")]
public class RoomManager
{
	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong roomID;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong invitedRoomID;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool amIServer;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool startupDone;

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0xA0EA98", Offset = "0xA0EA98", VA = "0xA0EA98")]
	public RoomManager()
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0xA0EB9C", Offset = "0xA0EB9C", VA = "0xA0EB9C")]
	private void AcceptingInviteCallback(Message<string> msg)
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0xA0EE8C", Offset = "0xA0EE8C", VA = "0xA0EE8C")]
	public bool CheckForInvite()
	{
		return default(bool);
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0xA0EFC4", Offset = "0xA0EFC4", VA = "0xA0EFC4")]
	public void CreateRoom()
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0xA0F098", Offset = "0xA0F098", VA = "0xA0F098")]
	private void CreateAndJoinPrivateRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0xA0F648", Offset = "0xA0F648", VA = "0xA0F648")]
	private void OnLaunchInviteWorkflowComplete(Message msg)
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0xA0EEBC", Offset = "0xA0EEBC", VA = "0xA0EEBC")]
	public void JoinExistingRoom(ulong roomID)
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0xA0F6CC", Offset = "0xA0F6CC", VA = "0xA0F6CC")]
	private void JoinRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0xA0FE50", Offset = "0xA0FE50", VA = "0xA0FE50")]
	private void RoomUpdateCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0xA1019C", Offset = "0xA1019C", VA = "0xA1019C")]
	public void LeaveCurrentRoom()
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0xA0F9FC", Offset = "0xA0F9FC", VA = "0xA0F9FC")]
	private void ProcessRoomData(Message<Room> msg)
	{
	}
}
[Token(Token = "0x2000029")]
public class SocialPlatformManager : MonoBehaviour
{
	[Token(Token = "0x200002A")]
	public enum State
	{
		[Token(Token = "0x4000120")]
		INITIALIZING,
		[Token(Token = "0x4000121")]
		CHECKING_LAUNCH_STATE,
		[Token(Token = "0x4000122")]
		CREATING_A_ROOM,
		[Token(Token = "0x4000123")]
		WAITING_IN_A_ROOM,
		[Token(Token = "0x4000124")]
		JOINING_A_ROOM,
		[Token(Token = "0x4000125")]
		CONNECTED_IN_A_ROOM,
		[Token(Token = "0x4000126")]
		LEAVING_A_ROOM,
		[Token(Token = "0x4000127")]
		SHUTDOWN
	}

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 START_ROTATION_ONE;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly Vector3 START_POSITION_ONE;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 START_ROTATION_TWO;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly Vector3 START_POSITION_TWO;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly Vector3 START_ROTATION_THREE;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static readonly Vector3 START_POSITION_THREE;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly Vector3 START_ROTATION_FOUR;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static readonly Vector3 START_POSITION_FOUR;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly Color BLACK;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static readonly Color WHITE;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static readonly Color CYAN;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static readonly Color BLUE;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static readonly Color GREEN;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float voiceCurrent;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private uint packetSequence;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar localAvatarPrefab;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar remoteAvatarPrefab;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject helpPanel;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected MeshRenderer helpMesh;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material riftMaterial;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material gearMaterial;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected OvrAvatar localAvatar;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected GameObject localTrackingSpace;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject localPlayerHead;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Dictionary<ulong, RemotePlayer> remoteUsers;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject roomSphere;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected MeshRenderer sphereMesh;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject roomFloor;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected MeshRenderer floorMesh;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected State currentState;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected static SocialPlatformManager s_instance;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected RoomManager roomManager;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected P2PManager p2pManager;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected VoipManager voipManager;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected ulong myID;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected string myOculusID;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static readonly float VOIP_SCALE;

	[Token(Token = "0x17000002")]
	public static State CurrentState
	{
		[Token(Token = "0x60000D5")]
		[Address(RVA = "0xA18E38", Offset = "0xA18E38", VA = "0xA18E38")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x17000003")]
	public static ulong MyID
	{
		[Token(Token = "0x60000D6")]
		[Address(RVA = "0xA0F1C4", Offset = "0xA0F1C4", VA = "0xA0F1C4")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x17000004")]
	public static string MyOculusID
	{
		[Token(Token = "0x60000D7")]
		[Address(RVA = "0xA18EA8", Offset = "0xA18EA8", VA = "0xA18EA8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0xA173D0", Offset = "0xA173D0", VA = "0xA173D0", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0xA17774", Offset = "0xA17774", VA = "0xA17774", Slot = "5")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0xA17C20", Offset = "0xA17C20", VA = "0xA17C20")]
	private void InitCallback(Message<PlatformInitialize> msg)
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0xA17DC8", Offset = "0xA17DC8", VA = "0xA17DC8", Slot = "6")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0xA17DCC", Offset = "0xA17DCC", VA = "0xA17DCC")]
	private void IsEntitledCallback(Message msg)
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0xA17EEC", Offset = "0xA17EEC", VA = "0xA17EEC")]
	private void GetLoggedInUserCallback(Message<User> msg)
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0xA1864C", Offset = "0xA1864C", VA = "0xA1864C")]
	private void GetLoggedInUserFriendsAndRoomsCallback(Message<UserAndRoomList> msg)
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0xA18A38", Offset = "0xA18A38", VA = "0xA18A38")]
	public void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0xA18C48", Offset = "0xA18C48", VA = "0xA18C48")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0xA18DCC", Offset = "0xA18DCC", VA = "0xA18DCC")]
	public void AddUser(ulong userID, ref RemotePlayer remoteUser)
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0xA17B6C", Offset = "0xA17B6C", VA = "0xA17B6C")]
	public void LogOutputLine(string line)
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0xA0ED14", Offset = "0xA0ED14", VA = "0xA0ED14")]
	public static void TerminateWithError(Message msg)
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0xA0F2A4", Offset = "0xA0F2A4", VA = "0xA0F2A4")]
	public static void TransitionToState(State newState)
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0xA18FD0", Offset = "0xA18FD0", VA = "0xA18FD0")]
	private static void SetSphereColorForState()
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0xA0F564", Offset = "0xA0F564", VA = "0xA0F564")]
	public static void SetFloorColorForState(bool host)
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0xA10210", Offset = "0xA10210", VA = "0xA10210")]
	public static void MarkAllRemoteUsersAsNotInRoom()
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0xA1060C", Offset = "0xA1060C", VA = "0xA1060C")]
	public static void MarkRemoteUserInRoom(ulong userID)
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0xA106F0", Offset = "0xA106F0", VA = "0xA106F0")]
	public static void ForgetRemoteUsersNotInRoom()
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0xA0EDCC", Offset = "0xA0EDCC", VA = "0xA0EDCC")]
	public static void LogOutput(string line)
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0xA1036C", Offset = "0xA1036C", VA = "0xA1036C")]
	public static bool IsUserInRoom(ulong userID)
	{
		return default(bool);
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0xA10400", Offset = "0xA10400", VA = "0xA10400")]
	public static void AddRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0xA1914C", Offset = "0xA1914C", VA = "0xA1914C")]
	public static void RemoveRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0xA19360", Offset = "0xA19360", VA = "0xA19360")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0xA1734C", Offset = "0xA1734C", VA = "0xA1734C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x6A3984", Offset = "0x6A3984")]
	public static void MicFilter(short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels)
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0xA194A4", Offset = "0xA194A4", VA = "0xA194A4")]
	public static RemotePlayer GetRemoteUser(ulong userID)
	{
		return null;
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0xA19580", Offset = "0xA19580", VA = "0xA19580")]
	public SocialPlatformManager()
	{
	}
}
[Token(Token = "0x200002B")]
public class VoipManager
{
	[Token(Token = "0x60000E7")]
	[Address(RVA = "0x14EF304", Offset = "0x14EF304", VA = "0x14EF304")]
	public VoipManager()
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x14EF3E4", Offset = "0x14EF3E4", VA = "0x14EF3E4")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x14EF4C8", Offset = "0x14EF4C8", VA = "0x14EF4C8")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x14EF548", Offset = "0x14EF548", VA = "0x14EF548")]
	private void VoipConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x14EF6B8", Offset = "0x14EF6B8", VA = "0x14EF6B8")]
	private void VoipStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}
}
[Token(Token = "0x200002C")]
public class GazeTarget : MonoBehaviour
{
	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarGazeTargetType Type;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ovrAvatarGazeTargets RuntimeTargetList;

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x9F3F70", Offset = "0x9F3F70", VA = "0x9F3F70")]
	static GazeTarget()
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x9F3FF8", Offset = "0x9F3FF8", VA = "0x9F3FF8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x9F416C", Offset = "0x9F416C", VA = "0x9F416C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x9F41D0", Offset = "0x9F41D0", VA = "0x9F41D0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x9F4034", Offset = "0x9F4034", VA = "0x9F4034")]
	private void UpdateGazeTarget()
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x9F4294", Offset = "0x9F4294", VA = "0x9F4294")]
	private ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x9F42AC", Offset = "0x9F42AC", VA = "0x9F42AC")]
	public GazeTarget()
	{
	}
}
[Serializable]
[Token(Token = "0x200002D")]
public class AvatarLayer
{
	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int layerIndex;

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x14A8240", Offset = "0x14A8240", VA = "0x14A8240")]
	public AvatarLayer()
	{
	}
}
[Serializable]
[Token(Token = "0x200002E")]
public class PacketRecordSettings
{
	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal bool RecordingFrames;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float UpdateRate;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal float AccumulatedTime;

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0xA60F14", Offset = "0xA60F14", VA = "0xA60F14")]
	public PacketRecordSettings()
	{
	}
}
[Token(Token = "0x200002F")]
public class OvrAvatar : MonoBehaviour
{
	[Token(Token = "0x2000030")]
	public class PacketEventArgs : EventArgs
	{
		[Token(Token = "0x4000187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly OvrAvatarPacket Packet;

		[Token(Token = "0x6000129")]
		[Address(RVA = "0x1493CC8", Offset = "0x1493CC8", VA = "0x1493CC8")]
		public PacketEventArgs(OvrAvatarPacket packet)
		{
		}
	}

	[Token(Token = "0x2000031")]
	public enum HandType
	{
		[Token(Token = "0x4000189")]
		Right,
		[Token(Token = "0x400018A")]
		Left,
		[Token(Token = "0x400018B")]
		Max
	}

	[Token(Token = "0x2000032")]
	public enum HandJoint
	{
		[Token(Token = "0x400018D")]
		HandBase,
		[Token(Token = "0x400018E")]
		IndexBase,
		[Token(Token = "0x400018F")]
		IndexTip,
		[Token(Token = "0x4000190")]
		ThumbBase,
		[Token(Token = "0x4000191")]
		ThumbTip,
		[Token(Token = "0x4000192")]
		Max
	}

	[Token(Token = "0x2000033")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69C5C4", Offset = "0x69C5C4")]
	private sealed class <WaitForMouthAudioSource>d__137 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatar <>4__this;

		[Token(Token = "0x17000005")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600012D")]
			[Address(RVA = "0x1493C78", Offset = "0x1493C78", VA = "0x1493C78", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000006")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600012F")]
			[Address(RVA = "0x1493CC0", Offset = "0x1493CC0", VA = "0x1493CC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600012A")]
		[Address(RVA = "0x1493A9C", Offset = "0x1493A9C", VA = "0x1493A9C")]
		[DebuggerHidden]
		public <WaitForMouthAudioSource>d__137(int <>1__state)
		{
		}

		[Token(Token = "0x600012B")]
		[Address(RVA = "0x1493AC8", Offset = "0x1493AC8", VA = "0x1493AC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600012C")]
		[Address(RVA = "0x1493ACC", Offset = "0x1493ACC", VA = "0x1493ACC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600012E")]
		[Address(RVA = "0x1493C80", Offset = "0x1493C80", VA = "0x1493C80", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x69E76C", Offset = "0x69E76C")]
	public IntPtr sdkAvatar;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string oculusUserID;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatarDriver Driver;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x69E7A4", Offset = "0x69E7A4")]
	public bool EnableBody;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool EnableHands;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool EnableBase;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool EnableExpressive;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x69E7DC", Offset = "0x69E7DC")]
	public bool RecordPackets;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool UseSDKPackets;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PacketRecordSettings PacketSettings;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x69E814", Offset = "0x69E814")]
	public bool StartWithControllers;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AvatarLayer FirstPersonLayer;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AvatarLayer ThirdPersonLayer;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool ShowFirstPerson;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool ShowThirdPerson;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	internal ovrAvatarCapabilities Capabilities;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x69E84C", Offset = "0x69E84C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69E84C", Offset = "0x69E84C")]
	[SerializeField]
	internal ovrAvatarAssetLevelOfDetail LevelOfDetail;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69E8BC", Offset = "0x69E8BC")]
	private bool CombineMeshes;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69E8F4", Offset = "0x69E8F4")]
	public bool UseTransparentRenderQueue;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x69E92C", Offset = "0x69E92C")]
	public Shader Monochrome_SurfaceShader;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Shader Monochrome_SurfaceShader_SelfOccluding;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Shader Monochrome_SurfaceShader_PBS;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Shader Skinshaded_SurfaceShader_SingleComponent;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Shader Skinshaded_VertFrag_SingleComponent;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Shader Skinshaded_VertFrag_CombinedMesh;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Shader Skinshaded_Expressive_SurfaceShader_SingleComponent;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Shader Skinshaded_Expressive_VertFrag_SingleComponent;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Shader Skinshaded_Expressive_VertFrag_CombinedMesh;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Shader Loader_VertFrag_CombinedMesh;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Shader EyeLens;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Shader ControllerShader;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x69E964", Offset = "0x69E964")]
	public bool CanOwnMicrophone;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69E99C", Offset = "0x69E99C")]
	public bool EnableLaughter;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject MouthAnchor;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform LeftHandCustomPose;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform RightHandCustomPose;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private HashSet<ulong> assetLoadingIds;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool assetsFinishedLoading;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private OvrAvatarMaterialManager materialManager;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool waitingForCombinedMesh;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool doneExpressiveGlobalInit;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector4 clothingAlphaOffset;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ulong clothingAlphaTexture;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private OVRLipSyncMicInput micInput;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private OVRLipSyncContext lipsyncContext;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private OVRLipSync.Frame currentFrame;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float[] visemes;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private AudioSource audioSource;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private ONSPAudioSource spatializedSource;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private List<float[]> voiceUpdates;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ovrAvatarVisemes RuntimeVisemes;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Transform cachedLeftHandCustomPose;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Transform[] cachedCustomLeftHandJoints;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private ovrAvatarTransform[] cachedLeftHandTransforms;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Transform cachedRightHandCustomPose;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Transform[] cachedCustomRightHandJoints;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private ovrAvatarTransform[] cachedRightHandTransforms;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool showLeftController;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
	private bool showRightController;

	[Token(Token = "0x4000169")]
	private const bool USE_MOBILE_TEXTURE_FORMAT = true;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 MOUTH_HEAD_OFFSET;

	[Token(Token = "0x400016B")]
	private const string MOUTH_HELPER_NAME = "MouthAnchor";

	[Token(Token = "0x400016C")]
	private const int VISEME_COUNT = 16;

	[Token(Token = "0x400016D")]
	private const float ACTION_UNIT_ONSET_SPEED = 30f;

	[Token(Token = "0x400016E")]
	private const float ACTION_UNIT_FALLOFF_SPEED = 20f;

	[Token(Token = "0x400016F")]
	private const float VISEME_LEVEL_MULTIPLIER = 1.5f;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	internal ulong oculusUserIDInternal;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	internal OvrAvatarBase Base;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	internal OvrAvatarTouchController ControllerLeft;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	internal OvrAvatarTouchController ControllerRight;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	internal OvrAvatarBody Body;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	internal OvrAvatarHand HandLeft;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	internal OvrAvatarHand HandRight;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	internal ovrAvatarLookAndFeelVersion LookAndFeelVersion;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	internal ovrAvatarLookAndFeelVersion FallbackLookAndFeelVersion;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private OvrAvatarPacket CurrentUnityPacket;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public EventHandler<PacketEventArgs> PacketRecorded;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string[,] HandJoints;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Vector3 MOUTH_POSITION_OFFSET;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static string VOICE_PROPERTY;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static string MOUTH_POSITION_PROPERTY;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static string MOUTH_DIRECTION_PROPERTY;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static string MOUTH_SCALE_PROPERTY;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static float MOUTH_SCALE_GLOBAL;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static float MOUTH_MAX_GLOBAL;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static string NECK_JONT;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public float VoiceAmplitude;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public bool EnableMouthVertexAnimation;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static ovrAvatarLights ovrLights;

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0xAD1EB8", Offset = "0xAD1EB8", VA = "0xAD1EB8")]
	static OvrAvatar()
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0xAD2358", Offset = "0xAD2358", VA = "0xAD2358")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0xAD23EC", Offset = "0xAD23EC", VA = "0xAD23EC")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0xAD2454", Offset = "0xAD2454", VA = "0xAD2454")]
	public void CombinedMeshLoadedCallback(IntPtr assetPtr)
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0xAD2584", Offset = "0xAD2584", VA = "0xAD2584")]
	private OvrAvatarSkinnedMeshRenderComponent AddSkinnedMeshRenderComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender)
	{
		return null;
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0xAD2664", Offset = "0xAD2664", VA = "0xAD2664")]
	private OvrAvatarSkinnedMeshRenderPBSComponent AddSkinnedMeshRenderPBSComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS)
	{
		return null;
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0xAD2740", Offset = "0xAD2740", VA = "0xAD2740")]
	private OvrAvatarSkinnedMeshPBSV2RenderComponent AddSkinnedMeshRenderPBSV2Component(IntPtr renderPart, GameObject go, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRenderPBSV2, bool isBodyPartZero, bool isControllerModel)
	{
		return null;
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0xAD2924", Offset = "0xAD2924", VA = "0xAD2924")]
	public static IntPtr GetRenderPart(ovrAvatarComponent component, uint renderPartIndex)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0xAD2A00", Offset = "0xAD2A00", VA = "0xAD2A00")]
	private static string GetRenderPartName(ovrAvatarComponent component, uint renderPartIndex)
	{
		return null;
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0xAD2A78", Offset = "0xAD2A78", VA = "0xAD2A78")]
	internal static void ConvertTransform(float[] transform, ref ovrAvatarTransform target)
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0xAD2B60", Offset = "0xAD2B60", VA = "0xAD2B60")]
	internal static void ConvertTransform(ovrAvatarTransform transform, Transform target)
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0xAD2BEC", Offset = "0xAD2BEC", VA = "0xAD2BEC")]
	public static ovrAvatarTransform CreateOvrAvatarTransform(Vector3 position, Quaternion orientation)
	{
		return default(ovrAvatarTransform);
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0xAD2C74", Offset = "0xAD2C74", VA = "0xAD2C74")]
	private static ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0xAD2C8C", Offset = "0xAD2C8C", VA = "0xAD2C8C")]
	private void BuildRenderComponents()
	{
	}

	[Token(Token = "0x6000103")]
	private void AddAvatarComponent<T>(ref T root, ovrAvatarComponent nativeComponent) where T : OvrAvatarComponent
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0xAD313C", Offset = "0xAD313C", VA = "0xAD313C")]
	private void UpdateCustomPoses()
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0xAD34BC", Offset = "0xAD34BC", VA = "0xAD34BC")]
	private static bool UpdatePoseRoot(Transform poseRoot, ref Transform cachedPoseRoot, ref Transform[] cachedPoseJoints, ref ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0xAD36A8", Offset = "0xAD36A8", VA = "0xAD36A8")]
	private static bool UpdateTransforms(Transform[] joints, ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0xAD38F4", Offset = "0xAD38F4", VA = "0xAD38F4")]
	private static void OrderJoints(Transform transform, List<Transform> joints)
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0xAD39E8", Offset = "0xAD39E8", VA = "0xAD39E8")]
	private void AvatarSpecificationCallback(IntPtr avatarSpecification)
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0xAD3DF0", Offset = "0xAD3DF0", VA = "0xAD3DF0")]
	private void Start()
	{
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0xAD4128", Offset = "0xAD4128", VA = "0xAD4128")]
	private void Update()
	{
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0xAD4B60", Offset = "0xAD4B60", VA = "0xAD4B60")]
	public static ovrAvatarHandInputState CreateInputState(ovrAvatarTransform transform, OvrAvatarDriver.ControllerPose pose)
	{
		return default(ovrAvatarHandInputState);
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0xAD4BB4", Offset = "0xAD4BB4", VA = "0xAD4BB4")]
	public void ShowControllers(bool show)
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0xAD3CA8", Offset = "0xAD3CA8", VA = "0xAD3CA8")]
	public void ShowLeftController(bool show)
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0xAD3D4C", Offset = "0xAD3D4C", VA = "0xAD3D4C")]
	public void ShowRightController(bool show)
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0xAD4BE4", Offset = "0xAD4BE4", VA = "0xAD4BE4")]
	public void UpdateVoiceVisualization(float[] voiceSamples)
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0xAD4500", Offset = "0xAD4500", VA = "0xAD4500")]
	private void RecordFrame()
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0xAD4E58", Offset = "0xAD4E58", VA = "0xAD4E58")]
	private void RecordUnityFrame()
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0xAD4C48", Offset = "0xAD4C48", VA = "0xAD4C48")]
	private void RecordSDKFrame()
	{
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0xAD512C", Offset = "0xAD512C", VA = "0xAD512C")]
	private void AddRenderParts(OvrAvatarComponent ovrComponent, ovrAvatarComponent component, Transform parent)
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0xAD55A8", Offset = "0xAD55A8", VA = "0xAD55A8")]
	public void RefreshBodyParts()
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0xAD59AC", Offset = "0xAD59AC", VA = "0xAD59AC")]
	public ovrAvatarBodyComponent? GetBodyComponent()
	{
		return null;
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0xAD5B00", Offset = "0xAD5B00", VA = "0xAD5B00")]
	public Transform GetHandTransform(HandType hand, HandJoint joint)
	{
		return null;
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0xAD5CE4", Offset = "0xAD5CE4", VA = "0xAD5CE4")]
	public void GetPointingDirection(HandType hand, ref Vector3 forward, ref Vector3 up)
	{
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0xAD46E0", Offset = "0xAD46E0", VA = "0xAD46E0")]
	private void UpdateVoiceBehavior()
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0xAD5DB8", Offset = "0xAD5DB8", VA = "0xAD5DB8")]
	private bool IsValidMic()
	{
		return default(bool);
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0xAD4510", Offset = "0xAD4510", VA = "0xAD4510")]
	private void InitPostLoad()
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0xAD5EA8", Offset = "0xAD5EA8", VA = "0xAD5EA8")]
	private static void ExpressiveGlobalInit()
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0xAD655C", Offset = "0xAD655C", VA = "0xAD655C")]
	private static void InitializeLights()
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0xAD6A40", Offset = "0xAD6A40", VA = "0xAD6A40")]
	private static ovrAvatarLight CreateLightDirectional(uint id, Vector3 direction, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0xAD6A68", Offset = "0xAD6A68", VA = "0xAD6A68")]
	private static ovrAvatarLight CreateLightPoint(uint id, Vector3 position, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0xAD6A90", Offset = "0xAD6A90", VA = "0xAD6A90")]
	private static ovrAvatarLight CreateLightSpot(uint id, Vector3 position, Vector3 direction, float spotAngleDeg, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0xAD49EC", Offset = "0xAD49EC", VA = "0xAD49EC")]
	private void UpdateExpressive()
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0xAD5F78", Offset = "0xAD5F78", VA = "0xAD5F78")]
	private void ConfigureHelpers()
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0xAD6EC0", Offset = "0xAD6EC0", VA = "0xAD6EC0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A39E4", Offset = "0x6A39E4")]
	private IEnumerator WaitForMouthAudioSource()
	{
		return null;
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0xAD6F38", Offset = "0xAD6F38", VA = "0xAD6F38")]
	public void DestroyHelperObjects()
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0xAD6D80", Offset = "0xAD6D80", VA = "0xAD6D80")]
	public GameObject CreateHelperObject(Transform parent, Vector3 localPositionOffset, string helperName, string helperTag = "")
	{
		return null;
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0xAD6FFC", Offset = "0xAD6FFC", VA = "0xAD6FFC")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0xAD70E4", Offset = "0xAD70E4", VA = "0xAD70E4")]
	public void UpdateVoiceData(float[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0xAD6ACC", Offset = "0xAD6ACC", VA = "0xAD6ACC")]
	private void UpdateFacewave()
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0xAD71CC", Offset = "0xAD71CC", VA = "0xAD71CC")]
	public OvrAvatar()
	{
	}
}
[Token(Token = "0x2000034")]
public class OvrAvatarAsset
{
	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong assetID;

	[Token(Token = "0x6000130")]
	[Address(RVA = "0xAD73C8", Offset = "0xAD73C8", VA = "0xAD73C8")]
	public OvrAvatarAsset()
	{
	}
}
[Token(Token = "0x2000035")]
public class OvrAvatarAssetMesh : OvrAvatarAsset
{
	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAvatarSkinnedMeshPose skinnedBindPose;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] jointNames;

	[Token(Token = "0x6000131")]
	[Address(RVA = "0xAD7498", Offset = "0xAD7498", VA = "0xAD7498")]
	public OvrAvatarAssetMesh(ulong _assetId, IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0xAD8750", Offset = "0xAD8750", VA = "0xAD8750")]
	private void LoadSubmeshes(IntPtr asset, IntPtr indexBufferPtr, ulong indexCount)
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0xAD8324", Offset = "0xAD8324", VA = "0xAD8324")]
	private void LoadBlendShapes(IntPtr asset, long vertexCount)
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0xAD80A8", Offset = "0xAD80A8", VA = "0xAD80A8")]
	private void SetSkinnedBindPose(IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0xAD8190", Offset = "0xAD8190", VA = "0xAD8190")]
	private void GetVertexAndIndexData(IntPtr asset, ovrAvatarAssetType meshType, out long vertexCount, out IntPtr vertexBuffer, out uint indexCount, out IntPtr indexBuffer)
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0xAD89E0", Offset = "0xAD89E0", VA = "0xAD89E0")]
	public SkinnedMeshRenderer CreateSkinnedMeshRendererOnObject(GameObject target)
	{
		return null;
	}
}
[Token(Token = "0x2000036")]
public class OvrAvatarAssetTexture : OvrAvatarAsset
{
	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D texture;

	[Token(Token = "0x400019B")]
	private const int ASTCHeaderSize = 16;

	[Token(Token = "0x6000137")]
	[Address(RVA = "0xAD8FA8", Offset = "0xAD8FA8", VA = "0xAD8FA8")]
	public OvrAvatarAssetTexture(ulong _assetId, IntPtr asset)
	{
	}
}
[Token(Token = "0x2000037")]
public class OvrAvatarBase : OvrAvatarComponent
{
	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ovrAvatarBaseComponent component;

	[Token(Token = "0x6000138")]
	[Address(RVA = "0xAD9224", Offset = "0xAD9224", VA = "0xAD9224")]
	private void Update()
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0xAD9358", Offset = "0xAD9358", VA = "0xAD9358")]
	public OvrAvatarBase()
	{
	}
}
[Token(Token = "0x2000038")]
public class OvrAvatarBody : OvrAvatarComponent
{
	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ovrAvatarBodyComponent component;

	[Token(Token = "0x600013A")]
	[Address(RVA = "0xAD583C", Offset = "0xAD583C", VA = "0xAD583C")]
	public ovrAvatarComponent? GetNativeAvatarComponent()
	{
		return null;
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0xAD93BC", Offset = "0xAD93BC", VA = "0xAD93BC")]
	private void Update()
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0xAD94F0", Offset = "0xAD94F0", VA = "0xAD94F0")]
	public OvrAvatarBody()
	{
	}
}
[Token(Token = "0x2000039")]
public class OvrAvatarComponent : MonoBehaviour
{
	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] LayerKeywords;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string[] LayerSampleModeParameters;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string[] LayerBlendModeParameters;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string[] LayerMaskTypeParameters;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly string[] LayerColorParameters;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly string[] LayerSurfaceParameters;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly string[] LayerSampleParametersParameters;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly string[] LayerMaskParametersParameters;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly string[] LayerMaskAxisParameters;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Material, ovrAvatarMaterialState> materialStates;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<OvrAvatarRenderComponent> RenderParts;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected OvrAvatar owner;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected ovrAvatarComponent nativeAvatarComponent;

	[Token(Token = "0x600013D")]
	[Address(RVA = "0xA50E78", Offset = "0xA50E78", VA = "0xA50E78")]
	public void SetOvrAvatarOwner(OvrAvatar ovrAvatarOwner)
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0xA50E80", Offset = "0xA50E80", VA = "0xA50E80")]
	public void UpdateAvatar(IntPtr nativeComponent)
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0xA517F0", Offset = "0xA517F0", VA = "0xA517F0")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0xA51850", Offset = "0xA51850", VA = "0xA51850")]
	public void UpdateAvatarMaterial(Material mat, ovrAvatarMaterialState matState)
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0xA52004", Offset = "0xA52004", VA = "0xA52004")]
	public static Texture2D GetLoadedTexture(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0xA52308", Offset = "0xA52308", VA = "0xA52308")]
	public OvrAvatarComponent()
	{
	}
}
[Token(Token = "0x200003A")]
public abstract class OvrAvatarDriver : MonoBehaviour
{
	[Token(Token = "0x200003B")]
	public enum PacketMode
	{
		[Token(Token = "0x40001AF")]
		SDK,
		[Token(Token = "0x40001B0")]
		Unity
	}

	[Token(Token = "0x200003C")]
	public struct ControllerPose
	{
		[Token(Token = "0x40001B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarButton buttons;

		[Token(Token = "0x40001B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ovrAvatarTouch touches;

		[Token(Token = "0x40001B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 joystickPosition;

		[Token(Token = "0x40001B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float indexTrigger;

		[Token(Token = "0x40001B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float handTrigger;

		[Token(Token = "0x40001B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isActive;

		[Token(Token = "0x600014A")]
		[Address(RVA = "0x1493D48", Offset = "0x1493D48", VA = "0x1493D48")]
		public static ControllerPose Interpolate(ControllerPose a, ControllerPose b, float t)
		{
			return default(ControllerPose);
		}
	}

	[Token(Token = "0x200003D")]
	public struct PoseFrame
	{
		[Token(Token = "0x40001B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 headPosition;

		[Token(Token = "0x40001B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion headRotation;

		[Token(Token = "0x40001B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 handLeftPosition;

		[Token(Token = "0x40001BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion handLeftRotation;

		[Token(Token = "0x40001BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 handRightPosition;

		[Token(Token = "0x40001BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion handRightRotation;

		[Token(Token = "0x40001BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float voiceAmplitude;

		[Token(Token = "0x40001BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerPose controllerLeftPose;

		[Token(Token = "0x40001BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ControllerPose controllerRightPose;

		[Token(Token = "0x600014B")]
		[Address(RVA = "0x1493E24", Offset = "0x1493E24", VA = "0x1493E24")]
		public static PoseFrame Interpolate(PoseFrame a, PoseFrame b, float t)
		{
			return default(PoseFrame);
		}
	}

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PacketMode Mode;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected PoseFrame CurrentPose;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private ovrAvatarControllerType ControllerType;

	[Token(Token = "0x6000144")]
	[Address(RVA = "0xA53C78", Offset = "0xA53C78", VA = "0xA53C78")]
	public PoseFrame GetCurrentPose()
	{
		return default(PoseFrame);
	}

	[Token(Token = "0x6000145")]
	public abstract void UpdateTransforms(IntPtr sdkAvatar);

	[Token(Token = "0x6000146")]
	[Address(RVA = "0xA53C88", Offset = "0xA53C88", VA = "0xA53C88")]
	private void Start()
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0xA53D10", Offset = "0xA53D10", VA = "0xA53D10")]
	public void UpdateTransformsFromPose(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0xA53F8C", Offset = "0xA53F8C", VA = "0xA53F8C")]
	public static bool GetIsTrackedRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0xA53F94", Offset = "0xA53F94", VA = "0xA53F94")]
	protected OvrAvatarDriver()
	{
	}
}
[Token(Token = "0x200003E")]
public class OvrAvatarHand : OvrAvatarComponent
{
	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarHandComponent component;

	[Token(Token = "0x600014C")]
	[Address(RVA = "0xA53FA4", Offset = "0xA53FA4", VA = "0xA53FA4")]
	private void Update()
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0xA54114", Offset = "0xA54114", VA = "0xA54114")]
	public OvrAvatarHand()
	{
	}
}
[Token(Token = "0x200003F")]
public class OvrAvatarLocalDriver : OvrAvatarDriver
{
	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 centerEyePosition;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion centerEyeRotation;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x600014E")]
	[Address(RVA = "0xA5417C", Offset = "0xA5417C", VA = "0xA5417C")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0xA542E0", Offset = "0xA542E0", VA = "0xA542E0")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0xA5467C", Offset = "0xA5467C", VA = "0xA5467C")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0xA548A0", Offset = "0xA548A0", VA = "0xA548A0", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0xA548CC", Offset = "0xA548CC", VA = "0xA548CC")]
	public OvrAvatarLocalDriver()
	{
	}
}
[Token(Token = "0x2000040")]
public class OvrAvatarMaterialManager : MonoBehaviour
{
	[Token(Token = "0x2000041")]
	public enum TextureType
	{
		[Token(Token = "0x40001E6")]
		DiffuseTextures,
		[Token(Token = "0x40001E7")]
		NormalMaps,
		[Token(Token = "0x40001E8")]
		RoughnessMaps,
		[Token(Token = "0x40001E9")]
		Count
	}

	[Token(Token = "0x2000042")]
	public struct AvatarComponentMaterialProperties
	{
		[Token(Token = "0x40001EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarBodyPartType TypeIndex;

		[Token(Token = "0x40001EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color Color;

		[Token(Token = "0x40001EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D[] Textures;

		[Token(Token = "0x40001ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DiffuseIntensity;

		[Token(Token = "0x40001EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RimIntensity;

		[Token(Token = "0x40001EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ReflectionIntensity;
	}

	[Token(Token = "0x2000043")]
	public struct AvatarTextureArrayProperties
	{
		[Token(Token = "0x40001F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D[] Textures;

		[Token(Token = "0x40001F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2DArray TextureArray;
	}

	[Token(Token = "0x2000044")]
	public struct AvatarMaterialPropertyBlock
	{
		[Token(Token = "0x40001F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4[] Colors;

		[Token(Token = "0x40001F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] DiffuseIntensities;

		[Token(Token = "0x40001F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] RimIntensities;

		[Token(Token = "0x40001F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] ReflectionIntensities;
	}

	[Serializable]
	[Token(Token = "0x2000045")]
	public class AvatarMaterialConfig
	{
		[Token(Token = "0x40001F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AvatarComponentMaterialProperties[] ComponentMaterialProperties;

		[Token(Token = "0x40001F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AvatarMaterialPropertyBlock MaterialPropertyBlock;

		[Token(Token = "0x6000162")]
		[Address(RVA = "0x1494868", Offset = "0x1494868", VA = "0x1494868")]
		public AvatarMaterialConfig()
		{
		}
	}

	[Token(Token = "0x2000046")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69C5D4", Offset = "0x69C5D4")]
	private sealed class <RunLoadingAnimation>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatarMaterialManager <>4__this;

		[Token(Token = "0x40001FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callBack;

		[Token(Token = "0x40001FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <srcBlend>5__2;

		[Token(Token = "0x40001FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <dstBlend>5__3;

		[Token(Token = "0x40001FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <lightModeTag>5__4;

		[Token(Token = "0x40001FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <renderTypeTag>5__5;

		[Token(Token = "0x4000200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string <renderQueueTag>5__6;

		[Token(Token = "0x4000201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string <ignoreProjectorTag>5__7;

		[Token(Token = "0x4000202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <renderQueue>5__8;

		[Token(Token = "0x4000203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool <transparentQueue>5__9;

		[Token(Token = "0x17000007")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000166")]
			[Address(RVA = "0x1494818", Offset = "0x1494818", VA = "0x1494818", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000008")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000168")]
			[Address(RVA = "0x1494860", Offset = "0x1494860", VA = "0x1494860", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000163")]
		[Address(RVA = "0x1494128", Offset = "0x1494128", VA = "0x1494128")]
		[DebuggerHidden]
		public <RunLoadingAnimation>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x6000164")]
		[Address(RVA = "0x1494154", Offset = "0x1494154", VA = "0x1494154", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000165")]
		[Address(RVA = "0x1494158", Offset = "0x1494158", VA = "0x1494158", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000167")]
		[Address(RVA = "0x1494820", Offset = "0x1494820", VA = "0x1494820", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer TargetRenderer;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AvatarTextureArrayProperties[] TextureArrays;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly string[] TextureTypeToShaderProperties;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AvatarMaterialConfig LocalAvatarConfig;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ReflectionProbeBlendInfo> ReflectionProbes;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader CombinedShader;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_LOADER;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string AVATAR_SHADER_MAINTEX;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string AVATAR_SHADER_NORMALMAP;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string AVATAR_SHADER_ROUGHNESSMAP;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string AVATAR_SHADER_COLOR;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string AVATAR_SHADER_DIFFUSEINTENSITY;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string AVATAR_SHADER_RIMINTENSITY;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string AVATAR_SHADER_REFLECTIONINTENSITY;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string AVATAR_SHADER_CUBEMAP;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string AVATAR_SHADER_ALPHA;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string AVATAR_SHADER_LOADING_DIMMER;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string AVATAR_SHADER_IRIS_COLOR;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string AVATAR_SHADER_LIP_COLOR;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string AVATAR_SHADER_BROW_COLOR;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string AVATAR_SHADER_LASH_COLOR;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static string AVATAR_SHADER_SCLERA_COLOR;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string AVATAR_SHADER_GUM_COLOR;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string AVATAR_SHADER_TEETH_COLOR;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static string AVATAR_SHADER_LIP_SMOOTHNESS;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static float[] DiffuseIntensities;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static float[] RimIntensities;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static float[] ReflectionIntensities;

	[Token(Token = "0x40001E1")]
	private const float LOADING_ANIMATION_AMPLITUDE = 0.5f;

	[Token(Token = "0x40001E2")]
	private const float LOADING_ANIMATION_PERIOD = 0.35f;

	[Token(Token = "0x40001E3")]
	private const float LOADING_ANIMATION_CURVE_SCALE = 0.25f;

	[Token(Token = "0x40001E4")]
	private const float LOADING_ANIMATION_DIMMER_MIN = 0.3f;

	[Token(Token = "0x6000153")]
	[Address(RVA = "0xA54918", Offset = "0xA54918", VA = "0xA54918")]
	public void CreateTextureArrays()
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0xA54AF8", Offset = "0xA54AF8", VA = "0xA54AF8")]
	public void SetRenderer(Renderer renderer)
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0xA54B38", Offset = "0xA54B38", VA = "0xA54B38")]
	public void OnCombinedMeshReady()
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0xA552CC", Offset = "0xA552CC", VA = "0xA552CC")]
	public void AddTextureIDToTextureManager(ulong assetID, bool isSingleComponent)
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0xA555B4", Offset = "0xA555B4", VA = "0xA555B4")]
	private void DeleteTextureSet()
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0xA54BD4", Offset = "0xA54BD4", VA = "0xA54BD4")]
	public void InitTextureArrays()
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0xA556A0", Offset = "0xA556A0", VA = "0xA556A0")]
	private void ProcessTexturesWithMips(Texture2D[] textures, int texArrayResolution, Texture2DArray texArray)
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0xA55028", Offset = "0xA55028", VA = "0xA55028")]
	private void SetMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0xA55930", Offset = "0xA55930", VA = "0xA55930")]
	private void ApplyMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0xA55BD4", Offset = "0xA55BD4", VA = "0xA55BD4")]
	public static ovrAvatarBodyPartType GetComponentType(string objectName)
	{
		return default(ovrAvatarBodyPartType);
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0xA55CFC", Offset = "0xA55CFC", VA = "0xA55CFC")]
	private ulong GetTextureIDForType(ovrAvatarPBSMaterialState materialState, TextureType type)
	{
		return default(ulong);
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0xA55D34", Offset = "0xA55D34", VA = "0xA55D34")]
	public void ValidateTextures(ovrAvatarPBSMaterialState[] materialStates)
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0xA55238", Offset = "0xA55238", VA = "0xA55238")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A3A94", Offset = "0x6A3A94")]
	private IEnumerator RunLoadingAnimation(Action callBack)
	{
		return null;
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0xA56C9C", Offset = "0xA56C9C", VA = "0xA56C9C")]
	public OvrAvatarMaterialManager()
	{
	}
}
[Token(Token = "0x2000047")]
public class OvrAvatarPacket
{
	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr ovrNativePacket;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<float> frameTimes;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<OvrAvatarDriver.PoseFrame> frames;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte[]> encodedAudioPackets;

	[Token(Token = "0x17000009")]
	public float Duration
	{
		[Token(Token = "0x6000169")]
		[Address(RVA = "0xA572D8", Offset = "0xA572D8", VA = "0xA572D8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700000A")]
	public OvrAvatarDriver.PoseFrame FinalFrame
	{
		[Token(Token = "0x600016A")]
		[Address(RVA = "0xA5734C", Offset = "0xA5734C", VA = "0xA5734C")]
		get
		{
			return default(OvrAvatarDriver.PoseFrame);
		}
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0xA573DC", Offset = "0xA573DC", VA = "0xA573DC")]
	public OvrAvatarPacket()
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0xA57508", Offset = "0xA57508", VA = "0xA57508")]
	public OvrAvatarPacket(OvrAvatarDriver.PoseFrame initialPose)
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0xA576D4", Offset = "0xA576D4", VA = "0xA576D4")]
	private OvrAvatarPacket(List<float> frameTimes, List<OvrAvatarDriver.PoseFrame> frames, List<byte[]> audioPackets)
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0xA57840", Offset = "0xA57840", VA = "0xA57840")]
	public void AddFrame(OvrAvatarDriver.PoseFrame frame, float deltaSeconds)
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0xA57918", Offset = "0xA57918", VA = "0xA57918")]
	public OvrAvatarDriver.PoseFrame GetPoseFrame(float seconds)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0xA57B48", Offset = "0xA57B48", VA = "0xA57B48")]
	public static OvrAvatarPacket Read(Stream stream)
	{
		return null;
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0xA57E24", Offset = "0xA57E24", VA = "0xA57E24")]
	public void Write(Stream stream)
	{
	}
}
[Token(Token = "0x2000048")]
internal static class BinaryWriterExtensions
{
	[Token(Token = "0x6000172")]
	[Address(RVA = "0x14AA1D4", Offset = "0x14AA1D4", VA = "0x14AA1D4")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.PoseFrame frame)
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0x14AA2E8", Offset = "0x14AA2E8", VA = "0x14AA2E8")]
	public static void Write(this BinaryWriter writer, Vector3 vec3)
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x14AA494", Offset = "0x14AA494", VA = "0x14AA494")]
	public static void Write(this BinaryWriter writer, Vector2 vec2)
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x14AA358", Offset = "0x14AA358", VA = "0x14AA358")]
	public static void Write(this BinaryWriter writer, Quaternion quat)
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0x14AA3EC", Offset = "0x14AA3EC", VA = "0x14AA3EC")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.ControllerPose pose)
	{
	}
}
[Token(Token = "0x2000049")]
internal static class BinaryReaderExtensions
{
	[Token(Token = "0x6000177")]
	[Address(RVA = "0x14A9DD4", Offset = "0x14A9DD4", VA = "0x14A9DD4")]
	public static OvrAvatarDriver.PoseFrame ReadPoseFrame(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0x14AA178", Offset = "0x14AA178", VA = "0x14AA178")]
	public static Vector2 ReadVector2(this BinaryReader reader)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0x14A9F74", Offset = "0x14A9F74", VA = "0x14A9F74")]
	public static Vector3 ReadVector3(this BinaryReader reader)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0x14A9FEC", Offset = "0x14A9FEC", VA = "0x14A9FEC")]
	public static Quaternion ReadQuaternion(this BinaryReader reader)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0x14AA088", Offset = "0x14AA088", VA = "0x14AA088")]
	public static OvrAvatarDriver.ControllerPose ReadControllerPose(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.ControllerPose);
	}
}
[Token(Token = "0x200004A")]
public class OvrAvatarRemoteDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Queue<OvrAvatarPacket> packetQueue;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IntPtr CurrentSDKPacket;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float CurrentPacketTime;

	[Token(Token = "0x400020B")]
	private const int MinPacketQueue = 1;

	[Token(Token = "0x400020C")]
	private const int MaxPacketQueue = 4;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int CurrentSequence;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isStreaming;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OvrAvatarPacket currentPacket;

	[Token(Token = "0x600017C")]
	[Address(RVA = "0xA5804C", Offset = "0xA5804C", VA = "0xA5804C")]
	public void QueuePacket(int sequence, OvrAvatarPacket packet)
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0xA580D4", Offset = "0xA580D4", VA = "0xA580D4", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0xA580F0", Offset = "0xA580F0", VA = "0xA580F0")]
	private void UpdateFromSDKPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0xA58294", Offset = "0xA58294", VA = "0xA58294")]
	private void UpdateFromUnityPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0xA58480", Offset = "0xA58480", VA = "0xA58480")]
	public OvrAvatarRemoteDriver()
	{
	}
}
[Token(Token = "0x200004B")]
public class OvrAvatarRenderComponent : MonoBehaviour
{
	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool firstSkinnedUpdate;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] bones;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isBodyComponent;

	[Token(Token = "0x6000181")]
	[Address(RVA = "0xA58524", Offset = "0xA58524", VA = "0xA58524")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0xA58608", Offset = "0xA58608", VA = "0xA58608")]
	protected SkinnedMeshRenderer CreateSkinnedMesh(ulong assetID, ovrAvatarVisibilityFlags visibilityMask, int thirdPersonLayer, int firstPersonLayer)
	{
		return null;
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0xA58800", Offset = "0xA58800", VA = "0xA58800")]
	protected void UpdateSkinnedMesh(OvrAvatar avatar, Transform[] bones, ovrAvatarTransform localTransform, ovrAvatarVisibilityFlags visibilityMask, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0xA58BC0", Offset = "0xA58BC0", VA = "0xA58BC0")]
	protected Material CreateAvatarMaterial(string name, Shader shader)
	{
		return null;
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0xA58CCC", Offset = "0xA58CCC", VA = "0xA58CCC")]
	public OvrAvatarRenderComponent()
	{
	}
}
[Token(Token = "0x200004C")]
[Flags]
public enum ovrAvatarCapabilities
{
	[Token(Token = "0x4000215")]
	Body = 1,
	[Token(Token = "0x4000216")]
	Hands = 2,
	[Token(Token = "0x4000217")]
	Base = 4,
	[Token(Token = "0x4000218")]
	BodyTilt = 0x10,
	[Token(Token = "0x4000219")]
	Expressive = 0x20,
	[Token(Token = "0x400021A")]
	All = -1
}
[Token(Token = "0x200004D")]
public enum ovrAvatarMessageType
{
	[Token(Token = "0x400021C")]
	AvatarSpecification,
	[Token(Token = "0x400021D")]
	AssetLoaded,
	[Token(Token = "0x400021E")]
	Count
}
[Token(Token = "0x200004E")]
public struct ovrAvatarMessage_AvatarSpecification
{
	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr avatarSpec;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ulong oculusUserID;
}
[Token(Token = "0x200004F")]
public struct ovrAvatarMessage_AssetLoaded
{
	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong assetID;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr asset;
}
[Token(Token = "0x2000050")]
public enum ovrAvatarAssetType
{
	[Token(Token = "0x4000224")]
	Mesh,
	[Token(Token = "0x4000225")]
	Texture,
	[Token(Token = "0x4000226")]
	Pose,
	[Token(Token = "0x4000227")]
	Material,
	[Token(Token = "0x4000228")]
	CombinedMesh,
	[Token(Token = "0x4000229")]
	PBSMaterial,
	[Token(Token = "0x400022A")]
	FailedLoad,
	[Token(Token = "0x400022B")]
	Count
}
[Token(Token = "0x2000051")]
public struct ovrAvatarMeshVertex
{
	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public byte[] blendIndices;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] blendWeights;
}
[Token(Token = "0x2000052")]
public struct ovrAvatarMeshVertexV2
{
	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float r;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float g;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float b;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float a;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public byte[] blendIndices;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float[] blendWeights;
}
[Token(Token = "0x2000053")]
public struct ovrAvatarBlendVertex
{
	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;
}
[Token(Token = "0x2000054")]
public struct ovrAvatarMeshAssetData
{
	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x2000055")]
public struct ovrAvatarMeshAssetDataV2
{
	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x2000056")]
public enum ovrAvatarTextureFormat
{
	[Token(Token = "0x4000260")]
	RGB24,
	[Token(Token = "0x4000261")]
	DXT1,
	[Token(Token = "0x4000262")]
	DXT5,
	[Token(Token = "0x4000263")]
	ASTC_RGB_6x6,
	[Token(Token = "0x4000264")]
	ASTC_RGB_6x6_MIPMAPS,
	[Token(Token = "0x4000265")]
	Count
}
[Token(Token = "0x2000057")]
public struct ovrAvatarTextureAssetData
{
	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTextureFormat format;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint sizeX;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public uint sizeY;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public uint mipCount;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong textureDataSize;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr textureData;
}
[Token(Token = "0x2000058")]
public enum ovrAvatarRenderPartType
{
	[Token(Token = "0x400026D")]
	SkinnedMeshRender,
	[Token(Token = "0x400026E")]
	SkinnedMeshRenderPBS,
	[Token(Token = "0x400026F")]
	ProjectorRender,
	[Token(Token = "0x4000270")]
	SkinnedMeshRenderPBS_V2,
	[Token(Token = "0x4000271")]
	Count
}
[Token(Token = "0x2000059")]
public enum ovrAvatarLogLevel
{
	[Token(Token = "0x4000273")]
	Unknown,
	[Token(Token = "0x4000274")]
	Default,
	[Token(Token = "0x4000275")]
	Verbose,
	[Token(Token = "0x4000276")]
	Debug,
	[Token(Token = "0x4000277")]
	Info,
	[Token(Token = "0x4000278")]
	Warn,
	[Token(Token = "0x4000279")]
	Error,
	[Token(Token = "0x400027A")]
	Fatal,
	[Token(Token = "0x400027B")]
	Silent
}
[Token(Token = "0x200005A")]
public struct ovrAvatarTransform
{
	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion orientation;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 scale;
}
[Token(Token = "0x200005B")]
[Flags]
public enum ovrAvatarButton
{
	[Token(Token = "0x4000280")]
	One = 1,
	[Token(Token = "0x4000281")]
	Two = 2,
	[Token(Token = "0x4000282")]
	Three = 4,
	[Token(Token = "0x4000283")]
	Joystick = 8
}
[Token(Token = "0x200005C")]
[Flags]
public enum ovrAvatarTouch
{
	[Token(Token = "0x4000285")]
	One = 1,
	[Token(Token = "0x4000286")]
	Two = 2,
	[Token(Token = "0x4000287")]
	Joystick = 4,
	[Token(Token = "0x4000288")]
	ThumbRest = 8,
	[Token(Token = "0x4000289")]
	Index = 0x10,
	[Token(Token = "0x400028A")]
	Pointing = 0x40,
	[Token(Token = "0x400028B")]
	ThumbUp = 0x80
}
[Token(Token = "0x200005D")]
public struct ovrAvatarHandInputState
{
	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarButton buttonMask;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ovrAvatarTouch touchMask;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float joystickX;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float joystickY;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float indexTrigger;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float handTrigger;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isActive;
}
[Token(Token = "0x200005E")]
public struct ovrAvatarComponent
{
	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint renderPartCount;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr renderParts;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string name;
}
[Token(Token = "0x200005F")]
internal struct ovrAvatarComponent_Offsets
{
	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long transform;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int renderPartCount;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int renderParts;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int name;
}
[Token(Token = "0x2000060")]
public struct ovrAvatarBaseComponent
{
	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 basePosition;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000061")]
public struct ovrAvatarBodyComponent
{
	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform leftEyeTransform;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarTransform rightEyeTransform;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ovrAvatarTransform centerEyeTransform;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000062")]
public struct ovrAvatarBodyComponent_Offsets
{
	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long leftEyeTransform;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long rightEyeTransform;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long centerEyeTransform;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long renderComponent;
}
[Token(Token = "0x2000063")]
public struct ovrAvatarControllerComponent
{
	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000064")]
public struct ovrAvatarHandComponent
{
	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000065")]
public enum ovrAvatarMaterialLayerBlendMode
{
	[Token(Token = "0x40002AB")]
	Add,
	[Token(Token = "0x40002AC")]
	Multiply,
	[Token(Token = "0x40002AD")]
	Count
}
[Token(Token = "0x2000066")]
public enum ovrAvatarMaterialLayerSampleMode
{
	[Token(Token = "0x40002AF")]
	Color,
	[Token(Token = "0x40002B0")]
	Texture,
	[Token(Token = "0x40002B1")]
	TextureSingleChannel,
	[Token(Token = "0x40002B2")]
	Parallax,
	[Token(Token = "0x40002B3")]
	Count
}
[Token(Token = "0x2000067")]
public enum ovrAvatarMaterialMaskType
{
	[Token(Token = "0x40002B5")]
	None,
	[Token(Token = "0x40002B6")]
	Positional,
	[Token(Token = "0x40002B7")]
	ViewReflection,
	[Token(Token = "0x40002B8")]
	Fresnel,
	[Token(Token = "0x40002B9")]
	Pulse,
	[Token(Token = "0x40002BA")]
	Count
}
[Token(Token = "0x2000068")]
public enum ovrAvatarControllerType
{
	[Token(Token = "0x40002BC")]
	Touch,
	[Token(Token = "0x40002BD")]
	Malibu,
	[Token(Token = "0x40002BE")]
	Go,
	[Token(Token = "0x40002BF")]
	Quest,
	[Token(Token = "0x40002C0")]
	Count
}
[Token(Token = "0x2000069")]
public enum ovrAvatarAssetLevelOfDetail
{
	[Token(Token = "0x40002C2")]
	Lowest = 1,
	[Token(Token = "0x40002C3")]
	Medium = 3,
	[Token(Token = "0x40002C4")]
	Highest = 5
}
[Token(Token = "0x200006A")]
public enum ovrAvatarLookAndFeelVersion
{
	[Token(Token = "0x40002C6")]
	Unknown = -1,
	[Token(Token = "0x40002C7")]
	One,
	[Token(Token = "0x40002C8")]
	Two
}
[Token(Token = "0x200006B")]
public struct ovrAvatarMaterialLayerState
{
	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarMaterialLayerBlendMode blendMode;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarMaterialMaskType maskType;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector4 layerColor;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector4 sampleParameters;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong sampleTexture;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector4 sampleScaleOffset;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector4 maskParameters;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 maskAxis;

	[Token(Token = "0x6000188")]
	[Address(RVA = "0x14B75F0", Offset = "0x14B75F0", VA = "0x14B75F0")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0x14B7620", Offset = "0x14B7620", VA = "0x14B7620", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0x14B783C", Offset = "0x14B783C", VA = "0x14B783C", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x200006C")]
public struct ovrAvatarMaterialState
{
	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarMaterialMaskType baseMaskType;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector4 baseMaskParameters;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector4 baseMaskAxis;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong alphaMaskTextureID;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 alphaMaskScaleOffset;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong normalMapTextureID;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 normalMapScaleOffset;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong parallaxMapTextureID;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector4 parallaxMapScaleOffset;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ulong roughnessMapTextureID;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector4 roughnessMapScaleOffset;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public uint layerCount;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ovrAvatarMaterialLayerState[] layers;

	[Token(Token = "0x600018B")]
	[Address(RVA = "0x14B7920", Offset = "0x14B7920", VA = "0x14B7920")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0x14B7950", Offset = "0x14B7950", VA = "0x14B7950", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0x14B7CEC", Offset = "0x14B7CEC", VA = "0x14B7CEC", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x200006D")]
public struct ovrAvatarExpressiveParameters
{
	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 irisColor;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector4 scleraColor;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4 lashColor;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 browColor;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 lipColor;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector4 teethColor;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector4 gumColor;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float browLashIntensity;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float lipSmoothness;

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x14B6B80", Offset = "0x14B6B80", VA = "0x14B6B80")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x14B6BB0", Offset = "0x14B6BB0", VA = "0x14B6BB0", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x14B6E40", Offset = "0x14B6E40", VA = "0x14B6E40", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x200006E")]
public struct ovrAvatarPBSMaterialState
{
	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong albedoTextureID;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector4 albedoMultiplier;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ulong metallicnessTextureID;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float glossinessScale;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong normalTextureID;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong heightTextureID;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ulong occlusionTextureID;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong emissionTextureID;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 emissionMultiplier;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong detailMaskTextureID;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ulong detailAlbedoTextureID;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ulong detailNormalTextureID;

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x14B7E54", Offset = "0x14B7E54", VA = "0x14B7E54")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0x14B7E84", Offset = "0x14B7E84", VA = "0x14B7E84", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0x14B8074", Offset = "0x14B8074", VA = "0x14B8074", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x200006F")]
public class OvrAvatarAssetMaterial : OvrAvatarAsset
{
	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarMaterialState material;

	[Token(Token = "0x6000194")]
	[Address(RVA = "0xAD73D0", Offset = "0xAD73D0", VA = "0xAD73D0")]
	public OvrAvatarAssetMaterial(ulong id, IntPtr mat)
	{
	}
}
[Token(Token = "0x2000070")]
public struct ovrAvatarSkinnedMeshPose
{
	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint jointCount;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarTransform[] jointTransform;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] jointParents;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr[] jointNames;
}
[Token(Token = "0x2000071")]
[Flags]
public enum ovrAvatarVisibilityFlags
{
	[Token(Token = "0x40002FD")]
	FirstPerson = 1,
	[Token(Token = "0x40002FE")]
	ThirdPerson = 2,
	[Token(Token = "0x40002FF")]
	SelfOccluding = 4
}
[Token(Token = "0x2000072")]
public struct ovrAvatarRenderPart_SkinnedMeshRender
{
	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarMaterialState materialState;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000073")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS
{
	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong albedoTextureAssetID;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong surfaceTextureAssetID;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000074")]
public struct ovrAvatarRenderPart_ProjectorRender
{
	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint componentIndex;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint renderPartIndex;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ovrAvatarMaterialState materialState;
}
[Token(Token = "0x2000075")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
{
	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarPBSMaterialState materialState;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000076")]
public enum ovrAvatarHandGesture
{
	[Token(Token = "0x4000315")]
	Default,
	[Token(Token = "0x4000316")]
	GripSphere,
	[Token(Token = "0x4000317")]
	GripCube,
	[Token(Token = "0x4000318")]
	Count
}
[Token(Token = "0x2000077")]
public enum ovrAvatarBodyPartType
{
	[Token(Token = "0x400031A")]
	Body,
	[Token(Token = "0x400031B")]
	Clothing,
	[Token(Token = "0x400031C")]
	Eyewear,
	[Token(Token = "0x400031D")]
	Hair,
	[Token(Token = "0x400031E")]
	Beard,
	[Token(Token = "0x400031F")]
	Count
}
[Token(Token = "0x2000078")]
public struct ovrAvatarBlendShapeParams
{
	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint blendShapeParamCount;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] blendShapeParams;
}
[Token(Token = "0x2000079")]
internal struct ovrAvatarBlendShapeParams_Offsets
{
	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int blendShapeParamCount;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long blendShapeParams;
}
[Token(Token = "0x200007A")]
public struct ovrAvatarVisemes
{
	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint visemeParamCount;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] visemeParams;
}
[Token(Token = "0x200007B")]
internal struct ovrAvatarVisemes_Offsets
{
	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int visemeParamCount;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long visemeParams;
}
[Token(Token = "0x200007C")]
public enum ovrAvatarGazeTargetType
{
	[Token(Token = "0x4000329")]
	AvatarHead,
	[Token(Token = "0x400032A")]
	AvatarHand,
	[Token(Token = "0x400032B")]
	Object,
	[Token(Token = "0x400032C")]
	ObjectStatic,
	[Token(Token = "0x400032D")]
	Count
}
[Token(Token = "0x200007D")]
public struct ovrAvatarGazeTarget
{
	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector3 worldPosition;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarGazeTargetType type;
}
[Token(Token = "0x200007E")]
internal struct ovrAvatarGazeTarget_Offsets
{
	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int id;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int worldPosition;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int type;
}
[Token(Token = "0x200007F")]
public struct ovrAvatarGazeTargets
{
	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint targetCount;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarGazeTarget[] targets;
}
[Token(Token = "0x2000080")]
internal struct ovrAvatarGazeTargets_Offsets
{
	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int targetCount;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long targets;
}
[Token(Token = "0x2000081")]
public enum ovrAvatarLightType
{
	[Token(Token = "0x4000339")]
	Point,
	[Token(Token = "0x400033A")]
	Direction,
	[Token(Token = "0x400033B")]
	Spot,
	[Token(Token = "0x400033C")]
	Count
}
[Token(Token = "0x2000082")]
public struct ovrAvatarLight
{
	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarLightType type;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float intensity;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 worldDirection;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 worldPosition;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float range;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spotAngleDeg;
}
[Token(Token = "0x2000083")]
internal struct ovrAvatarLight_Offsets
{
	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long id;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long type;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long intensity;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long worldDirection;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static long worldPosition;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static long range;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static long spotAngleDeg;
}
[Token(Token = "0x2000084")]
public struct ovrAvatarLights
{
	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ambientIntensity;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint lightCount;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarLight[] lights;
}
[Token(Token = "0x2000085")]
internal struct ovrAvatarLights_Offsets
{
	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long ambientIntensity;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long lightCount;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long lights;
}
[Token(Token = "0x2000086")]
[Flags]
public enum ovrAvatarDebugContext : uint
{
	[Token(Token = "0x4000352")]
	None = 0u,
	[Token(Token = "0x4000353")]
	GazeTarget = 1u,
	[Token(Token = "0x4000354")]
	Any = uint.MaxValue
}
[Token(Token = "0x2000087")]
public struct ovrAvatarDebugLine
{
	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 startPoint;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 endPoint;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 color;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntPtr text;
}
[Token(Token = "0x2000088")]
public struct ovrAvatarDebugTransform
{
	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr text;
}
[Token(Token = "0x2000089")]
public delegate void specificationCallback(IntPtr specification);
[Token(Token = "0x200008A")]
public delegate void assetLoadedCallback(OvrAvatarAsset asset);
[Token(Token = "0x200008B")]
public delegate void combinedMeshLoadedCallback(IntPtr asset);
[Token(Token = "0x200008C")]
public class OvrAvatarSDKManager : MonoBehaviour
{
	[Token(Token = "0x200008D")]
	public struct AvatarSpecRequestParams
	{
		[Token(Token = "0x400036A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong _userId;

		[Token(Token = "0x400036B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public specificationCallback _callback;

		[Token(Token = "0x400036C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _useCombinedMesh;

		[Token(Token = "0x400036D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ovrAvatarAssetLevelOfDetail _lod;

		[Token(Token = "0x400036E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _forceMobileTextureFormat;

		[Token(Token = "0x400036F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ovrAvatarLookAndFeelVersion _lookVersion;

		[Token(Token = "0x4000370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ovrAvatarLookAndFeelVersion _fallbackVersion;

		[Token(Token = "0x4000371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool _enableExpressive;

		[Token(Token = "0x60001B8")]
		[Address(RVA = "0x1494870", Offset = "0x1494870", VA = "0x1494870")]
		public AvatarSpecRequestParams(ulong userId, specificationCallback callback, bool useCombinedMesh, ovrAvatarAssetLevelOfDetail lod, bool forceMobileTextureFormat, ovrAvatarLookAndFeelVersion lookVersion, ovrAvatarLookAndFeelVersion fallbackVersion, bool enableExpressive)
		{
		}
	}

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSDKManager _instance;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool initialized;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<ulong, HashSet<specificationCallback>> specificationCallbacks;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<ulong, HashSet<assetLoadedCallback>> assetLoadedCallbacks;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<IntPtr, combinedMeshLoadedCallback> combinedMeshLoadedCallbacks;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<ulong, OvrAvatarAsset> assetCache;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OvrAvatarTextureCopyManager textureCopyManager;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarLogLevel LoggingLevel;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Queue<AvatarSpecRequestParams> avatarSpecificationQueue;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> loadingAvatars;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool avatarSpecRequestAvailable;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastDispatchedAvatarSpecRequestTime;

	[Token(Token = "0x4000369")]
	private const float AVATAR_SPEC_REQUEST_TIMEOUT = 5f;

	[Token(Token = "0x1700000B")]
	public static OvrAvatarSDKManager Instance
	{
		[Token(Token = "0x60001A7")]
		[Address(RVA = "0xA52094", Offset = "0xA52094", VA = "0xA52094")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0xA58CDC", Offset = "0xA58CDC", VA = "0xA58CDC")]
	private bool Initialize()
	{
		return default(bool);
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0xA5902C", Offset = "0xA5902C", VA = "0xA5902C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0xA5909C", Offset = "0xA5909C", VA = "0xA5909C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0xA59A7C", Offset = "0xA59A7C", VA = "0xA59A7C")]
	public bool IsAvatarSpecWaiting()
	{
		return default(bool);
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0xA59AD0", Offset = "0xA59AD0", VA = "0xA59AD0")]
	public bool IsAvatarLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0xA59B24", Offset = "0xA59B24", VA = "0xA59B24")]
	public void AddLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0xA59B88", Offset = "0xA59B88", VA = "0xA59B88")]
	public void RemoveLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0xA59BEC", Offset = "0xA59BEC", VA = "0xA59BEC")]
	public void RequestAvatarSpecification(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0xA5987C", Offset = "0xA5987C", VA = "0xA5987C")]
	private void DispatchAvatarSpecificationRequest(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0xA59CC8", Offset = "0xA59CC8", VA = "0xA59CC8")]
	public void BeginLoadingAsset(ulong assetId, ovrAvatarAssetLevelOfDetail lod, assetLoadedCallback callback)
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0xA59E1C", Offset = "0xA59E1C", VA = "0xA59E1C")]
	public void RegisterCombinedMeshCallback(IntPtr sdkAvatar, combinedMeshLoadedCallback callback)
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0xA5228C", Offset = "0xA5228C", VA = "0xA5228C")]
	public OvrAvatarAsset GetAsset(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0xA59F10", Offset = "0xA59F10", VA = "0xA59F10")]
	public void DeleteAssetFromCache(ulong assetId)
	{
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0xA58FE0", Offset = "0xA58FE0", VA = "0xA58FE0")]
	public string GetAppId()
	{
		return null;
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0xA5532C", Offset = "0xA5532C", VA = "0xA5532C")]
	public OvrAvatarTextureCopyManager GetTextureCopyManager()
	{
		return null;
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0xA59FF0", Offset = "0xA59FF0", VA = "0xA59FF0")]
	public OvrAvatarSDKManager()
	{
	}
}
[Token(Token = "0x200008E")]
public sealed class OvrAvatarSettings : ScriptableObject
{
	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSettings instance;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string ovrAppID;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string ovrGearAppID;

	[Token(Token = "0x1700000C")]
	public static string AppID
	{
		[Token(Token = "0x60001B9")]
		[Address(RVA = "0xA59FB0", Offset = "0xA59FB0", VA = "0xA59FB0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001BA")]
		[Address(RVA = "0xA5A160", Offset = "0xA5A160", VA = "0xA5A160")]
		set
		{
		}
	}

	[Token(Token = "0x1700000D")]
	public static string MobileAppID
	{
		[Token(Token = "0x60001BB")]
		[Address(RVA = "0xA59FD0", Offset = "0xA59FD0", VA = "0xA59FD0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001BC")]
		[Address(RVA = "0xA5A190", Offset = "0xA5A190", VA = "0xA5A190")]
		set
		{
		}
	}

	[Token(Token = "0x1700000E")]
	public static OvrAvatarSettings Instance
	{
		[Token(Token = "0x60001BD")]
		[Address(RVA = "0xA5A008", Offset = "0xA5A008", VA = "0xA5A008")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001BE")]
		[Address(RVA = "0xA5A1C0", Offset = "0xA5A1C0", VA = "0xA5A1C0")]
		set
		{
		}
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0xA5A214", Offset = "0xA5A214", VA = "0xA5A214")]
	public OvrAvatarSettings()
	{
	}
}
[Token(Token = "0x200008F")]
public class OvrAvatarSkinnedMeshRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Shader surface;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader surfaceSelfOccluding;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool previouslyActive;

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0xA5BB14", Offset = "0xA5BB14", VA = "0xA5BB14")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender, Shader surface, Shader surfaceSelfOccluding, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0xA511A8", Offset = "0xA511A8", VA = "0xA511A8")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0xA5BCA0", Offset = "0xA5BCA0", VA = "0xA5BCA0")]
	private void UpdateMeshMaterial(ovrAvatarVisibilityFlags visibilityMask, SkinnedMeshRenderer rootMesh)
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0xA5BE08", Offset = "0xA5BE08", VA = "0xA5BE08")]
	public OvrAvatarSkinnedMeshRenderComponent()
	{
	}
}
[Token(Token = "0x2000090")]
public class OvrAvatarSkinnedMeshRenderPBSComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isMaterialInitilized;

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0xA5BE18", Offset = "0xA5BE18", VA = "0xA5BE18")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS, Shader shader, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0xA513E4", Offset = "0xA513E4", VA = "0xA513E4")]
	internal void UpdateSkinnedMeshRenderPBS(OvrAvatar avatar, IntPtr renderPart, Material mat)
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0xA5BF74", Offset = "0xA5BF74", VA = "0xA5BF74")]
	public OvrAvatarSkinnedMeshRenderPBSComponent()
	{
	}
}
[Token(Token = "0x2000091")]
public class OvrAvatarSkinnedMeshPBSV2RenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OvrAvatarMaterialManager avatarMaterialManager;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool previouslyActive;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isCombinedMaterial;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private ovrAvatarExpressiveParameters ExpressiveParameters;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool EnableExpressive;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int blendShapeCount;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ovrAvatarBlendShapeParams blendShapeParams;

	[Token(Token = "0x4000380")]
	private const string MAIN_MATERIAL_NAME = "main_material";

	[Token(Token = "0x4000381")]
	private const string EYE_MATERIAL_NAME = "eye_material";

	[Token(Token = "0x4000382")]
	private const string DEFAULT_MATERIAL_NAME = "_material";

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0xA5A280", Offset = "0xA5A280", VA = "0xA5A280")]
	internal void Initialize(IntPtr renderPart, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRender, OvrAvatarMaterialManager materialManager, int thirdPersonLayer, int firstPersonLayer, bool combinedMesh, ovrAvatarAssetLevelOfDetail lod, bool assignExpressiveParams, OvrAvatar avatar, bool isControllerModel)
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0xA515B4", Offset = "0xA515B4", VA = "0xA515B4")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0xA5B298", Offset = "0xA5B298", VA = "0xA5B298")]
	private void InitializeSingleComponentMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0xA5A9B0", Offset = "0xA5A9B0", VA = "0xA5A9B0")]
	private void InitializeCombinedMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0xA5A6D4", Offset = "0xA5A6D4", VA = "0xA5A6D4")]
	private void SetMaterialTransparent(Material mat)
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0xA5A838", Offset = "0xA5A838", VA = "0xA5A838")]
	private void SetMaterialOpaque(Material mat)
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0xA5BB04", Offset = "0xA5BB04", VA = "0xA5BB04")]
	public OvrAvatarSkinnedMeshPBSV2RenderComponent()
	{
	}
}
[Token(Token = "0x2000092")]
public class OvrAvatarTextureCopyManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000093")]
	public struct FallbackTextureSet
	{
		[Token(Token = "0x4000391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Initialized;

		[Token(Token = "0x4000392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2D DiffuseRoughness;

		[Token(Token = "0x4000393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D Normal;
	}

	[Token(Token = "0x2000094")]
	private struct CopyTextureParams
	{
		[Token(Token = "0x4000394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture Src;

		[Token(Token = "0x4000395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture Dst;

		[Token(Token = "0x4000396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Mip;

		[Token(Token = "0x4000397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int SrcSize;

		[Token(Token = "0x4000398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int DstElement;

		[Token(Token = "0x60001D8")]
		[Address(RVA = "0x1494F6C", Offset = "0x1494F6C", VA = "0x1494F6C")]
		public CopyTextureParams(Texture src, Texture dst, int mip, int srcSize, int dstElement)
		{
		}
	}

	[Token(Token = "0x2000095")]
	public struct TextureSet
	{
		[Token(Token = "0x4000399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<ulong, bool> TextureIDSingleMeshPair;

		[Token(Token = "0x400039A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsProcessed;

		[Token(Token = "0x60001D9")]
		[Address(RVA = "0x1494FC8", Offset = "0x1494FC8", VA = "0x1494FC8")]
		public TextureSet(Dictionary<ulong, bool> textureIDSingleMeshPair, bool isProcessed)
		{
		}
	}

	[Token(Token = "0x2000096")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69C654", Offset = "0x69C654")]
	private sealed class <DeleteTextureSetCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400039B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400039C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400039D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextureSet textureSetToDelete;

		[Token(Token = "0x400039E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OvrAvatarTextureCopyManager <>4__this;

		[Token(Token = "0x400039F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int gameobjectID;

		[Token(Token = "0x1700000F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001DD")]
			[Address(RVA = "0x1494F1C", Offset = "0x1494F1C", VA = "0x1494F1C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000010")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001DF")]
			[Address(RVA = "0x1494F64", Offset = "0x1494F64", VA = "0x1494F64", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001DA")]
		[Address(RVA = "0x14948EC", Offset = "0x14948EC", VA = "0x14948EC")]
		[DebuggerHidden]
		public <DeleteTextureSetCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x60001DB")]
		[Address(RVA = "0x1494918", Offset = "0x1494918", VA = "0x1494918", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001DC")]
		[Address(RVA = "0x149491C", Offset = "0x149491C", VA = "0x149491C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001DE")]
		[Address(RVA = "0x1494F24", Offset = "0x1494F24", VA = "0x1494F24", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FallbackTextureSet[] FallbackTextureSets;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Queue<CopyTextureParams> texturesToCopy;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, TextureSet> textureSets;

	[Token(Token = "0x4000386")]
	private const int TEXTURES_TO_COPY_QUEUE_CAPACITY = 256;

	[Token(Token = "0x4000387")]
	private const int COPIES_PER_FRAME = 8;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_DIFFUSE_ROUGHNESS;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_NORMAL;

	[Token(Token = "0x400038A")]
	private const string PATH_HIGHEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_2048";

	[Token(Token = "0x400038B")]
	private const string PATH_MEDIUM_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_1024";

	[Token(Token = "0x400038C")]
	private const string PATH_LOWEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_256";

	[Token(Token = "0x400038D")]
	private const string PATH_HIGHEST_NORMAL = "FallbackTextures/fallback_normal_2048";

	[Token(Token = "0x400038E")]
	private const string PATH_MEDIUM_NORMAL = "FallbackTextures/fallback_normal_1024";

	[Token(Token = "0x400038F")]
	private const string PATH_LOWEST_NORMAL = "FallbackTextures/fallback_normal_256";

	[Token(Token = "0x4000390")]
	private const int GPU_TEXTURE_COPY_WAIT_TIME = 10;

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0xA5C6A0", Offset = "0xA5C6A0", VA = "0xA5C6A0")]
	public OvrAvatarTextureCopyManager()
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0xA5CB80", Offset = "0xA5CB80", VA = "0xA5CB80")]
	public void Update()
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0xA5CD80", Offset = "0xA5CD80", VA = "0xA5CD80")]
	public int GetTextureCount()
	{
		return default(int);
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0xA55784", Offset = "0xA55784", VA = "0xA55784")]
	public void CopyTexture(Texture src, Texture dst, int mipLevel, int mipSize, int dstElement, bool useQueue = true)
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0xA5CCF4", Offset = "0xA5CCF4", VA = "0xA5CCF4")]
	private void CopyTexture(CopyTextureParams copyTextureParams)
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0xA553AC", Offset = "0xA553AC", VA = "0xA553AC")]
	public void AddTextureIDToTextureSet(int gameobjectID, ulong textureID, bool isSingleMesh)
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0xA555FC", Offset = "0xA555FC", VA = "0xA555FC")]
	public void DeleteTextureSet(int gameobjectID)
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0xA5CDCC", Offset = "0xA5CDCC", VA = "0xA5CDCC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A3BE4", Offset = "0x6A3BE4")]
	private IEnumerator DeleteTextureSetCoroutine(TextureSet textureSetToDelete, int gameobjectID)
	{
		return null;
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0xA59C7C", Offset = "0xA59C7C", VA = "0xA59C7C")]
	public void CheckFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0xA5CE78", Offset = "0xA5CE78", VA = "0xA5CE78")]
	private void InitFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}
}
[Token(Token = "0x2000097")]
public class OvrAvatarTouchController : OvrAvatarComponent
{
	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarControllerComponent component;

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0xA5CFF0", Offset = "0xA5CFF0", VA = "0xA5CFF0")]
	private void Update()
	{
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0xA5D160", Offset = "0xA5D160", VA = "0xA5D160")]
	public OvrAvatarTouchController()
	{
	}
}
[Token(Token = "0x2000098")]
public class OVRMetricsToolSDK : MonoBehaviour
{
	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AndroidJavaClass _MetricsService;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static AndroidJavaObject _Context;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool _IsBound;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static OVRMetricsToolSDK _Instance;

	[Token(Token = "0x17000011")]
	public static OVRMetricsToolSDK Instance
	{
		[Token(Token = "0x60001E2")]
		[Address(RVA = "0xC7DE30", Offset = "0xC7DE30", VA = "0xC7DE30")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0xC7DFD4", Offset = "0xC7DFD4", VA = "0xC7DFD4")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6A3C94", Offset = "0x6A3C94")]
	private static void InitJava()
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0xC7E144", Offset = "0xC7E144", VA = "0xC7E144")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0xC7E2B8", Offset = "0xC7E2B8", VA = "0xC7E2B8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0xC7E404", Offset = "0xC7E404", VA = "0xC7E404")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0xC7E148", Offset = "0xC7E148", VA = "0xC7E148")]
	private void Bind()
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0xC7E2BC", Offset = "0xC7E2BC", VA = "0xC7E2BC")]
	private void Shutdown()
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0xC7E410", Offset = "0xC7E410", VA = "0xC7E410")]
	public bool AppendCsvDebugString(string debugString)
	{
		return default(bool);
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0xC7E604", Offset = "0xC7E604", VA = "0xC7E604")]
	public bool SetOverlayDebugString(string debugString)
	{
		return default(bool);
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0xC7E7F8", Offset = "0xC7E7F8", VA = "0xC7E7F8")]
	public OVRMetricsToolSDK()
	{
	}
}
[Token(Token = "0x2000099")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x200009A")]
	public delegate void OnClick();

	[Token(Token = "0x200009B")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x200009C")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x200009D")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x200009E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69C664", Offset = "0x69C664")]
	private sealed class <>c__DisplayClass38_0
	{
		[Token(Token = "0x40003C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x600020C")]
		[Address(RVA = "0x14C2698", Offset = "0x14C2698", VA = "0x14C2698")]
		public <>c__DisplayClass38_0()
		{
		}

		[Token(Token = "0x600020D")]
		[Address(RVA = "0x14C26A0", Offset = "0x14C26A0", VA = "0x14C26A0")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x200009F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69C674", Offset = "0x69C674")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x40003C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x600020E")]
		[Address(RVA = "0x14C28C4", Offset = "0x14C28C4", VA = "0x14C28C4")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x600020F")]
		[Address(RVA = "0x14C28CC", Offset = "0x14C28CC", VA = "0x14C28CC")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x20000A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69C684", Offset = "0x69C684")]
	private sealed class <>c__DisplayClass42_0
	{
		[Token(Token = "0x40003C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x40003C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6000210")]
		[Address(RVA = "0x14C2B18", Offset = "0x14C2B18", VA = "0x14C2B18")]
		public <>c__DisplayClass42_0()
		{
		}

		[Token(Token = "0x6000211")]
		[Address(RVA = "0x14C2B20", Offset = "0x14C2B20", VA = "0x14C2B20")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x20000A1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69C694", Offset = "0x69C694")]
	private sealed class <>c__DisplayClass43_0
	{
		[Token(Token = "0x40003C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x40003C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6000212")]
		[Address(RVA = "0x14C2EB4", Offset = "0x14C2EB4", VA = "0x14C2EB4")]
		public <>c__DisplayClass43_0()
		{
		}

		[Token(Token = "0x6000213")]
		[Address(RVA = "0x14C2EBC", Offset = "0x14C2EBC", VA = "0x14C2EBC")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x20000A2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69C6A4", Offset = "0x69C6A4")]
	private sealed class <>c__DisplayClass44_0
	{
		[Token(Token = "0x40003C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x40003CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x6000214")]
		[Address(RVA = "0x14C2EDC", Offset = "0x14C2EDC", VA = "0x14C2EDC")]
		public <>c__DisplayClass44_0()
		{
		}

		[Token(Token = "0x6000215")]
		[Address(RVA = "0x14C2EE4", Offset = "0x14C2EE4", VA = "0x14C2EE4")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x40003A6")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x40003A7")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x40003A8")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform[] additionalButtonPrefab;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool[] reEnable;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x40003B7")]
	private const float elementSpacing = 16f;

	[Token(Token = "0x40003B8")]
	public const float marginH = 16f;

	[Token(Token = "0x40003B9")]
	public const float marginV = 16f;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector2[] insertPositions;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 menuOffset;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private OVRCameraRig rig;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private LaserPointer lp;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private LineRenderer lr;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public bool isHorizontal;

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0xA77B78", Offset = "0xA77B78", VA = "0xA77B78")]
	public void Awake()
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0xA780A8", Offset = "0xA780A8", VA = "0xA780A8")]
	public void Show()
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0xA786A4", Offset = "0xA786A4", VA = "0xA786A4")]
	public void Hide()
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0xA78460", Offset = "0xA78460", VA = "0xA78460")]
	private void Relayout()
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0xA78860", Offset = "0xA78860", VA = "0xA78860")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0xA78B80", Offset = "0xA78B80", VA = "0xA78B80")]
	public RectTransform AddButton(string label, [Optional] OnClick handler, int buttonIndex = -1, int targetCanvas = 0, bool highResolutionText = false)
	{
		return null;
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0xA78F48", Offset = "0xA78F48", VA = "0xA78F48")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0xA7904C", Offset = "0xA7904C", VA = "0xA7904C")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0xA79230", Offset = "0xA79230", VA = "0xA79230")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0xA792D4", Offset = "0xA792D4", VA = "0xA792D4")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0xA794C4", Offset = "0xA794C4", VA = "0xA794C4")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0xA796CC", Offset = "0xA796CC", VA = "0xA796CC")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0xA799D0", Offset = "0xA799D0", VA = "0xA799D0")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0xA79ACC", Offset = "0xA79ACC", VA = "0xA79ACC")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0xA79B78", Offset = "0xA79B78", VA = "0xA79B78")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x20000A3")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x6000216")]
	[Address(RVA = "0x9FB238", Offset = "0x9FB238", VA = "0x9FB238")]
	private void Start()
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x9FB2E8", Offset = "0x9FB2E8", VA = "0x9FB2E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x9FB3A8", Offset = "0x9FB3A8", VA = "0x9FB3A8")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x9FB3E4", Offset = "0x9FB3E4", VA = "0x9FB3E4")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x20000A4")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x20000A5")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x40003D7")]
		On,
		[Token(Token = "0x40003D8")]
		Off,
		[Token(Token = "0x40003D9")]
		OnWhenHitTarget
	}

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x17000012")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x600021B")]
		[Address(RVA = "0xD7D52C", Offset = "0xD7D52C", VA = "0xD7D52C")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x600021A")]
		[Address(RVA = "0xD7D4E8", Offset = "0xD7D4E8", VA = "0xD7D4E8")]
		set
		{
		}
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0xD7D534", Offset = "0xD7D534", VA = "0xD7D534")]
	private void Awake()
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0xD7D590", Offset = "0xD7D590", VA = "0xD7D590")]
	private void Start()
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0xD7D6D4", Offset = "0xD7D6D4", VA = "0xD7D6D4", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0xD7D6F0", Offset = "0xD7D6F0", VA = "0xD7D6F0", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0xD7D744", Offset = "0xD7D744", VA = "0xD7D744")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0xD7D900", Offset = "0xD7D900", VA = "0xD7D900")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0xD7DA14", Offset = "0xD7DA14", VA = "0xD7DA14")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0xD7DAA4", Offset = "0xD7DAA4", VA = "0xD7DAA4")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0xD7DB70", Offset = "0xD7DB70", VA = "0xD7DB70")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0xD7DC24", Offset = "0xD7DC24", VA = "0xD7DC24")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0xD7DD10", Offset = "0xD7DD10", VA = "0xD7DD10")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x20000A6")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x40003DA")]
	private const float FADE_RAY_LENGTH = 0.25f;

	[Token(Token = "0x40003DB")]
	private const float FADE_OVERLAP_MAXIMUM = 0.1f;

	[Token(Token = "0x40003DC")]
	private const float FADE_AMOUNT_MAXIMUM = 1f;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69EAB4", Offset = "0x69EAB4")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69EAEC", Offset = "0x69EAEC")]
	public LayerMask CollideLayers;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69EB24", Offset = "0x69EB24")]
	public float HeightOffset;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69EB5C", Offset = "0x69EB5C")]
	public float MinimumHeight;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69EB94", Offset = "0x69EB94")]
	public float MaximumHeight;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CapsuleCollider _character;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x6000227")]
	[Address(RVA = "0xF284A0", Offset = "0xF284A0", VA = "0xF284A0")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0xF284A8", Offset = "0xF284A8", VA = "0xF284A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0xF28534", Offset = "0xF28534", VA = "0xF28534")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0xF285C8", Offset = "0xF285C8", VA = "0xF285C8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0xF2865C", Offset = "0xF2865C", VA = "0xF2865C")]
	private void CameraUpdate()
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0xF28988", Offset = "0xF28988", VA = "0xF28988")]
	private bool CheckCameraOverlapped()
	{
		return default(bool);
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0xF28BB8", Offset = "0xF28BB8", VA = "0xF28BB8")]
	private bool CheckCameraNearClipping(out float result)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000A7")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x600022E")]
	[Address(RVA = "0xD7F204", Offset = "0xD7F204", VA = "0xD7F204")]
	private void Start()
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0xD7F2D0", Offset = "0xD7F2D0", VA = "0xD7F2D0")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x20000A8")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x20000A9")]
	public enum States
	{
		[Token(Token = "0x400040A")]
		Ready,
		[Token(Token = "0x400040B")]
		Aim,
		[Token(Token = "0x400040C")]
		CancelAim,
		[Token(Token = "0x400040D")]
		PreTeleport,
		[Token(Token = "0x400040E")]
		CancelTeleport,
		[Token(Token = "0x400040F")]
		Teleporting,
		[Token(Token = "0x4000410")]
		PostTeleport
	}

	[Token(Token = "0x20000AA")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x4000412")]
		None,
		[Token(Token = "0x4000413")]
		Aim,
		[Token(Token = "0x4000414")]
		PreTeleport,
		[Token(Token = "0x4000415")]
		Teleport
	}

	[Token(Token = "0x20000AB")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x4000417")]
		Point,
		[Token(Token = "0x4000418")]
		Sphere,
		[Token(Token = "0x4000419")]
		Capsule
	}

	[Token(Token = "0x20000AC")]
	public class AimData
	{
		[Token(Token = "0x400041A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x400041B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x400041C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x400041D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x400041E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69EFAC", Offset = "0x69EFAC")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x17000016")]
		public List<Vector3> Points
		{
			[Token(Token = "0x6000265")]
			[Address(RVA = "0x14910CC", Offset = "0x14910CC", VA = "0x14910CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A4144", Offset = "0x6A4144")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000266")]
			[Address(RVA = "0x14910D4", Offset = "0x14910D4", VA = "0x14910D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A4154", Offset = "0x6A4154")]
			private set
			{
			}
		}

		[Token(Token = "0x6000264")]
		[Address(RVA = "0x1491048", Offset = "0x1491048", VA = "0x1491048")]
		public AimData()
		{
		}

		[Token(Token = "0x6000267")]
		[Address(RVA = "0x14910DC", Offset = "0x14910DC", VA = "0x14910DC")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x20000AD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69C6B4", Offset = "0x69C6B4")]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400041F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000017")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600026B")]
			[Address(RVA = "0x1490E94", Offset = "0x1490E94", VA = "0x1490E94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000018")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600026D")]
			[Address(RVA = "0x1490EDC", Offset = "0x1490EDC", VA = "0x1490EDC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000268")]
		[Address(RVA = "0x1490D58", Offset = "0x1490D58", VA = "0x1490D58")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6000269")]
		[Address(RVA = "0x1490D84", Offset = "0x1490D84", VA = "0x1490D84", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600026A")]
		[Address(RVA = "0x1490D88", Offset = "0x1490D88", VA = "0x1490D88", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600026C")]
		[Address(RVA = "0x1490E9C", Offset = "0x1490E9C", VA = "0x1490E9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000AE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69C6C4", Offset = "0x69C6C4")]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000019")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000271")]
			[Address(RVA = "0x14907C4", Offset = "0x14907C4", VA = "0x14907C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000273")]
			[Address(RVA = "0x149080C", Offset = "0x149080C", VA = "0x149080C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600026E")]
		[Address(RVA = "0x149063C", Offset = "0x149063C", VA = "0x149063C")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x600026F")]
		[Address(RVA = "0x1490668", Offset = "0x1490668", VA = "0x1490668", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000270")]
		[Address(RVA = "0x149066C", Offset = "0x149066C", VA = "0x149066C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000272")]
		[Address(RVA = "0x14907CC", Offset = "0x14907CC", VA = "0x14907CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000AF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69C6D4", Offset = "0x69C6D4")]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700001B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000277")]
			[Address(RVA = "0x14908F0", Offset = "0x14908F0", VA = "0x14908F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000279")]
			[Address(RVA = "0x1490938", Offset = "0x1490938", VA = "0x1490938", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000274")]
		[Address(RVA = "0x1490814", Offset = "0x1490814", VA = "0x1490814")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6000275")]
		[Address(RVA = "0x1490840", Offset = "0x1490840", VA = "0x1490840", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000276")]
		[Address(RVA = "0x1490844", Offset = "0x1490844", VA = "0x1490844", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000278")]
		[Address(RVA = "0x14908F8", Offset = "0x14908F8", VA = "0x14908F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69C6E4", Offset = "0x69C6E4")]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400042A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700001D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600027D")]
			[Address(RVA = "0x1490D08", Offset = "0x1490D08", VA = "0x1490D08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600027F")]
			[Address(RVA = "0x1490D50", Offset = "0x1490D50", VA = "0x1490D50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600027A")]
		[Address(RVA = "0x1490BEC", Offset = "0x1490BEC", VA = "0x1490BEC")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x600027B")]
		[Address(RVA = "0x1490C18", Offset = "0x1490C18", VA = "0x1490C18", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600027C")]
		[Address(RVA = "0x1490C1C", Offset = "0x1490C1C", VA = "0x1490C1C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600027E")]
		[Address(RVA = "0x1490D10", Offset = "0x1490D10", VA = "0x1490D10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000B1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69C6F4", Offset = "0x69C6F4")]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400042B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400042C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400042D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700001F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000283")]
			[Address(RVA = "0x1490A1C", Offset = "0x1490A1C", VA = "0x1490A1C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000020")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000285")]
			[Address(RVA = "0x1490A64", Offset = "0x1490A64", VA = "0x1490A64", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000280")]
		[Address(RVA = "0x1490940", Offset = "0x1490940", VA = "0x1490940")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x6000281")]
		[Address(RVA = "0x149096C", Offset = "0x149096C", VA = "0x149096C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000282")]
		[Address(RVA = "0x1490970", Offset = "0x1490970", VA = "0x1490970", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000284")]
		[Address(RVA = "0x1490A24", Offset = "0x1490A24", VA = "0x1490A24", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000B2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69C704", Offset = "0x69C704")]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400042E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400042F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000021")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000289")]
			[Address(RVA = "0x1490FF8", Offset = "0x1490FF8", VA = "0x1490FF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000022")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600028B")]
			[Address(RVA = "0x1491040", Offset = "0x1491040", VA = "0x1491040", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000286")]
		[Address(RVA = "0x1490EE4", Offset = "0x1490EE4", VA = "0x1490EE4")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x6000287")]
		[Address(RVA = "0x1490F10", Offset = "0x1490F10", VA = "0x1490F10", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000288")]
		[Address(RVA = "0x1490F14", Offset = "0x1490F14", VA = "0x1490F14", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600028A")]
		[Address(RVA = "0x1491000", Offset = "0x1491000", VA = "0x1491000", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000B3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69C714", Offset = "0x69C714")]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000023")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600028F")]
			[Address(RVA = "0x1490B9C", Offset = "0x1490B9C", VA = "0x1490B9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000024")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000291")]
			[Address(RVA = "0x1490BE4", Offset = "0x1490BE4", VA = "0x1490BE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600028C")]
		[Address(RVA = "0x1490A6C", Offset = "0x1490A6C", VA = "0x1490A6C")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x600028D")]
		[Address(RVA = "0x1490A98", Offset = "0x1490A98", VA = "0x1490A98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600028E")]
		[Address(RVA = "0x1490A9C", Offset = "0x1490A9C", VA = "0x1490A9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000290")]
		[Address(RVA = "0x1490BA4", Offset = "0x1490BA4", VA = "0x1490BA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69EBCC", Offset = "0x69EBCC")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69EC04", Offset = "0x69EC04")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69EC3C", Offset = "0x69EC3C")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69EC74", Offset = "0x69EC74")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69ECAC", Offset = "0x69ECAC")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69ECE4", Offset = "0x69ECE4")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69ED1C", Offset = "0x69ED1C")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69ED54", Offset = "0x69ED54")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69ED8C", Offset = "0x69ED8C")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69ED9C", Offset = "0x69ED9C")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69EDD4", Offset = "0x69EDD4")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69EE1C", Offset = "0x69EE1C")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69EE2C", Offset = "0x69EE2C")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69EE64", Offset = "0x69EE64")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69EE9C", Offset = "0x69EE9C")]
	public float AimCollisionRadius;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69EED4", Offset = "0x69EED4")]
	public float AimCollisionHeight;

	[Token(Token = "0x17000013")]
	public States CurrentState
	{
		[Token(Token = "0x6000232")]
		[Address(RVA = "0xD7FDCC", Offset = "0xD7FDCC", VA = "0xD7FDCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A3CCC", Offset = "0x6A3CCC")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x6000233")]
		[Address(RVA = "0xD7FDD4", Offset = "0xD7FDD4", VA = "0xD7FDD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A3CDC", Offset = "0x6A3CDC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000014")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x6000237")]
		[Address(RVA = "0xD7FFF8", Offset = "0xD7FFF8", VA = "0xD7FFF8")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000015")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x6000238")]
		[Address(RVA = "0xD80020", Offset = "0xD80020", VA = "0xD80020")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A3D0C", Offset = "0x6A3D0C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000239")]
		[Address(RVA = "0xD80028", Offset = "0xD80028", VA = "0xD80028")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A3D1C", Offset = "0x6A3D1C")]
		private set
		{
		}
	}

	[Token(Token = "0x14000001")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x6000234")]
		[Address(RVA = "0xD7FDDC", Offset = "0xD7FDDC", VA = "0xD7FDDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A3CEC", Offset = "0x6A3CEC")]
		add
		{
		}
		[Token(Token = "0x6000235")]
		[Address(RVA = "0xD7FE7C", Offset = "0xD7FE7C", VA = "0xD7FE7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A3CFC", Offset = "0x6A3CFC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x6000243")]
		[Address(RVA = "0xD80668", Offset = "0xD80668", VA = "0xD80668")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A3D64", Offset = "0x6A3D64")]
		add
		{
		}
		[Token(Token = "0x6000244")]
		[Address(RVA = "0xD80708", Offset = "0xD80708", VA = "0xD80708")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A3D74", Offset = "0x6A3D74")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x6000246")]
		[Address(RVA = "0xD807A8", Offset = "0xD807A8", VA = "0xD807A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A3DE4", Offset = "0x6A3DE4")]
		add
		{
		}
		[Token(Token = "0x6000247")]
		[Address(RVA = "0xD80848", Offset = "0xD80848", VA = "0xD80848")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A3DF4", Offset = "0x6A3DF4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x6000248")]
		[Address(RVA = "0xD808E8", Offset = "0xD808E8", VA = "0xD808E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A3E04", Offset = "0x6A3E04")]
		add
		{
		}
		[Token(Token = "0x6000249")]
		[Address(RVA = "0xD80988", Offset = "0xD80988", VA = "0xD80988")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A3E14", Offset = "0x6A3E14")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x600024B")]
		[Address(RVA = "0xD80A98", Offset = "0xD80A98", VA = "0xD80A98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A3E24", Offset = "0x6A3E24")]
		add
		{
		}
		[Token(Token = "0x600024C")]
		[Address(RVA = "0xD80B38", Offset = "0xD80B38", VA = "0xD80B38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A3E34", Offset = "0x6A3E34")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x600024E")]
		[Address(RVA = "0xD80C50", Offset = "0xD80C50", VA = "0xD80C50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A3EA4", Offset = "0x6A3EA4")]
		add
		{
		}
		[Token(Token = "0x600024F")]
		[Address(RVA = "0xD80CF0", Offset = "0xD80CF0", VA = "0xD80CF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A3EB4", Offset = "0x6A3EB4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x6000251")]
		[Address(RVA = "0xD80E08", Offset = "0xD80E08", VA = "0xD80E08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A3F24", Offset = "0x6A3F24")]
		add
		{
		}
		[Token(Token = "0x6000252")]
		[Address(RVA = "0xD80EA8", Offset = "0xD80EA8", VA = "0xD80EA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A3F34", Offset = "0x6A3F34")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x6000254")]
		[Address(RVA = "0xD80FC0", Offset = "0xD80FC0", VA = "0xD80FC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A3FA4", Offset = "0x6A3FA4")]
		add
		{
		}
		[Token(Token = "0x6000255")]
		[Address(RVA = "0xD81060", Offset = "0xD81060", VA = "0xD81060")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A3FB4", Offset = "0x6A3FB4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x6000257")]
		[Address(RVA = "0xD81178", Offset = "0xD81178", VA = "0xD81178")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A4024", Offset = "0x6A4024")]
		add
		{
		}
		[Token(Token = "0x6000258")]
		[Address(RVA = "0xD81218", Offset = "0xD81218", VA = "0xD81218")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A4034", Offset = "0x6A4034")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x600025A")]
		[Address(RVA = "0xD81330", Offset = "0xD81330", VA = "0xD81330")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A40A4", Offset = "0x6A40A4")]
		add
		{
		}
		[Token(Token = "0x600025B")]
		[Address(RVA = "0xD813D0", Offset = "0xD813D0", VA = "0xD813D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A40B4", Offset = "0x6A40B4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x600025D")]
		[Address(RVA = "0xD814E8", Offset = "0xD814E8", VA = "0xD814E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A4124", Offset = "0x6A4124")]
		add
		{
		}
		[Token(Token = "0x600025E")]
		[Address(RVA = "0xD81588", Offset = "0xD81588", VA = "0xD81588")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A4134", Offset = "0x6A4134")]
		remove
		{
		}
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0xD7FA78", Offset = "0xD7FA78", VA = "0xD7FA78")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0xD7FA9C", Offset = "0xD7FA9C", VA = "0xD7FA9C")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0xD7FF1C", Offset = "0xD7FF1C", VA = "0xD7FF1C")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0xD80030", Offset = "0xD80030", VA = "0xD80030")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0xD8027C", Offset = "0xD8027C", VA = "0xD8027C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6A3D2C", Offset = "0x6A3D2C")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0xD80330", Offset = "0xD80330", VA = "0xD80330")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0xD80430", Offset = "0xD80430", VA = "0xD80430")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0xD8044C", Offset = "0xD8044C", VA = "0xD8044C")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0xD80510", Offset = "0xD80510", VA = "0xD80510")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0xD80554", Offset = "0xD80554", VA = "0xD80554")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0xD805B8", Offset = "0xD805B8", VA = "0xD805B8", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0xD80660", Offset = "0xD80660", VA = "0xD80660", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0xD805E8", Offset = "0xD805E8", VA = "0xD805E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A3D84", Offset = "0x6A3D84")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0xD80A28", Offset = "0xD80A28", VA = "0xD80A28")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0xD80BD8", Offset = "0xD80BD8", VA = "0xD80BD8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A3E44", Offset = "0x6A3E44")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0xD80D90", Offset = "0xD80D90", VA = "0xD80D90")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A3EC4", Offset = "0x6A3EC4")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0xD80F48", Offset = "0xD80F48", VA = "0xD80F48")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A3F44", Offset = "0x6A3F44")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0xD81100", Offset = "0xD81100", VA = "0xD81100")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A3FC4", Offset = "0x6A3FC4")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0xD812B8", Offset = "0xD812B8", VA = "0xD812B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A4044", Offset = "0x6A4044")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0xD81470", Offset = "0xD81470", VA = "0xD81470")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A40C4", Offset = "0x6A40C4")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0xD81628", Offset = "0xD81628", VA = "0xD81628")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0xD81768", Offset = "0xD81768", VA = "0xD81768")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0xD8179C", Offset = "0xD8179C", VA = "0xD8179C")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0xD81864", Offset = "0xD81864", VA = "0xD81864")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0xD8195C", Offset = "0xD8195C", VA = "0xD8195C")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x20000B4")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400000C")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x6000292")]
		[Address(RVA = "0xA153D4", Offset = "0xA153D4", VA = "0xA153D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A4394", Offset = "0x6A4394")]
		add
		{
		}
		[Token(Token = "0x6000293")]
		[Address(RVA = "0xA15474", Offset = "0xA15474", VA = "0xA15474")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A43A4", Offset = "0x6A43A4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x6000294")]
		[Address(RVA = "0xA15514", Offset = "0xA15514", VA = "0xA15514")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A43B4", Offset = "0x6A43B4")]
		add
		{
		}
		[Token(Token = "0x6000295")]
		[Address(RVA = "0xA155B4", Offset = "0xA155B4", VA = "0xA155B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A43C4", Offset = "0x6A43C4")]
		remove
		{
		}
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0xA15654", Offset = "0xA15654", VA = "0xA15654")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0xA15740", Offset = "0xA15740", VA = "0xA15740")]
	private void Start()
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0xA15744", Offset = "0xA15744", VA = "0xA15744")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0xA157B8", Offset = "0xA157B8", VA = "0xA157B8")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0xA158DC", Offset = "0xA158DC", VA = "0xA158DC")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0xA15AC4", Offset = "0xA15AC4", VA = "0xA15AC4")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0xA15CCC", Offset = "0xA15CCC", VA = "0xA15CCC")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x20000B5")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x600029D")]
	[Address(RVA = "0x14D82E8", Offset = "0x14D82E8", VA = "0x14D82E8", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0x14D8388", Offset = "0x14D8388", VA = "0x14D8388", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x600029F")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x14D8478", Offset = "0x14D8478", VA = "0x14D8478")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x20000B6")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69EFDC", Offset = "0x69EFDC")]
	public float Range;

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x14D8488", Offset = "0x14D8488", VA = "0x14D8488", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x14D8584", Offset = "0x14D8584", VA = "0x14D8584")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x20000B7")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69F014", Offset = "0x69F014")]
	public float Range;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69F04C", Offset = "0x69F04C")]
	public float MinimumElevation;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69F084", Offset = "0x69F084")]
	public float Gravity;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x69F0BC", Offset = "0x69F0BC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69F0BC", Offset = "0x69F0BC")]
	public float AimVelocity;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69F118", Offset = "0x69F118")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x69F118", Offset = "0x69F118")]
	public float AimStep;

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x14D8594", Offset = "0x14D8594", VA = "0x14D8594", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0x14D8724", Offset = "0x14D8724", VA = "0x14D8724")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x20000B8")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69F170", Offset = "0x69F170")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x14D8738", Offset = "0x14D8738", VA = "0x14D8738")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x14D8874", Offset = "0x14D8874", VA = "0x14D8874")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x14D88A4", Offset = "0x14D88A4", VA = "0x14D88A4")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x14D88D4", Offset = "0x14D88D4", VA = "0x14D88D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x14D8984", Offset = "0x14D8984", VA = "0x14D8984", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0x14D89F0", Offset = "0x14D89F0", VA = "0x14D89F0", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0x14D8A58", Offset = "0x14D8A58", VA = "0x14D8A58")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x20000B9")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69F1A8", Offset = "0x69F1A8")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69F1B8", Offset = "0x69F1B8")]
	public Transform PositionIndicator;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69F1F0", Offset = "0x69F1F0")]
	public Transform OrientationIndicator;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69F228", Offset = "0x69F228")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x17000025")]
	public bool IsValidDestination
	{
		[Token(Token = "0x60002AC")]
		[Address(RVA = "0x14D8B7C", Offset = "0x14D8B7C", VA = "0x14D8B7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A43D4", Offset = "0x6A43D4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002AD")]
		[Address(RVA = "0x14D8B84", Offset = "0x14D8B84", VA = "0x14D8B84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A43E4", Offset = "0x6A43E4")]
		private set
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x60002B2")]
		[Address(RVA = "0x14D8D40", Offset = "0x14D8D40", VA = "0x14D8D40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A43F4", Offset = "0x6A43F4")]
		add
		{
		}
		[Token(Token = "0x60002B3")]
		[Address(RVA = "0x14D8DE0", Offset = "0x14D8DE0", VA = "0x14D8DE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A4404", Offset = "0x6A4404")]
		remove
		{
		}
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x14D8B90", Offset = "0x14D8B90", VA = "0x14D8B90")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0x14D8C28", Offset = "0x14D8C28", VA = "0x14D8C28")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0x14D8CFC", Offset = "0x14D8CFC", VA = "0x14D8CFC")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0x14D8D3C", Offset = "0x14D8D3C", VA = "0x14D8D3C")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0x14D8E80", Offset = "0x14D8E80", VA = "0x14D8E80")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0x14D8EE4", Offset = "0x14D8EE4", VA = "0x14D8EE4")]
	public void Recycle()
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0x14D8F04", Offset = "0x14D8F04", VA = "0x14D8F04", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x20000BA")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x20000BB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69C724", Offset = "0x69C724")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000026")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002C3")]
			[Address(RVA = "0x149C96C", Offset = "0x149C96C", VA = "0x149C96C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000027")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002C5")]
			[Address(RVA = "0x149C9B4", Offset = "0x149C9B4", VA = "0x149C9B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002C0")]
		[Address(RVA = "0x149C8A4", Offset = "0x149C8A4", VA = "0x149C8A4")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60002C1")]
		[Address(RVA = "0x149C8D0", Offset = "0x149C8D0", VA = "0x149C8D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002C2")]
		[Address(RVA = "0x149C8D4", Offset = "0x149C8D4", VA = "0x149C8D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002C4")]
		[Address(RVA = "0x149C974", Offset = "0x149C974", VA = "0x149C974", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69C734", Offset = "0x69C734")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400045A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400045B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000028")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002C9")]
			[Address(RVA = "0x149C854", Offset = "0x149C854", VA = "0x149C854", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000029")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002CB")]
			[Address(RVA = "0x149C89C", Offset = "0x149C89C", VA = "0x149C89C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002C6")]
		[Address(RVA = "0x149C788", Offset = "0x149C788", VA = "0x149C788")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60002C7")]
		[Address(RVA = "0x149C7B4", Offset = "0x149C7B4", VA = "0x149C7B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002C8")]
		[Address(RVA = "0x149C7B8", Offset = "0x149C7B8", VA = "0x149C7B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002CA")]
		[Address(RVA = "0x149C85C", Offset = "0x149C85C", VA = "0x149C85C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x14D9110", Offset = "0x14D9110", VA = "0x14D9110")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x14D91E4", Offset = "0x14D91E4", VA = "0x14D91E4", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x14D9244", Offset = "0x14D9244", VA = "0x14D9244", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x14D9304", Offset = "0x14D9304", VA = "0x14D9304")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A4414", Offset = "0x6A4414")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x14D937C", Offset = "0x14D937C", VA = "0x14D937C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A4474", Offset = "0x6A4474")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002BC")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x60002BD")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x14D93F4", Offset = "0x14D93F4", VA = "0x14D93F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A44D4", Offset = "0x6A44D4")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x14D9420", Offset = "0x14D9420", VA = "0x14D9420")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A44E4", Offset = "0x6A44E4")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x20000BD")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69F270", Offset = "0x69F270")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69F280", Offset = "0x69F280")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69F2B8", Offset = "0x69F2B8")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69F2F0", Offset = "0x69F2F0")]
	public bool FastTeleport;

	[Token(Token = "0x1700002A")]
	public Transform Pointer
	{
		[Token(Token = "0x60002CC")]
		[Address(RVA = "0x14D944C", Offset = "0x14D944C", VA = "0x14D944C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A4594", Offset = "0x6A4594")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002CD")]
		[Address(RVA = "0x14D9454", Offset = "0x14D9454", VA = "0x14D9454")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A45A4", Offset = "0x6A45A4")]
		private set
		{
		}
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0x14D945C", Offset = "0x14D945C", VA = "0x14D945C", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0x14D95B4", Offset = "0x14D95B4", VA = "0x14D95B4", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0x14D966C", Offset = "0x14D966C", VA = "0x14D966C")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x20000BE")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x20000BF")]
	public enum InputModes
	{
		[Token(Token = "0x400046A")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x400046B")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x400046C")]
		ThumbstickTeleport,
		[Token(Token = "0x400046D")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x20000C0")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x400046F")]
		A,
		[Token(Token = "0x4000470")]
		B,
		[Token(Token = "0x4000471")]
		LeftTrigger,
		[Token(Token = "0x4000472")]
		LeftThumbstick,
		[Token(Token = "0x4000473")]
		RightTrigger,
		[Token(Token = "0x4000474")]
		RightThumbstick,
		[Token(Token = "0x4000475")]
		X,
		[Token(Token = "0x4000476")]
		Y
	}

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69F328", Offset = "0x69F328")]
	public InputModes InputMode;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69F360", Offset = "0x69F360")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69F398", Offset = "0x69F398")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69F3D0", Offset = "0x69F3D0")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0x14D9670", Offset = "0x14D9670", VA = "0x14D9670")]
	private void Start()
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x14D9674", Offset = "0x14D9674", VA = "0x14D9674", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0x14D9A5C", Offset = "0x14D9A5C", VA = "0x14D9A5C", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x14D9B1C", Offset = "0x14D9B1C", VA = "0x14D9B1C")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x20000C1")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x20000C2")]
	public enum OrientationModes
	{
		[Token(Token = "0x400047B")]
		HeadRelative,
		[Token(Token = "0x400047C")]
		ForwardFacing
	}

	[Token(Token = "0x20000C3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69C744", Offset = "0x69C744")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400047D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400047E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400047F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x1700002B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002E1")]
			[Address(RVA = "0x149CA9C", Offset = "0x149CA9C", VA = "0x149CA9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002E3")]
			[Address(RVA = "0x149CAE4", Offset = "0x149CAE4", VA = "0x149CAE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002DE")]
		[Address(RVA = "0x149C9BC", Offset = "0x149C9BC", VA = "0x149C9BC")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60002DF")]
		[Address(RVA = "0x149C9E8", Offset = "0x149C9E8", VA = "0x149C9E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002E0")]
		[Address(RVA = "0x149C9EC", Offset = "0x149C9EC", VA = "0x149C9EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002E2")]
		[Address(RVA = "0x149CAA4", Offset = "0x149CAA4", VA = "0x149CAA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0x14D9C00", Offset = "0x14D9C00", VA = "0x14D9C00")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0x14D9CF4", Offset = "0x14D9CF4", VA = "0x14D9CF4")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x14D9CFC", Offset = "0x14D9CFC", VA = "0x14D9CFC", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0x14D9D48", Offset = "0x14D9D48", VA = "0x14D9D48", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x14D9D90", Offset = "0x14D9D90", VA = "0x14D9D90")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A45B4", Offset = "0x6A45B4")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002DA")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x60002DB")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x14D9E08", Offset = "0x14D9E08", VA = "0x14D9E08")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x14D9EC4", Offset = "0x14D9EC4", VA = "0x14D9EC4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A4614", Offset = "0x6A4614")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x20000C4")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x14D9EF0", Offset = "0x14D9EF0", VA = "0x14D9EF0", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x14D9EF4", Offset = "0x14D9EF4", VA = "0x14D9EF4", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0x14D9F70", Offset = "0x14D9F70", VA = "0x14D9F70")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x20000C5")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69F408", Offset = "0x69F408")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69F440", Offset = "0x69F440")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69F478", Offset = "0x69F478")]
	public float AimDistanceThreshold;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69F4B0", Offset = "0x69F4B0")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0x14D9F74", Offset = "0x14D9F74", VA = "0x14D9F74", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x14D9FA0", Offset = "0x14D9FA0", VA = "0x14D9FA0", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x14DA350", Offset = "0x14DA350", VA = "0x14DA350")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x20000C6")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69F4E8", Offset = "0x69F4E8")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69F520", Offset = "0x69F520")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69F558", Offset = "0x69F558")]
	public float RotateStickThreshold;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0x14DA354", Offset = "0x14DA354", VA = "0x14DA354", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x14DA398", Offset = "0x14DA398", VA = "0x14DA398", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x14DA740", Offset = "0x14DA740", VA = "0x14DA740")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x20000C7")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x14DA750", Offset = "0x14DA750", VA = "0x14DA750")]
	private void Start()
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x14DA754", Offset = "0x14DA754", VA = "0x14DA754")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0x14DA75C", Offset = "0x14DA75C", VA = "0x14DA75C")]
	private void Update()
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x14DA818", Offset = "0x14DA818", VA = "0x14DA818")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x14DA840", Offset = "0x14DA840", VA = "0x14DA840")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x20000C8")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69F590", Offset = "0x69F590")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x1700002D")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x60002F2")]
		[Address(RVA = "0x14DA858", Offset = "0x14DA858", VA = "0x14DA858")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A4674", Offset = "0x6A4674")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002F3")]
		[Address(RVA = "0x14DA860", Offset = "0x14DA860", VA = "0x14DA860")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A4684", Offset = "0x6A4684")]
		private set
		{
		}
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x14D831C", Offset = "0x14D831C", VA = "0x14D831C", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x14D8444", Offset = "0x14D8444", VA = "0x14D8444", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x14DA868", Offset = "0x14DA868", VA = "0x14DA868")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6A4694", Offset = "0x6A4694")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x14D89E4", Offset = "0x14D89E4", VA = "0x14D89E4", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0x14D8A50", Offset = "0x14D8A50", VA = "0x14D8A50", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x14D8480", Offset = "0x14D8480", VA = "0x14D8480")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x20000C9")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x20000CA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69C754", Offset = "0x69C754")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x1700002E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000305")]
			[Address(RVA = "0x149CDBC", Offset = "0x149CDBC", VA = "0x149CDBC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000307")]
			[Address(RVA = "0x149CE04", Offset = "0x149CE04", VA = "0x149CE04", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000302")]
		[Address(RVA = "0x149CAEC", Offset = "0x149CAEC", VA = "0x149CAEC")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000303")]
		[Address(RVA = "0x149CB18", Offset = "0x149CB18", VA = "0x149CB18", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000304")]
		[Address(RVA = "0x149CB1C", Offset = "0x149CB1C", VA = "0x149CB1C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000306")]
		[Address(RVA = "0x149CDC4", Offset = "0x149CDC4", VA = "0x149CDC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69F5A0", Offset = "0x69F5A0")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x4000496")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0x14DA944", Offset = "0x14DA944", VA = "0x14DA944")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x14DAA54", Offset = "0x14DAA54", VA = "0x14DAA54", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x14DAA80", Offset = "0x14DAA80", VA = "0x14DAA80", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x14DAAA8", Offset = "0x14DAAA8", VA = "0x14DAAA8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A46CC", Offset = "0x6A46CC")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x14DAB20", Offset = "0x14DAB20", VA = "0x14DAB20", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x60002FF")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x14DAB3C", Offset = "0x14DAB3C", VA = "0x14DAB3C", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x14DAC5C", Offset = "0x14DAC5C", VA = "0x14DAC5C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A472C", Offset = "0x6A472C")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x20000CB")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x14DAC88", Offset = "0x14DAC88", VA = "0x14DAC88")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x14DACEC", Offset = "0x14DACEC", VA = "0x14DACEC", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x14DADE4", Offset = "0x14DADE4", VA = "0x14DADE4", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x14DAEDC", Offset = "0x14DAEDC", VA = "0x14DAEDC")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6A478C", Offset = "0x6A478C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0x14DAEE0", Offset = "0x14DAEE0", VA = "0x14DAEE0")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x20000CC")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69F5D8", Offset = "0x69F5D8")]
	public float LOSOffset;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69F610", Offset = "0x69F610")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x600030D")]
	[Address(RVA = "0x14DAEEC", Offset = "0x14DAEEC", VA = "0x14DAEEC", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x14DB0F8", Offset = "0x14DB0F8", VA = "0x14DB0F8")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x20000CD")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x600030F")]
	[Address(RVA = "0x14DB104", Offset = "0x14DB104", VA = "0x14DB104", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x14DB1FC", Offset = "0x14DB1FC", VA = "0x14DB1FC")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x20000CE")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x6000311")]
	[Address(RVA = "0x14DB200", Offset = "0x14DB200", VA = "0x14DB200", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0x14DB294", Offset = "0x14DB294", VA = "0x14DB294", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000313")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x6000314")]
	[Address(RVA = "0x14DB324", Offset = "0x14DB324", VA = "0x14DB324")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x20000CF")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x20000D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69C764", Offset = "0x69C764")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x40004A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x40004A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x40004A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x17000030")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600031B")]
			[Address(RVA = "0x149CF44", Offset = "0x149CF44", VA = "0x149CF44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000031")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600031D")]
			[Address(RVA = "0x149CF8C", Offset = "0x149CF8C", VA = "0x149CF8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000318")]
		[Address(RVA = "0x149CE0C", Offset = "0x149CE0C", VA = "0x149CE0C")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000319")]
		[Address(RVA = "0x149CE38", Offset = "0x149CE38", VA = "0x149CE38", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600031A")]
		[Address(RVA = "0x149CE3C", Offset = "0x149CE3C", VA = "0x149CE3C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600031C")]
		[Address(RVA = "0x149CF4C", Offset = "0x149CF4C", VA = "0x149CF4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69F648", Offset = "0x69F648")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x69F648", Offset = "0x69F648")]
	public float TransitionDuration;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69F6A0", Offset = "0x69F6A0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x69F6A0", Offset = "0x69F6A0")]
	public float TeleportDelay;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69F6F4", Offset = "0x69F6F4")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x6000315")]
	[Address(RVA = "0x14DB32C", Offset = "0x14DB32C", VA = "0x14DB32C", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0x14DB358", Offset = "0x14DB358", VA = "0x14DB358")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A47C4", Offset = "0x6A47C4")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x14DB3D0", Offset = "0x14DB3D0", VA = "0x14DB3D0")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x20000D1")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x600031E")]
	[Address(RVA = "0x14DB57C", Offset = "0x14DB57C", VA = "0x14DB57C", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0x14DB598", Offset = "0x14DB598", VA = "0x14DB598")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x20000D2")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x20000D3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69C774", Offset = "0x69C774")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x40004AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x40004AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x17000032")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000326")]
			[Address(RVA = "0x149D100", Offset = "0x149D100", VA = "0x149D100", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000033")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000328")]
			[Address(RVA = "0x149D148", Offset = "0x149D148", VA = "0x149D148", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000323")]
		[Address(RVA = "0x149CF94", Offset = "0x149CF94", VA = "0x149CF94")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000324")]
		[Address(RVA = "0x149CFC0", Offset = "0x149CFC0", VA = "0x149CFC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000325")]
		[Address(RVA = "0x149CFC4", Offset = "0x149CFC4", VA = "0x149CFC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000327")]
		[Address(RVA = "0x149D108", Offset = "0x149D108", VA = "0x149D108", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x69F72C", Offset = "0x69F72C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69F72C", Offset = "0x69F72C")]
	public float TransitionDuration;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x6000320")]
	[Address(RVA = "0x14DB5A0", Offset = "0x14DB5A0", VA = "0x14DB5A0", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0x14DB5CC", Offset = "0x14DB5CC", VA = "0x14DB5CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A4874", Offset = "0x6A4874")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0x14DB644", Offset = "0x14DB644", VA = "0x14DB644")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x20000D4")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x20000D5")]
	public enum PlabackState
	{
		[Token(Token = "0x40004C6")]
		Idle = 1,
		[Token(Token = "0x40004C7")]
		Preparing,
		[Token(Token = "0x40004C8")]
		Buffering,
		[Token(Token = "0x40004C9")]
		Ready,
		[Token(Token = "0x40004CA")]
		Ended
	}

	[Token(Token = "0x20000D6")]
	public enum StereoMode
	{
		[Token(Token = "0x40004CC")]
		Unknown = -1,
		[Token(Token = "0x40004CD")]
		Mono,
		[Token(Token = "0x40004CE")]
		TopBottom,
		[Token(Token = "0x40004CF")]
		LeftRight,
		[Token(Token = "0x40004D0")]
		Mesh
	}

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getCurrentPlaybackStateMethodId;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr getStereoModeMethodId;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static IntPtr getWidthMethodId;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static IntPtr getHeightMethodId;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x17000034")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x6000329")]
		[Address(RVA = "0xC77E9C", Offset = "0xC77E9C", VA = "0xC77E9C")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000035")]
	private static IntPtr Activity
	{
		[Token(Token = "0x600032A")]
		[Address(RVA = "0xC781CC", Offset = "0xC781CC", VA = "0xC781CC")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000036")]
	public static bool IsAvailable
	{
		[Token(Token = "0x600032B")]
		[Address(RVA = "0xC754A4", Offset = "0xC754A4", VA = "0xC754A4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000037")]
	public static bool IsPlaying
	{
		[Token(Token = "0x600032C")]
		[Address(RVA = "0xC76CA0", Offset = "0xC76CA0", VA = "0xC76CA0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000038")]
	public static PlabackState CurrentPlaybackState
	{
		[Token(Token = "0x600032D")]
		[Address(RVA = "0xC7849C", Offset = "0xC7849C", VA = "0xC7849C")]
		get
		{
			return default(PlabackState);
		}
	}

	[Token(Token = "0x17000039")]
	public static long Duration
	{
		[Token(Token = "0x600032E")]
		[Address(RVA = "0xC76EC4", Offset = "0xC76EC4", VA = "0xC76EC4")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x1700003A")]
	public static StereoMode VideoStereoMode
	{
		[Token(Token = "0x600032F")]
		[Address(RVA = "0xC75ACC", Offset = "0xC75ACC", VA = "0xC75ACC")]
		get
		{
			return default(StereoMode);
		}
	}

	[Token(Token = "0x1700003B")]
	public static int VideoWidth
	{
		[Token(Token = "0x6000330")]
		[Address(RVA = "0xC758A4", Offset = "0xC758A4", VA = "0xC758A4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700003C")]
	public static int VideoHeight
	{
		[Token(Token = "0x6000331")]
		[Address(RVA = "0xC759B8", Offset = "0xC759B8", VA = "0xC759B8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700003D")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x6000332")]
		[Address(RVA = "0xC76DB0", Offset = "0xC76DB0", VA = "0xC76DB0")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000333")]
		[Address(RVA = "0xC76384", Offset = "0xC76384", VA = "0xC76384")]
		set
		{
		}
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0xC785B0", Offset = "0xC785B0", VA = "0xC785B0")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0xC77294", Offset = "0xC77294", VA = "0xC77294")]
	public static void Stop()
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0xC75FD0", Offset = "0xC75FD0", VA = "0xC75FD0")]
	public static void Play()
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0xC76170", Offset = "0xC76170", VA = "0xC76170")]
	public static void Pause()
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0xC7708C", Offset = "0xC7708C", VA = "0xC7708C")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0xC787DC", Offset = "0xC787DC", VA = "0xC787DC")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0xC76AB0", Offset = "0xC76AB0", VA = "0xC76AB0")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x20000D7")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x1400000F")]
	public event Action onButtonDown
	{
		[Token(Token = "0x600033C")]
		[Address(RVA = "0xF1B4B4", Offset = "0xF1B4B4", VA = "0xF1B4B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A4924", Offset = "0x6A4924")]
		add
		{
		}
		[Token(Token = "0x600033D")]
		[Address(RVA = "0xF1B554", Offset = "0xF1B554", VA = "0xF1B554")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A4934", Offset = "0x6A4934")]
		remove
		{
		}
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0xF1B5F4", Offset = "0xF1B5F4", VA = "0xF1B5F4", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0xF1B608", Offset = "0xF1B608", VA = "0xF1B608")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x20000D8")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x20000D9")]
	public enum ButtonType
	{
		[Token(Token = "0x40004D4")]
		Play,
		[Token(Token = "0x40004D5")]
		Pause,
		[Token(Token = "0x40004D6")]
		FastForward,
		[Token(Token = "0x40004D7")]
		Rewind,
		[Token(Token = "0x40004D8")]
		SkipForward,
		[Token(Token = "0x40004D9")]
		SkipBack,
		[Token(Token = "0x40004DA")]
		Stop
	}

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x1700003E")]
	public ButtonType buttonType
	{
		[Token(Token = "0x6000340")]
		[Address(RVA = "0xD8C44C", Offset = "0xD8C44C", VA = "0xD8C44C")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x6000341")]
		[Address(RVA = "0xD8C454", Offset = "0xD8C454", VA = "0xD8C454")]
		set
		{
		}
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0xD8C478", Offset = "0xD8C478", VA = "0xD8C478", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0xD8D910", Offset = "0xD8D910", VA = "0xD8D910")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x20000DA")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x20000DB")]
	public enum VideoShape
	{
		[Token(Token = "0x40004EF")]
		_360,
		[Token(Token = "0x40004F0")]
		_180,
		[Token(Token = "0x40004F1")]
		Quad
	}

	[Token(Token = "0x20000DC")]
	public enum VideoStereo
	{
		[Token(Token = "0x40004F3")]
		Mono,
		[Token(Token = "0x40004F4")]
		TopBottom,
		[Token(Token = "0x40004F5")]
		LeftRight,
		[Token(Token = "0x40004F6")]
		BottomTop
	}

	[Token(Token = "0x20000DD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69C784", Offset = "0x69C784")]
	private sealed class <Start>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x17000042")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600035A")]
			[Address(RVA = "0x1492664", Offset = "0x1492664", VA = "0x1492664", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000043")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600035C")]
			[Address(RVA = "0x14926AC", Offset = "0x14926AC", VA = "0x14926AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000357")]
		[Address(RVA = "0x1492470", Offset = "0x1492470", VA = "0x1492470")]
		[DebuggerHidden]
		public <Start>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6000358")]
		[Address(RVA = "0x149249C", Offset = "0x149249C", VA = "0x149249C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000359")]
		[Address(RVA = "0x14924A0", Offset = "0x14924A0", VA = "0x14924A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600035B")]
		[Address(RVA = "0x149266C", Offset = "0x149266C", VA = "0x149266C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000DE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69C794", Offset = "0x69C794")]
	private sealed class <>c__DisplayClass34_0
	{
		[Token(Token = "0x40004FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x40004FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x40004FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x600035D")]
		[Address(RVA = "0x1492378", Offset = "0x1492378", VA = "0x1492378")]
		public <>c__DisplayClass34_0()
		{
		}

		[Token(Token = "0x600035E")]
		[Address(RVA = "0x1492380", Offset = "0x1492380", VA = "0x1492380")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69F7B4", Offset = "0x69F7B4")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69F7C4", Offset = "0x69F7C4")]
	private long <Duration>k__BackingField;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69F7D4", Offset = "0x69F7D4")]
	private long <PlaybackPosition>k__BackingField;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool AutoDetectStereoLayout;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	public bool DisplayMono;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x1700003F")]
	public bool IsPlaying
	{
		[Token(Token = "0x6000344")]
		[Address(RVA = "0xC751C8", Offset = "0xC751C8", VA = "0xC751C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A4944", Offset = "0x6A4944")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000345")]
		[Address(RVA = "0xC751D0", Offset = "0xC751D0", VA = "0xC751D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A4954", Offset = "0x6A4954")]
		private set
		{
		}
	}

	[Token(Token = "0x17000040")]
	public long Duration
	{
		[Token(Token = "0x6000346")]
		[Address(RVA = "0xC751DC", Offset = "0xC751DC", VA = "0xC751DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A4964", Offset = "0x6A4964")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000347")]
		[Address(RVA = "0xC751E4", Offset = "0xC751E4", VA = "0xC751E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A4974", Offset = "0x6A4974")]
		private set
		{
		}
	}

	[Token(Token = "0x17000041")]
	public long PlaybackPosition
	{
		[Token(Token = "0x6000348")]
		[Address(RVA = "0xC751EC", Offset = "0xC751EC", VA = "0xC751EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A4984", Offset = "0x6A4984")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000349")]
		[Address(RVA = "0xC751F4", Offset = "0xC751F4", VA = "0xC751F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A4994", Offset = "0x6A4994")]
		private set
		{
		}
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0xC751FC", Offset = "0xC751FC", VA = "0xC751FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0xC75514", Offset = "0xC75514", VA = "0xC75514")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0xC75578", Offset = "0xC75578", VA = "0xC75578")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0xC75BE0", Offset = "0xC75BE0", VA = "0xC75BE0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A49A4", Offset = "0x6A49A4")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0xC75C58", Offset = "0xC75C58", VA = "0xC75C58")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0xC75F40", Offset = "0xC75F40", VA = "0xC75F40")]
	public void Play()
	{
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0xC760E4", Offset = "0xC760E4", VA = "0xC760E4")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0xC76284", Offset = "0xC76284", VA = "0xC76284")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0xC764F8", Offset = "0xC764F8", VA = "0xC764F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0xC76FD8", Offset = "0xC76FD8", VA = "0xC76FD8")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0xC77208", Offset = "0xC77208", VA = "0xC77208")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0xC773A8", Offset = "0xC773A8", VA = "0xC773A8")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0xC77494", Offset = "0xC77494", VA = "0xC77494")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x20000DF")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x20000E0")]
	private enum PlaybackState
	{
		[Token(Token = "0x4000513")]
		Playing,
		[Token(Token = "0x4000514")]
		Paused,
		[Token(Token = "0x4000515")]
		Rewinding,
		[Token(Token = "0x4000516")]
		FastForwarding
	}

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x600035F")]
	[Address(RVA = "0xC774A4", Offset = "0xC774A4", VA = "0xC774A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0xC777B0", Offset = "0xC777B0", VA = "0xC777B0")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0xC778DC", Offset = "0xC778DC", VA = "0xC778DC")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0xC779E8", Offset = "0xC779E8", VA = "0xC779E8")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0xC77AC8", Offset = "0xC77AC8", VA = "0xC77AC8")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0xC779BC", Offset = "0xC779BC", VA = "0xC779BC")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0xC77B28", Offset = "0xC77B28", VA = "0xC77B28")]
	private void Update()
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0xC7769C", Offset = "0xC7769C", VA = "0xC7769C")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0xC77E8C", Offset = "0xC77E8C", VA = "0xC77E8C")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x20000E1")]
public static class VectorUtil
{
	[Token(Token = "0x6000368")]
	[Address(RVA = "0x14EEBA8", Offset = "0x14EEBA8", VA = "0x14EEBA8")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x20000E2")]
public class AppDeeplinkUI : MonoBehaviour
{
	[Token(Token = "0x4000517")]
	private const ulong UNITY_COMPANION_APP_ID = 3535750239844224uL;

	[Token(Token = "0x4000518")]
	private const ulong UNREAL_COMPANION_APP_ID = 4055411724486843uL;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform deeplinkAppId;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform deeplinkMessage;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform uiLaunchType;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RectTransform uiLaunchSource;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RectTransform uiDeepLinkMessage;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool inMenu;

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x14A4EA4", Offset = "0x14A4EA4", VA = "0x14A4EA4")]
	private void Start()
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x14A52B8", Offset = "0x14A52B8", VA = "0x14A52B8")]
	private void Update()
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x14A5544", Offset = "0x14A5544", VA = "0x14A5544")]
	private void LaunchUnrealDeeplinkSample()
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x14A56AC", Offset = "0x14A56AC", VA = "0x14A56AC")]
	private void LaunchSelf()
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x14A5818", Offset = "0x14A5818", VA = "0x14A5818")]
	private void LaunchOtherApp()
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x14A59A8", Offset = "0x14A59A8", VA = "0x14A59A8")]
	public AppDeeplinkUI()
	{
	}
}
[Token(Token = "0x20000E3")]
public class CustomDebugUI : MonoBehaviour
{
	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CustomDebugUI instance;

	[Token(Token = "0x4000521")]
	private const BindingFlags privateFlags = BindingFlags.Instance | BindingFlags.NonPublic;

	[Token(Token = "0x600036F")]
	[Address(RVA = "0xA76470", Offset = "0xA76470", VA = "0xA76470")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0xA764C4", Offset = "0xA764C4", VA = "0xA764C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0xA764C8", Offset = "0xA764C8", VA = "0xA764C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0xA764CC", Offset = "0xA764CC", VA = "0xA764CC")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0xA76740", Offset = "0xA76740", VA = "0xA76740")]
	public void RemoveFromCanvas(RectTransform element, int targetCanvas = 0)
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0xA76970", Offset = "0xA76970", VA = "0xA76970")]
	public CustomDebugUI()
	{
	}
}
[Token(Token = "0x20000E4")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x6000375")]
	[Address(RVA = "0xA79BFC", Offset = "0xA79BFC", VA = "0xA79BFC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0xA7A118", Offset = "0xA7A118", VA = "0xA7A118")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0xA7A1D8", Offset = "0xA7A1D8", VA = "0xA7A1D8")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0xA7A458", Offset = "0xA7A458", VA = "0xA7A458")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0xA7A538", Offset = "0xA7A538", VA = "0xA7A538")]
	private void Update()
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0xA7A61C", Offset = "0xA7A61C", VA = "0xA7A61C")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0xA7A690", Offset = "0xA7A690", VA = "0xA7A690")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0xA7A698", Offset = "0xA7A698", VA = "0xA7A698")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A4A64", Offset = "0x6A4A64")]
	private void <Start>b__2_0(Toggle t)
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0xA7A6FC", Offset = "0xA7A6FC", VA = "0xA7A6FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A4A74", Offset = "0x6A4A74")]
	private void <Start>b__2_1(Toggle t)
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0xA7A760", Offset = "0xA7A760", VA = "0xA7A760")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A4A84", Offset = "0x6A4A84")]
	private void <Start>b__2_2(Toggle t)
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0xA7A7C4", Offset = "0xA7A7C4", VA = "0xA7A7C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A4A94", Offset = "0x6A4A94")]
	private void <Start>b__2_3(Toggle t)
	{
	}
}
[Token(Token = "0x20000E5")]
public class AnalyticsUI : MonoBehaviour
{
	[Token(Token = "0x6000380")]
	[Address(RVA = "0x14A23D8", Offset = "0x14A23D8", VA = "0x14A23D8")]
	public AnalyticsUI()
	{
	}
}
[Token(Token = "0x20000E6")]
public class SampleUI : MonoBehaviour
{
	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform collectionButton;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform inputText;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform valueText;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool inMenu;

	[Token(Token = "0x6000381")]
	[Address(RVA = "0xA11E88", Offset = "0xA11E88", VA = "0xA11E88")]
	private void Start()
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0xA11F2C", Offset = "0xA11F2C", VA = "0xA11F2C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0xA12018", Offset = "0xA12018", VA = "0xA12018")]
	private string GetText()
	{
		return null;
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0xA12078", Offset = "0xA12078", VA = "0xA12078")]
	public SampleUI()
	{
	}
}
[Token(Token = "0x20000E7")]
public class StartCrashlytics : MonoBehaviour
{
	[Token(Token = "0x6000385")]
	[Address(RVA = "0x14CA020", Offset = "0x14CA020", VA = "0x14CA020")]
	public StartCrashlytics()
	{
	}
}
[Token(Token = "0x20000E8")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x20000E9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69C7B4", Offset = "0x69C7B4")]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400052C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400052D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400052E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x17000044")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600038D")]
			[Address(RVA = "0x14C6E28", Offset = "0x14C6E28", VA = "0x14C6E28", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000045")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600038F")]
			[Address(RVA = "0x14C6E70", Offset = "0x14C6E70", VA = "0x14C6E70", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600038A")]
		[Address(RVA = "0x14C6CAC", Offset = "0x14C6CAC", VA = "0x14C6CAC")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600038B")]
		[Address(RVA = "0x14C6CD8", Offset = "0x14C6CD8", VA = "0x14C6CD8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600038C")]
		[Address(RVA = "0x14C6CDC", Offset = "0x14C6CDC", VA = "0x14C6CDC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600038E")]
		[Address(RVA = "0x14C6E30", Offset = "0x14C6E30", VA = "0x14C6E30", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x9FB3EC", Offset = "0x9FB3EC", VA = "0x9FB3EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x9FB508", Offset = "0x9FB508", VA = "0x9FB508")]
	private void Update()
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0x9FB490", Offset = "0x9FB490", VA = "0x9FB490")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A4AA4", Offset = "0x6A4AA4")]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0x9FB6B4", Offset = "0x9FB6B4", VA = "0x9FB6B4")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x20000EA")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x69F804", Offset = "0x69F804")]
	public int SubdivisionsU;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x69F820", Offset = "0x69F820")]
	public int SubdivisionsV;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x6000390")]
	[Address(RVA = "0xF29084", Offset = "0xF29084", VA = "0xF29084")]
	private void Update()
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0xF29ACC", Offset = "0xF29ACC", VA = "0xF29ACC")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x20000EB")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x17000046")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x6000392")]
		[Address(RVA = "0xD7F2D8", Offset = "0xD7F2D8", VA = "0xD7F2D8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0xD7F32C", Offset = "0xD7F32C", VA = "0xD7F32C")]
	public void Start()
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0xD7F754", Offset = "0xD7F754", VA = "0xD7F754")]
	public void Update()
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0xD7F840", Offset = "0xD7F840", VA = "0xD7F840")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6A4B54", Offset = "0x6A4B54")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x6000396")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000397")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x6000398")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x6000399")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x600039A")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x600039B")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x600039C")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x600039D")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0xD7F8A4", Offset = "0xD7F8A4", VA = "0xD7F8A4")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0xD7F8E0", Offset = "0xD7F8E0", VA = "0xD7F8E0")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0xD7F950", Offset = "0xD7F950", VA = "0xD7F950")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0xD7FAC0", Offset = "0xD7FAC0", VA = "0xD7FAC0")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0xD7FB9C", Offset = "0xD7FB9C", VA = "0xD7FB9C")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0xD7F64C", Offset = "0xD7F64C", VA = "0xD7F64C")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0xD7FC64", Offset = "0xD7FC64", VA = "0xD7FC64")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0xD7FCCC", Offset = "0xD7FCCC", VA = "0xD7FCCC")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0xD7FDC4", Offset = "0xD7FDC4", VA = "0xD7FDC4")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x20000EC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x69C7D4", Offset = "0x69C7D4")]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x20000ED")]
	public enum DrawMode
	{
		[Token(Token = "0x4000550")]
		Opaque,
		[Token(Token = "0x4000551")]
		OpaqueWithClip,
		[Token(Token = "0x4000552")]
		TransparentDefaultAlpha,
		[Token(Token = "0x4000553")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	[SerializeField]
	private Shader _transparentShader;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private Shader _opaqueShader;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x17000047")]
	public bool overlayEnabled
	{
		[Token(Token = "0x60003AD")]
		[Address(RVA = "0xC7FD88", Offset = "0xC7FD88", VA = "0xC7FD88")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003AE")]
		[Address(RVA = "0xC7FE18", Offset = "0xC7FE18", VA = "0xC7FE18")]
		set
		{
		}
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0xC7E804", Offset = "0xC7E804", VA = "0xC7E804")]
	private void Start()
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0xC7F3F4", Offset = "0xC7F3F4", VA = "0xC7F3F4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0xC7F474", Offset = "0xC7F474", VA = "0xC7F474")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0xC7F564", Offset = "0xC7F564", VA = "0xC7F564")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0xC7F654", Offset = "0xC7F654", VA = "0xC7F654", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0xC7F860", Offset = "0xC7F860", VA = "0xC7F860")]
	private void Update()
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0xC7FEE4", Offset = "0xC7FEE4", VA = "0xC7FEE4")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x20000EE")]
public class AugmentedObject : MonoBehaviour
{
	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform shadow;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool groundShadow;

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x14A7DC8", Offset = "0x14A7DC8", VA = "0x14A7DC8")]
	private void Start()
	{
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x14A7FB0", Offset = "0x14A7FB0", VA = "0x14A7FB0")]
	private void Update()
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x14A8138", Offset = "0x14A8138", VA = "0x14A8138")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x14A8140", Offset = "0x14A8140", VA = "0x14A8140")]
	public void Release()
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x14A8128", Offset = "0x14A8128", VA = "0x14A8128")]
	private void ToggleShadowType()
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x14A8148", Offset = "0x14A8148", VA = "0x14A8148")]
	public AugmentedObject()
	{
	}
}
[Token(Token = "0x20000EF")]
public class BrushController : MonoBehaviour
{
	[Token(Token = "0x20000F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69C834", Offset = "0x69C834")]
	private sealed class <FadeCameraClearColor>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400055B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400055C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400055D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fadeTime;

		[Token(Token = "0x400055E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color newColor;

		[Token(Token = "0x400055F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <timer>5__2;

		[Token(Token = "0x4000560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color <currentColor>5__3;

		[Token(Token = "0x17000048")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003C1")]
			[Address(RVA = "0x14BF258", Offset = "0x14BF258", VA = "0x14BF258", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000049")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003C3")]
			[Address(RVA = "0x14BF2A0", Offset = "0x14BF2A0", VA = "0x14BF2A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003BE")]
		[Address(RVA = "0x14BF128", Offset = "0x14BF128", VA = "0x14BF128")]
		[DebuggerHidden]
		public <FadeCameraClearColor>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60003BF")]
		[Address(RVA = "0x14BF154", Offset = "0x14BF154", VA = "0x14BF154", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003C0")]
		[Address(RVA = "0x14BF158", Offset = "0x14BF158", VA = "0x14BF158", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003C2")]
		[Address(RVA = "0x14BF260", Offset = "0x14BF260", VA = "0x14BF260", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000F1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69C844", Offset = "0x69C844")]
	private sealed class <FadeSphere>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BrushController <>4__this;

		[Token(Token = "0x4000564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x4000565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color newColor;

		[Token(Token = "0x4000566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool disableOnFinish;

		[Token(Token = "0x4000567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x4000568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color <currentColor>5__3;

		[Token(Token = "0x1700004A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003C7")]
			[Address(RVA = "0x14BF460", Offset = "0x14BF460", VA = "0x14BF460", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003C9")]
			[Address(RVA = "0x14BF4A8", Offset = "0x14BF4A8", VA = "0x14BF4A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003C4")]
		[Address(RVA = "0x14BF2A8", Offset = "0x14BF2A8", VA = "0x14BF2A8")]
		[DebuggerHidden]
		public <FadeSphere>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60003C5")]
		[Address(RVA = "0x14BF2D4", Offset = "0x14BF2D4", VA = "0x14BF2D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003C6")]
		[Address(RVA = "0x14BF2D8", Offset = "0x14BF2D8", VA = "0x14BF2D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003C8")]
		[Address(RVA = "0x14BF468", Offset = "0x14BF468", VA = "0x14BF468", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PassthroughBrush brush;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer backgroundSphere;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator grabRoutine;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator releaseRoutine;

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0xF17EF8", Offset = "0xF17EF8", VA = "0xF17EF8")]
	private void Start()
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0xF181CC", Offset = "0xF181CC", VA = "0xF181CC")]
	private void Update()
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0xF18228", Offset = "0xF18228", VA = "0xF18228")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0xF183A8", Offset = "0xF183A8", VA = "0xF183A8")]
	public void Release()
	{
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0xF1847C", Offset = "0xF1847C", VA = "0xF1847C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A4B8C", Offset = "0x6A4B8C")]
	private IEnumerator FadeCameraClearColor(Color newColor, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0xF182E4", Offset = "0xF182E4", VA = "0xF182E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A4BEC", Offset = "0x6A4BEC")]
	private IEnumerator FadeSphere(Color newColor, float fadeTime, bool disableOnFinish = false)
	{
		return null;
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0xF18518", Offset = "0xF18518", VA = "0xF18518")]
	public BrushController()
	{
	}
}
[Token(Token = "0x20000F2")]
public class EnableUnpremultipliedAlpha : MonoBehaviour
{
	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x95E17C", Offset = "0x95E17C", VA = "0x95E17C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x95E1DC", Offset = "0x95E1DC", VA = "0x95E1DC")]
	public EnableUnpremultipliedAlpha()
	{
	}
}
[Token(Token = "0x20000F3")]
public class Flashlight : MonoBehaviour
{
	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject lightVolume;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Light spotlight;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject bulbGlow;

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x9693FC", Offset = "0x9693FC", VA = "0x9693FC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x969530", Offset = "0x969530", VA = "0x969530")]
	public void ToggleFlashlight()
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x9695C4", Offset = "0x9695C4", VA = "0x9695C4")]
	public void EnableFlashlight(bool doEnable)
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x96962C", Offset = "0x96962C", VA = "0x96962C")]
	public Flashlight()
	{
	}
}
[Token(Token = "0x20000F4")]
public class FlashlightController : MonoBehaviour
{
	[Token(Token = "0x20000F5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69C854", Offset = "0x69C854")]
	private sealed class <FadeLighting>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FlashlightController <>4__this;

		[Token(Token = "0x4000579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x400057A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color newColor;

		[Token(Token = "0x400057B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float sceneLightIntensity;

		[Token(Token = "0x400057C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x400057D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color <currentColor>5__3;

		[Token(Token = "0x400057E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float <currentLight>5__4;

		[Token(Token = "0x1700004C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003DC")]
			[Address(RVA = "0x14C56AC", Offset = "0x14C56AC", VA = "0x14C56AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003DE")]
			[Address(RVA = "0x14C56F4", Offset = "0x14C56F4", VA = "0x14C56F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003D9")]
		[Address(RVA = "0x14C54A0", Offset = "0x14C54A0", VA = "0x14C54A0")]
		[DebuggerHidden]
		public <FadeLighting>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x60003DA")]
		[Address(RVA = "0x14C54CC", Offset = "0x14C54CC", VA = "0x14C54CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003DB")]
		[Address(RVA = "0x14C54D0", Offset = "0x14C54D0", VA = "0x14C54D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003DD")]
		[Address(RVA = "0x14C56B4", Offset = "0x14C56B4", VA = "0x14C56B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Light sceneLight;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform flashlightRoot;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 localPosition;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Quaternion localRotation;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMesh infoText;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GrabObject externalController;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private OVRSkeleton[] skeletons;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OVRHand[] hands;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int handIndex;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool pinching;

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0x969634", Offset = "0x969634", VA = "0x969634")]
	private void Start()
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0x969918", Offset = "0x969918", VA = "0x969918")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0x969C68", Offset = "0x969C68", VA = "0x969C68")]
	private void FindHands()
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0x969FC4", Offset = "0x969FC4", VA = "0x969FC4")]
	private void AlignWithHand(OVRHand hand, OVRSkeleton skeleton)
	{
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0x96A2C8", Offset = "0x96A2C8", VA = "0x96A2C8")]
	private void AlignWithController(OVRInput.Controller controller)
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0x96A3BC", Offset = "0x96A3BC", VA = "0x96A3BC")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0x96A588", Offset = "0x96A588", VA = "0x96A588")]
	public void Release()
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0x96A4D4", Offset = "0x96A4D4", VA = "0x96A4D4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A4CEC", Offset = "0x6A4CEC")]
	private IEnumerator FadeLighting(Color newColor, float sceneLightIntensity, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0x96A670", Offset = "0x96A670", VA = "0x96A670")]
	public FlashlightController()
	{
	}
}
[Token(Token = "0x20000F6")]
public class GrabObject : MonoBehaviour
{
	[Token(Token = "0x20000F7")]
	public enum ManipulationType
	{
		[Token(Token = "0x4000588")]
		Default,
		[Token(Token = "0x4000589")]
		ForcedHand,
		[Token(Token = "0x400058A")]
		DollyHand,
		[Token(Token = "0x400058B")]
		DollyAttached,
		[Token(Token = "0x400058C")]
		HorizontalScaled,
		[Token(Token = "0x400058D")]
		VerticalScaled,
		[Token(Token = "0x400058E")]
		Menu
	}

	[Token(Token = "0x20000F8")]
	public delegate void GrabbedObject(OVRInput.Controller grabHand);

	[Token(Token = "0x20000F9")]
	public delegate void ReleasedObject();

	[Token(Token = "0x20000FA")]
	public delegate void SetCursorPosition(Vector3 cursorPosition);

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x69F8AC", Offset = "0x69F8AC")]
	public string ObjectName;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x69F8BC", Offset = "0x69F8BC")]
	public string ObjectInstructions;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ManipulationType objectManipulationType;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool showLaserWhileGrabbed;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Quaternion grabbedRotation;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GrabbedObject GrabbedObjectDelegate;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ReleasedObject ReleasedObjectDelegate;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SetCursorPosition CursorPositionDelegate;

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x9F59A4", Offset = "0x9F59A4", VA = "0x9F59A4")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x9F5A00", Offset = "0x9F5A00", VA = "0x9F5A00")]
	public void Release()
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x9F5A14", Offset = "0x9F5A14", VA = "0x9F5A14")]
	public void CursorPos(Vector3 cursorPos)
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x9F5A28", Offset = "0x9F5A28", VA = "0x9F5A28")]
	public GrabObject()
	{
	}
}
[Token(Token = "0x20000FB")]
public class HandMeshMask : MonoBehaviour
{
	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRSkeleton referenceHand;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material maskMaterial;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69F8DC", Offset = "0x69F8DC")]
	public int radialDivisions;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69F914", Offset = "0x69F914")]
	public float borderSize;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69F94C", Offset = "0x69F94C")]
	public float fingerTaper;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69F984", Offset = "0x69F984")]
	public float fingerTipLength;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69F9BC", Offset = "0x69F9BC")]
	public float webOffset;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float handScale;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject maskMeshObject;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Mesh maskMesh;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] handVertices;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector2[] handUVs;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color32[] handColors;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int[] handTriangles;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int vertCounter;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int triCounter;

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0x9F6B84", Offset = "0x9F6B84", VA = "0x9F6B84")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0x9F6D84", Offset = "0x9F6D84", VA = "0x9F6D84")]
	private void Update()
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0x9F6F90", Offset = "0x9F6F90", VA = "0x9F6F90")]
	private void CreateHandMesh()
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0x9F7614", Offset = "0x9F7614", VA = "0x9F7614")]
	private void AddKnuckleMesh(int knuckleVerts, float point1scale, float point2scale, Vector3 point1, Vector3 point2)
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0x9F7C44", Offset = "0x9F7C44", VA = "0x9F7C44")]
	private void AddPalmMesh(int knuckleVerts)
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0x9FA2C0", Offset = "0x9FA2C0", VA = "0x9FA2C0")]
	private void AddVertex(Vector3 position, Vector2 uv, Color color)
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0x9FA37C", Offset = "0x9FA37C", VA = "0x9FA37C")]
	public HandMeshMask()
	{
	}
}
[Token(Token = "0x20000FC")]
public class HandMeshUI : MonoBehaviour
{
	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SphereCollider[] knobs;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh[] readouts;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int rightHeldKnob;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int leftHeldKnob;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public OVRSkeleton leftHand;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public OVRSkeleton rightHand;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public HandMeshMask leftMask;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public HandMeshMask rightMask;

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0x9FA3A0", Offset = "0x9FA3A0", VA = "0x9FA3A0")]
	private void Start()
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0x9FA6D8", Offset = "0x9FA6D8", VA = "0x9FA6D8")]
	private void Update()
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0x9FA448", Offset = "0x9FA448", VA = "0x9FA448")]
	private void SetSliderValue(int sliderID, float value, bool isNormalized)
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0x9FAAC8", Offset = "0x9FAAC8", VA = "0x9FAAC8")]
	private void CheckForHands()
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0x9FAFB8", Offset = "0x9FAFB8", VA = "0x9FAFB8")]
	public HandMeshUI()
	{
	}
}
[Token(Token = "0x20000FD")]
public class ObjectManipulator : MonoBehaviour
{
	[Token(Token = "0x20000FE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69C864", Offset = "0x69C864")]
	private sealed class <StartDemo>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectManipulator <>4__this;

		[Token(Token = "0x40005BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x40005BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <fadeTime>5__3;

		[Token(Token = "0x1700004E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600040A")]
			[Address(RVA = "0x1492C38", Offset = "0x1492C38", VA = "0x1492C38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600040C")]
			[Address(RVA = "0x1492C80", Offset = "0x1492C80", VA = "0x1492C80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000407")]
		[Address(RVA = "0x1492968", Offset = "0x1492968", VA = "0x1492968")]
		[DebuggerHidden]
		public <StartDemo>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6000408")]
		[Address(RVA = "0x1492994", Offset = "0x1492994", VA = "0x1492994", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000409")]
		[Address(RVA = "0x1492998", Offset = "0x1492998", VA = "0x1492998", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600040B")]
		[Address(RVA = "0x1492C40", Offset = "0x1492C40", VA = "0x1492C40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRInput.Controller controller;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject hoverObject;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject grabObject;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float grabTime;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 localGrabOffset;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion localGrabRotation;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 camGrabPosition;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion camGrabRotation;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 handGrabPosition;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Quaternion handGrabRotation;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 cursorPosition;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float rotationOffset;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public LineRenderer laser;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform objectInfo;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TextMesh objectNameLabel;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TextMesh objectInstructionsLabel;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Image objectInfoBG;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject demoObjects;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public OVRPassthroughLayer passthrough;

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0xC8278C", Offset = "0xC8278C", VA = "0xC8278C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0xC829C4", Offset = "0xC829C4", VA = "0xC829C4")]
	private void Update()
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0xC83614", Offset = "0xC83614", VA = "0xC83614")]
	private void GrabHoverObject(GameObject grbObj, Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0xC8421C", Offset = "0xC8421C", VA = "0xC8421C")]
	private void ReleaseObject()
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0xC8294C", Offset = "0xC8294C", VA = "0xC8294C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A4D9C", Offset = "0x6A4D9C")]
	private IEnumerator StartDemo()
	{
		return null;
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0xC82C30", Offset = "0xC82C30", VA = "0xC82C30")]
	private void FindHoverObject(Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0xC838D8", Offset = "0xC838D8", VA = "0xC838D8")]
	private void ManipulateObject(GameObject obj, Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0xC844E0", Offset = "0xC844E0", VA = "0xC844E0")]
	private void ClampGrabOffset(ref Vector3 localOffset, float thumbY)
	{
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0xC8456C", Offset = "0xC8456C", VA = "0xC8456C")]
	private Vector3 ClampScale(Vector3 localScale, Vector2 thumb)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0xC8459C", Offset = "0xC8459C", VA = "0xC8459C")]
	private void CheckForDominantHand()
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0xC843A8", Offset = "0xC843A8", VA = "0xC843A8")]
	private void AssignInstructions(GrabObject targetObject)
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0xC846C0", Offset = "0xC846C0", VA = "0xC846C0")]
	public ObjectManipulator()
	{
	}
}
[Token(Token = "0x20000FF")]
public class OverlayPassthrough : MonoBehaviour
{
	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x600040D")]
	[Address(RVA = "0xAD1C50", Offset = "0xAD1C50", VA = "0xAD1C50")]
	private void Start()
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0xAD1DE8", Offset = "0xAD1DE8", VA = "0xAD1DE8")]
	private void Update()
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0xAD1EB0", Offset = "0xAD1EB0", VA = "0xAD1EB0")]
	public OverlayPassthrough()
	{
	}
}
[Token(Token = "0x2000100")]
public class PassthroughBrush : MonoBehaviour
{
	[Token(Token = "0x2000101")]
	public enum BrushState
	{
		[Token(Token = "0x40005CB")]
		Idle,
		[Token(Token = "0x40005CC")]
		Inking
	}

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject lineSegmentPrefab;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject lineContainer;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool forceActive;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LineRenderer currentLineSegment;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Vector3> inkPositions;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float minInkDist;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float strokeWidth;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float strokeLength;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private BrushState brushStatus;

	[Token(Token = "0x6000410")]
	[Address(RVA = "0xA629E0", Offset = "0xA629E0", VA = "0xA629E0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0xA629E8", Offset = "0xA629E8", VA = "0xA629E8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0xA62CD0", Offset = "0xA62CD0", VA = "0xA62CD0")]
	private void StartLine(Vector3 inkPos)
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0xA62EC8", Offset = "0xA62EC8", VA = "0xA62EC8")]
	private void UpdateLine(Vector3 inkPos)
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0xA63070", Offset = "0xA63070", VA = "0xA63070")]
	public void ClearLines()
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0xA62BDC", Offset = "0xA62BDC", VA = "0xA62BDC")]
	public void UndoInkLine()
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0xA6314C", Offset = "0xA6314C", VA = "0xA6314C")]
	public PassthroughBrush()
	{
	}
}
[Token(Token = "0x2000102")]
public class PassthroughController : MonoBehaviour
{
	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x6000417")]
	[Address(RVA = "0xA631E4", Offset = "0xA631E4", VA = "0xA631E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0xA6337C", Offset = "0xA6337C", VA = "0xA6337C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0xA634E0", Offset = "0xA634E0", VA = "0xA634E0")]
	public PassthroughController()
	{
	}
}
[Token(Token = "0x2000103")]
public class PassthroughProjectionSurface : MonoBehaviour
{
	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer quadOutline;

	[Token(Token = "0x600041A")]
	[Address(RVA = "0xA634E8", Offset = "0xA634E8", VA = "0xA634E8")]
	private void Start()
	{
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0xA636FC", Offset = "0xA636FC", VA = "0xA636FC")]
	private void Update()
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0xA638CC", Offset = "0xA638CC", VA = "0xA638CC")]
	public PassthroughProjectionSurface()
	{
	}
}
[Token(Token = "0x2000104")]
public class PassthroughStyler : MonoBehaviour
{
	[Token(Token = "0x2000105")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69C874", Offset = "0x69C874")]
	private sealed class <FadeToCurrentStyle>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PassthroughStyler <>4__this;

		[Token(Token = "0x40005E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x40005E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x40005E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <brightness>5__3;

		[Token(Token = "0x40005E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <contrast>5__4;

		[Token(Token = "0x40005E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <posterize>5__5;

		[Token(Token = "0x40005E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Color <edgeCol>5__6;

		[Token(Token = "0x17000050")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600042F")]
			[Address(RVA = "0x14967F4", Offset = "0x14967F4", VA = "0x14967F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000051")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000431")]
			[Address(RVA = "0x149683C", Offset = "0x149683C", VA = "0x149683C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600042C")]
		[Address(RVA = "0x1496610", Offset = "0x1496610", VA = "0x1496610")]
		[DebuggerHidden]
		public <FadeToCurrentStyle>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x600042D")]
		[Address(RVA = "0x149663C", Offset = "0x149663C", VA = "0x149663C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600042E")]
		[Address(RVA = "0x1496640", Offset = "0x1496640", VA = "0x1496640", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000430")]
		[Address(RVA = "0x14967FC", Offset = "0x14967FC", VA = "0x14967FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000106")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69C884", Offset = "0x69C884")]
	private sealed class <FadeToDefaultPassthrough>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PassthroughStyler <>4__this;

		[Token(Token = "0x40005EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x40005ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x40005EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <brightness>5__3;

		[Token(Token = "0x40005EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <contrast>5__4;

		[Token(Token = "0x40005F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <posterize>5__5;

		[Token(Token = "0x40005F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Color <edgeCol>5__6;

		[Token(Token = "0x17000052")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000435")]
			[Address(RVA = "0x1496A68", Offset = "0x1496A68", VA = "0x1496A68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000053")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000437")]
			[Address(RVA = "0x1496AB0", Offset = "0x1496AB0", VA = "0x1496AB0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000432")]
		[Address(RVA = "0x1496844", Offset = "0x1496844", VA = "0x1496844")]
		[DebuggerHidden]
		public <FadeToDefaultPassthrough>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000433")]
		[Address(RVA = "0x1496870", Offset = "0x1496870", VA = "0x1496870", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000434")]
		[Address(RVA = "0x1496874", Offset = "0x1496874", VA = "0x1496874", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000436")]
		[Address(RVA = "0x1496A70", Offset = "0x1496A70", VA = "0x1496A70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator fadeIn;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator fadeOut;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RectTransform[] menuOptions;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RectTransform colorWheel;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D colorTexture;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 cursorPosition;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool settingColor;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color savedColor;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float savedBrightness;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float savedContrast;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float savedPosterize;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public CanvasGroup mainCanvas;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject[] compactObjects;

	[Token(Token = "0x600041D")]
	[Address(RVA = "0xA638D4", Offset = "0xA638D4", VA = "0xA638D4")]
	private void Start()
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0xA63C0C", Offset = "0xA63C0C", VA = "0xA63C0C")]
	private void Update()
	{
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0xA63E64", Offset = "0xA63E64", VA = "0xA63E64")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0xA63FE8", Offset = "0xA63FE8", VA = "0xA63FE8")]
	public void Release()
	{
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0xA63F60", Offset = "0xA63F60", VA = "0xA63F60")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A4E4C", Offset = "0x6A4E4C")]
	private IEnumerator FadeToCurrentStyle(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0xA640D8", Offset = "0xA640D8", VA = "0xA640D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A4EAC", Offset = "0x6A4EAC")]
	private IEnumerator FadeToDefaultPassthrough(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0xA64160", Offset = "0xA64160", VA = "0xA64160")]
	public void OnBrightnessChanged(float newValue)
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0xA64180", Offset = "0xA64180", VA = "0xA64180")]
	public void OnContrastChanged(float newValue)
	{
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0xA641A0", Offset = "0xA641A0", VA = "0xA641A0")]
	public void OnPosterizeChanged(float newValue)
	{
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0xA641C0", Offset = "0xA641C0", VA = "0xA641C0")]
	public void OnAlphaChanged(float newValue)
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0xA63B90", Offset = "0xA63B90", VA = "0xA63B90")]
	private void ShowFullMenu(bool doShow)
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0xA64224", Offset = "0xA64224", VA = "0xA64224")]
	public void Cursor(Vector3 cP)
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0xA64230", Offset = "0xA64230", VA = "0xA64230")]
	public void DoColorDrag(bool doDrag)
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0xA63C24", Offset = "0xA63C24", VA = "0xA63C24")]
	public void GetColorFromWheel()
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0xA6423C", Offset = "0xA6423C", VA = "0xA6423C")]
	public PassthroughStyler()
	{
	}
}
[Token(Token = "0x2000107")]
public class PassthroughSurface : MonoBehaviour
{
	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x6000438")]
	[Address(RVA = "0xA64280", Offset = "0xA64280", VA = "0xA64280")]
	private void Start()
	{
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0xA64340", Offset = "0xA64340", VA = "0xA64340")]
	public PassthroughSurface()
	{
	}
}
[Token(Token = "0x2000108")]
public class SPPquad : MonoBehaviour
{
	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRInput.Controller controllerHand;

	[Token(Token = "0x600043A")]
	[Address(RVA = "0xA11B98", Offset = "0xA11B98", VA = "0xA11B98")]
	private void Start()
	{
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0xA11DDC", Offset = "0xA11DDC", VA = "0xA11DDC")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0xA11E34", Offset = "0xA11E34", VA = "0xA11E34")]
	public void Release()
	{
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0xA11E80", Offset = "0xA11E80", VA = "0xA11E80")]
	public SPPquad()
	{
	}
}
[Token(Token = "0x2000109")]
public class SceneSampler : MonoBehaviour
{
	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int currentSceneIndex;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject displayText;

	[Token(Token = "0x600043E")]
	[Address(RVA = "0xA12080", Offset = "0xA12080", VA = "0xA12080")]
	private void Awake()
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0xA120F8", Offset = "0xA120F8", VA = "0xA120F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0xA1241C", Offset = "0xA1241C", VA = "0xA1241C")]
	public SceneSampler()
	{
	}
}
[Token(Token = "0x200010A")]
public class SelectivePassthroughExperience : MonoBehaviour
{
	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject leftMaskObject;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject rightMaskObject;

	[Token(Token = "0x6000441")]
	[Address(RVA = "0xA14388", Offset = "0xA14388", VA = "0xA14388")]
	private void Update()
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0xA14810", Offset = "0xA14810", VA = "0xA14810")]
	public SelectivePassthroughExperience()
	{
	}
}
[Token(Token = "0x200010B")]
public class Anchor : MonoBehaviour
{
	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong anchorHandle_;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Canvas canvas_;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform pivot_;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject anchorMenu_;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isSelected_;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool isHovered_;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private TextMeshProUGUI anchorName_;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject saveIcon_;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Image labelImage_;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Color labelBaseColor_;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Color labelHighlightColor_;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Color labelSelectedColor_;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private AnchorUIManager uiManager_;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private MeshRenderer[] renderers_;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int menuIndex_;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private List<Button> buttonList_;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Button selectedButton_;

	[Token(Token = "0x17000054")]
	public ulong anchorHandle
	{
		[Token(Token = "0x6000443")]
		[Address(RVA = "0x14A23E0", Offset = "0x14A23E0", VA = "0x14A23E0")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0x14A23E8", Offset = "0x14A23E8", VA = "0x14A23E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0x14A24D0", Offset = "0x14A24D0", VA = "0x14A24D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0x14A2738", Offset = "0x14A2738", VA = "0x14A2738")]
	public void OnSaveLocalButtonPressed()
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0x14A27A0", Offset = "0x14A27A0", VA = "0x14A27A0")]
	public void OnHideButtonPressed()
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0x14A2804", Offset = "0x14A2804", VA = "0x14A2804")]
	public void OnEraseButtonPressed()
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x14A2868", Offset = "0x14A2868", VA = "0x14A2868")]
	public void OnHoverStart()
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x14A2970", Offset = "0x14A2970", VA = "0x14A2970")]
	public void OnHoverEnd()
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x14A2A90", Offset = "0x14A2A90", VA = "0x14A2A90")]
	public void OnSelect()
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x14A2BC4", Offset = "0x14A2BC4", VA = "0x14A2BC4")]
	public void SetAnchorHandle(ulong handle)
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x14A2C58", Offset = "0x14A2C58", VA = "0x14A2C58")]
	public void ShowSaveIcon()
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x14A2514", Offset = "0x14A2514", VA = "0x14A2514")]
	private void BillboardPanel(Transform panel)
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x14A2628", Offset = "0x14A2628", VA = "0x14A2628")]
	private void HandleMenuNavigation()
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x14A2C78", Offset = "0x14A2C78", VA = "0x14A2C78")]
	private void NavigateToIndexInMenu(bool moveNext)
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0x14A2D90", Offset = "0x14A2D90", VA = "0x14A2D90")]
	public Anchor()
	{
	}
}
[Token(Token = "0x200010C")]
public class AnchorHelpers
{
	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Camera camera;

	[Token(Token = "0x17000055")]
	private static Camera MainCamera
	{
		[Token(Token = "0x6000452")]
		[Address(RVA = "0x14A2D98", Offset = "0x14A2D98", VA = "0x14A2D98")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0x14A2E50", Offset = "0x14A2E50", VA = "0x14A2E50")]
	public static OVRPlugin.Posef UnityWorldSpacePoseToTrackingSpacePose(Transform pose)
	{
		return default(OVRPlugin.Posef);
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0x14A2ECC", Offset = "0x14A2ECC", VA = "0x14A2ECC")]
	public static OVRPose TrackingSpacePoseToUnityWorldSpacePose(OVRPlugin.Posef pose)
	{
		return default(OVRPose);
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0x14A2F40", Offset = "0x14A2F40", VA = "0x14A2F40")]
	public static OVRPose getTransformUnityWorldFromDevice()
	{
		return default(OVRPose);
	}

	[Token(Token = "0x6000456")]
	public static T ByteArrayToStruct<T>(byte[] bytes) where T : struct
	{
		return (T)null;
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0x14A2F98", Offset = "0x14A2F98", VA = "0x14A2F98")]
	public static string UuidToString(byte[] encodedMessage)
	{
		return null;
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0x14A323C", Offset = "0x14A323C", VA = "0x14A323C")]
	public static byte[] StringToUuid(string str)
	{
		return null;
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0x14A33B4", Offset = "0x14A33B4", VA = "0x14A33B4")]
	private static int GetHexVal(char hex)
	{
		return default(int);
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x14A3478", Offset = "0x14A3478", VA = "0x14A3478")]
	public AnchorHelpers()
	{
	}
}
[Token(Token = "0x200010D")]
public abstract class AnchorSession : MonoBehaviour
{
	[Token(Token = "0x200010E")]
	public enum StorageLocation
	{
		[Token(Token = "0x4000614")]
		LOCAL
	}

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AnchorSession Instance;

	[Token(Token = "0x400060E")]
	public const ulong kInvalidHandle = ulong.MaxValue;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Dictionary<ulong, Anchor> handleToAnchor;

	[Token(Token = "0x4000610")]
	protected const int maxEvents = 5;

	[Token(Token = "0x4000611")]
	protected const float eventPollingRate = 0.1f;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected GameObject anchorPrefab_;

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x14A3480", Offset = "0x14A3480", VA = "0x14A3480", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0x14A31AC", Offset = "0x14A31AC", VA = "0x14A31AC")]
	public static void Log(string message)
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0x14A3588", Offset = "0x14A3588", VA = "0x14A3588")]
	protected static bool isFlagSet(uint bitset, uint flag)
	{
		return default(bool);
	}

	[Token(Token = "0x600045E")]
	public abstract ulong CreateSpatialAnchor(Transform T_UnityWorld_Anchor);

	[Token(Token = "0x600045F")]
	public abstract void DestroyAnchor(ulong anchorHandle);

	[Token(Token = "0x6000460")]
	public abstract void SaveAnchor(ulong anchorHandle, StorageLocation location);

	[Token(Token = "0x6000461")]
	public abstract void EraseAnchor(ulong anchorHandle);

	[Token(Token = "0x6000462")]
	public abstract void QueryAllLocalAnchors();

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x14A3594", Offset = "0x14A3594", VA = "0x14A3594")]
	protected AnchorSession()
	{
	}
}
[Token(Token = "0x200010F")]
public class AnchorSpawner : MonoBehaviour
{
	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AnchorSpawner Instance;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject anchorPrefab_;

	[Token(Token = "0x17000056")]
	public GameObject AnchorPrefab
	{
		[Token(Token = "0x6000464")]
		[Address(RVA = "0x14A3618", Offset = "0x14A3618", VA = "0x14A3618")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x14A3620", Offset = "0x14A3620", VA = "0x14A3620")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x14A3720", Offset = "0x14A3720", VA = "0x14A3720")]
	public void PlaceAnchorAtTransform(Transform transform)
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x14A3954", Offset = "0x14A3954", VA = "0x14A3954")]
	public AnchorSpawner()
	{
	}
}
[Token(Token = "0x2000110")]
public class AnchorUIManager : MonoBehaviour
{
	[Token(Token = "0x2000111")]
	public enum AnchorMode
	{
		[Token(Token = "0x400062A")]
		Create,
		[Token(Token = "0x400062B")]
		Select
	}

	[Token(Token = "0x2000112")]
	private delegate void PrimaryPressDelegate();

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AnchorUIManager Instance;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject mainMenu_;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject createModeButton_;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject selectModeButton_;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform trackedDevice_;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform raycastOrigin_;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool drawRaycast_;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private LineRenderer lineRenderer_;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Anchor hoveredAnchor_;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Anchor selectedAnchor_;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AnchorMode mode_;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<Button> buttonList_;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int menuIndex_;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Button selectedButton_;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject placementPreview_;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Transform anchorPlacementTransform_;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private PrimaryPressDelegate primaryPressDelegate_;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool isFocused_;

	[Token(Token = "0x6000468")]
	[Address(RVA = "0x14A395C", Offset = "0x14A395C", VA = "0x14A395C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0x14A3A34", Offset = "0x14A3A34", VA = "0x14A3A34")]
	private void Start()
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0x14A3BA0", Offset = "0x14A3BA0", VA = "0x14A3BA0")]
	private void Update()
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0x14A3FF4", Offset = "0x14A3FF4", VA = "0x14A3FF4")]
	public void OnCreateModeButtonPressed()
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0x14A4064", Offset = "0x14A4064", VA = "0x14A4064")]
	public void OnLoadAnchorsButtonPressed()
	{
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0x14A3B28", Offset = "0x14A3B28", VA = "0x14A3B28")]
	private void ToggleCreateMode()
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0x14A40EC", Offset = "0x14A40EC", VA = "0x14A40EC")]
	private void StartPlacementMode()
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0x14A4174", Offset = "0x14A4174", VA = "0x14A4174")]
	private void EndPlacementMode()
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x14A41A0", Offset = "0x14A41A0", VA = "0x14A41A0")]
	private void StartSelectMode()
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x14A40C0", Offset = "0x14A40C0", VA = "0x14A40C0")]
	private void EndSelectMode()
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x14A3EE4", Offset = "0x14A3EE4", VA = "0x14A3EE4")]
	private void HandleMenuNavigation()
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0x14A42DC", Offset = "0x14A42DC", VA = "0x14A42DC")]
	private void NavigateToIndexInMenu(bool moveNext)
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0x14A4228", Offset = "0x14A4228", VA = "0x14A4228")]
	private void ShowAnchorPreview()
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0x14A4248", Offset = "0x14A4248", VA = "0x14A4248")]
	private void HideAnchorPreview()
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0x14A43F4", Offset = "0x14A43F4", VA = "0x14A43F4")]
	private void PlaceAnchor()
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x14A4268", Offset = "0x14A4268", VA = "0x14A4268")]
	private void ShowRaycastLine()
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x14A42A4", Offset = "0x14A42A4", VA = "0x14A42A4")]
	private void HideRaycastLine()
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0x14A3CAC", Offset = "0x14A3CAC", VA = "0x14A3CAC")]
	private void ControllerRaycast()
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x14A4450", Offset = "0x14A4450", VA = "0x14A4450")]
	private void HoverAnchor(Anchor anchor)
	{
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0x14A4484", Offset = "0x14A4484", VA = "0x14A4484")]
	private void UnhoverAnchor()
	{
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0x14A4520", Offset = "0x14A4520", VA = "0x14A4520")]
	private void SelectAnchor()
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0x14A469C", Offset = "0x14A469C", VA = "0x14A469C")]
	public AnchorUIManager()
	{
	}
}
[Token(Token = "0x2000113")]
public class SpatialAnchorSession : AnchorSession
{
	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Dictionary<ulong, ulong> locateAnchorRequest;

	[Token(Token = "0x400062D")]
	private const string numUuids = "numUuids";

	[Token(Token = "0x6000482")]
	[Address(RVA = "0x14C6E78", Offset = "0x14C6E78", VA = "0x14C6E78")]
	private void Start()
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0x14C70C4", Offset = "0x14C70C4", VA = "0x14C70C4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x14C7310", Offset = "0x14C7310", VA = "0x14C7310")]
	private void SpatialEntitySetComponentEnabled(ulong requestId, bool result, OVRPlugin.SpatialEntityComponentType componentType, ulong space)
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0x14C7520", Offset = "0x14C7520", VA = "0x14C7520")]
	private void SpatialAnchorSaved(ulong requestId, ulong space, bool result, OVRPlugin.SpatialEntityUuid uuid)
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0x14C7A10", Offset = "0x14C7A10", VA = "0x14C7A10")]
	private void SpatialEntityStorageErase(ulong requestId, bool result, OVRPlugin.SpatialEntityUuid uuid, OVRPlugin.SpatialEntityStorageLocation location)
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0x14C7D40", Offset = "0x14C7D40", VA = "0x14C7D40")]
	private void SpatialEntityQueryResults(ulong requestId, int numResults, OVRPlugin.SpatialEntityQueryResult[] results)
	{
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0x14C8464", Offset = "0x14C8464", VA = "0x14C8464")]
	private void SpatialEntityQueryComplete(ulong requestId, bool result, int numFound)
	{
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x14C7934", Offset = "0x14C7934", VA = "0x14C7934")]
	private string GetUuidString(OVRPlugin.SpatialEntityUuid uuid)
	{
		return null;
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x14C8028", Offset = "0x14C8028", VA = "0x14C8028")]
	private void tryEnableComponent(ulong anchorHandle, OVRPlugin.SpatialEntityComponentType type)
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x14C7400", Offset = "0x14C7400", VA = "0x14C7400")]
	private void CreateAnchorGameobject(ulong anchorHandle)
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x14C86B8", Offset = "0x14C86B8", VA = "0x14C86B8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0x14C8968", Offset = "0x14C8968", VA = "0x14C8968", Slot = "5")]
	public override ulong CreateSpatialAnchor(Transform T_UnityWorld_Anchor)
	{
		return default(ulong);
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0x14C8B08", Offset = "0x14C8B08", VA = "0x14C8B08", Slot = "6")]
	public override void DestroyAnchor(ulong anchorHandle)
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0x14C8CC4", Offset = "0x14C8CC4", VA = "0x14C8CC4", Slot = "8")]
	public override void EraseAnchor(ulong anchorHandle)
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0x14C8E90", Offset = "0x14C8E90", VA = "0x14C8E90")]
	public void QueryAnchorByUuid()
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0x14C9188", Offset = "0x14C9188", VA = "0x14C9188", Slot = "9")]
	public override void QueryAllLocalAnchors()
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0x14C9278", Offset = "0x14C9278", VA = "0x14C9278", Slot = "7")]
	public override void SaveAnchor(ulong anchorHandle, StorageLocation location)
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0x14C93E8", Offset = "0x14C93E8", VA = "0x14C93E8")]
	public SpatialAnchorSession()
	{
	}
}
[Token(Token = "0x2000114")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x2000115")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69C894", Offset = "0x69C894")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4000631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sceneIndex;

		[Token(Token = "0x4000632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartMenu <>4__this;

		[Token(Token = "0x6000497")]
		[Address(RVA = "0x14991DC", Offset = "0x14991DC", VA = "0x14991DC")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x6000498")]
		[Address(RVA = "0x14991E4", Offset = "0x14991E4", VA = "0x14991E4")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x6000494")]
	[Address(RVA = "0x14CA028", Offset = "0x14CA028", VA = "0x14CA028")]
	private void Start()
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0x14CA244", Offset = "0x14CA244", VA = "0x14CA244")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0x14CA354", Offset = "0x14CA354", VA = "0x14CA354")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x2000116")]
public class ExtendedFlycam : MonoBehaviour
{
	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float cameraSensitivity;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float climbSpeed;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float normalMoveSpeed;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float slowMoveFactor;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float fastMoveFactor;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float rotationX;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float rotationY;

	[Token(Token = "0x6000499")]
	[Address(RVA = "0x967870", Offset = "0x967870", VA = "0x967870")]
	private void Update()
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0x967EE0", Offset = "0x967EE0", VA = "0x967EE0")]
	public ExtendedFlycam()
	{
	}
}
[Token(Token = "0x2000117")]
internal class ArrowObjectPool : MonoBehaviour
{
	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ArrowObjectPool current;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69FB44", Offset = "0x69FB44")]
	public Indicator pooledObject;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69FB7C", Offset = "0x69FB7C")]
	public int pooledAmount;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69FBB4", Offset = "0x69FBB4")]
	public bool willGrow;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Indicator> pooledObjects;

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x14A70A4", Offset = "0x14A70A4", VA = "0x14A70A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x14A70F8", Offset = "0x14A70F8", VA = "0x14A70F8")]
	private void Start()
	{
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0x14A7274", Offset = "0x14A7274", VA = "0x14A7274")]
	public Indicator GetPooledObject()
	{
		return null;
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0x14A7418", Offset = "0x14A7418", VA = "0x14A7418")]
	public void DeactivateAllPooledObjects()
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x14A7534", Offset = "0x14A7534", VA = "0x14A7534")]
	public ArrowObjectPool()
	{
	}
}
[Token(Token = "0x2000118")]
public class BoxObjectPool : MonoBehaviour
{
	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static BoxObjectPool current;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69FBEC", Offset = "0x69FBEC")]
	public Indicator pooledObject;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69FC24", Offset = "0x69FC24")]
	public int pooledAmount;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69FC5C", Offset = "0x69FC5C")]
	public bool willGrow;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Indicator> pooledObjects;

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0xF17A54", Offset = "0xF17A54", VA = "0xF17A54")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0xF17AA8", Offset = "0xF17AA8", VA = "0xF17AA8")]
	private void Start()
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0xF17C24", Offset = "0xF17C24", VA = "0xF17C24")]
	public Indicator GetPooledObject()
	{
		return null;
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0xF17DC8", Offset = "0xF17DC8", VA = "0xF17DC8")]
	public void DeactivateAllPooledObjects()
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0xF17EE4", Offset = "0xF17EE4", VA = "0xF17EE4")]
	public BoxObjectPool()
	{
	}
}
[Token(Token = "0x2000119")]
public class Indicator : MonoBehaviour
{
	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private IndicatorType indicatorType;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Image indicatorImage;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Text distanceText;

	[Token(Token = "0x17000057")]
	public bool Active
	{
		[Token(Token = "0x60004A5")]
		[Address(RVA = "0x9FDD98", Offset = "0x9FDD98", VA = "0x9FDD98")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000058")]
	public IndicatorType Type
	{
		[Token(Token = "0x60004A6")]
		[Address(RVA = "0x9FDDC8", Offset = "0x9FDDC8", VA = "0x9FDDC8")]
		get
		{
			return default(IndicatorType);
		}
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0x9FDDD0", Offset = "0x9FDDD0", VA = "0x9FDDD0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0x9FDE78", Offset = "0x9FDE78", VA = "0x9FDE78")]
	public void SetImageColor(Color color)
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0x9FDE9C", Offset = "0x9FDE9C", VA = "0x9FDE9C")]
	public void SetDistanceText(float value)
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x9FDF5C", Offset = "0x9FDF5C", VA = "0x9FDF5C")]
	public void SetTextRotation(Quaternion rotation)
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0x9FDFB8", Offset = "0x9FDFB8", VA = "0x9FDFB8")]
	public void Activate(bool value)
	{
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x9FDFF8", Offset = "0x9FDFF8", VA = "0x9FDFF8")]
	public Indicator()
	{
	}
}
[Token(Token = "0x200011A")]
public enum IndicatorType
{
	[Token(Token = "0x4000648")]
	BOX,
	[Token(Token = "0x4000649")]
	ARROW
}
[Token(Token = "0x200011B")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x69C8A4", Offset = "0x69C8A4")]
public class OffScreenIndicator : MonoBehaviour
{
	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69FCA4", Offset = "0x69FCA4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x69FCA4", Offset = "0x69FCA4")]
	private float screenBoundOffset;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Camera mainCamera;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 screenCentre;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 screenBounds;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Target> targets;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<Target, bool> TargetStateChanged;

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0xAD0FD8", Offset = "0xAD0FD8", VA = "0xAD0FD8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0xAD1138", Offset = "0xAD1138", VA = "0xAD1138")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0xAD113C", Offset = "0xAD113C", VA = "0xAD113C")]
	private void DrawIndicators()
	{
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0xAD1784", Offset = "0xAD1784", VA = "0xAD1784")]
	private void HandleTargetStateChanged(Target target, bool active)
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0xAD1570", Offset = "0xAD1570", VA = "0xAD1570")]
	private Indicator GetIndicator(ref Indicator indicator, IndicatorType type)
	{
		return null;
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0xAD1850", Offset = "0xAD1850", VA = "0xAD1850")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0xAD194C", Offset = "0xAD194C", VA = "0xAD194C")]
	public OffScreenIndicator()
	{
	}
}
[Token(Token = "0x200011C")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x69C8B8", Offset = "0x69C8B8")]
public class Target : MonoBehaviour
{
	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69FD0C", Offset = "0x69FD0C")]
	private Color targetColor;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69FD58", Offset = "0x69FD58")]
	[SerializeField]
	private bool needBoxIndicator;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69FDA4", Offset = "0x69FDA4")]
	[SerializeField]
	private bool needArrowIndicator;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69FDF0", Offset = "0x69FDF0")]
	[SerializeField]
	private bool needDistanceText;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Indicator indicator;

	[Token(Token = "0x17000059")]
	public Color TargetColor
	{
		[Token(Token = "0x60004B4")]
		[Address(RVA = "0x14CC174", Offset = "0x14CC174", VA = "0x14CC174")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700005A")]
	public bool NeedBoxIndicator
	{
		[Token(Token = "0x60004B5")]
		[Address(RVA = "0x14CC180", Offset = "0x14CC180", VA = "0x14CC180")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700005B")]
	public bool NeedArrowIndicator
	{
		[Token(Token = "0x60004B6")]
		[Address(RVA = "0x14CC188", Offset = "0x14CC188", VA = "0x14CC188")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700005C")]
	public bool NeedDistanceText
	{
		[Token(Token = "0x60004B7")]
		[Address(RVA = "0x14CC190", Offset = "0x14CC190", VA = "0x14CC190")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0x14CC198", Offset = "0x14CC198", VA = "0x14CC198")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0x14CC218", Offset = "0x14CC218", VA = "0x14CC218")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0x14CC298", Offset = "0x14CC298", VA = "0x14CC298")]
	public float GetDistanceFromCamera(Vector3 cameraPosition)
	{
		return default(float);
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x14CC2F8", Offset = "0x14CC2F8", VA = "0x14CC2F8")]
	public Target()
	{
	}
}
[Token(Token = "0x200011D")]
public class CircleSlider : MonoBehaviour
{
	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool b;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image image;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float speed;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float time;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text progress;

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0xF2A370", Offset = "0xF2A370", VA = "0xF2A370")]
	private void Start()
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0xF2A3CC", Offset = "0xF2A3CC", VA = "0xF2A3CC")]
	private void Update()
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0xF2A518", Offset = "0xF2A518", VA = "0xF2A518")]
	public CircleSlider()
	{
	}
}
[Token(Token = "0x200011E")]
public class JustRotate : MonoBehaviour
{
	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool canRotate;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float speed;

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0xD7BE6C", Offset = "0xD7BE6C", VA = "0xD7BE6C")]
	private void Update()
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0xD7BF0C", Offset = "0xD7BF0C", VA = "0xD7BF0C")]
	public JustRotate()
	{
	}
}
[Token(Token = "0x200011F")]
public class PressedBtn : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerClickHandler, IPointerEnterHandler, IPointerExitHandler
{
	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Button btn;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform myIcon;

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0xA091B0", Offset = "0xA091B0", VA = "0xA091B0")]
	private void Start()
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0xA09268", Offset = "0xA09268", VA = "0xA09268")]
	public void OnClick()
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0xA09304", Offset = "0xA09304", VA = "0xA09304")]
	public void OnPressed()
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0xA093B4", Offset = "0xA093B4", VA = "0xA093B4", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0xA093B8", Offset = "0xA093B8", VA = "0xA093B8", Slot = "5")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0xA093BC", Offset = "0xA093BC", VA = "0xA093BC", Slot = "6")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0xA093C0", Offset = "0xA093C0", VA = "0xA093C0", Slot = "7")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0xA093C4", Offset = "0xA093C4", VA = "0xA093C4")]
	public PressedBtn()
	{
	}
}
[Token(Token = "0x2000120")]
public class SliderRunTo1 : MonoBehaviour
{
	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool b;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Slider slider;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float speed;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float time;

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0xA170DC", Offset = "0xA170DC", VA = "0xA170DC")]
	private void Start()
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0xA17138", Offset = "0xA17138", VA = "0xA17138")]
	private void Update()
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0xA171B4", Offset = "0xA171B4", VA = "0xA171B4")]
	public SliderRunTo1()
	{
	}
}
[Token(Token = "0x2000121")]
public class SliderValuePass : MonoBehaviour
{
	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text progress;

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0xA171CC", Offset = "0xA171CC", VA = "0xA171CC")]
	private void Start()
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0xA17228", Offset = "0xA17228", VA = "0xA17228")]
	public void UpdateProgress(float content)
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0xA17344", Offset = "0xA17344", VA = "0xA17344")]
	public SliderValuePass()
	{
	}
}
[Token(Token = "0x2000122")]
public class CamControl2 : MonoBehaviour
{
	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float height;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float distanceMin;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float distanceMax;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float xSpeed;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float ySpeed;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float distance;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float xAngle;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float yAngle;

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0xF25010", Offset = "0xF25010", VA = "0xF25010")]
	private void Update()
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0xF25244", Offset = "0xF25244", VA = "0xF25244")]
	public CamControl2()
	{
	}
}
[Token(Token = "0x2000123")]
public class DetectHit : MonoBehaviour
{
	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public ForceField forceField;

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0x959014", Offset = "0x959014", VA = "0x959014")]
	public void ApplyDamage(float damage)
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0x959038", Offset = "0x959038", VA = "0x959038")]
	public void PointHit(Vector3 point)
	{
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0x95925C", Offset = "0x95925C", VA = "0x95925C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0x959520", Offset = "0x959520", VA = "0x959520")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0x9592FC", Offset = "0x9592FC", VA = "0x9592FC")]
	private void addCollisionDetailToForceField(Vector3 pos)
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0x9597AC", Offset = "0x9597AC", VA = "0x9597AC")]
	public DetectHit()
	{
	}
}
[Token(Token = "0x2000124")]
public class ForceField : MonoBehaviour
{
	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] underShield;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material materialShield;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float brightnessCollision;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float fadingGlow;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float armor;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float speedOnOff;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector4 speedOffset;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool sphere;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float sphereScale;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3 spherePosition;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[HideInInspector]
	public float mTime;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public Color shieldColor;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public bool hit;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	[HideInInspector]
	public bool hit2;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public MeshRenderer[] mesh;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	public int i;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float shieldA;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject sp;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool activ;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector4 offset;

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0x96A9CC", Offset = "0x96A9CC", VA = "0x96A9CC")]
	private void Start()
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0x96AFC8", Offset = "0x96AFC8", VA = "0x96AFC8")]
	private void Update()
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0x96A9D0", Offset = "0x96A9D0", VA = "0x96A9D0")]
	public void CreateForceField()
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0x96B630", Offset = "0x96B630", VA = "0x96B630")]
	public void DestroyForceField()
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x96B8F0", Offset = "0x96B8F0", VA = "0x96B8F0")]
	public ForceField()
	{
	}
}
[Token(Token = "0x2000125")]
public class Hologram : MonoBehaviour
{
	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public new MeshRenderer[] gameObject;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4 speedOffset;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector4 offset;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material[] material;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float camDistance;

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x9FD0F0", Offset = "0x9FD0F0", VA = "0x9FD0F0")]
	private void Start()
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x9FD20C", Offset = "0x9FD20C", VA = "0x9FD20C")]
	private void Update()
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x9FD400", Offset = "0x9FD400", VA = "0x9FD400")]
	public Hologram()
	{
	}
}
[Token(Token = "0x2000126")]
public class Pointer2 : MonoBehaviour
{
	[Token(Token = "0x60004DF")]
	[Address(RVA = "0xA06D4C", Offset = "0xA06D4C", VA = "0xA06D4C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0xA06D58", Offset = "0xA06D58", VA = "0xA06D58")]
	private void Update()
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0xA06DBC", Offset = "0xA06DBC", VA = "0xA06DBC")]
	public Pointer2()
	{
	}
}
[Token(Token = "0x2000127")]
public class TestBox2 : MonoBehaviour
{
	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float damage;

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0x14DB718", Offset = "0x14DB718", VA = "0x14DB718")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0x14DB92C", Offset = "0x14DB92C", VA = "0x14DB92C")]
	public TestBox2()
	{
	}
}
[Token(Token = "0x2000128")]
public class TestScene2 : MonoBehaviour
{
	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cam1;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject cam2;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ForceField forceField;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject prefab;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<GameObject> obj;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float r;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool createBox2;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	private bool createBox;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float timeBox;

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0x14DCD14", Offset = "0x14DCD14", VA = "0x14DCD14")]
	private void Start()
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0x14DCD58", Offset = "0x14DCD58", VA = "0x14DCD58")]
	private void Update()
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0x14DCFEC", Offset = "0x14DCFEC", VA = "0x14DCFEC")]
	private void CreateObjectA()
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0x14DD16C", Offset = "0x14DD16C", VA = "0x14DD16C")]
	private void CreateObjectB()
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0x14DDEE0", Offset = "0x14DDEE0", VA = "0x14DDEE0")]
	private void CreateLineY(float x, float y, float z, int range)
	{
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0x14DDD94", Offset = "0x14DDD94", VA = "0x14DDD94")]
	private void CreateLineX(float x, float y, float z, int range)
	{
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0x14DDA20", Offset = "0x14DDA20", VA = "0x14DDA20")]
	private void CreateSquare(float x, float y, float z, int range)
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0x14DE02C", Offset = "0x14DE02C", VA = "0x14DE02C")]
	public TestScene2()
	{
	}
}
[Token(Token = "0x2000129")]
public class ActiveStateToggler : MonoBehaviour
{
	[Token(Token = "0x60004EC")]
	[Address(RVA = "0x149F34C", Offset = "0x149F34C", VA = "0x149F34C")]
	public void ToggleActive()
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0x149F3A4", Offset = "0x149F3A4", VA = "0x149F3A4")]
	public ActiveStateToggler()
	{
	}
}
[Token(Token = "0x200012A")]
public class ApplicationManager : MonoBehaviour
{
	[Token(Token = "0x60004EE")]
	[Address(RVA = "0x14A5FCC", Offset = "0x14A5FCC", VA = "0x14A5FCC")]
	public void Quit()
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0x14A5FD4", Offset = "0x14A5FD4", VA = "0x14A5FD4")]
	public ApplicationManager()
	{
	}
}
[Token(Token = "0x200012B")]
public class ChangeColor : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
{
	[Token(Token = "0x60004F0")]
	[Address(RVA = "0xF27F2C", Offset = "0xF27F2C", VA = "0xF27F2C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0xF27F30", Offset = "0xF27F30", VA = "0xF27F30")]
	public void SetRed(float value)
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0xF28198", Offset = "0xF28198", VA = "0xF28198")]
	public void SetGreen(float value)
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0xF281A0", Offset = "0xF281A0", VA = "0xF281A0")]
	public void SetBlue(float value)
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0xF27F38", Offset = "0xF27F38", VA = "0xF27F38")]
	public void OnValueChanged(float value, int channel)
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0xF281A8", Offset = "0xF281A8", VA = "0xF281A8", Slot = "4")]
	public void OnPointerClick(PointerEventData data)
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0xF28390", Offset = "0xF28390", VA = "0xF28390")]
	public ChangeColor()
	{
	}
}
[Token(Token = "0x200012C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x69C8CC", Offset = "0x69C8CC")]
public class DragMe : MonoBehaviour, IBeginDragHandler, IEventSystemHandler, IDragHandler, IEndDragHandler
{
	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool dragOnSurfaces;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<int, GameObject> m_DraggingIcons;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, RectTransform> m_DraggingPlanes;

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x95CBCC", Offset = "0x95CBCC", VA = "0x95CBCC", Slot = "4")]
	public void OnBeginDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x95D1AC", Offset = "0x95D1AC", VA = "0x95D1AC", Slot = "5")]
	public void OnDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x95CEF8", Offset = "0x95CEF8", VA = "0x95CEF8")]
	private void SetDraggedPosition(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x95D278", Offset = "0x95D278", VA = "0x95D278", Slot = "6")]
	public void OnEndDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60004FB")]
	public static T FindInParents<T>(GameObject go) where T : Component
	{
		return null;
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x95D39C", Offset = "0x95D39C", VA = "0x95D39C")]
	public DragMe()
	{
	}
}
[Token(Token = "0x200012D")]
public class DragPanel : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IDragHandler
{
	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector2 originalLocalPointerPosition;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 originalPanelLocalPosition;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RectTransform panelRectTransform;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RectTransform parentRectTransform;

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x95D474", Offset = "0x95D474", VA = "0x95D474")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x95D53C", Offset = "0x95D53C", VA = "0x95D53C", Slot = "4")]
	public void OnPointerDown(PointerEventData data)
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x95D600", Offset = "0x95D600", VA = "0x95D600", Slot = "5")]
	public void OnDrag(PointerEventData data)
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x95D76C", Offset = "0x95D76C", VA = "0x95D76C")]
	private void ClampToWindow()
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0x95D8EC", Offset = "0x95D8EC", VA = "0x95D8EC")]
	public DragPanel()
	{
	}
}
[Token(Token = "0x200012E")]
public class DropMe : MonoBehaviour, IDropHandler, IEventSystemHandler, IPointerEnterHandler, IPointerExitHandler
{
	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image containerImage;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image receivingImage;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color normalColor;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color highlightColor;

	[Token(Token = "0x6000502")]
	[Address(RVA = "0x95D8F4", Offset = "0x95D8F4", VA = "0x95D8F4")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0x95D98C", Offset = "0x95D98C", VA = "0x95D98C", Slot = "4")]
	public void OnDrop(PointerEventData data)
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0x95DBDC", Offset = "0x95DBDC", VA = "0x95DBDC", Slot = "5")]
	public void OnPointerEnter(PointerEventData data)
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0x95DCC8", Offset = "0x95DCC8", VA = "0x95DCC8", Slot = "6")]
	public void OnPointerExit(PointerEventData data)
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0x95DA8C", Offset = "0x95DA8C", VA = "0x95DA8C")]
	private Sprite GetDropSprite(PointerEventData data)
	{
		return null;
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x95DD68", Offset = "0x95DD68", VA = "0x95DD68")]
	public DropMe()
	{
	}
}
[Token(Token = "0x200012F")]
public class PanelManager : MonoBehaviour
{
	[Token(Token = "0x2000130")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69C92C", Offset = "0x69C92C")]
	private sealed class <DisablePanelDeleyed>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Animator anim;

		[Token(Token = "0x40006A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PanelManager <>4__this;

		[Token(Token = "0x40006A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <closedStateReached>5__2;

		[Token(Token = "0x40006A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool <wantToClose>5__3;

		[Token(Token = "0x1700005D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000512")]
			[Address(RVA = "0x1495420", Offset = "0x1495420", VA = "0x1495420", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000514")]
			[Address(RVA = "0x1495468", Offset = "0x1495468", VA = "0x1495468", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600050F")]
		[Address(RVA = "0x149523C", Offset = "0x149523C", VA = "0x149523C")]
		[DebuggerHidden]
		public <DisablePanelDeleyed>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000510")]
		[Address(RVA = "0x1495268", Offset = "0x1495268", VA = "0x1495268", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000511")]
		[Address(RVA = "0x149526C", Offset = "0x149526C", VA = "0x149526C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000513")]
		[Address(RVA = "0x1495428", Offset = "0x1495428", VA = "0x1495428", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator initiallyOpen;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int m_OpenParameterId;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Animator m_Open;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject m_PreviouslySelected;

	[Token(Token = "0x400069F")]
	private const string k_OpenTransitionName = "Open";

	[Token(Token = "0x40006A0")]
	private const string k_ClosedStateName = "Closed";

	[Token(Token = "0x6000508")]
	[Address(RVA = "0xA612DC", Offset = "0xA612DC", VA = "0xA612DC")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0xA61388", Offset = "0xA61388", VA = "0xA61388")]
	public void OpenPanel(Animator anim)
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0xA615D4", Offset = "0xA615D4", VA = "0xA615D4")]
	private static GameObject FindFirstEnabledSelectable(GameObject gameObject)
	{
		return null;
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0xA614F8", Offset = "0xA614F8", VA = "0xA614F8")]
	public void CloseCurrent()
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0xA6173C", Offset = "0xA6173C", VA = "0xA6173C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A4FAC", Offset = "0x6A4FAC")]
	private IEnumerator DisablePanelDeleyed(Animator anim)
	{
		return null;
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0xA616C8", Offset = "0xA616C8", VA = "0xA616C8")]
	private void SetSelected(GameObject go)
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0xA617D0", Offset = "0xA617D0", VA = "0xA617D0")]
	public PanelManager()
	{
	}
}
[Token(Token = "0x2000131")]
public class ResizePanel : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IDragHandler
{
	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 minSize;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 maxSize;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform panelRectTransform;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector2 originalLocalPointerPosition;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector2 originalSizeDelta;

	[Token(Token = "0x6000515")]
	[Address(RVA = "0xA0E1FC", Offset = "0xA0E1FC", VA = "0xA0E1FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0xA0E274", Offset = "0xA0E274", VA = "0xA0E274", Slot = "4")]
	public void OnPointerDown(PointerEventData data)
	{
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0xA0E334", Offset = "0xA0E334", VA = "0xA0E334", Slot = "5")]
	public void OnDrag(PointerEventData data)
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0xA0E488", Offset = "0xA0E488", VA = "0xA0E488")]
	public ResizePanel()
	{
	}
}
[Token(Token = "0x2000132")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x69C93C", Offset = "0x69C93C")]
public class ScrollDetailTexture : MonoBehaviour
{
	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool uniqueMaterial;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector2 scrollPerSecond;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Matrix4x4 m_Matrix;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Material mCopy;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Material mOriginal;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Image mSprite;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Material m_Mat;

	[Token(Token = "0x6000519")]
	[Address(RVA = "0xA137F8", Offset = "0xA137F8", VA = "0xA137F8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0xA139CC", Offset = "0xA139CC", VA = "0xA139CC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0xA13AEC", Offset = "0xA13AEC", VA = "0xA13AEC")]
	private void Update()
	{
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0xA13C44", Offset = "0xA13C44", VA = "0xA13C44")]
	public ScrollDetailTexture()
	{
	}
}
[Token(Token = "0x2000133")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x69C99C", Offset = "0x69C99C")]
public class ShowSliderValue : MonoBehaviour
{
	[Token(Token = "0x600051D")]
	[Address(RVA = "0xA15250", Offset = "0xA15250", VA = "0xA15250")]
	public void UpdateLabel(float value)
	{
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0xA1535C", Offset = "0xA1535C", VA = "0xA1535C")]
	public ShowSliderValue()
	{
	}
}
[Token(Token = "0x2000134")]
public class TiltWindow : MonoBehaviour
{
	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 range;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform mTrans;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Quaternion mStart;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector2 mRot;

	[Token(Token = "0x600051F")]
	[Address(RVA = "0x14DE9C0", Offset = "0x14DE9C0", VA = "0x14DE9C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0x14DEA10", Offset = "0x14DEA10", VA = "0x14DEA10")]
	private void Update()
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0x14DEB54", Offset = "0x14DEB54", VA = "0x14DEB54")]
	public TiltWindow()
	{
	}
}
[Token(Token = "0x2000135")]
public class Interactable : MonoBehaviour
{
	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<PerformOnInteraction> performOnInteractionComponents;

	[Token(Token = "0x6000522")]
	[Address(RVA = "0x9FE760", Offset = "0x9FE760", VA = "0x9FE760")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0x9FE7DC", Offset = "0x9FE7DC", VA = "0x9FE7DC")]
	public void onRayOver()
	{
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0x9FE964", Offset = "0x9FE964", VA = "0x9FE964")]
	public void onRayLeave()
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0x9FEAEC", Offset = "0x9FEAEC", VA = "0x9FEAEC")]
	public void pressed()
	{
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0x9FEC74", Offset = "0x9FEC74", VA = "0x9FEC74")]
	public Interactable()
	{
	}
}
[Token(Token = "0x2000136")]
public class Reticule : MonoBehaviour
{
	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpriteRenderer spriteRenderer;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite openSprite;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite closedSprite;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Camera my_Camera;

	[Token(Token = "0x6000527")]
	[Address(RVA = "0xA0E864", Offset = "0xA0E864", VA = "0xA0E864")]
	private void Update()
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0xA0E8C0", Offset = "0xA0E8C0", VA = "0xA0E8C0")]
	public void updateSprite(Vector3 point, GameObject hitObject)
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0xA0E99C", Offset = "0xA0E99C", VA = "0xA0E99C")]
	public Reticule()
	{
	}
}
[Token(Token = "0x2000137")]
public class ControlParticlesSpawner : MonoBehaviour
{
	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem cps;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string bulletTag;

	[Token(Token = "0x600052A")]
	[Address(RVA = "0xA6C8A4", Offset = "0xA6C8A4", VA = "0xA6C8A4")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0xA6C9B0", Offset = "0xA6C9B0", VA = "0xA6C9B0")]
	public ControlParticlesSpawner()
	{
	}
}
[Token(Token = "0x2000138")]
public class ForceFieldController : MonoBehaviour
{
	[Token(Token = "0x2000139")]
	public enum FFstate
	{
		[Token(Token = "0x40006DA")]
		SingleSpheres,
		[Token(Token = "0x40006DB")]
		MultipleSpheres
	}

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FFstate forceFieldMode;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int affectorCount;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x69FECC", Offset = "0x69FECC")]
	public float openCloseProgress;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool openAutoAnimation;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float openSpeed;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve openCurve;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material[] materialLayers;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool procedrualGradientEnabled;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool procedrualGradientUpdate;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Gradient procedrualGradientRamp;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color procedrualRampColorTint;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ParticleSystem controlParticleSystem;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject getRenderersInChildren;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Renderer[] getRenderersCustom;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Renderer[] renderers;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Texture2D rampTexture;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector4[] spherePositions;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float[] sphereSizes;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int numberOfSpheres;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private int numberOfSpheresOld;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private ParticleSystem.Particle[] controlParticles;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector4[] controlParticlesPositions;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float[] controlParticlesSizes;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private List<Material> rendererMaterials;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private ParticleSystem.MainModule psmain;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float openCloseValue;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float openCloseCurve;

	[Token(Token = "0x600052C")]
	[Address(RVA = "0x96B988", Offset = "0x96B988", VA = "0x96B988")]
	private void Start()
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0x96C088", Offset = "0x96C088", VA = "0x96C088")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x96C644", Offset = "0x96C644", VA = "0x96C644")]
	private void Update()
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x96BA80", Offset = "0x96BA80", VA = "0x96BA80")]
	private void GetNumberOfSpheres()
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0x96BAD0", Offset = "0x96BAD0", VA = "0x96BAD0")]
	private void GetSphereArrays()
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x96C2D8", Offset = "0x96C2D8", VA = "0x96C2D8")]
	private void OpenCloseProgress()
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x96C8CC", Offset = "0x96C8CC", VA = "0x96C8CC")]
	public void SetOpenCloseValue(float val)
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0x96C8DC", Offset = "0x96C8DC", VA = "0x96C8DC")]
	private Texture2D GenerateTextureFromGradient(Gradient grad)
	{
		return null;
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0x96BC6C", Offset = "0x96BC6C", VA = "0x96BC6C")]
	public void ApplyMaterials()
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0x96BF50", Offset = "0x96BF50", VA = "0x96BF50")]
	public void UpdateRampTexture()
	{
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0x96BA04", Offset = "0x96BA04", VA = "0x96BA04")]
	public void GetRenderers()
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0x96C340", Offset = "0x96C340", VA = "0x96C340")]
	public void UpdateHitWaves()
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0x96C9C4", Offset = "0x96C9C4", VA = "0x96C9C4")]
	public ForceFieldController()
	{
	}
}
[Token(Token = "0x200013A")]
public class ShooterController : MonoBehaviour
{
	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject projectile;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float rotationSpeed;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 mouseWorldPosition;

	[Token(Token = "0x6000539")]
	[Address(RVA = "0xA14E94", Offset = "0xA14E94", VA = "0xA14E94")]
	private void Start()
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0xA14E98", Offset = "0xA14E98", VA = "0xA14E98")]
	private void Update()
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0xA1511C", Offset = "0xA1511C", VA = "0xA1511C")]
	public ShooterController()
	{
	}
}
[Token(Token = "0x200013B")]
public class SimpleCameraRotator : MonoBehaviour
{
	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float rotationSpeed;

	[Token(Token = "0x600053C")]
	[Address(RVA = "0xA15364", Offset = "0xA15364", VA = "0xA15364")]
	private void Update()
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0xA153C4", Offset = "0xA153C4", VA = "0xA153C4")]
	public SimpleCameraRotator()
	{
	}
}
[Token(Token = "0x200013C")]
public class SimpleProjectileSphere : MonoBehaviour
{
	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float force;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody rb;

	[Token(Token = "0x600053E")]
	[Address(RVA = "0xA15D68", Offset = "0xA15D68", VA = "0xA15D68")]
	private void Start()
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0xA15E54", Offset = "0xA15E54", VA = "0xA15E54")]
	private void Update()
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0xA15E58", Offset = "0xA15E58", VA = "0xA15E58")]
	public SimpleProjectileSphere()
	{
	}
}
[Token(Token = "0x200013D")]
public class UIControllerSine : MonoBehaviour
{
	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform prefabHolder;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float openSpeed;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool openAnimation;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve openCurve;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform[] prefabs;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Transform> lt;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int activeNumber;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ForceFieldController ffc;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float openCloseValue;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float openCloseCurve;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject activeGameObject;

	[Token(Token = "0x6000541")]
	[Address(RVA = "0x14EA828", Offset = "0x14EA828", VA = "0x14EA828")]
	private void Start()
	{
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0x14EAA08", Offset = "0x14EAA08", VA = "0x14EAA08")]
	public void EnableActive()
	{
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0x14EAAE8", Offset = "0x14EAAE8", VA = "0x14EAAE8")]
	public void ChangeEffect(bool bo)
	{
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0x14EABAC", Offset = "0x14EABAC", VA = "0x14EABAC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0x14EAC28", Offset = "0x14EAC28", VA = "0x14EAC28")]
	public UIControllerSine()
	{
	}
}
[Token(Token = "0x200013E")]
public class FadeAlpha : MonoBehaviour
{
	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float fadePerSecond;

	[Token(Token = "0x6000546")]
	[Address(RVA = "0x967EFC", Offset = "0x967EFC", VA = "0x967EFC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0x967FE0", Offset = "0x967FE0", VA = "0x967FE0")]
	public FadeAlpha()
	{
	}
}
[Token(Token = "0x200013F")]
public class DestroyObject : MonoBehaviour
{
	[Token(Token = "0x6000548")]
	[Address(RVA = "0x958F88", Offset = "0x958F88", VA = "0x958F88")]
	private void Start()
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x959008", Offset = "0x959008", VA = "0x959008")]
	private void Update()
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x95900C", Offset = "0x95900C", VA = "0x95900C")]
	public DestroyObject()
	{
	}
}
[Token(Token = "0x2000140")]
public class VRFollowPlayer : MonoBehaviour
{
	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Camera camera;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private CapsuleCollider capsuleCollider;

	[Token(Token = "0x600054B")]
	[Address(RVA = "0x14ECD44", Offset = "0x14ECD44", VA = "0x14ECD44")]
	private void Update()
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0x14ECDD8", Offset = "0x14ECDD8", VA = "0x14ECDD8")]
	public VRFollowPlayer()
	{
	}
}
[Token(Token = "0x2000141")]
public class FullVRMainMenuController : MainMenuController
{
	[Token(Token = "0x600054D")]
	[Address(RVA = "0x9EF2AC", Offset = "0x9EF2AC", VA = "0x9EF2AC")]
	public FullVRMainMenuController()
	{
	}
}
[Token(Token = "0x2000142")]
public class DEPRECATEDGameController : MonoBehaviour
{
	[Token(Token = "0x600054E")]
	[Address(RVA = "0xA76978", Offset = "0xA76978", VA = "0xA76978")]
	public DEPRECATEDGameController()
	{
	}
}
[Token(Token = "0x2000143")]
public class DEPRECATED_ButtonSelected : PerformOnInteraction
{
	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x69FF14", Offset = "0x69FF14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x69FF14", Offset = "0x69FF14")]
	public Color activeColor;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x69FF74", Offset = "0x69FF74")]
	public Color defaultColor;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Material defaultMaterial;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Material activeMaterial;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float contactEndedTime;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool active;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material _material;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Renderer my_Renderer;

	[Token(Token = "0x600054F")]
	[Address(RVA = "0xA77680", Offset = "0xA77680", VA = "0xA77680")]
	private void Start()
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0xA77684", Offset = "0xA77684", VA = "0xA77684")]
	private void findRendererAndMaterial()
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0xA77854", Offset = "0xA77854", VA = "0xA77854", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0xA77864", Offset = "0xA77864", VA = "0xA77864")]
	public void setActiveState(bool input)
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0xA779A8", Offset = "0xA779A8", VA = "0xA779A8")]
	public DEPRECATED_ButtonSelected()
	{
	}
}
[Token(Token = "0x2000144")]
public class DEPRECATED_GameDifficultyButtonSelected : DEPRECATED_ButtonSelected
{
	[Token(Token = "0x6000554")]
	[Address(RVA = "0xA77A50", Offset = "0xA77A50", VA = "0xA77A50", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0xA77A58", Offset = "0xA77A58", VA = "0xA77A58")]
	public DEPRECATED_GameDifficultyButtonSelected()
	{
	}
}
[Token(Token = "0x2000145")]
public class BlockIncomingEffectsPoolController : MonoBehaviour
{
	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject normalAppearanceEffect;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject bonusAppearanceEffect;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject bonusEffect;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ArrayList normalEntranceWormholes;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ArrayList bonusEntranceWormholes;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ArrayList bonusDisappearanceWormholes;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ArrayList playerScoredNormalEffect;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ArrayList playerScoredBonusEffect;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ArrayList playerHitEffect;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private ArrayList playerTouchedUnblockableEffect;

	[Token(Token = "0x6000556")]
	[Address(RVA = "0x14AA4E8", Offset = "0x14AA4E8", VA = "0x14AA4E8")]
	public BlockIncomingEffectsPoolController()
	{
	}
}
[Token(Token = "0x2000146")]
public class FragmentingObjectConstants : MonoBehaviour
{
	[Token(Token = "0x4000702")]
	public const string FRAGMENTING_OBJECT_FRACTURED_PART = "fracturedPart";

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float APPEARANCE_WORMHOLE_DURATION;

	[Token(Token = "0x6000557")]
	[Address(RVA = "0x9EE5F0", Offset = "0x9EE5F0", VA = "0x9EE5F0")]
	public FragmentingObjectConstants()
	{
	}
}
[Token(Token = "0x2000147")]
public class BlockIncomingObjectGameModeAudioController : GameModeAudioController
{
	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private AudioClip bonusObjectAppeared;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private AudioClip bonusObjectScored;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private AudioClip bonusObjectMissed;

	[Token(Token = "0x6000559")]
	[Address(RVA = "0x14AA7BC", Offset = "0x14AA7BC", VA = "0x14AA7BC")]
	public void playBonusObjectAppeared()
	{
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0x14AA7E0", Offset = "0x14AA7E0", VA = "0x14AA7E0")]
	public void playBonusObjectScored()
	{
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0x14AA804", Offset = "0x14AA804", VA = "0x14AA804")]
	public void playBonusObjectMissed()
	{
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0x14AA828", Offset = "0x14AA828", VA = "0x14AA828")]
	public BlockIncomingObjectGameModeAudioController()
	{
	}
}
[Token(Token = "0x2000148")]
public class BlockIncomingObjectPositionConstants : MonoBehaviour
{
	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float OBJECT_POOL_Y;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float FRACTURED_PREFABS_OBJECT_POOL_Y;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float NORMAL_OBJECT_X;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static float DODGE_ONLY_OBJECT_X;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static float DODGE_ONLY_LARGE_X;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static float BLOCK_ONLY_OBJECT_X;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static float BONUS_OBJECT_X;

	[Token(Token = "0x600055D")]
	[Address(RVA = "0x14AA830", Offset = "0x14AA830", VA = "0x14AA830")]
	public BlockIncomingObjectPositionConstants()
	{
	}
}
[Token(Token = "0x2000149")]
public class BlockIncomingObjectsAppearancePositionHelper : ObjectAppearancePositionHelper
{
	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected BlockIncomingObjectsGameController blockIncomingObjectsGameController;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	protected TesterBlockIncomingObjectsPositionHelper testerBlockIncomingObjectsPositionHelper;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected Transform transformOfPlayerCamera;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int AMOUNT_OF_OBJECT_TO_BLOCK_ROWS;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly int AMOUNT_OF_OBJECT_TO_BLOCK_COLUMNS;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly int AMOUNT_OF_BONUS_OBJECT_ROWS;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly int AMOUNT_OF_BONUS_OBJECT_COLUMNS;

	[Token(Token = "0x600055F")]
	[Address(RVA = "0x14AA8D4", Offset = "0x14AA8D4", VA = "0x14AA8D4")]
	public float[] getObjectCreationRanges(float xWidth)
	{
		return null;
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0x14AAAEC", Offset = "0x14AAAEC", VA = "0x14AAAEC")]
	private float getLargerDistanceForObjectCreation(float objectSize, float objectSizeMultiplier, float defaultAdditionalRange)
	{
		return default(float);
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0x14AAAFC", Offset = "0x14AAAFC", VA = "0x14AAAFC")]
	public Vector3 getObjectToBlockStartingPosition(float objectSizeX, float objectSizeY)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0x14AAFC0", Offset = "0x14AAFC0", VA = "0x14AAFC0")]
	private Vector3 getRandomPositionFromWithinRandomCreationArea(Area3D validObjectCreationArea, float objectSize)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0x14AB0DC", Offset = "0x14AB0DC", VA = "0x14AB0DC")]
	public Vector3 getBonusObjectStartingPosition(float objectSize)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0x14AB44C", Offset = "0x14AB44C", VA = "0x14AB44C")]
	protected List<Area3D> validateBonusObjectCreationAreas(List<Area3D> creationAreas, float objectSize)
	{
		return null;
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0x14AACE4", Offset = "0x14AACE4", VA = "0x14AACE4")]
	private List<Area3D> getObjectCreationSubAreas(float creationRangeMinX, float creationRangeMaxX, float creationRangeMinY, float creationRangeMaxY, int amountOfRows, int amountOfColumns, float objectSizeX, float objectSizeY)
	{
		return null;
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0x14AB9E0", Offset = "0x14AB9E0", VA = "0x14AB9E0")]
	private List<Area3D> getValidAreas(List<Area3D> originalCreationAreas, List<Area3D> forbidenObjectCreationAreas, float objectSizeX, float objectSizeY)
	{
		return null;
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0x14AB668", Offset = "0x14AB668", VA = "0x14AB668")]
	private List<Area3D> calculateForbidenObjectCreationAreas(List<GameObject> gameObjects)
	{
		return null;
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0x14AB590", Offset = "0x14AB590", VA = "0x14AB590")]
	private List<GameObject> getGameObjects()
	{
		return null;
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0x14AB26C", Offset = "0x14AB26C", VA = "0x14AB26C")]
	private List<Area3D> getNewValidObjectCreationAreasForBonusObjects(float objectSize)
	{
		return null;
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0x14ABF14", Offset = "0x14ABF14", VA = "0x14ABF14")]
	public BlockIncomingObjectsAppearancePositionHelper()
	{
	}
}
[Token(Token = "0x200014A")]
public class BlockIncomingObjectsFracturedPrefabPoolController : CoordinationCoachPoolController
{
	[Token(Token = "0x600056C")]
	[Address(RVA = "0x14ABFEC", Offset = "0x14ABFEC", VA = "0x14ABFEC", Slot = "29")]
	protected override void createAdditionalObjectsPool()
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x14ABFF8", Offset = "0x14ABFF8", VA = "0x14ABFF8", Slot = "11")]
	protected override void performSetupForPrefabsMap(GameObject objectToCreate)
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x14AC058", Offset = "0x14AC058", VA = "0x14AC058", Slot = "19")]
	protected override void performSetupOnObjectOnInitialization(GameObject instantiatedPrefab, int objectId)
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0x14AC0D8", Offset = "0x14AC0D8", VA = "0x14AC0D8", Slot = "23")]
	protected override void performSetupOnObjectDequeue(GameObject queueGameObject, CoordinationCoachGameObject.ActivationType activationType)
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0x14AC148", Offset = "0x14AC148", VA = "0x14AC148", Slot = "21")]
	protected override void performSetupWhenCreatingExtraObjects(GameObject instantiatedGameObject, int i, CoordinationCoachGameObject.ActivationType activationType)
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0x14AC158", Offset = "0x14AC158", VA = "0x14AC158")]
	public BlockIncomingObjectsFracturedPrefabPoolController()
	{
	}
}
[Token(Token = "0x200014B")]
public class BlockIncomingObjectsGameController : GameController
{
	[Token(Token = "0x200014C")]
	public enum FragmentingObjectsToBlockType
	{
		[Token(Token = "0x400072A")]
		NORMAL,
		[Token(Token = "0x400072B")]
		BLOCK_ONLY,
		[Token(Token = "0x400072C")]
		DODGE_ONLY,
		[Token(Token = "0x400072D")]
		LARGE_DODGE_ONLY,
		[Token(Token = "0x400072E")]
		FLAT_LARGE_DODGE_ONLY,
		[Token(Token = "0x400072F")]
		BONUS
	}

	[Token(Token = "0x200014D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69C9FC", Offset = "0x69C9FC")]
	private sealed class <mainGameModeLoop>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BlockIncomingObjectsGameController <>4__this;

		[Token(Token = "0x4000733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <maxObjectsAmount>5__2;

		[Token(Token = "0x17000060")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600059D")]
			[Address(RVA = "0x14BCD60", Offset = "0x14BCD60", VA = "0x14BCD60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000061")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600059F")]
			[Address(RVA = "0x14BCDA8", Offset = "0x14BCDA8", VA = "0x14BCDA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600059A")]
		[Address(RVA = "0x14BC580", Offset = "0x14BC580", VA = "0x14BC580")]
		[DebuggerHidden]
		public <mainGameModeLoop>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x600059B")]
		[Address(RVA = "0x14BC5AC", Offset = "0x14BC5AC", VA = "0x14BC5AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600059C")]
		[Address(RVA = "0x14BC5B0", Offset = "0x14BC5B0", VA = "0x14BC5B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600059E")]
		[Address(RVA = "0x14BCD68", Offset = "0x14BCD68", VA = "0x14BCD68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200014E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CA0C", Offset = "0x69CA0C")]
	private sealed class <dodgeOnlyDurationCountdown>d__34 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BlockIncomingObjectsGameController <>4__this;

		[Token(Token = "0x4000737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <time>5__2;

		[Token(Token = "0x17000062")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005A3")]
			[Address(RVA = "0x14BC530", Offset = "0x14BC530", VA = "0x14BC530", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000063")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005A5")]
			[Address(RVA = "0x14BC578", Offset = "0x14BC578", VA = "0x14BC578", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005A0")]
		[Address(RVA = "0x14BC43C", Offset = "0x14BC43C", VA = "0x14BC43C")]
		[DebuggerHidden]
		public <dodgeOnlyDurationCountdown>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x60005A1")]
		[Address(RVA = "0x14BC468", Offset = "0x14BC468", VA = "0x14BC468", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005A2")]
		[Address(RVA = "0x14BC46C", Offset = "0x14BC46C", VA = "0x14BC46C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005A4")]
		[Address(RVA = "0x14BC538", Offset = "0x14BC538", VA = "0x14BC538", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200014F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CA1C", Offset = "0x69CA1C")]
	private sealed class <startRapidFireCountdown>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400073A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BlockIncomingObjectsGameController <>4__this;

		[Token(Token = "0x400073B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <time>5__2;

		[Token(Token = "0x17000064")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005A9")]
			[Address(RVA = "0x14BD00C", Offset = "0x14BD00C", VA = "0x14BD00C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000065")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005AB")]
			[Address(RVA = "0x14BD054", Offset = "0x14BD054", VA = "0x14BD054", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005A6")]
		[Address(RVA = "0x14BCEF4", Offset = "0x14BCEF4", VA = "0x14BCEF4")]
		[DebuggerHidden]
		public <startRapidFireCountdown>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x60005A7")]
		[Address(RVA = "0x14BCF20", Offset = "0x14BCF20", VA = "0x14BCF20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005A8")]
		[Address(RVA = "0x14BCF24", Offset = "0x14BCF24", VA = "0x14BCF24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005AA")]
		[Address(RVA = "0x14BD014", Offset = "0x14BD014", VA = "0x14BD014", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000150")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CA2C", Offset = "0x69CA2C")]
	private sealed class <startSlerpOnlyMovementModeCountdown>d__40 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400073C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400073D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400073E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BlockIncomingObjectsGameController <>4__this;

		[Token(Token = "0x400073F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <time>5__2;

		[Token(Token = "0x17000066")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005AF")]
			[Address(RVA = "0x14BD174", Offset = "0x14BD174", VA = "0x14BD174", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000067")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005B1")]
			[Address(RVA = "0x14BD1BC", Offset = "0x14BD1BC", VA = "0x14BD1BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005AC")]
		[Address(RVA = "0x14BD05C", Offset = "0x14BD05C", VA = "0x14BD05C")]
		[DebuggerHidden]
		public <startSlerpOnlyMovementModeCountdown>d__40(int <>1__state)
		{
		}

		[Token(Token = "0x60005AD")]
		[Address(RVA = "0x14BD088", Offset = "0x14BD088", VA = "0x14BD088", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005AE")]
		[Address(RVA = "0x14BD08C", Offset = "0x14BD08C", VA = "0x14BD08C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005B0")]
		[Address(RVA = "0x14BD17C", Offset = "0x14BD17C", VA = "0x14BD17C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000151")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CA3C", Offset = "0x69CA3C")]
	private sealed class <startBlockOnlyCountdown>d__43 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BlockIncomingObjectsGameController <>4__this;

		[Token(Token = "0x4000743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <time>5__2;

		[Token(Token = "0x17000068")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005B5")]
			[Address(RVA = "0x14BCEA4", Offset = "0x14BCEA4", VA = "0x14BCEA4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000069")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005B7")]
			[Address(RVA = "0x14BCEEC", Offset = "0x14BCEEC", VA = "0x14BCEEC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005B2")]
		[Address(RVA = "0x14BCDB0", Offset = "0x14BCDB0", VA = "0x14BCDB0")]
		[DebuggerHidden]
		public <startBlockOnlyCountdown>d__43(int <>1__state)
		{
		}

		[Token(Token = "0x60005B3")]
		[Address(RVA = "0x14BCDDC", Offset = "0x14BCDDC", VA = "0x14BCDDC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005B4")]
		[Address(RVA = "0x14BCDE0", Offset = "0x14BCDE0", VA = "0x14BCDE0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005B6")]
		[Address(RVA = "0x14BCEAC", Offset = "0x14BCEAC", VA = "0x14BCEAC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000152")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CA4C", Offset = "0x69CA4C")]
	private sealed class <bonusObjectCoroutine>d__50 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BlockIncomingObjectsGameController <>4__this;

		[Token(Token = "0x1700006A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005BB")]
			[Address(RVA = "0x14BC3EC", Offset = "0x14BC3EC", VA = "0x14BC3EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005BD")]
			[Address(RVA = "0x14BC434", Offset = "0x14BC434", VA = "0x14BC434", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005B8")]
		[Address(RVA = "0x14BC070", Offset = "0x14BC070", VA = "0x14BC070")]
		[DebuggerHidden]
		public <bonusObjectCoroutine>d__50(int <>1__state)
		{
		}

		[Token(Token = "0x60005B9")]
		[Address(RVA = "0x14BC09C", Offset = "0x14BC09C", VA = "0x14BC09C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005BA")]
		[Address(RVA = "0x14BC0A0", Offset = "0x14BC0A0", VA = "0x14BC0A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005BC")]
		[Address(RVA = "0x14BC3F4", Offset = "0x14BC3F4", VA = "0x14BC3F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	protected DateTime lastObjectCreationTime;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	protected bool objectToBlockAlreadyCreated;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	protected List<GameObject> bonusGameObjects;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	protected bool performCountdown;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[SerializeField]
	private BlockIncomingObjectGameModeAudioController blockIncomingObjectGameModeAudioController;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	protected BlockIncomingObjectsParameterContainer blockIncomingObjectsParameterContainer;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[SerializeField]
	protected BlockIncomingObjectsAppearancePositionHelper blockIncomingObjectsAppearancePositionHelper;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	protected bool largeObjectActive;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x169")]
	private bool dodgeOnlyModeActive;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16A")]
	private bool rapidFireModeActive;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16B")]
	private bool blockOnlyModeActive;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private bool slerpOnlyObjectMovementModeActive;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16D")]
	private bool specialModeJustEnded;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private int specialGameModeTimeDuration;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[SerializeField]
	private BlockIncomingObjectsPoolController blockIncomingObjectsPoolController;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[SerializeField]
	private BlockIncomingObjectsFracturedPrefabPoolController fracturedPrefabPoolController;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[SerializeField]
	private GameObject[] playerTargetTransforms;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private Dictionary<FragmentingObjectsToBlockType, string> objectTypesStringMap;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private float playerHeight;

	[Token(Token = "0x4000728")]
	private const float DISTANCE_FROM_PLAYER_HEIGHT = 0.2f;

	[Token(Token = "0x1700005F")]
	public BlockIncomingObjectGameModeAudioController BlockIncomingObjectGameModeAudioController
	{
		[Token(Token = "0x6000572")]
		[Address(RVA = "0x14AC160", Offset = "0x14AC160", VA = "0x14AC160")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000573")]
		[Address(RVA = "0x14AC168", Offset = "0x14AC168", VA = "0x14AC168")]
		set
		{
		}
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0x14AC178", Offset = "0x14AC178", VA = "0x14AC178", Slot = "17")]
	protected override void specificSetupGameModeParameterContainer()
	{
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0x14AC2B0", Offset = "0x14AC2B0", VA = "0x14AC2B0", Slot = "32")]
	protected override void specificGameModeStartGame()
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x14AC704", Offset = "0x14AC704", VA = "0x14AC704")]
	public void setLargeObjectActive(bool input)
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0x14AC730", Offset = "0x14AC730", VA = "0x14AC730", Slot = "30")]
	protected override void resetOnStopGame()
	{
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0x14AC834", Offset = "0x14AC834", VA = "0x14AC834", Slot = "19")]
	protected override void resetOnRestartSpecific()
	{
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0x14AC81C", Offset = "0x14AC81C", VA = "0x14AC81C")]
	private void resetOnStopGameSpecial()
	{
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0x14AC920", Offset = "0x14AC920", VA = "0x14AC920", Slot = "5")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A505C", Offset = "0x6A505C")]
	protected override IEnumerator mainGameModeLoop()
	{
		return null;
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0x14AC998", Offset = "0x14AC998", VA = "0x14AC998", Slot = "59")]
	protected virtual bool specialModeActive()
	{
		return default(bool);
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0x14AC9C0", Offset = "0x14AC9C0", VA = "0x14AC9C0")]
	private bool checkIfStartDodgeOnly()
	{
		return default(bool);
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0x14ACA10", Offset = "0x14ACA10", VA = "0x14ACA10")]
	private void startDodgeOnly()
	{
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0x14ACA7C", Offset = "0x14ACA7C", VA = "0x14ACA7C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A50BC", Offset = "0x6A50BC")]
	private IEnumerator dodgeOnlyDurationCountdown()
	{
		return null;
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0x14ACAF4", Offset = "0x14ACAF4", VA = "0x14ACAF4")]
	private bool checkIfStartRapidFire()
	{
		return default(bool);
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0x14ACB44", Offset = "0x14ACB44", VA = "0x14ACB44")]
	private bool checkIfStartSlerpOnlyMovementMode()
	{
		return default(bool);
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0x14ACB98", Offset = "0x14ACB98", VA = "0x14ACB98")]
	private void startRapidFire()
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0x14ACC00", Offset = "0x14ACC00", VA = "0x14ACC00")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A511C", Offset = "0x6A511C")]
	private IEnumerator startRapidFireCountdown()
	{
		return null;
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0x14ACC78", Offset = "0x14ACC78", VA = "0x14ACC78")]
	private void startSlerpOnlyMovementMode()
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0x14ACCE0", Offset = "0x14ACCE0", VA = "0x14ACCE0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A517C", Offset = "0x6A517C")]
	private IEnumerator startSlerpOnlyMovementModeCountdown()
	{
		return null;
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0x14ACD58", Offset = "0x14ACD58", VA = "0x14ACD58")]
	private bool checkIfStartBlockOnly()
	{
		return default(bool);
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0x14ACDA8", Offset = "0x14ACDA8", VA = "0x14ACDA8")]
	private void startBlockOnlyMode()
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0x14ACE14", Offset = "0x14ACE14", VA = "0x14ACE14")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A51DC", Offset = "0x6A51DC")]
	private IEnumerator startBlockOnlyCountdown()
	{
		return null;
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0x14ACE8C", Offset = "0x14ACE8C", VA = "0x14ACE8C", Slot = "60")]
	protected virtual bool activateObjectToBlock()
	{
		return default(bool);
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0x14AD214", Offset = "0x14AD214", VA = "0x14AD214")]
	private GameObject getObjectToBlock(List<CoordinationCoachGameObject.ActivationType> validActivationTypes)
	{
		return null;
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0x14AD4F8", Offset = "0x14AD4F8", VA = "0x14AD4F8")]
	private bool canBlockOnlyObjectBeCreated()
	{
		return default(bool);
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0x14AD138", Offset = "0x14AD138", VA = "0x14AD138")]
	private GameObject getDodgeOnlyObject()
	{
		return null;
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0x14AD400", Offset = "0x14AD400", VA = "0x14AD400")]
	private GameObject activateLargeObject()
	{
		return null;
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0x14AD544", Offset = "0x14AD544", VA = "0x14AD544")]
	private bool playerCrouching()
	{
		return default(bool);
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0x14AD5B4", Offset = "0x14AD5B4", VA = "0x14AD5B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A523C", Offset = "0x6A523C")]
	private IEnumerator bonusObjectCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0x14AD62C", Offset = "0x14AD62C", VA = "0x14AD62C")]
	private bool activateBonusObject()
	{
		return default(bool);
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0x14ADA34", Offset = "0x14ADA34", VA = "0x14ADA34")]
	private void createTestObjectsAtTheLimitsOfValidCreationRanges()
	{
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0x14ADC58", Offset = "0x14ADC58", VA = "0x14ADC58")]
	private void createTestObjectsAtTheLimitsOfCreationRanges()
	{
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0x14ADD54", Offset = "0x14ADD54", VA = "0x14ADD54", Slot = "51")]
	public override void returnObjectToObjectPool(GameObject inputGameObject)
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0x14ADF8C", Offset = "0x14ADF8C", VA = "0x14ADF8C", Slot = "47")]
	public override void gameObjectReachedDisappearancePosition(GameObject gameObject)
	{
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0x14ADEAC", Offset = "0x14ADEAC", VA = "0x14ADEAC")]
	private bool isLargeObject(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0x14ADF9C", Offset = "0x14ADF9C", VA = "0x14ADF9C", Slot = "7")]
	protected override void playerEnergyZeroGameModeSpecific()
	{
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0x14AE07C", Offset = "0x14AE07C", VA = "0x14AE07C", Slot = "49")]
	protected override void gameDifficultyChangedInGameSpecific()
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0x14AE0B8", Offset = "0x14AE0B8", VA = "0x14AE0B8")]
	public BlockIncomingObjectsFracturedPrefabPoolController getFracturedPrefabController()
	{
		return null;
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0x14AE0C0", Offset = "0x14AE0C0", VA = "0x14AE0C0", Slot = "58")]
	public override void gameStoppedByPlayerSpecific(List<GameObject> activeObjects)
	{
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0x14AE200", Offset = "0x14AE200", VA = "0x14AE200")]
	public BlockIncomingObjectsGameController()
	{
	}
}
[Token(Token = "0x2000153")]
public class BlockIncomingObjectsParameterContainer : GameModeParameterContainer
{
	[Token(Token = "0x2000154")]
	public enum BLOCK_INCOMING_OBJECTS_SUB_GAME_MODES
	{
		[Token(Token = "0x4000766")]
		NORMAL,
		[Token(Token = "0x4000767")]
		BONUS_OBJECT
	}

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static BLOCK_INCOMING_OBJECTS_SUB_GAME_MODES currentGameMode;

	[Token(Token = "0x4000748")]
	private const string GAME_MODE_NAME = "BLOCK_INCOMING_OBJECTS";

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int SCENE_TO_LOAD_INDEX;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static float objectToBlockMovementSpeed;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static float minTimeBetweenObjectsToBlockSpawning;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static float maxTimeBetweenObjectsToBlockSpawning;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static int maxObjectsAmount;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static int maxAmountOfBonusObjects;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static float minTimeBetweenBonusObjectsSpawning;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static float maxTimeBetweenBonusObjectsSpawning;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static float objectToBlockSize;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static float largeDodgeOnlyObjectSize;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static float zDistanceFromPlayerObjectToBlock;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private static float zDistanceFromPlayerBonusObject;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static float sizeForLargeObjectCreationCalculation;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private static float xWidthForObjectToBlockCreation;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static float xWidthForBonusObjectCreation;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static float yHeightDownForObjectCreation;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static float yHeightUpForObjectCreation;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private static float bonusObjectSize;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static float bonusObjectTimeToDisappearance;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private static bool bonusObjectMoving;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static float bonusObjectMovementSpeed;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static float bonusObjectMaxMovementDistance;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected static float distanceToStopFollowingTarget;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private static float distanceLargeObjectFromNormalObjectCreationPos;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool normalStrafingAllowed;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static float tutorialObjectToBlockMovementSpeed;

	[Token(Token = "0x4000763")]
	public const float MIN_Z_LIMITS = -10f;

	[Token(Token = "0x4000764")]
	public const float MAX_Z_LIMITS = 10f;

	[Token(Token = "0x1700006C")]
	public static float ObjectToBlockMovementSpeed
	{
		[Token(Token = "0x60005C2")]
		[Address(RVA = "0x14AF1E4", Offset = "0x14AF1E4", VA = "0x14AF1E4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60005C3")]
		[Address(RVA = "0x14AF248", Offset = "0x14AF248", VA = "0x14AF248")]
		set
		{
		}
	}

	[Token(Token = "0x1700006D")]
	public static float MinTimeBetweenObjectsToBlockSpawning
	{
		[Token(Token = "0x60005C4")]
		[Address(RVA = "0x14AF2B8", Offset = "0x14AF2B8", VA = "0x14AF2B8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60005C5")]
		[Address(RVA = "0x14AF31C", Offset = "0x14AF31C", VA = "0x14AF31C")]
		set
		{
		}
	}

	[Token(Token = "0x1700006E")]
	public static float MaxTimeBetweenObjectsToBlockSpawning
	{
		[Token(Token = "0x60005C6")]
		[Address(RVA = "0x14AF38C", Offset = "0x14AF38C", VA = "0x14AF38C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60005C7")]
		[Address(RVA = "0x14AF3F0", Offset = "0x14AF3F0", VA = "0x14AF3F0")]
		set
		{
		}
	}

	[Token(Token = "0x1700006F")]
	public static float ObjectSize
	{
		[Token(Token = "0x60005C8")]
		[Address(RVA = "0x14AF460", Offset = "0x14AF460", VA = "0x14AF460")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60005C9")]
		[Address(RVA = "0x14AF4C4", Offset = "0x14AF4C4", VA = "0x14AF4C4")]
		set
		{
		}
	}

	[Token(Token = "0x17000070")]
	public static float ZDistanceFromPlayerObjectToBlock
	{
		[Token(Token = "0x60005CA")]
		[Address(RVA = "0x14AF534", Offset = "0x14AF534", VA = "0x14AF534")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60005CB")]
		[Address(RVA = "0x14AF598", Offset = "0x14AF598", VA = "0x14AF598")]
		set
		{
		}
	}

	[Token(Token = "0x17000071")]
	public static float XWidthForObjectToBlockCreation
	{
		[Token(Token = "0x60005CC")]
		[Address(RVA = "0x14AF608", Offset = "0x14AF608", VA = "0x14AF608")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60005CD")]
		[Address(RVA = "0x14AF66C", Offset = "0x14AF66C", VA = "0x14AF66C")]
		set
		{
		}
	}

	[Token(Token = "0x17000072")]
	public static float YHeightDownForObjectCreation
	{
		[Token(Token = "0x60005CE")]
		[Address(RVA = "0x14AF6DC", Offset = "0x14AF6DC", VA = "0x14AF6DC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60005CF")]
		[Address(RVA = "0x14AF740", Offset = "0x14AF740", VA = "0x14AF740")]
		set
		{
		}
	}

	[Token(Token = "0x17000073")]
	public static float YHeightUpForObjectCreation
	{
		[Token(Token = "0x60005D0")]
		[Address(RVA = "0x14AF7B0", Offset = "0x14AF7B0", VA = "0x14AF7B0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60005D1")]
		[Address(RVA = "0x14AF814", Offset = "0x14AF814", VA = "0x14AF814")]
		set
		{
		}
	}

	[Token(Token = "0x17000074")]
	public static bool BonusObjectMoving
	{
		[Token(Token = "0x60005D2")]
		[Address(RVA = "0x14AF884", Offset = "0x14AF884", VA = "0x14AF884")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005D3")]
		[Address(RVA = "0x14AF8E8", Offset = "0x14AF8E8", VA = "0x14AF8E8")]
		set
		{
		}
	}

	[Token(Token = "0x17000075")]
	public static float BonusObjectSize
	{
		[Token(Token = "0x60005D4")]
		[Address(RVA = "0x14AF954", Offset = "0x14AF954", VA = "0x14AF954")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60005D5")]
		[Address(RVA = "0x14AF9B8", Offset = "0x14AF9B8", VA = "0x14AF9B8")]
		set
		{
		}
	}

	[Token(Token = "0x17000076")]
	public static float BonusObjectMovementSpeed
	{
		[Token(Token = "0x60005D6")]
		[Address(RVA = "0x14AFA28", Offset = "0x14AFA28", VA = "0x14AFA28")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60005D7")]
		[Address(RVA = "0x14AFA8C", Offset = "0x14AFA8C", VA = "0x14AFA8C")]
		set
		{
		}
	}

	[Token(Token = "0x17000077")]
	public static float MaxSecondsBetweenBonusObjectsSpawning
	{
		[Token(Token = "0x60005D8")]
		[Address(RVA = "0x14AFAFC", Offset = "0x14AFAFC", VA = "0x14AFAFC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60005D9")]
		[Address(RVA = "0x14AFB60", Offset = "0x14AFB60", VA = "0x14AFB60")]
		set
		{
		}
	}

	[Token(Token = "0x17000078")]
	public static float BonusObjectTimeToDisappearance
	{
		[Token(Token = "0x60005DA")]
		[Address(RVA = "0x14AFBD0", Offset = "0x14AFBD0", VA = "0x14AFBD0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60005DB")]
		[Address(RVA = "0x14AFC34", Offset = "0x14AFC34", VA = "0x14AFC34")]
		set
		{
		}
	}

	[Token(Token = "0x17000079")]
	public static float LargeDodgeOnlyObjectSize
	{
		[Token(Token = "0x60005DC")]
		[Address(RVA = "0x14AFCA4", Offset = "0x14AFCA4", VA = "0x14AFCA4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60005DD")]
		[Address(RVA = "0x14AFD08", Offset = "0x14AFD08", VA = "0x14AFD08")]
		set
		{
		}
	}

	[Token(Token = "0x1700007A")]
	public static float DistanceToStopFollowingTarget
	{
		[Token(Token = "0x60005DE")]
		[Address(RVA = "0x14AFD78", Offset = "0x14AFD78", VA = "0x14AFD78")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60005DF")]
		[Address(RVA = "0x14AFDDC", Offset = "0x14AFDDC", VA = "0x14AFDDC")]
		set
		{
		}
	}

	[Token(Token = "0x1700007B")]
	public bool NormalStrafingAllowed
	{
		[Token(Token = "0x60005E0")]
		[Address(RVA = "0x14AFE4C", Offset = "0x14AFE4C", VA = "0x14AFE4C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005E1")]
		[Address(RVA = "0x14AFE54", Offset = "0x14AFE54", VA = "0x14AFE54")]
		set
		{
		}
	}

	[Token(Token = "0x1700007C")]
	public static float ZDistanceFromPlayerBonusObject
	{
		[Token(Token = "0x60005E2")]
		[Address(RVA = "0x14AFE60", Offset = "0x14AFE60", VA = "0x14AFE60")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60005E3")]
		[Address(RVA = "0x14AFEC4", Offset = "0x14AFEC4", VA = "0x14AFEC4")]
		set
		{
		}
	}

	[Token(Token = "0x1700007D")]
	public static float MinTimeBetweenBonusObjectsSpawning
	{
		[Token(Token = "0x60005E4")]
		[Address(RVA = "0x14AFF34", Offset = "0x14AFF34", VA = "0x14AFF34")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60005E5")]
		[Address(RVA = "0x14AFF98", Offset = "0x14AFF98", VA = "0x14AFF98")]
		set
		{
		}
	}

	[Token(Token = "0x1700007E")]
	public static int MaxAmountOfBonusObjects
	{
		[Token(Token = "0x60005E6")]
		[Address(RVA = "0x14B0008", Offset = "0x14B0008", VA = "0x14B0008")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60005E7")]
		[Address(RVA = "0x14B006C", Offset = "0x14B006C", VA = "0x14B006C")]
		set
		{
		}
	}

	[Token(Token = "0x1700007F")]
	public static float XWidthForBonusObjectCreation
	{
		[Token(Token = "0x60005E8")]
		[Address(RVA = "0x14B00D4", Offset = "0x14B00D4", VA = "0x14B00D4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60005E9")]
		[Address(RVA = "0x14B0138", Offset = "0x14B0138", VA = "0x14B0138")]
		set
		{
		}
	}

	[Token(Token = "0x17000080")]
	public BLOCK_INCOMING_OBJECTS_SUB_GAME_MODES CurrentGameMode
	{
		[Token(Token = "0x60005EA")]
		[Address(RVA = "0x14B01A8", Offset = "0x14B01A8", VA = "0x14B01A8")]
		get
		{
			return default(BLOCK_INCOMING_OBJECTS_SUB_GAME_MODES);
		}
		[Token(Token = "0x60005EB")]
		[Address(RVA = "0x14B020C", Offset = "0x14B020C", VA = "0x14B020C")]
		set
		{
		}
	}

	[Token(Token = "0x17000081")]
	public static float DistanceLargeObjectFromNormalObjectCreationPos
	{
		[Token(Token = "0x60005EC")]
		[Address(RVA = "0x14B0274", Offset = "0x14B0274", VA = "0x14B0274")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60005ED")]
		[Address(RVA = "0x14B02D8", Offset = "0x14B02D8", VA = "0x14B02D8")]
		set
		{
		}
	}

	[Token(Token = "0x17000082")]
	public static float SizeForLargeObjectCreationCalculation
	{
		[Token(Token = "0x60005EE")]
		[Address(RVA = "0x14B0348", Offset = "0x14B0348", VA = "0x14B0348")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60005EF")]
		[Address(RVA = "0x14B03AC", Offset = "0x14B03AC", VA = "0x14B03AC")]
		set
		{
		}
	}

	[Token(Token = "0x17000083")]
	public static float BonusObjectMaxMovementDistance
	{
		[Token(Token = "0x60005F0")]
		[Address(RVA = "0x14B041C", Offset = "0x14B041C", VA = "0x14B041C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60005F1")]
		[Address(RVA = "0x14B0480", Offset = "0x14B0480", VA = "0x14B0480")]
		set
		{
		}
	}

	[Token(Token = "0x17000084")]
	public static float TutorialObjectToBlockMovementSpeed
	{
		[Token(Token = "0x60005F2")]
		[Address(RVA = "0x14B04F0", Offset = "0x14B04F0", VA = "0x14B04F0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60005F3")]
		[Address(RVA = "0x14B0554", Offset = "0x14B0554", VA = "0x14B0554")]
		set
		{
		}
	}

	[Token(Token = "0x17000085")]
	public static int MaxObjectsAmount
	{
		[Token(Token = "0x60005F4")]
		[Address(RVA = "0x14B05C4", Offset = "0x14B05C4", VA = "0x14B05C4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60005F5")]
		[Address(RVA = "0x14B0628", Offset = "0x14B0628", VA = "0x14B0628")]
		set
		{
		}
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0x14AE2E0", Offset = "0x14AE2E0", VA = "0x14AE2E0", Slot = "4")]
	public override void setGameDifficulty(GameModeValues.GameAndSubModeDifficulty difficulty)
	{
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0x14AEDB8", Offset = "0x14AEDB8", VA = "0x14AEDB8")]
	private void setObjectToBlockMovementSpeed(GameModeValues.GameAndSubModeDifficulty difficulty)
	{
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0x14AEEFC", Offset = "0x14AEEFC", VA = "0x14AEEFC")]
	private void setMaxObjectsAmount(GameModeValues.GameAndSubModeDifficulty difficulty)
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x14AEB84", Offset = "0x14AEB84", VA = "0x14AEB84")]
	private void setTimeBetweenObjectSpawn(GameModeValues.GameAndSubModeDifficulty difficulty)
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0x14B0690", Offset = "0x14B0690", VA = "0x14B0690", Slot = "9")]
	public override int getSceneToLoadIndex()
	{
		return default(int);
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0x14B0698", Offset = "0x14B0698", VA = "0x14B0698", Slot = "6")]
	public override string getGameModeName()
	{
		return null;
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0x14B06DC", Offset = "0x14B06DC", VA = "0x14B06DC", Slot = "8")]
	public override string getGameModeNameWithSubModes()
	{
		return null;
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0x14B0984", Offset = "0x14B0984", VA = "0x14B0984", Slot = "7")]
	public override string getSubGameModeName()
	{
		return null;
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0x14B0A44", Offset = "0x14B0A44", VA = "0x14B0A44")]
	public BLOCK_INCOMING_OBJECTS_SUB_GAME_MODES getLastUsedSubGameMode()
	{
		return default(BLOCK_INCOMING_OBJECTS_SUB_GAME_MODES);
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0x14B0B08", Offset = "0x14B0B08", VA = "0x14B0B08", Slot = "5")]
	public override void loadLastUsedGameMode()
	{
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0x14B0C54", Offset = "0x14B0C54", VA = "0x14B0C54")]
	public BlockIncomingObjectsParameterContainer()
	{
	}
}
[Token(Token = "0x2000155")]
public class BlockIncomingObjectsPoolController : CoordinationCoachPoolController
{
	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private GameObject[] playerTargetTransforms;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private BlockIncomingObjectsFracturedPrefabPoolController blockIncomingObjectsFracturedPrefabPoolController;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private BlockIncomingObjectsAppearancePositionHelper blockIncomingObjectsObjectCreationPositionHelper;

	[Token(Token = "0x400076B")]
	public const int EFFECT_DURATION = 3;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private PlayAreaService playAreaService;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected float[] playAreaBoundary;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool playAreaCorrectForObjectSize;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private List<CoordinationCoachGameObject.MovementAxis> movementAxises;

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0x14B0E20", Offset = "0x14B0E20", VA = "0x14B0E20", Slot = "4")]
	protected override void performSetup()
	{
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0x14B0EB4", Offset = "0x14B0EB4", VA = "0x14B0EB4", Slot = "29")]
	protected override void createAdditionalObjectsPool()
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0x14B0FD8", Offset = "0x14B0FD8", VA = "0x14B0FD8", Slot = "9")]
	protected override void performSetupOnAdditionalObject(GameObject additionalGameObject)
	{
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0x14B1048", Offset = "0x14B1048", VA = "0x14B1048", Slot = "19")]
	protected override void performSetupOnObjectOnInitialization(GameObject instantiatedPrefab, int i)
	{
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0x14B1424", Offset = "0x14B1424", VA = "0x14B1424")]
	private void setupAdditionalObject(GameObject instantiatedGameObject)
	{
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0x14B1764", Offset = "0x14B1764", VA = "0x14B1764", Slot = "21")]
	protected override void performSetupWhenCreatingExtraObjects(GameObject instantiatedPrefab, int i, CoordinationCoachGameObject.ActivationType activationType)
	{
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0x14B1208", Offset = "0x14B1208", VA = "0x14B1208")]
	private void performGenericSetupOnGameObject(GameObject instantiatedPrefab, BlockIncomingObjectsGameController.FragmentingObjectsToBlockType blockObjectsType, float movementSpeed, float objectToBlockSize, int i, CoordinationCoachGameObject.ActivationType activationType)
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0x14B179C", Offset = "0x14B179C", VA = "0x14B179C", Slot = "23")]
	protected override void performSetupOnObjectDequeue(GameObject queueGameObject, CoordinationCoachGameObject.ActivationType activationType)
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0x14B18DC", Offset = "0x14B18DC", VA = "0x14B18DC", Slot = "28")]
	protected override void performOnReturnOfObjectToPool(GameObject returnToPoolObject)
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0x14B1A24", Offset = "0x14B1A24", VA = "0x14B1A24")]
	public BlockIncomingObjectsPoolController()
	{
	}
}
[Token(Token = "0x2000156")]
public class BlockIncomingObjectsScoreKeeper : ScoreKeeper
{
	[Token(Token = "0x4000770")]
	private const string SCRIPT_NAME = "BlockIncomingObjectsScoreKeeper";

	[Token(Token = "0x6000608")]
	[Address(RVA = "0x14B1AFC", Offset = "0x14B1AFC", VA = "0x14B1AFC")]
	public BlockIncomingObjectsScoreKeeper()
	{
	}
}
[Token(Token = "0x2000157")]
public class BlockIncomingObjectsSphereGameObject : FragmentingObjectToBlock
{
	[Token(Token = "0x2000158")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CA5C", Offset = "0x69CA5C")]
	private sealed class <activeTimeCountdownCoroutine>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x4000775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BlockIncomingObjectsSphereGameObject <>4__this;

		[Token(Token = "0x17000087")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000629")]
			[Address(RVA = "0x14BD2DC", Offset = "0x14BD2DC", VA = "0x14BD2DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000088")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600062B")]
			[Address(RVA = "0x14BD324", Offset = "0x14BD324", VA = "0x14BD324", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000626")]
		[Address(RVA = "0x14BD1C4", Offset = "0x14BD1C4", VA = "0x14BD1C4")]
		[DebuggerHidden]
		public <activeTimeCountdownCoroutine>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000627")]
		[Address(RVA = "0x14BD1F0", Offset = "0x14BD1F0", VA = "0x14BD1F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000628")]
		[Address(RVA = "0x14BD1F4", Offset = "0x14BD1F4", VA = "0x14BD1F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600062A")]
		[Address(RVA = "0x14BD2E4", Offset = "0x14BD2E4", VA = "0x14BD2E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000771")]
	public const float ADDITIONAL_Z_FOR_APPEARANCE = 0.4f;

	[Token(Token = "0x17000086")]
	public BlockIncomingObjectsGameController BlockIncomingObjectsGameController
	{
		[Token(Token = "0x6000609")]
		[Address(RVA = "0x14B1B04", Offset = "0x14B1B04", VA = "0x14B1B04")]
		get
		{
			return null;
		}
		[Token(Token = "0x600060A")]
		[Address(RVA = "0x14B1B0C", Offset = "0x14B1B0C", VA = "0x14B1B0C")]
		set
		{
		}
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0x14B1B1C", Offset = "0x14B1B1C", VA = "0x14B1B1C")]
	public void startCountdown()
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0x14B1BE4", Offset = "0x14B1BE4", VA = "0x14B1BE4")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0x14B1D28", Offset = "0x14B1D28", VA = "0x14B1D28", Slot = "100")]
	protected override void collidedWithOtherGameObject(Collider collider)
	{
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0x14B1DF0", Offset = "0x14B1DF0", VA = "0x14B1DF0", Slot = "94")]
	protected override void specificOnCollidedWithOtherObject()
	{
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0x14B1B98", Offset = "0x14B1B98", VA = "0x14B1B98")]
	public void startCountdownToDeactivation()
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0x14B1DFC", Offset = "0x14B1DFC", VA = "0x14B1DFC", Slot = "112")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A547C", Offset = "0x6A547C")]
	protected override IEnumerator activeTimeCountdownCoroutine(float duration)
	{
		return null;
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0x14B1E84", Offset = "0x14B1E84", VA = "0x14B1E84", Slot = "103")]
	public override void resetOnReturnToObjectPool()
	{
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0x14B1EE0", Offset = "0x14B1EE0", VA = "0x14B1EE0", Slot = "121")]
	public virtual void collidedWithPlayer(Collider collider, bool touchedByPlayer)
	{
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0x14B2064", Offset = "0x14B2064", VA = "0x14B2064", Slot = "105")]
	protected override void playerScoredByTouchingObject(PlayerHandController playerHandController)
	{
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0x14B20D0", Offset = "0x14B20D0", VA = "0x14B20D0", Slot = "78")]
	public override void prePerformMovement()
	{
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0x14B2130", Offset = "0x14B2130", VA = "0x14B2130", Slot = "82")]
	protected override void setNewLerpPosition()
	{
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0x14B21B8", Offset = "0x14B21B8", VA = "0x14B21B8", Slot = "27")]
	protected override void calculateBezierCurvePoints()
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0x14AD840", Offset = "0x14AD840", VA = "0x14AD840")]
	public void performAppearance(Vector3 appearanceDestination, float timeToDisappearance)
	{
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0x14B2258", Offset = "0x14B2258", VA = "0x14B2258", Slot = "62")]
	protected override float getDisappearanceMovementDistance()
	{
		return default(float);
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0x14B2264", Offset = "0x14B2264", VA = "0x14B2264", Slot = "61")]
	protected override void beforeDisappearanceStart(Transform inputTransform)
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0x14B2268", Offset = "0x14B2268", VA = "0x14B2268", Slot = "60")]
	protected override GameObject getDisappearanceEffect()
	{
		return null;
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0x14B2270", Offset = "0x14B2270", VA = "0x14B2270", Slot = "74")]
	protected override void disappearancePositionReached()
	{
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0x14B237C", Offset = "0x14B237C", VA = "0x14B237C", Slot = "67")]
	protected override float getWormHoleScaleMultiplier()
	{
		return default(float);
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0x14B2384", Offset = "0x14B2384", VA = "0x14B2384", Slot = "56")]
	public override void startDisappearance(float scale)
	{
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0x14B23C4", Offset = "0x14B23C4", VA = "0x14B23C4", Slot = "63")]
	protected override Vector3 getDisappearanceWormHolePosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0x14B23E8", Offset = "0x14B23E8", VA = "0x14B23E8", Slot = "72")]
	protected override void appearancePositionReached()
	{
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0x14B243C", Offset = "0x14B243C", VA = "0x14B243C")]
	public void prepareForAppearance(Vector3 appearancePos)
	{
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0x14B2480", Offset = "0x14B2480", VA = "0x14B2480")]
	public void appearancePositionReachedTest()
	{
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0x14B2490", Offset = "0x14B2490", VA = "0x14B2490", Slot = "44")]
	protected override void setVectorOfOriginalPosition()
	{
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0x14B24CC", Offset = "0x14B24CC", VA = "0x14B24CC", Slot = "98")]
	public override float getObjectScale()
	{
		return default(float);
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0x14B2568", Offset = "0x14B2568", VA = "0x14B2568", Slot = "111")]
	protected override void onUnPausedSpecific(bool appearanceWasInProgress)
	{
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0x14B2580", Offset = "0x14B2580", VA = "0x14B2580")]
	public BlockIncomingObjectsSphereGameObject()
	{
	}
}
[Token(Token = "0x2000159")]
public class BlockIncomingObjectsTutorialController : TutorialController
{
	[Token(Token = "0x200015A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CA6C", Offset = "0x69CA6C")]
	private sealed class <performGameModeSpecificTutorialSteps>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400077F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BlockIncomingObjectsTutorialController <>4__this;

		[Token(Token = "0x4000782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool startingBySkip;

		[Token(Token = "0x17000089")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000635")]
			[Address(RVA = "0x14BF0D8", Offset = "0x14BF0D8", VA = "0x14BF0D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000637")]
			[Address(RVA = "0x14BF120", Offset = "0x14BF120", VA = "0x14BF120", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000632")]
		[Address(RVA = "0x14BD32C", Offset = "0x14BD32C", VA = "0x14BD32C")]
		[DebuggerHidden]
		public <performGameModeSpecificTutorialSteps>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000633")]
		[Address(RVA = "0x14BD358", Offset = "0x14BD358", VA = "0x14BD358", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000634")]
		[Address(RVA = "0x14BD35C", Offset = "0x14BD35C", VA = "0x14BD35C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000636")]
		[Address(RVA = "0x14BF0E0", Offset = "0x14BF0E0", VA = "0x14BF0E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[SerializeField]
	private TutorialObjectPositioningHelper tutorialHelper;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[SerializeField]
	private BlockIncomingObjectsFracturedPrefabPoolController fracturedPrefabPoolController;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[SerializeField]
	private GameObject tutorialNormalBlockIncoming;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[SerializeField]
	private GameObject tutorialDodgeOnlyObject;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[SerializeField]
	private GameObject tutorialLargeDodgeOnlyObject;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[SerializeField]
	private GameObject tutorialFlatLargeDodgeOnlyObject;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[SerializeField]
	private GameObject tutorialBlockOnlyObjectToBlock;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[SerializeField]
	private GameObject tutorialBonusObject;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[SerializeField]
	private StartTutorialStepPerformOnInteraction startTutorialStepPerformOnInteraction;

	[Token(Token = "0x600062C")]
	[Address(RVA = "0x14B2588", Offset = "0x14B2588", VA = "0x14B2588", Slot = "8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A552C", Offset = "0x6A552C")]
	protected override IEnumerator performGameModeSpecificTutorialSteps(bool startingBySkip)
	{
		return null;
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0x14B2614", Offset = "0x14B2614", VA = "0x14B2614", Slot = "9")]
	public override void startTutorialStep()
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0x14B28FC", Offset = "0x14B28FC", VA = "0x14B28FC", Slot = "16")]
	protected override void disappearObject(GameObject tutorialObject)
	{
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0x14B2BE0", Offset = "0x14B2BE0", VA = "0x14B2BE0", Slot = "21")]
	protected override void objectReachedDisappearancePositionSpecific(GameObject gameObjectReachedDestination)
	{
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0x14B2C04", Offset = "0x14B2C04", VA = "0x14B2C04")]
	public BlockIncomingObjectsFracturedPrefabPoolController getFracturedPrefabPoolController()
	{
		return null;
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0x14B2C0C", Offset = "0x14B2C0C", VA = "0x14B2C0C")]
	public BlockIncomingObjectsTutorialController()
	{
	}
}
[Token(Token = "0x200015B")]
public class BlockIncomingObjectsTutorialObjectCoordinationCoachPoolController : TutorialObjectCoordinationCoachPoolController
{
	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private BlockIncomingObjectsFracturedPrefabPoolController blockIncomingObjectsFracturedPrefabPoolController;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	protected GameObject[] inputTargetTransforms;

	[Token(Token = "0x6000638")]
	[Address(RVA = "0x14B2C14", Offset = "0x14B2C14", VA = "0x14B2C14", Slot = "30")]
	protected override void performAdditionalTutorialObjectSetup(GameObject instantiatedPrefab)
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0x14B2E60", Offset = "0x14B2E60", VA = "0x14B2E60", Slot = "23")]
	protected override void performSetupOnObjectDequeue(GameObject queueGameObject, CoordinationCoachGameObject.ActivationType activationType)
	{
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0x14B2F98", Offset = "0x14B2F98", VA = "0x14B2F98", Slot = "28")]
	protected override void performOnReturnOfObjectToPool(GameObject returnToPoolObject)
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0x14B30D4", Offset = "0x14B30D4", VA = "0x14B30D4")]
	public BlockIncomingObjectsTutorialObjectCoordinationCoachPoolController()
	{
	}
}
[Token(Token = "0x200015C")]
public class BlockObjectsTimeKeeper : MonoBehaviour
{
	[Token(Token = "0x600063C")]
	[Address(RVA = "0x14B30DC", Offset = "0x14B30DC", VA = "0x14B30DC")]
	private void Start()
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0x14B30E0", Offset = "0x14B30E0", VA = "0x14B30E0")]
	public BlockObjectsTimeKeeper()
	{
	}
}
[Token(Token = "0x200015D")]
public class DodgeMovement : MonoBehaviour
{
	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject objectToDodge;

	[Token(Token = "0x600063E")]
	[Address(RVA = "0x95C434", Offset = "0x95C434", VA = "0x95C434")]
	private void Update()
	{
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0x95C504", Offset = "0x95C504", VA = "0x95C504")]
	public DodgeMovement()
	{
	}
}
[Token(Token = "0x200015E")]
public class NormalObjectToBlockAppearanceEffectColorChanger : MonoBehaviour, UpdateAppearanceEffectColorInterface
{
	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected ParticleSystem outerLayerParticleSystem;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected ParticleSystem innerLayerParticleSystem;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected ParticleSystem.MainModule outerMainModule;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected ParticleSystem.MainModule innerMainModule;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected Color anyHandColorOuter;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected Color anyHandColorInner;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	protected Color leftHandOnlyColorOuter;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	protected Color leftHandOnlyColorInner;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	protected Color rightHandOnlyColorOuter;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	protected Color rightHandOnlyColorInner;

	[Token(Token = "0x6000640")]
	[Address(RVA = "0xC7DBD4", Offset = "0xC7DBD4", VA = "0xC7DBD4")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0xC7DC90", Offset = "0xC7DC90", VA = "0xC7DC90", Slot = "5")]
	protected virtual void setupAdditionalModules()
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0xC7DC94", Offset = "0xC7DC94", VA = "0xC7DC94", Slot = "4")]
	public void updateAppearanceEffectColors(CoordinationCoachGameObject.ActivationType activationType)
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0xC7DD6C", Offset = "0xC7DD6C", VA = "0xC7DD6C", Slot = "6")]
	protected virtual void setupAdditionalColors(CoordinationCoachGameObject.ActivationType activationType)
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0xC7DD70", Offset = "0xC7DD70", VA = "0xC7DD70", Slot = "7")]
	protected virtual Color getOuterColor(CoordinationCoachGameObject.ActivationType activationType)
	{
		return default(Color);
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0xC7DDCC", Offset = "0xC7DDCC", VA = "0xC7DDCC", Slot = "8")]
	protected virtual Color getInnerColor(CoordinationCoachGameObject.ActivationType activationType)
	{
		return default(Color);
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0xC7DE28", Offset = "0xC7DE28", VA = "0xC7DE28")]
	public NormalObjectToBlockAppearanceEffectColorChanger()
	{
	}
}
[Token(Token = "0x200015F")]
public static class DEPRECATEDBlockIncomingObjectParameterContainer
{
}
[Token(Token = "0x2000160")]
public class ObjectToBlockFracturedObjectInfo : MonoBehaviour, ObjectInfoInterface
{
	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private BlockIncomingObjectsGameController.FragmentingObjectsToBlockType fragmentingObjectType;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string objectType;

	[Token(Token = "0x6000647")]
	[Address(RVA = "0xACB274", Offset = "0xACB274", VA = "0xACB274")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0xACB304", Offset = "0xACB304", VA = "0xACB304")]
	public void setObjectType()
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0xACB394", Offset = "0xACB394", VA = "0xACB394", Slot = "4")]
	public string getObjectType()
	{
		return null;
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0xACB39C", Offset = "0xACB39C", VA = "0xACB39C", Slot = "7")]
	public virtual float getObjectScale()
	{
		return default(float);
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0xACB438", Offset = "0xACB438", VA = "0xACB438", Slot = "6")]
	public float[] getRendererBounds()
	{
		return null;
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0xACB4B4", Offset = "0xACB4B4", VA = "0xACB4B4")]
	public ObjectToBlockFracturedObjectInfo()
	{
	}
}
[Token(Token = "0x2000161")]
public class ObjectToBlockFracturedPartsController : FracturedPartsController
{
	[Token(Token = "0x600064D")]
	[Address(RVA = "0xACB510", Offset = "0xACB510", VA = "0xACB510")]
	public ObjectToBlockFracturedPartsController()
	{
	}
}
[Token(Token = "0x2000162")]
public class OculusRiftBlockIncomingObjectsGameController : BlockIncomingObjectsGameController
{
	[Token(Token = "0x600064E")]
	[Address(RVA = "0xACDC60", Offset = "0xACDC60", VA = "0xACDC60")]
	public OculusRiftBlockIncomingObjectsGameController()
	{
	}
}
[Token(Token = "0x2000163")]
public class OculusRiftBlockIncomingObjectsTutorialController : BlockIncomingObjectsTutorialController
{
	[Token(Token = "0x600064F")]
	[Address(RVA = "0xACDC68", Offset = "0xACDC68", VA = "0xACDC68")]
	public OculusRiftBlockIncomingObjectsTutorialController()
	{
	}
}
[Token(Token = "0x2000164")]
public class BlockOnlyObjectToBlock : ObjectToBlock
{
	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	[SerializeField]
	private GameObject body;

	[Token(Token = "0x6000650")]
	[Address(RVA = "0x14B30E8", Offset = "0x14B30E8", VA = "0x14B30E8", Slot = "124")]
	protected override bool isPerformBehindTargetCheckNecessary()
	{
		return default(bool);
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0x14B30F0", Offset = "0x14B30F0", VA = "0x14B30F0", Slot = "99")]
	public override void calculateRendererBounds()
	{
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0x14B3254", Offset = "0x14B3254", VA = "0x14B3254", Slot = "134")]
	protected override void fakeTargetPositionReached()
	{
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0x14B3264", Offset = "0x14B3264", VA = "0x14B3264")]
	public BlockOnlyObjectToBlock()
	{
	}
}
[Token(Token = "0x2000165")]
public class DodgeOnlyAppearanceEffectColorChanger : MonoBehaviour, UpdateAppearanceEffectColorInterface
{
	[Token(Token = "0x6000654")]
	[Address(RVA = "0x95C50C", Offset = "0x95C50C", VA = "0x95C50C", Slot = "4")]
	public void updateAppearanceEffectColors(CoordinationCoachGameObject.ActivationType activationType)
	{
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0x95C510", Offset = "0x95C510", VA = "0x95C510")]
	public DodgeOnlyAppearanceEffectColorChanger()
	{
	}
}
[Token(Token = "0x2000166")]
public class DodgeOnlyFragmentingObjectToBlock : ObjectToBlock
{
	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	[SerializeField]
	protected GameObject body;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	[SerializeField]
	protected GameObject spike;

	[Token(Token = "0x6000656")]
	[Address(RVA = "0x95C518", Offset = "0x95C518", VA = "0x95C518", Slot = "119")]
	public override bool isDodgeOnly()
	{
		return default(bool);
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0x95C520", Offset = "0x95C520", VA = "0x95C520", Slot = "40")]
	protected override void touchedByPlayerHand(Collider collider)
	{
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0x95C694", Offset = "0x95C694", VA = "0x95C694", Slot = "37")]
	protected override Material getActivationTypeMaterial()
	{
		return null;
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0x95C69C", Offset = "0x95C69C", VA = "0x95C69C", Slot = "95")]
	protected override GameObject getAppearanceEffect(ActivationType activationType)
	{
		return null;
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0x95C6A4", Offset = "0x95C6A4", VA = "0x95C6A4", Slot = "117")]
	protected override GameObject getPrefabToInstantiateOnDestruction(ActivationType activationType)
	{
		return null;
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0x95C6AC", Offset = "0x95C6AC", VA = "0x95C6AC", Slot = "98")]
	public override float getObjectScale()
	{
		return default(float);
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0x95C748", Offset = "0x95C748", VA = "0x95C748", Slot = "99")]
	public override void calculateRendererBounds()
	{
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0x95C944", Offset = "0x95C944", VA = "0x95C944")]
	public DodgeOnlyFragmentingObjectToBlock()
	{
	}
}
[Token(Token = "0x2000167")]
public class FlatLargeDodgeOnlyFragmentingObjectToBlock : LargeDodgeOnlyFragmentingObjectToBlock
{
	[Token(Token = "0x600065E")]
	[Address(RVA = "0x96A6BC", Offset = "0x96A6BC", VA = "0x96A6BC", Slot = "122")]
	protected override void setRandomTargetTransform()
	{
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0x96A714", Offset = "0x96A714", VA = "0x96A714", Slot = "99")]
	public override void calculateRendererBounds()
	{
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0x96A908", Offset = "0x96A908", VA = "0x96A908", Slot = "125")]
	protected override void updateBeepControllerTarget()
	{
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0x96A970", Offset = "0x96A970", VA = "0x96A970")]
	public FlatLargeDodgeOnlyFragmentingObjectToBlock()
	{
	}
}
[Token(Token = "0x2000168")]
public class FragmentingObjectToBlock : FragmentingCoordinationCoachObject
{
	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	[SerializeField]
	private BlockIncomingObjectsGameController.FragmentingObjectsToBlockType fragmentingObjectsToBlockType;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	protected BlockIncomingObjectsGameController blockIncomingObjectsGameController;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	protected long activationTimeLong;

	[Token(Token = "0x1700008B")]
	public BlockIncomingObjectsGameController BlockingObjectGameController
	{
		[Token(Token = "0x6000668")]
		[Address(RVA = "0x9EE750", Offset = "0x9EE750", VA = "0x9EE750")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000669")]
		[Address(RVA = "0x9EE758", Offset = "0x9EE758", VA = "0x9EE758")]
		set
		{
		}
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0x9EE648", Offset = "0x9EE648", VA = "0x9EE648", Slot = "118")]
	public virtual bool isBlockOnly()
	{
		return default(bool);
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0x9EE650", Offset = "0x9EE650", VA = "0x9EE650", Slot = "119")]
	public virtual bool isDodgeOnly()
	{
		return default(bool);
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0x9EE658", Offset = "0x9EE658", VA = "0x9EE658")]
	public void updateActivationTime()
	{
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0x9EE6DC", Offset = "0x9EE6DC", VA = "0x9EE6DC")]
	public long getActivationTime()
	{
		return default(long);
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0x9EE6E4", Offset = "0x9EE6E4", VA = "0x9EE6E4", Slot = "17")]
	protected override void prepareForReturnToGameSpecific()
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0x9EE714", Offset = "0x9EE714", VA = "0x9EE714", Slot = "45")]
	protected override void updateVectorOfCurrentMovementStartPosition()
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0x9EE768", Offset = "0x9EE768", VA = "0x9EE768", Slot = "12")]
	public override void setCurrentMovementStartingPositionToCurrentPosition()
	{
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0x9EE7A4", Offset = "0x9EE7A4", VA = "0x9EE7A4", Slot = "92")]
	protected override void collidedWithNonPlayerObject(Collider collider)
	{
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0x9EE840", Offset = "0x9EE840", VA = "0x9EE840", Slot = "120")]
	protected virtual void setPositionToFreshStartPosition()
	{
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0x9EE844", Offset = "0x9EE844", VA = "0x9EE844", Slot = "42")]
	protected override void playerTouchedForbiddenObject(PlayerHandController playerHandController)
	{
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0x9EE8B8", Offset = "0x9EE8B8", VA = "0x9EE8B8", Slot = "40")]
	protected override void touchedByPlayerHand(Collider collider)
	{
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0x9EEA90", Offset = "0x9EEA90", VA = "0x9EEA90", Slot = "22")]
	protected override void instantiateAppearanceAndDisappearanceEffect(ActivationType activationType)
	{
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0x9EEBE8", Offset = "0x9EEBE8", VA = "0x9EEBE8", Slot = "15")]
	public override void updatePrefabs(ActivationType activationType)
	{
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0x9EECC8", Offset = "0x9EECC8", VA = "0x9EECC8", Slot = "95")]
	protected override GameObject getAppearanceEffect(ActivationType activationType)
	{
		return null;
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0x9EED14", Offset = "0x9EED14", VA = "0x9EED14", Slot = "7")]
	public override void setObjectTypeAsString()
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0x9EEDA4", Offset = "0x9EEDA4", VA = "0x9EEDA4", Slot = "98")]
	public override float getObjectScale()
	{
		return default(float);
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0x9EEE40", Offset = "0x9EEE40", VA = "0x9EEE40")]
	public BlockIncomingObjectsGameController.FragmentingObjectsToBlockType getFragmentingObjectsToBlockType()
	{
		return default(BlockIncomingObjectsGameController.FragmentingObjectsToBlockType);
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0x9EEE48", Offset = "0x9EEE48", VA = "0x9EEE48", Slot = "114")]
	public override void preloadPlayerScoredPointEffectIntoMemory()
	{
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0x9EEEA8", Offset = "0x9EEEA8", VA = "0x9EEEA8", Slot = "115")]
	public override void preloadPlayerLostPointEffectIntoMemory()
	{
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0x9EEF08", Offset = "0x9EEF08", VA = "0x9EEF08")]
	public void preloadHitPlayerEffectIntoMemory()
	{
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0x9EEF68", Offset = "0x9EEF68", VA = "0x9EEF68", Slot = "21")]
	protected override void destroySpecificPrefabs()
	{
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0x9EF178", Offset = "0x9EF178", VA = "0x9EF178")]
	public FragmentingObjectToBlock()
	{
	}
}
[Token(Token = "0x2000169")]
public class LargeDodgeOnlyFragmentingObjectToBlock : DodgeOnlyFragmentingObjectToBlock
{
	[Token(Token = "0x600067A")]
	[Address(RVA = "0xD7CE38", Offset = "0xD7CE38", VA = "0xD7CE38", Slot = "135")]
	protected override void hitPlayerTarget(Collider collider)
	{
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0xD7CF58", Offset = "0xD7CF58", VA = "0xD7CF58", Slot = "121")]
	public override void performStartMovementTowardsTargetCalculations()
	{
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0xD7CFD0", Offset = "0xD7CFD0", VA = "0xD7CFD0", Slot = "125")]
	protected override void updateBeepControllerTarget()
	{
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0xD7D03C", Offset = "0xD7D03C", VA = "0xD7D03C", Slot = "126")]
	protected override bool isUpdateBeepControllerTarget()
	{
		return default(bool);
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0xD7D044", Offset = "0xD7D044", VA = "0xD7D044", Slot = "123")]
	protected override void checkDodgeOtherObjects()
	{
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0xD7D048", Offset = "0xD7D048", VA = "0xD7D048", Slot = "100")]
	protected override void collidedWithOtherGameObject(Collider collider)
	{
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0xD7D0EC", Offset = "0xD7D0EC", VA = "0xD7D0EC", Slot = "138")]
	protected new virtual void rotateTowardsTarget()
	{
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0xD7D0F0", Offset = "0xD7D0F0", VA = "0xD7D0F0", Slot = "124")]
	protected override bool isPerformBehindTargetCheckNecessary()
	{
		return default(bool);
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0xD7D0F8", Offset = "0xD7D0F8", VA = "0xD7D0F8", Slot = "73")]
	protected override void appearancePositionReachedSpecific()
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0xD7D138", Offset = "0xD7D138", VA = "0xD7D138", Slot = "107")]
	public override int getPointsValue()
	{
		return default(int);
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0xD7D140", Offset = "0xD7D140", VA = "0xD7D140", Slot = "136")]
	public override bool isLargeObject()
	{
		return default(bool);
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0xD7D148", Offset = "0xD7D148", VA = "0xD7D148", Slot = "122")]
	protected override void setRandomTargetTransform()
	{
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0xD7D1A4", Offset = "0xD7D1A4", VA = "0xD7D1A4", Slot = "98")]
	public override float getObjectScale()
	{
		return default(float);
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0xD7D240", Offset = "0xD7D240", VA = "0xD7D240", Slot = "99")]
	public override void calculateRendererBounds()
	{
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0xD7D43C", Offset = "0xD7D43C", VA = "0xD7D43C")]
	public LargeDodgeOnlyFragmentingObjectToBlock()
	{
	}
}
[Token(Token = "0x200016A")]
public class LargeObjectToBlockFracturedObjectInfo : ObjectToBlockFracturedObjectInfo
{
	[Token(Token = "0x6000689")]
	[Address(RVA = "0xD7D444", Offset = "0xD7D444", VA = "0xD7D444", Slot = "7")]
	public override float getObjectScale()
	{
		return default(float);
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0xD7D4E0", Offset = "0xD7D4E0", VA = "0xD7D4E0")]
	public LargeObjectToBlockFracturedObjectInfo()
	{
	}
}
[Token(Token = "0x200016B")]
public class ObjectToBlock : FragmentingObjectToBlock
{
	[Token(Token = "0x200016C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CA7C", Offset = "0x69CA7C")]
	private sealed class <startDisappearanceMovementCoroutine>d__88 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectToBlock <>4__this;

		[Token(Token = "0x1700008C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006D1")]
			[Address(RVA = "0x1492F20", Offset = "0x1492F20", VA = "0x1492F20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006D3")]
			[Address(RVA = "0x1492F68", Offset = "0x1492F68", VA = "0x1492F68", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006CE")]
		[Address(RVA = "0x1492E6C", Offset = "0x1492E6C", VA = "0x1492E6C")]
		[DebuggerHidden]
		public <startDisappearanceMovementCoroutine>d__88(int <>1__state)
		{
		}

		[Token(Token = "0x60006CF")]
		[Address(RVA = "0x1492E98", Offset = "0x1492E98", VA = "0x1492E98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006D0")]
		[Address(RVA = "0x1492E9C", Offset = "0x1492E9C", VA = "0x1492E9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006D2")]
		[Address(RVA = "0x1492F28", Offset = "0x1492F28", VA = "0x1492F28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	private bool startMovement;

	[Token(Token = "0x4000799")]
	public const float ADDITIONAL_Z_FOR_APPEARANCE = 0.2f;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	protected GameObject[] targetGameObjects;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	protected bool continueTracking;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	protected Transform currentTargetTransform;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	private Vector3 fakeTargetPosition;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x314")]
	protected Vector3 correctionalPosition;

	[Token(Token = "0x400079F")]
	private const float OBJECT_TO_BLOCK_BEZIER_CURVE_MULTIPLIER = 0.5f;

	[Token(Token = "0x40007A0")]
	private const float POSITIONAL_CORRECTION_MOVEMENT_SPEED = 1f;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	private float distanceToCheckForCollisionWithOtherObject;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x324")]
	private int raycastLayer;

	[Token(Token = "0x40007A3")]
	private const float FIRST_DISTANCE_TRAVELED_LIMIT = 0.3f;

	[Token(Token = "0x40007A4")]
	private const float FIRST_DISTANCE_TO_PLAYER_LIMIT = 0.8f;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	private bool firstDistanceLimitCrossed;

	[Token(Token = "0x40007A6")]
	private const float SECOND_DISTANCE_TRAVELED_LIMIT = 0.7f;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x329")]
	protected bool secondDistanceLimitCrossed;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
	private float defaultDistanceToPlayerDivider;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	private float distanceFromOriginalStartingPosToTarget;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x334")]
	private bool curvedMovementOnly;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	protected float originalJourneyTime;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33C")]
	protected float ROTATION_SPEED_MULTIPLIER;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	protected float DISAPPEARANCE_DISTANCE;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x344")]
	protected float lerpPercentageToStartDisappearanceEffect;

	[Token(Token = "0x40007AF")]
	private const float DISAPPEARANCE_EFFECT_DURATION = 1f;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	protected bool disappearanceEffectStarted;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x349")]
	protected bool disappearanceRotationFinished;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34A")]
	protected bool disappearanceAudioPlayed;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	protected WarningBeepController warningBeepController;

	[Token(Token = "0x600068B")]
	[Address(RVA = "0xAC86CC", Offset = "0xAC86CC", VA = "0xAC86CC")]
	public void setCurrentTargetTransform(Transform targetTransform)
	{
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0xAC86DC", Offset = "0xAC86DC", VA = "0xAC86DC")]
	public void performGenericSetup(GameObject[] targetGameObjects, float speed, int index)
	{
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0xAC87B4", Offset = "0xAC87B4", VA = "0xAC87B4", Slot = "23")]
	protected override void instantiateSpecificPrefabs()
	{
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0xAC89D8", Offset = "0xAC89D8", VA = "0xAC89D8")]
	public void performSetupForMovement(bool curvedMovementOnly)
	{
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0xAC8A44", Offset = "0xAC8A44", VA = "0xAC8A44")]
	public void performSetupWithoutMovementStart(bool curvedMovementOnly)
	{
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0xAC8AA8", Offset = "0xAC8AA8", VA = "0xAC8AA8")]
	public void setStartMovement(bool input)
	{
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0xAC8AB4", Offset = "0xAC8AB4", VA = "0xAC8AB4", Slot = "121")]
	public virtual void performStartMovementTowardsTargetCalculations()
	{
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0xAC8C48", Offset = "0xAC8C48", VA = "0xAC8C48")]
	private float getPercentageOfDistanceToTargetCovered()
	{
		return default(float);
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0xAC8BD8", Offset = "0xAC8BD8", VA = "0xAC8BD8")]
	protected void updateDistanceFromOriginalStartingPosToTarget()
	{
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0xAC8D10", Offset = "0xAC8D10", VA = "0xAC8D10", Slot = "65")]
	protected override void updateDistanceFromCurrentStartingPosToTarget(Vector3 target)
	{
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0xAC8DC0", Offset = "0xAC8DC0", VA = "0xAC8DC0", Slot = "122")]
	protected virtual void setRandomTargetTransform()
	{
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0xAC8E30", Offset = "0xAC8E30", VA = "0xAC8E30")]
	private void chooseNewTargetTransform()
	{
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0xAC8FE4", Offset = "0xAC8FE4", VA = "0xAC8FE4", Slot = "72")]
	protected override void appearancePositionReached()
	{
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0xAC9138", Offset = "0xAC9138", VA = "0xAC9138", Slot = "77")]
	public override void performGameAction()
	{
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0xAC924C", Offset = "0xAC924C", VA = "0xAC924C", Slot = "123")]
	protected virtual void checkDodgeOtherObjects()
	{
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0xAC94E8", Offset = "0xAC94E8", VA = "0xAC94E8", Slot = "70")]
	protected override void performDisappearanceMovement()
	{
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0xAC9698", Offset = "0xAC9698", VA = "0xAC9698", Slot = "124")]
	protected virtual bool isPerformBehindTargetCheckNecessary()
	{
		return default(bool);
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0xAC96A0", Offset = "0xAC96A0", VA = "0xAC96A0")]
	protected void recalculateMovementSpeedValues()
	{
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0xAC9390", Offset = "0xAC9390", VA = "0xAC9390")]
	protected void dodgeOtherObject()
	{
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0xAC972C", Offset = "0xAC972C", VA = "0xAC972C")]
	private void positionCorrectionFinished()
	{
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0xAC9294", Offset = "0xAC9294", VA = "0xAC9294")]
	private void checkIfOtherObjectInPath()
	{
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0xAC9800", Offset = "0xAC9800", VA = "0xAC9800")]
	private void moveAwayFromOtherObject(GameObject objectToAvoid)
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0xAC98B4", Offset = "0xAC98B4", VA = "0xAC98B4")]
	public CurrentSpecialAction GetCurrentAction()
	{
		return default(CurrentSpecialAction);
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0xAC98BC", Offset = "0xAC98BC", VA = "0xAC98BC", Slot = "26")]
	protected override void updateMovementMode()
	{
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0xAC9734", Offset = "0xAC9734", VA = "0xAC9734")]
	private GameObject getObjectInMovementPath()
	{
		return null;
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0xAC9934", Offset = "0xAC9934", VA = "0xAC9934")]
	private RaycastHit createRaycast()
	{
		return default(RaycastHit);
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0xAC923C", Offset = "0xAC923C", VA = "0xAC923C")]
	protected bool noCurrentSpecialAction()
	{
		return default(bool);
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0xAC9A1C", Offset = "0xAC9A1C", VA = "0xAC9A1C", Slot = "79")]
	protected override void performMovement()
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0xAC9D64", Offset = "0xAC9D64", VA = "0xAC9D64", Slot = "125")]
	protected virtual void updateBeepControllerTarget()
	{
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0xAC9DA0", Offset = "0xAC9DA0", VA = "0xAC9DA0", Slot = "126")]
	protected virtual bool isUpdateBeepControllerTarget()
	{
		return default(bool);
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0xAC9DB0", Offset = "0xAC9DB0", VA = "0xAC9DB0", Slot = "84")]
	protected override Vector3 getPointOnBezierCurve(float mTimerValue)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0xAC9EE0", Offset = "0xAC9EE0", VA = "0xAC9EE0", Slot = "86")]
	protected override float getMTimerCorrectedBezier(float mTimer, Vector3 targetPos)
	{
		return default(float);
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0xAC9EEC", Offset = "0xAC9EEC", VA = "0xAC9EEC", Slot = "66")]
	protected override float getCurrentDistanceToTargetToStartingDistanceRatio(Vector3 target)
	{
		return default(float);
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0xAC9F34", Offset = "0xAC9F34", VA = "0xAC9F34")]
	private float getPercentageOfDistanceCrossedFromStartingPos()
	{
		return default(float);
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0xAC9FBC", Offset = "0xAC9FBC", VA = "0xAC9FBC", Slot = "127")]
	protected virtual void checkIfUpdateMovementAndTarget()
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0xACA0E0", Offset = "0xACA0E0", VA = "0xACA0E0", Slot = "128")]
	protected virtual void performOnSecondDistanceLimitCrossed()
	{
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0xACA0FC", Offset = "0xACA0FC", VA = "0xACA0FC", Slot = "129")]
	protected virtual void updateMovementAndTarget()
	{
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0xAC96E0", Offset = "0xAC96E0", VA = "0xAC96E0")]
	private void updateMovementValues()
	{
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0xAC9044", Offset = "0xAC9044", VA = "0xAC9044")]
	public void updateMovementSpeedRelativeToBaseParameterDistance()
	{
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0xACA1FC", Offset = "0xACA1FC", VA = "0xACA1FC", Slot = "130")]
	protected virtual Vector3 getCurrentTargetPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0xACA238", Offset = "0xACA238", VA = "0xACA238", Slot = "25")]
	protected override void updateBezierCurveValues()
	{
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0xACA3D4", Offset = "0xACA3D4", VA = "0xACA3D4", Slot = "27")]
	protected override void calculateBezierCurvePoints()
	{
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0xACA448", Offset = "0xACA448", VA = "0xACA448", Slot = "131")]
	protected virtual void updateBezierCurveEndpoint()
	{
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0xACA484", Offset = "0xACA484", VA = "0xACA484", Slot = "132")]
	protected virtual void rotateTowardsTarget()
	{
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0xACA57C", Offset = "0xACA57C", VA = "0xACA57C", Slot = "133")]
	protected virtual void performRotationCorrection()
	{
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0xACA1AC", Offset = "0xACA1AC", VA = "0xACA1AC")]
	private bool isChangeTarget()
	{
		return default(bool);
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0xACA1D4", Offset = "0xACA1D4", VA = "0xACA1D4")]
	private bool isChangeMovementMode()
	{
		return default(bool);
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0xAC8B6C", Offset = "0xAC8B6C", VA = "0xAC8B6C")]
	protected void updateFakeTargetPosition()
	{
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0xACA734", Offset = "0xACA734", VA = "0xACA734")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0xACA878", Offset = "0xACA878", VA = "0xACA878", Slot = "100")]
	protected override void collidedWithOtherGameObject(Collider collider)
	{
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0xACA934", Offset = "0xACA934", VA = "0xACA934", Slot = "134")]
	protected virtual void fakeTargetPositionReached()
	{
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0xACA9C8", Offset = "0xACA9C8", VA = "0xACA9C8", Slot = "56")]
	public override void startDisappearance(float scale)
	{
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0xAC9630", Offset = "0xAC9630", VA = "0xAC9630")]
	protected void startFinalDisappearanceMovement()
	{
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0xACA9D8", Offset = "0xACA9D8", VA = "0xACA9D8", Slot = "135")]
	protected virtual void hitPlayerTarget(Collider collider)
	{
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0xACAAE8", Offset = "0xACAAE8", VA = "0xACAAE8", Slot = "50")]
	public override void performAppearance(Vector3 appearanceDestination)
	{
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0xACAD78", Offset = "0xACAD78", VA = "0xACAD78", Slot = "64")]
	protected override Vector3 getDisappearanceFinishedPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0xACAE60", Offset = "0xACAE60", VA = "0xACAE60", Slot = "63")]
	protected override Vector3 getDisappearanceWormHolePosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0xACAE70", Offset = "0xACAE70", VA = "0xACAE70", Slot = "61")]
	protected override void beforeDisappearanceStart(Transform inputTransform)
	{
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0xACAEA4", Offset = "0xACAEA4", VA = "0xACAEA4", Slot = "103")]
	public override void resetOnReturnToObjectPool()
	{
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0xACAF28", Offset = "0xACAF28", VA = "0xACAF28", Slot = "74")]
	protected override void disappearancePositionReached()
	{
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0xACB064", Offset = "0xACB064", VA = "0xACB064", Slot = "69")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A55DC", Offset = "0x6A55DC")]
	protected override IEnumerator startDisappearanceMovementCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0xACA9B4", Offset = "0xACA9B4", VA = "0xACA9B4")]
	protected float calculateLerpPercentageToStartDisappearanceEffect()
	{
		return default(float);
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0xACB0DC", Offset = "0xACB0DC", VA = "0xACB0DC")]
	public Transform getTargetTransform()
	{
		return null;
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0xACB0E4", Offset = "0xACB0E4", VA = "0xACB0E4", Slot = "136")]
	public virtual bool isLargeObject()
	{
		return default(bool);
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0xACB0EC", Offset = "0xACB0EC", VA = "0xACB0EC", Slot = "137")]
	public virtual void setOriginalJourneyTime(float input)
	{
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0xACB0F4", Offset = "0xACB0F4", VA = "0xACB0F4", Slot = "111")]
	protected override void onUnPausedSpecific(bool appearanceWasInProgress)
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0xACB10C", Offset = "0xACB10C", VA = "0xACB10C")]
	public ObjectToBlock()
	{
	}
}
[Token(Token = "0x200016D")]
public class ObjectToBlockActivationTypeTester : MonoBehaviour
{
	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private FragmentingObjectToBlock frag;

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0xACB1EC", Offset = "0xACB1EC", VA = "0xACB1EC")]
	private void Start()
	{
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0xACB268", Offset = "0xACB268", VA = "0xACB268")]
	private void Update()
	{
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0xACB26C", Offset = "0xACB26C", VA = "0xACB26C")]
	public ObjectToBlockActivationTypeTester()
	{
	}
}
[Token(Token = "0x200016E")]
public class ObjectToBlockTestActivator : MonoBehaviour
{
	[Token(Token = "0x200016F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CA8C", Offset = "0x69CA8C")]
	private sealed class <startSphereObjectMovement>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectToBlockTestActivator <>4__this;

		[Token(Token = "0x1700008E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006DE")]
			[Address(RVA = "0x1493438", Offset = "0x1493438", VA = "0x1493438", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006E0")]
			[Address(RVA = "0x1493480", Offset = "0x1493480", VA = "0x1493480", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006DB")]
		[Address(RVA = "0x1493140", Offset = "0x1493140", VA = "0x1493140")]
		[DebuggerHidden]
		public <startSphereObjectMovement>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60006DC")]
		[Address(RVA = "0x149316C", Offset = "0x149316C", VA = "0x149316C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006DD")]
		[Address(RVA = "0x1493170", Offset = "0x1493170", VA = "0x1493170", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006DF")]
		[Address(RVA = "0x1493440", Offset = "0x1493440", VA = "0x1493440", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000170")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CA9C", Offset = "0x69CA9C")]
	private sealed class <startObjectToBlockMovement>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectToBlockTestActivator <>4__this;

		[Token(Token = "0x17000090")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006E4")]
			[Address(RVA = "0x14930F0", Offset = "0x14930F0", VA = "0x14930F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000091")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006E6")]
			[Address(RVA = "0x1493138", Offset = "0x1493138", VA = "0x1493138", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006E1")]
		[Address(RVA = "0x1492F70", Offset = "0x1492F70", VA = "0x1492F70")]
		[DebuggerHidden]
		public <startObjectToBlockMovement>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60006E2")]
		[Address(RVA = "0x1492F9C", Offset = "0x1492F9C", VA = "0x1492F9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006E3")]
		[Address(RVA = "0x1492FA0", Offset = "0x1492FA0", VA = "0x1492FA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006E5")]
		[Address(RVA = "0x14930F8", Offset = "0x14930F8", VA = "0x14930F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject[] playerTargetTransforms;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ObjectToBlock[] objectToBlockToActivate;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ObjectToBlock[] objectsToBlockSetMovementAllowedTrue;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private BlockIncomingObjectsSphereGameObject[] sphereGameObjects;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject fracturedPrefab;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private TutorialController tutorialController;

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0xACB518", Offset = "0xACB518", VA = "0xACB518")]
	private void Start()
	{
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0xACB55C", Offset = "0xACB55C", VA = "0xACB55C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A568C", Offset = "0x6A568C")]
	private IEnumerator startSphereObjectMovement()
	{
		return null;
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0xACB5D4", Offset = "0xACB5D4", VA = "0xACB5D4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A56EC", Offset = "0x6A56EC")]
	private IEnumerator startObjectToBlockMovement()
	{
		return null;
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0xACB64C", Offset = "0xACB64C", VA = "0xACB64C")]
	public ObjectToBlockTestActivator()
	{
	}
}
[Token(Token = "0x2000171")]
public class TesterBlockIncomingObjectsPositionHelper : MonoBehaviour
{
	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private BlockIncomingObjectsAppearancePositionHelper blockIncomingObjectsObjectCreationPositionHelper;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject[] gameObjects;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<GameObject> gameObjectsArrayList;

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0x14DE0B0", Offset = "0x14DE0B0", VA = "0x14DE0B0")]
	private void Start()
	{
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0x14DE150", Offset = "0x14DE150", VA = "0x14DE150")]
	private void Update()
	{
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0x14DE5DC", Offset = "0x14DE5DC", VA = "0x14DE5DC")]
	public List<GameObject> getGameObjects()
	{
		return null;
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0x14DE5E4", Offset = "0x14DE5E4", VA = "0x14DE5E4")]
	public TesterBlockIncomingObjectsPositionHelper()
	{
	}
}
[Token(Token = "0x2000172")]
public class TutorialBlockIncomingObjectsSphereGameObject : BlockIncomingObjectsSphereGameObject, TutorialObjectInterface
{
	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	private bool disappearanceForced;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	private TutorialController tutorialController;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	private BlockIncomingObjectsTutorialController blockIncomingObjectsTutorialController;

	[Token(Token = "0x17000092")]
	public TutorialController TutorialController
	{
		[Token(Token = "0x60006EB")]
		[Address(RVA = "0x14E4828", Offset = "0x14E4828", VA = "0x14E4828")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006EC")]
		[Address(RVA = "0x14E4830", Offset = "0x14E4830", VA = "0x14E4830")]
		set
		{
		}
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0x14E4840", Offset = "0x14E4840", VA = "0x14E4840", Slot = "40")]
	protected override void touchedByPlayerHand(Collider collider)
	{
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0x14E49E4", Offset = "0x14E49E4", VA = "0x14E49E4", Slot = "105")]
	protected override void playerScoredByTouchingObject(PlayerHandController playerHandController)
	{
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0x14E4A18", Offset = "0x14E4A18", VA = "0x14E4A18", Slot = "42")]
	protected override void playerTouchedForbiddenObject(PlayerHandController playerHandController)
	{
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0x14E4A58", Offset = "0x14E4A58", VA = "0x14E4A58", Slot = "121")]
	public override void collidedWithPlayer(Collider collider, bool touchedByPlayer)
	{
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0x14E4BBC", Offset = "0x14E4BBC", VA = "0x14E4BBC", Slot = "106")]
	protected override void removeGameObjectFromActiveObjectsInScene()
	{
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0x14E4BFC", Offset = "0x14E4BFC", VA = "0x14E4BFC", Slot = "72")]
	protected override void appearancePositionReached()
	{
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0x14E4C58", Offset = "0x14E4C58", VA = "0x14E4C58", Slot = "74")]
	protected override void disappearancePositionReached()
	{
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0x14E4CF0", Offset = "0x14E4CF0", VA = "0x14E4CF0", Slot = "122")]
	public void setTutorialController(TutorialController tutorialController)
	{
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0x14E4D94", Offset = "0x14E4D94", VA = "0x14E4D94", Slot = "123")]
	public void setForceDisappearance(bool forceDisappearance)
	{
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0x14E4DA0", Offset = "0x14E4DA0", VA = "0x14E4DA0")]
	public TutorialBlockIncomingObjectsSphereGameObject()
	{
	}
}
[Token(Token = "0x2000173")]
public class TutorialBlockOnlyObjectToBlock : BlockOnlyObjectToBlock, TutorialObjectInterface
{
	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	private bool disappearanceForced;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	private TutorialController tutorialController;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	protected float TUTORIAL_BACKWARDS_DISAPPEARANCE_DISTANCE;

	[Token(Token = "0x17000093")]
	public TutorialController TutorialController
	{
		[Token(Token = "0x60006F7")]
		[Address(RVA = "0x14E4DA8", Offset = "0x14E4DA8", VA = "0x14E4DA8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006F8")]
		[Address(RVA = "0x14E4DB0", Offset = "0x14E4DB0", VA = "0x14E4DB0")]
		set
		{
		}
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0x14E4DC0", Offset = "0x14E4DC0", VA = "0x14E4DC0", Slot = "135")]
	protected override void hitPlayerTarget(Collider collider)
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0x14E4E20", Offset = "0x14E4E20", VA = "0x14E4E20", Slot = "40")]
	protected override void touchedByPlayerHand(Collider collider)
	{
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0x14E4FC4", Offset = "0x14E4FC4", VA = "0x14E4FC4", Slot = "105")]
	protected override void playerScoredByTouchingObject(PlayerHandController playerHandController)
	{
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0x14E4FF8", Offset = "0x14E4FF8", VA = "0x14E4FF8", Slot = "42")]
	protected override void playerTouchedForbiddenObject(PlayerHandController playerHandController)
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0x14E5038", Offset = "0x14E5038", VA = "0x14E5038", Slot = "106")]
	protected override void removeGameObjectFromActiveObjectsInScene()
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0x14E5078", Offset = "0x14E5078", VA = "0x14E5078", Slot = "72")]
	protected override void appearancePositionReached()
	{
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0x14E50EC", Offset = "0x14E50EC", VA = "0x14E50EC", Slot = "74")]
	protected override void disappearancePositionReached()
	{
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0x14E512C", Offset = "0x14E512C", VA = "0x14E512C", Slot = "134")]
	protected override void fakeTargetPositionReached()
	{
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0x14E51B0", Offset = "0x14E51B0", VA = "0x14E51B0", Slot = "138")]
	public void setTutorialController(TutorialController tutorialController)
	{
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0x14E51C0", Offset = "0x14E51C0", VA = "0x14E51C0", Slot = "64")]
	protected override Vector3 getDisappearanceFinishedPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0x14E5354", Offset = "0x14E5354", VA = "0x14E5354", Slot = "24")]
	public override void setJourneyTime(float journeyTime)
	{
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0x14E5368", Offset = "0x14E5368", VA = "0x14E5368", Slot = "139")]
	public void setForceDisappearance(bool forceDisappearance)
	{
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0x14E53E8", Offset = "0x14E53E8", VA = "0x14E53E8", Slot = "137")]
	public override void setOriginalJourneyTime(float input)
	{
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0x14E5470", Offset = "0x14E5470", VA = "0x14E5470", Slot = "70")]
	protected override void performDisappearanceMovement()
	{
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0x14E55F0", Offset = "0x14E55F0", VA = "0x14E55F0")]
	public TutorialBlockOnlyObjectToBlock()
	{
	}
}
[Token(Token = "0x2000174")]
public class TutorialDodgeOnlyFragmentingObjectToBlock : DodgeOnlyFragmentingObjectToBlock, TutorialObjectInterface
{
	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	private bool disappearanceForced;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	private TutorialController tutorialController;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
	private BlockIncomingObjectsTutorialController blockIncomingObjectsTutorialController;

	[Token(Token = "0x17000094")]
	public TutorialController TutorialController
	{
		[Token(Token = "0x6000708")]
		[Address(RVA = "0x14E74E0", Offset = "0x14E74E0", VA = "0x14E74E0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000709")]
		[Address(RVA = "0x14E74E8", Offset = "0x14E74E8", VA = "0x14E74E8")]
		set
		{
		}
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0x14E74F8", Offset = "0x14E74F8", VA = "0x14E74F8", Slot = "135")]
	protected override void hitPlayerTarget(Collider collider)
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0x14E7558", Offset = "0x14E7558", VA = "0x14E7558", Slot = "40")]
	protected override void touchedByPlayerHand(Collider collider)
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0x14E76E4", Offset = "0x14E76E4", VA = "0x14E76E4", Slot = "105")]
	protected override void playerScoredByTouchingObject(PlayerHandController playerHandController)
	{
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0x14E7718", Offset = "0x14E7718", VA = "0x14E7718", Slot = "42")]
	protected override void playerTouchedForbiddenObject(PlayerHandController playerHandController)
	{
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0x14E7758", Offset = "0x14E7758", VA = "0x14E7758", Slot = "106")]
	protected override void removeGameObjectFromActiveObjectsInScene()
	{
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0x14E7798", Offset = "0x14E7798", VA = "0x14E7798", Slot = "72")]
	protected override void appearancePositionReached()
	{
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0x14E780C", Offset = "0x14E780C", VA = "0x14E780C", Slot = "74")]
	protected override void disappearancePositionReached()
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0x14E784C", Offset = "0x14E784C", VA = "0x14E784C", Slot = "138")]
	public void setTutorialController(TutorialController tutorialController)
	{
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0x14E78F0", Offset = "0x14E78F0", VA = "0x14E78F0", Slot = "64")]
	protected override Vector3 getDisappearanceFinishedPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0x14E7A84", Offset = "0x14E7A84", VA = "0x14E7A84", Slot = "24")]
	public override void setJourneyTime(float journeyTime)
	{
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0x14E7A98", Offset = "0x14E7A98", VA = "0x14E7A98", Slot = "137")]
	public override void setOriginalJourneyTime(float input)
	{
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0x14E7B20", Offset = "0x14E7B20", VA = "0x14E7B20", Slot = "139")]
	public void setForceDisappearance(bool forceDisappearance)
	{
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0x14E7BA0", Offset = "0x14E7BA0", VA = "0x14E7BA0", Slot = "70")]
	protected override void performDisappearanceMovement()
	{
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0x14E7D28", Offset = "0x14E7D28", VA = "0x14E7D28")]
	public TutorialDodgeOnlyFragmentingObjectToBlock()
	{
	}
}
[Token(Token = "0x2000175")]
public class TutorialFlatLargeDodgeOnlyFragmentingObjectToBlock : FlatLargeDodgeOnlyFragmentingObjectToBlock, TutorialObjectInterface
{
	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	private bool disappearanceForced;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	private TutorialController tutorialController;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
	private BlockIncomingObjectsTutorialController blockIncomingObjectsTutorialController;

	[Token(Token = "0x17000095")]
	public TutorialController TutorialController
	{
		[Token(Token = "0x6000718")]
		[Address(RVA = "0x14E8258", Offset = "0x14E8258", VA = "0x14E8258")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000719")]
		[Address(RVA = "0x14E8260", Offset = "0x14E8260", VA = "0x14E8260")]
		set
		{
		}
	}

	[Token(Token = "0x600071A")]
	[Address(RVA = "0x14E8270", Offset = "0x14E8270", VA = "0x14E8270", Slot = "135")]
	protected override void hitPlayerTarget(Collider collider)
	{
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0x14E82D0", Offset = "0x14E82D0", VA = "0x14E82D0", Slot = "40")]
	protected override void touchedByPlayerHand(Collider collider)
	{
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0x14E845C", Offset = "0x14E845C", VA = "0x14E845C", Slot = "105")]
	protected override void playerScoredByTouchingObject(PlayerHandController playerHandController)
	{
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0x14E8490", Offset = "0x14E8490", VA = "0x14E8490", Slot = "42")]
	protected override void playerTouchedForbiddenObject(PlayerHandController playerHandController)
	{
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0x14E84D0", Offset = "0x14E84D0", VA = "0x14E84D0", Slot = "106")]
	protected override void removeGameObjectFromActiveObjectsInScene()
	{
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0x14E8510", Offset = "0x14E8510", VA = "0x14E8510", Slot = "72")]
	protected override void appearancePositionReached()
	{
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0x14E8580", Offset = "0x14E8580", VA = "0x14E8580", Slot = "74")]
	protected override void disappearancePositionReached()
	{
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0x14E85C0", Offset = "0x14E85C0", VA = "0x14E85C0", Slot = "139")]
	public void setTutorialController(TutorialController tutorialController)
	{
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0x14E8664", Offset = "0x14E8664", VA = "0x14E8664", Slot = "64")]
	protected override Vector3 getDisappearanceFinishedPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0x14E87F8", Offset = "0x14E87F8", VA = "0x14E87F8", Slot = "137")]
	public override void setOriginalJourneyTime(float input)
	{
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0x14E8880", Offset = "0x14E8880", VA = "0x14E8880", Slot = "24")]
	public override void setJourneyTime(float journeyTime)
	{
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0x14E8894", Offset = "0x14E8894", VA = "0x14E8894", Slot = "140")]
	public void setForceDisappearance(bool forceDisappearance)
	{
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0x14E8914", Offset = "0x14E8914", VA = "0x14E8914", Slot = "70")]
	protected override void performDisappearanceMovement()
	{
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0x14E8A94", Offset = "0x14E8A94", VA = "0x14E8A94")]
	public TutorialFlatLargeDodgeOnlyFragmentingObjectToBlock()
	{
	}
}
[Token(Token = "0x2000176")]
public class TutorialLargeDodgeOnlyFragmentingObjectToBlock : LargeDodgeOnlyFragmentingObjectToBlock, TutorialObjectInterface
{
	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	private bool disappearanceForced;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	private TutorialController tutorialController;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
	private BlockIncomingObjectsTutorialController blockIncomingObjectsTutorialController;

	[Token(Token = "0x17000096")]
	public TutorialController TutorialController
	{
		[Token(Token = "0x6000728")]
		[Address(RVA = "0x14E8A9C", Offset = "0x14E8A9C", VA = "0x14E8A9C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000729")]
		[Address(RVA = "0x14E8AA4", Offset = "0x14E8AA4", VA = "0x14E8AA4")]
		set
		{
		}
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0x14E8AB4", Offset = "0x14E8AB4", VA = "0x14E8AB4", Slot = "135")]
	protected override void hitPlayerTarget(Collider collider)
	{
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0x14E8B14", Offset = "0x14E8B14", VA = "0x14E8B14", Slot = "40")]
	protected override void touchedByPlayerHand(Collider collider)
	{
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0x14E8CA0", Offset = "0x14E8CA0", VA = "0x14E8CA0", Slot = "105")]
	protected override void playerScoredByTouchingObject(PlayerHandController playerHandController)
	{
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0x14E8CD4", Offset = "0x14E8CD4", VA = "0x14E8CD4", Slot = "42")]
	protected override void playerTouchedForbiddenObject(PlayerHandController playerHandController)
	{
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0x14E8D14", Offset = "0x14E8D14", VA = "0x14E8D14", Slot = "106")]
	protected override void removeGameObjectFromActiveObjectsInScene()
	{
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0x14E8D54", Offset = "0x14E8D54", VA = "0x14E8D54", Slot = "72")]
	protected override void appearancePositionReached()
	{
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0x14E8E20", Offset = "0x14E8E20", VA = "0x14E8E20", Slot = "74")]
	protected override void disappearancePositionReached()
	{
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0x14E8E60", Offset = "0x14E8E60", VA = "0x14E8E60", Slot = "139")]
	public void setTutorialController(TutorialController tutorialController)
	{
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0x14E8F04", Offset = "0x14E8F04", VA = "0x14E8F04", Slot = "64")]
	protected override Vector3 getDisappearanceFinishedPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0x14E9098", Offset = "0x14E9098", VA = "0x14E9098", Slot = "24")]
	public override void setJourneyTime(float journeyTime)
	{
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0x14E90AC", Offset = "0x14E90AC", VA = "0x14E90AC", Slot = "140")]
	public void setForceDisappearance(bool forceDisappearance)
	{
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0x14E912C", Offset = "0x14E912C", VA = "0x14E912C", Slot = "137")]
	public override void setOriginalJourneyTime(float input)
	{
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0x14E91B4", Offset = "0x14E91B4", VA = "0x14E91B4", Slot = "70")]
	protected override void performDisappearanceMovement()
	{
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0x14E9334", Offset = "0x14E9334", VA = "0x14E9334")]
	public TutorialLargeDodgeOnlyFragmentingObjectToBlock()
	{
	}
}
[Token(Token = "0x2000177")]
public class TutorialObjectToBlock : ObjectToBlock, TutorialObjectInterface
{
	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	private bool disappearanceForced;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	private TutorialController tutorialController;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float TUTORIAL_BACKWARDS_DISAPPEARANCE_DISTANCE;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float FORCED_DISAPPEARANCE_SPEED;

	[Token(Token = "0x17000097")]
	public TutorialController TutorialController
	{
		[Token(Token = "0x6000738")]
		[Address(RVA = "0x14E9BC8", Offset = "0x14E9BC8", VA = "0x14E9BC8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000739")]
		[Address(RVA = "0x14E9BD0", Offset = "0x14E9BD0", VA = "0x14E9BD0")]
		set
		{
		}
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0x14E9BE0", Offset = "0x14E9BE0", VA = "0x14E9BE0", Slot = "135")]
	protected override void hitPlayerTarget(Collider collider)
	{
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0x14E9C40", Offset = "0x14E9C40", VA = "0x14E9C40", Slot = "40")]
	protected override void touchedByPlayerHand(Collider collider)
	{
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0x14E9D34", Offset = "0x14E9D34", VA = "0x14E9D34", Slot = "105")]
	protected override void playerScoredByTouchingObject(PlayerHandController playerHandController)
	{
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0x14E9D68", Offset = "0x14E9D68", VA = "0x14E9D68", Slot = "42")]
	protected override void playerTouchedForbiddenObject(PlayerHandController playerHandController)
	{
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0x14E9DA8", Offset = "0x14E9DA8", VA = "0x14E9DA8", Slot = "106")]
	protected override void removeGameObjectFromActiveObjectsInScene()
	{
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0x14E9DE8", Offset = "0x14E9DE8", VA = "0x14E9DE8", Slot = "72")]
	protected override void appearancePositionReached()
	{
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0x14E9E5C", Offset = "0x14E9E5C", VA = "0x14E9E5C", Slot = "74")]
	protected override void disappearancePositionReached()
	{
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0x14E9E9C", Offset = "0x14E9E9C", VA = "0x14E9E9C", Slot = "138")]
	public void setTutorialController(TutorialController tutorialController)
	{
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0x14E9EAC", Offset = "0x14E9EAC", VA = "0x14E9EAC", Slot = "64")]
	protected override Vector3 getDisappearanceFinishedPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0x14EA040", Offset = "0x14EA040", VA = "0x14EA040", Slot = "24")]
	public override void setJourneyTime(float journeyTime)
	{
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0x14EA054", Offset = "0x14EA054", VA = "0x14EA054", Slot = "137")]
	public override void setOriginalJourneyTime(float input)
	{
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0x14EA0DC", Offset = "0x14EA0DC", VA = "0x14EA0DC", Slot = "139")]
	public void setForceDisappearance(bool forceDisappearance)
	{
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0x14EA0F0", Offset = "0x14EA0F0", VA = "0x14EA0F0", Slot = "70")]
	protected override void performDisappearanceMovement()
	{
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0x14EA270", Offset = "0x14EA270", VA = "0x14EA270")]
	public TutorialObjectToBlock()
	{
	}
}
[Token(Token = "0x2000178")]
public class EnduranceFracturedObjectInfo : MonoBehaviour, ObjectInfoInterface
{
	[Token(Token = "0x2000179")]
	public enum EnduranceFragmentingObjectsType
	{
		[Token(Token = "0x40007DD")]
		NORMAL
	}

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private EnduranceFragmentingObjectsType fragmentingObjectType;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string objectType;

	[Token(Token = "0x6000749")]
	[Address(RVA = "0x95E234", Offset = "0x95E234", VA = "0x95E234")]
	private void Awake()
	{
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0x95E2C4", Offset = "0x95E2C4", VA = "0x95E2C4")]
	public void setObjectType()
	{
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0x95E354", Offset = "0x95E354", VA = "0x95E354", Slot = "4")]
	public string getObjectType()
	{
		return null;
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0x95E35C", Offset = "0x95E35C", VA = "0x95E35C", Slot = "7")]
	public virtual float getObjectScale()
	{
		return default(float);
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0x95E3F8", Offset = "0x95E3F8", VA = "0x95E3F8", Slot = "6")]
	public float[] getRendererBounds()
	{
		return null;
	}

	[Token(Token = "0x600074E")]
	[Address(RVA = "0x95E474", Offset = "0x95E474", VA = "0x95E474")]
	public EnduranceFracturedObjectInfo()
	{
	}
}
[Token(Token = "0x200017A")]
public class EnduranceFracturedPrefabPoolController : CoordinationCoachPoolController
{
	[Token(Token = "0x600074F")]
	[Address(RVA = "0x95E4D0", Offset = "0x95E4D0", VA = "0x95E4D0", Slot = "11")]
	protected override void performSetupForPrefabsMap(GameObject objectToCreate)
	{
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0x95E52C", Offset = "0x95E52C", VA = "0x95E52C", Slot = "19")]
	protected override void performSetupOnObjectOnInitialization(GameObject instantiatedPrefab, int objectId)
	{
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0x95E5AC", Offset = "0x95E5AC", VA = "0x95E5AC", Slot = "23")]
	protected override void performSetupOnObjectDequeue(GameObject queueGameObject, CoordinationCoachGameObject.ActivationType activationType)
	{
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0x95E61C", Offset = "0x95E61C", VA = "0x95E61C", Slot = "21")]
	protected override void performSetupWhenCreatingExtraObjects(GameObject instantiatedGameObject, int i, CoordinationCoachGameObject.ActivationType activationType)
	{
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0x95E62C", Offset = "0x95E62C", VA = "0x95E62C")]
	public EnduranceFracturedPrefabPoolController()
	{
	}
}
[Token(Token = "0x200017B")]
public class EnduranceGameController : GameController
{
	[Token(Token = "0x200017C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CAAC", Offset = "0x69CAAC")]
	private sealed class <mainGameModeLoop>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnduranceGameController <>4__this;

		[Token(Token = "0x17000098")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000772")]
			[Address(RVA = "0x14C3CC8", Offset = "0x14C3CC8", VA = "0x14C3CC8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000099")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000774")]
			[Address(RVA = "0x14C3D10", Offset = "0x14C3D10", VA = "0x14C3D10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600076F")]
		[Address(RVA = "0x14C33CC", Offset = "0x14C33CC", VA = "0x14C33CC")]
		[DebuggerHidden]
		public <mainGameModeLoop>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6000770")]
		[Address(RVA = "0x14C33F8", Offset = "0x14C33F8", VA = "0x14C33F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000771")]
		[Address(RVA = "0x14C33FC", Offset = "0x14C33FC", VA = "0x14C33FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000773")]
		[Address(RVA = "0x14C3CD0", Offset = "0x14C3CD0", VA = "0x14C3CD0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private EnduranceModeRaycaster enduranceModeRaycaster;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	private GameObject hudElementToRotate;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private EnduranceGameObjectAppearancePositionHelper enduranceGameObjectAppearancePositionHelper;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[SerializeField]
	private GameObject enduranceGameObjectPrefab;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[SerializeField]
	private CoordinationCoachPoolController poolController;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private string gameObjectType;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[SerializeField]
	private PointArrowAtTarget2D pointArrow;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private bool noGameObjectsPresent;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x169")]
	private bool squatGameObjectActive;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16A")]
	private bool lastObjectJustRemoved;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private EnduranceGameModeParameterContainer enduranceGameModeParameterContainer;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private int maxMovementCounter;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private GameObject gameObjectBeingPointedAt;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[SerializeField]
	private EnduranceSquatUnderneathObject enduranceSquatGameObject;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private List<EnduranceModePlane> enduranceModePlanes;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private List<EnduranceModePlane> enduranceModePlanesFarEnough;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private EnduranceModePlane previousMaxDistanceEndurancePlane;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private bool performPlaneDistanceCheck;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	private Vector3 playerPosZeroHeight;

	[Token(Token = "0x6000754")]
	[Address(RVA = "0x95E634", Offset = "0x95E634", VA = "0x95E634", Slot = "8")]
	protected override void specificAwakeSetup()
	{
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0x95E748", Offset = "0x95E748", VA = "0x95E748", Slot = "35")]
	protected override void specificModePerformGameSetup()
	{
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0x95E9EC", Offset = "0x95E9EC", VA = "0x95E9EC", Slot = "17")]
	protected override void specificSetupGameModeParameterContainer()
	{
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0x95EB18", Offset = "0x95EB18", VA = "0x95EB18", Slot = "5")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A57EC", Offset = "0x6A57EC")]
	protected override IEnumerator mainGameModeLoop()
	{
		return null;
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0x95EB90", Offset = "0x95EB90", VA = "0x95EB90", Slot = "34")]
	protected override void performBeforeCountdownStartsSetup()
	{
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0x95ED18", Offset = "0x95ED18", VA = "0x95ED18")]
	private void initializePlaneAppearanceLimits(float objectSize, float[] boundaryLimits)
	{
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0x95EE54", Offset = "0x95EE54", VA = "0x95EE54", Slot = "29")]
	protected override void specificGameModeStopGame()
	{
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0x95EFC8", Offset = "0x95EFC8", VA = "0x95EFC8")]
	private EnduranceModePlane getEnduranceModePlaneForObjectAppearance()
	{
		return null;
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0x95F1B8", Offset = "0x95F1B8", VA = "0x95F1B8")]
	private void updateEndurancePlanesFarEnough()
	{
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0x95F518", Offset = "0x95F518", VA = "0x95F518")]
	private EnduranceModePlane getEndurancePlaneAtMaximumDistanceFromPlayer()
	{
		return null;
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0x95F69C", Offset = "0x95F69C", VA = "0x95F69C")]
	private GameObject startObjectAppearance(PositionAndRotationContainer positionAndRotationContainer)
	{
		return null;
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0x95F7FC", Offset = "0x95F7FC", VA = "0x95F7FC", Slot = "47")]
	public override void gameObjectReachedDisappearancePosition(GameObject gameObject)
	{
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0x95F8D4", Offset = "0x95F8D4", VA = "0x95F8D4")]
	private void removeObjectFromActiveObjects(GameObject gameObject)
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0x95FB28", Offset = "0x95FB28", VA = "0x95FB28", Slot = "51")]
	public override void returnObjectToObjectPool(GameObject objectToReturnToPool)
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0x95FA28", Offset = "0x95FA28", VA = "0x95FA28")]
	private void lastObjectJustRemovedFromActiveObjects()
	{
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0x95FC7C", Offset = "0x95FC7C", VA = "0x95FC7C")]
	public void squatGameObjectReachedStartingPosition()
	{
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0x95FCB4", Offset = "0x95FCB4", VA = "0x95FCB4", Slot = "7")]
	protected override void playerEnergyZeroGameModeSpecific()
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0x95FD6C", Offset = "0x95FD6C", VA = "0x95FD6C", Slot = "32")]
	protected override void specificGameModeStartGame()
	{
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0x95FDC0", Offset = "0x95FDC0", VA = "0x95FDC0")]
	public void setEnduranceModePlanes(List<EnduranceModePlane> enduranceModePlanes)
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0x95FDD0", Offset = "0x95FDD0", VA = "0x95FDD0", Slot = "49")]
	protected override void gameDifficultyChangedInGameSpecific()
	{
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0x95FEA8", Offset = "0x95FEA8", VA = "0x95FEA8", Slot = "54")]
	protected override void onPausedSpecific()
	{
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0x95FF84", Offset = "0x95FF84", VA = "0x95FF84", Slot = "56")]
	protected override void onUnPausedSpecific()
	{
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0x960060", Offset = "0x960060", VA = "0x960060", Slot = "20")]
	protected override void restartedByPlayerWhileGameWasStillRunningSpecific()
	{
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0x9601B0", Offset = "0x9601B0", VA = "0x9601B0", Slot = "19")]
	protected override void resetOnRestartSpecific()
	{
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0x960240", Offset = "0x960240", VA = "0x960240", Slot = "58")]
	public override void gameStoppedByPlayerSpecific(List<GameObject> activeObjects)
	{
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0x9603F4", Offset = "0x9603F4", VA = "0x9603F4", Slot = "30")]
	protected override void resetOnStopGame()
	{
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0x9605E8", Offset = "0x9605E8", VA = "0x9605E8")]
	public EnduranceGameController()
	{
	}
}
[Token(Token = "0x200017D")]
public class EnduranceGameLoopSimulator : MonoBehaviour
{
	[Token(Token = "0x6000775")]
	[Address(RVA = "0x9606B0", Offset = "0x9606B0", VA = "0x9606B0")]
	public EnduranceGameLoopSimulator()
	{
	}
}
[Token(Token = "0x200017E")]
public class EnduranceGameModeParameterContainer : GameModeParameterContainer
{
	[Token(Token = "0x200017F")]
	public enum ENDURANCE_GAME_MODES
	{
		[Token(Token = "0x4000808")]
		NORMAL,
		[Token(Token = "0x4000809")]
		MAX_MOVEMENT
	}

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private ENDURANCE_GAME_MODES currentGameMode;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float MIN_DISTANCE_BETWEEN_PLAYER_AND_CREATION_PLANE;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float MIN_DISTANCE_BETWEEN_PLAYER_AND_OBJECT;

	[Token(Token = "0x40007F7")]
	private const string GAME_MODE_NAME = "ENDURANCE_MODE";

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int SCENE_TO_LOAD_INDEX;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool squat_object_active;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static float TUTORIAL_SQUAT_OBJECT_MOVEMENT_SPEED;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static float TUTORIAL_OBJECT_MOVEMENT_SPEED;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static float TUTORIAL_OBJECT_ACTIVATION_DURATION;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static float squatObjectJourneyTime;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static float squatObjectReturnJourneyTime;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static bool enduranceObjectsMove;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static int amountOfObjectsToActivate;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static float enduranceObjectMovementSpeed;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private static float enduranceObjectTimeToDisappearance;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static float enduranceObjectMovementAmount;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private static float enduranceObjectSize;

	[Token(Token = "0x4000805")]
	private const string SQUAT_OBJECT_ACTIVE_STRING = "SQUAT_OBJECT_ACTIVE";

	[Token(Token = "0x4000806")]
	private const string SQUAT_ACTIVE_PREFERENCES_VALUE = "SQUAT_ACTIVE";

	[Token(Token = "0x1700009A")]
	public static bool EnduranceObjectsMove
	{
		[Token(Token = "0x6000776")]
		[Address(RVA = "0x9606B8", Offset = "0x9606B8", VA = "0x9606B8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700009B")]
	public static int AmountOfObjectsToActivate
	{
		[Token(Token = "0x6000777")]
		[Address(RVA = "0x96071C", Offset = "0x96071C", VA = "0x96071C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700009C")]
	public static float EnduranceObjectMovementSpeed
	{
		[Token(Token = "0x6000778")]
		[Address(RVA = "0x960780", Offset = "0x960780", VA = "0x960780")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700009D")]
	public static float EnduranceObjectTimeToDisappearance
	{
		[Token(Token = "0x6000779")]
		[Address(RVA = "0x9607E4", Offset = "0x9607E4", VA = "0x9607E4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700009E")]
	public static float EnduranceObjectMovementAmount
	{
		[Token(Token = "0x600077A")]
		[Address(RVA = "0x960848", Offset = "0x960848", VA = "0x960848")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700009F")]
	public ENDURANCE_GAME_MODES CurrentGameMode
	{
		[Token(Token = "0x600077B")]
		[Address(RVA = "0x9608AC", Offset = "0x9608AC", VA = "0x9608AC")]
		get
		{
			return default(ENDURANCE_GAME_MODES);
		}
		[Token(Token = "0x600077C")]
		[Address(RVA = "0x9608B4", Offset = "0x9608B4", VA = "0x9608B4")]
		set
		{
		}
	}

	[Token(Token = "0x170000A0")]
	public static float SquatObjectJourneyTime
	{
		[Token(Token = "0x600077D")]
		[Address(RVA = "0x9608BC", Offset = "0x9608BC", VA = "0x9608BC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000A1")]
	public static float SquatObjectReturnJourneyTime
	{
		[Token(Token = "0x600077E")]
		[Address(RVA = "0x960920", Offset = "0x960920", VA = "0x960920")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000A2")]
	public static float EnduranceObjectSize
	{
		[Token(Token = "0x600077F")]
		[Address(RVA = "0x960984", Offset = "0x960984", VA = "0x960984")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000780")]
		[Address(RVA = "0x9609E8", Offset = "0x9609E8", VA = "0x9609E8")]
		set
		{
		}
	}

	[Token(Token = "0x170000A3")]
	public static bool Squat_object_active
	{
		[Token(Token = "0x6000781")]
		[Address(RVA = "0x960A58", Offset = "0x960A58", VA = "0x960A58")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000782")]
		[Address(RVA = "0x960ABC", Offset = "0x960ABC", VA = "0x960ABC")]
		set
		{
		}
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0x960B28", Offset = "0x960B28", VA = "0x960B28", Slot = "9")]
	public override int getSceneToLoadIndex()
	{
		return default(int);
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0x960B30", Offset = "0x960B30", VA = "0x960B30", Slot = "4")]
	public override void setGameDifficulty(GameModeValues.GameAndSubModeDifficulty difficulty)
	{
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0x960D4C", Offset = "0x960D4C", VA = "0x960D4C", Slot = "6")]
	public override string getGameModeName()
	{
		return null;
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0x960D90", Offset = "0x960D90", VA = "0x960D90", Slot = "8")]
	public override string getGameModeNameWithSubModes()
	{
		return null;
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0x9610B8", Offset = "0x9610B8", VA = "0x9610B8")]
	public static float getSquatObjectRetournJourneyTime()
	{
		return default(float);
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0x961188", Offset = "0x961188", VA = "0x961188", Slot = "7")]
	public override string getSubGameModeName()
	{
		return null;
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0x961214", Offset = "0x961214", VA = "0x961214", Slot = "5")]
	public override void loadLastUsedGameMode()
	{
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0x961520", Offset = "0x961520", VA = "0x961520")]
	public static void saveSquatObjectActiveValue()
	{
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0x9613D8", Offset = "0x9613D8", VA = "0x9613D8")]
	private static string getSquatObjectPreferencesString()
	{
		return null;
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0x9615B0", Offset = "0x9615B0", VA = "0x9615B0")]
	public EnduranceGameModeParameterContainer()
	{
	}
}
[Token(Token = "0x2000180")]
public class EnduranceGameObjectPoolController : CoordinationCoachPoolController
{
	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private PlayAreaService playAreaService;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private EnduranceFracturedPrefabPoolController enduranceFracturedPrefabPoolController;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected float[] playAreaBoundary;

	[Token(Token = "0x400080D")]
	private const int effectDuration = 2;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool playAreaSet;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private List<CoordinationCoachGameObject.MovementAxis> movementAxises;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float activationDurationMultiplier;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float regularXDistance;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float regularZDistance;

	[Token(Token = "0x600078E")]
	[Address(RVA = "0x96239C", Offset = "0x96239C", VA = "0x96239C", Slot = "19")]
	protected override void performSetupOnObjectOnInitialization(GameObject instantiatedPrefab, int i)
	{
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0x9626F8", Offset = "0x9626F8", VA = "0x9626F8", Slot = "21")]
	protected override void performSetupWhenCreatingExtraObjects(GameObject instantiatedGameObject, int i, CoordinationCoachGameObject.ActivationType activationType)
	{
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0x962708", Offset = "0x962708", VA = "0x962708", Slot = "23")]
	protected override void performSetupOnObjectDequeue(GameObject queueGameObject, CoordinationCoachGameObject.ActivationType activationType)
	{
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0x962854", Offset = "0x962854", VA = "0x962854", Slot = "28")]
	protected override void performOnReturnOfObjectToPool(GameObject returnToPoolObject)
	{
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0x962998", Offset = "0x962998", VA = "0x962998")]
	public void enableObjectMovement(string objectType, float maxDistanceToMove, float movementSpeed, List<CoordinationCoachGameObject.MovementAxis> movementAxises, float minX, float maxX, float minY, float maxY, float minZ, float maxZ)
	{
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0x962CB8", Offset = "0x962CB8", VA = "0x962CB8")]
	public void disableObjectMovement(string objectType)
	{
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0x962F68", Offset = "0x962F68", VA = "0x962F68")]
	public EnduranceGameObjectPoolController()
	{
	}
}
[Token(Token = "0x2000181")]
public class EnduranceModeConstants
{
	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly Vector3 forwardPlaneRotation;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static readonly Vector3 leftPlaneRotation;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly Vector3 rightPlaneRotation;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static readonly Vector3 backPlaneRotation;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly Vector3 forwardObjectRotation;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public static readonly Vector3 leftObjectRotation;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static readonly Vector3 rightObjectRotation;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public static readonly Vector3 backObjectRotation;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static readonly Vector3 forwardAppearanceCalculationVector;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public static readonly Vector3 backAppearanceCalculationVector;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static readonly Vector3 leftAppearanceCalculationVector;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public static readonly Vector3 rightAppearanceCalculationVector;

	[Token(Token = "0x6000795")]
	[Address(RVA = "0x963054", Offset = "0x963054", VA = "0x963054")]
	public EnduranceModeConstants()
	{
	}
}
[Token(Token = "0x2000182")]
public class EnduranceModeGameObject : FragmentingCoordinationCoachObject
{
	[Token(Token = "0x2000183")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CABC", Offset = "0x69CABC")]
	private sealed class <activeTimeCountdownCoroutine>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x4000825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EnduranceModeGameObject <>4__this;

		[Token(Token = "0x170000A4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007BB")]
			[Address(RVA = "0x14C3E30", Offset = "0x14C3E30", VA = "0x14C3E30", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007BD")]
			[Address(RVA = "0x14C3E78", Offset = "0x14C3E78", VA = "0x14C3E78", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007B8")]
		[Address(RVA = "0x14C3D18", Offset = "0x14C3D18", VA = "0x14C3D18")]
		[DebuggerHidden]
		public <activeTimeCountdownCoroutine>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60007B9")]
		[Address(RVA = "0x14C3D44", Offset = "0x14C3D44", VA = "0x14C3D44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007BA")]
		[Address(RVA = "0x14C3D48", Offset = "0x14C3D48", VA = "0x14C3D48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007BC")]
		[Address(RVA = "0x14C3E38", Offset = "0x14C3E38", VA = "0x14C3E38", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400081F")]
	public const float ADDITIONAL_Z_FOR_APPEARANCE = 0.2f;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	[SerializeField]
	private GameObject ball;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	[SerializeField]
	private EnduranceFracturedObjectInfo.EnduranceFragmentingObjectsType enduranceFragmentingObjectsType;

	[Token(Token = "0x6000797")]
	[Address(RVA = "0x963188", Offset = "0x963188", VA = "0x963188")]
	public void startCountdown()
	{
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0x963250", Offset = "0x963250", VA = "0x963250")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0x9633C8", Offset = "0x9633C8", VA = "0x9633C8", Slot = "100")]
	protected override void collidedWithOtherGameObject(Collider collider)
	{
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0x963418", Offset = "0x963418", VA = "0x963418", Slot = "94")]
	protected override void specificOnCollidedWithOtherObject()
	{
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0x963204", Offset = "0x963204", VA = "0x963204")]
	public void startCountdownToDeactivation()
	{
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0x963424", Offset = "0x963424", VA = "0x963424", Slot = "112")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A589C", Offset = "0x6A589C")]
	protected override IEnumerator activeTimeCountdownCoroutine(float duration)
	{
		return null;
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0x9634AC", Offset = "0x9634AC", VA = "0x9634AC", Slot = "118")]
	protected virtual void removeObjectFromGame(GameObject effectToPlay, Collider collider, bool touchedByPlayer)
	{
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0x963520", Offset = "0x963520", VA = "0x963520", Slot = "103")]
	public override void resetOnReturnToObjectPool()
	{
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0x96358C", Offset = "0x96358C", VA = "0x96358C", Slot = "104")]
	protected override void prepareObjectForReturnToGameObjectPool()
	{
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0x963590", Offset = "0x963590", VA = "0x963590", Slot = "119")]
	public virtual void collidedWithPlayer(Collider collider, bool touchedByPlayer)
	{
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0x9636FC", Offset = "0x9636FC", VA = "0x9636FC", Slot = "40")]
	protected override void touchedByPlayerHand(Collider collider)
	{
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0x9638D8", Offset = "0x9638D8", VA = "0x9638D8", Slot = "105")]
	protected override void playerScoredByTouchingObject(PlayerHandController playerHandController)
	{
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0x96392C", Offset = "0x96392C", VA = "0x96392C", Slot = "78")]
	public override void prePerformMovement()
	{
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0x96398C", Offset = "0x96398C", VA = "0x96398C", Slot = "82")]
	protected override void setNewLerpPosition()
	{
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0x963A14", Offset = "0x963A14", VA = "0x963A14", Slot = "27")]
	protected override void calculateBezierCurvePoints()
	{
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0x963A88", Offset = "0x963A88", VA = "0x963A88", Slot = "50")]
	public override void performAppearance(Vector3 appearanceDestination)
	{
	}

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0x963C50", Offset = "0x963C50", VA = "0x963C50", Slot = "62")]
	protected override float getDisappearanceMovementDistance()
	{
		return default(float);
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0x963C5C", Offset = "0x963C5C", VA = "0x963C5C", Slot = "61")]
	protected override void beforeDisappearanceStart(Transform inputTransform)
	{
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0x963C60", Offset = "0x963C60", VA = "0x963C60", Slot = "60")]
	protected override GameObject getDisappearanceEffect()
	{
		return null;
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0x963C68", Offset = "0x963C68", VA = "0x963C68", Slot = "74")]
	protected override void disappearancePositionReached()
	{
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0x963D50", Offset = "0x963D50", VA = "0x963D50", Slot = "67")]
	protected override float getWormHoleScaleMultiplier()
	{
		return default(float);
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0x963D58", Offset = "0x963D58", VA = "0x963D58", Slot = "56")]
	public override void startDisappearance(float scale)
	{
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0x963D98", Offset = "0x963D98", VA = "0x963D98", Slot = "63")]
	protected override Vector3 getDisappearanceWormHolePosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0x963DBC", Offset = "0x963DBC", VA = "0x963DBC", Slot = "20")]
	protected override void destroyAppearanceAndDisappearanceEffect()
	{
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0x963E30", Offset = "0x963E30", VA = "0x963E30", Slot = "72")]
	protected override void appearancePositionReached()
	{
	}

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0x963E98", Offset = "0x963E98", VA = "0x963E98")]
	public void appearancePositionReachedTest()
	{
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0x963EA8", Offset = "0x963EA8", VA = "0x963EA8", Slot = "44")]
	protected override void setVectorOfOriginalPosition()
	{
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0x963EE4", Offset = "0x963EE4", VA = "0x963EE4", Slot = "98")]
	public override float getObjectScale()
	{
		return default(float);
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0x963F80", Offset = "0x963F80", VA = "0x963F80", Slot = "64")]
	protected override Vector3 getDisappearanceFinishedPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0x96407C", Offset = "0x96407C", VA = "0x96407C", Slot = "99")]
	public override void calculateRendererBounds()
	{
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0x9641E0", Offset = "0x9641E0", VA = "0x9641E0", Slot = "7")]
	public override void setObjectTypeAsString()
	{
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0x964270", Offset = "0x964270", VA = "0x964270", Slot = "111")]
	protected override void onUnPausedSpecific(bool appearanceWasInProgress)
	{
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0x964288", Offset = "0x964288", VA = "0x964288")]
	public EnduranceModeGameObject()
	{
	}
}
[Token(Token = "0x2000184")]
public class EnduranceModePlane : MonoBehaviour
{
	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 enduranceObjectRotation;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	protected Vector3 appearancePosCalculationVector;

	[Token(Token = "0x4000828")]
	protected const float ADDITIONAL_DISTANCE_FROM_LIMIT = 0.15f;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected int planeIndex;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 raycastHitPosition;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private EnduranceModePlane leftPlane;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private EnduranceModePlane rightPlane;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected float[] appearanceLimits;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected float[] totalAppearanceArea;

	[Token(Token = "0x400082F")]
	protected const float RENDERER_MULTIPLIER = 1.5f;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected float enduranceObjectSize;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	protected float objectForwardAmount;

	[Token(Token = "0x4000832")]
	protected const float OBJECT_POSITIONING_FORWARD_MULTIPLIER = 2f;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected float objectStartAppearancePosBackAmount;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	protected Vector3 appearanceStartPosition;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected Vector3 appearanceFinishedPosition;

	[Token(Token = "0x170000A6")]
	public Vector3 EnduranceObjectRotation
	{
		[Token(Token = "0x60007BE")]
		[Address(RVA = "0x964290", Offset = "0x964290", VA = "0x964290")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60007BF")]
		[Address(RVA = "0x96429C", Offset = "0x96429C", VA = "0x96429C")]
		set
		{
		}
	}

	[Token(Token = "0x170000A7")]
	public Vector3 RaycastHitPosition
	{
		[Token(Token = "0x60007C0")]
		[Address(RVA = "0x9642A8", Offset = "0x9642A8", VA = "0x9642A8")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60007C1")]
		[Address(RVA = "0x9642B4", Offset = "0x9642B4", VA = "0x9642B4")]
		set
		{
		}
	}

	[Token(Token = "0x170000A8")]
	public Vector3 AppearancePosCalculationVector
	{
		[Token(Token = "0x60007C2")]
		[Address(RVA = "0x9642C0", Offset = "0x9642C0", VA = "0x9642C0")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60007C3")]
		[Address(RVA = "0x9642CC", Offset = "0x9642CC", VA = "0x9642CC")]
		set
		{
		}
	}

	[Token(Token = "0x170000A9")]
	public EnduranceModePlane LeftPlane
	{
		[Token(Token = "0x60007C4")]
		[Address(RVA = "0x9642D8", Offset = "0x9642D8", VA = "0x9642D8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007C5")]
		[Address(RVA = "0x9642E0", Offset = "0x9642E0", VA = "0x9642E0")]
		set
		{
		}
	}

	[Token(Token = "0x170000AA")]
	public EnduranceModePlane RightPlane
	{
		[Token(Token = "0x60007C6")]
		[Address(RVA = "0x9642E8", Offset = "0x9642E8", VA = "0x9642E8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007C7")]
		[Address(RVA = "0x9642F0", Offset = "0x9642F0", VA = "0x9642F0")]
		set
		{
		}
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0x9642F8", Offset = "0x9642F8", VA = "0x9642F8")]
	public int getPlaneIndex()
	{
		return default(int);
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0x964300", Offset = "0x964300", VA = "0x964300", Slot = "4")]
	public virtual void initalizeAppearanceLimits(float objectSize, float[] boundaryLimits)
	{
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0x964594", Offset = "0x964594", VA = "0x964594", Slot = "5")]
	protected virtual void calculateTotalAppearanceArea()
	{
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0x964704", Offset = "0x964704", VA = "0x964704", Slot = "6")]
	public virtual Vector3 getRandomPosForObjectAppearance()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0x9647B4", Offset = "0x9647B4", VA = "0x9647B4", Slot = "7")]
	public virtual float[] getTotalApperanceArea()
	{
		return null;
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0x9647BC", Offset = "0x9647BC", VA = "0x9647BC", Slot = "8")]
	public virtual Vector3 getLeftAppearancePos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0x964854", Offset = "0x964854", VA = "0x964854", Slot = "9")]
	public virtual Vector3 getRightAppearancePos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0x962220", Offset = "0x962220", VA = "0x962220")]
	public Vector3 getAppearanceStartPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0x9648F0", Offset = "0x9648F0", VA = "0x9648F0")]
	public void setAppearanceForwardAmount(float appearanceForward)
	{
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0x9648F8", Offset = "0x9648F8", VA = "0x9648F8")]
	public EnduranceModePlane()
	{
	}
}
[Token(Token = "0x2000185")]
public class EnduranceModePlaneCreationService : MonoBehaviour
{
	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PlayAreaService playAreaService;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject enduranceModePlanePrefab;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject leftRightEnduranceModePlanePrefab;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform playerTransform;

	[Token(Token = "0x400083A")]
	private const int NUMBER_OF_PLANES_PER_SIDE = 4;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject enduranceGameModeObject;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private EnduranceGameController enduranceGameController;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private PositionToBoundaryService positionToBoundaryService;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<EnduranceModePlane> allEndurancePlanes;

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0x964990", Offset = "0x964990", VA = "0x964990")]
	private void Start()
	{
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0x9656A8", Offset = "0x9656A8", VA = "0x9656A8")]
	public List<EnduranceModePlane> getEnduranceModePlanes()
	{
		return null;
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0x9651CC", Offset = "0x9651CC", VA = "0x9651CC")]
	private void connectPlanesToEachOther(EnduranceModePlane[] forwardPlanes, EnduranceModePlane[] rightPlanes, EnduranceModePlane[] backPlanes, EnduranceModePlane[] leftPlanes)
	{
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0x964E1C", Offset = "0x964E1C", VA = "0x964E1C")]
	private EnduranceModePlane[] createEnduranceModePlanes(GameObject prefabToInstantiate, float size, Vector3 planeRotationVector3, Vector3 activatedGameObjectRotationVector, Vector3 apperanceCalculationVector, Vector3[] positions)
	{
		return null;
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0x964D58", Offset = "0x964D58", VA = "0x964D58")]
	private Vector3[] getForwardOrBackPlanePositions(float xMin, float zPos, float size)
	{
		return null;
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0x96510C", Offset = "0x96510C", VA = "0x96510C")]
	private Vector3[] getLeftOrRightPlanePositions(float zMin, float xPos, float size)
	{
		return null;
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0x9656B0", Offset = "0x9656B0", VA = "0x9656B0")]
	public EnduranceModePlaneCreationService()
	{
	}
}
[Token(Token = "0x2000186")]
public class EnduranceModeRaycaster : MonoBehaviour
{
	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float m_Distance;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private LayerMask m_InteractableMask;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform playerTransform;

	[Token(Token = "0x4000842")]
	private const int AMOUNT_OF_RAYS = 8;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<EnduranceRaycastHitContainer> raycastHitContainers;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<EnduranceRaycastHitContainer> containersWithHits;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int[][] angles;

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0x9656B8", Offset = "0x9656B8", VA = "0x9656B8")]
	private void Start()
	{
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0x965768", Offset = "0x965768", VA = "0x965768")]
	public List<EnduranceRaycastHitContainer> getEnduranceRaycastHitContainers()
	{
		return null;
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0x9658A0", Offset = "0x9658A0", VA = "0x9658A0")]
	private EnduranceRaycastHitContainer getEnduranceRaycastHitContainerAtAngle(int angle, EnduranceRaycastHitContainer containerToUse)
	{
		return null;
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0x965B6C", Offset = "0x965B6C", VA = "0x965B6C")]
	private RaycastHit getObjectAtEndOfRaycast(int angle)
	{
		return default(RaycastHit);
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0x965BD0", Offset = "0x965BD0", VA = "0x965BD0")]
	private RaycastHit CreateRaycast(int layer, int angle)
	{
		return default(RaycastHit);
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0x965D54", Offset = "0x965D54", VA = "0x965D54")]
	public RaycastHit CreateRaycast(Vector3 startingPos, Vector3 direction, int layer)
	{
		return default(RaycastHit);
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0x965DE4", Offset = "0x965DE4", VA = "0x965DE4")]
	public EnduranceModePlane getEnduranceModePlaneRelativeToPosition(Vector3 startingPos, Vector3 direction)
	{
		return null;
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0x965FE0", Offset = "0x965FE0", VA = "0x965FE0")]
	public EnduranceModeRaycaster()
	{
	}
}
[Token(Token = "0x2000187")]
public class EnduranceModeRaycasterTester : MonoBehaviour
{
	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private EnduranceModeRaycaster enduranceModeRaycaster;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private InstantiateAndActivateEnduranceObjectTester instantiateTester;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject hudElementToRotate;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject enduranceGameObjectPrefab;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private EnduranceGameObjectAppearancePositionHelper enduranceGameObjectAppearancePositionHelper;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private PointArrowAtTarget2D pointArrow;

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0x966424", Offset = "0x966424", VA = "0x966424")]
	private void Update()
	{
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0x9664F8", Offset = "0x9664F8", VA = "0x9664F8")]
	private void startObjectMovement(List<GameObject> objectsToActivate)
	{
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0x966738", Offset = "0x966738", VA = "0x966738")]
	public EnduranceModeRaycasterTester()
	{
	}
}
[Token(Token = "0x2000188")]
public class EnduranceModeSphereAppearanceColorChanger : MonoBehaviour
{
	[Token(Token = "0x60007E4")]
	[Address(RVA = "0x966740", Offset = "0x966740", VA = "0x966740")]
	private void Start()
	{
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0x966744", Offset = "0x966744", VA = "0x966744")]
	private void Update()
	{
	}

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0x966748", Offset = "0x966748", VA = "0x966748")]
	public EnduranceModeSphereAppearanceColorChanger()
	{
	}
}
[Token(Token = "0x2000189")]
public class EnduranceRaycastHitContainer
{
	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float rotationAngle;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private EnduranceModePlane enduranceModePlane;

	[Token(Token = "0x170000AB")]
	public float RotationAngle
	{
		[Token(Token = "0x60007E8")]
		[Address(RVA = "0x966750", Offset = "0x966750", VA = "0x966750")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60007E9")]
		[Address(RVA = "0x966758", Offset = "0x966758", VA = "0x966758")]
		set
		{
		}
	}

	[Token(Token = "0x170000AC")]
	public EnduranceModePlane EnduranceModePlane
	{
		[Token(Token = "0x60007EA")]
		[Address(RVA = "0x966760", Offset = "0x966760", VA = "0x966760")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007EB")]
		[Address(RVA = "0x966768", Offset = "0x966768", VA = "0x966768")]
		set
		{
		}
	}

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0x965760", Offset = "0x965760", VA = "0x965760")]
	public EnduranceRaycastHitContainer()
	{
	}
}
[Token(Token = "0x200018A")]
public class EnduranceSquatUnderneathObject : CoordinationCoachGameObject
{
	[Token(Token = "0x200018B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CACC", Offset = "0x69CACC")]
	private sealed class <heightSettingCoroutine>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400085C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400085D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400085E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnduranceSquatUnderneathObject <>4__this;

		[Token(Token = "0x170000AE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000800")]
			[Address(RVA = "0x14C3F4C", Offset = "0x14C3F4C", VA = "0x14C3F4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000802")]
			[Address(RVA = "0x14C3F94", Offset = "0x14C3F94", VA = "0x14C3F94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007FD")]
		[Address(RVA = "0x14C3E80", Offset = "0x14C3E80", VA = "0x14C3E80")]
		[DebuggerHidden]
		public <heightSettingCoroutine>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x60007FE")]
		[Address(RVA = "0x14C3EAC", Offset = "0x14C3EAC", VA = "0x14C3EAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007FF")]
		[Address(RVA = "0x14C3EB0", Offset = "0x14C3EB0", VA = "0x14C3EB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000801")]
		[Address(RVA = "0x14C3F54", Offset = "0x14C3F54", VA = "0x14C3F54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private Transform playerTransform;

	[Token(Token = "0x400084F")]
	private const float HEIGHT_MULTIPLIER = 0.35f;

	[Token(Token = "0x4000850")]
	private const float STARTING_DISTANCE_FROM_PLAYER = 3f;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	private bool movingTowardsPlayer;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	[SerializeField]
	private AudioClip movingTowardsPlayerSound;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	[SerializeField]
	private AudioClip movingTowardsOriginalPositionSound;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	[SerializeField]
	private GameObject body;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	private float startingHeight;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
	private float originalJourneyTime;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private EnduranceGameController enduranceGameController;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	public readonly Vector3 defaultStartingPosition;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
	[SerializeField]
	private bool updateStartPosHeighInCoroutine;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	[SerializeField]
	private Transform startingHeightOffset;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	private WaitForSeconds waitForHalfSecond;

	[Token(Token = "0x170000AD")]
	public Transform PlayerTransform
	{
		[Token(Token = "0x60007EC")]
		[Address(RVA = "0x9667C0", Offset = "0x9667C0", VA = "0x9667C0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007ED")]
		[Address(RVA = "0x9667C8", Offset = "0x9667C8", VA = "0x9667C8")]
		set
		{
		}
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0x95E930", Offset = "0x95E930", VA = "0x95E930")]
	public void performGenericSetup(float speed, GameController gameController)
	{
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0x95E8B8", Offset = "0x95E8B8", VA = "0x95E8B8")]
	public void updatePositionCorrespondingToPlayer()
	{
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0x9667D8", Offset = "0x9667D8", VA = "0x9667D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A594C", Offset = "0x6A594C")]
	private IEnumerator heightSettingCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0x966850", Offset = "0x966850", VA = "0x966850")]
	private void updateStartingPosition()
	{
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0x95FC00", Offset = "0x95FC00", VA = "0x95FC00")]
	public void startMovingTowardsPlayer()
	{
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0x9669C4", Offset = "0x9669C4", VA = "0x9669C4", Slot = "77")]
	public override void performGameAction()
	{
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0x966AA0", Offset = "0x966AA0", VA = "0x966AA0")]
	private void updateDestination()
	{
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0x966BCC", Offset = "0x966BCC", VA = "0x966BCC", Slot = "99")]
	public override void calculateRendererBounds()
	{
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0x966D30", Offset = "0x966D30", VA = "0x966D30", Slot = "40")]
	protected override void touchedByPlayerHand(Collider collider)
	{
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0x966DB8", Offset = "0x966DB8", VA = "0x966DB8", Slot = "91")]
	protected override void collidedWithPlayer(Collider collider)
	{
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0x966AFC", Offset = "0x966AFC", VA = "0x966AFC")]
	private void startMovingBackToOriginalPosition()
	{
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0x95EC84", Offset = "0x95EC84", VA = "0x95EC84")]
	public void resetEnduranceSquatObject()
	{
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0x95FE9C", Offset = "0x95FE9C", VA = "0x95FE9C")]
	public void updateJourneyTime(float speed)
	{
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0x95ECE0", Offset = "0x95ECE0", VA = "0x95ECE0")]
	public void repositionToOriginalPosition()
	{
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0x966E1C", Offset = "0x966E1C", VA = "0x966E1C")]
	public EnduranceSquatUnderneathObject()
	{
	}
}
[Token(Token = "0x200018C")]
public class EnduranceTutorialController : TutorialController
{
	[Token(Token = "0x200018D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CADC", Offset = "0x69CADC")]
	private sealed class <performGameModeSpecificTutorialSteps>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnduranceTutorialController <>4__this;

		[Token(Token = "0x4000868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool startingBySkip;

		[Token(Token = "0x170000B0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600080D")]
			[Address(RVA = "0x14C4DA4", Offset = "0x14C4DA4", VA = "0x14C4DA4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600080F")]
			[Address(RVA = "0x14C4DEC", Offset = "0x14C4DEC", VA = "0x14C4DEC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600080A")]
		[Address(RVA = "0x14C3F9C", Offset = "0x14C3F9C", VA = "0x14C3F9C")]
		[DebuggerHidden]
		public <performGameModeSpecificTutorialSteps>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600080B")]
		[Address(RVA = "0x14C3FC8", Offset = "0x14C3FC8", VA = "0x14C3FC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600080C")]
		[Address(RVA = "0x14C3FCC", Offset = "0x14C3FCC", VA = "0x14C3FCC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600080E")]
		[Address(RVA = "0x14C4DAC", Offset = "0x14C4DAC", VA = "0x14C4DAC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[SerializeField]
	private GameObject tutorialEnduranceObject;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[SerializeField]
	private TutorialObjectPositioningHelper tutorialHelper;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[SerializeField]
	private EnduranceSquatUnderneathObject enduranceSquat;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[SerializeField]
	private PointArrowAtTarget2D pointArrow;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private Vector3 ADDITIONAL_Z;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	private bool squatObjectActive;

	[Token(Token = "0x6000803")]
	[Address(RVA = "0x966ED4", Offset = "0x966ED4", VA = "0x966ED4", Slot = "8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A59FC", Offset = "0x6A59FC")]
	protected override IEnumerator performGameModeSpecificTutorialSteps(bool startingBySkip)
	{
		return null;
	}

	[Token(Token = "0x6000804")]
	[Address(RVA = "0x966F60", Offset = "0x966F60", VA = "0x966F60", Slot = "21")]
	protected override void objectReachedDisappearancePositionSpecific(GameObject gameObjectReachedDestination)
	{
	}

	[Token(Token = "0x6000805")]
	[Address(RVA = "0x966F84", Offset = "0x966F84", VA = "0x966F84", Slot = "9")]
	public override void startTutorialStep()
	{
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0x966F9C", Offset = "0x966F9C", VA = "0x966F9C", Slot = "22")]
	protected override void onPausedSpecific()
	{
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0x967010", Offset = "0x967010", VA = "0x967010", Slot = "23")]
	protected override void onUnPausedSpecific()
	{
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0x96706C", Offset = "0x96706C", VA = "0x96706C", Slot = "7")]
	protected override void stopTutorialSpecific()
	{
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0x96709C", Offset = "0x96709C", VA = "0x96709C")]
	public EnduranceTutorialController()
	{
	}
}
[Token(Token = "0x200018E")]
public class InstantiateAndActivateEnduranceObjectTester : MonoBehaviour
{
	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject enduranceGameObjectPrefab;

	[Token(Token = "0x6000810")]
	[Address(RVA = "0x9FE2E8", Offset = "0x9FE2E8", VA = "0x9FE2E8")]
	public GameObject instantiateEnduranceGameObjectPrefab(Vector3 pos, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0x9FE3BC", Offset = "0x9FE3BC", VA = "0x9FE3BC")]
	public InstantiateAndActivateEnduranceObjectTester()
	{
	}
}
[Token(Token = "0x200018F")]
public class LeftRightEnduranceModePlane : EnduranceModePlane
{
	[Token(Token = "0x6000812")]
	[Address(RVA = "0xD7DD20", Offset = "0xD7DD20", VA = "0xD7DD20", Slot = "5")]
	protected override void calculateTotalAppearanceArea()
	{
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0xD7DE7C", Offset = "0xD7DE7C", VA = "0xD7DE7C", Slot = "4")]
	public override void initalizeAppearanceLimits(float objectSize, float[] boundaryLimits)
	{
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0xD7E114", Offset = "0xD7E114", VA = "0xD7E114", Slot = "6")]
	public override Vector3 getRandomPosForObjectAppearance()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000815")]
	[Address(RVA = "0xD7E1C0", Offset = "0xD7E1C0", VA = "0xD7E1C0", Slot = "8")]
	public override Vector3 getLeftAppearancePos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0xD7E24C", Offset = "0xD7E24C", VA = "0xD7E24C", Slot = "9")]
	public override Vector3 getRightAppearancePos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0xD7E2DC", Offset = "0xD7E2DC", VA = "0xD7E2DC")]
	public LeftRightEnduranceModePlane()
	{
	}
}
[Token(Token = "0x2000190")]
public class EnduranceTutorialPoolController : TutorialObjectCoordinationCoachPoolController
{
	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private EnduranceFracturedPrefabPoolController enduranceFracturedPrefabPoolController;

	[Token(Token = "0x6000818")]
	[Address(RVA = "0x9670B4", Offset = "0x9670B4", VA = "0x9670B4", Slot = "19")]
	protected override void performSetupOnObjectOnInitialization(GameObject instantiatedPrefab, int i)
	{
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0x967160", Offset = "0x967160", VA = "0x967160", Slot = "30")]
	protected override void performAdditionalTutorialObjectSetup(GameObject instantiatedPrefab)
	{
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0x9671D8", Offset = "0x9671D8", VA = "0x9671D8", Slot = "23")]
	protected override void performSetupOnObjectDequeue(GameObject queueGameObject, CoordinationCoachGameObject.ActivationType activationType)
	{
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0x967310", Offset = "0x967310", VA = "0x967310", Slot = "28")]
	protected override void performOnReturnOfObjectToPool(GameObject returnToPoolObject)
	{
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0x967480", Offset = "0x967480", VA = "0x967480")]
	public EnduranceTutorialPoolController()
	{
	}
}
[Token(Token = "0x2000191")]
public class TutorialEnduranceGameObject : EnduranceModeGameObject
{
	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	private TutorialController tutorialController;

	[Token(Token = "0x170000B2")]
	public TutorialController TutorialController
	{
		[Token(Token = "0x600081D")]
		[Address(RVA = "0x14E7D30", Offset = "0x14E7D30", VA = "0x14E7D30")]
		get
		{
			return null;
		}
		[Token(Token = "0x600081E")]
		[Address(RVA = "0x14E7D38", Offset = "0x14E7D38", VA = "0x14E7D38")]
		set
		{
		}
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0x14E7D48", Offset = "0x14E7D48", VA = "0x14E7D48", Slot = "118")]
	protected override void removeObjectFromGame(GameObject effectToPlay, Collider collider, bool touchedByPlayer)
	{
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0x14E7DC0", Offset = "0x14E7DC0", VA = "0x14E7DC0", Slot = "119")]
	public override void collidedWithPlayer(Collider collider, bool touchedByPlayer)
	{
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0x14E7EFC", Offset = "0x14E7EFC", VA = "0x14E7EFC", Slot = "42")]
	protected override void playerTouchedForbiddenObject(PlayerHandController playerHandController)
	{
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0x14E7F70", Offset = "0x14E7F70", VA = "0x14E7F70", Slot = "74")]
	protected override void disappearancePositionReached()
	{
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0x14E7FE0", Offset = "0x14E7FE0", VA = "0x14E7FE0", Slot = "40")]
	protected override void touchedByPlayerHand(Collider collider)
	{
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0x14E8184", Offset = "0x14E8184", VA = "0x14E8184", Slot = "106")]
	protected override void removeGameObjectFromActiveObjectsInScene()
	{
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0x14E81C4", Offset = "0x14E81C4", VA = "0x14E81C4", Slot = "105")]
	protected override void playerScoredByTouchingObject(PlayerHandController playerHandController)
	{
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0x14E81F8", Offset = "0x14E81F8", VA = "0x14E81F8", Slot = "73")]
	protected override void appearancePositionReachedSpecific()
	{
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0x14E8238", Offset = "0x14E8238", VA = "0x14E8238", Slot = "72")]
	protected override void appearancePositionReached()
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0x14E8250", Offset = "0x14E8250", VA = "0x14E8250")]
	public TutorialEnduranceGameObject()
	{
	}
}
[Token(Token = "0x2000192")]
public class NonStandAloneTargetTouchContainerMovementStarter : MonoBehaviour
{
	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private NonStandaloneTargetTouchContainerMovementController movementController;

	[Token(Token = "0x6000829")]
	[Address(RVA = "0xC79F3C", Offset = "0xC79F3C", VA = "0xC79F3C")]
	private void Start()
	{
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0xC7A060", Offset = "0xC7A060", VA = "0xC7A060")]
	public NonStandAloneTargetTouchContainerMovementStarter()
	{
	}
}
[Token(Token = "0x2000193")]
public class NonStandaloneTargetTouchContainerMovementController : MonoBehaviour
{
	[Token(Token = "0x2000194")]
	protected enum MOVEMENT
	{
		[Token(Token = "0x400089A")]
		NONE,
		[Token(Token = "0x400089B")]
		LEFT,
		[Token(Token = "0x400089C")]
		RIGHT,
		[Token(Token = "0x400089D")]
		FORWARD,
		[Token(Token = "0x400089E")]
		BACK,
		[Token(Token = "0x400089F")]
		DOWN,
		[Token(Token = "0x40008A0")]
		UP,
		[Token(Token = "0x40008A1")]
		ROTATE_LEFT,
		[Token(Token = "0x40008A2")]
		ROTATE_RIGHT,
		[Token(Token = "0x40008A3")]
		CORRECTIONAL
	}

	[Token(Token = "0x2000195")]
	protected enum MOVEMENT_MODE
	{
		[Token(Token = "0x40008A5")]
		DIRECT,
		[Token(Token = "0x40008A6")]
		CURVED
	}

	[Token(Token = "0x2000196")]
	private enum LAST_ROTATION
	{
		[Token(Token = "0x40008A8")]
		NONE,
		[Token(Token = "0x40008A9")]
		LEFT,
		[Token(Token = "0x40008AA")]
		RIGHT
	}

	[Token(Token = "0x2000197")]
	private class PausedRotation
	{
		[Token(Token = "0x40008AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private MOVEMENT movement;

		[Token(Token = "0x6000872")]
		[Address(RVA = "0x14926B4", Offset = "0x14926B4", VA = "0x14926B4")]
		public PausedRotation(MOVEMENT movement)
		{
		}

		[Token(Token = "0x6000873")]
		[Address(RVA = "0x14926E0", Offset = "0x14926E0", VA = "0x14926E0")]
		public MOVEMENT getMovement()
		{
			return default(MOVEMENT);
		}
	}

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject player;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private BezierCurveController bezierCurveController;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 currentMovementStartPosition;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 destination;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected float mTimer;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float journeyTime;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected float bezierJourneyTime;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected float bezierMovementSpeed;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected MOVEMENT_MODE currentMovementMode;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	protected float lerpJourneyTimeMultiplier;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected float maxJourneyDistance;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Dictionary<MOVEMENT, Vector3> currentMovements;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private LAST_ROTATION lastPerformedRotation;

	[Token(Token = "0x400087A")]
	private const int ROTATION_DEGREES_90 = 90;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float startRotation;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int currentRotationDirection;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int currentAmountToRotate;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 positionToRotateAround;

	[Token(Token = "0x400087F")]
	private const int LEFT_ROTATION_DIRECTION = -1;

	[Token(Token = "0x4000880")]
	private const int RIGHT_ROTATION_DIRECTION = 1;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	protected PlayAreaService playAreaService;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float[] playAreaBoundary;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private GameObject positionCheckGameObject;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool movementStarted;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private List<GameObject> childGameObjects;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float[] rendererBounds;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float xBoundsDividedByLeftRightDivider;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float zBoundsDividedByLeftRightDivider;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float zBoundsDividedByBackForwardDivider;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float zBoundsForRotation;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float[] rendererBoundsForMovementCalc;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float[] rotationRendererBoundsForMovementCalc;

	[Token(Token = "0x400088D")]
	private const float LEFT_RIGHT_BOUNDARY_CHECK_DIVIDER = 1.9f;

	[Token(Token = "0x400088E")]
	private const float BACK_BOUNDARY_CHECK_DIVIDER = 1f;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float[] backMovementRendererBounds;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float[] forwardMovementRendererBounds;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float xForwardMovementBounds;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private float zForwardMovementBounds;

	[Token(Token = "0x4000893")]
	private const float FORWARD_MOVE_ADDITIONAL_DIVIDER = 2f;

	[Token(Token = "0x4000894")]
	private const float ROTATION_LEFT_RIGHT_DIVIDER = 2f;

	[Token(Token = "0x4000895")]
	private const float ROTATION_BACK_FORWARD_DIVIDER = 2f;

	[Token(Token = "0x4000896")]
	private const float LEFT_RIGHT_EDGE_CALCULATION_DIVIDER = 2f;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool performInitialPositionCheck;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Renderer my_Renderer;

	[Token(Token = "0x170000B3")]
	public List<GameObject> ChildGameObjects
	{
		[Token(Token = "0x600082B")]
		[Address(RVA = "0xC7A068", Offset = "0xC7A068", VA = "0xC7A068")]
		get
		{
			return null;
		}
		[Token(Token = "0x600082C")]
		[Address(RVA = "0xC7A070", Offset = "0xC7A070", VA = "0xC7A070")]
		set
		{
		}
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0xC7A078", Offset = "0xC7A078", VA = "0xC7A078")]
	private void Start()
	{
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0xC7A114", Offset = "0xC7A114", VA = "0xC7A114")]
	private void calculateMovementRendererBounds()
	{
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0xC7A218", Offset = "0xC7A218", VA = "0xC7A218")]
	private void updateMovementRendererBounds()
	{
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0xC79F78", Offset = "0xC79F78", VA = "0xC79F78")]
	public void performSetup()
	{
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0xC7A714", Offset = "0xC7A714", VA = "0xC7A714")]
	private void setupPositionCheckGameObject()
	{
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0xC7A82C", Offset = "0xC7A82C", VA = "0xC7A82C", Slot = "4")]
	public virtual void setMovementBoundaries()
	{
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0xC7A9FC", Offset = "0xC7A9FC", VA = "0xC7A9FC")]
	public void setMovementStarted(bool input)
	{
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0xC7AA08", Offset = "0xC7AA08", VA = "0xC7AA08")]
	public void stopMovement()
	{
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0xC7AA48", Offset = "0xC7AA48", VA = "0xC7AA48")]
	public void resetValues()
	{
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0xC7AA80", Offset = "0xC7AA80", VA = "0xC7AA80")]
	private void Update()
	{
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0xC7B478", Offset = "0xC7B478", VA = "0xC7B478")]
	private MOVEMENT getRotationalMovementFromCurrentMovements()
	{
		return default(MOVEMENT);
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0xC7B5B8", Offset = "0xC7B5B8", VA = "0xC7B5B8")]
	private MOVEMENT getVerticalMovementInCurrentMovements()
	{
		return default(MOVEMENT);
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0xC7AFB4", Offset = "0xC7AFB4", VA = "0xC7AFB4")]
	private bool checkIfCurrentPosWithinAllowedBoundary()
	{
		return default(bool);
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0xC7B6F8", Offset = "0xC7B6F8", VA = "0xC7B6F8")]
	private void performNormalGameMovement()
	{
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0xC7B084", Offset = "0xC7B084", VA = "0xC7B084")]
	private void moveToRandomBoundary()
	{
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0xC7BB18", Offset = "0xC7BB18", VA = "0xC7BB18")]
	private Vector3 getPointOnBezierCurve(float mTimerValue)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0xC7BB0C", Offset = "0xC7BB0C", VA = "0xC7BB0C")]
	private float getMTimerCorrectedBezier(float mTimer)
	{
		return default(float);
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0xC7A5DC", Offset = "0xC7A5DC", VA = "0xC7A5DC")]
	private void clearCurrentMovements()
	{
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0xC7B46C", Offset = "0xC7B46C", VA = "0xC7B46C")]
	private void startNewMovements(bool canChangeMovementMode)
	{
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0xC7C0A4", Offset = "0xC7C0A4", VA = "0xC7C0A4")]
	protected float getBezierCurveDistance()
	{
		return default(float);
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0xC7AEE0", Offset = "0xC7AEE0", VA = "0xC7AEE0")]
	private void moveChildObjects()
	{
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0xC7C270", Offset = "0xC7C270", VA = "0xC7C270")]
	private void setRotationDirection(MOVEMENT movement)
	{
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0xC7BA84", Offset = "0xC7BA84", VA = "0xC7BA84")]
	private bool isRotationalMovement(MOVEMENT movement)
	{
		return default(bool);
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0xC7BAA0", Offset = "0xC7BAA0", VA = "0xC7BAA0")]
	private bool isUpDownMovement(MOVEMENT movement)
	{
		return default(bool);
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0xC7C284", Offset = "0xC7C284", VA = "0xC7C284")]
	private Vector3 changeDestinationDueToMovement(MOVEMENT movement)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0xC7C49C", Offset = "0xC7C49C", VA = "0xC7C49C")]
	private void setRotationAmount()
	{
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0xC7C54C", Offset = "0xC7C54C", VA = "0xC7C54C")]
	private int getResetRotationAmount()
	{
		return default(int);
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0xC7C514", Offset = "0xC7C514", VA = "0xC7C514")]
	private bool furtherRotationAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0xC7C44C", Offset = "0xC7C44C", VA = "0xC7C44C")]
	private float getLinearMovementAmount(float max)
	{
		return default(float);
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0xC7B9A4", Offset = "0xC7B9A4", VA = "0xC7B9A4")]
	private bool checkMovementFinished(MOVEMENT movement)
	{
		return default(bool);
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0xC7C838", Offset = "0xC7C838", VA = "0xC7C838")]
	public void stopAllCoroutinesForTesting()
	{
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0xC7C840", Offset = "0xC7C840", VA = "0xC7C840")]
	private void setDestinationToCurrentPosition()
	{
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0xC7BC48", Offset = "0xC7BC48", VA = "0xC7BC48")]
	private void calculateNewMovements(bool canChangeMovementMode)
	{
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0xC7CE98", Offset = "0xC7CE98", VA = "0xC7CE98")]
	private bool isObjectRotated()
	{
		return default(bool);
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0xC7CAEC", Offset = "0xC7CAEC", VA = "0xC7CAEC")]
	private void addOneMovementToCurrentMovements(List<MOVEMENT> movements)
	{
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0xC7BABC", Offset = "0xC7BABC", VA = "0xC7BABC")]
	private void updateLerpJourneyTimeMultiplier()
	{
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0xC7A6D8", Offset = "0xC7A6D8", VA = "0xC7A6D8")]
	public void updateVectorOfCurrentMovementStartPosition()
	{
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0xC7CEC8", Offset = "0xC7CEC8", VA = "0xC7CEC8")]
	public void repositionPositionCheckGameObject(Vector3 pos)
	{
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0xC7CD58", Offset = "0xC7CD58", VA = "0xC7CD58")]
	private void updateBezierCurveValues()
	{
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0xC7CF50", Offset = "0xC7CF50", VA = "0xC7CF50")]
	private MOVEMENT getCurrentMovementBackForward()
	{
		return default(MOVEMENT);
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0xC7D130", Offset = "0xC7D130", VA = "0xC7D130")]
	private bool isBackForwardMovement(MOVEMENT movement)
	{
		return default(bool);
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0xC7D14C", Offset = "0xC7D14C", VA = "0xC7D14C", Slot = "5")]
	protected virtual void updateMovementMode()
	{
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0xC7D184", Offset = "0xC7D184", VA = "0xC7D184")]
	private void addOneOfAllowedMovements(List<MOVEMENT> movementsToPerform, List<MOVEMENT> allowedSubMovements)
	{
	}

	[Token(Token = "0x6000858")]
	[Address(RVA = "0xC7CC18", Offset = "0xC7CC18", VA = "0xC7CC18")]
	private MOVEMENT getOneOfAllowedMovements(List<MOVEMENT> allowedSubMovements)
	{
		return default(MOVEMENT);
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0xC7C94C", Offset = "0xC7C94C", VA = "0xC7C94C")]
	private List<MOVEMENT> getAllowedLeftRightMovements()
	{
		return null;
	}

	[Token(Token = "0x600085A")]
	[Address(RVA = "0xC7CA1C", Offset = "0xC7CA1C", VA = "0xC7CA1C")]
	private List<MOVEMENT> getAllowedBackForwardMovements()
	{
		return null;
	}

	[Token(Token = "0x600085B")]
	[Address(RVA = "0xC7BA14", Offset = "0xC7BA14", VA = "0xC7BA14")]
	private void setLastRotation(MOVEMENT movementToPerform)
	{
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0xC7A418", Offset = "0xC7A418", VA = "0xC7A418")]
	private void setPositionOfPositionCheckGameObjectToCurrentPosition()
	{
	}

	[Token(Token = "0x600085D")]
	[Address(RVA = "0xC7D444", Offset = "0xC7D444", VA = "0xC7D444")]
	private bool canMoveBack()
	{
		return default(bool);
	}

	[Token(Token = "0x600085E")]
	[Address(RVA = "0xC7D540", Offset = "0xC7D540", VA = "0xC7D540")]
	private bool canMoveForward()
	{
		return default(bool);
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0xC7D24C", Offset = "0xC7D24C", VA = "0xC7D24C")]
	private bool canMoveLeft()
	{
		return default(bool);
	}

	[Token(Token = "0x6000860")]
	[Address(RVA = "0xC7D348", Offset = "0xC7D348", VA = "0xC7D348")]
	private bool canMoveRight()
	{
		return default(bool);
	}

	[Token(Token = "0x6000861")]
	[Address(RVA = "0xC7C87C", Offset = "0xC7C87C", VA = "0xC7C87C")]
	private List<MOVEMENT> getAllowedVerticalMovements()
	{
		return null;
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0xC7D63C", Offset = "0xC7D63C", VA = "0xC7D63C")]
	private bool checkIfMoveDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0xC7D6E4", Offset = "0xC7D6E4", VA = "0xC7D6E4")]
	private bool checkIfMoveUp()
	{
		return default(bool);
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0xC7D798", Offset = "0xC7D798", VA = "0xC7D798", Slot = "6")]
	protected virtual List<MOVEMENT> getAllowedRotationalMovements()
	{
		return null;
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0xC7D8B8", Offset = "0xC7D8B8", VA = "0xC7D8B8")]
	private bool canRotateLeft()
	{
		return default(bool);
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0xC7D8C0", Offset = "0xC7D8C0", VA = "0xC7D8C0")]
	private bool canRotateRight()
	{
		return default(bool);
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0xC7C5B8", Offset = "0xC7C5B8", VA = "0xC7C5B8")]
	private bool checkFurtherLeftRotationAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0xC7C62C", Offset = "0xC7C62C", VA = "0xC7C62C")]
	private bool checkFurtherRightRotationAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0xC7A244", Offset = "0xC7A244", VA = "0xC7A244")]
	private void setBoundaryCalculationBounds()
	{
	}

	[Token(Token = "0x600086A")]
	[Address(RVA = "0xC7A4D8", Offset = "0xC7A4D8", VA = "0xC7A4D8")]
	private void setRotationBoundaryCalculationBounds()
	{
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0xC7D8C8", Offset = "0xC7D8C8", VA = "0xC7D8C8")]
	private bool checkRotationPossible(int rotationDirection)
	{
		return default(bool);
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0xC7B878", Offset = "0xC7B878", VA = "0xC7B878")]
	private void rotateObject(int rotationDirection)
	{
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0xC7D9FC", Offset = "0xC7D9FC", VA = "0xC7D9FC")]
	private float getCorrectedDegrees(float degree)
	{
		return default(float);
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0xC7CD34", Offset = "0xC7CD34", VA = "0xC7CD34")]
	private float getCorrectedDegreesWithMinusDegrees(float degree)
	{
		return default(float);
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0xC7C6A0", Offset = "0xC7C6A0", VA = "0xC7C6A0")]
	private bool checkRotationFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0xC7CCAC", Offset = "0xC7CCAC", VA = "0xC7CCAC")]
	private Vector3 getPositionForRotatingAround()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0xC7DA1C", Offset = "0xC7DA1C", VA = "0xC7DA1C")]
	public NonStandaloneTargetTouchContainerMovementController()
	{
	}
}
[Token(Token = "0x2000198")]
public class OculusRiftTargetTouchGameController : TargetTouchGameController
{
	[Token(Token = "0x6000874")]
	[Address(RVA = "0xAD0D40", Offset = "0xAD0D40", VA = "0xAD0D40")]
	public OculusRiftTargetTouchGameController()
	{
	}
}
[Token(Token = "0x2000199")]
public class OculusRiftTargetTouchIntroManager : TargetTouchTutorialController
{
	[Token(Token = "0x6000875")]
	[Address(RVA = "0xAD0DAC", Offset = "0xAD0DAC", VA = "0xAD0DAC")]
	public OculusRiftTargetTouchIntroManager()
	{
	}
}
[Token(Token = "0x200019A")]
public class SphereAppearanceEffectColorChanger : NormalObjectToBlockAppearanceEffectColorChanger
{
	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private ParticleSystem circle;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private ParticleSystem.MainModule circleMainModule;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private ParticleSystem semiCircle;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private ParticleSystem.MainModule semiCircleMainModule;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	protected Color doNotTouchColorOuter;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	protected Color doNotTouchColorInner;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	protected Color anyHandColorCircle;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	protected Color leftHandOnlyColorCircle;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	protected Color rightHandOnlyColorCircle;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	protected Color doNotTouchColorCircle;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	protected Color anyHandColorSemiCircle;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	protected Color leftHandOnlyColorSemiCircle;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	protected Color rightHandOnlyColorSemiCircle;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[SerializeField]
	protected Color doNotTouchColorSemiCircle;

	[Token(Token = "0x6000876")]
	[Address(RVA = "0x14C9584", Offset = "0x14C9584", VA = "0x14C9584", Slot = "5")]
	protected override void setupAdditionalModules()
	{
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0x14C962C", Offset = "0x14C962C", VA = "0x14C962C", Slot = "6")]
	protected override void setupAdditionalColors(CoordinationCoachGameObject.ActivationType activationType)
	{
	}

	[Token(Token = "0x6000878")]
	[Address(RVA = "0x14C98CC", Offset = "0x14C98CC", VA = "0x14C98CC", Slot = "7")]
	protected override Color getOuterColor(CoordinationCoachGameObject.ActivationType activationType)
	{
		return default(Color);
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0x14C994C", Offset = "0x14C994C", VA = "0x14C994C", Slot = "8")]
	protected override Color getInnerColor(CoordinationCoachGameObject.ActivationType activationType)
	{
		return default(Color);
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0x14C97CC", Offset = "0x14C97CC", VA = "0x14C97CC")]
	protected Color getCircleColor(CoordinationCoachGameObject.ActivationType activationType)
	{
		return default(Color);
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0x14C984C", Offset = "0x14C984C", VA = "0x14C984C")]
	protected Color getSemiCircleColor(CoordinationCoachGameObject.ActivationType activationType)
	{
		return default(Color);
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0x14C99CC", Offset = "0x14C99CC", VA = "0x14C99CC")]
	public SphereAppearanceEffectColorChanger()
	{
	}
}
[Token(Token = "0x200019B")]
public class SphereGameObjectActivator : MonoBehaviour
{
	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private BlockIncomingObjectsSphereGameObject sphereGameObject;

	[Token(Token = "0x600087D")]
	[Address(RVA = "0x14C99D4", Offset = "0x14C99D4", VA = "0x14C99D4")]
	private void Start()
	{
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0x14C9C18", Offset = "0x14C9C18", VA = "0x14C9C18")]
	public SphereGameObjectActivator()
	{
	}
}
[Token(Token = "0x200019C")]
public class SphereResizeStarter : MonoBehaviour
{
	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TargetTouchActivatedInnerSphereController[] sphereControllers;

	[Token(Token = "0x600087F")]
	[Address(RVA = "0x14C9C20", Offset = "0x14C9C20", VA = "0x14C9C20")]
	private void Start()
	{
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0x14C9CE8", Offset = "0x14C9CE8", VA = "0x14C9CE8")]
	public SphereResizeStarter()
	{
	}
}
[Token(Token = "0x200019D")]
public class TargetObject : CoordinationCoachGameObject
{
	[Token(Token = "0x200019E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CAEC", Offset = "0x69CAEC")]
	private sealed class <activeTimeCountdownCoroutine>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x40008D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TargetObject <>4__this;

		[Token(Token = "0x170000B5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008C0")]
			[Address(RVA = "0x1499CF8", Offset = "0x1499CF8", VA = "0x1499CF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008C2")]
			[Address(RVA = "0x1499D40", Offset = "0x1499D40", VA = "0x1499D40", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008BD")]
		[Address(RVA = "0x1499AEC", Offset = "0x1499AEC", VA = "0x1499AEC")]
		[DebuggerHidden]
		public <activeTimeCountdownCoroutine>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x60008BE")]
		[Address(RVA = "0x1499B18", Offset = "0x1499B18", VA = "0x1499B18", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008BF")]
		[Address(RVA = "0x1499B1C", Offset = "0x1499B1C", VA = "0x1499B1C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008C1")]
		[Address(RVA = "0x1499D00", Offset = "0x1499D00", VA = "0x1499D00", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200019F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CAFC", Offset = "0x69CAFC")]
	private sealed class <stopObjectDeactivatedEffect>d__60 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int effectCounter;

		[Token(Token = "0x40008DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TargetObject <>4__this;

		[Token(Token = "0x170000B7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008C6")]
			[Address(RVA = "0x1499E64", Offset = "0x1499E64", VA = "0x1499E64", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008C8")]
			[Address(RVA = "0x1499EAC", Offset = "0x1499EAC", VA = "0x1499EAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008C3")]
		[Address(RVA = "0x1499D48", Offset = "0x1499D48", VA = "0x1499D48")]
		[DebuggerHidden]
		public <stopObjectDeactivatedEffect>d__60(int <>1__state)
		{
		}

		[Token(Token = "0x60008C4")]
		[Address(RVA = "0x1499D74", Offset = "0x1499D74", VA = "0x1499D74", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008C5")]
		[Address(RVA = "0x1499D78", Offset = "0x1499D78", VA = "0x1499D78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008C7")]
		[Address(RVA = "0x1499E6C", Offset = "0x1499E6C", VA = "0x1499E6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	protected TargetTouchGameController targetTouchGameController;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	protected DateTime deactivationTime;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	protected bool playerCanScore;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	[SerializeField]
	protected Material deactivatedMaterial;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	[SerializeField]
	private Material playerMustResetHandsMaterial;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	protected bool touchedWhileInactive;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A1")]
	private bool moveIndividually;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	[SerializeField]
	private GameObject cubeActivatedEffect;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	[SerializeField]
	private ParticleSystem[] cubeActivatedEffectParticlesToChange;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	[SerializeField]
	private ParticleSystem electricityStartMagicHitEffect;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	[SerializeField]
	protected TargetTouchObjectTouchedWhileInactiveEffectController inactiveEffectController;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	[SerializeField]
	private ParticleSystem playerFailedToTouchActiveObjectEffect;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	[SerializeField]
	private AudioClip playerCanScoreLoopingAudio;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	[SerializeField]
	private AudioClip playerCanScoreDoNotTouchLoopingAudio;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	[SerializeField]
	private AudioClip playerCannotScoreLoopingAudio;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	[SerializeField]
	protected AudioClip objectDeactivatedAudio;

	[Token(Token = "0x40008CC")]
	private const float EFFECT_DURATION = 1f;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	private int stopObjectDisabledEffectCounter;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	private IEnumerator stopElectricityEffectCoroutine;

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	private IEnumerator stopObjectDeactivatedEffectCoroutine;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	[SerializeField]
	private AudioClip electricityAudio;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	[SerializeField]
	private TargetTouchActivatedInnerSphereController innerSphereController;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	[SerializeField]
	private TargetTouchActivatedInnerSphereController outerSphereController;

	[Token(Token = "0x170000B4")]
	public bool MoveIndividually
	{
		[Token(Token = "0x6000881")]
		[Address(RVA = "0x14CC33C", Offset = "0x14CC33C", VA = "0x14CC33C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000882")]
		[Address(RVA = "0x14CC344", Offset = "0x14CC344", VA = "0x14CC344")]
		set
		{
		}
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0x14CC350", Offset = "0x14CC350", VA = "0x14CC350", Slot = "9")]
	protected override void performSpecificSetup()
	{
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0x14CC3B8", Offset = "0x14CC3B8", VA = "0x14CC3B8", Slot = "28")]
	public override void activate(ActivationType activationType)
	{
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0x14CC5C4", Offset = "0x14CC5C4", VA = "0x14CC5C4")]
	public void activate(bool playerCanScore, ActivationType activationType)
	{
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0x14CC624", Offset = "0x14CC624", VA = "0x14CC624", Slot = "32")]
	public override void activateSpecific()
	{
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0x14CC488", Offset = "0x14CC488", VA = "0x14CC488")]
	private void playActivatedEffect(Color color, Color sphereColor, bool playerScored)
	{
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0x14CCAF8", Offset = "0x14CCAF8", VA = "0x14CCAF8", Slot = "11")]
	public override void performInitalizationSetup(GameController gameController)
	{
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0x14CCC28", Offset = "0x14CCC28", VA = "0x14CCC28", Slot = "37")]
	protected override Material getActivationTypeMaterial()
	{
		return null;
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0x14CC788", Offset = "0x14CC788", VA = "0x14CC788")]
	private Color getActivationEffectColor(bool canScore)
	{
		return default(Color);
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0x14CCACC", Offset = "0x14CCACC", VA = "0x14CCACC")]
	private AudioClip getActivatedSound(bool playerCanScore)
	{
		return null;
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0x14CC928", Offset = "0x14CC928", VA = "0x14CC928")]
	private Color getActivatedSphereEffectColor(bool canScore)
	{
		return default(Color);
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0x14CCC98", Offset = "0x14CCC98", VA = "0x14CCC98", Slot = "112")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A5AAC", Offset = "0x6A5AAC")]
	protected override IEnumerator activeTimeCountdownCoroutine(float duration)
	{
		return null;
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0x14CCD20", Offset = "0x14CCD20", VA = "0x14CCD20")]
	public void deactivate()
	{
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0x14CCDA4", Offset = "0x14CCDA4", VA = "0x14CCDA4", Slot = "96")]
	public override void deactivateDueToTouchedByPlayer()
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0x14CCDA8", Offset = "0x14CCDA8", VA = "0x14CCDA8")]
	public void deactivateDueToTimeRanOut()
	{
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0x14CCE80", Offset = "0x14CCE80", VA = "0x14CCE80", Slot = "40")]
	protected override void touchedByPlayerHand(Collider collider)
	{
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0x14CD148", Offset = "0x14CD148", VA = "0x14CD148")]
	public void preloadInactiveTouchedEffect()
	{
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0x14CD164", Offset = "0x14CD164", VA = "0x14CD164")]
	public void stopInactiveTouchedEffect()
	{
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0x14CD1A0", Offset = "0x14CD1A0", VA = "0x14CD1A0", Slot = "43")]
	protected override void playerTouchedForbiddenObjectSpecific(PlayerHandController playerHandController)
	{
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0x14CD1E0", Offset = "0x14CD1E0", VA = "0x14CD1E0")]
	public void preloadElectricityEffect()
	{
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0x14CD1F4", Offset = "0x14CD1F4", VA = "0x14CD1F4", Slot = "77")]
	public override void performGameAction()
	{
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0x14CD250", Offset = "0x14CD250", VA = "0x14CD250", Slot = "79")]
	protected override void performMovement()
	{
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0x14CD2F4", Offset = "0x14CD2F4", VA = "0x14CD2F4")]
	public void setTouchedWhileInactive(bool touched)
	{
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0x14CD300", Offset = "0x14CD300", VA = "0x14CD300")]
	public bool isTouchedWhileInactive()
	{
		return default(bool);
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0x14CD308", Offset = "0x14CD308", VA = "0x14CD308", Slot = "75")]
	public override void stopAllEffects(bool playerScored)
	{
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0x14CD4BC", Offset = "0x14CD4BC", VA = "0x14CD4BC")]
	public void setMaterialsToDeactivatedMaterial()
	{
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0x14CD4D0", Offset = "0x14CD4D0", VA = "0x14CD4D0", Slot = "30")]
	protected override void setMaterialOnRendenders(Material material)
	{
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0x14CD390", Offset = "0x14CD390", VA = "0x14CD390")]
	private void stopAllEffectCoroutines()
	{
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0x14CD404", Offset = "0x14CD404", VA = "0x14CD404")]
	private void stopActivatedEffect(bool playerScored)
	{
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0x14CD678", Offset = "0x14CD678", VA = "0x14CD678", Slot = "111")]
	protected override void onUnPausedSpecific(bool appearanceWasInProgress)
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0x14CD768", Offset = "0x14CD768", VA = "0x14CD768", Slot = "102")]
	public override void gameRestartedByPlayer()
	{
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0x14CD804", Offset = "0x14CD804", VA = "0x14CD804")]
	public void restartActiveEffect(bool playerCanScore)
	{
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0x14CD9E4", Offset = "0x14CD9E4", VA = "0x14CD9E4")]
	public void playPointScoredEffect()
	{
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0x14CDA84", Offset = "0x14CDA84", VA = "0x14CDA84", Slot = "117")]
	protected virtual void playerScored()
	{
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0x14CCDFC", Offset = "0x14CCDFC", VA = "0x14CCDFC")]
	public void playDeactivatedEffect()
	{
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0x14CDAAC", Offset = "0x14CDAAC", VA = "0x14CDAAC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A5B0C", Offset = "0x6A5B0C")]
	public IEnumerator stopObjectDeactivatedEffect(int effectCounter)
	{
		return null;
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0x14CD4A0", Offset = "0x14CD4A0", VA = "0x14CD4A0")]
	public void stopObjectDeactivatedEffect()
	{
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0x14CDB34", Offset = "0x14CDB34", VA = "0x14CDB34", Slot = "97")]
	public override string getObjectType()
	{
		return null;
	}

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0x14CDB78", Offset = "0x14CDB78", VA = "0x14CDB78", Slot = "12")]
	public override void setCurrentMovementStartingPositionToCurrentPosition()
	{
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0x14CDBB4", Offset = "0x14CDBB4", VA = "0x14CDBB4", Slot = "44")]
	protected override void setVectorOfOriginalPosition()
	{
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0x14CDBF0", Offset = "0x14CDBF0", VA = "0x14CDBF0", Slot = "45")]
	protected override void updateVectorOfCurrentMovementStartPosition()
	{
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0x14CDC2C", Offset = "0x14CDC2C", VA = "0x14CDC2C", Slot = "66")]
	protected override float getCurrentDistanceToTargetToStartingDistanceRatio(Vector3 target)
	{
		return default(float);
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0x14CDCBC", Offset = "0x14CDCBC", VA = "0x14CDCBC", Slot = "81")]
	protected override bool checkIfDestinationReached()
	{
		return default(bool);
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0x14CDD14", Offset = "0x14CDD14", VA = "0x14CDD14", Slot = "82")]
	protected override void setNewLerpPosition()
	{
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0x14CDDA8", Offset = "0x14CDDA8", VA = "0x14CDDA8", Slot = "83")]
	protected override void setNewBezierCurvePosition()
	{
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0x14CDEC0", Offset = "0x14CDEC0", VA = "0x14CDEC0", Slot = "93")]
	protected override void repositionDestinationToAvoidObjectCollidedWith(GameObject objectCollidedWith)
	{
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0x14CE0D8", Offset = "0x14CE0D8", VA = "0x14CE0D8")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0x14CE344", Offset = "0x14CE344", VA = "0x14CE344", Slot = "113")]
	protected override bool checkWithinMaxDistanceFromStartingPos()
	{
		return default(bool);
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0x14CE3BC", Offset = "0x14CE3BC", VA = "0x14CE3BC", Slot = "22")]
	protected override void instantiateAppearanceAndDisappearanceEffect(ActivationType activationType)
	{
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0x14CE530", Offset = "0x14CE530", VA = "0x14CE530", Slot = "47")]
	protected override void positionDestinationWithCorrectionForLimits(float additionalX, float additionalY, float additionalZ, float xDirection, float yDirection, float zDirection)
	{
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0x14CE70C", Offset = "0x14CE70C", VA = "0x14CE70C", Slot = "49")]
	protected override void repositionDestinationInSpecificDirection(float xDirection, float yDirection)
	{
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0x14CE7F4", Offset = "0x14CE7F4", VA = "0x14CE7F4", Slot = "46")]
	protected override void repositionDestination(List<MovementAxis> axisesToMoveIn)
	{
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0x14CEA80", Offset = "0x14CEA80", VA = "0x14CEA80", Slot = "27")]
	protected override void calculateBezierCurvePoints()
	{
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0x14CEADC", Offset = "0x14CEADC", VA = "0x14CEADC", Slot = "91")]
	protected override void collidedWithPlayer(Collider collider)
	{
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0x14CEC40", Offset = "0x14CEC40", VA = "0x14CEC40", Slot = "57")]
	protected override void prepareForDisappearance()
	{
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0x14CEC48", Offset = "0x14CEC48", VA = "0x14CEC48")]
	public void preloadActivatedEffect()
	{
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0x14CED98", Offset = "0x14CED98", VA = "0x14CED98", Slot = "10")]
	public override void calculateLocalMovementLimits(float movementAmount)
	{
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0x14CEF0C", Offset = "0x14CEF0C", VA = "0x14CEF0C", Slot = "63")]
	protected override Vector3 getDisappearanceWormHolePosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0x14CEF1C", Offset = "0x14CEF1C", VA = "0x14CEF1C")]
	public TargetObject()
	{
	}
}
[Token(Token = "0x20001A0")]
public class TargetTouchActivatedInnerSphereController : MonoBehaviour
{
	[Token(Token = "0x20001A1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CB0C", Offset = "0x69CB0C")]
	private sealed class <sizeChangingCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TargetTouchActivatedInnerSphereController <>4__this;

		[Token(Token = "0x170000B9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008D8")]
			[Address(RVA = "0x149A1F0", Offset = "0x149A1F0", VA = "0x149A1F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008DA")]
			[Address(RVA = "0x149A238", Offset = "0x149A238", VA = "0x149A238", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008D5")]
		[Address(RVA = "0x1499EB4", Offset = "0x1499EB4", VA = "0x1499EB4")]
		[DebuggerHidden]
		public <sizeChangingCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x60008D6")]
		[Address(RVA = "0x1499EE0", Offset = "0x1499EE0", VA = "0x1499EE0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008D7")]
		[Address(RVA = "0x1499EE4", Offset = "0x1499EE4", VA = "0x1499EE4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008D9")]
		[Address(RVA = "0x149A1F8", Offset = "0x149A1F8", VA = "0x149A1F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected float minSize;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	protected float maxSize;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected Light myLight;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected float startingAlpha;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected Renderer myRenderer;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected float disappearanceSizeChangeSize;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected float sizeChangeSize;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected float sizeChangingMultiplier;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected Coroutine activeCoroutine;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected float[] minSizeRange;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected float[] maxSizeRange;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected float resetAdditionalSize;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	protected float rangeCalculator;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected bool continueSizeChange;

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0x14D0530", Offset = "0x14D0530", VA = "0x14D0530")]
	private void Start()
	{
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0x14D0624", Offset = "0x14D0624", VA = "0x14D0624")]
	public void startSizeChange()
	{
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0x14C9CB4", Offset = "0x14C9CB4", VA = "0x14C9CB4")]
	public void restart(Color color)
	{
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0x14D066C", Offset = "0x14D066C", VA = "0x14D066C")]
	protected void setColorWithAlphaChange(Color color)
	{
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0x14CD9E0", Offset = "0x14CD9E0", VA = "0x14CD9E0")]
	public void setColor(Color color)
	{
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0x14CD638", Offset = "0x14CD638", VA = "0x14CD638")]
	public void stopAndDeactivate()
	{
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0x14D07B0", Offset = "0x14D07B0", VA = "0x14D07B0", Slot = "4")]
	public virtual void reset()
	{
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0x14D0768", Offset = "0x14D0768", VA = "0x14D0768")]
	protected void stopActiveCoroutine()
	{
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0x14D0830", Offset = "0x14D0830", VA = "0x14D0830", Slot = "5")]
	protected virtual void resetSpecific()
	{
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0x14D0834", Offset = "0x14D0834", VA = "0x14D0834")]
	public void stopChangeSize()
	{
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0x14D083C", Offset = "0x14D083C", VA = "0x14D083C", Slot = "6")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A5C0C", Offset = "0x6A5C0C")]
	protected virtual IEnumerator sizeChangingCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0x14D08B4", Offset = "0x14D08B4", VA = "0x14D08B4")]
	public TargetTouchActivatedInnerSphereController()
	{
	}
}
[Token(Token = "0x20001A2")]
public class TargetTouchActivatedOuterSphereController : TargetTouchActivatedInnerSphereController
{
	[Token(Token = "0x20001A3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CB1C", Offset = "0x69CB1C")]
	private sealed class <sizeChangingCoroutine>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TargetTouchActivatedOuterSphereController <>4__this;

		[Token(Token = "0x170000BB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008E0")]
			[Address(RVA = "0x149A52C", Offset = "0x149A52C", VA = "0x149A52C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008E2")]
			[Address(RVA = "0x149A574", Offset = "0x149A574", VA = "0x149A574", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008DD")]
		[Address(RVA = "0x149A240", Offset = "0x149A240", VA = "0x149A240")]
		[DebuggerHidden]
		public <sizeChangingCoroutine>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x60008DE")]
		[Address(RVA = "0x149A26C", Offset = "0x149A26C", VA = "0x149A26C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008DF")]
		[Address(RVA = "0x149A270", Offset = "0x149A270", VA = "0x149A270", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008E1")]
		[Address(RVA = "0x149A534", Offset = "0x149A534", VA = "0x149A534", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0x14D0978", Offset = "0x14D0978", VA = "0x14D0978", Slot = "6")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A5CBC", Offset = "0x6A5CBC")]
	protected override IEnumerator sizeChangingCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0x14D09F0", Offset = "0x14D09F0", VA = "0x14D09F0")]
	public TargetTouchActivatedOuterSphereController()
	{
	}
}
[Token(Token = "0x20001A4")]
public class TargetTouchAudioController : AudioController
{
	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private AudioClip pointScored;

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0x14D0B18", Offset = "0x14D0B18", VA = "0x14D0B18")]
	public TargetTouchAudioController()
	{
	}
}
[Token(Token = "0x20001A5")]
public class TargetTouchColorConstants : MonoBehaviour
{
	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Color EFFECT_BLUE_COLOR;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Color EFFECT_RED_COLOR;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static Color EFFECT_PURPLE_COLOR;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static Color EFFECT_YELLOW_COLOR;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static Color EFFECT_BLACK_COLOR;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static Color SPHERE_BLACK_COLOR;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static Color SPHERE_COLOR_BLUE;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static Color PURPLE_COLOR_LIGHTING;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static Color YELLOW_COLOR_LIGHT;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static Color BLACK_COLOR_NO_ALPHA;

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0x14D0B20", Offset = "0x14D0B20", VA = "0x14D0B20")]
	public TargetTouchColorConstants()
	{
	}
}
[Token(Token = "0x20001A6")]
public class TargetTouchForceFieldController : MonoBehaviour
{
	[Token(Token = "0x40008FA")]
	private const float SOUND_VOLUME = 0.5f;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected DateTime lastPlayerScoredTime;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private MakeObjectSeeThrough makeObjectSeeThrough;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioSource audioSource;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioClip forceFieldAppearanceAudio;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AudioClip forceFieldDisappearanceAudio;

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0x14D0EE0", Offset = "0x14D0EE0", VA = "0x14D0EE0")]
	private void Start()
	{
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0x14D0F48", Offset = "0x14D0F48", VA = "0x14D0F48")]
	public void updatePlayerLastScoredTime()
	{
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0x14D0FB0", Offset = "0x14D0FB0", VA = "0x14D0FB0")]
	public void startForceField()
	{
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0x14D1020", Offset = "0x14D1020", VA = "0x14D1020")]
	public void startForceFieldNoAudio()
	{
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0x14D0FF8", Offset = "0x14D0FF8", VA = "0x14D0FF8")]
	private void playStartForceFieldLoopingSound()
	{
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0x14D1040", Offset = "0x14D1040", VA = "0x14D1040")]
	public void stopForceField()
	{
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0x14D1124", Offset = "0x14D1124", VA = "0x14D1124")]
	public void stopForceFieldAndAudio()
	{
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0x14D1164", Offset = "0x14D1164", VA = "0x14D1164")]
	public void stopForceFieldNoAudio()
	{
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0x14D1184", Offset = "0x14D1184", VA = "0x14D1184")]
	public void stopAudio()
	{
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0x14D11A0", Offset = "0x14D11A0", VA = "0x14D11A0")]
	public TargetTouchForceFieldController()
	{
	}
}
[Token(Token = "0x20001A7")]
public class TargetTouchGameController : GameController
{
	[Token(Token = "0x20001A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CB2C", Offset = "0x69CB2C")]
	private sealed class <startCountdownThenMainGameLoop>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400091C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400091D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400091E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TargetTouchGameController <>4__this;

		[Token(Token = "0x170000BE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600092A")]
			[Address(RVA = "0x149ACEC", Offset = "0x149ACEC", VA = "0x149ACEC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600092C")]
			[Address(RVA = "0x149AD34", Offset = "0x149AD34", VA = "0x149AD34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000927")]
		[Address(RVA = "0x149AC08", Offset = "0x149AC08", VA = "0x149AC08")]
		[DebuggerHidden]
		public <startCountdownThenMainGameLoop>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x6000928")]
		[Address(RVA = "0x149AC34", Offset = "0x149AC34", VA = "0x149AC34", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000929")]
		[Address(RVA = "0x149AC38", Offset = "0x149AC38", VA = "0x149AC38", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600092B")]
		[Address(RVA = "0x149ACF4", Offset = "0x149ACF4", VA = "0x149ACF4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001A9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CB3C", Offset = "0x69CB3C")]
	private sealed class <startGameObjectsAppearanceAnimations>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400091F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TargetTouchGameController <>4__this;

		[Token(Token = "0x4000922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<GameObject> targetObjects;

		[Token(Token = "0x4000923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__2;

		[Token(Token = "0x170000C0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000930")]
			[Address(RVA = "0x149AEF0", Offset = "0x149AEF0", VA = "0x149AEF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000932")]
			[Address(RVA = "0x149AF38", Offset = "0x149AF38", VA = "0x149AF38", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600092D")]
		[Address(RVA = "0x149AD3C", Offset = "0x149AD3C", VA = "0x149AD3C")]
		[DebuggerHidden]
		public <startGameObjectsAppearanceAnimations>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x600092E")]
		[Address(RVA = "0x149AD68", Offset = "0x149AD68", VA = "0x149AD68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600092F")]
		[Address(RVA = "0x149AD6C", Offset = "0x149AD6C", VA = "0x149AD6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000931")]
		[Address(RVA = "0x149AEF8", Offset = "0x149AEF8", VA = "0x149AEF8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001AA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CB4C", Offset = "0x69CB4C")]
	private sealed class <setActivateTargetObjectToNullCoroutine>d__48 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TargetTouchGameController <>4__this;

		[Token(Token = "0x170000C2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000936")]
			[Address(RVA = "0x149ABB8", Offset = "0x149ABB8", VA = "0x149ABB8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000938")]
			[Address(RVA = "0x149AC00", Offset = "0x149AC00", VA = "0x149AC00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000933")]
		[Address(RVA = "0x149AA34", Offset = "0x149AA34", VA = "0x149AA34")]
		[DebuggerHidden]
		public <setActivateTargetObjectToNullCoroutine>d__48(int <>1__state)
		{
		}

		[Token(Token = "0x6000934")]
		[Address(RVA = "0x149AA60", Offset = "0x149AA60", VA = "0x149AA60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000935")]
		[Address(RVA = "0x149AA64", Offset = "0x149AA64", VA = "0x149AA64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000937")]
		[Address(RVA = "0x149ABC0", Offset = "0x149ABC0", VA = "0x149ABC0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001AB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CB5C", Offset = "0x69CB5C")]
	private sealed class <startGameObjectsDisappearanceAnimations>d__69 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TargetTouchGameController <>4__this;

		[Token(Token = "0x400092A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<GameObject>.Enumerator <>7__wrap1;

		[Token(Token = "0x170000C4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600093D")]
			[Address(RVA = "0x149B2F0", Offset = "0x149B2F0", VA = "0x149B2F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600093F")]
			[Address(RVA = "0x149B338", Offset = "0x149B338", VA = "0x149B338", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000939")]
		[Address(RVA = "0x149AF40", Offset = "0x149AF40", VA = "0x149AF40")]
		[DebuggerHidden]
		public <startGameObjectsDisappearanceAnimations>d__69(int <>1__state)
		{
		}

		[Token(Token = "0x600093A")]
		[Address(RVA = "0x149AF6C", Offset = "0x149AF6C", VA = "0x149AF6C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600093B")]
		[Address(RVA = "0x149AFDC", Offset = "0x149AFDC", VA = "0x149AFDC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600093C")]
		[Address(RVA = "0x149AF88", Offset = "0x149AF88", VA = "0x149AF88")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x600093E")]
		[Address(RVA = "0x149B2F8", Offset = "0x149B2F8", VA = "0x149B2F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CB6C", Offset = "0x69CB6C")]
	private sealed class <mainGameModeLoop>d__70 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400092B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400092C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400092D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TargetTouchGameController <>4__this;

		[Token(Token = "0x170000C6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000943")]
			[Address(RVA = "0x149A9E4", Offset = "0x149A9E4", VA = "0x149A9E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000945")]
			[Address(RVA = "0x149AA2C", Offset = "0x149AA2C", VA = "0x149AA2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000940")]
		[Address(RVA = "0x149A57C", Offset = "0x149A57C", VA = "0x149A57C")]
		[DebuggerHidden]
		public <mainGameModeLoop>d__70(int <>1__state)
		{
		}

		[Token(Token = "0x6000941")]
		[Address(RVA = "0x149A5A8", Offset = "0x149A5A8", VA = "0x149A5A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000942")]
		[Address(RVA = "0x149A5AC", Offset = "0x149A5AC", VA = "0x149A5AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000944")]
		[Address(RVA = "0x149A9EC", Offset = "0x149A9EC", VA = "0x149A9EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private GameObject targetObjectPrefab;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private List<GameObject> horizontalTargetObjects;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private List<GameObject> verticalTargetObjects;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private List<TargetObject> targetObjectComponentsArrayList;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private bool handsResetNeededAfterPlayerScored;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private int timeAlreadyWaitedForPlayerToResetHands;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[SerializeField]
	private TargetTouchForceFieldController targetTouchForceFieldController;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[SerializeField]
	private GameObject handResetBarrierObject;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[SerializeField]
	private TargetTouchHandsCollisionChecker targetTouchHandsCollisionChecker;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private TargetTouchGameModeParameterContainer targetTouchGameModeParameterContainer;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private bool playerCanScorePoints;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static object lockObject;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private TargetObject activeTargetObject;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private int numberOfGameObjectsReachedAppearanceDestination;

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private int numberOfGameObjectsReachedDisappearanceDestination;

	[Token(Token = "0x400090F")]
	private const float ACTIVE_TARGET_OBJECT_RESET_DELAY = 0.75f;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[SerializeField]
	private MovementWithinBoundaryController movementController;

	[Token(Token = "0x4000911")]
	private const string DEBUG_PLAYER_NEEDS_TO_RESET_HANDS = " Player needs to reset his hands";

	[Token(Token = "0x4000912")]
	private const string DEBUG_PLAYER_HEAD_ENTERED_COLLISION_AREA = " Player head entered collision area";

	[Token(Token = "0x4000913")]
	private const string GUI_PLAYER_HAND_IN_COLLISION_AREA = " Reset hands to score further points!";

	[Token(Token = "0x4000914")]
	private const string GUI_PLAYER_HEAD_ENTERED_COLLISION_AREA = " Cannot score while colliding with force field";

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private WaitForSeconds appearenceWaitForSeconds;

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private WaitForSeconds disappearenceWaitForSeconds;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private WaitForSeconds resetActiveObjectWaitForSeconds;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private TargetTouchObjectCreationService targetTouchObjectCreationService;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	protected DateTime lastCollisionTimeWithPlayer;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private Coroutine currentSetActiveObjectToZeroCoroutine;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private bool objectAppearanceInProgress;

	[Token(Token = "0x170000BD")]
	public bool PlayerHandsResetInProgress
	{
		[Token(Token = "0x60008FD")]
		[Address(RVA = "0x14D228C", Offset = "0x14D228C", VA = "0x14D228C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60008FE")]
		[Address(RVA = "0x14D22B0", Offset = "0x14D22B0", VA = "0x14D22B0")]
		set
		{
		}
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0x14D11A8", Offset = "0x14D11A8", VA = "0x14D11A8", Slot = "9")]
	protected override void gameModeSpecificSetupOnStart()
	{
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0x14D121C", Offset = "0x14D121C", VA = "0x14D121C")]
	public void setTargetTouchGameModeParameterContainer(TargetTouchGameModeParameterContainer targetTouchGameModeParameterContainer)
	{
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0x14D122C", Offset = "0x14D122C", VA = "0x14D122C", Slot = "33")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A5D6C", Offset = "0x6A5D6C")]
	protected override IEnumerator startCountdownThenMainGameLoop()
	{
		return null;
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0x14D12A4", Offset = "0x14D12A4", VA = "0x14D12A4", Slot = "32")]
	protected override void specificGameModeStartGame()
	{
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0x14D1B44", Offset = "0x14D1B44", VA = "0x14D1B44")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A5DCC", Offset = "0x6A5DCC")]
	private IEnumerator startGameObjectsAppearanceAnimations(List<GameObject> targetObjects)
	{
		return null;
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0x14D1BD8", Offset = "0x14D1BD8", VA = "0x14D1BD8", Slot = "46")]
	public override void gameObjectReachedAppearancePosition(GameObject gameObject)
	{
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0x14D1CB4", Offset = "0x14D1CB4", VA = "0x14D1CB4", Slot = "47")]
	public override void gameObjectReachedDisappearancePosition(GameObject gameObject)
	{
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0x14CDA88", Offset = "0x14CDA88", VA = "0x14CDA88")]
	public bool isPlayerCanScorePoints()
	{
		return default(bool);
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0x14D1D74", Offset = "0x14D1D74", VA = "0x14D1D74")]
	public void handContactIsZero()
	{
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0x14D1DF8", Offset = "0x14D1DF8", VA = "0x14D1DF8")]
	public void playerHeadEnteredCollisionArea()
	{
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0x14D1F38", Offset = "0x14D1F38", VA = "0x14D1F38")]
	public void playerHandEntered()
	{
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0x14D2158", Offset = "0x14D2158", VA = "0x14D2158", Slot = "17")]
	protected override void specificSetupGameModeParameterContainer()
	{
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0x14D2284", Offset = "0x14D2284", VA = "0x14D2284")]
	public TargetTouchGameModeParameterContainer getTargetTouchGameModeParameterContainer()
	{
		return null;
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0x14D1954", Offset = "0x14D1954", VA = "0x14D1954")]
	private void repositionHandResetBarrierObject()
	{
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0x14D1AA8", Offset = "0x14D1AA8", VA = "0x14D1AA8")]
	private void prepareHandResetBarrierObjectForMovement()
	{
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0x14D22DC", Offset = "0x14D22DC", VA = "0x14D22DC")]
	private GameObject getMiddleHorizontalObject()
	{
		return null;
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0x14D2364", Offset = "0x14D2364", VA = "0x14D2364")]
	private void setActiveTargetObjectToNullWithDelay()
	{
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0x14D23A8", Offset = "0x14D23A8", VA = "0x14D23A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A5E2C", Offset = "0x6A5E2C")]
	private IEnumerator setActivateTargetObjectToNullCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0x14D2420", Offset = "0x14D2420", VA = "0x14D2420")]
	private void setActiveTargetObject(TargetObject targetObject)
	{
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0x14D1FDC", Offset = "0x14D1FDC", VA = "0x14D1FDC")]
	private TargetObject getActiveTargetObject()
	{
		return null;
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0x14D1E4C", Offset = "0x14D1E4C", VA = "0x14D1E4C")]
	private void updateActiveColorOfActiveTargetObject()
	{
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0x14D2544", Offset = "0x14D2544", VA = "0x14D2544")]
	private void startTargetObjectMovement()
	{
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0x14D28E0", Offset = "0x14D28E0", VA = "0x14D28E0")]
	public List<GameObject> getVerticalObjects()
	{
		return null;
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0x14D28E8", Offset = "0x14D28E8", VA = "0x14D28E8")]
	public List<GameObject> getHorizontalObjects()
	{
		return null;
	}

	[Token(Token = "0x600090A")]
	[Address(RVA = "0x14D28F0", Offset = "0x14D28F0", VA = "0x14D28F0")]
	public List<TargetObject> getTargetObjectComponentsList()
	{
		return null;
	}

	[Token(Token = "0x600090B")]
	[Address(RVA = "0x14D28F8", Offset = "0x14D28F8", VA = "0x14D28F8")]
	public void handsMustBeResetAfterPlayerScored()
	{
	}

	[Token(Token = "0x600090C")]
	[Address(RVA = "0x14D20F8", Offset = "0x14D20F8", VA = "0x14D20F8")]
	public void handsMustBeResetAfterPlayerEnteredArea()
	{
	}

	[Token(Token = "0x600090D")]
	[Address(RVA = "0x14D1EF4", Offset = "0x14D1EF4", VA = "0x14D1EF4")]
	private void pointScoringDisabledDueToCollisionWithPlayer(string debuggerMessage, string guiMessage)
	{
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0x14D295C", Offset = "0x14D295C", VA = "0x14D295C")]
	private void restartTargetObjectActivation()
	{
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0x14D2980", Offset = "0x14D2980", VA = "0x14D2980", Slot = "37")]
	public override void playerScoredPoint(int increase, bool maxIncrease, bool performSpecific)
	{
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0x14D2A04", Offset = "0x14D2A04", VA = "0x14D2A04", Slot = "41")]
	protected override void playerLostPointGameModeSpecific()
	{
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0x14D1D78", Offset = "0x14D1D78", VA = "0x14D1D78")]
	public void noLongerCollidingWithPlayer()
	{
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0x14D1524", Offset = "0x14D1524", VA = "0x14D1524")]
	private void forcePlayerCanScoreAgain()
	{
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0x14D2A08", Offset = "0x14D2A08", VA = "0x14D2A08")]
	private void targetTouchGenericSetup()
	{
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0x14D2BC8", Offset = "0x14D2BC8", VA = "0x14D2BC8", Slot = "28")]
	protected override void generalGameModeStopGame()
	{
	}

	[Token(Token = "0x6000915")]
	[Address(RVA = "0x14D2E78", Offset = "0x14D2E78", VA = "0x14D2E78", Slot = "58")]
	public override void gameStoppedByPlayerSpecific(List<GameObject> activeObjects)
	{
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0x14D3104", Offset = "0x14D3104", VA = "0x14D3104", Slot = "30")]
	protected override void resetOnStopGame()
	{
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0x14D31BC", Offset = "0x14D31BC", VA = "0x14D31BC", Slot = "19")]
	protected override void resetOnRestartSpecific()
	{
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0x14D2E00", Offset = "0x14D2E00", VA = "0x14D2E00")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A5E8C", Offset = "0x6A5E8C")]
	private IEnumerator startGameObjectsDisappearanceAnimations()
	{
		return null;
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0x14D3270", Offset = "0x14D3270", VA = "0x14D3270", Slot = "5")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A5EEC", Offset = "0x6A5EEC")]
	protected override IEnumerator mainGameModeLoop()
	{
		return null;
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0x14D32E8", Offset = "0x14D32E8", VA = "0x14D32E8")]
	public ScoreKeeper getScoreKeeper()
	{
		return null;
	}

	[Token(Token = "0x600091B")]
	[Address(RVA = "0x14D2CDC", Offset = "0x14D2CDC", VA = "0x14D2CDC")]
	private void stopAllGameObjectEffects()
	{
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0x14D32F0", Offset = "0x14D32F0", VA = "0x14D32F0", Slot = "7")]
	protected override void playerEnergyZeroGameModeSpecific()
	{
	}

	[Token(Token = "0x600091D")]
	[Address(RVA = "0x14D3424", Offset = "0x14D3424", VA = "0x14D3424")]
	public void setPlayerCanScorePointsTest()
	{
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0x14D344C", Offset = "0x14D344C", VA = "0x14D344C", Slot = "49")]
	protected override void gameDifficultyChangedInGameSpecific()
	{
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0x14D34C0", Offset = "0x14D34C0", VA = "0x14D34C0")]
	public void clearAllGameObjects()
	{
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0x14D3554", Offset = "0x14D3554", VA = "0x14D3554", Slot = "54")]
	protected override void onPausedSpecific()
	{
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0x14D35A8", Offset = "0x14D35A8", VA = "0x14D35A8", Slot = "56")]
	protected override void onUnPausedSpecific()
	{
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0x14D38E0", Offset = "0x14D38E0", VA = "0x14D38E0", Slot = "20")]
	protected override void restartedByPlayerWhileGameWasStillRunningSpecific()
	{
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0x14CEB60", Offset = "0x14CEB60", VA = "0x14CEB60")]
	public void targetObjectCollidedWithPlayer()
	{
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0x14D3A10", Offset = "0x14D3A10", VA = "0x14D3A10")]
	public TargetTouchGameController()
	{
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0x14D3C50", Offset = "0x14D3C50", VA = "0x14D3C50")]
	[DebuggerHidden]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A5F4C", Offset = "0x6A5F4C")]
	private IEnumerator <>n__0()
	{
		return null;
	}
}
[Token(Token = "0x20001AD")]
public class TargetTouchGameModeParameterContainer : GameModeParameterContainer
{
	[Token(Token = "0x20001AE")]
	public enum TARGET_TOUCH_ACTIVE_GAME_MODE
	{
		[Token(Token = "0x4000949")]
		NORMAL,
		[Token(Token = "0x400094A")]
		HAND_TWITCH,
		[Token(Token = "0x400094B")]
		CONTAINER_MOVES
	}

	[Token(Token = "0x20001AF")]
	public enum AdditionalVerticalObjects
	{
		[Token(Token = "0x400094D")]
		NONE,
		[Token(Token = "0x400094E")]
		TWO,
		[Token(Token = "0x400094F")]
		SIX,
		[Token(Token = "0x4000950")]
		TEN
	}

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private TARGET_TOUCH_ACTIVE_GAME_MODE currentGameMode;

	[Token(Token = "0x400092F")]
	private const string GAME_MODE_NAME = "TARGET_TOUCH_GAME_MODE";

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected int SCENE_TO_LOAD_INDEX;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static GameModeValues.GameAndSubModeDifficulty targetTouchCurrentyDifficulty;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	protected static float activationDuration;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int maximumDurationAfterLastActivation;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static float xDistanceBetweenObjects;

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static float zDistanceBetweenCameraAndGameObjects;

	[Token(Token = "0x4000936")]
	public const float BASE_MOVEMENT_VALUE = 0.25f;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	protected static float targetObjectSize;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static float tutorialTargetObjectSize;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected static int numberOfHandTwitchObjectsToBeCreated;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected static int numberOfTargetObjectsToBeCreated;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	protected static AdditionalVerticalObjects crossMode;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected static bool targetObjectsMove;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	protected static float timeToDestination;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static float maximumMovementDistance;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private static int timeToResetHands;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static int rotationSpeed;

	[Token(Token = "0x4000941")]
	public const float LEFT_RIGHT_MOVEMENT_AMOUNT = 0.2f;

	[Token(Token = "0x4000942")]
	public const float BACK_FORWARD_MOVEMENT_AMOUNT = 0.2f;

	[Token(Token = "0x4000943")]
	public const float VERTICAL_MOVEMENT_AMOUNT = 0.2f;

	[Token(Token = "0x4000944")]
	public const float VERTICAL_MOVEMENT_AMOUNT_DOWN = 0.2f;

	[Token(Token = "0x4000945")]
	public const float VERTICAL_MOVEMENT_AMOUNT_UP = 0.1f;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static float containerMovementSpeed;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static int maxAmountOfParallelMovements;

	[Token(Token = "0x170000C8")]
	public static int MaximumDurationAfterLastActivation
	{
		[Token(Token = "0x6000949")]
		[Address(RVA = "0x14D46A8", Offset = "0x14D46A8", VA = "0x14D46A8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600094A")]
		[Address(RVA = "0x14D470C", Offset = "0x14D470C", VA = "0x14D470C")]
		set
		{
		}
	}

	[Token(Token = "0x170000C9")]
	public static float XDistanceBetweenObjects
	{
		[Token(Token = "0x600094B")]
		[Address(RVA = "0x14D4774", Offset = "0x14D4774", VA = "0x14D4774")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600094C")]
		[Address(RVA = "0x14D47D8", Offset = "0x14D47D8", VA = "0x14D47D8")]
		set
		{
		}
	}

	[Token(Token = "0x170000CA")]
	public static float ZDistanceBetweenCameraAndGameObjects
	{
		[Token(Token = "0x600094D")]
		[Address(RVA = "0x14D4848", Offset = "0x14D4848", VA = "0x14D4848")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600094E")]
		[Address(RVA = "0x14D48AC", Offset = "0x14D48AC", VA = "0x14D48AC")]
		set
		{
		}
	}

	[Token(Token = "0x170000CB")]
	public static float TargetObjectSize
	{
		[Token(Token = "0x600094F")]
		[Address(RVA = "0x14D491C", Offset = "0x14D491C", VA = "0x14D491C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000950")]
		[Address(RVA = "0x14D4980", Offset = "0x14D4980", VA = "0x14D4980")]
		set
		{
		}
	}

	[Token(Token = "0x170000CC")]
	public static int NumberOfTargetObjectsToBeCreated
	{
		[Token(Token = "0x6000951")]
		[Address(RVA = "0x14D49F0", Offset = "0x14D49F0", VA = "0x14D49F0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000952")]
		[Address(RVA = "0x14D4A54", Offset = "0x14D4A54", VA = "0x14D4A54")]
		set
		{
		}
	}

	[Token(Token = "0x170000CD")]
	public static AdditionalVerticalObjects CrossMode
	{
		[Token(Token = "0x6000953")]
		[Address(RVA = "0x14D4ABC", Offset = "0x14D4ABC", VA = "0x14D4ABC")]
		get
		{
			return default(AdditionalVerticalObjects);
		}
		[Token(Token = "0x6000954")]
		[Address(RVA = "0x14D4B20", Offset = "0x14D4B20", VA = "0x14D4B20")]
		set
		{
		}
	}

	[Token(Token = "0x170000CE")]
	public static bool TargetObjectsMove
	{
		[Token(Token = "0x6000955")]
		[Address(RVA = "0x14D4B88", Offset = "0x14D4B88", VA = "0x14D4B88")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000956")]
		[Address(RVA = "0x14D4BEC", Offset = "0x14D4BEC", VA = "0x14D4BEC")]
		set
		{
		}
	}

	[Token(Token = "0x170000CF")]
	public static float TimeToDestination
	{
		[Token(Token = "0x6000957")]
		[Address(RVA = "0x14D4C58", Offset = "0x14D4C58", VA = "0x14D4C58")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000958")]
		[Address(RVA = "0x14D4CBC", Offset = "0x14D4CBC", VA = "0x14D4CBC")]
		set
		{
		}
	}

	[Token(Token = "0x170000D0")]
	public static float MaximumMovementDistance
	{
		[Token(Token = "0x6000959")]
		[Address(RVA = "0x14D4D2C", Offset = "0x14D4D2C", VA = "0x14D4D2C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600095A")]
		[Address(RVA = "0x14D4DEC", Offset = "0x14D4DEC", VA = "0x14D4DEC")]
		set
		{
		}
	}

	[Token(Token = "0x170000D1")]
	public static int TimeToResetHands
	{
		[Token(Token = "0x600095B")]
		[Address(RVA = "0x14D4E5C", Offset = "0x14D4E5C", VA = "0x14D4E5C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600095C")]
		[Address(RVA = "0x14D4EC0", Offset = "0x14D4EC0", VA = "0x14D4EC0")]
		set
		{
		}
	}

	[Token(Token = "0x170000D2")]
	public static int NumberOfHandTwitchObjectsToBeCreated
	{
		[Token(Token = "0x600095D")]
		[Address(RVA = "0x14D4F28", Offset = "0x14D4F28", VA = "0x14D4F28")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600095E")]
		[Address(RVA = "0x14D4F8C", Offset = "0x14D4F8C", VA = "0x14D4F8C")]
		set
		{
		}
	}

	[Token(Token = "0x170000D3")]
	public static float TutorialTargetObjectSize
	{
		[Token(Token = "0x600095F")]
		[Address(RVA = "0x14D4FF4", Offset = "0x14D4FF4", VA = "0x14D4FF4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000960")]
		[Address(RVA = "0x14D5058", Offset = "0x14D5058", VA = "0x14D5058")]
		set
		{
		}
	}

	[Token(Token = "0x170000D4")]
	public static int RotationSpeed
	{
		[Token(Token = "0x6000961")]
		[Address(RVA = "0x14D50C8", Offset = "0x14D50C8", VA = "0x14D50C8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000962")]
		[Address(RVA = "0x14D512C", Offset = "0x14D512C", VA = "0x14D512C")]
		set
		{
		}
	}

	[Token(Token = "0x170000D5")]
	public static float ContainerMovementSpeed
	{
		[Token(Token = "0x6000963")]
		[Address(RVA = "0x14D5194", Offset = "0x14D5194", VA = "0x14D5194")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000964")]
		[Address(RVA = "0x14D51F8", Offset = "0x14D51F8", VA = "0x14D51F8")]
		set
		{
		}
	}

	[Token(Token = "0x170000D6")]
	public static int MaxAmountOfParallelMovements
	{
		[Token(Token = "0x6000965")]
		[Address(RVA = "0x14D5268", Offset = "0x14D5268", VA = "0x14D5268")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000966")]
		[Address(RVA = "0x14D52CC", Offset = "0x14D52CC", VA = "0x14D52CC")]
		set
		{
		}
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0x14D3C58", Offset = "0x14D3C58", VA = "0x14D3C58")]
	public void setTargetTouchGameMode(TARGET_TOUCH_ACTIVE_GAME_MODE gameMode)
	{
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0x14D3C60", Offset = "0x14D3C60", VA = "0x14D3C60")]
	public TARGET_TOUCH_ACTIVE_GAME_MODE getCurrentTargetTouchGameMode()
	{
		return default(TARGET_TOUCH_ACTIVE_GAME_MODE);
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0x14D3C68", Offset = "0x14D3C68", VA = "0x14D3C68", Slot = "4")]
	public override void setGameDifficulty(GameModeValues.GameAndSubModeDifficulty targetTouchDifficulty)
	{
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0x14D5334", Offset = "0x14D5334", VA = "0x14D5334")]
	public static float getActivationDuration()
	{
		return default(float);
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0x14D5398", Offset = "0x14D5398", VA = "0x14D5398")]
	public static void setActivationDuration(float value)
	{
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0x14D5408", Offset = "0x14D5408", VA = "0x14D5408", Slot = "9")]
	public override int getSceneToLoadIndex()
	{
		return default(int);
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0x14D5410", Offset = "0x14D5410", VA = "0x14D5410", Slot = "6")]
	public override string getGameModeName()
	{
		return null;
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0x14D5454", Offset = "0x14D5454", VA = "0x14D5454", Slot = "8")]
	public override string getGameModeNameWithSubModes()
	{
		return null;
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0x14D5704", Offset = "0x14D5704", VA = "0x14D5704", Slot = "7")]
	public override string getSubGameModeName()
	{
		return null;
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0x14D5790", Offset = "0x14D5790", VA = "0x14D5790", Slot = "5")]
	public override void loadLastUsedGameMode()
	{
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0x14D58E0", Offset = "0x14D58E0", VA = "0x14D58E0")]
	public TargetTouchGameModeParameterContainer()
	{
	}
}
[Token(Token = "0x20001B0")]
public class TargetTouchHandsCollisionChecker : MonoBehaviour
{
	[Token(Token = "0x4000951")]
	private const string SCRIPT_NAME = "TargetTouchPlayerHandsCollisionChecker";

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected int collisionWithPlayerCounter;

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected TargetTouchGameController targetTouchGameController;

	[Token(Token = "0x6000970")]
	[Address(RVA = "0x14D5D54", Offset = "0x14D5D54", VA = "0x14D5D54")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0x14D5D60", Offset = "0x14D5D60", VA = "0x14D5D60", Slot = "4")]
	protected virtual void performOnOnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0x14D5E64", Offset = "0x14D5E64", VA = "0x14D5E64")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0x14D5E70", Offset = "0x14D5E70", VA = "0x14D5E70", Slot = "5")]
	protected virtual void performOnOnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0x14D5F30", Offset = "0x14D5F30", VA = "0x14D5F30")]
	protected void contactEnded()
	{
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0x14D5F80", Offset = "0x14D5F80", VA = "0x14D5F80")]
	public int getCollisionWithPlayerCounter()
	{
		return default(int);
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0x14D1B3C", Offset = "0x14D1B3C", VA = "0x14D1B3C")]
	public void reset()
	{
	}

	[Token(Token = "0x6000977")]
	[Address(RVA = "0x14D5F88", Offset = "0x14D5F88", VA = "0x14D5F88")]
	public int getTouchedByPlayerCounter()
	{
		return default(int);
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0x14D5F90", Offset = "0x14D5F90", VA = "0x14D5F90")]
	public TargetTouchHandsCollisionChecker()
	{
	}
}
[Token(Token = "0x20001B1")]
public class DEPRECATEDTargetTouchIntroObjectController : MonoBehaviour
{
	[Token(Token = "0x20001B2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CB7C", Offset = "0x69CB7C")]
	private sealed class <startTutorialObjectsAppearanceAnimations>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400095D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400095E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400095F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ArrayList tutorialObjects;

		[Token(Token = "0x4000960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x170000D7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600098B")]
			[Address(RVA = "0x14C2520", Offset = "0x14C2520", VA = "0x14C2520", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600098D")]
			[Address(RVA = "0x14C2568", Offset = "0x14C2568", VA = "0x14C2568", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000988")]
		[Address(RVA = "0x14C2338", Offset = "0x14C2338", VA = "0x14C2338")]
		[DebuggerHidden]
		public <startTutorialObjectsAppearanceAnimations>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000989")]
		[Address(RVA = "0x14C2364", Offset = "0x14C2364", VA = "0x14C2364", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600098A")]
		[Address(RVA = "0x14C2368", Offset = "0x14C2368", VA = "0x14C2368", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600098C")]
		[Address(RVA = "0x14C2528", Offset = "0x14C2528", VA = "0x14C2528", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001B3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CB8C", Offset = "0x69CB8C")]
	private sealed class <WaitUntilPlayerTouchesActiveObject>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DEPRECATEDTargetTouchIntroObjectController <>4__this;

		[Token(Token = "0x170000D9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000991")]
			[Address(RVA = "0x14C20D8", Offset = "0x14C20D8", VA = "0x14C20D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000993")]
			[Address(RVA = "0x14C2120", Offset = "0x14C2120", VA = "0x14C2120", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600098E")]
		[Address(RVA = "0x14C1F30", Offset = "0x14C1F30", VA = "0x14C1F30")]
		[DebuggerHidden]
		public <WaitUntilPlayerTouchesActiveObject>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x600098F")]
		[Address(RVA = "0x14C1F5C", Offset = "0x14C1F5C", VA = "0x14C1F5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000990")]
		[Address(RVA = "0x14C1F60", Offset = "0x14C1F60", VA = "0x14C1F60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000992")]
		[Address(RVA = "0x14C20E0", Offset = "0x14C20E0", VA = "0x14C20E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CB9C", Offset = "0x69CB9C")]
	private sealed class <WaitUntilPlayerTouchesDeactivatedObject>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DEPRECATEDTargetTouchIntroObjectController <>4__this;

		[Token(Token = "0x170000DB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000997")]
			[Address(RVA = "0x14C22E8", Offset = "0x14C22E8", VA = "0x14C22E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000999")]
			[Address(RVA = "0x14C2330", Offset = "0x14C2330", VA = "0x14C2330", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000994")]
		[Address(RVA = "0x14C2128", Offset = "0x14C2128", VA = "0x14C2128")]
		[DebuggerHidden]
		public <WaitUntilPlayerTouchesDeactivatedObject>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000995")]
		[Address(RVA = "0x14C2154", Offset = "0x14C2154", VA = "0x14C2154", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000996")]
		[Address(RVA = "0x14C2158", Offset = "0x14C2158", VA = "0x14C2158", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000998")]
		[Address(RVA = "0x14C22F0", Offset = "0x14C22F0", VA = "0x14C22F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001B5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CBAC", Offset = "0x69CBAC")]
	private sealed class <WaitForSeconds>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int seconds;

		[Token(Token = "0x170000DD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600099D")]
			[Address(RVA = "0x14C1CE8", Offset = "0x14C1CE8", VA = "0x14C1CE8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600099F")]
			[Address(RVA = "0x14C1D30", Offset = "0x14C1D30", VA = "0x14C1D30", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600099A")]
		[Address(RVA = "0x14C1C10", Offset = "0x14C1C10", VA = "0x14C1C10")]
		[DebuggerHidden]
		public <WaitForSeconds>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x600099B")]
		[Address(RVA = "0x14C1C3C", Offset = "0x14C1C3C", VA = "0x14C1C3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600099C")]
		[Address(RVA = "0x14C1C40", Offset = "0x14C1C40", VA = "0x14C1C40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600099E")]
		[Address(RVA = "0x14C1CF0", Offset = "0x14C1CF0", VA = "0x14C1CF0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001B6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CBBC", Offset = "0x69CBBC")]
	private sealed class <WaitUntilHandsReset>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400096A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400096B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400096C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DEPRECATEDTargetTouchIntroObjectController <>4__this;

		[Token(Token = "0x170000DF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009A3")]
			[Address(RVA = "0x14C1EE0", Offset = "0x14C1EE0", VA = "0x14C1EE0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009A5")]
			[Address(RVA = "0x14C1F28", Offset = "0x14C1F28", VA = "0x14C1F28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009A0")]
		[Address(RVA = "0x14C1D38", Offset = "0x14C1D38", VA = "0x14C1D38")]
		[DebuggerHidden]
		public <WaitUntilHandsReset>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60009A1")]
		[Address(RVA = "0x14C1D64", Offset = "0x14C1D64", VA = "0x14C1D64", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009A2")]
		[Address(RVA = "0x14C1D68", Offset = "0x14C1D68", VA = "0x14C1D68", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009A4")]
		[Address(RVA = "0x14C1EE8", Offset = "0x14C1EE8", VA = "0x14C1EE8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ArrayList tutorialGameObjects;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TargetObject middleTargetObject;

	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject targetObjectPrefab;

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TargetTouchGameController targetTouchGameController;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TargetTouchTutorialController targetTouchIntroManager;

	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool playerHandsReset;

	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool allowPlayerHandsReset;

	[Token(Token = "0x400095B")]
	private const int NUMBER_OF_TUTORIAL_OBJECTS = 3;

	[Token(Token = "0x400095C")]
	public const float TUTORIAL_OBJECT_SIZE = 0.2f;

	[Token(Token = "0x6000979")]
	[Address(RVA = "0xA76980", Offset = "0xA76980", VA = "0xA76980")]
	public void createIntroObjects()
	{
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0xA76984", Offset = "0xA76984", VA = "0xA76984")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A6114", Offset = "0x6A6114")]
	private IEnumerator startTutorialObjectsAppearanceAnimations(ArrayList tutorialObjects)
	{
		return null;
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0xA769FC", Offset = "0xA769FC", VA = "0xA769FC")]
	private ArrayList instantiateTutorialObjectPrefabs()
	{
		return null;
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0xA76B40", Offset = "0xA76B40", VA = "0xA76B40")]
	private void setMiddleObject()
	{
	}

	[Token(Token = "0x600097D")]
	[Address(RVA = "0xA76BE4", Offset = "0xA76BE4", VA = "0xA76BE4")]
	public void activateMiddleObject()
	{
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0xA76C24", Offset = "0xA76C24", VA = "0xA76C24")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A6174", Offset = "0x6A6174")]
	public IEnumerator WaitUntilPlayerTouchesActiveObject()
	{
		return null;
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0xA76C9C", Offset = "0xA76C9C", VA = "0xA76C9C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A61D4", Offset = "0x6A61D4")]
	public IEnumerator WaitUntilPlayerTouchesDeactivatedObject()
	{
		return null;
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0xA76D14", Offset = "0xA76D14", VA = "0xA76D14")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A6234", Offset = "0x6A6234")]
	public IEnumerator WaitForSeconds(int seconds)
	{
		return null;
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0xA76D80", Offset = "0xA76D80", VA = "0xA76D80")]
	public void playerHasResetHands()
	{
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0xA76D94", Offset = "0xA76D94", VA = "0xA76D94")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A6294", Offset = "0x6A6294")]
	public IEnumerator WaitUntilHandsReset()
	{
		return null;
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0xA76E0C", Offset = "0xA76E0C", VA = "0xA76E0C")]
	public void removeTutorialObjects()
	{
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0xA76E28", Offset = "0xA76E28", VA = "0xA76E28")]
	private void startTutorialObjectsDisappearanceAnimations()
	{
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0xA77144", Offset = "0xA77144", VA = "0xA77144")]
	public void destroyTutorialObjects()
	{
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0xA77448", Offset = "0xA77448", VA = "0xA77448")]
	public void setAllowPlayerHandsToBeReset()
	{
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0xA77454", Offset = "0xA77454", VA = "0xA77454")]
	public DEPRECATEDTargetTouchIntroObjectController()
	{
	}
}
[Token(Token = "0x20001B7")]
public class TargetTouchObjectCreationService : MonoBehaviour
{
	[Token(Token = "0x20001B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CBCC", Offset = "0x69CBCC")]
	private sealed class <recreateObjectsCoroutine>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TargetTouchObjectCreationService <>4__this;

		[Token(Token = "0x170000E2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009B9")]
			[Address(RVA = "0x149B69C", Offset = "0x149B69C", VA = "0x149B69C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009BB")]
			[Address(RVA = "0x149B6E4", Offset = "0x149B6E4", VA = "0x149B6E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009B6")]
		[Address(RVA = "0x149B5F8", Offset = "0x149B5F8", VA = "0x149B5F8")]
		[DebuggerHidden]
		public <recreateObjectsCoroutine>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x60009B7")]
		[Address(RVA = "0x149B624", Offset = "0x149B624", VA = "0x149B624", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009B8")]
		[Address(RVA = "0x149B628", Offset = "0x149B628", VA = "0x149B628", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009BA")]
		[Address(RVA = "0x149B6A4", Offset = "0x149B6A4", VA = "0x149B6A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TargetTouchGameController targetTouchGameController;

	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject targetObjectPrefab;

	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject handResetBarrierObject;

	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Coroutine activeCoroutine;

	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<GameObject> currentObjects;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private PlayAreaService playAreaService;

	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private TargetTouchObjectPositioningService targetTouchObjectPositioningService;

	[Token(Token = "0x170000E1")]
	public TargetTouchGameController TargetTouchGameController
	{
		[Token(Token = "0x60009A6")]
		[Address(RVA = "0x14D6104", Offset = "0x14D6104", VA = "0x14D6104")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009A7")]
		[Address(RVA = "0x14D610C", Offset = "0x14D610C", VA = "0x14D610C")]
		set
		{
		}
	}

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0x14D3464", Offset = "0x14D3464", VA = "0x14D3464")]
	public void recreateTargetObjects()
	{
	}

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0x14D635C", Offset = "0x14D635C", VA = "0x14D635C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A6484", Offset = "0x6A6484")]
	private IEnumerator recreateObjectsCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60009AA")]
	[Address(RVA = "0x14D1548", Offset = "0x14D1548", VA = "0x14D1548")]
	public void createTargetObjects(bool objectsNeedToPerformIntro)
	{
	}

	[Token(Token = "0x60009AB")]
	[Address(RVA = "0x14D6CCC", Offset = "0x14D6CCC", VA = "0x14D6CCC")]
	private void setIdsOnTargetObjects()
	{
	}

	[Token(Token = "0x60009AC")]
	[Address(RVA = "0x14D6114", Offset = "0x14D6114", VA = "0x14D6114")]
	private void stopActiveCoroutine()
	{
	}

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0x14D6A34", Offset = "0x14D6A34", VA = "0x14D6A34")]
	public void createTargetTouchObjects()
	{
	}

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0x14D6FF0", Offset = "0x14D6FF0", VA = "0x14D6FF0")]
	protected GameObject createTargetObject(int x)
	{
		return null;
	}

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0x14D615C", Offset = "0x14D615C", VA = "0x14D615C")]
	protected void destroyAllCurrentActiveGameObjects()
	{
	}

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0x14D71F0", Offset = "0x14D71F0", VA = "0x14D71F0")]
	public void addToTargetObjects(GameObject gameObject, bool vertical)
	{
	}

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0x14D6D94", Offset = "0x14D6D94", VA = "0x14D6D94")]
	private List<int> getIndexOfVerticalObjects()
	{
		return null;
	}

	[Token(Token = "0x60009B2")]
	[Address(RVA = "0x14D63D4", Offset = "0x14D63D4", VA = "0x14D63D4")]
	public void createHandTwitchObjects()
	{
	}

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0x14D6924", Offset = "0x14D6924", VA = "0x14D6924")]
	private void setAppearancePosOnTargetObjects(List<Vector3> positions)
	{
	}

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0x14D72F4", Offset = "0x14D72F4", VA = "0x14D72F4")]
	public List<GameObject> getCurrentObjects()
	{
		return null;
	}

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0x14D72FC", Offset = "0x14D72FC", VA = "0x14D72FC")]
	public TargetTouchObjectCreationService()
	{
	}
}
[Token(Token = "0x20001B9")]
public class TargetTouchObjectPositioningService : MonoBehaviour
{
	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PlayAreaService playAreaService;

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TargetTouchGameController targetTouchGameController;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform transformOfPlayerCamera;

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject handResetBarrierObject;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float[] boundaries;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float objectSize;

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 targetObjectPosBasedOnPlayArea;

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0x14D6474", Offset = "0x14D6474", VA = "0x14D6474")]
	public void init(float objectSize)
	{
	}

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0x14D7380", Offset = "0x14D7380", VA = "0x14D7380")]
	private Vector3 getMidTargetObjectPosBasedOnPlayer()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0x14D6C34", Offset = "0x14D6C34", VA = "0x14D6C34")]
	public List<Vector3> getTargetObjectPositions()
	{
		return null;
	}

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0x14D7AD8", Offset = "0x14D7AD8", VA = "0x14D7AD8")]
	public Vector3 getTutorialObjectPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0x14D7490", Offset = "0x14D7490", VA = "0x14D7490")]
	private List<Vector3> calculateObjectPositions(Vector3 startingPos)
	{
		return null;
	}

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0x14D6638", Offset = "0x14D6638", VA = "0x14D6638")]
	public List<Vector3> getHandTwitchPositions()
	{
		return null;
	}

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0x14D7918", Offset = "0x14D7918", VA = "0x14D7918")]
	private bool checkAllPositionsWithinPlayArea(List<Vector3> positions)
	{
		return default(bool);
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0x14D7B90", Offset = "0x14D7B90", VA = "0x14D7B90")]
	private List<int> getIndexOfVerticalObjects()
	{
		return null;
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0x14D7DEC", Offset = "0x14D7DEC", VA = "0x14D7DEC")]
	public TargetTouchObjectPositioningService()
	{
	}
}
[Token(Token = "0x20001BA")]
public class TargetTouchObjectTouchedWhileInactiveEffectController : MonoBehaviour
{
	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TargetTouchGameController targetTouchGameController;

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TargetObject targetObject;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip loopingElectricitySound;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Material normalMaterial;

	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Material touchedWhileInactiveMaterial;

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0x14CD114", Offset = "0x14CD114", VA = "0x14CD114")]
	public void startInactiveTouchedEffect()
	{
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0x14CD160", Offset = "0x14CD160", VA = "0x14CD160")]
	public void startInactiveTouchedEffectNoAudio()
	{
	}

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0x14CD460", Offset = "0x14CD460", VA = "0x14CD460")]
	public void stopInactiveTouchedEffect()
	{
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0x14CD17C", Offset = "0x14CD17C", VA = "0x14CD17C")]
	public void stopInactiveTouchedEffectNoAudio()
	{
	}

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0x14D7EA8", Offset = "0x14D7EA8", VA = "0x14D7EA8")]
	public void setTargetTouchGameController(TargetTouchGameController targetTouchGameController)
	{
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0x14D7E84", Offset = "0x14D7E84", VA = "0x14D7E84")]
	private void activateForceFieldEffect()
	{
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0x14D7EB0", Offset = "0x14D7EB0", VA = "0x14D7EB0")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0x14D7F80", Offset = "0x14D7F80", VA = "0x14D7F80")]
	public TargetTouchObjectTouchedWhileInactiveEffectController()
	{
	}
}
[Token(Token = "0x20001BB")]
public class DEPRECATEDTargetTouchPlayerHandsCollisionChecker : MonoBehaviour
{
	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected int touchedByPlayer;

	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected TargetTouchGameController targetTouchGameController;

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0xA7745C", Offset = "0xA7745C", VA = "0xA7745C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0xA77468", Offset = "0xA77468", VA = "0xA77468", Slot = "4")]
	protected virtual void performOnOnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0xA77564", Offset = "0xA77564", VA = "0xA77564")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0xA77570", Offset = "0xA77570", VA = "0xA77570", Slot = "5")]
	protected virtual void performOnOnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0xA77528", Offset = "0xA77528", VA = "0xA77528")]
	protected void contactStarted()
	{
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0xA77630", Offset = "0xA77630", VA = "0xA77630")]
	protected void contactEnded()
	{
	}

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0xA77668", Offset = "0xA77668", VA = "0xA77668")]
	public void reset()
	{
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0xA77670", Offset = "0xA77670", VA = "0xA77670")]
	public int getTouchedByPlayerCounter()
	{
		return default(int);
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0xA77678", Offset = "0xA77678", VA = "0xA77678")]
	public DEPRECATEDTargetTouchPlayerHandsCollisionChecker()
	{
	}
}
[Token(Token = "0x20001BC")]
public class TargetObjectEffectTester : MonoBehaviour
{
	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected TargetTouchObjectTouchedWhileInactiveEffectController inactiveEffectController;

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TargetObject targetObject;

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0x14CF858", Offset = "0x14CF858", VA = "0x14CF858")]
	private void Start()
	{
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0x14CF880", Offset = "0x14CF880", VA = "0x14CF880")]
	private void Update()
	{
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0x14CFD54", Offset = "0x14CFD54", VA = "0x14CFD54")]
	public TargetObjectEffectTester()
	{
	}
}
[Token(Token = "0x20001BD")]
public class TargetObjectInstantiatePrefabsTest : MonoBehaviour
{
	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject[] gameObjectsThatNeedPrefabsLoaded;

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0x14CFD5C", Offset = "0x14CFD5C", VA = "0x14CFD5C")]
	private void Start()
	{
	}

	[Token(Token = "0x60009DA")]
	[Address(RVA = "0x14CFE14", Offset = "0x14CFE14", VA = "0x14CFE14")]
	private void Update()
	{
	}

	[Token(Token = "0x60009DB")]
	[Address(RVA = "0x14CFE18", Offset = "0x14CFE18", VA = "0x14CFE18")]
	public TargetObjectInstantiatePrefabsTest()
	{
	}
}
[Token(Token = "0x20001BE")]
public class TargetObjectRandomMovementTest : MonoBehaviour
{
	[Token(Token = "0x4000989")]
	private const string scriptName = "TargetObjectRandomMovementTest";

	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject destinationGameObject;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform destinationTransform;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float m_Speed;

	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool targetObjectMoves;

	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject gameObjectForTransformOfOriginalPosition;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform transformOfOriginalPosition;

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int maximumDistanceFromOriginalPosition;

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform objectsOwnTransformComponent;

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0x14CFE20", Offset = "0x14CFE20", VA = "0x14CFE20")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0x14CFE8C", Offset = "0x14CFE8C", VA = "0x14CFE8C")]
	public void updateTransformOfOriginalPosition()
	{
	}

	[Token(Token = "0x60009DE")]
	[Address(RVA = "0x14D0098", Offset = "0x14D0098", VA = "0x14D0098")]
	private void createDestinationTransform()
	{
	}

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0x14D0364", Offset = "0x14D0364", VA = "0x14D0364")]
	private void Update()
	{
	}

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0x14D0514", Offset = "0x14D0514", VA = "0x14D0514")]
	public TargetObjectRandomMovementTest()
	{
	}
}
[Token(Token = "0x20001BF")]
public class TargetTouchHandSpecificActivationTester : MonoBehaviour
{
	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TargetObject targetObject;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TargetTouchGameController targetTouchGameController;

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0x14D5A48", Offset = "0x14D5A48", VA = "0x14D5A48")]
	private void Start()
	{
	}

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0x14D5B2C", Offset = "0x14D5B2C", VA = "0x14D5B2C")]
	private void Update()
	{
	}

	[Token(Token = "0x60009E3")]
	[Address(RVA = "0x14D5D4C", Offset = "0x14D5D4C", VA = "0x14D5D4C")]
	public TargetTouchHandSpecificActivationTester()
	{
	}
}
[Token(Token = "0x20001C0")]
public class TargetTouchTutorialController : TutorialController
{
	[Token(Token = "0x20001C1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CBDC", Offset = "0x69CBDC")]
	private sealed class <performGameModeSpecificTutorialSteps>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400099A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400099B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TargetTouchTutorialController <>4__this;

		[Token(Token = "0x400099C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool startingBySkip;

		[Token(Token = "0x400099D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject <activeTutorialObject>5__2;

		[Token(Token = "0x170000E4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009EE")]
			[Address(RVA = "0x149C738", Offset = "0x149C738", VA = "0x149C738", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009F0")]
			[Address(RVA = "0x149C780", Offset = "0x149C780", VA = "0x149C780", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009EB")]
		[Address(RVA = "0x149B6EC", Offset = "0x149B6EC", VA = "0x149B6EC")]
		[DebuggerHidden]
		public <performGameModeSpecificTutorialSteps>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60009EC")]
		[Address(RVA = "0x149B718", Offset = "0x149B718", VA = "0x149B718", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009ED")]
		[Address(RVA = "0x149B71C", Offset = "0x149B71C", VA = "0x149B71C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009EF")]
		[Address(RVA = "0x149C740", Offset = "0x149C740", VA = "0x149C740", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[SerializeField]
	private TargetTouchHandsCollisionChecker targetTouchHandsCollisionChecker;

	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[SerializeField]
	private MakeObjectSeeThrough makeObjectSeeThrough;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[SerializeField]
	private GameObject handResetBarrierObject;

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[SerializeField]
	private GameObject tutorialTargetTouchObject;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[SerializeField]
	private TutorialObjectPositioningHelper tutorialObjectPositioningHelper;

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0x14D7F88", Offset = "0x14D7F88", VA = "0x14D7F88", Slot = "8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A6534", Offset = "0x6A6534")]
	protected override IEnumerator performGameModeSpecificTutorialSteps(bool startingBySkip)
	{
		return null;
	}

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0x14D8014", Offset = "0x14D8014", VA = "0x14D8014", Slot = "22")]
	protected override void onPausedSpecific()
	{
	}

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0x14D8034", Offset = "0x14D8034", VA = "0x14D8034", Slot = "23")]
	protected override void onUnPausedSpecific()
	{
	}

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0x14D8054", Offset = "0x14D8054", VA = "0x14D8054", Slot = "21")]
	protected override void objectReachedDisappearancePositionSpecific(GameObject gameObjectReachedDestination)
	{
	}

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0x14D80A8", Offset = "0x14D80A8", VA = "0x14D80A8")]
	private void activateTutorialObject(GameObject gameObject, CoordinationCoachGameObject.ActivationType activationType)
	{
	}

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0x14D8150", Offset = "0x14D8150", VA = "0x14D8150")]
	private void deactivateTutorialObject(GameObject activeTutorialObject)
	{
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0x14D81E0", Offset = "0x14D81E0", VA = "0x14D81E0")]
	public TargetTouchTutorialController()
	{
	}
}
[Token(Token = "0x20001C2")]
public class TargetTouchTutorialObjectCoordinationCoachPoolController : TutorialObjectCoordinationCoachPoolController
{
	[Token(Token = "0x60009F1")]
	[Address(RVA = "0x14D81E8", Offset = "0x14D81E8", VA = "0x14D81E8", Slot = "30")]
	protected override void performAdditionalTutorialObjectSetup(GameObject instantiatedPrefab)
	{
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0x14D82E0", Offset = "0x14D82E0", VA = "0x14D82E0")]
	public TargetTouchTutorialObjectCoordinationCoachPoolController()
	{
	}
}
[Token(Token = "0x20001C3")]
public class TutorialTargetObject : TargetObject, TutorialObjectInterface
{
	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	private bool disappearanceForced;

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	private TutorialController tutorialController;

	[Token(Token = "0x170000E6")]
	public TutorialController TutorialController
	{
		[Token(Token = "0x60009F3")]
		[Address(RVA = "0x14EA36C", Offset = "0x14EA36C", VA = "0x14EA36C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009F4")]
		[Address(RVA = "0x14EA374", Offset = "0x14EA374", VA = "0x14EA374")]
		set
		{
		}
	}

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0x14EA384", Offset = "0x14EA384", VA = "0x14EA384", Slot = "40")]
	protected override void touchedByPlayerHand(Collider collider)
	{
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0x14EA5B8", Offset = "0x14EA5B8", VA = "0x14EA5B8", Slot = "42")]
	protected override void playerTouchedForbiddenObject(PlayerHandController playerHandController)
	{
	}

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0x14EA62C", Offset = "0x14EA62C", VA = "0x14EA62C", Slot = "72")]
	protected override void appearancePositionReached()
	{
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0x14EA688", Offset = "0x14EA688", VA = "0x14EA688", Slot = "74")]
	protected override void disappearancePositionReached()
	{
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0x14EA6C8", Offset = "0x14EA6C8", VA = "0x14EA6C8", Slot = "118")]
	public void setTutorialController(TutorialController tutorialController)
	{
	}

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0x14EA6D8", Offset = "0x14EA6D8", VA = "0x14EA6D8", Slot = "97")]
	public override string getObjectType()
	{
		return null;
	}

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0x14EA738", Offset = "0x14EA738", VA = "0x14EA738", Slot = "119")]
	public void setForceDisappearance(bool forceDisappearance)
	{
	}

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0x14EA744", Offset = "0x14EA744", VA = "0x14EA744", Slot = "91")]
	protected override void collidedWithPlayer(Collider collider)
	{
	}

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0x14EA7B8", Offset = "0x14EA7B8", VA = "0x14EA7B8")]
	public TutorialTargetObject()
	{
	}
}
[Token(Token = "0x20001C4")]
public class ValidActivationTypesService : MonoBehaviour
{
	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PlayerHandController leftHand;

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private PlayerHandController rightHand;

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool infinitePlayerHandEnergy;

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool activateHandSpecificObjects;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	private bool leftHandOnlyObjectActive;

	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	private bool rightHandOnlyObjectActive;

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private DateTime leftHandOnlyObjectDeactivationTime;

	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private DateTime rightHandOnlyObjectDeactivationTime;

	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly double MIN_ELAPSED_TIME;

	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<CoordinationCoachGameObject.ActivationType> activationTypesAnyHandOnly;

	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<CoordinationCoachGameObject.ActivationType> activationTypesAnyHandOnlyAndDoNotTouch;

	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<CoordinationCoachGameObject.ActivationType> activationTypesIncludingDoNotTouch;

	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<CoordinationCoachGameObject.ActivationType> activationTypesWithoutDoNotTouch;

	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<CoordinationCoachGameObject.ActivationType> activationNotPossibleList;

	[Token(Token = "0x170000E7")]
	public bool ActivateHandSpecificObjects
	{
		[Token(Token = "0x60009FE")]
		[Address(RVA = "0x14ECDE0", Offset = "0x14ECDE0", VA = "0x14ECDE0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60009FF")]
		[Address(RVA = "0x14ECDE8", Offset = "0x14ECDE8", VA = "0x14ECDE8")]
		set
		{
		}
	}

	[Token(Token = "0x170000E8")]
	public bool InfinitePlayerHandEnergy
	{
		[Token(Token = "0x6000A00")]
		[Address(RVA = "0x14ECDF4", Offset = "0x14ECDF4", VA = "0x14ECDF4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A01")]
		[Address(RVA = "0x14ECDFC", Offset = "0x14ECDFC", VA = "0x14ECDFC")]
		set
		{
		}
	}

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0x14ECE08", Offset = "0x14ECE08", VA = "0x14ECE08")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0x14ECFFC", Offset = "0x14ECFFC", VA = "0x14ECFFC")]
	public List<CoordinationCoachGameObject.ActivationType> getValidActivationTypesIncludingDoNotTouch()
	{
		return null;
	}

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0x14ED12C", Offset = "0x14ED12C", VA = "0x14ED12C")]
	public List<CoordinationCoachGameObject.ActivationType> getValidActivationTypesWithoutDoNotTouch()
	{
		return null;
	}

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0x14ED294", Offset = "0x14ED294", VA = "0x14ED294")]
	private bool isLeftHandOnlyActivationTypeValid()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0x14ED3A8", Offset = "0x14ED3A8", VA = "0x14ED3A8")]
	private bool isRightHandOnlyActivationTypeValid()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0x14ED4BC", Offset = "0x14ED4BC", VA = "0x14ED4BC")]
	public void activationTypeActived(CoordinationCoachGameObject.ActivationType activationType)
	{
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0x14ED504", Offset = "0x14ED504", VA = "0x14ED504")]
	public void activationTypeDeactivated(CoordinationCoachGameObject.ActivationType activationType)
	{
	}

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0x14ED5C8", Offset = "0x14ED5C8", VA = "0x14ED5C8")]
	public void setLeftHandOnlyObject(bool leftHandOnlyObject)
	{
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0x14ED5F4", Offset = "0x14ED5F4", VA = "0x14ED5F4")]
	public bool isLeftHandObjectActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0x14ED618", Offset = "0x14ED618", VA = "0x14ED618")]
	public void setRightHandOnlyObject(bool rightHandOnlyObject)
	{
	}

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0x14ED644", Offset = "0x14ED644", VA = "0x14ED644")]
	public bool isRightHandObjectActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0x14ED0E0", Offset = "0x14ED0E0", VA = "0x14ED0E0")]
	public int getNumberOfActiveValidHands()
	{
		return default(int);
	}

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0x14ED668", Offset = "0x14ED668", VA = "0x14ED668")]
	public CoordinationCoachGameObject.ActivationType getRandomActivationTypeIncludingDoNotTouch()
	{
		return default(CoordinationCoachGameObject.ActivationType);
	}

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0x14ED7F8", Offset = "0x14ED7F8", VA = "0x14ED7F8")]
	public CoordinationCoachGameObject.ActivationType getRandomActivationTypeWithoutDoNotTouch()
	{
		return default(CoordinationCoachGameObject.ActivationType);
	}

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0x14ED680", Offset = "0x14ED680", VA = "0x14ED680")]
	private CoordinationCoachGameObject.ActivationType getRandomActivationTypeWithDoNotTouch(List<CoordinationCoachGameObject.ActivationType> validActivationTypes)
	{
		return default(CoordinationCoachGameObject.ActivationType);
	}

	[Token(Token = "0x6000A11")]
	[Address(RVA = "0x14ED810", Offset = "0x14ED810", VA = "0x14ED810")]
	private CoordinationCoachGameObject.ActivationType getRandomActivationTypeWithoutDoNotTouch(List<CoordinationCoachGameObject.ActivationType> validActivationTypes)
	{
		return default(CoordinationCoachGameObject.ActivationType);
	}

	[Token(Token = "0x6000A12")]
	[Address(RVA = "0x14ED908", Offset = "0x14ED908", VA = "0x14ED908")]
	public void reset()
	{
	}

	[Token(Token = "0x6000A13")]
	[Address(RVA = "0x14ED98C", Offset = "0x14ED98C", VA = "0x14ED98C")]
	public ValidActivationTypesService()
	{
	}
}
[Token(Token = "0x20001C5")]
public class WarningBeepController : MonoBehaviour
{
	[Token(Token = "0x20001C6")]
	private enum CLIP_PLAYING
	{
		[Token(Token = "0x40009BD")]
		NONE,
		[Token(Token = "0x40009BE")]
		FIRST,
		[Token(Token = "0x40009BF")]
		SECOND,
		[Token(Token = "0x40009C0")]
		THIRD
	}

	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource audioSource;

	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioClip firstWarningClip;

	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip secondWarningClip;

	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioClip thirdWarningClip;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly float FIRST_CLIP_VOLUME;

	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private readonly float SECOND_CLIP_VOLUME;

	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly float THIRD_CLIP_VOLUME;

	[Token(Token = "0x40009B5")]
	public const float SECOND_DISTANCE = 0.2f;

	[Token(Token = "0x40009B6")]
	public const float THIRD_DISTANCE = 0.1f;

	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private CLIP_PLAYING currentClipPlaying;

	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Dictionary<CLIP_PLAYING, AudioClip> clipDictionary;

	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Dictionary<CLIP_PLAYING, float> volumeDictionary;

	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool playAudio;

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 targetPos;

	[Token(Token = "0x170000E9")]
	public Vector3 TargetPos
	{
		[Token(Token = "0x6000A15")]
		[Address(RVA = "0x14EF968", Offset = "0x14EF968", VA = "0x14EF968")]
		set
		{
		}
	}

	[Token(Token = "0x6000A16")]
	[Address(RVA = "0x14EF974", Offset = "0x14EF974", VA = "0x14EF974")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A17")]
	[Address(RVA = "0x14EFA8C", Offset = "0x14EFA8C", VA = "0x14EFA8C")]
	public void playLoopingWarning()
	{
	}

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0x14EFC00", Offset = "0x14EFC00", VA = "0x14EFC00")]
	private void playClip(CLIP_PLAYING clipToPlay)
	{
	}

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0x14EFCE0", Offset = "0x14EFCE0", VA = "0x14EFCE0")]
	public void setPlayAudio(bool input)
	{
	}

	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0x14EFB58", Offset = "0x14EFB58", VA = "0x14EFB58")]
	public float getFirstWarningDistance()
	{
		return default(float);
	}

	[Token(Token = "0x6000A1B")]
	[Address(RVA = "0x14EFD4C", Offset = "0x14EFD4C", VA = "0x14EFD4C")]
	public WarningBeepController()
	{
	}
}
[Token(Token = "0x20001C7")]
public class AudioController : MonoBehaviour
{
	[Token(Token = "0x20001C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CBEC", Offset = "0x69CBEC")]
	private sealed class <fadeOutCurrentAudioFadeInNewAudioCoroutine>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioController <>4__this;

		[Token(Token = "0x40009CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeOutTime;

		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip clip;

		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float fadeInTime;

		[Token(Token = "0x40009D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float maxVolume;

		[Token(Token = "0x170000EA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A30")]
			[Address(RVA = "0x14BBAFC", Offset = "0x14BBAFC", VA = "0x14BBAFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A32")]
			[Address(RVA = "0x14BBB44", Offset = "0x14BBB44", VA = "0x14BBB44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0x14BB9B0", Offset = "0x14BB9B0", VA = "0x14BB9B0")]
		[DebuggerHidden]
		public <fadeOutCurrentAudioFadeInNewAudioCoroutine>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0x14BB9DC", Offset = "0x14BB9DC", VA = "0x14BB9DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0x14BB9E0", Offset = "0x14BB9E0", VA = "0x14BB9E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A31")]
		[Address(RVA = "0x14BBB04", Offset = "0x14BBB04", VA = "0x14BBB04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001C9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CBFC", Offset = "0x69CBFC")]
	private sealed class <fadeInAudioCoroutine>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioController <>4__this;

		[Token(Token = "0x40009D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip clip;

		[Token(Token = "0x40009D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float fadeTime;

		[Token(Token = "0x40009D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float maxVolume;

		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <startVolume>5__2;

		[Token(Token = "0x170000EC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A36")]
			[Address(RVA = "0x14BB7DC", Offset = "0x14BB7DC", VA = "0x14BB7DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000ED")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A38")]
			[Address(RVA = "0x14BB824", Offset = "0x14BB824", VA = "0x14BB824", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A33")]
		[Address(RVA = "0x14BB6B0", Offset = "0x14BB6B0", VA = "0x14BB6B0")]
		[DebuggerHidden]
		public <fadeInAudioCoroutine>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000A34")]
		[Address(RVA = "0x14BB6DC", Offset = "0x14BB6DC", VA = "0x14BB6DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A35")]
		[Address(RVA = "0x14BB6E0", Offset = "0x14BB6E0", VA = "0x14BB6E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A37")]
		[Address(RVA = "0x14BB7E4", Offset = "0x14BB7E4", VA = "0x14BB7E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001CA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CC0C", Offset = "0x69CC0C")]
	private sealed class <fadeOutCurrentAudioCoroutine>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioController <>4__this;

		[Token(Token = "0x40009DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x40009DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <startVolume>5__2;

		[Token(Token = "0x170000EE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A3C")]
			[Address(RVA = "0x14BB960", Offset = "0x14BB960", VA = "0x14BB960", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A3E")]
			[Address(RVA = "0x14BB9A8", Offset = "0x14BB9A8", VA = "0x14BB9A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A39")]
		[Address(RVA = "0x14BB82C", Offset = "0x14BB82C", VA = "0x14BB82C")]
		[DebuggerHidden]
		public <fadeOutCurrentAudioCoroutine>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000A3A")]
		[Address(RVA = "0x14BB858", Offset = "0x14BB858", VA = "0x14BB858", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0x14BB85C", Offset = "0x14BB85C", VA = "0x14BB85C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0x14BB968", Offset = "0x14BB968", VA = "0x14BB968", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected AudioClip backgroundMusic;

	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected AudioClip tutorialMusic;

	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip buttonClicked;

	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioClip onRayOverButton;

	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AudioClip errorSound;

	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AudioClip backButtonClicked;

	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AudioClip gameStarted;

	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected AudioSource audioSource;

	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private WaitForSeconds waitForOneSecond;

	[Token(Token = "0x6000A1C")]
	[Address(RVA = "0x14A75C8", Offset = "0x14A75C8", VA = "0x14A75C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A1D")]
	[Address(RVA = "0x14A76BC", Offset = "0x14A76BC", VA = "0x14A76BC")]
	private void setAudioSource()
	{
	}

	[Token(Token = "0x6000A1E")]
	[Address(RVA = "0x14A77D8", Offset = "0x14A77D8", VA = "0x14A77D8")]
	public void playClipLooping(AudioClip clip)
	{
	}

	[Token(Token = "0x6000A1F")]
	[Address(RVA = "0x14A7834", Offset = "0x14A7834", VA = "0x14A7834")]
	public void fadeOutCurrentAudioFadeInNewAudio(float fadeOutTime, AudioClip clip, float fadeInTime, float maxVolume)
	{
	}

	[Token(Token = "0x6000A20")]
	[Address(RVA = "0x14A789C", Offset = "0x14A789C", VA = "0x14A789C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A65E4", Offset = "0x6A65E4")]
	private IEnumerator fadeOutCurrentAudioFadeInNewAudioCoroutine(float fadeOutTime, AudioClip clip, float fadeInTime, float maxVolume)
	{
		return null;
	}

	[Token(Token = "0x6000A21")]
	[Address(RVA = "0x14A7954", Offset = "0x14A7954", VA = "0x14A7954")]
	public void fadeInAudio(AudioClip clip, float fadeTime, float maxVolume)
	{
	}

	[Token(Token = "0x6000A22")]
	[Address(RVA = "0x14A79CC", Offset = "0x14A79CC", VA = "0x14A79CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A6644", Offset = "0x6A6644")]
	private IEnumerator fadeInAudioCoroutine(AudioClip clip, float fadeTime, float maxVolume)
	{
		return null;
	}

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0x14A7A74", Offset = "0x14A7A74", VA = "0x14A7A74")]
	public void fadeOutCurrentAudio(float fadeTime)
	{
	}

	[Token(Token = "0x6000A24")]
	[Address(RVA = "0x14A7AA0", Offset = "0x14A7AA0", VA = "0x14A7AA0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A66A4", Offset = "0x6A66A4")]
	private IEnumerator fadeOutCurrentAudioCoroutine(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0x14A7B28", Offset = "0x14A7B28", VA = "0x14A7B28")]
	public AudioClip getTutorialAudioClip()
	{
		return null;
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0x14A7B30", Offset = "0x14A7B30", VA = "0x14A7B30")]
	public AudioClip getBackgroundMusic()
	{
		return null;
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0x14A7560", Offset = "0x14A7560", VA = "0x14A7560")]
	public void playButtonClicked()
	{
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0x14A759C", Offset = "0x14A759C", VA = "0x14A759C")]
	public void playBackButtonClicked()
	{
	}

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0x14A7B38", Offset = "0x14A7B38", VA = "0x14A7B38")]
	public void playGameStartedClicked()
	{
	}

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0x14A7B5C", Offset = "0x14A7B5C", VA = "0x14A7B5C")]
	public void playOnRayOverButton()
	{
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0x14A7B80", Offset = "0x14A7B80", VA = "0x14A7B80")]
	public void playError()
	{
	}

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0x14A7BA4", Offset = "0x14A7BA4", VA = "0x14A7BA4")]
	public AudioController()
	{
	}
}
[Token(Token = "0x20001CB")]
public class ChangeMusic : MonoBehaviour
{
	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0xF2845C", Offset = "0xF2845C", VA = "0xF2845C")]
	public ChangeMusic()
	{
	}
}
[Token(Token = "0x20001CC")]
public class GameModeAudioController : AudioController
{
	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private AudioClip pointScored;

	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private AudioClip pointMissed;

	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private AudioClip playerTouchedInactiveItem;

	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private AudioClip timeAlmostUp;

	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private AudioClip gameEndedClip;

	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private AudioClip gameStartCountdownClip;

	[Token(Token = "0x40009E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private AudioClip gameObjectActivated;

	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private AudioClip playerLostClip;

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0x9F23C8", Offset = "0x9F23C8", VA = "0x9F23C8")]
	public void playGameObjectActivated()
	{
	}

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0x9F23EC", Offset = "0x9F23EC", VA = "0x9F23EC")]
	public void playPointScored()
	{
	}

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0x9F2410", Offset = "0x9F2410", VA = "0x9F2410")]
	public void playPointMissed()
	{
	}

	[Token(Token = "0x6000A43")]
	[Address(RVA = "0x9F2434", Offset = "0x9F2434", VA = "0x9F2434")]
	public void playTimeAlmostUp()
	{
	}

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0x9F2458", Offset = "0x9F2458", VA = "0x9F2458")]
	public void playPlayerLostClip()
	{
	}

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0x9F038C", Offset = "0x9F038C", VA = "0x9F038C")]
	public void playGameEndedClip()
	{
	}

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0x9F247C", Offset = "0x9F247C", VA = "0x9F247C")]
	public void playPlayerTouchedInactiveItem()
	{
	}

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0x9F24A0", Offset = "0x9F24A0", VA = "0x9F24A0")]
	public void playGameStartCountdownClip()
	{
	}

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0x9F24C4", Offset = "0x9F24C4", VA = "0x9F24C4")]
	public GameModeAudioController()
	{
	}
}
[Token(Token = "0x20001CD")]
public class VolumeConstants
{
	[Token(Token = "0x40009E5")]
	public const float MUSIC_FADE_TIME = 2f;

	[Token(Token = "0x40009E6")]
	public const float MAX_MUSIC_VOLUME = 0.1f;

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0x14EF8F8", Offset = "0x14EF8F8", VA = "0x14EF8F8")]
	public VolumeConstants()
	{
	}
}
[Token(Token = "0x20001CE")]
public class BezierCurveController : MonoBehaviour
{
	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Vector3[] bezierCurvePoints;

	[Token(Token = "0x40009E8")]
	public const float BEZIER_CURVE_ON_THIRD_DISTANCE = 0.33f;

	[Token(Token = "0x40009E9")]
	public const float BEZIER_CURVE_TWO_THIRDS_DISTANCE = 0.66f;

	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float forwardMultiplier;

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 bezierCurveForwardCalculationPosition;

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 bezierCurveUpCalculationPosition;

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 bezierCurveRightCalculationPosition;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float curve2DMultiplier;

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float firstPoint_X_DirectionMultiplier2D;

	[Token(Token = "0x40009F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float firstPoint_Y_DirectionMultiplier2D;

	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float secondPoint_X_DirectionMultiplier2D;

	[Token(Token = "0x40009F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float secondPoint_Y_DirectionMultiplier2D;

	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float bezierQuarterHorizontalDirection;

	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float bezierQuarterHorizontalMultiplier;

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float bezierQuarterVerticalDirection;

	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float bezierQuarterVerticalMultiplier;

	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float bezierThreeQuartersHorizontalDirection;

	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float bezierThreeQuartersHorizontalMultiplier;

	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float bezierThreeQuartersVerticalDirection;

	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float bezierThreeQuartersVerticalMultiplier;

	[Token(Token = "0x40009FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float bezierQuarterForwardBackDirection;

	[Token(Token = "0x40009FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float bezierQuarterForwardBackMultiplier;

	[Token(Token = "0x40009FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float bezierThreeQuartersForwardBackDirection;

	[Token(Token = "0x40009FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float bezierThreeQuartersForwardBackMultiplier;

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0x14A85C4", Offset = "0x14A85C4", VA = "0x14A85C4")]
	public Vector3[] getBezierCurvePoints()
	{
		return null;
	}

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0x14A85CC", Offset = "0x14A85CC", VA = "0x14A85CC")]
	public void calculateNew2DBezierCurve(Vector3 startingPos, Vector3 destination, float firstPosMultiplier, float secondPosMultiplier, float maxDistanceFromDirectLineMultiplier)
	{
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0x14A8660", Offset = "0x14A8660", VA = "0x14A8660")]
	public void generate2DBaseValues()
	{
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0x14A86D0", Offset = "0x14A86D0", VA = "0x14A86D0", Slot = "4")]
	protected virtual void calculate2DBezierCurvePoints(Vector3 startingPos, Vector3 destination, float firstPosMultiplier, float secondPosMultiplier, float maxDistanceFromDirectLineMultiplier)
	{
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0x14A88A8", Offset = "0x14A88A8", VA = "0x14A88A8")]
	public void calculateNewLeftRightBezierCurve(Vector3 startingPos, Vector3 destination, float firstPosMultiplier, float secondPosMultiplier, float maxDistanceFromDirectLineMultiplier)
	{
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0x14A893C", Offset = "0x14A893C", VA = "0x14A893C", Slot = "5")]
	protected virtual void calculateLeftRightBezierCurve(Vector3 startingPos, Vector3 destination, float firstPosMultiplier, float secondPosMultiplier, float maxDistanceFromDirectLineMultiplier)
	{
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0x14A8C3C", Offset = "0x14A8C3C", VA = "0x14A8C3C")]
	public void calculate3DBezierCurve(Vector3 targetPosition, Vector3 currentMovementStartPosition, float firstPosMultiplier, float secondPosMultiplier, float distanceFromDirectPathMutliplier)
	{
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0x14A8E80", Offset = "0x14A8E80", VA = "0x14A8E80")]
	public void calculate3DBezierCurvePoints(Vector3 currentMovementStartPosition, Vector3 targetPosition, float firstPosMultiplier, float secondPosMultiplier, float distanceFromDirectPathMultiplier)
	{
	}

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0x14A909C", Offset = "0x14A909C", VA = "0x14A909C")]
	public void calculateForwardBezierCurve(Vector3 targetPosition, float direction, Vector3 currentMovementStartPosition, float firstPosMultiplier, float secondPosMultiplier, float distanceFromDirectPathMutliplier)
	{
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0x14A9128", Offset = "0x14A9128", VA = "0x14A9128")]
	public void generateForward3DBezierCurveCalculationBaseValues(Vector3 targetPosition, float direction)
	{
	}

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0x14A8CD8", Offset = "0x14A8CD8", VA = "0x14A8CD8")]
	private void generateNewBezierCalculationPositions()
	{
	}

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0x14A8D54", Offset = "0x14A8D54", VA = "0x14A8D54")]
	private void generateForwardRightUpMovementDirections()
	{
	}

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0x14A8E10", Offset = "0x14A8E10", VA = "0x14A8E10")]
	private void generateNewMovementDirections()
	{
	}

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0x14A91F4", Offset = "0x14A91F4", VA = "0x14A91F4")]
	public void calculateForward3DBezierCurvePoints(Vector3 currentMovementStartPosition, Vector3 targetPosition, float firstPosMultiplier, float secondPosMultiplier, float distanceFromDirectPathMultiplier)
	{
	}

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0x14A9400", Offset = "0x14A9400", VA = "0x14A9400")]
	public void updateBezierCurveEndpoint(Vector3 newEndpoint)
	{
	}

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0x14A943C", Offset = "0x14A943C", VA = "0x14A943C")]
	public BezierCurveController()
	{
	}
}
[Token(Token = "0x20001CF")]
public class FadeCamera : MonoBehaviour
{
	[Token(Token = "0x40009FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve FadeCurve;

	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float _alpha;

	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Texture2D _texture;

	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _done;

	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float _time;

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0x967FF0", Offset = "0x967FF0", VA = "0x967FF0")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0x968004", Offset = "0x968004", VA = "0x968004")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x6A67F4", Offset = "0x6A67F4")]
	public void RedoFade()
	{
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0x968018", Offset = "0x968018", VA = "0x968018")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0x9681FC", Offset = "0x9681FC", VA = "0x9681FC")]
	public FadeCamera()
	{
	}
}
[Token(Token = "0x20001D0")]
public class LoadGameMode : MonoBehaviour
{
	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0xD7EE84", Offset = "0xD7EE84", VA = "0xD7EE84")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0xD7EE88", Offset = "0xD7EE88", VA = "0xD7EE88")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0xD7EE8C", Offset = "0xD7EE8C", VA = "0xD7EE8C")]
	public LoadGameMode()
	{
	}
}
[Token(Token = "0x20001D1")]
public class EnvironmentAndSkyboxChanger : MonoBehaviour
{
	[Token(Token = "0x20001D2")]
	public enum EnvironmentType
	{
		[Token(Token = "0x4000A0B")]
		LAKE,
		[Token(Token = "0x4000A0C")]
		HILLS,
		[Token(Token = "0x4000A0D")]
		MAGMA,
		[Token(Token = "0x4000A0E")]
		CLASSIC
	}

	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private EnvironmentType currentEnvironmentType;

	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Material lakeMaterial;

	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Material hillsMaterial;

	[Token(Token = "0x4000A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Material magmaMaterial;

	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private MeshRenderer[] meshRenderers;

	[Token(Token = "0x4000A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject[] objects;

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0x967488", Offset = "0x967488", VA = "0x967488")]
	public void setEnvironment(EnvironmentType environmentType)
	{
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0x967524", Offset = "0x967524", VA = "0x967524")]
	private void setObjectsEnabled(bool enabled)
	{
	}

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0x9675A0", Offset = "0x9675A0", VA = "0x9675A0")]
	private void setRenderersEnabled(bool enabled)
	{
	}

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0x96761C", Offset = "0x96761C", VA = "0x96761C")]
	public EnvironmentAndSkyboxChanger()
	{
	}
}
[Token(Token = "0x20001D3")]
public class EnvironmentTester : MonoBehaviour
{
	[Token(Token = "0x4000A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private EnvironmentAndSkyboxChanger environmentAndSkyboxChanger;

	[Token(Token = "0x6000A65")]
	[Address(RVA = "0x9677BC", Offset = "0x9677BC", VA = "0x9677BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0x9677C0", Offset = "0x9677C0", VA = "0x9677C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0x967868", Offset = "0x967868", VA = "0x967868")]
	public EnvironmentTester()
	{
	}
}
[Token(Token = "0x20001D4")]
public class MainMenuOnSceneLoadEnvironmentChanger : OnSceneLoadEnvironmentChanger
{
	[Token(Token = "0x4000A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ButtonActivationController buttonActivationController;

	[Token(Token = "0x4000A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject topLevelEnvironmentButtonContainer;

	[Token(Token = "0x4000A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<GameObject> environmentElements;

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0xD8BC70", Offset = "0xD8BC70", VA = "0xD8BC70", Slot = "4")]
	protected override void performSetup()
	{
	}

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0xD8BCA4", Offset = "0xD8BCA4", VA = "0xD8BCA4", Slot = "5")]
	protected override void additionalFunctionality()
	{
	}

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0xD8BCC8", Offset = "0xD8BCC8", VA = "0xD8BCC8")]
	public MainMenuOnSceneLoadEnvironmentChanger()
	{
	}
}
[Token(Token = "0x20001D5")]
public class OnSceneLoadEnvironmentChanger : MonoBehaviour
{
	[Token(Token = "0x4000A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private EnvironmentAndSkyboxChanger environmentAndSkyboxChanger;

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0xAD1A2C", Offset = "0xAD1A2C", VA = "0xAD1A2C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0xAD1AE4", Offset = "0xAD1AE4", VA = "0xAD1AE4", Slot = "4")]
	protected virtual void performSetup()
	{
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0xAD1AE8", Offset = "0xAD1AE8", VA = "0xAD1AE8", Slot = "5")]
	protected virtual void additionalFunctionality()
	{
	}

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0xAD1AEC", Offset = "0xAD1AEC", VA = "0xAD1AEC")]
	public OnSceneLoadEnvironmentChanger()
	{
	}
}
[Token(Token = "0x20001D6")]
public class EnvironmentPositioner : MonoBehaviour
{
	[Token(Token = "0x4000A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PlayAreaService playAreaService;

	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject environmentGameObject;

	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject player;

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 playerOriginalPos;

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0x9676F0", Offset = "0x9676F0", VA = "0x9676F0")]
	public void repositionEnvironment()
	{
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0x9677AC", Offset = "0x9677AC", VA = "0x9677AC")]
	public EnvironmentPositioner()
	{
	}
}
[Token(Token = "0x20001D7")]
public class EnvironmentRepositionOnStart : MonoBehaviour
{
	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private EnvironmentPositioner environmentPositioner;

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0x9677B4", Offset = "0x9677B4", VA = "0x9677B4")]
	public EnvironmentRepositionOnStart()
	{
	}
}
[Token(Token = "0x20001D8")]
public class InGamePlayerEvents : OculusPlayerEvents
{
	[Token(Token = "0x6000A72")]
	[Address(RVA = "0x9FDD08", Offset = "0x9FDD08", VA = "0x9FDD08")]
	public InGamePlayerEvents()
	{
	}
}
[Token(Token = "0x20001D9")]
public class PicoFocusLostListener : MonoBehaviour
{
	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GamePausedController gamePausedController;

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0xA64B7C", Offset = "0xA64B7C", VA = "0xA64B7C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0xA64C7C", Offset = "0xA64C7C", VA = "0xA64C7C")]
	private void pauseGame()
	{
	}

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0xA64C98", Offset = "0xA64C98", VA = "0xA64C98")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0xA64D98", Offset = "0xA64D98", VA = "0xA64D98")]
	public PicoFocusLostListener()
	{
	}
}
[Token(Token = "0x20001DA")]
public class QuestCheckAppInFocus : MonoBehaviour
{
	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GamePausedController gamePausedController;

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0xA0B1B0", Offset = "0xA0B1B0", VA = "0xA0B1B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0xA0B258", Offset = "0xA0B258", VA = "0xA0B258")]
	private void pauseGame()
	{
	}

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0xA0B274", Offset = "0xA0B274", VA = "0xA0B274")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0xA0B31C", Offset = "0xA0B31C", VA = "0xA0B31C")]
	public QuestCheckAppInFocus()
	{
	}
}
[Token(Token = "0x20001DB")]
public class CoordinationCoachPoolController : MonoBehaviour
{
	[Token(Token = "0x20001DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CC1C", Offset = "0x69CC1C")]
	private sealed class <initializePoolCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CoordinationCoachPoolController <>4__this;

		[Token(Token = "0x170000F0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AA5")]
			[Address(RVA = "0x14C0E58", Offset = "0x14C0E58", VA = "0x14C0E58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AA7")]
			[Address(RVA = "0x14C0EA0", Offset = "0x14C0EA0", VA = "0x14C0EA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0x14C0DB4", Offset = "0x14C0DB4", VA = "0x14C0DB4")]
		[DebuggerHidden]
		public <initializePoolCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0x14C0DE0", Offset = "0x14C0DE0", VA = "0x14C0DE0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0x14C0DE4", Offset = "0x14C0DE4", VA = "0x14C0DE4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0x14C0E60", Offset = "0x14C0E60", VA = "0x14C0E60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001DD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CC2C", Offset = "0x69CC2C")]
	private sealed class <destroyAndRecreatePrefabsCoroutine>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CoordinationCoachPoolController <>4__this;

		[Token(Token = "0x170000F2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AAB")]
			[Address(RVA = "0x14C0D64", Offset = "0x14C0D64", VA = "0x14C0D64", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AAD")]
			[Address(RVA = "0x14C0DAC", Offset = "0x14C0DAC", VA = "0x14C0DAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0x14C0B80", Offset = "0x14C0B80", VA = "0x14C0B80")]
		[DebuggerHidden]
		public <destroyAndRecreatePrefabsCoroutine>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0x14C0BAC", Offset = "0x14C0BAC", VA = "0x14C0BAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0x14C0BB0", Offset = "0x14C0BB0", VA = "0x14C0BB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0x14C0D6C", Offset = "0x14C0D6C", VA = "0x14C0D6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001DE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CC3C", Offset = "0x69CC3C")]
	private sealed class <instantiateAndAddToQueueCoroutine>d__42 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CoordinationCoachPoolController <>4__this;

		[Token(Token = "0x4000A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string gameObjectType;

		[Token(Token = "0x170000F4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AB1")]
			[Address(RVA = "0x14C10F0", Offset = "0x14C10F0", VA = "0x14C10F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AB3")]
			[Address(RVA = "0x14C1138", Offset = "0x14C1138", VA = "0x14C1138", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0x14C0EA8", Offset = "0x14C0EA8", VA = "0x14C0EA8")]
		[DebuggerHidden]
		public <instantiateAndAddToQueueCoroutine>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0x14C0ED4", Offset = "0x14C0ED4", VA = "0x14C0ED4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0x14C0ED8", Offset = "0x14C0ED8", VA = "0x14C0ED8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0x14C10F8", Offset = "0x14C10F8", VA = "0x14C10F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001DF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CC4C", Offset = "0x69CC4C")]
	private sealed class <returnObjectToQueueCoroutine>d__53 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject returnToPoolObject;

		[Token(Token = "0x4000A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CoordinationCoachPoolController <>4__this;

		[Token(Token = "0x170000F6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AB7")]
			[Address(RVA = "0x14C136C", Offset = "0x14C136C", VA = "0x14C136C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AB9")]
			[Address(RVA = "0x14C13B4", Offset = "0x14C13B4", VA = "0x14C13B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0x14C1140", Offset = "0x14C1140", VA = "0x14C1140")]
		[DebuggerHidden]
		public <returnObjectToQueueCoroutine>d__53(int <>1__state)
		{
		}

		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0x14C116C", Offset = "0x14C116C", VA = "0x14C116C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0x14C1170", Offset = "0x14C1170", VA = "0x14C1170", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0x14C1374", Offset = "0x14C1374", VA = "0x14C1374", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected GameController gameController;

	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected Transform playerTransform;

	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected GameObject[] basicObjectsForWhichToCreatePools;

	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private int[] amountOfRegularObjectsToCreate;

	[Token(Token = "0x4000A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int amountOfRegularObjectsIndex;

	[Token(Token = "0x4000A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	protected GameObject[] additionalObjectsForWhichToCreatePools;

	[Token(Token = "0x4000A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private int[] amountOfAdditionalObjectsToCreate;

	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int amountOfAdditionalObjectsIndex;

	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private int AMOUNT_OF_EACH_REGULAR_OBJECT_TO_CREATE;

	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private int AMOUNT_OF_EACH_ADDITIONAL_OBJECT_TO_CREATE;

	[Token(Token = "0x4000A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Dictionary<string, GameObject> prefabs;

	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Dictionary<string, int> prefabsXPos;

	[Token(Token = "0x4000A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected ConcurrentDictionary<string, int> prefabsYPos;

	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected Dictionary<string, ConcurrentQueue<GameObject>> prefabQueues;

	[Token(Token = "0x4000A29")]
	private const int X_DISTANCE_TO_ADD = 2;

	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected int currentXPos;

	[Token(Token = "0x4000A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[SerializeField]
	protected int Z_POS;

	[Token(Token = "0x4000A2C")]
	private const int starting_Y_pos = -2;

	[Token(Token = "0x4000A2D")]
	private const int MINUS_Y = 2;

	[Token(Token = "0x4000A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected int Y_POS_LIMIT;

	[Token(Token = "0x4000A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	protected int objectsCreatedAfterQueueInitializationId;

	[Token(Token = "0x4000A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected Coroutine activeDestroyAndReCreateObjectsCoroutine;

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0xA728A8", Offset = "0xA728A8", VA = "0xA728A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0xA7295C", Offset = "0xA7295C", VA = "0xA7295C", Slot = "4")]
	protected virtual void performSetup()
	{
	}

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0xA728E4", Offset = "0xA728E4", VA = "0xA728E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A6804", Offset = "0x6A6804")]
	private IEnumerator initializePoolCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0xA72960", Offset = "0xA72960", VA = "0xA72960")]
	public void destroyAndRecreatePrefabs()
	{
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0xA729F8", Offset = "0xA729F8", VA = "0xA729F8", Slot = "5")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A6864", Offset = "0x6A6864")]
	protected virtual IEnumerator destroyAndRecreatePrefabsCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0xA72A70", Offset = "0xA72A70", VA = "0xA72A70")]
	protected void destroyAllGameObjectsAndClearList(ConcurrentQueue<GameObject> gameObjectsQueue)
	{
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0xA72BF8", Offset = "0xA72BF8", VA = "0xA72BF8", Slot = "6")]
	protected virtual void initializePool()
	{
	}

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0xA72C88", Offset = "0xA72C88", VA = "0xA72C88")]
	private int getAmountOfRegularObjectsToCreate()
	{
		return default(int);
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0xA72CE8", Offset = "0xA72CE8", VA = "0xA72CE8")]
	private int getAmountOfAdditionalObjectsToCreate()
	{
		return default(int);
	}

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0xA72D48", Offset = "0xA72D48", VA = "0xA72D48", Slot = "7")]
	protected virtual void initalizeAdditionalObjects()
	{
	}

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0xA72DD8", Offset = "0xA72DD8", VA = "0xA72DD8", Slot = "8")]
	protected virtual void performAdditionalObjectSetup(GameObject[] gameObjects)
	{
	}

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0xA73210", Offset = "0xA73210", VA = "0xA73210", Slot = "9")]
	protected virtual void performSetupOnAdditionalObject(GameObject additionalGameObject)
	{
	}

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0xA73214", Offset = "0xA73214", VA = "0xA73214", Slot = "10")]
	protected virtual void createPrefabsDictionary(GameObject[] gameObjects)
	{
	}

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0xA733C0", Offset = "0xA733C0", VA = "0xA733C0", Slot = "11")]
	protected virtual void performSetupForPrefabsMap(GameObject objectToCreate)
	{
	}

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0xA73424", Offset = "0xA73424", VA = "0xA73424", Slot = "12")]
	protected virtual void createObjectQueuesXPos(GameObject[] gameObjects)
	{
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0xA735CC", Offset = "0xA735CC", VA = "0xA735CC", Slot = "13")]
	protected virtual void createObjectQueuesYPos(GameObject[] gameObjects)
	{
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0xA73758", Offset = "0xA73758", VA = "0xA73758", Slot = "14")]
	protected virtual void createAndFillObjectPoolQueues(GameObject[] gameObjects, int objectAmount)
	{
	}

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0xA73C28", Offset = "0xA73C28", VA = "0xA73C28", Slot = "15")]
	protected virtual float getRegularObjectSize()
	{
		return default(float);
	}

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0xA73B48", Offset = "0xA73B48", VA = "0xA73B48")]
	private ConcurrentQueue<GameObject> createAndFillPrefabQueue(string prefabType, GameObject prefab, float xPos, float objectSize, int objectAmount)
	{
		return null;
	}

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0xA73C34", Offset = "0xA73C34", VA = "0xA73C34", Slot = "16")]
	protected virtual void instantiateAndAddToQueueFromCoroutine(string gameObjectType)
	{
	}

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0xA73C6C", Offset = "0xA73C6C", VA = "0xA73C6C", Slot = "17")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A68C4", Offset = "0x6A68C4")]
	protected virtual IEnumerator instantiateAndAddToQueueCoroutine(string gameObjectType)
	{
		return null;
	}

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0xA73D00", Offset = "0xA73D00", VA = "0xA73D00", Slot = "18")]
	protected virtual void instantiateAndAddToQueue(ConcurrentQueue<GameObject> prefabQueue, string prefabType, GameObject prefab, float xPos, float objectSize, int i)
	{
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0xA74084", Offset = "0xA74084", VA = "0xA74084", Slot = "19")]
	protected virtual void performSetupOnObjectOnInitialization(GameObject instantiatedPrefab, int objectId)
	{
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0xA74088", Offset = "0xA74088", VA = "0xA74088")]
	public GameObject peekObject(string objectType)
	{
		return null;
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0xA74154", Offset = "0xA74154", VA = "0xA74154", Slot = "20")]
	public virtual GameObject getObjectFromPool(string objectType, CoordinationCoachGameObject.ActivationType activationType)
	{
		return null;
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0xA7443C", Offset = "0xA7443C", VA = "0xA7443C", Slot = "21")]
	protected virtual void performSetupWhenCreatingExtraObjects(GameObject instantiatedGameObject, int i, CoordinationCoachGameObject.ActivationType activationType)
	{
	}

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0xA74440", Offset = "0xA74440", VA = "0xA74440", Slot = "22")]
	protected virtual void performSetupOnObjectDequeue(GameObject queueGameObject)
	{
	}

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0xA74444", Offset = "0xA74444", VA = "0xA74444", Slot = "23")]
	protected virtual void performSetupOnObjectDequeue(GameObject queueGameObject, CoordinationCoachGameObject.ActivationType activationType)
	{
	}

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0xA74448", Offset = "0xA74448", VA = "0xA74448", Slot = "24")]
	protected virtual void performAdditionalActionAfterDeqeue()
	{
	}

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0xA7444C", Offset = "0xA7444C", VA = "0xA7444C", Slot = "25")]
	protected virtual void performAdditionalActionAfterDeque(GameObject dequeuedGameObject)
	{
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0xA74450", Offset = "0xA74450", VA = "0xA74450", Slot = "26")]
	public virtual void returnObjectToPool(GameObject returnToPoolObject)
	{
	}

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0xA74488", Offset = "0xA74488", VA = "0xA74488", Slot = "27")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A6924", Offset = "0x6A6924")]
	protected virtual IEnumerator returnObjectToQueueCoroutine(GameObject returnToPoolObject)
	{
		return null;
	}

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0xA7451C", Offset = "0xA7451C", VA = "0xA7451C", Slot = "28")]
	protected virtual void performOnReturnOfObjectToPool(GameObject returnToPoolObject)
	{
	}

	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0xA73F24", Offset = "0xA73F24", VA = "0xA73F24")]
	private GameObject instantiatePrefab(GameObject prefab, Vector3 instantiationPosition, float objectSize)
	{
		return null;
	}

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0xA7453C", Offset = "0xA7453C", VA = "0xA7453C", Slot = "29")]
	protected virtual void createAdditionalObjectsPool()
	{
	}

	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0xA735BC", Offset = "0xA735BC", VA = "0xA735BC")]
	protected void increaseCurrentXPos()
	{
	}

	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0xA73DE4", Offset = "0xA73DE4", VA = "0xA73DE4")]
	protected float getYPos(string objectType)
	{
		return default(float);
	}

	[Token(Token = "0x6000AA0")]
	[Address(RVA = "0xA729B0", Offset = "0xA729B0", VA = "0xA729B0")]
	protected void stopActiveDestroyAndReCreateObjectsCoroutine()
	{
	}

	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0xA74540", Offset = "0xA74540", VA = "0xA74540")]
	public CoordinationCoachPoolController()
	{
	}
}
[Token(Token = "0x20001E0")]
public class OculusRiftStartTutorialAndGameController : StartTutorialAndOrGameAfterPlayerEnteredMiddleController
{
	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0xAD0D38", Offset = "0xAD0D38", VA = "0xAD0D38")]
	public OculusRiftStartTutorialAndGameController()
	{
	}
}
[Token(Token = "0x20001E1")]
public class ScoreKeeper : MonoBehaviour
{
	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected int pointsScored;

	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected int pointsMissed;

	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0xA12424", Offset = "0xA12424", VA = "0xA12424")]
	public int getPointsScored()
	{
		return default(int);
	}

	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0xA1242C", Offset = "0xA1242C", VA = "0xA1242C")]
	public int getPointsMissed()
	{
		return default(int);
	}

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0xA12434", Offset = "0xA12434", VA = "0xA12434")]
	public void increasePointsMissed(int increase)
	{
	}

	[Token(Token = "0x6000ABE")]
	[Address(RVA = "0xA12444", Offset = "0xA12444", VA = "0xA12444")]
	public void increasePointsScored(int increase)
	{
	}

	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0xA12454", Offset = "0xA12454", VA = "0xA12454")]
	public void reset()
	{
	}

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0xA1245C", Offset = "0xA1245C", VA = "0xA1245C")]
	public ScoreKeeper()
	{
	}
}
[Token(Token = "0x20001E2")]
public class StartTutorialAndOrGameAfterPlayerEnteredMiddleController : MonoBehaviour
{
	[Token(Token = "0x20001E3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CC5C", Offset = "0x69CC5C")]
	private sealed class <checkPlayerPositionCoroutine>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StartTutorialAndOrGameAfterPlayerEnteredMiddleController <>4__this;

		[Token(Token = "0x170000FA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AD4")]
			[Address(RVA = "0x14992F0", Offset = "0x14992F0", VA = "0x14992F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AD6")]
			[Address(RVA = "0x1499338", Offset = "0x1499338", VA = "0x1499338", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0x1499208", Offset = "0x1499208", VA = "0x1499208")]
		[DebuggerHidden]
		public <checkPlayerPositionCoroutine>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0x1499234", Offset = "0x1499234", VA = "0x1499234", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AD3")]
		[Address(RVA = "0x1499238", Offset = "0x1499238", VA = "0x1499238", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0x14992F8", Offset = "0x14992F8", VA = "0x14992F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PlayAreaService playAreaService;

	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameController gameController;

	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GamePausedController gamePausedController;

	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject environment;

	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string playerNotInMiddleOfPlayAreaString;

	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string playerInMiddleOfPlayAreaString;

	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string playerInMiddleOfPlayAreaButtonString;

	[Token(Token = "0x4000A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Text textToInformPlayer;

	[Token(Token = "0x4000A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Text buttonText;

	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private DisabledStartGameOrTutorialButton buttonWithWhichPlayerStartsTutorial;

	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject playerCamera;

	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject topLevelStartGameGuiObject;

	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<GameObject> topLevelStartGameGuiObjectArrayList;

	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool playerStartedTutorialOrGame;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private AdvancedUIFader advancedUIFader;

	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private AudioSource audioSource;

	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private AudioClip playerEnteredMiddleOfPlayAreaAudioClip;

	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private AudioClip playerExitedMiddleOfPlayAreaAudioClip;

	[Token(Token = "0x4000A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private WaitForSeconds waitForOneSecond;

	[Token(Token = "0x4000A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool playerEntered;

	[Token(Token = "0x4000A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Coroutine activeCoroutine;

	[Token(Token = "0x4000A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Coroutine fadeInCoroutine;

	[Token(Token = "0x4000A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool fadeInNecessary;

	[Token(Token = "0x170000F8")]
	public bool PlayerStartedTutorialOrGame
	{
		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0x14CA35C", Offset = "0x14CA35C", VA = "0x14CA35C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0x14CA364", Offset = "0x14CA364", VA = "0x14CA364")]
		set
		{
		}
	}

	[Token(Token = "0x170000F9")]
	public GameObject TopLevelStartGameGuiObject
	{
		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0x14CA370", Offset = "0x14CA370", VA = "0x14CA370")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0x14CA378", Offset = "0x14CA378", VA = "0x14CA378")]
		set
		{
		}
	}

	[Token(Token = "0x6000AC5")]
	[Address(RVA = "0x14CA380", Offset = "0x14CA380", VA = "0x14CA380")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0x14CA50C", Offset = "0x14CA50C", VA = "0x14CA50C")]
	public void fadeInStartGameMenu()
	{
	}

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0x14CA594", Offset = "0x14CA594", VA = "0x14CA594")]
	public void setFadeInNecessary(bool input)
	{
	}

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0x14CA5A0", Offset = "0x14CA5A0", VA = "0x14CA5A0")]
	public void stopFadeInOfGoToMiddleElement()
	{
	}

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0x14CA5F0", Offset = "0x14CA5F0", VA = "0x14CA5F0")]
	public void activatePlayerEnteredMiddleController()
	{
	}

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0x14CA6A4", Offset = "0x14CA6A4", VA = "0x14CA6A4")]
	public void stopPlayerPosCheckCoroutine()
	{
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0x14CA62C", Offset = "0x14CA62C", VA = "0x14CA62C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A6AC4", Offset = "0x6A6AC4")]
	private IEnumerator checkPlayerPositionCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0x14CA6EC", Offset = "0x14CA6EC", VA = "0x14CA6EC")]
	public bool checkPlayerInMiddleOfArea()
	{
		return default(bool);
	}

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0x14CA80C", Offset = "0x14CA80C", VA = "0x14CA80C")]
	public void startGameMode()
	{
	}

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0x14CA900", Offset = "0x14CA900", VA = "0x14CA900")]
	public void playerEnteredMiddleOfPlayArea()
	{
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0x14CA95C", Offset = "0x14CA95C", VA = "0x14CA95C")]
	public void playerExitedMiddleOfPlayArea()
	{
	}

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0x14CA9B8", Offset = "0x14CA9B8", VA = "0x14CA9B8")]
	public StartTutorialAndOrGameAfterPlayerEnteredMiddleController()
	{
	}
}
[Token(Token = "0x20001E4")]
public class TimeKeeper : MonoBehaviour
{
	[Token(Token = "0x20001E5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CC6C", Offset = "0x69CC6C")]
	private sealed class <startTimeCountdown>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TimeKeeper <>4__this;

		[Token(Token = "0x170000FC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AE4")]
			[Address(RVA = "0x149DAE4", Offset = "0x149DAE4", VA = "0x149DAE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AE6")]
			[Address(RVA = "0x149DB2C", Offset = "0x149DB2C", VA = "0x149DB2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0x149D99C", Offset = "0x149D99C", VA = "0x149D99C")]
		[DebuggerHidden]
		public <startTimeCountdown>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0x149D9C8", Offset = "0x149D9C8", VA = "0x149D9C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AE3")]
		[Address(RVA = "0x149D9CC", Offset = "0x149D9CC", VA = "0x149D9CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0x149DAEC", Offset = "0x149DAEC", VA = "0x149DAEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameController gameController;

	[Token(Token = "0x4000A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TimePlayerHUDElementController timeHUDController;

	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int originalTimeRemainingValue;

	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int timeRemaining;

	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int timePlayed;

	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private WaitForSeconds waitForOneSecond;

	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0x14DEB90", Offset = "0x14DEB90", VA = "0x14DEB90")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0x14DEB94", Offset = "0x14DEB94", VA = "0x14DEB94")]
	public void setPlayTime()
	{
	}

	[Token(Token = "0x6000AD9")]
	[Address(RVA = "0x14DEC50", Offset = "0x14DEC50", VA = "0x14DEC50")]
	public void startTimeCountdownCoroutine()
	{
	}

	[Token(Token = "0x6000ADA")]
	[Address(RVA = "0x14DEC7C", Offset = "0x14DEC7C", VA = "0x14DEC7C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A6B74", Offset = "0x6A6B74")]
	public IEnumerator startTimeCountdown()
	{
		return null;
	}

	[Token(Token = "0x6000ADB")]
	[Address(RVA = "0x14DECF4", Offset = "0x14DECF4", VA = "0x14DECF4")]
	public void showTimeToPlay()
	{
	}

	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0x14DED1C", Offset = "0x14DED1C", VA = "0x14DED1C")]
	public int getTimePlayed()
	{
		return default(int);
	}

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0x14DED24", Offset = "0x14DED24", VA = "0x14DED24")]
	public void reset()
	{
	}

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0x14DED68", Offset = "0x14DED68", VA = "0x14DED68")]
	public int getTimeRemaining()
	{
		return default(int);
	}

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0x14DED70", Offset = "0x14DED70", VA = "0x14DED70")]
	public void pauseCountdown()
	{
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0x14DEDA0", Offset = "0x14DEDA0", VA = "0x14DEDA0")]
	public TimeKeeper()
	{
	}
}
[Token(Token = "0x20001E6")]
public class GameController : MonoBehaviour
{
	[Token(Token = "0x20001E7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CC7C", Offset = "0x69CC7C")]
	private sealed class <mainGameModeLoop>d__66 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameController <>4__this;

		[Token(Token = "0x17000105")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B53")]
			[Address(RVA = "0x14C5B4C", Offset = "0x14C5B4C", VA = "0x14C5B4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000106")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B55")]
			[Address(RVA = "0x14C5B94", Offset = "0x14C5B94", VA = "0x14C5B94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B50")]
		[Address(RVA = "0x14C5AB4", Offset = "0x14C5AB4", VA = "0x14C5AB4")]
		[DebuggerHidden]
		public <mainGameModeLoop>d__66(int <>1__state)
		{
		}

		[Token(Token = "0x6000B51")]
		[Address(RVA = "0x14C5AE0", Offset = "0x14C5AE0", VA = "0x14C5AE0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B52")]
		[Address(RVA = "0x14C5AE4", Offset = "0x14C5AE4", VA = "0x14C5AE4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B54")]
		[Address(RVA = "0x14C5B54", Offset = "0x14C5B54", VA = "0x14C5B54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CC8C", Offset = "0x69CC8C")]
	private sealed class <playerEnergyZeroCoroutine>d__69 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameController <>4__this;

		[Token(Token = "0x17000107")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B59")]
			[Address(RVA = "0x14C5F84", Offset = "0x14C5F84", VA = "0x14C5F84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000108")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B5B")]
			[Address(RVA = "0x14C5FCC", Offset = "0x14C5FCC", VA = "0x14C5FCC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0x14C5EB4", Offset = "0x14C5EB4", VA = "0x14C5EB4")]
		[DebuggerHidden]
		public <playerEnergyZeroCoroutine>d__69(int <>1__state)
		{
		}

		[Token(Token = "0x6000B57")]
		[Address(RVA = "0x14C5EE0", Offset = "0x14C5EE0", VA = "0x14C5EE0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B58")]
		[Address(RVA = "0x14C5EE4", Offset = "0x14C5EE4", VA = "0x14C5EE4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0x14C5F8C", Offset = "0x14C5F8C", VA = "0x14C5F8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001E9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CC9C", Offset = "0x69CC9C")]
	private sealed class <performOnStart>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameController <>4__this;

		[Token(Token = "0x17000109")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B5F")]
			[Address(RVA = "0x14C5E64", Offset = "0x14C5E64", VA = "0x14C5E64", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B61")]
			[Address(RVA = "0x14C5EAC", Offset = "0x14C5EAC", VA = "0x14C5EAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0x14C5D54", Offset = "0x14C5D54", VA = "0x14C5D54")]
		[DebuggerHidden]
		public <performOnStart>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0x14C5D80", Offset = "0x14C5D80", VA = "0x14C5D80", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0x14C5D84", Offset = "0x14C5D84", VA = "0x14C5D84", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0x14C5E6C", Offset = "0x14C5E6C", VA = "0x14C5E6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001EA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CCAC", Offset = "0x69CCAC")]
	private sealed class <performEnvironmentSetupAndCheckIfGameCanStart>d__77 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameController <>4__this;

		[Token(Token = "0x1700010B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B65")]
			[Address(RVA = "0x14C5D04", Offset = "0x14C5D04", VA = "0x14C5D04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B67")]
			[Address(RVA = "0x14C5D4C", Offset = "0x14C5D4C", VA = "0x14C5D4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0x14C5B9C", Offset = "0x14C5B9C", VA = "0x14C5B9C")]
		[DebuggerHidden]
		public <performEnvironmentSetupAndCheckIfGameCanStart>d__77(int <>1__state)
		{
		}

		[Token(Token = "0x6000B63")]
		[Address(RVA = "0x14C5BC8", Offset = "0x14C5BC8", VA = "0x14C5BC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B64")]
		[Address(RVA = "0x14C5BCC", Offset = "0x14C5BCC", VA = "0x14C5BCC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B66")]
		[Address(RVA = "0x14C5D0C", Offset = "0x14C5D0C", VA = "0x14C5D0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001EB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CCBC", Offset = "0x69CCBC")]
	private sealed class <startCountdownThenMainGameLoop>d__109 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameController <>4__this;

		[Token(Token = "0x4000A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CountdownTimerPlayerHUDElementController <countdownHUDElement>5__2;

		[Token(Token = "0x1700010D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B6B")]
			[Address(RVA = "0x14C61B0", Offset = "0x14C61B0", VA = "0x14C61B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B6D")]
			[Address(RVA = "0x14C61F8", Offset = "0x14C61F8", VA = "0x14C61F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B68")]
		[Address(RVA = "0x14C5FD4", Offset = "0x14C5FD4", VA = "0x14C5FD4")]
		[DebuggerHidden]
		public <startCountdownThenMainGameLoop>d__109(int <>1__state)
		{
		}

		[Token(Token = "0x6000B69")]
		[Address(RVA = "0x14C6000", Offset = "0x14C6000", VA = "0x14C6000", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0x14C6004", Offset = "0x14C6004", VA = "0x14C6004", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0x14C61B8", Offset = "0x14C61B8", VA = "0x14C61B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CCCC", Offset = "0x69CCCC")]
	private sealed class <inGameDifficultyChangeCoroutine>d__140 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700010F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B71")]
			[Address(RVA = "0x14C5A64", Offset = "0x14C5A64", VA = "0x14C5A64", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000110")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B73")]
			[Address(RVA = "0x14C5AAC", Offset = "0x14C5AAC", VA = "0x14C5AAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0x14C59D8", Offset = "0x14C59D8", VA = "0x14C59D8")]
		[DebuggerHidden]
		public <inGameDifficultyChangeCoroutine>d__140(int <>1__state)
		{
		}

		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0x14C5A04", Offset = "0x14C5A04", VA = "0x14C5A04", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B70")]
		[Address(RVA = "0x14C5A08", Offset = "0x14C5A08", VA = "0x14C5A08", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B72")]
		[Address(RVA = "0x14C5A6C", Offset = "0x14C5A6C", VA = "0x14C5A6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected Transform transformOfPlayerCamera;

	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected EnvironmentPositioner environmentPositioner;

	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected AdvancedUIFader advancedUIFader;

	[Token(Token = "0x4000A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected TutorialController tutorialController;

	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected HeadsetActiveObserver headsetActiveObserver;

	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected bool tutorialAlreadyCompleted;

	[Token(Token = "0x4000A6A")]
	protected const int initalWaitBeforeGameStart = 3;

	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected GameObject tutorialCanvas;

	[Token(Token = "0x4000A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	protected PlayerHUDElementController generalInfoTextController;

	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameModeAudioController gameModeAudioController;

	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	protected ScoreKeeper scoreKeeper;

	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	protected TimeKeeper timeKeeper;

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	protected GameEndedDisplayController showGameOverInfoController;

	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected List<GameObject> activeGameObjects;

	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool playerQuit;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	protected bool playerStoppedGame;

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	protected bool gameAlreadyStarting;

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x83")]
	protected bool playerLostGame;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool gameModeStarted;

	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
	private bool mainGameModeLoopRunning;

	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x86")]
	protected bool gameFinishedDueToTimeOut;

	[Token(Token = "0x4000A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected int waitBeforeGameStartCounter;

	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	protected bool performTutorial;

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	protected ScreenFadeService screenFadeService;

	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected GameModeParameterContainer gameModeParameterContainer;

	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	protected StartTutorialAndOrGameAfterPlayerEnteredMiddleController startTutorialAndOrGameAfterPlayerEnteredMiddleController;

	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	protected GameObject[] playerReticule;

	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	protected GameObject vrPointerObject;

	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	protected PlayAreaService playAreaService;

	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	protected PlayerEnergyController playerEnergyController;

	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	protected float[] playAreaBoundary;

	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	protected bool tutorialAlreadyRunning;

	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	protected bool firstGameAlreadyPlayed;

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	protected PlayerHUDController playerHUDController;

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	protected ValidActivationTypesService validActivationTypeService;

	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private PlayerHandController leftHandController;

	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private PlayerHandController rightHandController;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private GamePausedController gamePausedController;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	protected WaitForSeconds waitForOneTenthSecond;

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	protected WaitForSeconds waitForHalfSecond;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	protected WaitForSeconds waitForOneSecond;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	protected Coroutine activeInGameDifficultyChangeCoroutine;

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Coroutine activeCountdownCoroutine;

	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private bool repositionEnvironmentOnStart;

	[Token(Token = "0x170000FE")]
	public bool PlayerQuit
	{
		[Token(Token = "0x6000AE7")]
		[Address(RVA = "0x9EF444", Offset = "0x9EF444", VA = "0x9EF444")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000AE8")]
		[Address(RVA = "0x9EF44C", Offset = "0x9EF44C", VA = "0x9EF44C")]
		set
		{
		}
	}

	[Token(Token = "0x170000FF")]
	public bool GameModeStarted
	{
		[Token(Token = "0x6000AE9")]
		[Address(RVA = "0x9EF458", Offset = "0x9EF458", VA = "0x9EF458")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0x9EF460", Offset = "0x9EF460", VA = "0x9EF460")]
		set
		{
		}
	}

	[Token(Token = "0x17000100")]
	public bool GameFinishedDueToTimeOut
	{
		[Token(Token = "0x6000AEB")]
		[Address(RVA = "0x9EF46C", Offset = "0x9EF46C", VA = "0x9EF46C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0x9EF474", Offset = "0x9EF474", VA = "0x9EF474")]
		set
		{
		}
	}

	[Token(Token = "0x17000101")]
	public GameModeAudioController GameModeAudioController
	{
		[Token(Token = "0x6000AED")]
		[Address(RVA = "0x9EF480", Offset = "0x9EF480", VA = "0x9EF480")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0x9EF488", Offset = "0x9EF488", VA = "0x9EF488")]
		set
		{
		}
	}

	[Token(Token = "0x17000102")]
	public TimeKeeper TimeKeeper
	{
		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0x9EF490", Offset = "0x9EF490", VA = "0x9EF490")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0x9EF498", Offset = "0x9EF498", VA = "0x9EF498")]
		set
		{
		}
	}

	[Token(Token = "0x17000103")]
	public bool MainGameModeLoopRunning
	{
		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0x9EF4A0", Offset = "0x9EF4A0", VA = "0x9EF4A0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0x9EF4A8", Offset = "0x9EF4A8", VA = "0x9EF4A8")]
		set
		{
		}
	}

	[Token(Token = "0x17000104")]
	public bool PlayerLostGame
	{
		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0x9EF4B4", Offset = "0x9EF4B4", VA = "0x9EF4B4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000AF4")]
	[Address(RVA = "0x9EF4BC", Offset = "0x9EF4BC", VA = "0x9EF4BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AF5")]
	[Address(RVA = "0x9EF538", Offset = "0x9EF538", VA = "0x9EF538", Slot = "4")]
	protected virtual void performOnMainLoopStart()
	{
	}

	[Token(Token = "0x6000AF6")]
	[Address(RVA = "0x9EF53C", Offset = "0x9EF53C", VA = "0x9EF53C", Slot = "5")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A6C24", Offset = "0x6A6C24")]
	protected virtual IEnumerator mainGameModeLoop()
	{
		return null;
	}

	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0x9EF5B4", Offset = "0x9EF5B4", VA = "0x9EF5B4", Slot = "6")]
	protected virtual void performGeneralSetup()
	{
	}

	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0x9EF5C4", Offset = "0x9EF5C4", VA = "0x9EF5C4")]
	public void playerEnergyZero()
	{
	}

	[Token(Token = "0x6000AF9")]
	[Address(RVA = "0x9EF604", Offset = "0x9EF604", VA = "0x9EF604")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A6C84", Offset = "0x6A6C84")]
	private IEnumerator playerEnergyZeroCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0x9EF67C", Offset = "0x9EF67C", VA = "0x9EF67C", Slot = "7")]
	protected virtual void playerEnergyZeroGameModeSpecific()
	{
	}

	[Token(Token = "0x6000AFB")]
	[Address(RVA = "0x9EF680", Offset = "0x9EF680", VA = "0x9EF680")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AFC")]
	[Address(RVA = "0x9EF82C", Offset = "0x9EF82C", VA = "0x9EF82C")]
	private void generalSettingsSetup()
	{
	}

	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0x9EF8FC", Offset = "0x9EF8FC", VA = "0x9EF8FC", Slot = "8")]
	protected virtual void specificAwakeSetup()
	{
	}

	[Token(Token = "0x6000AFE")]
	[Address(RVA = "0x9EF900", Offset = "0x9EF900", VA = "0x9EF900", Slot = "9")]
	protected virtual void gameModeSpecificSetupOnStart()
	{
	}

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0x9EF6E4", Offset = "0x9EF6E4", VA = "0x9EF6E4")]
	protected void createAdvancedUIFader()
	{
	}

	[Token(Token = "0x6000B00")]
	[Address(RVA = "0x9EF904", Offset = "0x9EF904", VA = "0x9EF904", Slot = "10")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A6CE4", Offset = "0x6A6CE4")]
	public virtual IEnumerator performOnStart()
	{
		return null;
	}

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0x9EF97C", Offset = "0x9EF97C", VA = "0x9EF97C", Slot = "11")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A6D44", Offset = "0x6A6D44")]
	protected virtual IEnumerator performEnvironmentSetupAndCheckIfGameCanStart()
	{
		return null;
	}

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0x9EF9F4", Offset = "0x9EF9F4", VA = "0x9EF9F4", Slot = "12")]
	public virtual void startGameMode()
	{
	}

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0x9EFB4C", Offset = "0x9EFB4C", VA = "0x9EFB4C", Slot = "13")]
	protected virtual void performUISetupOnGameModeStart()
	{
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0x9EFB60", Offset = "0x9EFB60", VA = "0x9EFB60", Slot = "14")]
	protected virtual void startTutorial()
	{
	}

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0x9EFBBC", Offset = "0x9EFBBC", VA = "0x9EFBBC")]
	public void startGameAfterTutorialCompleted()
	{
	}

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0x9EFA7C", Offset = "0x9EFA7C", VA = "0x9EFA7C")]
	protected void genericStartGame()
	{
	}

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0x9EFBEC", Offset = "0x9EFBEC", VA = "0x9EFBEC", Slot = "15")]
	protected virtual void setupTimer()
	{
	}

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0x9EFC08", Offset = "0x9EFC08", VA = "0x9EFC08", Slot = "16")]
	public virtual void setRayCastersEnabled(bool input)
	{
	}

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0x9EFC98", Offset = "0x9EFC98", VA = "0x9EFC98", Slot = "17")]
	protected virtual void specificSetupGameModeParameterContainer()
	{
	}

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0x9EFC9C", Offset = "0x9EFC9C", VA = "0x9EFC9C")]
	protected GameModeParameterContainer getGameModeParameterContainer()
	{
		return null;
	}

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0x9EFCA4", Offset = "0x9EFCA4", VA = "0x9EFCA4", Slot = "18")]
	protected virtual bool isPlayerInStartPosition()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0x9EFD00", Offset = "0x9EFD00", VA = "0x9EFD00")]
	private void resetOnRestart()
	{
	}

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0x9EFD10", Offset = "0x9EFD10", VA = "0x9EFD10")]
	private void resetOnRestartGeneric()
	{
	}

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0x9EFD14", Offset = "0x9EFD14", VA = "0x9EFD14", Slot = "19")]
	protected virtual void resetOnRestartSpecific()
	{
	}

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0x9EFD18", Offset = "0x9EFD18", VA = "0x9EFD18")]
	public void restartedByPlayerWhileGameWasStillRunning()
	{
	}

	[Token(Token = "0x6000B10")]
	[Address(RVA = "0x9EFD94", Offset = "0x9EFD94", VA = "0x9EFD94")]
	protected void restartedByPlayerWhileGameWasStillRunningGeneric()
	{
	}

	[Token(Token = "0x6000B11")]
	[Address(RVA = "0x9EFDD0", Offset = "0x9EFDD0", VA = "0x9EFDD0", Slot = "20")]
	protected virtual void restartedByPlayerWhileGameWasStillRunningSpecific()
	{
	}

	[Token(Token = "0x6000B12")]
	[Address(RVA = "0x9EFDD4", Offset = "0x9EFDD4", VA = "0x9EFDD4", Slot = "21")]
	public virtual void restartGame()
	{
	}

	[Token(Token = "0x6000B13")]
	[Address(RVA = "0x9EFF18", Offset = "0x9EFF18", VA = "0x9EFF18")]
	public void restartCountdownCoroutine()
	{
	}

	[Token(Token = "0x6000B14")]
	[Address(RVA = "0x9EFF7C", Offset = "0x9EFF7C", VA = "0x9EFF7C", Slot = "22")]
	protected virtual void resetAllGameObjects()
	{
	}

	[Token(Token = "0x6000B15")]
	[Address(RVA = "0x9F00BC", Offset = "0x9F00BC", VA = "0x9F00BC", Slot = "23")]
	protected virtual void callGameRestartedByPlayerOnAllObjects()
	{
	}

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0x9F0204", Offset = "0x9F0204", VA = "0x9F0204", Slot = "24")]
	protected virtual IEnumerator cleanUpGameObjects()
	{
		return null;
	}

	[Token(Token = "0x6000B17")]
	[Address(RVA = "0x9F020C", Offset = "0x9F020C", VA = "0x9F020C", Slot = "25")]
	public virtual void specificModeRestartGame()
	{
	}

	[Token(Token = "0x6000B18")]
	[Address(RVA = "0x9F0210", Offset = "0x9F0210", VA = "0x9F0210", Slot = "26")]
	public virtual void stopGame()
	{
	}

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0x9F0294", Offset = "0x9F0294", VA = "0x9F0294", Slot = "27")]
	public virtual void stopGameWithoutGameOverInfo()
	{
	}

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0x9EFE9C", Offset = "0x9EFE9C", VA = "0x9EFE9C")]
	protected void resetPlayerHands()
	{
	}

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0x9F02FC", Offset = "0x9F02FC", VA = "0x9F02FC", Slot = "28")]
	protected virtual void generalGameModeStopGame()
	{
	}

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0x9F059C", Offset = "0x9F059C", VA = "0x9F059C", Slot = "29")]
	protected virtual void specificGameModeStopGame()
	{
	}

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0x9F05A0", Offset = "0x9F05A0", VA = "0x9F05A0", Slot = "30")]
	protected virtual void resetOnStopGame()
	{
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0x9F05A4", Offset = "0x9F05A4", VA = "0x9F05A4", Slot = "31")]
	protected virtual void disableTutorialGUIAndEnablePlayerGUI()
	{
	}

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0x9F0604", Offset = "0x9F0604", VA = "0x9F0604", Slot = "32")]
	protected virtual void specificGameModeStartGame()
	{
	}

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0x9F0608", Offset = "0x9F0608", VA = "0x9F0608")]
	public void startCountdownCoroutine()
	{
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0x9F0650", Offset = "0x9F0650", VA = "0x9F0650", Slot = "33")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A6DA4", Offset = "0x6A6DA4")]
	protected virtual IEnumerator startCountdownThenMainGameLoop()
	{
		return null;
	}

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0x9F06C8", Offset = "0x9F06C8", VA = "0x9F06C8", Slot = "34")]
	protected virtual void performBeforeCountdownStartsSetup()
	{
	}

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0x9F06CC", Offset = "0x9F06CC", VA = "0x9F06CC")]
	public void unpauseMainGameLoop()
	{
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0x9F0724", Offset = "0x9F0724", VA = "0x9F0724", Slot = "35")]
	protected virtual void specificModePerformGameSetup()
	{
	}

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0x9F0728", Offset = "0x9F0728", VA = "0x9F0728", Slot = "36")]
	public virtual void playerScoredPoint(int increase)
	{
	}

	[Token(Token = "0x6000B26")]
	[Address(RVA = "0x9F0778", Offset = "0x9F0778", VA = "0x9F0778", Slot = "37")]
	public virtual void playerScoredPoint(int increase, bool maxIncrease, bool performSpecificFunctionality)
	{
	}

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0x9F07C8", Offset = "0x9F07C8", VA = "0x9F07C8", Slot = "38")]
	protected virtual void playerScoredPointGeneral(int increase)
	{
	}

	[Token(Token = "0x6000B28")]
	[Address(RVA = "0x9F07E4", Offset = "0x9F07E4", VA = "0x9F07E4", Slot = "39")]
	protected virtual void playerScoredPointSpecific(int increase)
	{
	}

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0x9F07E8", Offset = "0x9F07E8", VA = "0x9F07E8", Slot = "40")]
	public virtual void playerLostPoint(int amountOfPointsLost)
	{
	}

	[Token(Token = "0x6000B2A")]
	[Address(RVA = "0x9F0864", Offset = "0x9F0864", VA = "0x9F0864", Slot = "41")]
	protected virtual void playerLostPointGameModeSpecific()
	{
	}

	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0x9F0868", Offset = "0x9F0868", VA = "0x9F0868", Slot = "42")]
	public virtual void specificModePlayerMissedPoint()
	{
	}

	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0x9F086C", Offset = "0x9F086C", VA = "0x9F086C")]
	public void endGameDueToTimeRunningOut()
	{
	}

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0x9F087C", Offset = "0x9F087C", VA = "0x9F087C", Slot = "43")]
	public virtual void endGameDuePlayerQuit()
	{
	}

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0x9F0880", Offset = "0x9F0880", VA = "0x9F0880")]
	public Transform getCamera()
	{
		return null;
	}

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0x9F0888", Offset = "0x9F0888", VA = "0x9F0888", Slot = "44")]
	protected virtual bool isContinueGame()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0x9F08B8", Offset = "0x9F08B8", VA = "0x9F08B8")]
	protected void destroyAllGameObjectsAndClearList(List<GameObject> gameObjects)
	{
	}

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0x9F0A50", Offset = "0x9F0A50", VA = "0x9F0A50")]
	protected void destroyAllCurrentActiveGameObjects()
	{
	}

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0x9F0C50", Offset = "0x9F0C50", VA = "0x9F0C50")]
	public List<GameObject> getActiveGameObjects()
	{
		return null;
	}

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0x9F0C58", Offset = "0x9F0C58", VA = "0x9F0C58", Slot = "45")]
	protected virtual void disableAndHideActiveGameObjects()
	{
	}

	[Token(Token = "0x6000B34")]
	[Address(RVA = "0x9F0E1C", Offset = "0x9F0E1C", VA = "0x9F0E1C", Slot = "46")]
	public virtual void gameObjectReachedAppearancePosition(GameObject gameObject)
	{
	}

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0x9F0E20", Offset = "0x9F0E20", VA = "0x9F0E20", Slot = "47")]
	public virtual void gameObjectReachedDisappearancePosition(GameObject gameObject)
	{
	}

	[Token(Token = "0x6000B36")]
	[Address(RVA = "0x9F0E24", Offset = "0x9F0E24", VA = "0x9F0E24")]
	public List<GameObject> getGameObjects()
	{
		return null;
	}

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0x9F0E2C", Offset = "0x9F0E2C", VA = "0x9F0E2C", Slot = "48")]
	public virtual void gameDifficultyChangedInGame()
	{
	}

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0x9F0E60", Offset = "0x9F0E60", VA = "0x9F0E60", Slot = "49")]
	protected virtual void gameDifficultyChangedInGameSpecific()
	{
	}

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0x9F0E64", Offset = "0x9F0E64", VA = "0x9F0E64")]
	public void updateCreateHandSpecificObjects(bool handSpecificActive)
	{
	}

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0x9F0EB0", Offset = "0x9F0EB0", VA = "0x9F0EB0")]
	public void updateHandInfiniteEnergy(bool infiniteEnergy)
	{
	}

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0x9F0EEC", Offset = "0x9F0EEC", VA = "0x9F0EEC", Slot = "50")]
	public virtual void returnObjectsToObjectPool(List<GameObject> objectsToReturnToPool)
	{
	}

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0x9F1010", Offset = "0x9F1010", VA = "0x9F1010", Slot = "51")]
	public virtual void returnObjectToObjectPool(GameObject objectToReturnToPool)
	{
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0x9F1014", Offset = "0x9F1014", VA = "0x9F1014")]
	public void removeGameObjectFromActiveGameObjects(GameObject inputGameObject)
	{
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0x9F1078", Offset = "0x9F1078", VA = "0x9F1078")]
	protected void stopInGameDifficultyChangeCoroutine()
	{
	}

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0x9EFF3C", Offset = "0x9EFF3C", VA = "0x9EFF3C")]
	protected void stopActiveCountdownCoroutine()
	{
	}

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0x9F10B8", Offset = "0x9F10B8", VA = "0x9F10B8", Slot = "52")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A6E04", Offset = "0x6A6E04")]
	protected virtual IEnumerator inGameDifficultyChangeCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0x9F1114", Offset = "0x9F1114", VA = "0x9F1114")]
	protected void setActiveStateOnAllGameObjects(bool input)
	{
	}

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0x9F1240", Offset = "0x9F1240", VA = "0x9F1240")]
	public void onPaused()
	{
	}

	[Token(Token = "0x6000B43")]
	[Address(RVA = "0x9F1270", Offset = "0x9F1270", VA = "0x9F1270")]
	protected void onPausedGeneric()
	{
	}

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0x9F1320", Offset = "0x9F1320", VA = "0x9F1320", Slot = "53")]
	protected virtual void callPausedOnGameObjects(List<GameObject> gameObjects)
	{
	}

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0x9F147C", Offset = "0x9F147C", VA = "0x9F147C", Slot = "54")]
	protected virtual void onPausedSpecific()
	{
	}

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0x9F1480", Offset = "0x9F1480", VA = "0x9F1480")]
	public void onUnPaused()
	{
	}

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0x9F14B0", Offset = "0x9F14B0", VA = "0x9F14B0")]
	protected void onUnPausedGeneric()
	{
	}

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0x9F1538", Offset = "0x9F1538", VA = "0x9F1538")]
	public bool sufficientTimeRemaining()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0x9F155C", Offset = "0x9F155C", VA = "0x9F155C", Slot = "55")]
	protected virtual void callUnPausedOnAllActiveGameObjects()
	{
	}

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0x9F16A4", Offset = "0x9F16A4", VA = "0x9F16A4", Slot = "56")]
	protected virtual void onUnPausedSpecific()
	{
	}

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0x9F16A8", Offset = "0x9F16A8", VA = "0x9F16A8")]
	public void gameStoppedByPlayer()
	{
	}

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0x9F1754", Offset = "0x9F1754", VA = "0x9F1754", Slot = "57")]
	public virtual void gameStoppedByPlayerGeneral()
	{
	}

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0x9F1758", Offset = "0x9F1758", VA = "0x9F1758", Slot = "58")]
	public virtual void gameStoppedByPlayerSpecific(List<GameObject> activeObjects)
	{
	}

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0x9F175C", Offset = "0x9F175C", VA = "0x9F175C")]
	public Transform getTransformOfPlayerCamera()
	{
		return null;
	}

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0x9F1764", Offset = "0x9F1764", VA = "0x9F1764")]
	public GameController()
	{
	}
}
[Token(Token = "0x20001ED")]
public class GamePausedController : MonoBehaviour
{
	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private StartTutorialAndOrGameAfterPlayerEnteredMiddleController playerEnteredMiddleAreaController;

	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameController gameController;

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TutorialController tutorialController;

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private PlayerHUDController playerHUD;

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private PlayerHandController leftHandController;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private PlayerHandController rightHandController;

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameEndedDisplayController gameEndedDisplayController;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject topLevelGoToMiddleCanvas;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject topLevelGamePausedCanvas;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<GameObject> topLevelGamePausedCanvasList;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private AdvancedUIFader advancedUIFader;

	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	protected GameObject playerReticule;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	protected GameObject vrPointerObject;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private RestartDisabledButton restartDisabledButton;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool paused;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private DateTime lastPauseInteractionTime;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private DateTime lastButtonClickedInteractionTime;

	[Token(Token = "0x6000B74")]
	[Address(RVA = "0x9F32D8", Offset = "0x9F32D8", VA = "0x9F32D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B75")]
	[Address(RVA = "0x9EFBC8", Offset = "0x9EFBC8", VA = "0x9EFBC8")]
	public bool isPaused()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B76")]
	[Address(RVA = "0x9F338C", Offset = "0x9F338C", VA = "0x9F338C")]
	public void pausedStatusChange()
	{
	}

	[Token(Token = "0x6000B77")]
	[Address(RVA = "0x9F3A9C", Offset = "0x9F3A9C", VA = "0x9F3A9C")]
	public void forcePaused()
	{
	}

	[Token(Token = "0x6000B78")]
	[Address(RVA = "0x9F37CC", Offset = "0x9F37CC", VA = "0x9F37CC")]
	private void onPaused(bool force)
	{
	}

	[Token(Token = "0x6000B79")]
	[Address(RVA = "0x9F353C", Offset = "0x9F353C", VA = "0x9F353C")]
	private void onUnPaused()
	{
	}

	[Token(Token = "0x6000B7A")]
	[Address(RVA = "0x9F34E4", Offset = "0x9F34E4", VA = "0x9F34E4")]
	private void updateButtons()
	{
	}

	[Token(Token = "0x6000B7B")]
	[Address(RVA = "0x9F3B50", Offset = "0x9F3B50", VA = "0x9F3B50", Slot = "4")]
	protected virtual void setRayCastersEnabled(bool input)
	{
	}

	[Token(Token = "0x6000B7C")]
	[Address(RVA = "0x9F3B98", Offset = "0x9F3B98", VA = "0x9F3B98")]
	public void onContinue()
	{
	}

	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0x9F3CF0", Offset = "0x9F3CF0", VA = "0x9F3CF0")]
	public void restartButtonPressed()
	{
	}

	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0x9F3DCC", Offset = "0x9F3DCC", VA = "0x9F3DCC")]
	public void goToGameSettingsButtonPressed()
	{
	}

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0x9F3440", Offset = "0x9F3440", VA = "0x9F3440")]
	private bool enoughTimePassedSincePauseInteraction()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0x9F3C4C", Offset = "0x9F3C4C", VA = "0x9F3C4C")]
	private bool enoughTimePassedSinceButtonClicked()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0x9F3F68", Offset = "0x9F3F68", VA = "0x9F3F68")]
	public GamePausedController()
	{
	}
}
[Token(Token = "0x20001EE")]
public class MockEnduranceGameController : MockGameController
{
	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private EnduranceModeRaycaster enduranceModeRaycaster;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	private GameObject hudElementToRotate;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private EnduranceGameObjectAppearancePositionHelper enduranceGameObjectAppearancePositionHelper;

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[SerializeField]
	private GameObject enduranceGameObjectPrefab;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[SerializeField]
	private CoordinationCoachPoolController poolController;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private string gameObjectType;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[SerializeField]
	private PointArrowAtTarget2D pointArrow;

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private List<CoordinationCoachGameObject.MovementAxis> movementAxises;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private EnduranceGameModeParameterContainer enduranceGameModeParameterContainer;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private int maxMomementCounter;

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0xC7384C", Offset = "0xC7384C", VA = "0xC7384C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B83")]
	[Address(RVA = "0xC73968", Offset = "0xC73968", VA = "0xC73968", Slot = "17")]
	protected override void specificSetupGameModeParameterContainer()
	{
	}

	[Token(Token = "0x6000B84")]
	[Address(RVA = "0xC73A94", Offset = "0xC73A94", VA = "0xC73A94")]
	private EnduranceRaycastHitContainer getContainerForPosCalculations()
	{
		return null;
	}

	[Token(Token = "0x6000B85")]
	[Address(RVA = "0xC73BA4", Offset = "0xC73BA4", VA = "0xC73BA4")]
	private EnduranceRaycastHitContainer getContainerAtMaximumDistanceFromPlayer(List<EnduranceRaycastHitContainer> containers)
	{
		return null;
	}

	[Token(Token = "0x6000B86")]
	[Address(RVA = "0xC73D6C", Offset = "0xC73D6C", VA = "0xC73D6C")]
	private GameObject startObjectAppearance(PositionAndRotationContainer positionAndRotationContainer)
	{
		return null;
	}

	[Token(Token = "0x6000B87")]
	[Address(RVA = "0xC73FD4", Offset = "0xC73FD4", VA = "0xC73FD4", Slot = "47")]
	public override void gameObjectReachedDisappearancePosition(GameObject gameObject)
	{
	}

	[Token(Token = "0x6000B88")]
	[Address(RVA = "0xC74054", Offset = "0xC74054", VA = "0xC74054")]
	public MockEnduranceGameController()
	{
	}
}
[Token(Token = "0x20001EF")]
public class MockGameController : GameController
{
	[Token(Token = "0x20001F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CCDC", Offset = "0x69CCDC")]
	private sealed class <performEnvironmentSetupAndCheckIfGameCanStart>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MockGameController <>4__this;

		[Token(Token = "0x17000111")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B90")]
			[Address(RVA = "0x1492168", Offset = "0x1492168", VA = "0x1492168", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000112")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B92")]
			[Address(RVA = "0x14921B0", Offset = "0x14921B0", VA = "0x14921B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0x14920C0", Offset = "0x14920C0", VA = "0x14920C0")]
		[DebuggerHidden]
		public <performEnvironmentSetupAndCheckIfGameCanStart>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0x14920EC", Offset = "0x14920EC", VA = "0x14920EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0x14920F0", Offset = "0x14920F0", VA = "0x14920F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B91")]
		[Address(RVA = "0x1492170", Offset = "0x1492170", VA = "0x1492170", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000B89")]
	[Address(RVA = "0xC74104", Offset = "0xC74104", VA = "0xC74104", Slot = "44")]
	protected override bool isContinueGame()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B8A")]
	[Address(RVA = "0xC7410C", Offset = "0xC7410C", VA = "0xC7410C", Slot = "11")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A7044", Offset = "0x6A7044")]
	protected override IEnumerator performEnvironmentSetupAndCheckIfGameCanStart()
	{
		return null;
	}

	[Token(Token = "0x6000B8B")]
	[Address(RVA = "0xC74184", Offset = "0xC74184", VA = "0xC74184", Slot = "32")]
	protected override void specificGameModeStartGame()
	{
	}

	[Token(Token = "0x6000B8C")]
	[Address(RVA = "0xC740FC", Offset = "0xC740FC", VA = "0xC740FC")]
	public MockGameController()
	{
	}
}
[Token(Token = "0x20001F1")]
public class GameModeValues : ScriptableObject
{
	[Token(Token = "0x20001F2")]
	public enum GameAndSubModeDifficulty
	{
		[Token(Token = "0x4000AC1")]
		VERY_EASY,
		[Token(Token = "0x4000AC2")]
		EASY,
		[Token(Token = "0x4000AC3")]
		NORMAL,
		[Token(Token = "0x4000AC4")]
		HARD,
		[Token(Token = "0x4000AC5")]
		VERY_HARD,
		[Token(Token = "0x4000AC6")]
		EXTREME,
		[Token(Token = "0x4000AC7")]
		INSANITY,
		[Token(Token = "0x4000AC8")]
		IMPOSSIBLE
	}

	[Token(Token = "0x20001F3")]
	public enum GameDuration
	{
		[Token(Token = "0x4000ACA")]
		min1 = 60,
		[Token(Token = "0x4000ACB")]
		min2 = 120,
		[Token(Token = "0x4000ACC")]
		min3 = 180,
		[Token(Token = "0x4000ACD")]
		min5 = 300,
		[Token(Token = "0x4000ACE")]
		min10 = 600,
		[Token(Token = "0x4000ACF")]
		min15 = 900
	}

	[Token(Token = "0x6000B93")]
	[Address(RVA = "0x9F31C8", Offset = "0x9F31C8", VA = "0x9F31C8")]
	public GameModeValues()
	{
	}
}
[Token(Token = "0x20001F4")]
public class GameModeParameterContainer
{
	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static GameModeValues.GameAndSubModeDifficulty difficulty;

	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected bool skipTutorial;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool activateHandSpecificObjects;

	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	protected int timeToPlay;

	[Token(Token = "0x4000AD4")]
	protected const string NORMAL_GAME_MODE = "NORMAL";

	[Token(Token = "0x4000AD5")]
	private const string GAME_MODE_NAME = "GAME_MODE";

	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool playerInfiniteHealth;

	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool playerInfiniteHandEnergy;

	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	private bool cardioModePlayerInfiniteHealth;

	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	private bool cardioModePlayerInfiniteHandEnergy;

	[Token(Token = "0x4000ADA")]
	public const int PLAYER_STARTING_ENERGY = 5;

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	protected static StringBuilder stringBuilder;

	[Token(Token = "0x17000113")]
	public bool PlayerInfiniteHealth
	{
		[Token(Token = "0x6000B94")]
		[Address(RVA = "0x9F24CC", Offset = "0x9F24CC", VA = "0x9F24CC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B95")]
		[Address(RVA = "0x9F24D4", Offset = "0x9F24D4", VA = "0x9F24D4")]
		set
		{
		}
	}

	[Token(Token = "0x17000114")]
	public bool ActivateHandSpecificObjects
	{
		[Token(Token = "0x6000B96")]
		[Address(RVA = "0x9F24E0", Offset = "0x9F24E0", VA = "0x9F24E0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B97")]
		[Address(RVA = "0x9F24E8", Offset = "0x9F24E8", VA = "0x9F24E8")]
		set
		{
		}
	}

	[Token(Token = "0x17000115")]
	public bool PlayerInfiniteHandEnergy
	{
		[Token(Token = "0x6000B98")]
		[Address(RVA = "0x9F24F4", Offset = "0x9F24F4", VA = "0x9F24F4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B99")]
		[Address(RVA = "0x9F24FC", Offset = "0x9F24FC", VA = "0x9F24FC")]
		set
		{
		}
	}

	[Token(Token = "0x17000116")]
	public bool CardioModePlayerInfiniteHealth
	{
		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0x9F2508", Offset = "0x9F2508", VA = "0x9F2508")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0x9F2510", Offset = "0x9F2510", VA = "0x9F2510")]
		set
		{
		}
	}

	[Token(Token = "0x17000117")]
	public bool CardioModePlayerInfiniteHandEnergy
	{
		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0x9F251C", Offset = "0x9F251C", VA = "0x9F251C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0x9F2524", Offset = "0x9F2524", VA = "0x9F2524")]
		set
		{
		}
	}

	[Token(Token = "0x17000118")]
	public bool SkipTutorial
	{
		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0x9F253C", Offset = "0x9F253C", VA = "0x9F253C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0x9F2544", Offset = "0x9F2544", VA = "0x9F2544")]
		set
		{
		}
	}

	[Token(Token = "0x17000119")]
	public int TimeToPlay
	{
		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0x9F2554", Offset = "0x9F2554", VA = "0x9F2554")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0x9F255C", Offset = "0x9F255C", VA = "0x9F255C")]
		set
		{
		}
	}

	[Token(Token = "0x6000B9E")]
	[Address(RVA = "0x9F2530", Offset = "0x9F2530", VA = "0x9F2530", Slot = "4")]
	public virtual void setGameDifficulty(GameModeValues.GameAndSubModeDifficulty difficulty)
	{
	}

	[Token(Token = "0x6000B9F")]
	[Address(RVA = "0x9F2534", Offset = "0x9F2534", VA = "0x9F2534")]
	public void reset()
	{
	}

	[Token(Token = "0x6000BA2")]
	[Address(RVA = "0x9F2550", Offset = "0x9F2550", VA = "0x9F2550", Slot = "5")]
	public virtual void loadLastUsedGameMode()
	{
	}

	[Token(Token = "0x6000BA5")]
	[Address(RVA = "0x9F2564", Offset = "0x9F2564", VA = "0x9F2564", Slot = "6")]
	public virtual string getGameModeName()
	{
		return null;
	}

	[Token(Token = "0x6000BA6")]
	[Address(RVA = "0x9F25A8", Offset = "0x9F25A8", VA = "0x9F25A8", Slot = "7")]
	public virtual string getSubGameModeName()
	{
		return null;
	}

	[Token(Token = "0x6000BA7")]
	[Address(RVA = "0x9F25EC", Offset = "0x9F25EC", VA = "0x9F25EC", Slot = "8")]
	public virtual string getGameModeNameWithSubModes()
	{
		return null;
	}

	[Token(Token = "0x6000BA8")]
	[Address(RVA = "0x9F2630", Offset = "0x9F2630", VA = "0x9F2630", Slot = "9")]
	public virtual int getSceneToLoadIndex()
	{
		return default(int);
	}

	[Token(Token = "0x6000BA9")]
	[Address(RVA = "0x9F1CB8", Offset = "0x9F1CB8", VA = "0x9F1CB8")]
	public string getStringForSavingScore()
	{
		return null;
	}

	[Token(Token = "0x6000BAA")]
	[Address(RVA = "0x9F2638", Offset = "0x9F2638", VA = "0x9F2638")]
	public void saveSubGameModeToPlayerPreferences()
	{
	}

	[Token(Token = "0x6000BAB")]
	[Address(RVA = "0x9F2678", Offset = "0x9F2678", VA = "0x9F2678")]
	protected string getLastUsedSubGameModeKey()
	{
		return null;
	}

	[Token(Token = "0x6000BAC")]
	[Address(RVA = "0x9F27B8", Offset = "0x9F27B8", VA = "0x9F27B8")]
	public GameModeParameterContainer()
	{
	}
}
[Token(Token = "0x20001F5")]
public class GameModeParameterContainerController : MonoBehaviour
{
	[Token(Token = "0x20001F6")]
	public enum GameModeSelectionEnum
	{
		[Token(Token = "0x4000AE0")]
		TargetTouch,
		[Token(Token = "0x4000AE1")]
		BlockIncomingObject,
		[Token(Token = "0x4000AE2")]
		EnduranceMode
	}

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameModeParameterContainer currentGameModeParameterContainer;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool parametersAlreadyCreated;

	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Dictionary<GameModeSelectionEnum, GameModeParameterContainer> gameModeParameterContainersMap;

	[Token(Token = "0x1700011A")]
	public static GameModeParameterContainer CurrentGameModeParameterContainer
	{
		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0x9F2858", Offset = "0x9F2858", VA = "0x9F2858")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0x9F28BC", Offset = "0x9F28BC", VA = "0x9F28BC")]
		set
		{
		}
	}

	[Token(Token = "0x6000BB0")]
	[Address(RVA = "0x9F2928", Offset = "0x9F2928", VA = "0x9F2928")]
	public static void fillGameModeParameterContainers(Dictionary<GameModeSelectionEnum, GameModeParameterContainer> gameModeParameterContainersInput)
	{
	}

	[Token(Token = "0x6000BB1")]
	[Address(RVA = "0x9F29A8", Offset = "0x9F29A8", VA = "0x9F29A8")]
	public static void fillGameModeParameterContainers()
	{
	}

	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0x9F2B88", Offset = "0x9F2B88", VA = "0x9F2B88")]
	protected static void createGameModeParameterContainers()
	{
	}

	[Token(Token = "0x6000BB3")]
	[Address(RVA = "0x9F2D68", Offset = "0x9F2D68", VA = "0x9F2D68")]
	public static GameModeParameterContainer getGameModeParameterContainerOfGameMode(GameModeSelectionEnum gameModeSelectionEnum)
	{
		return null;
	}

	[Token(Token = "0x6000BB4")]
	[Address(RVA = "0x9F2F7C", Offset = "0x9F2F7C", VA = "0x9F2F7C")]
	public static void setCardioActiveParameterContainers(bool input)
	{
	}

	[Token(Token = "0x6000BB5")]
	[Address(RVA = "0x9F3128", Offset = "0x9F3128", VA = "0x9F3128")]
	public GameModeParameterContainerController()
	{
	}
}
[Token(Token = "0x20001F7")]
public class GeneralTutorialCoordinationCoachGameObject : TargetObject
{
	[Token(Token = "0x6000BB7")]
	[Address(RVA = "0x9F45DC", Offset = "0x9F45DC", VA = "0x9F45DC")]
	public GeneralTutorialCoordinationCoachGameObject()
	{
	}
}
[Token(Token = "0x20001F8")]
public class TutorialController : MonoBehaviour
{
	[Token(Token = "0x20001F9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CCEC", Offset = "0x69CCEC")]
	private sealed class <fadeOutCurrentVisibleWindow>d__55 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialController <>4__this;

		[Token(Token = "0x1700011D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BF1")]
			[Address(RVA = "0x149E5B8", Offset = "0x149E5B8", VA = "0x149E5B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BF3")]
			[Address(RVA = "0x149E600", Offset = "0x149E600", VA = "0x149E600", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0x149E424", Offset = "0x149E424", VA = "0x149E424")]
		[DebuggerHidden]
		public <fadeOutCurrentVisibleWindow>d__55(int <>1__state)
		{
		}

		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0x149E450", Offset = "0x149E450", VA = "0x149E450", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0x149E454", Offset = "0x149E454", VA = "0x149E454", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0x149E5C0", Offset = "0x149E5C0", VA = "0x149E5C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001FA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CCFC", Offset = "0x69CCFC")]
	private sealed class <performTutorialAndStartGame>d__56 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool startingBySkip;

		[Token(Token = "0x4000B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TutorialController <>4__this;

		[Token(Token = "0x1700011F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BF7")]
			[Address(RVA = "0x148438C", Offset = "0x148438C", VA = "0x148438C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000120")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BF9")]
			[Address(RVA = "0x14843D4", Offset = "0x14843D4", VA = "0x14843D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0x14841F8", Offset = "0x14841F8", VA = "0x14841F8")]
		[DebuggerHidden]
		public <performTutorialAndStartGame>d__56(int <>1__state)
		{
		}

		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0x1484224", Offset = "0x1484224", VA = "0x1484224", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0x1484228", Offset = "0x1484228", VA = "0x1484228", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0x1484394", Offset = "0x1484394", VA = "0x1484394", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001FB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CD0C", Offset = "0x69CD0C")]
	private sealed class <performGeneralTutorialSteps>d__57 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialController <>4__this;

		[Token(Token = "0x17000121")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BFD")]
			[Address(RVA = "0x149EF68", Offset = "0x149EF68", VA = "0x149EF68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000122")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BFF")]
			[Address(RVA = "0x149EFB0", Offset = "0x149EFB0", VA = "0x149EFB0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0x149E6F0", Offset = "0x149E6F0", VA = "0x149E6F0")]
		[DebuggerHidden]
		public <performGeneralTutorialSteps>d__57(int <>1__state)
		{
		}

		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0x149E71C", Offset = "0x149E71C", VA = "0x149E71C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0x149E720", Offset = "0x149E720", VA = "0x149E720", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0x149EF70", Offset = "0x149EF70", VA = "0x149EF70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CD1C", Offset = "0x69CD1C")]
	private sealed class <startGameCoroutine>d__61 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialController <>4__this;

		[Token(Token = "0x17000123")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C03")]
			[Address(RVA = "0x148467C", Offset = "0x148467C", VA = "0x148467C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000124")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C05")]
			[Address(RVA = "0x14846C4", Offset = "0x14846C4", VA = "0x14846C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C00")]
		[Address(RVA = "0x14844EC", Offset = "0x14844EC", VA = "0x14844EC")]
		[DebuggerHidden]
		public <startGameCoroutine>d__61(int <>1__state)
		{
		}

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0x1484518", Offset = "0x1484518", VA = "0x1484518", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0x148451C", Offset = "0x148451C", VA = "0x148451C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0x1484684", Offset = "0x1484684", VA = "0x1484684", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001FD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CD2C", Offset = "0x69CD2C")]
	private sealed class <performGameModeSpecificTutorialSteps>d__63 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialController <>4__this;

		[Token(Token = "0x17000125")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C09")]
			[Address(RVA = "0x149E6A0", Offset = "0x149E6A0", VA = "0x149E6A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000126")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C0B")]
			[Address(RVA = "0x149E6E8", Offset = "0x149E6E8", VA = "0x149E6E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0x149E608", Offset = "0x149E608", VA = "0x149E608")]
		[DebuggerHidden]
		public <performGameModeSpecificTutorialSteps>d__63(int <>1__state)
		{
		}

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0x149E634", Offset = "0x149E634", VA = "0x149E634", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0x149E638", Offset = "0x149E638", VA = "0x149E638", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0x149E6A8", Offset = "0x149E6A8", VA = "0x149E6A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001FE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CD3C", Offset = "0x69CD3C")]
	private sealed class <activateAndFadeInObjects>d__77 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialController <>4__this;

		[Token(Token = "0x4000B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject[] textComponents;

		[Token(Token = "0x17000127")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C0F")]
			[Address(RVA = "0x149E3D4", Offset = "0x149E3D4", VA = "0x149E3D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000128")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C11")]
			[Address(RVA = "0x149E41C", Offset = "0x149E41C", VA = "0x149E41C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0x149E2D4", Offset = "0x149E2D4", VA = "0x149E2D4")]
		[DebuggerHidden]
		public <activateAndFadeInObjects>d__77(int <>1__state)
		{
		}

		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0x149E300", Offset = "0x149E300", VA = "0x149E300", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0x149E304", Offset = "0x149E304", VA = "0x149E304", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C10")]
		[Address(RVA = "0x149E3DC", Offset = "0x149E3DC", VA = "0x149E3DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001FF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CD4C", Offset = "0x69CD4C")]
	private sealed class <raycastEnabledControllerCoroutine>d__98 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialController <>4__this;

		[Token(Token = "0x4000B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool input;

		[Token(Token = "0x17000129")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C15")]
			[Address(RVA = "0x148449C", Offset = "0x148449C", VA = "0x148449C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C17")]
			[Address(RVA = "0x14844E4", Offset = "0x14844E4", VA = "0x14844E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C12")]
		[Address(RVA = "0x14843DC", Offset = "0x14843DC", VA = "0x14843DC")]
		[DebuggerHidden]
		public <raycastEnabledControllerCoroutine>d__98(int <>1__state)
		{
		}

		[Token(Token = "0x6000C13")]
		[Address(RVA = "0x1484408", Offset = "0x1484408", VA = "0x1484408", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C14")]
		[Address(RVA = "0x148440C", Offset = "0x148440C", VA = "0x148440C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C16")]
		[Address(RVA = "0x14844A4", Offset = "0x14844A4", VA = "0x14844A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected Transform playerTransform;

	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GamePausedController gamePausedController;

	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected DateTime lastNextStepClickedTime;

	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected bool allowNextStep;

	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected GameModeAudioController gameModeAudioController;

	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected int numberOfTutorialObjectsReachedAppearanceDestination;

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected List<GameObject> activeTutorialObjects;

	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	protected GameController gameController;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected AdvancedUIFader advancedUIFader;

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject tutorialCanvas;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	protected GameObject quickTutorialWindow;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected List<GameObject> quickTutorialWindowArrayList;

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	protected GameObject forwardTutorialWindow;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected List<GameObject> forwardTutorialWindowArrayList;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	protected GameObject rotatedRightTutorialWindowWithStartStep;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected List<GameObject> rotatedRightTutorialWindowWithStartStepArrayList;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	protected GameObject rotatedRightTutorialWindowWithoutStartStep;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected List<GameObject> rotatedRightTutorialWindowWithoutStartStepArrayList;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	protected GameObject startGameWindow;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected List<GameObject> startGameWindowArrayList;

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	protected PlayerHUDController playerHUDController;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int currentGeneralStepIndex;

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int numberOfGeneralSteps;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	protected int currentSpecificStepIndex;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[SerializeField]
	protected int numberOfSpecificSteps;

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private string[] generalTutorialStrings;

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	protected string[] gameModeSpecificTutorialStrings;

	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	protected Text forwardWindowText;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	protected Text rightWindowWithStartButtonText;

	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	protected Text rightWindowWithoutStartButtonText;

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	protected Coroutine activeTutorialCoroutine;

	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	protected TutorialObjectCoordinationCoachPoolController poolController;

	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	protected PlayerHandController leftHandController;

	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	protected PlayerHandController rightHandController;

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	protected GameObject currentVisibleWindow;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private bool tutorialStarted;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private readonly object syncLock;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	protected bool skipCorrectionPerformed;

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x131")]
	private bool skippingTutorial;

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	protected WaitForSeconds waitForOneSecond;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	protected Dictionary<GameObject, List<GameObject>> windowArrayDictionary;

	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private bool skippedToGameModeSpecific;

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[SerializeField]
	private VRControllerRaycaster raycasterController;

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private bool raycasterEnabled;

	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Coroutine currentRaycasterControllerCoroutine;

	[Token(Token = "0x1700011B")]
	public bool TutorialStarted
	{
		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0x14E5600", Offset = "0x14E5600", VA = "0x14E5600")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000BB9")]
		[Address(RVA = "0x14E5624", Offset = "0x14E5624", VA = "0x14E5624")]
		set
		{
		}
	}

	[Token(Token = "0x1700011C")]
	public GameObject TutorialCanvas
	{
		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0x14E5650", Offset = "0x14E5650", VA = "0x14E5650")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0x14E5658", Offset = "0x14E5658", VA = "0x14E5658")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0x14E5664", Offset = "0x14E5664", VA = "0x14E5664", Slot = "4")]
	protected virtual void performSetupOnAwake()
	{
	}

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0x14E588C", Offset = "0x14E588C", VA = "0x14E588C")]
	protected void setCurrentVisibleWindow(GameObject visibleWindow)
	{
	}

	[Token(Token = "0x6000BBE")]
	[Address(RVA = "0x14E5960", Offset = "0x14E5960", VA = "0x14E5960")]
	protected GameObject getCurrentVisibleWindow()
	{
		return null;
	}

	[Token(Token = "0x6000BBF")]
	[Address(RVA = "0x14E5A28", Offset = "0x14E5A28", VA = "0x14E5A28")]
	public void startTutorial()
	{
	}

	[Token(Token = "0x6000BC0")]
	[Address(RVA = "0x14E5AC4", Offset = "0x14E5AC4", VA = "0x14E5AC4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A70F4", Offset = "0x6A70F4")]
	protected IEnumerator fadeOutCurrentVisibleWindow()
	{
		return null;
	}

	[Token(Token = "0x6000BC1")]
	[Address(RVA = "0x14E5B3C", Offset = "0x14E5B3C", VA = "0x14E5B3C", Slot = "5")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A7154", Offset = "0x6A7154")]
	protected virtual IEnumerator performTutorialAndStartGame(bool startingBySkip)
	{
		return null;
	}

	[Token(Token = "0x6000BC2")]
	[Address(RVA = "0x14E5BC8", Offset = "0x14E5BC8", VA = "0x14E5BC8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A71B4", Offset = "0x6A71B4")]
	private IEnumerator performGeneralTutorialSteps()
	{
		return null;
	}

	[Token(Token = "0x6000BC3")]
	[Address(RVA = "0x14E5C40", Offset = "0x14E5C40", VA = "0x14E5C40")]
	public void skipToGameModeSpecific()
	{
	}

	[Token(Token = "0x6000BC4")]
	[Address(RVA = "0x14E5EB8", Offset = "0x14E5EB8", VA = "0x14E5EB8", Slot = "6")]
	public virtual void endTutorial()
	{
	}

	[Token(Token = "0x6000BC5")]
	[Address(RVA = "0x14E6008", Offset = "0x14E6008", VA = "0x14E6008")]
	public void stopTutorial()
	{
	}

	[Token(Token = "0x6000BC6")]
	[Address(RVA = "0x14E5F90", Offset = "0x14E5F90", VA = "0x14E5F90")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A7214", Offset = "0x6A7214")]
	protected IEnumerator startGameCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000BC7")]
	[Address(RVA = "0x14E6070", Offset = "0x14E6070", VA = "0x14E6070", Slot = "7")]
	protected virtual void stopTutorialSpecific()
	{
	}

	[Token(Token = "0x6000BC8")]
	[Address(RVA = "0x14E6074", Offset = "0x14E6074", VA = "0x14E6074", Slot = "8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A7274", Offset = "0x6A7274")]
	protected virtual IEnumerator performGameModeSpecificTutorialSteps(bool startingBySkip)
	{
		return null;
	}

	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0x14E60EC", Offset = "0x14E60EC", VA = "0x14E60EC", Slot = "9")]
	public virtual void startTutorialStep()
	{
	}

	[Token(Token = "0x6000BCA")]
	[Address(RVA = "0x14E60F0", Offset = "0x14E60F0", VA = "0x14E60F0")]
	public bool isNextTutorialStepAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BCB")]
	[Address(RVA = "0x14E6260", Offset = "0x14E6260", VA = "0x14E6260", Slot = "10")]
	protected virtual void nextTutorialStepSpecific()
	{
	}

	[Token(Token = "0x6000BCC")]
	[Address(RVA = "0x14E61A8", Offset = "0x14E61A8", VA = "0x14E61A8")]
	private bool checkNextStepAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0x14E57A0", Offset = "0x14E57A0", VA = "0x14E57A0")]
	protected void createAdvancedUIFader()
	{
	}

	[Token(Token = "0x6000BCE")]
	[Address(RVA = "0x14E6264", Offset = "0x14E6264", VA = "0x14E6264", Slot = "11")]
	public virtual bool isContinueTutorial()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BCF")]
	[Address(RVA = "0x14E62F8", Offset = "0x14E62F8", VA = "0x14E62F8", Slot = "12")]
	protected virtual void cleanUpTutorial()
	{
	}

	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0x14E62FC", Offset = "0x14E62FC", VA = "0x14E62FC", Slot = "13")]
	protected virtual void startGameMode()
	{
	}

	[Token(Token = "0x6000BD1")]
	[Address(RVA = "0x14E631C", Offset = "0x14E631C", VA = "0x14E631C", Slot = "14")]
	protected virtual void addObjectToTutorialObjects(GameObject gameObject)
	{
	}

	[Token(Token = "0x6000BD2")]
	[Address(RVA = "0x14E6380", Offset = "0x14E6380", VA = "0x14E6380", Slot = "15")]
	protected virtual void createTutorialObjects()
	{
	}

	[Token(Token = "0x6000BD3")]
	[Address(RVA = "0x14E5CEC", Offset = "0x14E5CEC", VA = "0x14E5CEC")]
	protected void disappearAllVisibleTutorialObjects()
	{
	}

	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0x14E6384", Offset = "0x14E6384", VA = "0x14E6384", Slot = "16")]
	protected virtual void disappearObject(GameObject tutorialObject)
	{
	}

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0x14E650C", Offset = "0x14E650C", VA = "0x14E650C", Slot = "17")]
	protected virtual void destroyAndClearTutorialObjects()
	{
	}

	[Token(Token = "0x6000BD6")]
	[Address(RVA = "0x14E6778", Offset = "0x14E6778", VA = "0x14E6778")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A72D4", Offset = "0x6A72D4")]
	protected IEnumerator activateAndFadeInObjects(GameObject[] textComponents)
	{
		return null;
	}

	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0x14E680C", Offset = "0x14E680C", VA = "0x14E680C")]
	public void playPlayerScoredPoint()
	{
	}

	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0x14E6828", Offset = "0x14E6828", VA = "0x14E6828")]
	public void playPlayerMissedPoint()
	{
	}

	[Token(Token = "0x6000BD9")]
	[Address(RVA = "0x14E6844", Offset = "0x14E6844", VA = "0x14E6844", Slot = "18")]
	public virtual void objectReachedAppearancePosition(GameObject gameObjectReachedDestination)
	{
	}

	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0x14E6884", Offset = "0x14E6884", VA = "0x14E6884", Slot = "19")]
	protected virtual void objectReachedAppearancePositionSpecific(GameObject gameObjectReachedDestination)
	{
	}

	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0x14E6888", Offset = "0x14E6888", VA = "0x14E6888", Slot = "20")]
	public virtual void objectReachedDisappearancePosition(GameObject gameObjectReachedDestination)
	{
	}

	[Token(Token = "0x6000BDC")]
	[Address(RVA = "0x14E6968", Offset = "0x14E6968", VA = "0x14E6968", Slot = "21")]
	protected virtual void objectReachedDisappearancePositionSpecific(GameObject gameObjectReachedDestination)
	{
	}

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0x14E696C", Offset = "0x14E696C", VA = "0x14E696C")]
	protected void startingSpecificTutorialBySkip(bool startingBySkip)
	{
	}

	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0x14E6AB8", Offset = "0x14E6AB8", VA = "0x14E6AB8")]
	public void returnObjectToObjectPool(GameObject returnToPool)
	{
	}

	[Token(Token = "0x6000BDF")]
	[Address(RVA = "0x14E6ADC", Offset = "0x14E6ADC", VA = "0x14E6ADC")]
	private void setAllObjectsActive(bool active)
	{
	}

	[Token(Token = "0x6000BE0")]
	[Address(RVA = "0x14E6C08", Offset = "0x14E6C08", VA = "0x14E6C08")]
	public void onPaused()
	{
	}

	[Token(Token = "0x6000BE1")]
	[Address(RVA = "0x14E6C38", Offset = "0x14E6C38", VA = "0x14E6C38")]
	protected void onPausedGeneric()
	{
	}

	[Token(Token = "0x6000BE2")]
	[Address(RVA = "0x14E6CC4", Offset = "0x14E6CC4", VA = "0x14E6CC4")]
	protected void callPausedOnAllObjects(List<GameObject> tutorialObjects)
	{
	}

	[Token(Token = "0x6000BE3")]
	[Address(RVA = "0x14E6E0C", Offset = "0x14E6E0C", VA = "0x14E6E0C")]
	protected void callUnPausedOnAllObjects(List<GameObject> tutorialObjects)
	{
	}

	[Token(Token = "0x6000BE4")]
	[Address(RVA = "0x14E6F54", Offset = "0x14E6F54", VA = "0x14E6F54", Slot = "22")]
	protected virtual void onPausedSpecific()
	{
	}

	[Token(Token = "0x6000BE5")]
	[Address(RVA = "0x14E6F58", Offset = "0x14E6F58", VA = "0x14E6F58")]
	public void onUnPaused()
	{
	}

	[Token(Token = "0x6000BE6")]
	[Address(RVA = "0x14E6F88", Offset = "0x14E6F88", VA = "0x14E6F88")]
	protected void onUnPausedGeneric()
	{
	}

	[Token(Token = "0x6000BE7")]
	[Address(RVA = "0x14E7038", Offset = "0x14E7038", VA = "0x14E7038")]
	private void checkIfObjectNotFullyFadedIn()
	{
	}

	[Token(Token = "0x6000BE8")]
	[Address(RVA = "0x14E7100", Offset = "0x14E7100", VA = "0x14E7100", Slot = "23")]
	protected virtual void onUnPausedSpecific()
	{
	}

	[Token(Token = "0x6000BE9")]
	[Address(RVA = "0x14E692C", Offset = "0x14E692C", VA = "0x14E692C")]
	public void setRaycasterEnabledInCoroutine(bool input)
	{
	}

	[Token(Token = "0x6000BEA")]
	[Address(RVA = "0x14E5F50", Offset = "0x14E5F50", VA = "0x14E5F50")]
	public void setRaycasterEnabledImmediate(bool input)
	{
	}

	[Token(Token = "0x6000BEB")]
	[Address(RVA = "0x14E7144", Offset = "0x14E7144", VA = "0x14E7144")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A7334", Offset = "0x6A7334")]
	private IEnumerator raycastEnabledControllerCoroutine(bool input)
	{
		return null;
	}

	[Token(Token = "0x6000BEC")]
	[Address(RVA = "0x14E7104", Offset = "0x14E7104", VA = "0x14E7104")]
	private void stopCurrentRaycasterControlCoroutine()
	{
	}

	[Token(Token = "0x6000BED")]
	[Address(RVA = "0x14E7280", Offset = "0x14E7280", VA = "0x14E7280")]
	public TutorialController()
	{
	}
}
[Token(Token = "0x2000200")]
public class TutorialObjectCoordinationCoachPoolController : CoordinationCoachPoolController
{
	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	protected TutorialController tutorialController;

	[Token(Token = "0x6000C18")]
	[Address(RVA = "0x14E933C", Offset = "0x14E933C", VA = "0x14E933C", Slot = "19")]
	protected override void performSetupOnObjectOnInitialization(GameObject instantiatedPrefab, int objectId)
	{
	}

	[Token(Token = "0x6000C19")]
	[Address(RVA = "0x14E9438", Offset = "0x14E9438", VA = "0x14E9438", Slot = "21")]
	protected override void performSetupWhenCreatingExtraObjects(GameObject instantiatedGameObject, int i, CoordinationCoachGameObject.ActivationType activationType)
	{
	}

	[Token(Token = "0x6000C1A")]
	[Address(RVA = "0x14E9448", Offset = "0x14E9448", VA = "0x14E9448", Slot = "30")]
	protected virtual void performAdditionalTutorialObjectSetup(GameObject instantiatedPrefab)
	{
	}

	[Token(Token = "0x6000C1B")]
	[Address(RVA = "0x14E944C", Offset = "0x14E944C", VA = "0x14E944C")]
	public TutorialObjectCoordinationCoachPoolController()
	{
	}
}
[Token(Token = "0x2000201")]
public interface TutorialObjectInterface
{
	[Token(Token = "0x6000C1C")]
	void setTutorialController(TutorialController tutorialController);

	[Token(Token = "0x6000C1D")]
	void setForceDisappearance(bool forceDisappearance);
}
[Token(Token = "0x2000202")]
public class TutorialObjectPositioningHelper : MonoBehaviour
{
	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected GameObject[] inputTargetTransforms;

	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float X_SHIFT;

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly float Z_FORWARD_SHORT;

	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static readonly float Z_FORWARD_LONG;

	[Token(Token = "0x6000C1E")]
	[Address(RVA = "0x14E9454", Offset = "0x14E9454", VA = "0x14E9454")]
	public Vector3 getNormalObjectPositionFrontOfPlayer()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C1F")]
	[Address(RVA = "0x14E952C", Offset = "0x14E952C", VA = "0x14E952C")]
	public Vector3 getNormalObjectPositionLeftOfPlayer()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C20")]
	[Address(RVA = "0x14E9610", Offset = "0x14E9610", VA = "0x14E9610")]
	public Vector3 getNormalObjectPositionRightOfPlayer()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C21")]
	[Address(RVA = "0x14E96F4", Offset = "0x14E96F4", VA = "0x14E96F4")]
	public Vector3 getNormalObjectPositionFrontAndAboveOfPlayer()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C22")]
	[Address(RVA = "0x14E97CC", Offset = "0x14E97CC", VA = "0x14E97CC")]
	public Vector3 getNormalObjectPositionFrontOfPlayer(float forward)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C23")]
	[Address(RVA = "0x14E98AC", Offset = "0x14E98AC", VA = "0x14E98AC")]
	public Vector3 getNormalObjectPositionLeftOfPlayer(float forward)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C24")]
	[Address(RVA = "0x14E9990", Offset = "0x14E9990", VA = "0x14E9990")]
	public Vector3 getNormalObjectPositionRightOfPlayer(float forward)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C25")]
	[Address(RVA = "0x14E9A74", Offset = "0x14E9A74", VA = "0x14E9A74")]
	public Vector3 getNormalObjectPositionFrontAndAboveOfPlayer(float forward)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C26")]
	[Address(RVA = "0x14E9B54", Offset = "0x14E9B54", VA = "0x14E9B54")]
	public TutorialObjectPositioningHelper()
	{
	}
}
[Token(Token = "0x2000203")]
public class TutorialObjectsRepositioner : MonoBehaviour
{
	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject parentTutorialObject;

	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform transformOfPlayerCamera;

	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float zDistanceFromPlayer;

	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float height;

	[Token(Token = "0x6000C28")]
	[Address(RVA = "0x14EA2D4", Offset = "0x14EA2D4", VA = "0x14EA2D4")]
	public void repositionTutorialObjects()
	{
	}

	[Token(Token = "0x6000C29")]
	[Address(RVA = "0x14EA358", Offset = "0x14EA358", VA = "0x14EA358")]
	public TutorialObjectsRepositioner()
	{
	}
}
[Token(Token = "0x2000204")]
public class CoordinationCoachGameObject : MonoBehaviour, ObjectInfoInterface
{
	[Token(Token = "0x2000205")]
	public enum ActivationType
	{
		[Token(Token = "0x4000B8F")]
		ANY_HAND,
		[Token(Token = "0x4000B90")]
		LEFT_HAND_ONLY,
		[Token(Token = "0x4000B91")]
		RIGHT_HAND_ONLY,
		[Token(Token = "0x4000B92")]
		DO_NOT_TOUCH,
		[Token(Token = "0x4000B93")]
		ACTIVATION_NOT_POSSIBLE
	}

	[Token(Token = "0x2000206")]
	protected enum MOVEMENT_MODE
	{
		[Token(Token = "0x4000B95")]
		DIRECT,
		[Token(Token = "0x4000B96")]
		CURVED
	}

	[Token(Token = "0x2000207")]
	public enum MovementAxis
	{
		[Token(Token = "0x4000B98")]
		xAxis,
		[Token(Token = "0x4000B99")]
		yAxis,
		[Token(Token = "0x4000B9A")]
		zAxis
	}

	[Token(Token = "0x2000208")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CD5C", Offset = "0x69CD5C")]
	private sealed class <deactivateSelfCoroutine>d__148 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int secondsToWait;

		[Token(Token = "0x4000B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CoordinationCoachGameObject <>4__this;

		[Token(Token = "0x17000133")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CEB")]
			[Address(RVA = "0x14C05D0", Offset = "0x14C05D0", VA = "0x14C05D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000134")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CED")]
			[Address(RVA = "0x14C0618", Offset = "0x14C0618", VA = "0x14C0618", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0x14C04A0", Offset = "0x14C04A0", VA = "0x14C04A0")]
		[DebuggerHidden]
		public <deactivateSelfCoroutine>d__148(int <>1__state)
		{
		}

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0x14C04CC", Offset = "0x14C04CC", VA = "0x14C04CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0x14C04D0", Offset = "0x14C04D0", VA = "0x14C04D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0x14C05D8", Offset = "0x14C05D8", VA = "0x14C05D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000209")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CD6C", Offset = "0x69CD6C")]
	private sealed class <playAllEffects>d__151 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CoordinationCoachGameObject <>4__this;

		[Token(Token = "0x17000135")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CF1")]
			[Address(RVA = "0x14C0858", Offset = "0x14C0858", VA = "0x14C0858", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000136")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CF3")]
			[Address(RVA = "0x14C08A0", Offset = "0x14C08A0", VA = "0x14C08A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0x14C0620", Offset = "0x14C0620", VA = "0x14C0620")]
		[DebuggerHidden]
		public <playAllEffects>d__151(int <>1__state)
		{
		}

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0x14C064C", Offset = "0x14C064C", VA = "0x14C064C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0x14C0650", Offset = "0x14C0650", VA = "0x14C0650", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0x14C0860", Offset = "0x14C0860", VA = "0x14C0860", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200020A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CD7C", Offset = "0x69CD7C")]
	private sealed class <startAppearanceMovement>d__214 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CoordinationCoachGameObject <>4__this;

		[Token(Token = "0x17000137")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CF7")]
			[Address(RVA = "0x14C09D4", Offset = "0x14C09D4", VA = "0x14C09D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000138")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CF9")]
			[Address(RVA = "0x14C0A1C", Offset = "0x14C0A1C", VA = "0x14C0A1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0x14C08A8", Offset = "0x14C08A8", VA = "0x14C08A8")]
		[DebuggerHidden]
		public <startAppearanceMovement>d__214(int <>1__state)
		{
		}

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0x14C08D4", Offset = "0x14C08D4", VA = "0x14C08D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0x14C08D8", Offset = "0x14C08D8", VA = "0x14C08D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0x14C09DC", Offset = "0x14C09DC", VA = "0x14C09DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200020B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CD8C", Offset = "0x69CD8C")]
	private sealed class <startDisappearanceMovementCoroutine>d__215 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CoordinationCoachGameObject <>4__this;

		[Token(Token = "0x17000139")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CFD")]
			[Address(RVA = "0x14C0B30", Offset = "0x14C0B30", VA = "0x14C0B30", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CFF")]
			[Address(RVA = "0x14C0B78", Offset = "0x14C0B78", VA = "0x14C0B78", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0x14C0A24", Offset = "0x14C0A24", VA = "0x14C0A24")]
		[DebuggerHidden]
		public <startDisappearanceMovementCoroutine>d__215(int <>1__state)
		{
		}

		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0x14C0A50", Offset = "0x14C0A50", VA = "0x14C0A50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0x14C0A54", Offset = "0x14C0A54", VA = "0x14C0A54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0x14C0B38", Offset = "0x14C0B38", VA = "0x14C0B38", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200020C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CD9C", Offset = "0x69CD9C")]
	private sealed class <activeTimeCountdownCoroutine>d__283 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700013B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D03")]
			[Address(RVA = "0x14C0450", Offset = "0x14C0450", VA = "0x14C0450", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D05")]
			[Address(RVA = "0x14C0498", Offset = "0x14C0498", VA = "0x14C0498", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D00")]
		[Address(RVA = "0x14C03C4", Offset = "0x14C03C4", VA = "0x14C03C4")]
		[DebuggerHidden]
		public <activeTimeCountdownCoroutine>d__283(int <>1__state)
		{
		}

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0x14C03F0", Offset = "0x14C03F0", VA = "0x14C03F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D02")]
		[Address(RVA = "0x14C03F4", Offset = "0x14C03F4", VA = "0x14C03F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D04")]
		[Address(RVA = "0x14C0458", Offset = "0x14C0458", VA = "0x14C0458", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected int id;

	[Token(Token = "0x4000B32")]
	protected const float DESTINATION_REACHED_DISTANCE = 0.05f;

	[Token(Token = "0x4000B33")]
	protected const float MAX_DISTANCE_FROM_STRAIGHT_LINE_BEZIER_MULTIPLIER = 0.75f;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool playerHandEntered;

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected string objectTypeAsString;

	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected string activationTypeAsString;

	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected string objectAndActivationTypeAsString;

	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected float[] rendererBounds;

	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected ActivationType currentActivationType;

	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected Material activeAnyHandMaterial;

	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	protected Material activeLeftHandOnlyMaterial;

	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	protected Material activeRightHandOnlyMaterial;

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	protected Material activeDoNotTouchMaterial;

	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	protected Renderer[] child_renderers;

	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Renderer my_Renderer;

	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected Rigidbody my_RigidBody;

	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected Vector3 zeroVector;

	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	protected bool active;

	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
	private bool inPool;

	[Token(Token = "0x4000B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8E")]
	protected bool movedAfterCreation;

	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8F")]
	protected bool wasAlreadyActive;

	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected float distanceFromCurrentStartingPosToTarget;

	[Token(Token = "0x4000B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected ScoreKeeper scoreKeeper;

	[Token(Token = "0x4000B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected float journeyTime;

	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected BezierCurveController bezierCurveController;

	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected MOVEMENT_MODE currentMovementMode;

	[Token(Token = "0x4000B4B")]
	protected const float BEZIER_CURVE_ON_THIRD_DISTANCE = 0.33f;

	[Token(Token = "0x4000B4C")]
	protected const float BEZIER_CURVE_TWO_THIRDS_DISTANCE = 0.66f;

	[Token(Token = "0x4000B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	protected float BEZIER_JOURNEY_TIME_MULTIPLIER;

	[Token(Token = "0x4000B4E")]
	protected const float CHECK_DISTANCE_DISTANCE = 0.01f;

	[Token(Token = "0x4000B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected bool objectMoves;

	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	protected Vector3 originalPosition;

	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	protected Vector3 currentMovementStartPosition;

	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	protected float maximumDistanceFromOriginalPosition;

	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	protected GameController gameController;

	[Token(Token = "0x4000B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	protected float[] movementLimits;

	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	protected float[] movementLimitsCorrectedForBounds;

	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	protected long creationTime;

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	protected List<MovementAxis> movementAxises;

	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	protected bool appearanceInProgress;

	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
	protected bool normalGameMovementAllowed;

	[Token(Token = "0x4000B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static float APPEARANCE_DISAPPEARANCE_SPEED;

	[Token(Token = "0x4000B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	protected Vector3 appearanceFinishedPosition;

	[Token(Token = "0x4000B5C")]
	protected const float APPEARANCE_DISAPPEARANCE_MULTIPLIER = 0.2f;

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	protected float mTimer;

	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	protected float distanceToDestinationToMaxDistanceRatio;

	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	protected float curvedToDirectDistanceRatio;

	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	protected float originalBezierJourneyTime;

	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	protected float bezierJourneyTime;

	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	protected float bezierMovementSpeed;

	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	protected float directMovementSpeed;

	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	protected Vector3 destination;

	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	protected GameObject appearanceEffectPrefab;

	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	protected GameObject disappearanceEffectPrefab;

	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[SerializeField]
	protected GameObject playerTouchedForbiddenObjectEffectPrefab;

	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	protected GameObject instantiatedPlayerTouchedForbiddenObjectEffect;

	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	protected float INSTANTIATED_PREFAB_MINUS_Y;

	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	protected Vector3 disappearanceFinishedPosition;

	[Token(Token = "0x4000B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	protected bool disappearanceInProgress;

	[Token(Token = "0x4000B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	protected Coroutine activeDisappearanceInProgressCoroutine;

	[Token(Token = "0x4000B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	protected Coroutine activeAppearanceInProgressCoroutine;

	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	protected ArrayList preInstantiatedEffects;

	[Token(Token = "0x4000B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	protected Coroutine deactivateCoroutine;

	[Token(Token = "0x4000B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[SerializeField]
	protected GameObject pointScoredEffect;

	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[SerializeField]
	protected AudioSource audioSource;

	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[SerializeField]
	protected AudioClip collidedWithOtherGameObjectSound;

	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private float appearanceWormHoleInstantiationPosY;

	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	protected GameObject preInstantiatedAppearanceWormhole;

	[Token(Token = "0x4000B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	protected GameObject preInstantiatedDisappearanceWormhole;

	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private bool prefabInstantiationInProgress;

	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C1")]
	private bool prefabCleanUpInProgress;

	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	[SerializeField]
	protected AudioClip pointScoredAudio;

	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	[SerializeField]
	protected AudioClip appearanceAudio;

	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	[SerializeField]
	protected AudioClip disappearanceAudio;

	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	[SerializeField]
	protected AudioClip playerLostPointAudio;

	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	protected Vector3 previousPos;

	[Token(Token = "0x4000B7D")]
	protected const float DISTANCE_FOR_POSITION_REACHED_CHECK = 0.01f;

	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
	protected Quaternion lookRotation;

	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
	protected Vector3 rotationDirection;

	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	protected float Y_VALUE_TO_MAKE_OBJECT_INVISIBLE;

	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	protected StringBuilder stringBuilder;

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	protected Dictionary<ActivationType, string> activationTypeStringDictionary;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	protected float activationDuration;

	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	protected Coroutine currentActiveTimeCountdownCoroutine;

	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	protected DateTime activationTime;

	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	protected bool activationPaused;

	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x241")]
	protected bool appearancePaused;

	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	protected double activationTimeRemaining;

	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private Vector3 creationPosition;

	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
	protected bool alreadyInteractedWithPlayer;

	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	[SerializeField]
	protected GameObject hitPlayerEffect;

	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	protected GameObject preInstantiatedHitPlayerEffect;

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	protected ParticleSystem hitPlayerParticleSystem;

	[Token(Token = "0x1700012B")]
	public float ActivationDuration
	{
		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0xA6CC4C", Offset = "0xA6CC4C", VA = "0xA6CC4C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0xA6CC54", Offset = "0xA6CC54", VA = "0xA6CC54")]
		set
		{
		}
	}

	[Token(Token = "0x1700012C")]
	public Vector3 AppearanceFinishedPosition
	{
		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0xA6CC5C", Offset = "0xA6CC5C", VA = "0xA6CC5C")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0xA6CC6C", Offset = "0xA6CC6C", VA = "0xA6CC6C")]
		set
		{
		}
	}

	[Token(Token = "0x1700012D")]
	protected bool WasAlreadyActive
	{
		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0xA6CC7C", Offset = "0xA6CC7C", VA = "0xA6CC7C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0xA6CC84", Offset = "0xA6CC84", VA = "0xA6CC84")]
		set
		{
		}
	}

	[Token(Token = "0x1700012E")]
	public int Id
	{
		[Token(Token = "0x6000C30")]
		[Address(RVA = "0xA6CC90", Offset = "0xA6CC90", VA = "0xA6CC90")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000C31")]
		[Address(RVA = "0xA6CC98", Offset = "0xA6CC98", VA = "0xA6CC98")]
		set
		{
		}
	}

	[Token(Token = "0x1700012F")]
	public Vector3 CreationPosition
	{
		[Token(Token = "0x6000C32")]
		[Address(RVA = "0xA6CCA0", Offset = "0xA6CCA0", VA = "0xA6CCA0")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000C33")]
		[Address(RVA = "0xA6CCB0", Offset = "0xA6CCB0", VA = "0xA6CCB0")]
		set
		{
		}
	}

	[Token(Token = "0x17000130")]
	public bool InPool
	{
		[Token(Token = "0x6000C34")]
		[Address(RVA = "0xA6CCC0", Offset = "0xA6CCC0", VA = "0xA6CCC0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C35")]
		[Address(RVA = "0xA6CCC8", Offset = "0xA6CCC8", VA = "0xA6CCC8")]
		set
		{
		}
	}

	[Token(Token = "0x17000131")]
	public bool ObjectMoves
	{
		[Token(Token = "0x6000C43")]
		[Address(RVA = "0xA6D694", Offset = "0xA6D694", VA = "0xA6D694")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C44")]
		[Address(RVA = "0xA6D69C", Offset = "0xA6D69C", VA = "0xA6D69C")]
		set
		{
		}
	}

	[Token(Token = "0x17000132")]
	public GameController GameController
	{
		[Token(Token = "0x6000C45")]
		[Address(RVA = "0xA6D6A8", Offset = "0xA6D6A8", VA = "0xA6D6A8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C46")]
		[Address(RVA = "0xA6D6B0", Offset = "0xA6D6B0", VA = "0xA6D6B0")]
		set
		{
		}
	}

	[Token(Token = "0x6000C36")]
	[Address(RVA = "0xA6CCD4", Offset = "0xA6CCD4", VA = "0xA6CCD4")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6000C37")]
	[Address(RVA = "0xA6CDB8", Offset = "0xA6CDB8", VA = "0xA6CDB8")]
	private void setupActivationTypeStringDictionary()
	{
	}

	[Token(Token = "0x6000C38")]
	[Address(RVA = "0xA6D15C", Offset = "0xA6D15C", VA = "0xA6D15C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C39")]
	[Address(RVA = "0xA6D168", Offset = "0xA6D168", VA = "0xA6D168", Slot = "7")]
	public virtual void setObjectTypeAsString()
	{
	}

	[Token(Token = "0x6000C3A")]
	[Address(RVA = "0xA6D16C", Offset = "0xA6D16C", VA = "0xA6D16C", Slot = "8")]
	protected virtual void performSetupOnStart()
	{
	}

	[Token(Token = "0x6000C3B")]
	[Address(RVA = "0xA6D198", Offset = "0xA6D198", VA = "0xA6D198")]
	private void performGeneralSetup()
	{
	}

	[Token(Token = "0x6000C3C")]
	[Address(RVA = "0xA6D1F4", Offset = "0xA6D1F4", VA = "0xA6D1F4", Slot = "9")]
	protected virtual void performSpecificSetup()
	{
	}

	[Token(Token = "0x6000C3D")]
	[Address(RVA = "0xA6D1F8", Offset = "0xA6D1F8", VA = "0xA6D1F8")]
	public bool isPrefabCleanUpInProgress()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C3E")]
	[Address(RVA = "0xA6D21C", Offset = "0xA6D21C", VA = "0xA6D21C")]
	public void setMovementLimits(float minX, float maxX, float minY, float maxY, float minZ, float maxZ)
	{
	}

	[Token(Token = "0x6000C3F")]
	[Address(RVA = "0xA6D4A0", Offset = "0xA6D4A0", VA = "0xA6D4A0", Slot = "10")]
	public virtual void calculateLocalMovementLimits(float movementAmount)
	{
	}

	[Token(Token = "0x6000C40")]
	[Address(RVA = "0xA6D4A4", Offset = "0xA6D4A4", VA = "0xA6D4A4")]
	public void setMovementData(float maxDistanceToMove, float movementSpeed, List<MovementAxis> movementAxises, float minX, float maxX, float minY, float maxY, float minZ, float maxZ)
	{
	}

	[Token(Token = "0x6000C41")]
	[Address(RVA = "0xA6D548", Offset = "0xA6D548", VA = "0xA6D548")]
	protected void printDistanceFromPreviousPosition()
	{
	}

	[Token(Token = "0x6000C42")]
	[Address(RVA = "0xA6D68C", Offset = "0xA6D68C", VA = "0xA6D68C")]
	public long getCreationDateTime()
	{
		return default(long);
	}

	[Token(Token = "0x6000C47")]
	[Address(RVA = "0xA6D6B8", Offset = "0xA6D6B8", VA = "0xA6D6B8", Slot = "11")]
	public virtual void performInitalizationSetup(GameController gameController)
	{
	}

	[Token(Token = "0x6000C48")]
	[Address(RVA = "0xA6D6BC", Offset = "0xA6D6BC", VA = "0xA6D6BC")]
	public void setNormalGameMovementAllowed(bool gameMovementAllowed)
	{
	}

	[Token(Token = "0x6000C49")]
	[Address(RVA = "0xA6D6C8", Offset = "0xA6D6C8", VA = "0xA6D6C8", Slot = "12")]
	public virtual void setCurrentMovementStartingPositionToCurrentPosition()
	{
	}

	[Token(Token = "0x6000C4A")]
	[Address(RVA = "0xA6D704", Offset = "0xA6D704", VA = "0xA6D704")]
	public bool isPrefabInstantiationInProgress()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C4B")]
	[Address(RVA = "0xA6D728", Offset = "0xA6D728", VA = "0xA6D728", Slot = "13")]
	public virtual void instantiatePrefabs(ActivationType activationType)
	{
	}

	[Token(Token = "0x6000C4C")]
	[Address(RVA = "0xA6D800", Offset = "0xA6D800", VA = "0xA6D800", Slot = "14")]
	protected virtual void instantiatePlayerTouchedForbiddenObjectPrefab()
	{
	}

	[Token(Token = "0x6000C4D")]
	[Address(RVA = "0xA6DB54", Offset = "0xA6DB54", VA = "0xA6DB54", Slot = "15")]
	public virtual void updatePrefabs(ActivationType activationType)
	{
	}

	[Token(Token = "0x6000C4E")]
	[Address(RVA = "0xA6DB58", Offset = "0xA6DB58", VA = "0xA6DB58", Slot = "16")]
	protected virtual void instantiatePlayerScoredEffect()
	{
	}

	[Token(Token = "0x6000C4F")]
	[Address(RVA = "0xA6DB5C", Offset = "0xA6DB5C", VA = "0xA6DB5C")]
	public void setPreInstantiatedEffectsActive(bool activeValue)
	{
	}

	[Token(Token = "0x6000C50")]
	[Address(RVA = "0xA6DC6C", Offset = "0xA6DC6C", VA = "0xA6DC6C")]
	public void setPreinstantiatedEffectsPositionToCurrentPosition()
	{
	}

	[Token(Token = "0x6000C51")]
	[Address(RVA = "0xA6DD54", Offset = "0xA6DD54", VA = "0xA6DD54")]
	public void deactivateSelfAndPrefabsWithDelay(int secondsToWait)
	{
	}

	[Token(Token = "0x6000C52")]
	[Address(RVA = "0xA6DE54", Offset = "0xA6DE54", VA = "0xA6DE54")]
	protected void stopAppearanceDisappearance()
	{
	}

	[Token(Token = "0x6000C53")]
	[Address(RVA = "0xA6DEC8", Offset = "0xA6DEC8", VA = "0xA6DEC8")]
	public void prepareForReturnToGame()
	{
	}

	[Token(Token = "0x6000C54")]
	[Address(RVA = "0xA6DEFC", Offset = "0xA6DEFC", VA = "0xA6DEFC", Slot = "17")]
	protected virtual void prepareForReturnToGameSpecific()
	{
	}

	[Token(Token = "0x6000C55")]
	[Address(RVA = "0xA6DC2C", Offset = "0xA6DC2C", VA = "0xA6DC2C")]
	protected void stopDeactivateCoroutine()
	{
	}

	[Token(Token = "0x6000C56")]
	[Address(RVA = "0xA6DDCC", Offset = "0xA6DDCC", VA = "0xA6DDCC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A75C4", Offset = "0x6A75C4")]
	private IEnumerator deactivateSelfCoroutine(int secondsToWait)
	{
		return null;
	}

	[Token(Token = "0x6000C57")]
	[Address(RVA = "0xA6DF00", Offset = "0xA6DF00", VA = "0xA6DF00", Slot = "18")]
	protected virtual void performOnDeactivation()
	{
	}

	[Token(Token = "0x6000C58")]
	[Address(RVA = "0xA6DF04", Offset = "0xA6DF04", VA = "0xA6DF04")]
	public void playAllEffectsWithDelay()
	{
	}

	[Token(Token = "0x6000C59")]
	[Address(RVA = "0xA6DF30", Offset = "0xA6DF30", VA = "0xA6DF30")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A7624", Offset = "0x6A7624")]
	private IEnumerator playAllEffects()
	{
		return null;
	}

	[Token(Token = "0x6000C5A")]
	[Address(RVA = "0xA6DFA8", Offset = "0xA6DFA8", VA = "0xA6DFA8", Slot = "19")]
	public virtual void destroyInstantiatedPrefabs()
	{
	}

	[Token(Token = "0x6000C5B")]
	[Address(RVA = "0xA6E000", Offset = "0xA6E000", VA = "0xA6E000", Slot = "20")]
	protected virtual void destroyAppearanceAndDisappearanceEffect()
	{
	}

	[Token(Token = "0x6000C5C")]
	[Address(RVA = "0xA6E068", Offset = "0xA6E068", VA = "0xA6E068", Slot = "21")]
	protected virtual void destroySpecificPrefabs()
	{
	}

	[Token(Token = "0x6000C5D")]
	[Address(RVA = "0xA6E06C", Offset = "0xA6E06C", VA = "0xA6E06C", Slot = "22")]
	protected virtual void instantiateAppearanceAndDisappearanceEffect(ActivationType activationType)
	{
	}

	[Token(Token = "0x6000C5E")]
	[Address(RVA = "0xA6E3E4", Offset = "0xA6E3E4", VA = "0xA6E3E4", Slot = "23")]
	protected virtual void instantiateSpecificPrefabs()
	{
	}

	[Token(Token = "0x6000C5F")]
	[Address(RVA = "0xA6E3E8", Offset = "0xA6E3E8", VA = "0xA6E3E8")]
	public void activateGameObjectMovement(float maxDistanceToMove, float journeyTime, List<MovementAxis> movementAxises)
	{
	}

	[Token(Token = "0x6000C60")]
	[Address(RVA = "0xA6E524", Offset = "0xA6E524", VA = "0xA6E524", Slot = "24")]
	public virtual void setJourneyTime(float journeyTime)
	{
	}

	[Token(Token = "0x6000C61")]
	[Address(RVA = "0xA6E52C", Offset = "0xA6E52C", VA = "0xA6E52C", Slot = "25")]
	protected virtual void updateBezierCurveValues()
	{
	}

	[Token(Token = "0x6000C62")]
	[Address(RVA = "0xA6E77C", Offset = "0xA6E77C", VA = "0xA6E77C", Slot = "26")]
	protected virtual void updateMovementMode()
	{
	}

	[Token(Token = "0x6000C63")]
	[Address(RVA = "0xA6E7B4", Offset = "0xA6E7B4", VA = "0xA6E7B4")]
	protected int getOneOrMinusOne()
	{
		return default(int);
	}

	[Token(Token = "0x6000C64")]
	[Address(RVA = "0xA6E7E0", Offset = "0xA6E7E0", VA = "0xA6E7E0", Slot = "27")]
	protected virtual void calculateBezierCurvePoints()
	{
	}

	[Token(Token = "0x6000C65")]
	[Address(RVA = "0xA6E854", Offset = "0xA6E854", VA = "0xA6E854")]
	protected bool checkIfCurrentPosWithinAllowedBoundary()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C66")]
	[Address(RVA = "0xA6E924", Offset = "0xA6E924", VA = "0xA6E924")]
	public void setScoreKeeper(ScoreKeeper scoreKeeper)
	{
	}

	[Token(Token = "0x6000C67")]
	[Address(RVA = "0xA6E92C", Offset = "0xA6E92C", VA = "0xA6E92C")]
	public void setRenderers()
	{
	}

	[Token(Token = "0x6000C68")]
	[Address(RVA = "0xA6E988", Offset = "0xA6E988", VA = "0xA6E988", Slot = "28")]
	public virtual void activate(ActivationType activationType)
	{
	}

	[Token(Token = "0x6000C69")]
	[Address(RVA = "0xA6E9C4", Offset = "0xA6E9C4", VA = "0xA6E9C4")]
	public void playActiveSoundLooping(AudioClip clip)
	{
	}

	[Token(Token = "0x6000C6A")]
	[Address(RVA = "0xA6EA1C", Offset = "0xA6EA1C", VA = "0xA6EA1C")]
	public ActivationType getCurrentActivationType()
	{
		return default(ActivationType);
	}

	[Token(Token = "0x6000C6B")]
	[Address(RVA = "0xA6EA24", Offset = "0xA6EA24", VA = "0xA6EA24", Slot = "29")]
	protected virtual void activateGeneric(ActivationType activationType)
	{
	}

	[Token(Token = "0x6000C6C")]
	[Address(RVA = "0xA6EA70", Offset = "0xA6EA70", VA = "0xA6EA70", Slot = "30")]
	protected virtual void setMaterialOnRendenders(Material material)
	{
	}

	[Token(Token = "0x6000C6D")]
	[Address(RVA = "0xA6EB70", Offset = "0xA6EB70", VA = "0xA6EB70", Slot = "31")]
	protected virtual void setRenderersEnabled(bool enabled)
	{
	}

	[Token(Token = "0x6000C6E")]
	[Address(RVA = "0xA6EC70", Offset = "0xA6EC70", VA = "0xA6EC70", Slot = "32")]
	public virtual void activateSpecific()
	{
	}

	[Token(Token = "0x6000C6F")]
	[Address(RVA = "0xA6EC74", Offset = "0xA6EC74", VA = "0xA6EC74", Slot = "33")]
	public virtual void performActivationTypeSetup(ActivationType activationType)
	{
	}

	[Token(Token = "0x6000C70")]
	[Address(RVA = "0xA6ECF4", Offset = "0xA6ECF4", VA = "0xA6ECF4", Slot = "34")]
	protected virtual void removePreviousActivationTypeFromString()
	{
	}

	[Token(Token = "0x6000C71")]
	[Address(RVA = "0xA6ED58", Offset = "0xA6ED58", VA = "0xA6ED58", Slot = "35")]
	protected virtual void setObjectAndActivationTypeAsString()
	{
	}

	[Token(Token = "0x6000C72")]
	[Address(RVA = "0xA6EDEC", Offset = "0xA6EDEC", VA = "0xA6EDEC", Slot = "36")]
	public virtual string getObjectAndActivationTypeAsString()
	{
		return null;
	}

	[Token(Token = "0x6000C73")]
	[Address(RVA = "0xA6EDF4", Offset = "0xA6EDF4", VA = "0xA6EDF4", Slot = "37")]
	protected virtual Material getActivationTypeMaterial()
	{
		return null;
	}

	[Token(Token = "0x6000C74")]
	[Address(RVA = "0xA6EE38", Offset = "0xA6EE38", VA = "0xA6EE38", Slot = "38")]
	public virtual void activate(float time)
	{
	}

	[Token(Token = "0x6000C75")]
	[Address(RVA = "0xA6EE3C", Offset = "0xA6EE3C", VA = "0xA6EE3C", Slot = "39")]
	protected virtual void specificActivationFunctionality()
	{
	}

	[Token(Token = "0x6000C76")]
	[Address(RVA = "0xA6EE4C", Offset = "0xA6EE4C", VA = "0xA6EE4C", Slot = "40")]
	protected virtual void touchedByPlayerHand(Collider collider)
	{
	}

	[Token(Token = "0x6000C77")]
	[Address(RVA = "0xA6EE50", Offset = "0xA6EE50", VA = "0xA6EE50")]
	protected PlayerHandController getPlayerHandControllerFromOther(Collider other)
	{
		return null;
	}

	[Token(Token = "0x6000C78")]
	[Address(RVA = "0xA6EFA4", Offset = "0xA6EFA4", VA = "0xA6EFA4", Slot = "41")]
	protected virtual bool isTouchedByValidHand(PlayerHandController.Hand_Type handType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C79")]
	[Address(RVA = "0xA6EFD8", Offset = "0xA6EFD8", VA = "0xA6EFD8", Slot = "42")]
	protected virtual void playerTouchedForbiddenObject(PlayerHandController playerHandController)
	{
	}

	[Token(Token = "0x6000C7A")]
	[Address(RVA = "0xA6F068", Offset = "0xA6F068", VA = "0xA6F068", Slot = "43")]
	protected virtual void playerTouchedForbiddenObjectSpecific(PlayerHandController playerHandController)
	{
	}

	[Token(Token = "0x6000C7B")]
	[Address(RVA = "0xA6F06C", Offset = "0xA6F06C", VA = "0xA6F06C", Slot = "44")]
	protected virtual void setVectorOfOriginalPosition()
	{
	}

	[Token(Token = "0x6000C7C")]
	[Address(RVA = "0xA6F0A8", Offset = "0xA6F0A8", VA = "0xA6F0A8", Slot = "45")]
	protected virtual void updateVectorOfCurrentMovementStartPosition()
	{
	}

	[Token(Token = "0x6000C7D")]
	[Address(RVA = "0xA6F0E4", Offset = "0xA6F0E4", VA = "0xA6F0E4", Slot = "46")]
	protected virtual void repositionDestination(List<MovementAxis> axisesToMoveIn)
	{
	}

	[Token(Token = "0x6000C7E")]
	[Address(RVA = "0xA6F40C", Offset = "0xA6F40C", VA = "0xA6F40C", Slot = "47")]
	protected virtual void positionDestinationWithCorrectionForLimits(float additionalX, float additionalY, float additionalZ, float xDirection, float yDirection, float zDirection)
	{
	}

	[Token(Token = "0x6000C7F")]
	[Address(RVA = "0xA6F574", Offset = "0xA6F574", VA = "0xA6F574", Slot = "48")]
	protected virtual void setDestinationPosition(Vector3 pos)
	{
	}

	[Token(Token = "0x6000C80")]
	[Address(RVA = "0xA6F584", Offset = "0xA6F584", VA = "0xA6F584")]
	public Vector3 getDestination()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C81")]
	[Address(RVA = "0xA6F594", Offset = "0xA6F594", VA = "0xA6F594")]
	protected bool vectorIsPlaceHolderVector(Vector3 input)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C82")]
	[Address(RVA = "0xA6F3F8", Offset = "0xA6F3F8", VA = "0xA6F3F8")]
	protected float getAdditionalMovementAmount()
	{
		return default(float);
	}

	[Token(Token = "0x6000C83")]
	[Address(RVA = "0xA6F3C8", Offset = "0xA6F3C8", VA = "0xA6F3C8")]
	protected float getRandomDirection()
	{
		return default(float);
	}

	[Token(Token = "0x6000C84")]
	[Address(RVA = "0xA6F5C0", Offset = "0xA6F5C0", VA = "0xA6F5C0", Slot = "49")]
	protected virtual void repositionDestinationInSpecificDirection(float xDirection, float yDirection)
	{
	}

	[Token(Token = "0x6000C85")]
	[Address(RVA = "0xA6F6C0", Offset = "0xA6F6C0", VA = "0xA6F6C0", Slot = "50")]
	public virtual void performAppearance(Vector3 appearanceDestination)
	{
	}

	[Token(Token = "0x6000C86")]
	[Address(RVA = "0xA6F9C4", Offset = "0xA6F9C4", VA = "0xA6F9C4", Slot = "51")]
	protected virtual void playAppearanceAudio()
	{
	}

	[Token(Token = "0x6000C87")]
	[Address(RVA = "0xA6FA38", Offset = "0xA6FA38", VA = "0xA6FA38", Slot = "52")]
	protected virtual void playDisappearanceAudio()
	{
	}

	[Token(Token = "0x6000C88")]
	[Address(RVA = "0xA6FA6C", Offset = "0xA6FA6C", VA = "0xA6FA6C", Slot = "53")]
	protected virtual void playPlayerLostPointAudio()
	{
	}

	[Token(Token = "0x6000C89")]
	[Address(RVA = "0xA6FAA0", Offset = "0xA6FAA0", VA = "0xA6FAA0", Slot = "54")]
	protected virtual void playOneShotAudio(AudioClip audioClip)
	{
	}

	[Token(Token = "0x6000C8A")]
	[Address(RVA = "0xA6FAD8", Offset = "0xA6FAD8", VA = "0xA6FAD8", Slot = "55")]
	protected virtual void performApperancePreparation()
	{
	}

	[Token(Token = "0x6000C8B")]
	[Address(RVA = "0xA6FADC", Offset = "0xA6FADC", VA = "0xA6FADC", Slot = "56")]
	public virtual void startDisappearance(float scale)
	{
	}

	[Token(Token = "0x6000C8C")]
	[Address(RVA = "0xA6FBA8", Offset = "0xA6FBA8", VA = "0xA6FBA8", Slot = "57")]
	protected virtual void prepareForDisappearance()
	{
	}

	[Token(Token = "0x6000C8D")]
	[Address(RVA = "0xA6FBAC", Offset = "0xA6FBAC", VA = "0xA6FBAC", Slot = "58")]
	protected virtual void playDisappearanceEffect(float scale)
	{
	}

	[Token(Token = "0x6000C8E")]
	[Address(RVA = "0xA6FCA4", Offset = "0xA6FCA4", VA = "0xA6FCA4", Slot = "59")]
	protected virtual GameObject getDisappearancePreInstantiatedEffect()
	{
		return null;
	}

	[Token(Token = "0x6000C8F")]
	[Address(RVA = "0xA6FCAC", Offset = "0xA6FCAC", VA = "0xA6FCAC", Slot = "60")]
	protected virtual GameObject getDisappearanceEffect()
	{
		return null;
	}

	[Token(Token = "0x6000C90")]
	[Address(RVA = "0xA6FCB4", Offset = "0xA6FCB4", VA = "0xA6FCB4", Slot = "61")]
	protected virtual void beforeDisappearanceStart(Transform inputTransform)
	{
	}

	[Token(Token = "0x6000C91")]
	[Address(RVA = "0xA6FCB8", Offset = "0xA6FCB8", VA = "0xA6FCB8", Slot = "62")]
	protected virtual float getDisappearanceMovementDistance()
	{
		return default(float);
	}

	[Token(Token = "0x6000C92")]
	[Address(RVA = "0xA6FCC4", Offset = "0xA6FCC4", VA = "0xA6FCC4", Slot = "63")]
	protected virtual Vector3 getDisappearanceWormHolePosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C93")]
	[Address(RVA = "0xA6FD68", Offset = "0xA6FD68", VA = "0xA6FD68", Slot = "64")]
	protected virtual Vector3 getDisappearanceFinishedPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C94")]
	[Address(RVA = "0xA6E298", Offset = "0xA6E298", VA = "0xA6E298")]
	protected GameObject createAppearanceDisappearancePrefab(float scale, GameObject prefab)
	{
		return null;
	}

	[Token(Token = "0x6000C95")]
	[Address(RVA = "0xA6FE60", Offset = "0xA6FE60", VA = "0xA6FE60", Slot = "65")]
	protected virtual void updateDistanceFromCurrentStartingPosToTarget(Vector3 target)
	{
	}

	[Token(Token = "0x6000C96")]
	[Address(RVA = "0xA6FEA4", Offset = "0xA6FEA4", VA = "0xA6FEA4", Slot = "66")]
	protected virtual float getCurrentDistanceToTargetToStartingDistanceRatio(Vector3 target)
	{
		return default(float);
	}

	[Token(Token = "0x6000C97")]
	[Address(RVA = "0xA6FF34", Offset = "0xA6FF34", VA = "0xA6FF34", Slot = "67")]
	protected virtual float getWormHoleScaleMultiplier()
	{
		return default(float);
	}

	[Token(Token = "0x6000C98")]
	[Address(RVA = "0xA6FF3C", Offset = "0xA6FF3C", VA = "0xA6FF3C", Slot = "68")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A7684", Offset = "0x6A7684")]
	protected virtual IEnumerator startAppearanceMovement()
	{
		return null;
	}

	[Token(Token = "0x6000C99")]
	[Address(RVA = "0xA6FFB4", Offset = "0xA6FFB4", VA = "0xA6FFB4", Slot = "69")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A76E4", Offset = "0x6A76E4")]
	protected virtual IEnumerator startDisappearanceMovementCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000C9A")]
	[Address(RVA = "0xA7002C", Offset = "0xA7002C", VA = "0xA7002C")]
	public void forceDisappearanceInProgress(bool input)
	{
	}

	[Token(Token = "0x6000C9B")]
	[Address(RVA = "0xA6F908", Offset = "0xA6F908", VA = "0xA6F908")]
	protected void updateRenderer()
	{
	}

	[Token(Token = "0x6000C9C")]
	[Address(RVA = "0xA70038", Offset = "0xA70038", VA = "0xA70038")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000C9D")]
	[Address(RVA = "0xA70258", Offset = "0xA70258", VA = "0xA70258", Slot = "70")]
	protected virtual void performDisappearanceMovement()
	{
	}

	[Token(Token = "0x6000C9E")]
	[Address(RVA = "0xA70358", Offset = "0xA70358", VA = "0xA70358", Slot = "71")]
	protected virtual void performOnDisappearanceFinished()
	{
	}

	[Token(Token = "0x6000C9F")]
	[Address(RVA = "0xA703A4", Offset = "0xA703A4", VA = "0xA703A4")]
	protected void resetRigidBodyVelocity()
	{
	}

	[Token(Token = "0x6000CA0")]
	[Address(RVA = "0xA70454", Offset = "0xA70454", VA = "0xA70454", Slot = "72")]
	protected virtual void appearancePositionReached()
	{
	}

	[Token(Token = "0x6000CA1")]
	[Address(RVA = "0xA7051C", Offset = "0xA7051C", VA = "0xA7051C", Slot = "73")]
	protected virtual void appearancePositionReachedSpecific()
	{
	}

	[Token(Token = "0x6000CA2")]
	[Address(RVA = "0xA70520", Offset = "0xA70520", VA = "0xA70520", Slot = "74")]
	protected virtual void disappearancePositionReached()
	{
	}

	[Token(Token = "0x6000CA3")]
	[Address(RVA = "0xA705E8", Offset = "0xA705E8", VA = "0xA705E8")]
	public void onPlayerStoppedGame()
	{
	}

	[Token(Token = "0x6000CA4")]
	[Address(RVA = "0xA70640", Offset = "0xA70640", VA = "0xA70640", Slot = "75")]
	public virtual void stopAllEffects(bool playerScored)
	{
	}

	[Token(Token = "0x6000CA5")]
	[Address(RVA = "0xA70644", Offset = "0xA70644", VA = "0xA70644", Slot = "76")]
	protected virtual void disappearanceEnded()
	{
	}

	[Token(Token = "0x6000CA6")]
	[Address(RVA = "0xA7073C", Offset = "0xA7073C", VA = "0xA7073C", Slot = "77")]
	public virtual void performGameAction()
	{
	}

	[Token(Token = "0x6000CA7")]
	[Address(RVA = "0xA7078C", Offset = "0xA7078C", VA = "0xA7078C", Slot = "78")]
	public virtual void prePerformMovement()
	{
	}

	[Token(Token = "0x6000CA8")]
	[Address(RVA = "0xA70790", Offset = "0xA70790", VA = "0xA70790", Slot = "79")]
	protected virtual void performMovement()
	{
	}

	[Token(Token = "0x6000CA9")]
	[Address(RVA = "0xA7080C", Offset = "0xA7080C", VA = "0xA7080C", Slot = "80")]
	protected virtual void postPerformMovement()
	{
	}

	[Token(Token = "0x6000CAA")]
	[Address(RVA = "0xA70858", Offset = "0xA70858", VA = "0xA70858", Slot = "81")]
	protected virtual bool checkIfDestinationReached()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CAB")]
	[Address(RVA = "0xA708B0", Offset = "0xA708B0", VA = "0xA708B0", Slot = "82")]
	protected virtual void setNewLerpPosition()
	{
	}

	[Token(Token = "0x6000CAC")]
	[Address(RVA = "0xA70938", Offset = "0xA70938", VA = "0xA70938", Slot = "83")]
	protected virtual void setNewBezierCurvePosition()
	{
	}

	[Token(Token = "0x6000CAD")]
	[Address(RVA = "0xA70A40", Offset = "0xA70A40", VA = "0xA70A40", Slot = "84")]
	protected virtual Vector3 getPointOnBezierCurve(float mTimerValue)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000CAE")]
	[Address(RVA = "0xA70B70", Offset = "0xA70B70", VA = "0xA70B70")]
	protected void printBezierCurvePositions()
	{
	}

	[Token(Token = "0x6000CAF")]
	[Address(RVA = "0xA70B88", Offset = "0xA70B88", VA = "0xA70B88", Slot = "85")]
	protected virtual float getMTimerCorrectedBezier(float mTimer)
	{
		return default(float);
	}

	[Token(Token = "0x6000CB0")]
	[Address(RVA = "0xA70B94", Offset = "0xA70B94", VA = "0xA70B94", Slot = "86")]
	protected virtual float getMTimerCorrectedBezier(float mTimer, Vector3 targetPos)
	{
		return default(float);
	}

	[Token(Token = "0x6000CB1")]
	[Address(RVA = "0xA70BA0", Offset = "0xA70BA0", VA = "0xA70BA0", Slot = "87")]
	protected virtual void updateCurvedToDirectDistanceRatio(Vector3 endDestination)
	{
	}

	[Token(Token = "0x6000CB2")]
	[Address(RVA = "0xA6E5A4", Offset = "0xA6E5A4", VA = "0xA6E5A4")]
	protected float getBezierCurveDistance()
	{
		return default(float);
	}

	[Token(Token = "0x6000CB3")]
	[Address(RVA = "0xA70C08", Offset = "0xA70C08", VA = "0xA70C08")]
	protected bool checkIfDistanceLessThen(Vector3 pos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CB4")]
	[Address(RVA = "0xA70200", Offset = "0xA70200", VA = "0xA70200")]
	private bool checkIfAppearanceFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CB5")]
	[Address(RVA = "0xA70C70", Offset = "0xA70C70", VA = "0xA70C70")]
	protected string getObjectIdString()
	{
		return null;
	}

	[Token(Token = "0x6000CB6")]
	[Address(RVA = "0xA70CE8", Offset = "0xA70CE8", VA = "0xA70CE8")]
	protected void logPosition()
	{
	}

	[Token(Token = "0x6000CB7")]
	[Address(RVA = "0xA71054", Offset = "0xA71054", VA = "0xA71054", Slot = "88")]
	protected virtual bool checkIfDisappearanceFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CB8")]
	[Address(RVA = "0xA710AC", Offset = "0xA710AC", VA = "0xA710AC", Slot = "89")]
	protected virtual void destiantionReached()
	{
	}

	[Token(Token = "0x6000CB9")]
	[Address(RVA = "0xA7112C", Offset = "0xA7112C", VA = "0xA7112C", Slot = "90")]
	protected virtual void updateDistanceToDestinationToMaxDistanceRatio()
	{
	}

	[Token(Token = "0x6000CBA")]
	[Address(RVA = "0xA71170", Offset = "0xA71170", VA = "0xA71170")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000CBB")]
	[Address(RVA = "0xA71368", Offset = "0xA71368", VA = "0xA71368", Slot = "91")]
	protected virtual void collidedWithPlayer(Collider collider)
	{
	}

	[Token(Token = "0x6000CBC")]
	[Address(RVA = "0xA7136C", Offset = "0xA7136C", VA = "0xA7136C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000CBD")]
	[Address(RVA = "0xA71420", Offset = "0xA71420", VA = "0xA71420", Slot = "92")]
	protected virtual void collidedWithNonPlayerObject(Collider collider)
	{
	}

	[Token(Token = "0x6000CBE")]
	[Address(RVA = "0xA7146C", Offset = "0xA7146C", VA = "0xA7146C")]
	protected void playCollisionSoundWithOtherObject(Collider collider)
	{
	}

	[Token(Token = "0x6000CBF")]
	[Address(RVA = "0xA71550", Offset = "0xA71550", VA = "0xA71550", Slot = "93")]
	protected virtual void repositionDestinationToAvoidObjectCollidedWith(GameObject objectCollidedWith)
	{
	}

	[Token(Token = "0x6000CC0")]
	[Address(RVA = "0xA71644", Offset = "0xA71644", VA = "0xA71644")]
	protected float getYDirectionAwayFromOtherObject(GameObject objectCollidedWith)
	{
		return default(float);
	}

	[Token(Token = "0x6000CC1")]
	[Address(RVA = "0xA7171C", Offset = "0xA7171C", VA = "0xA7171C", Slot = "94")]
	protected virtual void specificOnCollidedWithOtherObject()
	{
	}

	[Token(Token = "0x6000CC2")]
	[Address(RVA = "0xA71720", Offset = "0xA71720", VA = "0xA71720")]
	public bool isActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CC3")]
	[Address(RVA = "0xA71728", Offset = "0xA71728", VA = "0xA71728")]
	public bool isMovedAfterCreation()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CC4")]
	[Address(RVA = "0xA717AC", Offset = "0xA717AC", VA = "0xA717AC")]
	protected void playPlayerScoredPointAudio()
	{
	}

	[Token(Token = "0x6000CC5")]
	[Address(RVA = "0xA717D4", Offset = "0xA717D4", VA = "0xA717D4")]
	public void stopPointScoredEffect()
	{
	}

	[Token(Token = "0x6000CC6")]
	[Address(RVA = "0xA6F9F8", Offset = "0xA6F9F8", VA = "0xA6F9F8")]
	public void stopAudioAndSetLoopingToFalse()
	{
	}

	[Token(Token = "0x6000CC7")]
	[Address(RVA = "0xA6DA54", Offset = "0xA6DA54", VA = "0xA6DA54")]
	public static GameObject instantiateAndScalePrefabOnPosition(GameObject prefabToInstantiate, Vector3 position, Quaternion rotation, Vector3 size)
	{
		return null;
	}

	[Token(Token = "0x6000CC8")]
	[Address(RVA = "0xA71834", Offset = "0xA71834", VA = "0xA71834")]
	public void positionAtInvisibleYValue()
	{
	}

	[Token(Token = "0x6000CC9")]
	[Address(RVA = "0xA718B4", Offset = "0xA718B4", VA = "0xA718B4", Slot = "95")]
	protected virtual GameObject getAppearanceEffect(ActivationType activationType)
	{
		return null;
	}

	[Token(Token = "0x6000CCA")]
	[Address(RVA = "0xA718BC", Offset = "0xA718BC", VA = "0xA718BC", Slot = "96")]
	public virtual void deactivateDueToTouchedByPlayer()
	{
	}

	[Token(Token = "0x6000CCB")]
	[Address(RVA = "0xA718C0", Offset = "0xA718C0", VA = "0xA718C0", Slot = "97")]
	public virtual string getObjectType()
	{
		return null;
	}

	[Token(Token = "0x6000CCC")]
	[Address(RVA = "0xA718C8", Offset = "0xA718C8", VA = "0xA718C8", Slot = "98")]
	public virtual float getObjectScale()
	{
		return default(float);
	}

	[Token(Token = "0x6000CCD")]
	[Address(RVA = "0xA6E234", Offset = "0xA6E234", VA = "0xA6E234", Slot = "6")]
	public float[] getRendererBounds()
	{
		return null;
	}

	[Token(Token = "0x6000CCE")]
	[Address(RVA = "0xA718D0", Offset = "0xA718D0", VA = "0xA718D0", Slot = "99")]
	public virtual void calculateRendererBounds()
	{
	}

	[Token(Token = "0x6000CCF")]
	[Address(RVA = "0xA71A28", Offset = "0xA71A28", VA = "0xA71A28", Slot = "100")]
	protected virtual void collidedWithOtherGameObject(Collider collider)
	{
	}

	[Token(Token = "0x6000CD0")]
	[Address(RVA = "0xA71A2C", Offset = "0xA71A2C", VA = "0xA71A2C")]
	public void reset()
	{
	}

	[Token(Token = "0x6000CD1")]
	[Address(RVA = "0xA71AB0", Offset = "0xA71AB0", VA = "0xA71AB0", Slot = "101")]
	public virtual void returnToCreationPositionOnReset()
	{
	}

	[Token(Token = "0x6000CD2")]
	[Address(RVA = "0xA71AB4", Offset = "0xA71AB4", VA = "0xA71AB4", Slot = "102")]
	public virtual void gameRestartedByPlayer()
	{
	}

	[Token(Token = "0x6000CD3")]
	[Address(RVA = "0xA71AB8", Offset = "0xA71AB8", VA = "0xA71AB8", Slot = "103")]
	public virtual void resetOnReturnToObjectPool()
	{
	}

	[Token(Token = "0x6000CD4")]
	[Address(RVA = "0xA71ABC", Offset = "0xA71ABC", VA = "0xA71ABC", Slot = "104")]
	protected virtual void prepareObjectForReturnToGameObjectPool()
	{
	}

	[Token(Token = "0x6000CD5")]
	[Address(RVA = "0xA71AC0", Offset = "0xA71AC0", VA = "0xA71AC0", Slot = "105")]
	protected virtual void playerScoredByTouchingObject(PlayerHandController playerHandController)
	{
	}

	[Token(Token = "0x6000CD6")]
	[Address(RVA = "0xA71B28", Offset = "0xA71B28", VA = "0xA71B28", Slot = "106")]
	protected virtual void removeGameObjectFromActiveObjectsInScene()
	{
	}

	[Token(Token = "0x6000CD7")]
	[Address(RVA = "0xA71C1C", Offset = "0xA71C1C", VA = "0xA71C1C", Slot = "107")]
	public virtual int getPointsValue()
	{
		return default(int);
	}

	[Token(Token = "0x6000CD8")]
	[Address(RVA = "0xA71C24", Offset = "0xA71C24", VA = "0xA71C24", Slot = "108")]
	public virtual void onPaused()
	{
	}

	[Token(Token = "0x6000CD9")]
	[Address(RVA = "0xA71E40", Offset = "0xA71E40", VA = "0xA71E40", Slot = "109")]
	protected virtual void onPausedSpecific()
	{
	}

	[Token(Token = "0x6000CDA")]
	[Address(RVA = "0xA71E44", Offset = "0xA71E44", VA = "0xA71E44", Slot = "110")]
	public virtual void onUnPaused()
	{
	}

	[Token(Token = "0x6000CDB")]
	[Address(RVA = "0xA71F1C", Offset = "0xA71F1C", VA = "0xA71F1C", Slot = "111")]
	protected virtual void onUnPausedSpecific(bool appearanceWasInProgress)
	{
	}

	[Token(Token = "0x6000CDC")]
	[Address(RVA = "0xA71E00", Offset = "0xA71E00", VA = "0xA71E00")]
	public void stopActiveCountdownCoroutine()
	{
	}

	[Token(Token = "0x6000CDD")]
	[Address(RVA = "0xA71F20", Offset = "0xA71F20", VA = "0xA71F20", Slot = "112")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A7744", Offset = "0x6A7744")]
	protected virtual IEnumerator activeTimeCountdownCoroutine(float waitTime)
	{
		return null;
	}

	[Token(Token = "0x6000CDE")]
	[Address(RVA = "0xA71F7C", Offset = "0xA71F7C", VA = "0xA71F7C", Slot = "113")]
	protected virtual bool checkWithinMaxDistanceFromStartingPos()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CDF")]
	[Address(RVA = "0xA71F84", Offset = "0xA71F84", VA = "0xA71F84")]
	protected List<ObjectPositionAnalyzer.outOfPositionDirection> getOutOfMovementLimitsDirections()
	{
		return null;
	}

	[Token(Token = "0x6000CE0")]
	[Address(RVA = "0xA6F4D4", Offset = "0xA6F4D4", VA = "0xA6F4D4")]
	protected Vector3 getDestinationCorrectedForMovementLimits(Vector3 newDestination)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000CE1")]
	[Address(RVA = "0xA72098", Offset = "0xA72098", VA = "0xA72098")]
	public Vector3 getOriginalPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000CE2")]
	[Address(RVA = "0xA720A4", Offset = "0xA720A4", VA = "0xA720A4", Slot = "114")]
	public virtual void preloadPlayerScoredPointEffectIntoMemory()
	{
	}

	[Token(Token = "0x6000CE3")]
	[Address(RVA = "0xA720A8", Offset = "0xA720A8", VA = "0xA720A8", Slot = "115")]
	public virtual void preloadPlayerLostPointEffectIntoMemory()
	{
	}

	[Token(Token = "0x6000CE4")]
	[Address(RVA = "0xA720AC", Offset = "0xA720AC", VA = "0xA720AC")]
	protected void playHitPlayerEffect(Collider collider)
	{
	}

	[Token(Token = "0x6000CE5")]
	[Address(RVA = "0xA72178", Offset = "0xA72178", VA = "0xA72178", Slot = "116")]
	protected virtual void instantiateHitPlayerEffect()
	{
	}

	[Token(Token = "0x6000CE6")]
	[Address(RVA = "0xA723FC", Offset = "0xA723FC", VA = "0xA723FC")]
	public CoordinationCoachGameObject()
	{
	}
}
[Token(Token = "0x200020D")]
public class EnduranceGameObjectAppearancePositionHelper : ObjectAppearancePositionHelper
{
	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform playerTransform;

	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<PositionAndRotationContainer> posAndRotationContainers;

	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool boundsCalculationsSet;

	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float[] enduranceObjectBounds;

	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] enduranceObjectBoundsHalfed;

	[Token(Token = "0x4000BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 vectorForDistanceCheckBetweenPlayerAndObject;

	[Token(Token = "0x1700013D")]
	public bool BoundsCalculationsSet
	{
		[Token(Token = "0x6000D06")]
		[Address(RVA = "0x961710", Offset = "0x961710", VA = "0x961710")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D07")]
		[Address(RVA = "0x961718", Offset = "0x961718", VA = "0x961718")]
		set
		{
		}
	}

	[Token(Token = "0x6000D08")]
	[Address(RVA = "0x961724", Offset = "0x961724", VA = "0x961724")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D09")]
	[Address(RVA = "0x9617EC", Offset = "0x9617EC", VA = "0x9617EC")]
	public List<PositionAndRotationContainer> getAppearancePosSingleObject(EnduranceModePlane planeHit)
	{
		return null;
	}

	[Token(Token = "0x6000D0A")]
	[Address(RVA = "0x961968", Offset = "0x961968", VA = "0x961968")]
	public List<PositionAndRotationContainer> getAppearancePositions(EnduranceModePlane planeHit)
	{
		return null;
	}

	[Token(Token = "0x6000D0B")]
	[Address(RVA = "0x961FC8", Offset = "0x961FC8", VA = "0x961FC8")]
	public void setUpCalculationValues(float[] objectBounds)
	{
	}

	[Token(Token = "0x6000D0C")]
	[Address(RVA = "0x9618FC", Offset = "0x9618FC", VA = "0x9618FC")]
	private void setAppearancePosRotationAppearanceStartPosition(PositionAndRotationContainer positionAndRotationContainer, Vector3 appearancePos, EnduranceModePlane enduranceModePlane, float yPos)
	{
	}

	[Token(Token = "0x6000D0D")]
	[Address(RVA = "0x961F00", Offset = "0x961F00", VA = "0x961F00")]
	private bool checkForCollisionWithPlayer(Vector3 objectPosition, Vector3 playerPos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D0E")]
	[Address(RVA = "0x962258", Offset = "0x962258", VA = "0x962258")]
	public EnduranceGameObjectAppearancePositionHelper()
	{
	}
}
[Token(Token = "0x200020E")]
public class ObjectAppearancePositionHelper : MonoBehaviour
{
	[Token(Token = "0x4000BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected float[] playAreaBoundary;

	[Token(Token = "0x4000BB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected PlayAreaService playAreaService;

	[Token(Token = "0x4000BB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected Transform leftHand;

	[Token(Token = "0x4000BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected Transform rightHand;

	[Token(Token = "0x4000BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static float distanceFromHandForObjectCreation;

	[Token(Token = "0x4000BB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static float[] aroundHandBounds;

	[Token(Token = "0x4000BB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected static float distanceFromPlayerMin;

	[Token(Token = "0x1700013E")]
	public static float DistanceFromHandForObjectCreation
	{
		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0xC81454", Offset = "0xC81454", VA = "0xC81454")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700013F")]
	public static float DistanceFromPlayerMin
	{
		[Token(Token = "0x6000D10")]
		[Address(RVA = "0xC814B8", Offset = "0xC814B8", VA = "0xC814B8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000D11")]
	[Address(RVA = "0xC8151C", Offset = "0xC8151C", VA = "0xC8151C")]
	public void setPlayAreaBoundary()
	{
	}

	[Token(Token = "0x6000D12")]
	[Address(RVA = "0xC8155C", Offset = "0xC8155C", VA = "0xC8155C")]
	public bool isPositionCollidingWithPlayerHand(Vector3 pos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D13")]
	[Address(RVA = "0xC81564", Offset = "0xC81564", VA = "0xC81564")]
	private float[] getAreaOccupiedByHand(Vector3 handPos)
	{
		return null;
	}

	[Token(Token = "0x6000D14")]
	[Address(RVA = "0xC816C0", Offset = "0xC816C0", VA = "0xC816C0")]
	public List<Area3D> getValidObjectAppearanceAreasAroundPlayerHands(float minX, float maxX, float minY, float maxY, float minZ, float maxZ, float objectSize)
	{
		return null;
	}

	[Token(Token = "0x6000D15")]
	[Address(RVA = "0xC820F0", Offset = "0xC820F0", VA = "0xC820F0")]
	public List<Area3D> getValidObjectAppearanceAreasAroundPlayerHandsYOnly(float minX, float maxX, float minY, float maxY, float minZ, float maxZ, float objectSize)
	{
		return null;
	}

	[Token(Token = "0x6000D16")]
	[Address(RVA = "0xC82160", Offset = "0xC82160", VA = "0xC82160")]
	public List<Area3D> getValidObjectAppearanceAreasAroundPlayerHandsYOnly(float[] bounds, float objectSize)
	{
		return null;
	}

	[Token(Token = "0x6000D17")]
	[Address(RVA = "0xC81A4C", Offset = "0xC81A4C", VA = "0xC81A4C")]
	protected List<Transform> getHandsWithinCreationRange(float minX, float maxX, float minY, float maxY, float minZ, float maxZ)
	{
		return null;
	}

	[Token(Token = "0x6000D18")]
	[Address(RVA = "0xC81C50", Offset = "0xC81C50", VA = "0xC81C50")]
	private void addCreationAreaBetweenHandsVertical(List<Area3D> validCreationAreas, Transform leftMostObject, Transform rightMostObject, Transform lowestObject, Transform highestObject, Transform mostBackObject, Transform mostForwardObject)
	{
	}

	[Token(Token = "0x6000D19")]
	[Address(RVA = "0xC81DB4", Offset = "0xC81DB4", VA = "0xC81DB4")]
	private void addCreationAreaBetweenHandsHorizontal(List<Area3D> validCreationAreas, Transform leftMostObject, Transform rightMostObject, Transform backMostObject, Transform forwardMostObject, float minY, float maxY)
	{
	}

	[Token(Token = "0x6000D1A")]
	[Address(RVA = "0xC81F40", Offset = "0xC81F40", VA = "0xC81F40")]
	private List<Area3D> addValidCreationAreasAroundObject(List<Area3D> validCreationAreas, float minX, float maxX, float minY, float maxY, float minZ, float maxZ, float objectHalfSize, float leftMostPositionToAvoid, float rightMostPositionToAvoid, float lowestPositionToAvoid, float highestPositionToAvoid, float mostBackPosToAvoid, float mostForwardPosToAvoid, float distanceFromObject)
	{
		return null;
	}

	[Token(Token = "0x6000D1B")]
	[Address(RVA = "0xC8230C", Offset = "0xC8230C", VA = "0xC8230C")]
	private void addCreationAreaFromHighestObjectToMaxYLimit(List<Area3D> validCreationAreas, float yPos, float maxY, float minX, float maxX, float minZ, float maxZ, float minDistance)
	{
	}

	[Token(Token = "0x6000D1C")]
	[Address(RVA = "0xC82220", Offset = "0xC82220", VA = "0xC82220")]
	private void addCreationAreaFromLowestObjectToMinYLimit(List<Area3D> validCreationAreas, float yPos, float minY, float minX, float maxX, float minZ, float maxZ, float minDistance)
	{
	}

	[Token(Token = "0x6000D1D")]
	[Address(RVA = "0xC823F8", Offset = "0xC823F8", VA = "0xC823F8")]
	public ObjectAppearancePositionHelper()
	{
	}
}
[Token(Token = "0x200020F")]
public class PositionAndRotationContainer
{
	[Token(Token = "0x4000BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Vector3 position;

	[Token(Token = "0x4000BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 rotation;

	[Token(Token = "0x4000BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 appearanceStartPosition;

	[Token(Token = "0x17000140")]
	public Vector3 Position
	{
		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0xA07170", Offset = "0xA07170", VA = "0xA07170")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000D20")]
		[Address(RVA = "0xA0717C", Offset = "0xA0717C", VA = "0xA0717C")]
		set
		{
		}
	}

	[Token(Token = "0x17000141")]
	public Vector3 Rotation
	{
		[Token(Token = "0x6000D21")]
		[Address(RVA = "0xA07188", Offset = "0xA07188", VA = "0xA07188")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000D22")]
		[Address(RVA = "0xA07194", Offset = "0xA07194", VA = "0xA07194")]
		set
		{
		}
	}

	[Token(Token = "0x17000142")]
	public Vector3 AppearanceStartPosition
	{
		[Token(Token = "0x6000D23")]
		[Address(RVA = "0xA071A0", Offset = "0xA071A0", VA = "0xA071A0")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000D24")]
		[Address(RVA = "0xA071AC", Offset = "0xA071AC", VA = "0xA071AC")]
		set
		{
		}
	}

	[Token(Token = "0x6000D25")]
	[Address(RVA = "0xA071B8", Offset = "0xA071B8", VA = "0xA071B8")]
	public PositionAndRotationContainer()
	{
	}
}
[Token(Token = "0x2000210")]
public class DisableFracturedParts : MonoBehaviour
{
	[Token(Token = "0x4000BBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string FRACTURED_PART;

	[Token(Token = "0x6000D26")]
	[Address(RVA = "0x959AEC", Offset = "0x959AEC", VA = "0x959AEC")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000D27")]
	[Address(RVA = "0x959BC0", Offset = "0x959BC0", VA = "0x959BC0")]
	public DisableFracturedParts()
	{
	}
}
[Token(Token = "0x2000211")]
public class FracturedPart : MonoBehaviour
{
	[Token(Token = "0x4000BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private FracturedPartsController fracturedPartsController;

	[Token(Token = "0x4000BBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private DateTime collidedWithPlayerTime;

	[Token(Token = "0x4000BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool performCleanUpPosCheck;

	[Token(Token = "0x17000143")]
	public bool PerformCleanUpPosCheck
	{
		[Token(Token = "0x6000D29")]
		[Address(RVA = "0x9EC500", Offset = "0x9EC500", VA = "0x9EC500")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0x9EC508", Offset = "0x9EC508", VA = "0x9EC508")]
		set
		{
		}
	}

	[Token(Token = "0x6000D2B")]
	[Address(RVA = "0x9EC514", Offset = "0x9EC514", VA = "0x9EC514")]
	public void setCollidedWithPlayerTime(DateTime dateTime)
	{
	}

	[Token(Token = "0x6000D2C")]
	[Address(RVA = "0x9EC51C", Offset = "0x9EC51C", VA = "0x9EC51C")]
	public void OnTriggerEnter(Collider collision)
	{
	}

	[Token(Token = "0x6000D2D")]
	[Address(RVA = "0x9EC760", Offset = "0x9EC760", VA = "0x9EC760")]
	private bool enoughTimePassedSincePlayerInteraction()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D2E")]
	[Address(RVA = "0x9EC6F8", Offset = "0x9EC6F8", VA = "0x9EC6F8")]
	private bool isPlayDisappearanceEffectOnCollisionWithOtherFragment(GameObject other)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D2F")]
	[Address(RVA = "0x9EC804", Offset = "0x9EC804", VA = "0x9EC804")]
	public FracturedPart()
	{
	}
}
[Token(Token = "0x2000212")]
public class FracturedPartsController : MonoBehaviour
{
	[Token(Token = "0x2000213")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CDAC", Offset = "0x69CDAC")]
	private sealed class <setCollidersToTriggerCoroutine>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FracturedPartsController <>4__this;

		[Token(Token = "0x17000144")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D4B")]
			[Address(RVA = "0x14C5988", Offset = "0x14C5988", VA = "0x14C5988", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000145")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D4D")]
			[Address(RVA = "0x14C59D0", Offset = "0x14C59D0", VA = "0x14C59D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D48")]
		[Address(RVA = "0x14C57F0", Offset = "0x14C57F0", VA = "0x14C57F0")]
		[DebuggerHidden]
		public <setCollidersToTriggerCoroutine>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6000D49")]
		[Address(RVA = "0x14C581C", Offset = "0x14C581C", VA = "0x14C581C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0x14C5820", Offset = "0x14C5820", VA = "0x14C5820", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0x14C5990", Offset = "0x14C5990", VA = "0x14C5990", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000214")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CDBC", Offset = "0x69CDBC")]
	private sealed class <reassembleCoroutine>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FracturedPartsController <>4__this;

		[Token(Token = "0x17000146")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D51")]
			[Address(RVA = "0x14C57A0", Offset = "0x14C57A0", VA = "0x14C57A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000147")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D53")]
			[Address(RVA = "0x14C57E8", Offset = "0x14C57E8", VA = "0x14C57E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0x14C56FC", Offset = "0x14C56FC", VA = "0x14C56FC")]
		[DebuggerHidden]
		public <reassembleCoroutine>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0x14C5728", Offset = "0x14C5728", VA = "0x14C5728", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D50")]
		[Address(RVA = "0x14C572C", Offset = "0x14C572C", VA = "0x14C572C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0x14C57A8", Offset = "0x14C57A8", VA = "0x14C57A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject[] relatedFragments;

	[Token(Token = "0x4000BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<BoxCollider> relatedFragmentsBoxColliders;

	[Token(Token = "0x4000BC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Rigidbody> relatedFragmentsRigidBodies;

	[Token(Token = "0x4000BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<FracturedPart> relatedFragmentsFracturedParts;

	[Token(Token = "0x4000BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<LocalPositionAndRotationResetter> relatedFragmentsPosReseters;

	[Token(Token = "0x4000BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Renderer> childRenderers;

	[Token(Token = "0x4000BC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Coroutine activeSetCollidersToTriggerCoroutine;

	[Token(Token = "0x4000BC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject sphere;

	[Token(Token = "0x4000BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float force;

	[Token(Token = "0x4000BC7")]
	public const string FRACTURED_PART_TAG = "fracturedPart";

	[Token(Token = "0x4000BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool fragmentationStarted;

	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Coroutine activeReassembleCoroutine;

	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private CoordinationCoachPoolController poolController;

	[Token(Token = "0x4000BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private WaitForSeconds waitForOneSecond;

	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private WaitForSeconds waitForThreeSeconds;

	[Token(Token = "0x4000BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Material anyHandMaterial;

	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Material leftHandOnlyMaterial;

	[Token(Token = "0x4000BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Material rightHandOnlyMaterial;

	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Material doNotTouchMaterial;

	[Token(Token = "0x6000D30")]
	[Address(RVA = "0x9EC80C", Offset = "0x9EC80C", VA = "0x9EC80C")]
	public void initialize()
	{
	}

	[Token(Token = "0x6000D31")]
	[Address(RVA = "0x9ECA24", Offset = "0x9ECA24", VA = "0x9ECA24")]
	public void setPoolController(CoordinationCoachPoolController poolController)
	{
	}

	[Token(Token = "0x6000D32")]
	[Address(RVA = "0x9ECA2C", Offset = "0x9ECA2C", VA = "0x9ECA2C")]
	public void activateFragmentation()
	{
	}

	[Token(Token = "0x6000D33")]
	[Address(RVA = "0x9ECB2C", Offset = "0x9ECB2C", VA = "0x9ECB2C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A7934", Offset = "0x6A7934")]
	private IEnumerator setCollidersToTriggerCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000D34")]
	[Address(RVA = "0x9ECA8C", Offset = "0x9ECA8C", VA = "0x9ECA8C")]
	private void stopActiveSetCollidersToTriggerCoroutine()
	{
	}

	[Token(Token = "0x6000D35")]
	[Address(RVA = "0x9ECBA4", Offset = "0x9ECBA4", VA = "0x9ECBA4")]
	private void startReassembleCoroutine()
	{
	}

	[Token(Token = "0x6000D36")]
	[Address(RVA = "0x9ECC0C", Offset = "0x9ECC0C", VA = "0x9ECC0C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A7994", Offset = "0x6A7994")]
	private IEnumerator reassembleCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000D37")]
	[Address(RVA = "0x9ECC84", Offset = "0x9ECC84", VA = "0x9ECC84")]
	public void reassembleAndReturnToPool()
	{
	}

	[Token(Token = "0x6000D38")]
	[Address(RVA = "0x9ED0CC", Offset = "0x9ED0CC", VA = "0x9ED0CC")]
	public void reasembleIfNecessary()
	{
	}

	[Token(Token = "0x6000D39")]
	[Address(RVA = "0x9ECCE0", Offset = "0x9ECCE0", VA = "0x9ECCE0")]
	private void resetAndReassembleParts()
	{
	}

	[Token(Token = "0x6000D3A")]
	[Address(RVA = "0x9ECAD4", Offset = "0x9ECAD4", VA = "0x9ECAD4")]
	private void setFragmentationValues(bool input)
	{
	}

	[Token(Token = "0x6000D3B")]
	[Address(RVA = "0x9ED49C", Offset = "0x9ED49C", VA = "0x9ED49C")]
	public void setFragmentationStarted(bool input)
	{
	}

	[Token(Token = "0x6000D3C")]
	[Address(RVA = "0x9ED4A8", Offset = "0x9ED4A8", VA = "0x9ED4A8")]
	public bool isFragmentationStarted()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D3D")]
	[Address(RVA = "0x9ED4B0", Offset = "0x9ED4B0", VA = "0x9ED4B0")]
	public void addForceToChildrenAwayFromCollision(Vector3 collisionPosition)
	{
	}

	[Token(Token = "0x6000D3E")]
	[Address(RVA = "0x9ED124", Offset = "0x9ED124", VA = "0x9ED124")]
	private void activateCollidersOnFragments(bool value)
	{
	}

	[Token(Token = "0x6000D3F")]
	[Address(RVA = "0x9ED37C", Offset = "0x9ED37C", VA = "0x9ED37C")]
	private void activateCleanups(bool value)
	{
	}

	[Token(Token = "0x6000D40")]
	[Address(RVA = "0x9ED250", Offset = "0x9ED250", VA = "0x9ED250")]
	private void activateGravity(bool value)
	{
	}

	[Token(Token = "0x6000D41")]
	[Address(RVA = "0x9ED104", Offset = "0x9ED104", VA = "0x9ED104")]
	private void setSphereActive(bool input)
	{
	}

	[Token(Token = "0x6000D42")]
	[Address(RVA = "0x9ED668", Offset = "0x9ED668", VA = "0x9ED668")]
	public void setPlayerHitTime(DateTime playerHitTime)
	{
	}

	[Token(Token = "0x6000D43")]
	[Address(RVA = "0x9EC61C", Offset = "0x9EC61C", VA = "0x9EC61C")]
	public bool isFracturedPartFromDifferentObject(GameObject fracturedPart)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D44")]
	[Address(RVA = "0x9ED784", Offset = "0x9ED784", VA = "0x9ED784")]
	public void setMaterialOnChildren(CoordinationCoachGameObject.ActivationType activationType)
	{
	}

	[Token(Token = "0x6000D45")]
	[Address(RVA = "0x9ED80C", Offset = "0x9ED80C", VA = "0x9ED80C")]
	private void setMaterialOnChildRenderers(Material inputMaterial)
	{
	}

	[Token(Token = "0x6000D46")]
	[Address(RVA = "0x9ED7C8", Offset = "0x9ED7C8", VA = "0x9ED7C8")]
	private Material getMaterial(CoordinationCoachGameObject.ActivationType activationType)
	{
		return null;
	}

	[Token(Token = "0x6000D47")]
	[Address(RVA = "0x9ED934", Offset = "0x9ED934", VA = "0x9ED934")]
	public FracturedPartsController()
	{
	}
}
[Token(Token = "0x2000215")]
public class FragmentingCoordinationCoachObject : CoordinationCoachGameObject
{
	[Token(Token = "0x2000216")]
	public enum CurrentSpecialAction
	{
		[Token(Token = "0x4000BE3")]
		NONE,
		[Token(Token = "0x4000BE4")]
		DODGING_OTHER_OBJECT,
		[Token(Token = "0x4000BE5")]
		NORMAL_STRAFING
	}

	[Token(Token = "0x4000BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	[SerializeField]
	protected GameObject appearanceEffectPrefab_ANY_HAND;

	[Token(Token = "0x4000BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	[SerializeField]
	protected GameObject appearanceEffectPrefab_LEFT_HAND_ONLY;

	[Token(Token = "0x4000BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	[SerializeField]
	protected GameObject appearanceEffectPrefab_RIGHT_HAND_ONLY;

	[Token(Token = "0x4000BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	[SerializeField]
	protected GameObject appearanceEffectPrefab_DO_NOT_TOUCH;

	[Token(Token = "0x4000BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	protected CurrentSpecialAction currentAction;

	[Token(Token = "0x4000BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	protected GameObject preInstantiatedFracturedPrefab;

	[Token(Token = "0x4000BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	protected GameObject preInstantiatedPlayerScoredEffect;

	[Token(Token = "0x4000BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	[SerializeField]
	protected GameObject prefabToInstantiateOnDestruction_Any_Hand;

	[Token(Token = "0x4000BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	[SerializeField]
	protected GameObject prefabToInstantiateOnDestruction_Left_Hand_Only;

	[Token(Token = "0x4000BE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	[SerializeField]
	protected GameObject prefabToInstantiateOnDestruction_Right_Hand_Only;

	[Token(Token = "0x4000BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	[SerializeField]
	protected GameObject prefabToInstantiateOnDestruction_Do_Not_Touch;

	[Token(Token = "0x6000D54")]
	[Address(RVA = "0x9EDB5C", Offset = "0x9EDB5C", VA = "0x9EDB5C")]
	public void setFracturedPrefab(GameObject preInstantiatedFracturedPrefab)
	{
	}

	[Token(Token = "0x6000D55")]
	[Address(RVA = "0x9EDB6C", Offset = "0x9EDB6C", VA = "0x9EDB6C")]
	public GameObject getPreInstantiatedFracturedPrefab()
	{
		return null;
	}

	[Token(Token = "0x6000D56")]
	[Address(RVA = "0x9EDB74", Offset = "0x9EDB74", VA = "0x9EDB74", Slot = "16")]
	protected override void instantiatePlayerScoredEffect()
	{
	}

	[Token(Token = "0x6000D57")]
	[Address(RVA = "0x9EDD9C", Offset = "0x9EDD9C", VA = "0x9EDD9C")]
	protected void playCollisionEffectAndActivateFracturedPrefab(GameObject effectToPlay, bool hitPlayer, Collider collider, bool playerLostPoint)
	{
	}

	[Token(Token = "0x6000D58")]
	[Address(RVA = "0x9EE0C8", Offset = "0x9EE0C8", VA = "0x9EE0C8")]
	public bool isPreInstantiatedFracturedPrefabValid()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D59")]
	[Address(RVA = "0x9EDF40", Offset = "0x9EDF40", VA = "0x9EDF40")]
	private void playCollisionEffect(GameObject effectToPlay, bool hitPlayer, Collider collider, bool playerLostPoint)
	{
	}

	[Token(Token = "0x6000D5A")]
	[Address(RVA = "0x9EE1C8", Offset = "0x9EE1C8", VA = "0x9EE1C8")]
	public void instantiateFracturedPrefab()
	{
	}

	[Token(Token = "0x6000D5B")]
	[Address(RVA = "0x9EE418", Offset = "0x9EE418", VA = "0x9EE418", Slot = "117")]
	protected virtual GameObject getPrefabToInstantiateOnDestruction(ActivationType activationType)
	{
		return null;
	}

	[Token(Token = "0x6000D5C")]
	[Address(RVA = "0x9EE45C", Offset = "0x9EE45C", VA = "0x9EE45C", Slot = "81")]
	protected override bool checkIfDestinationReached()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D5D")]
	[Address(RVA = "0x9EE4C4", Offset = "0x9EE4C4", VA = "0x9EE4C4", Slot = "109")]
	protected override void onPausedSpecific()
	{
	}

	[Token(Token = "0x6000D5E")]
	[Address(RVA = "0x9EE58C", Offset = "0x9EE58C", VA = "0x9EE58C")]
	public FragmentingCoordinationCoachObject()
	{
	}
}
[Token(Token = "0x2000217")]
public class CoordinationCoachGlobalConstants : MonoBehaviour
{
	[Token(Token = "0x4000BE6")]
	public const string playerHeadObjectTag = "Player";

	[Token(Token = "0x4000BE7")]
	public const string playerContainerObjectTag = "PlayerContainer";

	[Token(Token = "0x4000BE8")]
	public const string playerLeftHandTag = "LeftHand";

	[Token(Token = "0x4000BE9")]
	public const string playerRightHandTag = "RightHand";

	[Token(Token = "0x4000BEA")]
	public const string WALL_OR_FLOOR_TAG = "wallOrFloor";

	[Token(Token = "0x4000BEB")]
	public const float NULL_VECTOR_X_VALUE = -66f;

	[Token(Token = "0x4000BEC")]
	public const float SOUND_VOLUME = 0.5f;

	[Token(Token = "0x4000BED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float OBJECT_DISAPPEARANCE_MINUS_Y;

	[Token(Token = "0x4000BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int EFFECT_DURATION;

	[Token(Token = "0x4000BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string COORDINATION_COACH_NAME;

	[Token(Token = "0x4000BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static float TUTORIAL_SCREEN_Z_POS;

	[Token(Token = "0x4000BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static float DISTANCE_FROM_PLAYER_HAND;

	[Token(Token = "0x4000BF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static float PLAYER_HEIGHT_REDUCTION_FOR_PLAY_AREA_CALC;

	[Token(Token = "0x4000BF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static float PLAYER_HEIGHT_INCREASE_FOR_PLAY_AREA_CALC;

	[Token(Token = "0x6000D5F")]
	[Address(RVA = "0xA727D4", Offset = "0xA727D4", VA = "0xA727D4")]
	public CoordinationCoachGlobalConstants()
	{
	}
}
[Token(Token = "0x2000218")]
public class HeadsetActiveObserver : MonoBehaviour
{
	[Token(Token = "0x6000D61")]
	[Address(RVA = "0x9FCA00", Offset = "0x9FCA00", VA = "0x9FCA00", Slot = "4")]
	public virtual bool isHeadsetActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D62")]
	[Address(RVA = "0x9FCA08", Offset = "0x9FCA08", VA = "0x9FCA08")]
	public HeadsetActiveObserver()
	{
	}
}
[Token(Token = "0x2000219")]
public class OculusHeadSetActiveObserver : HeadsetActiveObserver
{
	[Token(Token = "0x6000D63")]
	[Address(RVA = "0xACC618", Offset = "0xACC618", VA = "0xACC618", Slot = "4")]
	public override bool isHeadsetActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D64")]
	[Address(RVA = "0xACC674", Offset = "0xACC674", VA = "0xACC674")]
	public OculusHeadSetActiveObserver()
	{
	}
}
[Token(Token = "0x200021A")]
public class OculusHeadsetActiveTester : MonoBehaviour
{
	[Token(Token = "0x4000BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private HeadsetActiveObserver headsetActiveObserver;

	[Token(Token = "0x6000D65")]
	[Address(RVA = "0xACC67C", Offset = "0xACC67C", VA = "0xACC67C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D66")]
	[Address(RVA = "0xACC6D8", Offset = "0xACC6D8", VA = "0xACC6D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D67")]
	[Address(RVA = "0xACC7A8", Offset = "0xACC7A8", VA = "0xACC7A8")]
	public OculusHeadsetActiveTester()
	{
	}
}
[Token(Token = "0x200021B")]
public class UnityXRHeadsetActiveObserver : HeadsetActiveObserver
{
	[Token(Token = "0x6000D68")]
	[Address(RVA = "0x14EAC40", Offset = "0x14EAC40", VA = "0x14EAC40", Slot = "4")]
	public override bool isHeadsetActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D69")]
	[Address(RVA = "0x14EACD8", Offset = "0x14EACD8", VA = "0x14EACD8")]
	public UnityXRHeadsetActiveObserver()
	{
	}
}
[Token(Token = "0x200021C")]
public class UnityXRHeadsetEventListener : MonoBehaviour
{
	[Token(Token = "0x200021D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CDCC", Offset = "0x69CDCC")]
	private sealed class <enableHeadsetCheckCoroutine>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityXRHeadsetEventListener <>4__this;

		[Token(Token = "0x17000148")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D71")]
			[Address(RVA = "0x14847B4", Offset = "0x14847B4", VA = "0x14847B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000149")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D73")]
			[Address(RVA = "0x14847FC", Offset = "0x14847FC", VA = "0x14847FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0x14846CC", Offset = "0x14846CC", VA = "0x14846CC")]
		[DebuggerHidden]
		public <enableHeadsetCheckCoroutine>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0x14846F8", Offset = "0x14846F8", VA = "0x14846F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0x14846FC", Offset = "0x14846FC", VA = "0x14846FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0x14847BC", Offset = "0x14847BC", VA = "0x14847BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GamePausedController gamePausedController;

	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool performHeadsetPresentCheck;

	[Token(Token = "0x6000D6A")]
	[Address(RVA = "0x14EACE0", Offset = "0x14EACE0", VA = "0x14EACE0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D6B")]
	[Address(RVA = "0x14EAD0C", Offset = "0x14EAD0C", VA = "0x14EAD0C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A7A94", Offset = "0x6A7A94")]
	private IEnumerator enableHeadsetCheckCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000D6C")]
	[Address(RVA = "0x14EAD84", Offset = "0x14EAD84", VA = "0x14EAD84")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D6D")]
	[Address(RVA = "0x14EAE48", Offset = "0x14EAE48", VA = "0x14EAE48")]
	public UnityXRHeadsetEventListener()
	{
	}
}
[Token(Token = "0x200021E")]
public class MainMenuController : MonoBehaviour
{
	[Token(Token = "0x200021F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CDDC", Offset = "0x69CDDC")]
	private sealed class <fadeOutCurrentAndFadeInNextMenuElements>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MainMenuController <>4__this;

		[Token(Token = "0x4000C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<GameObject> currentMenuItems;

		[Token(Token = "0x4000C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<GameObject> nextMenuItems;

		[Token(Token = "0x1700014A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D90")]
			[Address(RVA = "0x14913D4", Offset = "0x14913D4", VA = "0x14913D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D92")]
			[Address(RVA = "0x149141C", Offset = "0x149141C", VA = "0x149141C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0x14912A8", Offset = "0x14912A8", VA = "0x14912A8")]
		[DebuggerHidden]
		public <fadeOutCurrentAndFadeInNextMenuElements>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0x14912D4", Offset = "0x14912D4", VA = "0x14912D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0x14912D8", Offset = "0x14912D8", VA = "0x14912D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D91")]
		[Address(RVA = "0x14913DC", Offset = "0x14913DC", VA = "0x14913DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BFA")]
	private const string SCRIPT_NAME = "MainMenuController";

	[Token(Token = "0x4000BFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AdvancedUIFader advancedUIFader;

	[Token(Token = "0x4000BFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject welcomeScreenTopLevelComponent;

	[Token(Token = "0x4000BFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject playAreaNotSetTopLevelComponent;

	[Token(Token = "0x4000BFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject selectPlayStyleTopLevelComponent;

	[Token(Token = "0x4000BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject selectGameModeTopLevelComponent;

	[Token(Token = "0x4000C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject selectTargetTouchSubGameModeTopLevelComponents;

	[Token(Token = "0x4000C01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject selectGameDifficultyTopLevelComponent;

	[Token(Token = "0x4000C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private ScreenFadeService screenFadeService;

	[Token(Token = "0x4000C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private MainMenuGameStartSetupService mainMenuGameStartSetupService;

	[Token(Token = "0x4000C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int gameModeArraysPosition;

	[Token(Token = "0x4000C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<GameObject> welcomeScreenList;

	[Token(Token = "0x4000C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<GameObject> playAreaNotSetScreenList;

	[Token(Token = "0x4000C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<GameObject> playStyleSelectionList;

	[Token(Token = "0x4000C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<List<GameObject>> targetObjectSubMenus;

	[Token(Token = "0x4000C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<List<GameObject>> blockIncomingObjectsSubMenus;

	[Token(Token = "0x4000C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private List<List<GameObject>> enduranceSubMenus;

	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private GameObject selectBlockObjectsSubModeMenuTopLevelObject;

	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private GameObject selectEnduranceSubModeMenuTopLevelObject;

	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private GameObject selectEnduranceSquatTopLevelObject;

	[Token(Token = "0x4000C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private GameModeParameterContainerController.GameModeSelectionEnum currentlySelectedGameMode;

	[Token(Token = "0x4000C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private AudioController audioController;

	[Token(Token = "0x4000C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Dictionary<GameModeParameterContainerController.GameModeSelectionEnum, List<List<GameObject>>> gameModeButtonsMap;

	[Token(Token = "0x4000C11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ButtonActivationController buttonActivationController;

	[Token(Token = "0x4000C12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private List<GameObject> gameModeSelectionList;

	[Token(Token = "0x4000C13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Coroutine activeCoroutine;

	[Token(Token = "0x4000C14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool showingWelcomeScreen;

	[Token(Token = "0x4000C15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
	private bool showingResetBoundaries;

	[Token(Token = "0x6000D74")]
	[Address(RVA = "0xD8A1AC", Offset = "0xD8A1AC", VA = "0xD8A1AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D75")]
	[Address(RVA = "0xD8A3BC", Offset = "0xD8A3BC", VA = "0xD8A3BC")]
	private void setUpGameObjects()
	{
	}

	[Token(Token = "0x6000D76")]
	[Address(RVA = "0xD8A55C", Offset = "0xD8A55C", VA = "0xD8A55C")]
	private void setupTargetObjectMenuItems()
	{
	}

	[Token(Token = "0x6000D77")]
	[Address(RVA = "0xD8A6CC", Offset = "0xD8A6CC", VA = "0xD8A6CC")]
	private void setupBlockIncomingObjectsMenuItems()
	{
	}

	[Token(Token = "0x6000D78")]
	[Address(RVA = "0xD8A83C", Offset = "0xD8A83C", VA = "0xD8A83C")]
	private void setupEnduranceMenuItems()
	{
	}

	[Token(Token = "0x6000D79")]
	[Address(RVA = "0xD8A9D8", Offset = "0xD8A9D8", VA = "0xD8A9D8")]
	private void stopActiveCoroutine()
	{
	}

	[Token(Token = "0x6000D7A")]
	[Address(RVA = "0xD8AA20", Offset = "0xD8AA20", VA = "0xD8AA20")]
	public AudioController getAudioController()
	{
		return null;
	}

	[Token(Token = "0x6000D7B")]
	[Address(RVA = "0xD8AA28", Offset = "0xD8AA28", VA = "0xD8AA28")]
	public void setGameMode(GameModeParameterContainerController.GameModeSelectionEnum gameModeSelectionEnum)
	{
	}

	[Token(Token = "0x6000D7C")]
	[Address(RVA = "0xD8ACEC", Offset = "0xD8ACEC", VA = "0xD8ACEC")]
	private List<GameObject> getObjectsToShow()
	{
		return null;
	}

	[Token(Token = "0x6000D7D")]
	[Address(RVA = "0xD8AAF4", Offset = "0xD8AAF4", VA = "0xD8AAF4")]
	public void loadNextMenuItems()
	{
	}

	[Token(Token = "0x6000D7E")]
	[Address(RVA = "0xD89FBC", Offset = "0xD89FBC", VA = "0xD89FBC")]
	public void loadPreviousMenuItems()
	{
	}

	[Token(Token = "0x6000D7F")]
	[Address(RVA = "0xD8B0AC", Offset = "0xD8B0AC", VA = "0xD8B0AC")]
	public void setGameModeDifficultyDueToButtonClick(GameModeValues.GameAndSubModeDifficulty gameAndSubModeDifficulty, SetGameDifficultyPerformOnInteraction buttonSelectedScript)
	{
	}

	[Token(Token = "0x6000D80")]
	[Address(RVA = "0xD8B1DC", Offset = "0xD8B1DC", VA = "0xD8B1DC")]
	public void setGameModeCreateHandSpecificObjects(bool createHandSpecificObjects)
	{
	}

	[Token(Token = "0x6000D81")]
	[Address(RVA = "0xD8B2CC", Offset = "0xD8B2CC", VA = "0xD8B2CC")]
	public void setPlayerHandInfiniteEnergy(bool playerHandInfiniteEnergy)
	{
	}

	[Token(Token = "0x6000D82")]
	[Address(RVA = "0xD8B3BC", Offset = "0xD8B3BC", VA = "0xD8B3BC")]
	public void setPlayerInfiniteHealth(bool infiniteHealth)
	{
	}

	[Token(Token = "0x6000D83")]
	[Address(RVA = "0xD8B0E8", Offset = "0xD8B0E8", VA = "0xD8B0E8")]
	private void setGameDifficultyUpdateTextAndSavePreferences(GameModeValues.GameAndSubModeDifficulty gameAndSubModeDifficulty)
	{
	}

	[Token(Token = "0x6000D84")]
	[Address(RVA = "0xD8B4AC", Offset = "0xD8B4AC", VA = "0xD8B4AC")]
	public void setSkipTutorial(bool input)
	{
	}

	[Token(Token = "0x6000D85")]
	[Address(RVA = "0xD8B004", Offset = "0xD8B004", VA = "0xD8B004")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A7B44", Offset = "0x6A7B44")]
	private IEnumerator fadeOutCurrentAndFadeInNextMenuElements(List<GameObject> currentMenuItems, List<GameObject> nextMenuItems)
	{
		return null;
	}

	[Token(Token = "0x6000D86")]
	[Address(RVA = "0xD8ADF0", Offset = "0xD8ADF0", VA = "0xD8ADF0")]
	private List<GameObject> getVisibleGameModeDifficultySettingObjectPresent(List<GameObject> visibleObjects)
	{
		return null;
	}

	[Token(Token = "0x6000D87")]
	[Address(RVA = "0xD8B564", Offset = "0xD8B564", VA = "0xD8B564")]
	public void startGame()
	{
	}

	[Token(Token = "0x6000D88")]
	[Address(RVA = "0xD8B6C0", Offset = "0xD8B6C0", VA = "0xD8B6C0")]
	public void setTargetTouchGameMode(TargetTouchGameModeParameterContainer.TARGET_TOUCH_ACTIVE_GAME_MODE gameMode)
	{
	}

	[Token(Token = "0x6000D89")]
	[Address(RVA = "0xD8B7C8", Offset = "0xD8B7C8", VA = "0xD8B7C8")]
	public void setBlockIncomingGameMode(BlockIncomingObjectsParameterContainer.BLOCK_INCOMING_OBJECTS_SUB_GAME_MODES gameMode)
	{
	}

	[Token(Token = "0x6000D8A")]
	[Address(RVA = "0xD8B8E4", Offset = "0xD8B8E4", VA = "0xD8B8E4")]
	public void setEnduranceGameMode(EnduranceGameModeParameterContainer.ENDURANCE_GAME_MODES gameMode)
	{
	}

	[Token(Token = "0x6000D8B")]
	[Address(RVA = "0xD8B9EC", Offset = "0xD8B9EC", VA = "0xD8B9EC")]
	public void setEnduranceSquat(bool squat)
	{
	}

	[Token(Token = "0x6000D8C")]
	[Address(RVA = "0xD8BAA8", Offset = "0xD8BAA8", VA = "0xD8BAA8")]
	public MainMenuController()
	{
	}
}
[Token(Token = "0x2000220")]
public static class WelcomeScreenCompletedController
{
	[Token(Token = "0x4000C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool welcomeScreenCompleted;

	[Token(Token = "0x6000D93")]
	[Address(RVA = "0x14EFE30", Offset = "0x14EFE30", VA = "0x14EFE30")]
	public static bool isWelcomeScreenCompleted()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D94")]
	[Address(RVA = "0x14EFE94", Offset = "0x14EFE94", VA = "0x14EFE94")]
	public static void setWelcomeScreenCompletedTrue()
	{
	}
}
[Token(Token = "0x2000221")]
public class MainMenuGameStartSetupService : MonoBehaviour
{
	[Token(Token = "0x6000D96")]
	[Address(RVA = "0xD8BC64", Offset = "0xD8BC64", VA = "0xD8BC64", Slot = "4")]
	public virtual void performGameStartSetup()
	{
	}

	[Token(Token = "0x6000D97")]
	[Address(RVA = "0xD8BC68", Offset = "0xD8BC68", VA = "0xD8BC68")]
	public MainMenuGameStartSetupService()
	{
	}
}
[Token(Token = "0x2000222")]
public class PicoMainMenuGameStartSetupService : MainMenuGameStartSetupService
{
	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform player;

	[Token(Token = "0x6000D98")]
	[Address(RVA = "0xA64DA0", Offset = "0xA64DA0", VA = "0xA64DA0", Slot = "4")]
	public override void performGameStartSetup()
	{
	}

	[Token(Token = "0x6000D99")]
	[Address(RVA = "0xA64FEC", Offset = "0xA64FEC", VA = "0xA64FEC")]
	public PicoMainMenuGameStartSetupService()
	{
	}
}
[Token(Token = "0x2000223")]
public class CalculatePositionsWithinBoundaryService : MonoBehaviour
{
	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Vector3> positionsWithinBoundarySectors;

	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float[] playAreaBoundary;

	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 middleOfBoundary;

	[Token(Token = "0x4000C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 maxZMiddleXPos;

	[Token(Token = "0x4000C21")]
	private const float MAX_Z_REDUCTION = 0.2f;

	[Token(Token = "0x6000D9A")]
	[Address(RVA = "0xF24480", Offset = "0xF24480", VA = "0xF24480")]
	public void setPlayAreaBoundary(float[] boundaries)
	{
	}

	[Token(Token = "0x6000D9B")]
	[Address(RVA = "0xF2458C", Offset = "0xF2458C", VA = "0xF2458C")]
	public List<Vector3> getPositionsWithinBoundarySectors()
	{
		return null;
	}

	[Token(Token = "0x6000D9C")]
	[Address(RVA = "0xF24594", Offset = "0xF24594", VA = "0xF24594")]
	public void calculateQuarterPositionsWithinBoundaries(float xRendererBounds, float zRendererBounds)
	{
	}

	[Token(Token = "0x6000D9D")]
	[Address(RVA = "0xF24710", Offset = "0xF24710", VA = "0xF24710")]
	private void addIfWithinBounds(Vector3 pos, float xRendererBounds, float zRendererBounds)
	{
	}

	[Token(Token = "0x6000D9E")]
	[Address(RVA = "0xF2481C", Offset = "0xF2481C", VA = "0xF2481C")]
	public Vector3 getMiddleOfBoundaryPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000D9F")]
	[Address(RVA = "0xF24828", Offset = "0xF24828", VA = "0xF24828")]
	public Vector3 getMaxZMiddleXPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000DA0")]
	[Address(RVA = "0xF24894", Offset = "0xF24894", VA = "0xF24894")]
	public CalculatePositionsWithinBoundaryService()
	{
	}
}
[Token(Token = "0x2000224")]
public class MovementWithinBoundaryController : MonoBehaviour
{
	[Token(Token = "0x2000225")]
	public enum MOVEMENT
	{
		[Token(Token = "0x4000C2A")]
		NONE,
		[Token(Token = "0x4000C2B")]
		LEFT,
		[Token(Token = "0x4000C2C")]
		RIGHT,
		[Token(Token = "0x4000C2D")]
		FORWARD,
		[Token(Token = "0x4000C2E")]
		BACK,
		[Token(Token = "0x4000C2F")]
		DOWN,
		[Token(Token = "0x4000C30")]
		UP,
		[Token(Token = "0x4000C31")]
		ROTATE_LEFT,
		[Token(Token = "0x4000C32")]
		ROTATE_RIGHT,
		[Token(Token = "0x4000C33")]
		CORRECTIONAL
	}

	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected PlayAreaService playAreaService;

	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ObjectMovementWithinBoundsService objectMovementWithinBoundsService;

	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private PositionToRotateAroundService positionToRotateAroundService;

	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float[] playAreaBoundary;

	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool movementStarted;

	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<GameObject> childGameObjects;

	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Rigidbody my_RigidBody;

	[Token(Token = "0x1700014C")]
	public List<GameObject> ChildGameObjects
	{
		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0xC74828", Offset = "0xC74828", VA = "0xC74828")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0xC74830", Offset = "0xC74830", VA = "0xC74830")]
		set
		{
		}
	}

	[Token(Token = "0x6000DA3")]
	[Address(RVA = "0xC74838", Offset = "0xC74838", VA = "0xC74838")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DA4")]
	[Address(RVA = "0xC74894", Offset = "0xC74894", VA = "0xC74894")]
	public Rigidbody getRigidBody()
	{
		return null;
	}

	[Token(Token = "0x6000DA5")]
	[Address(RVA = "0xC74948", Offset = "0xC74948", VA = "0xC74948")]
	public void performSetup()
	{
	}

	[Token(Token = "0x6000DA6")]
	[Address(RVA = "0xC74AB0", Offset = "0xC74AB0", VA = "0xC74AB0", Slot = "4")]
	public virtual void setMovementBoundaries()
	{
	}

	[Token(Token = "0x6000DA7")]
	[Address(RVA = "0xC74CF8", Offset = "0xC74CF8", VA = "0xC74CF8")]
	public void setMovementStarted(bool input)
	{
	}

	[Token(Token = "0x6000DA8")]
	[Address(RVA = "0xC74D04", Offset = "0xC74D04", VA = "0xC74D04")]
	public void stopMovement()
	{
	}

	[Token(Token = "0x6000DA9")]
	[Address(RVA = "0xC74D98", Offset = "0xC74D98", VA = "0xC74D98")]
	public void resetValues()
	{
	}

	[Token(Token = "0x6000DAA")]
	[Address(RVA = "0xC74DD0", Offset = "0xC74DD0", VA = "0xC74DD0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000DAB")]
	[Address(RVA = "0xC74E10", Offset = "0xC74E10", VA = "0xC74E10")]
	private void moveChildObjects()
	{
	}

	[Token(Token = "0x6000DAC")]
	[Address(RVA = "0xC7512C", Offset = "0xC7512C", VA = "0xC7512C")]
	public void stopAllCoroutinesForTesting()
	{
	}

	[Token(Token = "0x6000DAD")]
	[Address(RVA = "0xC75134", Offset = "0xC75134", VA = "0xC75134")]
	public ObjectMovementWithinBoundsService getObjectMovementWithinBoundsService()
	{
		return null;
	}

	[Token(Token = "0x6000DAE")]
	[Address(RVA = "0xC7513C", Offset = "0xC7513C", VA = "0xC7513C")]
	public MovementWithinBoundaryController()
	{
	}
}
[Token(Token = "0x2000226")]
public class ObjectMovementWithinBoundsService : MonoBehaviour
{
	[Token(Token = "0x2000227")]
	protected enum MOVEMENT_MODE
	{
		[Token(Token = "0x4000C4A")]
		DIRECT,
		[Token(Token = "0x4000C4B")]
		CURVED
	}

	[Token(Token = "0x4000C34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AllowedMovementsService allowedMovementsService;

	[Token(Token = "0x4000C35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private CalculatedRendererBoundsContainer calculatedRendererBoundsContainer;

	[Token(Token = "0x4000C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private CalculatePositionsWithinBoundaryService calculatePositionsWithinBoundaryService;

	[Token(Token = "0x4000C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RotationWithinBoundaryController rotationWithinBoundaryController;

	[Token(Token = "0x4000C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject positionCheckGameObject;

	[Token(Token = "0x4000C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Rigidbody my_RigidBody;

	[Token(Token = "0x4000C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float[] playAreaBoundary;

	[Token(Token = "0x4000C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ConcurrentDictionary<MovementWithinBoundaryController.MOVEMENT, Vector3> currentMovements;

	[Token(Token = "0x4000C3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool performInitialPositionCheck;

	[Token(Token = "0x4000C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<Vector3> farEnoughSectors;

	[Token(Token = "0x4000C3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private BezierCurveController bezierCurveController;

	[Token(Token = "0x4000C3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 currentMovementStartPosition;

	[Token(Token = "0x4000C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 destination;

	[Token(Token = "0x4000C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected float mTimer;

	[Token(Token = "0x4000C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float journeyTime;

	[Token(Token = "0x4000C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected float bezierJourneyTime;

	[Token(Token = "0x4000C44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	protected float bezierMovementSpeed;

	[Token(Token = "0x4000C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected MOVEMENT_MODE currentMovementMode;

	[Token(Token = "0x4000C46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	protected float lerpJourneyTimeMultiplier;

	[Token(Token = "0x4000C47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected float maxJourneyDistance;

	[Token(Token = "0x4000C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Vector3 noIdeaWhyThisIsNeeded;

	[Token(Token = "0x1700014D")]
	public bool PerformInitialPositionCheck
	{
		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0xC84A68", Offset = "0xC84A68", VA = "0xC84A68")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0xC84A8C", Offset = "0xC84A8C", VA = "0xC84A8C")]
		set
		{
		}
	}

	[Token(Token = "0x6000DB1")]
	[Address(RVA = "0xC74960", Offset = "0xC74960", VA = "0xC74960")]
	public void performSetup()
	{
	}

	[Token(Token = "0x6000DB2")]
	[Address(RVA = "0xC84AB8", Offset = "0xC84AB8", VA = "0xC84AB8")]
	private void setupPositionCheckGameObject()
	{
	}

	[Token(Token = "0x6000DB3")]
	[Address(RVA = "0xC74D40", Offset = "0xC74D40", VA = "0xC74D40")]
	public void resetValues()
	{
	}

	[Token(Token = "0x6000DB4")]
	[Address(RVA = "0xC74C84", Offset = "0xC74C84", VA = "0xC74C84")]
	public void setPlayAreaBoundary(float[] boundaries)
	{
	}

	[Token(Token = "0x6000DB5")]
	[Address(RVA = "0xC84CF0", Offset = "0xC84CF0", VA = "0xC84CF0")]
	private void setPositionOfPositionCheckGameObjectToCurrentPosition()
	{
	}

	[Token(Token = "0x6000DB6")]
	[Address(RVA = "0xC74EE4", Offset = "0xC74EE4", VA = "0xC74EE4")]
	public void performMovement()
	{
	}

	[Token(Token = "0x6000DB7")]
	[Address(RVA = "0xC84DB0", Offset = "0xC84DB0", VA = "0xC84DB0")]
	private bool checkIfCurrentPosWithinAllowedBoundary()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DB8")]
	[Address(RVA = "0xC855D8", Offset = "0xC855D8", VA = "0xC855D8")]
	public void filterSectorsForDistance(List<Vector3> sectors)
	{
	}

	[Token(Token = "0x6000DB9")]
	[Address(RVA = "0xC857D0", Offset = "0xC857D0", VA = "0xC857D0")]
	private void updateFarEnoughSectors(float[] bounds)
	{
	}

	[Token(Token = "0x6000DBA")]
	[Address(RVA = "0xC85838", Offset = "0xC85838", VA = "0xC85838")]
	private void moveToRandomSector()
	{
	}

	[Token(Token = "0x6000DBB")]
	[Address(RVA = "0xC85974", Offset = "0xC85974", VA = "0xC85974")]
	private void moveToMaxZ()
	{
	}

	[Token(Token = "0x6000DBC")]
	[Address(RVA = "0xC84F14", Offset = "0xC84F14", VA = "0xC84F14")]
	private void startNewMovements(bool canChangeMovementMode)
	{
	}

	[Token(Token = "0x6000DBD")]
	[Address(RVA = "0xC85A0C", Offset = "0xC85A0C", VA = "0xC85A0C")]
	private void calculateNewMovements(bool canChangeMovementMode)
	{
	}

	[Token(Token = "0x6000DBE")]
	[Address(RVA = "0xC84E8C", Offset = "0xC84E8C", VA = "0xC84E8C")]
	private void moveToRandomSectorOrMaxZ()
	{
	}

	[Token(Token = "0x6000DBF")]
	[Address(RVA = "0xC862A4", Offset = "0xC862A4", VA = "0xC862A4")]
	public void repositionPositionCheckGameObject(Vector3 pos)
	{
	}

	[Token(Token = "0x6000DC0")]
	[Address(RVA = "0xC84BD0", Offset = "0xC84BD0", VA = "0xC84BD0")]
	private void clearCurrentMovements()
	{
	}

	[Token(Token = "0x6000DC1")]
	[Address(RVA = "0xC85440", Offset = "0xC85440", VA = "0xC85440")]
	private void performNormalGameMovement()
	{
	}

	[Token(Token = "0x6000DC2")]
	[Address(RVA = "0xC84C24", Offset = "0xC84C24", VA = "0xC84C24")]
	public void updateVectorOfCurrentMovementStartPosition()
	{
	}

	[Token(Token = "0x6000DC3")]
	[Address(RVA = "0xC85C84", Offset = "0xC85C84", VA = "0xC85C84")]
	private void setDestinationToCurrentPosition()
	{
	}

	[Token(Token = "0x6000DC4")]
	[Address(RVA = "0xC860D8", Offset = "0xC860D8", VA = "0xC860D8")]
	private void addOneMovementToCurrentMovements(List<MovementWithinBoundaryController.MOVEMENT> movements)
	{
	}

	[Token(Token = "0x6000DC5")]
	[Address(RVA = "0xC85928", Offset = "0xC85928", VA = "0xC85928")]
	private void updateLerpJourneyTimeMultiplier()
	{
	}

	[Token(Token = "0x6000DC6")]
	[Address(RVA = "0xC86170", Offset = "0xC86170", VA = "0xC86170")]
	private void updateBezierCurveValues()
	{
	}

	[Token(Token = "0x6000DC7")]
	[Address(RVA = "0xC84F20", Offset = "0xC84F20", VA = "0xC84F20")]
	private MovementWithinBoundaryController.MOVEMENT getRotationalMovementFromCurrentMovements()
	{
		return default(MovementWithinBoundaryController.MOVEMENT);
	}

	[Token(Token = "0x6000DC8")]
	[Address(RVA = "0xC851B0", Offset = "0xC851B0", VA = "0xC851B0")]
	private MovementWithinBoundaryController.MOVEMENT getVerticalMovementInCurrentMovements()
	{
		return default(MovementWithinBoundaryController.MOVEMENT);
	}

	[Token(Token = "0x6000DC9")]
	[Address(RVA = "0xC86338", Offset = "0xC86338", VA = "0xC86338")]
	private Vector3 getPointOnBezierCurve(float mTimerValue)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000DCA")]
	[Address(RVA = "0xC8632C", Offset = "0xC8632C", VA = "0xC8632C")]
	private float getMTimerCorrectedBezier(float mTimer)
	{
		return default(float);
	}

	[Token(Token = "0x6000DCB")]
	[Address(RVA = "0xC866E0", Offset = "0xC866E0", VA = "0xC866E0")]
	protected float getBezierCurveDistance()
	{
		return default(float);
	}

	[Token(Token = "0x6000DCC")]
	[Address(RVA = "0xC8559C", Offset = "0xC8559C", VA = "0xC8559C")]
	private bool checkMovementFinished(MovementWithinBoundaryController.MOVEMENT movement)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DCD")]
	[Address(RVA = "0xC85F10", Offset = "0xC85F10", VA = "0xC85F10")]
	private Vector3 changeDestinationDueToMovement(MovementWithinBoundaryController.MOVEMENT movement)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000DCE")]
	[Address(RVA = "0xC86468", Offset = "0xC86468", VA = "0xC86468")]
	private MovementWithinBoundaryController.MOVEMENT getCurrentMovementBackForward()
	{
		return default(MovementWithinBoundaryController.MOVEMENT);
	}

	[Token(Token = "0x6000DCF")]
	[Address(RVA = "0xC868E4", Offset = "0xC868E4", VA = "0xC868E4")]
	private float getLinearMovementAmount(float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000DD0")]
	[Address(RVA = "0xC86934", Offset = "0xC86934", VA = "0xC86934")]
	private bool isBackForwardMovement(MovementWithinBoundaryController.MOVEMENT movement)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DD1")]
	[Address(RVA = "0xC86950", Offset = "0xC86950", VA = "0xC86950", Slot = "4")]
	protected virtual void updateMovementMode()
	{
	}

	[Token(Token = "0x6000DD2")]
	[Address(RVA = "0xC86988", Offset = "0xC86988", VA = "0xC86988")]
	private void addOneOfAllowedMovements(List<MovementWithinBoundaryController.MOVEMENT> movementsToPerform, List<MovementWithinBoundaryController.MOVEMENT> allowedSubMovements)
	{
	}

	[Token(Token = "0x6000DD3")]
	[Address(RVA = "0xC85E7C", Offset = "0xC85E7C", VA = "0xC85E7C")]
	private MovementWithinBoundaryController.MOVEMENT getOneOfAllowedMovements(List<MovementWithinBoundaryController.MOVEMENT> allowedSubMovements)
	{
		return default(MovementWithinBoundaryController.MOVEMENT);
	}

	[Token(Token = "0x6000DD4")]
	[Address(RVA = "0xC85CBC", Offset = "0xC85CBC", VA = "0xC85CBC")]
	private List<MovementWithinBoundaryController.MOVEMENT> getAllowedLeftRightMovements()
	{
		return null;
	}

	[Token(Token = "0x6000DD5")]
	[Address(RVA = "0xC85D9C", Offset = "0xC85D9C", VA = "0xC85D9C")]
	private List<MovementWithinBoundaryController.MOVEMENT> getAllowedBackForwardMovements()
	{
		return null;
	}

	[Token(Token = "0x6000DD6")]
	[Address(RVA = "0xC868AC", Offset = "0xC868AC", VA = "0xC868AC")]
	private bool isRotationalMovement(MovementWithinBoundaryController.MOVEMENT movement)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DD7")]
	[Address(RVA = "0xC868C8", Offset = "0xC868C8", VA = "0xC868C8")]
	private bool isUpDownMovement(MovementWithinBoundaryController.MOVEMENT movement)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DD8")]
	[Address(RVA = "0xC86A50", Offset = "0xC86A50", VA = "0xC86A50")]
	public ObjectMovementWithinBoundsService()
	{
	}
}
[Token(Token = "0x2000228")]
public class AllowedMovementRotationConstants
{
	[Token(Token = "0x4000C4C")]
	public const int FIRST_ROTATION_LIMIT = 300;

	[Token(Token = "0x4000C4D")]
	public const int SECOND_ROTATION_LIMIT = 60;

	[Token(Token = "0x4000C4E")]
	public const int THIRD_ROTATION_LIMIT = 120;

	[Token(Token = "0x4000C4F")]
	public const int FOURTH_ROTATION_LIMIT = 240;

	[Token(Token = "0x6000DD9")]
	[Address(RVA = "0x14A1C80", Offset = "0x14A1C80", VA = "0x14A1C80")]
	public AllowedMovementRotationConstants()
	{
	}
}
[Token(Token = "0x2000229")]
public class AllowedMovementsService : MonoBehaviour
{
	[Token(Token = "0x4000C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private CalculatedRendererBoundsContainer calculatedRendererBoundsContainer;

	[Token(Token = "0x4000C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private CheckBackMovementAllowedService checkBackMovementAllowedService;

	[Token(Token = "0x4000C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private CheckForwardMovementAllowedService checkForwardMovementAllowedService;

	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private CheckLeftMovementAllowedService checkLeftMovementAllowedService;

	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private CheckRightMovementAllowedService checkRightMovementAllowedService;

	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float[] currentRendererBounds;

	[Token(Token = "0x4000C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float[] playAreaBoundary;

	[Token(Token = "0x6000DDA")]
	[Address(RVA = "0x14A1C88", Offset = "0x14A1C88", VA = "0x14A1C88")]
	public void setPlayAreaBoundary(float[] boundaries)
	{
	}

	[Token(Token = "0x6000DDB")]
	[Address(RVA = "0x14A1C90", Offset = "0x14A1C90", VA = "0x14A1C90")]
	public void setCurrentRendererBounds(float[] bounds)
	{
	}

	[Token(Token = "0x6000DDC")]
	[Address(RVA = "0x14A1C98", Offset = "0x14A1C98", VA = "0x14A1C98")]
	public bool canMoveBack()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DDD")]
	[Address(RVA = "0x14A1DB0", Offset = "0x14A1DB0", VA = "0x14A1DB0")]
	public bool canMoveForward()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DDE")]
	[Address(RVA = "0x14A1EC8", Offset = "0x14A1EC8", VA = "0x14A1EC8")]
	public bool canMoveLeft()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DDF")]
	[Address(RVA = "0x14A1FD0", Offset = "0x14A1FD0", VA = "0x14A1FD0")]
	public bool canMoveRight()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DE0")]
	[Address(RVA = "0x14A20D8", Offset = "0x14A20D8", VA = "0x14A20D8")]
	public List<MovementWithinBoundaryController.MOVEMENT> getAllowedVerticalMovements()
	{
		return null;
	}

	[Token(Token = "0x6000DE1")]
	[Address(RVA = "0x14A21A8", Offset = "0x14A21A8", VA = "0x14A21A8")]
	public bool checkIfMoveDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DE2")]
	[Address(RVA = "0x14A2250", Offset = "0x14A2250", VA = "0x14A2250")]
	public bool checkIfMoveUp()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DE3")]
	[Address(RVA = "0x14A2304", Offset = "0x14A2304", VA = "0x14A2304")]
	public AllowedMovementsService()
	{
	}
}
[Token(Token = "0x200022A")]
public class CheckBackMovementAllowedService : MonoBehaviour
{
	[Token(Token = "0x4000C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private CalculatedRendererBoundsContainer calculatedRendererBoundsContainer;

	[Token(Token = "0x6000DE4")]
	[Address(RVA = "0xF29AD4", Offset = "0xF29AD4", VA = "0xF29AD4")]
	public bool canMoveBack(Vector3 pos, float rendererBoundsX, float rendererBoundsZ, float minX, float maxX, float minZ, float maxZ)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DE5")]
	[Address(RVA = "0xF29C90", Offset = "0xF29C90", VA = "0xF29C90")]
	public CheckBackMovementAllowedService()
	{
	}
}
[Token(Token = "0x200022B")]
public class CheckForwardMovementAllowedService : MonoBehaviour
{
	[Token(Token = "0x4000C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private CalculatedRendererBoundsContainer calculatedRendererBoundsContainer;

	[Token(Token = "0x6000DE6")]
	[Address(RVA = "0xF29C98", Offset = "0xF29C98", VA = "0xF29C98")]
	public bool canMoveForward(Vector3 pos, float rendererBoundsX, float rendererBoundsZ, float minX, float maxX, float minZ, float maxZ)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DE7")]
	[Address(RVA = "0xF29E90", Offset = "0xF29E90", VA = "0xF29E90")]
	public CheckForwardMovementAllowedService()
	{
	}
}
[Token(Token = "0x200022C")]
public class CheckLeftMovementAllowedService : MonoBehaviour
{
	[Token(Token = "0x6000DE8")]
	[Address(RVA = "0xF29E98", Offset = "0xF29E98", VA = "0xF29E98")]
	public bool canMoveLeft(Vector3 pos, float rendererBoundsX, float rendererBoundsZ, float minX, float maxX, float minZ, float maxZ)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DE9")]
	[Address(RVA = "0xF2A090", Offset = "0xF2A090", VA = "0xF2A090")]
	public CheckLeftMovementAllowedService()
	{
	}
}
[Token(Token = "0x200022D")]
public class CheckRightMovementAllowedService : MonoBehaviour
{
	[Token(Token = "0x6000DEA")]
	[Address(RVA = "0xF2A098", Offset = "0xF2A098", VA = "0xF2A098")]
	public bool canMoveRight(Vector3 pos, float rendererBoundsX, float rendererBoundsZ, float minX, float maxX, float minZ, float maxZ)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DEB")]
	[Address(RVA = "0xF2A290", Offset = "0xF2A290", VA = "0xF2A290")]
	public CheckRightMovementAllowedService()
	{
	}
}
[Token(Token = "0x200022E")]
public class CalculatedRendererBoundsContainer : MonoBehaviour
{
	[Token(Token = "0x4000C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float[] currentRendererBounds;

	[Token(Token = "0x4000C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float[] forwardMovementRendererBounds;

	[Token(Token = "0x4000C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float[] backMovementRendererBounds;

	[Token(Token = "0x4000C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float xBoundsForCalculations;

	[Token(Token = "0x4000C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float zBoundsForCalculations;

	[Token(Token = "0x4000C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float xBoundsForRotationCalculations;

	[Token(Token = "0x4000C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float zBoundsForRotationCalculations;

	[Token(Token = "0x4000C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float movementTowardsPlayerBounds;

	[Token(Token = "0x4000C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float movementAwayFromPlayerBounds;

	[Token(Token = "0x4000C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float[] rendererBoundsMovement;

	[Token(Token = "0x4000C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float[] rendererBoundsRotation;

	[Token(Token = "0x4000C64")]
	private const float LEFT_RIGHT_BOUNDARY_CHECK_DIVIDER = 2.1f;

	[Token(Token = "0x4000C65")]
	private const float FORWARD_BACK_BOUNDARY_CHECK_DIVIDER = 2f;

	[Token(Token = "0x4000C66")]
	private const float LEFT_RIGHT_ROTATION_DIVIDER = 1.75f;

	[Token(Token = "0x4000C67")]
	private const float FORWARD_BACK_ROTATION_DIVIDER = 1.75f;

	[Token(Token = "0x4000C68")]
	private const float MOVEMENT_TOWARDS_PLAYER_DIVIDER = 1.05f;

	[Token(Token = "0x4000C69")]
	private const float MOVEMENT_AWAY_FROM_PLAYER_DIVIDER = 2.65f;

	[Token(Token = "0x6000DEC")]
	[Address(RVA = "0xF24974", Offset = "0xF24974", VA = "0xF24974")]
	public void calculateMovementRendererBounds()
	{
	}

	[Token(Token = "0x6000DED")]
	[Address(RVA = "0xF24B98", Offset = "0xF24B98", VA = "0xF24B98")]
	public float[] getRendererBoundsMovement()
	{
		return null;
	}

	[Token(Token = "0x6000DEE")]
	[Address(RVA = "0xF24B74", Offset = "0xF24B74", VA = "0xF24B74")]
	public void updateAllRendererBounds()
	{
	}

	[Token(Token = "0x6000DEF")]
	[Address(RVA = "0xF24BA0", Offset = "0xF24BA0", VA = "0xF24BA0")]
	private void updateMovementRendererBounds()
	{
	}

	[Token(Token = "0x6000DF0")]
	[Address(RVA = "0xF24E0C", Offset = "0xF24E0C", VA = "0xF24E0C")]
	public float[] getRotationRendererBounds(Transform inputTransform)
	{
		return null;
	}

	[Token(Token = "0x6000DF1")]
	[Address(RVA = "0xF24CA4", Offset = "0xF24CA4", VA = "0xF24CA4")]
	public void updateForwardBackRendererBounds()
	{
	}

	[Token(Token = "0x6000DF2")]
	[Address(RVA = "0xF24F18", Offset = "0xF24F18", VA = "0xF24F18")]
	public float[] getForwardMovementRendererBounds()
	{
		return null;
	}

	[Token(Token = "0x6000DF3")]
	[Address(RVA = "0xF24F20", Offset = "0xF24F20", VA = "0xF24F20")]
	public float[] getBackMovementRendererBounds()
	{
		return null;
	}

	[Token(Token = "0x6000DF4")]
	[Address(RVA = "0xF24F28", Offset = "0xF24F28", VA = "0xF24F28")]
	public CalculatedRendererBoundsContainer()
	{
	}
}
[Token(Token = "0x200022F")]
public class PositionToRotateAroundService : MonoBehaviour
{
	[Token(Token = "0x6000DF5")]
	[Address(RVA = "0xA075D0", Offset = "0xA075D0", VA = "0xA075D0")]
	public Vector3 getBackPositionForRotatingAround()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000DF6")]
	[Address(RVA = "0xA07658", Offset = "0xA07658", VA = "0xA07658")]
	public PositionToRotateAroundService()
	{
	}
}
[Token(Token = "0x2000230")]
public class RotationWithinBoundaryController : MonoBehaviour
{
	[Token(Token = "0x4000C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected PlayAreaService playAreaService;

	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject positionCheckGameObject;

	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private PositionToRotateAroundService positionToRotateAroundService;

	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private CalculatedRendererBoundsContainer calculatedRendererBoundsContainer;

	[Token(Token = "0x4000C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float[] playAreaBoundary;

	[Token(Token = "0x4000C6F")]
	private const int ROTATION_DEGREES_45 = 45;

	[Token(Token = "0x4000C70")]
	private const int ROTATION_DEGREES_90 = 90;

	[Token(Token = "0x4000C71")]
	private const int ROTATION_DEGREES_180 = 180;

	[Token(Token = "0x4000C72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int leftMaxRotation;

	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int rightMaxRotation;

	[Token(Token = "0x4000C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float startRotation;

	[Token(Token = "0x4000C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int currentRotationDirection;

	[Token(Token = "0x4000C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int currentAmountToRotate;

	[Token(Token = "0x4000C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 positionToRotateAround;

	[Token(Token = "0x4000C78")]
	private const int LEFT_ROTATION_DIRECTION = -1;

	[Token(Token = "0x4000C79")]
	private const int RIGHT_ROTATION_DIRECTION = 1;

	[Token(Token = "0x6000DF7")]
	[Address(RVA = "0xA1113C", Offset = "0xA1113C", VA = "0xA1113C")]
	public void setPlayAreaBoundary(float[] boundaries)
	{
	}

	[Token(Token = "0x6000DF8")]
	[Address(RVA = "0xA11144", Offset = "0xA11144", VA = "0xA11144", Slot = "4")]
	public virtual void setMovementBoundaries()
	{
	}

	[Token(Token = "0x6000DF9")]
	[Address(RVA = "0xA11308", Offset = "0xA11308", VA = "0xA11308")]
	public void rotateObject()
	{
	}

	[Token(Token = "0x6000DFA")]
	[Address(RVA = "0xA11434", Offset = "0xA11434", VA = "0xA11434")]
	public void setRotationDirection(MovementWithinBoundaryController.MOVEMENT movement)
	{
	}

	[Token(Token = "0x6000DFB")]
	[Address(RVA = "0xA11448", Offset = "0xA11448", VA = "0xA11448")]
	public void setRotationAmount(MovementWithinBoundaryController.MOVEMENT movement)
	{
	}

	[Token(Token = "0x6000DFC")]
	[Address(RVA = "0xA114A4", Offset = "0xA114A4", VA = "0xA114A4")]
	private bool canRotateLeft()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DFD")]
	[Address(RVA = "0xA11664", Offset = "0xA11664", VA = "0xA11664")]
	public bool canRotateRight()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DFE")]
	[Address(RVA = "0xA116D4", Offset = "0xA116D4", VA = "0xA116D4", Slot = "5")]
	public virtual List<MovementWithinBoundaryController.MOVEMENT> getAllowedRotationalMovements()
	{
		return null;
	}

	[Token(Token = "0x6000DFF")]
	[Address(RVA = "0xA11514", Offset = "0xA11514", VA = "0xA11514")]
	private bool checkRotationPossible(int rotationDirection, int rotationAmountForCheck)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E00")]
	[Address(RVA = "0xA117A4", Offset = "0xA117A4", VA = "0xA117A4")]
	public bool checkRotationFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E01")]
	[Address(RVA = "0xA1193C", Offset = "0xA1193C", VA = "0xA1193C")]
	private float getCorrectedDegreesWithMinusDegrees(float degree)
	{
		return default(float);
	}

	[Token(Token = "0x6000E02")]
	[Address(RVA = "0xA11960", Offset = "0xA11960", VA = "0xA11960")]
	private float getCorrectedDegrees(float degree)
	{
		return default(float);
	}

	[Token(Token = "0x6000E03")]
	[Address(RVA = "0xA11980", Offset = "0xA11980", VA = "0xA11980")]
	public void calculateNewRotationMovement(MovementWithinBoundaryController.MOVEMENT rotationalMovementToPerform)
	{
	}

	[Token(Token = "0x6000E04")]
	[Address(RVA = "0xA11ABC", Offset = "0xA11ABC", VA = "0xA11ABC")]
	public void updatePositionToRotateAround()
	{
	}

	[Token(Token = "0x6000E05")]
	[Address(RVA = "0xA11AF0", Offset = "0xA11AF0", VA = "0xA11AF0")]
	public RotationWithinBoundaryController()
	{
	}
}
[Token(Token = "0x2000231")]
public class MakeObjectSeeThrough : MonoBehaviour
{
	[Token(Token = "0x4000C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer rendererOfObject;

	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject gameObjectOfThisScript;

	[Token(Token = "0x6000E06")]
	[Address(RVA = "0xD8BDB0", Offset = "0xD8BDB0", VA = "0xD8BDB0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E07")]
	[Address(RVA = "0xD8BE0C", Offset = "0xD8BE0C", VA = "0xD8BE0C")]
	public void setObjectVisible(bool input)
	{
	}

	[Token(Token = "0x6000E08")]
	[Address(RVA = "0xD8BED4", Offset = "0xD8BED4", VA = "0xD8BED4")]
	public MakeObjectSeeThrough()
	{
	}
}
[Token(Token = "0x2000232")]
public class MaterialEmissionChanger : MonoBehaviour
{
	[Token(Token = "0x2000233")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CDEC", Offset = "0x69CDEC")]
	private sealed class <changeEmission>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MaterialEmissionChanger <>4__this;

		[Token(Token = "0x4000C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color emissionTargetInCoroutine;

		[Token(Token = "0x1700014E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E13")]
			[Address(RVA = "0x1491578", Offset = "0x1491578", VA = "0x1491578", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E15")]
			[Address(RVA = "0x14915C0", Offset = "0x14915C0", VA = "0x14915C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E10")]
		[Address(RVA = "0x1491424", Offset = "0x1491424", VA = "0x1491424")]
		[DebuggerHidden]
		public <changeEmission>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000E11")]
		[Address(RVA = "0x1491450", Offset = "0x1491450", VA = "0x1491450", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E12")]
		[Address(RVA = "0x1491454", Offset = "0x1491454", VA = "0x1491454", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0x1491580", Offset = "0x1491580", VA = "0x1491580", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float startTime;

	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float progress;

	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private WaitForSeconds waitForFiveMillis;

	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Coroutine currentCoroutine;

	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material materialToChange;

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Color emissionTargetColor;

	[Token(Token = "0x6000E09")]
	[Address(RVA = "0xD8BEE8", Offset = "0xD8BEE8", VA = "0xD8BEE8")]
	public void setup(Color emissionTargetColor)
	{
	}

	[Token(Token = "0x6000E0A")]
	[Address(RVA = "0xD8BEF4", Offset = "0xD8BEF4", VA = "0xD8BEF4")]
	public void updateMaterial(Material material)
	{
	}

	[Token(Token = "0x6000E0B")]
	[Address(RVA = "0xD8BEFC", Offset = "0xD8BEFC", VA = "0xD8BEFC")]
	public void stopEmissionChange()
	{
	}

	[Token(Token = "0x6000E0C")]
	[Address(RVA = "0xD8BFD8", Offset = "0xD8BFD8", VA = "0xD8BFD8")]
	public void startEmissionChangeFromZero()
	{
	}

	[Token(Token = "0x6000E0D")]
	[Address(RVA = "0xD8C0C0", Offset = "0xD8C0C0", VA = "0xD8C0C0")]
	public void restartEmissionChange()
	{
	}

	[Token(Token = "0x6000E0E")]
	[Address(RVA = "0xD8C020", Offset = "0xD8C020", VA = "0xD8C020")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A7BF4", Offset = "0x6A7BF4")]
	private IEnumerator changeEmission(Color emissionTargetInCoroutine)
	{
		return null;
	}

	[Token(Token = "0x6000E0F")]
	[Address(RVA = "0xD8C104", Offset = "0xD8C104", VA = "0xD8C104")]
	public MaterialEmissionChanger()
	{
	}
}
[Token(Token = "0x2000234")]
public interface UpdateAppearanceEffectColorInterface
{
	[Token(Token = "0x6000E16")]
	void updateAppearanceEffectColors(CoordinationCoachGameObject.ActivationType activationType);
}
[Token(Token = "0x2000235")]
public static class AreaAroundPlayerHandsCalculationService
{
	[Token(Token = "0x4000C87")]
	private const float OBJECT_SIZE_MULTIPLIER = 1.2f;

	[Token(Token = "0x6000E17")]
	[Address(RVA = "0x14A6338", Offset = "0x14A6338", VA = "0x14A6338")]
	public static List<Area3D> getAreasSplitY(float minX, float maxX, float minY, float maxY, float minZ, float maxZ, float objectSize, List<Transform> handsWithinCreationArea)
	{
		return null;
	}

	[Token(Token = "0x6000E18")]
	[Address(RVA = "0x14A6E7C", Offset = "0x14A6E7C", VA = "0x14A6E7C")]
	private static List<Area3D> addAreasBellowAndAboveHands(float minX, float maxX, float minY, float maxY, float minZ, float maxZ, float lowestHandPos, float highestHandPos, float objectSize)
	{
		return null;
	}

	[Token(Token = "0x6000E19")]
	[Address(RVA = "0x14A6B00", Offset = "0x14A6B00", VA = "0x14A6B00")]
	private static List<Area3D> correctAreasIfNecessary(List<Area3D> areas, float minX, float maxX, float minY, float maxY, float minZ, float maxZ, float lowestHandPos, float highestHandPos, float objectSize)
	{
		return null;
	}

	[Token(Token = "0x6000E1A")]
	[Address(RVA = "0x14A677C", Offset = "0x14A677C", VA = "0x14A677C")]
	private static List<float[]> getYValuesOfCreationAreas(float yMin, float yMax, float objectSize)
	{
		return null;
	}

	[Token(Token = "0x6000E1B")]
	[Address(RVA = "0x14A68AC", Offset = "0x14A68AC", VA = "0x14A68AC")]
	private static List<Area3D> createAreasForYValues(float minX, float maxX, List<float[]> yValuesList, float minZ, float maxZ)
	{
		return null;
	}
}
[Token(Token = "0x2000236")]
public class FollowPlayerCamera : MonoBehaviour
{
	[Token(Token = "0x4000C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform playerCamera;

	[Token(Token = "0x6000E1C")]
	[Address(RVA = "0x96A978", Offset = "0x96A978", VA = "0x96A978")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E1D")]
	[Address(RVA = "0x96A9C4", Offset = "0x96A9C4", VA = "0x96A9C4")]
	public FollowPlayerCamera()
	{
	}
}
[Token(Token = "0x2000237")]
public class LocalPositionAndRotationResetter : MonoBehaviour
{
	[Token(Token = "0x4000C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 startingLocalPosition;

	[Token(Token = "0x4000C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Quaternion startingRotation;

	[Token(Token = "0x6000E1E")]
	[Address(RVA = "0xD7F148", Offset = "0xD7F148", VA = "0xD7F148")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E1F")]
	[Address(RVA = "0xD7F1A4", Offset = "0xD7F1A4", VA = "0xD7F1A4")]
	public void resetToStartingLocalPositionAndRotation()
	{
	}

	[Token(Token = "0x6000E20")]
	[Address(RVA = "0xD7F1FC", Offset = "0xD7F1FC", VA = "0xD7F1FC")]
	public LocalPositionAndRotationResetter()
	{
	}
}
[Token(Token = "0x2000238")]
public class MoveToTransformPositionEveryUpdate : MonoBehaviour
{
	[Token(Token = "0x4000C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform transformFromWhichToCopyPos;

	[Token(Token = "0x6000E21")]
	[Address(RVA = "0xC747D4", Offset = "0xC747D4", VA = "0xC747D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E22")]
	[Address(RVA = "0xC74820", Offset = "0xC74820", VA = "0xC74820")]
	public MoveToTransformPositionEveryUpdate()
	{
	}
}
[Token(Token = "0x2000239")]
public class ObjectMiddlePointChecker : MonoBehaviour
{
	[Token(Token = "0x4000C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject wormHolePrefab;

	[Token(Token = "0x6000E23")]
	[Address(RVA = "0xC8475C", Offset = "0xC8475C", VA = "0xC8475C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E24")]
	[Address(RVA = "0xC849BC", Offset = "0xC849BC", VA = "0xC849BC")]
	public ObjectMiddlePointChecker()
	{
	}
}
[Token(Token = "0x200023A")]
public class ObjectMovementDirectionHelper : MonoBehaviour
{
	[Token(Token = "0x200023B")]
	public enum directionToMoveInEnum
	{
		[Token(Token = "0x4000C8E")]
		LEFT,
		[Token(Token = "0x4000C8F")]
		RIGHT,
		[Token(Token = "0x4000C90")]
		DOWN,
		[Token(Token = "0x4000C91")]
		UP
	}

	[Token(Token = "0x6000E25")]
	[Address(RVA = "0xC849C4", Offset = "0xC849C4", VA = "0xC849C4")]
	public static directionToMoveInEnum getOppositeHorizontalDirection(directionToMoveInEnum direction)
	{
		return default(directionToMoveInEnum);
	}

	[Token(Token = "0x6000E26")]
	[Address(RVA = "0xC849E4", Offset = "0xC849E4", VA = "0xC849E4")]
	public static directionToMoveInEnum getOppositeHorizontalDirection(Transform objectChecking, Transform otherObject)
	{
		return default(directionToMoveInEnum);
	}

	[Token(Token = "0x6000E27")]
	[Address(RVA = "0xC84A08", Offset = "0xC84A08", VA = "0xC84A08")]
	public static directionToMoveInEnum getOppositeVerticalDirection(float transformToMoveY, float otherTransformY)
	{
		return default(directionToMoveInEnum);
	}

	[Token(Token = "0x6000E28")]
	[Address(RVA = "0xC84A1C", Offset = "0xC84A1C", VA = "0xC84A1C")]
	public static directionToMoveInEnum getDirectionOfLargerDistanceHorizontal(float transformPos, float limit1, float limit2)
	{
		return default(directionToMoveInEnum);
	}

	[Token(Token = "0x6000E29")]
	[Address(RVA = "0xC84A44", Offset = "0xC84A44", VA = "0xC84A44")]
	public static directionToMoveInEnum getDirectionOfLargerDistanceVertical(float transformPos, float limit1, float limit2)
	{
		return default(directionToMoveInEnum);
	}

	[Token(Token = "0x6000E2A")]
	[Address(RVA = "0xC84A30", Offset = "0xC84A30", VA = "0xC84A30")]
	private static int getCloserLimit(float transformPos, float limit1, float limit2)
	{
		return default(int);
	}

	[Token(Token = "0x6000E2B")]
	[Address(RVA = "0xC84A60", Offset = "0xC84A60", VA = "0xC84A60")]
	public ObjectMovementDirectionHelper()
	{
	}
}
[Token(Token = "0x200023C")]
public class ObjectPositionAnalyzer
{
	[Token(Token = "0x200023D")]
	public enum HitDirection
	{
		[Token(Token = "0x4000C96")]
		None,
		[Token(Token = "0x4000C97")]
		Top,
		[Token(Token = "0x4000C98")]
		Bottom,
		[Token(Token = "0x4000C99")]
		Forward,
		[Token(Token = "0x4000C9A")]
		Back,
		[Token(Token = "0x4000C9B")]
		Left,
		[Token(Token = "0x4000C9C")]
		Right
	}

	[Token(Token = "0x200023E")]
	public enum outOfPositionDirection
	{
		[Token(Token = "0x4000C9E")]
		LEFT,
		[Token(Token = "0x4000C9F")]
		RIGHT,
		[Token(Token = "0x4000CA0")]
		DOWN,
		[Token(Token = "0x4000CA1")]
		UP,
		[Token(Token = "0x4000CA2")]
		BACK,
		[Token(Token = "0x4000CA3")]
		FORWARD
	}

	[Token(Token = "0x4000C92")]
	public const float POSITION_CORRECTION_AMOUNT = 0.15f;

	[Token(Token = "0x4000C93")]
	public const float MIN_Y = 0.8f;

	[Token(Token = "0x4000C94")]
	public const float MAX_Y = 2f;

	[Token(Token = "0x6000E2C")]
	[Address(RVA = "0xAC3BF0", Offset = "0xAC3BF0", VA = "0xAC3BF0")]
	public static float getYWithinPlayLimits(float inputY)
	{
		return default(float);
	}

	[Token(Token = "0x6000E2D")]
	[Address(RVA = "0xAC3C14", Offset = "0xAC3C14", VA = "0xAC3C14")]
	public static float getOtherPositionLeftOrRight(Transform objectChecking, Transform otherTransform)
	{
		return default(float);
	}

	[Token(Token = "0x6000E2E")]
	[Address(RVA = "0xAC3C80", Offset = "0xAC3C80", VA = "0xAC3C80")]
	public static float getOtherPositionLeftOrRight(Transform objectChecking, Vector3 otherPosition)
	{
		return default(float);
	}

	[Token(Token = "0x6000E2F")]
	[Address(RVA = "0xAC3CCC", Offset = "0xAC3CCC", VA = "0xAC3CCC")]
	public static bool checkIfTargetAlreadyBehind(Transform objectChecking, Vector3 otherPosition)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E30")]
	[Address(RVA = "0xAC3CF4", Offset = "0xAC3CF4", VA = "0xAC3CF4")]
	public static float[] returnFloatsOrderedBySize(float min, float max)
	{
		return null;
	}

	[Token(Token = "0x6000E31")]
	[Address(RVA = "0xAC3D90", Offset = "0xAC3D90", VA = "0xAC3D90")]
	public static Vector3 getLeftMostPositionFromArray(Vector3[] boundaryPositions)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E32")]
	[Address(RVA = "0xAC3E10", Offset = "0xAC3E10", VA = "0xAC3E10")]
	public static Vector3 getLeftMostPosition(List<Vector3> boundaryPositions)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E33")]
	[Address(RVA = "0xAC3F70", Offset = "0xAC3F70", VA = "0xAC3F70")]
	public static Vector3 getRightMostPositionFromArray(Vector3[] boundaryPositions)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E34")]
	[Address(RVA = "0xAC3FF0", Offset = "0xAC3FF0", VA = "0xAC3FF0")]
	public static Vector3 getRightMostPosition(List<Vector3> boundaryPositions)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E35")]
	[Address(RVA = "0xAC4150", Offset = "0xAC4150", VA = "0xAC4150")]
	public static Vector3 getMostForwardPositionFromArray(Vector3[] boundaryPositions)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E36")]
	[Address(RVA = "0xAC41D4", Offset = "0xAC41D4", VA = "0xAC41D4")]
	public static Vector3 getMostForwardPosition(List<Vector3> boundaryPositions)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E37")]
	[Address(RVA = "0xAC4334", Offset = "0xAC4334", VA = "0xAC4334")]
	public static Vector3 getMostBackPositionFromArray(Vector3[] boundaryPositions)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E38")]
	[Address(RVA = "0xAC43B8", Offset = "0xAC43B8", VA = "0xAC43B8")]
	public static Vector3 getMostBackPosition(List<Vector3> boundaryPositions)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E39")]
	[Address(RVA = "0xAC4518", Offset = "0xAC4518", VA = "0xAC4518")]
	public static Transform getLeftMostObject(Transform firstTransform, Transform secondTransform)
	{
		return null;
	}

	[Token(Token = "0x6000E3A")]
	[Address(RVA = "0xAC3DFC", Offset = "0xAC3DFC", VA = "0xAC3DFC")]
	public static Vector3 getMostLeftPosition(Vector3 first, Vector3 second)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E3B")]
	[Address(RVA = "0xAC3FDC", Offset = "0xAC3FDC", VA = "0xAC3FDC")]
	public static Vector3 getMostRightPosition(Vector3 first, Vector3 second)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E3C")]
	[Address(RVA = "0xAC456C", Offset = "0xAC456C", VA = "0xAC456C")]
	public static Transform getRightMostObject(Transform firstTransform, Transform secondTransform)
	{
		return null;
	}

	[Token(Token = "0x6000E3D")]
	[Address(RVA = "0xAC45C0", Offset = "0xAC45C0", VA = "0xAC45C0")]
	public static Vector3 getObjectWithMostForwardAppearancePosition(List<GameObject> gameObjects)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E3E")]
	[Address(RVA = "0xAC473C", Offset = "0xAC473C", VA = "0xAC473C")]
	public static float getHighestZOfVectors(List<Vector3> positions)
	{
		return default(float);
	}

	[Token(Token = "0x6000E3F")]
	[Address(RVA = "0xAC4880", Offset = "0xAC4880", VA = "0xAC4880")]
	public static Vector3 getMostForwardObject(ArrayList gameObjects)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E40")]
	[Address(RVA = "0xAC41C0", Offset = "0xAC41C0", VA = "0xAC41C0")]
	public static Vector3 getMostForwardPosition(Vector3 first, Vector3 second)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E41")]
	[Address(RVA = "0xAC43A4", Offset = "0xAC43A4", VA = "0xAC43A4")]
	public static Vector3 getMostBackPosition(Vector3 first, Vector3 second)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E42")]
	[Address(RVA = "0xAC4B48", Offset = "0xAC4B48", VA = "0xAC4B48")]
	public static Transform getObjectAtHighestPosition(Transform firstTransform, Transform secondTransform)
	{
		return null;
	}

	[Token(Token = "0x6000E43")]
	[Address(RVA = "0xAC4B9C", Offset = "0xAC4B9C", VA = "0xAC4B9C")]
	public static Transform getObjectAtLowestPosition(Transform firstTransform, Transform secondTransform)
	{
		return null;
	}

	[Token(Token = "0x6000E44")]
	[Address(RVA = "0xAC4BF0", Offset = "0xAC4BF0", VA = "0xAC4BF0")]
	public static Transform getObjectAtMostForwardPosition(Transform firstTransform, Transform secondTransform)
	{
		return null;
	}

	[Token(Token = "0x6000E45")]
	[Address(RVA = "0xAC4C44", Offset = "0xAC4C44", VA = "0xAC4C44")]
	public static Transform getObjectAtMostBackPosition(Transform firstTransform, Transform secondTransform)
	{
		return null;
	}

	[Token(Token = "0x6000E46")]
	[Address(RVA = "0xAC4C98", Offset = "0xAC4C98", VA = "0xAC4C98")]
	public static bool checkIfObjectsVerticallyAboveOneAnother(Transform firstTransform, Transform secondTransform)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E47")]
	[Address(RVA = "0xAC4DA0", Offset = "0xAC4DA0", VA = "0xAC4DA0")]
	public static bool checkIfEnoughVerticalSpaceBetweenObjects(Transform firstTransform, Transform secondTransform, float minDistance)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E48")]
	[Address(RVA = "0xAC4E54", Offset = "0xAC4E54", VA = "0xAC4E54")]
	public static bool checkIfEnoughHorizontalSpaceBetweenObjects(Transform firstTransform, Transform secondTransform, float minDistance)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E49")]
	[Address(RVA = "0xAC4F54", Offset = "0xAC4F54", VA = "0xAC4F54")]
	public static bool checkIfEnoughVerticalDistanceBetweenObjectAndTopLimit(Transform firstTransform, float maxY, float minDistance)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E4A")]
	[Address(RVA = "0xAC4FEC", Offset = "0xAC4FEC", VA = "0xAC4FEC")]
	public static bool checkIfEnoughVerticalDistanceBetweenObjectAndTopLimit(float yPos, float maxY, float minDistance)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E4B")]
	[Address(RVA = "0xAC506C", Offset = "0xAC506C", VA = "0xAC506C")]
	public static bool checkIfEnoughVerticalDistanceBetweenObjectAndBottomLimit(float topObjectY, float lowerObjectY, float minDistance)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E4C")]
	[Address(RVA = "0xAC50EC", Offset = "0xAC50EC", VA = "0xAC50EC")]
	public static bool checkIfEnoughHorizontalDistanceBetweenObjectAndMinXLeft(float minX, float objectPosX, float minDistance)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E4D")]
	[Address(RVA = "0xAC516C", Offset = "0xAC516C", VA = "0xAC516C")]
	public static bool checkIfEnoughHorizontalDistanceBetweenObjectAndMaxXRight(Transform firstTransform, float maxX, float minDistance)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E4E")]
	[Address(RVA = "0xAC5204", Offset = "0xAC5204", VA = "0xAC5204")]
	public static bool checkIfEnoughHorizontalDistanceBetweenObjectAndMaxXRight(float xPos, float maxX, float minDistance)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E4F")]
	[Address(RVA = "0xAC5284", Offset = "0xAC5284", VA = "0xAC5284")]
	public static bool checkIfEnoughHorizontalDistanceBetweenObjectAndMaxZForward(float zPos, float maxZ, float minDistance)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E50")]
	[Address(RVA = "0xAC5304", Offset = "0xAC5304", VA = "0xAC5304")]
	public static bool checkIfEnoughHorizontalDistanceBetweenObjectAndMinZBack(float zPos, float minZ, float minDistance)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E51")]
	[Address(RVA = "0xAC5384", Offset = "0xAC5384", VA = "0xAC5384")]
	public static float[] getOrderedMinMaxPosValues(float minX, float maxX, float minY, float maxY, float minZ, float maxZ)
	{
		return null;
	}

	[Token(Token = "0x6000E52")]
	[Address(RVA = "0xAC54D8", Offset = "0xAC54D8", VA = "0xAC54D8")]
	public static bool checkIfPositionWithinAreaXYZ(Vector3 position, float minX, float maxX, float minY, float maxY, float minZ, float maxZ)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E53")]
	[Address(RVA = "0xAC577C", Offset = "0xAC577C", VA = "0xAC577C")]
	public static bool checkIfObjectIntersectsWithArea(Vector3 position, float minX, float maxX, float minY, float maxY, float minZ, float maxZ, float additionalX, float additionalY, float additionalZ)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E54")]
	[Address(RVA = "0xAC594C", Offset = "0xAC594C", VA = "0xAC594C")]
	public static bool checkIfBetweenValues(float value, float min, float max)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E55")]
	[Address(RVA = "0xAC5964", Offset = "0xAC5964", VA = "0xAC5964")]
	public static bool checkIfObjectWhollyWithinArea(Vector3 position, float minX, float maxX, float minY, float maxY, float minZ, float maxZ, float additionalX, float additionalY, float additionalZ)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E56")]
	[Address(RVA = "0xAC5BB0", Offset = "0xAC5BB0", VA = "0xAC5BB0")]
	public static bool checkIfObjectWhollyWithinAreaXZOnly(Vector3 position, float minX, float maxX, float minZ, float maxZ, float additionalX, float additionalZ)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E57")]
	[Address(RVA = "0xAC5DB4", Offset = "0xAC5DB4", VA = "0xAC5DB4")]
	public static bool checkIfObjectWithinMinXMaxXMinZ(Vector3 position, float minX, float maxX, float minZ, float additionalX, float additionalZ)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E58")]
	[Address(RVA = "0xAC5F48", Offset = "0xAC5F48", VA = "0xAC5F48")]
	public static bool checkIfObjectWithinMinXMinZMaxZ(Vector3 position, float minX, float minZ, float maxZ, float additionalX, float additionalZ)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E59")]
	[Address(RVA = "0xAC60DC", Offset = "0xAC60DC", VA = "0xAC60DC")]
	public static bool checkIfObjectWithinMinXMaxXMaxZ(Vector3 position, float minX, float maxX, float maxZ, float additionalX, float additionalZ)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E5A")]
	[Address(RVA = "0xAC6270", Offset = "0xAC6270", VA = "0xAC6270")]
	public static bool checkIfObjectWithinMinZMaxZMaxX(Vector3 position, float maxX, float minZ, float maxZ, float additionalX, float additionalZ)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E5B")]
	[Address(RVA = "0xAC6404", Offset = "0xAC6404", VA = "0xAC6404")]
	public static List<outOfPositionDirection> getOutOfAreaDirections(Transform transform, float minX, float maxX, float minY, float maxY, float minZ, float maxZ)
	{
		return null;
	}

	[Token(Token = "0x6000E5C")]
	[Address(RVA = "0xAC664C", Offset = "0xAC664C", VA = "0xAC664C")]
	public static bool checkIfAreaIntersectsWithObject(Vector3 pos, GameObject objectToCheck, float[] gameAreaBounds)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E5D")]
	[Address(RVA = "0xAC67F8", Offset = "0xAC67F8", VA = "0xAC67F8")]
	public static bool checkIfAreaIntersectsWithObject(Vector3 pos, float[] rendererBounds, float minX, float maxX, float minY, float maxY, float minZ, float maxZ, float divider)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E5E")]
	[Address(RVA = "0xAC6870", Offset = "0xAC6870", VA = "0xAC6870")]
	public static bool checkIfAreaIntersectsWithObject(Vector3 pos, float[] rendererBounds, float[] gameAreaBounds)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E5F")]
	[Address(RVA = "0xAC6914", Offset = "0xAC6914", VA = "0xAC6914")]
	public static Vector3 getCorrectedObjectPosition(Vector3 potentialNewPosition, GameObject objectToCheck, float[] gameAreaBounds)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E60")]
	[Address(RVA = "0xAC6E10", Offset = "0xAC6E10", VA = "0xAC6E10")]
	public static Vector3 getCorrectedObjectPosition(Vector3 potentialNewPosition, float[] rendererBounds, float[] gameAreaBounds)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E61")]
	[Address(RVA = "0xAC64B4", Offset = "0xAC64B4", VA = "0xAC64B4")]
	public static List<outOfPositionDirection> getOutOfAreaDirections(float objectPosX, float objectPosY, float objectPosZ, float minX, float maxX, float minY, float maxY, float minZ, float maxZ)
	{
		return null;
	}

	[Token(Token = "0x6000E62")]
	[Address(RVA = "0xAC6C54", Offset = "0xAC6C54", VA = "0xAC6C54")]
	public static List<outOfPositionDirection> getOutOfAreaDirectionsWithObjectSizeCorrection(float objectPosX, float objectPosY, float objectPosZ, float objectSizeX, float objectSizeY, float objectSizeZ, float minX, float maxX, float minY, float maxY, float minZ, float maxZ)
	{
		return null;
	}

	[Token(Token = "0x6000E63")]
	[Address(RVA = "0xAC70A4", Offset = "0xAC70A4", VA = "0xAC70A4")]
	public static bool checkIfOutOfPositionDirectionPresent(List<outOfPositionDirection> outOfPositionDirections, outOfPositionDirection directionToCheck)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E64")]
	[Address(RVA = "0xAC71DC", Offset = "0xAC71DC", VA = "0xAC71DC")]
	public static float getMinXOfPositions(Vector3[] positions)
	{
		return default(float);
	}

	[Token(Token = "0x6000E65")]
	[Address(RVA = "0xAC7238", Offset = "0xAC7238", VA = "0xAC7238")]
	public static float getMinXOfPositions(List<Vector3> positions)
	{
		return default(float);
	}

	[Token(Token = "0x6000E66")]
	[Address(RVA = "0xAC7318", Offset = "0xAC7318", VA = "0xAC7318")]
	public static float getMaxXOfPositions(Vector3[] positions)
	{
		return default(float);
	}

	[Token(Token = "0x6000E67")]
	[Address(RVA = "0xAC7374", Offset = "0xAC7374", VA = "0xAC7374")]
	public static float getMaxXOfPositions(List<Vector3> positions)
	{
		return default(float);
	}

	[Token(Token = "0x6000E68")]
	[Address(RVA = "0xAC7454", Offset = "0xAC7454", VA = "0xAC7454")]
	public static float getMinZOfPositions(Vector3[] positions)
	{
		return default(float);
	}

	[Token(Token = "0x6000E69")]
	[Address(RVA = "0xAC74B0", Offset = "0xAC74B0", VA = "0xAC74B0")]
	public static float getMinZOfPositions(List<Vector3> positions)
	{
		return default(float);
	}

	[Token(Token = "0x6000E6A")]
	[Address(RVA = "0xAC7590", Offset = "0xAC7590", VA = "0xAC7590")]
	public static float getMaxZOfPositions(Vector3[] positions)
	{
		return default(float);
	}

	[Token(Token = "0x6000E6B")]
	[Address(RVA = "0xAC75EC", Offset = "0xAC75EC", VA = "0xAC75EC")]
	public static float getMaxZOfPositions(List<Vector3> positions)
	{
		return default(float);
	}

	[Token(Token = "0x6000E6C")]
	[Address(RVA = "0xAC76CC", Offset = "0xAC76CC", VA = "0xAC76CC")]
	private static HitDirection returnDirection(GameObject collidingObject, GameObject objectHit)
	{
		return default(HitDirection);
	}

	[Token(Token = "0x6000E6D")]
	[Address(RVA = "0xAC7A58", Offset = "0xAC7A58", VA = "0xAC7A58")]
	private static void rotateTransform(Transform transformToRotate, float xRotation, float yRotation, float zRotation)
	{
	}

	[Token(Token = "0x6000E6E")]
	[Address(RVA = "0xAC7ADC", Offset = "0xAC7ADC", VA = "0xAC7ADC")]
	private static void rotateParticleSystem(ParticleSystem particleSystemToRotate, float xRotation, float yRotation, float zRotation)
	{
	}

	[Token(Token = "0x6000E6F")]
	[Address(RVA = "0xAC7BC4", Offset = "0xAC7BC4", VA = "0xAC7BC4")]
	public static void rotateAwayFrom(Transform transformToRotate, Transform toRotateAwayFrom)
	{
	}

	[Token(Token = "0x6000E70")]
	[Address(RVA = "0xAC7C24", Offset = "0xAC7C24", VA = "0xAC7C24")]
	public static void moveObjectAwayFrom(GameObject gameObjectToMove, GameObject gameObjectToMoveAwayFrom, float moveAmount)
	{
	}

	[Token(Token = "0x6000E71")]
	[Address(RVA = "0xAC7F50", Offset = "0xAC7F50", VA = "0xAC7F50")]
	public static bool isWithinGameLimits(float transformValue, float additionalMovementAmount, float lowerGameMovementLimit, float higherGameMovementLimit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E72")]
	[Address(RVA = "0xAC7F6C", Offset = "0xAC7F6C", VA = "0xAC7F6C")]
	public static float getDistanceToCloserLimit(float transformValue, float lowerGameMovementLimit, float higherGameMovementLimit)
	{
		return default(float);
	}

	[Token(Token = "0x6000E73")]
	[Address(RVA = "0xAC7F80", Offset = "0xAC7F80", VA = "0xAC7F80")]
	public static List<GameObject> getObjectsWithinZValues(List<GameObject> gameObjects, float minZValue, float maxZValue)
	{
		return null;
	}

	[Token(Token = "0x6000E74")]
	[Address(RVA = "0xAC81A0", Offset = "0xAC81A0", VA = "0xAC81A0")]
	public static bool checkIfAreasIntersectXY(Area3D first, Area3D second)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E75")]
	[Address(RVA = "0xAC81E0", Offset = "0xAC81E0", VA = "0xAC81E0")]
	public static bool checkIf_X_Intersect(Area3D first, Area3D second)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E76")]
	[Address(RVA = "0xAC82A0", Offset = "0xAC82A0", VA = "0xAC82A0")]
	public static bool checkIf_Y_Intersect(Area3D first, Area3D second)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E77")]
	[Address(RVA = "0xAC8360", Offset = "0xAC8360", VA = "0xAC8360")]
	public static bool isValueBetweenValues(float value, float min, float max)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E78")]
	[Address(RVA = "0xAC8390", Offset = "0xAC8390", VA = "0xAC8390")]
	public static bool checkIfAreaWholleyWithinOtherArea(Area3D first, Area3D second)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E79")]
	[Address(RVA = "0xAC83F4", Offset = "0xAC83F4", VA = "0xAC83F4")]
	public static bool checkIfOneAreaWholleyCoveresOtherArea_X_With_Y_Intersection(Area3D first, Area3D second)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E7A")]
	[Address(RVA = "0xAC8488", Offset = "0xAC8488", VA = "0xAC8488")]
	public static bool checkIfOneAreaWholleyCoveresOtherArea_Y_With_X_Intersection(Area3D first, Area3D second)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E7B")]
	[Address(RVA = "0xAC8444", Offset = "0xAC8444", VA = "0xAC8444")]
	public static bool checkIfAreaWholleyWithin_X_OfOtherArea(Area3D first, Area3D second)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E7C")]
	[Address(RVA = "0xAC84D8", Offset = "0xAC84D8", VA = "0xAC84D8")]
	public static bool checkIfAreaWholleyWithin_Y_OfOtherArea(Area3D first, Area3D second)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E7D")]
	[Address(RVA = "0xAC851C", Offset = "0xAC851C", VA = "0xAC851C")]
	public static void getReducedAreaToRemoveIntersectionWithOtherArea(Area3D first, Area3D second)
	{
	}

	[Token(Token = "0x6000E7E")]
	[Address(RVA = "0xAC85BC", Offset = "0xAC85BC", VA = "0xAC85BC")]
	public ObjectPositionAnalyzer()
	{
	}
}
[Token(Token = "0x200023F")]
public class ObjectRotationController : MonoBehaviour
{
	[Token(Token = "0x2000240")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CDFC", Offset = "0x69CDFC")]
	private sealed class <performZClockwiseRotation>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectRotationController <>4__this;

		[Token(Token = "0x4000CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float endAngle;

		[Token(Token = "0x4000CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float duration;

		[Token(Token = "0x4000CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <startRotation>5__2;

		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <endRotation>5__3;

		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <t>5__4;

		[Token(Token = "0x17000150")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E85")]
			[Address(RVA = "0x1492E1C", Offset = "0x1492E1C", VA = "0x1492E1C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000151")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E87")]
			[Address(RVA = "0x1492E64", Offset = "0x1492E64", VA = "0x1492E64", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E82")]
		[Address(RVA = "0x1492C88", Offset = "0x1492C88", VA = "0x1492C88")]
		[DebuggerHidden]
		public <performZClockwiseRotation>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000E83")]
		[Address(RVA = "0x1492CB4", Offset = "0x1492CB4", VA = "0x1492CB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E84")]
		[Address(RVA = "0x1492CB8", Offset = "0x1492CB8", VA = "0x1492CB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E86")]
		[Address(RVA = "0x1492E24", Offset = "0x1492E24", VA = "0x1492E24", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject objectToRotate;

	[Token(Token = "0x4000CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Coroutine currentCoroutine;

	[Token(Token = "0x6000E7F")]
	[Address(RVA = "0xAC85C4", Offset = "0xAC85C4", VA = "0xAC85C4")]
	public void performZRotation()
	{
	}

	[Token(Token = "0x6000E80")]
	[Address(RVA = "0xAC8638", Offset = "0xAC8638", VA = "0xAC8638")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A7CA4", Offset = "0x6A7CA4")]
	private IEnumerator performZClockwiseRotation(float duration, float endAngle)
	{
		return null;
	}

	[Token(Token = "0x6000E81")]
	[Address(RVA = "0xAC86C4", Offset = "0xAC86C4", VA = "0xAC86C4")]
	public ObjectRotationController()
	{
	}
}
[Token(Token = "0x2000241")]
public class PositionInFrontOfObjectController : MonoBehaviour
{
	[Token(Token = "0x4000CAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform objectToPosition;

	[Token(Token = "0x4000CAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform m_Camera;

	[Token(Token = "0x4000CB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float m_Distance;

	[Token(Token = "0x4000CB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject containerObject;

	[Token(Token = "0x6000E88")]
	[Address(RVA = "0xA071C0", Offset = "0xA071C0", VA = "0xA071C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E89")]
	[Address(RVA = "0xA07248", Offset = "0xA07248", VA = "0xA07248")]
	public void disableSelf()
	{
	}

	[Token(Token = "0x6000E8A")]
	[Address(RVA = "0xA07288", Offset = "0xA07288", VA = "0xA07288")]
	public PositionInFrontOfObjectController()
	{
	}
}
[Token(Token = "0x2000242")]
public interface ObjectInfoInterface
{
	[Token(Token = "0x6000E8B")]
	string getObjectType();

	[Token(Token = "0x6000E8C")]
	float getObjectScale();

	[Token(Token = "0x6000E8D")]
	float[] getRendererBounds();
}
[Token(Token = "0x2000243")]
public static class CalculateBoundariesFromPositionsService
{
	[Token(Token = "0x4000CB2")]
	private const int BOUNDARY_POSITION_MIN_SIZE = 4;

	[Token(Token = "0x4000CB3")]
	private const int BOUNDARY_POSITION_MEDIUM_SIZE = 32;

	[Token(Token = "0x4000CB4")]
	private const int BOUNDARY_POSITION_LARGE_SIZE = 100;

	[Token(Token = "0x4000CB5")]
	private const int CLOSEST_POINTS_AMOUNT_MIN = 3;

	[Token(Token = "0x4000CB6")]
	private const int CLOSEST_POINTS_AMOUNT_STANDARD = 10;

	[Token(Token = "0x4000CB7")]
	private const int CLOSEST_POINTS_AMOUNT_LARGE = 25;

	[Token(Token = "0x6000E8E")]
	[Address(RVA = "0xF235D4", Offset = "0xF235D4", VA = "0xF235D4")]
	public static float[] getBoundariesCalculatedFromPositions(List<Vector3> boundaryPositions, float playerY)
	{
		return null;
	}

	[Token(Token = "0x6000E8F")]
	[Address(RVA = "0xF23A48", Offset = "0xF23A48", VA = "0xF23A48")]
	private static List<Vector3> getReducedBoundaryPositions(List<Vector3> boundaryPositions)
	{
		return null;
	}

	[Token(Token = "0x6000E90")]
	[Address(RVA = "0xF23978", Offset = "0xF23978", VA = "0xF23978")]
	private static float getMinXWithAverageCorrection(List<Vector3> positions, int amountOfClosestPoints)
	{
		return default(float);
	}

	[Token(Token = "0x6000E91")]
	[Address(RVA = "0xF239AC", Offset = "0xF239AC", VA = "0xF239AC")]
	private static float getMaxXWithAverageCorrection(List<Vector3> positions, int amountOfClosestPoints)
	{
		return default(float);
	}

	[Token(Token = "0x6000E92")]
	[Address(RVA = "0xF239E0", Offset = "0xF239E0", VA = "0xF239E0")]
	private static float getMinZWithAverageCorrection(List<Vector3> positions, int amountOfClosestPoints)
	{
		return default(float);
	}

	[Token(Token = "0x6000E93")]
	[Address(RVA = "0xF23A14", Offset = "0xF23A14", VA = "0xF23A14")]
	private static float getMaxZWithAverageCorrection(List<Vector3> positions, int amountOfClosestPoints)
	{
		return default(float);
	}

	[Token(Token = "0x6000E94")]
	[Address(RVA = "0xF23E84", Offset = "0xF23E84", VA = "0xF23E84")]
	private static float getAverageXOfClosesPoints(List<Vector3> closestPoints)
	{
		return default(float);
	}

	[Token(Token = "0x6000E95")]
	[Address(RVA = "0xF23FB4", Offset = "0xF23FB4", VA = "0xF23FB4")]
	private static float getAverageZOfClosesPoints(List<Vector3> closestPoints)
	{
		return default(float);
	}

	[Token(Token = "0x6000E96")]
	[Address(RVA = "0xF23B64", Offset = "0xF23B64", VA = "0xF23B64")]
	private static List<Vector3> getClosestPointsToPosition(Vector3 anchorPoint, List<Vector3> positions, int amountOfPoints)
	{
		return null;
	}
}
[Token(Token = "0x2000244")]
public class PlayAreaBoundariesContainer
{
	[Token(Token = "0x4000CB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool boundariesCalculated;

	[Token(Token = "0x4000CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static float[] boundaries;

	[Token(Token = "0x6000E97")]
	[Address(RVA = "0xA64EC8", Offset = "0xA64EC8", VA = "0xA64EC8")]
	public static bool isBoundariesCalculated()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E98")]
	[Address(RVA = "0xA666EC", Offset = "0xA666EC", VA = "0xA666EC")]
	public static void setBoundariesCalculated(bool input)
	{
	}

	[Token(Token = "0x6000E99")]
	[Address(RVA = "0xA6675C", Offset = "0xA6675C", VA = "0xA6675C")]
	public static void setBoundaries(float[] calculatedBoundaries)
	{
	}

	[Token(Token = "0x6000E9A")]
	[Address(RVA = "0xA653D0", Offset = "0xA653D0", VA = "0xA653D0")]
	public static float[] getBoundaries()
	{
		return null;
	}

	[Token(Token = "0x6000E9B")]
	[Address(RVA = "0xA64F34", Offset = "0xA64F34", VA = "0xA64F34")]
	public static void updateYBoundaries(float minY, float maxY)
	{
	}

	[Token(Token = "0x6000E9C")]
	[Address(RVA = "0xA667C8", Offset = "0xA667C8", VA = "0xA667C8")]
	public PlayAreaBoundariesContainer()
	{
	}
}
[Token(Token = "0x2000245")]
public class PlayAreaService : MonoBehaviour
{
	[Token(Token = "0x4000CBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected float[] playAreaBoundaries;

	[Token(Token = "0x6000E9E")]
	[Address(RVA = "0xA66854", Offset = "0xA66854", VA = "0xA66854", Slot = "4")]
	public virtual Vector3 getMiddleOfPlayArea()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E9F")]
	[Address(RVA = "0xA66864", Offset = "0xA66864", VA = "0xA66864", Slot = "5")]
	public virtual Vector3[] getCornersOfPlayArea()
	{
		return null;
	}

	[Token(Token = "0x6000EA0")]
	[Address(RVA = "0xA668D4", Offset = "0xA668D4", VA = "0xA668D4", Slot = "6")]
	public virtual float[] getBoundariesOfPlayArea()
	{
		return null;
	}

	[Token(Token = "0x6000EA1")]
	[Address(RVA = "0xA66948", Offset = "0xA66948", VA = "0xA66948", Slot = "7")]
	protected virtual float[] getBoundariesOfPlayAreaMax()
	{
		return null;
	}

	[Token(Token = "0x6000EA2")]
	[Address(RVA = "0xA669BC", Offset = "0xA669BC", VA = "0xA669BC", Slot = "8")]
	public virtual Vector3[] getBoundariesOfPlayAreaAsVectors()
	{
		return null;
	}

	[Token(Token = "0x6000EA3")]
	[Address(RVA = "0xA66A04", Offset = "0xA66A04", VA = "0xA66A04")]
	public float[] getBoundariesCorrectedForObjectRendererBounds(float[] boundaries, GameObject objectForBoundariesCorrection, float correctionMultiplier)
	{
		return null;
	}

	[Token(Token = "0x6000EA4")]
	[Address(RVA = "0xA66C10", Offset = "0xA66C10", VA = "0xA66C10", Slot = "9")]
	public virtual Vector3[] getAllBoundaryPoints()
	{
		return null;
	}

	[Token(Token = "0x6000EA5")]
	[Address(RVA = "0xA65BD0", Offset = "0xA65BD0", VA = "0xA65BD0")]
	public PlayAreaService()
	{
	}
}
[Token(Token = "0x2000246")]
public class StartBoundariesCalculationService : MonoBehaviour
{
	[Token(Token = "0x4000CBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PlayAreaService playAreaService;

	[Token(Token = "0x4000CBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool runningInEditor;

	[Token(Token = "0x4000CBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[SerializeField]
	private bool test;

	[Token(Token = "0x6000EA6")]
	[Address(RVA = "0x14C9CF0", Offset = "0x14C9CF0", VA = "0x14C9CF0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EA7")]
	[Address(RVA = "0x14C9CF4", Offset = "0x14C9CF4", VA = "0x14C9CF4")]
	private void calculateBoundaries()
	{
	}

	[Token(Token = "0x6000EA8")]
	[Address(RVA = "0x14C9E60", Offset = "0x14C9E60", VA = "0x14C9E60")]
	private bool checkBoundariesValid(float[] boundaries)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EA9")]
	[Address(RVA = "0x14C9EE0", Offset = "0x14C9EE0", VA = "0x14C9EE0")]
	public void recalculateBoundaries()
	{
	}

	[Token(Token = "0x6000EAA")]
	[Address(RVA = "0x14CA018", Offset = "0x14CA018", VA = "0x14CA018")]
	public StartBoundariesCalculationService()
	{
	}
}
[Token(Token = "0x2000247")]
public class MockPlayAreaService : PlayAreaService
{
	[Token(Token = "0x4000CBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float minX;

	[Token(Token = "0x4000CBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float maxX;

	[Token(Token = "0x4000CC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float minY;

	[Token(Token = "0x4000CC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float maxY;

	[Token(Token = "0x4000CC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float minZ;

	[Token(Token = "0x4000CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float maxZ;

	[Token(Token = "0x6000EAB")]
	[Address(RVA = "0xC741B8", Offset = "0xC741B8", VA = "0xC741B8", Slot = "6")]
	public override float[] getBoundariesOfPlayArea()
	{
		return null;
	}

	[Token(Token = "0x6000EAC")]
	[Address(RVA = "0xC7427C", Offset = "0xC7427C", VA = "0xC7427C")]
	public MockPlayAreaService()
	{
	}
}
[Token(Token = "0x2000248")]
public class OculusRiftPlayAreaService : PlayAreaService
{
	[Token(Token = "0x4000CC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool productionDeployment;

	[Token(Token = "0x4000CC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject player;

	[Token(Token = "0x6000EAD")]
	[Address(RVA = "0xACE1E0", Offset = "0xACE1E0", VA = "0xACE1E0", Slot = "4")]
	public override Vector3 getMiddleOfPlayArea()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EAE")]
	[Address(RVA = "0xACE260", Offset = "0xACE260", VA = "0xACE260")]
	private Vector3 getMiddleOfPlayAreaLegacy()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EAF")]
	[Address(RVA = "0xACE464", Offset = "0xACE464", VA = "0xACE464", Slot = "7")]
	protected override float[] getBoundariesOfPlayAreaMax()
	{
		return null;
	}

	[Token(Token = "0x6000EB0")]
	[Address(RVA = "0xACE600", Offset = "0xACE600", VA = "0xACE600", Slot = "8")]
	public override Vector3[] getBoundariesOfPlayAreaAsVectors()
	{
		return null;
	}

	[Token(Token = "0x6000EB1")]
	[Address(RVA = "0xACE78C", Offset = "0xACE78C", VA = "0xACE78C", Slot = "5")]
	public override Vector3[] getCornersOfPlayArea()
	{
		return null;
	}

	[Token(Token = "0x6000EB2")]
	[Address(RVA = "0xACE93C", Offset = "0xACE93C", VA = "0xACE93C", Slot = "6")]
	public override float[] getBoundariesOfPlayArea()
	{
		return null;
	}

	[Token(Token = "0x6000EB3")]
	[Address(RVA = "0xACEB2C", Offset = "0xACEB2C", VA = "0xACEB2C")]
	private float[] getBoundaries()
	{
		return null;
	}

	[Token(Token = "0x6000EB4")]
	[Address(RVA = "0xACED10", Offset = "0xACED10", VA = "0xACED10")]
	private float[] getBoundariesLegacy()
	{
		return null;
	}

	[Token(Token = "0x6000EB5")]
	[Address(RVA = "0xACE314", Offset = "0xACE314", VA = "0xACE314")]
	private List<Vector3> getBoundaryPositionsLegacy()
	{
		return null;
	}

	[Token(Token = "0x6000EB6")]
	[Address(RVA = "0xACF564", Offset = "0xACF564", VA = "0xACF564", Slot = "9")]
	public override Vector3[] getAllBoundaryPoints()
	{
		return null;
	}

	[Token(Token = "0x6000EB7")]
	[Address(RVA = "0xACF79C", Offset = "0xACF79C", VA = "0xACF79C")]
	public OculusRiftPlayAreaService()
	{
	}
}
[Token(Token = "0x2000249")]
public class PicoPlayAreaService : PlayAreaService
{
	[Token(Token = "0x4000CC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject player;

	[Token(Token = "0x6000EB8")]
	[Address(RVA = "0xA64FF4", Offset = "0xA64FF4", VA = "0xA64FF4", Slot = "4")]
	public override Vector3 getMiddleOfPlayArea()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EB9")]
	[Address(RVA = "0xA65064", Offset = "0xA65064", VA = "0xA65064", Slot = "5")]
	public override Vector3[] getCornersOfPlayArea()
	{
		return null;
	}

	[Token(Token = "0x6000EBA")]
	[Address(RVA = "0xA65268", Offset = "0xA65268", VA = "0xA65268", Slot = "6")]
	public override float[] getBoundariesOfPlayArea()
	{
		return null;
	}

	[Token(Token = "0x6000EBB")]
	[Address(RVA = "0xA65734", Offset = "0xA65734", VA = "0xA65734", Slot = "7")]
	protected override float[] getBoundariesOfPlayAreaMax()
	{
		return null;
	}

	[Token(Token = "0x6000EBC")]
	[Address(RVA = "0xA6547C", Offset = "0xA6547C", VA = "0xA6547C")]
	private float[] getBoundaries()
	{
		return null;
	}

	[Token(Token = "0x6000EBD")]
	[Address(RVA = "0xA6588C", Offset = "0xA6588C", VA = "0xA6588C")]
	private float[] calculateBoundariesFromCircularPlayArea(Vector3[] picoOuterBoundaries)
	{
		return null;
	}

	[Token(Token = "0x6000EBE")]
	[Address(RVA = "0xA65A04", Offset = "0xA65A04", VA = "0xA65A04", Slot = "9")]
	public override Vector3[] getAllBoundaryPoints()
	{
		return null;
	}

	[Token(Token = "0x6000EBF")]
	[Address(RVA = "0xA65BC8", Offset = "0xA65BC8", VA = "0xA65BC8")]
	public PicoPlayAreaService()
	{
	}
}
[Token(Token = "0x200024A")]
public static class PlayerPreferencesConstants
{
	[Token(Token = "0x4000CC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string DIFFICULTY;

	[Token(Token = "0x4000CC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string CREATE_HAND_SPECIFIC;

	[Token(Token = "0x4000CC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string INFINITE_HAND_ENERGY;

	[Token(Token = "0x4000CCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string INFINITE_HEALTH;

	[Token(Token = "0x4000CCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly string DURATION;

	[Token(Token = "0x4000CCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly string ENVIRONMENT;

	[Token(Token = "0x4000CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly string INFO_SEPARATION_CHARACTER;

	[Token(Token = "0x4000CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly string SKIP_TUTORIAL;

	[Token(Token = "0x4000CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly string TRUE;

	[Token(Token = "0x4000CD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static readonly string FALSE;

	[Token(Token = "0x4000CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static readonly string LAST_SUB_GAME_USED;
}
[Token(Token = "0x200024B")]
public static class PlayerPreferencesService
{
	[Token(Token = "0x4000CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static StringBuilder stringBuilder;

	[Token(Token = "0x6000EC1")]
	[Address(RVA = "0xA049A8", Offset = "0xA049A8", VA = "0xA049A8")]
	public static void saveDifficultyPreferences(GameModeValues.GameAndSubModeDifficulty gameAndSubModeDifficulty)
	{
	}

	[Token(Token = "0x6000EC2")]
	[Address(RVA = "0xA04BD4", Offset = "0xA04BD4", VA = "0xA04BD4")]
	public static void saveDurationPreferences(GameModeValues.GameDuration duration)
	{
	}

	[Token(Token = "0x6000EC3")]
	[Address(RVA = "0xA04E00", Offset = "0xA04E00", VA = "0xA04E00")]
	public static void saveEnvironmentPreference(EnvironmentAndSkyboxChanger.EnvironmentType environmentType)
	{
	}

	[Token(Token = "0x6000EC4")]
	[Address(RVA = "0xA04F60", Offset = "0xA04F60", VA = "0xA04F60")]
	public static void saveCreateHandSpecificObjectPreferences(bool input)
	{
	}

	[Token(Token = "0x6000EC5")]
	[Address(RVA = "0xA0514C", Offset = "0xA0514C", VA = "0xA0514C")]
	public static void savePlayerHandInfiniteForceFieldPreferences(bool input)
	{
	}

	[Token(Token = "0x6000EC6")]
	[Address(RVA = "0xA05338", Offset = "0xA05338", VA = "0xA05338")]
	public static void saveSkipTutorial(bool input)
	{
	}

	[Token(Token = "0x6000EC7")]
	[Address(RVA = "0xA05524", Offset = "0xA05524", VA = "0xA05524")]
	public static void savePlayerInfiniteHealth(bool input)
	{
	}

	[Token(Token = "0x6000EC8")]
	[Address(RVA = "0xA05710", Offset = "0xA05710", VA = "0xA05710")]
	public static string getLastUsedSubGameModeKey()
	{
		return null;
	}

	[Token(Token = "0x6000EC9")]
	[Address(RVA = "0xA058BC", Offset = "0xA058BC", VA = "0xA058BC")]
	public static GameModeValues.GameDuration getSavedDurationOfCurrentGameMode()
	{
		return default(GameModeValues.GameDuration);
	}

	[Token(Token = "0x6000ECA")]
	[Address(RVA = "0xA05C00", Offset = "0xA05C00", VA = "0xA05C00")]
	public static GameModeValues.GameAndSubModeDifficulty getSavedGameModeDifficulty()
	{
		return default(GameModeValues.GameAndSubModeDifficulty);
	}

	[Token(Token = "0x6000ECB")]
	[Address(RVA = "0xA05F70", Offset = "0xA05F70", VA = "0xA05F70")]
	public static bool getSkipTutorialForGameMode()
	{
		return default(bool);
	}

	[Token(Token = "0x6000ECC")]
	[Address(RVA = "0xA06194", Offset = "0xA06194", VA = "0xA06194")]
	public static string getSkipTutorialString()
	{
		return null;
	}

	[Token(Token = "0x6000ECD")]
	[Address(RVA = "0xA06340", Offset = "0xA06340", VA = "0xA06340")]
	public static bool getHandSpecificObjectsValue()
	{
		return default(bool);
	}

	[Token(Token = "0x6000ECE")]
	[Address(RVA = "0xA06564", Offset = "0xA06564", VA = "0xA06564")]
	public static bool getInfiniteHandEnergyValue()
	{
		return default(bool);
	}

	[Token(Token = "0x6000ECF")]
	[Address(RVA = "0xA06794", Offset = "0xA06794", VA = "0xA06794")]
	public static bool getInfiniteHealthValue()
	{
		return default(bool);
	}
}
[Token(Token = "0x200024C")]
public class PlayerPreferencesTranslationService : MonoBehaviour
{
	[Token(Token = "0x6000ED1")]
	[Address(RVA = "0xA05DB8", Offset = "0xA05DB8", VA = "0xA05DB8")]
	public static GameModeValues.GameAndSubModeDifficulty translateGameDifficultyFromStringToEnum(string input)
	{
		return default(GameModeValues.GameAndSubModeDifficulty);
	}

	[Token(Token = "0x6000ED2")]
	[Address(RVA = "0xA05A74", Offset = "0xA05A74", VA = "0xA05A74")]
	public static GameModeValues.GameDuration translateGameDuration(string input)
	{
		return default(GameModeValues.GameDuration);
	}

	[Token(Token = "0x6000ED3")]
	[Address(RVA = "0xA06A40", Offset = "0xA06A40", VA = "0xA06A40")]
	public static EnvironmentAndSkyboxChanger.EnvironmentType translateEnvironment(string input)
	{
		return default(EnvironmentAndSkyboxChanger.EnvironmentType);
	}

	[Token(Token = "0x6000ED4")]
	[Address(RVA = "0xA06B54", Offset = "0xA06B54", VA = "0xA06B54")]
	public PlayerPreferencesTranslationService()
	{
	}
}
[Token(Token = "0x200024D")]
public class PlayerEnergyController : MonoBehaviour
{
	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameController gameController;

	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private HealthPlayerHUDElementController healthPlayerHUDElementController;

	[Token(Token = "0x4000CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int playerEnergy;

	[Token(Token = "0x4000CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool playerEnergyZeroTriggered;

	[Token(Token = "0x6000ED5")]
	[Address(RVA = "0xA66FD8", Offset = "0xA66FD8", VA = "0xA66FD8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ED6")]
	[Address(RVA = "0xA67014", Offset = "0xA67014", VA = "0xA67014")]
	public void reducePlayerEnergy(int amountToReduceBy)
	{
	}

	[Token(Token = "0x6000ED7")]
	[Address(RVA = "0xA66FF8", Offset = "0xA66FF8", VA = "0xA66FF8")]
	private void setPlayerEnergyStartValue(int energy)
	{
	}

	[Token(Token = "0x6000ED8")]
	[Address(RVA = "0xA67088", Offset = "0xA67088", VA = "0xA67088")]
	private void setPlayerEnergyVisibleValue(int energy)
	{
	}

	[Token(Token = "0x6000ED9")]
	[Address(RVA = "0xA670A4", Offset = "0xA670A4", VA = "0xA670A4")]
	public void resetPlayerEnergy()
	{
	}

	[Token(Token = "0x6000EDA")]
	[Address(RVA = "0xA670D4", Offset = "0xA670D4", VA = "0xA670D4")]
	public PlayerEnergyController()
	{
	}
}
[Token(Token = "0x200024E")]
public class PlayerEnteredMiddleOfPlayAreaController : MonoBehaviour
{
	[Token(Token = "0x4000CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool playerInMiddleOfPlayArea;

	[Token(Token = "0x4000CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private StartTutorialAndOrGameAfterPlayerEnteredMiddleController startTutorialAndOrGameAfterPlayerEnteredMiddleController;

	[Token(Token = "0x17000152")]
	public StartTutorialAndOrGameAfterPlayerEnteredMiddleController StartTutorialAndOrGameAfterPlayerEnteredMiddleController
	{
		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0xA670EC", Offset = "0xA670EC", VA = "0xA670EC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0xA670F4", Offset = "0xA670F4", VA = "0xA670F4")]
		set
		{
		}
	}

	[Token(Token = "0x6000EDB")]
	[Address(RVA = "0xA670E4", Offset = "0xA670E4", VA = "0xA670E4")]
	public bool isPlayerInMiddleOfPlayArea()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EDE")]
	[Address(RVA = "0xA670FC", Offset = "0xA670FC", VA = "0xA670FC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000EDF")]
	[Address(RVA = "0xA671B4", Offset = "0xA671B4", VA = "0xA671B4")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000EE0")]
	[Address(RVA = "0xA67240", Offset = "0xA67240", VA = "0xA67240")]
	public PlayerEnteredMiddleOfPlayAreaController()
	{
	}
}
[Token(Token = "0x200024F")]
public class PlayerHUDPositionController : MonoBehaviour
{
	[Token(Token = "0x4000CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform m_UIElement;

	[Token(Token = "0x4000CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform m_Camera;

	[Token(Token = "0x4000CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float m_Distance;

	[Token(Token = "0x4000CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float smoothTime;

	[Token(Token = "0x4000CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 velocity;

	[Token(Token = "0x6000EE1")]
	[Address(RVA = "0xA02E14", Offset = "0xA02E14", VA = "0xA02E14")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EE2")]
	[Address(RVA = "0xA02F28", Offset = "0xA02F28", VA = "0xA02F28")]
	public PlayerHUDPositionController()
	{
	}
}
[Token(Token = "0x2000250")]
public class ScreenFadeService : MonoBehaviour
{
	[Token(Token = "0x6000EE3")]
	[Address(RVA = "0xA12464", Offset = "0xA12464", VA = "0xA12464", Slot = "4")]
	public virtual void fadeInImmediately()
	{
	}

	[Token(Token = "0x6000EE4")]
	[Address(RVA = "0xA12468", Offset = "0xA12468", VA = "0xA12468", Slot = "5")]
	public virtual void fadeInOnStart()
	{
	}

	[Token(Token = "0x6000EE5")]
	[Address(RVA = "0xA1246C", Offset = "0xA1246C", VA = "0xA1246C", Slot = "6")]
	public virtual void fadeIn()
	{
	}

	[Token(Token = "0x6000EE6")]
	[Address(RVA = "0xA12470", Offset = "0xA12470", VA = "0xA12470", Slot = "7")]
	public virtual void fadeOut()
	{
	}

	[Token(Token = "0x6000EE7")]
	[Address(RVA = "0xA12474", Offset = "0xA12474", VA = "0xA12474")]
	public ScreenFadeService()
	{
	}
}
[Token(Token = "0x2000251")]
public class OVRScreenFadeService : ScreenFadeService
{
	[Token(Token = "0x4000CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private OVRScreenFade OVRScreenFade;

	[Token(Token = "0x6000EE8")]
	[Address(RVA = "0xC81414", Offset = "0xC81414", VA = "0xC81414", Slot = "6")]
	public override void fadeIn()
	{
	}

	[Token(Token = "0x6000EE9")]
	[Address(RVA = "0xC81430", Offset = "0xC81430", VA = "0xC81430", Slot = "7")]
	public override void fadeOut()
	{
	}

	[Token(Token = "0x6000EEA")]
	[Address(RVA = "0xC8144C", Offset = "0xC8144C", VA = "0xC8144C")]
	public OVRScreenFadeService()
	{
	}
}
[Token(Token = "0x2000252")]
public class KoordCoach_PXR_Screen_Fade : MonoBehaviour
{
	[Token(Token = "0x2000253")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CE0C", Offset = "0x69CE0C")]
	private sealed class <ScreenFade>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KoordCoach_PXR_Screen_Fade <>4__this;

		[Token(Token = "0x4000CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <nowTime>5__2;

		[Token(Token = "0x17000153")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EFB")]
			[Address(RVA = "0x149036C", Offset = "0x149036C", VA = "0x149036C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000154")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EFD")]
			[Address(RVA = "0x14903B4", Offset = "0x14903B4", VA = "0x14903B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0x149022C", Offset = "0x149022C", VA = "0x149022C")]
		[DebuggerHidden]
		public <ScreenFade>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0x1490258", Offset = "0x1490258", VA = "0x1490258", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0x149025C", Offset = "0x149025C", VA = "0x149025C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0x1490374", Offset = "0x1490374", VA = "0x1490374", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000254")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CE1C", Offset = "0x69CE1C")]
	private sealed class <ScreenFade>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KoordCoach_PXR_Screen_Fade <>4__this;

		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float startAlpha;

		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float endAlpha;

		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <nowTime>5__2;

		[Token(Token = "0x17000155")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F01")]
			[Address(RVA = "0x1490500", Offset = "0x1490500", VA = "0x1490500", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000156")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F03")]
			[Address(RVA = "0x1490548", Offset = "0x1490548", VA = "0x1490548", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0x14903BC", Offset = "0x14903BC", VA = "0x14903BC")]
		[DebuggerHidden]
		public <ScreenFade>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0x14903E8", Offset = "0x14903E8", VA = "0x14903E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F00")]
		[Address(RVA = "0x14903EC", Offset = "0x14903EC", VA = "0x14903EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F02")]
		[Address(RVA = "0x1490508", Offset = "0x1490508", VA = "0x1490508", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6A182C", Offset = "0x6A182C")]
	public float gradientTime;

	[Token(Token = "0x4000CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6A1864", Offset = "0x6A1864")]
	public Color fadeColor;

	[Token(Token = "0x4000CE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6A189C", Offset = "0x6A189C")]
	private int renderQueue;

	[Token(Token = "0x4000CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MeshRenderer gradientMeshRenderer;

	[Token(Token = "0x4000CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MeshFilter gradientMeshFilter;

	[Token(Token = "0x4000CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material gradientMaterial;

	[Token(Token = "0x4000CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isGradient;

	[Token(Token = "0x4000CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float currentAlpha;

	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float nowFadeAlpha;

	[Token(Token = "0x4000CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<Vector3> verts;

	[Token(Token = "0x4000CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<int> indices;

	[Token(Token = "0x4000CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int N;

	[Token(Token = "0x6000EEB")]
	[Address(RVA = "0xD7BF24", Offset = "0xD7BF24", VA = "0xD7BF24")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EEC")]
	[Address(RVA = "0xD7C108", Offset = "0xD7C108", VA = "0xD7C108")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000EED")]
	[Address(RVA = "0xD7C1AC", Offset = "0xD7C1AC", VA = "0xD7C1AC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000EEE")]
	[Address(RVA = "0xD7BF4C", Offset = "0xD7BF4C", VA = "0xD7BF4C")]
	private void CreateFadeMesh()
	{
	}

	[Token(Token = "0x6000EEF")]
	[Address(RVA = "0xD7C100", Offset = "0xD7C100", VA = "0xD7C100")]
	public void SetCurrentAlpha(float alpha)
	{
	}

	[Token(Token = "0x6000EF0")]
	[Address(RVA = "0xD7C134", Offset = "0xD7C134", VA = "0xD7C134")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A7D54", Offset = "0x6A7D54")]
	private IEnumerator ScreenFade()
	{
		return null;
	}

	[Token(Token = "0x6000EF1")]
	[Address(RVA = "0xD7CA28", Offset = "0xD7CA28", VA = "0xD7CA28")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A7DB4", Offset = "0x6A7DB4")]
	public IEnumerator ScreenFade(float startAlpha, float endAlpha)
	{
		return null;
	}

	[Token(Token = "0x6000EF2")]
	[Address(RVA = "0xD7C910", Offset = "0xD7C910", VA = "0xD7C910")]
	private void SetAlpha()
	{
	}

	[Token(Token = "0x6000EF3")]
	[Address(RVA = "0xD7C310", Offset = "0xD7C310", VA = "0xD7C310")]
	private void CreateModel()
	{
	}

	[Token(Token = "0x6000EF4")]
	[Address(RVA = "0xD7CAB4", Offset = "0xD7CAB4", VA = "0xD7CAB4")]
	public void CreateMakePos(int num)
	{
	}

	[Token(Token = "0x6000EF5")]
	[Address(RVA = "0xD7CC2C", Offset = "0xD7CC2C", VA = "0xD7CC2C")]
	public void OtherMakePos(int num)
	{
	}

	[Token(Token = "0x6000EF6")]
	[Address(RVA = "0xD7C1B0", Offset = "0xD7C1B0", VA = "0xD7C1B0")]
	private void DestoryGradientMesh()
	{
	}

	[Token(Token = "0x6000EF7")]
	[Address(RVA = "0xD7CDC8", Offset = "0xD7CDC8", VA = "0xD7CDC8")]
	public KoordCoach_PXR_Screen_Fade()
	{
	}
}
[Token(Token = "0x2000255")]
public class PicoScreenFadeService : ScreenFadeService
{
	[Token(Token = "0x4000CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private KoordCoach_PXR_Screen_Fade pXR_ScreenFade;

	[Token(Token = "0x6000F04")]
	[Address(RVA = "0xA65FDC", Offset = "0xA65FDC", VA = "0xA65FDC", Slot = "5")]
	public override void fadeInOnStart()
	{
	}

	[Token(Token = "0x6000F05")]
	[Address(RVA = "0xA65FE8", Offset = "0xA65FE8", VA = "0xA65FE8", Slot = "4")]
	public override void fadeInImmediately()
	{
	}

	[Token(Token = "0x6000F06")]
	[Address(RVA = "0xA66008", Offset = "0xA66008", VA = "0xA66008", Slot = "6")]
	public override void fadeIn()
	{
	}

	[Token(Token = "0x6000F07")]
	[Address(RVA = "0xA6604C", Offset = "0xA6604C", VA = "0xA6604C", Slot = "7")]
	public override void fadeOut()
	{
	}

	[Token(Token = "0x6000F08")]
	[Address(RVA = "0xA66090", Offset = "0xA66090", VA = "0xA66090")]
	public PicoScreenFadeService()
	{
	}
}
[Token(Token = "0x2000256")]
public class AdvancedUIFader : MonoBehaviour
{
	[Token(Token = "0x2000257")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CE2C", Offset = "0x69CE2C")]
	private sealed class <WaitForFadeIn>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AdvancedUIFader <>4__this;

		[Token(Token = "0x4000D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool activateObjects;

		[Token(Token = "0x17000158")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F2E")]
			[Address(RVA = "0x14BB0E4", Offset = "0x14BB0E4", VA = "0x14BB0E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000159")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F30")]
			[Address(RVA = "0x14BB12C", Offset = "0x14BB12C", VA = "0x14BB12C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0x14BB00C", Offset = "0x14BB00C", VA = "0x14BB00C")]
		[DebuggerHidden]
		public <WaitForFadeIn>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000F2C")]
		[Address(RVA = "0x14BB038", Offset = "0x14BB038", VA = "0x14BB038", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0x14BB03C", Offset = "0x14BB03C", VA = "0x14BB03C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0x14BB0EC", Offset = "0x14BB0EC", VA = "0x14BB0EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000258")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CE3C", Offset = "0x69CE3C")]
	private sealed class <InteruptAndFadeIn>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AdvancedUIFader <>4__this;

		[Token(Token = "0x1700015A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F34")]
			[Address(RVA = "0x14BAEA8", Offset = "0x14BAEA8", VA = "0x14BAEA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F36")]
			[Address(RVA = "0x14BAEF0", Offset = "0x14BAEF0", VA = "0x14BAEF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F31")]
		[Address(RVA = "0x14BADE4", Offset = "0x14BADE4", VA = "0x14BADE4")]
		[DebuggerHidden]
		public <InteruptAndFadeIn>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6000F32")]
		[Address(RVA = "0x14BAE10", Offset = "0x14BAE10", VA = "0x14BAE10", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F33")]
		[Address(RVA = "0x14BAE14", Offset = "0x14BAE14", VA = "0x14BAE14", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F35")]
		[Address(RVA = "0x14BAEB0", Offset = "0x14BAEB0", VA = "0x14BAEB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000259")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CE4C", Offset = "0x69CE4C")]
	private sealed class <CheckAndFadeIn>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AdvancedUIFader <>4__this;

		[Token(Token = "0x1700015C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F3A")]
			[Address(RVA = "0x14B8B98", Offset = "0x14B8B98", VA = "0x14B8B98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F3C")]
			[Address(RVA = "0x14B8BE0", Offset = "0x14B8BE0", VA = "0x14B8BE0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F37")]
		[Address(RVA = "0x14B8AD0", Offset = "0x14B8AD0", VA = "0x14B8AD0")]
		[DebuggerHidden]
		public <CheckAndFadeIn>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6000F38")]
		[Address(RVA = "0x14B8AFC", Offset = "0x14B8AFC", VA = "0x14B8AFC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F39")]
		[Address(RVA = "0x14B8B00", Offset = "0x14B8B00", VA = "0x14B8B00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F3B")]
		[Address(RVA = "0x14B8BA0", Offset = "0x14B8BA0", VA = "0x14B8BA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200025A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CE5C", Offset = "0x69CE5C")]
	private sealed class <waitUntilFadeOutAndDeactivateObjectAndAllChildren>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject sourceGameObject;

		[Token(Token = "0x4000D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AdvancedUIFader <>4__this;

		[Token(Token = "0x4000D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool deactivateObjects;

		[Token(Token = "0x4000D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action doLast;

		[Token(Token = "0x1700015E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F40")]
			[Address(RVA = "0x14BB408", Offset = "0x14BB408", VA = "0x14BB408", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F42")]
			[Address(RVA = "0x14BB450", Offset = "0x14BB450", VA = "0x14BB450", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0x14BB340", Offset = "0x14BB340", VA = "0x14BB340")]
		[DebuggerHidden]
		public <waitUntilFadeOutAndDeactivateObjectAndAllChildren>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0x14BB36C", Offset = "0x14BB36C", VA = "0x14BB36C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0x14BB370", Offset = "0x14BB370", VA = "0x14BB370", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F41")]
		[Address(RVA = "0x14BB410", Offset = "0x14BB410", VA = "0x14BB410", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200025B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CE6C", Offset = "0x69CE6C")]
	private sealed class <FadeInSpecificObjects>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AdvancedUIFader <>4__this;

		[Token(Token = "0x4000D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool activateObjects;

		[Token(Token = "0x4000D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<GameObject> objectsToFadeIn;

		[Token(Token = "0x4000D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action doLast;

		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <targetAlpha>5__2;

		[Token(Token = "0x17000160")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F46")]
			[Address(RVA = "0x14B9D10", Offset = "0x14B9D10", VA = "0x14B9D10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000161")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F48")]
			[Address(RVA = "0x14B9D58", Offset = "0x14B9D58", VA = "0x14B9D58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F43")]
		[Address(RVA = "0x14B9504", Offset = "0x14B9504", VA = "0x14B9504")]
		[DebuggerHidden]
		public <FadeInSpecificObjects>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x6000F44")]
		[Address(RVA = "0x14B9530", Offset = "0x14B9530", VA = "0x14B9530", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F45")]
		[Address(RVA = "0x14B9534", Offset = "0x14B9534", VA = "0x14B9534", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F47")]
		[Address(RVA = "0x14B9D18", Offset = "0x14B9D18", VA = "0x14B9D18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200025C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CE7C", Offset = "0x69CE7C")]
	private sealed class <FadeIn>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AdvancedUIFader <>4__this;

		[Token(Token = "0x4000D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool activateObjects;

		[Token(Token = "0x4000D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <lowestAlpha>5__2;

		[Token(Token = "0x17000162")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F4C")]
			[Address(RVA = "0x14B94B4", Offset = "0x14B94B4", VA = "0x14B94B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000163")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F4E")]
			[Address(RVA = "0x14B94FC", Offset = "0x14B94FC", VA = "0x14B94FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F49")]
		[Address(RVA = "0x14B8D00", Offset = "0x14B8D00", VA = "0x14B8D00")]
		[DebuggerHidden]
		public <FadeIn>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0x14B8D2C", Offset = "0x14B8D2C", VA = "0x14B8D2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0x14B8D30", Offset = "0x14B8D30", VA = "0x14B8D30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0x14B94BC", Offset = "0x14B94BC", VA = "0x14B94BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200025D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CE8C", Offset = "0x69CE8C")]
	private sealed class <WaitForFadeOut>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AdvancedUIFader <>4__this;

		[Token(Token = "0x17000164")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F52")]
			[Address(RVA = "0x14BB20C", Offset = "0x14BB20C", VA = "0x14BB20C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000165")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F54")]
			[Address(RVA = "0x14BB254", Offset = "0x14BB254", VA = "0x14BB254", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F4F")]
		[Address(RVA = "0x14BB134", Offset = "0x14BB134", VA = "0x14BB134")]
		[DebuggerHidden]
		public <WaitForFadeOut>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6000F50")]
		[Address(RVA = "0x14BB160", Offset = "0x14BB160", VA = "0x14BB160", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F51")]
		[Address(RVA = "0x14BB164", Offset = "0x14BB164", VA = "0x14BB164", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F53")]
		[Address(RVA = "0x14BB214", Offset = "0x14BB214", VA = "0x14BB214", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200025E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CE9C", Offset = "0x69CE9C")]
	private sealed class <WaitUntilFadingComplete>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AdvancedUIFader <>4__this;

		[Token(Token = "0x17000166")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F58")]
			[Address(RVA = "0x14BB2F0", Offset = "0x14BB2F0", VA = "0x14BB2F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000167")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F5A")]
			[Address(RVA = "0x14BB338", Offset = "0x14BB338", VA = "0x14BB338", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F55")]
		[Address(RVA = "0x14BB25C", Offset = "0x14BB25C", VA = "0x14BB25C")]
		[DebuggerHidden]
		public <WaitUntilFadingComplete>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6000F56")]
		[Address(RVA = "0x14BB288", Offset = "0x14BB288", VA = "0x14BB288", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F57")]
		[Address(RVA = "0x14BB28C", Offset = "0x14BB28C", VA = "0x14BB28C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F59")]
		[Address(RVA = "0x14BB2F8", Offset = "0x14BB2F8", VA = "0x14BB2F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200025F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CEAC", Offset = "0x69CEAC")]
	private sealed class <InteruptAndFadeOut>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AdvancedUIFader <>4__this;

		[Token(Token = "0x17000168")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F5E")]
			[Address(RVA = "0x14BAFBC", Offset = "0x14BAFBC", VA = "0x14BAFBC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000169")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F60")]
			[Address(RVA = "0x14BB004", Offset = "0x14BB004", VA = "0x14BB004", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0x14BAEF8", Offset = "0x14BAEF8", VA = "0x14BAEF8")]
		[DebuggerHidden]
		public <InteruptAndFadeOut>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0x14BAF24", Offset = "0x14BAF24", VA = "0x14BAF24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0x14BAF28", Offset = "0x14BAF28", VA = "0x14BAF28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0x14BAFC4", Offset = "0x14BAFC4", VA = "0x14BAFC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000260")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CEBC", Offset = "0x69CEBC")]
	private sealed class <CheckAndFadeOut>d__34 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AdvancedUIFader <>4__this;

		[Token(Token = "0x1700016A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F64")]
			[Address(RVA = "0x14B8CB0", Offset = "0x14B8CB0", VA = "0x14B8CB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F66")]
			[Address(RVA = "0x14B8CF8", Offset = "0x14B8CF8", VA = "0x14B8CF8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F61")]
		[Address(RVA = "0x14B8BE8", Offset = "0x14B8BE8", VA = "0x14B8BE8")]
		[DebuggerHidden]
		public <CheckAndFadeOut>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x6000F62")]
		[Address(RVA = "0x14B8C14", Offset = "0x14B8C14", VA = "0x14B8C14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F63")]
		[Address(RVA = "0x14B8C18", Offset = "0x14B8C18", VA = "0x14B8C18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F65")]
		[Address(RVA = "0x14B8CB8", Offset = "0x14B8CB8", VA = "0x14B8CB8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000261")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CECC", Offset = "0x69CECC")]
	private sealed class <FadeOutSpecificObjects>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<GameObject> objectsToFadeOut;

		[Token(Token = "0x4000D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AdvancedUIFader <>4__this;

		[Token(Token = "0x4000D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool deactivateObjects;

		[Token(Token = "0x4000D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action doLast;

		[Token(Token = "0x4000D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <highestAlpha>5__2;

		[Token(Token = "0x1700016C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F6A")]
			[Address(RVA = "0x14BAD94", Offset = "0x14BAD94", VA = "0x14BAD94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F6C")]
			[Address(RVA = "0x14BADDC", Offset = "0x14BADDC", VA = "0x14BADDC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F67")]
		[Address(RVA = "0x14BA4BC", Offset = "0x14BA4BC", VA = "0x14BA4BC")]
		[DebuggerHidden]
		public <FadeOutSpecificObjects>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x6000F68")]
		[Address(RVA = "0x14BA4E8", Offset = "0x14BA4E8", VA = "0x14BA4E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F69")]
		[Address(RVA = "0x14BA4EC", Offset = "0x14BA4EC", VA = "0x14BA4EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F6B")]
		[Address(RVA = "0x14BAD9C", Offset = "0x14BAD9C", VA = "0x14BAD9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000262")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CEDC", Offset = "0x69CEDC")]
	private sealed class <FadeOut>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AdvancedUIFader <>4__this;

		[Token(Token = "0x4000D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool deactivateObjects;

		[Token(Token = "0x4000D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <highestAlpha>5__2;

		[Token(Token = "0x1700016E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F70")]
			[Address(RVA = "0x14BA46C", Offset = "0x14BA46C", VA = "0x14BA46C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F72")]
			[Address(RVA = "0x14BA4B4", Offset = "0x14BA4B4", VA = "0x14BA4B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F6D")]
		[Address(RVA = "0x14B9D60", Offset = "0x14B9D60", VA = "0x14B9D60")]
		[DebuggerHidden]
		public <FadeOut>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x6000F6E")]
		[Address(RVA = "0x14B9D8C", Offset = "0x14B9D8C", VA = "0x14B9D8C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F6F")]
		[Address(RVA = "0x14B9D90", Offset = "0x14B9D90", VA = "0x14B9D90", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F71")]
		[Address(RVA = "0x14BA474", Offset = "0x14BA474", VA = "0x14BA474", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CF6")]
	private const string SCRIPT_NAME = "AdvancedUIFader";

	[Token(Token = "0x4000CF9")]
	private const float DEFAULT_SPEED = 15f;

	[Token(Token = "0x4000CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float fadeSpeed;

	[Token(Token = "0x4000CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<GameObject> m_GroupsToFade;

	[Token(Token = "0x4000CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool m_Fading;

	[Token(Token = "0x4000CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A1904", Offset = "0x6A1904")]
	private bool <Visible>k__BackingField;

	[Token(Token = "0x17000157")]
	public bool Visible
	{
		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0x14A05A8", Offset = "0x14A05A8", VA = "0x14A05A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7EF4", Offset = "0x6A7EF4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0x14A05B0", Offset = "0x14A05B0", VA = "0x14A05B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7F04", Offset = "0x6A7F04")]
		private set
		{
		}
	}

	[Token(Token = "0x14000010")]
	public event Action OnFadeInComplete
	{
		[Token(Token = "0x6000F09")]
		[Address(RVA = "0x14A0328", Offset = "0x14A0328", VA = "0x14A0328")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7EB4", Offset = "0x6A7EB4")]
		add
		{
		}
		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0x14A03C8", Offset = "0x14A03C8", VA = "0x14A03C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7EC4", Offset = "0x6A7EC4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000011")]
	public event Action OnFadeOutComplete
	{
		[Token(Token = "0x6000F0B")]
		[Address(RVA = "0x14A0468", Offset = "0x14A0468", VA = "0x14A0468")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7ED4", Offset = "0x6A7ED4")]
		add
		{
		}
		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0x14A0508", Offset = "0x14A0508", VA = "0x14A0508")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A7EE4", Offset = "0x6A7EE4")]
		remove
		{
		}
	}

	[Token(Token = "0x6000F0F")]
	[Address(RVA = "0x14A05BC", Offset = "0x14A05BC", VA = "0x14A05BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A7F14", Offset = "0x6A7F14")]
	public IEnumerator WaitForFadeIn(bool activateObjects)
	{
		return null;
	}

	[Token(Token = "0x6000F10")]
	[Address(RVA = "0x14A0648", Offset = "0x14A0648", VA = "0x14A0648")]
	public void setFadeSpeed(float speed)
	{
	}

	[Token(Token = "0x6000F11")]
	[Address(RVA = "0x14A0650", Offset = "0x14A0650", VA = "0x14A0650")]
	public void resetFadeSpeed()
	{
	}

	[Token(Token = "0x6000F12")]
	[Address(RVA = "0x14A065C", Offset = "0x14A065C", VA = "0x14A065C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A7F74", Offset = "0x6A7F74")]
	public IEnumerator InteruptAndFadeIn()
	{
		return null;
	}

	[Token(Token = "0x6000F13")]
	[Address(RVA = "0x14A06D4", Offset = "0x14A06D4", VA = "0x14A06D4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A7FD4", Offset = "0x6A7FD4")]
	public IEnumerator CheckAndFadeIn()
	{
		return null;
	}

	[Token(Token = "0x6000F14")]
	[Address(RVA = "0x14A074C", Offset = "0x14A074C", VA = "0x14A074C")]
	public List<GameObject> createArrayListFromArrayOfObjects(GameObject[] objects)
	{
		return null;
	}

	[Token(Token = "0x6000F15")]
	[Address(RVA = "0x14A07E8", Offset = "0x14A07E8", VA = "0x14A07E8")]
	public void activateAndFadeInObjectAndAllChildren(GameObject[] topLevelGameObjects, Action doLast)
	{
	}

	[Token(Token = "0x6000F16")]
	[Address(RVA = "0x14A0AC0", Offset = "0x14A0AC0", VA = "0x14A0AC0")]
	public void activateAndFadeInObjectAndAllChildren(GameObject sourceGameObject, Action doLast)
	{
	}

	[Token(Token = "0x6000F17")]
	[Address(RVA = "0x14A0C2C", Offset = "0x14A0C2C", VA = "0x14A0C2C")]
	public void activateAndFadeInObjectAndAllChildren(List<GameObject> objectAndAllChildren, Action doLast)
	{
	}

	[Token(Token = "0x6000F18")]
	[Address(RVA = "0x14A0D88", Offset = "0x14A0D88", VA = "0x14A0D88")]
	public void fadeOutAndDeactivateObjectAndAllChildrenCoroutine(bool deactivateObjects, List<GameObject> objectAndAllChildren, Action doLast)
	{
	}

	[Token(Token = "0x6000F19")]
	[Address(RVA = "0x14A0F48", Offset = "0x14A0F48", VA = "0x14A0F48")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A8034", Offset = "0x6A8034")]
	public IEnumerator waitUntilFadeOutAndDeactivateObjectAndAllChildren(bool deactivateObjects, GameObject sourceGameObject, Action doLast)
	{
		return null;
	}

	[Token(Token = "0x6000F1A")]
	[Address(RVA = "0x14A1004", Offset = "0x14A1004", VA = "0x14A1004")]
	public void activateAndFadeInObjectsCoroutine(List<GameObject> objectsToFadeIn, Action doLast)
	{
	}

	[Token(Token = "0x6000F1B")]
	[Address(RVA = "0x14A1160", Offset = "0x14A1160", VA = "0x14A1160")]
	public void setAlphaOnObjectsAndActivate(List<GameObject> objects, float alpha)
	{
	}

	[Token(Token = "0x6000F1C")]
	[Address(RVA = "0x14A128C", Offset = "0x14A128C", VA = "0x14A128C")]
	public void setAlphaOnObjectsAndSetActiveState(List<GameObject> objects, float alpha, bool activeState)
	{
	}

	[Token(Token = "0x6000F1D")]
	[Address(RVA = "0x14A0A04", Offset = "0x14A0A04", VA = "0x14A0A04")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A8094", Offset = "0x6A8094")]
	public IEnumerator FadeInSpecificObjects(bool activateObjects, List<GameObject> objectsToFadeIn, Action doLast)
	{
		return null;
	}

	[Token(Token = "0x6000F1E")]
	[Address(RVA = "0x14A13C8", Offset = "0x14A13C8", VA = "0x14A13C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A80F4", Offset = "0x6A80F4")]
	public IEnumerator FadeIn(bool activateObjects)
	{
		return null;
	}

	[Token(Token = "0x6000F1F")]
	[Address(RVA = "0x14A1454", Offset = "0x14A1454", VA = "0x14A1454")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A8154", Offset = "0x6A8154")]
	public IEnumerator WaitForFadeOut()
	{
		return null;
	}

	[Token(Token = "0x6000F20")]
	[Address(RVA = "0x14A14CC", Offset = "0x14A14CC", VA = "0x14A14CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A81B4", Offset = "0x6A81B4")]
	public IEnumerator WaitUntilFadingComplete()
	{
		return null;
	}

	[Token(Token = "0x6000F21")]
	[Address(RVA = "0x14A1544", Offset = "0x14A1544", VA = "0x14A1544")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A8214", Offset = "0x6A8214")]
	public IEnumerator InteruptAndFadeOut()
	{
		return null;
	}

	[Token(Token = "0x6000F22")]
	[Address(RVA = "0x14A15BC", Offset = "0x14A15BC", VA = "0x14A15BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A8274", Offset = "0x6A8274")]
	public IEnumerator CheckAndFadeOut()
	{
		return null;
	}

	[Token(Token = "0x6000F23")]
	[Address(RVA = "0x149FE28", Offset = "0x149FE28", VA = "0x149FE28")]
	public void setSpecificAlphaOnObjects(List<GameObject> objectsToSetAlpha, float alphaToSet)
	{
	}

	[Token(Token = "0x6000F24")]
	[Address(RVA = "0x14A0E8C", Offset = "0x14A0E8C", VA = "0x14A0E8C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A82D4", Offset = "0x6A82D4")]
	public IEnumerator FadeOutSpecificObjects(bool deactivateObjects, List<GameObject> objectsToFadeOut, Action doLast)
	{
		return null;
	}

	[Token(Token = "0x6000F25")]
	[Address(RVA = "0x14A1634", Offset = "0x14A1634", VA = "0x14A1634")]
	public void setObjectsActive(ArrayList objects, bool activeState)
	{
	}

	[Token(Token = "0x6000F26")]
	[Address(RVA = "0x14A18A8", Offset = "0x14A18A8", VA = "0x14A18A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A8334", Offset = "0x6A8334")]
	public IEnumerator FadeOut(bool deactivateObjects)
	{
		return null;
	}

	[Token(Token = "0x6000F27")]
	[Address(RVA = "0x14A1934", Offset = "0x14A1934", VA = "0x14A1934")]
	public void setObjectsToFadeInOrOut(List<GameObject> groupsToFade)
	{
	}

	[Token(Token = "0x6000F28")]
	[Address(RVA = "0x14A193C", Offset = "0x14A193C", VA = "0x14A193C")]
	public List<GameObject> getObjectsToFadeInOrOut()
	{
		return null;
	}

	[Token(Token = "0x6000F29")]
	[Address(RVA = "0x14A1944", Offset = "0x14A1944", VA = "0x14A1944")]
	public bool areAllObjectsFadedIn(List<GameObject> objectsToCheck)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F2A")]
	[Address(RVA = "0x14A1C70", Offset = "0x14A1C70", VA = "0x14A1C70")]
	public AdvancedUIFader()
	{
	}
}
[Token(Token = "0x2000263")]
public class BackToMainMenuPeformOnInteraction : PerformOnInteraction
{
	[Token(Token = "0x4000D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ScreenFadeService screenFadeService;

	[Token(Token = "0x6000F73")]
	[Address(RVA = "0x14A8538", Offset = "0x14A8538", VA = "0x14A8538", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x6000F74")]
	[Address(RVA = "0x14A85B4", Offset = "0x14A85B4", VA = "0x14A85B4")]
	public BackToMainMenuPeformOnInteraction()
	{
	}
}
[Token(Token = "0x2000264")]
public class ClickToLoadAsync : MonoBehaviour
{
	[Token(Token = "0x2000265")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CEEC", Offset = "0x69CEEC")]
	private sealed class <loadLevelWithBar>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ClickToLoadAsync <>4__this;

		[Token(Token = "0x4000D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int level;

		[Token(Token = "0x17000170")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F7D")]
			[Address(RVA = "0x14BFA2C", Offset = "0x14BFA2C", VA = "0x14BFA2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000171")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F7F")]
			[Address(RVA = "0x14BFA74", Offset = "0x14BFA74", VA = "0x14BFA74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0x14BF8E4", Offset = "0x14BF8E4", VA = "0x14BF8E4")]
		[DebuggerHidden]
		public <loadLevelWithBar>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0x14BF910", Offset = "0x14BF910", VA = "0x14BF910", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0x14BF914", Offset = "0x14BF914", VA = "0x14BF914", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0x14BFA34", Offset = "0x14BFA34", VA = "0x14BFA34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Slider loadingBar;

	[Token(Token = "0x4000D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject loadingImage;

	[Token(Token = "0x4000D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AsyncOperation asyncOperation;

	[Token(Token = "0x6000F75")]
	[Address(RVA = "0xF2A92C", Offset = "0xF2A92C", VA = "0xF2A92C")]
	public void clickAsync(int level)
	{
	}

	[Token(Token = "0x6000F76")]
	[Address(RVA = "0xF2A97C", Offset = "0xF2A97C", VA = "0xF2A97C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A8754", Offset = "0x6A8754")]
	private IEnumerator loadLevelWithBar(int level)
	{
		return null;
	}

	[Token(Token = "0x6000F77")]
	[Address(RVA = "0xF2AA04", Offset = "0xF2AA04", VA = "0xF2AA04")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F78")]
	[Address(RVA = "0xF2AA08", Offset = "0xF2AA08", VA = "0xF2AA08")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F79")]
	[Address(RVA = "0xF2AA0C", Offset = "0xF2AA0C", VA = "0xF2AA0C")]
	public ClickToLoadAsync()
	{
	}
}
[Token(Token = "0x2000266")]
public class ColorChanger : MonoBehaviour
{
	[Token(Token = "0x2000267")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CEFC", Offset = "0x69CEFC")]
	private sealed class <blinkingColorChangeCoroutine>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image[] images;

		[Token(Token = "0x4000D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color originalColor;

		[Token(Token = "0x4000D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ColorChanger <>4__this;

		[Token(Token = "0x4000D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color nextColor;

		[Token(Token = "0x17000172")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F8F")]
			[Address(RVA = "0x14BFC84", Offset = "0x14BFC84", VA = "0x14BFC84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000173")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F91")]
			[Address(RVA = "0x14BFCCC", Offset = "0x14BFCCC", VA = "0x14BFCCC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0x14BFB88", Offset = "0x14BFB88", VA = "0x14BFB88")]
		[DebuggerHidden]
		public <blinkingColorChangeCoroutine>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0x14BFBB4", Offset = "0x14BFBB4", VA = "0x14BFBB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0x14BFBB8", Offset = "0x14BFBB8", VA = "0x14BFBB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0x14BFC8C", Offset = "0x14BFC8C", VA = "0x14BFC8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000268")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CF0C", Offset = "0x69CF0C")]
	private sealed class <fadeBetweenColorsLoopCoroutine>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ColorChanger <>4__this;

		[Token(Token = "0x4000D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image[] images;

		[Token(Token = "0x4000D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color originalColor;

		[Token(Token = "0x4000D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color nextColor;

		[Token(Token = "0x4000D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool <increase>5__2;

		[Token(Token = "0x4000D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float <lerpAmount>5__3;

		[Token(Token = "0x4000D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float <sizeChangingMultiplier>5__4;

		[Token(Token = "0x17000174")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F95")]
			[Address(RVA = "0x14BFE20", Offset = "0x14BFE20", VA = "0x14BFE20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000175")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F97")]
			[Address(RVA = "0x14BFE68", Offset = "0x14BFE68", VA = "0x14BFE68", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F92")]
		[Address(RVA = "0x14BFCD4", Offset = "0x14BFCD4", VA = "0x14BFCD4")]
		[DebuggerHidden]
		public <fadeBetweenColorsLoopCoroutine>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6000F93")]
		[Address(RVA = "0x14BFD00", Offset = "0x14BFD00", VA = "0x14BFD00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F94")]
		[Address(RVA = "0x14BFD04", Offset = "0x14BFD04", VA = "0x14BFD04", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0x14BFE28", Offset = "0x14BFE28", VA = "0x14BFE28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000269")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CF1C", Offset = "0x69CF1C")]
	private sealed class <fadeFromColorToColorCoroutine>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timeForFade;

		[Token(Token = "0x4000D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ColorChanger <>4__this;

		[Token(Token = "0x4000D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Image[] images;

		[Token(Token = "0x4000D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color originalColor;

		[Token(Token = "0x4000D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color nextColor;

		[Token(Token = "0x4000D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float <lerpAmount>5__2;

		[Token(Token = "0x4000D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float <iterationChange>5__3;

		[Token(Token = "0x17000176")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F9B")]
			[Address(RVA = "0x14C0198", Offset = "0x14C0198", VA = "0x14C0198", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000177")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F9D")]
			[Address(RVA = "0x14C01E0", Offset = "0x14C01E0", VA = "0x14C01E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F98")]
		[Address(RVA = "0x14C007C", Offset = "0x14C007C", VA = "0x14C007C")]
		[DebuggerHidden]
		public <fadeFromColorToColorCoroutine>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000F99")]
		[Address(RVA = "0x14C00A8", Offset = "0x14C00A8", VA = "0x14C00A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0x14C00AC", Offset = "0x14C00AC", VA = "0x14C00AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0x14C01A0", Offset = "0x14C01A0", VA = "0x14C01A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200026A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CF2C", Offset = "0x69CF2C")]
	private sealed class <fadeFromColorToColorAndBackCoroutine>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timeForFade;

		[Token(Token = "0x4000D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ColorChanger <>4__this;

		[Token(Token = "0x4000D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Image[] images;

		[Token(Token = "0x4000D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color originalColor;

		[Token(Token = "0x4000D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color nextColor;

		[Token(Token = "0x4000D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float <lerpAmount>5__2;

		[Token(Token = "0x4000D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float <iterationChange>5__3;

		[Token(Token = "0x17000178")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FA1")]
			[Address(RVA = "0x14C002C", Offset = "0x14C002C", VA = "0x14C002C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000179")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FA3")]
			[Address(RVA = "0x14C0074", Offset = "0x14C0074", VA = "0x14C0074", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F9E")]
		[Address(RVA = "0x14BFE70", Offset = "0x14BFE70", VA = "0x14BFE70")]
		[DebuggerHidden]
		public <fadeFromColorToColorAndBackCoroutine>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6000F9F")]
		[Address(RVA = "0x14BFE9C", Offset = "0x14BFE9C", VA = "0x14BFE9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FA0")]
		[Address(RVA = "0x14BFEA0", Offset = "0x14BFEA0", VA = "0x14BFEA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0x14C0034", Offset = "0x14C0034", VA = "0x14C0034", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D3A")]
	private const float COLOR_CHANGE_ITERATOR_AMOUNT = 0.02f;

	[Token(Token = "0x4000D3B")]
	private const float ITERATION_SLEEP_AMOUNT_SECONDS = 0.01f;

	[Token(Token = "0x4000D3C")]
	private const float ITERATION_SLEEP_AMOUNT_MILISECONDS = 10f;

	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private WaitForSeconds waitForOneSecond;

	[Token(Token = "0x4000D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WaitForSeconds waitForIterationAmount;

	[Token(Token = "0x4000D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Coroutine activeCoroutine;

	[Token(Token = "0x6000F80")]
	[Address(RVA = "0xF2AF48", Offset = "0xF2AF48", VA = "0xF2AF48")]
	public void gameEnded()
	{
	}

	[Token(Token = "0x6000F81")]
	[Address(RVA = "0xF2AF78", Offset = "0xF2AF78", VA = "0xF2AF78")]
	public void startBlinkingColorChangeCoroutine(Image[] images, Color originalColor, Color newColor)
	{
	}

	[Token(Token = "0x6000F82")]
	[Address(RVA = "0xF2B140", Offset = "0xF2B140", VA = "0xF2B140")]
	public void startFadeBetweenColorsLoopCoroutine(Image[] images, Color originalColor, Color newColor, bool stopCoroutine)
	{
	}

	[Token(Token = "0x6000F83")]
	[Address(RVA = "0xF2B314", Offset = "0xF2B314", VA = "0xF2B314")]
	public void fadeFromColorToColor(Image[] images, Color originalColor, Color newColor, float time)
	{
	}

	[Token(Token = "0x6000F84")]
	[Address(RVA = "0xF2B4C0", Offset = "0xF2B4C0", VA = "0xF2B4C0")]
	public void fadeFromColorToColorAndBack(Image[] images, Color originalColor, Color newColor, float time)
	{
	}

	[Token(Token = "0x6000F85")]
	[Address(RVA = "0xF2B024", Offset = "0xF2B024", VA = "0xF2B024")]
	public void stopActiveCoroutine()
	{
	}

	[Token(Token = "0x6000F86")]
	[Address(RVA = "0xF2B6AC", Offset = "0xF2B6AC", VA = "0xF2B6AC")]
	public void setImageColors(Image[] images, Color newColor)
	{
	}

	[Token(Token = "0x6000F87")]
	[Address(RVA = "0xF2B05C", Offset = "0xF2B05C", VA = "0xF2B05C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A8804", Offset = "0x6A8804")]
	protected IEnumerator blinkingColorChangeCoroutine(Image[] images, Color originalColor, Color nextColor)
	{
		return null;
	}

	[Token(Token = "0x6000F88")]
	[Address(RVA = "0xF2B230", Offset = "0xF2B230", VA = "0xF2B230")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A8864", Offset = "0x6A8864")]
	protected IEnumerator fadeBetweenColorsLoopCoroutine(Image[] images, Color originalColor, Color nextColor)
	{
		return null;
	}

	[Token(Token = "0x6000F89")]
	[Address(RVA = "0xF2B3D0", Offset = "0xF2B3D0", VA = "0xF2B3D0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A88C4", Offset = "0x6A88C4")]
	protected IEnumerator fadeFromColorToColorCoroutine(Image[] images, Color originalColor, Color nextColor, float timeForFade)
	{
		return null;
	}

	[Token(Token = "0x6000F8A")]
	[Address(RVA = "0xF2B5BC", Offset = "0xF2B5BC", VA = "0xF2B5BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A8924", Offset = "0x6A8924")]
	protected IEnumerator fadeFromColorToColorAndBackCoroutine(Image[] images, Color originalColor, Color nextColor, float timeForFade)
	{
		return null;
	}

	[Token(Token = "0x6000F8B")]
	[Address(RVA = "0xF2B858", Offset = "0xF2B858", VA = "0xF2B858")]
	public ColorChanger()
	{
	}
}
[Token(Token = "0x200026B")]
public class DisabledButton : ButtonChangeColorPerformOnInteraction
{
	[Token(Token = "0x200026C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CF3C", Offset = "0x69CF3C")]
	private sealed class <resetColorCoroutine>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DisabledButton <>4__this;

		[Token(Token = "0x1700017A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FAF")]
			[Address(RVA = "0x14C337C", Offset = "0x14C337C", VA = "0x14C337C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FB1")]
			[Address(RVA = "0x14C33C4", Offset = "0x14C33C4", VA = "0x14C33C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0x14C32C0", Offset = "0x14C32C0", VA = "0x14C32C0")]
		[DebuggerHidden]
		public <resetColorCoroutine>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0x14C32EC", Offset = "0x14C32EC", VA = "0x14C32EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0x14C32F0", Offset = "0x14C32F0", VA = "0x14C32F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0x14C3384", Offset = "0x14C3384", VA = "0x14C3384", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	protected bool button_Enabled;

	[Token(Token = "0x4000D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	protected AudioController audioController;

	[Token(Token = "0x4000D63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected Coroutine activeResetColorCoroutine;

	[Token(Token = "0x4000D64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected WaitForSeconds waitForHalfSecond;

	[Token(Token = "0x4000D65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	protected Color disabledInnerColor;

	[Token(Token = "0x4000D66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	protected Color disabledOuterColor;

	[Token(Token = "0x4000D67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	protected Color enabledInnerColor;

	[Token(Token = "0x4000D68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	protected Color enabledOuterColor;

	[Token(Token = "0x4000D69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	protected Color clickedColor;

	[Token(Token = "0x4000D6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	protected GameObject parentObject;

	[Token(Token = "0x4000D6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	protected AdvancedUIFader advancedUIFader;

	[Token(Token = "0x6000FA4")]
	[Address(RVA = "0x959C2C", Offset = "0x959C2C", VA = "0x959C2C")]
	public void enable()
	{
	}

	[Token(Token = "0x6000FA5")]
	[Address(RVA = "0x959C90", Offset = "0x959C90", VA = "0x959C90")]
	public void disable()
	{
	}

	[Token(Token = "0x6000FA6")]
	[Address(RVA = "0x959CF0", Offset = "0x959CF0", VA = "0x959CF0", Slot = "5")]
	public override void onRayOver()
	{
	}

	[Token(Token = "0x6000FA7")]
	[Address(RVA = "0x959E24", Offset = "0x959E24", VA = "0x959E24", Slot = "6")]
	public override void onRayLeave()
	{
	}

	[Token(Token = "0x6000FA8")]
	[Address(RVA = "0x959F3C", Offset = "0x959F3C", VA = "0x959F3C", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x6000FA9")]
	[Address(RVA = "0x959F6C", Offset = "0x959F6C", VA = "0x959F6C", Slot = "9")]
	protected virtual void disabledButtonOnClickedFunctionality()
	{
	}

	[Token(Token = "0x6000FAA")]
	[Address(RVA = "0x959F70", Offset = "0x959F70", VA = "0x959F70")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A8AC4", Offset = "0x6A8AC4")]
	protected IEnumerator resetColorCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000FAB")]
	[Address(RVA = "0x959FE8", Offset = "0x959FE8", VA = "0x959FE8")]
	public DisabledButton()
	{
	}
}
[Token(Token = "0x200026D")]
public class ContinuePausedGamePerformOnInteraction : PerformOnInteraction
{
	[Token(Token = "0x4000D6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GamePausedController gamePausedController;

	[Token(Token = "0x6000FB2")]
	[Address(RVA = "0xA6B7C4", Offset = "0xA6B7C4", VA = "0xA6B7C4", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x6000FB3")]
	[Address(RVA = "0xA6B7E0", Offset = "0xA6B7E0", VA = "0xA6B7E0")]
	public ContinuePausedGamePerformOnInteraction()
	{
	}
}
[Token(Token = "0x200026E")]
public class GoToSettingsGamePausedDisabledButton : DisabledButton
{
	[Token(Token = "0x4000D70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private GamePausedController gamePausedController;

	[Token(Token = "0x6000FB4")]
	[Address(RVA = "0x9F57EC", Offset = "0x9F57EC", VA = "0x9F57EC", Slot = "9")]
	protected override void disabledButtonOnClickedFunctionality()
	{
	}

	[Token(Token = "0x6000FB5")]
	[Address(RVA = "0x9F5804", Offset = "0x9F5804", VA = "0x9F5804")]
	public GoToSettingsGamePausedDisabledButton()
	{
	}
}
[Token(Token = "0x200026F")]
public class GoToSettingsPerformOnInteraction : PerformOnInteraction
{
	[Token(Token = "0x4000D71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GamePausedController gamePausedController;

	[Token(Token = "0x6000FB6")]
	[Address(RVA = "0x9F580C", Offset = "0x9F580C", VA = "0x9F580C", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x6000FB7")]
	[Address(RVA = "0x9F5824", Offset = "0x9F5824", VA = "0x9F5824")]
	public GoToSettingsPerformOnInteraction()
	{
	}
}
[Token(Token = "0x2000270")]
public class RestartDisabledButton : DisabledButton
{
	[Token(Token = "0x4000D72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private GamePausedController gamePausedController;

	[Token(Token = "0x6000FB8")]
	[Address(RVA = "0xA0E49C", Offset = "0xA0E49C", VA = "0xA0E49C", Slot = "9")]
	protected override void disabledButtonOnClickedFunctionality()
	{
	}

	[Token(Token = "0x6000FB9")]
	[Address(RVA = "0xA0E4B8", Offset = "0xA0E4B8", VA = "0xA0E4B8")]
	public RestartDisabledButton()
	{
	}
}
[Token(Token = "0x2000271")]
public class EnduranceActivateSquatModePerformOnInteraction : PerformOnInteraction
{
	[Token(Token = "0x4000D73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MainMenuController mainMenuController;

	[Token(Token = "0x4000D74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool activateSquatMode;

	[Token(Token = "0x6000FBA")]
	[Address(RVA = "0x95E1E4", Offset = "0x95E1E4", VA = "0x95E1E4", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x6000FBB")]
	[Address(RVA = "0x95E22C", Offset = "0x95E22C", VA = "0x95E22C")]
	public EnduranceActivateSquatModePerformOnInteraction()
	{
	}
}
[Token(Token = "0x2000272")]
public class EnduranceSetGameModePerformOnInteraction : PerformOnInteraction
{
	[Token(Token = "0x4000D75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MainMenuController mainMenuController;

	[Token(Token = "0x4000D76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private EnduranceGameModeParameterContainer.ENDURANCE_GAME_MODES modeToActivate;

	[Token(Token = "0x6000FBC")]
	[Address(RVA = "0x966770", Offset = "0x966770", VA = "0x966770", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x6000FBD")]
	[Address(RVA = "0x9667B8", Offset = "0x9667B8", VA = "0x9667B8")]
	public EnduranceSetGameModePerformOnInteraction()
	{
	}
}
[Token(Token = "0x2000273")]
public class GameEndedDisplayController : MonoBehaviour
{
	[Token(Token = "0x2000274")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CF4C", Offset = "0x69CF4C")]
	private sealed class <showStatisticsCoroutine>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameEndedDisplayController <>4__this;

		[Token(Token = "0x1700017D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FD3")]
			[Address(RVA = "0x14C6348", Offset = "0x14C6348", VA = "0x14C6348", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FD5")]
			[Address(RVA = "0x14C6390", Offset = "0x14C6390", VA = "0x14C6390", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0x14C6200", Offset = "0x14C6200", VA = "0x14C6200")]
		[DebuggerHidden]
		public <showStatisticsCoroutine>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6000FD1")]
		[Address(RVA = "0x14C622C", Offset = "0x14C622C", VA = "0x14C622C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FD2")]
		[Address(RVA = "0x14C6230", Offset = "0x14C6230", VA = "0x14C6230", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0x14C6350", Offset = "0x14C6350", VA = "0x14C6350", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject topLevelContainer;

	[Token(Token = "0x4000D78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WaitForSeconds waitForHalfSecond;

	[Token(Token = "0x4000D79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected GameController gameController;

	[Token(Token = "0x4000D7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected ScoreKeeper scoreKeeper;

	[Token(Token = "0x4000D7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected TimeKeeper timeKeeper;

	[Token(Token = "0x4000D7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	protected AdvancedUIFader advancedUIFader;

	[Token(Token = "0x4000D7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected GameObject topLevelGameOverDisplayComponent;

	[Token(Token = "0x4000D7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<GameObject> topLevelGameOverDisplayComponentList;

	[Token(Token = "0x4000D7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	protected GameObject topLevelGameStatsDisplayComponent;

	[Token(Token = "0x4000D80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<GameObject> topLevelGameStatsDisplayComponentList;

	[Token(Token = "0x4000D81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	protected GameObject topLevelNewTopScoreComponent;

	[Token(Token = "0x4000D82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<GameObject> topLevelNewTopScoreComponentList;

	[Token(Token = "0x4000D83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	protected GameObject topLevelSettingsObject;

	[Token(Token = "0x4000D84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<GameObject> topLevelSettingsList;

	[Token(Token = "0x4000D85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	protected Text pointsScoredText;

	[Token(Token = "0x4000D86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	protected Text pointsMissedText;

	[Token(Token = "0x4000D87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	protected Text totalPointsText;

	[Token(Token = "0x4000D88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	protected Text topScoreText;

	[Token(Token = "0x4000D89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	protected Text timePlayedText;

	[Token(Token = "0x4000D8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private GameObject currentVisibleWindow;

	[Token(Token = "0x4000D8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private ButtonActivationController buttonActivationController;

	[Token(Token = "0x1700017C")]
	public GameObject TopLevelContainer
	{
		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0x9F1B08", Offset = "0x9F1B08", VA = "0x9F1B08")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000FBE")]
	[Address(RVA = "0x9F18E0", Offset = "0x9F18E0", VA = "0x9F18E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FBF")]
	[Address(RVA = "0x9F196C", Offset = "0x9F196C", VA = "0x9F196C")]
	protected void performOnStartUp()
	{
	}

	[Token(Token = "0x6000FC1")]
	[Address(RVA = "0x9F03B0", Offset = "0x9F03B0", VA = "0x9F03B0")]
	public void showGameOverScreen()
	{
	}

	[Token(Token = "0x6000FC2")]
	[Address(RVA = "0x9F040C", Offset = "0x9F040C", VA = "0x9F040C")]
	public void showScore()
	{
	}

	[Token(Token = "0x6000FC3")]
	[Address(RVA = "0x9F1F20", Offset = "0x9F1F20", VA = "0x9F1F20")]
	private string getLastTopScoreForDisplay()
	{
		return null;
	}

	[Token(Token = "0x6000FC4")]
	[Address(RVA = "0x9F19BC", Offset = "0x9F19BC", VA = "0x9F19BC")]
	private int getLastTopScore()
	{
		return default(int);
	}

	[Token(Token = "0x6000FC5")]
	[Address(RVA = "0x9F1B40", Offset = "0x9F1B40", VA = "0x9F1B40")]
	private bool isSaveTotalPoints()
	{
		return default(bool);
	}

	[Token(Token = "0x6000FC6")]
	[Address(RVA = "0x9F1F84", Offset = "0x9F1F84", VA = "0x9F1F84")]
	public void startShowStatisticsCoroutine()
	{
	}

	[Token(Token = "0x6000FC7")]
	[Address(RVA = "0x9F1EA8", Offset = "0x9F1EA8", VA = "0x9F1EA8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A8B74", Offset = "0x6A8B74")]
	public IEnumerator showStatisticsCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000FC8")]
	[Address(RVA = "0x9F1FB0", Offset = "0x9F1FB0", VA = "0x9F1FB0", Slot = "4")]
	protected virtual void fadeInStatistics()
	{
	}

	[Token(Token = "0x6000FC9")]
	[Address(RVA = "0x9F1FD8", Offset = "0x9F1FD8", VA = "0x9F1FD8", Slot = "5")]
	protected virtual void setStatisticsValues()
	{
	}

	[Token(Token = "0x6000FCA")]
	[Address(RVA = "0x9F211C", Offset = "0x9F211C", VA = "0x9F211C")]
	protected string getUsableString(string input)
	{
		return null;
	}

	[Token(Token = "0x6000FCB")]
	[Address(RVA = "0x9EFEF8", Offset = "0x9EFEF8", VA = "0x9EFEF8")]
	public void setTopLevelObjectActive(bool input)
	{
	}

	[Token(Token = "0x6000FCC")]
	[Address(RVA = "0x9F21A0", Offset = "0x9F21A0", VA = "0x9F21A0")]
	public void fadeInSettings()
	{
	}

	[Token(Token = "0x6000FCD")]
	[Address(RVA = "0x9F1B10", Offset = "0x9F1B10", VA = "0x9F1B10")]
	public void setCurrentVisibleWindow(GameObject visibleWindow)
	{
	}

	[Token(Token = "0x6000FCE")]
	[Address(RVA = "0x9F2298", Offset = "0x9F2298", VA = "0x9F2298")]
	public void deactivateCurrentVisibleWindow()
	{
	}

	[Token(Token = "0x6000FCF")]
	[Address(RVA = "0x9F2354", Offset = "0x9F2354", VA = "0x9F2354")]
	public GameEndedDisplayController()
	{
	}
}
[Token(Token = "0x2000275")]
public class OriginalAlphaValueHolder : MonoBehaviour
{
	[Token(Token = "0x4000D8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float originalAlphaValue;

	[Token(Token = "0x6000FD6")]
	[Address(RVA = "0xAD1C14", Offset = "0xAD1C14", VA = "0xAD1C14")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FD7")]
	[Address(RVA = "0xAD1C38", Offset = "0xAD1C38", VA = "0xAD1C38")]
	public float getOriginalAlphaValue()
	{
		return default(float);
	}

	[Token(Token = "0x6000FD8")]
	[Address(RVA = "0xAD1C40", Offset = "0xAD1C40", VA = "0xAD1C40")]
	public OriginalAlphaValueHolder()
	{
	}
}
[Token(Token = "0x2000276")]
public class SelectionSliderFillOnOver : MonoBehaviour
{
	[Token(Token = "0x6000FD9")]
	[Address(RVA = "0xA14380", Offset = "0xA14380", VA = "0xA14380")]
	public SelectionSliderFillOnOver()
	{
	}
}
[Token(Token = "0x2000277")]
public class ActivationableButton : ButtonChangeColorPerformOnInteraction
{
	[Token(Token = "0x2000278")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CF5C", Offset = "0x69CF5C")]
	private sealed class <resetColorCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ActivationableButton <>4__this;

		[Token(Token = "0x1700017F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FE0")]
			[Address(RVA = "0x14B892C", Offset = "0x14B892C", VA = "0x14B892C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000180")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FE2")]
			[Address(RVA = "0x14B8974", Offset = "0x14B8974", VA = "0x14B8974", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FDD")]
		[Address(RVA = "0x14B8870", Offset = "0x14B8870", VA = "0x14B8870")]
		[DebuggerHidden]
		public <resetColorCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000FDE")]
		[Address(RVA = "0x14B889C", Offset = "0x14B889C", VA = "0x14B889C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0x14B88A0", Offset = "0x14B88A0", VA = "0x14B88A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0x14B8934", Offset = "0x14B8934", VA = "0x14B8934", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[SerializeField]
	protected Color clickedColor;

	[Token(Token = "0x4000D91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected Coroutine activeResetColorCoroutine;

	[Token(Token = "0x4000D92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected WaitForSeconds waitForHalfSecond;

	[Token(Token = "0x6000FDA")]
	[Address(RVA = "0x149F1CC", Offset = "0x149F1CC", VA = "0x149F1CC", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x6000FDB")]
	[Address(RVA = "0x149F260", Offset = "0x149F260", VA = "0x149F260", Slot = "9")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A8C24", Offset = "0x6A8C24")]
	protected virtual IEnumerator resetColorCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000FDC")]
	[Address(RVA = "0x149F2D8", Offset = "0x149F2D8", VA = "0x149F2D8")]
	public ActivationableButton()
	{
	}
}
[Token(Token = "0x2000279")]
public class AudioButton : MonoBehaviour
{
	[Token(Token = "0x4000D96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioController audioController;

	[Token(Token = "0x6000FE3")]
	[Address(RVA = "0x14A7548", Offset = "0x14A7548", VA = "0x14A7548", Slot = "4")]
	protected virtual void playButtonClickedClip()
	{
	}

	[Token(Token = "0x6000FE4")]
	[Address(RVA = "0x14A7584", Offset = "0x14A7584", VA = "0x14A7584", Slot = "5")]
	protected virtual void playBackButtonClickedClip()
	{
	}

	[Token(Token = "0x6000FE5")]
	[Address(RVA = "0x14A75C0", Offset = "0x14A75C0", VA = "0x14A75C0")]
	public AudioButton()
	{
	}
}
[Token(Token = "0x200027A")]
public class ButtonActivationController : MonoBehaviour
{
	[Token(Token = "0x4000D97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected List<GameObject> visibleDifficultyButtons;

	[Token(Token = "0x4000D98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected List<GameObject> visibleEnvironmentButtons;

	[Token(Token = "0x6000FE6")]
	[Address(RVA = "0xF18520", Offset = "0xF18520", VA = "0xF18520")]
	public void activateButtons(List<GameObject> nextMenuItems)
	{
	}

	[Token(Token = "0x6000FE7")]
	[Address(RVA = "0xF18908", Offset = "0xF18908", VA = "0xF18908")]
	private void setCreateHandSpecificOnParamaterContainer(bool input)
	{
	}

	[Token(Token = "0x6000FE8")]
	[Address(RVA = "0xF18AA4", Offset = "0xF18AA4", VA = "0xF18AA4")]
	private void setInfiniteHandEnergyOnParamaterContainer(bool input)
	{
	}

	[Token(Token = "0x6000FE9")]
	[Address(RVA = "0xF18C40", Offset = "0xF18C40", VA = "0xF18C40")]
	private void setInfinitePlayerHealthOnParamaterContainer(bool input)
	{
	}

	[Token(Token = "0x6000FEA")]
	[Address(RVA = "0xF18CF4", Offset = "0xF18CF4", VA = "0xF18CF4", Slot = "4")]
	public virtual void deactivateOtherDifficultyButtons(SetGameDifficultyPerformOnInteraction scriptToIgnore)
	{
	}

	[Token(Token = "0x6000FEB")]
	[Address(RVA = "0xF18F08", Offset = "0xF18F08", VA = "0xF18F08", Slot = "5")]
	public virtual void deactivateOtherDurationButtons(SetGameDurationPerformOnInteraction scriptToIgnore)
	{
	}

	[Token(Token = "0x6000FEC")]
	[Address(RVA = "0xF1911C", Offset = "0xF1911C", VA = "0xF1911C", Slot = "6")]
	public virtual void deactivateOtherEnvironmentButtons(EnvironmentChangePerformOnInteraction scriptToIgnore)
	{
	}

	[Token(Token = "0x6000FED")]
	[Address(RVA = "0xF19330", Offset = "0xF19330", VA = "0xF19330", Slot = "7")]
	public virtual ButtonChangeColorPerformOnInteraction getButtonSelectedScriptOfButtonWithDifficulty(GameModeValues.GameAndSubModeDifficulty gameAndSubModeDifficulty)
	{
		return null;
	}

	[Token(Token = "0x6000FEE")]
	[Address(RVA = "0xF19554", Offset = "0xF19554", VA = "0xF19554", Slot = "8")]
	public virtual ButtonChangeColorPerformOnInteraction getButtonSelectedScriptOfButtonWithDuration(GameModeValues.GameDuration duration)
	{
		return null;
	}

	[Token(Token = "0x6000FEF")]
	[Address(RVA = "0xF19778", Offset = "0xF19778", VA = "0xF19778")]
	public void setBoolValue(string specificValue, bool boolValue)
	{
	}

	[Token(Token = "0x6000FF0")]
	[Address(RVA = "0xF18670", Offset = "0xF18670", VA = "0xF18670")]
	private void setGameModeDifficultyFromSavedPreferences(GameModeValues.GameAndSubModeDifficulty gameAndSubModeDifficulty)
	{
	}

	[Token(Token = "0x6000FF1")]
	[Address(RVA = "0xF18720", Offset = "0xF18720", VA = "0xF18720")]
	private void setGameDurationFromSavedPreferences(GameModeValues.GameDuration duration)
	{
	}

	[Token(Token = "0x6000FF2")]
	[Address(RVA = "0xF197C8", Offset = "0xF197C8", VA = "0xF197C8")]
	private void setGameDifficultyAndSavePreferences(GameModeValues.GameAndSubModeDifficulty gameAndSubModeDifficulty)
	{
	}

	[Token(Token = "0x6000FF3")]
	[Address(RVA = "0xF198BC", Offset = "0xF198BC", VA = "0xF198BC")]
	private void setGameDurationAndSavePreferences(GameModeValues.GameDuration duration)
	{
	}

	[Token(Token = "0x6000FF4")]
	[Address(RVA = "0xF187D0", Offset = "0xF187D0", VA = "0xF187D0")]
	private void activateSkipTutorialButton(List<GameObject> visibleObjects)
	{
	}

	[Token(Token = "0x6000FF5")]
	[Address(RVA = "0xF18890", Offset = "0xF18890", VA = "0xF18890")]
	private void setHandSpecificObjectsButtonActive(List<GameObject> visibleObjects, bool activeState)
	{
	}

	[Token(Token = "0x6000FF6")]
	[Address(RVA = "0xF189BC", Offset = "0xF189BC", VA = "0xF189BC")]
	private void activateInfiniteHandEnergy(List<GameObject> visibleObjects)
	{
	}

	[Token(Token = "0x6000FF7")]
	[Address(RVA = "0xF18B58", Offset = "0xF18B58", VA = "0xF18B58")]
	private void activateInfiniteHealth(List<GameObject> visibleObjects)
	{
	}

	[Token(Token = "0x6000FF8")]
	[Address(RVA = "0xF199A4", Offset = "0xF199A4", VA = "0xF199A4")]
	private GameObject getSkipTutorialGameObject(List<GameObject> visibleObjects)
	{
		return null;
	}

	[Token(Token = "0x6000FF9")]
	[Address(RVA = "0xF19B34", Offset = "0xF19B34", VA = "0xF19B34")]
	private GameObject getCreateSpecificHandObjectsButton(List<GameObject> visibleObjects)
	{
		return null;
	}

	[Token(Token = "0x6000FFA")]
	[Address(RVA = "0xF19CC4", Offset = "0xF19CC4", VA = "0xF19CC4")]
	private GameObject getInfiniteHandEnergyButton(List<GameObject> visibleObjects)
	{
		return null;
	}

	[Token(Token = "0x6000FFB")]
	[Address(RVA = "0xF19FB4", Offset = "0xF19FB4", VA = "0xF19FB4")]
	private GameObject getInfiniteHealthButton(List<GameObject> visibleObjects)
	{
		return null;
	}

	[Token(Token = "0x6000FFC")]
	[Address(RVA = "0xF1A144", Offset = "0xF1A144", VA = "0xF1A144")]
	public void activateEnvironmentButton(List<GameObject> menuItems)
	{
	}

	[Token(Token = "0x6000FFD")]
	[Address(RVA = "0xF1A29C", Offset = "0xF1A29C", VA = "0xF1A29C", Slot = "9")]
	public virtual ButtonChangeColorPerformOnInteraction getActivateEnvironmentButton(EnvironmentAndSkyboxChanger.EnvironmentType inputEnvironmentType)
	{
		return null;
	}

	[Token(Token = "0x6000FFE")]
	[Address(RVA = "0xF1A4C0", Offset = "0xF1A4C0", VA = "0xF1A4C0")]
	public ButtonActivationController()
	{
	}
}
[Token(Token = "0x200027B")]
public class ButtonChangeColorPerformOnInteraction : ColorChangeOnRayOverPerformOnInteraction
{
	[Token(Token = "0x4000D99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	protected Color activeInnerColor;

	[Token(Token = "0x4000D9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	protected Color onRayOverInnerColor;

	[Token(Token = "0x4000D9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected bool active;

	[Token(Token = "0x6000FFF")]
	[Address(RVA = "0xF1A570", Offset = "0xF1A570", VA = "0xF1A570", Slot = "5")]
	public override void onRayOver()
	{
	}

	[Token(Token = "0x6001000")]
	[Address(RVA = "0xF1A688", Offset = "0xF1A688", VA = "0xF1A688", Slot = "6")]
	public override void onRayLeave()
	{
	}

	[Token(Token = "0x6001001")]
	[Address(RVA = "0xF1A7A0", Offset = "0xF1A7A0", VA = "0xF1A7A0", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x6001002")]
	[Address(RVA = "0xF1A7B8", Offset = "0xF1A7B8", VA = "0xF1A7B8", Slot = "7")]
	public virtual void setActiveState(bool input)
	{
	}

	[Token(Token = "0x6001003")]
	[Address(RVA = "0xF19E54", Offset = "0xF19E54", VA = "0xF19E54")]
	public void setVisualState(bool input)
	{
	}

	[Token(Token = "0x6001004")]
	[Address(RVA = "0xF1A7E8", Offset = "0xF1A7E8", VA = "0xF1A7E8", Slot = "8")]
	protected virtual void onClickedSpecific()
	{
	}

	[Token(Token = "0x6001005")]
	[Address(RVA = "0xF1A7EC", Offset = "0xF1A7EC", VA = "0xF1A7EC")]
	public ButtonChangeColorPerformOnInteraction()
	{
	}
}
[Token(Token = "0x200027C")]
public class ComplexButtonOnRayOverPerformOnInteraction : ColorChangeOnRayOverPerformOnInteraction
{
	[Token(Token = "0x6001006")]
	[Address(RVA = "0xA6B458", Offset = "0xA6B458", VA = "0xA6B458", Slot = "5")]
	public override void onRayOver()
	{
	}

	[Token(Token = "0x6001007")]
	[Address(RVA = "0xA6B568", Offset = "0xA6B568", VA = "0xA6B568", Slot = "6")]
	public override void onRayLeave()
	{
	}

	[Token(Token = "0x6001008")]
	[Address(RVA = "0xA6B678", Offset = "0xA6B678", VA = "0xA6B678")]
	public ComplexButtonOnRayOverPerformOnInteraction()
	{
	}
}
[Token(Token = "0x200027D")]
public class CreateHandSpecificObjectsDeAndActivationableButton : DeAndActivationableButton
{
	[Token(Token = "0x6001009")]
	[Address(RVA = "0xA754A0", Offset = "0xA754A0", VA = "0xA754A0", Slot = "8")]
	protected override void onClickedSpecific()
	{
	}

	[Token(Token = "0x600100A")]
	[Address(RVA = "0xA755FC", Offset = "0xA755FC", VA = "0xA755FC")]
	public CreateHandSpecificObjectsDeAndActivationableButton()
	{
	}
}
[Token(Token = "0x200027E")]
public class DeAndActivationableButton : ActivationableButton
{
	[Token(Token = "0x200027F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CF6C", Offset = "0x69CF6C")]
	private sealed class <resetColorCoroutine>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DeAndActivationableButton <>4__this;

		[Token(Token = "0x17000181")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001011")]
			[Address(RVA = "0x14C2648", Offset = "0x14C2648", VA = "0x14C2648", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000182")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001013")]
			[Address(RVA = "0x14C2690", Offset = "0x14C2690", VA = "0x14C2690", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600100E")]
		[Address(RVA = "0x14C2570", Offset = "0x14C2570", VA = "0x14C2570")]
		[DebuggerHidden]
		public <resetColorCoroutine>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x600100F")]
		[Address(RVA = "0x14C259C", Offset = "0x14C259C", VA = "0x14C259C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001010")]
		[Address(RVA = "0x14C25A0", Offset = "0x14C25A0", VA = "0x14C25A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001012")]
		[Address(RVA = "0x14C2650", Offset = "0x14C2650", VA = "0x14C2650", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	protected GameController gameController;

	[Token(Token = "0x600100B")]
	[Address(RVA = "0xA77A5C", Offset = "0xA77A5C", VA = "0xA77A5C", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x600100C")]
	[Address(RVA = "0xA77B00", Offset = "0xA77B00", VA = "0xA77B00", Slot = "9")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A8CD4", Offset = "0x6A8CD4")]
	protected override IEnumerator resetColorCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600100D")]
	[Address(RVA = "0xA75604", Offset = "0xA75604", VA = "0xA75604")]
	public DeAndActivationableButton()
	{
	}
}
[Token(Token = "0x2000280")]
public class DisabledStartGameOrTutorialButton : DisabledButton
{
	[Token(Token = "0x4000DA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private GameController gameController;

	[Token(Token = "0x4000DA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	private StartTutorialAndOrGameAfterPlayerEnteredMiddleController middleController;

	[Token(Token = "0x6001014")]
	[Address(RVA = "0x95A0C4", Offset = "0x95A0C4", VA = "0x95A0C4", Slot = "9")]
	protected override void disabledButtonOnClickedFunctionality()
	{
	}

	[Token(Token = "0x6001015")]
	[Address(RVA = "0x95A210", Offset = "0x95A210", VA = "0x95A210")]
	public void startGameMode()
	{
	}

	[Token(Token = "0x6001016")]
	[Address(RVA = "0x95A230", Offset = "0x95A230", VA = "0x95A230")]
	public DisabledStartGameOrTutorialButton()
	{
	}
}
[Token(Token = "0x2000281")]
public class MainMenuBackButton : PerformOnInteraction
{
	[Token(Token = "0x4000DA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MainMenuController mainMenuController;

	[Token(Token = "0x6001017")]
	[Address(RVA = "0xD89F7C", Offset = "0xD89F7C", VA = "0xD89F7C", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x6001018")]
	[Address(RVA = "0xD8A1A4", Offset = "0xD8A1A4", VA = "0xD8A1A4")]
	public MainMenuBackButton()
	{
	}
}
[Token(Token = "0x2000282")]
public class MainMenuSetBlockIncomingActiveGameMode : PerformOnInteraction
{
	[Token(Token = "0x4000DA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MainMenuController mainMenuController;

	[Token(Token = "0x4000DA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private BlockIncomingObjectsParameterContainer.BLOCK_INCOMING_OBJECTS_SUB_GAME_MODES modeToActivate;

	[Token(Token = "0x6001019")]
	[Address(RVA = "0xD8BD1C", Offset = "0xD8BD1C", VA = "0xD8BD1C", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x600101A")]
	[Address(RVA = "0xD8BD60", Offset = "0xD8BD60", VA = "0xD8BD60")]
	public MainMenuSetBlockIncomingActiveGameMode()
	{
	}
}
[Token(Token = "0x2000283")]
public class RestartGame : MonoBehaviour
{
	[Token(Token = "0x4000DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected GameController gameController;

	[Token(Token = "0x4000DA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected GameObject fadeOutObjectAndAllChildren;

	[Token(Token = "0x4000DA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected List<GameObject> fadeOutObjectAndAllChildrenArrayList;

	[Token(Token = "0x4000DA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected GameObject fadeInObjectAndAllChildren;

	[Token(Token = "0x4000DA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected List<GameObject> fadeInObjectAndAllChildrenArrayList;

	[Token(Token = "0x4000DAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected AdvancedUIFader advancedUIFader;

	[Token(Token = "0x600101B")]
	[Address(RVA = "0xA0E4C0", Offset = "0xA0E4C0", VA = "0xA0E4C0")]
	private void Start()
	{
	}

	[Token(Token = "0x600101C")]
	[Address(RVA = "0xA0E594", Offset = "0xA0E594", VA = "0xA0E594", Slot = "4")]
	protected virtual void performStartSetup()
	{
	}

	[Token(Token = "0x600101D")]
	[Address(RVA = "0xA0E598", Offset = "0xA0E598", VA = "0xA0E598")]
	protected void fadeOutGameOverScreenAndRestartGame()
	{
	}

	[Token(Token = "0x600101E")]
	[Address(RVA = "0xA0E67C", Offset = "0xA0E67C", VA = "0xA0E67C", Slot = "5")]
	protected virtual void performAfterElementFadeInFinished()
	{
	}

	[Token(Token = "0x600101F")]
	[Address(RVA = "0xA0E680", Offset = "0xA0E680", VA = "0xA0E680")]
	private void restartGame()
	{
	}

	[Token(Token = "0x6001020")]
	[Address(RVA = "0xA0E6A4", Offset = "0xA0E6A4", VA = "0xA0E6A4")]
	public RestartGame()
	{
	}
}
[Token(Token = "0x2000284")]
public class SetSkipTutorialDeAndActivationableButton : DeAndActivationableButton
{
	[Token(Token = "0x6001021")]
	[Address(RVA = "0xA14D18", Offset = "0xA14D18", VA = "0xA14D18", Slot = "8")]
	protected override void onClickedSpecific()
	{
	}

	[Token(Token = "0x6001022")]
	[Address(RVA = "0xA14E0C", Offset = "0xA14E0C", VA = "0xA14E0C")]
	public SetSkipTutorialDeAndActivationableButton()
	{
	}
}
[Token(Token = "0x2000285")]
public class StartTutorialButton : PerformOnInteraction
{
	[Token(Token = "0x4000DAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private StartTutorialAndOrGameAfterPlayerEnteredMiddleController startTutorialAndOrGameAfterPlayerEnteredMiddleController;

	[Token(Token = "0x6001023")]
	[Address(RVA = "0x14CAAEC", Offset = "0x14CAAEC", VA = "0x14CAAEC", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x6001024")]
	[Address(RVA = "0x14CAB30", Offset = "0x14CAB30", VA = "0x14CAB30")]
	public StartTutorialButton()
	{
	}
}
[Token(Token = "0x2000286")]
public class EnvironmentChangePerformOnInteraction : PerformOnInteraction
{
	[Token(Token = "0x4000DAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private EnvironmentAndSkyboxChanger environmentAndSkyboxChanger;

	[Token(Token = "0x4000DAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public EnvironmentAndSkyboxChanger.EnvironmentType environmentType;

	[Token(Token = "0x4000DAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ButtonActivationController buttonActivationController;

	[Token(Token = "0x6001025")]
	[Address(RVA = "0x967624", Offset = "0x967624", VA = "0x967624", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x6001026")]
	[Address(RVA = "0x9676E8", Offset = "0x9676E8", VA = "0x9676E8")]
	public EnvironmentChangePerformOnInteraction()
	{
	}
}
[Token(Token = "0x2000287")]
public class QuickStartGameModePerformOnInteraction : PerformOnInteraction
{
	[Token(Token = "0x4000DAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MainMenuController mainMenuController;

	[Token(Token = "0x6001027")]
	[Address(RVA = "0xA0B5FC", Offset = "0xA0B5FC", VA = "0xA0B5FC", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x6001028")]
	[Address(RVA = "0xA0B774", Offset = "0xA0B774", VA = "0xA0B774")]
	public QuickStartGameModePerformOnInteraction()
	{
	}
}
[Token(Token = "0x2000288")]
public static class QuickStartSettingsLoader
{
	[Token(Token = "0x6001029")]
	[Address(RVA = "0xA0B644", Offset = "0xA0B644", VA = "0xA0B644")]
	public static void loadGameModeSettings()
	{
	}
}
[Token(Token = "0x2000289")]
public class ChangeDescriptionPerformOnInteraction : PerformOnInteraction
{
	[Token(Token = "0x4000DB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Text textToChange;

	[Token(Token = "0x4000DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string onRayOverText;

	[Token(Token = "0x4000DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private string onRayLeaveText;

	[Token(Token = "0x600102A")]
	[Address(RVA = "0xF28398", Offset = "0xF28398", VA = "0xF28398", Slot = "5")]
	public override void onRayOver()
	{
	}

	[Token(Token = "0x600102B")]
	[Address(RVA = "0xF283C4", Offset = "0xF283C4", VA = "0xF283C4", Slot = "6")]
	public override void onRayLeave()
	{
	}

	[Token(Token = "0x600102C")]
	[Address(RVA = "0xF283F0", Offset = "0xF283F0", VA = "0xF283F0")]
	public ChangeDescriptionPerformOnInteraction()
	{
	}
}
[Token(Token = "0x200028A")]
public class ColorChangeOnClickedPerformOnInteraction : PerformOnInteraction
{
	[Token(Token = "0x200028B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CF7C", Offset = "0x69CF7C")]
	private sealed class <resetColorCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ColorChangeOnClickedPerformOnInteraction <>4__this;

		[Token(Token = "0x17000183")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001033")]
			[Address(RVA = "0x14BFB38", Offset = "0x14BFB38", VA = "0x14BFB38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000184")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001035")]
			[Address(RVA = "0x14BFB80", Offset = "0x14BFB80", VA = "0x14BFB80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001030")]
		[Address(RVA = "0x14BFA7C", Offset = "0x14BFA7C", VA = "0x14BFA7C")]
		[DebuggerHidden]
		public <resetColorCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001031")]
		[Address(RVA = "0x14BFAA8", Offset = "0x14BFAA8", VA = "0x14BFAA8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001032")]
		[Address(RVA = "0x14BFAAC", Offset = "0x14BFAAC", VA = "0x14BFAAC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001034")]
		[Address(RVA = "0x14BFB40", Offset = "0x14BFB40", VA = "0x14BFB40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Color clickedColor;

	[Token(Token = "0x4000DB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Color normalColor;

	[Token(Token = "0x4000DB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Image backgroundImage;

	[Token(Token = "0x4000DB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Coroutine activeResetColorCoroutine;

	[Token(Token = "0x4000DB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private WaitForSeconds waitForHalfSecond;

	[Token(Token = "0x600102D")]
	[Address(RVA = "0xF2AC68", Offset = "0xF2AC68", VA = "0xF2AC68", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x600102E")]
	[Address(RVA = "0xF2ACE4", Offset = "0xF2ACE4", VA = "0xF2ACE4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A8D84", Offset = "0x6A8D84")]
	private IEnumerator resetColorCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600102F")]
	[Address(RVA = "0xF2AD5C", Offset = "0xF2AD5C", VA = "0xF2AD5C")]
	public ColorChangeOnClickedPerformOnInteraction()
	{
	}
}
[Token(Token = "0x200028C")]
public class ColorChangeOnRayOverPerformOnInteraction : PerformOnInteraction
{
	[Token(Token = "0x4000DBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected Color onRayOverColor;

	[Token(Token = "0x4000DBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected Color onRayLeaveInnerColor;

	[Token(Token = "0x4000DBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected Color onRayLeaveOuterColor;

	[Token(Token = "0x4000DBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected Image innerImage;

	[Token(Token = "0x4000DBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	protected Image outerImage;

	[Token(Token = "0x4000DC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	protected Image[] additionalInnerImages;

	[Token(Token = "0x4000DC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	protected Image[] additionalOuterImages;

	[Token(Token = "0x6001036")]
	[Address(RVA = "0xF2ADD0", Offset = "0xF2ADD0", VA = "0xF2ADD0", Slot = "5")]
	public override void onRayOver()
	{
	}

	[Token(Token = "0x6001037")]
	[Address(RVA = "0xF2AE8C", Offset = "0xF2AE8C", VA = "0xF2AE8C", Slot = "6")]
	public override void onRayLeave()
	{
	}

	[Token(Token = "0x6001038")]
	[Address(RVA = "0xF1A7F4", Offset = "0xF1A7F4", VA = "0xF1A7F4")]
	public ColorChangeOnRayOverPerformOnInteraction()
	{
	}
}
[Token(Token = "0x200028D")]
public class FinishTutorialPerformOnInteraction : PerformOnInteraction
{
	[Token(Token = "0x4000DC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected AudioController audioController;

	[Token(Token = "0x4000DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected TutorialController tutorialController;

	[Token(Token = "0x4000DC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool clicked;

	[Token(Token = "0x6001039")]
	[Address(RVA = "0x969190", Offset = "0x969190", VA = "0x969190", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x600103A")]
	[Address(RVA = "0x9691EC", Offset = "0x9691EC", VA = "0x9691EC")]
	public FinishTutorialPerformOnInteraction()
	{
	}
}
[Token(Token = "0x200028E")]
public class GoToScorePerformOnInteraction : PerformOnInteraction
{
	[Token(Token = "0x4000DC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameEndedDisplayController gameEndedDisplayController;

	[Token(Token = "0x600103B")]
	[Address(RVA = "0x9F57AC", Offset = "0x9F57AC", VA = "0x9F57AC", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x600103C")]
	[Address(RVA = "0x9F57E4", Offset = "0x9F57E4", VA = "0x9F57E4")]
	public GoToScorePerformOnInteraction()
	{
	}
}
[Token(Token = "0x200028F")]
public class ImageButtonChangeColorPerformOnInteraction : ButtonChangeColorPerformOnInteraction
{
	[Token(Token = "0x4000DC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Image innerBackgroundImage;

	[Token(Token = "0x4000DC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Image outerBackgroundImage;

	[Token(Token = "0x4000DC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Color innerBackgroundImageActiveColor;

	[Token(Token = "0x4000DC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private Color outerBackgroundImageActiveColor;

	[Token(Token = "0x4000DCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private Color innerBackgroundImageInactiveColor;

	[Token(Token = "0x4000DCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private Color outerBackgroundImageInactiveColor;

	[Token(Token = "0x600103D")]
	[Address(RVA = "0x9FD480", Offset = "0x9FD480", VA = "0x9FD480", Slot = "5")]
	public override void onRayOver()
	{
	}

	[Token(Token = "0x600103E")]
	[Address(RVA = "0x9FD510", Offset = "0x9FD510", VA = "0x9FD510", Slot = "6")]
	public override void onRayLeave()
	{
	}

	[Token(Token = "0x600103F")]
	[Address(RVA = "0x9FD5A0", Offset = "0x9FD5A0", VA = "0x9FD5A0", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x6001040")]
	[Address(RVA = "0x9FD5B8", Offset = "0x9FD5B8", VA = "0x9FD5B8", Slot = "7")]
	public override void setActiveState(bool input)
	{
	}

	[Token(Token = "0x6001041")]
	[Address(RVA = "0x9FD6EC", Offset = "0x9FD6EC", VA = "0x9FD6EC")]
	public ImageButtonChangeColorPerformOnInteraction()
	{
	}
}
[Token(Token = "0x2000290")]
public class ImageButtonColorChangeOnRayOverPerformOnInteraction : ColorChangeOnRayOverPerformOnInteraction
{
	[Token(Token = "0x4000DCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Image innerBackgroundImage;

	[Token(Token = "0x4000DCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Image outerBackgroundImage;

	[Token(Token = "0x4000DCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Color innerBackgroundImageActiveColor;

	[Token(Token = "0x4000DCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Color outerBackgroundImageActiveColor;

	[Token(Token = "0x4000DD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Color innerBackgroundImageInactiveColor;

	[Token(Token = "0x4000DD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private Color outerBackgroundImageInactiveColor;

	[Token(Token = "0x6001042")]
	[Address(RVA = "0x9FD6F4", Offset = "0x9FD6F4", VA = "0x9FD6F4", Slot = "5")]
	public override void onRayOver()
	{
	}

	[Token(Token = "0x6001043")]
	[Address(RVA = "0x9FD770", Offset = "0x9FD770", VA = "0x9FD770", Slot = "6")]
	public override void onRayLeave()
	{
	}

	[Token(Token = "0x6001044")]
	[Address(RVA = "0x9FD7EC", Offset = "0x9FD7EC", VA = "0x9FD7EC")]
	public ImageButtonColorChangeOnRayOverPerformOnInteraction()
	{
	}
}
[Token(Token = "0x2000291")]
public class InGameFadeInSettingPerformOnInteraction : PerformOnInteraction
{
	[Token(Token = "0x4000DD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ButtonActivationController buttonActivationController;

	[Token(Token = "0x4000DD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameEndedDisplayController gameEndedDisplayController;

	[Token(Token = "0x4000DD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject settingsTopLevelObject;

	[Token(Token = "0x4000DD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected List<GameObject> otherObjectArrayList;

	[Token(Token = "0x6001045")]
	[Address(RVA = "0x9FDC90", Offset = "0x9FDC90", VA = "0x9FDC90")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001046")]
	[Address(RVA = "0x9FDCC4", Offset = "0x9FDCC4", VA = "0x9FDCC4", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x6001047")]
	[Address(RVA = "0x9FDD00", Offset = "0x9FDD00", VA = "0x9FDD00")]
	public InGameFadeInSettingPerformOnInteraction()
	{
	}
}
[Token(Token = "0x2000292")]
public class InGameSetGameDifficultyPerformOnInteraction : SetGameDifficultyPerformOnInteraction
{
	[Token(Token = "0x4000DD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameController gameController;

	[Token(Token = "0x6001048")]
	[Address(RVA = "0x9FDD6C", Offset = "0x9FDD6C", VA = "0x9FDD6C", Slot = "7")]
	protected override void onClickedSpecific()
	{
	}

	[Token(Token = "0x6001049")]
	[Address(RVA = "0x9FDD90", Offset = "0x9FDD90", VA = "0x9FDD90")]
	public InGameSetGameDifficultyPerformOnInteraction()
	{
	}
}
[Token(Token = "0x2000293")]
public class InfiniteHandEnergyPerformOnInteraction : DeAndActivationableButton
{
	[Token(Token = "0x600104A")]
	[Address(RVA = "0x9FE000", Offset = "0x9FE000", VA = "0x9FE000", Slot = "8")]
	protected override void onClickedSpecific()
	{
	}

	[Token(Token = "0x600104B")]
	[Address(RVA = "0x9FE19C", Offset = "0x9FE19C", VA = "0x9FE19C")]
	public InfiniteHandEnergyPerformOnInteraction()
	{
	}
}
[Token(Token = "0x2000294")]
public class InfiniteHealthPerformOnInteraction : DeAndActivationableButton
{
	[Token(Token = "0x600104C")]
	[Address(RVA = "0x9FE1A4", Offset = "0x9FE1A4", VA = "0x9FE1A4", Slot = "8")]
	protected override void onClickedSpecific()
	{
	}

	[Token(Token = "0x600104D")]
	[Address(RVA = "0x9FE2E0", Offset = "0x9FE2E0", VA = "0x9FE2E0")]
	public InfiniteHealthPerformOnInteraction()
	{
	}
}
[Token(Token = "0x2000295")]
public class MainMenuSelectGameModePerformOnInteraction : PerformOnInteraction
{
	[Token(Token = "0x4000DD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MainMenuController mainMenuController;

	[Token(Token = "0x4000DD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameModeParameterContainerController.GameModeSelectionEnum gameModeToSelect;

	[Token(Token = "0x600104E")]
	[Address(RVA = "0xD8BCD0", Offset = "0xD8BCD0", VA = "0xD8BCD0", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x600104F")]
	[Address(RVA = "0xD8BD14", Offset = "0xD8BD14", VA = "0xD8BD14")]
	public MainMenuSelectGameModePerformOnInteraction()
	{
	}
}
[Token(Token = "0x2000296")]
public class MainMenuStartGamePerformOnInteraction : PerformOnInteraction
{
	[Token(Token = "0x4000DD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MainMenuController mainMenuController;

	[Token(Token = "0x6001050")]
	[Address(RVA = "0xD8BD68", Offset = "0xD8BD68", VA = "0xD8BD68", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x6001051")]
	[Address(RVA = "0xD8BDA8", Offset = "0xD8BDA8", VA = "0xD8BDA8")]
	public MainMenuStartGamePerformOnInteraction()
	{
	}
}
[Token(Token = "0x2000297")]
public class NextTutorialStepPerformOnInteraction : PerformOnInteraction
{
	[Token(Token = "0x4000DDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected AudioController audioController;

	[Token(Token = "0x4000DDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected TutorialController tutorialController;

	[Token(Token = "0x6001052")]
	[Address(RVA = "0xC789C8", Offset = "0xC789C8", VA = "0xC789C8", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x6001053")]
	[Address(RVA = "0xC78A20", Offset = "0xC78A20", VA = "0xC78A20")]
	public NextTutorialStepPerformOnInteraction()
	{
	}
}
[Token(Token = "0x2000298")]
public class OnClickedSoundPerformOnInteraction : PerformOnInteraction
{
	[Token(Token = "0x4000DDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioController audioController;

	[Token(Token = "0x6001054")]
	[Address(RVA = "0xAD19E4", Offset = "0xAD19E4", VA = "0xAD19E4", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x6001055")]
	[Address(RVA = "0xAD1A00", Offset = "0xAD1A00", VA = "0xAD1A00")]
	public OnClickedSoundPerformOnInteraction()
	{
	}
}
[Token(Token = "0x2000299")]
public class OnMouseOverSoundPerformOnInteraction : PerformOnInteraction
{
	[Token(Token = "0x4000DDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioController audioController;

	[Token(Token = "0x6001056")]
	[Address(RVA = "0xAD1A08", Offset = "0xAD1A08", VA = "0xAD1A08", Slot = "5")]
	public override void onRayOver()
	{
	}

	[Token(Token = "0x6001057")]
	[Address(RVA = "0xAD1A24", Offset = "0xAD1A24", VA = "0xAD1A24")]
	public OnMouseOverSoundPerformOnInteraction()
	{
	}
}
[Token(Token = "0x200029A")]
public class PerformOnInteraction : MonoBehaviour
{
	[Token(Token = "0x6001058")]
	[Address(RVA = "0xA64454", Offset = "0xA64454", VA = "0xA64454", Slot = "4")]
	public virtual void onClicked()
	{
	}

	[Token(Token = "0x6001059")]
	[Address(RVA = "0xA64458", Offset = "0xA64458", VA = "0xA64458", Slot = "5")]
	public virtual void onRayOver()
	{
	}

	[Token(Token = "0x600105A")]
	[Address(RVA = "0xA6445C", Offset = "0xA6445C", VA = "0xA6445C", Slot = "6")]
	public virtual void onRayLeave()
	{
	}

	[Token(Token = "0x600105B")]
	[Address(RVA = "0xA64460", Offset = "0xA64460", VA = "0xA64460")]
	public PerformOnInteraction()
	{
	}
}
[Token(Token = "0x200029B")]
public class ReadBoundariesPerformOnInteraction : PerformOnInteraction
{
	[Token(Token = "0x4000DDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioController audioController;

	[Token(Token = "0x4000DDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private StartBoundariesCalculationService startBoundariesCalculationService;

	[Token(Token = "0x4000DE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private MainMenuController mainMenuController;

	[Token(Token = "0x4000DE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool test;

	[Token(Token = "0x4000DE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool inUnityEditor;

	[Token(Token = "0x600105C")]
	[Address(RVA = "0xA0D430", Offset = "0xA0D430", VA = "0xA0D430")]
	private void Start()
	{
	}

	[Token(Token = "0x600105D")]
	[Address(RVA = "0xA0D434", Offset = "0xA0D434", VA = "0xA0D434", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x600105E")]
	[Address(RVA = "0xA0D5CC", Offset = "0xA0D5CC", VA = "0xA0D5CC")]
	public ReadBoundariesPerformOnInteraction()
	{
	}
}
[Token(Token = "0x200029C")]
public class RestartGamePerformOnInteraction : PerformOnInteraction
{
	[Token(Token = "0x4000DE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected GameController gameController;

	[Token(Token = "0x4000DE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected GameObject fadeOutObjectAndAllChildren;

	[Token(Token = "0x4000DE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<GameObject> fadeOutObjectAndAllChildrenArrayList;

	[Token(Token = "0x4000DE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected AdvancedUIFader advancedUIFader;

	[Token(Token = "0x600105F")]
	[Address(RVA = "0xA0E6AC", Offset = "0xA0E6AC", VA = "0xA0E6AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001060")]
	[Address(RVA = "0xA0E754", Offset = "0xA0E754", VA = "0xA0E754", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x6001061")]
	[Address(RVA = "0xA0E79C", Offset = "0xA0E79C", VA = "0xA0E79C")]
	protected void fadeOutGameOverScreenAndRestartGame()
	{
	}

	[Token(Token = "0x6001062")]
	[Address(RVA = "0xA0E838", Offset = "0xA0E838", VA = "0xA0E838")]
	private void restartGame()
	{
	}

	[Token(Token = "0x6001063")]
	[Address(RVA = "0xA0E85C", Offset = "0xA0E85C", VA = "0xA0E85C")]
	public RestartGamePerformOnInteraction()
	{
	}
}
[Token(Token = "0x200029D")]
public class SelectPlayModePerformOnInteraction : PerformOnInteraction
{
	[Token(Token = "0x4000DE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MainMenuController mainMenuController;

	[Token(Token = "0x4000DE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool activateCardioMode;

	[Token(Token = "0x6001064")]
	[Address(RVA = "0xA13DF0", Offset = "0xA13DF0", VA = "0xA13DF0", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x6001065")]
	[Address(RVA = "0xA13E88", Offset = "0xA13E88", VA = "0xA13E88")]
	public SelectPlayModePerformOnInteraction()
	{
	}
}
[Token(Token = "0x200029E")]
public class SetGameDifficultyPerformOnInteraction : PerformOnInteraction
{
	[Token(Token = "0x4000DE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ButtonActivationController buttonActivationController;

	[Token(Token = "0x4000DEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioController audioController;

	[Token(Token = "0x4000DEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected GameModeValues.GameAndSubModeDifficulty gameDifficulty;

	[Token(Token = "0x17000185")]
	public GameModeValues.GameAndSubModeDifficulty GameDifficulty
	{
		[Token(Token = "0x6001066")]
		[Address(RVA = "0xA148B0", Offset = "0xA148B0", VA = "0xA148B0")]
		get
		{
			return default(GameModeValues.GameAndSubModeDifficulty);
		}
	}

	[Token(Token = "0x6001067")]
	[Address(RVA = "0xA148B8", Offset = "0xA148B8", VA = "0xA148B8", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x6001068")]
	[Address(RVA = "0xA14A14", Offset = "0xA14A14", VA = "0xA14A14", Slot = "7")]
	protected virtual void onClickedSpecific()
	{
	}

	[Token(Token = "0x6001069")]
	[Address(RVA = "0xA14A18", Offset = "0xA14A18", VA = "0xA14A18")]
	public SetGameDifficultyPerformOnInteraction()
	{
	}
}
[Token(Token = "0x200029F")]
public class SetGameDurationPerformOnInteraction : PerformOnInteraction
{
	[Token(Token = "0x4000DEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ButtonActivationController buttonActivationController;

	[Token(Token = "0x4000DED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioController audioController;

	[Token(Token = "0x4000DEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameModeValues.GameDuration gameDuration;

	[Token(Token = "0x17000186")]
	public GameModeValues.GameDuration GameDuration
	{
		[Token(Token = "0x600106A")]
		[Address(RVA = "0xA14A20", Offset = "0xA14A20", VA = "0xA14A20")]
		get
		{
			return default(GameModeValues.GameDuration);
		}
	}

	[Token(Token = "0x600106B")]
	[Address(RVA = "0xA14A28", Offset = "0xA14A28", VA = "0xA14A28", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x600106C")]
	[Address(RVA = "0xA14B6C", Offset = "0xA14B6C", VA = "0xA14B6C")]
	public SetGameDurationPerformOnInteraction()
	{
	}
}
[Token(Token = "0x20002A0")]
public class SetSubGameModeActivePerformOnInteraction : PerformOnInteraction
{
	[Token(Token = "0x4000DEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MainMenuController mainMenuController;

	[Token(Token = "0x600106D")]
	[Address(RVA = "0xA14E14", Offset = "0xA14E14", VA = "0xA14E14", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x600106E")]
	[Address(RVA = "0xA14E3C", Offset = "0xA14E3C", VA = "0xA14E3C")]
	public SetSubGameModeActivePerformOnInteraction()
	{
	}
}
[Token(Token = "0x20002A1")]
public class SetTargetTouchGameMode : PerformOnInteraction
{
	[Token(Token = "0x4000DF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MainMenuController mainMenuController;

	[Token(Token = "0x4000DF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TargetTouchGameModeParameterContainer.TARGET_TOUCH_ACTIVE_GAME_MODE modeToActivate;

	[Token(Token = "0x600106F")]
	[Address(RVA = "0xA14E44", Offset = "0xA14E44", VA = "0xA14E44", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x6001070")]
	[Address(RVA = "0xA14E8C", Offset = "0xA14E8C", VA = "0xA14E8C")]
	public SetTargetTouchGameMode()
	{
	}
}
[Token(Token = "0x20002A2")]
public class ShowGameEndedStatisticsInteraction : PerformOnInteraction
{
	[Token(Token = "0x4000DF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject parentGameObject;

	[Token(Token = "0x4000DF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<GameObject> parentGameObjectArrayList;

	[Token(Token = "0x4000DF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameEndedDisplayController gameEndedDisplayController;

	[Token(Token = "0x4000DF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected AdvancedUIFader advancedUIFader;

	[Token(Token = "0x6001071")]
	[Address(RVA = "0xA1512C", Offset = "0xA1512C", VA = "0xA1512C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001072")]
	[Address(RVA = "0xA15160", Offset = "0xA15160", VA = "0xA15160", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x6001073")]
	[Address(RVA = "0xA1522C", Offset = "0xA1522C", VA = "0xA1522C")]
	private void showGameStatistics()
	{
	}

	[Token(Token = "0x6001074")]
	[Address(RVA = "0xA15248", Offset = "0xA15248", VA = "0xA15248")]
	public ShowGameEndedStatisticsInteraction()
	{
	}
}
[Token(Token = "0x20002A3")]
public class SkipToGameModeSpecificTutorialPerformOnInteraction : PerformOnInteraction
{
	[Token(Token = "0x4000DF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected AudioController audioController;

	[Token(Token = "0x4000DF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected TutorialController tutorialController;

	[Token(Token = "0x4000DF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool clicked;

	[Token(Token = "0x6001075")]
	[Address(RVA = "0xA162AC", Offset = "0xA162AC", VA = "0xA162AC", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x6001076")]
	[Address(RVA = "0xA16304", Offset = "0xA16304", VA = "0xA16304")]
	public SkipToGameModeSpecificTutorialPerformOnInteraction()
	{
	}
}
[Token(Token = "0x20002A4")]
public class SkipTutorialPerformOnInteraction : PerformOnInteraction
{
	[Token(Token = "0x4000DF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected AudioController audioController;

	[Token(Token = "0x4000DFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected TutorialController tutorialController;

	[Token(Token = "0x4000DFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool clicked;

	[Token(Token = "0x6001077")]
	[Address(RVA = "0xA1630C", Offset = "0xA1630C", VA = "0xA1630C", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x6001078")]
	[Address(RVA = "0xA16368", Offset = "0xA16368", VA = "0xA16368")]
	public SkipTutorialPerformOnInteraction()
	{
	}
}
[Token(Token = "0x20002A5")]
public class StartTutorialStepPerformOnInteraction : PerformOnInteraction
{
	[Token(Token = "0x4000DFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected AudioController audioController;

	[Token(Token = "0x4000DFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected TutorialController tutorialController;

	[Token(Token = "0x4000DFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool clicked;

	[Token(Token = "0x6001079")]
	[Address(RVA = "0x14CAB38", Offset = "0x14CAB38", VA = "0x14CAB38", Slot = "4")]
	public override void onClicked()
	{
	}

	[Token(Token = "0x600107A")]
	[Address(RVA = "0x14CAB94", Offset = "0x14CAB94", VA = "0x14CAB94")]
	public void setClickedFalse()
	{
	}

	[Token(Token = "0x600107B")]
	[Address(RVA = "0x14CAB9C", Offset = "0x14CAB9C", VA = "0x14CAB9C")]
	public StartTutorialStepPerformOnInteraction()
	{
	}
}
[Token(Token = "0x20002A6")]
public class SizeChanger : MonoBehaviour
{
	[Token(Token = "0x20002A7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CF8C", Offset = "0x69CF8C")]
	private sealed class <sizeIncreaseDecreaseLoopCoroutine>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SizeChanger <>4__this;

		[Token(Token = "0x4000E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <increase>5__2;

		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <sizeChangingMultiplier>5__3;

		[Token(Token = "0x17000187")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600108F")]
			[Address(RVA = "0x1499054", Offset = "0x1499054", VA = "0x1499054", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000188")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001091")]
			[Address(RVA = "0x149909C", Offset = "0x149909C", VA = "0x149909C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600108C")]
		[Address(RVA = "0x1498EA0", Offset = "0x1498EA0", VA = "0x1498EA0")]
		[DebuggerHidden]
		public <sizeIncreaseDecreaseLoopCoroutine>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x600108D")]
		[Address(RVA = "0x1498ECC", Offset = "0x1498ECC", VA = "0x1498ECC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600108E")]
		[Address(RVA = "0x1498ED0", Offset = "0x1498ED0", VA = "0x1498ED0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001090")]
		[Address(RVA = "0x149905C", Offset = "0x149905C", VA = "0x149905C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CF9C", Offset = "0x69CF9C")]
	private sealed class <performIncreaseDecreaseOnceCoroutine>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SizeChanger <>4__this;

		[Token(Token = "0x4000E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float maxSizeToUse;

		[Token(Token = "0x4000E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool <continueSizeChange>5__2;

		[Token(Token = "0x4000E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		private bool <increase>5__3;

		[Token(Token = "0x4000E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <sizeChangingMultiplier>5__4;

		[Token(Token = "0x17000189")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001095")]
			[Address(RVA = "0x1498E50", Offset = "0x1498E50", VA = "0x1498E50", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001097")]
			[Address(RVA = "0x1498E98", Offset = "0x1498E98", VA = "0x1498E98", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001092")]
		[Address(RVA = "0x1498C64", Offset = "0x1498C64", VA = "0x1498C64")]
		[DebuggerHidden]
		public <performIncreaseDecreaseOnceCoroutine>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6001093")]
		[Address(RVA = "0x1498C90", Offset = "0x1498C90", VA = "0x1498C90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001094")]
		[Address(RVA = "0x1498C94", Offset = "0x1498C94", VA = "0x1498C94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001096")]
		[Address(RVA = "0x1498E58", Offset = "0x1498E58", VA = "0x1498E58", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002A9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CFAC", Offset = "0x69CFAC")]
	private sealed class <performDecreaseIncreaseOnceCoroutine>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SizeChanger <>4__this;

		[Token(Token = "0x4000E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float minSizeToUse;

		[Token(Token = "0x4000E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool <continueSizeChange>5__2;

		[Token(Token = "0x4000E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		private bool <decrease>5__3;

		[Token(Token = "0x4000E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <sizeChangingMultiplier>5__4;

		[Token(Token = "0x1700018B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600109B")]
			[Address(RVA = "0x1498C14", Offset = "0x1498C14", VA = "0x1498C14", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600109D")]
			[Address(RVA = "0x1498C5C", Offset = "0x1498C5C", VA = "0x1498C5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001098")]
		[Address(RVA = "0x1498A34", Offset = "0x1498A34", VA = "0x1498A34")]
		[DebuggerHidden]
		public <performDecreaseIncreaseOnceCoroutine>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6001099")]
		[Address(RVA = "0x1498A60", Offset = "0x1498A60", VA = "0x1498A60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600109A")]
		[Address(RVA = "0x1498A64", Offset = "0x1498A64", VA = "0x1498A64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600109C")]
		[Address(RVA = "0x1498C1C", Offset = "0x1498C1C", VA = "0x1498C1C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002AA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CFBC", Offset = "0x69CFBC")]
	private sealed class <decreaseToInvisibleCoroutine>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SizeChanger <>4__this;

		[Token(Token = "0x1700018D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60010A1")]
			[Address(RVA = "0x14989E4", Offset = "0x14989E4", VA = "0x14989E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60010A3")]
			[Address(RVA = "0x1498A2C", Offset = "0x1498A2C", VA = "0x1498A2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600109E")]
		[Address(RVA = "0x149889C", Offset = "0x149889C", VA = "0x149889C")]
		[DebuggerHidden]
		public <decreaseToInvisibleCoroutine>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x600109F")]
		[Address(RVA = "0x14988C8", Offset = "0x14988C8", VA = "0x14988C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60010A0")]
		[Address(RVA = "0x14988CC", Offset = "0x14988CC", VA = "0x14988CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60010A2")]
		[Address(RVA = "0x14989EC", Offset = "0x14989EC", VA = "0x14989EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected float startingSize;

	[Token(Token = "0x4000E00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected float minSize;

	[Token(Token = "0x4000E01")]
	protected const float MIN_SIZE_REDUCTION = 0.03f;

	[Token(Token = "0x4000E02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected float maxSize;

	[Token(Token = "0x4000E03")]
	protected const float MAX_SIZE_INCREASE = 0.05f;

	[Token(Token = "0x4000E04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	protected float sizeChangeIterationAmount;

	[Token(Token = "0x4000E05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Coroutine activeCoroutine;

	[Token(Token = "0x4000E06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private WaitForSeconds waitFor10Millies;

	[Token(Token = "0x600107C")]
	[Address(RVA = "0xA15E60", Offset = "0xA15E60", VA = "0xA15E60")]
	private void Start()
	{
	}

	[Token(Token = "0x600107D")]
	[Address(RVA = "0xA15E6C", Offset = "0xA15E6C", VA = "0xA15E6C", Slot = "4")]
	protected virtual void performSizeSetup()
	{
	}

	[Token(Token = "0x600107E")]
	[Address(RVA = "0xA02994", Offset = "0xA02994", VA = "0xA02994")]
	public void startIncreaseDecreaseSizeChangeLoop()
	{
	}

	[Token(Token = "0x600107F")]
	[Address(RVA = "0xA0290C", Offset = "0xA0290C", VA = "0xA0290C")]
	public void reset()
	{
	}

	[Token(Token = "0x6001080")]
	[Address(RVA = "0xA029FC", Offset = "0xA029FC", VA = "0xA029FC")]
	public void performIncreaseDecreaseOnce()
	{
	}

	[Token(Token = "0x6001081")]
	[Address(RVA = "0xA06E20", Offset = "0xA06E20", VA = "0xA06E20")]
	public void performIncreaseDecreaseOnce(float maxSizeToUse)
	{
	}

	[Token(Token = "0x6001082")]
	[Address(RVA = "0xA02A90", Offset = "0xA02A90", VA = "0xA02A90")]
	public void performDecreaseIncreaseOnce()
	{
	}

	[Token(Token = "0x6001083")]
	[Address(RVA = "0xA15F2C", Offset = "0xA15F2C", VA = "0xA15F2C")]
	public void performDecreaseIncreaseOnce(float minSizeToUse)
	{
	}

	[Token(Token = "0x6001084")]
	[Address(RVA = "0xA15EB8", Offset = "0xA15EB8", VA = "0xA15EB8")]
	protected void stopActiveCorountine()
	{
	}

	[Token(Token = "0x6001085")]
	[Address(RVA = "0xA15FBC", Offset = "0xA15FBC", VA = "0xA15FBC", Slot = "5")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A8E34", Offset = "0x6A8E34")]
	protected virtual IEnumerator sizeIncreaseDecreaseLoopCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6001086")]
	[Address(RVA = "0xA16034", Offset = "0xA16034", VA = "0xA16034", Slot = "6")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A8E94", Offset = "0x6A8E94")]
	protected virtual IEnumerator performIncreaseDecreaseOnceCoroutine(float maxSizeToUse)
	{
		return null;
	}

	[Token(Token = "0x6001087")]
	[Address(RVA = "0xA160BC", Offset = "0xA160BC", VA = "0xA160BC", Slot = "7")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A8EF4", Offset = "0x6A8EF4")]
	protected virtual IEnumerator performDecreaseIncreaseOnceCoroutine(float minSizeToUse)
	{
		return null;
	}

	[Token(Token = "0x6001088")]
	[Address(RVA = "0xA15EF0", Offset = "0xA15EF0", VA = "0xA15EF0")]
	private void resetToStartingSize()
	{
	}

	[Token(Token = "0x6001089")]
	[Address(RVA = "0xA16144", Offset = "0xA16144", VA = "0xA16144", Slot = "8")]
	public virtual void decreaseToInvisible()
	{
	}

	[Token(Token = "0x600108A")]
	[Address(RVA = "0xA161B0", Offset = "0xA161B0", VA = "0xA161B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A8F54", Offset = "0x6A8F54")]
	protected IEnumerator decreaseToInvisibleCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600108B")]
	[Address(RVA = "0xA16228", Offset = "0xA16228", VA = "0xA16228")]
	public SizeChanger()
	{
	}
}
[Token(Token = "0x20002AB")]
public class SpecifiedValueSizeChanger : SizeChanger
{
	[Token(Token = "0x4000E1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private bool useSpecifiedMinSize;

	[Token(Token = "0x4000E1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float specifiedMinSize;

	[Token(Token = "0x4000E1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private bool useSpecifiedStartingSize;

	[Token(Token = "0x4000E20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float specifiedStartingSize;

	[Token(Token = "0x4000E21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private bool useSpecifiedMaxSize;

	[Token(Token = "0x4000E22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private float specifiedMaxSize;

	[Token(Token = "0x4000E23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private bool maxSizeIsStartingSize;

	[Token(Token = "0x60010A4")]
	[Address(RVA = "0x14C946C", Offset = "0x14C946C", VA = "0x14C946C", Slot = "8")]
	public override void decreaseToInvisible()
	{
	}

	[Token(Token = "0x60010A5")]
	[Address(RVA = "0x14C94E0", Offset = "0x14C94E0", VA = "0x14C94E0", Slot = "4")]
	protected override void performSizeSetup()
	{
	}

	[Token(Token = "0x60010A6")]
	[Address(RVA = "0x14C957C", Offset = "0x14C957C", VA = "0x14C957C")]
	public SpecifiedValueSizeChanger()
	{
	}
}
[Token(Token = "0x20002AC")]
public class OculusPlayerEvents : MonoBehaviour
{
	[Token(Token = "0x4000E24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static UnityAction onTouchpadUp;

	[Token(Token = "0x4000E25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static UnityAction<OVRInput.Controller> onTriggerPressed;

	[Token(Token = "0x4000E26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static UnityAction<List<OVRInput.Controller>, List<GameObject>> onControllerSources;

	[Token(Token = "0x4000E27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_LeftAnchor;

	[Token(Token = "0x4000E28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_RightAnchor;

	[Token(Token = "0x4000E29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Dictionary<OVRInput.Controller, GameObject> m_ControllerSets;

	[Token(Token = "0x4000E2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected List<OVRInput.Controller> m_InputSources;

	[Token(Token = "0x4000E2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected List<OVRInput.Controller> m_Controllers;

	[Token(Token = "0x4000E2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected bool m_inputActive;

	[Token(Token = "0x4000E2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<GameObject> controllerGameObjects;

	[Token(Token = "0x60010A7")]
	[Address(RVA = "0xACCB94", Offset = "0xACCB94", VA = "0xACCB94")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010A8")]
	[Address(RVA = "0xACCD54", Offset = "0xACCD54", VA = "0xACCD54")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60010A9")]
	[Address(RVA = "0xACCE40", Offset = "0xACCE40", VA = "0xACCE40")]
	private void Update()
	{
	}

	[Token(Token = "0x60010AA")]
	[Address(RVA = "0xACCFE8", Offset = "0xACCFE8", VA = "0xACCFE8")]
	private void checkInputSource()
	{
	}

	[Token(Token = "0x60010AB")]
	[Address(RVA = "0xACD018", Offset = "0xACD018", VA = "0xACD018")]
	private List<OVRInput.Controller> updateSource(List<OVRInput.Controller> activeControllers)
	{
		return null;
	}

	[Token(Token = "0x60010AC")]
	[Address(RVA = "0xACCE98", Offset = "0xACCE98", VA = "0xACCE98")]
	private void checkForControllers()
	{
	}

	[Token(Token = "0x60010AD")]
	[Address(RVA = "0xACD20C", Offset = "0xACD20C", VA = "0xACD20C", Slot = "4")]
	protected virtual void input()
	{
	}

	[Token(Token = "0x60010AE")]
	[Address(RVA = "0xACD470", Offset = "0xACD470", VA = "0xACD470")]
	private void playerFound()
	{
	}

	[Token(Token = "0x60010AF")]
	[Address(RVA = "0xACD47C", Offset = "0xACD47C", VA = "0xACD47C")]
	private void playerLost()
	{
	}

	[Token(Token = "0x60010B0")]
	[Address(RVA = "0xACCC98", Offset = "0xACCC98", VA = "0xACCC98")]
	private Dictionary<OVRInput.Controller, GameObject> createControllerSets()
	{
		return null;
	}

	[Token(Token = "0x60010B1")]
	[Address(RVA = "0xACD484", Offset = "0xACD484", VA = "0xACD484")]
	public OculusPlayerEvents()
	{
	}
}
[Token(Token = "0x20002AD")]
public class OculusRiftPointer : VRControllerRaycaster
{
	[Token(Token = "0x4000E2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float m_Distance;

	[Token(Token = "0x4000E2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private LineRenderer[] lineRenderer;

	[Token(Token = "0x4000E30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private LayerMask m_EverythingMask;

	[Token(Token = "0x4000E31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private LayerMask m_InteractableMask;

	[Token(Token = "0x4000E32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Transform> currentOrigins;

	[Token(Token = "0x4000E33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<OVRInput.Controller, Transform> controllerTransformDictionary;

	[Token(Token = "0x4000E34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Dictionary<Transform, GameObject> currentGameObjectsAtEndOfRaycast;

	[Token(Token = "0x60010B3")]
	[Address(RVA = "0xACF7AC", Offset = "0xACF7AC", VA = "0xACF7AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010B4")]
	[Address(RVA = "0xACF964", Offset = "0xACF964", VA = "0xACF964")]
	private void Start()
	{
	}

	[Token(Token = "0x60010B5")]
	[Address(RVA = "0xACFA78", Offset = "0xACFA78", VA = "0xACFA78")]
	private void Update()
	{
	}

	[Token(Token = "0x60010B6")]
	[Address(RVA = "0xAD0214", Offset = "0xAD0214", VA = "0xAD0214")]
	private bool objectNoLongerPresentInGameObjectsEndOfRaycast(GameObject objectToCheck)
	{
		return default(bool);
	}

	[Token(Token = "0x60010B7")]
	[Address(RVA = "0xAD0130", Offset = "0xAD0130", VA = "0xAD0130")]
	private void callPerformOnRayLeave(GameObject objectHit)
	{
	}

	[Token(Token = "0x60010B8")]
	[Address(RVA = "0xACFFC4", Offset = "0xACFFC4", VA = "0xACFFC4")]
	private GameObject getObjectAtEndOfRaycast(Transform currentOrigin)
	{
		return null;
	}

	[Token(Token = "0x60010B9")]
	[Address(RVA = "0xACFDA8", Offset = "0xACFDA8", VA = "0xACFDA8")]
	private Vector3 UpdateLine(Transform currentOrigin, int lineRendererIndex)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60010BA")]
	[Address(RVA = "0xAD0394", Offset = "0xAD0394", VA = "0xAD0394")]
	private RaycastHit CreateRaycast(int layer, Transform currentOrigin)
	{
		return default(RaycastHit);
	}

	[Token(Token = "0x60010BB")]
	[Address(RVA = "0xACF990", Offset = "0xACF990", VA = "0xACF990")]
	private void setLineColor(int lineRendererIndex)
	{
	}

	[Token(Token = "0x60010BC")]
	[Address(RVA = "0xAD0548", Offset = "0xAD0548", VA = "0xAD0548")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60010BD")]
	[Address(RVA = "0xAD0700", Offset = "0xAD0700", VA = "0xAD0700")]
	private void updateOrigin(List<OVRInput.Controller> controllers, List<GameObject> inputGameObjects)
	{
	}

	[Token(Token = "0x60010BE")]
	[Address(RVA = "0xAD097C", Offset = "0xAD097C", VA = "0xAD097C")]
	private void processTriggerPressed(OVRInput.Controller controllerPressed)
	{
	}

	[Token(Token = "0x60010BF")]
	[Address(RVA = "0xAD0B34", Offset = "0xAD0B34", VA = "0xAD0B34")]
	public OculusRiftPointer()
	{
	}
}
[Token(Token = "0x20002AE")]
public class OculusWelcomeScreenCompletedListener : WelcomeScreenCompletedListener
{
	[Token(Token = "0x60010C0")]
	[Address(RVA = "0xAD0DB4", Offset = "0xAD0DB4", VA = "0xAD0DB4", Slot = "4")]
	protected override void listenForButtonPress()
	{
	}

	[Token(Token = "0x60010C1")]
	[Address(RVA = "0xAD0FD0", Offset = "0xAD0FD0", VA = "0xAD0FD0")]
	public OculusWelcomeScreenCompletedListener()
	{
	}
}
[Token(Token = "0x20002AF")]
public class UnityXRPlayerEvents : MonoBehaviour
{
	[Token(Token = "0x4000E35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static UnityAction onTouchpadUp;

	[Token(Token = "0x4000E36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static UnityAction<InputDevice> onTriggerPressed;

	[Token(Token = "0x4000E37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static UnityAction<List<InputDevice>, List<GameObject>> onControllerSources;

	[Token(Token = "0x4000E38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_LeftAnchor;

	[Token(Token = "0x4000E39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_RightAnchor;

	[Token(Token = "0x4000E3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Dictionary<InputDevice, GameObject> m_ControllerSets;

	[Token(Token = "0x4000E3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected List<InputDevice> m_InputSources;

	[Token(Token = "0x4000E3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected List<InputDevice> m_Controllers;

	[Token(Token = "0x4000E3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected bool m_inputActive;

	[Token(Token = "0x4000E3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<GameObject> controllerGameObjects;

	[Token(Token = "0x4000E3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected DateTime lastClickTime;

	[Token(Token = "0x4000E40")]
	private const int TIME_PASSED_SINCE_CLICK = 600;

	[Token(Token = "0x60010C2")]
	[Address(RVA = "0x14EAE50", Offset = "0x14EAE50", VA = "0x14EAE50")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010C3")]
	[Address(RVA = "0x14EAF94", Offset = "0x14EAF94", VA = "0x14EAF94")]
	private void updateLastClickTime()
	{
	}

	[Token(Token = "0x60010C4")]
	[Address(RVA = "0x14EAFFC", Offset = "0x14EAFFC", VA = "0x14EAFFC")]
	private void Update()
	{
	}

	[Token(Token = "0x60010C5")]
	[Address(RVA = "0x14EB148", Offset = "0x14EB148", VA = "0x14EB148")]
	private void checkInputSource()
	{
	}

	[Token(Token = "0x60010C6")]
	[Address(RVA = "0x14EB394", Offset = "0x14EB394", VA = "0x14EB394")]
	private List<InputDevice> updateSource(List<InputDevice> activeControllers)
	{
		return null;
	}

	[Token(Token = "0x60010C7")]
	[Address(RVA = "0x14EB04C", Offset = "0x14EB04C", VA = "0x14EB04C")]
	private void checkForControllers()
	{
	}

	[Token(Token = "0x60010C8")]
	[Address(RVA = "0x14EB178", Offset = "0x14EB178", VA = "0x14EB178")]
	private void input()
	{
	}

	[Token(Token = "0x60010C9")]
	[Address(RVA = "0x14EB660", Offset = "0x14EB660", VA = "0x14EB660")]
	private bool enoughTimePassed()
	{
		return default(bool);
	}

	[Token(Token = "0x60010CA")]
	[Address(RVA = "0x14EAE84", Offset = "0x14EAE84", VA = "0x14EAE84")]
	private Dictionary<InputDevice, GameObject> createControllerSets()
	{
		return null;
	}

	[Token(Token = "0x60010CB")]
	[Address(RVA = "0x14EB5DC", Offset = "0x14EB5DC", VA = "0x14EB5DC")]
	private List<InputDevice> getDeviceForSide(InputDeviceCharacteristics inputDeviceCharacteristic)
	{
		return null;
	}

	[Token(Token = "0x60010CC")]
	[Address(RVA = "0x14EB704", Offset = "0x14EB704", VA = "0x14EB704")]
	public UnityXRPlayerEvents()
	{
	}
}
[Token(Token = "0x20002B0")]
public class UnityXRPointer : VRControllerRaycaster
{
	[Token(Token = "0x4000E41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float m_Distance;

	[Token(Token = "0x4000E42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private LineRenderer[] lineRenderer;

	[Token(Token = "0x4000E43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private LayerMask m_EverythingMask;

	[Token(Token = "0x4000E44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private LayerMask m_InteractableMask;

	[Token(Token = "0x4000E45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Transform> currentOrigins;

	[Token(Token = "0x4000E46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<InputDevice, Transform> controllerTransformDictionary;

	[Token(Token = "0x4000E47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Dictionary<Transform, GameObject> currentGameObjectsAtEndOfRaycast;

	[Token(Token = "0x60010CE")]
	[Address(RVA = "0x14EB80C", Offset = "0x14EB80C", VA = "0x14EB80C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010CF")]
	[Address(RVA = "0x14EB9C4", Offset = "0x14EB9C4", VA = "0x14EB9C4")]
	private void Start()
	{
	}

	[Token(Token = "0x60010D0")]
	[Address(RVA = "0x14EBAD8", Offset = "0x14EBAD8", VA = "0x14EBAD8")]
	private void Update()
	{
	}

	[Token(Token = "0x60010D1")]
	[Address(RVA = "0x14EC274", Offset = "0x14EC274", VA = "0x14EC274")]
	private bool objectNoLongerPresentInGameObjectsEndOfRaycast(GameObject objectToCheck)
	{
		return default(bool);
	}

	[Token(Token = "0x60010D2")]
	[Address(RVA = "0x14EC190", Offset = "0x14EC190", VA = "0x14EC190")]
	private void callPerformOnRayLeave(GameObject objectHit)
	{
	}

	[Token(Token = "0x60010D3")]
	[Address(RVA = "0x14EC024", Offset = "0x14EC024", VA = "0x14EC024")]
	private GameObject getObjectAtEndOfRaycast(Transform currentOrigin)
	{
		return null;
	}

	[Token(Token = "0x60010D4")]
	[Address(RVA = "0x14EBE08", Offset = "0x14EBE08", VA = "0x14EBE08")]
	private Vector3 UpdateLine(Transform currentOrigin, int lineRendererIndex)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60010D5")]
	[Address(RVA = "0x14EC3F4", Offset = "0x14EC3F4", VA = "0x14EC3F4")]
	private RaycastHit CreateRaycast(int layer, Transform currentOrigin)
	{
		return default(RaycastHit);
	}

	[Token(Token = "0x60010D6")]
	[Address(RVA = "0x14EB9F0", Offset = "0x14EB9F0", VA = "0x14EB9F0")]
	private void setLineColor(int lineRendererIndex)
	{
	}

	[Token(Token = "0x60010D7")]
	[Address(RVA = "0x14EC5A8", Offset = "0x14EC5A8", VA = "0x14EC5A8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60010D8")]
	[Address(RVA = "0x14EC760", Offset = "0x14EC760", VA = "0x14EC760")]
	private void updateOrigin(List<InputDevice> controllers, List<GameObject> inputGameObjects)
	{
	}

	[Token(Token = "0x60010D9")]
	[Address(RVA = "0x14EC9E0", Offset = "0x14EC9E0", VA = "0x14EC9E0")]
	private void processTriggerPressed(InputDevice controllerPressed)
	{
	}

	[Token(Token = "0x60010DA")]
	[Address(RVA = "0x14ECBD0", Offset = "0x14ECBD0", VA = "0x14ECBD0")]
	public UnityXRPointer()
	{
	}
}
[Token(Token = "0x20002B1")]
public class VRControllerRaycaster : MonoBehaviour
{
	[Token(Token = "0x4000E48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected Reticule[] reticules;

	[Token(Token = "0x60010DB")]
	[Address(RVA = "0x14E71D0", Offset = "0x14E71D0", VA = "0x14E71D0")]
	public void setActiveStateSelfAndReticules(bool input)
	{
	}

	[Token(Token = "0x60010DC")]
	[Address(RVA = "0x14ECD14", Offset = "0x14ECD14", VA = "0x14ECD14")]
	public VRControllerRaycaster()
	{
	}
}
[Token(Token = "0x20002B2")]
public class WelcomeScreenCompletedListener : MonoBehaviour
{
	[Token(Token = "0x4000E49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MainMenuController mainMenuController;

	[Token(Token = "0x60010DD")]
	[Address(RVA = "0x14EFF00", Offset = "0x14EFF00", VA = "0x14EFF00")]
	private void Update()
	{
	}

	[Token(Token = "0x60010DE")]
	[Address(RVA = "0x14EFF0C", Offset = "0x14EFF0C", VA = "0x14EFF0C", Slot = "4")]
	protected virtual void listenForButtonPress()
	{
	}

	[Token(Token = "0x60010DF")]
	[Address(RVA = "0x14EFF10", Offset = "0x14EFF10", VA = "0x14EFF10")]
	protected void moveOnFromWelcomeScreen()
	{
	}

	[Token(Token = "0x60010E0")]
	[Address(RVA = "0x14EFFF4", Offset = "0x14EFFF4", VA = "0x14EFFF4")]
	public WelcomeScreenCompletedListener()
	{
	}
}
[Token(Token = "0x20002B3")]
public class PicoWelcomeScreenCompletedListener : WelcomeScreenCompletedListener
{
	[Token(Token = "0x60010E1")]
	[Address(RVA = "0xA66098", Offset = "0xA66098", VA = "0xA66098", Slot = "4")]
	protected override void listenForButtonPress()
	{
	}

	[Token(Token = "0x60010E2")]
	[Address(RVA = "0xA66384", Offset = "0xA66384", VA = "0xA66384")]
	public PicoWelcomeScreenCompletedListener()
	{
	}
}
[Token(Token = "0x20002B4")]
public class OculusRiftGameModeParameterContainerController : MonoBehaviour
{
	[Token(Token = "0x20002B5")]
	public enum OculusGameModeSelectionEnum
	{
		[Token(Token = "0x4000E4D")]
		TargetTouch,
		[Token(Token = "0x4000E4E")]
		BlockIncomingObject
	}

	[Token(Token = "0x4000E4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool parametersAlreadyCreated;

	[Token(Token = "0x4000E4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<OculusGameModeSelectionEnum, GameModeParameterContainer> gameModeParameterContainersMap;

	[Token(Token = "0x60010E3")]
	[Address(RVA = "0xACDC70", Offset = "0xACDC70", VA = "0xACDC70")]
	protected static void createGameModeParameterContainers()
	{
	}

	[Token(Token = "0x60010E4")]
	[Address(RVA = "0xACDE6C", Offset = "0xACDE6C", VA = "0xACDE6C")]
	public static GameModeParameterContainer getGameModeParameterContainerOfGameMode(OculusGameModeSelectionEnum gameModeSelectionEnum)
	{
		return null;
	}

	[Token(Token = "0x60010E5")]
	[Address(RVA = "0xACE080", Offset = "0xACE080", VA = "0xACE080")]
	public OculusRiftGameModeParameterContainerController()
	{
	}
}
[Token(Token = "0x20002B6")]
public class OculusRiftTargetTouchGameModeParameterContainer : TargetTouchGameModeParameterContainer
{
	[Token(Token = "0x4000E4F")]
	private const string SCRIPT_NAME = "OculusRiftTargetTouchGameModeParameterContainer";

	[Token(Token = "0x4000E50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private new int SCENE_TO_LOAD_INDEX;

	[Token(Token = "0x60010E7")]
	[Address(RVA = "0xAD0DA4", Offset = "0xAD0DA4", VA = "0xAD0DA4", Slot = "9")]
	public override int getSceneToLoadIndex()
	{
		return default(int);
	}

	[Token(Token = "0x60010E8")]
	[Address(RVA = "0xACDE00", Offset = "0xACDE00", VA = "0xACDE00")]
	public OculusRiftTargetTouchGameModeParameterContainer()
	{
	}
}
[Token(Token = "0x20002B7")]
public class QuestHeadsetEventListener : MonoBehaviour
{
	[Token(Token = "0x4000E51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GamePausedController gamePausedController;

	[Token(Token = "0x60010E9")]
	[Address(RVA = "0xA0B324", Offset = "0xA0B324", VA = "0xA0B324")]
	private void Start()
	{
	}

	[Token(Token = "0x60010EA")]
	[Address(RVA = "0xA0B3CC", Offset = "0xA0B3CC", VA = "0xA0B3CC")]
	public void headsetDismounted()
	{
	}

	[Token(Token = "0x60010EB")]
	[Address(RVA = "0xA0B3E8", Offset = "0xA0B3E8", VA = "0xA0B3E8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60010EC")]
	[Address(RVA = "0xA0B490", Offset = "0xA0B490", VA = "0xA0B490")]
	public QuestHeadsetEventListener()
	{
	}
}
[Token(Token = "0x20002B8")]
public class OculusButtonListener : MonoBehaviour
{
	[Token(Token = "0x4000E52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GamePausedController gamePausedController;

	[Token(Token = "0x60010ED")]
	[Address(RVA = "0xACC274", Offset = "0xACC274", VA = "0xACC274")]
	private void Update()
	{
	}

	[Token(Token = "0x60010EE")]
	[Address(RVA = "0xACC300", Offset = "0xACC300", VA = "0xACC300")]
	public OculusButtonListener()
	{
	}
}
[Token(Token = "0x20002B9")]
public class OculusMenuButtonsPressedTester : MonoBehaviour
{
	[Token(Token = "0x60010EF")]
	[Address(RVA = "0xACC7B0", Offset = "0xACC7B0", VA = "0xACC7B0")]
	private void Update()
	{
	}

	[Token(Token = "0x60010F0")]
	[Address(RVA = "0xACC870", Offset = "0xACC870", VA = "0xACC870")]
	public OculusMenuButtonsPressedTester()
	{
	}
}
[Token(Token = "0x20002BA")]
public class PicoButtonPressedListener : MonoBehaviour
{
	[Token(Token = "0x4000E53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GamePausedController gamePausedController;

	[Token(Token = "0x4000E54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<InputDevice> controllers;

	[Token(Token = "0x4000E55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TimePassedService timePassedService;

	[Token(Token = "0x60010F1")]
	[Address(RVA = "0xA64468", Offset = "0xA64468", VA = "0xA64468")]
	private void Update()
	{
	}

	[Token(Token = "0x60010F2")]
	[Address(RVA = "0xA64660", Offset = "0xA64660", VA = "0xA64660")]
	public PicoButtonPressedListener()
	{
	}
}
[Token(Token = "0x20002BB")]
public class CountdownTimerPlayerHUDElementController : PlayerHUDElementController
{
	[Token(Token = "0x4000E56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private SizeChanger textSizeChanger;

	[Token(Token = "0x4000E57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private ObjectRotationController rotationController;

	[Token(Token = "0x60010F3")]
	[Address(RVA = "0xA7485C", Offset = "0xA7485C", VA = "0xA7485C")]
	public void performCountdownEffect()
	{
	}

	[Token(Token = "0x60010F4")]
	[Address(RVA = "0xA7489C", Offset = "0xA7489C", VA = "0xA7489C")]
	public CountdownTimerPlayerHUDElementController()
	{
	}
}
[Token(Token = "0x20002BC")]
public class FillAmountTester : MonoBehaviour
{
	[Token(Token = "0x4000E58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Image sliderImage;

	[Token(Token = "0x60010F5")]
	[Address(RVA = "0x96849C", Offset = "0x96849C", VA = "0x96849C")]
	private void Start()
	{
	}

	[Token(Token = "0x60010F6")]
	[Address(RVA = "0x9684BC", Offset = "0x9684BC", VA = "0x9684BC")]
	public FillAmountTester()
	{
	}
}
[Token(Token = "0x20002BD")]
public class HealthPlayerHUDElementController : PlayerHUDElementController
{
	[Token(Token = "0x20002BE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CFCC", Offset = "0x69CFCC")]
	private sealed class <reduceSliderValue>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HealthPlayerHUDElementController <>4__this;

		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float newValue;

		[Token(Token = "0x1700018F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001102")]
			[Address(RVA = "0x148FC28", Offset = "0x148FC28", VA = "0x148FC28", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000190")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001104")]
			[Address(RVA = "0x148FC70", Offset = "0x148FC70", VA = "0x148FC70", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0x148FA5C", Offset = "0x148FA5C", VA = "0x148FA5C")]
		[DebuggerHidden]
		public <reduceSliderValue>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6001100")]
		[Address(RVA = "0x148FA88", Offset = "0x148FA88", VA = "0x148FA88", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0x148FA8C", Offset = "0x148FA8C", VA = "0x148FA8C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001103")]
		[Address(RVA = "0x148FC30", Offset = "0x148FC30", VA = "0x148FC30", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E59")]
	private const int PLAYER_MIN_HEALTH_INTEGER = 1;

	[Token(Token = "0x4000E5A")]
	private const float PLAYER_MIN_HEALTH_FLOAT = 0.2f;

	[Token(Token = "0x4000E5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Slider yellowSlider;

	[Token(Token = "0x4000E5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Slider redSlider;

	[Token(Token = "0x4000E5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Image[] redFillImages;

	[Token(Token = "0x4000E5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Image[] shieldImageAndYellowSlider;

	[Token(Token = "0x4000E5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Color redFillImageStartingColor;

	[Token(Token = "0x4000E60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Color shieldImageStartingColor;

	[Token(Token = "0x4000E61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private AudioClip lowPlayerHealthWarning;

	[Token(Token = "0x4000E62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Coroutine activeCoroutine;

	[Token(Token = "0x4000E63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private WaitForSeconds waitFor10Millies;

	[Token(Token = "0x60010F7")]
	[Address(RVA = "0x9FCA10", Offset = "0x9FCA10", VA = "0x9FCA10", Slot = "4")]
	protected override void performSetupSpecific()
	{
	}

	[Token(Token = "0x60010F8")]
	[Address(RVA = "0x9FCAE0", Offset = "0x9FCAE0", VA = "0x9FCAE0")]
	public void setPlayerEnergyStartValue(int playerEnergyRemaining)
	{
	}

	[Token(Token = "0x60010F9")]
	[Address(RVA = "0x9FCB94", Offset = "0x9FCB94", VA = "0x9FCB94")]
	public void setPlayerEnergyValue(int playerEnergyRemaining)
	{
	}

	[Token(Token = "0x60010FA")]
	[Address(RVA = "0x9FCB5C", Offset = "0x9FCB5C", VA = "0x9FCB5C")]
	private void stopActiveCoroutine()
	{
	}

	[Token(Token = "0x60010FB")]
	[Address(RVA = "0x9FCD38", Offset = "0x9FCD38", VA = "0x9FCD38")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A90F4", Offset = "0x6A90F4")]
	private IEnumerator reduceSliderValue(float newValue)
	{
		return null;
	}

	[Token(Token = "0x60010FC")]
	[Address(RVA = "0x9FCDC0", Offset = "0x9FCDC0", VA = "0x9FCDC0", Slot = "10")]
	protected override void onPausedSpecific()
	{
	}

	[Token(Token = "0x60010FD")]
	[Address(RVA = "0x9FCE10", Offset = "0x9FCE10", VA = "0x9FCE10", Slot = "7")]
	protected override void resetSpecific()
	{
	}

	[Token(Token = "0x60010FE")]
	[Address(RVA = "0x9FCE4C", Offset = "0x9FCE4C", VA = "0x9FCE4C")]
	public HealthPlayerHUDElementController()
	{
	}
}
[Token(Token = "0x20002BF")]
public class PlayerHUDConstants : MonoBehaviour
{
	[Token(Token = "0x4000E68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float PLAYER_HANDS_FADE_DURATION;

	[Token(Token = "0x4000E69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float PLAYER_COLOR_FADE_DURATION_SHORT;

	[Token(Token = "0x4000E6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float PLAYER_COLOR_FADE_DURATION_LONG;

	[Token(Token = "0x4000E6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static Color HUD_DEFAULT_ORANGE;

	[Token(Token = "0x4000E6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static Color HUD_RED;

	[Token(Token = "0x4000E6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static Color HUD_PURPLE;

	[Token(Token = "0x4000E6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public static Color HUD_YELLOW;

	[Token(Token = "0x4000E6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public static Color HUD_LOSING_HEALTH_DARK_RED;

	[Token(Token = "0x4000E70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public static Color HUD_PLAYER_HAND_DEACTIVATED;

	[Token(Token = "0x6001105")]
	[Address(RVA = "0xA67248", Offset = "0xA67248", VA = "0xA67248")]
	public PlayerHUDConstants()
	{
	}
}
[Token(Token = "0x20002C0")]
public class PlayerHUDController : MonoBehaviour
{
	[Token(Token = "0x4000E71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject timeRemainingHUDElement;

	[Token(Token = "0x4000E72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<GameObject> timeRemainingHUDElementArrayList;

	[Token(Token = "0x4000E73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject countdownHUDElement;

	[Token(Token = "0x4000E74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<GameObject> countdownHUDElementArrayList;

	[Token(Token = "0x4000E75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject generalTextHUDElement;

	[Token(Token = "0x4000E76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<GameObject> generalTextHUDElementArrayList;

	[Token(Token = "0x4000E77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject healthHUDElement;

	[Token(Token = "0x4000E78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<GameObject> healthHUDElementArrayList;

	[Token(Token = "0x4000E79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject leftHandHUDElement;

	[Token(Token = "0x4000E7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<GameObject> leftHandHUDElementArrayList;

	[Token(Token = "0x4000E7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private GameObject rightHandHUDElement;

	[Token(Token = "0x4000E7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<GameObject> rightHandHUDElementArrayList;

	[Token(Token = "0x4000E7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject pointAtObjectElement;

	[Token(Token = "0x4000E7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<PlayerHUDElementController> playerHUDElementControllers;

	[Token(Token = "0x4000E7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private AdvancedUIFader advancedUIFader;

	[Token(Token = "0x17000191")]
	public GameObject TimeRemainingHUDElement
	{
		[Token(Token = "0x6001107")]
		[Address(RVA = "0xA673F0", Offset = "0xA673F0", VA = "0xA673F0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000192")]
	public GameObject GeneralTextHUDElement
	{
		[Token(Token = "0x6001108")]
		[Address(RVA = "0xA673F8", Offset = "0xA673F8", VA = "0xA673F8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000193")]
	public GameObject HealthHUDElement
	{
		[Token(Token = "0x6001109")]
		[Address(RVA = "0xA67400", Offset = "0xA67400", VA = "0xA67400")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000194")]
	public GameObject LeftHandHUDElement
	{
		[Token(Token = "0x600110A")]
		[Address(RVA = "0xA67408", Offset = "0xA67408", VA = "0xA67408")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000195")]
	public GameObject RightHandHUDElement
	{
		[Token(Token = "0x600110B")]
		[Address(RVA = "0xA67410", Offset = "0xA67410", VA = "0xA67410")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000196")]
	public GameObject CountdownHUDElement
	{
		[Token(Token = "0x600110C")]
		[Address(RVA = "0xA67418", Offset = "0xA67418", VA = "0xA67418")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000197")]
	public List<GameObject> TimeRemainingHUDElementArrayList
	{
		[Token(Token = "0x600110D")]
		[Address(RVA = "0xA67420", Offset = "0xA67420", VA = "0xA67420")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000198")]
	public List<GameObject> CountdownHUDElementArrayList
	{
		[Token(Token = "0x600110E")]
		[Address(RVA = "0xA67428", Offset = "0xA67428", VA = "0xA67428")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000199")]
	public List<GameObject> GeneralTextHUDElementArrayList
	{
		[Token(Token = "0x600110F")]
		[Address(RVA = "0xA67430", Offset = "0xA67430", VA = "0xA67430")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700019A")]
	public List<GameObject> HealthHUDElementArrayList
	{
		[Token(Token = "0x6001110")]
		[Address(RVA = "0xA67438", Offset = "0xA67438", VA = "0xA67438")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700019B")]
	public List<GameObject> LeftHandHUDElementArrayList
	{
		[Token(Token = "0x6001111")]
		[Address(RVA = "0xA67440", Offset = "0xA67440", VA = "0xA67440")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700019C")]
	public List<GameObject> RightHandHUDElementArrayList
	{
		[Token(Token = "0x6001112")]
		[Address(RVA = "0xA67448", Offset = "0xA67448", VA = "0xA67448")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700019D")]
	public GameObject PointAtObjectElement
	{
		[Token(Token = "0x6001113")]
		[Address(RVA = "0xA67450", Offset = "0xA67450", VA = "0xA67450")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001114")]
	[Address(RVA = "0xA67458", Offset = "0xA67458", VA = "0xA67458")]
	private void Start()
	{
	}

	[Token(Token = "0x6001115")]
	[Address(RVA = "0xA676F8", Offset = "0xA676F8", VA = "0xA676F8")]
	public void setTimeActive(bool input)
	{
	}

	[Token(Token = "0x6001116")]
	[Address(RVA = "0xA67718", Offset = "0xA67718", VA = "0xA67718")]
	public void setHealthHUDActive(bool input)
	{
	}

	[Token(Token = "0x6001117")]
	[Address(RVA = "0xA67738", Offset = "0xA67738", VA = "0xA67738")]
	public void setLeftHandHUDActive(bool input)
	{
	}

	[Token(Token = "0x6001118")]
	[Address(RVA = "0xA67758", Offset = "0xA67758", VA = "0xA67758")]
	public void setRightHandHUDActive(bool input)
	{
	}

	[Token(Token = "0x6001119")]
	[Address(RVA = "0xA67778", Offset = "0xA67778", VA = "0xA67778")]
	public void fadeOutEverythingExceptHandsHUDElements()
	{
	}

	[Token(Token = "0x600111A")]
	[Address(RVA = "0xA678BC", Offset = "0xA678BC", VA = "0xA678BC")]
	public void fadeInOnGameStart()
	{
	}

	[Token(Token = "0x600111B")]
	[Address(RVA = "0xA679B8", Offset = "0xA679B8", VA = "0xA679B8")]
	private void prepareHUDElementForFadeIn(GameObject hudElement, List<GameObject> objectsToPrepare)
	{
	}

	[Token(Token = "0x600111C")]
	[Address(RVA = "0xA67A64", Offset = "0xA67A64", VA = "0xA67A64")]
	private void prepareHandHUDElementForFadeIn(GameObject hudElement)
	{
	}

	[Token(Token = "0x600111D")]
	[Address(RVA = "0xA67B0C", Offset = "0xA67B0C", VA = "0xA67B0C")]
	public void fadeOutOnGameEnd()
	{
	}

	[Token(Token = "0x600111E")]
	[Address(RVA = "0xA67CCC", Offset = "0xA67CCC", VA = "0xA67CCC")]
	public void onPaused()
	{
	}

	[Token(Token = "0x600111F")]
	[Address(RVA = "0xA67DE8", Offset = "0xA67DE8", VA = "0xA67DE8")]
	public void onUnPaused()
	{
	}

	[Token(Token = "0x6001120")]
	[Address(RVA = "0xA67F78", Offset = "0xA67F78", VA = "0xA67F78")]
	public void setAllElementsActive(bool input)
	{
	}

	[Token(Token = "0x6001121")]
	[Address(RVA = "0xA67F10", Offset = "0xA67F10", VA = "0xA67F10")]
	public void setAllInGameElementsActive(bool input)
	{
	}

	[Token(Token = "0x6001122")]
	[Address(RVA = "0xA680EC", Offset = "0xA680EC", VA = "0xA680EC")]
	public PlayerHUDController()
	{
	}
}
[Token(Token = "0x20002C1")]
public class PlayerHUDElementController : MonoBehaviour
{
	[Token(Token = "0x4000E80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected Image[] elementsToChange;

	[Token(Token = "0x4000E81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected Color elementsOriginalColor;

	[Token(Token = "0x4000E82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected SizeChanger sizeChanger;

	[Token(Token = "0x4000E83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected ColorChanger colorChanger;

	[Token(Token = "0x4000E84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	protected Text HUDElementText;

	[Token(Token = "0x4000E85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected AudioSource audioSource;

	[Token(Token = "0x4000E86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Image textBackgroundImage;

	[Token(Token = "0x6001123")]
	[Address(RVA = "0xA0268C", Offset = "0xA0268C", VA = "0xA0268C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001124")]
	[Address(RVA = "0xA02690", Offset = "0xA02690", VA = "0xA02690")]
	public void initializeStartValues()
	{
	}

	[Token(Token = "0x6001125")]
	[Address(RVA = "0xA0272C", Offset = "0xA0272C", VA = "0xA0272C")]
	public void performSetup()
	{
	}

	[Token(Token = "0x6001126")]
	[Address(RVA = "0xA02798", Offset = "0xA02798", VA = "0xA02798", Slot = "4")]
	protected virtual void performSetupSpecific()
	{
	}

	[Token(Token = "0x6001127")]
	[Address(RVA = "0xA0279C", Offset = "0xA0279C", VA = "0xA0279C", Slot = "5")]
	public virtual void setNumericValueOnText(int value)
	{
	}

	[Token(Token = "0x6001128")]
	[Address(RVA = "0xA027E8", Offset = "0xA027E8", VA = "0xA027E8", Slot = "6")]
	public virtual void reset()
	{
	}

	[Token(Token = "0x6001129")]
	[Address(RVA = "0xA02930", Offset = "0xA02930", VA = "0xA02930", Slot = "7")]
	protected virtual void resetSpecific()
	{
	}

	[Token(Token = "0x600112A")]
	[Address(RVA = "0xA02934", Offset = "0xA02934", VA = "0xA02934", Slot = "8")]
	protected virtual void resetColors()
	{
	}

	[Token(Token = "0x600112B")]
	[Address(RVA = "0xA0297C", Offset = "0xA0297C", VA = "0xA0297C")]
	public void startIncreaseDecreaseSizeLoop()
	{
	}

	[Token(Token = "0x600112C")]
	[Address(RVA = "0xA029E4", Offset = "0xA029E4", VA = "0xA029E4")]
	public void performIncreaseDecreaseSizeOnce()
	{
	}

	[Token(Token = "0x600112D")]
	[Address(RVA = "0xA02A78", Offset = "0xA02A78", VA = "0xA02A78")]
	public void performDecreaseIncreaseSizeOnce()
	{
	}

	[Token(Token = "0x600112E")]
	[Address(RVA = "0xA02B0C", Offset = "0xA02B0C", VA = "0xA02B0C")]
	public void startBlinkingColorChange(Color newColor)
	{
	}

	[Token(Token = "0x600112F")]
	[Address(RVA = "0xA02B48", Offset = "0xA02B48", VA = "0xA02B48")]
	public void fadeBetweenColorsLoop(Color newColor, bool stopActiveCoroutine)
	{
	}

	[Token(Token = "0x6001130")]
	[Address(RVA = "0xA02B8C", Offset = "0xA02B8C", VA = "0xA02B8C")]
	public void fadeBetweenColorsOnce(Color newColor, float time)
	{
	}

	[Token(Token = "0x6001131")]
	[Address(RVA = "0xA02BE0", Offset = "0xA02BE0", VA = "0xA02BE0")]
	public void fadeFromColorToColor(Color newColor, float fadeTime)
	{
	}

	[Token(Token = "0x6001132")]
	[Address(RVA = "0xA02C34", Offset = "0xA02C34", VA = "0xA02C34")]
	public void setElementColors(Color newColor)
	{
	}

	[Token(Token = "0x6001133")]
	[Address(RVA = "0xA02C58", Offset = "0xA02C58", VA = "0xA02C58")]
	public void setText(string newText)
	{
	}

	[Token(Token = "0x6001134")]
	[Address(RVA = "0xA02DD0", Offset = "0xA02DD0", VA = "0xA02DD0", Slot = "9")]
	public virtual void onPaused()
	{
	}

	[Token(Token = "0x6001135")]
	[Address(RVA = "0xA02E04", Offset = "0xA02E04", VA = "0xA02E04", Slot = "10")]
	protected virtual void onPausedSpecific()
	{
	}

	[Token(Token = "0x6001136")]
	[Address(RVA = "0xA02E08", Offset = "0xA02E08", VA = "0xA02E08", Slot = "11")]
	public virtual void onUnPaused()
	{
	}

	[Token(Token = "0x6001137")]
	[Address(RVA = "0xA02E0C", Offset = "0xA02E0C", VA = "0xA02E0C")]
	public PlayerHUDElementController()
	{
	}
}
[Token(Token = "0x20002C2")]
public class PlayerHUDTester : MonoBehaviour
{
	[Token(Token = "0x4000E87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PlayerHUDController playerHudController;

	[Token(Token = "0x4000E88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private PlayerHUDElementController playerScoredHUDElement;

	[Token(Token = "0x4000E89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private PointsPlayerHUDElementController pointsScoredHudElementController;

	[Token(Token = "0x4000E8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private PointsPlayerHUDElementController pointsLostHUDElementController;

	[Token(Token = "0x4000E8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private HealthPlayerHUDElementController playerHealthHUDElement;

	[Token(Token = "0x4000E8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private PlayerHandHUDElementController playerHandHudElementController;

	[Token(Token = "0x4000E8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private TimePlayerHUDElementController timePlayerHandHudElementController;

	[Token(Token = "0x4000E8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private PlayerHUDElementController generalInfoController;

	[Token(Token = "0x4000E8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private CountdownTimerPlayerHUDElementController countdownController;

	[Token(Token = "0x4000E90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int playerHealth;

	[Token(Token = "0x4000E91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int timeRemaining;

	[Token(Token = "0x6001138")]
	[Address(RVA = "0xA02F68", Offset = "0xA02F68", VA = "0xA02F68")]
	private void Update()
	{
	}

	[Token(Token = "0x6001139")]
	[Address(RVA = "0xA03600", Offset = "0xA03600", VA = "0xA03600")]
	public PlayerHUDTester()
	{
	}
}
[Token(Token = "0x20002C3")]
public class PlayerHandHUDElementController : PlayerHUDElementController
{
	[Token(Token = "0x20002C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CFDC", Offset = "0x69CFDC")]
	private sealed class <sliderReloadCoroutine>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerHandHUDElementController <>4__this;

		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <iterationChange>5__2;

		[Token(Token = "0x1700019E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001148")]
			[Address(RVA = "0x1496F80", Offset = "0x1496F80", VA = "0x1496F80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600114A")]
			[Address(RVA = "0x1496FC8", Offset = "0x1496FC8", VA = "0x1496FC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001145")]
		[Address(RVA = "0x1496DCC", Offset = "0x1496DCC", VA = "0x1496DCC")]
		[DebuggerHidden]
		public <sliderReloadCoroutine>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6001146")]
		[Address(RVA = "0x1496DF8", Offset = "0x1496DF8", VA = "0x1496DF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001147")]
		[Address(RVA = "0x1496DFC", Offset = "0x1496DFC", VA = "0x1496DFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001149")]
		[Address(RVA = "0x1496F88", Offset = "0x1496F88", VA = "0x1496F88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E92")]
	private const float ITERATION_SLEEP_AMOUNT_MILISECONDS = 10f;

	[Token(Token = "0x4000E93")]
	private const float ITERATION_SLEEP_AMOUNT_SECONDS = 0.01f;

	[Token(Token = "0x4000E94")]
	private const float REACTIVATION_DURATION = 2000f;

	[Token(Token = "0x4000E95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Image handActiveImage;

	[Token(Token = "0x4000E96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Image[] handActiveAllElements;

	[Token(Token = "0x4000E97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Image handDeactivatedImage;

	[Token(Token = "0x4000E98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Image[] sliderImages;

	[Token(Token = "0x4000E99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private OVRInput.Controller controllerMask;

	[Token(Token = "0x4000E9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Coroutine activeCoroutine;

	[Token(Token = "0x4000E9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private AdvancedUIFader advancedUIFader;

	[Token(Token = "0x4000E9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private GameObject[] objectsToFade;

	[Token(Token = "0x4000E9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<GameObject> objectsToFadeArrayList;

	[Token(Token = "0x600113A")]
	[Address(RVA = "0xA034CC", Offset = "0xA034CC", VA = "0xA034CC")]
	public void forceFieldDeactivated()
	{
	}

	[Token(Token = "0x600113B")]
	[Address(RVA = "0xA041A0", Offset = "0xA041A0", VA = "0xA041A0")]
	public void fadeInHudElements()
	{
	}

	[Token(Token = "0x600113C")]
	[Address(RVA = "0xA04200", Offset = "0xA04200", VA = "0xA04200", Slot = "4")]
	protected override void performSetupSpecific()
	{
	}

	[Token(Token = "0x600113D")]
	[Address(RVA = "0xA04204", Offset = "0xA04204", VA = "0xA04204")]
	private void createObjectsToFadeAsArray()
	{
	}

	[Token(Token = "0x600113E")]
	[Address(RVA = "0xA042CC", Offset = "0xA042CC", VA = "0xA042CC")]
	public void setZeroAlphaOnHudElements()
	{
	}

	[Token(Token = "0x600113F")]
	[Address(RVA = "0xA04320", Offset = "0xA04320", VA = "0xA04320")]
	private void stopActiveCoroutine()
	{
	}

	[Token(Token = "0x6001140")]
	[Address(RVA = "0xA04358", Offset = "0xA04358", VA = "0xA04358")]
	public void startSliderReloadCoroutine()
	{
	}

	[Token(Token = "0x6001141")]
	[Address(RVA = "0xA04394", Offset = "0xA04394", VA = "0xA04394")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A91A4", Offset = "0x6A91A4")]
	private IEnumerator sliderReloadCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6001142")]
	[Address(RVA = "0xA03DB0", Offset = "0xA03DB0", VA = "0xA03DB0")]
	public void handReactivated()
	{
	}

	[Token(Token = "0x6001143")]
	[Address(RVA = "0xA03B10", Offset = "0xA03B10", VA = "0xA03B10")]
	public void setHandDeactivatedImageActive(bool input)
	{
	}

	[Token(Token = "0x6001144")]
	[Address(RVA = "0xA0440C", Offset = "0xA0440C", VA = "0xA0440C")]
	public PlayerHandHUDElementController()
	{
	}
}
[Token(Token = "0x20002C5")]
public class PointArrowAtTarget2D : MonoBehaviour
{
	[Token(Token = "0x4000EA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform target;

	[Token(Token = "0x170001A0")]
	public Transform Target
	{
		[Token(Token = "0x600114B")]
		[Address(RVA = "0xA06B5C", Offset = "0xA06B5C", VA = "0xA06B5C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600114C")]
		[Address(RVA = "0xA06B64", Offset = "0xA06B64", VA = "0xA06B64")]
		set
		{
		}
	}

	[Token(Token = "0x600114D")]
	[Address(RVA = "0xA06B6C", Offset = "0xA06B6C", VA = "0xA06B6C")]
	private void Update()
	{
	}

	[Token(Token = "0x600114E")]
	[Address(RVA = "0xA06D44", Offset = "0xA06D44", VA = "0xA06D44")]
	public PointArrowAtTarget2D()
	{
	}
}
[Token(Token = "0x20002C6")]
public class PointsPlayerHUDElementController : PlayerHUDElementController
{
	[Token(Token = "0x4000EA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float maximumSize;

	[Token(Token = "0x600114F")]
	[Address(RVA = "0xA06DC4", Offset = "0xA06DC4", VA = "0xA06DC4")]
	public void setTextValue(int value)
	{
	}

	[Token(Token = "0x6001150")]
	[Address(RVA = "0xA032BC", Offset = "0xA032BC", VA = "0xA032BC")]
	public void pointScored(int pointsValue, bool maxPointIncrease)
	{
	}

	[Token(Token = "0x6001151")]
	[Address(RVA = "0xA03344", Offset = "0xA03344", VA = "0xA03344")]
	public void pointLost(int pointsValue, bool maxPointDecrease)
	{
	}

	[Token(Token = "0x6001152")]
	[Address(RVA = "0xA06EB0", Offset = "0xA06EB0", VA = "0xA06EB0")]
	public PointsPlayerHUDElementController()
	{
	}
}
[Token(Token = "0x20002C7")]
public class TimePlayerHUDElementController : PlayerHUDElementController
{
	[Token(Token = "0x4000EA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int LAST_SECONDS_COUNTDOWN_VALUE;

	[Token(Token = "0x6001153")]
	[Address(RVA = "0x14DEF50", Offset = "0x14DEF50", VA = "0x14DEF50", Slot = "5")]
	public override void setNumericValueOnText(int value)
	{
	}

	[Token(Token = "0x6001154")]
	[Address(RVA = "0x14DF0E8", Offset = "0x14DF0E8", VA = "0x14DF0E8")]
	public TimePlayerHUDElementController()
	{
	}
}
[Token(Token = "0x20002C8")]
public class GetPlayerHandControllerService : MonoBehaviour
{
	[Token(Token = "0x4000EA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PlayerHandController playerHandController;

	[Token(Token = "0x6001155")]
	[Address(RVA = "0x9F4EA8", Offset = "0x9F4EA8", VA = "0x9F4EA8")]
	public PlayerHandController getPlayerHandController()
	{
		return null;
	}

	[Token(Token = "0x6001156")]
	[Address(RVA = "0x9F4EB0", Offset = "0x9F4EB0", VA = "0x9F4EB0")]
	public GetPlayerHandControllerService()
	{
	}
}
[Token(Token = "0x20002C9")]
public class PlayerHandController : MonoBehaviour
{
	[Token(Token = "0x20002CA")]
	public enum Hand_Type
	{
		[Token(Token = "0x4000EC4")]
		LEFT,
		[Token(Token = "0x4000EC5")]
		RIGHT
	}

	[Token(Token = "0x20002CB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CFEC", Offset = "0x69CFEC")]
	private sealed class <startForceFieldRestartCoroutine>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerHandController <>4__this;

		[Token(Token = "0x170001A3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001174")]
			[Address(RVA = "0x1496D7C", Offset = "0x1496D7C", VA = "0x1496D7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001176")]
			[Address(RVA = "0x1496DC4", Offset = "0x1496DC4", VA = "0x1496DC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001171")]
		[Address(RVA = "0x1496C1C", Offset = "0x1496C1C", VA = "0x1496C1C")]
		[DebuggerHidden]
		public <startForceFieldRestartCoroutine>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x6001172")]
		[Address(RVA = "0x1496C48", Offset = "0x1496C48", VA = "0x1496C48", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001173")]
		[Address(RVA = "0x1496C4C", Offset = "0x1496C4C", VA = "0x1496C4C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001175")]
		[Address(RVA = "0x1496D84", Offset = "0x1496D84", VA = "0x1496D84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69CFFC", Offset = "0x69CFFC")]
	private sealed class <secondHalfOfForceFieldReloadCoroutine>d__54 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerHandController <>4__this;

		[Token(Token = "0x4000ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float waitTime;

		[Token(Token = "0x170001A5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600117A")]
			[Address(RVA = "0x1496BCC", Offset = "0x1496BCC", VA = "0x1496BCC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600117C")]
			[Address(RVA = "0x1496C14", Offset = "0x1496C14", VA = "0x1496C14", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001177")]
		[Address(RVA = "0x1496AB8", Offset = "0x1496AB8", VA = "0x1496AB8")]
		[DebuggerHidden]
		public <secondHalfOfForceFieldReloadCoroutine>d__54(int <>1__state)
		{
		}

		[Token(Token = "0x6001178")]
		[Address(RVA = "0x1496AE4", Offset = "0x1496AE4", VA = "0x1496AE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001179")]
		[Address(RVA = "0x1496AE8", Offset = "0x1496AE8", VA = "0x1496AE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600117B")]
		[Address(RVA = "0x1496BD4", Offset = "0x1496BD4", VA = "0x1496BD4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000EA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MaterialEmissionChanger materialEmissionChanger;

	[Token(Token = "0x4000EA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private PlayerHandHapticsController playerHandHapticsController;

	[Token(Token = "0x4000EA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private SkinnedMeshRenderer skinnedMeshRenderer;

	[Token(Token = "0x4000EA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Material generalDeactivatedMaterial;

	[Token(Token = "0x4000EAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Material specificDeactivatedMaterial;

	[Token(Token = "0x4000EAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material deactivatedMaterialToUse;

	[Token(Token = "0x4000EAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Material generalActiveMaterial;

	[Token(Token = "0x4000EAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Material specificActiveMaterial;

	[Token(Token = "0x4000EAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material activateMaterialToUse;

	[Token(Token = "0x4000EAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool forceFieldActive;

	[Token(Token = "0x4000EB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Coroutine forceFieldRestartCoroutine;

	[Token(Token = "0x4000EB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private AudioSource audioSource;

	[Token(Token = "0x4000EB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private AudioSource loopingAudioSource;

	[Token(Token = "0x4000EB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private AudioClip forceFieldDeactivatedAudio;

	[Token(Token = "0x4000EB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private AudioClip forceFieldRestartingAudio_1;

	[Token(Token = "0x4000EB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private AudioClip forceFieldRestartingAudio_2;

	[Token(Token = "0x4000EB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private AudioClip forceFieldActivatedAudio;

	[Token(Token = "0x4000EB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private PlayerHandHUDElementController handHUDController;

	[Token(Token = "0x4000EB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool infiniteEnergy;

	[Token(Token = "0x4000EB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[SerializeField]
	private Hand_Type handType;

	[Token(Token = "0x4000EBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private bool loadForceFieldOnStart;

	[Token(Token = "0x4000EBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	private bool automaticallyStartForceFieldReload;

	[Token(Token = "0x4000EBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private WaitForSeconds waitForHalfSecond;

	[Token(Token = "0x4000EBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private WaitForSeconds waitForTwoAndAHalfSeconds;

	[Token(Token = "0x4000EBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int reActivationDuration;

	[Token(Token = "0x4000EBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private Image sliderImage;

	[Token(Token = "0x4000EC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private DateTime reActivationStartTime;

	[Token(Token = "0x4000EC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool reActivationPaused;

	[Token(Token = "0x4000EC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private double reActivationTimeRemaining;

	[Token(Token = "0x170001A1")]
	public bool AutomaticallyStartForceFieldReload
	{
		[Token(Token = "0x6001157")]
		[Address(RVA = "0xA03614", Offset = "0xA03614", VA = "0xA03614")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001158")]
		[Address(RVA = "0xA0361C", Offset = "0xA0361C", VA = "0xA0361C")]
		set
		{
		}
	}

	[Token(Token = "0x170001A2")]
	public bool InfiniteEnergy
	{
		[Token(Token = "0x6001159")]
		[Address(RVA = "0xA03628", Offset = "0xA03628", VA = "0xA03628")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600115A")]
		[Address(RVA = "0xA03630", Offset = "0xA03630", VA = "0xA03630")]
		set
		{
		}
	}

	[Token(Token = "0x600115B")]
	[Address(RVA = "0xA0363C", Offset = "0xA0363C", VA = "0xA0363C")]
	private void Start()
	{
	}

	[Token(Token = "0x600115C")]
	[Address(RVA = "0xA0370C", Offset = "0xA0370C", VA = "0xA0370C")]
	public void performSetup()
	{
	}

	[Token(Token = "0x600115D")]
	[Address(RVA = "0xA039E0", Offset = "0xA039E0", VA = "0xA039E0")]
	public void touchedForbidenObjectType()
	{
	}

	[Token(Token = "0x600115E")]
	[Address(RVA = "0xA038C8", Offset = "0xA038C8", VA = "0xA038C8")]
	public void setHandMaterial(bool useHandSpecificMaterial)
	{
	}

	[Token(Token = "0x600115F")]
	[Address(RVA = "0xA0394C", Offset = "0xA0394C", VA = "0xA0394C")]
	private void setupMaterialEmissionChanger(bool useHandSpecificMaterial)
	{
	}

	[Token(Token = "0x6001160")]
	[Address(RVA = "0xA037FC", Offset = "0xA037FC", VA = "0xA037FC")]
	public void forceForceFieldActivation()
	{
	}

	[Token(Token = "0x6001161")]
	[Address(RVA = "0xA03B4C", Offset = "0xA03B4C", VA = "0xA03B4C")]
	public void testDeactivateForceField()
	{
	}

	[Token(Token = "0x6001162")]
	[Address(RVA = "0xA03B70", Offset = "0xA03B70", VA = "0xA03B70")]
	private void performTestSetup()
	{
	}

	[Token(Token = "0x6001163")]
	[Address(RVA = "0xA03A10", Offset = "0xA03A10", VA = "0xA03A10")]
	public void deactivateForceField()
	{
	}

	[Token(Token = "0x6001164")]
	[Address(RVA = "0xA03CA0", Offset = "0xA03CA0", VA = "0xA03CA0")]
	public void startForceFieldReload()
	{
	}

	[Token(Token = "0x6001165")]
	[Address(RVA = "0xA03C28", Offset = "0xA03C28", VA = "0xA03C28")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A9254", Offset = "0x6A9254")]
	private IEnumerator startForceFieldRestartCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6001166")]
	[Address(RVA = "0xA03CF8", Offset = "0xA03CF8", VA = "0xA03CF8")]
	public void playerScoredPoint()
	{
	}

	[Token(Token = "0x6001167")]
	[Address(RVA = "0xA03D1C", Offset = "0xA03D1C", VA = "0xA03D1C")]
	private void activateForceField()
	{
	}

	[Token(Token = "0x6001168")]
	[Address(RVA = "0xA03BBC", Offset = "0xA03BBC", VA = "0xA03BBC")]
	private void stopForceFieldRestartCoroutine()
	{
	}

	[Token(Token = "0x6001169")]
	[Address(RVA = "0xA03C04", Offset = "0xA03C04", VA = "0xA03C04")]
	public void resetToDefaultMaterial()
	{
	}

	[Token(Token = "0x600116A")]
	[Address(RVA = "0xA03EBC", Offset = "0xA03EBC", VA = "0xA03EBC")]
	public bool isForceFieldActive()
	{
		return default(bool);
	}

	[Token(Token = "0x600116B")]
	[Address(RVA = "0xA03EE0", Offset = "0xA03EE0", VA = "0xA03EE0")]
	public void onPaused()
	{
	}

	[Token(Token = "0x600116C")]
	[Address(RVA = "0xA03FCC", Offset = "0xA03FCC", VA = "0xA03FCC")]
	public void onUnPaused()
	{
	}

	[Token(Token = "0x600116D")]
	[Address(RVA = "0xA0404C", Offset = "0xA0404C", VA = "0xA0404C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A92B4", Offset = "0x6A92B4")]
	private IEnumerator secondHalfOfForceFieldReloadCoroutine(float waitTime)
	{
		return null;
	}

	[Token(Token = "0x600116E")]
	[Address(RVA = "0xA040D4", Offset = "0xA040D4", VA = "0xA040D4")]
	public Hand_Type getHandType()
	{
		return default(Hand_Type);
	}

	[Token(Token = "0x600116F")]
	[Address(RVA = "0xA040DC", Offset = "0xA040DC", VA = "0xA040DC")]
	public PlayerHandHapticsController getPlayerHandHapticsController()
	{
		return null;
	}

	[Token(Token = "0x6001170")]
	[Address(RVA = "0xA040E4", Offset = "0xA040E4", VA = "0xA040E4")]
	public PlayerHandController()
	{
	}
}
[Token(Token = "0x20002CD")]
public class PlayerHandHapticsConstants
{
	[Token(Token = "0x4000ECD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int DEACTIVATION_HAPTICS_DURATION;

	[Token(Token = "0x4000ECE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int DEACTIVATION_HAPTICS_STRENGTH;

	[Token(Token = "0x4000ECF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int LOW_VIBRATION_DURATION;

	[Token(Token = "0x4000ED0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int LOW_VIBRATION_STRENGHT;

	[Token(Token = "0x4000ED1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int ACTIVATION_HAPTICS_DURATION;

	[Token(Token = "0x4000ED2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static int ACTIVATION_HAPTICS_STRENGHT;

	[Token(Token = "0x4000ED3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static int POINT_SCORED_DURATION;

	[Token(Token = "0x4000ED4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static int POINT_SCORED_STRENGTH;

	[Token(Token = "0x600117D")]
	[Address(RVA = "0xA04414", Offset = "0xA04414", VA = "0xA04414")]
	public PlayerHandHapticsConstants()
	{
	}
}
[Token(Token = "0x20002CE")]
public class PlayerHandHapticsController : MonoBehaviour
{
	[Token(Token = "0x20002CF")]
	public enum PLAYER_HAND_EVENT
	{
		[Token(Token = "0x4000EE8")]
		POINT_SCORED,
		[Token(Token = "0x4000EE9")]
		DEACTIVATED,
		[Token(Token = "0x4000EEA")]
		ACTIVATED,
		[Token(Token = "0x4000EEB")]
		LOW_VIBRATION
	}

	[Token(Token = "0x20002D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69D00C", Offset = "0x69D00C")]
	private sealed class <continuousVibrationCoroutine>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170001A7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600118D")]
			[Address(RVA = "0x149705C", Offset = "0x149705C", VA = "0x149705C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600118F")]
			[Address(RVA = "0x14970A4", Offset = "0x14970A4", VA = "0x14970A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600118A")]
		[Address(RVA = "0x1496FD0", Offset = "0x1496FD0", VA = "0x1496FD0")]
		[DebuggerHidden]
		public <continuousVibrationCoroutine>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x600118B")]
		[Address(RVA = "0x1496FFC", Offset = "0x1496FFC", VA = "0x1496FFC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600118C")]
		[Address(RVA = "0x1497000", Offset = "0x1497000", VA = "0x1497000", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600118E")]
		[Address(RVA = "0x1497064", Offset = "0x1497064", VA = "0x1497064", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002D1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69D01C", Offset = "0x69D01C")]
	private sealed class <stopHapticsCoroutine>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170001A9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001193")]
			[Address(RVA = "0x1497138", Offset = "0x1497138", VA = "0x1497138", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001195")]
			[Address(RVA = "0x1497180", Offset = "0x1497180", VA = "0x1497180", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001190")]
		[Address(RVA = "0x14970AC", Offset = "0x14970AC", VA = "0x14970AC")]
		[DebuggerHidden]
		public <stopHapticsCoroutine>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6001191")]
		[Address(RVA = "0x14970D8", Offset = "0x14970D8", VA = "0x14970D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001192")]
		[Address(RVA = "0x14970DC", Offset = "0x14970DC", VA = "0x14970DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001194")]
		[Address(RVA = "0x1497140", Offset = "0x1497140", VA = "0x1497140", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000ED5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Coroutine currentCoroutine;

	[Token(Token = "0x4000ED6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected Coroutine currentContinuousVibrationCoroutine;

	[Token(Token = "0x4000ED7")]
	protected const float POINT_SCORED_AMPLITUDE = 0.2f;

	[Token(Token = "0x4000ED8")]
	protected const float POINT_SCORED_FREQUENCY = 0.2f;

	[Token(Token = "0x4000ED9")]
	protected const float POINT_SCORED_HAPTICS_DURATION = 0.2f;

	[Token(Token = "0x4000EDA")]
	protected const int POINT_SCORED_HAPTICS_DURATION_INT = 200;

	[Token(Token = "0x4000EDB")]
	protected const float ACTIVATED_AMPLITUDE = 0.5f;

	[Token(Token = "0x4000EDC")]
	protected const float ACTIVATED_FREQUENCY = 0.5f;

	[Token(Token = "0x4000EDD")]
	protected const float ACTIVATED_DURATION = 0.5f;

	[Token(Token = "0x4000EDE")]
	protected const int ACTIVATED_DURATION_INT = 500;

	[Token(Token = "0x4000EDF")]
	protected const float DEACTIVATED_AMPLITUDE = 1f;

	[Token(Token = "0x4000EE0")]
	protected const float DEACTIVATED_FREQUENCY = 1f;

	[Token(Token = "0x4000EE1")]
	protected const float DEACTIVATED_DURATION = 1f;

	[Token(Token = "0x4000EE2")]
	protected const int DEACTIVATED_DURATION_INT = 100;

	[Token(Token = "0x4000EE3")]
	protected const float LOW_VIBRATION_AMPLITUDE = 0.1f;

	[Token(Token = "0x4000EE4")]
	protected const float LOW_VIBRATION_FREQUENCY = 0.1f;

	[Token(Token = "0x4000EE5")]
	protected const float LOW_VIBRATION_DURATION = 0.5f;

	[Token(Token = "0x4000EE6")]
	protected const int LOW_VIBRATION_DURATION_INT = 500;

	[Token(Token = "0x600117F")]
	[Address(RVA = "0xA038BC", Offset = "0xA038BC", VA = "0xA038BC")]
	public void initalize()
	{
	}

	[Token(Token = "0x6001180")]
	[Address(RVA = "0xA044BC", Offset = "0xA044BC", VA = "0xA044BC", Slot = "4")]
	protected virtual void createHapticsValues()
	{
	}

	[Token(Token = "0x6001181")]
	[Address(RVA = "0xA044C0", Offset = "0xA044C0", VA = "0xA044C0", Slot = "5")]
	public virtual void startHaptics(PLAYER_HAND_EVENT playerHandEvent)
	{
	}

	[Token(Token = "0x6001182")]
	[Address(RVA = "0xA044C4", Offset = "0xA044C4", VA = "0xA044C4")]
	protected void stopCoroutines()
	{
	}

	[Token(Token = "0x6001183")]
	[Address(RVA = "0xA04578", Offset = "0xA04578", VA = "0xA04578", Slot = "6")]
	public virtual void startLowVibration()
	{
	}

	[Token(Token = "0x6001184")]
	[Address(RVA = "0xA0450C", Offset = "0xA0450C", VA = "0xA0450C")]
	protected void stopCurrentContinuousVibrationCoroutine()
	{
	}

	[Token(Token = "0x6001185")]
	[Address(RVA = "0xA0457C", Offset = "0xA0457C", VA = "0xA0457C", Slot = "7")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A93B4", Offset = "0x6A93B4")]
	protected virtual IEnumerator continuousVibrationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6001186")]
	[Address(RVA = "0xA045D8", Offset = "0xA045D8", VA = "0xA045D8", Slot = "8")]
	public virtual void stopContinuousVibration()
	{
	}

	[Token(Token = "0x6001187")]
	[Address(RVA = "0xA045DC", Offset = "0xA045DC", VA = "0xA045DC", Slot = "9")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A9414", Offset = "0x6A9414")]
	protected virtual IEnumerator stopHapticsCoroutine(PLAYER_HAND_EVENT playerHandEvent)
	{
		return null;
	}

	[Token(Token = "0x6001188")]
	[Address(RVA = "0xA044F8", Offset = "0xA044F8", VA = "0xA044F8")]
	protected void stopCurrentCoroutine()
	{
	}

	[Token(Token = "0x6001189")]
	[Address(RVA = "0xA04638", Offset = "0xA04638", VA = "0xA04638")]
	public PlayerHandHapticsController()
	{
	}
}
[Token(Token = "0x20002D2")]
public class OculusPlayerHandHapticsController : PlayerHandHapticsController
{
	[Token(Token = "0x20002D3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69D02C", Offset = "0x69D02C")]
	private sealed class <continuousVibrationCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OculusPlayerHandHapticsController <>4__this;

		[Token(Token = "0x170001AB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011A0")]
			[Address(RVA = "0x14938E0", Offset = "0x14938E0", VA = "0x14938E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011A2")]
			[Address(RVA = "0x1493928", Offset = "0x1493928", VA = "0x1493928", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600119D")]
		[Address(RVA = "0x1493718", Offset = "0x1493718", VA = "0x1493718")]
		[DebuggerHidden]
		public <continuousVibrationCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x600119E")]
		[Address(RVA = "0x1493744", Offset = "0x1493744", VA = "0x1493744", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600119F")]
		[Address(RVA = "0x1493748", Offset = "0x1493748", VA = "0x1493748", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0x14938E8", Offset = "0x14938E8", VA = "0x14938E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69D03C", Offset = "0x69D03C")]
	private sealed class <stopHapticsCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OculusPlayerHandHapticsController <>4__this;

		[Token(Token = "0x4000EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PLAYER_HAND_EVENT playerHandEvent;

		[Token(Token = "0x170001AD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011A6")]
			[Address(RVA = "0x1493A4C", Offset = "0x1493A4C", VA = "0x1493A4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011A8")]
			[Address(RVA = "0x1493A94", Offset = "0x1493A94", VA = "0x1493A94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0x1493930", Offset = "0x1493930", VA = "0x1493930")]
		[DebuggerHidden]
		public <stopHapticsCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0x149395C", Offset = "0x149395C", VA = "0x149395C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0x1493960", Offset = "0x1493960", VA = "0x1493960", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011A7")]
		[Address(RVA = "0x1493A54", Offset = "0x1493A54", VA = "0x1493A54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000EF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private OVRInput.Controller controllerMask;

	[Token(Token = "0x4000EF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<PLAYER_HAND_EVENT, float[]> hapticsValues;

	[Token(Token = "0x4000EF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<PLAYER_HAND_EVENT, WaitForSecondsRealtime> waitForSeconds;

	[Token(Token = "0x6001196")]
	[Address(RVA = "0xACD594", Offset = "0xACD594", VA = "0xACD594", Slot = "4")]
	protected override void createHapticsValues()
	{
	}

	[Token(Token = "0x6001197")]
	[Address(RVA = "0xACD874", Offset = "0xACD874", VA = "0xACD874", Slot = "5")]
	public override void startHaptics(PLAYER_HAND_EVENT playerHandEvent)
	{
	}

	[Token(Token = "0x6001198")]
	[Address(RVA = "0xACD990", Offset = "0xACD990", VA = "0xACD990", Slot = "7")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A9514", Offset = "0x6A9514")]
	protected override IEnumerator continuousVibrationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6001199")]
	[Address(RVA = "0xACDA08", Offset = "0xACDA08", VA = "0xACDA08", Slot = "8")]
	public override void stopContinuousVibration()
	{
	}

	[Token(Token = "0x600119A")]
	[Address(RVA = "0xACDA84", Offset = "0xACDA84", VA = "0xACDA84", Slot = "9")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A9574", Offset = "0x6A9574")]
	protected override IEnumerator stopHapticsCoroutine(PLAYER_HAND_EVENT playerHandEvent)
	{
		return null;
	}

	[Token(Token = "0x600119B")]
	[Address(RVA = "0xACDB0C", Offset = "0xACDB0C", VA = "0xACDB0C", Slot = "6")]
	public override void startLowVibration()
	{
	}

	[Token(Token = "0x600119C")]
	[Address(RVA = "0xACDB90", Offset = "0xACDB90", VA = "0xACDB90")]
	public OculusPlayerHandHapticsController()
	{
	}
}
[Token(Token = "0x20002D5")]
public class PicoPlayerHandHapticsController : PlayerHandHapticsController
{
	[Token(Token = "0x4000EFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private PXR_Input.Controller controller;

	[Token(Token = "0x4000EFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<PLAYER_HAND_EVENT, float> hapticsIntesinty;

	[Token(Token = "0x4000EFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<PLAYER_HAND_EVENT, int> hapticsDuration;

	[Token(Token = "0x60011A9")]
	[Address(RVA = "0xA65BD8", Offset = "0xA65BD8", VA = "0xA65BD8", Slot = "4")]
	protected override void createHapticsValues()
	{
	}

	[Token(Token = "0x60011AA")]
	[Address(RVA = "0xA65DA8", Offset = "0xA65DA8", VA = "0xA65DA8", Slot = "5")]
	public override void startHaptics(PLAYER_HAND_EVENT playerHandEvent)
	{
	}

	[Token(Token = "0x60011AB")]
	[Address(RVA = "0xA65E5C", Offset = "0xA65E5C", VA = "0xA65E5C", Slot = "6")]
	public override void startLowVibration()
	{
	}

	[Token(Token = "0x60011AC")]
	[Address(RVA = "0xA65EF8", Offset = "0xA65EF8", VA = "0xA65EF8", Slot = "8")]
	public override void stopContinuousVibration()
	{
	}

	[Token(Token = "0x60011AD")]
	[Address(RVA = "0xA65F0C", Offset = "0xA65F0C", VA = "0xA65F0C")]
	public PicoPlayerHandHapticsController()
	{
	}
}
[Token(Token = "0x20002D6")]
public class OculusPlayerHandController : PlayerHandController
{
	[Token(Token = "0x4000EFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private OVRInput.Controller controllerMask;

	[Token(Token = "0x60011AE")]
	[Address(RVA = "0xACD58C", Offset = "0xACD58C", VA = "0xACD58C")]
	public OculusPlayerHandController()
	{
	}
}
[Token(Token = "0x20002D7")]
public class PlayerHandTester : MonoBehaviour
{
	[Token(Token = "0x4000EFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PlayerHandController leftHand;

	[Token(Token = "0x4000EFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private PlayerHandController rightHand;

	[Token(Token = "0x60011AF")]
	[Address(RVA = "0xA04640", Offset = "0xA04640", VA = "0xA04640")]
	private void Start()
	{
	}

	[Token(Token = "0x60011B0")]
	[Address(RVA = "0xA04644", Offset = "0xA04644", VA = "0xA04644")]
	private void Update()
	{
	}

	[Token(Token = "0x60011B1")]
	[Address(RVA = "0xA046BC", Offset = "0xA046BC", VA = "0xA046BC")]
	public PlayerHandTester()
	{
	}
}
[Token(Token = "0x20002D8")]
public class MemoryLoadController : MonoBehaviour
{
	[Token(Token = "0x20002D9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69D04C", Offset = "0x69D04C")]
	private sealed class <preloadPatricleSystem>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParticleSystem particleSystem;

		[Token(Token = "0x4000F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MemoryLoadController <>4__this;

		[Token(Token = "0x170001AF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011C1")]
			[Address(RVA = "0x1492070", Offset = "0x1492070", VA = "0x1492070", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011C3")]
			[Address(RVA = "0x14920B8", Offset = "0x14920B8", VA = "0x14920B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011BE")]
		[Address(RVA = "0x1491F9C", Offset = "0x1491F9C", VA = "0x1491F9C")]
		[DebuggerHidden]
		public <preloadPatricleSystem>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x60011BF")]
		[Address(RVA = "0x1491FC8", Offset = "0x1491FC8", VA = "0x1491FC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011C0")]
		[Address(RVA = "0x1491FCC", Offset = "0x1491FCC", VA = "0x1491FCC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011C2")]
		[Address(RVA = "0x1492078", Offset = "0x1492078", VA = "0x1492078", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002DA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69D05C", Offset = "0x69D05C")]
	private sealed class <finalSetup>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MemoryLoadController <>4__this;

		[Token(Token = "0x170001B1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011C7")]
			[Address(RVA = "0x14916C4", Offset = "0x14916C4", VA = "0x14916C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011C9")]
			[Address(RVA = "0x149170C", Offset = "0x149170C", VA = "0x149170C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011C4")]
		[Address(RVA = "0x14915C8", Offset = "0x14915C8", VA = "0x14915C8")]
		[DebuggerHidden]
		public <finalSetup>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x60011C5")]
		[Address(RVA = "0x14915F4", Offset = "0x14915F4", VA = "0x14915F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011C6")]
		[Address(RVA = "0x14915F8", Offset = "0x14915F8", VA = "0x14915F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011C8")]
		[Address(RVA = "0x14916CC", Offset = "0x14916CC", VA = "0x14916CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002DB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69D06C", Offset = "0x69D06C")]
	private sealed class <loadEffectsAndSpecificTextures>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject inputObject;

		[Token(Token = "0x4000F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MemoryLoadController <>4__this;

		[Token(Token = "0x4000F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool loadDoNotTouch;

		[Token(Token = "0x4000F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CoordinationCoachGameObject <coordinationCoachGameObject>5__2;

		[Token(Token = "0x170001B3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011CD")]
			[Address(RVA = "0x1491904", Offset = "0x1491904", VA = "0x1491904", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011CF")]
			[Address(RVA = "0x149194C", Offset = "0x149194C", VA = "0x149194C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011CA")]
		[Address(RVA = "0x1491714", Offset = "0x1491714", VA = "0x1491714")]
		[DebuggerHidden]
		public <loadEffectsAndSpecificTextures>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x60011CB")]
		[Address(RVA = "0x1491740", Offset = "0x1491740", VA = "0x1491740", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011CC")]
		[Address(RVA = "0x1491744", Offset = "0x1491744", VA = "0x1491744", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011CE")]
		[Address(RVA = "0x149190C", Offset = "0x149190C", VA = "0x149190C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69D07C", Offset = "0x69D07C")]
	private sealed class <loadHandSpecificTexturesGameObject>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject inputObject;

		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MemoryLoadController <>4__this;

		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool loadDoNotTouch;

		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CoordinationCoachGameObject <coordinationCoachGameObject>5__2;

		[Token(Token = "0x170001B5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011D3")]
			[Address(RVA = "0x1491B2C", Offset = "0x1491B2C", VA = "0x1491B2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011D5")]
			[Address(RVA = "0x1491B74", Offset = "0x1491B74", VA = "0x1491B74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011D0")]
		[Address(RVA = "0x1491954", Offset = "0x1491954", VA = "0x1491954")]
		[DebuggerHidden]
		public <loadHandSpecificTexturesGameObject>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60011D1")]
		[Address(RVA = "0x1491980", Offset = "0x1491980", VA = "0x1491980", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011D2")]
		[Address(RVA = "0x1491984", Offset = "0x1491984", VA = "0x1491984", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011D4")]
		[Address(RVA = "0x1491B34", Offset = "0x1491B34", VA = "0x1491B34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002DD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69D08C", Offset = "0x69D08C")]
	private sealed class <loadHandSpecificTexturesTextureLoadController>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject inputObject;

		[Token(Token = "0x4000F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MemoryLoadController <>4__this;

		[Token(Token = "0x4000F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool loadDoNotTouch;

		[Token(Token = "0x4000F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PreloadTexturesController <coordinationCoachGameObject>5__2;

		[Token(Token = "0x170001B7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011D9")]
			[Address(RVA = "0x1491F4C", Offset = "0x1491F4C", VA = "0x1491F4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011DB")]
			[Address(RVA = "0x1491F94", Offset = "0x1491F94", VA = "0x1491F94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011D6")]
		[Address(RVA = "0x1491D8C", Offset = "0x1491D8C", VA = "0x1491D8C")]
		[DebuggerHidden]
		public <loadHandSpecificTexturesTextureLoadController>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x60011D7")]
		[Address(RVA = "0x1491DB8", Offset = "0x1491DB8", VA = "0x1491DB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011D8")]
		[Address(RVA = "0x1491DBC", Offset = "0x1491DBC", VA = "0x1491DBC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011DA")]
		[Address(RVA = "0x1491F54", Offset = "0x1491F54", VA = "0x1491F54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002DE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69D09C", Offset = "0x69D09C")]
	private sealed class <loadHandSpecificTexturesShattered>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject inputObject;

		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MemoryLoadController <>4__this;

		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool loadDoNotTouch;

		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private FracturedPartsController <fracturedPartsController>5__2;

		[Token(Token = "0x170001B9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011DF")]
			[Address(RVA = "0x1491D3C", Offset = "0x1491D3C", VA = "0x1491D3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011E1")]
			[Address(RVA = "0x1491D84", Offset = "0x1491D84", VA = "0x1491D84", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011DC")]
		[Address(RVA = "0x1491B7C", Offset = "0x1491B7C", VA = "0x1491B7C")]
		[DebuggerHidden]
		public <loadHandSpecificTexturesShattered>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x60011DD")]
		[Address(RVA = "0x1491BA8", Offset = "0x1491BA8", VA = "0x1491BA8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011DE")]
		[Address(RVA = "0x1491BAC", Offset = "0x1491BAC", VA = "0x1491BAC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011E0")]
		[Address(RVA = "0x1491D44", Offset = "0x1491D44", VA = "0x1491D44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected WaitForSeconds waitForOneTenthSecond;

	[Token(Token = "0x4000F01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected WaitForSeconds waitForOneTwentiethSecond;

	[Token(Token = "0x4000F02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected WaitForSeconds waitForHalfSecond;

	[Token(Token = "0x4000F03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected WaitForSeconds waitForOneSecond;

	[Token(Token = "0x4000F04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private ParticleSystem[] particleSystemsToPreLoad;

	[Token(Token = "0x4000F05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	protected GameObject effectLoadGameObject;

	[Token(Token = "0x4000F06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected GameObject effectLoadGameObjectDoNotTouch;

	[Token(Token = "0x4000F07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	protected GameObject[] colorLoadObjects;

	[Token(Token = "0x4000F08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	protected GameObject[] colorLoadObjectsDoNotTouch;

	[Token(Token = "0x4000F09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private PreloadShadersController preloadShadersController;

	[Token(Token = "0x4000F0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private PositionInFrontOfObjectController positionInFrontOfObjectController;

	[Token(Token = "0x60011B2")]
	[Address(RVA = "0xD8D974", Offset = "0xD8D974", VA = "0xD8D974")]
	private void Awake()
	{
	}

	[Token(Token = "0x60011B3")]
	[Address(RVA = "0xD8D978", Offset = "0xD8D978", VA = "0xD8D978")]
	private void preloadIntoMemory()
	{
	}

	[Token(Token = "0x60011B4")]
	[Address(RVA = "0xD8DDA4", Offset = "0xD8DDA4", VA = "0xD8DDA4", Slot = "4")]
	protected virtual void loadGameModeSpecific()
	{
	}

	[Token(Token = "0x60011B5")]
	[Address(RVA = "0xD8DC98", Offset = "0xD8DC98", VA = "0xD8DC98")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A9674", Offset = "0x6A9674")]
	private IEnumerator preloadPatricleSystem(ParticleSystem particleSystem)
	{
		return null;
	}

	[Token(Token = "0x60011B6")]
	[Address(RVA = "0xD8DD2C", Offset = "0xD8DD2C", VA = "0xD8DD2C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A96D4", Offset = "0x6A96D4")]
	private IEnumerator finalSetup()
	{
		return null;
	}

	[Token(Token = "0x60011B7")]
	[Address(RVA = "0xD8DB58", Offset = "0xD8DB58", VA = "0xD8DB58")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A9734", Offset = "0x6A9734")]
	private IEnumerator loadEffectsAndSpecificTextures(GameObject inputObject, bool loadDoNotTouch)
	{
		return null;
	}

	[Token(Token = "0x60011B8")]
	[Address(RVA = "0xD8DDA8", Offset = "0xD8DDA8", VA = "0xD8DDA8", Slot = "5")]
	protected virtual void preloadGameModeSpecificEffects(GameObject inputGameObject)
	{
	}

	[Token(Token = "0x60011B9")]
	[Address(RVA = "0xD8DDAC", Offset = "0xD8DDAC", VA = "0xD8DDAC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A9794", Offset = "0x6A9794")]
	private IEnumerator loadHandSpecificTexturesGameObject(GameObject inputObject, bool loadDoNotTouch)
	{
		return null;
	}

	[Token(Token = "0x60011BA")]
	[Address(RVA = "0xD8DBF8", Offset = "0xD8DBF8", VA = "0xD8DBF8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A97F4", Offset = "0x6A97F4")]
	private IEnumerator loadHandSpecificTexturesTextureLoadController(GameObject inputObject, bool loadDoNotTouch)
	{
		return null;
	}

	[Token(Token = "0x60011BB")]
	[Address(RVA = "0xD8DE4C", Offset = "0xD8DE4C", VA = "0xD8DE4C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A9854", Offset = "0x6A9854")]
	private IEnumerator loadHandSpecificTexturesShattered(GameObject inputObject, bool loadDoNotTouch)
	{
		return null;
	}

	[Token(Token = "0x60011BC")]
	[Address(RVA = "0xD8DEEC", Offset = "0xD8DEEC", VA = "0xD8DEEC")]
	protected void disableAndRepositionObject(GameObject memoryLoadObject)
	{
	}

	[Token(Token = "0x60011BD")]
	[Address(RVA = "0xD8DFA0", Offset = "0xD8DFA0", VA = "0xD8DFA0")]
	public MemoryLoadController()
	{
	}
}
[Token(Token = "0x20002DF")]
public class PreloadShadersController : MonoBehaviour
{
	[Token(Token = "0x4000F2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string SHADER_VARIANTS_FOLDER;

	[Token(Token = "0x4000F2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string shaderVariantName;

	[Token(Token = "0x60011E2")]
	[Address(RVA = "0xA08E80", Offset = "0xA08E80", VA = "0xA08E80")]
	public void preloadShaders()
	{
	}

	[Token(Token = "0x60011E3")]
	[Address(RVA = "0xA08FE4", Offset = "0xA08FE4", VA = "0xA08FE4")]
	public PreloadShadersController()
	{
	}
}
[Token(Token = "0x20002E0")]
public class PreloadTexturesController : MonoBehaviour
{
	[Token(Token = "0x4000F2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Renderer[] renderers;

	[Token(Token = "0x4000F2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Material anyHandMaterial;

	[Token(Token = "0x4000F2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Material leftHandOnlyMaterial;

	[Token(Token = "0x4000F2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Material rightHandOnlyMaterial;

	[Token(Token = "0x4000F30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Material doNotTouchMaterial;

	[Token(Token = "0x60011E5")]
	[Address(RVA = "0xA090A4", Offset = "0xA090A4", VA = "0xA090A4")]
	private Material getMaterial(CoordinationCoachGameObject.ActivationType activationType)
	{
		return null;
	}

	[Token(Token = "0x60011E6")]
	[Address(RVA = "0xA090E8", Offset = "0xA090E8", VA = "0xA090E8")]
	public void setMaterial(CoordinationCoachGameObject.ActivationType activationType)
	{
	}

	[Token(Token = "0x60011E7")]
	[Address(RVA = "0xA0912C", Offset = "0xA0912C", VA = "0xA0912C")]
	private void setMaterialOnChildRenderers(Material inputMaterial)
	{
	}

	[Token(Token = "0x60011E8")]
	[Address(RVA = "0xA091A8", Offset = "0xA091A8", VA = "0xA091A8")]
	public PreloadTexturesController()
	{
	}
}
[Token(Token = "0x20002E1")]
public class BlockIncomingMemoryLoadController : MemoryLoadController
{
	[Token(Token = "0x20002E2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69D0AC", Offset = "0x69D0AC")]
	private sealed class <loadAppearanceEffectDifferentColors>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject appearanceEffect;

		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BlockIncomingMemoryLoadController <>4__this;

		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private NormalObjectToBlockAppearanceEffectColorChanger <normalObjectToBlockAppearanceEffectColorChanger>5__2;

		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ParticleSystem <particleSystem>5__3;

		[Token(Token = "0x170001BB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011F0")]
			[Address(RVA = "0x14BC020", Offset = "0x14BC020", VA = "0x14BC020", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011F2")]
			[Address(RVA = "0x14BC068", Offset = "0x14BC068", VA = "0x14BC068", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0x14BBDE8", Offset = "0x14BBDE8", VA = "0x14BBDE8")]
		[DebuggerHidden]
		public <loadAppearanceEffectDifferentColors>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0x14BBE14", Offset = "0x14BBE14", VA = "0x14BBE14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0x14BBE18", Offset = "0x14BBE18", VA = "0x14BBE18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011F1")]
		[Address(RVA = "0x14BC028", Offset = "0x14BC028", VA = "0x14BC028", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject[] appearanceEffectsWithDifferentColors;

	[Token(Token = "0x60011E9")]
	[Address(RVA = "0x14AA638", Offset = "0x14AA638", VA = "0x14AA638", Slot = "5")]
	protected override void preloadGameModeSpecificEffects(GameObject inputGameObject)
	{
	}

	[Token(Token = "0x60011EA")]
	[Address(RVA = "0x14AA698", Offset = "0x14AA698", VA = "0x14AA698", Slot = "4")]
	protected override void loadGameModeSpecific()
	{
	}

	[Token(Token = "0x60011EB")]
	[Address(RVA = "0x14AA720", Offset = "0x14AA720", VA = "0x14AA720")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A9A94", Offset = "0x6A9A94")]
	private IEnumerator loadAppearanceEffectDifferentColors(GameObject appearanceEffect)
	{
		return null;
	}

	[Token(Token = "0x60011EC")]
	[Address(RVA = "0x14AA7B4", Offset = "0x14AA7B4", VA = "0x14AA7B4")]
	public BlockIncomingMemoryLoadController()
	{
	}
}
[Token(Token = "0x20002E3")]
public class TargetTouchMemoryLoadController : MemoryLoadController
{
	[Token(Token = "0x20002E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69D0BC", Offset = "0x69D0BC")]
	private sealed class <preloadInactiveTouched>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject inputGameObject;

		[Token(Token = "0x4000F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TargetTouchMemoryLoadController <>4__this;

		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TargetObject <targetObject>5__2;

		[Token(Token = "0x170001BD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011FB")]
			[Address(RVA = "0x149B5A8", Offset = "0x149B5A8", VA = "0x149B5A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011FD")]
			[Address(RVA = "0x149B5F0", Offset = "0x149B5F0", VA = "0x149B5F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011F8")]
		[Address(RVA = "0x149B490", Offset = "0x149B490", VA = "0x149B490")]
		[DebuggerHidden]
		public <preloadInactiveTouched>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0x149B4BC", Offset = "0x149B4BC", VA = "0x149B4BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0x149B4C0", Offset = "0x149B4C0", VA = "0x149B4C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011FC")]
		[Address(RVA = "0x149B5B0", Offset = "0x149B5B0", VA = "0x149B5B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002E5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69D0CC", Offset = "0x69D0CC")]
	private sealed class <preloadForceField>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TargetTouchMemoryLoadController <>4__this;

		[Token(Token = "0x170001BF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001201")]
			[Address(RVA = "0x149B440", Offset = "0x149B440", VA = "0x149B440", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001203")]
			[Address(RVA = "0x149B488", Offset = "0x149B488", VA = "0x149B488", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011FE")]
		[Address(RVA = "0x149B340", Offset = "0x149B340", VA = "0x149B340")]
		[DebuggerHidden]
		public <preloadForceField>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60011FF")]
		[Address(RVA = "0x149B36C", Offset = "0x149B36C", VA = "0x149B36C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001200")]
		[Address(RVA = "0x149B370", Offset = "0x149B370", VA = "0x149B370", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001202")]
		[Address(RVA = "0x149B448", Offset = "0x149B448", VA = "0x149B448", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private TargetTouchForceFieldController targetTouchForceFieldController;

	[Token(Token = "0x60011F3")]
	[Address(RVA = "0x14D5F98", Offset = "0x14D5F98", VA = "0x14D5F98", Slot = "5")]
	protected override void preloadGameModeSpecificEffects(GameObject inputGameObject)
	{
	}

	[Token(Token = "0x60011F4")]
	[Address(RVA = "0x14D5FC4", Offset = "0x14D5FC4", VA = "0x14D5FC4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A9B44", Offset = "0x6A9B44")]
	private IEnumerator preloadInactiveTouched(GameObject inputGameObject)
	{
		return null;
	}

	[Token(Token = "0x60011F5")]
	[Address(RVA = "0x14D6058", Offset = "0x14D6058", VA = "0x14D6058", Slot = "4")]
	protected override void loadGameModeSpecific()
	{
	}

	[Token(Token = "0x60011F6")]
	[Address(RVA = "0x14D6084", Offset = "0x14D6084", VA = "0x14D6084")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A9BA4", Offset = "0x6A9BA4")]
	private IEnumerator preloadForceField()
	{
		return null;
	}

	[Token(Token = "0x60011F7")]
	[Address(RVA = "0x14D60FC", Offset = "0x14D60FC", VA = "0x14D60FC")]
	public TargetTouchMemoryLoadController()
	{
	}
}
[Token(Token = "0x20002E6")]
public class AudioSourceTest : MonoBehaviour
{
	[Token(Token = "0x4000F41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource audioSource;

	[Token(Token = "0x4000F42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioClip playLooping;

	[Token(Token = "0x4000F43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip playOnce;

	[Token(Token = "0x6001204")]
	[Address(RVA = "0x14A7CC4", Offset = "0x14A7CC4", VA = "0x14A7CC4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001205")]
	[Address(RVA = "0x14A7D74", Offset = "0x14A7D74", VA = "0x14A7D74")]
	private void Update()
	{
	}

	[Token(Token = "0x6001206")]
	[Address(RVA = "0x14A7DC0", Offset = "0x14A7DC0", VA = "0x14A7DC0")]
	public AudioSourceTest()
	{
	}
}
[Token(Token = "0x20002E7")]
public class ConcurrentQueueTestScript : MonoBehaviour
{
	[Token(Token = "0x4000F44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject objectToAdd;

	[Token(Token = "0x4000F45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ConcurrentQueue<GameObject> concurrentQueue;

	[Token(Token = "0x6001207")]
	[Address(RVA = "0xA6B680", Offset = "0xA6B680", VA = "0xA6B680")]
	private void Update()
	{
	}

	[Token(Token = "0x6001208")]
	[Address(RVA = "0xA6B740", Offset = "0xA6B740", VA = "0xA6B740")]
	public ConcurrentQueueTestScript()
	{
	}
}
[Token(Token = "0x20002E8")]
public class DisappearOnTouch : MonoBehaviour
{
	[Token(Token = "0x4000F46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioController audioController;

	[Token(Token = "0x170001C1")]
	public AudioController AudioController
	{
		[Token(Token = "0x6001209")]
		[Address(RVA = "0x95A234", Offset = "0x95A234", VA = "0x95A234")]
		get
		{
			return null;
		}
		[Token(Token = "0x600120A")]
		[Address(RVA = "0x95A23C", Offset = "0x95A23C", VA = "0x95A23C")]
		set
		{
		}
	}

	[Token(Token = "0x600120B")]
	[Address(RVA = "0x95A244", Offset = "0x95A244", VA = "0x95A244")]
	public void touchedByUser()
	{
	}

	[Token(Token = "0x600120C")]
	[Address(RVA = "0x95A2D0", Offset = "0x95A2D0", VA = "0x95A2D0")]
	public DisappearOnTouch()
	{
	}
}
[Token(Token = "0x20002E9")]
public class FragmentingObjectsColorChangeTester : MonoBehaviour
{
	[Token(Token = "0x4000F47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private FracturedPartsController fracturedPartsController;

	[Token(Token = "0x600120D")]
	[Address(RVA = "0x9EF204", Offset = "0x9EF204", VA = "0x9EF204")]
	private void Start()
	{
	}

	[Token(Token = "0x600120E")]
	[Address(RVA = "0x9EF21C", Offset = "0x9EF21C", VA = "0x9EF21C")]
	private void Update()
	{
	}

	[Token(Token = "0x600120F")]
	[Address(RVA = "0x9EF2A4", Offset = "0x9EF2A4", VA = "0x9EF2A4")]
	public FragmentingObjectsColorChangeTester()
	{
	}
}
[Token(Token = "0x20002EA")]
public class GUIElementMover : MonoBehaviour
{
	[Token(Token = "0x4000F48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float m_DistanceFromCamera;

	[Token(Token = "0x4000F49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform m_Camera;

	[Token(Token = "0x4000F4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform m_RectTransform;

	[Token(Token = "0x6001210")]
	[Address(RVA = "0x9EF2B4", Offset = "0x9EF2B4", VA = "0x9EF2B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001211")]
	[Address(RVA = "0x9EF310", Offset = "0x9EF310", VA = "0x9EF310")]
	private void Update()
	{
	}

	[Token(Token = "0x6001212")]
	[Address(RVA = "0x9EF434", Offset = "0x9EF434", VA = "0x9EF434")]
	public GUIElementMover()
	{
	}
}
[Token(Token = "0x20002EB")]
public class MaterialEmissionChangeTester : MonoBehaviour
{
	[Token(Token = "0x4000F4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MaterialEmissionChanger materialEmissionChanger;

	[Token(Token = "0x4000F4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SkinnedMeshRenderer skinnedMeshRenderer;

	[Token(Token = "0x6001213")]
	[Address(RVA = "0xD8BEDC", Offset = "0xD8BEDC", VA = "0xD8BEDC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001214")]
	[Address(RVA = "0xD8BEE0", Offset = "0xD8BEE0", VA = "0xD8BEE0")]
	public MaterialEmissionChangeTester()
	{
	}
}
[Token(Token = "0x20002EC")]
public class ObjectInfoTester : MonoBehaviour
{
	[Token(Token = "0x4000F4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject objectToInstantiate;

	[Token(Token = "0x6001215")]
	[Address(RVA = "0xC826E4", Offset = "0xC826E4", VA = "0xC826E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001216")]
	[Address(RVA = "0xC82784", Offset = "0xC82784", VA = "0xC82784")]
	public ObjectInfoTester()
	{
	}
}
[Token(Token = "0x20002ED")]
public class RotateObjectTest : MonoBehaviour
{
	[Token(Token = "0x4000F4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject objectToRotate;

	[Token(Token = "0x6001217")]
	[Address(RVA = "0xA10B08", Offset = "0xA10B08", VA = "0xA10B08")]
	private void Update()
	{
	}

	[Token(Token = "0x6001218")]
	[Address(RVA = "0xA10BC0", Offset = "0xA10BC0", VA = "0xA10BC0")]
	public RotateObjectTest()
	{
	}
}
[Token(Token = "0x20002EE")]
public class SimpleLog : MonoBehaviour
{
	[Token(Token = "0x6001219")]
	[Address(RVA = "0xA15CEC", Offset = "0xA15CEC", VA = "0xA15CEC")]
	private void Update()
	{
	}

	[Token(Token = "0x600121A")]
	[Address(RVA = "0xA15D60", Offset = "0xA15D60", VA = "0xA15D60")]
	public SimpleLog()
	{
	}
}
[Token(Token = "0x20002EF")]
public class StopAndRestartCountdownTest : MonoBehaviour
{
	[Token(Token = "0x20002F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69D0DC", Offset = "0x69D0DC")]
	private sealed class <countdownCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float waitTime;

		[Token(Token = "0x170001C2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001222")]
			[Address(RVA = "0x14995DC", Offset = "0x14995DC", VA = "0x14995DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001224")]
			[Address(RVA = "0x1499624", Offset = "0x1499624", VA = "0x1499624", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600121F")]
		[Address(RVA = "0x1499478", Offset = "0x1499478", VA = "0x1499478")]
		[DebuggerHidden]
		public <countdownCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001220")]
		[Address(RVA = "0x14994A4", Offset = "0x14994A4", VA = "0x14994A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001221")]
		[Address(RVA = "0x14994A8", Offset = "0x14994A8", VA = "0x14994A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001223")]
		[Address(RVA = "0x14995E4", Offset = "0x14995E4", VA = "0x14995E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private DateTime activationTime;

	[Token(Token = "0x4000F50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool activationPaused;

	[Token(Token = "0x4000F51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private double activationTimeRemaining;

	[Token(Token = "0x4000F52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private double activationDuration;

	[Token(Token = "0x4000F53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Coroutine activeCountdownCoroutine;

	[Token(Token = "0x600121B")]
	[Address(RVA = "0x14CAC50", Offset = "0x14CAC50", VA = "0x14CAC50")]
	private void Update()
	{
	}

	[Token(Token = "0x600121C")]
	[Address(RVA = "0x14CAE10", Offset = "0x14CAE10", VA = "0x14CAE10")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A9CA4", Offset = "0x6A9CA4")]
	private IEnumerator countdownCoroutine(float waitTime)
	{
		return null;
	}

	[Token(Token = "0x600121D")]
	[Address(RVA = "0x14CAE84", Offset = "0x14CAE84", VA = "0x14CAE84")]
	private void stopActiveCoroutine()
	{
	}

	[Token(Token = "0x600121E")]
	[Address(RVA = "0x14CAECC", Offset = "0x14CAECC", VA = "0x14CAECC")]
	public StopAndRestartCountdownTest()
	{
	}
}
[Token(Token = "0x20002F1")]
public class StopCoroutinesTest_1 : MonoBehaviour
{
	[Token(Token = "0x20002F2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69D0EC", Offset = "0x69D0EC")]
	private sealed class <DoSomething1>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170001C4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600122D")]
			[Address(RVA = "0x149970C", Offset = "0x149970C", VA = "0x149970C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600122F")]
			[Address(RVA = "0x1499754", Offset = "0x1499754", VA = "0x1499754", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600122A")]
		[Address(RVA = "0x149962C", Offset = "0x149962C", VA = "0x149962C")]
		[DebuggerHidden]
		public <DoSomething1>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x600122B")]
		[Address(RVA = "0x1499658", Offset = "0x1499658", VA = "0x1499658", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600122C")]
		[Address(RVA = "0x149965C", Offset = "0x149965C", VA = "0x149965C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600122E")]
		[Address(RVA = "0x1499714", Offset = "0x1499714", VA = "0x1499714", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002F3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69D0FC", Offset = "0x69D0FC")]
	private sealed class <DoSomething2>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170001C6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001233")]
			[Address(RVA = "0x149983C", Offset = "0x149983C", VA = "0x149983C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001235")]
			[Address(RVA = "0x1499884", Offset = "0x1499884", VA = "0x1499884", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001230")]
		[Address(RVA = "0x149975C", Offset = "0x149975C", VA = "0x149975C")]
		[DebuggerHidden]
		public <DoSomething2>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6001231")]
		[Address(RVA = "0x1499788", Offset = "0x1499788", VA = "0x1499788", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001232")]
		[Address(RVA = "0x149978C", Offset = "0x149978C", VA = "0x149978C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001234")]
		[Address(RVA = "0x1499844", Offset = "0x1499844", VA = "0x1499844", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6001225")]
	[Address(RVA = "0x14CAEE0", Offset = "0x14CAEE0", VA = "0x14CAEE0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A9D54", Offset = "0x6A9D54")]
	private IEnumerator DoSomething1()
	{
		return null;
	}

	[Token(Token = "0x6001226")]
	[Address(RVA = "0x14CAF3C", Offset = "0x14CAF3C", VA = "0x14CAF3C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A9DB4", Offset = "0x6A9DB4")]
	private IEnumerator DoSomething2()
	{
		return null;
	}

	[Token(Token = "0x6001227")]
	[Address(RVA = "0x14CAF98", Offset = "0x14CAF98", VA = "0x14CAF98")]
	private void Start()
	{
	}

	[Token(Token = "0x6001228")]
	[Address(RVA = "0x14CB00C", Offset = "0x14CB00C", VA = "0x14CB00C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001229")]
	[Address(RVA = "0x14CB0C0", Offset = "0x14CB0C0", VA = "0x14CB0C0")]
	public StopCoroutinesTest_1()
	{
	}
}
[Token(Token = "0x20002F4")]
public class StopCoroutinesTest_2 : MonoBehaviour
{
	[Token(Token = "0x20002F5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69D10C", Offset = "0x69D10C")]
	private sealed class <DoSomething1>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170001C8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600123D")]
			[Address(RVA = "0x149996C", Offset = "0x149996C", VA = "0x149996C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600123F")]
			[Address(RVA = "0x14999B4", Offset = "0x14999B4", VA = "0x14999B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600123A")]
		[Address(RVA = "0x149988C", Offset = "0x149988C", VA = "0x149988C")]
		[DebuggerHidden]
		public <DoSomething1>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x600123B")]
		[Address(RVA = "0x14998B8", Offset = "0x14998B8", VA = "0x14998B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600123C")]
		[Address(RVA = "0x14998BC", Offset = "0x14998BC", VA = "0x14998BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600123E")]
		[Address(RVA = "0x1499974", Offset = "0x1499974", VA = "0x1499974", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002F6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69D11C", Offset = "0x69D11C")]
	private sealed class <DoSomething2>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170001CA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001243")]
			[Address(RVA = "0x1499A9C", Offset = "0x1499A9C", VA = "0x1499A9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001245")]
			[Address(RVA = "0x1499AE4", Offset = "0x1499AE4", VA = "0x1499AE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001240")]
		[Address(RVA = "0x14999BC", Offset = "0x14999BC", VA = "0x14999BC")]
		[DebuggerHidden]
		public <DoSomething2>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6001241")]
		[Address(RVA = "0x14999E8", Offset = "0x14999E8", VA = "0x14999E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0x14999EC", Offset = "0x14999EC", VA = "0x14999EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001244")]
		[Address(RVA = "0x1499AA4", Offset = "0x1499AA4", VA = "0x1499AA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6001236")]
	[Address(RVA = "0x14CB0C8", Offset = "0x14CB0C8", VA = "0x14CB0C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A9EB4", Offset = "0x6A9EB4")]
	private IEnumerator DoSomething1()
	{
		return null;
	}

	[Token(Token = "0x6001237")]
	[Address(RVA = "0x14CB124", Offset = "0x14CB124", VA = "0x14CB124")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6A9F14", Offset = "0x6A9F14")]
	private IEnumerator DoSomething2()
	{
		return null;
	}

	[Token(Token = "0x6001238")]
	[Address(RVA = "0x14CB180", Offset = "0x14CB180", VA = "0x14CB180")]
	private void Start()
	{
	}

	[Token(Token = "0x6001239")]
	[Address(RVA = "0x14CB1F4", Offset = "0x14CB1F4", VA = "0x14CB1F4")]
	public StopCoroutinesTest_2()
	{
	}
}
[Token(Token = "0x20002F7")]
public class TestAndroidLogging : MonoBehaviour
{
	[Token(Token = "0x6001246")]
	[Address(RVA = "0x14DB698", Offset = "0x14DB698", VA = "0x14DB698")]
	private void Start()
	{
	}

	[Token(Token = "0x6001247")]
	[Address(RVA = "0x14DB69C", Offset = "0x14DB69C", VA = "0x14DB69C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001248")]
	[Address(RVA = "0x14DB710", Offset = "0x14DB710", VA = "0x14DB710")]
	public TestAndroidLogging()
	{
	}
}
[Token(Token = "0x20002F8")]
public class AppearanceTester : MonoBehaviour
{
	[Token(Token = "0x4000F5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject targetObjectPrefab;

	[Token(Token = "0x4000F60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform targetTransform;

	[Token(Token = "0x4000F61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int i;

	[Token(Token = "0x4000F62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject targetObject;

	[Token(Token = "0x6001249")]
	[Address(RVA = "0x14A5D20", Offset = "0x14A5D20", VA = "0x14A5D20")]
	private void Update()
	{
	}

	[Token(Token = "0x600124A")]
	[Address(RVA = "0x14A5FBC", Offset = "0x14A5FBC", VA = "0x14A5FBC")]
	public AppearanceTester()
	{
	}
}
[Token(Token = "0x20002F9")]
public class AudioControllerTester : MonoBehaviour
{
	[Token(Token = "0x20002FA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69D12C", Offset = "0x69D12C")]
	private sealed class <testCoroutine>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioControllerTester <>4__this;

		[Token(Token = "0x170001CC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001251")]
			[Address(RVA = "0x14BBC60", Offset = "0x14BBC60", VA = "0x14BBC60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001253")]
			[Address(RVA = "0x14BBCA8", Offset = "0x14BBCA8", VA = "0x14BBCA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0x14BBB4C", Offset = "0x14BBB4C", VA = "0x14BBB4C")]
		[DebuggerHidden]
		public <testCoroutine>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x600124F")]
		[Address(RVA = "0x14BBB78", Offset = "0x14BBB78", VA = "0x14BBB78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001250")]
		[Address(RVA = "0x14BBB7C", Offset = "0x14BBB7C", VA = "0x14BBB7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001252")]
		[Address(RVA = "0x14BBC68", Offset = "0x14BBC68", VA = "0x14BBC68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioController audioController;

	[Token(Token = "0x600124B")]
	[Address(RVA = "0x14A7C18", Offset = "0x14A7C18", VA = "0x14A7C18")]
	private void Start()
	{
	}

	[Token(Token = "0x600124C")]
	[Address(RVA = "0x14A7C44", Offset = "0x14A7C44", VA = "0x14A7C44")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AA014", Offset = "0x6AA014")]
	private IEnumerator testCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600124D")]
	[Address(RVA = "0x14A7CBC", Offset = "0x14A7CBC", VA = "0x14A7CBC")]
	public AudioControllerTester()
	{
	}
}
[Token(Token = "0x20002FB")]
public class BezierCurveTest : MonoBehaviour
{
	[Token(Token = "0x20002FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69D13C", Offset = "0x69D13C")]
	private sealed class <startMovementCoroutine>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BezierCurveTest <>4__this;

		[Token(Token = "0x170001CE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001263")]
			[Address(RVA = "0x14BBD98", Offset = "0x14BBD98", VA = "0x14BBD98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001265")]
			[Address(RVA = "0x14BBDE0", Offset = "0x14BBDE0", VA = "0x14BBDE0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001260")]
		[Address(RVA = "0x14BBCB0", Offset = "0x14BBCB0", VA = "0x14BBCB0")]
		[DebuggerHidden]
		public <startMovementCoroutine>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0x14BBCDC", Offset = "0x14BBCDC", VA = "0x14BBCDC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001262")]
		[Address(RVA = "0x14BBCE0", Offset = "0x14BBCE0", VA = "0x14BBCE0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001264")]
		[Address(RVA = "0x14BBDA0", Offset = "0x14BBDA0", VA = "0x14BBDA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float mTimer;

	[Token(Token = "0x4000F68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3[] bezierCurvePoints;

	[Token(Token = "0x4000F69")]
	private const float BEZIER_CURVE_QUARTER_MULTIPLIER = 0.25f;

	[Token(Token = "0x4000F6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform targetTransform;

	[Token(Token = "0x4000F6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float maxDistance;

	[Token(Token = "0x4000F6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float journeyTime;

	[Token(Token = "0x4000F6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float bezierJourneyTime;

	[Token(Token = "0x4000F6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float bezierMovementSpeed;

	[Token(Token = "0x4000F6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool startMovement;

	[Token(Token = "0x4000F70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float bezierDistance;

	[Token(Token = "0x6001254")]
	[Address(RVA = "0x14A94E4", Offset = "0x14A94E4", VA = "0x14A94E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001255")]
	[Address(RVA = "0x14A97C0", Offset = "0x14A97C0", VA = "0x14A97C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AA0C4", Offset = "0x6AA0C4")]
	private IEnumerator startMovementCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6001256")]
	[Address(RVA = "0x14A9838", Offset = "0x14A9838", VA = "0x14A9838")]
	private void UpDownCurve()
	{
	}

	[Token(Token = "0x6001257")]
	[Address(RVA = "0x14A983C", Offset = "0x14A983C", VA = "0x14A983C")]
	private void leftRightUpDownCurve()
	{
	}

	[Token(Token = "0x6001258")]
	[Address(RVA = "0x14A9840", Offset = "0x14A9840", VA = "0x14A9840")]
	protected int getOneOrMinusOne()
	{
		return default(int);
	}

	[Token(Token = "0x6001259")]
	[Address(RVA = "0x14A986C", Offset = "0x14A986C", VA = "0x14A986C")]
	private void Update()
	{
	}

	[Token(Token = "0x600125A")]
	[Address(RVA = "0x14A987C", Offset = "0x14A987C", VA = "0x14A987C")]
	private void moveAlongBezierCurve()
	{
	}

	[Token(Token = "0x600125B")]
	[Address(RVA = "0x14A99E0", Offset = "0x14A99E0", VA = "0x14A99E0")]
	private Vector3 getPointOnBezierCurve(float input)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600125C")]
	[Address(RVA = "0x14A9B14", Offset = "0x14A9B14", VA = "0x14A9B14", Slot = "4")]
	protected virtual float getMTimerValue(float mTimer)
	{
		return default(float);
	}

	[Token(Token = "0x600125D")]
	[Address(RVA = "0x14A96AC", Offset = "0x14A96AC", VA = "0x14A96AC")]
	protected float getBezierCurveDistance()
	{
		return default(float);
	}

	[Token(Token = "0x600125E")]
	[Address(RVA = "0x14A9B20", Offset = "0x14A9B20", VA = "0x14A9B20")]
	private Vector3 CalculateCubicBezierPoint(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600125F")]
	[Address(RVA = "0x14A9BB4", Offset = "0x14A9BB4", VA = "0x14A9BB4")]
	public BezierCurveTest()
	{
	}
}
[Token(Token = "0x20002FD")]
public class BezierSolutionTester : MonoBehaviour
{
	[Token(Token = "0x6001266")]
	[Address(RVA = "0x14A9C30", Offset = "0x14A9C30", VA = "0x14A9C30")]
	private void Start()
	{
	}

	[Token(Token = "0x6001267")]
	[Address(RVA = "0x14A9DC8", Offset = "0x14A9DC8", VA = "0x14A9DC8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001268")]
	[Address(RVA = "0x14A9DCC", Offset = "0x14A9DCC", VA = "0x14A9DCC")]
	public BezierSolutionTester()
	{
	}
}
[Token(Token = "0x20002FE")]
public class CreateListFromNullArrayTestScript : MonoBehaviour
{
	[Token(Token = "0x6001269")]
	[Address(RVA = "0xA7560C", Offset = "0xA7560C", VA = "0xA7560C")]
	private void Start()
	{
	}

	[Token(Token = "0x600126A")]
	[Address(RVA = "0xA75698", Offset = "0xA75698", VA = "0xA75698")]
	private void Update()
	{
	}

	[Token(Token = "0x600126B")]
	[Address(RVA = "0xA7569C", Offset = "0xA7569C", VA = "0xA7569C")]
	public CreateListFromNullArrayTestScript()
	{
	}
}
[Token(Token = "0x20002FF")]
public class DictionaryIterationTester : MonoBehaviour
{
	[Token(Token = "0x4000F74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected ConcurrentDictionary<string, int> prefabsZPos;

	[Token(Token = "0x4000F75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private long currentTemporaryYPos;

	[Token(Token = "0x4000F76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private long STARTING_TEMPORARY_Y_POS;

	[Token(Token = "0x4000F77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int TEMPORARY_Y_POS_LIMIT;

	[Token(Token = "0x4000F78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int TEMPORARY_Y_POS_ITERATOR;

	[Token(Token = "0x600126C")]
	[Address(RVA = "0x9597B4", Offset = "0x9597B4", VA = "0x9597B4")]
	private void Start()
	{
	}

	[Token(Token = "0x600126D")]
	[Address(RVA = "0x95991C", Offset = "0x95991C", VA = "0x95991C")]
	protected float getZPos(string objectType)
	{
		return default(float);
	}

	[Token(Token = "0x600126E")]
	[Address(RVA = "0x9598C8", Offset = "0x9598C8", VA = "0x9598C8")]
	protected float getTemporaryYPos()
	{
		return default(float);
	}

	[Token(Token = "0x600126F")]
	[Address(RVA = "0x959A5C", Offset = "0x959A5C", VA = "0x959A5C")]
	public DictionaryIterationTester()
	{
	}
}
[Token(Token = "0x2000300")]
public class QueueTester : MonoBehaviour
{
	[Token(Token = "0x6001270")]
	[Address(RVA = "0xA0B498", Offset = "0xA0B498", VA = "0xA0B498")]
	private void Start()
	{
	}

	[Token(Token = "0x6001271")]
	[Address(RVA = "0xA0B5F0", Offset = "0xA0B5F0", VA = "0xA0B5F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001272")]
	[Address(RVA = "0xA0B5F4", Offset = "0xA0B5F4", VA = "0xA0B5F4")]
	public QueueTester()
	{
	}
}
[Token(Token = "0x2000301")]
public class RandomNumberTester : MonoBehaviour
{
	[Token(Token = "0x6001273")]
	[Address(RVA = "0xA0B77C", Offset = "0xA0B77C", VA = "0xA0B77C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001274")]
	[Address(RVA = "0xA0B780", Offset = "0xA0B780", VA = "0xA0B780")]
	private void Update()
	{
	}

	[Token(Token = "0x6001275")]
	[Address(RVA = "0xA0B874", Offset = "0xA0B874", VA = "0xA0B874")]
	public RandomNumberTester()
	{
	}
}
[Token(Token = "0x2000302")]
public class StringBuilderTester : MonoBehaviour
{
	[Token(Token = "0x4000F79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected CoordinationCoachGameObject.ActivationType currentActivationType;

	[Token(Token = "0x6001276")]
	[Address(RVA = "0x14CB1FC", Offset = "0x14CB1FC", VA = "0x14CB1FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001277")]
	[Address(RVA = "0x14CB848", Offset = "0x14CB848", VA = "0x14CB848")]
	private void Update()
	{
	}

	[Token(Token = "0x6001278")]
	[Address(RVA = "0x14CB84C", Offset = "0x14CB84C", VA = "0x14CB84C")]
	public StringBuilderTester()
	{
	}
}
[Token(Token = "0x2000303")]
public class TestCorrectLowerBoundaryValue : MonoBehaviour
{
	[Token(Token = "0x4000F7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float appearanceLimit;

	[Token(Token = "0x4000F7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float boundaryLimit;

	[Token(Token = "0x6001279")]
	[Address(RVA = "0x14DB9C0", Offset = "0x14DB9C0", VA = "0x14DB9C0")]
	private void Start()
	{
	}

	[Token(Token = "0x600127A")]
	[Address(RVA = "0x14DBA70", Offset = "0x14DBA70", VA = "0x14DBA70")]
	private void Update()
	{
	}

	[Token(Token = "0x600127B")]
	[Address(RVA = "0x14DBA74", Offset = "0x14DBA74", VA = "0x14DBA74")]
	public TestCorrectLowerBoundaryValue()
	{
	}
}
[Token(Token = "0x2000304")]
public class CoroutineTester : MonoBehaviour
{
	[Token(Token = "0x2000305")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69D14C", Offset = "0x69D14C")]
	private sealed class <timingTestCoroutine>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CoroutineTester <>4__this;

		[Token(Token = "0x170001D0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001284")]
			[Address(RVA = "0x14C18B0", Offset = "0x14C18B0", VA = "0x14C18B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001286")]
			[Address(RVA = "0x14C18F8", Offset = "0x14C18F8", VA = "0x14C18F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001281")]
		[Address(RVA = "0x14C166C", Offset = "0x14C166C", VA = "0x14C166C")]
		[DebuggerHidden]
		public <timingTestCoroutine>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6001282")]
		[Address(RVA = "0x14C1698", Offset = "0x14C1698", VA = "0x14C1698", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001283")]
		[Address(RVA = "0x14C169C", Offset = "0x14C169C", VA = "0x14C169C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001285")]
		[Address(RVA = "0x14C18B8", Offset = "0x14C18B8", VA = "0x14C18B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000306")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69D15C", Offset = "0x69D15C")]
	private sealed class <firstWaitCoroutine>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CoroutineTester <>4__this;

		[Token(Token = "0x170001D2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600128A")]
			[Address(RVA = "0x14C14C4", Offset = "0x14C14C4", VA = "0x14C14C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600128C")]
			[Address(RVA = "0x14C150C", Offset = "0x14C150C", VA = "0x14C150C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001287")]
		[Address(RVA = "0x14C13BC", Offset = "0x14C13BC", VA = "0x14C13BC")]
		[DebuggerHidden]
		public <firstWaitCoroutine>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6001288")]
		[Address(RVA = "0x14C13E8", Offset = "0x14C13E8", VA = "0x14C13E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001289")]
		[Address(RVA = "0x14C13EC", Offset = "0x14C13EC", VA = "0x14C13EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600128B")]
		[Address(RVA = "0x14C14CC", Offset = "0x14C14CC", VA = "0x14C14CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000307")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69D16C", Offset = "0x69D16C")]
	private sealed class <secondWaitCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CoroutineTester <>4__this;

		[Token(Token = "0x170001D4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001290")]
			[Address(RVA = "0x14C161C", Offset = "0x14C161C", VA = "0x14C161C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001292")]
			[Address(RVA = "0x14C1664", Offset = "0x14C1664", VA = "0x14C1664", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600128D")]
		[Address(RVA = "0x14C1514", Offset = "0x14C1514", VA = "0x14C1514")]
		[DebuggerHidden]
		public <secondWaitCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x600128E")]
		[Address(RVA = "0x14C1540", Offset = "0x14C1540", VA = "0x14C1540", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600128F")]
		[Address(RVA = "0x14C1544", Offset = "0x14C1544", VA = "0x14C1544", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001291")]
		[Address(RVA = "0x14C1624", Offset = "0x14C1624", VA = "0x14C1624", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Text textToChange;

	[Token(Token = "0x600127C")]
	[Address(RVA = "0xA746C0", Offset = "0xA746C0", VA = "0xA746C0")]
	private void Start()
	{
	}

	[Token(Token = "0x600127D")]
	[Address(RVA = "0xA746EC", Offset = "0xA746EC", VA = "0xA746EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AA174", Offset = "0x6AA174")]
	private IEnumerator timingTestCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600127E")]
	[Address(RVA = "0xA74764", Offset = "0xA74764", VA = "0xA74764")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AA1D4", Offset = "0x6AA1D4")]
	private IEnumerator firstWaitCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600127F")]
	[Address(RVA = "0xA747DC", Offset = "0xA747DC", VA = "0xA747DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AA234", Offset = "0x6AA234")]
	private IEnumerator secondWaitCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6001280")]
	[Address(RVA = "0xA74854", Offset = "0xA74854", VA = "0xA74854")]
	public CoroutineTester()
	{
	}
}
[Token(Token = "0x2000308")]
public class StopAllCoroutineTester : MonoBehaviour
{
	[Token(Token = "0x2000309")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69D17C", Offset = "0x69D17C")]
	private sealed class <stopEvertyhing>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StopAllCoroutineTester <>4__this;

		[Token(Token = "0x170001D6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001299")]
			[Address(RVA = "0x1499428", Offset = "0x1499428", VA = "0x1499428", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600129B")]
			[Address(RVA = "0x1499470", Offset = "0x1499470", VA = "0x1499470", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001296")]
		[Address(RVA = "0x1499340", Offset = "0x1499340", VA = "0x1499340")]
		[DebuggerHidden]
		public <stopEvertyhing>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6001297")]
		[Address(RVA = "0x149936C", Offset = "0x149936C", VA = "0x149936C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0x1499370", Offset = "0x1499370", VA = "0x1499370", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600129A")]
		[Address(RVA = "0x1499430", Offset = "0x1499430", VA = "0x1499430", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private NonStandaloneTargetTouchContainerMovementController movementController;

	[Token(Token = "0x6001293")]
	[Address(RVA = "0x14CABA4", Offset = "0x14CABA4", VA = "0x14CABA4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001294")]
	[Address(RVA = "0x14CABD0", Offset = "0x14CABD0", VA = "0x14CABD0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AA384", Offset = "0x6AA384")]
	private IEnumerator stopEvertyhing()
	{
		return null;
	}

	[Token(Token = "0x6001295")]
	[Address(RVA = "0x14CAC48", Offset = "0x14CAC48", VA = "0x14CAC48")]
	public StopAllCoroutineTester()
	{
	}
}
[Token(Token = "0x200030A")]
public class ValidCreationAreaTester : MonoBehaviour
{
	[Token(Token = "0x4000F8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ObjectAppearancePositionHelper objectAppearancePositionHelper;

	[Token(Token = "0x4000F8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Material material;

	[Token(Token = "0x600129C")]
	[Address(RVA = "0x14EDB48", Offset = "0x14EDB48", VA = "0x14EDB48")]
	private void Start()
	{
	}

	[Token(Token = "0x600129D")]
	[Address(RVA = "0x14EE2B8", Offset = "0x14EE2B8", VA = "0x14EE2B8")]
	public ValidCreationAreaTester()
	{
	}
}
[Token(Token = "0x200030B")]
public class CurveTools : MonoBehaviour
{
	[Token(Token = "0x4000F8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3[] pts;

	[Token(Token = "0x600129E")]
	[Address(RVA = "0xA76064", Offset = "0xA76064", VA = "0xA76064")]
	public CurveTools(params Vector3[] pts)
	{
	}

	[Token(Token = "0x600129F")]
	[Address(RVA = "0xA760F4", Offset = "0xA760F4", VA = "0xA760F4")]
	public Vector3 Interp(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60012A0")]
	[Address(RVA = "0xA762B4", Offset = "0xA762B4", VA = "0xA762B4")]
	public Vector3 Velocity(float t)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x200030C")]
public class DisappearanceTester : MonoBehaviour
{
	[Token(Token = "0x4000F8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject targetObjectPrefab;

	[Token(Token = "0x60012A1")]
	[Address(RVA = "0x95A2D8", Offset = "0x95A2D8", VA = "0x95A2D8")]
	private void Start()
	{
	}

	[Token(Token = "0x60012A2")]
	[Address(RVA = "0x95A2DC", Offset = "0x95A2DC", VA = "0x95A2DC")]
	private void Update()
	{
	}

	[Token(Token = "0x60012A3")]
	[Address(RVA = "0x95A2E0", Offset = "0x95A2E0", VA = "0x95A2E0")]
	public DisappearanceTester()
	{
	}
}
[Token(Token = "0x200030D")]
public class AppearanceEffectColorChangeTester : MonoBehaviour
{
	[Token(Token = "0x4000F8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject updateColorGameObjects;

	[Token(Token = "0x60012A4")]
	[Address(RVA = "0x14A59B8", Offset = "0x14A59B8", VA = "0x14A59B8")]
	private void Update()
	{
	}

	[Token(Token = "0x60012A5")]
	[Address(RVA = "0x14A5D18", Offset = "0x14A5D18", VA = "0x14A5D18")]
	public AppearanceEffectColorChangeTester()
	{
	}
}
[Token(Token = "0x200030E")]
public class AddForceTester : MonoBehaviour
{
	[Token(Token = "0x4000F8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject targetObjectPrefab;

	[Token(Token = "0x4000F90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float thrust;

	[Token(Token = "0x60012A6")]
	[Address(RVA = "0x149F3AC", Offset = "0x149F3AC", VA = "0x149F3AC")]
	private void Update()
	{
	}

	[Token(Token = "0x60012A7")]
	[Address(RVA = "0x149F53C", Offset = "0x149F53C", VA = "0x149F53C")]
	public AddForceTester()
	{
	}
}
[Token(Token = "0x200030F")]
public class AddForceToChildren : MonoBehaviour
{
	[Token(Token = "0x4000F91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float force;

	[Token(Token = "0x60012A8")]
	[Address(RVA = "0x149F54C", Offset = "0x149F54C", VA = "0x149F54C")]
	public void addForceToChildren(Collision collision)
	{
	}

	[Token(Token = "0x60012A9")]
	[Address(RVA = "0x149F6AC", Offset = "0x149F6AC", VA = "0x149F6AC")]
	public AddForceToChildren()
	{
	}
}
[Token(Token = "0x2000310")]
public class ActivateFractured : MonoBehaviour
{
	[Token(Token = "0x2000311")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69D18C", Offset = "0x69D18C")]
	private sealed class <activateFragmentation>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ActivateFractured <>4__this;

		[Token(Token = "0x170001D8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012B0")]
			[Address(RVA = "0x14B86C8", Offset = "0x14B86C8", VA = "0x14B86C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012B2")]
			[Address(RVA = "0x14B8710", Offset = "0x14B8710", VA = "0x14B8710", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0x14B85CC", Offset = "0x14B85CC", VA = "0x14B85CC")]
		[DebuggerHidden]
		public <activateFragmentation>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0x14B85F8", Offset = "0x14B85F8", VA = "0x14B85F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0x14B85FC", Offset = "0x14B85FC", VA = "0x14B85FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0x14B86D0", Offset = "0x14B86D0", VA = "0x14B86D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public FracturedPartsController fracturedPartsController;

	[Token(Token = "0x4000F93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private CoordinationCoachPoolController coordinationCoachPoolController;

	[Token(Token = "0x60012AA")]
	[Address(RVA = "0x149EFB8", Offset = "0x149EFB8", VA = "0x149EFB8")]
	private void Start()
	{
	}

	[Token(Token = "0x60012AB")]
	[Address(RVA = "0x149EFE4", Offset = "0x149EFE4", VA = "0x149EFE4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AA434", Offset = "0x6AA434")]
	private IEnumerator activateFragmentation()
	{
		return null;
	}

	[Token(Token = "0x60012AC")]
	[Address(RVA = "0x149F05C", Offset = "0x149F05C", VA = "0x149F05C")]
	public ActivateFractured()
	{
	}
}
[Token(Token = "0x2000312")]
public class ActivateFragmentsTester : MonoBehaviour
{
	[Token(Token = "0x2000313")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69D19C", Offset = "0x69D19C")]
	private sealed class <activateFragmentationCoroutine>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ActivateFragmentsTester <>4__this;

		[Token(Token = "0x170001DA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012B9")]
			[Address(RVA = "0x14B8820", Offset = "0x14B8820", VA = "0x14B8820", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012BB")]
			[Address(RVA = "0x14B8868", Offset = "0x14B8868", VA = "0x14B8868", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0x14B8718", Offset = "0x14B8718", VA = "0x14B8718")]
		[DebuggerHidden]
		public <activateFragmentationCoroutine>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60012B7")]
		[Address(RVA = "0x14B8744", Offset = "0x14B8744", VA = "0x14B8744", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012B8")]
		[Address(RVA = "0x14B8748", Offset = "0x14B8748", VA = "0x14B8748", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012BA")]
		[Address(RVA = "0x14B8828", Offset = "0x14B8828", VA = "0x14B8828", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private FracturedPartsController fracturedPartsController;

	[Token(Token = "0x60012B3")]
	[Address(RVA = "0x149F064", Offset = "0x149F064", VA = "0x149F064")]
	private void Start()
	{
	}

	[Token(Token = "0x60012B4")]
	[Address(RVA = "0x149F0A4", Offset = "0x149F0A4", VA = "0x149F0A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AA4E4", Offset = "0x6AA4E4")]
	private IEnumerator activateFragmentationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60012B5")]
	[Address(RVA = "0x149F11C", Offset = "0x149F11C", VA = "0x149F11C")]
	public ActivateFragmentsTester()
	{
	}
}
[Token(Token = "0x2000314")]
public class FracturedObjectTest : MonoBehaviour
{
	[Token(Token = "0x4000F9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject toInstantiate;

	[Token(Token = "0x60012BC")]
	[Address(RVA = "0x9EC438", Offset = "0x9EC438", VA = "0x9EC438")]
	private void Start()
	{
	}

	[Token(Token = "0x60012BD")]
	[Address(RVA = "0x9EC4F8", Offset = "0x9EC4F8", VA = "0x9EC4F8")]
	public FracturedObjectTest()
	{
	}
}
[Token(Token = "0x2000315")]
public class ColorEndurancePlanes : MonoBehaviour
{
	[Token(Token = "0x2000316")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69D1AC", Offset = "0x69D1AC")]
	private sealed class <colorPlanes>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ColorEndurancePlanes <>4__this;

		[Token(Token = "0x170001DC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012C4")]
			[Address(RVA = "0x14C0374", Offset = "0x14C0374", VA = "0x14C0374", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012C6")]
			[Address(RVA = "0x14C03BC", Offset = "0x14C03BC", VA = "0x14C03BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012C1")]
		[Address(RVA = "0x14C01E8", Offset = "0x14C01E8", VA = "0x14C01E8")]
		[DebuggerHidden]
		public <colorPlanes>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60012C2")]
		[Address(RVA = "0x14C0214", Offset = "0x14C0214", VA = "0x14C0214", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0x14C0218", Offset = "0x14C0218", VA = "0x14C0218", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0x14C037C", Offset = "0x14C037C", VA = "0x14C037C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private EnduranceModePlaneCreationService enduranceModePlaneCreationService;

	[Token(Token = "0x4000F9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Material firstPlaneMaterial;

	[Token(Token = "0x4000F9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Material fifthPlaneMaterial;

	[Token(Token = "0x60012BE")]
	[Address(RVA = "0xA6ADC4", Offset = "0xA6ADC4", VA = "0xA6ADC4")]
	private void Start()
	{
	}

	[Token(Token = "0x60012BF")]
	[Address(RVA = "0xA6ADF0", Offset = "0xA6ADF0", VA = "0xA6ADF0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AA594", Offset = "0x6AA594")]
	private IEnumerator colorPlanes()
	{
		return null;
	}

	[Token(Token = "0x60012C0")]
	[Address(RVA = "0xA6AE68", Offset = "0xA6AE68", VA = "0xA6AE68")]
	public ColorEndurancePlanes()
	{
	}
}
[Token(Token = "0x2000317")]
public class CreateObjectsAtBordersOfEndurancePlaneCreationArea : MonoBehaviour
{
	[Token(Token = "0x2000318")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69D1BC", Offset = "0x69D1BC")]
	private sealed class <createObjectsAtCreationBoundariesOfEndurancePlanes>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CreateObjectsAtBordersOfEndurancePlaneCreationArea <>4__this;

		[Token(Token = "0x170001DE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012CD")]
			[Address(RVA = "0x14C1BC0", Offset = "0x14C1BC0", VA = "0x14C1BC0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012CF")]
			[Address(RVA = "0x14C1C08", Offset = "0x14C1C08", VA = "0x14C1C08", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0x14C1900", Offset = "0x14C1900", VA = "0x14C1900")]
		[DebuggerHidden]
		public <createObjectsAtCreationBoundariesOfEndurancePlanes>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0x14C192C", Offset = "0x14C192C", VA = "0x14C192C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0x14C1930", Offset = "0x14C1930", VA = "0x14C1930", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0x14C1BC8", Offset = "0x14C1BC8", VA = "0x14C1BC8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000FA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private EnduranceModePlaneCreationService enduranceModePlaneCreationService;

	[Token(Token = "0x4000FA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Material firstPlaneMaterial;

	[Token(Token = "0x4000FA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private PlayAreaService playAreaService;

	[Token(Token = "0x60012C7")]
	[Address(RVA = "0xA756A4", Offset = "0xA756A4", VA = "0xA756A4")]
	private void Start()
	{
	}

	[Token(Token = "0x60012C8")]
	[Address(RVA = "0xA756D0", Offset = "0xA756D0", VA = "0xA756D0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AA644", Offset = "0x6AA644")]
	private IEnumerator createObjectsAtCreationBoundariesOfEndurancePlanes()
	{
		return null;
	}

	[Token(Token = "0x60012C9")]
	[Address(RVA = "0xA75748", Offset = "0xA75748", VA = "0xA75748")]
	public CreateObjectsAtBordersOfEndurancePlaneCreationArea()
	{
	}
}
[Token(Token = "0x2000319")]
public class TestEnduranceAppearancePositions : MonoBehaviour
{
	[Token(Token = "0x200031A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69D1CC", Offset = "0x69D1CC")]
	private sealed class <testPositions>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TestEnduranceAppearancePositions <>4__this;

		[Token(Token = "0x170001E0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012D6")]
			[Address(RVA = "0x149D94C", Offset = "0x149D94C", VA = "0x149D94C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012D8")]
			[Address(RVA = "0x149D994", Offset = "0x149D994", VA = "0x149D994", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0x149D150", Offset = "0x149D150", VA = "0x149D150")]
		[DebuggerHidden]
		public <testPositions>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0x149D17C", Offset = "0x149D17C", VA = "0x149D17C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0x149D180", Offset = "0x149D180", VA = "0x149D180", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0x149D954", Offset = "0x149D954", VA = "0x149D954", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000FA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private EnduranceGameObjectAppearancePositionHelper enduranceGameObjectAppearancePositionHelper;

	[Token(Token = "0x4000FA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private EnduranceModePlaneCreationService enduranceModePlaneCreationService;

	[Token(Token = "0x4000FAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private PlayAreaService playAreaService;

	[Token(Token = "0x4000FAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Material material;

	[Token(Token = "0x60012D0")]
	[Address(RVA = "0x14DBA7C", Offset = "0x14DBA7C", VA = "0x14DBA7C")]
	private void Start()
	{
	}

	[Token(Token = "0x60012D1")]
	[Address(RVA = "0x14DBAA8", Offset = "0x14DBAA8", VA = "0x14DBAA8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AA6F4", Offset = "0x6AA6F4")]
	private IEnumerator testPositions()
	{
		return null;
	}

	[Token(Token = "0x60012D2")]
	[Address(RVA = "0x14DBB20", Offset = "0x14DBB20", VA = "0x14DBB20")]
	public TestEnduranceAppearancePositions()
	{
	}
}
[Token(Token = "0x200031B")]
public class ActivateSphere : MonoBehaviour
{
	[Token(Token = "0x4000FAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject sphereToActivate;

	[Token(Token = "0x60012D9")]
	[Address(RVA = "0x149F1A4", Offset = "0x149F1A4", VA = "0x149F1A4")]
	public void activateSphere()
	{
	}

	[Token(Token = "0x60012DA")]
	[Address(RVA = "0x149F1C4", Offset = "0x149F1C4", VA = "0x149F1C4")]
	public ActivateSphere()
	{
	}
}
[Token(Token = "0x200031C")]
public class SetMovementControllerActive : MonoBehaviour
{
	[Token(Token = "0x4000FB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private NonStandaloneTargetTouchContainerMovementController movementController;

	[Token(Token = "0x60012DB")]
	[Address(RVA = "0xA14B7C", Offset = "0xA14B7C", VA = "0xA14B7C")]
	private void Start()
	{
	}

	[Token(Token = "0x60012DC")]
	[Address(RVA = "0xA14B9C", Offset = "0xA14B9C", VA = "0xA14B9C")]
	private void Update()
	{
	}

	[Token(Token = "0x60012DD")]
	[Address(RVA = "0xA14BA0", Offset = "0xA14BA0", VA = "0xA14BA0")]
	public SetMovementControllerActive()
	{
	}
}
[Token(Token = "0x200031D")]
public class TargetTouchActivator : MonoBehaviour
{
	[Token(Token = "0x4000FB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TargetObject targetObject;

	[Token(Token = "0x60012DE")]
	[Address(RVA = "0x14D09F4", Offset = "0x14D09F4", VA = "0x14D09F4")]
	private void Start()
	{
	}

	[Token(Token = "0x60012DF")]
	[Address(RVA = "0x14D0B10", Offset = "0x14D0B10", VA = "0x14D0B10")]
	public TargetTouchActivator()
	{
	}
}
[Token(Token = "0x200031E")]
public class TargetTouchContainerMovementStarter : MonoBehaviour
{
	[Token(Token = "0x4000FB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MovementWithinBoundaryController movementController;

	[Token(Token = "0x60012E0")]
	[Address(RVA = "0x14D0D8C", Offset = "0x14D0D8C", VA = "0x14D0D8C")]
	private void Start()
	{
	}

	[Token(Token = "0x60012E1")]
	[Address(RVA = "0x14D0DCC", Offset = "0x14D0DCC", VA = "0x14D0DCC")]
	public TargetTouchContainerMovementStarter()
	{
	}
}
[Token(Token = "0x200031F")]
public class TargetTouchContainerMovementTester_2 : MonoBehaviour
{
	[Token(Token = "0x4000FB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ObjectMovementWithinBoundsService objectMovementWithinBoundsService;

	[Token(Token = "0x60012E2")]
	[Address(RVA = "0x14D0DD4", Offset = "0x14D0DD4", VA = "0x14D0DD4")]
	private void Start()
	{
	}

	[Token(Token = "0x60012E3")]
	[Address(RVA = "0x14D0E70", Offset = "0x14D0E70", VA = "0x14D0E70")]
	private void Update()
	{
	}

	[Token(Token = "0x60012E4")]
	[Address(RVA = "0x14D0ED8", Offset = "0x14D0ED8", VA = "0x14D0ED8")]
	public TargetTouchContainerMovementTester_2()
	{
	}
}
[Token(Token = "0x2000320")]
public class AdvancedFaderTester : MonoBehaviour
{
	[Token(Token = "0x2000321")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69D1DC", Offset = "0x69D1DC")]
	private sealed class <startFadeInWithDelay>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AdvancedFaderTester <>4__this;

		[Token(Token = "0x4000FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<GameObject> objectsToTest;

		[Token(Token = "0x170001E2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012EB")]
			[Address(RVA = "0x14B8A80", Offset = "0x14B8A80", VA = "0x14B8A80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012ED")]
			[Address(RVA = "0x14B8AC8", Offset = "0x14B8AC8", VA = "0x14B8AC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0x14B897C", Offset = "0x14B897C", VA = "0x14B897C")]
		[DebuggerHidden]
		public <startFadeInWithDelay>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0x14B89A8", Offset = "0x14B89A8", VA = "0x14B89A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0x14B89AC", Offset = "0x14B89AC", VA = "0x14B89AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0x14B8A88", Offset = "0x14B8A88", VA = "0x14B8A88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000FB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AdvancedUIFader advancedUIFader;

	[Token(Token = "0x4000FB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject gameObjectForTesting;

	[Token(Token = "0x60012E5")]
	[Address(RVA = "0x149FDCC", Offset = "0x149FDCC", VA = "0x149FDCC")]
	private void Start()
	{
	}

	[Token(Token = "0x60012E6")]
	[Address(RVA = "0x14A028C", Offset = "0x14A028C", VA = "0x14A028C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AA7A4", Offset = "0x6AA7A4")]
	private IEnumerator startFadeInWithDelay(List<GameObject> objectsToTest)
	{
		return null;
	}

	[Token(Token = "0x60012E7")]
	[Address(RVA = "0x14A0320", Offset = "0x14A0320", VA = "0x14A0320")]
	public AdvancedFaderTester()
	{
	}
}
[Token(Token = "0x2000322")]
public class PrintNameTest : MonoBehaviour
{
	[Token(Token = "0x60012EE")]
	[Address(RVA = "0xA099CC", Offset = "0xA099CC", VA = "0xA099CC")]
	private void Start()
	{
	}

	[Token(Token = "0x60012EF")]
	[Address(RVA = "0xA09A7C", Offset = "0xA09A7C", VA = "0xA09A7C")]
	private void Update()
	{
	}

	[Token(Token = "0x60012F0")]
	[Address(RVA = "0xA09A80", Offset = "0xA09A80", VA = "0xA09A80")]
	public PrintNameTest()
	{
	}
}
[Token(Token = "0x2000323")]
public class ChildMovementTester : MonoBehaviour
{
	[Token(Token = "0x4000FBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int counter;

	[Token(Token = "0x4000FBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float xMovementDirection;

	[Token(Token = "0x4000FBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float movementSpeed;

	[Token(Token = "0x4000FBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 destination;

	[Token(Token = "0x60012F1")]
	[Address(RVA = "0xF2A298", Offset = "0xF2A298", VA = "0xF2A298")]
	private void Start()
	{
	}

	[Token(Token = "0x60012F2")]
	[Address(RVA = "0xF2A29C", Offset = "0xF2A29C", VA = "0xF2A29C")]
	private void updateDestination()
	{
	}

	[Token(Token = "0x60012F3")]
	[Address(RVA = "0xF2A2A0", Offset = "0xF2A2A0", VA = "0xF2A2A0")]
	private void Update()
	{
	}

	[Token(Token = "0x60012F4")]
	[Address(RVA = "0xF2A358", Offset = "0xF2A358", VA = "0xF2A358")]
	public ChildMovementTester()
	{
	}
}
[Token(Token = "0x2000324")]
public class LerpMovementTester : MonoBehaviour
{
	[Token(Token = "0x2000325")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69D1EC", Offset = "0x69D1EC")]
	private sealed class <startMove>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LerpMovementTester <>4__this;

		[Token(Token = "0x170001E4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012FF")]
			[Address(RVA = "0x14905EC", Offset = "0x14905EC", VA = "0x14905EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001301")]
			[Address(RVA = "0x1490634", Offset = "0x1490634", VA = "0x1490634", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0x1490550", Offset = "0x1490550", VA = "0x1490550")]
		[DebuggerHidden]
		public <startMove>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60012FD")]
		[Address(RVA = "0x149057C", Offset = "0x149057C", VA = "0x149057C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0x1490580", Offset = "0x1490580", VA = "0x1490580", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001300")]
		[Address(RVA = "0x14905F4", Offset = "0x14905F4", VA = "0x14905F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000FBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 currentMovementStartPosition;

	[Token(Token = "0x4000FBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform currentTargetTransform;

	[Token(Token = "0x4000FC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float mTimer;

	[Token(Token = "0x4000FC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float movementSpeed;

	[Token(Token = "0x4000FC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool move;

	[Token(Token = "0x4000FC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float currentMovementStartDistanceToTarget;

	[Token(Token = "0x4000FC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 previousTargetPosition;

	[Token(Token = "0x60012F5")]
	[Address(RVA = "0xD7E2E4", Offset = "0xD7E2E4", VA = "0xD7E2E4")]
	private void Start()
	{
	}

	[Token(Token = "0x60012F6")]
	[Address(RVA = "0xD7E544", Offset = "0xD7E544", VA = "0xD7E544")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AA854", Offset = "0x6AA854")]
	private IEnumerator startMove()
	{
		return null;
	}

	[Token(Token = "0x60012F7")]
	[Address(RVA = "0xD7E5BC", Offset = "0xD7E5BC", VA = "0xD7E5BC")]
	private void Update()
	{
	}

	[Token(Token = "0x60012F8")]
	[Address(RVA = "0xD7E70C", Offset = "0xD7E70C", VA = "0xD7E70C")]
	private void checkIfTargetChangedPosition()
	{
	}

	[Token(Token = "0x60012F9")]
	[Address(RVA = "0xD7E838", Offset = "0xD7E838", VA = "0xD7E838")]
	private void modifyAmountOfDistanceCrossed()
	{
	}

	[Token(Token = "0x60012FA")]
	[Address(RVA = "0xD7EA34", Offset = "0xD7EA34", VA = "0xD7EA34")]
	private float getCurrentDistanceToTargetToPreviousDistanceToTargetRatio()
	{
		return default(float);
	}

	[Token(Token = "0x60012FB")]
	[Address(RVA = "0xD7EC5C", Offset = "0xD7EC5C", VA = "0xD7EC5C")]
	public LerpMovementTester()
	{
	}
}
[Token(Token = "0x2000326")]
public class MoveOnce : MonoBehaviour
{
	[Token(Token = "0x2000327")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69D1FC", Offset = "0x69D1FC")]
	private sealed class <moveOnce>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoveOnce <>4__this;

		[Token(Token = "0x170001E6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001308")]
			[Address(RVA = "0x1492328", Offset = "0x1492328", VA = "0x1492328", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600130A")]
			[Address(RVA = "0x1492370", Offset = "0x1492370", VA = "0x1492370", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001305")]
		[Address(RVA = "0x14921B8", Offset = "0x14921B8", VA = "0x14921B8")]
		[DebuggerHidden]
		public <moveOnce>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6001306")]
		[Address(RVA = "0x14921E4", Offset = "0x14921E4", VA = "0x14921E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001307")]
		[Address(RVA = "0x14921E8", Offset = "0x14921E8", VA = "0x14921E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001309")]
		[Address(RVA = "0x1492330", Offset = "0x1492330", VA = "0x1492330", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000FC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float xMovementAmount;

	[Token(Token = "0x4000FC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float yMovementAmount;

	[Token(Token = "0x4000FCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float zMovementAmount;

	[Token(Token = "0x6001302")]
	[Address(RVA = "0xC74720", Offset = "0xC74720", VA = "0xC74720")]
	private void Start()
	{
	}

	[Token(Token = "0x6001303")]
	[Address(RVA = "0xC7474C", Offset = "0xC7474C", VA = "0xC7474C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AA904", Offset = "0x6AA904")]
	private IEnumerator moveOnce()
	{
		return null;
	}

	[Token(Token = "0x6001304")]
	[Address(RVA = "0xC747C4", Offset = "0xC747C4", VA = "0xC747C4")]
	public MoveOnce()
	{
	}
}
[Token(Token = "0x2000328")]
public class MoveRightTest : MonoBehaviour
{
	[Token(Token = "0x600130B")]
	[Address(RVA = "0xC747CC", Offset = "0xC747CC", VA = "0xC747CC")]
	public MoveRightTest()
	{
	}
}
[Token(Token = "0x2000329")]
public class SlerpTester : MonoBehaviour
{
	[Token(Token = "0x200032A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69D20C", Offset = "0x69D20C")]
	private sealed class <beginMovement>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SlerpTester <>4__this;

		[Token(Token = "0x170001E8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600131C")]
			[Address(RVA = "0x149918C", Offset = "0x149918C", VA = "0x149918C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600131E")]
			[Address(RVA = "0x14991D4", Offset = "0x14991D4", VA = "0x14991D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001319")]
		[Address(RVA = "0x14990A4", Offset = "0x14990A4", VA = "0x14990A4")]
		[DebuggerHidden]
		public <beginMovement>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x600131A")]
		[Address(RVA = "0x14990D0", Offset = "0x14990D0", VA = "0x14990D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600131B")]
		[Address(RVA = "0x14990D4", Offset = "0x14990D4", VA = "0x14990D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600131D")]
		[Address(RVA = "0x1499194", Offset = "0x1499194", VA = "0x1499194", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000FCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 startPos;

	[Token(Token = "0x4000FCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform endPos;

	[Token(Token = "0x4000FD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 hardCodedEndPos;

	[Token(Token = "0x4000FD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float journeyTime;

	[Token(Token = "0x4000FD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool startMovement;

	[Token(Token = "0x4000FD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 slerpCenterPoint;

	[Token(Token = "0x4000FD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 slerpStartRelCenter;

	[Token(Token = "0x4000FD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 slerpEndRelCenter;

	[Token(Token = "0x4000FD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float mTimer;

	[Token(Token = "0x4000FD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 slerpDirection;

	[Token(Token = "0x4000FD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float distanceToSlerpCenterPointFromOriginalStartPos;

	[Token(Token = "0x4000FD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float slerpLerpRatio;

	[Token(Token = "0x4000FDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float prevTAmount;

	[Token(Token = "0x600130C")]
	[Address(RVA = "0xA16370", Offset = "0xA16370", VA = "0xA16370")]
	private void Start()
	{
	}

	[Token(Token = "0x600130D")]
	[Address(RVA = "0xA169A8", Offset = "0xA169A8", VA = "0xA169A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AA9B4", Offset = "0x6AA9B4")]
	private IEnumerator beginMovement()
	{
		return null;
	}

	[Token(Token = "0x600130E")]
	[Address(RVA = "0xA16A20", Offset = "0xA16A20", VA = "0xA16A20")]
	private void Update()
	{
	}

	[Token(Token = "0x600130F")]
	[Address(RVA = "0xA16730", Offset = "0xA16730", VA = "0xA16730")]
	private void getSlerpMovementCenter(Vector3 direction)
	{
	}

	[Token(Token = "0x6001310")]
	[Address(RVA = "0xA16E20", Offset = "0xA16E20", VA = "0xA16E20")]
	private float getSlerpDistanceChangeRatio()
	{
		return default(float);
	}

	[Token(Token = "0x6001311")]
	[Address(RVA = "0xA16E48", Offset = "0xA16E48", VA = "0xA16E48")]
	private float getDistanceToSlerpCenterPoint()
	{
		return default(float);
	}

	[Token(Token = "0x6001312")]
	[Address(RVA = "0xA16804", Offset = "0xA16804", VA = "0xA16804")]
	protected float getSlerpDistanceComparedToDirectDistanceRatio(Vector3 endDestination)
	{
		return default(float);
	}

	[Token(Token = "0x6001313")]
	[Address(RVA = "0xA16938", Offset = "0xA16938", VA = "0xA16938")]
	protected float getDistanceCurrentMoveStartToSlerpCenterPoint()
	{
		return default(float);
	}

	[Token(Token = "0x6001314")]
	[Address(RVA = "0xA16EB8", Offset = "0xA16EB8", VA = "0xA16EB8")]
	private float getSlerpLerpRatio()
	{
		return default(float);
	}

	[Token(Token = "0x6001315")]
	[Address(RVA = "0xA16F50", Offset = "0xA16F50", VA = "0xA16F50")]
	protected Vector3 updateSlerpDirection()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001316")]
	[Address(RVA = "0xA16FD8", Offset = "0xA16FD8", VA = "0xA16FD8")]
	private float getRandomFloatForSlerp()
	{
		return default(float);
	}

	[Token(Token = "0x6001317")]
	[Address(RVA = "0xA17088", Offset = "0xA17088", VA = "0xA17088")]
	protected int getOneOrMinusOne()
	{
		return default(int);
	}

	[Token(Token = "0x6001318")]
	[Address(RVA = "0xA170B4", Offset = "0xA170B4", VA = "0xA170B4")]
	public SlerpTester()
	{
	}
}
[Token(Token = "0x200032B")]
public class ChangeTransformPosTest : MonoBehaviour
{
	[Token(Token = "0x600131F")]
	[Address(RVA = "0xF28464", Offset = "0xF28464", VA = "0xF28464")]
	private void Start()
	{
	}

	[Token(Token = "0x6001320")]
	[Address(RVA = "0xF28494", Offset = "0xF28494", VA = "0xF28494")]
	private void Update()
	{
	}

	[Token(Token = "0x6001321")]
	[Address(RVA = "0xF28498", Offset = "0xF28498", VA = "0xF28498")]
	public ChangeTransformPosTest()
	{
	}
}
[Token(Token = "0x200032C")]
public class RigidBodyMovementTest : MonoBehaviour
{
	[Token(Token = "0x200032D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69D21C", Offset = "0x69D21C")]
	private sealed class <updateRigidBodyPos>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RigidBodyMovementTest <>4__this;

		[Token(Token = "0x170001EA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001328")]
			[Address(RVA = "0x1498714", Offset = "0x1498714", VA = "0x1498714", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600132A")]
			[Address(RVA = "0x149875C", Offset = "0x149875C", VA = "0x149875C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001325")]
		[Address(RVA = "0x14985D4", Offset = "0x14985D4", VA = "0x14985D4")]
		[DebuggerHidden]
		public <updateRigidBodyPos>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6001326")]
		[Address(RVA = "0x1498600", Offset = "0x1498600", VA = "0x1498600", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001327")]
		[Address(RVA = "0x1498604", Offset = "0x1498604", VA = "0x1498604", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0x149871C", Offset = "0x149871C", VA = "0x149871C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000FDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody my_rigidBody;

	[Token(Token = "0x6001322")]
	[Address(RVA = "0xA0E9A4", Offset = "0xA0E9A4", VA = "0xA0E9A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001323")]
	[Address(RVA = "0xA0EA18", Offset = "0xA0EA18", VA = "0xA0EA18")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AAA64", Offset = "0x6AAA64")]
	private IEnumerator updateRigidBodyPos()
	{
		return null;
	}

	[Token(Token = "0x6001324")]
	[Address(RVA = "0xA0EA90", Offset = "0xA0EA90", VA = "0xA0EA90")]
	public RigidBodyMovementTest()
	{
	}
}
[Token(Token = "0x200032E")]
public class TestColorChanger : MonoBehaviour
{
	[Token(Token = "0x4000FE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject[] targetObjects;

	[Token(Token = "0x600132B")]
	[Address(RVA = "0x14DB9B0", Offset = "0x14DB9B0", VA = "0x14DB9B0")]
	private void Start()
	{
	}

	[Token(Token = "0x600132C")]
	[Address(RVA = "0x14DB9B4", Offset = "0x14DB9B4", VA = "0x14DB9B4")]
	private void Update()
	{
	}

	[Token(Token = "0x600132D")]
	[Address(RVA = "0x14DB9B8", Offset = "0x14DB9B8", VA = "0x14DB9B8")]
	public TestColorChanger()
	{
	}
}
[Token(Token = "0x200032F")]
public class UpdateOriginalColorTester : MonoBehaviour
{
	[Token(Token = "0x4000FE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PlayerHUDElementController playerHUDElementController;

	[Token(Token = "0x600132E")]
	[Address(RVA = "0x14ECD1C", Offset = "0x14ECD1C", VA = "0x14ECD1C")]
	private void Start()
	{
	}

	[Token(Token = "0x600132F")]
	[Address(RVA = "0x14ECD38", Offset = "0x14ECD38", VA = "0x14ECD38")]
	private void Update()
	{
	}

	[Token(Token = "0x6001330")]
	[Address(RVA = "0x14ECD3C", Offset = "0x14ECD3C", VA = "0x14ECD3C")]
	public UpdateOriginalColorTester()
	{
	}
}
[Token(Token = "0x2000330")]
public class DotTester : MonoBehaviour
{
	[Token(Token = "0x4000FE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public Transform target;

	[Token(Token = "0x4000FE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float dirNum;

	[Token(Token = "0x6001331")]
	[Address(RVA = "0x95C9CC", Offset = "0x95C9CC", VA = "0x95C9CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001332")]
	[Address(RVA = "0x95C9D0", Offset = "0x95C9D0", VA = "0x95C9D0")]
	private void showDirection()
	{
	}

	[Token(Token = "0x6001333")]
	[Address(RVA = "0x95CB64", Offset = "0x95CB64", VA = "0x95CB64")]
	private float AngleDir(Vector3 fwd, Vector3 targetDir, Vector3 up)
	{
		return default(float);
	}

	[Token(Token = "0x6001334")]
	[Address(RVA = "0x95CBC4", Offset = "0x95CBC4", VA = "0x95CBC4")]
	public DotTester()
	{
	}
}
[Token(Token = "0x2000331")]
public class IsLeftOrRightTester : MonoBehaviour
{
	[Token(Token = "0x4000FE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform otherTransform;

	[Token(Token = "0x4000FE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string objectName;

	[Token(Token = "0x6001335")]
	[Address(RVA = "0xD7BB40", Offset = "0xD7BB40", VA = "0xD7BB40")]
	private void Start()
	{
	}

	[Token(Token = "0x6001336")]
	[Address(RVA = "0xD7BB44", Offset = "0xD7BB44", VA = "0xD7BB44")]
	private void Update()
	{
	}

	[Token(Token = "0x6001337")]
	[Address(RVA = "0xD7BC38", Offset = "0xD7BC38", VA = "0xD7BC38")]
	private Vector3 getAvoidOtherObjectVector()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001338")]
	[Address(RVA = "0xD7BCD8", Offset = "0xD7BCD8", VA = "0xD7BCD8")]
	public IsLeftOrRightTester()
	{
	}
}
[Token(Token = "0x2000332")]
public class IsObjectBehindTester : MonoBehaviour
{
	[Token(Token = "0x4000FE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform lookAtObject;

	[Token(Token = "0x4000FE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject objectForBehindTest;

	[Token(Token = "0x6001339")]
	[Address(RVA = "0xD7BCE0", Offset = "0xD7BCE0", VA = "0xD7BCE0")]
	private void Start()
	{
	}

	[Token(Token = "0x600133A")]
	[Address(RVA = "0xD7BE64", Offset = "0xD7BE64", VA = "0xD7BE64")]
	public IsObjectBehindTester()
	{
	}
}
[Token(Token = "0x2000333")]
public class LocalPosToWorldPosTest : MonoBehaviour
{
	[Token(Token = "0x600133B")]
	[Address(RVA = "0xD7EE94", Offset = "0xD7EE94", VA = "0xD7EE94")]
	private void Start()
	{
	}

	[Token(Token = "0x600133C")]
	[Address(RVA = "0xD7F13C", Offset = "0xD7F13C", VA = "0xD7F13C")]
	private void Update()
	{
	}

	[Token(Token = "0x600133D")]
	[Address(RVA = "0xD7F140", Offset = "0xD7F140", VA = "0xD7F140")]
	public LocalPosToWorldPosTest()
	{
	}
}
[Token(Token = "0x2000334")]
public class LookAtTester : MonoBehaviour
{
	[Token(Token = "0x4000FEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject lookAtTest;

	[Token(Token = "0x4000FEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject target;

	[Token(Token = "0x600133E")]
	[Address(RVA = "0xD8196C", Offset = "0xD8196C", VA = "0xD8196C")]
	private void Start()
	{
	}

	[Token(Token = "0x600133F")]
	[Address(RVA = "0xD819C4", Offset = "0xD819C4", VA = "0xD819C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6001340")]
	[Address(RVA = "0xD819C8", Offset = "0xD819C8", VA = "0xD819C8")]
	public LookAtTester()
	{
	}
}
[Token(Token = "0x2000335")]
public class CircleSpawnTest : MonoBehaviour
{
	[Token(Token = "0x4000FEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform circleCenter;

	[Token(Token = "0x6001341")]
	[Address(RVA = "0xF2A530", Offset = "0xF2A530", VA = "0xF2A530")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001342")]
	[Address(RVA = "0xF2A58C", Offset = "0xF2A58C", VA = "0xF2A58C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001343")]
	[Address(RVA = "0xF2A830", Offset = "0xF2A830", VA = "0xF2A830")]
	private void createObjectsInVerticalRadius()
	{
	}

	[Token(Token = "0x6001344")]
	[Address(RVA = "0xF2A590", Offset = "0xF2A590", VA = "0xF2A590")]
	private void createObjectsInHorizontalRadius()
	{
	}

	[Token(Token = "0x6001345")]
	[Address(RVA = "0xF2A920", Offset = "0xF2A920", VA = "0xF2A920")]
	private void Update()
	{
	}

	[Token(Token = "0x6001346")]
	[Address(RVA = "0xF2A924", Offset = "0xF2A924", VA = "0xF2A924")]
	public CircleSpawnTest()
	{
	}
}
[Token(Token = "0x2000336")]
public class CreateTestObjectsService : MonoBehaviour
{
	[Token(Token = "0x6001347")]
	[Address(RVA = "0xA75C90", Offset = "0xA75C90", VA = "0xA75C90")]
	public static List<GameObject> createTestObjectsAtEdgesOfValidCreationAreas(List<Area3D> validObjectCreationAreas, float objectSize, float zPosition)
	{
		return null;
	}

	[Token(Token = "0x6001348")]
	[Address(RVA = "0xA7605C", Offset = "0xA7605C", VA = "0xA7605C")]
	public CreateTestObjectsService()
	{
	}
}
[Token(Token = "0x2000337")]
public class ForwardCreationTester : MonoBehaviour
{
	[Token(Token = "0x4000FED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform lookAtTarget;

	[Token(Token = "0x6001349")]
	[Address(RVA = "0x9EC380", Offset = "0x9EC380", VA = "0x9EC380")]
	private void Start()
	{
	}

	[Token(Token = "0x600134A")]
	[Address(RVA = "0x9EC430", Offset = "0x9EC430", VA = "0x9EC430")]
	public ForwardCreationTester()
	{
	}
}
[Token(Token = "0x2000338")]
public class ParabolaMovementTester : MonoBehaviour
{
	[Token(Token = "0x4000FEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 startPos;

	[Token(Token = "0x4000FEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform targetTransform;

	[Token(Token = "0x4000FF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float mTimer;

	[Token(Token = "0x600134B")]
	[Address(RVA = "0xA61FCC", Offset = "0xA61FCC", VA = "0xA61FCC")]
	private void Start()
	{
	}

	[Token(Token = "0x600134C")]
	[Address(RVA = "0xA62008", Offset = "0xA62008", VA = "0xA62008")]
	private void Update()
	{
	}

	[Token(Token = "0x600134D")]
	[Address(RVA = "0xA6207C", Offset = "0xA6207C", VA = "0xA6207C")]
	public ParabolaMovementTester()
	{
	}
}
[Token(Token = "0x2000339")]
public class ActivateParticleSystemTest : MonoBehaviour
{
	[Token(Token = "0x4000FF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject test;

	[Token(Token = "0x600134E")]
	[Address(RVA = "0x149F124", Offset = "0x149F124", VA = "0x149F124")]
	private void Start()
	{
	}

	[Token(Token = "0x600134F")]
	[Address(RVA = "0x149F198", Offset = "0x149F198", VA = "0x149F198")]
	private void Update()
	{
	}

	[Token(Token = "0x6001350")]
	[Address(RVA = "0x149F19C", Offset = "0x149F19C", VA = "0x149F19C")]
	public ActivateParticleSystemTest()
	{
	}
}
[Token(Token = "0x200033A")]
public class ParticleSystemUtilTester : MonoBehaviour
{
	[Token(Token = "0x4000FF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject wormhole;

	[Token(Token = "0x6001351")]
	[Address(RVA = "0xA629C8", Offset = "0xA629C8", VA = "0xA629C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001352")]
	[Address(RVA = "0xA629D4", Offset = "0xA629D4", VA = "0xA629D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6001353")]
	[Address(RVA = "0xA629D8", Offset = "0xA629D8", VA = "0xA629D8")]
	public ParticleSystemUtilTester()
	{
	}
}
[Token(Token = "0x200033B")]
public class OvrFadeInTester : MonoBehaviour
{
	[Token(Token = "0x4000FF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private OVRScreenFade screenFade;

	[Token(Token = "0x6001354")]
	[Address(RVA = "0xA5D1C8", Offset = "0xA5D1C8", VA = "0xA5D1C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001355")]
	[Address(RVA = "0xA5D210", Offset = "0xA5D210", VA = "0xA5D210")]
	public OvrFadeInTester()
	{
	}
}
[Token(Token = "0x200033C")]
public static class CalculateMaxBoundariesOfPlayArea
{
	[Token(Token = "0x6001356")]
	[Address(RVA = "0xF240E4", Offset = "0xF240E4", VA = "0xF240E4")]
	public static List<Vector3> getMaxXZOfArea(float[] boundaries)
	{
		return null;
	}

	[Token(Token = "0x6001357")]
	[Address(RVA = "0xF2425C", Offset = "0xF2425C", VA = "0xF2425C")]
	public static List<Vector3> getBordersOfPlayArea(float[] boundaries)
	{
		return null;
	}
}
[Token(Token = "0x200033D")]
public class CreateObjectsAtBoundariesOfPlayAreaTest : MonoBehaviour
{
	[Token(Token = "0x4000FF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PlayAreaService playAreaService;

	[Token(Token = "0x4000FF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform player;

	[Token(Token = "0x6001358")]
	[Address(RVA = "0xA75820", Offset = "0xA75820", VA = "0xA75820")]
	private void Start()
	{
	}

	[Token(Token = "0x6001359")]
	[Address(RVA = "0xA75844", Offset = "0xA75844", VA = "0xA75844")]
	private void createObjectsAtCornersOfPlayArea()
	{
	}

	[Token(Token = "0x600135A")]
	[Address(RVA = "0xA75A58", Offset = "0xA75A58", VA = "0xA75A58")]
	public void createObjectInMiddle()
	{
	}

	[Token(Token = "0x600135B")]
	[Address(RVA = "0xA75AE4", Offset = "0xA75AE4", VA = "0xA75AE4")]
	public CreateObjectsAtBoundariesOfPlayAreaTest()
	{
	}
}
[Token(Token = "0x200033E")]
public class CreateObjectsAtCalculatedBoundaries : MonoBehaviour
{
	[Token(Token = "0x4000FF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject[] predefinedBoundaries;

	[Token(Token = "0x4000FF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Material materialToSetOnObjects;

	[Token(Token = "0x600135C")]
	[Address(RVA = "0xA75AEC", Offset = "0xA75AEC", VA = "0xA75AEC")]
	private void Start()
	{
	}

	[Token(Token = "0x600135D")]
	[Address(RVA = "0xA75C88", Offset = "0xA75C88", VA = "0xA75C88")]
	public CreateObjectsAtCalculatedBoundaries()
	{
	}
}
[Token(Token = "0x200033F")]
public class PrintBoundariesOfPlayArea : MonoBehaviour
{
	[Token(Token = "0x2000340")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69D22C", Offset = "0x69D22C")]
	private sealed class <printBoundariesCoroutine>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PrintBoundariesOfPlayArea <>4__this;

		[Token(Token = "0x170001EC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001364")]
			[Address(RVA = "0x14983A8", Offset = "0x14983A8", VA = "0x14983A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001ED")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001366")]
			[Address(RVA = "0x14983F0", Offset = "0x14983F0", VA = "0x14983F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001361")]
		[Address(RVA = "0x1497E8C", Offset = "0x1497E8C", VA = "0x1497E8C")]
		[DebuggerHidden]
		public <printBoundariesCoroutine>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6001362")]
		[Address(RVA = "0x1497EB8", Offset = "0x1497EB8", VA = "0x1497EB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001363")]
		[Address(RVA = "0x1497EBC", Offset = "0x1497EBC", VA = "0x1497EBC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001365")]
		[Address(RVA = "0x14983B0", Offset = "0x14983B0", VA = "0x14983B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000FF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PlayAreaService playAreaService;

	[Token(Token = "0x4000FF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WaitForSeconds waitForOneSecond;

	[Token(Token = "0x600135E")]
	[Address(RVA = "0xA093CC", Offset = "0xA093CC", VA = "0xA093CC")]
	private void Start()
	{
	}

	[Token(Token = "0x600135F")]
	[Address(RVA = "0xA093F8", Offset = "0xA093F8", VA = "0xA093F8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AAB14", Offset = "0x6AAB14")]
	private IEnumerator printBoundariesCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6001360")]
	[Address(RVA = "0xA09470", Offset = "0xA09470", VA = "0xA09470")]
	public PrintBoundariesOfPlayArea()
	{
	}
}
[Token(Token = "0x2000341")]
public class TestCalculateBoundaries : MonoBehaviour
{
	[Token(Token = "0x4000FFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject[] gameObjects;

	[Token(Token = "0x6001367")]
	[Address(RVA = "0x14DB934", Offset = "0x14DB934", VA = "0x14DB934")]
	private void Start()
	{
	}

	[Token(Token = "0x6001368")]
	[Address(RVA = "0x14DB9A8", Offset = "0x14DB9A8", VA = "0x14DB9A8")]
	public TestCalculateBoundaries()
	{
	}
}
[Token(Token = "0x2000342")]
public class OculusCreateObjectsAtBoundariesTester : MonoBehaviour
{
	[Token(Token = "0x2000343")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69D23C", Offset = "0x69D23C")]
	private sealed class <createObjects>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OculusCreateObjectsAtBoundariesTester <>4__this;

		[Token(Token = "0x170001EE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001371")]
			[Address(RVA = "0x14936C8", Offset = "0x14936C8", VA = "0x14936C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001373")]
			[Address(RVA = "0x1493710", Offset = "0x1493710", VA = "0x1493710", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600136E")]
		[Address(RVA = "0x1493488", Offset = "0x1493488", VA = "0x1493488")]
		[DebuggerHidden]
		public <createObjects>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x600136F")]
		[Address(RVA = "0x14934B4", Offset = "0x14934B4", VA = "0x14934B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001370")]
		[Address(RVA = "0x14934B8", Offset = "0x14934B8", VA = "0x14934B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001372")]
		[Address(RVA = "0x14936D0", Offset = "0x14936D0", VA = "0x14936D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000FFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PlayAreaService playAreaService;

	[Token(Token = "0x6001369")]
	[Address(RVA = "0xACC308", Offset = "0xACC308", VA = "0xACC308")]
	private void Start()
	{
	}

	[Token(Token = "0x600136A")]
	[Address(RVA = "0xACC360", Offset = "0xACC360", VA = "0xACC360")]
	private void createObjectAtFirstBoundaryPosition()
	{
	}

	[Token(Token = "0x600136B")]
	[Address(RVA = "0xACC334", Offset = "0xACC334", VA = "0xACC334")]
	public void createObjectsAtBoundaries()
	{
	}

	[Token(Token = "0x600136C")]
	[Address(RVA = "0xACC598", Offset = "0xACC598", VA = "0xACC598")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AABC4", Offset = "0x6AABC4")]
	private IEnumerator createObjects()
	{
		return null;
	}

	[Token(Token = "0x600136D")]
	[Address(RVA = "0xACC610", Offset = "0xACC610", VA = "0xACC610")]
	public OculusCreateObjectsAtBoundariesTester()
	{
	}
}
[Token(Token = "0x2000344")]
public class OculusPlayAreaTest : MonoBehaviour
{
	[Token(Token = "0x4001002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private OculusRiftPlayAreaService areaService;

	[Token(Token = "0x6001374")]
	[Address(RVA = "0xACC878", Offset = "0xACC878", VA = "0xACC878")]
	private void Start()
	{
	}

	[Token(Token = "0x6001375")]
	[Address(RVA = "0xACC87C", Offset = "0xACC87C", VA = "0xACC87C")]
	public void createObjectsAtBoundaries()
	{
	}

	[Token(Token = "0x6001376")]
	[Address(RVA = "0xACCB00", Offset = "0xACCB00", VA = "0xACCB00")]
	public void createObjectInMiddle()
	{
	}

	[Token(Token = "0x6001377")]
	[Address(RVA = "0xACCB8C", Offset = "0xACCB8C", VA = "0xACCB8C")]
	public OculusPlayAreaTest()
	{
	}
}
[Token(Token = "0x2000345")]
public class CreateObjectsAtBordersTester : MonoBehaviour
{
	[Token(Token = "0x4001003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private OculusPlayAreaTest oculusPlayAreaTest;

	[Token(Token = "0x6001378")]
	[Address(RVA = "0xA75750", Offset = "0xA75750", VA = "0xA75750")]
	private void Update()
	{
	}

	[Token(Token = "0x6001379")]
	[Address(RVA = "0xA75818", Offset = "0xA75818", VA = "0xA75818")]
	public CreateObjectsAtBordersTester()
	{
	}
}
[Token(Token = "0x2000346")]
public class OculusBoundaryTest : MonoBehaviour
{
	[Token(Token = "0x600137A")]
	[Address(RVA = "0xACC114", Offset = "0xACC114", VA = "0xACC114")]
	private void Update()
	{
	}

	[Token(Token = "0x600137B")]
	[Address(RVA = "0xACC26C", Offset = "0xACC26C", VA = "0xACC26C")]
	public OculusBoundaryTest()
	{
	}
}
[Token(Token = "0x2000347")]
public class PicoCreateObjectsAtBoundariesOfPlayArea : MonoBehaviour
{
	[Token(Token = "0x4001004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PlayAreaService playAreaService;

	[Token(Token = "0x4001005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Material calcBoundariesMaterial;

	[Token(Token = "0x4001006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Material playAreaBoundariesMaterial;

	[Token(Token = "0x4001007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Material outerBoundariesMaterial;

	[Token(Token = "0x4001008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Material unityXRBoundariesMaterial;

	[Token(Token = "0x600137C")]
	[Address(RVA = "0xA6471C", Offset = "0xA6471C", VA = "0xA6471C")]
	private void Start()
	{
	}

	[Token(Token = "0x600137D")]
	[Address(RVA = "0xA649CC", Offset = "0xA649CC", VA = "0xA649CC")]
	private void createObjectsAtCornersOfPlayArea()
	{
	}

	[Token(Token = "0x600137E")]
	[Address(RVA = "0xA64B74", Offset = "0xA64B74", VA = "0xA64B74")]
	public PicoCreateObjectsAtBoundariesOfPlayArea()
	{
	}
}
[Token(Token = "0x2000348")]
public class PlayerHandsHapticsTester : MonoBehaviour
{
	[Token(Token = "0x4001009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PlayerHandHapticsController playerHandHapticsController;

	[Token(Token = "0x600137F")]
	[Address(RVA = "0xA046C4", Offset = "0xA046C4", VA = "0xA046C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6001380")]
	[Address(RVA = "0xA047AC", Offset = "0xA047AC", VA = "0xA047AC")]
	public PlayerHandsHapticsTester()
	{
	}
}
[Token(Token = "0x2000349")]
public class OculusRiftLeftController : MonoBehaviour
{
	[Token(Token = "0x6001381")]
	[Address(RVA = "0xACE120", Offset = "0xACE120", VA = "0xACE120")]
	private void Update()
	{
	}

	[Token(Token = "0x6001382")]
	[Address(RVA = "0xACE1D8", Offset = "0xACE1D8", VA = "0xACE1D8")]
	public OculusRiftLeftController()
	{
	}
}
[Token(Token = "0x200034A")]
public class OculusRiftRightController : MonoBehaviour
{
	[Token(Token = "0x6001383")]
	[Address(RVA = "0xAD0C78", Offset = "0xAD0C78", VA = "0xAD0C78")]
	private void Update()
	{
	}

	[Token(Token = "0x6001384")]
	[Address(RVA = "0xAD0D30", Offset = "0xAD0D30", VA = "0xAD0D30")]
	public OculusRiftRightController()
	{
	}
}
[Token(Token = "0x200034B")]
public class HeightPrinter : MonoBehaviour
{
	[Token(Token = "0x400100A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string nameOfObject;

	[Token(Token = "0x400100B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool printOnStart;

	[Token(Token = "0x400100C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[SerializeField]
	private bool printOnUpdate;

	[Token(Token = "0x6001385")]
	[Address(RVA = "0x9FCEC4", Offset = "0x9FCEC4", VA = "0x9FCEC4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001386")]
	[Address(RVA = "0x9FCFAC", Offset = "0x9FCFAC", VA = "0x9FCFAC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001387")]
	[Address(RVA = "0x9FD094", Offset = "0x9FD094", VA = "0x9FD094")]
	public HeightPrinter()
	{
	}
}
[Token(Token = "0x200034C")]
public class ObjectBoundariesPrinter : MonoBehaviour
{
	[Token(Token = "0x6001388")]
	[Address(RVA = "0xC825B8", Offset = "0xC825B8", VA = "0xC825B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001389")]
	[Address(RVA = "0xC826CC", Offset = "0xC826CC", VA = "0xC826CC")]
	public ObjectBoundariesPrinter()
	{
	}
}
[Token(Token = "0x200034D")]
public class ObjectTypePrinter : MonoBehaviour
{
	[Token(Token = "0x600138A")]
	[Address(RVA = "0xACB654", Offset = "0xACB654", VA = "0xACB654")]
	private void Start()
	{
	}

	[Token(Token = "0x600138B")]
	[Address(RVA = "0xACB788", Offset = "0xACB788", VA = "0xACB788")]
	private void Update()
	{
	}

	[Token(Token = "0x600138C")]
	[Address(RVA = "0xACB78C", Offset = "0xACB78C", VA = "0xACB78C")]
	public ObjectTypePrinter()
	{
	}
}
[Token(Token = "0x200034E")]
public class PrintHandPos : MonoBehaviour
{
	[Token(Token = "0x400100D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform leftHand;

	[Token(Token = "0x400100E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform rightHand;

	[Token(Token = "0x600138D")]
	[Address(RVA = "0xA094E4", Offset = "0xA094E4", VA = "0xA094E4")]
	private void Update()
	{
	}

	[Token(Token = "0x600138E")]
	[Address(RVA = "0xA099C4", Offset = "0xA099C4", VA = "0xA099C4")]
	public PrintHandPos()
	{
	}
}
[Token(Token = "0x200034F")]
public class PrintRendererBounds : MonoBehaviour
{
	[Token(Token = "0x400100F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string someName;

	[Token(Token = "0x4001010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Renderer myRenderer;

	[Token(Token = "0x600138F")]
	[Address(RVA = "0xA09A88", Offset = "0xA09A88", VA = "0xA09A88")]
	private void Start()
	{
	}

	[Token(Token = "0x6001390")]
	[Address(RVA = "0xA09E0C", Offset = "0xA09E0C", VA = "0xA09E0C")]
	public PrintRendererBounds()
	{
	}
}
[Token(Token = "0x2000350")]
public class PrintRotation : MonoBehaviour
{
	[Token(Token = "0x6001391")]
	[Address(RVA = "0xA09E68", Offset = "0xA09E68", VA = "0xA09E68")]
	private void Start()
	{
	}

	[Token(Token = "0x6001392")]
	[Address(RVA = "0xA09F20", Offset = "0xA09F20", VA = "0xA09F20")]
	private void Update()
	{
	}

	[Token(Token = "0x6001393")]
	[Address(RVA = "0xA09F24", Offset = "0xA09F24", VA = "0xA09F24")]
	public PrintRotation()
	{
	}
}
[Token(Token = "0x2000351")]
public class PrintTransformRight : MonoBehaviour
{
	[Token(Token = "0x6001394")]
	[Address(RVA = "0xA09F2C", Offset = "0xA09F2C", VA = "0xA09F2C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001395")]
	[Address(RVA = "0xA09FF8", Offset = "0xA09FF8", VA = "0xA09FF8")]
	public PrintTransformRight()
	{
	}
}
[Token(Token = "0x2000352")]
public class AnotherRotationTester : MonoBehaviour
{
	[Token(Token = "0x6001396")]
	[Address(RVA = "0x14A46AC", Offset = "0x14A46AC", VA = "0x14A46AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001397")]
	[Address(RVA = "0x14A4714", Offset = "0x14A4714", VA = "0x14A4714")]
	public AnotherRotationTester()
	{
	}
}
[Token(Token = "0x2000353")]
public class RotateAwayTestScript : MonoBehaviour
{
	[Token(Token = "0x4001011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject rotateAwayFrom;

	[Token(Token = "0x6001398")]
	[Address(RVA = "0xA10A24", Offset = "0xA10A24", VA = "0xA10A24")]
	private void Start()
	{
	}

	[Token(Token = "0x6001399")]
	[Address(RVA = "0xA10AB4", Offset = "0xA10AB4", VA = "0xA10AB4")]
	public RotateAwayTestScript()
	{
	}
}
[Token(Token = "0x2000354")]
public class RotateTowardsTest : MonoBehaviour
{
	[Token(Token = "0x2000355")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69D24C", Offset = "0x69D24C")]
	private sealed class <startRotationCoroutine>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400101A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400101B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400101C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RotateTowardsTest <>4__this;

		[Token(Token = "0x170001F0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013A4")]
			[Address(RVA = "0x149884C", Offset = "0x149884C", VA = "0x149884C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013A6")]
			[Address(RVA = "0x1498894", Offset = "0x1498894", VA = "0x1498894", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013A1")]
		[Address(RVA = "0x1498764", Offset = "0x1498764", VA = "0x1498764")]
		[DebuggerHidden]
		public <startRotationCoroutine>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60013A2")]
		[Address(RVA = "0x1498790", Offset = "0x1498790", VA = "0x1498790", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013A3")]
		[Address(RVA = "0x1498794", Offset = "0x1498794", VA = "0x1498794", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013A5")]
		[Address(RVA = "0x1498854", Offset = "0x1498854", VA = "0x1498854", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Target;

	[Token(Token = "0x4001013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float RotationSpeed;

	[Token(Token = "0x4001014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Quaternion _lookRotation;

	[Token(Token = "0x4001015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 _direction;

	[Token(Token = "0x4001016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool beginRotation;

	[Token(Token = "0x4001017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Quaternion startRotation;

	[Token(Token = "0x4001018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Quaternion endRotation;

	[Token(Token = "0x4001019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float rotationProgress;

	[Token(Token = "0x600139A")]
	[Address(RVA = "0xA10D10", Offset = "0xA10D10", VA = "0xA10D10")]
	private void Start()
	{
	}

	[Token(Token = "0x600139B")]
	[Address(RVA = "0xA10DBC", Offset = "0xA10DBC", VA = "0xA10DBC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AAC74", Offset = "0x6AAC74")]
	private IEnumerator startRotationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600139C")]
	[Address(RVA = "0xA10E34", Offset = "0xA10E34", VA = "0xA10E34")]
	private void Update()
	{
	}

	[Token(Token = "0x600139D")]
	[Address(RVA = "0xA10E44", Offset = "0xA10E44", VA = "0xA10E44")]
	private void rotate3()
	{
	}

	[Token(Token = "0x600139E")]
	[Address(RVA = "0xA10F60", Offset = "0xA10F60", VA = "0xA10F60")]
	private void rotateV2()
	{
	}

	[Token(Token = "0x600139F")]
	[Address(RVA = "0xA11020", Offset = "0xA11020", VA = "0xA11020")]
	private void rotateV1()
	{
	}

	[Token(Token = "0x60013A0")]
	[Address(RVA = "0xA1112C", Offset = "0xA1112C", VA = "0xA1112C")]
	public RotateTowardsTest()
	{
	}
}
[Token(Token = "0x2000356")]
public class SetRotationTest : MonoBehaviour
{
	[Token(Token = "0x400101D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ParticleSystem particleSystemToRotate;

	[Token(Token = "0x400101E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform transformToRotate;

	[Token(Token = "0x60013A7")]
	[Address(RVA = "0xA14BA8", Offset = "0xA14BA8", VA = "0xA14BA8")]
	private void Start()
	{
	}

	[Token(Token = "0x60013A8")]
	[Address(RVA = "0xA14D10", Offset = "0xA14D10", VA = "0xA14D10")]
	public SetRotationTest()
	{
	}
}
[Token(Token = "0x2000357")]
public class TestRotateAround : MonoBehaviour
{
	[Token(Token = "0x400101F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 positionToRotateAround;

	[Token(Token = "0x60013A9")]
	[Address(RVA = "0x14DBB28", Offset = "0x14DBB28", VA = "0x14DBB28")]
	private void Start()
	{
	}

	[Token(Token = "0x60013AA")]
	[Address(RVA = "0x14DBC38", Offset = "0x14DBC38", VA = "0x14DBC38")]
	private void Update()
	{
	}

	[Token(Token = "0x60013AB")]
	[Address(RVA = "0x14DBD0C", Offset = "0x14DBD0C", VA = "0x14DBD0C")]
	public TestRotateAround()
	{
	}
}
[Token(Token = "0x2000358")]
public class BackToMainMenuTest : MonoBehaviour
{
	[Token(Token = "0x60013AC")]
	[Address(RVA = "0x14A85BC", Offset = "0x14A85BC", VA = "0x14A85BC")]
	public BackToMainMenuTest()
	{
	}
}
[Token(Token = "0x2000359")]
public class ListTesting : MonoBehaviour
{
	[Token(Token = "0x60013AD")]
	[Address(RVA = "0xD7EC98", Offset = "0xD7EC98", VA = "0xD7EC98")]
	private void Start()
	{
	}

	[Token(Token = "0x60013AE")]
	[Address(RVA = "0xD7EE14", Offset = "0xD7EE14", VA = "0xD7EE14")]
	private void workList(List<int> myList)
	{
	}

	[Token(Token = "0x60013AF")]
	[Address(RVA = "0xD7EE7C", Offset = "0xD7EE7C", VA = "0xD7EE7C")]
	public ListTesting()
	{
	}
}
[Token(Token = "0x200035A")]
public class TutorialControllerTester : MonoBehaviour
{
	[Token(Token = "0x4001020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TutorialController tutorialController;

	[Token(Token = "0x60013B0")]
	[Address(RVA = "0x14E7414", Offset = "0x14E7414", VA = "0x14E7414")]
	private void Update()
	{
	}

	[Token(Token = "0x60013B1")]
	[Address(RVA = "0x14E74D8", Offset = "0x14E74D8", VA = "0x14E74D8")]
	public TutorialControllerTester()
	{
	}
}
[Token(Token = "0x200035B")]
public class DisabledButtonTester : MonoBehaviour
{
	[Token(Token = "0x4001021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private DisabledStartGameOrTutorialButton button;

	[Token(Token = "0x60013B2")]
	[Address(RVA = "0x95A05C", Offset = "0x95A05C", VA = "0x95A05C")]
	private void Update()
	{
	}

	[Token(Token = "0x60013B3")]
	[Address(RVA = "0x95A0BC", Offset = "0x95A0BC", VA = "0x95A0BC")]
	public DisabledButtonTester()
	{
	}
}
[Token(Token = "0x200035C")]
public class FadeTester : MonoBehaviour
{
	[Token(Token = "0x200035D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69D25C", Offset = "0x69D25C")]
	private sealed class <fadeOutObjectCoroutine>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FadeTester <>4__this;

		[Token(Token = "0x170001F2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013BA")]
			[Address(RVA = "0x14C4FCC", Offset = "0x14C4FCC", VA = "0x14C4FCC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013BC")]
			[Address(RVA = "0x14C5014", Offset = "0x14C5014", VA = "0x14C5014", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013B7")]
		[Address(RVA = "0x14C4DF4", Offset = "0x14C4DF4", VA = "0x14C4DF4")]
		[DebuggerHidden]
		public <fadeOutObjectCoroutine>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0x14C4E20", Offset = "0x14C4E20", VA = "0x14C4E20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013B9")]
		[Address(RVA = "0x14C4E24", Offset = "0x14C4E24", VA = "0x14C4E24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013BB")]
		[Address(RVA = "0x14C4FD4", Offset = "0x14C4FD4", VA = "0x14C4FD4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AdvancedUIFader advancedUIFader;

	[Token(Token = "0x4001023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject gameObjectToFadeOut;

	[Token(Token = "0x60013B4")]
	[Address(RVA = "0x9683C0", Offset = "0x9683C0", VA = "0x9683C0")]
	private void Start()
	{
	}

	[Token(Token = "0x60013B5")]
	[Address(RVA = "0x9683EC", Offset = "0x9683EC", VA = "0x9683EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AAD24", Offset = "0x6AAD24")]
	private IEnumerator fadeOutObjectCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60013B6")]
	[Address(RVA = "0x968464", Offset = "0x968464", VA = "0x968464")]
	public FadeTester()
	{
	}
}
[Token(Token = "0x200035E")]
public class SecondsToMinSecondsTester : MonoBehaviour
{
	[Token(Token = "0x4001027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int seconds;

	[Token(Token = "0x60013BD")]
	[Address(RVA = "0xA13C74", Offset = "0xA13C74", VA = "0xA13C74")]
	private void Start()
	{
	}

	[Token(Token = "0x60013BE")]
	[Address(RVA = "0xA13DE0", Offset = "0xA13DE0", VA = "0xA13DE0")]
	public SecondsToMinSecondsTester()
	{
	}
}
[Token(Token = "0x200035F")]
public class DontDestroy : MonoBehaviour
{
	[Token(Token = "0x60013BF")]
	[Address(RVA = "0x95C94C", Offset = "0x95C94C", VA = "0x95C94C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60013C0")]
	[Address(RVA = "0x95C9C4", Offset = "0x95C9C4", VA = "0x95C9C4")]
	public DontDestroy()
	{
	}
}
[Token(Token = "0x2000360")]
public class GetChildRenderersTest : MonoBehaviour
{
	[Token(Token = "0x60013C1")]
	[Address(RVA = "0x9F4A14", Offset = "0x9F4A14", VA = "0x9F4A14")]
	private void Start()
	{
	}

	[Token(Token = "0x60013C2")]
	[Address(RVA = "0x9F4AAC", Offset = "0x9F4AAC", VA = "0x9F4AAC")]
	private void Update()
	{
	}

	[Token(Token = "0x60013C3")]
	[Address(RVA = "0x9F4AB0", Offset = "0x9F4AB0", VA = "0x9F4AB0")]
	public GetChildRenderersTest()
	{
	}
}
[Token(Token = "0x2000361")]
public class GetComponentTest : MonoBehaviour
{
	[Token(Token = "0x60013C4")]
	[Address(RVA = "0x9F4AB8", Offset = "0x9F4AB8", VA = "0x9F4AB8")]
	private void Start()
	{
	}

	[Token(Token = "0x60013C5")]
	[Address(RVA = "0x9F4B50", Offset = "0x9F4B50", VA = "0x9F4B50")]
	private void Update()
	{
	}

	[Token(Token = "0x60013C6")]
	[Address(RVA = "0x9F4B54", Offset = "0x9F4B54", VA = "0x9F4B54")]
	public GetComponentTest()
	{
	}
}
[Token(Token = "0x2000362")]
public class GetKeyDownTester : MonoBehaviour
{
	[Token(Token = "0x60013C7")]
	[Address(RVA = "0x9F4E0C", Offset = "0x9F4E0C", VA = "0x9F4E0C")]
	private void Start()
	{
	}

	[Token(Token = "0x60013C8")]
	[Address(RVA = "0x9F4E10", Offset = "0x9F4E10", VA = "0x9F4E10")]
	private void Update()
	{
	}

	[Token(Token = "0x60013C9")]
	[Address(RVA = "0x9F4EA0", Offset = "0x9F4EA0", VA = "0x9F4EA0")]
	public GetKeyDownTester()
	{
	}
}
[Token(Token = "0x2000363")]
public class OnTriggerEnterTest : MonoBehaviour
{
	[Token(Token = "0x4001028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer myRenderer;

	[Token(Token = "0x60013CA")]
	[Address(RVA = "0xAD1AF4", Offset = "0xAD1AF4", VA = "0xAD1AF4")]
	private void Start()
	{
	}

	[Token(Token = "0x60013CB")]
	[Address(RVA = "0xAD1B50", Offset = "0xAD1B50", VA = "0xAD1B50")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x60013CC")]
	[Address(RVA = "0xAD1B94", Offset = "0xAD1B94", VA = "0xAD1B94")]
	private void OnTriggerExit(Collider collider)
	{
	}

	[Token(Token = "0x60013CD")]
	[Address(RVA = "0xAD1BD8", Offset = "0xAD1BD8", VA = "0xAD1BD8")]
	public OnTriggerEnterTest()
	{
	}
}
[Token(Token = "0x2000364")]
public class PrefabInstantiationTest : MonoBehaviour
{
	[Token(Token = "0x2000365")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69D26C", Offset = "0x69D26C")]
	private sealed class <instantiatePrefab>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400102A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400102B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400102C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PrefabInstantiationTest <>4__this;

		[Token(Token = "0x170001F4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013D4")]
			[Address(RVA = "0x1497E3C", Offset = "0x1497E3C", VA = "0x1497E3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013D6")]
			[Address(RVA = "0x1497E84", Offset = "0x1497E84", VA = "0x1497E84", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0x1497C58", Offset = "0x1497C58", VA = "0x1497C58")]
		[DebuggerHidden]
		public <instantiatePrefab>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0x1497C84", Offset = "0x1497C84", VA = "0x1497C84", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0x1497C88", Offset = "0x1497C88", VA = "0x1497C88", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0x1497E44", Offset = "0x1497E44", VA = "0x1497E44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject prefabToInstantiate;

	[Token(Token = "0x60013CE")]
	[Address(RVA = "0xA08DD4", Offset = "0xA08DD4", VA = "0xA08DD4")]
	private void Start()
	{
	}

	[Token(Token = "0x60013CF")]
	[Address(RVA = "0xA08E00", Offset = "0xA08E00", VA = "0xA08E00")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AADD4", Offset = "0x6AADD4")]
	private IEnumerator instantiatePrefab()
	{
		return null;
	}

	[Token(Token = "0x60013D0")]
	[Address(RVA = "0xA08E78", Offset = "0xA08E78", VA = "0xA08E78")]
	public PrefabInstantiationTest()
	{
	}
}
[Token(Token = "0x2000366")]
public class RenameTest_V_2 : MonoBehaviour
{
	[Token(Token = "0x400102D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioClip justForTest;

	[Token(Token = "0x60013D7")]
	[Address(RVA = "0xA0E1EC", Offset = "0xA0E1EC", VA = "0xA0E1EC")]
	private void Start()
	{
	}

	[Token(Token = "0x60013D8")]
	[Address(RVA = "0xA0E1F0", Offset = "0xA0E1F0", VA = "0xA0E1F0")]
	private void Update()
	{
	}

	[Token(Token = "0x60013D9")]
	[Address(RVA = "0xA0E1F4", Offset = "0xA0E1F4", VA = "0xA0E1F4")]
	public RenameTest_V_2()
	{
	}
}
[Token(Token = "0x2000367")]
public class FindUnityXRControllersTestScript : MonoBehaviour
{
	[Token(Token = "0x60013DA")]
	[Address(RVA = "0x9684C4", Offset = "0x9684C4", VA = "0x9684C4")]
	private void Update()
	{
	}

	[Token(Token = "0x60013DB")]
	[Address(RVA = "0x9686D8", Offset = "0x9686D8", VA = "0x9686D8")]
	public FindUnityXRControllersTestScript()
	{
	}
}
[Token(Token = "0x2000368")]
public class ValidActivationTypesServiceTester : MonoBehaviour
{
	[Token(Token = "0x400102E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ValidActivationTypesService playerHandObserver;

	[Token(Token = "0x60013DC")]
	[Address(RVA = "0x14EDAFC", Offset = "0x14EDAFC", VA = "0x14EDAFC")]
	private void Update()
	{
	}

	[Token(Token = "0x60013DD")]
	[Address(RVA = "0x14EDB40", Offset = "0x14EDB40", VA = "0x14EDB40")]
	public ValidActivationTypesServiceTester()
	{
	}
}
[Token(Token = "0x2000369")]
public class MockTutorialController : TutorialController
{
	[Token(Token = "0x60013DE")]
	[Address(RVA = "0xC7429C", Offset = "0xC7429C", VA = "0xC7429C", Slot = "4")]
	protected override void performSetupOnAwake()
	{
	}

	[Token(Token = "0x60013DF")]
	[Address(RVA = "0xC742A0", Offset = "0xC742A0", VA = "0xC742A0")]
	public MockTutorialController()
	{
	}
}
[Token(Token = "0x200036A")]
public class ClosestBoundaryPositionService : MonoBehaviour
{
	[Token(Token = "0x60013E0")]
	[Address(RVA = "0xF2AA14", Offset = "0xF2AA14", VA = "0xF2AA14")]
	public static List<Vector3> getBoundariesWithObjectSizeCorrections(Vector3 currentPos, float minX, float maxX, float minZ, float maxZ, float objectSizeX, float objectSizeZ)
	{
		return null;
	}

	[Token(Token = "0x60013E1")]
	[Address(RVA = "0xF2AB48", Offset = "0xF2AB48", VA = "0xF2AB48")]
	public static Vector3 getClosestBoundaryPoint(Vector3 posToCheck, Vector3[] boundaryPoints)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60013E2")]
	[Address(RVA = "0xF2AC60", Offset = "0xF2AC60", VA = "0xF2AC60")]
	public ClosestBoundaryPositionService()
	{
	}
}
[Token(Token = "0x200036B")]
public class FakeVectorService : MonoBehaviour
{
	[Token(Token = "0x400102F")]
	public const float FAKE_VECTOR_X = -66f;

	[Token(Token = "0x60013E3")]
	[Address(RVA = "0x96846C", Offset = "0x96846C", VA = "0x96846C")]
	public static bool isVectorFakeVector(Vector3 input)
	{
		return default(bool);
	}

	[Token(Token = "0x60013E4")]
	[Address(RVA = "0x968480", Offset = "0x968480", VA = "0x968480")]
	public static Vector3 createFakeVector()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60013E5")]
	[Address(RVA = "0x968494", Offset = "0x968494", VA = "0x968494")]
	public FakeVectorService()
	{
	}
}
[Token(Token = "0x200036C")]
public class GetAllChildrenHelper : MonoBehaviour
{
	[Token(Token = "0x60013E6")]
	[Address(RVA = "0x9F45E4", Offset = "0x9F45E4", VA = "0x9F45E4")]
	public static List<GameObject> getAllChildrenOfObject(GameObject sourceGameObject)
	{
		return null;
	}

	[Token(Token = "0x60013E7")]
	[Address(RVA = "0x9F4A0C", Offset = "0x9F4A0C", VA = "0x9F4A0C")]
	public GetAllChildrenHelper()
	{
	}
}
[Token(Token = "0x200036D")]
public class IntegerIteratorService : MonoBehaviour
{
	[Token(Token = "0x60013E8")]
	[Address(RVA = "0x9FE740", Offset = "0x9FE740", VA = "0x9FE740")]
	public static int iterateOrReset(ref int value, int limit)
	{
		return default(int);
	}

	[Token(Token = "0x60013E9")]
	[Address(RVA = "0x9FE758", Offset = "0x9FE758", VA = "0x9FE758")]
	public IntegerIteratorService()
	{
	}
}
[Token(Token = "0x200036E")]
public class MathParabola : MonoBehaviour
{
	[Token(Token = "0x60013EA")]
	[Address(RVA = "0xD8C184", Offset = "0xD8C184", VA = "0xD8C184")]
	private void Start()
	{
	}

	[Token(Token = "0x60013EB")]
	[Address(RVA = "0xD8C188", Offset = "0xD8C188", VA = "0xD8C188")]
	private void Update()
	{
	}

	[Token(Token = "0x60013EC")]
	[Address(RVA = "0xD8C18C", Offset = "0xD8C18C", VA = "0xD8C18C")]
	public MathParabola()
	{
	}
}
[Token(Token = "0x200036F")]
public class ObjectColliderHelper : MonoBehaviour
{
	[Token(Token = "0x60013ED")]
	[Address(RVA = "0xC826D4", Offset = "0xC826D4", VA = "0xC826D4")]
	private void Start()
	{
	}

	[Token(Token = "0x60013EE")]
	[Address(RVA = "0xC826D8", Offset = "0xC826D8", VA = "0xC826D8")]
	private void Update()
	{
	}

	[Token(Token = "0x60013EF")]
	[Address(RVA = "0xC826DC", Offset = "0xC826DC", VA = "0xC826DC")]
	public ObjectColliderHelper()
	{
	}
}
[Token(Token = "0x2000370")]
public class OneMinusOneService : MonoBehaviour
{
	[Token(Token = "0x60013F0")]
	[Address(RVA = "0xAD1BE0", Offset = "0xAD1BE0", VA = "0xAD1BE0")]
	public static int getOneOrMinusOne()
	{
		return default(int);
	}

	[Token(Token = "0x60013F1")]
	[Address(RVA = "0xAD1C0C", Offset = "0xAD1C0C", VA = "0xAD1C0C")]
	public OneMinusOneService()
	{
	}
}
[Token(Token = "0x2000371")]
public class PositionToBoundaryService : MonoBehaviour
{
	[Token(Token = "0x2000372")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69D27C", Offset = "0x69D27C")]
	private sealed class <positionObjectsToMinXCoroutine>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<GameObject> objectsToPosition;

		[Token(Token = "0x4001033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3[] boundaryPoints;

		[Token(Token = "0x170001F6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001402")]
			[Address(RVA = "0x1497954", Offset = "0x1497954", VA = "0x1497954", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001404")]
			[Address(RVA = "0x149799C", Offset = "0x149799C", VA = "0x149799C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013FF")]
		[Address(RVA = "0x14976F0", Offset = "0x14976F0", VA = "0x14976F0")]
		[DebuggerHidden]
		public <positionObjectsToMinXCoroutine>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6001400")]
		[Address(RVA = "0x149771C", Offset = "0x149771C", VA = "0x149771C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001401")]
		[Address(RVA = "0x1497720", Offset = "0x1497720", VA = "0x1497720", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001403")]
		[Address(RVA = "0x149795C", Offset = "0x149795C", VA = "0x149795C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000373")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69D28C", Offset = "0x69D28C")]
	private sealed class <positionObjectsToMaxXCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<GameObject> objectsToPosition;

		[Token(Token = "0x4001037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3[] boundaryPoints;

		[Token(Token = "0x170001F8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001408")]
			[Address(RVA = "0x14973EC", Offset = "0x14973EC", VA = "0x14973EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600140A")]
			[Address(RVA = "0x1497434", Offset = "0x1497434", VA = "0x1497434", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001405")]
		[Address(RVA = "0x1497188", Offset = "0x1497188", VA = "0x1497188")]
		[DebuggerHidden]
		public <positionObjectsToMaxXCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6001406")]
		[Address(RVA = "0x14971B4", Offset = "0x14971B4", VA = "0x14971B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001407")]
		[Address(RVA = "0x14971B8", Offset = "0x14971B8", VA = "0x14971B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001409")]
		[Address(RVA = "0x14973F4", Offset = "0x14973F4", VA = "0x14973F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000374")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69D29C", Offset = "0x69D29C")]
	private sealed class <positionObjectsToMinZCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<GameObject> objectsToPosition;

		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3[] boundaryPoints;

		[Token(Token = "0x170001FA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600140E")]
			[Address(RVA = "0x1497C08", Offset = "0x1497C08", VA = "0x1497C08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001410")]
			[Address(RVA = "0x1497C50", Offset = "0x1497C50", VA = "0x1497C50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600140B")]
		[Address(RVA = "0x14979A4", Offset = "0x14979A4", VA = "0x14979A4")]
		[DebuggerHidden]
		public <positionObjectsToMinZCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600140C")]
		[Address(RVA = "0x14979D0", Offset = "0x14979D0", VA = "0x14979D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600140D")]
		[Address(RVA = "0x14979D4", Offset = "0x14979D4", VA = "0x14979D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600140F")]
		[Address(RVA = "0x1497C10", Offset = "0x1497C10", VA = "0x1497C10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000375")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69D2AC", Offset = "0x69D2AC")]
	private sealed class <positionObjectsToMaxZCoroutine>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400103C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400103D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400103E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<GameObject> objectsToPosition;

		[Token(Token = "0x400103F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3[] boundaryPoints;

		[Token(Token = "0x170001FC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001414")]
			[Address(RVA = "0x14976A0", Offset = "0x14976A0", VA = "0x14976A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001416")]
			[Address(RVA = "0x14976E8", Offset = "0x14976E8", VA = "0x14976E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001411")]
		[Address(RVA = "0x149743C", Offset = "0x149743C", VA = "0x149743C")]
		[DebuggerHidden]
		public <positionObjectsToMaxZCoroutine>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6001412")]
		[Address(RVA = "0x1497468", Offset = "0x1497468", VA = "0x1497468", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001413")]
		[Address(RVA = "0x149746C", Offset = "0x149746C", VA = "0x149746C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0x14976A8", Offset = "0x14976A8", VA = "0x14976A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x60013F2")]
	[Address(RVA = "0xA07298", Offset = "0xA07298", VA = "0xA07298")]
	public void positionObjectsToMinXBoundary(List<GameObject> objectsToPosition, Vector3[] boundaryPoints)
	{
	}

	[Token(Token = "0x60013F3")]
	[Address(RVA = "0xA072C4", Offset = "0xA072C4", VA = "0xA072C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AAE84", Offset = "0x6AAE84")]
	private IEnumerator positionObjectsToMinXCoroutine(List<GameObject> objectsToPosition, Vector3[] boundaryPoints)
	{
		return null;
	}

	[Token(Token = "0x60013F4")]
	[Address(RVA = "0xA07358", Offset = "0xA07358", VA = "0xA07358")]
	public static Vector3 adaptVectorForMinX(Vector3 posToCheck, Vector3 closestPoint)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60013F5")]
	[Address(RVA = "0xA07364", Offset = "0xA07364", VA = "0xA07364")]
	public void positionObjectsToMaxXBoundary(List<GameObject> objectsToPosition, Vector3[] boundaryPoints)
	{
	}

	[Token(Token = "0x60013F6")]
	[Address(RVA = "0xA07390", Offset = "0xA07390", VA = "0xA07390")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AAEE4", Offset = "0x6AAEE4")]
	private IEnumerator positionObjectsToMaxXCoroutine(List<GameObject> objectsToPosition, Vector3[] boundaryPoints)
	{
		return null;
	}

	[Token(Token = "0x60013F7")]
	[Address(RVA = "0xA07424", Offset = "0xA07424", VA = "0xA07424")]
	public static Vector3 adaptVectorForMaxX(Vector3 posToCheck, Vector3 closestPoint)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60013F8")]
	[Address(RVA = "0xA07430", Offset = "0xA07430", VA = "0xA07430")]
	public void positionObjectsToMinZBoundary(List<GameObject> objectsToPosition, Vector3[] boundaryPoints)
	{
	}

	[Token(Token = "0x60013F9")]
	[Address(RVA = "0xA0745C", Offset = "0xA0745C", VA = "0xA0745C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AAF44", Offset = "0x6AAF44")]
	private IEnumerator positionObjectsToMinZCoroutine(List<GameObject> objectsToPosition, Vector3[] boundaryPoints)
	{
		return null;
	}

	[Token(Token = "0x60013FA")]
	[Address(RVA = "0xA074F0", Offset = "0xA074F0", VA = "0xA074F0")]
	public static Vector3 adaptVectorForMinZ(Vector3 posToCheck, Vector3 closestPoint)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60013FB")]
	[Address(RVA = "0xA074FC", Offset = "0xA074FC", VA = "0xA074FC")]
	public void positionObjectsToMaxZBoundary(List<GameObject> objectsToPosition, Vector3[] boundaryPoints)
	{
	}

	[Token(Token = "0x60013FC")]
	[Address(RVA = "0xA07528", Offset = "0xA07528", VA = "0xA07528")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AAFA4", Offset = "0x6AAFA4")]
	private IEnumerator positionObjectsToMaxZCoroutine(List<GameObject> objectsToPosition, Vector3[] boundaryPoints)
	{
		return null;
	}

	[Token(Token = "0x60013FD")]
	[Address(RVA = "0xA075BC", Offset = "0xA075BC", VA = "0xA075BC")]
	public static Vector3 adaptVectorForMaxZ(Vector3 posToCheck, Vector3 closestPoint)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60013FE")]
	[Address(RVA = "0xA075C8", Offset = "0xA075C8", VA = "0xA075C8")]
	public PositionToBoundaryService()
	{
	}
}
[Token(Token = "0x2000376")]
public static class RandomizeService
{
	[Token(Token = "0x6001417")]
	public static void ShuffleArray<T>(T[] array)
	{
	}

	[Token(Token = "0x6001418")]
	public static void ShuffleList<T>(List<T> arrayList)
	{
	}

	[Token(Token = "0x6001419")]
	[Address(RVA = "0xA0B87C", Offset = "0xA0B87C", VA = "0xA0B87C")]
	public static void ShuffleArrayList(ArrayList arrayList)
	{
	}
}
[Token(Token = "0x2000377")]
public class MathUtils : MonoBehaviour
{
	[Token(Token = "0x600141A")]
	[Address(RVA = "0xD8C194", Offset = "0xD8C194", VA = "0xD8C194")]
	public static float[] getLesserBoundary(float[] firstBoundary, float[] secondBoundary)
	{
		return null;
	}

	[Token(Token = "0x600141B")]
	[Address(RVA = "0xD8C28C", Offset = "0xD8C28C", VA = "0xD8C28C")]
	public static float[] getLesserBoundaryIgnoreY(float[] firstBoundary, float[] secondBoundary)
	{
		return null;
	}

	[Token(Token = "0x600141C")]
	[Address(RVA = "0xD8C278", Offset = "0xD8C278", VA = "0xD8C278")]
	private static float getSmallerValue(float first, float second)
	{
		return default(float);
	}

	[Token(Token = "0x600141D")]
	[Address(RVA = "0xD8C3A8", Offset = "0xD8C3A8", VA = "0xD8C3A8")]
	public static float[] returnFloatsOrderedBySize(float min, float max)
	{
		return null;
	}

	[Token(Token = "0x600141E")]
	[Address(RVA = "0xD8C444", Offset = "0xD8C444", VA = "0xD8C444")]
	public MathUtils()
	{
	}
}
[Token(Token = "0x2000378")]
public class TimePassedService
{
	[Token(Token = "0x4001040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected DateTime lastEventTime;

	[Token(Token = "0x4001041")]
	private const int TIME_PASSED_LIMIT = 500;

	[Token(Token = "0x600141F")]
	[Address(RVA = "0x14DEE1C", Offset = "0x14DEE1C", VA = "0x14DEE1C")]
	public TimePassedService()
	{
	}

	[Token(Token = "0x6001420")]
	[Address(RVA = "0x14DEE44", Offset = "0x14DEE44", VA = "0x14DEE44")]
	public void updateLastEventTime()
	{
	}

	[Token(Token = "0x6001421")]
	[Address(RVA = "0x14DEEAC", Offset = "0x14DEEAC", VA = "0x14DEEAC")]
	public bool isEnoughTimePassed()
	{
		return default(bool);
	}
}
[Token(Token = "0x2000379")]
public class AdvancedBoundaryCalculationService
{
	[Token(Token = "0x4001042")]
	private const int NUMBER_OF_POINTS_PER_SIDE = 4;

	[Token(Token = "0x6001422")]
	[Address(RVA = "0x149F6BC", Offset = "0x149F6BC", VA = "0x149F6BC")]
	public static float[] getBoundaries(float[] boundaries, Vector3[] boundaryPoints, float playerHeight)
	{
		return null;
	}

	[Token(Token = "0x6001423")]
	[Address(RVA = "0x149FB48", Offset = "0x149FB48", VA = "0x149FB48")]
	private static float getMaxZBoundary(float[] boundaries, Vector3[] boundaryPoints, float xSizeOfBoundaryPartition)
	{
		return default(float);
	}

	[Token(Token = "0x6001424")]
	[Address(RVA = "0x149FA50", Offset = "0x149FA50", VA = "0x149FA50")]
	private static float getMinZBoundary(float[] boundaries, Vector3[] boundaryPoints, float xSizeOfBoundaryPartition)
	{
		return default(float);
	}

	[Token(Token = "0x6001425")]
	[Address(RVA = "0x149F95C", Offset = "0x149F95C", VA = "0x149F95C")]
	private static float getMaxXBoundary(float[] boundaries, Vector3[] boundaryPoints, float zSizeOfBoundaryPartition)
	{
		return default(float);
	}

	[Token(Token = "0x6001426")]
	[Address(RVA = "0x149F868", Offset = "0x149F868", VA = "0x149F868")]
	private static float getMinXBoundary(float[] boundaries, Vector3[] boundaryPoints, float zSizeOfBoundaryPartition)
	{
		return default(float);
	}

	[Token(Token = "0x6001427")]
	[Address(RVA = "0x149FC40", Offset = "0x149FC40", VA = "0x149FC40")]
	private static Vector3[] getForwardOrBackPlanePositions(float xMin, float zPos, float size)
	{
		return null;
	}

	[Token(Token = "0x6001428")]
	[Address(RVA = "0x149FD04", Offset = "0x149FD04", VA = "0x149FD04")]
	private static Vector3[] getLeftOrRightPlanePositions(float zMin, float xPos, float size)
	{
		return null;
	}

	[Token(Token = "0x6001429")]
	[Address(RVA = "0x149FDC4", Offset = "0x149FDC4", VA = "0x149FDC4")]
	public AdvancedBoundaryCalculationService()
	{
	}
}
[Token(Token = "0x200037A")]
public static class CreateCubesAtPositionsService
{
	[Token(Token = "0x600142A")]
	[Address(RVA = "0xA74DB0", Offset = "0xA74DB0", VA = "0xA74DB0")]
	public static List<GameObject> createCubesAtPositions(List<Vector3> positions, Material material)
	{
		return null;
	}

	[Token(Token = "0x600142B")]
	[Address(RVA = "0xA74FF0", Offset = "0xA74FF0", VA = "0xA74FF0")]
	public static List<GameObject> createCubesAtPositions(List<Vector3> positions, Material material, float objectSize)
	{
		return null;
	}

	[Token(Token = "0x600142C")]
	[Address(RVA = "0xA7522C", Offset = "0xA7522C", VA = "0xA7522C")]
	public static List<GameObject> createCubesAtPositions(List<Vector3> positions, Material material, float objectSize, float height)
	{
		return null;
	}
}
[Token(Token = "0x200037B")]
public static class GetGameObjectPositionsService
{
	[Token(Token = "0x600142D")]
	[Address(RVA = "0x9F4B5C", Offset = "0x9F4B5C", VA = "0x9F4B5C")]
	public static List<Vector3> getObjectPositionsAsVectorList(List<GameObject> gameObjects)
	{
		return null;
	}

	[Token(Token = "0x600142E")]
	[Address(RVA = "0x9F4D14", Offset = "0x9F4D14", VA = "0x9F4D14")]
	public static List<Vector3> getObjectPositionsAsVectorList(GameObject[] gameObjects)
	{
		return null;
	}
}
[Token(Token = "0x200037C")]
public class ObjectUtils : MonoBehaviour
{
	[Token(Token = "0x600142F")]
	[Address(RVA = "0xACB794", Offset = "0xACB794", VA = "0xACB794")]
	public static void setObjectsActive(List<GameObject> objectsToEnableOrDisable, bool enableState)
	{
	}

	[Token(Token = "0x6001430")]
	[Address(RVA = "0xACB904", Offset = "0xACB904", VA = "0xACB904")]
	public static List<GameObject> getObjectsAndAllChildrenOfArrayOfObjectsAsArrayList(GameObject[] inputGameObjects)
	{
		return null;
	}

	[Token(Token = "0x6001431")]
	[Address(RVA = "0xACB9F8", Offset = "0xACB9F8", VA = "0xACB9F8")]
	public static List<GameObject> getObjectAndAllChildrenAsList(GameObject inputGameObject)
	{
		return null;
	}

	[Token(Token = "0x6001432")]
	[Address(RVA = "0xACBDB8", Offset = "0xACBDB8", VA = "0xACBDB8")]
	public static void setObjectsCollidersActive(ArrayList objectsToEnableOrDisable, bool enableState)
	{
	}

	[Token(Token = "0x6001433")]
	[Address(RVA = "0xACC10C", Offset = "0xACC10C", VA = "0xACC10C")]
	public ObjectUtils()
	{
	}
}
[Token(Token = "0x200037D")]
public class RotateTowards : MonoBehaviour
{
	[Token(Token = "0x4001043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public Transform target;

	[Token(Token = "0x4001044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speed;

	[Token(Token = "0x6001434")]
	[Address(RVA = "0xA10BC8", Offset = "0xA10BC8", VA = "0xA10BC8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001435")]
	[Address(RVA = "0xA10D00", Offset = "0xA10D00", VA = "0xA10D00")]
	public RotateTowards()
	{
	}
}
[Token(Token = "0x200037E")]
public class DistanceFromPreviousPosLogger : MonoBehaviour
{
	[Token(Token = "0x4001045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 previousPos;

	[Token(Token = "0x4001046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private int index;

	[Token(Token = "0x4001047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float limitForPrintingPos;

	[Token(Token = "0x6001436")]
	[Address(RVA = "0x95A2E8", Offset = "0x95A2E8", VA = "0x95A2E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001437")]
	[Address(RVA = "0x95A324", Offset = "0x95A324", VA = "0x95A324")]
	protected void printDistanceFromPreviousPosition(float distanceSize)
	{
	}

	[Token(Token = "0x6001438")]
	[Address(RVA = "0x95A464", Offset = "0x95A464", VA = "0x95A464")]
	private void updatePreviousPositionToCurrentPos()
	{
	}

	[Token(Token = "0x6001439")]
	[Address(RVA = "0x95A4A0", Offset = "0x95A4A0", VA = "0x95A4A0")]
	private void Update()
	{
	}

	[Token(Token = "0x600143A")]
	[Address(RVA = "0x95A4C8", Offset = "0x95A4C8", VA = "0x95A4C8")]
	public DistanceFromPreviousPosLogger()
	{
	}
}
[Token(Token = "0x200037F")]
public class ValidObjectCreationAreaService : MonoBehaviour
{
	[Token(Token = "0x600143B")]
	[Address(RVA = "0x14EE2C0", Offset = "0x14EE2C0", VA = "0x14EE2C0")]
	public static Area3D getVerticalCreationAreaBetweenTwoObjects(Transform leftMostObject, Transform rightMostObject, Transform lowestObject, Transform highestObject, Transform mostBackObject, Transform mostForwardObject, float minDistanceFromObject)
	{
		return null;
	}

	[Token(Token = "0x600143C")]
	[Address(RVA = "0x14EE400", Offset = "0x14EE400", VA = "0x14EE400")]
	public static Area3D getCreationAreaBetweenObjectsHorizontal(Transform leftMostObject, Transform rightMostObject, Transform mostBackObject, Transform mostForwardObject, float minY, float maxY, float minDistanceFromObject)
	{
		return null;
	}

	[Token(Token = "0x600143D")]
	[Address(RVA = "0x14EE510", Offset = "0x14EE510", VA = "0x14EE510")]
	public static Area3D getCreationAreaFromHighestObjectToMaxYLimit(Transform objectAtHighestPosition, float maxY, float minX, float maxX, float minDistanceFromObject)
	{
		return null;
	}

	[Token(Token = "0x600143E")]
	[Address(RVA = "0x14EE628", Offset = "0x14EE628", VA = "0x14EE628")]
	public static Area3D getCreationAreaFromHighestObjectToMaxYLimit(float yPos, float maxY, float minX, float maxX, float minZ, float maxZ, float minDistanceFromObject)
	{
		return null;
	}

	[Token(Token = "0x600143F")]
	[Address(RVA = "0x14EE6D4", Offset = "0x14EE6D4", VA = "0x14EE6D4")]
	public static Area3D getCreationAreaFromLowestObjectToMinYLimit(Transform objectAtLowestPosition, float minY, float minX, float maxX, float minDistanceFromObject)
	{
		return null;
	}

	[Token(Token = "0x6001440")]
	[Address(RVA = "0x14EE780", Offset = "0x14EE780", VA = "0x14EE780")]
	public static Area3D getCreationAreaFromLowestObjectToMinYLimit(float yPos, float minY, float minX, float maxX, float minZ, float maxZ, float minDistanceFromObject)
	{
		return null;
	}

	[Token(Token = "0x6001441")]
	[Address(RVA = "0x14EE82C", Offset = "0x14EE82C", VA = "0x14EE82C")]
	public static Area3D getCreationAreaFromLeftMostObjectToMinXLimit(float minX, float objectPos, float minY, float maxY, float minZ, float maxZ, float minDistanceFromObject)
	{
		return null;
	}

	[Token(Token = "0x6001442")]
	[Address(RVA = "0x14EE8D8", Offset = "0x14EE8D8", VA = "0x14EE8D8")]
	public static Area3D getCreationAreaFromRightMostObjectToMaxXLimit(Transform objectAtRightMostPosition, float maxX, float minY, float maxY, float minZ, float maxZ, float minDistanceFromObject)
	{
		return null;
	}

	[Token(Token = "0x6001443")]
	[Address(RVA = "0x14EE99C", Offset = "0x14EE99C", VA = "0x14EE99C")]
	public static Area3D getCreationAreaFromRightMostObjectToMaxXLimit(float xPos, float maxX, float minY, float maxY, float minZ, float maxZ, float minDistanceFromObject)
	{
		return null;
	}

	[Token(Token = "0x6001444")]
	[Address(RVA = "0x14EEA48", Offset = "0x14EEA48", VA = "0x14EEA48")]
	public static Area3D getCreationAreaFromMostForwardObjectToMaxZLimit(float zPos, float minX, float maxX, float minY, float maxY, float minZ, float maxZ, float minDistanceFromObject)
	{
		return null;
	}

	[Token(Token = "0x6001445")]
	[Address(RVA = "0x14EEAF4", Offset = "0x14EEAF4", VA = "0x14EEAF4")]
	public static Area3D getCreationAreaFromMostBackObjectToMinZLimit(float zPos, float minX, float maxX, float minY, float maxY, float minZ, float maxZ, float minDistanceFromObject)
	{
		return null;
	}

	[Token(Token = "0x6001446")]
	[Address(RVA = "0x14EEBA0", Offset = "0x14EEBA0", VA = "0x14EEBA0")]
	public ValidObjectCreationAreaService()
	{
	}
}
[Token(Token = "0x2000380")]
public class Area3D
{
	[Token(Token = "0x4001048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float minX;

	[Token(Token = "0x4001049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float maxX;

	[Token(Token = "0x400104A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float minY;

	[Token(Token = "0x400104B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float maxY;

	[Token(Token = "0x400104C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float minZ;

	[Token(Token = "0x400104D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float maxZ;

	[Token(Token = "0x6001447")]
	[Address(RVA = "0x14A5FDC", Offset = "0x14A5FDC", VA = "0x14A5FDC")]
	public Area3D(float minX, float maxX, float minY, float maxY)
	{
	}

	[Token(Token = "0x6001448")]
	[Address(RVA = "0x14A6040", Offset = "0x14A6040", VA = "0x14A6040")]
	private void setXY(float minX, float maxX, float minY, float maxY)
	{
	}

	[Token(Token = "0x6001449")]
	[Address(RVA = "0x14A6064", Offset = "0x14A6064", VA = "0x14A6064")]
	public Area3D(float minX, float maxX, float minY, float maxY, float minZ, float maxZ)
	{
	}

	[Token(Token = "0x600144A")]
	[Address(RVA = "0x14A60E8", Offset = "0x14A60E8", VA = "0x14A60E8")]
	public float getMinX()
	{
		return default(float);
	}

	[Token(Token = "0x600144B")]
	[Address(RVA = "0x14A60F0", Offset = "0x14A60F0", VA = "0x14A60F0")]
	public void setMinX(float minX)
	{
	}

	[Token(Token = "0x600144C")]
	[Address(RVA = "0x14A60F8", Offset = "0x14A60F8", VA = "0x14A60F8")]
	public float getMaxX()
	{
		return default(float);
	}

	[Token(Token = "0x600144D")]
	[Address(RVA = "0x14A6100", Offset = "0x14A6100", VA = "0x14A6100")]
	public void setMaxX(float maxX)
	{
	}

	[Token(Token = "0x600144E")]
	[Address(RVA = "0x14A6108", Offset = "0x14A6108", VA = "0x14A6108")]
	public float getMinY()
	{
		return default(float);
	}

	[Token(Token = "0x600144F")]
	[Address(RVA = "0x14A6110", Offset = "0x14A6110", VA = "0x14A6110")]
	public void setMinY(float minY)
	{
	}

	[Token(Token = "0x6001450")]
	[Address(RVA = "0x14A6118", Offset = "0x14A6118", VA = "0x14A6118")]
	public float getMaxY()
	{
		return default(float);
	}

	[Token(Token = "0x6001451")]
	[Address(RVA = "0x14A6120", Offset = "0x14A6120", VA = "0x14A6120")]
	public void setMaxY(float maxY)
	{
	}

	[Token(Token = "0x6001452")]
	[Address(RVA = "0x14A6128", Offset = "0x14A6128", VA = "0x14A6128")]
	public float getMinZ()
	{
		return default(float);
	}

	[Token(Token = "0x6001453")]
	[Address(RVA = "0x14A6130", Offset = "0x14A6130", VA = "0x14A6130")]
	public void setMinZ(float minZ)
	{
	}

	[Token(Token = "0x6001454")]
	[Address(RVA = "0x14A6138", Offset = "0x14A6138", VA = "0x14A6138")]
	public float getMaxZ()
	{
		return default(float);
	}

	[Token(Token = "0x6001455")]
	[Address(RVA = "0x14A6140", Offset = "0x14A6140", VA = "0x14A6140")]
	public void setMaxZ(float maxZ)
	{
	}

	[Token(Token = "0x6001456")]
	[Address(RVA = "0x14A6148", Offset = "0x14A6148", VA = "0x14A6148")]
	public float getDifferenceMinMaxX()
	{
		return default(float);
	}

	[Token(Token = "0x6001457")]
	[Address(RVA = "0x14A6154", Offset = "0x14A6154", VA = "0x14A6154")]
	public float getDifferenceMinMaxY()
	{
		return default(float);
	}

	[Token(Token = "0x6001458")]
	[Address(RVA = "0x14A6160", Offset = "0x14A6160", VA = "0x14A6160")]
	public bool isLimitsInversed()
	{
		return default(bool);
	}

	[Token(Token = "0x6001459")]
	[Address(RVA = "0x14A6184", Offset = "0x14A6184", VA = "0x14A6184")]
	public Area3D getCopy()
	{
		return null;
	}

	[Token(Token = "0x600145A")]
	[Address(RVA = "0x14A6218", Offset = "0x14A6218", VA = "0x14A6218")]
	public void increaseSize(float xIncrease, float yIncrease)
	{
	}

	[Token(Token = "0x600145B")]
	[Address(RVA = "0x14A623C", Offset = "0x14A623C", VA = "0x14A623C")]
	public void decreaseSize(float xDecrease, float yDecrease)
	{
	}

	[Token(Token = "0x600145C")]
	[Address(RVA = "0x14A6260", Offset = "0x14A6260", VA = "0x14A6260")]
	public float[] getBorders()
	{
		return null;
	}

	[Token(Token = "0x600145D")]
	[Address(RVA = "0x14A6324", Offset = "0x14A6324", VA = "0x14A6324")]
	public float getAverageY()
	{
		return default(float);
	}
}
[Token(Token = "0x2000381")]
public class GameObjectResizeService : MonoBehaviour
{
	[Token(Token = "0x600145E")]
	[Address(RVA = "0x9F31D0", Offset = "0x9F31D0", VA = "0x9F31D0")]
	public static void resizeObjectX(GameObject gameObjectToResize, float newSize)
	{
	}

	[Token(Token = "0x600145F")]
	[Address(RVA = "0x9F32D0", Offset = "0x9F32D0", VA = "0x9F32D0")]
	public GameObjectResizeService()
	{
	}
}
[Token(Token = "0x2000382")]
public class ParabolaCalculator
{
	[Token(Token = "0x2000383")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69D2BC", Offset = "0x69D2BC")]
	private sealed class <>c__DisplayClass0_0
	{
		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float height;

		[Token(Token = "0x6001462")]
		[Address(RVA = "0x1495470", Offset = "0x1495470", VA = "0x1495470")]
		public <>c__DisplayClass0_0()
		{
		}

		[Token(Token = "0x6001463")]
		[Address(RVA = "0x1495478", Offset = "0x1495478", VA = "0x1495478")]
		internal float <Parabola>b__0(float x)
		{
			return default(float);
		}
	}

	[Token(Token = "0x6001460")]
	[Address(RVA = "0xA617D8", Offset = "0xA617D8", VA = "0xA617D8")]
	public static Vector3 Parabola(Vector3 start, Vector3 end, float height, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001461")]
	[Address(RVA = "0xA61940", Offset = "0xA61940", VA = "0xA61940")]
	public ParabolaCalculator()
	{
	}
}
[Token(Token = "0x2000384")]
public class ParabolaController : MonoBehaviour
{
	[Token(Token = "0x2000385")]
	public class ParabolaFly
	{
		[Serializable]
		[Token(Token = "0x2000386")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69D2CC", Offset = "0x69D2CC")]
		private sealed class <>c
		{
			[Token(Token = "0x400105B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400105C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Converter<Component, Transform> <>9__4_0;

			[Token(Token = "0x400105D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Comparison<Transform> <>9__4_1;

			[Token(Token = "0x6001479")]
			[Address(RVA = "0x1484BE0", Offset = "0x1484BE0", VA = "0x1484BE0")]
			public <>c()
			{
			}

			[Token(Token = "0x600147A")]
			[Address(RVA = "0x1484BE8", Offset = "0x1484BE8", VA = "0x1484BE8")]
			internal Transform <.ctor>b__4_0(Component c)
			{
				return null;
			}

			[Token(Token = "0x600147B")]
			[Address(RVA = "0x1484C68", Offset = "0x1484C68", VA = "0x1484C68")]
			internal int <.ctor>b__4_1(Transform a, Transform b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform[] Points;

		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Parabola3D[] parabolas;

		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected float[] partDuration;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected float completeDuration;

		[Token(Token = "0x6001471")]
		[Address(RVA = "0x1495DB8", Offset = "0x1495DB8", VA = "0x1495DB8")]
		public ParabolaFly(Transform ParabolaRoot)
		{
		}

		[Token(Token = "0x6001472")]
		[Address(RVA = "0x14961EC", Offset = "0x14961EC", VA = "0x14961EC")]
		public Vector3 GetPositionAtTime(float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001473")]
		[Address(RVA = "0x1496308", Offset = "0x1496308", VA = "0x1496308")]
		public void GetParabolaIndexAtTime(float time, out int parabolaIndex)
		{
		}

		[Token(Token = "0x6001474")]
		[Address(RVA = "0x1496280", Offset = "0x1496280", VA = "0x1496280")]
		public void GetParabolaIndexAtTime(float time, out int parabolaIndex, out float timeInParabola)
		{
		}

		[Token(Token = "0x6001475")]
		[Address(RVA = "0x149632C", Offset = "0x149632C", VA = "0x149632C")]
		public float GetDuration()
		{
			return default(float);
		}

		[Token(Token = "0x6001476")]
		[Address(RVA = "0x1496334", Offset = "0x1496334", VA = "0x1496334")]
		public Vector3 getHighestPoint(int parabolaIndex)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001477")]
		[Address(RVA = "0x1496374", Offset = "0x1496374", VA = "0x1496374")]
		public void RefreshTransforms(float speed)
		{
		}
	}

	[Token(Token = "0x2000387")]
	public class Parabola3D
	{
		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A2C94", Offset = "0x6A2C94")]
		private float <Length>k__BackingField;

		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 A;

		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 B;

		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 C;

		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Parabola2D parabola2D;

		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Vector3 h;

		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected bool tooClose;

		[Token(Token = "0x170001FE")]
		public float Length
		{
			[Token(Token = "0x600147C")]
			[Address(RVA = "0x1495724", Offset = "0x1495724", VA = "0x1495724")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AB144", Offset = "0x6AB144")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600147D")]
			[Address(RVA = "0x149572C", Offset = "0x149572C", VA = "0x149572C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AB154", Offset = "0x6AB154")]
			private set
			{
			}
		}

		[Token(Token = "0x600147E")]
		[Address(RVA = "0x1495734", Offset = "0x1495734", VA = "0x1495734")]
		public Parabola3D()
		{
		}

		[Token(Token = "0x600147F")]
		[Address(RVA = "0x149573C", Offset = "0x149573C", VA = "0x149573C")]
		public Parabola3D(Vector3 A, Vector3 B, Vector3 C)
		{
		}

		[Token(Token = "0x6001480")]
		[Address(RVA = "0x14957C4", Offset = "0x14957C4", VA = "0x14957C4")]
		public void Set(Vector3 A, Vector3 B, Vector3 C)
		{
		}

		[Token(Token = "0x6001481")]
		[Address(RVA = "0x14958AC", Offset = "0x14958AC", VA = "0x14958AC")]
		public Vector3 getHighestPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001482")]
		[Address(RVA = "0x14959AC", Offset = "0x14959AC", VA = "0x14959AC")]
		public Vector3 GetPositionAtLength(float length)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001483")]
		[Address(RVA = "0x14957E4", Offset = "0x14957E4", VA = "0x14957E4")]
		private void refreshCurve()
		{
		}

		[Token(Token = "0x6001484")]
		[Address(RVA = "0x1495AE0", Offset = "0x1495AE0", VA = "0x1495AE0")]
		private void refreshCurveNormal()
		{
		}

		[Token(Token = "0x6001485")]
		[Address(RVA = "0x1495CA8", Offset = "0x1495CA8", VA = "0x1495CA8")]
		private void refreshCurveClose()
		{
		}
	}

	[Token(Token = "0x2000388")]
	public class Parabola2D
	{
		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A2CA4", Offset = "0x6A2CA4")]
		private float <a>k__BackingField;

		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A2CB4", Offset = "0x6A2CB4")]
		private float <b>k__BackingField;

		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A2CC4", Offset = "0x6A2CC4")]
		private float <c>k__BackingField;

		[Token(Token = "0x4001068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A2CD4", Offset = "0x6A2CD4")]
		private Vector2 <E>k__BackingField;

		[Token(Token = "0x4001069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A2CE4", Offset = "0x6A2CE4")]
		private float <Length>k__BackingField;

		[Token(Token = "0x170001FF")]
		public float a
		{
			[Token(Token = "0x6001486")]
			[Address(RVA = "0x14954A0", Offset = "0x14954A0", VA = "0x14954A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AB164", Offset = "0x6AB164")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001487")]
			[Address(RVA = "0x14954A8", Offset = "0x14954A8", VA = "0x14954A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AB174", Offset = "0x6AB174")]
			private set
			{
			}
		}

		[Token(Token = "0x17000200")]
		public float b
		{
			[Token(Token = "0x6001488")]
			[Address(RVA = "0x14954B0", Offset = "0x14954B0", VA = "0x14954B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AB184", Offset = "0x6AB184")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001489")]
			[Address(RVA = "0x14954B8", Offset = "0x14954B8", VA = "0x14954B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AB194", Offset = "0x6AB194")]
			private set
			{
			}
		}

		[Token(Token = "0x17000201")]
		public float c
		{
			[Token(Token = "0x600148A")]
			[Address(RVA = "0x14954C0", Offset = "0x14954C0", VA = "0x14954C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AB1A4", Offset = "0x6AB1A4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600148B")]
			[Address(RVA = "0x14954C8", Offset = "0x14954C8", VA = "0x14954C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AB1B4", Offset = "0x6AB1B4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000202")]
		public Vector2 E
		{
			[Token(Token = "0x600148C")]
			[Address(RVA = "0x14954D0", Offset = "0x14954D0", VA = "0x14954D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AB1C4", Offset = "0x6AB1C4")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x600148D")]
			[Address(RVA = "0x14954D8", Offset = "0x14954D8", VA = "0x14954D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AB1D4", Offset = "0x6AB1D4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000203")]
		public float Length
		{
			[Token(Token = "0x600148E")]
			[Address(RVA = "0x14954E0", Offset = "0x14954E0", VA = "0x14954E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AB1E4", Offset = "0x6AB1E4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600148F")]
			[Address(RVA = "0x14954E8", Offset = "0x14954E8", VA = "0x14954E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AB1F4", Offset = "0x6AB1F4")]
			private set
			{
			}
		}

		[Token(Token = "0x6001490")]
		[Address(RVA = "0x14954F0", Offset = "0x14954F0", VA = "0x14954F0")]
		public Parabola2D(float a, float b, float c, float length)
		{
		}

		[Token(Token = "0x6001491")]
		[Address(RVA = "0x1495590", Offset = "0x1495590", VA = "0x1495590")]
		public Parabola2D(Vector2 A, Vector2 B, Vector2 C)
		{
		}

		[Token(Token = "0x6001492")]
		[Address(RVA = "0x1495704", Offset = "0x1495704", VA = "0x1495704")]
		public float f(float x)
		{
			return default(float);
		}

		[Token(Token = "0x6001493")]
		[Address(RVA = "0x1495560", Offset = "0x1495560", VA = "0x1495560")]
		private void setMetadata()
		{
		}
	}

	[Token(Token = "0x400104F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Speed;

	[Token(Token = "0x4001050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject ParabolaRoot;

	[Token(Token = "0x4001051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool Autostart;

	[Token(Token = "0x4001052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool Animation;

	[Token(Token = "0x4001053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	internal bool nextParbola;

	[Token(Token = "0x4001054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	protected float animationTime;

	[Token(Token = "0x4001055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected ParabolaFly gizmo;

	[Token(Token = "0x4001056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected ParabolaFly parabolaFly;

	[Token(Token = "0x6001464")]
	[Address(RVA = "0xA61948", Offset = "0xA61948", VA = "0xA61948")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6001465")]
	[Address(RVA = "0xA61B4C", Offset = "0xA61B4C", VA = "0xA61B4C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001466")]
	[Address(RVA = "0xA61CC0", Offset = "0xA61CC0", VA = "0xA61CC0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001467")]
	[Address(RVA = "0xA61C2C", Offset = "0xA61C2C", VA = "0xA61C2C")]
	public void FollowParabola()
	{
	}

	[Token(Token = "0x6001468")]
	[Address(RVA = "0xA61DB0", Offset = "0xA61DB0", VA = "0xA61DB0")]
	public Vector3 getHighestPoint(int parabolaIndex)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001469")]
	[Address(RVA = "0xA61DCC", Offset = "0xA61DCC", VA = "0xA61DCC")]
	public Transform[] getPoints()
	{
		return null;
	}

	[Token(Token = "0x600146A")]
	[Address(RVA = "0xA61DE8", Offset = "0xA61DE8", VA = "0xA61DE8")]
	public Vector3 GetPositionAtTime(float time)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600146B")]
	[Address(RVA = "0xA61E04", Offset = "0xA61E04", VA = "0xA61E04")]
	public float GetDuration()
	{
		return default(float);
	}

	[Token(Token = "0x600146C")]
	[Address(RVA = "0xA61E20", Offset = "0xA61E20", VA = "0xA61E20")]
	public void StopFollow()
	{
	}

	[Token(Token = "0x600146D")]
	[Address(RVA = "0xA61C10", Offset = "0xA61C10", VA = "0xA61C10")]
	public void RefreshTransforms(float speed)
	{
	}

	[Token(Token = "0x600146E")]
	[Address(RVA = "0xA61E2C", Offset = "0xA61E2C", VA = "0xA61E2C")]
	public static float DistanceToLine(Ray ray, Vector3 point)
	{
		return default(float);
	}

	[Token(Token = "0x600146F")]
	[Address(RVA = "0xA61EC8", Offset = "0xA61EC8", VA = "0xA61EC8")]
	public static Vector3 ClosestPointInLine(Ray ray, Vector3 point)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001470")]
	[Address(RVA = "0xA61FAC", Offset = "0xA61FAC", VA = "0xA61FAC")]
	public ParabolaController()
	{
	}
}
[Token(Token = "0x2000389")]
public class ParticleSystemUtil : MonoBehaviour
{
	[Token(Token = "0x6001494")]
	[Address(RVA = "0xA62660", Offset = "0xA62660", VA = "0xA62660")]
	public static void changeMeshEffectColor(GameObject gameObject, Color color)
	{
	}

	[Token(Token = "0x6001495")]
	[Address(RVA = "0xA626F8", Offset = "0xA626F8", VA = "0xA626F8")]
	public static void changeColorOfAllParticleSystems(GameObject gameObject, Color color)
	{
	}

	[Token(Token = "0x6001496")]
	[Address(RVA = "0xA62814", Offset = "0xA62814", VA = "0xA62814")]
	public static void changeDurationOfParticleSystem(GameObject gameObject, float duration)
	{
	}

	[Token(Token = "0x6001497")]
	[Address(RVA = "0xA628E0", Offset = "0xA628E0", VA = "0xA628E0")]
	public static void changeColorOfParticleSystems(ParticleSystem[] particleSystems, Color color)
	{
	}

	[Token(Token = "0x6001498")]
	[Address(RVA = "0xA629C0", Offset = "0xA629C0", VA = "0xA629C0")]
	public ParticleSystemUtil()
	{
	}
}
namespace Assets._scripts
{
	[Token(Token = "0x200038A")]
	public static class TargetObjectCreator
	{
		[Token(Token = "0x6001499")]
		[Address(RVA = "0x14CEF88", Offset = "0x14CEF88", VA = "0x14CEF88")]
		public static void setUpTargetObjectsOnRadius(ArrayList targetObjectsArray, float radius, int numberOfTargetObjectsToBeCreated, float targetObjectSize, float additionalAngle, float objectSpreadInRadians, Transform m_Camera, GameController gameController)
		{
		}

		[Token(Token = "0x600149A")]
		[Address(RVA = "0x14CF25C", Offset = "0x14CF25C", VA = "0x14CF25C")]
		public static void setUpTargetObjects(ArrayList targetObjectsArray, float targetObjectSize, GameController gameController)
		{
		}

		[Token(Token = "0x600149B")]
		[Address(RVA = "0x14CF198", Offset = "0x14CF198", VA = "0x14CF198")]
		private static void positionObjectOnRadius(float radius, float targetObjectSize, int horizontalCounter, float objectSpreadInRadians, int numberOfTargetObjectsToBeCreated, float additionalAngle, Transform playerTransform, GameObject targetObject)
		{
		}

		[Token(Token = "0x600149C")]
		[Address(RVA = "0x14CF33C", Offset = "0x14CF33C", VA = "0x14CF33C")]
		private static Vector3 getObjectArrivalDestinationOnRadius(float radius, float targetObjectSize, int horizontalCounter, float objectSpreadInRadians, int numberOfTargetObjectsToBeCreated, float additionalAngle, Transform playerTransform)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600149D")]
		[Address(RVA = "0x14CF3E4", Offset = "0x14CF3E4", VA = "0x14CF3E4")]
		public static GameObject createDefaultGameObject(float targetObjectSize)
		{
			return null;
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0x14CF4B8", Offset = "0x14CF4B8", VA = "0x14CF4B8")]
		public static GameObject createSpherePrimitiveGameObject(float targetObjectSize)
		{
			return null;
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0x14CF0C4", Offset = "0x14CF0C4", VA = "0x14CF0C4")]
		public static GameObject setUpInstantiatedTargetObjectObject(GameObject targetObject, float targetObjectSize, GameController gameController)
		{
			return null;
		}

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0x14CF58C", Offset = "0x14CF58C", VA = "0x14CF58C")]
		public static GameObject setUpInstantiatedCoordinationCoachObject(GameObject targetObject, float targetObjectSize)
		{
			return null;
		}

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0x14CF5E0", Offset = "0x14CF5E0", VA = "0x14CF5E0")]
		public static GameObject createTargetObject(float targetObjectSize, GameController gameController)
		{
			return null;
		}

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0x14CF66C", Offset = "0x14CF66C", VA = "0x14CF66C")]
		public static void setMaterialOfObjectToRed(GameObject inputGameObject)
		{
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0x14CF740", Offset = "0x14CF740", VA = "0x14CF740")]
		public static GameObject createObjectToBlock(Transform inputTargetTransform, float targetObjectSize)
		{
			return null;
		}
	}
}
namespace UnityStandardAssets.ImageEffects
{
	[Token(Token = "0x200038B")]
	public enum AAMode
	{
		[Token(Token = "0x400106B")]
		FXAA2,
		[Token(Token = "0x400106C")]
		FXAA3Console,
		[Token(Token = "0x400106D")]
		FXAA1PresetA,
		[Token(Token = "0x400106E")]
		FXAA1PresetB,
		[Token(Token = "0x400106F")]
		NFAA,
		[Token(Token = "0x4001070")]
		SSAA,
		[Token(Token = "0x4001071")]
		DLAA
	}
	[Token(Token = "0x200038C")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x69D2DC", Offset = "0x69D2DC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x69D2DC", Offset = "0x69D2DC")]
	public class Antialiasing : PostEffectsBase
	{
		[Token(Token = "0x4001072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public AAMode mode;

		[Token(Token = "0x4001073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool showGeneratedNormals;

		[Token(Token = "0x4001074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float offsetScale;

		[Token(Token = "0x4001075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float blurRadius;

		[Token(Token = "0x4001076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float edgeThresholdMin;

		[Token(Token = "0x4001077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float edgeThreshold;

		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float edgeSharpness;

		[Token(Token = "0x4001079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool dlaaSharp;

		[Token(Token = "0x400107A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Shader ssaaShader;

		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material ssaa;

		[Token(Token = "0x400107C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Shader dlaaShader;

		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Material dlaa;

		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Shader nfaaShader;

		[Token(Token = "0x400107F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Material nfaa;

		[Token(Token = "0x4001080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Shader shaderFXAAPreset2;

		[Token(Token = "0x4001081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Material materialFXAAPreset2;

		[Token(Token = "0x4001082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Shader shaderFXAAPreset3;

		[Token(Token = "0x4001083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Material materialFXAAPreset3;

		[Token(Token = "0x4001084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Shader shaderFXAAII;

		[Token(Token = "0x4001085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Material materialFXAAII;

		[Token(Token = "0x4001086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Shader shaderFXAAIII;

		[Token(Token = "0x4001087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Material materialFXAAIII;

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0x14A471C", Offset = "0x14A471C", VA = "0x14A471C")]
		public Material CurrentAAMaterial()
		{
			return null;
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0x14A4780", Offset = "0x14A4780", VA = "0x14A4780", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0x14A48F4", Offset = "0x14A48F4", VA = "0x14A48F4")]
		public void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0x14A4E80", Offset = "0x14A4E80", VA = "0x14A4E80")]
		public Antialiasing()
		{
		}
	}
	[Token(Token = "0x200038D")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x69D370", Offset = "0x69D370")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x69D370", Offset = "0x69D370")]
	public class Bloom : PostEffectsBase
	{
		[Token(Token = "0x200038E")]
		public enum LensFlareStyle
		{
			[Token(Token = "0x40010A7")]
			Ghosting,
			[Token(Token = "0x40010A8")]
			Anamorphic,
			[Token(Token = "0x40010A9")]
			Combined
		}

		[Token(Token = "0x200038F")]
		public enum TweakMode
		{
			[Token(Token = "0x40010AB")]
			Basic,
			[Token(Token = "0x40010AC")]
			Complex
		}

		[Token(Token = "0x2000390")]
		public enum HDRBloomMode
		{
			[Token(Token = "0x40010AE")]
			Auto,
			[Token(Token = "0x40010AF")]
			On,
			[Token(Token = "0x40010B0")]
			Off
		}

		[Token(Token = "0x2000391")]
		public enum BloomScreenBlendMode
		{
			[Token(Token = "0x40010B2")]
			Screen,
			[Token(Token = "0x40010B3")]
			Add
		}

		[Token(Token = "0x2000392")]
		public enum BloomQuality
		{
			[Token(Token = "0x40010B5")]
			Cheap,
			[Token(Token = "0x40010B6")]
			High
		}

		[Token(Token = "0x4001088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public TweakMode tweakMode;

		[Token(Token = "0x4001089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BloomScreenBlendMode screenBlendMode;

		[Token(Token = "0x400108A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public HDRBloomMode hdr;

		[Token(Token = "0x400108B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool doHdr;

		[Token(Token = "0x400108C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float sepBlurSpread;

		[Token(Token = "0x400108D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BloomQuality quality;

		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float bloomIntensity;

		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float bloomThreshold;

		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Color bloomThresholdColor;

		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int bloomBlurIterations;

		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int hollywoodFlareBlurIterations;

		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float flareRotation;

		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public LensFlareStyle lensflareMode;

		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float hollyStretchWidth;

		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float lensflareIntensity;

		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float lensflareThreshold;

		[Token(Token = "0x4001098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float lensFlareSaturation;

		[Token(Token = "0x4001099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Color flareColorA;

		[Token(Token = "0x400109A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Color flareColorB;

		[Token(Token = "0x400109B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public Color flareColorC;

		[Token(Token = "0x400109C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public Color flareColorD;

		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Texture2D lensFlareVignetteMask;

		[Token(Token = "0x400109E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Shader lensFlareShader;

		[Token(Token = "0x400109F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Material lensFlareMaterial;

		[Token(Token = "0x40010A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Shader screenBlendShader;

		[Token(Token = "0x40010A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Material screenBlend;

		[Token(Token = "0x40010A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Shader blurAndFlaresShader;

		[Token(Token = "0x40010A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Material blurAndFlaresMaterial;

		[Token(Token = "0x40010A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Shader brightPassFilterShader;

		[Token(Token = "0x40010A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Material brightPassFilterMaterial;

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0x14B326C", Offset = "0x14B326C", VA = "0x14B326C", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0x14B335C", Offset = "0x14B335C", VA = "0x14B335C")]
		public void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0x14B480C", Offset = "0x14B480C", VA = "0x14B480C")]
		private void AddTo(float intensity_, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0x14B458C", Offset = "0x14B458C", VA = "0x14B458C")]
		private void BlendFlares(RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0x14B4278", Offset = "0x14B4278", VA = "0x14B4278")]
		private void BrightFilter(float thresh, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0x14B418C", Offset = "0x14B418C", VA = "0x14B418C")]
		private void BrightFilter(Color threshColor, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x60014AE")]
		[Address(RVA = "0x14B436C", Offset = "0x14B436C", VA = "0x14B436C")]
		private void Vignette(float amount, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0x14B48DC", Offset = "0x14B48DC", VA = "0x14B48DC")]
		public Bloom()
		{
		}
	}
	[Token(Token = "0x2000393")]
	public enum LensflareStyle34
	{
		[Token(Token = "0x40010B8")]
		Ghosting,
		[Token(Token = "0x40010B9")]
		Anamorphic,
		[Token(Token = "0x40010BA")]
		Combined
	}
	[Token(Token = "0x2000394")]
	public enum TweakMode34
	{
		[Token(Token = "0x40010BC")]
		Basic,
		[Token(Token = "0x40010BD")]
		Complex
	}
	[Token(Token = "0x2000395")]
	public enum HDRBloomMode
	{
		[Token(Token = "0x40010BF")]
		Auto,
		[Token(Token = "0x40010C0")]
		On,
		[Token(Token = "0x40010C1")]
		Off
	}
	[Token(Token = "0x2000396")]
	public enum BloomScreenBlendMode
	{
		[Token(Token = "0x40010C3")]
		Screen,
		[Token(Token = "0x40010C4")]
		Add
	}
	[Token(Token = "0x2000397")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x69D404", Offset = "0x69D404")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x69D404", Offset = "0x69D404")]
	[ExecuteInEditMode]
	public class BloomAndFlares : PostEffectsBase
	{
		[Token(Token = "0x40010C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public TweakMode34 tweakMode;

		[Token(Token = "0x40010C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BloomScreenBlendMode screenBlendMode;

		[Token(Token = "0x40010C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public HDRBloomMode hdr;

		[Token(Token = "0x40010C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool doHdr;

		[Token(Token = "0x40010C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float sepBlurSpread;

		[Token(Token = "0x40010CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float useSrcAlphaAsMask;

		[Token(Token = "0x40010CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float bloomIntensity;

		[Token(Token = "0x40010CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float bloomThreshold;

		[Token(Token = "0x40010CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int bloomBlurIterations;

		[Token(Token = "0x40010CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool lensflares;

		[Token(Token = "0x40010CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int hollywoodFlareBlurIterations;

		[Token(Token = "0x40010D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public LensflareStyle34 lensflareMode;

		[Token(Token = "0x40010D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float hollyStretchWidth;

		[Token(Token = "0x40010D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float lensflareIntensity;

		[Token(Token = "0x40010D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float lensflareThreshold;

		[Token(Token = "0x40010D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Color flareColorA;

		[Token(Token = "0x40010D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Color flareColorB;

		[Token(Token = "0x40010D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Color flareColorC;

		[Token(Token = "0x40010D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Color flareColorD;

		[Token(Token = "0x40010D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Texture2D lensFlareVignetteMask;

		[Token(Token = "0x40010D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Shader lensFlareShader;

		[Token(Token = "0x40010DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Material lensFlareMaterial;

		[Token(Token = "0x40010DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Shader vignetteShader;

		[Token(Token = "0x40010DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Material vignetteMaterial;

		[Token(Token = "0x40010DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Shader separableBlurShader;

		[Token(Token = "0x40010DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Material separableBlurMaterial;

		[Token(Token = "0x40010DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Shader addBrightStuffOneOneShader;

		[Token(Token = "0x40010E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Material addBrightStuffBlendOneOneMaterial;

		[Token(Token = "0x40010E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Shader screenBlendShader;

		[Token(Token = "0x40010E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Material screenBlend;

		[Token(Token = "0x40010E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Shader hollywoodFlaresShader;

		[Token(Token = "0x40010E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Material hollywoodFlaresMaterial;

		[Token(Token = "0x40010E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public Shader brightPassFilterShader;

		[Token(Token = "0x40010E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Material brightPassFilterMaterial;

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0xF14F1C", Offset = "0xF14F1C", VA = "0xF14F1C", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0xF15080", Offset = "0xF15080", VA = "0xF15080")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0xF160EC", Offset = "0xF160EC", VA = "0xF160EC")]
		private void AddTo(float intensity_, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0xF15E7C", Offset = "0xF15E7C", VA = "0xF15E7C")]
		private void BlendFlares(RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0xF15BCC", Offset = "0xF15BCC", VA = "0xF15BCC")]
		private void BrightFilter(float thresh, float useAlphaAsMask, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0xF15D08", Offset = "0xF15D08", VA = "0xF15D08")]
		private void Vignette(float amount, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0xF161A8", Offset = "0xF161A8", VA = "0xF161A8")]
		public BloomAndFlares()
		{
		}
	}
	[Token(Token = "0x2000398")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x69D498", Offset = "0x69D498")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x69D498", Offset = "0x69D498")]
	[ExecuteInEditMode]
	public class BloomOptimized : PostEffectsBase
	{
		[Token(Token = "0x2000399")]
		public enum Resolution
		{
			[Token(Token = "0x40010F0")]
			Low,
			[Token(Token = "0x40010F1")]
			High
		}

		[Token(Token = "0x200039A")]
		public enum BlurType
		{
			[Token(Token = "0x40010F3")]
			Standard,
			[Token(Token = "0x40010F4")]
			Sgx
		}

		[Token(Token = "0x40010E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6A2CF4", Offset = "0x6A2CF4")]
		public float threshold;

		[Token(Token = "0x40010E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6A2D0C", Offset = "0x6A2D0C")]
		public float intensity;

		[Token(Token = "0x40010E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6A2D24", Offset = "0x6A2D24")]
		public float blurSize;

		[Token(Token = "0x40010EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Resolution resolution;

		[Token(Token = "0x40010EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6A2D3C", Offset = "0x6A2D3C")]
		public int blurIterations;

		[Token(Token = "0x40010EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BlurType blurType;

		[Token(Token = "0x40010ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Shader fastBloomShader;

		[Token(Token = "0x40010EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material fastBloomMaterial;

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0xF162DC", Offset = "0xF162DC", VA = "0xF162DC", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0xF16354", Offset = "0xF16354", VA = "0xF16354")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0xF16400", Offset = "0xF16400", VA = "0xF16400")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0xF167E0", Offset = "0xF167E0", VA = "0xF167E0")]
		public BloomOptimized()
		{
		}
	}
	[Token(Token = "0x200039B")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x69D52C", Offset = "0x69D52C")]
	public class Blur : MonoBehaviour
	{
		[Token(Token = "0x40010F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int iterations;

		[Token(Token = "0x40010F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float blurSpread;

		[Token(Token = "0x40010F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Shader blurShader;

		[Token(Token = "0x40010F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Material m_Material;

		[Token(Token = "0x17000204")]
		protected Material material
		{
			[Token(Token = "0x60014BB")]
			[Address(RVA = "0xF16804", Offset = "0xF16804", VA = "0xF16804")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0xF16958", Offset = "0xF16958", VA = "0xF16958")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0xF16A5C", Offset = "0xF16A5C", VA = "0xF16A5C")]
		protected void Start()
		{
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0xF16B18", Offset = "0xF16B18", VA = "0xF16B18")]
		public void FourTapCone(RenderTexture source, RenderTexture dest, int iteration)
		{
		}

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0xF16C3C", Offset = "0xF16C3C", VA = "0xF16C3C")]
		private void DownSample4x(RenderTexture source, RenderTexture dest)
		{
		}

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0xF16D4C", Offset = "0xF16D4C", VA = "0xF16D4C")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0xF16EB4", Offset = "0xF16EB4", VA = "0xF16EB4")]
		public Blur()
		{
		}
	}
	[Token(Token = "0x200039C")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x69D578", Offset = "0x69D578")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x69D578", Offset = "0x69D578")]
	public class BlurOptimized : PostEffectsBase
	{
		[Token(Token = "0x200039D")]
		public enum BlurType
		{
			[Token(Token = "0x4001100")]
			StandardGauss,
			[Token(Token = "0x4001101")]
			SgxGauss
		}

		[Token(Token = "0x40010F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6A2D54", Offset = "0x6A2D54")]
		public int downsample;

		[Token(Token = "0x40010FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6A2D6C", Offset = "0x6A2D6C")]
		public float blurSize;

		[Token(Token = "0x40010FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6A2D84", Offset = "0x6A2D84")]
		public int blurIterations;

		[Token(Token = "0x40010FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BlurType blurType;

		[Token(Token = "0x40010FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Shader blurShader;

		[Token(Token = "0x40010FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material blurMaterial;

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0xF16ED0", Offset = "0xF16ED0", VA = "0xF16ED0", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0xF16F48", Offset = "0xF16F48", VA = "0xF16F48")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0xF16FF4", Offset = "0xF16FF4", VA = "0xF16FF4")]
		public void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0xF173A0", Offset = "0xF173A0", VA = "0xF173A0")]
		public BlurOptimized()
		{
		}
	}
	[Token(Token = "0x200039E")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x69D60C", Offset = "0x69D60C")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x69D60C", Offset = "0x69D60C")]
	public class CameraMotionBlur : PostEffectsBase
	{
		[Token(Token = "0x200039F")]
		public enum MotionBlurFilter
		{
			[Token(Token = "0x4001121")]
			CameraMotion,
			[Token(Token = "0x4001122")]
			LocalBlur,
			[Token(Token = "0x4001123")]
			Reconstruction,
			[Token(Token = "0x4001124")]
			ReconstructionDX11,
			[Token(Token = "0x4001125")]
			ReconstructionDisc
		}

		[Token(Token = "0x4001102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float MAX_RADIUS;

		[Token(Token = "0x4001103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public MotionBlurFilter filterType;

		[Token(Token = "0x4001104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool preview;

		[Token(Token = "0x4001105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 previewScale;

		[Token(Token = "0x4001106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float movementScale;

		[Token(Token = "0x4001107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float rotationScale;

		[Token(Token = "0x4001108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float maxVelocity;

		[Token(Token = "0x4001109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float minVelocity;

		[Token(Token = "0x400110A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float velocityScale;

		[Token(Token = "0x400110B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float softZDistance;

		[Token(Token = "0x400110C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int velocityDownsample;

		[Token(Token = "0x400110D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public LayerMask excludeLayers;

		[Token(Token = "0x400110E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GameObject tmpCam;

		[Token(Token = "0x400110F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Shader shader;

		[Token(Token = "0x4001110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Shader dx11MotionBlurShader;

		[Token(Token = "0x4001111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Shader replacementClear;

		[Token(Token = "0x4001112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material motionBlurMaterial;

		[Token(Token = "0x4001113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Material dx11MotionBlurMaterial;

		[Token(Token = "0x4001114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Texture2D noiseTexture;

		[Token(Token = "0x4001115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float jitter;

		[Token(Token = "0x4001116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public bool showVelocity;

		[Token(Token = "0x4001117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float showVelocityScale;

		[Token(Token = "0x4001118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Matrix4x4 currentViewProjMat;

		[Token(Token = "0x4001119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private Matrix4x4 prevViewProjMat;

		[Token(Token = "0x400111A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private int prevFrameCount;

		[Token(Token = "0x400111B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private bool wasActive;

		[Token(Token = "0x400111C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private Vector3 prevFrameForward;

		[Token(Token = "0x400111D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private Vector3 prevFrameUp;

		[Token(Token = "0x400111E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private Vector3 prevFramePos;

		[Token(Token = "0x400111F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private Camera _camera;

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0xF25ED0", Offset = "0xF25ED0", VA = "0xF25ED0")]
		private void CalculateViewProjection()
		{
		}

		[Token(Token = "0x60014C8")]
		[Address(RVA = "0xF25FDC", Offset = "0xF25FDC", VA = "0xF25FDC")]
		private new void Start()
		{
		}

		[Token(Token = "0x60014C9")]
		[Address(RVA = "0xF26178", Offset = "0xF26178", VA = "0xF26178")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0xF2624C", Offset = "0xF2624C", VA = "0xF2624C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0xF263E4", Offset = "0xF263E4", VA = "0xF263E4", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0xF2649C", Offset = "0xF2649C", VA = "0xF2649C")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0xF260CC", Offset = "0xF260CC", VA = "0xF260CC")]
		private void Remember()
		{
		}

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0xF27A70", Offset = "0xF27A70", VA = "0xF27A70")]
		private Camera GetTmpCam()
		{
			return null;
		}

		[Token(Token = "0x60014CF")]
		[Address(RVA = "0xF279E0", Offset = "0xF279E0", VA = "0xF279E0")]
		private void StartFrame()
		{
		}

		[Token(Token = "0x60014D0")]
		[Address(RVA = "0xF27A60", Offset = "0xF27A60", VA = "0xF27A60")]
		private static int divRoundUp(int x, int d)
		{
			return default(int);
		}

		[Token(Token = "0x60014D1")]
		[Address(RVA = "0xF27E24", Offset = "0xF27E24", VA = "0xF27E24")]
		public CameraMotionBlur()
		{
		}
	}
	[Token(Token = "0x20003A0")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x69D6A0", Offset = "0x69D6A0")]
	public class ColorCorrectionCurves : PostEffectsBase
	{
		[Token(Token = "0x20003A1")]
		public enum ColorCorrectionMode
		{
			[Token(Token = "0x400113F")]
			Simple,
			[Token(Token = "0x4001140")]
			Advanced
		}

		[Token(Token = "0x4001126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve redChannel;

		[Token(Token = "0x4001127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve greenChannel;

		[Token(Token = "0x4001128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve blueChannel;

		[Token(Token = "0x4001129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool useDepthCorrection;

		[Token(Token = "0x400112A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AnimationCurve zCurve;

		[Token(Token = "0x400112B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AnimationCurve depthRedChannel;

		[Token(Token = "0x400112C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AnimationCurve depthGreenChannel;

		[Token(Token = "0x400112D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AnimationCurve depthBlueChannel;

		[Token(Token = "0x400112E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material ccMaterial;

		[Token(Token = "0x400112F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Material ccDepthMaterial;

		[Token(Token = "0x4001130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material selectiveCcMaterial;

		[Token(Token = "0x4001131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Texture2D rgbChannelTex;

		[Token(Token = "0x4001132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Texture2D rgbDepthChannelTex;

		[Token(Token = "0x4001133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Texture2D zCurveTex;

		[Token(Token = "0x4001134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float saturation;

		[Token(Token = "0x4001135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public bool selectiveCc;

		[Token(Token = "0x4001136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Color selectiveFromColor;

		[Token(Token = "0x4001137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Color selectiveToColor;

		[Token(Token = "0x4001138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public ColorCorrectionMode mode;

		[Token(Token = "0x4001139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public bool updateTextures;

		[Token(Token = "0x400113A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Shader colorCorrectionCurvesShader;

		[Token(Token = "0x400113B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Shader simpleColorCorrectionCurvesShader;

		[Token(Token = "0x400113C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Shader colorCorrectionSelectiveShader;

		[Token(Token = "0x400113D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool updateTexturesOnStartup;

		[Token(Token = "0x60014D3")]
		[Address(RVA = "0xA69170", Offset = "0xA69170", VA = "0xA69170")]
		private new void Start()
		{
		}

		[Token(Token = "0x60014D4")]
		[Address(RVA = "0xA6919C", Offset = "0xA6919C", VA = "0xA6919C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0xA691A0", Offset = "0xA691A0", VA = "0xA691A0", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0xA69484", Offset = "0xA69484", VA = "0xA69484")]
		public void UpdateParameters()
		{
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0xA69844", Offset = "0xA69844", VA = "0xA69844")]
		private void UpdateTextures()
		{
		}

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0xA69848", Offset = "0xA69848", VA = "0xA69848")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0xA69B94", Offset = "0xA69B94", VA = "0xA69B94")]
		public ColorCorrectionCurves()
		{
		}
	}
	[Token(Token = "0x20003A2")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x69D6EC", Offset = "0x69D6EC")]
	[ExecuteInEditMode]
	public class ColorCorrectionLookup : PostEffectsBase
	{
		[Token(Token = "0x4001141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Shader shader;

		[Token(Token = "0x4001142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material material;

		[Token(Token = "0x4001143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Texture3D converted3DLut;

		[Token(Token = "0x4001144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string basedOnTempTex;

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0xA6A224", Offset = "0xA6A224", VA = "0xA6A224", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0xA6A298", Offset = "0xA6A298", VA = "0xA6A298")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0xA6A354", Offset = "0xA6A354", VA = "0xA6A354")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0xA6A400", Offset = "0xA6A400", VA = "0xA6A400")]
		public void SetIdentityLut()
		{
		}

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0xA6A634", Offset = "0xA6A634", VA = "0xA6A634")]
		public bool ValidDimensions(Texture2D tex2d)
		{
			return default(bool);
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0xA6A6FC", Offset = "0xA6A6FC", VA = "0xA6A6FC")]
		public void Convert(Texture2D temp2DTex, string path)
		{
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0xA6AA80", Offset = "0xA6AA80", VA = "0xA6AA80")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0xA6AC98", Offset = "0xA6AC98", VA = "0xA6AC98")]
		public ColorCorrectionLookup()
		{
		}
	}
	[Token(Token = "0x20003A3")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x69D738", Offset = "0x69D738")]
	[ExecuteInEditMode]
	public class ColorCorrectionRamp : ImageEffectBase
	{
		[Token(Token = "0x4001145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Texture textureRamp;

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0xA6ACF4", Offset = "0xA6ACF4", VA = "0xA6ACF4")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0xA6ADBC", Offset = "0xA6ADBC", VA = "0xA6ADBC")]
		public ColorCorrectionRamp()
		{
		}
	}
	[Token(Token = "0x20003A4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x69D784", Offset = "0x69D784")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x69D784", Offset = "0x69D784")]
	[ExecuteInEditMode]
	internal class ContrastEnhance : PostEffectsBase
	{
		[Token(Token = "0x4001146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float intensity;

		[Token(Token = "0x4001147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float threshold;

		[Token(Token = "0x4001148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material separableBlurMaterial;

		[Token(Token = "0x4001149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Material contrastCompositeMaterial;

		[Token(Token = "0x400114A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float blurSpread;

		[Token(Token = "0x400114B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Shader separableBlurShader;

		[Token(Token = "0x400114C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Shader contrastCompositeShader;

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0xA6B7E8", Offset = "0xA6B7E8", VA = "0xA6B7E8", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0xA6B888", Offset = "0xA6B888", VA = "0xA6B888")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0xA6BC1C", Offset = "0xA6BC1C", VA = "0xA6BC1C")]
		public ContrastEnhance()
		{
		}
	}
	[Token(Token = "0x20003A5")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x69D818", Offset = "0x69D818")]
	public class ContrastStretch : MonoBehaviour
	{
		[Token(Token = "0x400114D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float adaptationSpeed;

		[Token(Token = "0x400114E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float limitMinimum;

		[Token(Token = "0x400114F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float limitMaximum;

		[Token(Token = "0x4001150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RenderTexture[] adaptRenderTex;

		[Token(Token = "0x4001151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int curAdaptIndex;

		[Token(Token = "0x4001152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Shader shaderLum;

		[Token(Token = "0x4001153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material m_materialLum;

		[Token(Token = "0x4001154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Shader shaderReduce;

		[Token(Token = "0x4001155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material m_materialReduce;

		[Token(Token = "0x4001156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Shader shaderAdapt;

		[Token(Token = "0x4001157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material m_materialAdapt;

		[Token(Token = "0x4001158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Shader shaderApply;

		[Token(Token = "0x4001159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material m_materialApply;

		[Token(Token = "0x17000205")]
		protected Material materialLum
		{
			[Token(Token = "0x60014E7")]
			[Address(RVA = "0xA6BC34", Offset = "0xA6BC34", VA = "0xA6BC34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000206")]
		protected Material materialReduce
		{
			[Token(Token = "0x60014E8")]
			[Address(RVA = "0xA6BD10", Offset = "0xA6BD10", VA = "0xA6BD10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000207")]
		protected Material materialAdapt
		{
			[Token(Token = "0x60014E9")]
			[Address(RVA = "0xA6BDEC", Offset = "0xA6BDEC", VA = "0xA6BDEC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000208")]
		protected Material materialApply
		{
			[Token(Token = "0x60014EA")]
			[Address(RVA = "0xA6BEC8", Offset = "0xA6BEC8", VA = "0xA6BEC8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0xA6BFA4", Offset = "0xA6BFA4", VA = "0xA6BFA4")]
		private void Start()
		{
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0xA6C038", Offset = "0xA6C038", VA = "0xA6C038")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0xA6C198", Offset = "0xA6C198", VA = "0xA6C198")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0xA6C3C4", Offset = "0xA6C3C4", VA = "0xA6C3C4")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0xA6C628", Offset = "0xA6C628", VA = "0xA6C628")]
		private void CalculateAdaptation(Texture curTexture)
		{
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0xA6C824", Offset = "0xA6C824", VA = "0xA6C824")]
		public ContrastStretch()
		{
		}
	}
	[Token(Token = "0x20003A6")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x69D864", Offset = "0x69D864")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x69D864", Offset = "0x69D864")]
	internal class CreaseShading : PostEffectsBase
	{
		[Token(Token = "0x400115A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float intensity;

		[Token(Token = "0x400115B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int softness;

		[Token(Token = "0x400115C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float spread;

		[Token(Token = "0x400115D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Shader blurShader;

		[Token(Token = "0x400115E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Material blurMaterial;

		[Token(Token = "0x400115F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Shader depthFetchShader;

		[Token(Token = "0x4001160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material depthFetchMaterial;

		[Token(Token = "0x4001161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Shader creaseApplyShader;

		[Token(Token = "0x4001162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material creaseApplyMaterial;

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0xA748F0", Offset = "0xA748F0", VA = "0xA748F0", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0xA749C0", Offset = "0xA749C0", VA = "0xA749C0")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0xA74D94", Offset = "0xA74D94", VA = "0xA74D94")]
		public CreaseShading()
		{
		}
	}
	[Token(Token = "0x20003A7")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x69D8F8", Offset = "0x69D8F8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x69D8F8", Offset = "0x69D8F8")]
	public class DepthOfField : PostEffectsBase
	{
		[Token(Token = "0x20003A8")]
		public enum BlurType
		{
			[Token(Token = "0x400117C")]
			DiscBlur,
			[Token(Token = "0x400117D")]
			DX11
		}

		[Token(Token = "0x20003A9")]
		public enum BlurSampleCount
		{
			[Token(Token = "0x400117F")]
			Low,
			[Token(Token = "0x4001180")]
			Medium,
			[Token(Token = "0x4001181")]
			High
		}

		[Token(Token = "0x4001163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool visualizeFocus;

		[Token(Token = "0x4001164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float focalLength;

		[Token(Token = "0x4001165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float focalSize;

		[Token(Token = "0x4001166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float aperture;

		[Token(Token = "0x4001167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform focalTransform;

		[Token(Token = "0x4001168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float maxBlurSize;

		[Token(Token = "0x4001169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool highResolution;

		[Token(Token = "0x400116A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BlurType blurType;

		[Token(Token = "0x400116B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public BlurSampleCount blurSampleCount;

		[Token(Token = "0x400116C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool nearBlur;

		[Token(Token = "0x400116D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float foregroundOverlap;

		[Token(Token = "0x400116E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Shader dofHdrShader;

		[Token(Token = "0x400116F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material dofHdrMaterial;

		[Token(Token = "0x4001170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Shader dx11BokehShader;

		[Token(Token = "0x4001171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material dx11bokehMaterial;

		[Token(Token = "0x4001172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float dx11BokehThreshold;

		[Token(Token = "0x4001173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float dx11SpawnHeuristic;

		[Token(Token = "0x4001174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Texture2D dx11BokehTexture;

		[Token(Token = "0x4001175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float dx11BokehScale;

		[Token(Token = "0x4001176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float dx11BokehIntensity;

		[Token(Token = "0x4001177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float focalDistance01;

		[Token(Token = "0x4001178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private ComputeBuffer cbDrawArgs;

		[Token(Token = "0x4001179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private ComputeBuffer cbPoints;

		[Token(Token = "0x400117A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float internalBlurWidth;

		[Token(Token = "0x60014F4")]
		[Address(RVA = "0xA7B09C", Offset = "0xA7B09C", VA = "0xA7B09C", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0xA7B2AC", Offset = "0xA7B2AC", VA = "0xA7B2AC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0xA7B31C", Offset = "0xA7B31C", VA = "0xA7B31C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0xA7B438", Offset = "0xA7B438", VA = "0xA7B438")]
		private void ReleaseComputeResources()
		{
		}

		[Token(Token = "0x60014F8")]
		[Address(RVA = "0xA7B158", Offset = "0xA7B158", VA = "0xA7B158")]
		private void CreateComputeResources()
		{
		}

		[Token(Token = "0x60014F9")]
		[Address(RVA = "0xA7B494", Offset = "0xA7B494", VA = "0xA7B494")]
		private float FocalDistance01(float worldDist)
		{
			return default(float);
		}

		[Token(Token = "0x60014FA")]
		[Address(RVA = "0xA7B5EC", Offset = "0xA7B5EC", VA = "0xA7B5EC")]
		private void WriteCoc(RenderTexture fromTo, bool fgDilate)
		{
		}

		[Token(Token = "0x60014FB")]
		[Address(RVA = "0xA7B920", Offset = "0xA7B920", VA = "0xA7B920")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60014FC")]
		[Address(RVA = "0xA7CF64", Offset = "0xA7CF64", VA = "0xA7CF64")]
		public DepthOfField()
		{
		}
	}
	[Token(Token = "0x20003AA")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x69D98C", Offset = "0x69D98C")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x69D98C", Offset = "0x69D98C")]
	public class DepthOfFieldDeprecated : PostEffectsBase
	{
		[Token(Token = "0x20003AB")]
		public enum Dof34QualitySetting
		{
			[Token(Token = "0x40011AE")]
			OnlyBackground = 1,
			[Token(Token = "0x40011AF")]
			BackgroundAndForeground
		}

		[Token(Token = "0x20003AC")]
		public enum DofResolution
		{
			[Token(Token = "0x40011B1")]
			High = 2,
			[Token(Token = "0x40011B2")]
			Medium,
			[Token(Token = "0x40011B3")]
			Low
		}

		[Token(Token = "0x20003AD")]
		public enum DofBlurriness
		{
			[Token(Token = "0x40011B5")]
			Low = 1,
			[Token(Token = "0x40011B6")]
			High = 2,
			[Token(Token = "0x40011B7")]
			VeryHigh = 4
		}

		[Token(Token = "0x20003AE")]
		public enum BokehDestination
		{
			[Token(Token = "0x40011B9")]
			Background = 1,
			[Token(Token = "0x40011BA")]
			Foreground,
			[Token(Token = "0x40011BB")]
			BackgroundAndForeground
		}

		[Token(Token = "0x4001182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int SMOOTH_DOWNSAMPLE_PASS;

		[Token(Token = "0x4001183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static float BOKEH_EXTRA_BLUR;

		[Token(Token = "0x4001184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Dof34QualitySetting quality;

		[Token(Token = "0x4001185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DofResolution resolution;

		[Token(Token = "0x4001186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool simpleTweakMode;

		[Token(Token = "0x4001187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float focalPoint;

		[Token(Token = "0x4001188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float smoothness;

		[Token(Token = "0x4001189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float focalZDistance;

		[Token(Token = "0x400118A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float focalZStartCurve;

		[Token(Token = "0x400118B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float focalZEndCurve;

		[Token(Token = "0x400118C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float focalStartCurve;

		[Token(Token = "0x400118D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float focalEndCurve;

		[Token(Token = "0x400118E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float focalDistance01;

		[Token(Token = "0x400118F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform objectFocus;

		[Token(Token = "0x4001190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float focalSize;

		[Token(Token = "0x4001191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public DofBlurriness bluriness;

		[Token(Token = "0x4001192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float maxBlurSpread;

		[Token(Token = "0x4001193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float foregroundBlurExtrude;

		[Token(Token = "0x4001194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Shader dofBlurShader;

		[Token(Token = "0x4001195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Material dofBlurMaterial;

		[Token(Token = "0x4001196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Shader dofShader;

		[Token(Token = "0x4001197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Material dofMaterial;

		[Token(Token = "0x4001198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool visualize;

		[Token(Token = "0x4001199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public BokehDestination bokehDestination;

		[Token(Token = "0x400119A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float widthOverHeight;

		[Token(Token = "0x400119B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float oneOverBaseSize;

		[Token(Token = "0x400119C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool bokeh;

		[Token(Token = "0x400119D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		public bool bokehSupport;

		[Token(Token = "0x400119E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Shader bokehShader;

		[Token(Token = "0x400119F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Texture2D bokehTexture;

		[Token(Token = "0x40011A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float bokehScale;

		[Token(Token = "0x40011A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public float bokehIntensity;

		[Token(Token = "0x40011A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float bokehThresholdContrast;

		[Token(Token = "0x40011A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float bokehThresholdLuminance;

		[Token(Token = "0x40011A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public int bokehDownsample;

		[Token(Token = "0x40011A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Material bokehMaterial;

		[Token(Token = "0x40011A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Camera _camera;

		[Token(Token = "0x40011A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private RenderTexture foregroundTexture;

		[Token(Token = "0x40011A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private RenderTexture mediumRezWorkTexture;

		[Token(Token = "0x40011A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private RenderTexture finalDefocus;

		[Token(Token = "0x40011AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private RenderTexture lowRezWorkTexture;

		[Token(Token = "0x40011AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private RenderTexture bokehSource;

		[Token(Token = "0x40011AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private RenderTexture bokehSource2;

		[Token(Token = "0x60014FD")]
		[Address(RVA = "0xA7CFBC", Offset = "0xA7CFBC", VA = "0xA7CFBC")]
		private void CreateMaterials()
		{
		}

		[Token(Token = "0x60014FE")]
		[Address(RVA = "0xA7D0D4", Offset = "0xA7D0D4", VA = "0xA7D0D4", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0xA7D21C", Offset = "0xA7D21C", VA = "0xA7D21C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001500")]
		[Address(RVA = "0xA7D278", Offset = "0xA7D278", VA = "0xA7D278")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001501")]
		[Address(RVA = "0xA7D2FC", Offset = "0xA7D2FC", VA = "0xA7D2FC")]
		private float FocalDistance01(float worldDist)
		{
			return default(float);
		}

		[Token(Token = "0x6001502")]
		[Address(RVA = "0xA7D3EC", Offset = "0xA7D3EC", VA = "0xA7D3EC")]
		private int GetDividerBasedOnQuality()
		{
			return default(int);
		}

		[Token(Token = "0x6001503")]
		[Address(RVA = "0xA7D410", Offset = "0xA7D410", VA = "0xA7D410")]
		private int GetLowResolutionDividerBasedOnQuality(int baseDivider)
		{
			return default(int);
		}

		[Token(Token = "0x6001504")]
		[Address(RVA = "0xA7D434", Offset = "0xA7D434", VA = "0xA7D434")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001505")]
		[Address(RVA = "0xA7E30C", Offset = "0xA7E30C", VA = "0xA7E30C")]
		private void Blur(RenderTexture from, RenderTexture to, DofBlurriness iterations, int blurPass, float spread)
		{
		}

		[Token(Token = "0x6001506")]
		[Address(RVA = "0xA7EA00", Offset = "0xA7EA00", VA = "0xA7EA00")]
		private void BlurFg(RenderTexture from, RenderTexture to, DofBlurriness iterations, int blurPass, float spread)
		{
		}

		[Token(Token = "0x6001507")]
		[Address(RVA = "0xA7EE78", Offset = "0xA7EE78", VA = "0xA7EE78")]
		private void BlurHex(RenderTexture from, RenderTexture to, int blurPass, float spread, RenderTexture tmp)
		{
		}

		[Token(Token = "0x6001508")]
		[Address(RVA = "0xA7E1AC", Offset = "0xA7E1AC", VA = "0xA7E1AC")]
		private void Downsample(RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x6001509")]
		[Address(RVA = "0xA7E5B0", Offset = "0xA7E5B0", VA = "0xA7E5B0")]
		private void AddBokeh(RenderTexture bokehInfo, RenderTexture tempTex, RenderTexture finalTarget)
		{
		}

		[Token(Token = "0x600150A")]
		[Address(RVA = "0xA7ECD0", Offset = "0xA7ECD0", VA = "0xA7ECD0")]
		private void ReleaseTextures()
		{
		}

		[Token(Token = "0x600150B")]
		[Address(RVA = "0xA7DDE0", Offset = "0xA7DDE0", VA = "0xA7DDE0")]
		private void AllocateTextures(bool blurForeground, RenderTexture source, int divider, int lowTexDivider)
		{
		}

		[Token(Token = "0x600150C")]
		[Address(RVA = "0xA7F0A8", Offset = "0xA7F0A8", VA = "0xA7F0A8")]
		public DepthOfFieldDeprecated()
		{
		}
	}
	[Token(Token = "0x20003AF")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x69DA20", Offset = "0x69DA20")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x69DA20", Offset = "0x69DA20")]
	public class EdgeDetection : PostEffectsBase
	{
		[Token(Token = "0x20003B0")]
		public enum EdgeDetectMode
		{
			[Token(Token = "0x40011C8")]
			TriangleDepthNormals,
			[Token(Token = "0x40011C9")]
			RobertsCrossDepthNormals,
			[Token(Token = "0x40011CA")]
			SobelDepth,
			[Token(Token = "0x40011CB")]
			SobelDepthThin,
			[Token(Token = "0x40011CC")]
			TriangleLuminance
		}

		[Token(Token = "0x40011BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public EdgeDetectMode mode;

		[Token(Token = "0x40011BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float sensitivityDepth;

		[Token(Token = "0x40011BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float sensitivityNormals;

		[Token(Token = "0x40011BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float lumThreshold;

		[Token(Token = "0x40011C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float edgeExp;

		[Token(Token = "0x40011C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float sampleDist;

		[Token(Token = "0x40011C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float edgesOnly;

		[Token(Token = "0x40011C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color edgesOnlyBgColor;

		[Token(Token = "0x40011C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Shader edgeDetectShader;

		[Token(Token = "0x40011C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material edgeDetectMaterial;

		[Token(Token = "0x40011C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private EdgeDetectMode oldMode;

		[Token(Token = "0x600150E")]
		[Address(RVA = "0x95DD9C", Offset = "0x95DD9C", VA = "0x95DD9C", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x600150F")]
		[Address(RVA = "0x95DEF0", Offset = "0x95DEF0", VA = "0x95DEF0")]
		private new void Start()
		{
		}

		[Token(Token = "0x6001510")]
		[Address(RVA = "0x95DE34", Offset = "0x95DE34", VA = "0x95DE34")]
		private void SetCameraFlag()
		{
		}

		[Token(Token = "0x6001511")]
		[Address(RVA = "0x95DEFC", Offset = "0x95DEFC", VA = "0x95DEFC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001512")]
		[Address(RVA = "0x95DF00", Offset = "0x95DF00", VA = "0x95DF00")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001513")]
		[Address(RVA = "0x95E128", Offset = "0x95E128", VA = "0x95E128")]
		public EdgeDetection()
		{
		}
	}
	[Token(Token = "0x20003B1")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x69DAB4", Offset = "0x69DAB4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x69DAB4", Offset = "0x69DAB4")]
	[ExecuteInEditMode]
	internal class Fisheye : PostEffectsBase
	{
		[Token(Token = "0x40011CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float strengthX;

		[Token(Token = "0x40011CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float strengthY;

		[Token(Token = "0x40011CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Shader fishEyeShader;

		[Token(Token = "0x40011D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Material fisheyeMaterial;

		[Token(Token = "0x6001514")]
		[Address(RVA = "0x9691F4", Offset = "0x9691F4", VA = "0x9691F4", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6001515")]
		[Address(RVA = "0x96926C", Offset = "0x96926C", VA = "0x96926C")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001516")]
		[Address(RVA = "0x9693E4", Offset = "0x9693E4", VA = "0x9693E4")]
		public Fisheye()
		{
		}
	}
	[Token(Token = "0x20003B2")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x69DB48", Offset = "0x69DB48")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x69DB48", Offset = "0x69DB48")]
	[ExecuteInEditMode]
	internal class GlobalFog : PostEffectsBase
	{
		[Token(Token = "0x40011D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6A2D9C", Offset = "0x6A2D9C")]
		public bool distanceFog;

		[Token(Token = "0x40011D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6A2DD4", Offset = "0x6A2DD4")]
		public bool useRadialDistance;

		[Token(Token = "0x40011D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6A2E0C", Offset = "0x6A2E0C")]
		public bool heightFog;

		[Token(Token = "0x40011D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6A2E44", Offset = "0x6A2E44")]
		public float height;

		[Token(Token = "0x40011D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6A2E7C", Offset = "0x6A2E7C")]
		public float heightDensity;

		[Token(Token = "0x40011D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6A2E98", Offset = "0x6A2E98")]
		public float startDistance;

		[Token(Token = "0x40011D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Shader fogShader;

		[Token(Token = "0x40011D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material fogMaterial;

		[Token(Token = "0x6001517")]
		[Address(RVA = "0x9F4EB8", Offset = "0x9F4EB8", VA = "0x9F4EB8", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6001518")]
		[Address(RVA = "0x9F4F38", Offset = "0x9F4F38", VA = "0x9F4F38")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001519")]
		[Address(RVA = "0x9F5620", Offset = "0x9F5620", VA = "0x9F5620")]
		private static void CustomGraphicsBlit(RenderTexture source, RenderTexture dest, Material fxMaterial, int passNr)
		{
		}

		[Token(Token = "0x600151A")]
		[Address(RVA = "0x9F578C", Offset = "0x9F578C", VA = "0x9F578C")]
		public GlobalFog()
		{
		}
	}
	[Token(Token = "0x20003B3")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x69DBDC", Offset = "0x69DBDC")]
	public class Grayscale : ImageEffectBase
	{
		[Token(Token = "0x40011D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Texture textureRamp;

		[Token(Token = "0x40011DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float rampOffset;

		[Token(Token = "0x600151B")]
		[Address(RVA = "0x9F5BB4", Offset = "0x9F5BB4", VA = "0x9F5BB4")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600151C")]
		[Address(RVA = "0x9F5D80", Offset = "0x9F5D80", VA = "0x9F5D80")]
		public Grayscale()
		{
		}
	}
	[Token(Token = "0x20003B4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x69DC28", Offset = "0x69DC28")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x69DC28", Offset = "0x69DC28")]
	public class ImageEffectBase : MonoBehaviour
	{
		[Token(Token = "0x40011DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Shader shader;

		[Token(Token = "0x40011DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material m_Material;

		[Token(Token = "0x17000209")]
		protected Material material
		{
			[Token(Token = "0x600151E")]
			[Address(RVA = "0x9F5CA4", Offset = "0x9F5CA4", VA = "0x9F5CA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600151D")]
		[Address(RVA = "0x9FD7F4", Offset = "0x9FD7F4", VA = "0x9FD7F4", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x600151F")]
		[Address(RVA = "0x9FD8A0", Offset = "0x9FD8A0", VA = "0x9FD8A0", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001520")]
		[Address(RVA = "0x9F5D88", Offset = "0x9F5D88", VA = "0x9F5D88")]
		public ImageEffectBase()
		{
		}
	}
	[Token(Token = "0x20003B5")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x69DCAC", Offset = "0x69DCAC")]
	public class ImageEffects
	{
		[Token(Token = "0x6001521")]
		[Address(RVA = "0x9FD94C", Offset = "0x9FD94C", VA = "0x9FD94C")]
		public static void RenderDistortion(Material material, RenderTexture source, RenderTexture destination, float angle, Vector2 center, Vector2 radius)
		{
		}

		[Token(Token = "0x6001522")]
		[Address(RVA = "0x9FDB98", Offset = "0x9FDB98", VA = "0x9FDB98")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6AB224", Offset = "0x6AB224")]
		public static void Blit(RenderTexture source, RenderTexture dest)
		{
		}

		[Token(Token = "0x6001523")]
		[Address(RVA = "0x9FDC0C", Offset = "0x9FDC0C", VA = "0x9FDC0C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6AB25C", Offset = "0x6AB25C")]
		public static void BlitWithMaterial(Material material, RenderTexture source, RenderTexture dest)
		{
		}

		[Token(Token = "0x6001524")]
		[Address(RVA = "0x9FDC88", Offset = "0x9FDC88", VA = "0x9FDC88")]
		public ImageEffects()
		{
		}
	}
	[Token(Token = "0x20003B6")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x69DCE4", Offset = "0x69DCE4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x69DCE4", Offset = "0x69DCE4")]
	public class MotionBlur : ImageEffectBase
	{
		[Token(Token = "0x40011DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float blurAmount;

		[Token(Token = "0x40011DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool extraBlur;

		[Token(Token = "0x40011DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RenderTexture accumTexture;

		[Token(Token = "0x6001525")]
		[Address(RVA = "0xC742A8", Offset = "0xC742A8", VA = "0xC742A8", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001526")]
		[Address(RVA = "0xC742F0", Offset = "0xC742F0", VA = "0xC742F0", Slot = "5")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001527")]
		[Address(RVA = "0xC74364", Offset = "0xC74364", VA = "0xC74364")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001528")]
		[Address(RVA = "0xC7470C", Offset = "0xC7470C", VA = "0xC7470C")]
		public MotionBlur()
		{
		}
	}
	[Token(Token = "0x20003B7")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x69DD78", Offset = "0x69DD78")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x69DD78", Offset = "0x69DD78")]
	public class NoiseAndGrain : PostEffectsBase
	{
		[Token(Token = "0x40011E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float intensityMultiplier;

		[Token(Token = "0x40011E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float generalIntensity;

		[Token(Token = "0x40011E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float blackIntensity;

		[Token(Token = "0x40011E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float whiteIntensity;

		[Token(Token = "0x40011E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float midGrey;

		[Token(Token = "0x40011E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool dx11Grain;

		[Token(Token = "0x40011E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float softness;

		[Token(Token = "0x40011E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool monochrome;

		[Token(Token = "0x40011E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 intensities;

		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 tiling;

		[Token(Token = "0x40011EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float monochromeTiling;

		[Token(Token = "0x40011EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public FilterMode filterMode;

		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture2D noiseTexture;

		[Token(Token = "0x40011ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Shader noiseShader;

		[Token(Token = "0x40011EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material noiseMaterial;

		[Token(Token = "0x40011EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Shader dx11NoiseShader;

		[Token(Token = "0x40011F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Material dx11NoiseMaterial;

		[Token(Token = "0x40011F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float TILE_AMOUNT;

		[Token(Token = "0x6001529")]
		[Address(RVA = "0xC78A28", Offset = "0xC78A28", VA = "0xC78A28", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x600152A")]
		[Address(RVA = "0xC78AD8", Offset = "0xC78AD8", VA = "0xC78AD8")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600152B")]
		[Address(RVA = "0xC792DC", Offset = "0xC792DC", VA = "0xC792DC")]
		private static void DrawNoiseQuadGrid(RenderTexture source, RenderTexture dest, Material fxMaterial, Texture2D noise, int passNr)
		{
		}

		[Token(Token = "0x600152C")]
		[Address(RVA = "0xC79630", Offset = "0xC79630", VA = "0xC79630")]
		public NoiseAndGrain()
		{
		}
	}
	[Token(Token = "0x20003B8")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x69DE0C", Offset = "0x69DE0C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x69DE0C", Offset = "0x69DE0C")]
	public class NoiseAndScratches : MonoBehaviour
	{
		[Token(Token = "0x40011F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool monochrome;

		[Token(Token = "0x40011F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool rgbFallback;

		[Token(Token = "0x40011F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float grainIntensityMin;

		[Token(Token = "0x40011F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float grainIntensityMax;

		[Token(Token = "0x40011F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float grainSize;

		[Token(Token = "0x40011F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float scratchIntensityMin;

		[Token(Token = "0x40011F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float scratchIntensityMax;

		[Token(Token = "0x40011F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float scratchFPS;

		[Token(Token = "0x40011FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float scratchJitter;

		[Token(Token = "0x40011FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Texture grainTexture;

		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Texture scratchTexture;

		[Token(Token = "0x40011FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Shader shaderRGB;

		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Shader shaderYUV;

		[Token(Token = "0x40011FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Material m_MaterialRGB;

		[Token(Token = "0x4001200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material m_MaterialYUV;

		[Token(Token = "0x4001201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float scratchTimeLeft;

		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float scratchX;

		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float scratchY;

		[Token(Token = "0x1700020A")]
		protected Material material
		{
			[Token(Token = "0x600152F")]
			[Address(RVA = "0xC79818", Offset = "0xC79818", VA = "0xC79818")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600152E")]
		[Address(RVA = "0xC796C4", Offset = "0xC796C4", VA = "0xC796C4")]
		protected void Start()
		{
		}

		[Token(Token = "0x6001530")]
		[Address(RVA = "0xC79994", Offset = "0xC79994", VA = "0xC79994")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x6001531")]
		[Address(RVA = "0xC79A94", Offset = "0xC79A94", VA = "0xC79A94")]
		private void SanitizeParameters()
		{
		}

		[Token(Token = "0x6001532")]
		[Address(RVA = "0xC79B88", Offset = "0xC79B88", VA = "0xC79B88")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001533")]
		[Address(RVA = "0xC79F08", Offset = "0xC79F08", VA = "0xC79F08")]
		public NoiseAndScratches()
		{
		}
	}
	[Token(Token = "0x20003B9")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x69DEA0", Offset = "0x69DEA0")]
	[ExecuteInEditMode]
	public class PostEffectsBase : MonoBehaviour
	{
		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool supportHDRTextures;

		[Token(Token = "0x4001205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		protected bool supportDX11;

		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		protected bool isSupported;

		[Token(Token = "0x6001534")]
		[Address(RVA = "0xA07660", Offset = "0xA07660", VA = "0xA07660")]
		protected Material CheckShaderAndCreateMaterial(Shader s, Material m2Create)
		{
			return null;
		}

		[Token(Token = "0x6001535")]
		[Address(RVA = "0xA07AB8", Offset = "0xA07AB8", VA = "0xA07AB8")]
		protected Material CreateMaterial(Shader s, Material m2Create)
		{
			return null;
		}

		[Token(Token = "0x6001536")]
		[Address(RVA = "0xA07CC8", Offset = "0xA07CC8", VA = "0xA07CC8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001537")]
		[Address(RVA = "0xA07CD4", Offset = "0xA07CD4", VA = "0xA07CD4")]
		protected bool CheckSupport()
		{
			return default(bool);
		}

		[Token(Token = "0x6001538")]
		[Address(RVA = "0xA07DEC", Offset = "0xA07DEC", VA = "0xA07DEC", Slot = "4")]
		public virtual bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6001539")]
		[Address(RVA = "0xA07EB0", Offset = "0xA07EB0", VA = "0xA07EB0")]
		protected void Start()
		{
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0xA07CDC", Offset = "0xA07CDC", VA = "0xA07CDC")]
		protected bool CheckSupport(bool needDepth)
		{
			return default(bool);
		}

		[Token(Token = "0x600153B")]
		[Address(RVA = "0xA07EBC", Offset = "0xA07EBC", VA = "0xA07EBC")]
		protected bool CheckSupport(bool needDepth, bool needHdr)
		{
			return default(bool);
		}

		[Token(Token = "0x600153C")]
		[Address(RVA = "0xA07F18", Offset = "0xA07F18", VA = "0xA07F18")]
		public bool Dx11Support()
		{
			return default(bool);
		}

		[Token(Token = "0x600153D")]
		[Address(RVA = "0xA07F20", Offset = "0xA07F20", VA = "0xA07F20")]
		protected void ReportAutoDisable()
		{
		}

		[Token(Token = "0x600153E")]
		[Address(RVA = "0xA07FDC", Offset = "0xA07FDC", VA = "0xA07FDC")]
		private bool CheckShader(Shader s)
		{
			return default(bool);
		}

		[Token(Token = "0x600153F")]
		[Address(RVA = "0xA07A8C", Offset = "0xA07A8C", VA = "0xA07A8C")]
		protected void NotSupported()
		{
		}

		[Token(Token = "0x6001540")]
		[Address(RVA = "0xA08250", Offset = "0xA08250", VA = "0xA08250")]
		protected void DrawBorder(RenderTexture dest, Material material)
		{
		}

		[Token(Token = "0x6001541")]
		[Address(RVA = "0xA085CC", Offset = "0xA085CC", VA = "0xA085CC")]
		public PostEffectsBase()
		{
		}
	}
	[Token(Token = "0x20003BA")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x69DF10", Offset = "0x69DF10")]
	internal class PostEffectsHelper : MonoBehaviour
	{
		[Token(Token = "0x6001542")]
		[Address(RVA = "0xA085E0", Offset = "0xA085E0", VA = "0xA085E0")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0xA08654", Offset = "0xA08654", VA = "0xA08654")]
		private static void DrawLowLevelPlaneAlignedWithCamera(float dist, RenderTexture source, RenderTexture dest, Material material, Camera cameraForProjectionMatrix)
		{
		}

		[Token(Token = "0x6001544")]
		[Address(RVA = "0xA088AC", Offset = "0xA088AC", VA = "0xA088AC")]
		private static void DrawBorder(RenderTexture dest, Material material)
		{
		}

		[Token(Token = "0x6001545")]
		[Address(RVA = "0xA08C24", Offset = "0xA08C24", VA = "0xA08C24")]
		private static void DrawLowLevelQuad(float x1, float x2, float y1, float y2, RenderTexture source, RenderTexture dest, Material material)
		{
		}

		[Token(Token = "0x6001546")]
		[Address(RVA = "0xA08DCC", Offset = "0xA08DCC", VA = "0xA08DCC")]
		public PostEffectsHelper()
		{
		}
	}
	[Token(Token = "0x20003BB")]
	internal class Quads
	{
		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Mesh[] meshes;

		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int currentQuads;

		[Token(Token = "0x6001547")]
		[Address(RVA = "0xA0A824", Offset = "0xA0A824", VA = "0xA0A824")]
		private static bool HasMeshes()
		{
			return default(bool);
		}

		[Token(Token = "0x6001548")]
		[Address(RVA = "0xA0A950", Offset = "0xA0A950", VA = "0xA0A950")]
		public static void Cleanup()
		{
		}

		[Token(Token = "0x6001549")]
		[Address(RVA = "0xA0AB48", Offset = "0xA0AB48", VA = "0xA0AB48")]
		public static Mesh[] GetMeshes(int totalWidth, int totalHeight)
		{
			return null;
		}

		[Token(Token = "0x600154A")]
		[Address(RVA = "0xA0ADE4", Offset = "0xA0ADE4", VA = "0xA0ADE4")]
		private static Mesh GetMesh(int triCount, int triOffset, int totalWidth, int totalHeight)
		{
			return null;
		}

		[Token(Token = "0x600154B")]
		[Address(RVA = "0xA0B1A4", Offset = "0xA0B1A4", VA = "0xA0B1A4")]
		public Quads()
		{
		}
	}
	[Token(Token = "0x20003BC")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x69DF80", Offset = "0x69DF80")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x69DF80", Offset = "0x69DF80")]
	public class ScreenOverlay : PostEffectsBase
	{
		[Token(Token = "0x20003BD")]
		public enum OverlayBlendMode
		{
			[Token(Token = "0x400120F")]
			Additive,
			[Token(Token = "0x4001210")]
			ScreenBlend,
			[Token(Token = "0x4001211")]
			Multiply,
			[Token(Token = "0x4001212")]
			Overlay,
			[Token(Token = "0x4001213")]
			AlphaBlend
		}

		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public OverlayBlendMode blendMode;

		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float intensity;

		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Texture2D texture;

		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Shader overlayShader;

		[Token(Token = "0x400120D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material overlayMaterial;

		[Token(Token = "0x600154D")]
		[Address(RVA = "0xA1247C", Offset = "0xA1247C", VA = "0xA1247C", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x600154E")]
		[Address(RVA = "0xA124E8", Offset = "0xA124E8", VA = "0xA124E8")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600154F")]
		[Address(RVA = "0xA12670", Offset = "0xA12670", VA = "0xA12670")]
		public ScreenOverlay()
		{
		}
	}
	[Token(Token = "0x20003BE")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x69E014", Offset = "0x69E014")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x69E014", Offset = "0x69E014")]
	[ExecuteInEditMode]
	internal class ScreenSpaceAmbientObscurance : PostEffectsBase
	{
		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6A2ED0", Offset = "0x6A2ED0")]
		public float intensity;

		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6A2EE8", Offset = "0x6A2EE8")]
		public float radius;

		[Token(Token = "0x4001216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6A2F04", Offset = "0x6A2F04")]
		public int blurIterations;

		[Token(Token = "0x4001217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6A2F1C", Offset = "0x6A2F1C")]
		public float blurFilterDistance;

		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6A2F34", Offset = "0x6A2F34")]
		public int downsample;

		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Texture2D rand;

		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Shader aoShader;

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material aoMaterial;

		[Token(Token = "0x6001550")]
		[Address(RVA = "0xA12690", Offset = "0xA12690", VA = "0xA12690", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6001551")]
		[Address(RVA = "0xA12704", Offset = "0xA12704", VA = "0xA12704")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001552")]
		[Address(RVA = "0xA127B0", Offset = "0xA127B0", VA = "0xA127B0")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0xA12DA0", Offset = "0xA12DA0", VA = "0xA12DA0")]
		public ScreenSpaceAmbientObscurance()
		{
		}
	}
	[Token(Token = "0x20003BF")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x69E0A8", Offset = "0x69E0A8")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x69E0A8", Offset = "0x69E0A8")]
	public class ScreenSpaceAmbientOcclusion : MonoBehaviour
	{
		[Token(Token = "0x20003C0")]
		public enum SSAOSamples
		{
			[Token(Token = "0x4001228")]
			Low,
			[Token(Token = "0x4001229")]
			Medium,
			[Token(Token = "0x400122A")]
			High
		}

		[Token(Token = "0x400121C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m_Radius;

		[Token(Token = "0x400121D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SSAOSamples m_SampleCount;

		[Token(Token = "0x400121E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_OcclusionIntensity;

		[Token(Token = "0x400121F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int m_Blur;

		[Token(Token = "0x4001220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int m_Downsampling;

		[Token(Token = "0x4001221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m_OcclusionAttenuation;

		[Token(Token = "0x4001222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_MinZ;

		[Token(Token = "0x4001223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Shader m_SSAOShader;

		[Token(Token = "0x4001224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material m_SSAOMaterial;

		[Token(Token = "0x4001225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Texture2D m_RandomTexture;

		[Token(Token = "0x4001226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_Supported;

		[Token(Token = "0x6001554")]
		[Address(RVA = "0xA12DCC", Offset = "0xA12DCC", VA = "0xA12DCC")]
		private static Material CreateMaterial(Shader shader)
		{
			return null;
		}

		[Token(Token = "0x6001555")]
		[Address(RVA = "0xA12E84", Offset = "0xA12E84", VA = "0xA12E84")]
		private static void DestroyMaterial(Material mat)
		{
		}

		[Token(Token = "0x6001556")]
		[Address(RVA = "0xA12F1C", Offset = "0xA12F1C", VA = "0xA12F1C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001557")]
		[Address(RVA = "0xA12F24", Offset = "0xA12F24", VA = "0xA12F24")]
		private void Start()
		{
		}

		[Token(Token = "0x6001558")]
		[Address(RVA = "0xA130DC", Offset = "0xA130DC", VA = "0xA130DC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001559")]
		[Address(RVA = "0xA12FF8", Offset = "0xA12FF8", VA = "0xA12FF8")]
		private void CreateMaterials()
		{
		}

		[Token(Token = "0x600155A")]
		[Address(RVA = "0xA1314C", Offset = "0xA1314C", VA = "0xA1314C")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600155B")]
		[Address(RVA = "0xA137C4", Offset = "0xA137C4", VA = "0xA137C4")]
		public ScreenSpaceAmbientOcclusion()
		{
		}
	}
	[Token(Token = "0x20003C1")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x69E13C", Offset = "0x69E13C")]
	[ExecuteInEditMode]
	public class SepiaTone : ImageEffectBase
	{
		[Token(Token = "0x600155C")]
		[Address(RVA = "0xA14818", Offset = "0xA14818", VA = "0xA14818")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600155D")]
		[Address(RVA = "0xA148A8", Offset = "0xA148A8", VA = "0xA148A8")]
		public SepiaTone()
		{
		}
	}
	[Token(Token = "0x20003C2")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x69E188", Offset = "0x69E188")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x69E188", Offset = "0x69E188")]
	[ExecuteInEditMode]
	public class SunShafts : PostEffectsBase
	{
		[Token(Token = "0x20003C3")]
		public enum SunShaftsResolution
		{
			[Token(Token = "0x400123A")]
			Low,
			[Token(Token = "0x400123B")]
			Normal,
			[Token(Token = "0x400123C")]
			High
		}

		[Token(Token = "0x20003C4")]
		public enum ShaftsScreenBlendMode
		{
			[Token(Token = "0x400123E")]
			Screen,
			[Token(Token = "0x400123F")]
			Add
		}

		[Token(Token = "0x400122B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SunShaftsResolution resolution;

		[Token(Token = "0x400122C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShaftsScreenBlendMode screenBlendMode;

		[Token(Token = "0x400122D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform sunTransform;

		[Token(Token = "0x400122E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int radialBlurIterations;

		[Token(Token = "0x400122F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Color sunColor;

		[Token(Token = "0x4001230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Color sunThreshold;

		[Token(Token = "0x4001231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float sunShaftBlurRadius;

		[Token(Token = "0x4001232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float sunShaftIntensity;

		[Token(Token = "0x4001233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float maxRadius;

		[Token(Token = "0x4001234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool useDepthTexture;

		[Token(Token = "0x4001235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Shader sunShaftsShader;

		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material sunShaftsMaterial;

		[Token(Token = "0x4001237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Shader simpleClearShader;

		[Token(Token = "0x4001238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Material simpleClearMaterial;

		[Token(Token = "0x600155E")]
		[Address(RVA = "0x14CB854", Offset = "0x14CB854", VA = "0x14CB854", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x600155F")]
		[Address(RVA = "0x14CB8F4", Offset = "0x14CB8F4", VA = "0x14CB8F4")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001560")]
		[Address(RVA = "0x14CC0DC", Offset = "0x14CC0DC", VA = "0x14CC0DC")]
		public SunShafts()
		{
		}
	}
	[Token(Token = "0x20003C5")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x69E21C", Offset = "0x69E21C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x69E21C", Offset = "0x69E21C")]
	internal class TiltShift : PostEffectsBase
	{
		[Token(Token = "0x20003C6")]
		public enum TiltShiftMode
		{
			[Token(Token = "0x4001248")]
			TiltShiftMode,
			[Token(Token = "0x4001249")]
			IrisMode
		}

		[Token(Token = "0x20003C7")]
		public enum TiltShiftQuality
		{
			[Token(Token = "0x400124B")]
			Preview,
			[Token(Token = "0x400124C")]
			Normal,
			[Token(Token = "0x400124D")]
			High
		}

		[Token(Token = "0x4001240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public TiltShiftMode mode;

		[Token(Token = "0x4001241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TiltShiftQuality quality;

		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6A2F4C", Offset = "0x6A2F4C")]
		public float blurArea;

		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6A2F64", Offset = "0x6A2F64")]
		public float maxBlurSize;

		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6A2F7C", Offset = "0x6A2F7C")]
		public int downsample;

		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Shader tiltShiftShader;

		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material tiltShiftMaterial;

		[Token(Token = "0x6001561")]
		[Address(RVA = "0x14DE668", Offset = "0x14DE668", VA = "0x14DE668", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6001562")]
		[Address(RVA = "0x14DE6E8", Offset = "0x14DE6E8", VA = "0x14DE6E8")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001563")]
		[Address(RVA = "0x14DE9A4", Offset = "0x14DE9A4", VA = "0x14DE9A4")]
		public TiltShift()
		{
		}
	}
	[Token(Token = "0x20003C8")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x69E2A0", Offset = "0x69E2A0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x69E2A0", Offset = "0x69E2A0")]
	public class Tonemapping : PostEffectsBase
	{
		[Token(Token = "0x20003C9")]
		public enum TonemapperType
		{
			[Token(Token = "0x400125C")]
			SimpleReinhard,
			[Token(Token = "0x400125D")]
			UserCurve,
			[Token(Token = "0x400125E")]
			Hable,
			[Token(Token = "0x400125F")]
			Photographic,
			[Token(Token = "0x4001260")]
			OptimizedHejiDawson,
			[Token(Token = "0x4001261")]
			AdaptiveReinhard,
			[Token(Token = "0x4001262")]
			AdaptiveReinhardAutoWhite
		}

		[Token(Token = "0x20003CA")]
		public enum AdaptiveTexSize
		{
			[Token(Token = "0x4001264")]
			Square16 = 0x10,
			[Token(Token = "0x4001265")]
			Square32 = 0x20,
			[Token(Token = "0x4001266")]
			Square64 = 0x40,
			[Token(Token = "0x4001267")]
			Square128 = 0x80,
			[Token(Token = "0x4001268")]
			Square256 = 0x100,
			[Token(Token = "0x4001269")]
			Square512 = 0x200,
			[Token(Token = "0x400126A")]
			Square1024 = 0x400
		}

		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public TonemapperType type;

		[Token(Token = "0x400124F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AdaptiveTexSize adaptiveTextureSize;

		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve remapCurve;

		[Token(Token = "0x4001251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Texture2D curveTex;

		[Token(Token = "0x4001252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float exposureAdjustment;

		[Token(Token = "0x4001253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float middleGrey;

		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float white;

		[Token(Token = "0x4001255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float adaptionSpeed;

		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Shader tonemapper;

		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool validRenderTextureFormat;

		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Material tonemapMaterial;

		[Token(Token = "0x4001259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private RenderTexture rt;

		[Token(Token = "0x400125A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private RenderTextureFormat rtFormat;

		[Token(Token = "0x6001564")]
		[Address(RVA = "0x14DFAD4", Offset = "0x14DFAD4", VA = "0x14DFAD4", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6001565")]
		[Address(RVA = "0x14DFC4C", Offset = "0x14DFC4C", VA = "0x14DFC4C")]
		public float UpdateCurve()
		{
			return default(float);
		}

		[Token(Token = "0x6001566")]
		[Address(RVA = "0x14DFF00", Offset = "0x14DFF00", VA = "0x14DFF00")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0x14E008C", Offset = "0x14E008C", VA = "0x14E008C")]
		private bool CreateInternalRenderTexture()
		{
			return default(bool);
		}

		[Token(Token = "0x6001568")]
		[Address(RVA = "0x14E0194", Offset = "0x14E0194", VA = "0x14E0194")]
		[ImageEffectTransformsToLDR]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001569")]
		[Address(RVA = "0x14E09F8", Offset = "0x14E09F8", VA = "0x14E09F8")]
		public Tonemapping()
		{
		}
	}
	[Token(Token = "0x20003CB")]
	internal class Triangles
	{
		[Token(Token = "0x400126B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Mesh[] meshes;

		[Token(Token = "0x400126C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int currentTris;

		[Token(Token = "0x600156A")]
		[Address(RVA = "0x14E3F28", Offset = "0x14E3F28", VA = "0x14E3F28")]
		private static bool HasMeshes()
		{
			return default(bool);
		}

		[Token(Token = "0x600156B")]
		[Address(RVA = "0x14E406C", Offset = "0x14E406C", VA = "0x14E406C")]
		private static void Cleanup()
		{
		}

		[Token(Token = "0x600156C")]
		[Address(RVA = "0x14E4264", Offset = "0x14E4264", VA = "0x14E4264")]
		private static Mesh[] GetMeshes(int totalWidth, int totalHeight)
		{
			return null;
		}

		[Token(Token = "0x600156D")]
		[Address(RVA = "0x14E4500", Offset = "0x14E4500", VA = "0x14E4500")]
		private static Mesh GetMesh(int triCount, int triOffset, int totalWidth, int totalHeight)
		{
			return null;
		}

		[Token(Token = "0x600156E")]
		[Address(RVA = "0x14E481C", Offset = "0x14E481C", VA = "0x14E481C")]
		public Triangles()
		{
		}
	}
	[Token(Token = "0x20003CC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x69E334", Offset = "0x69E334")]
	[ExecuteInEditMode]
	public class Twirl : ImageEffectBase
	{
		[Token(Token = "0x400126D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 radius;

		[Token(Token = "0x400126E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float angle;

		[Token(Token = "0x400126F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector2 center;

		[Token(Token = "0x6001570")]
		[Address(RVA = "0x14EA7C0", Offset = "0x14EA7C0", VA = "0x14EA7C0")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001571")]
		[Address(RVA = "0x14EA80C", Offset = "0x14EA80C", VA = "0x14EA80C")]
		public Twirl()
		{
		}
	}
	[Token(Token = "0x20003CD")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x69E380", Offset = "0x69E380")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x69E380", Offset = "0x69E380")]
	public class VignetteAndChromaticAberration : PostEffectsBase
	{
		[Token(Token = "0x20003CE")]
		public enum AberrationMode
		{
			[Token(Token = "0x400127F")]
			Simple,
			[Token(Token = "0x4001280")]
			Advanced
		}

		[Token(Token = "0x4001270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public AberrationMode mode;

		[Token(Token = "0x4001271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float intensity;

		[Token(Token = "0x4001272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float chromaticAberration;

		[Token(Token = "0x4001273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float axialAberration;

		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float blur;

		[Token(Token = "0x4001275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float blurSpread;

		[Token(Token = "0x4001276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float luminanceDependency;

		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float blurDistance;

		[Token(Token = "0x4001278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Shader vignetteShader;

		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Shader separableBlurShader;

		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Shader chromAberrationShader;

		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Material m_VignetteMaterial;

		[Token(Token = "0x400127C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material m_SeparableBlurMaterial;

		[Token(Token = "0x400127D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Material m_ChromAberrationMaterial;

		[Token(Token = "0x6001572")]
		[Address(RVA = "0x14EEC3C", Offset = "0x14EEC3C", VA = "0x14EEC3C", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6001573")]
		[Address(RVA = "0x14EED04", Offset = "0x14EED04", VA = "0x14EED04")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001574")]
		[Address(RVA = "0x14EF2D4", Offset = "0x14EF2D4", VA = "0x14EF2D4")]
		public VignetteAndChromaticAberration()
		{
		}
	}
	[Token(Token = "0x20003CF")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x69E414", Offset = "0x69E414")]
	[ExecuteInEditMode]
	public class Vortex : ImageEffectBase
	{
		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 radius;

		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float angle;

		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector2 center;

		[Token(Token = "0x6001575")]
		[Address(RVA = "0x14EF900", Offset = "0x14EF900", VA = "0x14EF900")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001576")]
		[Address(RVA = "0x14EF94C", Offset = "0x14EF94C", VA = "0x14EF94C")]
		public Vortex()
		{
		}
	}
}
namespace PixelPlay.OffScreenIndicator
{
	[Token(Token = "0x20003D0")]
	public class OffScreenIndicatorCore
	{
		[Token(Token = "0x6001577")]
		[Address(RVA = "0xAD14EC", Offset = "0xAD14EC", VA = "0xAD14EC")]
		public static Vector3 GetScreenPosition(Camera mainCamera, Vector3 targetPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001578")]
		[Address(RVA = "0xAD1504", Offset = "0xAD1504", VA = "0xAD1504")]
		public static bool IsTargetVisible(Vector3 screenPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x6001579")]
		[Address(RVA = "0xAD169C", Offset = "0xAD169C", VA = "0xAD169C")]
		public static void GetArrowIndicatorPositionAndAngle(ref Vector3 screenPosition, ref float angle, Vector3 screenCentre, Vector3 screenBounds)
		{
		}

		[Token(Token = "0x600157A")]
		[Address(RVA = "0xAD19DC", Offset = "0xAD19DC", VA = "0xAD19DC")]
		public OffScreenIndicatorCore()
		{
		}
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x20003D1")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4001284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x4001285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x4001286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x4001287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x4001288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x1700020B")]
		public bool Highlight
		{
			[Token(Token = "0x600157B")]
			[Address(RVA = "0xA6AE70", Offset = "0xA6AE70", VA = "0xA6AE70")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600157C")]
			[Address(RVA = "0xA6AE78", Offset = "0xA6AE78", VA = "0xA6AE78")]
			set
			{
			}
		}

		[Token(Token = "0x600157D")]
		[Address(RVA = "0xA6AE84", Offset = "0xA6AE84", VA = "0xA6AE84")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x600157E")]
		[Address(RVA = "0xA6B04C", Offset = "0xA6B04C", VA = "0xA6B04C", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x600157F")]
		[Address(RVA = "0xA6B074", Offset = "0xA6B074", VA = "0xA6B074", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6001580")]
		[Address(RVA = "0xA6B09C", Offset = "0xA6B09C", VA = "0xA6B09C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001581")]
		[Address(RVA = "0xA6AF4C", Offset = "0xA6AF4C", VA = "0xA6AF4C")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x6001582")]
		[Address(RVA = "0xA6B370", Offset = "0xA6B370", VA = "0xA6B370")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x20003D2")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4001289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x400128B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x400128C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x400128D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x400128E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x400128F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x1700020C")]
		public bool InRange
		{
			[Token(Token = "0x6001584")]
			[Address(RVA = "0x95A4DC", Offset = "0x95A4DC", VA = "0x95A4DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001585")]
			[Address(RVA = "0x95A4E4", Offset = "0x95A4E4", VA = "0x95A4E4")]
			set
			{
			}
		}

		[Token(Token = "0x1700020D")]
		public bool Targeted
		{
			[Token(Token = "0x6001586")]
			[Address(RVA = "0x95A660", Offset = "0x95A660", VA = "0x95A660")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001587")]
			[Address(RVA = "0x95A668", Offset = "0x95A668", VA = "0x95A668")]
			set
			{
			}
		}

		[Token(Token = "0x6001588")]
		[Address(RVA = "0x95A674", Offset = "0x95A674", VA = "0x95A674", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001589")]
		[Address(RVA = "0x95A4F0", Offset = "0x95A4F0", VA = "0x95A4F0")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0x95A7E0", Offset = "0x95A7E0", VA = "0x95A7E0")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x20003D3")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x69E460", Offset = "0x69E460")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x4001290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x4001291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x4001292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x4001293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x4001294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x4001295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x4001296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x4001297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x4001298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x4001299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x400129A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x400129B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x400129C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Collider m_targetCollider;

		[Token(Token = "0x1700020E")]
		public bool UseSpherecast
		{
			[Token(Token = "0x600158B")]
			[Address(RVA = "0x95A7E8", Offset = "0x95A7E8", VA = "0x95A7E8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600158C")]
			[Address(RVA = "0x95A7F0", Offset = "0x95A7F0", VA = "0x95A7F0")]
			set
			{
			}
		}

		[Token(Token = "0x600158D")]
		[Address(RVA = "0x95A80C", Offset = "0x95A80C", VA = "0x95A80C", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600158E")]
		[Address(RVA = "0x95AA4C", Offset = "0x95AA4C", VA = "0x95AA4C", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x600158F")]
		[Address(RVA = "0x95B364", Offset = "0x95B364", VA = "0x95B364", Slot = "7")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x6001590")]
		[Address(RVA = "0x95B7F8", Offset = "0x95B7F8", VA = "0x95B7F8", Slot = "8")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x6001591")]
		[Address(RVA = "0x95BAB8", Offset = "0x95BAB8", VA = "0x95BAB8")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x6001592")]
		[Address(RVA = "0x95ACC0", Offset = "0x95ACC0", VA = "0x95ACC0")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6001593")]
		[Address(RVA = "0x95BBA8", Offset = "0x95BBA8", VA = "0x95BBA8")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6001594")]
		[Address(RVA = "0x95C004", Offset = "0x95C004", VA = "0x95C004", Slot = "9")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x6001595")]
		[Address(RVA = "0x95C01C", Offset = "0x95C01C", VA = "0x95C01C", Slot = "10")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x6001596")]
		[Address(RVA = "0x95C024", Offset = "0x95C024", VA = "0x95C024")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x20003D4")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x400129D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x400129E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color OutlineColorOutOfRange;

		[Token(Token = "0x6001597")]
		[Address(RVA = "0x9F582C", Offset = "0x9F582C", VA = "0x9F582C")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x6001598")]
		[Address(RVA = "0x9F58E4", Offset = "0x9F58E4", VA = "0x9F58E4")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x6001599")]
		[Address(RVA = "0x9F599C", Offset = "0x9F599C", VA = "0x9F599C")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x20003D5")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x20003D6")]
		public enum CrosshairState
		{
			[Token(Token = "0x40012A6")]
			Disabled,
			[Token(Token = "0x40012A7")]
			Enabled,
			[Token(Token = "0x40012A8")]
			Targeted
		}

		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x40012A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x600159A")]
		[Address(RVA = "0x9F5A5C", Offset = "0x9F5A5C", VA = "0x9F5A5C")]
		private void Start()
		{
		}

		[Token(Token = "0x600159B")]
		[Address(RVA = "0x9F5AC8", Offset = "0x9F5AC8", VA = "0x9F5AC8")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x600159C")]
		[Address(RVA = "0x9F5B64", Offset = "0x9F5B64", VA = "0x9F5B64")]
		private void Update()
		{
		}

		[Token(Token = "0x600159D")]
		[Address(RVA = "0x9F5BAC", Offset = "0x9F5BAC", VA = "0x9F5BAC")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x20003D7")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x600159E")]
		[Address(RVA = "0xA64348", Offset = "0xA64348", VA = "0xA64348")]
		private void Start()
		{
		}

		[Token(Token = "0x600159F")]
		[Address(RVA = "0xA64434", Offset = "0xA64434", VA = "0xA64434")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60015A0")]
		[Address(RVA = "0xA64440", Offset = "0xA64440", VA = "0xA64440")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60015A1")]
		[Address(RVA = "0xA6444C", Offset = "0xA6444C", VA = "0xA6444C")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x20003D8")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x40012A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x40012AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x40012AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x60015A2")]
		[Address(RVA = "0xF173BC", Offset = "0xF173BC", VA = "0xF173BC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60015A3")]
		[Address(RVA = "0xF17410", Offset = "0xF17410", VA = "0xF17410")]
		private void Update()
		{
		}

		[Token(Token = "0x60015A4")]
		[Address(RVA = "0xF1777C", Offset = "0xF1777C", VA = "0xF1777C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60015A5")]
		[Address(RVA = "0xF17880", Offset = "0xF17880", VA = "0xF17880")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60015A6")]
		[Address(RVA = "0xF17414", Offset = "0xF17414", VA = "0xF17414")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x60015A7")]
		[Address(RVA = "0xF17984", Offset = "0xF17984", VA = "0xF17984")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x20003D9")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x20003DA")]
		public enum ContactTest
		{
			[Token(Token = "0x40012BB")]
			PerpenTest,
			[Token(Token = "0x40012BC")]
			BackwardsPress
		}

		[Token(Token = "0x40012AC")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x40012AD")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x40012AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x40012AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x40012B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x40012B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x40012B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x40012B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x40012B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x40012B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private bool _allowMultipleNearFieldInteraction;

		[Token(Token = "0x40012B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A30C4", Offset = "0x6A30C4")]
		private InteractableState <CurrentButtonState>k__BackingField;

		[Token(Token = "0x40012B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x1700020F")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x60015A8")]
			[Address(RVA = "0xF1A7FC", Offset = "0xF1A7FC", VA = "0xF1A7FC", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000210")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x60015A9")]
			[Address(RVA = "0xF1A804", Offset = "0xF1A804", VA = "0xF1A804")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000211")]
		public InteractableState CurrentButtonState
		{
			[Token(Token = "0x60015AA")]
			[Address(RVA = "0xF1A810", Offset = "0xF1A810", VA = "0xF1A810")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AB2C4", Offset = "0x6AB2C4")]
			get
			{
				return default(InteractableState);
			}
			[Token(Token = "0x60015AB")]
			[Address(RVA = "0xF1A818", Offset = "0xF1A818", VA = "0xF1A818")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AB2D4", Offset = "0x6AB2D4")]
			private set
			{
			}
		}

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0xF1A820", Offset = "0xF1A820", VA = "0xF1A820", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60015AD")]
		[Address(RVA = "0xF1A934", Offset = "0xF1A934", VA = "0xF1A934")]
		private void FireInteractionEventsOnDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool, InteractionType interactionType)
		{
		}

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0xF1AB4C", Offset = "0xF1AB4C", VA = "0xF1AB4C", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth)
		{
		}

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0xF1B100", Offset = "0xF1B100", VA = "0xF1B100")]
		private InteractableState GetUpcomingStateNearField(InteractableState oldState, InteractableCollisionDepth newCollisionDepth, bool toolIsInActionZone, bool toolIsInContactZone, bool toolIsInProximity, bool validContact, bool onPositiveSideOfInteractable)
		{
			return default(InteractableState);
		}

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0xF1B1AC", Offset = "0xF1B1AC", VA = "0xF1B1AC")]
		public void ForceResetButton()
		{
		}

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0xF1B018", Offset = "0xF1B018", VA = "0xF1B018")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0xF1B2B4", Offset = "0xF1B2B4", VA = "0xF1B2B4")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60015B3")]
		[Address(RVA = "0xF1B338", Offset = "0xF1B338", VA = "0xF1B338")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0xF1B3C4", Offset = "0xF1B3C4", VA = "0xF1B3C4")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x20003DB")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x40012BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x40012BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A30E4", Offset = "0x6A30E4")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x40012BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A30F4", Offset = "0x6A30F4")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x17000212")]
		public Collider Collider
		{
			[Token(Token = "0x60015B5")]
			[Address(RVA = "0xF1B610", Offset = "0xF1B610", VA = "0xF1B610", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AB2E4", Offset = "0x6AB2E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015B6")]
			[Address(RVA = "0xF1B618", Offset = "0xF1B618", VA = "0xF1B618")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AB2F4", Offset = "0x6AB2F4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000213")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x60015B7")]
			[Address(RVA = "0xF1B620", Offset = "0xF1B620", VA = "0xF1B620", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AB304", Offset = "0x6AB304")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015B8")]
			[Address(RVA = "0xF1B628", Offset = "0xF1B628", VA = "0xF1B628")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AB314", Offset = "0x6AB314")]
			private set
			{
			}
		}

		[Token(Token = "0x17000214")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x60015B9")]
			[Address(RVA = "0xF1B630", Offset = "0xF1B630", VA = "0xF1B630", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x60015BA")]
		[Address(RVA = "0xF1B680", Offset = "0xF1B680", VA = "0xF1B680")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015BB")]
		[Address(RVA = "0xF1B714", Offset = "0xF1B714", VA = "0xF1B714")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x20003DC")]
	public interface ColliderZone
	{
		[Token(Token = "0x17000215")]
		Collider Collider
		{
			[Token(Token = "0x60015BC")]
			get;
		}

		[Token(Token = "0x17000216")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x60015BD")]
			get;
		}

		[Token(Token = "0x17000217")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x60015BE")]
			get;
		}
	}
	[Token(Token = "0x20003DD")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x40012C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x40012C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x40012C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x40012C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x60015BF")]
		[Address(RVA = "0xF1AA94", Offset = "0xF1AA94", VA = "0xF1AA94")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x20003DE")]
	public enum InteractionType
	{
		[Token(Token = "0x40012C5")]
		Enter,
		[Token(Token = "0x40012C6")]
		Stay,
		[Token(Token = "0x40012C7")]
		Exit
	}
	[Token(Token = "0x20003DF")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x20003E0")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x40012D9")]
			Mesh,
			[Token(Token = "0x40012DA")]
			Skeleton,
			[Token(Token = "0x40012DB")]
			Both
		}

		[Token(Token = "0x20003E1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69E4C0", Offset = "0x69E4C0")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x17000223")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60015E1")]
				[Address(RVA = "0x148FA0C", Offset = "0x148FA0C", VA = "0x148FA0C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000224")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60015E3")]
				[Address(RVA = "0x148FA54", Offset = "0x148FA54", VA = "0x148FA54", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60015DE")]
			[Address(RVA = "0x148F778", Offset = "0x148F778", VA = "0x148F778")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x60015DF")]
			[Address(RVA = "0x148F7A4", Offset = "0x148F7A4", VA = "0x148F7A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60015E0")]
			[Address(RVA = "0x148F7A8", Offset = "0x148F7A8", VA = "0x148F7A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60015E2")]
			[Address(RVA = "0x148FA14", Offset = "0x148FA14", VA = "0x148FA14", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40012C8")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x40012C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x40012CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x40012CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x40012D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A3124", Offset = "0x6A3124")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x17000218")]
		public OVRHand RightHand
		{
			[Token(Token = "0x60015C0")]
			[Address(RVA = "0x9FB6BC", Offset = "0x9FB6BC", VA = "0x9FB6BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015C1")]
			[Address(RVA = "0x9FB6F4", Offset = "0x9FB6F4", VA = "0x9FB6F4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000219")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x60015C2")]
			[Address(RVA = "0x9FB764", Offset = "0x9FB764", VA = "0x9FB764")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015C3")]
			[Address(RVA = "0x9FB79C", Offset = "0x9FB79C", VA = "0x9FB79C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700021A")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x60015C4")]
			[Address(RVA = "0x9FB80C", Offset = "0x9FB80C", VA = "0x9FB80C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015C5")]
			[Address(RVA = "0x9FB844", Offset = "0x9FB844", VA = "0x9FB844")]
			private set
			{
			}
		}

		[Token(Token = "0x1700021B")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x60015C6")]
			[Address(RVA = "0x9FB8B4", Offset = "0x9FB8B4", VA = "0x9FB8B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015C7")]
			[Address(RVA = "0x9FB8EC", Offset = "0x9FB8EC", VA = "0x9FB8EC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700021C")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x60015C8")]
			[Address(RVA = "0x9FB95C", Offset = "0x9FB95C", VA = "0x9FB95C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015C9")]
			[Address(RVA = "0x9FB994", Offset = "0x9FB994", VA = "0x9FB994")]
			private set
			{
			}
		}

		[Token(Token = "0x1700021D")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x60015CA")]
			[Address(RVA = "0x9FBA04", Offset = "0x9FBA04", VA = "0x9FBA04")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015CB")]
			[Address(RVA = "0x9FBA38", Offset = "0x9FBA38", VA = "0x9FBA38")]
			private set
			{
			}
		}

		[Token(Token = "0x1700021E")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x60015CC")]
			[Address(RVA = "0x9FBAA4", Offset = "0x9FBAA4", VA = "0x9FBAA4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015CD")]
			[Address(RVA = "0x9FBAD8", Offset = "0x9FBAD8", VA = "0x9FBAD8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700021F")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x60015CE")]
			[Address(RVA = "0x9FBB44", Offset = "0x9FBB44", VA = "0x9FBB44")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015CF")]
			[Address(RVA = "0x9FBB78", Offset = "0x9FBB78", VA = "0x9FBB78")]
			private set
			{
			}
		}

		[Token(Token = "0x17000220")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x60015D0")]
			[Address(RVA = "0x9FBBE4", Offset = "0x9FBBE4", VA = "0x9FBBE4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015D1")]
			[Address(RVA = "0x9FBC18", Offset = "0x9FBC18", VA = "0x9FBC18")]
			private set
			{
			}
		}

		[Token(Token = "0x17000221")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x60015D2")]
			[Address(RVA = "0x9FBC84", Offset = "0x9FBC84", VA = "0x9FBC84")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015D3")]
			[Address(RVA = "0x9FBCB8", Offset = "0x9FBCB8", VA = "0x9FBCB8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000222")]
		public static HandsManager Instance
		{
			[Token(Token = "0x60015D4")]
			[Address(RVA = "0x9FBD24", Offset = "0x9FBD24", VA = "0x9FBD24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AB324", Offset = "0x6AB324")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015D5")]
			[Address(RVA = "0x9FBD70", Offset = "0x9FBD70", VA = "0x9FBD70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AB334", Offset = "0x6AB334")]
			private set
			{
			}
		}

		[Token(Token = "0x60015D6")]
		[Address(RVA = "0x9FBDC4", Offset = "0x9FBDC4", VA = "0x9FBDC4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0x9FC198", Offset = "0x9FC198", VA = "0x9FC198")]
		private void Update()
		{
		}

		[Token(Token = "0x60015D8")]
		[Address(RVA = "0x9FC120", Offset = "0x9FC120", VA = "0x9FC120")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AB344", Offset = "0x6AB344")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x60015D9")]
		[Address(RVA = "0x9FC220", Offset = "0x9FC220", VA = "0x9FC220")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0x9FC304", Offset = "0x9FC304", VA = "0x9FC304")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x60015DB")]
		[Address(RVA = "0x9FC4E4", Offset = "0x9FC4E4", VA = "0x9FC4E4")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x60015DC")]
		[Address(RVA = "0x9FC720", Offset = "0x9FC720", VA = "0x9FC720")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0x9FC8AC", Offset = "0x9FC8AC", VA = "0x9FC8AC")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x20003E2")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003E3")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x60015F5")]
			[Address(RVA = "0x148FC78", Offset = "0x148FC78", VA = "0x148FC78")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x40012E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x17000225")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x60015E4")]
			[Address(RVA = "0x9FECF8", Offset = "0x9FECF8", VA = "0x9FECF8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000226")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x60015E5")]
			[Address(RVA = "0x9FED00", Offset = "0x9FED00", VA = "0x9FED00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000227")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x60015E6")]
			[Address(RVA = "0x9FED08", Offset = "0x9FED08", VA = "0x9FED08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000228")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x60015E7")]
			[Address(RVA = "0x9FED10", Offset = "0x9FED10", VA = "0x9FED10", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000012")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x60015E8")]
			[Address(RVA = "0x9FED18", Offset = "0x9FED18", VA = "0x9FED18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AB3F4", Offset = "0x6AB3F4")]
			add
			{
			}
			[Token(Token = "0x60015E9")]
			[Address(RVA = "0x9FEDB8", Offset = "0x9FEDB8", VA = "0x9FEDB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AB404", Offset = "0x6AB404")]
			remove
			{
			}
		}

		[Token(Token = "0x14000013")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x60015EB")]
			[Address(RVA = "0x9FEEC8", Offset = "0x9FEEC8", VA = "0x9FEEC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AB414", Offset = "0x6AB414")]
			add
			{
			}
			[Token(Token = "0x60015EC")]
			[Address(RVA = "0x9FEF68", Offset = "0x9FEF68", VA = "0x9FEF68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AB424", Offset = "0x6AB424")]
			remove
			{
			}
		}

		[Token(Token = "0x14000014")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x60015EE")]
			[Address(RVA = "0x9FF078", Offset = "0x9FF078", VA = "0x9FF078")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AB434", Offset = "0x6AB434")]
			add
			{
			}
			[Token(Token = "0x60015EF")]
			[Address(RVA = "0x9FF118", Offset = "0x9FF118", VA = "0x9FF118")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AB444", Offset = "0x6AB444")]
			remove
			{
			}
		}

		[Token(Token = "0x60015EA")]
		[Address(RVA = "0x9FEE58", Offset = "0x9FEE58", VA = "0x9FEE58", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60015ED")]
		[Address(RVA = "0x9FF008", Offset = "0x9FF008", VA = "0x9FF008", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60015F0")]
		[Address(RVA = "0x9FF1B8", Offset = "0x9FF1B8", VA = "0x9FF1B8", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60015F1")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth);

		[Token(Token = "0x60015F2")]
		[Address(RVA = "0x9FF228", Offset = "0x9FF228", VA = "0x9FF228", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60015F3")]
		[Address(RVA = "0x9FF354", Offset = "0x9FF354", VA = "0x9FF354", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0x9FF480", Offset = "0x9FF480", VA = "0x9FF480")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x20003E4")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x40012E7")]
		None,
		[Token(Token = "0x40012E8")]
		Proximity,
		[Token(Token = "0x40012E9")]
		Contact,
		[Token(Token = "0x40012EA")]
		Action
	}
	[Token(Token = "0x20003E5")]
	public enum InteractableState
	{
		[Token(Token = "0x40012EC")]
		Default,
		[Token(Token = "0x40012ED")]
		ProximityState,
		[Token(Token = "0x40012EE")]
		ContactState,
		[Token(Token = "0x40012EF")]
		ActionState
	}
	[Token(Token = "0x20003E6")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x40012F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x40012F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x40012F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x40012F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x40012F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x60015F6")]
		[Address(RVA = "0x9FF5D8", Offset = "0x9FF5D8", VA = "0x9FF5D8")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x20003E7")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x17000229")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x60015F7")]
			[Address(RVA = "0x9FF4E0", Offset = "0x9FF4E0", VA = "0x9FF4E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0x9FF288", Offset = "0x9FF288", VA = "0x9FF288")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60015F9")]
		[Address(RVA = "0x9FF3B4", Offset = "0x9FF3B4", VA = "0x9FF3B4")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0x9FF544", Offset = "0x9FF544", VA = "0x9FF544")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x20003E8")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x20003E9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69E4D0", Offset = "0x69E4D0")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x40012FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x40012FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x40012FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x40012FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x40012FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x4001300")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x1700022A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001604")]
				[Address(RVA = "0x14901DC", Offset = "0x14901DC", VA = "0x14901DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700022B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001606")]
				[Address(RVA = "0x1490224", Offset = "0x1490224", VA = "0x1490224", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001600")]
			[Address(RVA = "0x148FCC4", Offset = "0x148FCC4", VA = "0x148FCC4")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6001601")]
			[Address(RVA = "0x148FCF0", Offset = "0x148FCF0", VA = "0x148FCF0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001602")]
			[Address(RVA = "0x148FD60", Offset = "0x148FD60", VA = "0x148FD60", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001603")]
			[Address(RVA = "0x148FD0C", Offset = "0x148FD0C", VA = "0x148FD0C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001605")]
			[Address(RVA = "0x14901E4", Offset = "0x14901E4", VA = "0x14901E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0xA0035C", Offset = "0xA0035C", VA = "0xA0035C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0xA003D8", Offset = "0xA003D8", VA = "0xA003D8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AB454", Offset = "0x6AB454")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x60015FE")]
		[Address(RVA = "0xA00478", Offset = "0xA00478", VA = "0xA00478")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x60015FF")]
		[Address(RVA = "0xA00560", Offset = "0xA00560", VA = "0xA00560")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x20003EA")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x4001301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x4001303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x4001304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x4001305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x4001306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x4001307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x1700022C")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x6001607")]
			[Address(RVA = "0xA00568", Offset = "0xA00568", VA = "0xA00568")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001608")]
		[Address(RVA = "0xA006E8", Offset = "0xA006E8", VA = "0xA006E8")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6001609")]
		[Address(RVA = "0xA00790", Offset = "0xA00790", VA = "0xA00790")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x600160A")]
		[Address(RVA = "0xA00838", Offset = "0xA00838", VA = "0xA00838")]
		private void Update()
		{
		}

		[Token(Token = "0x600160B")]
		[Address(RVA = "0xA00AE4", Offset = "0xA00AE4", VA = "0xA00AE4")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x600160C")]
		[Address(RVA = "0xA00B2C", Offset = "0xA00B2C", VA = "0xA00B2C")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600160D")]
		[Address(RVA = "0xA00DDC", Offset = "0xA00DDC", VA = "0xA00DDC")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x600160E")]
		[Address(RVA = "0xA00F28", Offset = "0xA00F28", VA = "0xA00F28")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x20003EB")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x20003EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69E4E0", Offset = "0x69E4E0")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001313")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001314")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001315")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x17000231")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001620")]
				[Address(RVA = "0x14C5450", Offset = "0x14C5450", VA = "0x14C5450", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000232")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001622")]
				[Address(RVA = "0x14C5498", Offset = "0x14C5498", VA = "0x14C5498", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600161D")]
			[Address(RVA = "0x14C501C", Offset = "0x14C501C", VA = "0x14C501C")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x600161E")]
			[Address(RVA = "0x14C5048", Offset = "0x14C5048", VA = "0x14C5048", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600161F")]
			[Address(RVA = "0x14C504C", Offset = "0x14C504C", VA = "0x14C504C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001621")]
			[Address(RVA = "0x14C5458", Offset = "0x14C5458", VA = "0x14C5458", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001308")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x4001309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x400130A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x400130B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x400130C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x400130D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x400130E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x400130F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x4001310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x4001311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x4001312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x1700022D")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x600160F")]
			[Address(RVA = "0x9686E0", Offset = "0x9686E0", VA = "0x9686E0", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x1700022E")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6001610")]
			[Address(RVA = "0x9686E8", Offset = "0x9686E8", VA = "0x9686E8", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x1700022F")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6001611")]
			[Address(RVA = "0x9686F0", Offset = "0x9686F0", VA = "0x9686F0", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000230")]
		public override bool EnableState
		{
			[Token(Token = "0x6001612")]
			[Address(RVA = "0x9686F8", Offset = "0x9686F8", VA = "0x9686F8", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001613")]
			[Address(RVA = "0x968724", Offset = "0x968724", VA = "0x968724", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6001614")]
		[Address(RVA = "0x968760", Offset = "0x968760", VA = "0x968760", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001615")]
		[Address(RVA = "0x968818", Offset = "0x968818", VA = "0x968818")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AB504", Offset = "0x6AB504")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x6001616")]
		[Address(RVA = "0x968890", Offset = "0x968890", VA = "0x968890")]
		private void Update()
		{
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0x968B30", Offset = "0x968B30", VA = "0x968B30")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x6001618")]
		[Address(RVA = "0x968CBC", Offset = "0x968CBC", VA = "0x968CBC")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x6001619")]
		[Address(RVA = "0x968DB4", Offset = "0x968DB4", VA = "0x968DB4", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x600161A")]
		[Address(RVA = "0x9690AC", Offset = "0x9690AC", VA = "0x9690AC", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x600161B")]
		[Address(RVA = "0x9690B0", Offset = "0x9690B0", VA = "0x9690B0", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x600161C")]
		[Address(RVA = "0x9690B4", Offset = "0x9690B4", VA = "0x9690B4")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x20003ED")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4001316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x4001317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A31B4", Offset = "0x6A31B4")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x4001318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A31C4", Offset = "0x6A31C4")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x4001319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A31D4", Offset = "0x6A31D4")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x17000233")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6001623")]
			[Address(RVA = "0x9690CC", Offset = "0x9690CC", VA = "0x9690CC", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AB5B4", Offset = "0x6AB5B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001624")]
			[Address(RVA = "0x9690D4", Offset = "0x9690D4", VA = "0x9690D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AB5C4", Offset = "0x6AB5C4")]
			set
			{
			}
		}

		[Token(Token = "0x17000234")]
		public bool EnableState
		{
			[Token(Token = "0x6001625")]
			[Address(RVA = "0x9690DC", Offset = "0x9690DC", VA = "0x9690DC", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001626")]
			[Address(RVA = "0x9690F8", Offset = "0x9690F8", VA = "0x9690F8", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000235")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6001627")]
			[Address(RVA = "0x969118", Offset = "0x969118", VA = "0x969118", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AB5D4", Offset = "0x6AB5D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001628")]
			[Address(RVA = "0x969120", Offset = "0x969120", VA = "0x969120", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AB5E4", Offset = "0x6AB5E4")]
			set
			{
			}
		}

		[Token(Token = "0x17000236")]
		public float SphereRadius
		{
			[Token(Token = "0x6001629")]
			[Address(RVA = "0x96912C", Offset = "0x96912C", VA = "0x96912C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AB5F4", Offset = "0x6AB5F4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600162A")]
			[Address(RVA = "0x969134", Offset = "0x969134", VA = "0x969134")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AB604", Offset = "0x6AB604")]
			private set
			{
			}
		}

		[Token(Token = "0x600162B")]
		[Address(RVA = "0x96913C", Offset = "0x96913C", VA = "0x96913C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600162C")]
		[Address(RVA = "0x969184", Offset = "0x969184", VA = "0x969184", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x600162D")]
		[Address(RVA = "0x969188", Offset = "0x969188", VA = "0x969188")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x20003EE")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x400131B")]
		None = 0,
		[Token(Token = "0x400131C")]
		Ray = 1,
		[Token(Token = "0x400131D")]
		Poke = 4,
		[Token(Token = "0x400131E")]
		All = -1
	}
	[Token(Token = "0x20003EF")]
	public enum ToolInputState
	{
		[Token(Token = "0x4001320")]
		Inactive,
		[Token(Token = "0x4001321")]
		PrimaryInputDown,
		[Token(Token = "0x4001322")]
		PrimaryInputDownStay,
		[Token(Token = "0x4001323")]
		PrimaryInputUp
	}
	[Token(Token = "0x20003F0")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x4001324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x4001325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x4001326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x600162E")]
		[Address(RVA = "0x9FF488", Offset = "0x9FF488", VA = "0x9FF488")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x20003F1")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A31E4", Offset = "0x6A31E4")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A31F4", Offset = "0x6A31F4")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x4001329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A3204", Offset = "0x6A3204")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x400132A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x400132B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x400132C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x400132D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x400132E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x400132F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x17000237")]
		public Transform ToolTransform
		{
			[Token(Token = "0x600162F")]
			[Address(RVA = "0x9FF69C", Offset = "0x9FF69C", VA = "0x9FF69C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000238")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x6001630")]
			[Address(RVA = "0x9FF6A4", Offset = "0x9FF6A4", VA = "0x9FF6A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AB614", Offset = "0x6AB614")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001631")]
			[Address(RVA = "0x9FF6AC", Offset = "0x9FF6AC", VA = "0x9FF6AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AB624", Offset = "0x6AB624")]
			set
			{
			}
		}

		[Token(Token = "0x17000239")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001632")]
			get;
		}

		[Token(Token = "0x1700023A")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x6001633")]
			get;
		}

		[Token(Token = "0x1700023B")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x6001634")]
			get;
		}

		[Token(Token = "0x1700023C")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6001635")]
			[Address(RVA = "0x9FF6B8", Offset = "0x9FF6B8", VA = "0x9FF6B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AB634", Offset = "0x6AB634")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001636")]
			[Address(RVA = "0x9FF6C4", Offset = "0x9FF6C4", VA = "0x9FF6C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AB644", Offset = "0x6AB644")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700023D")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x6001637")]
			[Address(RVA = "0x9FF6D0", Offset = "0x9FF6D0", VA = "0x9FF6D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AB654", Offset = "0x6AB654")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001638")]
			[Address(RVA = "0x9FF6DC", Offset = "0x9FF6DC", VA = "0x9FF6DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AB664", Offset = "0x6AB664")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700023E")]
		public abstract bool EnableState
		{
			[Token(Token = "0x600163D")]
			get;
			[Token(Token = "0x600163E")]
			set;
		}

		[Token(Token = "0x6001639")]
		[Address(RVA = "0x9FF6E8", Offset = "0x9FF6E8", VA = "0x9FF6E8")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x600163A")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x600163B")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x600163C")]
		public abstract void DeFocus();

		[Token(Token = "0x600163F")]
		public abstract void Initialize();

		[Token(Token = "0x6001640")]
		[Address(RVA = "0x9FF6F0", Offset = "0x9FF6F0", VA = "0x9FF6F0")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x6001641")]
		[Address(RVA = "0x9FF73C", Offset = "0x9FF73C", VA = "0x9FF73C")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x6001642")]
		[Address(RVA = "0x9FF790", Offset = "0x9FF790", VA = "0x9FF790", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x6001643")]
		[Address(RVA = "0x9FFA40", Offset = "0x9FFA40", VA = "0x9FFA40", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x6001644")]
		[Address(RVA = "0xA001CC", Offset = "0xA001CC", VA = "0xA001CC")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x20003F2")]
	public interface InteractableToolView
	{
		[Token(Token = "0x1700023F")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x6001645")]
			get;
		}

		[Token(Token = "0x17000240")]
		bool EnableState
		{
			[Token(Token = "0x6001647")]
			get;
			[Token(Token = "0x6001648")]
			set;
		}

		[Token(Token = "0x17000241")]
		bool ToolActivateState
		{
			[Token(Token = "0x6001649")]
			get;
			[Token(Token = "0x600164A")]
			set;
		}

		[Token(Token = "0x6001646")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x20003F3")]
	public class PinchStateModule
	{
		[Token(Token = "0x20003F4")]
		private enum PinchState
		{
			[Token(Token = "0x4001334")]
			None,
			[Token(Token = "0x4001335")]
			PinchDown,
			[Token(Token = "0x4001336")]
			PinchStay,
			[Token(Token = "0x4001337")]
			PinchUp
		}

		[Token(Token = "0x4001330")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x4001331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x4001332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x17000242")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x600164B")]
			[Address(RVA = "0xA6638C", Offset = "0xA6638C", VA = "0xA6638C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000243")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x600164C")]
			[Address(RVA = "0xA66414", Offset = "0xA66414", VA = "0xA66414")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000244")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x600164D")]
			[Address(RVA = "0xA6649C", Offset = "0xA6649C", VA = "0xA6649C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600164E")]
		[Address(RVA = "0xA66524", Offset = "0xA66524", VA = "0xA66524")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x600164F")]
		[Address(RVA = "0xA66558", Offset = "0xA66558", VA = "0xA66558")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x20003F5")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x4001338")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x4001339")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x400133A")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x400133B")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x400133C")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x400133E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6A3224", Offset = "0x6A3224")]
		private float _coneAngleDegrees;

		[Token(Token = "0x400133F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x4001340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x4001341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x4001342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x4001343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x4001344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x4001345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x4001346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x4001347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x17000245")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001650")]
			[Address(RVA = "0xA0B9A8", Offset = "0xA0B9A8", VA = "0xA0B9A8", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x17000246")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6001651")]
			[Address(RVA = "0xA0B9B0", Offset = "0xA0B9B0", VA = "0xA0B9B0", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000247")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6001652")]
			[Address(RVA = "0xA0BA24", Offset = "0xA0BA24", VA = "0xA0BA24", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000248")]
		public override bool EnableState
		{
			[Token(Token = "0x6001653")]
			[Address(RVA = "0xA0BA2C", Offset = "0xA0BA2C", VA = "0xA0BA2C", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001654")]
			[Address(RVA = "0xA0BA70", Offset = "0xA0BA70", VA = "0xA0BA70", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6001655")]
		[Address(RVA = "0xA0BAE4", Offset = "0xA0BAE4", VA = "0xA0BAE4", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001656")]
		[Address(RVA = "0xA0BB4C", Offset = "0xA0BB4C", VA = "0xA0BB4C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001657")]
		[Address(RVA = "0xA0BBF0", Offset = "0xA0BBF0", VA = "0xA0BBF0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001658")]
		[Address(RVA = "0xA0BEB4", Offset = "0xA0BEB4", VA = "0xA0BEB4")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001659")]
		[Address(RVA = "0xA0BF3C", Offset = "0xA0BF3C", VA = "0xA0BF3C", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x600165A")]
		[Address(RVA = "0xA0C30C", Offset = "0xA0C30C", VA = "0xA0C30C")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x600165B")]
		[Address(RVA = "0xA0C41C", Offset = "0xA0C41C", VA = "0xA0C41C")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x600165C")]
		[Address(RVA = "0xA0C540", Offset = "0xA0C540", VA = "0xA0C540")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x600165D")]
		[Address(RVA = "0xA0C844", Offset = "0xA0C844", VA = "0xA0C844")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x600165E")]
		[Address(RVA = "0xA0CBD8", Offset = "0xA0CBD8", VA = "0xA0CBD8", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x600165F")]
		[Address(RVA = "0xA0CCC0", Offset = "0xA0CCC0", VA = "0xA0CCC0", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6001660")]
		[Address(RVA = "0xA0CCFC", Offset = "0xA0CCFC", VA = "0xA0CCFC")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x20003F6")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4001348")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x4001349")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x400134A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x400134B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x400134C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x400134D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x400134E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x400134F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x4001350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x4001351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A3298", Offset = "0x6A3298")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x17000249")]
		public bool EnableState
		{
			[Token(Token = "0x6001661")]
			[Address(RVA = "0xA0BA54", Offset = "0xA0BA54", VA = "0xA0BA54", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001662")]
			[Address(RVA = "0xA0BA8C", Offset = "0xA0BA8C", VA = "0xA0BA8C", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1700024A")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6001663")]
			[Address(RVA = "0xA0CDF4", Offset = "0xA0CDF4", VA = "0xA0CDF4", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001664")]
			[Address(RVA = "0xA0BE78", Offset = "0xA0BE78", VA = "0xA0BE78", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x1700024B")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6001666")]
			[Address(RVA = "0xA0D054", Offset = "0xA0D054", VA = "0xA0D054", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AB674", Offset = "0x6AB674")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001667")]
			[Address(RVA = "0xA0D05C", Offset = "0xA0D05C", VA = "0xA0D05C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AB684", Offset = "0x6AB684")]
			set
			{
			}
		}

		[Token(Token = "0x6001665")]
		[Address(RVA = "0xA0CDFC", Offset = "0xA0CDFC", VA = "0xA0CDFC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001668")]
		[Address(RVA = "0xA0CC14", Offset = "0xA0CC14", VA = "0xA0CC14", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001669")]
		[Address(RVA = "0xA0D064", Offset = "0xA0D064", VA = "0xA0D064")]
		private void Update()
		{
		}

		[Token(Token = "0x600166A")]
		[Address(RVA = "0xA0D2D8", Offset = "0xA0D2D8", VA = "0xA0D2D8")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600166B")]
		[Address(RVA = "0xA0D3C8", Offset = "0xA0D3C8", VA = "0xA0D3C8")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x20003F7")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x4001352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x4001353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x4001354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x1700024C")]
		public bool UseSpherecast
		{
			[Token(Token = "0x600166C")]
			[Address(RVA = "0x95C044", Offset = "0x95C044", VA = "0x95C044")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600166D")]
			[Address(RVA = "0x95C04C", Offset = "0x95C04C", VA = "0x95C04C")]
			set
			{
			}
		}

		[Token(Token = "0x1700024D")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x600166E")]
			[Address(RVA = "0x95C0D4", Offset = "0x95C0D4", VA = "0x95C0D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600166F")]
			[Address(RVA = "0x95C0DC", Offset = "0x95C0DC", VA = "0x95C0DC")]
			set
			{
			}
		}

		[Token(Token = "0x6001670")]
		[Address(RVA = "0x95C148", Offset = "0x95C148", VA = "0x95C148")]
		private void Start()
		{
		}

		[Token(Token = "0x6001671")]
		[Address(RVA = "0x95C40C", Offset = "0x95C40C", VA = "0x95C40C")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x6001672")]
		[Address(RVA = "0x95C41C", Offset = "0x95C41C", VA = "0x95C41C")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x6001673")]
		[Address(RVA = "0x95C42C", Offset = "0x95C42C", VA = "0x95C42C")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x20003F8")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x4001355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x4001356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x6001674")]
		[Address(RVA = "0xA6CA0C", Offset = "0xA6CA0C", VA = "0xA6CA0C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001675")]
		[Address(RVA = "0xA6CA10", Offset = "0xA6CA10", VA = "0xA6CA10")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001676")]
		[Address(RVA = "0xA6CA48", Offset = "0xA6CA48", VA = "0xA6CA48")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001677")]
		[Address(RVA = "0xA6CA80", Offset = "0xA6CA80", VA = "0xA6CA80")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001678")]
		[Address(RVA = "0xA6CAB8", Offset = "0xA6CAB8", VA = "0xA6CAB8")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001679")]
		[Address(RVA = "0xA6CAF0", Offset = "0xA6CAF0", VA = "0xA6CAF0")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600167A")]
		[Address(RVA = "0xA6CB28", Offset = "0xA6CB28", VA = "0xA6CB28")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600167B")]
		[Address(RVA = "0xA6CB60", Offset = "0xA6CB60", VA = "0xA6CB60")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600167C")]
		[Address(RVA = "0xA6CBD4", Offset = "0xA6CBD4", VA = "0xA6CBD4")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600167D")]
		[Address(RVA = "0xA6CC44", Offset = "0xA6CC44", VA = "0xA6CC44")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x20003F9")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x4001357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x4001358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x600167E")]
		[Address(RVA = "0xA748A4", Offset = "0xA748A4", VA = "0xA748A4")]
		private void Start()
		{
		}

		[Token(Token = "0x600167F")]
		[Address(RVA = "0xA748A8", Offset = "0xA748A8", VA = "0xA748A8")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x6001680")]
		[Address(RVA = "0xA6CC08", Offset = "0xA6CC08", VA = "0xA6CC08")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x6001681")]
		[Address(RVA = "0xA748E8", Offset = "0xA748E8", VA = "0xA748E8")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x20003FA")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x20003FB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69E500", Offset = "0x69E500")]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001363")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001364")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001365")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x4001366")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x4001367")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x4001368")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x1700024E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600168A")]
				[Address(RVA = "0x14951EC", Offset = "0x14951EC", VA = "0x14951EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700024F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600168C")]
				[Address(RVA = "0x1495234", Offset = "0x1495234", VA = "0x1495234", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001687")]
			[Address(RVA = "0x1495000", Offset = "0x1495000", VA = "0x1495000")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001688")]
			[Address(RVA = "0x149502C", Offset = "0x149502C", VA = "0x149502C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001689")]
			[Address(RVA = "0x1495030", Offset = "0x1495030", VA = "0x1495030", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600168B")]
			[Address(RVA = "0x14951F4", Offset = "0x14951F4", VA = "0x14951F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001359")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x400135A")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x400135B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x400135D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x4001360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x4001361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x6001682")]
		[Address(RVA = "0xA60F28", Offset = "0xA60F28", VA = "0xA60F28")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001683")]
		[Address(RVA = "0xA60FD4", Offset = "0xA60FD4", VA = "0xA60FD4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001684")]
		[Address(RVA = "0xA61224", Offset = "0xA61224", VA = "0xA61224")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001685")]
		[Address(RVA = "0xA611AC", Offset = "0xA611AC", VA = "0xA611AC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AB694", Offset = "0x6AB694")]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x6001686")]
		[Address(RVA = "0xA61270", Offset = "0xA61270", VA = "0xA61270")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x20003FC")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x20003FD")]
		public enum SelectionState
		{
			[Token(Token = "0x4001370")]
			Off,
			[Token(Token = "0x4001371")]
			Selected,
			[Token(Token = "0x4001372")]
			Highlighted
		}

		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x17000250")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x600168D")]
			[Address(RVA = "0xA13E90", Offset = "0xA13E90", VA = "0xA13E90")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x600168E")]
			[Address(RVA = "0xA13E98", Offset = "0xA13E98", VA = "0xA13E98")]
			set
			{
			}
		}

		[Token(Token = "0x600168F")]
		[Address(RVA = "0xA1401C", Offset = "0xA1401C", VA = "0xA1401C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001690")]
		[Address(RVA = "0xA14220", Offset = "0xA14220", VA = "0xA14220")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001691")]
		[Address(RVA = "0xA13F20", Offset = "0xA13F20", VA = "0xA13F20")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x6001692")]
		[Address(RVA = "0xA1430C", Offset = "0xA1430C", VA = "0xA1430C")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x20003FE")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x20003FF")]
		public enum SegmentType
		{
			[Token(Token = "0x4001381")]
			Straight,
			[Token(Token = "0x4001382")]
			LeftTurn,
			[Token(Token = "0x4001383")]
			RightTurn,
			[Token(Token = "0x4001384")]
			Switch
		}

		[Token(Token = "0x4001373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x4001379")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x400137A")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x400137B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x400137C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A3378", Offset = "0x6A3378")]
		private float <StartDistance>k__BackingField;

		[Token(Token = "0x400137D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x400137F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x17000251")]
		public float StartDistance
		{
			[Token(Token = "0x6001694")]
			[Address(RVA = "0x14E0DB8", Offset = "0x14E0DB8", VA = "0x14E0DB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AB744", Offset = "0x6AB744")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001695")]
			[Address(RVA = "0x14E0DC0", Offset = "0x14E0DC0", VA = "0x14E0DC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AB754", Offset = "0x6AB754")]
			set
			{
			}
		}

		[Token(Token = "0x17000252")]
		public float GridSize
		{
			[Token(Token = "0x6001696")]
			[Address(RVA = "0x14E0DC8", Offset = "0x14E0DC8", VA = "0x14E0DC8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001697")]
			[Address(RVA = "0x14E0DD0", Offset = "0x14E0DD0", VA = "0x14E0DD0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000253")]
		public int SubDivCount
		{
			[Token(Token = "0x6001698")]
			[Address(RVA = "0x14E0DD8", Offset = "0x14E0DD8", VA = "0x14E0DD8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001699")]
			[Address(RVA = "0x14E0DE0", Offset = "0x14E0DE0", VA = "0x14E0DE0")]
			set
			{
			}
		}

		[Token(Token = "0x17000254")]
		public SegmentType Type
		{
			[Token(Token = "0x600169A")]
			[Address(RVA = "0x14E0DE8", Offset = "0x14E0DE8", VA = "0x14E0DE8")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x17000255")]
		public Pose EndPose
		{
			[Token(Token = "0x600169B")]
			[Address(RVA = "0x14E0DF0", Offset = "0x14E0DF0", VA = "0x14E0DF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000256")]
		public float Radius
		{
			[Token(Token = "0x600169C")]
			[Address(RVA = "0x14E114C", Offset = "0x14E114C", VA = "0x14E114C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000257")]
		public float SegmentLength
		{
			[Token(Token = "0x600169E")]
			[Address(RVA = "0x14E0E58", Offset = "0x14E0E58", VA = "0x14E0E58")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600169D")]
		[Address(RVA = "0x14E115C", Offset = "0x14E115C", VA = "0x14E115C")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x600169F")]
		[Address(RVA = "0x14E1174", Offset = "0x14E1174", VA = "0x14E1174")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016A0")]
		[Address(RVA = "0x14E0E98", Offset = "0x14E0E98", VA = "0x14E0E98")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x60016A1")]
		[Address(RVA = "0x14E1178", Offset = "0x14E1178", VA = "0x14E1178")]
		private void Update()
		{
		}

		[Token(Token = "0x60016A2")]
		[Address(RVA = "0x14E117C", Offset = "0x14E117C", VA = "0x14E117C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60016A3")]
		[Address(RVA = "0x14E11E4", Offset = "0x14E11E4", VA = "0x14E11E4")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x60016A4")]
		[Address(RVA = "0x14E1AAC", Offset = "0x14E1AAC", VA = "0x14E1AAC")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x60016A5")]
		[Address(RVA = "0x14E1D58", Offset = "0x14E1D58", VA = "0x14E1D58")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x2000400")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x2000401")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69E510", Offset = "0x69E510")]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001396")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001397")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001398")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x4001399")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x400139A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x17000258")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60016B4")]
				[Address(RVA = "0x149DCD8", Offset = "0x149DCD8", VA = "0x149DCD8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000259")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016B6")]
				[Address(RVA = "0x149DD20", Offset = "0x149DD20", VA = "0x149DD20", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016B1")]
			[Address(RVA = "0x149DB34", Offset = "0x149DB34", VA = "0x149DB34")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x60016B2")]
			[Address(RVA = "0x149DB60", Offset = "0x149DB60", VA = "0x149DB60", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60016B3")]
			[Address(RVA = "0x149DB64", Offset = "0x149DB64", VA = "0x149DB64", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016B5")]
			[Address(RVA = "0x149DCE0", Offset = "0x149DCE0", VA = "0x149DCE0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001385")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x4001386")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x4001387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x4001388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x4001389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x60016A6")]
		[Address(RVA = "0x14E1E28", Offset = "0x14E1E28", VA = "0x14E1E28")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016A7")]
		[Address(RVA = "0x14E1EE4", Offset = "0x14E1EE4", VA = "0x14E1EE4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60016A8")]
		[Address(RVA = "0x14E1F94", Offset = "0x14E1F94", VA = "0x14E1F94")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60016A9")]
		[Address(RVA = "0x14E210C", Offset = "0x14E210C", VA = "0x14E210C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60016AA")]
		[Address(RVA = "0x14E22D4", Offset = "0x14E22D4", VA = "0x14E22D4")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x60016AB")]
		[Address(RVA = "0x14E23BC", Offset = "0x14E23BC", VA = "0x14E23BC")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60016AC")]
		[Address(RVA = "0x14E25D0", Offset = "0x14E25D0", VA = "0x14E25D0")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x60016AD")]
		[Address(RVA = "0x14E24D0", Offset = "0x14E24D0", VA = "0x14E24D0")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x60016AE")]
		[Address(RVA = "0x14E24E4", Offset = "0x14E24E4", VA = "0x14E24E4")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x60016AF")]
		[Address(RVA = "0x14E2628", Offset = "0x14E2628", VA = "0x14E2628")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AB764", Offset = "0x6AB764")]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x60016B0")]
		[Address(RVA = "0x14E26A0", Offset = "0x14E26A0", VA = "0x14E26A0")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x2000402")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x400139B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x400139C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x1700025A")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x60016B7")]
			[Address(RVA = "0x14E2750", Offset = "0x14E2750", VA = "0x14E2750")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60016B8")]
		[Address(RVA = "0x14E2760", Offset = "0x14E2760", VA = "0x14E2760", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60016B9")]
		[Address(RVA = "0x14E2768", Offset = "0x14E2768", VA = "0x14E2768", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x60016BA")]
		[Address(RVA = "0x14E2AAC", Offset = "0x14E2AAC", VA = "0x14E2AAC")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x2000403")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x400139D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x400139E")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x400139F")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x40013A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x40013A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x40013A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x40013A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A3478", Offset = "0x6A3478")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x40013A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x40013A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x40013A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x1700025B")]
		public float Distance
		{
			[Token(Token = "0x60016BB")]
			[Address(RVA = "0x14E2BBC", Offset = "0x14E2BBC", VA = "0x14E2BBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AB814", Offset = "0x6AB814")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60016BC")]
			[Address(RVA = "0x14E2BC4", Offset = "0x14E2BC4", VA = "0x14E2BC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AB824", Offset = "0x6AB824")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700025C")]
		public float Scale
		{
			[Token(Token = "0x60016BD")]
			[Address(RVA = "0x14E2BCC", Offset = "0x14E2BCC", VA = "0x14E2BCC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60016BE")]
			[Address(RVA = "0x14E2BD4", Offset = "0x14E2BD4", VA = "0x14E2BD4")]
			set
			{
			}
		}

		[Token(Token = "0x60016BF")]
		[Address(RVA = "0x14E2764", Offset = "0x14E2764", VA = "0x14E2764", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60016C0")]
		[Address(RVA = "0x14E2BDC", Offset = "0x14E2BDC", VA = "0x14E2BDC")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x60016C1")]
		[Address(RVA = "0x14E27B0", Offset = "0x14E27B0", VA = "0x14E27B0")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x60016C2")]
		[Address(RVA = "0x14E29D4", Offset = "0x14E29D4", VA = "0x14E29D4")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x60016C3")]
		public abstract void UpdatePosition();

		[Token(Token = "0x60016C4")]
		[Address(RVA = "0x14E2B18", Offset = "0x14E2B18", VA = "0x14E2B18")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x2000404")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x2000405")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69E520", Offset = "0x69E520")]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x40013B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x40013B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x40013B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x40013B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x40013B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x40013BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x40013BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x40013BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x40013BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x1700025D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60016D2")]
				[Address(RVA = "0x149DFC0", Offset = "0x149DFC0", VA = "0x149DFC0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700025E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016D4")]
				[Address(RVA = "0x149E008", Offset = "0x149E008", VA = "0x149E008", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016CF")]
			[Address(RVA = "0x149DD28", Offset = "0x149DD28", VA = "0x149DD28")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x60016D0")]
			[Address(RVA = "0x149DD54", Offset = "0x149DD54", VA = "0x149DD54", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60016D1")]
			[Address(RVA = "0x149DD58", Offset = "0x149DD58", VA = "0x149DD58", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016D3")]
			[Address(RVA = "0x149DFC8", Offset = "0x149DFC8", VA = "0x149DFC8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40013A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x40013A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x40013AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x40013AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x40013AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x40013AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x40013AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x40013AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x40013B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x60016C6")]
		[Address(RVA = "0x14E2D7C", Offset = "0x14E2D7C", VA = "0x14E2D7C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016C7")]
		[Address(RVA = "0x14E2DDC", Offset = "0x14E2DDC", VA = "0x14E2DDC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60016C8")]
		[Address(RVA = "0x14E2EE4", Offset = "0x14E2EE4", VA = "0x14E2EE4")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60016C9")]
		[Address(RVA = "0x14E3054", Offset = "0x14E3054", VA = "0x14E3054")]
		private void Update()
		{
		}

		[Token(Token = "0x60016CA")]
		[Address(RVA = "0x14E2F44", Offset = "0x14E2F44", VA = "0x14E2F44")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x60016CB")]
		[Address(RVA = "0x14E3130", Offset = "0x14E3130", VA = "0x14E3130")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AB834", Offset = "0x6AB834")]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x60016CC")]
		[Address(RVA = "0x14E31B8", Offset = "0x14E31B8", VA = "0x14E31B8")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x60016CD")]
		[Address(RVA = "0x14E3264", Offset = "0x14E3264", VA = "0x14E3264")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x60016CE")]
		[Address(RVA = "0x14E32C4", Offset = "0x14E32C4", VA = "0x14E32C4")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x2000406")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x2000407")]
		private enum EngineSoundState
		{
			[Token(Token = "0x40013DC")]
			Start,
			[Token(Token = "0x40013DD")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x40013DE")]
			Stop
		}

		[Token(Token = "0x2000408")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69E530", Offset = "0x69E530")]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x40013E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x40013E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x40013E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x40013E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x40013E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x40013E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x1700025F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60016E7")]
				[Address(RVA = "0x149E284", Offset = "0x149E284", VA = "0x149E284", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000260")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016E9")]
				[Address(RVA = "0x149E2CC", Offset = "0x149E2CC", VA = "0x149E2CC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016E4")]
			[Address(RVA = "0x149E010", Offset = "0x149E010", VA = "0x149E010")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x60016E5")]
			[Address(RVA = "0x149E03C", Offset = "0x149E03C", VA = "0x149E03C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60016E6")]
			[Address(RVA = "0x149E040", Offset = "0x149E040", VA = "0x149E040", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016E8")]
			[Address(RVA = "0x149E28C", Offset = "0x149E28C", VA = "0x149E28C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40013BE")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x40013BF")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x40013C0")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x40013C1")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6A34D8", Offset = "0x6A34D8")]
		protected float _initialSpeed;

		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x40013C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x40013C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x40013C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x40013C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x40013CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x40013CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x40013CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x40013CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x40013CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x40013CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x40013D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x40013D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x40013D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x40013D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x40013D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x40013D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x40013D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x40013D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x40013D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x40013D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x40013DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x60016D5")]
		[Address(RVA = "0x14E3320", Offset = "0x14E3320", VA = "0x14E3320")]
		private void Start()
		{
		}

		[Token(Token = "0x60016D6")]
		[Address(RVA = "0x14E348C", Offset = "0x14E348C", VA = "0x14E348C")]
		private void Update()
		{
		}

		[Token(Token = "0x60016D7")]
		[Address(RVA = "0x14E3498", Offset = "0x14E3498", VA = "0x14E3498", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x60016D8")]
		[Address(RVA = "0x14E35E8", Offset = "0x14E35E8", VA = "0x14E35E8")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x60016D9")]
		[Address(RVA = "0x14E3400", Offset = "0x14E3400", VA = "0x14E3400")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AB8E4", Offset = "0x6AB8E4")]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x60016DA")]
		[Address(RVA = "0x14E3648", Offset = "0x14E3648", VA = "0x14E3648")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x60016DB")]
		[Address(RVA = "0x14E3584", Offset = "0x14E3584", VA = "0x14E3584")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x60016DC")]
		[Address(RVA = "0x14E3864", Offset = "0x14E3864", VA = "0x14E3864")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x60016DD")]
		[Address(RVA = "0x14E39A0", Offset = "0x14E39A0", VA = "0x14E39A0")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x60016DE")]
		[Address(RVA = "0x14E38D0", Offset = "0x14E38D0", VA = "0x14E38D0")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x60016DF")]
		[Address(RVA = "0x14E3A0C", Offset = "0x14E3A0C", VA = "0x14E3A0C")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x60016E0")]
		[Address(RVA = "0x14E3A2C", Offset = "0x14E3A2C", VA = "0x14E3A2C")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x60016E1")]
		[Address(RVA = "0x14E3AB8", Offset = "0x14E3AB8", VA = "0x14E3AB8")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x60016E2")]
		[Address(RVA = "0x14E3B70", Offset = "0x14E3B70", VA = "0x14E3B70")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x60016E3")]
		[Address(RVA = "0x14E3B80", Offset = "0x14E3B80", VA = "0x14E3B80")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x2000409")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x40013E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x40013ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x17000261")]
		public float TrackLength
		{
			[Token(Token = "0x60016EA")]
			[Address(RVA = "0x14E3BE8", Offset = "0x14E3BE8", VA = "0x14E3BE8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60016EB")]
			[Address(RVA = "0x14E3BF0", Offset = "0x14E3BF0", VA = "0x14E3BF0")]
			private set
			{
			}
		}

		[Token(Token = "0x60016EC")]
		[Address(RVA = "0x14E3BF8", Offset = "0x14E3BF8", VA = "0x14E3BF8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016ED")]
		[Address(RVA = "0x14E2C5C", Offset = "0x14E2C5C", VA = "0x14E2C5C")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x60016EE")]
		[Address(RVA = "0x14E3BFC", Offset = "0x14E3BFC", VA = "0x14E3BFC")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x60016EF")]
		[Address(RVA = "0x14E3E10", Offset = "0x14E3E10", VA = "0x14E3E10")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0x14E3F0C", Offset = "0x14E3F0C", VA = "0x14E3F0C")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x200040A")]
	public class Pose
	{
		[Token(Token = "0x40013EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x40013F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x60016F1")]
		[Address(RVA = "0xA06EB8", Offset = "0xA06EB8", VA = "0xA06EB8")]
		public Pose()
		{
		}

		[Token(Token = "0x60016F2")]
		[Address(RVA = "0xA06EFC", Offset = "0xA06EFC", VA = "0xA06EFC")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x200040B")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x200040C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69E540", Offset = "0x69E540")]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x40013FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x4001400")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x4001401")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x17000263")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60016FF")]
				[Address(RVA = "0x14849D4", Offset = "0x14849D4", VA = "0x14849D4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000264")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001701")]
				[Address(RVA = "0x1484A1C", Offset = "0x1484A1C", VA = "0x1484A1C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016FC")]
			[Address(RVA = "0x1484804", Offset = "0x1484804", VA = "0x1484804")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x60016FD")]
			[Address(RVA = "0x1484830", Offset = "0x1484830", VA = "0x1484830", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60016FE")]
			[Address(RVA = "0x1484834", Offset = "0x1484834", VA = "0x1484834", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001700")]
			[Address(RVA = "0x14849DC", Offset = "0x14849DC", VA = "0x14849DC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200040D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69E550", Offset = "0x69E550")]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001402")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001403")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001404")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4001405")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x4001406")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x4001407")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x17000265")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001705")]
				[Address(RVA = "0x1484B2C", Offset = "0x1484B2C", VA = "0x1484B2C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000266")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001707")]
				[Address(RVA = "0x1484B74", Offset = "0x1484B74", VA = "0x1484B74", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001702")]
			[Address(RVA = "0x1484A24", Offset = "0x1484A24", VA = "0x1484A24")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6001703")]
			[Address(RVA = "0x1484A50", Offset = "0x1484A50", VA = "0x1484A50", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001704")]
			[Address(RVA = "0x1484A54", Offset = "0x1484A54", VA = "0x1484A54", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001706")]
			[Address(RVA = "0x1484B34", Offset = "0x1484B34", VA = "0x1484B34", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40013F1")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x40013F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x40013F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x40013F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x40013F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x40013F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6A36C0", Offset = "0x6A36C0")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x40013F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x40013F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x40013F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x40013FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x40013FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x17000262")]
		public bool IsMoving
		{
			[Token(Token = "0x60016F3")]
			[Address(RVA = "0x14EFFFC", Offset = "0x14EFFFC", VA = "0x14EFFFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AB994", Offset = "0x6AB994")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016F4")]
			[Address(RVA = "0x14F0004", Offset = "0x14F0004", VA = "0x14F0004")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6AB9A4", Offset = "0x6AB9A4")]
			private set
			{
			}
		}

		[Token(Token = "0x60016F5")]
		[Address(RVA = "0x14F0010", Offset = "0x14F0010", VA = "0x14F0010")]
		private void Start()
		{
		}

		[Token(Token = "0x60016F6")]
		[Address(RVA = "0x14F004C", Offset = "0x14F004C", VA = "0x14F004C")]
		private void Update()
		{
		}

		[Token(Token = "0x60016F7")]
		[Address(RVA = "0x14F0130", Offset = "0x14F0130", VA = "0x14F0130")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x60016F8")]
		[Address(RVA = "0x14F01A4", Offset = "0x14F01A4", VA = "0x14F01A4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6AB9B4", Offset = "0x6AB9B4")]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x60016F9")]
		[Address(RVA = "0x14F022C", Offset = "0x14F022C", VA = "0x14F022C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6ABA14", Offset = "0x6ABA14")]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x60016FA")]
		[Address(RVA = "0x14F02E4", Offset = "0x14F02E4", VA = "0x14F02E4")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x60016FB")]
		[Address(RVA = "0x14F0350", Offset = "0x14F0350", VA = "0x14F0350")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x200040E")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x4001408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4001409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x400140A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x400140B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x400140C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6001708")]
		[Address(RVA = "0x14B5A1C", Offset = "0x14B5A1C", VA = "0x14B5A1C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001709")]
		[Address(RVA = "0x14B5A94", Offset = "0x14B5A94", VA = "0x14B5A94")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600170A")]
		[Address(RVA = "0x14B5B78", Offset = "0x14B5B78", VA = "0x14B5B78")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600170B")]
		[Address(RVA = "0x14B5CB0", Offset = "0x14B5CB0", VA = "0x14B5CB0")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600170C")]
		[Address(RVA = "0x14B5D34", Offset = "0x14B5D34", VA = "0x14B5D34")]
		private void Update()
		{
		}

		[Token(Token = "0x600170D")]
		[Address(RVA = "0x14B5E10", Offset = "0x14B5E10", VA = "0x14B5E10")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x200040F")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x400140E")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x400140F")]
		EUDT_OverlayQuad,
		[Token(Token = "0x4001410")]
		EUDT_None,
		[Token(Token = "0x4001411")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x2000410")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x2000411")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69E560", Offset = "0x69E560")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400142A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400142B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400142C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x17000267")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001721")]
				[Address(RVA = "0x1492918", Offset = "0x1492918", VA = "0x1492918", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000268")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001723")]
				[Address(RVA = "0x1492960", Offset = "0x1492960", VA = "0x1492960", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600171E")]
			[Address(RVA = "0x14926E8", Offset = "0x14926E8", VA = "0x14926E8")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x600171F")]
			[Address(RVA = "0x1492714", Offset = "0x1492714", VA = "0x1492714", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001720")]
			[Address(RVA = "0x1492718", Offset = "0x1492718", VA = "0x1492718", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001722")]
			[Address(RVA = "0x1492920", Offset = "0x1492920", VA = "0x1492920", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x4001413")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x4001414")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x4001415")]
		private const string noneID = "NoneID";

		[Token(Token = "0x4001416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x4001417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x4001418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6A3700", Offset = "0x6A3700")]
		public GameObject mainCamera;

		[Token(Token = "0x4001419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x400141A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x400141B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x400141C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x400141D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x400141E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x400141F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x4001420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6A3738", Offset = "0x6A3738")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x4001421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x4001422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x4001423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x4001424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x4001425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x4001426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x4001427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x4001428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x4001429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x600170E")]
		[Address(RVA = "0xC7FFAC", Offset = "0xC7FFAC", VA = "0xC7FFAC")]
		private void Start()
		{
		}

		[Token(Token = "0x600170F")]
		[Address(RVA = "0xC80808", Offset = "0xC80808", VA = "0xC80808")]
		private void Update()
		{
		}

		[Token(Token = "0x6001710")]
		[Address(RVA = "0xC80950", Offset = "0xC80950", VA = "0xC80950")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x6001711")]
		[Address(RVA = "0xC80A8C", Offset = "0xC80A8C", VA = "0xC80A8C")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x6001712")]
		[Address(RVA = "0xC80BC8", Offset = "0xC80BC8", VA = "0xC80BC8")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x6001713")]
		[Address(RVA = "0xC80924", Offset = "0xC80924", VA = "0xC80924")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x6001714")]
		[Address(RVA = "0xC80CA8", Offset = "0xC80CA8", VA = "0xC80CA8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6ABB14", Offset = "0x6ABB14")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x6001715")]
		[Address(RVA = "0xC80D20", Offset = "0xC80D20", VA = "0xC80D20")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x6001716")]
		[Address(RVA = "0xC80414", Offset = "0xC80414", VA = "0xC80414")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x6001717")]
		[Address(RVA = "0xC80E74", Offset = "0xC80E74", VA = "0xC80E74")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x6001718")]
		[Address(RVA = "0xC80D54", Offset = "0xC80D54", VA = "0xC80D54")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x6001719")]
		[Address(RVA = "0xC8118C", Offset = "0xC8118C", VA = "0xC8118C")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x600171A")]
		[Address(RVA = "0xC8127C", Offset = "0xC8127C", VA = "0xC8127C")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x600171B")]
		[Address(RVA = "0xC8130C", Offset = "0xC8130C", VA = "0xC8130C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ABB74", Offset = "0x6ABB74")]
		private void <Start>b__24_0(Toggle t)
		{
		}

		[Token(Token = "0x600171C")]
		[Address(RVA = "0xC81364", Offset = "0xC81364", VA = "0xC81364")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ABB84", Offset = "0x6ABB84")]
		private void <Start>b__24_1(Toggle t)
		{
		}

		[Token(Token = "0x600171D")]
		[Address(RVA = "0xC813BC", Offset = "0xC813BC", VA = "0xC813BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ABB94", Offset = "0x6ABB94")]
		private void <Start>b__24_2(Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x2000412")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x69E570", Offset = "0x69E570")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000413")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x69E5D0", Offset = "0x69E5D0")]
		private sealed class <>c
		{
			[Token(Token = "0x4001449")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400144A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x6001731")]
			[Address(RVA = "0x14C6C78", Offset = "0x14C6C78", VA = "0x14C6C78")]
			public <>c()
			{
			}

			[Token(Token = "0x6001732")]
			[Address(RVA = "0x14C6C80", Offset = "0x14C6C80", VA = "0x14C6C80")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400142D")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x400142E")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x400142F")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x4001430")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x4001431")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x4001432")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x4001433")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x4001434")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x4001435")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x4001436")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x4001437")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x4001438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4001439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x400143A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x400143B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x400143C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x400143D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x400143E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x4001440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x4001441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x4001442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x4001443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x4001444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x4001445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x4001446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x4001447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x4001448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x6001724")]
		[Address(RVA = "0x9F5D90", Offset = "0x9F5D90", VA = "0x9F5D90")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001725")]
		[Address(RVA = "0x9F5DEC", Offset = "0x9F5DEC", VA = "0x9F5DEC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001726")]
		[Address(RVA = "0x9F6280", Offset = "0x9F6280", VA = "0x9F6280")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001727")]
		[Address(RVA = "0x9F636C", Offset = "0x9F636C", VA = "0x9F636C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001728")]
		[Address(RVA = "0x9F64D0", Offset = "0x9F64D0", VA = "0x9F64D0")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x6001729")]
		[Address(RVA = "0x9F67D8", Offset = "0x9F67D8", VA = "0x9F67D8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600172A")]
		[Address(RVA = "0x9F68D0", Offset = "0x9F68D0", VA = "0x9F68D0")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x600172B")]
		[Address(RVA = "0x9F6A30", Offset = "0x9F6A30", VA = "0x9F6A30")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x600172C")]
		[Address(RVA = "0x9F6568", Offset = "0x9F6568", VA = "0x9F6568")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x600172D")]
		[Address(RVA = "0x9F65BC", Offset = "0x9F65BC", VA = "0x9F65BC")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x600172E")]
		[Address(RVA = "0x9F6124", Offset = "0x9F6124", VA = "0x9F6124")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x600172F")]
		[Address(RVA = "0x9F6B6C", Offset = "0x9F6B6C", VA = "0x9F6B6C")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x2000414")]
	public enum HandPoseId
	{
		[Token(Token = "0x400144C")]
		Default,
		[Token(Token = "0x400144D")]
		Generic,
		[Token(Token = "0x400144E")]
		PingPongBall,
		[Token(Token = "0x400144F")]
		Controller
	}
	[Token(Token = "0x2000415")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x4001450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x4001451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x4001452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x17000269")]
		public bool AllowPointing
		{
			[Token(Token = "0x6001733")]
			[Address(RVA = "0x9FAFC8", Offset = "0x9FAFC8", VA = "0x9FAFC8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700026A")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x6001734")]
			[Address(RVA = "0x9FAFD0", Offset = "0x9FAFD0", VA = "0x9FAFD0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700026B")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x6001735")]
			[Address(RVA = "0x9FAFD8", Offset = "0x9FAFD8", VA = "0x9FAFD8")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x6001736")]
		[Address(RVA = "0x9FAFE0", Offset = "0x9FAFE0", VA = "0x9FAFE0")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x2000416")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4001454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4001455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x6001737")]
		[Address(RVA = "0x14E0A28", Offset = "0x14E0A28", VA = "0x14E0A28")]
		private void Update()
		{
		}

		[Token(Token = "0x6001738")]
		[Address(RVA = "0x14E0D10", Offset = "0x14E0D10", VA = "0x14E0D10")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6001739")]
		[Address(RVA = "0x14E0D6C", Offset = "0x14E0D6C", VA = "0x14E0D6C")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x600173A")]
		[Address(RVA = "0x14E0DB0", Offset = "0x14E0DB0", VA = "0x14E0DB0")]
		public TouchController()
		{
		}
	}
}
namespace Oculus.Voice.Demo.UIShapesDemo
{
	[Token(Token = "0x2000417")]
	public class InteractionHandler : MonoBehaviour
	{
		[Token(Token = "0x4001456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6A37F0", Offset = "0x6A37F0")]
		[Multiline]
		[SerializeField]
		private string freshStateText;

		[Token(Token = "0x4001457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6A384C", Offset = "0x6A384C")]
		[SerializeField]
		private Text textArea;

		[Token(Token = "0x4001458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool showJson;

		[Token(Token = "0x4001459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6A38A8", Offset = "0x6A38A8")]
		[SerializeField]
		private AppVoiceExperience appVoiceExperience;

		[Token(Token = "0x400145A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string pendingText;

		[Token(Token = "0x600173B")]
		[Address(RVA = "0xA01020", Offset = "0xA01020", VA = "0xA01020")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600173C")]
		[Address(RVA = "0xA010EC", Offset = "0xA010EC", VA = "0xA010EC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600173D")]
		[Address(RVA = "0xA011B8", Offset = "0xA011B8", VA = "0xA011B8")]
		private void OnRequestStarted(WitRequest r)
		{
		}

		[Token(Token = "0x600173E")]
		[Address(RVA = "0xA01278", Offset = "0xA01278", VA = "0xA01278")]
		private void Update()
		{
		}

		[Token(Token = "0x600173F")]
		[Address(RVA = "0xA012D0", Offset = "0xA012D0", VA = "0xA012D0")]
		public void OnResponse(WitResponseNode response)
		{
		}

		[Token(Token = "0x6001740")]
		[Address(RVA = "0xA013C0", Offset = "0xA013C0", VA = "0xA013C0")]
		public void OnError(string error, string message)
		{
		}

		[Token(Token = "0x6001741")]
		[Address(RVA = "0xA015C8", Offset = "0xA015C8", VA = "0xA015C8")]
		public void ToggleActivation()
		{
		}

		[Token(Token = "0x6001742")]
		[Address(RVA = "0xA01628", Offset = "0xA01628", VA = "0xA01628")]
		public InteractionHandler()
		{
		}

		[Token(Token = "0x6001743")]
		[Address(RVA = "0xA01684", Offset = "0xA01684", VA = "0xA01684")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ABBF4", Offset = "0x6ABBF4")]
		private void <OnRequestStarted>b__7_0(string response)
		{
		}
	}
	[Token(Token = "0x2000418")]
	public class ColorChanger : MonoBehaviour
	{
		[Token(Token = "0x6001744")]
		[Address(RVA = "0xF2B900", Offset = "0xF2B900", VA = "0xF2B900")]
		private void SetColor(Transform trans, Color color)
		{
		}

		[Token(Token = "0x6001745")]
		[Address(RVA = "0xF2B99C", Offset = "0xF2B99C", VA = "0xF2B99C")]
		public void UpdateColor(WitResponseNode commandResult)
		{
		}

		[Token(Token = "0x6001746")]
		[Address(RVA = "0xF2BBC0", Offset = "0xF2BBC0", VA = "0xF2BBC0")]
		public void UpdateColor(string[] results)
		{
		}

		[Token(Token = "0x6001747")]
		[Address(RVA = "0xF2BA30", Offset = "0xF2BA30", VA = "0xF2BA30")]
		public void UpdateColor(string colorName, string shape)
		{
		}

		[Token(Token = "0x6001748")]
		[Address(RVA = "0xF2BBFC", Offset = "0xF2BBFC", VA = "0xF2BBFC")]
		public ColorChanger()
		{
		}
	}
	[Token(Token = "0x2000419")]
	[ExecuteAlways]
	public class Instructions : MonoBehaviour
	{
		[Token(Token = "0x200041A")]
		internal enum Step
		{
			[Token(Token = "0x400145F")]
			SetupWit,
			[Token(Token = "0x4001460")]
			MissingServerToken,
			[Token(Token = "0x4001461")]
			MissingClientToken,
			[Token(Token = "0x4001462")]
			AddConfig,
			[Token(Token = "0x4001463")]
			AddVoiceExperiences,
			[Token(Token = "0x4001464")]
			SetConfig,
			[Token(Token = "0x4001465")]
			Ready
		}

		[Token(Token = "0x400145B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string[] steps;

		[Token(Token = "0x400145C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text instructionText;

		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Step currentStep;

		[Token(Token = "0x1700026C")]
		internal Step CurrentStep
		{
			[Token(Token = "0x6001749")]
			[Address(RVA = "0x9FE3C4", Offset = "0x9FE3C4", VA = "0x9FE3C4")]
			get
			{
				return default(Step);
			}
		}

		[Token(Token = "0x1700026D")]
		internal string CurrentStepText
		{
			[Token(Token = "0x600174A")]
			[Address(RVA = "0x9FE3CC", Offset = "0x9FE3CC", VA = "0x9FE3CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600174B")]
		[Address(RVA = "0x9FE460", Offset = "0x9FE460", VA = "0x9FE460")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600174C")]
		[Address(RVA = "0x9FE468", Offset = "0x9FE468", VA = "0x9FE468")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600174D")]
		[Address(RVA = "0x9FE46C", Offset = "0x9FE46C", VA = "0x9FE46C")]
		private void Update()
		{
		}

		[Token(Token = "0x600174E")]
		[Address(RVA = "0x9FE464", Offset = "0x9FE464", VA = "0x9FE464")]
		private void UpdateStep()
		{
		}

		[Token(Token = "0x600174F")]
		[Address(RVA = "0x9FE470", Offset = "0x9FE470", VA = "0x9FE470")]
		public Instructions()
		{
		}
	}
}
namespace Oculus.Voice.Demo.BuiltInDemo
{
	[Token(Token = "0x200041B")]
	public class TimerController : MonoBehaviour
	{
		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float _time;

		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool _timerExist;

		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		private bool _timerRunning;

		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6A3904", Offset = "0x6A3904")]
		public Text logText;

		[Token(Token = "0x400146A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6A393C", Offset = "0x6A393C")]
		public AudioClip buzzSound;

		[Token(Token = "0x6001751")]
		[Address(RVA = "0x14DF0F8", Offset = "0x14DF0F8", VA = "0x14DF0F8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001752")]
		[Address(RVA = "0x14DF1C8", Offset = "0x14DF1C8", VA = "0x14DF1C8")]
		private void Log(string msg)
		{
		}

		[Token(Token = "0x6001753")]
		[Address(RVA = "0x14DF15C", Offset = "0x14DF15C", VA = "0x14DF15C")]
		private void OnElapsedTime()
		{
		}

		[Token(Token = "0x6001754")]
		[Address(RVA = "0x14DF258", Offset = "0x14DF258", VA = "0x14DF258")]
		public void DeleteTimer()
		{
		}

		[Token(Token = "0x6001755")]
		[Address(RVA = "0x14DF2CC", Offset = "0x14DF2CC", VA = "0x14DF2CC")]
		public void CreateTimer(string[] entityValues)
		{
		}

		[Token(Token = "0x6001756")]
		[Address(RVA = "0x14DF6A0", Offset = "0x14DF6A0", VA = "0x14DF6A0")]
		public void GetTimerIntent()
		{
		}

		[Token(Token = "0x6001757")]
		[Address(RVA = "0x14DF750", Offset = "0x14DF750", VA = "0x14DF750")]
		public void PauseTimer()
		{
		}

		[Token(Token = "0x6001758")]
		[Address(RVA = "0x14DF7A0", Offset = "0x14DF7A0", VA = "0x14DF7A0")]
		public void ResumeTimer()
		{
		}

		[Token(Token = "0x6001759")]
		[Address(RVA = "0x14DF7F4", Offset = "0x14DF7F4", VA = "0x14DF7F4")]
		public void SubtractTimeTimer(string[] entityValues)
		{
		}

		[Token(Token = "0x600175A")]
		[Address(RVA = "0x14DF90C", Offset = "0x14DF90C", VA = "0x14DF90C")]
		public void AddTimeToTimer(string[] entityValues)
		{
		}

		[Token(Token = "0x600175B")]
		[Address(RVA = "0x14DFA18", Offset = "0x14DFA18", VA = "0x14DFA18")]
		public float GetRemainingTime()
		{
			return default(float);
		}

		[Token(Token = "0x600175C")]
		[Address(RVA = "0x14DF6C8", Offset = "0x14DF6C8", VA = "0x14DF6C8")]
		public string GetFormattedTimeFromSeconds()
		{
			return null;
		}

		[Token(Token = "0x600175D")]
		[Address(RVA = "0x14DF52C", Offset = "0x14DF52C", VA = "0x14DF52C")]
		private bool ParseTime(string[] entityValues, out float time)
		{
			return default(bool);
		}

		[Token(Token = "0x600175E")]
		[Address(RVA = "0x14DFA20", Offset = "0x14DFA20", VA = "0x14DFA20")]
		public TimerController()
		{
		}
	}
	[Token(Token = "0x200041C")]
	public class TimerDisplay : MonoBehaviour
	{
		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TimerController timer;

		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text _uiText;

		[Token(Token = "0x600175F")]
		[Address(RVA = "0x14DFA28", Offset = "0x14DFA28", VA = "0x14DFA28")]
		private void Start()
		{
		}

		[Token(Token = "0x6001760")]
		[Address(RVA = "0x14DFA84", Offset = "0x14DFA84", VA = "0x14DFA84")]
		private void Update()
		{
		}

		[Token(Token = "0x6001761")]
		[Address(RVA = "0x14DFACC", Offset = "0x14DFACC", VA = "0x14DFACC")]
		public TimerDisplay()
		{
		}
	}
	[Token(Token = "0x200041D")]
	public class WitActivation : MonoBehaviour
	{
		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AppVoiceExperience voiceExperience;

		[Token(Token = "0x6001762")]
		[Address(RVA = "0x14B5E20", Offset = "0x14B5E20", VA = "0x14B5E20")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001763")]
		[Address(RVA = "0x14B5ED8", Offset = "0x14B5ED8", VA = "0x14B5ED8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001764")]
		[Address(RVA = "0x14B5F34", Offset = "0x14B5F34", VA = "0x14B5F34")]
		private void Update()
		{
		}

		[Token(Token = "0x6001765")]
		[Address(RVA = "0x14B5FB8", Offset = "0x14B5FB8", VA = "0x14B5FB8")]
		public void ActivateWit()
		{
		}

		[Token(Token = "0x6001766")]
		[Address(RVA = "0x14B5FDC", Offset = "0x14B5FDC", VA = "0x14B5FDC")]
		public WitActivation()
		{
		}
	}
}
namespace Oculus.Avatar
{
	[Token(Token = "0x200041E")]
	public static class AvatarLogger
	{
		[Token(Token = "0x400146E")]
		public const string LogAvatar = "[Avatars] - ";

		[Token(Token = "0x400146F")]
		public const string Tab = "    ";

		[Token(Token = "0x6001767")]
		[Address(RVA = "0x14A8248", Offset = "0x14A8248", VA = "0x14A8248")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6ABC04", Offset = "0x6ABC04")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6ABC04", Offset = "0x6ABC04")]
		public static void Log(string logMsg)
		{
		}

		[Token(Token = "0x6001768")]
		[Address(RVA = "0x14A82D8", Offset = "0x14A82D8", VA = "0x14A82D8")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6ABC64", Offset = "0x6ABC64")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6ABC64", Offset = "0x6ABC64")]
		public static void Log(string logMsg, UnityEngine.Object context)
		{
		}

		[Token(Token = "0x6001769")]
		[Address(RVA = "0x14A8378", Offset = "0x14A8378", VA = "0x14A8378")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6ABCC4", Offset = "0x6ABCC4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6ABCC4", Offset = "0x6ABCC4")]
		public static void LogWarning(string logMsg)
		{
		}

		[Token(Token = "0x600176A")]
		[Address(RVA = "0x14A8408", Offset = "0x14A8408", VA = "0x14A8408")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6ABD24", Offset = "0x6ABD24")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6ABD24", Offset = "0x6ABD24")]
		public static void LogError(string logMsg)
		{
		}

		[Token(Token = "0x600176B")]
		[Address(RVA = "0x14A8498", Offset = "0x14A8498", VA = "0x14A8498")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6ABD84", Offset = "0x6ABD84")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6ABD84", Offset = "0x6ABD84")]
		public static void LogError(string logMsg, UnityEngine.Object context)
		{
		}
	}
	[Token(Token = "0x200041F")]
	public class CAPI
	{
		[Token(Token = "0x2000420")]
		public delegate void LoggingDelegate(IntPtr str);

		[Token(Token = "0x2000421")]
		public enum Result
		{
			[Token(Token = "0x400147B")]
			Success = 0,
			[Token(Token = "0x400147C")]
			Failure = -1000,
			[Token(Token = "0x400147D")]
			Failure_InvalidParameter = -1001,
			[Token(Token = "0x400147E")]
			Failure_NotInitialized = -1002,
			[Token(Token = "0x400147F")]
			Failure_InvalidOperation = -1003,
			[Token(Token = "0x4001480")]
			Failure_Unsupported = -1004,
			[Token(Token = "0x4001481")]
			Failure_NotYetImplemented = -1005,
			[Token(Token = "0x4001482")]
			Failure_OperationFailed = -1006,
			[Token(Token = "0x4001483")]
			Failure_InsufficientSize = -1007
		}

		[Token(Token = "0x2000422")]
		private static class OVRP_1_30_0
		{
			[Token(Token = "0x4001484")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly Version version;

			[PreserveSig]
			[Token(Token = "0x6001800")]
			[Address(RVA = "0x14BF784", Offset = "0x14BF784", VA = "0x14BF784")]
			public static extern Result ovrp_SendEvent2(string name, string param, string source);
		}

		[Token(Token = "0x4001470")]
		private const string LibFile = "ovravatarloader";

		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr nativeVisemeData;

		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IntPtr nativeGazeTargetsData;

		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IntPtr nativeAvatarLightsData;

		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IntPtr DebugLineCountData;

		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static float[] scratchBufferFloat;

		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject debugLineGo;

		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string SDKRuntimePrefix;

		[Token(Token = "0x4001478")]
		private const string ovrPluginDLL = "OVRPlugin";

		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Version ovrPluginVersion;

		[PreserveSig]
		[Token(Token = "0x600176C")]
		[Address(RVA = "0xF1B780", Offset = "0xF1B780", VA = "0xF1B780")]
		public static extern void ovrAvatar_InitializeAndroidUnity(string appID);

		[Token(Token = "0x600176D")]
		[Address(RVA = "0xF1B810", Offset = "0xF1B810", VA = "0xF1B810")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x600176E")]
		[Address(RVA = "0xF1BA34", Offset = "0xF1BA34", VA = "0xF1BA34")]
		public static void Shutdown()
		{
		}

		[PreserveSig]
		[Token(Token = "0x600176F")]
		[Address(RVA = "0xF1BB20", Offset = "0xF1BB20", VA = "0xF1BB20")]
		public static extern void ovrAvatar_Shutdown();

		[PreserveSig]
		[Token(Token = "0x6001770")]
		[Address(RVA = "0xF1BB90", Offset = "0xF1BB90", VA = "0xF1BB90")]
		public static extern IntPtr ovrAvatarMessage_Pop();

		[PreserveSig]
		[Token(Token = "0x6001771")]
		[Address(RVA = "0xF1BC04", Offset = "0xF1BC04", VA = "0xF1BC04")]
		public static extern ovrAvatarMessageType ovrAvatarMessage_GetType(IntPtr msg);

		[Token(Token = "0x6001772")]
		[Address(RVA = "0xF1BC84", Offset = "0xF1BC84", VA = "0xF1BC84")]
		public static ovrAvatarMessage_AvatarSpecification ovrAvatarMessage_GetAvatarSpecification(IntPtr msg)
		{
			return default(ovrAvatarMessage_AvatarSpecification);
		}

		[PreserveSig]
		[Token(Token = "0x6001773")]
		[Address(RVA = "0xF1BDC8", Offset = "0xF1BDC8", VA = "0xF1BDC8")]
		private static extern IntPtr ovrAvatarMessage_GetAvatarSpecification_Native(IntPtr msg);

		[Token(Token = "0x6001774")]
		[Address(RVA = "0xF1BE48", Offset = "0xF1BE48", VA = "0xF1BE48")]
		public static ovrAvatarMessage_AssetLoaded ovrAvatarMessage_GetAssetLoaded(IntPtr msg)
		{
			return default(ovrAvatarMessage_AssetLoaded);
		}

		[PreserveSig]
		[Token(Token = "0x6001775")]
		[Address(RVA = "0xF1BF8C", Offset = "0xF1BF8C", VA = "0xF1BF8C")]
		private static extern IntPtr ovrAvatarMessage_GetAssetLoaded_Native(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6001776")]
		[Address(RVA = "0xF1C00C", Offset = "0xF1C00C", VA = "0xF1C00C")]
		public static extern void ovrAvatarMessage_Free(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6001777")]
		[Address(RVA = "0xF1C08C", Offset = "0xF1C08C", VA = "0xF1C08C")]
		public static extern IntPtr ovrAvatarSpecificationRequest_Create(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001778")]
		[Address(RVA = "0xF1C10C", Offset = "0xF1C10C", VA = "0xF1C10C")]
		public static extern void ovrAvatarSpecificationRequest_Destroy(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6001779")]
		[Address(RVA = "0xF1C18C", Offset = "0xF1C18C", VA = "0xF1C18C")]
		public static extern void ovrAvatarSpecificationRequest_SetCombineMeshes(IntPtr specificationRequest, bool useCombinedMesh);

		[PreserveSig]
		[Token(Token = "0x600177A")]
		[Address(RVA = "0xF1C21C", Offset = "0xF1C21C", VA = "0xF1C21C")]
		public static extern void ovrAvatarSpecificationRequest_SetLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x600177B")]
		[Address(RVA = "0xF1C2AC", Offset = "0xF1C2AC", VA = "0xF1C2AC")]
		public static extern void ovrAvatarSpecificationRequest_SetLevelOfDetail(IntPtr specificationRequest, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x600177C")]
		[Address(RVA = "0xF1C33C", Offset = "0xF1C33C", VA = "0xF1C33C")]
		public static extern void ovrAvatar_RequestAvatarSpecification(ulong userID);

		[PreserveSig]
		[Token(Token = "0x600177D")]
		[Address(RVA = "0xF1C3BC", Offset = "0xF1C3BC", VA = "0xF1C3BC")]
		public static extern void ovrAvatar_RequestAvatarSpecificationFromSpecRequest(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x600177E")]
		[Address(RVA = "0xF1C43C", Offset = "0xF1C43C", VA = "0xF1C43C")]
		public static extern void ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x600177F")]
		[Address(RVA = "0xF1C4CC", Offset = "0xF1C4CC", VA = "0xF1C4CC")]
		public static extern void ovrAvatarSpecificationRequest_SetExpressiveFlag(IntPtr specificationRequest, bool enable);

		[PreserveSig]
		[Token(Token = "0x6001780")]
		[Address(RVA = "0xF1C55C", Offset = "0xF1C55C", VA = "0xF1C55C")]
		public static extern IntPtr ovrAvatar_Create(IntPtr avatarSpecification, ovrAvatarCapabilities capabilities);

		[PreserveSig]
		[Token(Token = "0x6001781")]
		[Address(RVA = "0xF1C5EC", Offset = "0xF1C5EC", VA = "0xF1C5EC")]
		public static extern void ovrAvatar_Destroy(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001782")]
		[Address(RVA = "0xF1C66C", Offset = "0xF1C66C", VA = "0xF1C66C")]
		public static extern void ovrAvatarPose_UpdateBody(IntPtr avatar, ovrAvatarTransform headPose);

		[Token(Token = "0x6001783")]
		[Address(RVA = "0xF1C70C", Offset = "0xF1C70C", VA = "0xF1C70C")]
		public static void ovrAvatarPose_UpdateVoiceVisualization(IntPtr avatar, float[] pcmData)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001784")]
		[Address(RVA = "0xF1C788", Offset = "0xF1C788", VA = "0xF1C788")]
		private static extern void ovrAvatarPose_UpdateVoiceVisualization_Native(IntPtr avatar, uint pcmDataSize, [In] float[] pcmData);

		[PreserveSig]
		[Token(Token = "0x6001785")]
		[Address(RVA = "0xF1C828", Offset = "0xF1C828", VA = "0xF1C828")]
		public static extern void ovrAvatarPose_UpdateHands(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight);

		[PreserveSig]
		[Token(Token = "0x6001786")]
		[Address(RVA = "0xF1C8E8", Offset = "0xF1C8E8", VA = "0xF1C8E8")]
		public static extern void ovrAvatarPose_UpdateHandsWithType(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight, ovrAvatarControllerType type);

		[PreserveSig]
		[Token(Token = "0x6001787")]
		[Address(RVA = "0xF1C9B8", Offset = "0xF1C9B8", VA = "0xF1C9B8")]
		public static extern void ovrAvatarPose_Finalize(IntPtr avatar, float elapsedSeconds);

		[PreserveSig]
		[Token(Token = "0x6001788")]
		[Address(RVA = "0xF1CA48", Offset = "0xF1CA48", VA = "0xF1CA48")]
		public static extern void ovrAvatar_SetLeftControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001789")]
		[Address(RVA = "0xF1CAD8", Offset = "0xF1CAD8", VA = "0xF1CAD8")]
		public static extern void ovrAvatar_SetRightControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x600178A")]
		[Address(RVA = "0xF1CB68", Offset = "0xF1CB68", VA = "0xF1CB68")]
		public static extern void ovrAvatar_SetLeftHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x600178B")]
		[Address(RVA = "0xF1CBF8", Offset = "0xF1CBF8", VA = "0xF1CBF8")]
		public static extern void ovrAvatar_SetRightHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x600178C")]
		[Address(RVA = "0xF1CC88", Offset = "0xF1CC88", VA = "0xF1CC88")]
		public static extern uint ovrAvatarComponent_Count(IntPtr avatar);

		[Token(Token = "0x600178D")]
		[Address(RVA = "0xF1CD08", Offset = "0xF1CD08", VA = "0xF1CD08")]
		public static void ovrAvatarComponent_Get(IntPtr avatar, uint index, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[Token(Token = "0x600178E")]
		[Address(RVA = "0xF1CE24", Offset = "0xF1CE24", VA = "0xF1CE24")]
		public static void ovrAvatarComponent_Get(IntPtr componentPtr, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600178F")]
		[Address(RVA = "0xF1CD94", Offset = "0xF1CD94", VA = "0xF1CD94")]
		public static extern IntPtr ovrAvatarComponent_Get_Native(IntPtr avatar, uint index);

		[Token(Token = "0x6001790")]
		[Address(RVA = "0xF1D044", Offset = "0xF1D044", VA = "0xF1D044")]
		public static bool ovrAvatarPose_GetBaseComponent(IntPtr avatar, ref ovrAvatarBaseComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001791")]
		[Address(RVA = "0xF1D1B4", Offset = "0xF1D1B4", VA = "0xF1D1B4")]
		private static extern IntPtr ovrAvatarPose_GetBaseComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001792")]
		public static IntPtr MarshalRenderComponent<T>(IntPtr ptr) where T : struct
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001793")]
		[Address(RVA = "0xF1D234", Offset = "0xF1D234", VA = "0xF1D234")]
		public static bool ovrAvatarPose_GetBodyComponent(IntPtr avatar, ref ovrAvatarBodyComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001794")]
		[Address(RVA = "0xF1D4DC", Offset = "0xF1D4DC", VA = "0xF1D4DC")]
		private static extern IntPtr ovrAvatarPose_GetBodyComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001795")]
		[Address(RVA = "0xF1D55C", Offset = "0xF1D55C", VA = "0xF1D55C")]
		public static bool ovrAvatarPose_GetLeftControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001796")]
		[Address(RVA = "0xF1D6CC", Offset = "0xF1D6CC", VA = "0xF1D6CC")]
		private static extern IntPtr ovrAvatarPose_GetLeftControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001797")]
		[Address(RVA = "0xF1D74C", Offset = "0xF1D74C", VA = "0xF1D74C")]
		public static bool ovrAvatarPose_GetRightControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001798")]
		[Address(RVA = "0xF1D8BC", Offset = "0xF1D8BC", VA = "0xF1D8BC")]
		private static extern IntPtr ovrAvatarPose_GetRightControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001799")]
		[Address(RVA = "0xF1D93C", Offset = "0xF1D93C", VA = "0xF1D93C")]
		public static bool ovrAvatarPose_GetLeftHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x600179A")]
		[Address(RVA = "0xF1DAAC", Offset = "0xF1DAAC", VA = "0xF1DAAC")]
		private static extern IntPtr ovrAvatarPose_GetLeftHandComponent_Native(IntPtr avatar);

		[Token(Token = "0x600179B")]
		[Address(RVA = "0xF1DB2C", Offset = "0xF1DB2C", VA = "0xF1DB2C")]
		public static bool ovrAvatarPose_GetRightHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x600179C")]
		[Address(RVA = "0xF1DC9C", Offset = "0xF1DC9C", VA = "0xF1DC9C")]
		private static extern IntPtr ovrAvatarPose_GetRightHandComponent_Native(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x600179D")]
		[Address(RVA = "0xF1DD1C", Offset = "0xF1DD1C", VA = "0xF1DD1C")]
		public static extern void ovrAvatarAsset_BeginLoading(ulong assetID);

		[PreserveSig]
		[Token(Token = "0x600179E")]
		[Address(RVA = "0xF1DD9C", Offset = "0xF1DD9C", VA = "0xF1DD9C")]
		public static extern bool ovrAvatarAsset_BeginLoadingLOD(ulong assetId, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x600179F")]
		[Address(RVA = "0xF1DE34", Offset = "0xF1DE34", VA = "0xF1DE34")]
		public static extern ovrAvatarAssetType ovrAvatarAsset_GetType(IntPtr assetHandle);

		[Token(Token = "0x60017A0")]
		[Address(RVA = "0xF1DEB4", Offset = "0xF1DEB4", VA = "0xF1DEB4")]
		public static ovrAvatarMeshAssetData ovrAvatarAsset_GetMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetData);
		}

		[Token(Token = "0x60017A1")]
		[Address(RVA = "0xF1E08C", Offset = "0xF1E08C", VA = "0xF1E08C")]
		public static ovrAvatarMeshAssetDataV2 ovrAvatarAsset_GetCombinedMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetDataV2);
		}

		[PreserveSig]
		[Token(Token = "0x60017A2")]
		[Address(RVA = "0xF1E1E4", Offset = "0xF1E1E4", VA = "0xF1E1E4")]
		private static extern IntPtr ovrAvatarAsset_GetCombinedMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60017A3")]
		[Address(RVA = "0xF1E00C", Offset = "0xF1E00C", VA = "0xF1E00C")]
		private static extern IntPtr ovrAvatarAsset_GetMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60017A4")]
		[Address(RVA = "0xF1E264", Offset = "0xF1E264", VA = "0xF1E264")]
		public static extern uint ovrAvatarAsset_GetMeshBlendShapeCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60017A5")]
		[Address(RVA = "0xF1E2E4", Offset = "0xF1E2E4", VA = "0xF1E2E4")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeName(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x60017A6")]
		[Address(RVA = "0xF1E374", Offset = "0xF1E374", VA = "0xF1E374")]
		public static extern uint ovrAvatarAsset_GetSubmeshCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60017A7")]
		[Address(RVA = "0xF1E3F4", Offset = "0xF1E3F4", VA = "0xF1E3F4")]
		public static extern uint ovrAvatarAsset_GetSubmeshLastIndex(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x60017A8")]
		[Address(RVA = "0xF1E484", Offset = "0xF1E484", VA = "0xF1E484")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeVertices(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60017A9")]
		[Address(RVA = "0xF1E504", Offset = "0xF1E504", VA = "0xF1E504")]
		public static extern IntPtr ovrAvatarAsset_GetAvatar(IntPtr assetHandle);

		[Token(Token = "0x60017AA")]
		[Address(RVA = "0xF1E584", Offset = "0xF1E584", VA = "0xF1E584")]
		public static ulong[] ovrAvatarAsset_GetCombinedMeshIDs(IntPtr assetHandle)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60017AB")]
		[Address(RVA = "0xF1E810", Offset = "0xF1E810", VA = "0xF1E810")]
		public static extern IntPtr ovrAvatarAsset_GetCombinedMeshIDs_Native(IntPtr assetHandle, IntPtr count);

		[Token(Token = "0x60017AC")]
		[Address(RVA = "0xF1E8A0", Offset = "0xF1E8A0", VA = "0xF1E8A0")]
		public static void ovrAvatar_GetCombinedMeshAlphaData(IntPtr avatar, ref ulong textureID, ref Vector4 offset)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60017AD")]
		[Address(RVA = "0xF1EAD0", Offset = "0xF1EAD0", VA = "0xF1EAD0")]
		public static extern IntPtr ovrAvatar_GetCombinedMeshAlphaData_Native(IntPtr avatar, IntPtr textureIDPtr, IntPtr offsetPtr);

		[Token(Token = "0x60017AE")]
		[Address(RVA = "0xF1EB68", Offset = "0xF1EB68", VA = "0xF1EB68")]
		public static ovrAvatarTextureAssetData ovrAvatarAsset_GetTextureData(IntPtr assetPtr)
		{
			return default(ovrAvatarTextureAssetData);
		}

		[PreserveSig]
		[Token(Token = "0x60017AF")]
		[Address(RVA = "0xF1ECB8", Offset = "0xF1ECB8", VA = "0xF1ECB8")]
		private static extern IntPtr ovrAvatarAsset_GetTextureData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60017B0")]
		[Address(RVA = "0xF1ED38", Offset = "0xF1ED38", VA = "0xF1ED38")]
		private static extern IntPtr ovrAvatarAsset_GetMaterialData_Native(IntPtr assetPtr);

		[Token(Token = "0x60017B1")]
		[Address(RVA = "0xF1EDB8", Offset = "0xF1EDB8", VA = "0xF1EDB8")]
		public static ovrAvatarMaterialState ovrAvatarAsset_GetMaterialState(IntPtr assetPtr)
		{
			return default(ovrAvatarMaterialState);
		}

		[PreserveSig]
		[Token(Token = "0x60017B2")]
		[Address(RVA = "0xF1EF0C", Offset = "0xF1EF0C", VA = "0xF1EF0C")]
		public static extern ovrAvatarRenderPartType ovrAvatarRenderPart_GetType(IntPtr renderPart);

		[Token(Token = "0x60017B3")]
		[Address(RVA = "0xF1EF8C", Offset = "0xF1EF8C", VA = "0xF1EF8C")]
		public static ovrAvatarRenderPart_SkinnedMeshRender ovrAvatarRenderPart_GetSkinnedMeshRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRender);
		}

		[PreserveSig]
		[Token(Token = "0x60017B4")]
		[Address(RVA = "0xF1F0E0", Offset = "0xF1F0E0", VA = "0xF1F0E0")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60017B5")]
		[Address(RVA = "0xF1F160", Offset = "0xF1F160", VA = "0xF1F160")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60017B6")]
		[Address(RVA = "0xF1F1F0", Offset = "0xF1F1F0", VA = "0xF1F1F0")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60017B7")]
		[Address(RVA = "0xF1F280", Offset = "0xF1F280", VA = "0xF1F280")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60017B8")]
		[Address(RVA = "0xF1F310", Offset = "0xF1F310", VA = "0xF1F310")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRender_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60017B9")]
		[Address(RVA = "0xF1F390", Offset = "0xF1F390", VA = "0xF1F390")]
		public static extern bool ovrAvatarSkinnedMeshRender_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60017BA")]
		[Address(RVA = "0xF1F418", Offset = "0xF1F418", VA = "0xF1F418")]
		public static extern bool ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60017BB")]
		[Address(RVA = "0xF1F4A0", Offset = "0xF1F4A0", VA = "0xF1F4A0")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60017BC")]
		[Address(RVA = "0xF1F520", Offset = "0xF1F520", VA = "0xF1F520")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60017BD")]
		[Address(RVA = "0xF1F5A0", Offset = "0xF1F5A0", VA = "0xF1F5A0")]
		public static extern ovrAvatarMaterialState ovrAvatarSkinnedMeshRender_GetMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60017BE")]
		[Address(RVA = "0xF1F654", Offset = "0xF1F654", VA = "0xF1F654")]
		public static extern ovrAvatarPBSMaterialState ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60017BF")]
		[Address(RVA = "0xF1F6E4", Offset = "0xF1F6E4", VA = "0xF1F6E4")]
		public static extern ovrAvatarExpressiveParameters ovrAvatar_GetExpressiveParameters(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60017C0")]
		[Address(RVA = "0xF1F774", Offset = "0xF1F774", VA = "0xF1F774")]
		public static extern ulong ovrAvatarSkinnedMeshRender_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60017C1")]
		[Address(RVA = "0xF1F7F4", Offset = "0xF1F7F4", VA = "0xF1F7F4")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60017C2")]
		[Address(RVA = "0xF1F874", Offset = "0xF1F874", VA = "0xF1F874")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60017C3")]
		[Address(RVA = "0xF1F8F4", Offset = "0xF1F8F4", VA = "0xF1F8F4")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x60017C4")]
		[Address(RVA = "0xF1F98C", Offset = "0xF1F98C", VA = "0xF1F98C")]
		public static extern void ovrAvatar_SetActionUnitOnsetSpeed(IntPtr avatar, float onsetSpeed);

		[PreserveSig]
		[Token(Token = "0x60017C5")]
		[Address(RVA = "0xF1FA1C", Offset = "0xF1FA1C", VA = "0xF1FA1C")]
		public static extern void ovrAvatar_SetActionUnitFalloffSpeed(IntPtr avatar, float falloffSpeed);

		[PreserveSig]
		[Token(Token = "0x60017C6")]
		[Address(RVA = "0xF1FAAC", Offset = "0xF1FAAC", VA = "0xF1FAAC")]
		public static extern void ovrAvatar_SetVisemeMultiplier(IntPtr avatar, float visemeMultiplier);

		[PreserveSig]
		[Token(Token = "0x60017C7")]
		[Address(RVA = "0xF1FB3C", Offset = "0xF1FB3C", VA = "0xF1FB3C")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x60017C8")]
		[Address(RVA = "0xF1FBD4", Offset = "0xF1FBD4", VA = "0xF1FBD4")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x60017C9")]
		[Address(RVA = "0xF1FC6C", Offset = "0xF1FC6C", VA = "0xF1FC6C")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60017CA")]
		[Address(RVA = "0xF1FCEC", Offset = "0xF1FCEC", VA = "0xF1FCEC")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(IntPtr renderPart);

		[Token(Token = "0x60017CB")]
		[Address(RVA = "0xF1FD6C", Offset = "0xF1FD6C", VA = "0xF1FD6C")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS);
		}

		[PreserveSig]
		[Token(Token = "0x60017CC")]
		[Address(RVA = "0xF1FEC0", Offset = "0xF1FEC0", VA = "0xF1FEC0")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(IntPtr renderPart);

		[Token(Token = "0x60017CD")]
		[Address(RVA = "0xF1FF40", Offset = "0xF1FF40", VA = "0xF1FF40")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2);
		}

		[PreserveSig]
		[Token(Token = "0x60017CE")]
		[Address(RVA = "0xF20094", Offset = "0xF20094", VA = "0xF20094")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(IntPtr renderPart);

		[Token(Token = "0x60017CF")]
		[Address(RVA = "0xF20114", Offset = "0xF20114", VA = "0xF20114")]
		public static void ovrAvatarSkinnedMeshRender_GetBlendShapeParams(IntPtr renderPart, ref ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60017D0")]
		[Address(RVA = "0xF20250", Offset = "0xF20250", VA = "0xF20250")]
		private static extern IntPtr ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native(IntPtr renderPart);

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0xF202D0", Offset = "0xF202D0", VA = "0xF202D0")]
		public static ovrAvatarRenderPart_ProjectorRender ovrAvatarRenderPart_GetProjectorRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_ProjectorRender);
		}

		[Token(Token = "0x60017D2")]
		[Address(RVA = "0xF204A4", Offset = "0xF204A4", VA = "0xF204A4")]
		public static ovrAvatarPBSMaterialState[] ovrAvatar_GetBodyPBSMaterialStates(IntPtr renderPart)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60017D3")]
		[Address(RVA = "0xF20784", Offset = "0xF20784", VA = "0xF20784")]
		private static extern IntPtr ovrAvatar_GetBodyPBSMaterialStates_Native(IntPtr avatar, IntPtr count);

		[PreserveSig]
		[Token(Token = "0x60017D4")]
		[Address(RVA = "0xF20424", Offset = "0xF20424", VA = "0xF20424")]
		private static extern IntPtr ovrAvatarRenderPart_GetProjectorRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60017D5")]
		[Address(RVA = "0xF20814", Offset = "0xF20814", VA = "0xF20814")]
		public static extern uint ovrAvatar_GetReferencedAssetCount(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60017D6")]
		[Address(RVA = "0xF20894", Offset = "0xF20894", VA = "0xF20894")]
		public static extern ulong ovrAvatar_GetReferencedAsset(IntPtr avatar, uint index);

		[PreserveSig]
		[Token(Token = "0x60017D7")]
		[Address(RVA = "0xF20924", Offset = "0xF20924", VA = "0xF20924")]
		public static extern void ovrAvatar_SetLeftHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x60017D8")]
		[Address(RVA = "0xF209B4", Offset = "0xF209B4", VA = "0xF209B4")]
		public static extern void ovrAvatar_SetRightHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x60017D9")]
		[Address(RVA = "0xF20A44", Offset = "0xF20A44", VA = "0xF20A44")]
		public static extern void ovrAvatar_SetLeftHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x60017DA")]
		[Address(RVA = "0xF20AE4", Offset = "0xF20AE4", VA = "0xF20AE4")]
		public static extern void ovrAvatar_SetRightHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x60017DB")]
		[Address(RVA = "0xF20B84", Offset = "0xF20B84", VA = "0xF20B84")]
		public static extern void ovrAvatar_UpdatePoseFromPacket(IntPtr avatar, IntPtr packet, float secondsFromStart);

		[PreserveSig]
		[Token(Token = "0x60017DC")]
		[Address(RVA = "0xF20C24", Offset = "0xF20C24", VA = "0xF20C24")]
		public static extern void ovrAvatarPacket_BeginRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60017DD")]
		[Address(RVA = "0xF20CA4", Offset = "0xF20CA4", VA = "0xF20CA4")]
		public static extern IntPtr ovrAvatarPacket_EndRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60017DE")]
		[Address(RVA = "0xF20D24", Offset = "0xF20D24", VA = "0xF20D24")]
		public static extern uint ovrAvatarPacket_GetSize(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x60017DF")]
		[Address(RVA = "0xF20DA4", Offset = "0xF20DA4", VA = "0xF20DA4")]
		public static extern float ovrAvatarPacket_GetDurationSeconds(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x60017E0")]
		[Address(RVA = "0xF20E24", Offset = "0xF20E24", VA = "0xF20E24")]
		public static extern void ovrAvatarPacket_Free(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x60017E1")]
		[Address(RVA = "0xF20EA4", Offset = "0xF20EA4", VA = "0xF20EA4")]
		public static extern bool ovrAvatarPacket_Write(IntPtr packet, uint bufferSize, [Out] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x60017E2")]
		[Address(RVA = "0xF20FCC", Offset = "0xF20FCC", VA = "0xF20FCC")]
		public static extern IntPtr ovrAvatarPacket_Read(uint bufferSize, [In] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x60017E3")]
		[Address(RVA = "0xF21064", Offset = "0xF21064", VA = "0xF21064")]
		private static extern void ovrAvatar_SetInternalForceASTCTextures(bool value);

		[Token(Token = "0x60017E4")]
		[Address(RVA = "0xF210E4", Offset = "0xF210E4", VA = "0xF210E4")]
		public static void ovrAvatar_SetForceASTCTextures(bool value)
		{
		}

		[Token(Token = "0x60017E5")]
		[Address(RVA = "0xF21144", Offset = "0xF21144", VA = "0xF21144")]
		public static void ovrAvatar_OverrideExpressiveLogic(IntPtr avatar, ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60017E6")]
		[Address(RVA = "0xF2128C", Offset = "0xF2128C", VA = "0xF2128C")]
		private static extern void ovrAvatar_OverrideExpressiveLogic_Native(IntPtr avatar, IntPtr state);

		[Token(Token = "0x60017E7")]
		[Address(RVA = "0xF2131C", Offset = "0xF2131C", VA = "0xF2131C")]
		public static void ovrAvatar_SetVisemes(IntPtr avatar, ovrAvatarVisemes visemes)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60017E8")]
		[Address(RVA = "0xF21474", Offset = "0xF21474", VA = "0xF21474")]
		private static extern void ovrAvatar_SetVisemes_Native(IntPtr avatar, IntPtr visemes);

		[PreserveSig]
		[Token(Token = "0x60017E9")]
		[Address(RVA = "0xF21504", Offset = "0xF21504", VA = "0xF21504")]
		public static extern void ovrAvatar_UpdateWorldTransform(IntPtr avatar, ovrAvatarTransform transform);

		[Token(Token = "0x60017EA")]
		[Address(RVA = "0xF215A4", Offset = "0xF215A4", VA = "0xF215A4")]
		public static void ovrAvatar_UpdateGazeTargets(ovrAvatarGazeTargets targets)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60017EB")]
		[Address(RVA = "0xF21974", Offset = "0xF21974", VA = "0xF21974")]
		private static extern void ovrAvatar_UpdateGazeTargets_Native(IntPtr targets);

		[PreserveSig]
		[Token(Token = "0x60017EC")]
		[Address(RVA = "0xF219F4", Offset = "0xF219F4", VA = "0xF219F4")]
		public static extern void ovrAvatar_RemoveGazeTargets(uint targetCount, uint[] ids);

		[Token(Token = "0x60017ED")]
		[Address(RVA = "0xF21A8C", Offset = "0xF21A8C", VA = "0xF21A8C")]
		public static void ovrAvatar_UpdateLights(ovrAvatarLights lights)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60017EE")]
		[Address(RVA = "0xF222EC", Offset = "0xF222EC", VA = "0xF222EC")]
		private static extern void ovrAvatar_UpdateLights_Native(IntPtr lights);

		[PreserveSig]
		[Token(Token = "0x60017EF")]
		[Address(RVA = "0xF2236C", Offset = "0xF2236C", VA = "0xF2236C")]
		public static extern void ovrAvatar_RemoveLights(uint lightCount, uint[] ids);

		[Token(Token = "0x60017F0")]
		[Address(RVA = "0xF1B71C", Offset = "0xF1B71C", VA = "0xF1B71C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x6ABDE4", Offset = "0x6ABDE4")]
		public static void LoggingCallback(IntPtr str)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60017F1")]
		[Address(RVA = "0xF22404", Offset = "0xF22404", VA = "0xF22404")]
		public static extern void ovrAvatar_RegisterLoggingCallback(LoggingDelegate callback);

		[PreserveSig]
		[Token(Token = "0x60017F2")]
		[Address(RVA = "0xF22488", Offset = "0xF22488", VA = "0xF22488")]
		public static extern void ovrAvatar_SetLoggingLevel(ovrAvatarLogLevel level);

		[PreserveSig]
		[Token(Token = "0x60017F3")]
		[Address(RVA = "0xF22508", Offset = "0xF22508", VA = "0xF22508")]
		public static extern IntPtr ovrAvatar_GetDebugTransforms_Native(IntPtr count);

		[PreserveSig]
		[Token(Token = "0x60017F4")]
		[Address(RVA = "0xF22588", Offset = "0xF22588", VA = "0xF22588")]
		public static extern IntPtr ovrAvatar_GetDebugLines_Native(IntPtr count);

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0xF22608", Offset = "0xF22608", VA = "0xF22608")]
		public static void ovrAvatar_DrawDebugLines()
		{
		}

		[PreserveSig]
		[Token(Token = "0x60017F6")]
		[Address(RVA = "0xF22FCC", Offset = "0xF22FCC", VA = "0xF22FCC")]
		public static extern void ovrAvatar_SetDebugDrawContext(uint context);

		[Token(Token = "0x60017F7")]
		[Address(RVA = "0xF2304C", Offset = "0xF2304C", VA = "0xF2304C")]
		public static bool SendEvent(string name, string param = "", string source = "")
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60017F8")]
		[Address(RVA = "0xF23488", Offset = "0xF23488", VA = "0xF23488")]
		private static extern IntPtr _ovrp_GetVersion();

		[Token(Token = "0x60017F9")]
		[Address(RVA = "0xF233F0", Offset = "0xF233F0", VA = "0xF233F0")]
		public static string ovrp_GetVersion()
		{
			return null;
		}

		[Token(Token = "0x60017FA")]
		[Address(RVA = "0xF234FC", Offset = "0xF234FC", VA = "0xF234FC")]
		public CAPI()
		{
		}
	}
}
