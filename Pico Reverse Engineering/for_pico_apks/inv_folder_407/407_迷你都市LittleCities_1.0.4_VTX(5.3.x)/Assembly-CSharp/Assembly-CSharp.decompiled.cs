using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading;
using System.Xml.Serialization;
using Il2CppDummyDll;
using Oculus.Platform;
using Oculus.Platform.Models;
using Oculus.Spatializer.Propagation;
using TMPro;
using Unity.Collections;
using Unity.Mathematics;
using Unity.XR.PXR;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Analytics;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Networking;
using UnityEngine.Rendering;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityEngine.XR;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class BirdFlock : MonoBehaviour
{
	[Token(Token = "0x200025D")]
	[Flags]
	public enum BirdType
	{
		[Token(Token = "0x400111A")]
		Seagull = 1,
		[Token(Token = "0x400111B")]
		Vulture = 2
	}

	[Token(Token = "0x200025E")]
	public enum State
	{
		[Token(Token = "0x400111D")]
		Flying,
		[Token(Token = "0x400111E")]
		Landing,
		[Token(Token = "0x400111F")]
		Landed,
		[Token(Token = "0x4001120")]
		Destroying
	}

	[Token(Token = "0x200025F")]
	public class Bird
	{
		[Token(Token = "0x4001121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BirdFlock flock;

		[Token(Token = "0x4001122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject flyingObject;

		[Token(Token = "0x4001123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject sittingObject;

		[Token(Token = "0x4001124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 flightHeading;

		[Token(Token = "0x4001125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 landingPosition;

		[Token(Token = "0x4001126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public State state;

		[Token(Token = "0x4001127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public BirdManager.PerchTransform perchTransform;

		[Token(Token = "0x60013BD")]
		[Address(RVA = "0xB597E4", Offset = "0xB597E4", VA = "0xB597E4")]
		public void OnPerchRemoved()
		{
		}

		[Token(Token = "0x60013BE")]
		[Address(RVA = "0xB56EBC", Offset = "0xB56EBC", VA = "0xB56EBC")]
		public Bird()
		{
		}
	}

	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject flyingBirdPrefab;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject sittingBirdPrefab;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int flockSize;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float flightSpeed;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float flightAltitude;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float sittingTime;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float maxLandingTime;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 flyingToSittingPositionOffset;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float flyingToSittingRotationOffset;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioSource audioSource;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public BirdType birdType;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool enableDebugDraw;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<Bird> birds;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private BirdManager birdManager;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private City city;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private State flockState;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float timeInFlockState;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0xB56BD8", Offset = "0xB56BD8", VA = "0xB56BD8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0xB56EC4", Offset = "0xB56EC4", VA = "0xB56EC4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0xB56F60", Offset = "0xB56F60", VA = "0xB56F60")]
	private Vector3 CalculateAvoidance(Bird bird, List<BirdFlockAvoidancePoint> avoidancePoints)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0xB571F0", Offset = "0xB571F0", VA = "0xB571F0")]
	private void TakeOff(Bird bird)
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0xB573A4", Offset = "0xB573A4", VA = "0xB573A4")]
	private void PickLandingPoint(Bird bird)
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0xB57C40", Offset = "0xB57C40", VA = "0xB57C40")]
	private bool DoesOverlapAvoidancePoint(Vector3 position)
	{
		return default(bool);
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0xB57EF8", Offset = "0xB57EF8", VA = "0xB57EF8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0xB59758", Offset = "0xB59758", VA = "0xB59758")]
	public BirdFlock()
	{
	}
}
[Token(Token = "0x2000003")]
public class BirdFlockAvoidancePoint : MonoBehaviour
{
	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float radius;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float strength;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private City city;

	[Token(Token = "0x6000009")]
	[Address(RVA = "0xB59800", Offset = "0xB59800", VA = "0xB59800")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0xB598EC", Offset = "0xB598EC", VA = "0xB598EC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0xB59A00", Offset = "0xB59A00", VA = "0xB59A00")]
	public BirdFlockAvoidancePoint()
	{
	}
}
[Token(Token = "0x2000004")]
public class BirdPerchPoint : MonoBehaviour
{
	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BirdFlock.BirdType birdType;

	[Token(Token = "0x600000C")]
	[Address(RVA = "0xB5AAE4", Offset = "0xB5AAE4", VA = "0xB5AAE4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0xB5AB94", Offset = "0xB5AB94", VA = "0xB5AB94")]
	public BirdPerchPoint()
	{
	}
}
[Token(Token = "0x2000005")]
public class Dolphin : MonoBehaviour
{
	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float swimRotationSpeed;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float moveSpeed;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform target;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform splashPoint;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ParticleSystem splashEffect;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Quaternion direction;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float rotationAngle;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float underWaterTimer;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 targetRelativePosition;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private City city;

	[Token(Token = "0x17000001")]
	public bool isVisible
	{
		[Token(Token = "0x600000E")]
		[Address(RVA = "0xAD5464", Offset = "0xAD5464", VA = "0xAD5464")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0xAD5480", Offset = "0xAD5480", VA = "0xAD5480")]
	private void Start()
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0xAD558C", Offset = "0xAD558C", VA = "0xAD558C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0xAD5B04", Offset = "0xAD5B04", VA = "0xAD5B04")]
	public Dolphin()
	{
	}
}
[Token(Token = "0x2000006")]
public class Whale : MonoBehaviour
{
	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem sprayEffect;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem splashEffect;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem surfaceParticlesEffect;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform splashCenter;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip[] surfaceSounds;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip[] diveSounds;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip[] spraySounds;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioClip[] songSounds;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Animator animator;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AudioSource audioSource;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float timeBeforeDive;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float timeBeforeShow;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5C58", Offset = "0x6F5C58")]
	private bool <isShowing>k__BackingField;

	[Token(Token = "0x17000002")]
	public bool isShowing
	{
		[Token(Token = "0x6000012")]
		[Address(RVA = "0xAA6748", Offset = "0xAA6748", VA = "0xAA6748")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FAD64", Offset = "0x6FAD64")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000013")]
		[Address(RVA = "0xAA6750", Offset = "0xAA6750", VA = "0xAA6750")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FAD74", Offset = "0x6FAD74")]
		private set
		{
		}
	}

	[Token(Token = "0x17000003")]
	public bool waitingToShow
	{
		[Token(Token = "0x6000014")]
		[Address(RVA = "0xAA675C", Offset = "0xAA675C", VA = "0xAA675C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0xAA676C", Offset = "0xAA676C", VA = "0xAA676C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0xAA67E0", Offset = "0xAA67E0", VA = "0xAA67E0")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0xAA67EC", Offset = "0xAA67EC", VA = "0xAA67EC")]
	public void PlaySprayEffect()
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0xAA6840", Offset = "0xAA6840", VA = "0xAA6840")]
	public void Sing()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0xAA6884", Offset = "0xAA6884", VA = "0xAA6884")]
	public void Splash()
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0xAA6958", Offset = "0xAA6958", VA = "0xAA6958")]
	public void Show(float delay, float duration)
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0xAA6964", Offset = "0xAA6964", VA = "0xAA6964")]
	public void Simulate(float deltaTime)
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0xAA6AB4", Offset = "0xAA6AB4", VA = "0xAA6AB4")]
	public Whale()
	{
	}
}
[Token(Token = "0x2000007")]
public class ButtonAudio : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerDownHandler, IPointerUpHandler
{
	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Button button;

	[Token(Token = "0x17000004")]
	private Player player
	{
		[Token(Token = "0x600001D")]
		[Address(RVA = "0xBA0FE8", Offset = "0xBA0FE8", VA = "0xBA0FE8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0xBA1038", Offset = "0xBA1038", VA = "0xBA1038")]
	private void Awake()
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0xBA1090", Offset = "0xBA1090", VA = "0xBA1090", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0xBA11A4", Offset = "0xBA11A4", VA = "0xBA11A4", Slot = "5")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0xBA12B8", Offset = "0xBA12B8", VA = "0xBA12B8", Slot = "6")]
	public void OnPointerUp(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0xBA136C", Offset = "0xBA136C", VA = "0xBA136C")]
	public ButtonAudio()
	{
	}
}
[Token(Token = "0x2000008")]
public class MusicList : ScriptableObjectSingleton<MusicList>
{
	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip mainTheme;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip[] mainTracks;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip[] tropicalTracks;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip[] desertTracks;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip[] volcanoTracks;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip volcanoEruptTrack;

	[Token(Token = "0x6000023")]
	[Address(RVA = "0xA95384", Offset = "0xA95384", VA = "0xA95384")]
	public MusicList()
	{
	}
}
[Token(Token = "0x2000009")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6F45AC", Offset = "0x6F45AC")]
public class MusicManager : SingletonBehaviour<MusicManager>
{
	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float desiredMusicVolume;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float defaultMusicVolume;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float musicTransitionTime;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioSource musicSource;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioClip queuedClip;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioClip[] trackSelection;

	[Token(Token = "0x17000005")]
	public float musicVolume
	{
		[Token(Token = "0x6000024")]
		[Address(RVA = "0xA953F4", Offset = "0xA953F4", VA = "0xA953F4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000025")]
		[Address(RVA = "0xA953FC", Offset = "0xA953FC", VA = "0xA953FC")]
		set
		{
		}
	}

	[Token(Token = "0x17000006")]
	private Player player
	{
		[Token(Token = "0x6000026")]
		[Address(RVA = "0xA95420", Offset = "0xA95420", VA = "0xA95420")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0xA95470", Offset = "0xA95470", VA = "0xA95470", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0xA954DC", Offset = "0xA954DC", VA = "0xA954DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0xA95504", Offset = "0xA95504", VA = "0xA95504")]
	private void Update()
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0xA95998", Offset = "0xA95998", VA = "0xA95998")]
	private void PlayTrack(AudioClip track)
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0xA95B90", Offset = "0xA95B90", VA = "0xA95B90")]
	public void PlayFirstTrack()
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0xA95BB0", Offset = "0xA95BB0", VA = "0xA95BB0")]
	public void SetTrackSelection(AudioClip[] newTrackSelection)
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0xA9585C", Offset = "0xA9585C", VA = "0xA9585C")]
	public void PickRandomTrack()
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0xA95BB8", Offset = "0xA95BB8", VA = "0xA95BB8")]
	public void PlayMainTheme()
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0xA95CAC", Offset = "0xA95CAC", VA = "0xA95CAC")]
	public void PlayVolcanoEruption()
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0xA95DA0", Offset = "0xA95DA0", VA = "0xA95DA0")]
	public MusicManager()
	{
	}
}
[Token(Token = "0x200000A")]
public class SFX : ScriptableObjectSingleton<SFX>
{
	[Serializable]
	[Token(Token = "0x2000260")]
	public class UI
	{
		[Token(Token = "0x4001128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioClip buttonClick;

		[Token(Token = "0x4001129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip buttonHover;

		[Token(Token = "0x400112A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip buttonRelease;

		[Token(Token = "0x400112B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip zoomClick;

		[Token(Token = "0x400112C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip menuOpen;

		[Token(Token = "0x400112D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioClip menuClose;

		[Token(Token = "0x400112E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioClip wheelMenuOpen;

		[Token(Token = "0x400112F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioClip wheelMenuClose;

		[Token(Token = "0x4001130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioClip selectTab;

		[Token(Token = "0x4001131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioClip lockedClick;

		[Token(Token = "0x4001132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AudioClip[] rotateView;

		[Token(Token = "0x4001133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AudioClip bubblePop;

		[Token(Token = "0x4001134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AudioClip watchMenuOpen;

		[Token(Token = "0x4001135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AudioClip watchMenuClose;

		[Token(Token = "0x4001136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public AudioClip watchMenuChange;

		[Token(Token = "0x4001137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public AudioClip levelUp;

		[Token(Token = "0x4001138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public AudioClip regionUnlockLevelUp;

		[Token(Token = "0x4001139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public AudioClip notification;

		[Token(Token = "0x400113A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public AudioClip zoomIn;

		[Token(Token = "0x400113B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public AudioClip zoomOut;

		[Token(Token = "0x400113C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public AudioClip[] zoomTransition;

		[Token(Token = "0x400113D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public AudioClip transitionToCity;

		[Token(Token = "0x400113E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public AudioClip transitionToWorldMap;

		[Token(Token = "0x400113F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public AudioClip toggleOn;

		[Token(Token = "0x4001140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public AudioClip toggleOff;

		[Token(Token = "0x4001141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public AudioClip cycleLeft;

		[Token(Token = "0x4001142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public AudioClip cycleRight;

		[Token(Token = "0x4001143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public AudioClip undo;

		[Token(Token = "0x4001144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public AudioClip happySmall;

		[Token(Token = "0x4001145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public AudioClip happyMedium;

		[Token(Token = "0x4001146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public AudioClip happyLarge;

		[Token(Token = "0x4001147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public AudioClip sadSmall;

		[Token(Token = "0x4001148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public AudioClip sadMedium;

		[Token(Token = "0x4001149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public AudioClip sadLarge;

		[Token(Token = "0x400114A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public AudioClip completeTutorialStep;

		[Token(Token = "0x400114B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public AudioClip completeCity;

		[Token(Token = "0x60013BF")]
		[Address(RVA = "0xAB7174", Offset = "0xAB7174", VA = "0xAB7174")]
		public UI()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000261")]
	public class Construction
	{
		[Token(Token = "0x400114C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioClip cannotBuild;

		[Token(Token = "0x400114D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip placeBuilding;

		[Token(Token = "0x400114E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip upgradeBuilding;

		[Token(Token = "0x400114F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip startRoad;

		[Token(Token = "0x4001150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip[] dragRoad;

		[Token(Token = "0x4001151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioClip finishRoad;

		[Token(Token = "0x4001152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioClip startZone;

		[Token(Token = "0x4001153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioClip[] zoneRegionDrag;

		[Token(Token = "0x4001154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioClip finishZone;

		[Token(Token = "0x4001155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioClip startBulldoze;

		[Token(Token = "0x4001156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AudioClip[] bulldozeRegionDrag;

		[Token(Token = "0x4001157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AudioClip finishBulldoze;

		[Token(Token = "0x4001158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AudioClip[] demolishBoulder;

		[Token(Token = "0x4001159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AudioClip[] zoneBuildingPopUp;

		[Token(Token = "0x400115A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public AudioClip[] buildingCollapse;

		[Token(Token = "0x400115B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public AudioClip[] placeTrees;

		[Token(Token = "0x400115C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public AudioClip[] placeBridge;

		[Token(Token = "0x60013C0")]
		[Address(RVA = "0xAB7164", Offset = "0xAB7164", VA = "0xAB7164")]
		public Construction()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000262")]
	public class TimeShift
	{
		[Token(Token = "0x400115D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioClip playToPause;

		[Token(Token = "0x400115E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip pauseToPlay;

		[Token(Token = "0x400115F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip fastToNormal;

		[Token(Token = "0x4001160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip normalToFast;

		[Token(Token = "0x60013C1")]
		[Address(RVA = "0xAB716C", Offset = "0xAB716C", VA = "0xAB716C")]
		public TimeShift()
		{
		}
	}

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UI uiValues;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Construction constructionValues;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TimeShift timeShiftValues;

	[Token(Token = "0x17000007")]
	public static UI ui
	{
		[Token(Token = "0x6000031")]
		[Address(RVA = "0xAB67B4", Offset = "0xAB67B4", VA = "0xAB67B4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000008")]
	public static Construction construction
	{
		[Token(Token = "0x6000032")]
		[Address(RVA = "0xAB682C", Offset = "0xAB682C", VA = "0xAB682C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000009")]
	public static TimeShift timeShift
	{
		[Token(Token = "0x6000033")]
		[Address(RVA = "0xAB68A4", Offset = "0xAB68A4", VA = "0xAB68A4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000A")]
	public static float volume
	{
		[Token(Token = "0x6000034")]
		[Address(RVA = "0xAB691C", Offset = "0xAB691C", VA = "0xAB691C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000035")]
		[Address(RVA = "0xAB696C", Offset = "0xAB696C", VA = "0xAB696C")]
		set
		{
		}
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0xAB69C8", Offset = "0xAB69C8", VA = "0xAB69C8")]
	public static void Play(AudioClip clip, float sfxVolume = 1f)
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0xAB6AD0", Offset = "0xAB6AD0", VA = "0xAB6AD0")]
	public static void Play(AudioClip[] clipCollection, float sfxVolume = 1f)
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0xAB6B40", Offset = "0xAB6B40", VA = "0xAB6B40")]
	public static void PlaySpatialised(AudioClip[] clipCollection, Vector3 worldPosition, [Optional] AudioSource sourceParameters)
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0xAB6BD4", Offset = "0xAB6BD4", VA = "0xAB6BD4")]
	public static void PlaySpatialised(AudioClip clip, Vector3 worldPosition, [Optional] AudioSource sourceParameters)
	{
	}

	[Token(Token = "0x600003A")]
	private void LoadAudioData<T>(T group)
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0xAB7070", Offset = "0xAB7070", VA = "0xAB7070")]
	public void LoadAudioData()
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0xAB70F4", Offset = "0xAB70F4", VA = "0xAB70F4")]
	public SFX()
	{
	}
}
[Token(Token = "0x200000B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6F4610", Offset = "0x6F4610")]
public class SFXManager : SingletonBehaviour<SFXManager>
{
	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5C68", Offset = "0x6F5C68")]
	private AudioSource <audioSource>k__BackingField;

	[Token(Token = "0x1700000B")]
	public AudioSource audioSource
	{
		[Token(Token = "0x600003D")]
		[Address(RVA = "0xAB717C", Offset = "0xAB717C", VA = "0xAB717C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FAD84", Offset = "0x6FAD84")]
		get
		{
			return null;
		}
		[Token(Token = "0x600003E")]
		[Address(RVA = "0xAB7184", Offset = "0xAB7184", VA = "0xAB7184")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FAD94", Offset = "0x6FAD94")]
		private set
		{
		}
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0xAB718C", Offset = "0xAB718C", VA = "0xAB718C", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0xAB71F8", Offset = "0xAB71F8", VA = "0xAB71F8")]
	public SFXManager()
	{
	}
}
[Token(Token = "0x200000C")]
public class SFXSpatialisedOneShot : MonoBehaviour
{
	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource source;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool didStartPlay;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AudioClip lastClip;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static float lastClipPlayTime;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static float lastClipPitch;

	[Token(Token = "0x6000041")]
	[Address(RVA = "0xAB7248", Offset = "0xAB7248", VA = "0xAB7248")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0xAB6DF4", Offset = "0xAB6DF4", VA = "0xAB6DF4")]
	public void Play(AudioClip clip, [Optional] AudioSource sourceParameters)
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0xAB72EC", Offset = "0xAB72EC", VA = "0xAB72EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0xAB7394", Offset = "0xAB7394", VA = "0xAB7394")]
	public SFXSpatialisedOneShot()
	{
	}
}
[Token(Token = "0x200000D")]
public class AirportInfo : MonoBehaviour
{
	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimatorOverrideController animatorOverrideController;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform landingTransform;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float landingShadowPlaneHeight;

	[Token(Token = "0x6000046")]
	[Address(RVA = "0xB5437C", Offset = "0xB5437C", VA = "0xB5437C")]
	public AirportInfo()
	{
	}
}
[Token(Token = "0x200000E")]
public class BuildingDatabase : ScriptableObjectSingleton<BuildingDatabase>
{
	[Token(Token = "0x2000263")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5070", Offset = "0x6F5070")]
	private sealed class <>c__DisplayClass2_0
	{
		[Token(Token = "0x4001161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BuildingInfo info;

		[Token(Token = "0x60013C2")]
		[Address(RVA = "0xB6172C", Offset = "0xB6172C", VA = "0xB6172C")]
		public <>c__DisplayClass2_0()
		{
		}

		[Token(Token = "0x60013C3")]
		[Address(RVA = "0xB61914", Offset = "0xB61914", VA = "0xB61914")]
		internal bool <GetIndex>b__0(BuildingInfo x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BuildingInfo[] allBuildings;

	[Token(Token = "0x6000047")]
	[Address(RVA = "0xB61570", Offset = "0xB61570", VA = "0xB61570")]
	public BuildingInfo GetFromIndex(int index)
	{
		return null;
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0xB615BC", Offset = "0xB615BC", VA = "0xB615BC")]
	public int GetIndex(BuildingInfo info)
	{
		return default(int);
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0xB61734", Offset = "0xB61734", VA = "0xB61734")]
	public BuildingInfo GetUpgradedBuilding(BuildingInfo info)
	{
		return null;
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0xB618A4", Offset = "0xB618A4", VA = "0xB618A4")]
	public BuildingDatabase()
	{
	}
}
[Token(Token = "0x200000F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6F4674", Offset = "0x6F4674")]
public class BuildingEffectCalculator : MonoBehaviour
{
	[Token(Token = "0x2000264")]
	private struct EffectedBuilding
	{
		[Token(Token = "0x4001162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BuildingInstance building;

		[Token(Token = "0x4001163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint iconsEnabledMask;

		[Token(Token = "0x4001164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int iconCount;

		[Token(Token = "0x4001165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int zoneX;

		[Token(Token = "0x4001166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int zoneY;
	}

	[Token(Token = "0x2000265")]
	private struct ParticleAnimationData
	{
		[Token(Token = "0x4001167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float animateStartTime;

		[Token(Token = "0x4001168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Vector3 startPosition;

		[Token(Token = "0x4001169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float bobEndTime;

		[Token(Token = "0x400116A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float fadeEndTime;

		[Token(Token = "0x400116B")]
		private const float fadeOutDuration = 1f;

		[Token(Token = "0x400116C")]
		private const float bobDuration = 0.75f;

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0x77932C", Offset = "0x77932C", VA = "0x77932C")]
		public void GenerateFade(float startTime, Vector3 position)
		{
		}

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0x779344", Offset = "0x779344", VA = "0x779344")]
		public void GenerateBob(float startTime, Vector3 position)
		{
		}
	}

	[Token(Token = "0x2000266")]
	public struct Icons
	{
		[Token(Token = "0x400116D")]
		public const int positiveHappiness = 0;

		[Token(Token = "0x400116E")]
		public const int noPower = 1;

		[Token(Token = "0x400116F")]
		public const int upgrade = 2;

		[Token(Token = "0x4001170")]
		public const int positivePower = 3;

		[Token(Token = "0x4001171")]
		public const int positiveWater = 4;

		[Token(Token = "0x4001172")]
		public const int positiveNetwork = 5;

		[Token(Token = "0x4001173")]
		public const int positivePolice = 6;

		[Token(Token = "0x4001174")]
		public const int positiveFire = 7;

		[Token(Token = "0x4001175")]
		public const int positiveSchool = 14;

		[Token(Token = "0x4001176")]
		public const int positiveHospital = 15;

		[Token(Token = "0x4001177")]
		public const int increasedSmelly = 9;

		[Token(Token = "0x4001178")]
		public const int positiveResidential = 11;

		[Token(Token = "0x4001179")]
		public const int positiveCommercial = 12;

		[Token(Token = "0x400117A")]
		public const int positiveIndustrial = 13;

		[Token(Token = "0x400117B")]
		public const int negativeHappiness = 16;

		[Token(Token = "0x400117C")]
		public const int downgrade = 18;

		[Token(Token = "0x400117D")]
		public const int negativePower = 19;

		[Token(Token = "0x400117E")]
		public const int negativeWater = 20;

		[Token(Token = "0x400117F")]
		public const int negativeNetwork = 21;

		[Token(Token = "0x4001180")]
		public const int negativePolice = 22;

		[Token(Token = "0x4001181")]
		public const int negativeFire = 23;

		[Token(Token = "0x4001182")]
		public const int negativeSchool = 30;

		[Token(Token = "0x4001183")]
		public const int negativeHospital = 31;

		[Token(Token = "0x4001184")]
		public const int negativeResidential = 27;

		[Token(Token = "0x4001185")]
		public const int negativeCommercial = 28;

		[Token(Token = "0x4001186")]
		public const int negativeIndustrial = 29;

		[Token(Token = "0x4001187")]
		public const int bulldoze = 8;

		[Token(Token = "0x4001188")]
		public const int positiveSandstorm = 10;

		[Token(Token = "0x4001189")]
		public const int negativeSandstorm = 26;

		[Token(Token = "0x400118A")]
		public const int negativeIconShift = 16;
	}

	[Token(Token = "0x2000267")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5080", Offset = "0x6F5080")]
	private sealed class <>c__DisplayClass54_0
	{
		[Token(Token = "0x400118B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BuildingInfo newBuilding;

		[Token(Token = "0x400118C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BuildingEffectCalculator <>4__this;

		[Token(Token = "0x60013C6")]
		[Address(RVA = "0xB62F10", Offset = "0xB62F10", VA = "0xB62F10")]
		public <>c__DisplayClass54_0()
		{
		}

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0xB64718", Offset = "0xB64718", VA = "0xB64718")]
		internal void <AddBuilding>b__0(BuildingInstance building)
		{
		}
	}

	[Token(Token = "0x2000268")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5090", Offset = "0x6F5090")]
	private sealed class <>c__DisplayClass56_0
	{
		[Token(Token = "0x400118D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BuildingInstance buildingToDemolish;

		[Token(Token = "0x400118E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BuildingEffectCalculator <>4__this;

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0xB63264", Offset = "0xB63264", VA = "0xB63264")]
		public <>c__DisplayClass56_0()
		{
		}

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0xB64AF0", Offset = "0xB64AF0", VA = "0xB64AF0")]
		internal void <RemoveBuilding>b__0(BuildingInstance building)
		{
		}
	}

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float iconSize;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float iconSpacing;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem particleSystem;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private NativeArray<ParticleSystem.Particle> particles;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ParticleAnimationData[] particleAnimationData;

	[Token(Token = "0x400004D")]
	private const int maxParticles = 1000;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int numParticles;

	[Token(Token = "0x400004F")]
	private const int maxEffectedBuildings = 500;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private EffectedBuilding[] effectedBuildings;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int numEffectedBuildings;

	[Token(Token = "0x4000052")]
	private const int numIconTypes = 32;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float animationDuration;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float totalAnimationDuration;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float animationTime;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5C78", Offset = "0x6F5C78")]
	private bool <isAnimating>k__BackingField;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Player player;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5C88", Offset = "0x6F5C88")]
	private int <totalHappinessScore>k__BackingField;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5C98", Offset = "0x6F5C98")]
	private int <totalCommercialIncomeScore>k__BackingField;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5CA8", Offset = "0x6F5CA8")]
	private int <totalIndustrialIncomeScore>k__BackingField;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5CB8", Offset = "0x6F5CB8")]
	private int <totalBuildingEffect>k__BackingField;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5CC8", Offset = "0x6F5CC8")]
	private int[] <iconTypeCounters>k__BackingField;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float bobEffectScale;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float fadeRiseDistance;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float maxAnimationDuration;

	[Token(Token = "0x1700000C")]
	public bool isAnimating
	{
		[Token(Token = "0x600004B")]
		[Address(RVA = "0xB61990", Offset = "0xB61990", VA = "0xB61990")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FADA4", Offset = "0x6FADA4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600004C")]
		[Address(RVA = "0xB61998", Offset = "0xB61998", VA = "0xB61998")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FADB4", Offset = "0x6FADB4")]
		private set
		{
		}
	}

	[Token(Token = "0x1700000D")]
	public int totalHappinessScore
	{
		[Token(Token = "0x600004D")]
		[Address(RVA = "0xB619A4", Offset = "0xB619A4", VA = "0xB619A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FADC4", Offset = "0x6FADC4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600004E")]
		[Address(RVA = "0xB619AC", Offset = "0xB619AC", VA = "0xB619AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FADD4", Offset = "0x6FADD4")]
		set
		{
		}
	}

	[Token(Token = "0x1700000E")]
	public int totalCommercialIncomeScore
	{
		[Token(Token = "0x600004F")]
		[Address(RVA = "0xB619B4", Offset = "0xB619B4", VA = "0xB619B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FADE4", Offset = "0x6FADE4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000050")]
		[Address(RVA = "0xB619BC", Offset = "0xB619BC", VA = "0xB619BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FADF4", Offset = "0x6FADF4")]
		set
		{
		}
	}

	[Token(Token = "0x1700000F")]
	public int totalIndustrialIncomeScore
	{
		[Token(Token = "0x6000051")]
		[Address(RVA = "0xB619C4", Offset = "0xB619C4", VA = "0xB619C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FAE04", Offset = "0x6FAE04")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000052")]
		[Address(RVA = "0xB619CC", Offset = "0xB619CC", VA = "0xB619CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FAE14", Offset = "0x6FAE14")]
		set
		{
		}
	}

	[Token(Token = "0x17000010")]
	public int totalBuildingEffect
	{
		[Token(Token = "0x6000053")]
		[Address(RVA = "0xB619D4", Offset = "0xB619D4", VA = "0xB619D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FAE24", Offset = "0x6FAE24")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000054")]
		[Address(RVA = "0xB619DC", Offset = "0xB619DC", VA = "0xB619DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FAE34", Offset = "0x6FAE34")]
		set
		{
		}
	}

	[Token(Token = "0x17000011")]
	public int[] iconTypeCounters
	{
		[Token(Token = "0x6000055")]
		[Address(RVA = "0xB619E4", Offset = "0xB619E4", VA = "0xB619E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FAE44", Offset = "0x6FAE44")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000056")]
		[Address(RVA = "0xB619EC", Offset = "0xB619EC", VA = "0xB619EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FAE54", Offset = "0x6FAE54")]
		private set
		{
		}
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0xB619F4", Offset = "0xB619F4", VA = "0xB619F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0xB61B3C", Offset = "0xB61B3C", VA = "0xB61B3C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0xB61BB4", Offset = "0xB61BB4", VA = "0xB61BB4")]
	public int GetMaxIconCountForZoneRange(int x, int y, int width, int height)
	{
		return default(int);
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0xB61C5C", Offset = "0xB61C5C", VA = "0xB61C5C")]
	public static void VisitBuildings(City city, Vector3 center, int radius, Action<BuildingInstance> visitor)
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0xB61E40", Offset = "0xB61E40", VA = "0xB61E40")]
	public int GetIconCountForBuilding(BuildingInstance building)
	{
		return default(int);
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0xB61EB0", Offset = "0xB61EB0", VA = "0xB61EB0")]
	public void Clear()
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0xB61F04", Offset = "0xB61F04", VA = "0xB61F04")]
	public void HideIfNotAnimating()
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0xB61F50", Offset = "0xB61F50", VA = "0xB61F50")]
	private void AddParticle(Vector3 position, int iconIndex)
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0xB62078", Offset = "0xB62078", VA = "0xB62078")]
	private bool AddIcon(int zoneX, int zoneY, int index)
	{
		return default(bool);
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0xB62214", Offset = "0xB62214", VA = "0xB62214")]
	private bool AddIcon(BuildingInstance building, int index)
	{
		return default(bool);
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0xB62350", Offset = "0xB62350", VA = "0xB62350")]
	private Vector3 GetEffectCenter(BuildingInfo building, int x, int y, int rotation)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0xB625A4", Offset = "0xB625A4", VA = "0xB625A4")]
	public void AddZone(ZoneManager.ZoneType zoneType, int x, int y)
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0xB62C48", Offset = "0xB62C48", VA = "0xB62C48")]
	public void AddBuilding(City city, BuildingInfo newBuilding, int x, int y, int rotation)
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0xB62F18", Offset = "0xB62F18", VA = "0xB62F18")]
	public void RemoveBuildings(City city, List<BuildingInstance> buildings)
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0xB62FB8", Offset = "0xB62FB8", VA = "0xB62FB8")]
	public void RemoveBuilding(City city, BuildingInstance buildingToDemolish)
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0xB6326C", Offset = "0xB6326C", VA = "0xB6326C")]
	public void ShowNetworkTowersWithoutPower(City city)
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0xB63340", Offset = "0xB63340", VA = "0xB63340")]
	private void ApplyUtilityAndServiceChanges(City city)
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0xB63880", Offset = "0xB63880", VA = "0xB63880")]
	public void Apply(PlayerInterface playerInterface)
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0xB63C48", Offset = "0xB63C48", VA = "0xB63C48")]
	private void PlaySounds()
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0xB63D10", Offset = "0xB63D10", VA = "0xB63D10")]
	public void Animate()
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0xB6414C", Offset = "0xB6414C", VA = "0xB6414C")]
	public void AnimateFadeOut()
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0xB642D8", Offset = "0xB642D8", VA = "0xB642D8")]
	private void Update()
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0xB6467C", Offset = "0xB6467C", VA = "0xB6467C")]
	public BuildingEffectCalculator()
	{
	}
}
[Token(Token = "0x2000010")]
public class BuildingFire : MonoBehaviour
{
	[Token(Token = "0x600006E")]
	[Address(RVA = "0xB934E8", Offset = "0xB934E8", VA = "0xB934E8")]
	public BuildingFire()
	{
	}
}
[Token(Token = "0x2000011")]
public class BuildingHelicopterPad : MonoBehaviour
{
	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Helicopter helicopterPrefab;

	[Token(Token = "0x600006F")]
	[Address(RVA = "0xB934F0", Offset = "0xB934F0", VA = "0xB934F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0xB935A0", Offset = "0xB935A0", VA = "0xB935A0")]
	public BuildingHelicopterPad()
	{
	}
}
[Token(Token = "0x2000012")]
public enum PortType
{
	[Token(Token = "0x4000062")]
	None,
	[Token(Token = "0x4000063")]
	Airport,
	[Token(Token = "0x4000064")]
	Seaport
}
[Token(Token = "0x2000013")]
public class BuildingInfo : MonoBehaviour
{
	[Token(Token = "0x2000269")]
	public enum UtilityUsage
	{
		[Token(Token = "0x4001190")]
		None,
		[Token(Token = "0x4001191")]
		Low,
		[Token(Token = "0x4001192")]
		Medium,
		[Token(Token = "0x4001193")]
		High
	}

	[Token(Token = "0x200026A")]
	[Flags]
	public enum SpecialBehaviour
	{
		[Token(Token = "0x4001195")]
		None = 0,
		[Token(Token = "0x4001196")]
		IncreaseWaterSupply = 1,
		[Token(Token = "0x4001197")]
		BoostNearbyResidentialHappiness = 2,
		[Token(Token = "0x4001198")]
		BoostNearbyCommercialIncome = 4,
		[Token(Token = "0x4001199")]
		BoostNearbyIndustrialIncome = 8,
		[Token(Token = "0x400119A")]
		BoostSchoolRadius = 0x10,
		[Token(Token = "0x400119B")]
		BoostOverallHappiness = 0x40,
		[Token(Token = "0x400119C")]
		EyeSore = 0x80,
		[Token(Token = "0x400119D")]
		Smelly = 0x100,
		[Token(Token = "0x400119E")]
		BoostZoneDensity = 0x200,
		[Token(Token = "0x400119F")]
		Noisy = 0x400
	}

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string displayName;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite icon;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int width;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int height;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float elevation;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float foundation;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int requiredClearance;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int cost;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int weeklyCost;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public UtilityUsage powerUsageType;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int powerSupply;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool powerOutputBasedOnWind;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UtilityUsage waterUsageType;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int waterSupply;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int groundWaterUsageRadius;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int networkSupplyRange;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public CityInfo.Theme theme;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int citizenCapacityCached;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool requiresRoadAccess;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	public ZoneManager.ZoneType zoneType;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public ZoneDensity zoneDensity;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BudgetManager.ExpenseCategory expenseCategory;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public CityServiceManager.ServiceType serviceType;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int serviceStrength;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool canDemolish;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	public bool useMeshBatcher;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public VehicleCollection carSpawnType;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float carSpawnChance;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public GroundMap.GroundTile buildRestriction;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public PortType portType;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public bool makeHoleInTerrain;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
	public bool isConstructionSite;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public BuildingInfo constructionSiteBuildingInfo;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool isUnique;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public BuildingInfo isUpgradeOfBuildingType;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public SpecialBehaviour specialBehaviour;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public int specialBehaviourInfluenceRadius;

	[Token(Token = "0x17000012")]
	public int citizenCapacity
	{
		[Token(Token = "0x6000071")]
		[Address(RVA = "0xB941B4", Offset = "0xB941B4", VA = "0xB941B4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000013")]
	public int powerUsage
	{
		[Token(Token = "0x6000072")]
		[Address(RVA = "0xB9422C", Offset = "0xB9422C", VA = "0xB9422C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000014")]
	public int waterUsage
	{
		[Token(Token = "0x6000073")]
		[Address(RVA = "0xB942A0", Offset = "0xB942A0", VA = "0xB942A0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000015")]
	public int maximumPotentialIncome
	{
		[Token(Token = "0x6000075")]
		[Address(RVA = "0xB94314", Offset = "0xB94314", VA = "0xB94314")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000016")]
	public bool requiresGameObjectPlacement
	{
		[Token(Token = "0x6000076")]
		[Address(RVA = "0xB94358", Offset = "0xB94358", VA = "0xB94358")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000017")]
	public bool requiresNetwork
	{
		[Token(Token = "0x600007A")]
		[Address(RVA = "0xB94834", Offset = "0xB94834", VA = "0xB94834")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000018")]
	public bool isZonedBuilding
	{
		[Token(Token = "0x600007B")]
		[Address(RVA = "0xB947A4", Offset = "0xB947A4", VA = "0xB947A4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0xB941E8", Offset = "0xB941E8", VA = "0xB941E8")]
	private int CalculateCitizenCapacity()
	{
		return default(int);
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0xB946A4", Offset = "0xB946A4", VA = "0xB946A4")]
	public bool IsUpgradeOfBuilding(BuildingInfo other)
	{
		return default(bool);
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0xB94784", Offset = "0xB94784", VA = "0xB94784")]
	public bool RequiresService(CityServiceManager.ServiceType service)
	{
		return default(bool);
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0xB947B4", Offset = "0xB947B4", VA = "0xB947B4")]
	public void GetRoadAccess(int x, int y, int rotation, out int roadX, out int roadY)
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0xB94844", Offset = "0xB94844", VA = "0xB94844")]
	public bool HasSpecialBehaviour(SpecialBehaviour mask)
	{
		return default(bool);
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0xB94854", Offset = "0xB94854", VA = "0xB94854")]
	public BuildingInfo()
	{
	}
}
[Token(Token = "0x2000014")]
public interface IBuildingBehaviourExtension
{
	[Token(Token = "0x600007E")]
	void OnPlaceBuilding(BuildingInstance building, bool fromSaveData);

	[Token(Token = "0x600007F")]
	void OnDemolishBuilding(BuildingInstance building);

	[Token(Token = "0x6000080")]
	void Simulate(float deltaTime);
}
[Token(Token = "0x2000015")]
public class BuildingInstance
{
	[Token(Token = "0x200026B")]
	public enum State
	{
		[Token(Token = "0x40011A1")]
		Building,
		[Token(Token = "0x40011A2")]
		Built,
		[Token(Token = "0x40011A3")]
		Burning,
		[Token(Token = "0x40011A4")]
		Collapsing
	}

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public BuildingManager manager;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BuildingInfo info;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int x;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int y;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int rotation;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public MeshBatcherV2.InstanceId meshInstanceId;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MeshBatcherV2.InstanceId shadowProxyMeshInstanceId;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject gameObject;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public IBuildingBehaviourExtension behaviourExtension;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<CitizenManager.CitizenId> citizens;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public CarManager.CarId carId;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public BadgeGroup badges;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public double buildTime;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public double lastPoweredTime;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public double lastWateredTime;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public double lastOccupiedTime;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public double lastOnFireTime;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool isAbandoned;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public State state;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public double timeEnteredState;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public List<GameObject> fireEffects;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public BuildingInfo buildingInfoToConstruct;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public double constructionStartTime;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Helicopter helicopter;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public bool hasHelicopterPad;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public Vector3 helicopterPadPosition;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Quaternion helicopterPadRotation;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float happinessScore;

	[Token(Token = "0x17000019")]
	public City city
	{
		[Token(Token = "0x6000081")]
		[Address(RVA = "0xB948FC", Offset = "0xB948FC", VA = "0xB948FC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700001A")]
	public bool hasEmploymentSpaceAvailable
	{
		[Token(Token = "0x6000085")]
		[Address(RVA = "0xB94A8C", Offset = "0xB94A8C", VA = "0xB94A8C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700001B")]
	public bool hasResidenceSpaceAvailable
	{
		[Token(Token = "0x6000086")]
		[Address(RVA = "0xB94B18", Offset = "0xB94B18", VA = "0xB94B18")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700001C")]
	public int effectiveWidth
	{
		[Token(Token = "0x6000087")]
		[Address(RVA = "0xB93944", Offset = "0xB93944", VA = "0xB93944")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700001D")]
	public int effectiveHeight
	{
		[Token(Token = "0x6000088")]
		[Address(RVA = "0xB93974", Offset = "0xB93974", VA = "0xB93974")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700001E")]
	public int numEmployedCitizens
	{
		[Token(Token = "0x6000089")]
		[Address(RVA = "0xB94BA4", Offset = "0xB94BA4", VA = "0xB94BA4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700001F")]
	public bool hasPower
	{
		[Token(Token = "0x600008A")]
		[Address(RVA = "0xB94C78", Offset = "0xB94C78", VA = "0xB94C78")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000020")]
	public bool hasPowerInPreview
	{
		[Token(Token = "0x600008B")]
		[Address(RVA = "0xB94CD8", Offset = "0xB94CD8", VA = "0xB94CD8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000021")]
	public bool hasWater
	{
		[Token(Token = "0x600008C")]
		[Address(RVA = "0xB94D40", Offset = "0xB94D40", VA = "0xB94D40")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000022")]
	public bool isInSandStorm
	{
		[Token(Token = "0x600008D")]
		[Address(RVA = "0xB94DA0", Offset = "0xB94DA0", VA = "0xB94DA0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000023")]
	public bool isInSandStormInPreview
	{
		[Token(Token = "0x600008E")]
		[Address(RVA = "0xB94E0C", Offset = "0xB94E0C", VA = "0xB94E0C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000024")]
	public bool hasNetwork
	{
		[Token(Token = "0x600008F")]
		[Address(RVA = "0xB94E78", Offset = "0xB94E78", VA = "0xB94E78")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000025")]
	public float timeWithoutPower
	{
		[Token(Token = "0x6000090")]
		[Address(RVA = "0xB94EDC", Offset = "0xB94EDC", VA = "0xB94EDC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000026")]
	public float timeWithoutWater
	{
		[Token(Token = "0x6000091")]
		[Address(RVA = "0xB94F34", Offset = "0xB94F34", VA = "0xB94F34")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000027")]
	public float timeWithoutOccupants
	{
		[Token(Token = "0x6000092")]
		[Address(RVA = "0xB94F8C", Offset = "0xB94F8C", VA = "0xB94F8C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000028")]
	public float timeSinceBuilt
	{
		[Token(Token = "0x6000093")]
		[Address(RVA = "0xB95014", Offset = "0xB95014", VA = "0xB95014")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000029")]
	public float timeSinceConstructionStarted
	{
		[Token(Token = "0x6000094")]
		[Address(RVA = "0xB95060", Offset = "0xB95060", VA = "0xB95060")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700002A")]
	public float timeSinceLastOnFire
	{
		[Token(Token = "0x6000095")]
		[Address(RVA = "0xB950AC", Offset = "0xB950AC", VA = "0xB950AC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700002B")]
	public bool isOnFire
	{
		[Token(Token = "0x6000099")]
		[Address(RVA = "0xB9543C", Offset = "0xB9543C", VA = "0xB9543C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700002C")]
	public bool canDemolish
	{
		[Token(Token = "0x600009A")]
		[Address(RVA = "0xB9548C", Offset = "0xB9548C", VA = "0xB9548C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700002D")]
	public int pollutionGeneration
	{
		[Token(Token = "0x600009B")]
		[Address(RVA = "0xB954BC", Offset = "0xB954BC", VA = "0xB954BC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700002E")]
	public bool isZonedBuilding
	{
		[Token(Token = "0x600009C")]
		[Address(RVA = "0xB954E0", Offset = "0xB954E0", VA = "0xB954E0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700002F")]
	public bool canSpawnCar
	{
		[Token(Token = "0x600009D")]
		[Address(RVA = "0xB95594", Offset = "0xB95594", VA = "0xB95594")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0xB94918", Offset = "0xB94918", VA = "0xB94918")]
	public void SetState(State newState)
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0xB94960", Offset = "0xB94960", VA = "0xB94960")]
	public BuildingInstance(BuildingManager manager)
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0xB94A70", Offset = "0xB94A70", VA = "0xB94A70")]
	public void OnDemolish()
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0xB950F8", Offset = "0xB950F8", VA = "0xB950F8")]
	public void GetRoadAccess(out int roadX, out int roadY)
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0xB95124", Offset = "0xB95124", VA = "0xB95124")]
	public bool IsInFrontOfBuilding(int roadX, int roadY)
	{
		return default(bool);
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0xB9522C", Offset = "0xB9522C", VA = "0xB9522C")]
	public int CalculateIncome()
	{
		return default(int);
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0xB956E8", Offset = "0xB956E8", VA = "0xB956E8")]
	public bool MakeDelivery()
	{
		return default(bool);
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0xB959CC", Offset = "0xB959CC", VA = "0xB959CC")]
	public Bounds CalculateWorldBounds()
	{
		return default(Bounds);
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0xB95B38", Offset = "0xB95B38", VA = "0xB95B38")]
	public void GetMeshTransform(out Vector3 meshPosition, out Quaternion meshRotation)
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0xB95CE8", Offset = "0xB95CE8", VA = "0xB95CE8")]
	public bool IsAffectedBySpecialBehaviour(BuildingInfo.SpecialBehaviour behaviour)
	{
		return default(bool);
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0xB953C8", Offset = "0xB953C8", VA = "0xB953C8")]
	public int GetCountAffectedBySpecialBehaviour(BuildingInfo.SpecialBehaviour behaviour)
	{
		return default(int);
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0xB95D5C", Offset = "0xB95D5C", VA = "0xB95D5C")]
	public Vector3 GetSpecialEffectRadiusCenter()
	{
		return default(Vector3);
	}
}
[Token(Token = "0x2000016")]
public class BuildingParkingSpace : MonoBehaviour
{
	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool reservedForOwner;

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0xB9C978", Offset = "0xB9C978", VA = "0xB9C978")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0xB9CA28", Offset = "0xB9CA28", VA = "0xB9CA28")]
	public int CalculateSpaceIndex()
	{
		return default(int);
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0xB9CB3C", Offset = "0xB9CB3C", VA = "0xB9CB3C")]
	public BuildingParkingSpace()
	{
	}
}
[Token(Token = "0x2000017")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6F46D8", Offset = "0x6F46D8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6F46D8", Offset = "0x6F46D8")]
public class BuildingPlacement : MonoBehaviour
{
	[Token(Token = "0x200026C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F50B0", Offset = "0x6F50B0")]
	private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BuildingPlacement <>4__this;

		[Token(Token = "0x1700032F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013CD")]
			[Address(RVA = "0xB9CEB4", Offset = "0xB9CEB4", VA = "0xB9CEB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000330")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013CF")]
			[Address(RVA = "0xB9CF1C", Offset = "0xB9CF1C", VA = "0xB9CF1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0xB9CBB4", Offset = "0xB9CBB4", VA = "0xB9CBB4")]
		[DebuggerHidden]
		public <Start>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0xB9CE04", Offset = "0xB9CE04", VA = "0xB9CE04", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013CC")]
		[Address(RVA = "0xB9CE08", Offset = "0xB9CE08", VA = "0xB9CE08", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013CE")]
		[Address(RVA = "0xB9CEBC", Offset = "0xB9CEBC", VA = "0xB9CEBC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BuildingInfo buildingType;

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0xB9CB44", Offset = "0xB9CB44", VA = "0xB9CB44")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FAE64", Offset = "0x6FAE64")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0xB9CBE0", Offset = "0xB9CBE0", VA = "0xB9CBE0")]
	public void Place(City city)
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0xB9CDFC", Offset = "0xB9CDFC", VA = "0xB9CDFC")]
	public BuildingPlacement()
	{
	}
}
[Token(Token = "0x2000018")]
public class BuildingTester : CityModule, ISimulationModule
{
	[Token(Token = "0x200026D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F50C0", Offset = "0x6F50C0")]
	private sealed class <Simulate>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BuildingTester <>4__this;

		[Token(Token = "0x17000331")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013D3")]
			[Address(RVA = "0xB9D108", Offset = "0xB9D108", VA = "0xB9D108", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000332")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013D5")]
			[Address(RVA = "0xB9D170", Offset = "0xB9D170", VA = "0xB9D170", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0xB9CF98", Offset = "0xB9CF98", VA = "0xB9CF98")]
		[DebuggerHidden]
		public <Simulate>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0xB9CFD4", Offset = "0xB9CFD4", VA = "0xB9CFD4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0xB9CFD8", Offset = "0xB9CFD8", VA = "0xB9CFD8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0xB9D110", Offset = "0xB9D110", VA = "0xB9D110", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BuildingInfo[] prefabs;

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0xB9CF24", Offset = "0xB9CF24", VA = "0xB9CF24")]
	private void Start()
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0xB9CF28", Offset = "0xB9CF28", VA = "0xB9CF28", Slot = "11")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FAEC8", Offset = "0x6FAEC8")]
	public IEnumerator Simulate(float deltaTime)
	{
		return null;
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0xB9CFC4", Offset = "0xB9CFC4", VA = "0xB9CFC4")]
	public BuildingTester()
	{
	}

	[SpecialName]
	[Token(Token = "0x60000AD")]
	[Address(RVA = "0xB9CFCC", Offset = "0xB9CFCC", VA = "0xB9CFCC", Slot = "12")]
	private GameObject ISimulationModule.get_gameObject()
	{
		return null;
	}
}
[Token(Token = "0x2000019")]
public class BuildingVFX : MonoBehaviour
{
	[Token(Token = "0x60000AE")]
	[Address(RVA = "0xBA0630", Offset = "0xBA0630", VA = "0xBA0630")]
	public BuildingVFX()
	{
	}
}
[Token(Token = "0x200001A")]
public class CellTower : MonoBehaviour, IBuildingBehaviourExtension
{
	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem signalEffect;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private BuildingInstance building;

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0xC04F2C", Offset = "0xC04F2C", VA = "0xC04F2C", Slot = "5")]
	public void OnDemolishBuilding(BuildingInstance inBuilding)
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0xC04F30", Offset = "0xC04F30", VA = "0xC04F30", Slot = "4")]
	public void OnPlaceBuilding(BuildingInstance inBuilding, bool fromSaveData)
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0xC04F78", Offset = "0xC04F78", VA = "0xC04F78", Slot = "6")]
	public void Simulate(float deltaTime)
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0xC05050", Offset = "0xC05050", VA = "0xC05050")]
	public CellTower()
	{
	}
}
[Token(Token = "0x200001B")]
public class CityHall : MonoBehaviour, IBuildingBehaviourExtension
{
	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator lightsAnimator;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] lights;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float lightAppearanceDuration;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float showTime;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5CD8", Offset = "0x6F5CD8")]
	private BuildingInstance <building>k__BackingField;

	[Token(Token = "0x17000030")]
	public BuildingInstance building
	{
		[Token(Token = "0x60000B3")]
		[Address(RVA = "0xC0DF68", Offset = "0xC0DF68", VA = "0xC0DF68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FAF2C", Offset = "0x6FAF2C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000B4")]
		[Address(RVA = "0xC0DF70", Offset = "0xC0DF70", VA = "0xC0DF70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FAF3C", Offset = "0x6FAF3C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000031")]
	private City city
	{
		[Token(Token = "0x60000B5")]
		[Address(RVA = "0xC0DF78", Offset = "0xC0DF78", VA = "0xC0DF78")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0xC0DFA0", Offset = "0xC0DFA0", VA = "0xC0DFA0")]
	private void SetLightsVisible(bool visible)
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0xC0E04C", Offset = "0xC0E04C", VA = "0xC0E04C")]
	public void ShowCelebrationLights()
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0xC0E054", Offset = "0xC0E054", VA = "0xC0E054", Slot = "4")]
	public void OnPlaceBuilding(BuildingInstance inBuilding, bool fromSaveData)
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0xC0E094", Offset = "0xC0E094", VA = "0xC0E094", Slot = "5")]
	public void OnDemolishBuilding(BuildingInstance building)
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xC0E0BC", Offset = "0xC0E0BC", VA = "0xC0E0BC", Slot = "6")]
	public void Simulate(float deltaTime)
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xC0E198", Offset = "0xC0E198", VA = "0xC0E198")]
	public CityHall()
	{
	}
}
[Token(Token = "0x200001C")]
public class RocketLaunchSite : MonoBehaviour, IBuildingBehaviourExtension
{
	[Token(Token = "0x200026E")]
	private enum State
	{
		[Token(Token = "0x40011AC")]
		Idle,
		[Token(Token = "0x40011AD")]
		PreparingLaunch,
		[Token(Token = "0x40011AE")]
		Launching,
		[Token(Token = "0x40011AF")]
		Launched,
		[Token(Token = "0x40011B0")]
		AwaitingLanding,
		[Token(Token = "0x40011B1")]
		Landing
	}

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject rocket;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem groundSmoke;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem rocketSmoke;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource launchSoundSource;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioSource rocketSoundSource;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip launchSound;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip landSound;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float acceleration;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float takeoffVelocity;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float rotationSpeed;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float maxHeight;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float groundSmokeHeightThreshold;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float cutoffHeight;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float landingDuration;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float delayUntilLanding;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5CE8", Offset = "0x6F5CE8")]
	private BuildingInstance <building>k__BackingField;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private State state;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float timeInState;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 padPosition;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Quaternion padRotation;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float velocity;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float launchAngleDegrees;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Quaternion launchRotation;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float launchCountdown;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private GazeTimer gazeTimer;

	[Token(Token = "0x17000032")]
	public bool isActive
	{
		[Token(Token = "0x60000BC")]
		[Address(RVA = "0xC2AFBC", Offset = "0xC2AFBC", VA = "0xC2AFBC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000033")]
	public BuildingInstance building
	{
		[Token(Token = "0x60000BD")]
		[Address(RVA = "0xC2AFDC", Offset = "0xC2AFDC", VA = "0xC2AFDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FAF4C", Offset = "0x6FAF4C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000BE")]
		[Address(RVA = "0xC2AFE4", Offset = "0xC2AFE4", VA = "0xC2AFE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FAF5C", Offset = "0x6FAF5C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000034")]
	private Player player
	{
		[Token(Token = "0x60000BF")]
		[Address(RVA = "0xC2AFEC", Offset = "0xC2AFEC", VA = "0xC2AFEC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0xC2B03C", Offset = "0xC2B03C", VA = "0xC2B03C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0xC2B178", Offset = "0xC2B178", VA = "0xC2B178")]
	private void EnterState(State newState)
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0xC2B358", Offset = "0xC2B358", VA = "0xC2B358")]
	public void Launch(float countdown)
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0xC2B360", Offset = "0xC2B360", VA = "0xC2B360", Slot = "6")]
	public void Simulate(float deltaTime)
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0xC2BA68", Offset = "0xC2BA68", VA = "0xC2BA68", Slot = "4")]
	public void OnPlaceBuilding(BuildingInstance inBuilding, bool fromSaveData)
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0xC2BA7C", Offset = "0xC2BA7C", VA = "0xC2BA7C", Slot = "5")]
	public void OnDemolishBuilding(BuildingInstance building)
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0xC2BA80", Offset = "0xC2BA80", VA = "0xC2BA80")]
	public RocketLaunchSite()
	{
	}
}
[Token(Token = "0x200001D")]
public class WindTurbine : MonoBehaviour, IBuildingBehaviourExtension
{
	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject pole;

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0xAB17F4", Offset = "0xAB17F4", VA = "0xAB17F4", Slot = "5")]
	public void OnDemolishBuilding(BuildingInstance building)
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0xAB17F8", Offset = "0xAB17F8", VA = "0xAB17F8", Slot = "4")]
	public void OnPlaceBuilding(BuildingInstance building, bool fromSaveData)
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0xAB1830", Offset = "0xAB1830", VA = "0xAB1830")]
	public void UpdateRotation(City city)
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0xAB192C", Offset = "0xAB192C", VA = "0xAB192C", Slot = "6")]
	public void Simulate(float deltaTime)
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0xAB1930", Offset = "0xAB1930", VA = "0xAB1930")]
	public WindTurbine()
	{
	}
}
[Token(Token = "0x200001E")]
public class PlaneData
{
	[Token(Token = "0x200026F")]
	public enum PlaneState
	{
		[Token(Token = "0x40011B3")]
		HeadingToAirport,
		[Token(Token = "0x40011B4")]
		Landing,
		[Token(Token = "0x40011B5")]
		Landed,
		[Token(Token = "0x40011B6")]
		TakingOff,
		[Token(Token = "0x40011B7")]
		HeadingOutOfMap,
		[Token(Token = "0x40011B8")]
		LeavingMap
	}

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float exitAngle;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float cruisingAltitude;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject gameObject;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlaneInfo planeInfo;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TrailRenderer trailRenderer;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Animator animator;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float trailDuration;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public PlaneState state;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int airportX;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int airportY;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float landingTime;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int spawnHash;

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0xA22178", Offset = "0xA22178", VA = "0xA22178")]
	public PlaneData()
	{
	}
}
[Token(Token = "0x200001F")]
public class AirTrafficManager : CityModule, IDebugPanelProvider
{
	[Token(Token = "0x2000270")]
	public class PlaneSaveData
	{
		[Token(Token = "0x40011B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float exitAngle;

		[Token(Token = "0x40011BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float cruisingAltitude;

		[Token(Token = "0x40011BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int spawnHash;

		[Token(Token = "0x40011BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float trailDuration;

		[Token(Token = "0x40011BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 position;

		[Token(Token = "0x40011BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Quaternion rotation;

		[Token(Token = "0x40011BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int airportX;

		[Token(Token = "0x40011C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int airportY;

		[Token(Token = "0x40011C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public PlaneData.PlaneState state;

		[Token(Token = "0x40011C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float landingTime;

		[Token(Token = "0x60013D6")]
		[Address(RVA = "0xB54374", Offset = "0xB54374", VA = "0xB54374")]
		public PlaneSaveData()
		{
		}

		[Token(Token = "0x60013D7")]
		[Address(RVA = "0xB53B38", Offset = "0xB53B38", VA = "0xB53B38")]
		public PlaneSaveData(AirTrafficManager manager, PlaneData inData)
		{
		}

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0xB53E08", Offset = "0xB53E08", VA = "0xB53E08")]
		public PlaneData ToPlaneData(AirTrafficManager manager)
		{
			return null;
		}
	}

	[Token(Token = "0x2000271")]
	public class AirTrafficManagerSaveData : SaveSystem.ModuleData
	{
		[Token(Token = "0x40011C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float timeSincePlaneSpawned;

		[Token(Token = "0x40011C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlaneSaveData[] planeData;

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0xB53B30", Offset = "0xB53B30", VA = "0xB53B30")]
		public AirTrafficManagerSaveData()
		{
		}
	}

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float outerCullDistance;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minCruisingAltitude;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxCruisingAltitude;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minTimeBetweenSpawningPlanes;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VehicleCollection vehicleCollection;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<PlaneData> planes;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float landingDuration;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float timeSincePlaneSpawned;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int desiredNumPlanes;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 cityCenter;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float innerCullDistanceSqr;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float outerCullDistanceSqr;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float cruiseSpeed;

	[Token(Token = "0x17000035")]
	private Player player
	{
		[Token(Token = "0x60000CD")]
		[Address(RVA = "0xB51938", Offset = "0xB51938", VA = "0xB51938")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000036")]
	public override Type saveModuleDataType
	{
		[Token(Token = "0x60000D8")]
		[Address(RVA = "0xB5392C", Offset = "0xB5392C", VA = "0xB5392C", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0xB51988", Offset = "0xB51988", VA = "0xB51988", Slot = "8")]
	public override void Init()
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0xB51AD0", Offset = "0xB51AD0", VA = "0xB51AD0")]
	private Vector3 AngleToLocation(float angle, float altitude)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0xB51C04", Offset = "0xB51C04", VA = "0xB51C04")]
	private float AngleFromDestination(Vector3 destination)
	{
		return default(float);
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0xB51D14", Offset = "0xB51D14", VA = "0xB51D14")]
	private bool IsVisible(Vector3 position)
	{
		return default(bool);
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0xB51DDC", Offset = "0xB51DDC", VA = "0xB51DDC")]
	private void Update()
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0xB5354C", Offset = "0xB5354C", VA = "0xB5354C")]
	private PlaneData GetPlaneAtAirport(int x, int y)
	{
		return null;
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0xB536D8", Offset = "0xB536D8", VA = "0xB536D8")]
	private void SteerPlaneToPosition(PlaneData plane, Vector3 location, float deltaTime)
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0xB52C88", Offset = "0xB52C88", VA = "0xB52C88")]
	private bool SteerPlaneToTransform(PlaneData plane, Vector3 location, Quaternion rotation, float deltaTime)
	{
		return default(bool);
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0xB53424", Offset = "0xB53424", VA = "0xB53424")]
	private AirportInfo GetAirport(int x, int y)
	{
		return null;
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0xB527CC", Offset = "0xB527CC", VA = "0xB527CC")]
	private void SpawnPlane()
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0xB5399C", Offset = "0xB5399C", VA = "0xB5399C", Slot = "5")]
	public override SaveSystem.ModuleData OnSave()
	{
		return null;
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0xB53BF0", Offset = "0xB53BF0", VA = "0xB53BF0", Slot = "6")]
	public override void OnLoad(SaveSystem.SaveGame saveGame, SaveSystem.ModuleData data)
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0xB53FD0", Offset = "0xB53FD0", VA = "0xB53FD0", Slot = "11")]
	public void OnDebugPanel()
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0xB542E0", Offset = "0xB542E0", VA = "0xB542E0")]
	public AirTrafficManager()
	{
	}
}
[Token(Token = "0x2000020")]
public class BirdManager : CityModule
{
	[Token(Token = "0x2000272")]
	public class PerchTransform
	{
		[Token(Token = "0x40011C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BirdFlock.BirdType birdType;

		[Token(Token = "0x40011C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 position;

		[Token(Token = "0x40011C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Quaternion rotation;

		[Token(Token = "0x40011C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BirdFlock.Bird bird;

		[Token(Token = "0x60013DA")]
		[Address(RVA = "0xB5A490", Offset = "0xB5A490", VA = "0xB5A490")]
		public PerchTransform()
		{
		}
	}

	[Token(Token = "0x2000273")]
	public class PerchTile
	{
		[Token(Token = "0x40011C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<PerchTransform> perches;

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0xB59B20", Offset = "0xB59B20", VA = "0xB59B20")]
		public PerchTile()
		{
		}
	}

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BirdFlock seagullFlockPrefab;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BirdFlock vultureFlockPrefab;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public BirdFlock parrotFlockPrefab;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PerchTile[] perchTiles;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public List<BirdFlockAvoidancePoint> avoidancePoints;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<BirdFlockAvoidancePoint> generalAvoidancePoints;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<BirdFlock> birdFlocks;

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0xB59A10", Offset = "0xB59A10", VA = "0xB59A10", Slot = "8")]
	public override void Init()
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0xB59B90", Offset = "0xB59B90", VA = "0xB59B90")]
	private void SpawnBirdFlocks()
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0xB59F90", Offset = "0xB59F90", VA = "0xB59F90", Slot = "10")]
	public override void OnResetProgress()
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0xB5A178", Offset = "0xB5A178", VA = "0xB5A178")]
	public void OnPlaceBuilding(BuildingInstance building)
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0xB5A498", Offset = "0xB5A498", VA = "0xB5A498")]
	public void OnDemolishBuilding(BuildingInstance building)
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0xB5974C", Offset = "0xB5974C", VA = "0xB5974C")]
	public bool IsOnFire(Vector3 position)
	{
		return default(bool);
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0xB5A650", Offset = "0xB5A650", VA = "0xB5A650")]
	public bool IsOnFire(int tileX, int tileY)
	{
		return default(bool);
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0xB57A6C", Offset = "0xB57A6C", VA = "0xB57A6C")]
	public PerchTransform GetFreePerch(int tileX, int tileY, BirdFlock.BirdType birdType)
	{
		return null;
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0xB5A6A4", Offset = "0xB5A6A4", VA = "0xB5A6A4")]
	public PerchTransform AddPerch(BirdFlock.BirdType birdType, Vector3 position, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0xB5A7C8", Offset = "0xB5A7C8", VA = "0xB5A7C8")]
	public PerchTransform AddPerch(BirdPerchPoint perchPoint)
	{
		return null;
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0xB5A8F8", Offset = "0xB5A8F8", VA = "0xB5A8F8")]
	public void RemovePerch(PerchTransform perch)
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0xB5A9D8", Offset = "0xB5A9D8", VA = "0xB5A9D8")]
	public BirdManager()
	{
	}
}
[Token(Token = "0x2000021")]
public class BridgeManager : CityModule
{
	[Token(Token = "0x2000274")]
	public class Bridge
	{
		[Token(Token = "0x40011CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int x;

		[Token(Token = "0x40011CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int y;

		[Token(Token = "0x40011CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int length;

		[Token(Token = "0x40011CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int dirX;

		[Token(Token = "0x40011CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int dirY;

		[NonSerialized]
		[Token(Token = "0x40011CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[XmlIgnore]
		public List<MeshBatcherV2.InstanceId> batchIds;

		[Token(Token = "0x17000333")]
		public Bounds bounds
		{
			[Token(Token = "0x60013E2")]
			[Address(RVA = "0xB5C6A4", Offset = "0xB5C6A4", VA = "0xB5C6A4")]
			get
			{
				return default(Bounds);
			}
		}

		[Token(Token = "0x17000334")]
		public Vector3 center
		{
			[Token(Token = "0x60013E3")]
			[Address(RVA = "0xB5D9A0", Offset = "0xB5D9A0", VA = "0xB5D9A0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0xB5C890", Offset = "0xB5C890", VA = "0xB5C890")]
		public Bridge(Bridge inBridge)
		{
		}

		[Token(Token = "0x60013DD")]
		[Address(RVA = "0xB5D85C", Offset = "0xB5D85C", VA = "0xB5D85C")]
		public Bridge()
		{
		}

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0xB5C458", Offset = "0xB5C458", VA = "0xB5C458")]
		public void Visit(Action<int, int> action)
		{
		}

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0xB5C940", Offset = "0xB5C940", VA = "0xB5C940")]
		public void VisitAdjacentTiles(Action<int, int> action)
		{
		}

		[Token(Token = "0x60013E0")]
		[Address(RVA = "0xB5CC70", Offset = "0xB5CC70", VA = "0xB5CC70")]
		public bool IsOnBridge(int testX, int testY)
		{
			return default(bool);
		}

		[Token(Token = "0x60013E1")]
		[Address(RVA = "0xB5D8CC", Offset = "0xB5D8CC", VA = "0xB5D8CC")]
		public bool IsAdjacentToBridge(int testX, int testY)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000275")]
	public class BridgeSaveData : SaveSystem.ModuleData
	{
		[Token(Token = "0x40011D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Bridge[] bridges;

		[Token(Token = "0x60013E4")]
		[Address(RVA = "0xB5CF78", Offset = "0xB5CF78", VA = "0xB5CF78")]
		public BridgeSaveData()
		{
		}
	}

	[Token(Token = "0x2000276")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F50D0", Offset = "0x6F50D0")]
	private sealed class <>c__DisplayClass20_0
	{
		[Token(Token = "0x40011D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action<GameObject, Vector3, Quaternion> tileConstructor;

		[Token(Token = "0x40011D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BridgeManager <>4__this;

		[Token(Token = "0x40011D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Quaternion bridgePieceRotation;

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0xB5C448", Offset = "0xB5C448", VA = "0xB5C448")]
		public <>c__DisplayClass20_0()
		{
		}
	}

	[Token(Token = "0x2000277")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F50E0", Offset = "0x6F50E0")]
	private sealed class <>c__DisplayClass20_1
	{
		[Token(Token = "0x40011D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool piece;

		[Token(Token = "0x40011D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass20_0 CS$<>8__locals1;

		[Token(Token = "0x60013E6")]
		[Address(RVA = "0xB5C450", Offset = "0xB5C450", VA = "0xB5C450")]
		public <>c__DisplayClass20_1()
		{
		}

		[Token(Token = "0x60013E7")]
		[Address(RVA = "0xB5D444", Offset = "0xB5D444", VA = "0xB5D444")]
		internal void <ConstructBridge>b__0(int x, int y)
		{
		}
	}

	[Token(Token = "0x2000278")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F50F0", Offset = "0x6F50F0")]
	private sealed class <>c__DisplayClass20_2
	{
		[Token(Token = "0x40011D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int index;

		[Token(Token = "0x40011D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int largePieceTilePosition;

		[Token(Token = "0x40011D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass20_0 CS$<>8__locals2;

		[Token(Token = "0x60013E8")]
		[Address(RVA = "0xB5C4F0", Offset = "0xB5C4F0", VA = "0xB5C4F0")]
		public <>c__DisplayClass20_2()
		{
		}

		[Token(Token = "0x60013E9")]
		[Address(RVA = "0xB5D528", Offset = "0xB5D528", VA = "0xB5D528")]
		internal void <ConstructBridge>b__1(int x, int y)
		{
		}
	}

	[Token(Token = "0x2000279")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5100", Offset = "0x6F5100")]
	private sealed class <>c__DisplayClass22_0
	{
		[Token(Token = "0x40011D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BridgeManager <>4__this;

		[Token(Token = "0x40011DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Bridge bridge;

		[Token(Token = "0x60013EA")]
		[Address(RVA = "0xB5C69C", Offset = "0xB5C69C", VA = "0xB5C69C")]
		public <>c__DisplayClass22_0()
		{
		}

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0xB5D628", Offset = "0xB5D628", VA = "0xB5D628")]
		internal void <PlaceBridgeMesh>b__0(GameObject prefab, Vector3 position, Quaternion rotation)
		{
		}
	}

	[Token(Token = "0x200027A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5110", Offset = "0x6F5110")]
	private sealed class <>c__DisplayClass26_0
	{
		[Token(Token = "0x40011DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ConstructionCost costReport;

		[Token(Token = "0x40011DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BridgeManager <>4__this;

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0xB5CE7C", Offset = "0xB5CE7C", VA = "0xB5CE7C")]
		public <>c__DisplayClass26_0()
		{
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0xB5D7A4", Offset = "0xB5D7A4", VA = "0xB5D7A4")]
		internal void <AdjustConstructionCost>b__0(int x, int y)
		{
		}

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0xB5D7E4", Offset = "0xB5D7E4", VA = "0xB5D7E4")]
		internal void <AdjustConstructionCost>b__1(int x, int y)
		{
		}
	}

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxBridgeLength;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int maxSmallBridgeLength;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int largeBridgePieceLength;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject smallBridgePrefab1;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject smallBridgePrefab2;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject largeBridgePrefab;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject largeBridgeEndPrefab;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Dictionary<GameObject, List<GameObject>> previewPrefabPool;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<GameObject> previewPrefabObjects;

	[Token(Token = "0x40000F3")]
	private const float bridgePlacementHeight = 0.009f;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5D08", Offset = "0x6F5D08")]
	private List<Bridge> <bridges>k__BackingField;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MeshBatcherV2 meshBatcher;

	[Token(Token = "0x17000037")]
	public List<Bridge> bridges
	{
		[Token(Token = "0x60000EA")]
		[Address(RVA = "0xB5BBD8", Offset = "0xB5BBD8", VA = "0xB5BBD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FAF6C", Offset = "0x6FAF6C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000EB")]
		[Address(RVA = "0xB5BBE0", Offset = "0xB5BBE0", VA = "0xB5BBE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FAF7C", Offset = "0x6FAF7C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000038")]
	public override Type saveModuleDataType
	{
		[Token(Token = "0x60000F7")]
		[Address(RVA = "0xB5CE84", Offset = "0xB5CE84", VA = "0xB5CE84", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0xB5BBE8", Offset = "0xB5BBE8", VA = "0xB5BBE8", Slot = "8")]
	public override void Init()
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0xB5BC50", Offset = "0xB5BC50", VA = "0xB5BC50")]
	private GameObject SpawnPreviewPrefab(GameObject obj, Vector3 position, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0xB5BEDC", Offset = "0xB5BEDC", VA = "0xB5BEDC")]
	private void Clear()
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0xB5C12C", Offset = "0xB5C12C", VA = "0xB5C12C")]
	public void ClearPreview()
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0xB5C1C8", Offset = "0xB5C1C8", VA = "0xB5C1C8")]
	private void ConstructBridge(Bridge bridge, Action<GameObject, Vector3, Quaternion> tileConstructor)
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0xB5C4F8", Offset = "0xB5C4F8", VA = "0xB5C4F8")]
	public void ShowPreview(Bridge bridge)
	{
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0xB5C584", Offset = "0xB5C584", VA = "0xB5C584")]
	private void PlaceBridgeMesh(Bridge bridge)
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0xB5C750", Offset = "0xB5C750", VA = "0xB5C750")]
	public void PlaceBridge(Bridge bridge)
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0xB5CA00", Offset = "0xB5CA00", VA = "0xB5CA00")]
	private void DemolishBridge(Bridge bridge)
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0xB5CBA0", Offset = "0xB5CBA0", VA = "0xB5CBA0")]
	public void DemolishBridge(int x, int y)
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0xB5CD8C", Offset = "0xB5CD8C", VA = "0xB5CD8C")]
	public void AdjustConstructionCost(ConstructionCost costReport, Bridge bridge)
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0xB5CEF4", Offset = "0xB5CEF4", VA = "0xB5CEF4", Slot = "5")]
	public override SaveSystem.ModuleData OnSave()
	{
		return null;
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0xB5CF80", Offset = "0xB5CF80", VA = "0xB5CF80", Slot = "6")]
	public override void OnLoad(SaveSystem.SaveGame saveGame, SaveSystem.ModuleData data)
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0xB5D0F0", Offset = "0xB5D0F0", VA = "0xB5D0F0", Slot = "10")]
	public override void OnResetProgress()
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0xB5D204", Offset = "0xB5D204", VA = "0xB5D204")]
	public BridgeManager()
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0xB5D2B0", Offset = "0xB5D2B0", VA = "0xB5D2B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FAF8C", Offset = "0x6FAF8C")]
	private void <ShowPreview>b__21_0(GameObject prefab, Vector3 position, Quaternion rotation)
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0xB5D2B4", Offset = "0xB5D2B4", VA = "0xB5D2B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FAF9C", Offset = "0x6FAF9C")]
	private void <PlaceBridge>b__23_0(int x, int y)
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0xB5D358", Offset = "0xB5D358", VA = "0xB5D358")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FAFAC", Offset = "0x6FAFAC")]
	private void <PlaceBridge>b__23_1(int x, int y)
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0xB5D3D4", Offset = "0xB5D3D4", VA = "0xB5D3D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FAFBC", Offset = "0x6FAFBC")]
	private void <DemolishBridge>b__24_0(int x, int y)
	{
	}
}
[Token(Token = "0x2000022")]
public class BuildingManager : CityModule, ISimulationModule, IDebugPanelProvider
{
	[Token(Token = "0x200027B")]
	[Flags]
	public enum BuildPlacementQueryResult
	{
		[Token(Token = "0x40011DE")]
		Success = 0,
		[Token(Token = "0x40011DF")]
		NoGroundWater = 1,
		[Token(Token = "0x40011E0")]
		NoRoadAccess = 2,
		[Token(Token = "0x40011E1")]
		NoThermalVent = 4,
		[Token(Token = "0x40011E2")]
		BlockedByBuilding = 8,
		[Token(Token = "0x40011E3")]
		UniqueBuildingAlreadyExists = 0x10,
		[Token(Token = "0x40011E4")]
		BlockedByProp = 0x20,
		[Token(Token = "0x40011E5")]
		IncorrectZoning = 0x40,
		[Token(Token = "0x40011E6")]
		IncorrectTileType = 0x80
	}

	[Token(Token = "0x200027C")]
	public class BuildingSaveData : SaveSystem.ModuleData
	{
		[Token(Token = "0x40011E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BuildingInstanceSaveData[] buildings;

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0xB9AE64", Offset = "0xB9AE64", VA = "0xB9AE64")]
		public BuildingSaveData()
		{
		}
	}

	[Token(Token = "0x200027D")]
	public class BuildingInstanceSaveData
	{
		[Token(Token = "0x40011E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int buildingInfoIndex;

		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int buildingInfoToConstructIndex;

		[Token(Token = "0x40011EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int x;

		[Token(Token = "0x40011EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int y;

		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int rot;

		[Token(Token = "0x40011ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public short carIndex;

		[Token(Token = "0x40011EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public double buildTime;

		[Token(Token = "0x40011EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public double lastWateredTime;

		[Token(Token = "0x40011F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public double lastPoweredTime;

		[Token(Token = "0x40011F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public double lastOccupiedTime;

		[Token(Token = "0x40011F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public double constructionStartTime;

		[Token(Token = "0x40011F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool isAbandoned;

		[Token(Token = "0x40011F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<CitizenManager.CitizenId> citizens;

		[Token(Token = "0x40011F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Helicopter.HelicopterSaveData helicopterSaveData;

		[Token(Token = "0x40011F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BuildingInstance.State state;

		[Token(Token = "0x40011F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public double timeEnteredState;

		[Token(Token = "0x60013F0")]
		[Address(RVA = "0xB9C970", Offset = "0xB9C970", VA = "0xB9C970")]
		public BuildingInstanceSaveData()
		{
		}

		[Token(Token = "0x60013F1")]
		[Address(RVA = "0xB9AE6C", Offset = "0xB9AE6C", VA = "0xB9AE6C")]
		public BuildingInstanceSaveData(BuildingInstance copyFrom)
		{
		}
	}

	[Token(Token = "0x200027E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5130", Offset = "0x6F5130")]
	private sealed class <Simulate>d__57 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BuildingManager <>4__this;

		[Token(Token = "0x40011FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <numUpgradeConstructionSites>5__2;

		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <n>5__3;

		[Token(Token = "0x17000335")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013F5")]
			[Address(RVA = "0xB9C900", Offset = "0xB9C900", VA = "0xB9C900", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000336")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013F7")]
			[Address(RVA = "0xB9C968", Offset = "0xB9C968", VA = "0xB9C968", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013F2")]
		[Address(RVA = "0xB9AAAC", Offset = "0xB9AAAC", VA = "0xB9AAAC")]
		[DebuggerHidden]
		public <Simulate>d__57(int <>1__state)
		{
		}

		[Token(Token = "0x60013F3")]
		[Address(RVA = "0xB9BB8C", Offset = "0xB9BB8C", VA = "0xB9BB8C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0xB9BB90", Offset = "0xB9BB90", VA = "0xB9BB90", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0xB9C908", Offset = "0xB9C908", VA = "0xB9C908", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshBatcherV2 buildingMeshBatcher;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RuntimeAnimatorController buildingAnimatorController;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject buildingCollapseEffectPrefab;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject buildingDemolishEffectPrefab;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject fireEffectPrefab;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public MeshBatcherV2 shadowProxyMeshBatcher;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material shadowProxyMaterial;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<BuildingInstance> buildings;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<BuildingInstance> uniqueBuildings;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5D18", Offset = "0x6F5D18")]
	private BuildingInstance <airport>k__BackingField;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5D28", Offset = "0x6F5D28")]
	private CityHall <cityHall>k__BackingField;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5D38", Offset = "0x6F5D38")]
	private int <airportTileX>k__BackingField;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5D48", Offset = "0x6F5D48")]
	private int <airportTileY>k__BackingField;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5D58", Offset = "0x6F5D58")]
	private int <airportTileDir>k__BackingField;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool enableBuildingAbandonment;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<IBuildingBehaviourExtension> buildingBehaviours;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private BuildingInstance[] buildingMap;

	[Token(Token = "0x17000039")]
	public static BuildingManager current
	{
		[Token(Token = "0x6000100")]
		[Address(RVA = "0xB93C24", Offset = "0xB93C24", VA = "0xB93C24")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700003A")]
	public BuildingInstance airport
	{
		[Token(Token = "0x6000101")]
		[Address(RVA = "0xB95F58", Offset = "0xB95F58", VA = "0xB95F58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FAFCC", Offset = "0x6FAFCC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000102")]
		[Address(RVA = "0xB95F60", Offset = "0xB95F60", VA = "0xB95F60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FAFDC", Offset = "0x6FAFDC")]
		private set
		{
		}
	}

	[Token(Token = "0x1700003B")]
	public CityHall cityHall
	{
		[Token(Token = "0x6000103")]
		[Address(RVA = "0xB95F68", Offset = "0xB95F68", VA = "0xB95F68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FAFEC", Offset = "0x6FAFEC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000104")]
		[Address(RVA = "0xB95F70", Offset = "0xB95F70", VA = "0xB95F70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FAFFC", Offset = "0x6FAFFC")]
		set
		{
		}
	}

	[Token(Token = "0x1700003C")]
	public int airportTileX
	{
		[Token(Token = "0x6000105")]
		[Address(RVA = "0xB95F78", Offset = "0xB95F78", VA = "0xB95F78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FB00C", Offset = "0x6FB00C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000106")]
		[Address(RVA = "0xB95F80", Offset = "0xB95F80", VA = "0xB95F80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FB01C", Offset = "0x6FB01C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700003D")]
	public int airportTileY
	{
		[Token(Token = "0x6000107")]
		[Address(RVA = "0xB95F88", Offset = "0xB95F88", VA = "0xB95F88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FB02C", Offset = "0x6FB02C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000108")]
		[Address(RVA = "0xB95F90", Offset = "0xB95F90", VA = "0xB95F90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FB03C", Offset = "0x6FB03C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700003E")]
	public int airportTileDir
	{
		[Token(Token = "0x6000109")]
		[Address(RVA = "0xB95F98", Offset = "0xB95F98", VA = "0xB95F98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FB04C", Offset = "0x6FB04C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600010A")]
		[Address(RVA = "0xB95FA0", Offset = "0xB95FA0", VA = "0xB95FA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FB05C", Offset = "0x6FB05C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700003F")]
	private Player player
	{
		[Token(Token = "0x600010B")]
		[Address(RVA = "0xB95FA8", Offset = "0xB95FA8", VA = "0xB95FA8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000040")]
	public override Type saveModuleDataType
	{
		[Token(Token = "0x6000122")]
		[Address(RVA = "0xB9ACAC", Offset = "0xB9ACAC", VA = "0xB9ACAC", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0xB95FF8", Offset = "0xB95FF8", VA = "0xB95FF8", Slot = "8")]
	public override void Init()
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0xB96070", Offset = "0xB96070", VA = "0xB96070")]
	public void IgniteBuilding(BuildingInstance building, bool fromLoad = false)
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0xB96720", Offset = "0xB96720", VA = "0xB96720")]
	public void ExtinguishBuilding(BuildingInstance building)
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0xB968F8", Offset = "0xB968F8", VA = "0xB968F8")]
	public void PlayDemolishParticleEffect(GameObject effectPrefab, BuildingInstance building)
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0xB96BD4", Offset = "0xB96BD4", VA = "0xB96BD4")]
	public void CollapseBuilding(BuildingInstance building, bool playSound = true)
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0xB97538", Offset = "0xB97538", VA = "0xB97538")]
	public static bool CanPreviewPlacement(BuildingInfo info, BuildPlacementQueryResult result)
	{
		return default(bool);
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0xB97574", Offset = "0xB97574", VA = "0xB97574")]
	public bool DoesBuildingTypeExist(BuildingInfo info)
	{
		return default(bool);
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0xB976E0", Offset = "0xB976E0", VA = "0xB976E0")]
	public BuildPlacementQueryResult CanPlace(BuildingInfo info, int x, int y, int rotation, bool allowDemolition = false)
	{
		return default(BuildPlacementQueryResult);
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0xB96FCC", Offset = "0xB96FCC", VA = "0xB96FCC")]
	private void SpawnBuildingGameObject(BuildingInstance building, bool spawnAsDynamic)
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0xB9804C", Offset = "0xB9804C", VA = "0xB9804C")]
	public BuildingInstance Place(BuildingInfo info, int x, int y, int rotation)
	{
		return null;
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0xB98CE8", Offset = "0xB98CE8", VA = "0xB98CE8")]
	private void SetupHelicopters(BuildingInstance building)
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0xB98254", Offset = "0xB98254", VA = "0xB98254")]
	private BuildingInstance PlaceInternal(BuildingInfo info, int x, int y, int rotation, bool fromSaveData)
	{
		return null;
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0xB995C8", Offset = "0xB995C8", VA = "0xB995C8")]
	public void UpgradeBuilding(BuildingInstance existingBuilding, BuildingInfo replacementInfo)
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0xB9819C", Offset = "0xB9819C", VA = "0xB9819C")]
	public void Demolish(BuildingInstance building)
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0xB999C4", Offset = "0xB999C4", VA = "0xB999C4")]
	private void DemolishInternal(BuildingInstance building, bool fromSaveData, bool allowDemolishEffects)
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0xB9A14C", Offset = "0xB9A14C", VA = "0xB9A14C")]
	private void Clear()
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0xB9A1C0", Offset = "0xB9A1C0", VA = "0xB9A1C0")]
	public BuildingInstance GetBuildingUnsafe(int x, int y)
	{
		return null;
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0xB97FA8", Offset = "0xB97FA8", VA = "0xB97FA8")]
	public BuildingInstance GetBuilding(int x, int y)
	{
		return null;
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0xB9A220", Offset = "0xB9A220", VA = "0xB9A220")]
	public BuildingInstance Raycast(Ray ray)
	{
		return null;
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0xB9A7F4", Offset = "0xB9A7F4", VA = "0xB9A7F4")]
	private void ForEachNearbyBuilding(BuildingInstance building, int range, Action<BuildingInstance> action)
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0xB9AA3C", Offset = "0xB9AA3C", VA = "0xB9AA3C", Slot = "11")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FB06C", Offset = "0x6FB06C")]
	public IEnumerator Simulate(float deltaTime)
	{
		return null;
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0xB9AAD8", Offset = "0xB9AAD8", VA = "0xB9AAD8")]
	private void TestRebatch()
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0xB9AD1C", Offset = "0xB9AD1C", VA = "0xB9AD1C", Slot = "5")]
	public override SaveSystem.ModuleData OnSave()
	{
		return null;
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0xB9B018", Offset = "0xB9B018", VA = "0xB9B018", Slot = "6")]
	public override void OnLoad(SaveSystem.SaveGame saveGame, SaveSystem.ModuleData data)
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0xB9B32C", Offset = "0xB9B32C", VA = "0xB9B32C", Slot = "7")]
	public override void OnPostLoad()
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0xB9B348", Offset = "0xB9B348", VA = "0xB9B348", Slot = "13")]
	public void OnDebugPanel()
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0xB9B34C", Offset = "0xB9B34C", VA = "0xB9B34C")]
	public BuildingInfo GetAvailableMostUpgradedBuilding(BuildingInfo info)
	{
		return null;
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0xB9B47C", Offset = "0xB9B47C", VA = "0xB9B47C")]
	public void OnRemoveRoadTile(int x, int y)
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0xB9B59C", Offset = "0xB9B59C", VA = "0xB9B59C")]
	public void AdjustConstructionCostForRoadTileDemolish(ConstructionCost costReport, int x, int y)
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0xB9B6E4", Offset = "0xB9B6E4", VA = "0xB9B6E4", Slot = "10")]
	public override void OnResetProgress()
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0xB9B958", Offset = "0xB9B958", VA = "0xB9B958")]
	private void Update()
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0xB9BACC", Offset = "0xB9BACC", VA = "0xB9BACC")]
	public BuildingManager()
	{
	}

	[SpecialName]
	[Token(Token = "0x600012D")]
	[Address(RVA = "0xB9BB84", Offset = "0xB9BB84", VA = "0xB9BB84", Slot = "12")]
	private GameObject ISimulationModule.get_gameObject()
	{
		return null;
	}
}
[Token(Token = "0x2000023")]
public class CarManager : CityModule, IDebugPanelProvider
{
	[Token(Token = "0x200027F")]
	public struct CarId
	{
		[Token(Token = "0x40011FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public short index;

		[Token(Token = "0x17000337")]
		public bool isValid
		{
			[Token(Token = "0x60013F9")]
			[Address(RVA = "0x779590", Offset = "0x779590", VA = "0x779590")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000338")]
		public static CarId invalidId
		{
			[Token(Token = "0x60013FA")]
			[Address(RVA = "0xC0136C", Offset = "0xC0136C", VA = "0xC0136C")]
			get
			{
				return default(CarId);
			}
		}

		[Token(Token = "0x60013F8")]
		[Address(RVA = "0x779588", Offset = "0x779588", VA = "0x779588")]
		public CarId(short index)
		{
		}
	}

	[Token(Token = "0x2000280")]
	public enum CarState : byte
	{
		[Token(Token = "0x40011FF")]
		Null,
		[Token(Token = "0x4001200")]
		Parked,
		[Token(Token = "0x4001201")]
		SearchingForParking,
		[Token(Token = "0x4001202")]
		EnteringPark,
		[Token(Token = "0x4001203")]
		ExitingPark,
		[Token(Token = "0x4001204")]
		Driving,
		[Token(Token = "0x4001205")]
		Repathing,
		[Token(Token = "0x4001206")]
		PullingOver,
		[Token(Token = "0x4001207")]
		PulledOver,
		[Token(Token = "0x4001208")]
		ExitingPulledOver,
		[Token(Token = "0x4001209")]
		OnFire
	}

	[Token(Token = "0x2000281")]
	public struct Location
	{
		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public byte x;

		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public byte y;

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0x7795A0", Offset = "0x7795A0", VA = "0x7795A0")]
		public Location(int _x, int _y)
		{
		}

		[Token(Token = "0x60013FC")]
		[Address(RVA = "0x7795AC", Offset = "0x7795AC", VA = "0x7795AC", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60013FD")]
		[Address(RVA = "0x7795B4", Offset = "0x7795B4", VA = "0x7795B4", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60013FE")]
		[Address(RVA = "0xC01468", Offset = "0xC01468", VA = "0xC01468")]
		public static bool operator ==(Location a, Location b)
		{
			return default(bool);
		}

		[Token(Token = "0x60013FF")]
		[Address(RVA = "0xC014C4", Offset = "0xC014C4", VA = "0xC014C4")]
		public static bool operator !=(Location a, Location b)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000282")]
	public struct CarDataGameObjects
	{
		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject gameObject;

		[Token(Token = "0x400120D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject emergencyLightsGameObject;

		[Token(Token = "0x400120E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject fireEffectObject;

		[Token(Token = "0x6001400")]
		[Address(RVA = "0x779580", Offset = "0x779580", VA = "0x779580")]
		public void SetInitialTransform(Vector3 position, Quaternion rotation)
		{
		}
	}

	[Token(Token = "0x2000283")]
	public struct CarData
	{
		[Token(Token = "0x400120F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public CarState state;

		[Token(Token = "0x4001210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public Location previous;

		[Token(Token = "0x4001211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public Location current;

		[Token(Token = "0x4001212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public Location next;

		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
		public Location nextNext;

		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float progress;

		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float timeWaiting;

		[Token(Token = "0x4001216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float suppressionTimer;

		[Token(Token = "0x4001217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool reachedDestination;

		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool isSirenEnabled;

		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<int> claimed;

		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PathFinder.Path path;

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float speed;

		[Token(Token = "0x400121C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 previousGameObjectPosition;

		[Token(Token = "0x400121D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Quaternion previousGameObjectRotation;

		[Token(Token = "0x400121E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector3 nextGameObjectPosition;

		[Token(Token = "0x400121F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Quaternion nextGameObjectRotation;

		[Token(Token = "0x4001220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int homeX;

		[Token(Token = "0x4001221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int homeY;

		[Token(Token = "0x6001401")]
		[Address(RVA = "0x779504", Offset = "0x779504", VA = "0x779504")]
		public BuildingInstance GetHomeBuilding(City city)
		{
			return null;
		}

		[Token(Token = "0x6001402")]
		[Address(RVA = "0x77950C", Offset = "0x77950C", VA = "0x77950C")]
		public void SetHomeBuilding(BuildingInstance building)
		{
		}

		[Token(Token = "0x6001403")]
		[Address(RVA = "0x779524", Offset = "0x779524", VA = "0x779524")]
		public void SetInitialTransform(Vector3 position, Quaternion rotation)
		{
		}
	}

	[Token(Token = "0x2000284")]
	public enum ParkingType
	{
		[Token(Token = "0x4001223")]
		None,
		[Token(Token = "0x4001224")]
		Horizontal,
		[Token(Token = "0x4001225")]
		Vertical
	}

	[Token(Token = "0x2000285")]
	public class CarSaveData : SaveSystem.ModuleData
	{
		[Token(Token = "0x4001226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CarData[] cars;

		[Token(Token = "0x4001227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string carMap;

		[Token(Token = "0x4001228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string parkedMap;

		[NonSerialized]
		[Token(Token = "0x4001229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[XmlIgnore]
		public short[] carMapRaw;

		[NonSerialized]
		[Token(Token = "0x400122A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[XmlIgnore]
		public short[] parkedMapRaw;

		[Token(Token = "0x6001404")]
		[Address(RVA = "0xC01374", Offset = "0xC01374", VA = "0xC01374", Slot = "4")]
		public override void OnPreWrite()
		{
		}

		[Token(Token = "0x6001405")]
		[Address(RVA = "0xC013B8", Offset = "0xC013B8", VA = "0xC013B8")]
		public CarSaveData()
		{
		}
	}

	[Token(Token = "0x2000286")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5140", Offset = "0x6F5140")]
	private sealed class <>c__DisplayClass108_0
	{
		[Token(Token = "0x400122B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RoadManager.Road nextRoad;

		[Token(Token = "0x6001406")]
		[Address(RVA = "0xC011A0", Offset = "0xC011A0", VA = "0xC011A0")]
		public <>c__DisplayClass108_0()
		{
		}

		[Token(Token = "0x6001407")]
		[Address(RVA = "0xC011A8", Offset = "0xC011A8", VA = "0xC011A8")]
		internal bool <ProgressNextNodeBehaviour>b__0(short x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float cullDistance;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool driveOnLeft;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool allowUTurns;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float parkingSpeed;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minDrivingSpeed;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maxDrivingSpeed;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float stoppingSpeed;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float acceleration;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float deceleration;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float emergencySpeedMultiplier;

	[Token(Token = "0x4000111")]
	private const float pullOverTime = 2f;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool enableDebugDraw;

	[Token(Token = "0x4000113")]
	private const float carLength = 0.22f;

	[Token(Token = "0x4000114")]
	private const float halfCarLength = 0.11f;

	[Token(Token = "0x4000115")]
	private const float parkAdjustSpeed = 0.25f;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int currentInterpolationFrame;

	[Token(Token = "0x4000117")]
	private const int numInterpolationFrames = 4;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject fireEffectPrefab;

	[Token(Token = "0x4000119")]
	private const int MaxCars = 256;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int carMapWidth;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int carMapHeight;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private short[] carMap;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private short[] parkedMap;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public CarData[] cars;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public CarDataGameObjects[] carGameObjects;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int numActiveCars;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int numAllocatedCars;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float speedUpHack;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float[] interpolationAlphas;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int lastLoadedSaveVersion;

	[Token(Token = "0x17000041")]
	public bool useInterpolation
	{
		[Token(Token = "0x600012E")]
		[Address(RVA = "0xBA2034", Offset = "0xBA2034", VA = "0xBA2034")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000042")]
	private bool useCarCulling
	{
		[Token(Token = "0x600012F")]
		[Address(RVA = "0xBA20A4", Offset = "0xBA20A4", VA = "0xBA20A4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000043")]
	public override Type saveModuleDataType
	{
		[Token(Token = "0x600017B")]
		[Address(RVA = "0xBAA890", Offset = "0xBAA890", VA = "0xBAA890", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0xBA2114", Offset = "0xBA2114", VA = "0xBA2114", Slot = "8")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0xBA2250", Offset = "0xBA2250", VA = "0xBA2250")]
	private void Update()
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0xBA41E0", Offset = "0xBA41E0", VA = "0xBA41E0")]
	private void DebugDraw()
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0xBA5004", Offset = "0xBA5004", VA = "0xBA5004")]
	public bool IsCarAtWorldTile(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0xBA50E8", Offset = "0xBA50E8", VA = "0xBA50E8")]
	public bool IsCarInFrontOfBuilding(CarId id, BuildingInstance building)
	{
		return default(bool);
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0xB95840", Offset = "0xB95840", VA = "0xB95840")]
	public bool IsParked(CarId id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0xB9C8BC", Offset = "0xB9C8BC", VA = "0xB9C8BC")]
	public bool DidReachDestination(CarId id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0xBA5144", Offset = "0xBA5144", VA = "0xBA5144")]
	public BuildingInstance GetCarHomeBuilding(CarId id)
	{
		return null;
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0xBA51A4", Offset = "0xBA51A4", VA = "0xBA51A4")]
	public void GetCarLocation(CarId id, out int x, out int y)
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0xBA5218", Offset = "0xBA5218", VA = "0xBA5218")]
	public GameObject GetCarGameObject(CarId id)
	{
		return null;
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0xBA525C", Offset = "0xBA525C", VA = "0xBA525C")]
	public void IgniteCars(int x, int y)
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0xBA55E8", Offset = "0xBA55E8", VA = "0xBA55E8")]
	private int CalculateNeighbourMask(int x, int y)
	{
		return default(int);
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0xBA56EC", Offset = "0xBA56EC", VA = "0xBA56EC")]
	public ParkingType GetParkingType(int x, int y)
	{
		return default(ParkingType);
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0xBA576C", Offset = "0xBA576C", VA = "0xBA576C")]
	private bool IsParkingSpaceAvailable(Location loc)
	{
		return default(bool);
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0xBA5804", Offset = "0xBA5804", VA = "0xBA5804")]
	private bool FindAnyParkingSpace(Location current, out Location result)
	{
		return default(bool);
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0xBA5AA4", Offset = "0xBA5AA4", VA = "0xBA5AA4")]
	private bool FindNearbyParking(BuildingInstance building, out Location space)
	{
		return default(bool);
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0xBA5E78", Offset = "0xBA5E78", VA = "0xBA5E78")]
	private bool FindAdjacentParking(BuildingInstance building, out Location result)
	{
		return default(bool);
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0xBA61BC", Offset = "0xBA61BC", VA = "0xBA61BC")]
	private void SetCarParked(short index, Location parkedLocation)
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0xBA6900", Offset = "0xBA6900", VA = "0xBA6900")]
	private void SpawnGameObject(short index)
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0xB99258", Offset = "0xB99258", VA = "0xB99258")]
	public CarId SpawnCarAtPort(BuildingInstance homeBuilding)
	{
		return default(CarId);
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0xBA6CAC", Offset = "0xBA6CAC", VA = "0xBA6CAC")]
	private bool IsPortFree(int portX, int portY, int portDir)
	{
		return default(bool);
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0xBA7234", Offset = "0xBA7234", VA = "0xBA7234")]
	private void GetSpawnParamsFromPort(int portX, int portY, int portDir, out int spawnX, out int spawnY, out int dirX, out int dirY)
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0xBA6CF8", Offset = "0xBA6CF8", VA = "0xBA6CF8")]
	private CarId SpawnCarAtPortInternal(BuildingInstance homeBuilding, int portX, int portY, int portDir)
	{
		return default(CarId);
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0xB99180", Offset = "0xB99180", VA = "0xB99180")]
	public CarId SpawnParkedCar(BuildingInstance homeBuilding)
	{
		return default(CarId);
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0xBA742C", Offset = "0xBA742C", VA = "0xBA742C")]
	private bool IsUTurn(Location current, Location next)
	{
		return default(bool);
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0xBA672C", Offset = "0xBA672C", VA = "0xBA672C")]
	private void GetFollowDirection(Location current, out int dirX, out int dirY)
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0xBA74FC", Offset = "0xBA74FC", VA = "0xBA74FC")]
	private short GetRoadIndex(int x, int y)
	{
		return default(short);
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0xBA754C", Offset = "0xBA754C", VA = "0xBA754C")]
	private short FindConnectedRoadInDirection(int x, int y, int dirX, int dirY, out int distance)
	{
		return default(short);
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0xBA7708", Offset = "0xBA7708", VA = "0xBA7708")]
	private bool GetDirectionTo(int x, int y, short roadIndex, out int dirX, out int dirY)
	{
		return default(bool);
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0xBA78D0", Offset = "0xBA78D0", VA = "0xBA78D0")]
	private bool FollowRoadToPoint(int x, int y, int endX, int endY, int dirX, int dirY)
	{
		return default(bool);
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0xBA7ADC", Offset = "0xBA7ADC", VA = "0xBA7ADC")]
	private bool GetDirectionTo(int x, int y, int endX, int endY, out int dirX, out int dirY)
	{
		return default(bool);
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0xBA7C1C", Offset = "0xBA7C1C", VA = "0xBA7C1C")]
	private void GetCarDirectionFromPathDirection(Location carLocation, int pathDirX, int pathDirY, out int carDirX, out int carDirY)
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0xBA7CCC", Offset = "0xBA7CCC", VA = "0xBA7CCC")]
	private bool GetNextCarLocation(PathFinder.Path path, Location current, out Location next)
	{
		return default(bool);
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0xB9588C", Offset = "0xB9588C", VA = "0xB9588C")]
	public bool PathCarTo(CarId id, BuildingInstance building)
	{
		return default(bool);
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0xBA8158", Offset = "0xBA8158", VA = "0xBA8158")]
	public void SetSirenEnabled(CarId id, bool enabled)
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0xBA81A0", Offset = "0xBA81A0", VA = "0xBA81A0")]
	public bool PathCarTo(CarId id, int endX, int endY)
	{
		return default(bool);
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0xBA82CC", Offset = "0xBA82CC", VA = "0xBA82CC")]
	public bool IsCarPathingTo(CarId id, int endX, int endY)
	{
		return default(bool);
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0xBA7E70", Offset = "0xBA7E70", VA = "0xBA7E70")]
	private bool PathCar(CarId id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0xBA8474", Offset = "0xBA8474", VA = "0xBA8474")]
	private void RepathCar(short index)
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0xBA8334", Offset = "0xBA8334", VA = "0xBA8334")]
	private void GetNextCarLocationWander(Location current, out Location next)
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0xBA853C", Offset = "0xBA853C", VA = "0xBA853C")]
	private bool IsCarLocationAdjacentToBuilding(Location location, BuildingInstance building)
	{
		return default(bool);
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0xBA864C", Offset = "0xBA864C", VA = "0xBA864C")]
	private void GetNextCarLocationFindParking(Location current, out Location next, BuildingInstance building)
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0xBA8770", Offset = "0xBA8770", VA = "0xBA8770")]
	private void GetNextCarLocationFindParking(Location current, out Location next, Location parkingLocation)
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0xBA7310", Offset = "0xBA7310", VA = "0xBA7310")]
	private short AddCar()
	{
		return default(short);
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0xB9A148", Offset = "0xB9A148", VA = "0xB9A148")]
	public void RemoveCar(CarId car)
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0xBA8824", Offset = "0xBA8824", VA = "0xBA8824")]
	private void RemoveCar(short index)
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0xBA8B00", Offset = "0xBA8B00", VA = "0xBA8B00")]
	private bool IsClaimed(short carIndex, int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0xBA8B4C", Offset = "0xBA8B4C", VA = "0xBA8B4C")]
	private bool CanClaim(short carIndex, int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0xBA72CC", Offset = "0xBA72CC", VA = "0xBA72CC")]
	private short GetCarIndexAtSpace(int x, int y)
	{
		return default(short);
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0xBA8C04", Offset = "0xBA8C04", VA = "0xBA8C04")]
	private short GetCarIndexAtParkingSpace(int x, int y)
	{
		return default(short);
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0xBA8388", Offset = "0xBA8388", VA = "0xBA8388")]
	private bool Claim(short carIndex, int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0xBA6850", Offset = "0xBA6850", VA = "0xBA6850")]
	private bool ClaimParking(short carIndex, int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0xBA8C48", Offset = "0xBA8C48", VA = "0xBA8C48")]
	public int GetNumCarsAtTile(int x, int y)
	{
		return default(int);
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0xBA8CFC", Offset = "0xBA8CFC", VA = "0xBA8CFC")]
	private void ReleaseParking(short carIndex, int x, int y)
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0xBA8D50", Offset = "0xBA8D50", VA = "0xBA8D50")]
	private void Release(short carIndex, int x, int y)
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0xBA8A9C", Offset = "0xBA8A9C", VA = "0xBA8A9C")]
	private void ReleaseAllParking(short carIndex)
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0xBA65B8", Offset = "0xBA65B8", VA = "0xBA65B8")]
	private void ReleaseAll(short carIndex)
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0xBA74C4", Offset = "0xBA74C4", VA = "0xBA74C4")]
	private bool IsJunctionTypeAtLocation(Location loc)
	{
		return default(bool);
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0xBA8E3C", Offset = "0xBA8E3C", VA = "0xBA8E3C")]
	private void PredictStep(short index, Location current, out Location next)
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0xBA8F00", Offset = "0xBA8F00", VA = "0xBA8F00")]
	private bool IsValidFreeSpace(short index, Location location)
	{
		return default(bool);
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0xBA8F74", Offset = "0xBA8F74", VA = "0xBA8F74")]
	private void FindAlternativeRoute(short index, Location current, Location next, out Location alternativeNext)
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0xBA908C", Offset = "0xBA908C", VA = "0xBA908C")]
	private bool ForwardSpaceIsClear(short index)
	{
		return default(bool);
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0xBA73D0", Offset = "0xBA73D0", VA = "0xBA73D0")]
	private Vector3 GetSpacePosition(Location loc, bool isParked = false)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0xBA9368", Offset = "0xBA9368", VA = "0xBA9368")]
	private Vector3 GetSpacePositionOld(Location loc, Location next, bool isParked = false)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0xBA9458", Offset = "0xBA9458", VA = "0xBA9458")]
	public bool TeleportToSafeLocation(CarId carId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0xBA945C", Offset = "0xBA945C", VA = "0xBA945C")]
	private bool TeleportToSafeLocation(short index)
	{
		return default(bool);
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0xBA9570", Offset = "0xBA9570", VA = "0xBA9570")]
	public void OnRemoveRoadTile(int x, int y)
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0xBA9654", Offset = "0xBA9654", VA = "0xBA9654")]
	private void TryPullCarOver(short index)
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0xBA9790", Offset = "0xBA9790", VA = "0xBA9790")]
	private bool IsTileAdjacentToBuilding(int tileX, int tileY, BuildingInstance building)
	{
		return default(bool);
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0xBA9870", Offset = "0xBA9870", VA = "0xBA9870")]
	private bool IsCarLocationAtEndOfPath(PathFinder.Path path, Location loc)
	{
		return default(bool);
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0xBA98FC", Offset = "0xBA98FC", VA = "0xBA98FC")]
	private void ProgressNextNodeBehaviour(short index)
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0xBAA2F4", Offset = "0xBAA2F4", VA = "0xBAA2F4")]
	private bool FindAvailableBuildingParkingSpace(short index, BuildingInstance building, out int spaceX, out int spaceY)
	{
		return default(bool);
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0xBAA040", Offset = "0xBAA040", VA = "0xBAA040")]
	private void SearchForParkingBehaviour(short index)
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0xBA2390", Offset = "0xBA2390", VA = "0xBA2390")]
	public void Simulate(float deltaTime)
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0xBAA684", Offset = "0xBAA684", VA = "0xBAA684")]
	private void Clear()
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0xBAA900", Offset = "0xBAA900", VA = "0xBAA900", Slot = "5")]
	public override SaveSystem.ModuleData OnSave()
	{
		return null;
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0xBAAA04", Offset = "0xBAAA04", VA = "0xBAAA04", Slot = "6")]
	public override void OnLoad(SaveSystem.SaveGame saveGame, SaveSystem.ModuleData data)
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0xBAAB58", Offset = "0xBAAB58", VA = "0xBAAB58", Slot = "7")]
	public override void OnPostLoad()
	{
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0xBA41E4", Offset = "0xBA41E4", VA = "0xBA41E4")]
	private bool ValidateCarSpaces()
	{
		return default(bool);
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0xBAAC48", Offset = "0xBAAC48", VA = "0xBAAC48")]
	public bool GetTrafficHappiness(CarId carId, out float happiness)
	{
		return default(bool);
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0xBAAD0C", Offset = "0xBAAD0C", VA = "0xBAAD0C", Slot = "10")]
	public override void OnResetProgress()
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0xBAAEE4", Offset = "0xBAAEE4", VA = "0xBAAEE4", Slot = "11")]
	public void OnDebugPanel()
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0xBAAEE8", Offset = "0xBAAEE8", VA = "0xBAAEE8")]
	public CarManager()
	{
	}
}
[Token(Token = "0x2000024")]
public class CarSpaceMap : CityModule
{
	[Serializable]
	[Token(Token = "0x2000287")]
	public class LayoutTile
	{
		[Token(Token = "0x400122C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector2 lowerLeft;

		[Token(Token = "0x400122D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 lowerRight;

		[Token(Token = "0x400122E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2 upperLeft;

		[Token(Token = "0x400122F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 upperRight;

		[Token(Token = "0x4001230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector2 parkingLowerLeft;

		[Token(Token = "0x4001231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector2 parkingLowerRight;

		[Token(Token = "0x4001232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector2 parkingUpperLeft;

		[Token(Token = "0x4001233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector2 parkingUpperRight;

		[Token(Token = "0x4001234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float parkingLowerLeftRotation;

		[Token(Token = "0x4001235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float parkingLowerRightRotation;

		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float parkingUpperLeftRotation;

		[Token(Token = "0x4001237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float parkingUpperRightRotation;

		[Token(Token = "0x6001408")]
		[Address(RVA = "0xC03A68", Offset = "0xC03A68", VA = "0xC03A68")]
		public LayoutTile()
		{
		}
	}

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool recalculateEveryFrame;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool enableDebugDraw;

	[Token(Token = "0x4000127")]
	private const int roadTileStub = 0;

	[Token(Token = "0x4000128")]
	private const int roadTileStraight = 1;

	[Token(Token = "0x4000129")]
	private const int roadTileCorner = 3;

	[Token(Token = "0x400012A")]
	private const int roadTileTJunction = 2;

	[Token(Token = "0x400012B")]
	private const int roadTileCrossRoads = 5;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LayoutTile[] layoutTiles;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int spaceMapWidth;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int spaceMapHeight;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3[] spaceLocationCache;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool[] spaceLocationValidCache;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3[] parkingSpaceLocationCache;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion[] parkingSpaceRotationCache;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool[] parkingSpaceLocationValidCache;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3[] parkingSpaceBuildingLocationCache;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Quaternion[] parkingSpaceBuildingRotationCache;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private BuildingParkingSpace[] parkingSpaceBuildingOverride;

	[Token(Token = "0x6000184")]
	[Address(RVA = "0xC014E8", Offset = "0xC014E8", VA = "0xC014E8")]
	private Vector3 TransformSpace(int tileX, int tileY, Vector2 space, int rotation)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0xC01644", Offset = "0xC01644", VA = "0xC01644")]
	public void UpdateRoadTile(int x, int y, int roadTileType, int rotation)
	{
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0xC02A84", Offset = "0xC02A84", VA = "0xC02A84")]
	public void ClearRoadTile(int x, int y)
	{
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0xC02BE4", Offset = "0xC02BE4", VA = "0xC02BE4")]
	public bool IsSpaceValid(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0xC02C28", Offset = "0xC02C28", VA = "0xC02C28")]
	public Vector3 GetSpacePosition(int x, int y)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0xC02C78", Offset = "0xC02C78", VA = "0xC02C78")]
	public BuildingParkingSpace GetBuildingParkingSpaceOverride(int x, int y)
	{
		return null;
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0xC02CBC", Offset = "0xC02CBC", VA = "0xC02CBC")]
	public bool IsParkingSpaceValid(int x, int y, bool streetParkingOnly = false)
	{
		return default(bool);
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0xC02DDC", Offset = "0xC02DDC", VA = "0xC02DDC")]
	public Vector3 GetParkingSpacePosition(int x, int y, bool streetParkingOnly = false)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0xC02EEC", Offset = "0xC02EEC", VA = "0xC02EEC")]
	public Quaternion GetParkingSpaceRotation(int x, int y, bool streetParkingOnly = false)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0xC03000", Offset = "0xC03000", VA = "0xC03000", Slot = "8")]
	public override void Init()
	{
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0xC03178", Offset = "0xC03178", VA = "0xC03178")]
	private void RecalculateSpaces()
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0xC0329C", Offset = "0xC0329C", VA = "0xC0329C")]
	private void CalculateBuildingParkingSpaceVars(BuildingInstance building, BuildingParkingSpace space, out Vector3 parkingPosition, out Quaternion parkingRotation, out int spaceX, out int spaceY)
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0xC03668", Offset = "0xC03668", VA = "0xC03668")]
	public void AddBuildingParkingSpaces(BuildingInstance building)
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0xC03810", Offset = "0xC03810", VA = "0xC03810")]
	public void RemoveBuildingParkingSpaces(BuildingInstance building)
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0xC03948", Offset = "0xC03948", VA = "0xC03948", Slot = "10")]
	public override void OnResetProgress()
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0xC03A50", Offset = "0xC03A50", VA = "0xC03A50")]
	public CarSpaceMap()
	{
	}
}
[Token(Token = "0x2000025")]
public class CitizenManager : CityModule, ISimulationModule, IDebugPanelProvider
{
	[Token(Token = "0x2000288")]
	public struct CitizenId
	{
		[Token(Token = "0x4001238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public short index;

		[Token(Token = "0x17000339")]
		public bool isValid
		{
			[Token(Token = "0x600140A")]
			[Address(RVA = "0x779690", Offset = "0x779690", VA = "0x779690")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001409")]
		[Address(RVA = "0x779688", Offset = "0x779688", VA = "0x779688")]
		public CitizenId(short index)
		{
		}
	}

	[Token(Token = "0x2000289")]
	public enum CitizenState : byte
	{
		[Token(Token = "0x400123A")]
		Null,
		[Token(Token = "0x400123B")]
		SearchingForResidence,
		[Token(Token = "0x400123C")]
		SearchingForEmployment,
		[Token(Token = "0x400123D")]
		Idle,
		[Token(Token = "0x400123E")]
		CommutingToWork,
		[Token(Token = "0x400123F")]
		CommutingHome,
		[Token(Token = "0x4001240")]
		Working,
		[Token(Token = "0x4001241")]
		MakingWorkDelivery,
		[Token(Token = "0x4001242")]
		ReturningToWork
	}

	[Token(Token = "0x200028A")]
	[Flags]
	public enum CitizenFlags : byte
	{
		[Token(Token = "0x4001244")]
		None = 0,
		[Token(Token = "0x4001245")]
		HasHome = 1,
		[Token(Token = "0x4001246")]
		Employed = 2,
		[Token(Token = "0x4001247")]
		OwnsCar = 4,
		[Token(Token = "0x4001248")]
		DrivingWorkCar = 8
	}

	[Token(Token = "0x200028B")]
	public struct CitizenData
	{
		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public CitizenState state;

		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public CitizenFlags flags;

		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public byte homeX;

		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public byte homeY;

		[Token(Token = "0x400124D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public byte workX;

		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public byte workY;

		[Token(Token = "0x400124F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public ushort timer;

		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public short commuteDistance;

		[Token(Token = "0x600140B")]
		[Address(RVA = "0x7795F0", Offset = "0x7795F0", VA = "0x7795F0")]
		public void Init()
		{
		}

		[Token(Token = "0x600140C")]
		[Address(RVA = "0x7795FC", Offset = "0x7795FC", VA = "0x7795FC")]
		public BuildingInstance GetHomeBuilding(City city)
		{
			return null;
		}

		[Token(Token = "0x600140D")]
		[Address(RVA = "0x779604", Offset = "0x779604", VA = "0x779604")]
		public void SetHomeBuilding(BuildingInstance building)
		{
		}

		[Token(Token = "0x600140E")]
		[Address(RVA = "0x779644", Offset = "0x779644", VA = "0x779644")]
		public BuildingInstance GetWorkBuilding(City city)
		{
			return null;
		}

		[Token(Token = "0x600140F")]
		[Address(RVA = "0x77964C", Offset = "0x77964C", VA = "0x77964C")]
		public void SetWorkBuilding(BuildingInstance building)
		{
		}
	}

	[Token(Token = "0x200028C")]
	public class CitizenSaveData : SaveSystem.ModuleData
	{
		[Token(Token = "0x4001251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CitizenData[] citizens;

		[Token(Token = "0x4001252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int numHomelessCitizens;

		[Token(Token = "0x6001410")]
		[Address(RVA = "0xC089E4", Offset = "0xC089E4", VA = "0xC089E4")]
		public CitizenSaveData()
		{
		}
	}

	[Token(Token = "0x200028D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5160", Offset = "0x6F5160")]
	private sealed class <Simulate>d__47 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float deltaTime;

		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CitizenManager <>4__this;

		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private short <index>5__2;

		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <updatesLeft>5__3;

		[Token(Token = "0x4001259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ushort <timerTicks>5__4;

		[Token(Token = "0x400125A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int <homelessCitizenCount>5__5;

		[Token(Token = "0x400125B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int <homedCitizensCount>5__6;

		[Token(Token = "0x400125C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int <employedCitizensCount>5__7;

		[Token(Token = "0x1700033A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001414")]
			[Address(RVA = "0xC09FE0", Offset = "0xC09FE0", VA = "0xC09FE0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001416")]
			[Address(RVA = "0xC0A048", Offset = "0xC0A048", VA = "0xC0A048", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001411")]
		[Address(RVA = "0xC07C98", Offset = "0xC07C98", VA = "0xC07C98")]
		[DebuggerHidden]
		public <Simulate>d__47(int <>1__state)
		{
		}

		[Token(Token = "0x6001412")]
		[Address(RVA = "0xC08BB4", Offset = "0xC08BB4", VA = "0xC08BB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001413")]
		[Address(RVA = "0xC08BB8", Offset = "0xC08BB8", VA = "0xC08BB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0xC09FE8", Offset = "0xC09FE8", VA = "0xC09FE8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000137")]
	private const int MaxCitizens = 65536;

	[Token(Token = "0x4000138")]
	private const int CitizensPerUpdate = 2000;

	[Token(Token = "0x4000139")]
	private const int TimerTicksPerSecond = 30;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int ResidenceSearchTimeSeconds;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int EmploymentSearchTimeSeconds;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int TileTraversalTimeSeconds;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int WorkTimeSeconds;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int RestTimeSeconds;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int VehicleJourneyWaitTimeSeconds;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int numActiveCitizens;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int numAllocatedCitizens;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5D68", Offset = "0x6F5D68")]
	private int <numHomelessCitizens>k__BackingField;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5D78", Offset = "0x6F5D78")]
	private int <numHomedCitizens>k__BackingField;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5D88", Offset = "0x6F5D88")]
	private int <numEmployedCitizens>k__BackingField;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private CitizenData[] citizens;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool debugShowCommutes;

	[Token(Token = "0x17000044")]
	private ushort ResidenceSearchTime
	{
		[Token(Token = "0x6000194")]
		[Address(RVA = "0xC07728", Offset = "0xC07728", VA = "0xC07728")]
		get
		{
			return default(ushort);
		}
	}

	[Token(Token = "0x17000045")]
	private ushort EmploymentSearchTime
	{
		[Token(Token = "0x6000195")]
		[Address(RVA = "0xC07738", Offset = "0xC07738", VA = "0xC07738")]
		get
		{
			return default(ushort);
		}
	}

	[Token(Token = "0x17000046")]
	private int TileTraversalTime
	{
		[Token(Token = "0x6000196")]
		[Address(RVA = "0xC07748", Offset = "0xC07748", VA = "0xC07748")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000047")]
	private ushort WorkTime
	{
		[Token(Token = "0x6000197")]
		[Address(RVA = "0xC07758", Offset = "0xC07758", VA = "0xC07758")]
		get
		{
			return default(ushort);
		}
	}

	[Token(Token = "0x17000048")]
	private ushort RestTime
	{
		[Token(Token = "0x6000198")]
		[Address(RVA = "0xC07768", Offset = "0xC07768", VA = "0xC07768")]
		get
		{
			return default(ushort);
		}
	}

	[Token(Token = "0x17000049")]
	private ushort VehicleJourneyWaitTime
	{
		[Token(Token = "0x6000199")]
		[Address(RVA = "0xC07778", Offset = "0xC07778", VA = "0xC07778")]
		get
		{
			return default(ushort);
		}
	}

	[Token(Token = "0x1700004A")]
	public int numHomelessCitizens
	{
		[Token(Token = "0x600019A")]
		[Address(RVA = "0xC07788", Offset = "0xC07788", VA = "0xC07788")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FB0D0", Offset = "0x6FB0D0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600019B")]
		[Address(RVA = "0xC07790", Offset = "0xC07790", VA = "0xC07790")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FB0E0", Offset = "0x6FB0E0")]
		private set
		{
		}
	}

	[Token(Token = "0x1700004B")]
	public int numHomedCitizens
	{
		[Token(Token = "0x600019C")]
		[Address(RVA = "0xC07798", Offset = "0xC07798", VA = "0xC07798")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FB0F0", Offset = "0x6FB0F0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600019D")]
		[Address(RVA = "0xC077A0", Offset = "0xC077A0", VA = "0xC077A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FB100", Offset = "0x6FB100")]
		private set
		{
		}
	}

	[Token(Token = "0x1700004C")]
	public int numEmployedCitizens
	{
		[Token(Token = "0x600019E")]
		[Address(RVA = "0xC077A8", Offset = "0xC077A8", VA = "0xC077A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FB110", Offset = "0x6FB110")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600019F")]
		[Address(RVA = "0xC077B0", Offset = "0xC077B0", VA = "0xC077B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FB120", Offset = "0x6FB120")]
		private set
		{
		}
	}

	[Token(Token = "0x1700004D")]
	public int populationCount
	{
		[Token(Token = "0x60001A0")]
		[Address(RVA = "0xC077B8", Offset = "0xC077B8", VA = "0xC077B8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700004E")]
	public override Type saveModuleDataType
	{
		[Token(Token = "0x60001AD")]
		[Address(RVA = "0xC088D8", Offset = "0xC088D8", VA = "0xC088D8", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0xC077C0", Offset = "0xC077C0", VA = "0xC077C0")]
	private void Start()
	{
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0xC077C4", Offset = "0xC077C4", VA = "0xC077C4", Slot = "10")]
	public override void OnResetProgress()
	{
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0xC07840", Offset = "0xC07840", VA = "0xC07840")]
	public float CalculateCitizenHappiness()
	{
		return default(float);
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0xC07AB4", Offset = "0xC07AB4", VA = "0xC07AB4")]
	private int AddCitizen()
	{
		return default(int);
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0xC07B6C", Offset = "0xC07B6C", VA = "0xC07B6C")]
	private void RemoveCitizen(int index)
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0xC07C18", Offset = "0xC07C18", VA = "0xC07C18", Slot = "11")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FB130", Offset = "0x6FB130")]
	public IEnumerator Simulate(float deltaTime)
	{
		return null;
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0xC07CC4", Offset = "0xC07CC4", VA = "0xC07CC4")]
	private BuildingInstance SearchForResidence()
	{
		return null;
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0xC07E24", Offset = "0xC07E24", VA = "0xC07E24")]
	private bool TrySwapJobs()
	{
		return default(bool);
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0xC082A0", Offset = "0xC082A0", VA = "0xC082A0")]
	private bool SearchForJob(short index)
	{
		return default(bool);
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0xC085CC", Offset = "0xC085CC", VA = "0xC085CC")]
	public bool IsEmployed(CitizenId id)
	{
		return default(bool);
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0xC08648", Offset = "0xC08648", VA = "0xC08648")]
	public CitizenData GetCitizenDataCopy(CitizenId id)
	{
		return default(CitizenData);
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0xC08690", Offset = "0xC08690", VA = "0xC08690")]
	public void OnDemolishedBuilding(BuildingInstance building)
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0xC08948", Offset = "0xC08948", VA = "0xC08948", Slot = "5")]
	public override SaveSystem.ModuleData OnSave()
	{
		return null;
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0xC089EC", Offset = "0xC089EC", VA = "0xC089EC", Slot = "6")]
	public override void OnLoad(SaveSystem.SaveGame saveGame, SaveSystem.ModuleData data)
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0xC08B30", Offset = "0xC08B30", VA = "0xC08B30", Slot = "13")]
	public void OnDebugPanel()
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0xC08B34", Offset = "0xC08B34", VA = "0xC08B34")]
	public CitizenManager()
	{
	}

	[SpecialName]
	[Token(Token = "0x60001B2")]
	[Address(RVA = "0xC08BAC", Offset = "0xC08BAC", VA = "0xC08BAC", Slot = "12")]
	private GameObject ISimulationModule.get_gameObject()
	{
		return null;
	}
}
[Token(Token = "0x2000026")]
public class City : MonoBehaviour
{
	[Token(Token = "0x200028E")]
	public class CitySaveData : SaveSystem.ModuleData
	{
		[Token(Token = "0x400125D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<SaveSystem.ModuleData> moduleSaveData;

		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string cityInfoFile;

		[Token(Token = "0x400125F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isLocked;

		[Token(Token = "0x4001260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool hasVisitedYet;

		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool hasSeaportSpawned;

		[Token(Token = "0x4001262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		public bool isCompleted;

		[Token(Token = "0x4001263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int completionOrder;

		[Token(Token = "0x6001417")]
		[Address(RVA = "0xC0CB64", Offset = "0xC0CB64", VA = "0xC0CB64", Slot = "4")]
		public override void OnPreWrite()
		{
		}

		[Token(Token = "0x6001418")]
		[Address(RVA = "0xC0A834", Offset = "0xC0A834", VA = "0xC0A834")]
		public CitySaveData()
		{
		}
	}

	[Token(Token = "0x200028F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5170", Offset = "0x6F5170")]
	private sealed class <LoadLandscape>d__59 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public City <>4__this;

		[Token(Token = "0x4001267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <skipSimplifyStep>5__2;

		[Token(Token = "0x4001268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ResourceRequest <loadRequest>5__3;

		[Token(Token = "0x1700033C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600141C")]
			[Address(RVA = "0xC0BE88", Offset = "0xC0BE88", VA = "0xC0BE88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600141E")]
			[Address(RVA = "0xC0BEF0", Offset = "0xC0BEF0", VA = "0xC0BEF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001419")]
		[Address(RVA = "0xC0A4A4", Offset = "0xC0A4A4", VA = "0xC0A4A4")]
		[DebuggerHidden]
		public <LoadLandscape>d__59(int <>1__state)
		{
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0xC0B964", Offset = "0xC0B964", VA = "0xC0B964", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600141B")]
		[Address(RVA = "0xC0B968", Offset = "0xC0B968", VA = "0xC0B968", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600141D")]
		[Address(RVA = "0xC0BE90", Offset = "0xC0BE90", VA = "0xC0BE90", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000290")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5180", Offset = "0x6F5180")]
	private sealed class <InitRoutine>d__61 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400126A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400126B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public City <>4__this;

		[Token(Token = "0x400126C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IEnumerator <landscapeLoadProgress>5__2;

		[Token(Token = "0x400126D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ResourceRequest <loadRequest>5__3;

		[Token(Token = "0x400126E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<CityModule>.Enumerator <>7__wrap3;

		[Token(Token = "0x1700033E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001424")]
			[Address(RVA = "0xC0B8F4", Offset = "0xC0B8F4", VA = "0xC0B8F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001426")]
			[Address(RVA = "0xC0B95C", Offset = "0xC0B95C", VA = "0xC0B95C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600141F")]
		[Address(RVA = "0xC0A610", Offset = "0xC0A610", VA = "0xC0A610")]
		[DebuggerHidden]
		public <InitRoutine>d__61(int <>1__state)
		{
		}

		[Token(Token = "0x6001420")]
		[Address(RVA = "0xC0B394", Offset = "0xC0B394", VA = "0xC0B394", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001421")]
		[Address(RVA = "0xC0B47C", Offset = "0xC0B47C", VA = "0xC0B47C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001422")]
		[Address(RVA = "0xC0B3CC", Offset = "0xC0B3CC", VA = "0xC0B3CC")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0xC0B424", Offset = "0xC0B424", VA = "0xC0B424")]
		private void <>m__Finally2()
		{
		}

		[Token(Token = "0x6001425")]
		[Address(RVA = "0xC0B8FC", Offset = "0xC0B8FC", VA = "0xC0B8FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000291")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5190", Offset = "0x6F5190")]
	private sealed class <>c__DisplayClass64_0
	{
		[Token(Token = "0x400126F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SaveSystem.ModuleData saveData;

		[Token(Token = "0x6001427")]
		[Address(RVA = "0xC0B2DC", Offset = "0xC0B2DC", VA = "0xC0B2DC")]
		public <>c__DisplayClass64_0()
		{
		}

		[Token(Token = "0x6001428")]
		[Address(RVA = "0xC0B2E4", Offset = "0xC0B2E4", VA = "0xC0B2E4")]
		internal bool <OnLoadAsync>b__0(CityModule x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000292")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F51A0", Offset = "0x6F51A0")]
	private sealed class <OnLoadAsync>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public City <>4__this;

		[Token(Token = "0x4001273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CitySaveData data;

		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SaveSystem.SaveGame saveGame;

		[Token(Token = "0x4001275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IEnumerator <initProgress>5__2;

		[Token(Token = "0x4001276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<SaveSystem.ModuleData>.Enumerator <>7__wrap2;

		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<CityModule>.Enumerator <>7__wrap3;

		[Token(Token = "0x17000340")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600142E")]
			[Address(RVA = "0xC0C660", Offset = "0xC0C660", VA = "0xC0C660", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000341")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001430")]
			[Address(RVA = "0xC0C6C8", Offset = "0xC0C6C8", VA = "0xC0C6C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001429")]
		[Address(RVA = "0xC0A930", Offset = "0xC0A930", VA = "0xC0A930")]
		[DebuggerHidden]
		public <OnLoadAsync>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x600142A")]
		[Address(RVA = "0xC0BEF8", Offset = "0xC0BEF8", VA = "0xC0BEF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600142B")]
		[Address(RVA = "0xC0BFE0", Offset = "0xC0BFE0", VA = "0xC0BFE0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600142C")]
		[Address(RVA = "0xC0BF30", Offset = "0xC0BF30", VA = "0xC0BF30")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x600142D")]
		[Address(RVA = "0xC0BF88", Offset = "0xC0BF88", VA = "0xC0BF88")]
		private void <>m__Finally2()
		{
		}

		[Token(Token = "0x600142F")]
		[Address(RVA = "0xC0C668", Offset = "0xC0C668", VA = "0xC0C668", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000293")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F51B0", Offset = "0x6F51B0")]
	private sealed class <ResetRoutine>d__69 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public City <>4__this;

		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<CityModule>.Enumerator <>7__wrap1;

		[Token(Token = "0x17000342")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001435")]
			[Address(RVA = "0xC0CAF4", Offset = "0xC0CAF4", VA = "0xC0CAF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000343")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001437")]
			[Address(RVA = "0xC0CB5C", Offset = "0xC0CB5C", VA = "0xC0CB5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001431")]
		[Address(RVA = "0xC0B254", Offset = "0xC0B254", VA = "0xC0B254")]
		[DebuggerHidden]
		public <ResetRoutine>d__69(int <>1__state)
		{
		}

		[Token(Token = "0x6001432")]
		[Address(RVA = "0xC0C6D0", Offset = "0xC0C6D0", VA = "0xC0C6D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001433")]
		[Address(RVA = "0xC0C744", Offset = "0xC0C744", VA = "0xC0C744", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001434")]
		[Address(RVA = "0xC0C6EC", Offset = "0xC0C6EC", VA = "0xC0C6EC")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6001436")]
		[Address(RVA = "0xC0CAFC", Offset = "0xC0CAFC", VA = "0xC0CAFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static City current;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5D98", Offset = "0x6F5D98")]
	private List<CityModule> <modules>k__BackingField;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RoadManager roadManager;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BuildingManager buildingManager;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GroundMap groundMap;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ZoneManager zoneManager;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public CarManager carManager;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UtilityManager utilityManager;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public CitizenManager citizenManager;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public CityServiceManager cityServiceManager;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ImpostorGenerator impostorGenerator;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BuildingBadgeManager badgeManager;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public InfluenceMapManager influenceMaps;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ZoneDemandManager zoneDemandManager;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ZoneConstructionManager zoneConstructionManager;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public SimpleShadow shadow;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public CarSpaceMap carSpaceMap;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public EmergencyDispatchManager emergencyDispatchManager;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public EmergencyIncidentManager emergencyIncidentManager;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public PropManager propManager;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public CityBoundaryLines boundaryLines;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public SeaTrafficManager seaTrafficManager;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public RegionManager regionManager;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public HintManager hintManager;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public HappinessManager happinessManager;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public MilestoneManager milestoneManager;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public BridgeManager bridgeManager;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public BudgetManager budgetManager;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public SimulationScheduler simulationScheduler;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public UndoSystem undo;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public PlantBoxManager plantBoxManager;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public MiniStoryManager miniStoryManager;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public BirdManager birdManager;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5DA8", Offset = "0x6F5DA8")]
	private CustomLandscape <landscape>k__BackingField;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public string cityInfoFile;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5DB8", Offset = "0x6F5DB8")]
	private CityInfo <cityInfo>k__BackingField;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5DC8", Offset = "0x6F5DC8")]
	private WorldMapCity <worldMapCity>k__BackingField;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public bool isMenuRoomCity;

	[Token(Token = "0x1700004F")]
	public List<CityModule> modules
	{
		[Token(Token = "0x60001B3")]
		[Address(RVA = "0xC0A058", Offset = "0xC0A058", VA = "0xC0A058")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FB194", Offset = "0x6FB194")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001B4")]
		[Address(RVA = "0xC0A060", Offset = "0xC0A060", VA = "0xC0A060")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FB1A4", Offset = "0x6FB1A4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000050")]
	public CustomLandscape landscape
	{
		[Token(Token = "0x60001B5")]
		[Address(RVA = "0xC0A068", Offset = "0xC0A068", VA = "0xC0A068")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FB1B4", Offset = "0x6FB1B4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001B6")]
		[Address(RVA = "0xC0A070", Offset = "0xC0A070", VA = "0xC0A070")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FB1C4", Offset = "0x6FB1C4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000051")]
	public CityInfo cityInfo
	{
		[Token(Token = "0x60001B7")]
		[Address(RVA = "0xC0A078", Offset = "0xC0A078", VA = "0xC0A078")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FB1D4", Offset = "0x6FB1D4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001B8")]
		[Address(RVA = "0xC0A080", Offset = "0xC0A080", VA = "0xC0A080")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FB1E4", Offset = "0x6FB1E4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000052")]
	public string analyticsName
	{
		[Token(Token = "0x60001B9")]
		[Address(RVA = "0xC0A088", Offset = "0xC0A088", VA = "0xC0A088")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000053")]
	public int mapWidth
	{
		[Token(Token = "0x60001BA")]
		[Address(RVA = "0xC0A090", Offset = "0xC0A090", VA = "0xC0A090")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000054")]
	public int mapHeight
	{
		[Token(Token = "0x60001BB")]
		[Address(RVA = "0xC0A0AC", Offset = "0xC0A0AC", VA = "0xC0A0AC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000055")]
	public WorldMapCity worldMapCity
	{
		[Token(Token = "0x60001BC")]
		[Address(RVA = "0xC0A0C8", Offset = "0xC0A0C8", VA = "0xC0A0C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FB1F4", Offset = "0x6FB1F4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001BD")]
		[Address(RVA = "0xC0A0D0", Offset = "0xC0A0D0", VA = "0xC0A0D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FB204", Offset = "0x6FB204")]
		set
		{
		}
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0xC0A0D8", Offset = "0xC0A0D8", VA = "0xC0A0D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0xC0A168", Offset = "0xC0A168", VA = "0xC0A168")]
	public void InitShadowCasterPosition()
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0xC0A264", Offset = "0xC0A264", VA = "0xC0A264")]
	private void Start()
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0xC0A434", Offset = "0xC0A434", VA = "0xC0A434")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FB214", Offset = "0x6FB214")]
	private IEnumerator LoadLandscape()
	{
		return null;
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0xC0A4D0", Offset = "0xC0A4D0", VA = "0xC0A4D0")]
	public void Init(string inCityInfo)
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0xC0A5A0", Offset = "0xC0A5A0", VA = "0xC0A5A0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FB278", Offset = "0x6FB278")]
	public IEnumerator InitRoutine()
	{
		return null;
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0xC0A63C", Offset = "0xC0A63C", VA = "0xC0A63C", Slot = "4")]
	public virtual CitySaveData OnSave()
	{
		return null;
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0xC0A8AC", Offset = "0xC0A8AC", VA = "0xC0A8AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FB2DC", Offset = "0x6FB2DC")]
	public IEnumerator OnLoadAsync(SaveSystem.SaveGame saveGame, CitySaveData data)
	{
		return null;
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0xC0A95C", Offset = "0xC0A95C", VA = "0xC0A95C")]
	public void SetTrackSelection()
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0xC0AB7C", Offset = "0xC0AB7C", VA = "0xC0AB7C")]
	public void GeneratePlayerStartingPosition(out Vector3 position, out Quaternion rotation, out Vector3 scale)
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0xC0AE4C", Offset = "0xC0AE4C", VA = "0xC0AE4C")]
	public void ResetProgress()
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0xC0B148", Offset = "0xC0B148", VA = "0xC0B148")]
	public Coroutine ResetAsync()
	{
		return null;
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0xC0B1E4", Offset = "0xC0B1E4", VA = "0xC0B1E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FB340", Offset = "0x6FB340")]
	private IEnumerator ResetRoutine()
	{
		return null;
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0xC0B280", Offset = "0xC0B280", VA = "0xC0B280")]
	public City()
	{
	}
}
[Token(Token = "0x2000027")]
public abstract class CityModule : MonoBehaviour
{
	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private City cachedCity;

	[Token(Token = "0x17000056")]
	public City city
	{
		[Token(Token = "0x60001CD")]
		[Address(RVA = "0xC07970", Offset = "0xC07970", VA = "0xC07970")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000057")]
	public int mapWidth
	{
		[Token(Token = "0x60001CE")]
		[Address(RVA = "0xC03128", Offset = "0xC03128", VA = "0xC03128")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000058")]
	public int mapHeight
	{
		[Token(Token = "0x60001CF")]
		[Address(RVA = "0xC03150", Offset = "0xC03150", VA = "0xC03150")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000059")]
	public RoadManager roadManager
	{
		[Token(Token = "0x60001D0")]
		[Address(RVA = "0xC10B6C", Offset = "0xC10B6C", VA = "0xC10B6C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005A")]
	public BuildingManager buildingManager
	{
		[Token(Token = "0x60001D1")]
		[Address(RVA = "0xC07E04", Offset = "0xC07E04", VA = "0xC07E04")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005B")]
	public GroundMap groundMap
	{
		[Token(Token = "0x60001D2")]
		[Address(RVA = "0xC0327C", Offset = "0xC0327C", VA = "0xC0327C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005C")]
	public ZoneManager zoneManager
	{
		[Token(Token = "0x60001D3")]
		[Address(RVA = "0xC10B8C", Offset = "0xC10B8C", VA = "0xC10B8C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005D")]
	public CarManager carManager
	{
		[Token(Token = "0x60001D4")]
		[Address(RVA = "0xC09FA0", Offset = "0xC09FA0", VA = "0xC09FA0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005E")]
	public UtilityManager utilityManager
	{
		[Token(Token = "0x60001D5")]
		[Address(RVA = "0xC10BAC", Offset = "0xC10BAC", VA = "0xC10BAC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005F")]
	public CitizenManager citizenManager
	{
		[Token(Token = "0x60001D6")]
		[Address(RVA = "0xC10BCC", Offset = "0xC10BCC", VA = "0xC10BCC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000060")]
	public CityServiceManager cityServiceManager
	{
		[Token(Token = "0x60001D7")]
		[Address(RVA = "0xC10BEC", Offset = "0xC10BEC", VA = "0xC10BEC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000061")]
	public ImpostorGenerator impostorGenerator
	{
		[Token(Token = "0x60001D8")]
		[Address(RVA = "0xC10C0C", Offset = "0xC10C0C", VA = "0xC10C0C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000062")]
	public BuildingBadgeManager badgeManager
	{
		[Token(Token = "0x60001D9")]
		[Address(RVA = "0xC10C2C", Offset = "0xC10C2C", VA = "0xC10C2C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000063")]
	public InfluenceMapManager influenceMaps
	{
		[Token(Token = "0x60001DA")]
		[Address(RVA = "0xC10C4C", Offset = "0xC10C4C", VA = "0xC10C4C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000064")]
	public ZoneDemandManager zoneDemandManager
	{
		[Token(Token = "0x60001DB")]
		[Address(RVA = "0xC09FC0", Offset = "0xC09FC0", VA = "0xC09FC0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000065")]
	public ZoneConstructionManager zoneConstructionManager
	{
		[Token(Token = "0x60001DC")]
		[Address(RVA = "0xC10C6C", Offset = "0xC10C6C", VA = "0xC10C6C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000066")]
	public SimpleShadow shadow
	{
		[Token(Token = "0x60001DD")]
		[Address(RVA = "0xC10C8C", Offset = "0xC10C8C", VA = "0xC10C8C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000067")]
	public CarSpaceMap carSpaceMap
	{
		[Token(Token = "0x60001DE")]
		[Address(RVA = "0xC10CAC", Offset = "0xC10CAC", VA = "0xC10CAC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000068")]
	public EmergencyDispatchManager emergencyDispatchManager
	{
		[Token(Token = "0x60001DF")]
		[Address(RVA = "0xC10CCC", Offset = "0xC10CCC", VA = "0xC10CCC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000069")]
	public EmergencyIncidentManager emergencyIncidentManager
	{
		[Token(Token = "0x60001E0")]
		[Address(RVA = "0xC10CEC", Offset = "0xC10CEC", VA = "0xC10CEC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700006A")]
	public PropManager propManager
	{
		[Token(Token = "0x60001E1")]
		[Address(RVA = "0xC10D0C", Offset = "0xC10D0C", VA = "0xC10D0C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700006B")]
	public CityBoundaryLines boundaryLines
	{
		[Token(Token = "0x60001E2")]
		[Address(RVA = "0xC10D2C", Offset = "0xC10D2C", VA = "0xC10D2C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700006C")]
	public SeaTrafficManager seaTrafficManager
	{
		[Token(Token = "0x60001E3")]
		[Address(RVA = "0xC10D4C", Offset = "0xC10D4C", VA = "0xC10D4C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700006D")]
	public RegionManager regionManager
	{
		[Token(Token = "0x60001E4")]
		[Address(RVA = "0xC0D05C", Offset = "0xC0D05C", VA = "0xC0D05C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700006E")]
	public CustomLandscape landscape
	{
		[Token(Token = "0x60001E5")]
		[Address(RVA = "0xC10D6C", Offset = "0xC10D6C", VA = "0xC10D6C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700006F")]
	public HintManager hintManager
	{
		[Token(Token = "0x60001E6")]
		[Address(RVA = "0xC10D8C", Offset = "0xC10D8C", VA = "0xC10D8C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000070")]
	public HappinessManager happinessManager
	{
		[Token(Token = "0x60001E7")]
		[Address(RVA = "0xC10DAC", Offset = "0xC10DAC", VA = "0xC10DAC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000071")]
	public MilestoneManager milestoneManager
	{
		[Token(Token = "0x60001E8")]
		[Address(RVA = "0xC10DCC", Offset = "0xC10DCC", VA = "0xC10DCC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000072")]
	public BridgeManager bridgeManager
	{
		[Token(Token = "0x60001E9")]
		[Address(RVA = "0xC10DEC", Offset = "0xC10DEC", VA = "0xC10DEC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000073")]
	public BudgetManager budgetManager
	{
		[Token(Token = "0x60001EA")]
		[Address(RVA = "0xC10E0C", Offset = "0xC10E0C", VA = "0xC10E0C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000074")]
	public SimulationScheduler simulationScheduler
	{
		[Token(Token = "0x60001EB")]
		[Address(RVA = "0xC09F80", Offset = "0xC09F80", VA = "0xC09F80")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000075")]
	public UndoSystem undo
	{
		[Token(Token = "0x60001EC")]
		[Address(RVA = "0xC10E2C", Offset = "0xC10E2C", VA = "0xC10E2C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000076")]
	public PlantBoxManager plantBoxManager
	{
		[Token(Token = "0x60001ED")]
		[Address(RVA = "0xC10E4C", Offset = "0xC10E4C", VA = "0xC10E4C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000077")]
	public MiniStoryManager miniStoryManager
	{
		[Token(Token = "0x60001EE")]
		[Address(RVA = "0xC10E6C", Offset = "0xC10E6C", VA = "0xC10E6C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000078")]
	public BirdManager birdManager
	{
		[Token(Token = "0x60001EF")]
		[Address(RVA = "0xC10E8C", Offset = "0xC10E8C", VA = "0xC10E8C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000079")]
	public virtual Type saveModuleDataType
	{
		[Token(Token = "0x60001F0")]
		[Address(RVA = "0xC10EAC", Offset = "0xC10EAC", VA = "0xC10EAC", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0xC10EB4", Offset = "0xC10EB4", VA = "0xC10EB4", Slot = "5")]
	public virtual SaveSystem.ModuleData OnSave()
	{
		return null;
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0xC10EBC", Offset = "0xC10EBC", VA = "0xC10EBC", Slot = "6")]
	public virtual void OnLoad(SaveSystem.SaveGame saveGame, SaveSystem.ModuleData data)
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0xC10EC0", Offset = "0xC10EC0", VA = "0xC10EC0", Slot = "7")]
	public virtual void OnPostLoad()
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0xC10EC4", Offset = "0xC10EC4", VA = "0xC10EC4", Slot = "8")]
	public virtual void Init()
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0xC10EC8", Offset = "0xC10EC8", VA = "0xC10EC8", Slot = "9")]
	public virtual void PostInit()
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0xC10ECC", Offset = "0xC10ECC", VA = "0xC10ECC", Slot = "10")]
	public virtual void OnResetProgress()
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0xC03A60", Offset = "0xC03A60", VA = "0xC03A60")]
	protected CityModule()
	{
	}
}
[Token(Token = "0x2000028")]
public class CityBoundaryLines : CityModule
{
	[Token(Token = "0x2000294")]
	private class LineInfo
	{
		[Token(Token = "0x400127C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int x1;

		[Token(Token = "0x400127D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int y1;

		[Token(Token = "0x400127E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int x2;

		[Token(Token = "0x400127F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int y2;

		[Token(Token = "0x4001280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isRegionLine;

		[Token(Token = "0x6001438")]
		[Address(RVA = "0xC0DE78", Offset = "0xC0DE78", VA = "0xC0DE78")]
		public LineInfo(int inX1, int inY1, int inX2, int inY2)
		{
		}
	}

	[Token(Token = "0x2000295")]
	private class TileInfo
	{
		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LineInfo upper;

		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LineInfo left;

		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LineInfo upperRegion;

		[Token(Token = "0x4001284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LineInfo leftRegion;

		[Token(Token = "0x6001439")]
		[Address(RVA = "0xC0D240", Offset = "0xC0D240", VA = "0xC0D240")]
		public TileInfo()
		{
		}
	}

	[Token(Token = "0x2000296")]
	private class Coord
	{
		[Token(Token = "0x4001285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int x;

		[Token(Token = "0x4001286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int y;

		[Token(Token = "0x600143A")]
		[Address(RVA = "0xC0D248", Offset = "0xC0D248", VA = "0xC0D248")]
		public Coord(int inX, int inY)
		{
		}
	}

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lineWidth;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float hoverHeight;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Coord> relevantTiles;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<LineInfo> lines;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private TileInfo[] tiles;

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0xC0CC60", Offset = "0xC0CC60", VA = "0xC0CC60", Slot = "8")]
	public override void Init()
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0xC0CFDC", Offset = "0xC0CFDC", VA = "0xC0CFDC", Slot = "7")]
	public override void OnPostLoad()
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0xC0D01C", Offset = "0xC0D01C", VA = "0xC0D01C")]
	private bool IsUnlocked(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0xC0D07C", Offset = "0xC0D07C", VA = "0xC0D07C")]
	private int RegionCode(int x, int y)
	{
		return default(int);
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0xC0D10C", Offset = "0xC0D10C", VA = "0xC0D10C")]
	private bool IsBuildable(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0xC0D198", Offset = "0xC0D198", VA = "0xC0D198")]
	private bool IsBuiltOn(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0xC0CCA0", Offset = "0xC0CCA0", VA = "0xC0CCA0")]
	private void Generate()
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0xC0D280", Offset = "0xC0D280", VA = "0xC0D280")]
	private void RefreshRelevantTiles()
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0xC0D808", Offset = "0xC0D808", VA = "0xC0D808")]
	private void GenerateMesh()
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0xC0B100", Offset = "0xC0B100", VA = "0xC0B100")]
	public void Refresh()
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0xC0DEC4", Offset = "0xC0DEC4", VA = "0xC0DEC4")]
	public CityBoundaryLines()
	{
	}
}
[Token(Token = "0x2000029")]
public class CityInfo : ScriptableObject
{
	[Token(Token = "0x2000297")]
	[Flags]
	public enum Theme
	{
		[Token(Token = "0x4001288")]
		None = 0,
		[Token(Token = "0x4001289")]
		Tropical = 1,
		[Token(Token = "0x400128A")]
		Desert = 2,
		[Token(Token = "0x400128B")]
		Volcano = 4
	}

	[Serializable]
	[Token(Token = "0x2000298")]
	public class MilestoneReward
	{
		[Token(Token = "0x2000427")]
		public enum Type
		{
			[Token(Token = "0x400199B")]
			BuildingUnlock,
			[Token(Token = "0x400199C")]
			RegionUnlock,
			[Token(Token = "0x400199D")]
			CashReward,
			[Token(Token = "0x400199E")]
			TreePlanting
		}

		[Token(Token = "0x400128C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Type type;

		[Token(Token = "0x400128D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BuildingInfo unlockedBuilding;

		[Token(Token = "0x400128E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int amount;

		[Token(Token = "0x600143B")]
		[Address(RVA = "0xC0E45C", Offset = "0xC0E45C", VA = "0xC0E45C")]
		public MilestoneReward()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000299")]
	public class Milestone
	{
		[Token(Token = "0x400128F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4001290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int requiredPopulation;

		[Token(Token = "0x4001291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<MilestoneReward> rewards;

		[Token(Token = "0x600143C")]
		[Address(RVA = "0xC0E3EC", Offset = "0xC0E3EC", VA = "0xC0E3EC")]
		public Milestone()
		{
		}
	}

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Theme theme;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string landscapeFile;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int startingFunds;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "ReorderableAttribute", RVA = "0x6F5DD8", Offset = "0x6F5DD8")]
	public List<Milestone> milestones;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool allowBridges;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string displayNameKey;

	[Token(Token = "0x6000203")]
	[Address(RVA = "0xC03CCC", Offset = "0xC03CCC", VA = "0xC03CCC")]
	public static bool IsInTheme(Theme cityTheme, Theme itemTheme)
	{
		return default(bool);
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0xC0E1A8", Offset = "0xC0E1A8", VA = "0xC0E1A8")]
	public bool IsBuildingInUnlocks(BuildingInfo building)
	{
		return default(bool);
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0xC0E374", Offset = "0xC0E374", VA = "0xC0E374")]
	public CityInfo()
	{
	}
}
[Token(Token = "0x200002A")]
public class CityManager : SingletonBehaviour<CityManager>, ISaveInterface, ILoadAsyncInterface, IDebugPanelProvider
{
	[Token(Token = "0x200029A")]
	public class CityManagerSaveData : SaveSystem.ModuleData
	{
		[Token(Token = "0x4001292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public City.CitySaveData[] cities;

		[Token(Token = "0x4001293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int activeCityIndex;

		[Token(Token = "0x4001294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<int> usedCashRewardMessages;

		[Token(Token = "0x600143D")]
		[Address(RVA = "0xC10AFC", Offset = "0xC10AFC", VA = "0xC10AFC", Slot = "4")]
		public override void OnPreWrite()
		{
		}

		[Token(Token = "0x600143E")]
		[Address(RVA = "0xC10550", Offset = "0xC10550", VA = "0xC10550")]
		public CityManagerSaveData()
		{
		}
	}

	[Token(Token = "0x200029B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F51D0", Offset = "0x6F51D0")]
	private sealed class <InitRoutine>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CityManager <>4__this;

		[Token(Token = "0x4001298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private City[] <>7__wrap1;

		[Token(Token = "0x4001299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <>7__wrap2;

		[Token(Token = "0x400129A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private City <city>5__4;

		[Token(Token = "0x400129B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private IEnumerator <initProgress>5__5;

		[Token(Token = "0x17000344")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001442")]
			[Address(RVA = "0xC107EC", Offset = "0xC107EC", VA = "0xC107EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000345")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001444")]
			[Address(RVA = "0xC10854", Offset = "0xC10854", VA = "0xC10854", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600143F")]
		[Address(RVA = "0xC0ED2C", Offset = "0xC0ED2C", VA = "0xC0ED2C")]
		[DebuggerHidden]
		public <InitRoutine>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6001440")]
		[Address(RVA = "0xC105E8", Offset = "0xC105E8", VA = "0xC105E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001441")]
		[Address(RVA = "0xC105EC", Offset = "0xC105EC", VA = "0xC105EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001443")]
		[Address(RVA = "0xC107F4", Offset = "0xC107F4", VA = "0xC107F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200029C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F51E0", Offset = "0x6F51E0")]
	private sealed class <OnLoadAsync>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400129C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400129D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400129E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CityManager <>4__this;

		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SaveSystem.ModuleData data;

		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SaveSystem.SaveGame saveGame;

		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <n>5__2;

		[Token(Token = "0x40012A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private IEnumerator <loadProgress>5__3;

		[Token(Token = "0x17000346")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001448")]
			[Address(RVA = "0xC10A8C", Offset = "0xC10A8C", VA = "0xC10A8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000347")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600144A")]
			[Address(RVA = "0xC10AF4", Offset = "0xC10AF4", VA = "0xC10AF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001445")]
		[Address(RVA = "0xC0F9E0", Offset = "0xC0F9E0", VA = "0xC0F9E0")]
		[DebuggerHidden]
		public <OnLoadAsync>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6001446")]
		[Address(RVA = "0xC1085C", Offset = "0xC1085C", VA = "0xC1085C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001447")]
		[Address(RVA = "0xC10860", Offset = "0xC10860", VA = "0xC10860", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001449")]
		[Address(RVA = "0xC10A94", Offset = "0xC10A94", VA = "0xC10A94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200029D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F51F0", Offset = "0x6F51F0")]
	private sealed class <>c__DisplayClass28_0
	{
		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CashRewardMessages.Message message;

		[Token(Token = "0x600144B")]
		[Address(RVA = "0xC0FD78", Offset = "0xC0FD78", VA = "0xC0FD78")]
		public <>c__DisplayClass28_0()
		{
		}

		[Token(Token = "0x600144C")]
		[Address(RVA = "0xC105C8", Offset = "0xC105C8", VA = "0xC105C8")]
		internal bool <MarkCashRewardMessageAsUsed>b__0(CashRewardMessages.Message x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200029E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5200", Offset = "0x6F5200")]
	private sealed class <>c__DisplayClass29_0
	{
		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CashRewardMessages.Message message;

		[Token(Token = "0x600144D")]
		[Address(RVA = "0xC0FE98", Offset = "0xC0FE98", VA = "0xC0FE98")]
		public <>c__DisplayClass29_0()
		{
		}

		[Token(Token = "0x600144E")]
		[Address(RVA = "0xC105D8", Offset = "0xC105D8", VA = "0xC105D8")]
		internal bool <HasUsedCashRewardMessage>b__0(CashRewardMessages.Message x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public City[] cities;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5DE8", Offset = "0x6F5DE8")]
	private Bounds <currentCityBounds>k__BackingField;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5DF8", Offset = "0x6F5DF8")]
	private Bounds <allCityBounds>k__BackingField;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private CityManagerSaveData saveData;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> usedCashRewardMessages;

	[Token(Token = "0x1700007A")]
	private Player player
	{
		[Token(Token = "0x6000206")]
		[Address(RVA = "0xC0EAB0", Offset = "0xC0EAB0", VA = "0xC0EAB0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700007B")]
	public Bounds currentCityBounds
	{
		[Token(Token = "0x6000207")]
		[Address(RVA = "0xC0EB00", Offset = "0xC0EB00", VA = "0xC0EB00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FB3A4", Offset = "0x6FB3A4")]
		get
		{
			return default(Bounds);
		}
		[Token(Token = "0x6000208")]
		[Address(RVA = "0xC0EB14", Offset = "0xC0EB14", VA = "0xC0EB14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FB3B4", Offset = "0x6FB3B4")]
		private set
		{
		}
	}

	[Token(Token = "0x1700007C")]
	public Bounds allCityBounds
	{
		[Token(Token = "0x6000209")]
		[Address(RVA = "0xC0EB28", Offset = "0xC0EB28", VA = "0xC0EB28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FB3C4", Offset = "0x6FB3C4")]
		get
		{
			return default(Bounds);
		}
		[Token(Token = "0x600020A")]
		[Address(RVA = "0xC0EB3C", Offset = "0xC0EB3C", VA = "0xC0EB3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FB3D4", Offset = "0x6FB3D4")]
		private set
		{
		}
	}

	[Token(Token = "0x1700007D")]
	public Type saveModuleDataType
	{
		[Token(Token = "0x600020B")]
		[Address(RVA = "0xC0EB50", Offset = "0xC0EB50", VA = "0xC0EB50", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700007E")]
	public float totalPercentageComplete
	{
		[Token(Token = "0x600020C")]
		[Address(RVA = "0xC0EBC0", Offset = "0xC0EBC0", VA = "0xC0EBC0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0xC0EC90", Offset = "0xC0EC90", VA = "0xC0EC90")]
	public Coroutine InitAsync()
	{
		return null;
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0xC0ECBC", Offset = "0xC0ECBC", VA = "0xC0ECBC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FB3E4", Offset = "0x6FB3E4")]
	private IEnumerator InitRoutine()
	{
		return null;
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0xC0ED58", Offset = "0xC0ED58", VA = "0xC0ED58")]
	private void CalculateBounds()
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0xC0CA14", Offset = "0xC0CA14", VA = "0xC0CA14")]
	public void ResaveCityData(City city)
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0xC0EFC4", Offset = "0xC0EFC4", VA = "0xC0EFC4")]
	public void SwitchCurrentCity(City city)
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0xC0F4E4", Offset = "0xC0F4E4", VA = "0xC0F4E4")]
	public void UpdateSaveDataForCityUnlocks()
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0xC0F704", Offset = "0xC0F704", VA = "0xC0F704", Slot = "7")]
	public SaveSystem.ModuleData OnSave()
	{
		return null;
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0xC0F95C", Offset = "0xC0F95C", VA = "0xC0F95C", Slot = "9")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FB448", Offset = "0x6FB448")]
	public IEnumerator OnLoadAsync(SaveSystem.SaveGame saveGame, SaveSystem.ModuleData data)
	{
		return null;
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0xC0FA0C", Offset = "0xC0FA0C", VA = "0xC0FA0C", Slot = "8")]
	public void OnLoad(SaveSystem.SaveGame saveGame, SaveSystem.ModuleData data)
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0xC0FAE4", Offset = "0xC0FAE4", VA = "0xC0FAE4")]
	public void OnPostLoadFromMenuRoom()
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0xC0FC2C", Offset = "0xC0FC2C", VA = "0xC0FC2C")]
	public void MarkCashRewardMessageAsUsed(CashRewardMessages.Message message)
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0xC0FD80", Offset = "0xC0FD80", VA = "0xC0FD80")]
	public bool HasUsedCashRewardMessage(CashRewardMessages.Message message)
	{
		return default(bool);
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0xC0FEA0", Offset = "0xC0FEA0", VA = "0xC0FEA0", Slot = "10")]
	public void OnDebugPanel()
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0xC104BC", Offset = "0xC104BC", VA = "0xC104BC")]
	public CityManager()
	{
	}
}
[Token(Token = "0x200002B")]
public class CityServiceManager : CityModule, ISimulationModule, IVisualiserTextureProvider
{
	[Token(Token = "0x200029F")]
	public enum ServiceType
	{
		[Token(Token = "0x40012A6")]
		None,
		[Token(Token = "0x40012A7")]
		Police,
		[Token(Token = "0x40012A8")]
		Fire,
		[Token(Token = "0x40012A9")]
		Hospital,
		[Token(Token = "0x40012AA")]
		School
	}

	[Token(Token = "0x20002A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5210", Offset = "0x6F5210")]
	private sealed class <Simulate>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CityServiceManager <>4__this;

		[Token(Token = "0x40012AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <n>5__2;

		[Token(Token = "0x17000348")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001452")]
			[Address(RVA = "0xC12ED8", Offset = "0xC12ED8", VA = "0xC12ED8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000349")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001454")]
			[Address(RVA = "0xC12F40", Offset = "0xC12F40", VA = "0xC12F40", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600144F")]
		[Address(RVA = "0xC126F4", Offset = "0xC126F4", VA = "0xC126F4")]
		[DebuggerHidden]
		public <Simulate>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x6001450")]
		[Address(RVA = "0xC12E14", Offset = "0xC12E14", VA = "0xC12E14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0xC12E18", Offset = "0xC12E18", VA = "0xC12E18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001453")]
		[Address(RVA = "0xC12EE0", Offset = "0xC12EE0", VA = "0xC12EE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400017E")]
	public const int maxServiceStrength = 50;

	[Token(Token = "0x400017F")]
	public const int numServiceTypes = 4;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CityServiceMap[] maps;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float[] totalCoverageByService;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int[] serviceUnlockLevels;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5E08", Offset = "0x6F5E08")]
	private Texture2D <visualiseTexture>k__BackingField;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Color32[] textureData;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isTextureStateDirty;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private ServiceType currentVisualisedServiceInternal;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5E18", Offset = "0x6F5E18")]
	private BuildingInstance <previewBuilding>k__BackingField;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5E28", Offset = "0x6F5E28")]
	private List<BuildingInstance> <previewBuildingsToDemolish>k__BackingField;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool[] servicePreviewDirty;

	[Token(Token = "0x1700007F")]
	public Texture2D visualiseTexture
	{
		[Token(Token = "0x600021B")]
		[Address(RVA = "0xC11448", Offset = "0xC11448", VA = "0xC11448", Slot = "13")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FB4AC", Offset = "0x6FB4AC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600021C")]
		[Address(RVA = "0xC11450", Offset = "0xC11450", VA = "0xC11450")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FB4BC", Offset = "0x6FB4BC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000080")]
	public Texture2D secondaryTexture
	{
		[Token(Token = "0x600021D")]
		[Address(RVA = "0xC11458", Offset = "0xC11458", VA = "0xC11458", Slot = "14")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000081")]
	public ServiceType currentVisualisedService
	{
		[Token(Token = "0x600021E")]
		[Address(RVA = "0xC11460", Offset = "0xC11460", VA = "0xC11460")]
		get
		{
			return default(ServiceType);
		}
		[Token(Token = "0x600021F")]
		[Address(RVA = "0xC11468", Offset = "0xC11468", VA = "0xC11468")]
		set
		{
		}
	}

	[Token(Token = "0x17000082")]
	public BuildingInstance previewBuilding
	{
		[Token(Token = "0x6000220")]
		[Address(RVA = "0xC11478", Offset = "0xC11478", VA = "0xC11478")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FB4CC", Offset = "0x6FB4CC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000221")]
		[Address(RVA = "0xC11480", Offset = "0xC11480", VA = "0xC11480")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FB4DC", Offset = "0x6FB4DC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000083")]
	public List<BuildingInstance> previewBuildingsToDemolish
	{
		[Token(Token = "0x6000222")]
		[Address(RVA = "0xC11488", Offset = "0xC11488", VA = "0xC11488")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FB4EC", Offset = "0x6FB4EC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000223")]
		[Address(RVA = "0xC11490", Offset = "0xC11490", VA = "0xC11490")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FB4FC", Offset = "0x6FB4FC")]
		private set
		{
		}
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0xC11498", Offset = "0xC11498", VA = "0xC11498")]
	public bool IsServiceUnlocked(ServiceType serviceType, float minUnlockTime = 0f)
	{
		return default(bool);
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0xC11574", Offset = "0xC11574", VA = "0xC11574")]
	public CityServiceMap GetMap(ServiceType serviceType)
	{
		return null;
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0xC115C0", Offset = "0xC115C0", VA = "0xC115C0")]
	public void OnPlaceBuilding(BuildingInstance newBuilding, bool fromSaveGame)
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0xC11710", Offset = "0xC11710", VA = "0xC11710")]
	public void OnDemolishBuilding(BuildingInstance oldBuilding, bool fromSaveGame)
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0xC1186C", Offset = "0xC1186C", VA = "0xC1186C")]
	public void EnablePreviewBuildingsToDemolish(List<BuildingInstance> buildingsToDemolish)
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0xC11C90", Offset = "0xC11C90", VA = "0xC11C90")]
	private void MarkServicePreviewDirty(ServiceType serviceType)
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0xC11884", Offset = "0xC11884", VA = "0xC11884")]
	public void EnablePreviewBuildingPlacement(BuildingInfo info, int x, int y, int rot, List<BuildingInstance> buildingsToDemolish)
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0xC11CD8", Offset = "0xC11CD8", VA = "0xC11CD8")]
	public void DisablePreviewBuildingPlacement()
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0xC11F24", Offset = "0xC11F24", VA = "0xC11F24", Slot = "7")]
	public override void OnPostLoad()
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0xC121F8", Offset = "0xC121F8", VA = "0xC121F8", Slot = "8")]
	public override void Init()
	{
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0xC12518", Offset = "0xC12518", VA = "0xC12518", Slot = "10")]
	public override void OnResetProgress()
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0xC12684", Offset = "0xC12684", VA = "0xC12684", Slot = "11")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FB50C", Offset = "0x6FB50C")]
	public IEnumerator Simulate(float deltaTime)
	{
		return null;
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0xC12720", Offset = "0xC12720", VA = "0xC12720")]
	private void Update()
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0xC1280C", Offset = "0xC1280C", VA = "0xC1280C", Slot = "16")]
	public void RefreshVisualiseTexture()
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0xC1297C", Offset = "0xC1297C", VA = "0xC1297C")]
	public float GetCoverage(ServiceType service, int x, int y)
	{
		return default(float);
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0xC12A74", Offset = "0xC12A74", VA = "0xC12A74")]
	public bool HasCoverage(ServiceType service, int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0xC12B28", Offset = "0xC12B28", VA = "0xC12B28")]
	public bool HasCoverage(ServiceType service, BuildingInstance building)
	{
		return default(bool);
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0xC12C1C", Offset = "0xC12C1C", VA = "0xC12C1C")]
	public bool HasCoverageInPreview(ServiceType service, int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0xC12CD0", Offset = "0xC12CD0", VA = "0xC12CD0")]
	public int GetCoverageCount(ServiceType service, int x, int y)
	{
		return default(int);
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0xC12D1C", Offset = "0xC12D1C", VA = "0xC12D1C")]
	public float GetTotalCoverage(ServiceType service)
	{
		return default(float);
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0xC120C8", Offset = "0xC120C8", VA = "0xC120C8")]
	private float UpdateServiceCoverage(ServiceType service)
	{
		return default(float);
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0xC12D5C", Offset = "0xC12D5C", VA = "0xC12D5C")]
	public CityServiceManager()
	{
	}

	[SpecialName]
	[Token(Token = "0x600023A")]
	[Address(RVA = "0xC12E04", Offset = "0xC12E04", VA = "0xC12E04", Slot = "12")]
	private GameObject ISimulationModule.get_gameObject()
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x600023B")]
	[Address(RVA = "0xC12E0C", Offset = "0xC12E0C", VA = "0xC12E0C", Slot = "15")]
	private string IVisualiserTextureProvider.get_name()
	{
		return null;
	}
}
[Token(Token = "0x200002C")]
public class CityServiceMap
{
	[Token(Token = "0x20002A1")]
	public class ServiceSource
	{
		[Token(Token = "0x40012AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int x;

		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int y;

		[Token(Token = "0x6001455")]
		[Address(RVA = "0xC13020", Offset = "0xC13020", VA = "0xC13020")]
		public ServiceSource()
		{
		}
	}

	[Token(Token = "0x20002A2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5220", Offset = "0x6F5220")]
	private sealed class <>c__DisplayClass33_0
	{
		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int x;

		[Token(Token = "0x40012B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int y;

		[Token(Token = "0x6001456")]
		[Address(RVA = "0xC13028", Offset = "0xC13028", VA = "0xC13028")]
		public <>c__DisplayClass33_0()
		{
		}

		[Token(Token = "0x6001457")]
		[Address(RVA = "0xC13518", Offset = "0xC13518", VA = "0xC13518")]
		internal bool <RemoveSource>b__0(ServiceSource source)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20002A3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5230", Offset = "0x6F5230")]
	private sealed class <UpdateMap>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public byte[] map;

		[Token(Token = "0x40012B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CityServiceMap <>4__this;

		[Token(Token = "0x40012B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool isPreview;

		[Token(Token = "0x40012B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <n>5__2;

		[Token(Token = "0x1700034A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600145B")]
			[Address(RVA = "0xC13C1C", Offset = "0xC13C1C", VA = "0xC13C1C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600145D")]
			[Address(RVA = "0xC13C84", Offset = "0xC13C84", VA = "0xC13C84", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0xC13450", Offset = "0xC13450", VA = "0xC13450")]
		[DebuggerHidden]
		public <UpdateMap>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x6001459")]
		[Address(RVA = "0xC139CC", Offset = "0xC139CC", VA = "0xC139CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600145A")]
		[Address(RVA = "0xC139D0", Offset = "0xC139D0", VA = "0xC139D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600145C")]
		[Address(RVA = "0xC13C24", Offset = "0xC13C24", VA = "0xC13C24", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5240", Offset = "0x6F5240")]
	private sealed class <SimulateAsync>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CityServiceMap <>4__this;

		[Token(Token = "0x40012BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IEnumerator <simulateTask>5__2;

		[Token(Token = "0x1700034C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001461")]
			[Address(RVA = "0xC1395C", Offset = "0xC1395C", VA = "0xC1395C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001463")]
			[Address(RVA = "0xC139C4", Offset = "0xC139C4", VA = "0xC139C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600145E")]
		[Address(RVA = "0xC134EC", Offset = "0xC134EC", VA = "0xC134EC")]
		[DebuggerHidden]
		public <SimulateAsync>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x600145F")]
		[Address(RVA = "0xC13554", Offset = "0xC13554", VA = "0xC13554", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001460")]
		[Address(RVA = "0xC13558", Offset = "0xC13558", VA = "0xC13558", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001462")]
		[Address(RVA = "0xC13964", Offset = "0xC13964", VA = "0xC13964", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private CityServiceManager.ServiceType serviceType;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private byte[] workingBuffer;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private byte[] coverageMap;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private byte[] previewCoverageMap;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private byte[] previewPlacementMap;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<ServiceSource> sources;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CityServiceManager serviceManager;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private IEnumerator simulationAsyncState;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5E38", Offset = "0x6F5E38")]
	private bool <isProcessingSimulation>k__BackingField;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5E48", Offset = "0x6F5E48")]
	private bool <isTextureStateDirty>k__BackingField;

	[Token(Token = "0x17000084")]
	private City city
	{
		[Token(Token = "0x600023C")]
		[Address(RVA = "0xC12F48", Offset = "0xC12F48", VA = "0xC12F48")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000085")]
	private int mapWidth
	{
		[Token(Token = "0x600023D")]
		[Address(RVA = "0xC12F60", Offset = "0xC12F60", VA = "0xC12F60")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000086")]
	private int mapHeight
	{
		[Token(Token = "0x600023E")]
		[Address(RVA = "0xC12F90", Offset = "0xC12F90", VA = "0xC12F90")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000087")]
	public bool isProcessingSimulation
	{
		[Token(Token = "0x600023F")]
		[Address(RVA = "0xC12FC0", Offset = "0xC12FC0", VA = "0xC12FC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FB570", Offset = "0x6FB570")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000240")]
		[Address(RVA = "0xC12FC8", Offset = "0xC12FC8", VA = "0xC12FC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FB580", Offset = "0x6FB580")]
		private set
		{
		}
	}

	[Token(Token = "0x17000088")]
	public bool isTextureStateDirty
	{
		[Token(Token = "0x6000241")]
		[Address(RVA = "0xC12FD4", Offset = "0xC12FD4", VA = "0xC12FD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FB590", Offset = "0x6FB590")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000242")]
		[Address(RVA = "0xC12FDC", Offset = "0xC12FDC", VA = "0xC12FDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FB5A0", Offset = "0x6FB5A0")]
		private set
		{
		}
	}

	[Token(Token = "0x17000089")]
	private BuildingInstance previewBuilding
	{
		[Token(Token = "0x6000243")]
		[Address(RVA = "0xC12FE8", Offset = "0xC12FE8", VA = "0xC12FE8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700008A")]
	private List<BuildingInstance> previewBuildingsToDemolish
	{
		[Token(Token = "0x6000244")]
		[Address(RVA = "0xC13004", Offset = "0xC13004", VA = "0xC13004")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0xC123E4", Offset = "0xC123E4", VA = "0xC123E4")]
	public CityServiceMap(CityServiceManager inServiceManager, CityServiceManager.ServiceType serviceType)
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0xC12890", Offset = "0xC12890", VA = "0xC12890")]
	public void UpdateVisualiseTexture(Color32[] textureData)
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0xC12A08", Offset = "0xC12A08", VA = "0xC12A08")]
	public float CalculateCoverage(int x, int y)
	{
		return default(float);
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0xC12ACC", Offset = "0xC12ACC", VA = "0xC12ACC")]
	public int GetCoverage(int x, int y)
	{
		return default(int);
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0xC12C74", Offset = "0xC12C74", VA = "0xC12C74")]
	public int GetPreviewCoverage(int x, int y)
	{
		return default(int);
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0xC11654", Offset = "0xC11654", VA = "0xC11654")]
	public void AddSource(int x, int y)
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0xC117A4", Offset = "0xC117A4", VA = "0xC117A4")]
	public void RemoveSource(int x, int y)
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0xC13030", Offset = "0xC13030", VA = "0xC13030")]
	private void FillRadialCoverage(byte[] map, int x, int y, int radius)
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0xC13158", Offset = "0xC13158", VA = "0xC13158")]
	private void ProcessSource(byte[] map, BuildingInstance sourceBuilding, bool isPreview)
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0xC133C8", Offset = "0xC133C8", VA = "0xC133C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FB5B0", Offset = "0x6FB5B0")]
	private IEnumerator UpdateMap(byte[] map, bool isPreview)
	{
		return null;
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0xC1347C", Offset = "0xC1347C", VA = "0xC1347C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FB614", Offset = "0x6FB614")]
	private IEnumerator SimulateAsync()
	{
		return null;
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0xC116E4", Offset = "0xC116E4", VA = "0xC116E4")]
	public void RestartSimulation()
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0xC12004", Offset = "0xC12004", VA = "0xC12004")]
	public void SimulateStep()
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0xC12598", Offset = "0xC12598", VA = "0xC12598")]
	public void Reset()
	{
	}
}
[Token(Token = "0x200002D")]
public class EmergencyDispatchManager : CityModule, ISimulationModule, IDebugPanelProvider
{
	[Token(Token = "0x20002A5")]
	public enum VehicleState
	{
		[Token(Token = "0x40012BE")]
		Idle,
		[Token(Token = "0x40012BF")]
		GoingToIncident,
		[Token(Token = "0x40012C0")]
		ReturningToServiceBuilding,
		[Token(Token = "0x40012C1")]
		ReturningWithPatient,
		[Token(Token = "0x40012C2")]
		ResolvingIncident
	}

	[Token(Token = "0x20002A6")]
	public enum EmergencyVehicleType
	{
		[Token(Token = "0x40012C4")]
		Car,
		[Token(Token = "0x40012C5")]
		Helicopter
	}

	[Token(Token = "0x20002A7")]
	public class VehicleData
	{
		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EmergencyVehicleType vehicleType;

		[NonSerialized]
		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[XmlIgnore]
		public CarManager.CarId car;

		[NonSerialized]
		[Token(Token = "0x40012C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[XmlIgnore]
		public Helicopter helicopter;

		[NonSerialized]
		[Token(Token = "0x40012C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[XmlIgnore]
		public City city;

		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CityServiceManager.ServiceType serviceType;

		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int homeX;

		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int homeY;

		[Token(Token = "0x40012CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int incidentX;

		[Token(Token = "0x40012CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int incidentY;

		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public VehicleState state;

		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float timeInState;

		[Token(Token = "0x6001464")]
		[Address(RVA = "0xAD9BE8", Offset = "0xAD9BE8", VA = "0xAD9BE8")]
		public VehicleData()
		{
		}

		[Token(Token = "0x6001465")]
		[Address(RVA = "0xAD6840", Offset = "0xAD6840", VA = "0xAD6840")]
		public VehicleData(BuildingInstance building, Helicopter helicopter)
		{
		}

		[Token(Token = "0x6001466")]
		[Address(RVA = "0xAD67C8", Offset = "0xAD67C8", VA = "0xAD67C8")]
		public VehicleData(BuildingInstance building, CarManager.CarId car)
		{
		}

		[Token(Token = "0x6001467")]
		[Address(RVA = "0xAD7F9C", Offset = "0xAD7F9C", VA = "0xAD7F9C")]
		public void GetPosition(out int x, out int y)
		{
		}

		[Token(Token = "0x6001468")]
		[Address(RVA = "0xAD9A38", Offset = "0xAD9A38", VA = "0xAD9A38")]
		public void SetSirenEnabled(bool shouldEnable)
		{
		}

		[Token(Token = "0x6001469")]
		[Address(RVA = "0xAD98FC", Offset = "0xAD98FC", VA = "0xAD98FC")]
		public void TransitionToState(VehicleState newState)
		{
		}

		[Token(Token = "0x600146A")]
		[Address(RVA = "0xAD79AC", Offset = "0xAD79AC", VA = "0xAD79AC")]
		public void AssignIncident(EmergencyIncidentManager.Incident incident)
		{
		}

		[Token(Token = "0x600146B")]
		[Address(RVA = "0xAD97C8", Offset = "0xAD97C8", VA = "0xAD97C8")]
		public void ReturnToServiceBuilding()
		{
		}

		[Token(Token = "0x600146C")]
		[Address(RVA = "0xAD9898", Offset = "0xAD9898", VA = "0xAD9898")]
		public bool IsParked()
		{
			return default(bool);
		}

		[Token(Token = "0x600146D")]
		[Address(RVA = "0xAD93C0", Offset = "0xAD93C0", VA = "0xAD93C0")]
		public bool DidReachDestination()
		{
			return default(bool);
		}

		[Token(Token = "0x600146E")]
		[Address(RVA = "0xAD9754", Offset = "0xAD9754", VA = "0xAD9754")]
		public bool DidFailToPathToDestination()
		{
			return default(bool);
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0xAD9B38", Offset = "0xAD9B38", VA = "0xAD9B38")]
		public void TeleportToSafeLocation()
		{
		}

		[Token(Token = "0x6001470")]
		[Address(RVA = "0xAD9510", Offset = "0xAD9510", VA = "0xAD9510")]
		public void HandleIncident()
		{
		}

		[Token(Token = "0x6001471")]
		[Address(RVA = "0xAD728C", Offset = "0xAD728C", VA = "0xAD728C")]
		public bool CanHandleIncident(EmergencyIncidentManager.Incident incident)
		{
			return default(bool);
		}

		[Token(Token = "0x6001472")]
		[Address(RVA = "0xAD73DC", Offset = "0xAD73DC", VA = "0xAD73DC")]
		public int EstimateDistanceToIncident(EmergencyIncidentManager.Incident incident)
		{
			return default(int);
		}
	}

	[Token(Token = "0x20002A8")]
	public class DispatchManagerSaveData : SaveSystem.ModuleData
	{
		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VehicleData[] vehicleData;

		[Token(Token = "0x6001473")]
		[Address(RVA = "0xAD82E4", Offset = "0xAD82E4", VA = "0xAD82E4")]
		public DispatchManagerSaveData()
		{
		}
	}

	[Token(Token = "0x20002A9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5250", Offset = "0x6F5250")]
	private sealed class <>c__DisplayClass6_0
	{
		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BuildingInstance building;

		[Token(Token = "0x6001474")]
		[Address(RVA = "0xAD6AF0", Offset = "0xAD6AF0", VA = "0xAD6AF0")]
		public <>c__DisplayClass6_0()
		{
		}

		[Token(Token = "0x6001475")]
		[Address(RVA = "0xAD8C38", Offset = "0xAD8C38", VA = "0xAD8C38")]
		internal bool <OnUpgradedBuilding>b__0(VehicleData v)
		{
			return default(bool);
		}

		[Token(Token = "0x6001476")]
		[Address(RVA = "0xAD8C78", Offset = "0xAD8C78", VA = "0xAD8C78")]
		internal bool <OnUpgradedBuilding>b__1(VehicleData v)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20002AA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5260", Offset = "0x6F5260")]
	private sealed class <>c__DisplayClass7_0
	{
		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BuildingInstance building;

		[Token(Token = "0x6001477")]
		[Address(RVA = "0xAD6BBC", Offset = "0xAD6BBC", VA = "0xAD6BBC")]
		public <>c__DisplayClass7_0()
		{
		}

		[Token(Token = "0x6001478")]
		[Address(RVA = "0xAD8D28", Offset = "0xAD8D28", VA = "0xAD8D28")]
		internal bool <OnDemolishBuilding>b__0(VehicleData data)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20002AB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5270", Offset = "0x6F5270")]
	private sealed class <Simulate>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EmergencyDispatchManager <>4__this;

		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float deltaTime;

		[Token(Token = "0x1700034E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600147C")]
			[Address(RVA = "0xAD9B78", Offset = "0xAD9B78", VA = "0xAD9B78", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600147E")]
			[Address(RVA = "0xAD9BE0", Offset = "0xAD9BE0", VA = "0xAD9BE0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001479")]
		[Address(RVA = "0xAD81C4", Offset = "0xAD81C4", VA = "0xAD81C4")]
		[DebuggerHidden]
		public <Simulate>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x600147A")]
		[Address(RVA = "0xAD8D70", Offset = "0xAD8D70", VA = "0xAD8D70", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600147B")]
		[Address(RVA = "0xAD8D74", Offset = "0xAD8D74", VA = "0xAD8D74", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600147D")]
		[Address(RVA = "0xAD9B80", Offset = "0xAD9B80", VA = "0xAD9B80", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool debugGroundAllHelicopters;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<VehicleData> vehicleData;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool debugShowDispatchTargets;

	[Token(Token = "0x1700008B")]
	public override Type saveModuleDataType
	{
		[Token(Token = "0x600025B")]
		[Address(RVA = "0xAD81F0", Offset = "0xAD81F0", VA = "0xAD81F0", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0xAD667C", Offset = "0xAD667C", VA = "0xAD667C")]
	public void OnPlaceBuilding(BuildingInstance building)
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0xAD68B8", Offset = "0xAD68B8", VA = "0xAD68B8")]
	public void OnUpgradedBuilding(BuildingInstance building)
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0xAD6AF8", Offset = "0xAD6AF8", VA = "0xAD6AF8")]
	public void OnDemolishBuilding(BuildingInstance building)
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0xAD6BC4", Offset = "0xAD6BC4", VA = "0xAD6BC4")]
	private VehicleData GetHandlingVehicle(EmergencyIncidentManager.Incident incident)
	{
		return null;
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0xAD6D54", Offset = "0xAD6D54", VA = "0xAD6D54")]
	private void AssignVehicle(EmergencyIncidentManager.Incident incident)
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0xAD7CD0", Offset = "0xAD7CD0", VA = "0xAD7CD0")]
	private void AssignVehicleToClosestIncident(VehicleData vehicle)
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0xAD805C", Offset = "0xAD805C", VA = "0xAD805C")]
	public bool DoesHaveHelicopter(CityServiceManager.ServiceType serviceType)
	{
		return default(bool);
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0xAD8144", Offset = "0xAD8144", VA = "0xAD8144", Slot = "11")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FB678", Offset = "0x6FB678")]
	public IEnumerator Simulate(float deltaTime)
	{
		return null;
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0xAD8260", Offset = "0xAD8260", VA = "0xAD8260", Slot = "5")]
	public override SaveSystem.ModuleData OnSave()
	{
		return null;
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0xAD82EC", Offset = "0xAD82EC", VA = "0xAD82EC", Slot = "6")]
	public override void OnLoad(SaveSystem.SaveGame saveGame, SaveSystem.ModuleData data)
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0xAD83A4", Offset = "0xAD83A4", VA = "0xAD83A4", Slot = "7")]
	public override void OnPostLoad()
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0xAD854C", Offset = "0xAD854C", VA = "0xAD854C", Slot = "13")]
	public void OnDebugPanel()
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0xAD8B64", Offset = "0xAD8B64", VA = "0xAD8B64", Slot = "10")]
	public override void OnResetProgress()
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0xAD8BBC", Offset = "0xAD8BBC", VA = "0xAD8BBC")]
	public EmergencyDispatchManager()
	{
	}

	[SpecialName]
	[Token(Token = "0x6000263")]
	[Address(RVA = "0xAD8C30", Offset = "0xAD8C30", VA = "0xAD8C30", Slot = "12")]
	private GameObject ISimulationModule.get_gameObject()
	{
		return null;
	}
}
[Token(Token = "0x200002E")]
public class EmergencyIncidentManager : CityModule, ISimulationModule, IDebugPanelProvider
{
	[Token(Token = "0x20002AC")]
	public class Incident
	{
		[Token(Token = "0x2000428")]
		public enum TargetType
		{
			[Token(Token = "0x40019A0")]
			Building,
			[Token(Token = "0x40019A1")]
			Car,
			[Token(Token = "0x40019A2")]
			Tile
		}

		[Token(Token = "0x40012D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TargetType targetType;

		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public CityServiceManager.ServiceType requiredService;

		[Token(Token = "0x40012DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int x;

		[Token(Token = "0x40012DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int y;

		[Token(Token = "0x40012DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 detailPosition;

		[Token(Token = "0x40012DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public double startTime;

		[Token(Token = "0x40012DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float resolutionDuration;

		[NonSerialized]
		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[XmlIgnore]
		public bool skipSaving;

		[Token(Token = "0x600147F")]
		[Address(RVA = "0xADC1AC", Offset = "0xADC1AC", VA = "0xADC1AC")]
		public Incident()
		{
		}

		[Token(Token = "0x6001480")]
		[Address(RVA = "0xADA890", Offset = "0xADA890", VA = "0xADA890")]
		public Incident(EmergencyIncidentManager manager, BuildingInstance building, CityServiceManager.ServiceType inRequiredServiceType)
		{
		}

		[Token(Token = "0x6001481")]
		[Address(RVA = "0xADACD0", Offset = "0xADACD0", VA = "0xADACD0")]
		public Incident(EmergencyIncidentManager manager, Vector3 inDetailPosition, CityServiceManager.ServiceType inRequiredServiceType)
		{
		}

		[Token(Token = "0x6001482")]
		[Address(RVA = "0xADC1B4", Offset = "0xADC1B4", VA = "0xADC1B4")]
		public Incident(EmergencyIncidentManager manager, int tileX, int tileY, CityServiceManager.ServiceType inRequiredServiceType)
		{
		}

		[Token(Token = "0x6001483")]
		[Address(RVA = "0xADAD70", Offset = "0xADAD70", VA = "0xADAD70")]
		public Incident(EmergencyIncidentManager manager, CarManager.CarId carId, CityServiceManager.ServiceType inRequiredServiceType)
		{
		}

		[Token(Token = "0x6001484")]
		[Address(RVA = "0xAD720C", Offset = "0xAD720C", VA = "0xAD720C")]
		public bool IsValid(City city)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20002AD")]
	public class IncidentSaveData : SaveSystem.ModuleData
	{
		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Incident[] incidents;

		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public double nextIncidentTime;

		[Token(Token = "0x6001485")]
		[Address(RVA = "0xADB064", Offset = "0xADB064", VA = "0xADB064")]
		public IncidentSaveData()
		{
		}
	}

	[Token(Token = "0x20002AE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5280", Offset = "0x6F5280")]
	private sealed class <Simulate>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EmergencyIncidentManager <>4__this;

		[Token(Token = "0x40012E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float deltaTime;

		[Token(Token = "0x17000350")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001489")]
			[Address(RVA = "0xADC13C", Offset = "0xADC13C", VA = "0xADC13C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000351")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600148B")]
			[Address(RVA = "0xADC1A4", Offset = "0xADC1A4", VA = "0xADC1A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001486")]
		[Address(RVA = "0xAD9CD4", Offset = "0xAD9CD4", VA = "0xAD9CD4")]
		[DebuggerHidden]
		public <Simulate>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0xADBE0C", Offset = "0xADBE0C", VA = "0xADBE0C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001488")]
		[Address(RVA = "0xADBE10", Offset = "0xADBE10", VA = "0xADBE10", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600148A")]
		[Address(RVA = "0xADC144", Offset = "0xADC144", VA = "0xADC144", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Incident> incidents;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private double nextIncidentTime;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool debugDisableIncidents;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<MountainRescuePosition> mountainRescuePositions;

	[Token(Token = "0x1700008C")]
	public override Type saveModuleDataType
	{
		[Token(Token = "0x6000276")]
		[Address(RVA = "0xADAE20", Offset = "0xADAE20", VA = "0xADAE20", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0xAD9BF0", Offset = "0xAD9BF0", VA = "0xAD9BF0", Slot = "9")]
	public override void PostInit()
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0xAD9C54", Offset = "0xAD9C54", VA = "0xAD9C54", Slot = "11")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FB6DC", Offset = "0x6FB6DC")]
	public IEnumerator Simulate(float deltaTime)
	{
		return null;
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0xAD9D00", Offset = "0xAD9D00", VA = "0xAD9D00")]
	public Incident GetIncident(CityServiceManager.ServiceType serviceType, BuildingInstance building)
	{
		return null;
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0xAD9E94", Offset = "0xAD9E94", VA = "0xAD9E94")]
	public Incident GetIncident(BuildingInstance building)
	{
		return null;
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0xAD784C", Offset = "0xAD784C", VA = "0xAD784C")]
	public Incident GetIncident(CityServiceManager.ServiceType serviceType, int x, int y)
	{
		return null;
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0xAD9FEC", Offset = "0xAD9FEC", VA = "0xAD9FEC")]
	public bool HasActiveIncidents(CityServiceManager.ServiceType serviceType)
	{
		return default(bool);
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0xADA098", Offset = "0xADA098", VA = "0xADA098")]
	private bool TryCreateIncident()
	{
		return default(bool);
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0xADA588", Offset = "0xADA588", VA = "0xADA588")]
	private BuildingInstance GetRandomZonedBuilding(CityServiceManager.ServiceType requiredServiceCoverage = CityServiceManager.ServiceType.None)
	{
		return null;
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0xADA178", Offset = "0xADA178", VA = "0xADA178")]
	public bool TryTriggerCrimeEvent(bool forceInGameEvent = false)
	{
		return default(bool);
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0xADA914", Offset = "0xADA914", VA = "0xADA914")]
	private bool CanIgniteBuilding(BuildingInstance targetBuilding)
	{
		return default(bool);
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0xADA320", Offset = "0xADA320", VA = "0xADA320")]
	public bool TryTriggerFireEvent()
	{
		return default(bool);
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0xADA998", Offset = "0xADA998", VA = "0xADA998")]
	public void RegisterIncident(BuildingInstance building, CityServiceManager.ServiceType requiredService)
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0xADAA5C", Offset = "0xADAA5C", VA = "0xADAA5C")]
	public bool AddCusomIncident(Incident incident)
	{
		return default(bool);
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0xADAAEC", Offset = "0xADAAEC", VA = "0xADAAEC")]
	public bool HasIncident(Incident incident)
	{
		return default(bool);
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0xADA3E4", Offset = "0xADA3E4", VA = "0xADA3E4")]
	public bool TryTriggerSicknessEvent()
	{
		return default(bool);
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0xADAB54", Offset = "0xADAB54", VA = "0xADAB54")]
	public bool TryTriggerMountainRescue()
	{
		return default(bool);
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0xADA6B8", Offset = "0xADA6B8", VA = "0xADA6B8")]
	public bool TryTriggerPoliceChase()
	{
		return default(bool);
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0xAD9A80", Offset = "0xAD9A80", VA = "0xAD9A80")]
	public void ResolveIncident(Incident incident)
	{
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0xADAE90", Offset = "0xADAE90", VA = "0xADAE90", Slot = "5")]
	public override SaveSystem.ModuleData OnSave()
	{
		return null;
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0xADB06C", Offset = "0xADB06C", VA = "0xADB06C", Slot = "6")]
	public override void OnLoad(SaveSystem.SaveGame saveGame, SaveSystem.ModuleData data)
	{
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0xADB12C", Offset = "0xADB12C", VA = "0xADB12C")]
	private void DebugCalculateCrimeStats()
	{
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0xADB23C", Offset = "0xADB23C", VA = "0xADB23C", Slot = "10")]
	public override void OnResetProgress()
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0xADB29C", Offset = "0xADB29C", VA = "0xADB29C", Slot = "13")]
	public void OnDebugPanel()
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0xADBD6C", Offset = "0xADBD6C", VA = "0xADBD6C")]
	public EmergencyIncidentManager()
	{
	}

	[SpecialName]
	[Token(Token = "0x600027D")]
	[Address(RVA = "0xADBE04", Offset = "0xADBE04", VA = "0xADBE04", Slot = "12")]
	private GameObject ISimulationModule.get_gameObject()
	{
		return null;
	}
}
[Token(Token = "0x200002F")]
public class GroundMap : CityModule
{
	[Token(Token = "0x20002AF")]
	public enum GroundTile : byte
	{
		[Token(Token = "0x40012E7")]
		Grass,
		[Token(Token = "0x40012E8")]
		Road,
		[Token(Token = "0x40012E9")]
		Water,
		[Token(Token = "0x40012EA")]
		Blocked,
		[Token(Token = "0x40012EB")]
		Building,
		[Token(Token = "0x40012EC")]
		ThermalVent,
		[Token(Token = "0x40012ED")]
		Bridge,
		[Token(Token = "0x40012EE")]
		CoastalBuilding,
		[Token(Token = "0x40012EF")]
		PlantBox
	}

	[Token(Token = "0x20002B0")]
	public class LandscapeFeatureSaveData
	{
		[Token(Token = "0x40012F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int x;

		[Token(Token = "0x40012F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int y;

		[Token(Token = "0x40012F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isDemolished;

		[Token(Token = "0x600148C")]
		[Address(RVA = "0xB0EBE8", Offset = "0xB0EBE8", VA = "0xB0EBE8")]
		public LandscapeFeatureSaveData()
		{
		}
	}

	[Token(Token = "0x20002B1")]
	public class TerrainSaveData : SaveSystem.ModuleData
	{
		[Token(Token = "0x40012F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int width;

		[Token(Token = "0x40012F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int height;

		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string tiles;

		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<LandscapeFeatureSaveData> landscapeFeatures;

		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Volcano.VolcanoSaveData volcano;

		[NonSerialized]
		[Token(Token = "0x40012F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[XmlIgnore]
		public GroundTile[] tilesRaw;

		[Token(Token = "0x600148D")]
		[Address(RVA = "0xB1036C", Offset = "0xB1036C", VA = "0xB1036C", Slot = "4")]
		public override void OnPreWrite()
		{
		}

		[Token(Token = "0x600148E")]
		[Address(RVA = "0xB0EBE0", Offset = "0xB0EBE0", VA = "0xB0EBE0")]
		public TerrainSaveData()
		{
		}
	}

	[Token(Token = "0x20002B2")]
	public struct RaycastResult
	{
		[Token(Token = "0x40012F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int tileX;

		[Token(Token = "0x40012FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int tileY;

		[Token(Token = "0x40012FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float distance;
	}

	[Token(Token = "0x20002B3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5290", Offset = "0x6F5290")]
	private sealed class <>c__DisplayClass50_0
	{
		[Token(Token = "0x40012FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LandscapeFeature feature;

		[Token(Token = "0x600148F")]
		[Address(RVA = "0xB0EFF0", Offset = "0xB0EFF0", VA = "0xB0EFF0")]
		public <>c__DisplayClass50_0()
		{
		}

		[Token(Token = "0x6001490")]
		[Address(RVA = "0xB1031C", Offset = "0xB1031C", VA = "0xB1031C")]
		internal bool <OnLoad>b__0(LandscapeFeatureSaveData match)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int[] visualTileMapping;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GroundTile[] tilesInternal;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GroundTile[] previewTiles;

	[Token(Token = "0x400019E")]
	private const GroundTile defaultTileType = GroundTile.Water;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5E58", Offset = "0x6F5E58")]
	private TileMap <tileMap>k__BackingField;

	[Token(Token = "0x40001A0")]
	public const int firstRoadVisualTile = 4;

	[Token(Token = "0x40001A1")]
	private const int roadTileStub = 4;

	[Token(Token = "0x40001A2")]
	private const int roadTileStraight = 5;

	[Token(Token = "0x40001A3")]
	private const int roadTileCorner = 7;

	[Token(Token = "0x40001A4")]
	private const int roadTileTJunction = 8;

	[Token(Token = "0x40001A5")]
	private const int roadTileCrossRoads = 9;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static TileMap.Tile[] roadVisualTileLookup;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool inPreviewMode;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<LandscapeFeature> landscapeFeatures;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<ThermalVent> thermalVents;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5E68", Offset = "0x6F5E68")]
	private Volcano <volcano>k__BackingField;

	[Token(Token = "0x1700008D")]
	private GroundTile[] tiles
	{
		[Token(Token = "0x600027E")]
		[Address(RVA = "0xB0CE94", Offset = "0xB0CE94", VA = "0xB0CE94")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700008E")]
	public TileMap tileMap
	{
		[Token(Token = "0x600027F")]
		[Address(RVA = "0xB0CEB0", Offset = "0xB0CEB0", VA = "0xB0CEB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FB740", Offset = "0x6FB740")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000280")]
		[Address(RVA = "0xB0CEB8", Offset = "0xB0CEB8", VA = "0xB0CEB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FB750", Offset = "0x6FB750")]
		private set
		{
		}
	}

	[Token(Token = "0x1700008F")]
	public Volcano volcano
	{
		[Token(Token = "0x6000281")]
		[Address(RVA = "0xB0CEC0", Offset = "0xB0CEC0", VA = "0xB0CEC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FB760", Offset = "0x6FB760")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000282")]
		[Address(RVA = "0xB0CEC8", Offset = "0xB0CEC8", VA = "0xB0CEC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FB770", Offset = "0x6FB770")]
		private set
		{
		}
	}

	[Token(Token = "0x17000090")]
	public override Type saveModuleDataType
	{
		[Token(Token = "0x6000297")]
		[Address(RVA = "0xB0E8B0", Offset = "0xB0E8B0", VA = "0xB0E8B0", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0xB0CED0", Offset = "0xB0CED0", VA = "0xB0CED0", Slot = "8")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0xB0D5BC", Offset = "0xB0D5BC", VA = "0xB0D5BC", Slot = "9")]
	public override void PostInit()
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0xB0D398", Offset = "0xB0D398", VA = "0xB0D398")]
	private void InitThermalVents()
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0xB0D6D0", Offset = "0xB0D6D0", VA = "0xB0D6D0")]
	public LandscapeFeature GetLandscapeFeature(int x, int y)
	{
		return null;
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0xB0D7B4", Offset = "0xB0D7B4", VA = "0xB0D7B4")]
	public void DemolishLandscapeFeature(int x, int y)
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0xB0D940", Offset = "0xB0D940", VA = "0xB0D940")]
	public void RestoreLandscapeFeature(int x, int y)
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0xB0DA74", Offset = "0xB0DA74", VA = "0xB0DA74")]
	public void AdjustConstructionCost(ConstructionCost costReport, int x, int y)
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0xB0DB8C", Offset = "0xB0DB8C", VA = "0xB0DB8C")]
	public void Awake()
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0xB0DBE4", Offset = "0xB0DBE4", VA = "0xB0DBE4")]
	public static bool IsBuildable(GroundTile tileType)
	{
		return default(bool);
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0xB0DC10", Offset = "0xB0DC10", VA = "0xB0DC10")]
	public void BeginPreviewChanges()
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0xB0DCB4", Offset = "0xB0DCB4", VA = "0xB0DCB4")]
	public void EndPreviewChanges()
	{
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0xB0DD18", Offset = "0xB0DD18", VA = "0xB0DD18")]
	public void OnPlaceRoadTile(int x, int y)
	{
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0xB0DD94", Offset = "0xB0DD94", VA = "0xB0DD94")]
	public GroundTile GetTile(int x, int y)
	{
		return default(GroundTile);
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0xB0E008", Offset = "0xB0E008", VA = "0xB0E008")]
	public GroundTile GetTileUnsafe(int x, int y)
	{
		return default(GroundTile);
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0xB0E07C", Offset = "0xB0E07C", VA = "0xB0E07C")]
	public bool CanBuild(int x, int y, bool allowDemolition = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0xB0DE44", Offset = "0xB0DE44", VA = "0xB0DE44")]
	public void SetTile(int x, int y, GroundTile tile)
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0xB0E554", Offset = "0xB0E554", VA = "0xB0E554")]
	public void UpdateAllVisualTiles()
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0xB0E5E4", Offset = "0xB0E5E4", VA = "0xB0E5E4")]
	public void HideThermalVents(int x, int y, int width, int height)
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0xB0E6F8", Offset = "0xB0E6F8", VA = "0xB0E6F8")]
	public void RestoreThermalVents(int x, int y, int width, int height)
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0xB0E174", Offset = "0xB0E174", VA = "0xB0E174")]
	private void UpdateVisualTile(int x, int y)
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0xB0E920", Offset = "0xB0E920", VA = "0xB0E920", Slot = "5")]
	public override SaveSystem.ModuleData OnSave()
	{
		return null;
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0xB0EBF0", Offset = "0xB0EBF0", VA = "0xB0EBF0", Slot = "6")]
	public override void OnLoad(SaveSystem.SaveGame saveGame, SaveSystem.ModuleData data)
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0xB0EFF8", Offset = "0xB0EFF8", VA = "0xB0EFF8", Slot = "7")]
	public override void OnPostLoad()
	{
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0xB0F238", Offset = "0xB0F238", VA = "0xB0F238")]
	public void SetThermalVentHintsVisible(bool visible)
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0xB0F3B0", Offset = "0xB0F3B0", VA = "0xB0F3B0")]
	public bool Raycast(Ray ray, out RaycastResult result, float maxDistance)
	{
		return default(bool);
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0xB0F998", Offset = "0xB0F998", VA = "0xB0F998", Slot = "10")]
	public override void OnResetProgress()
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0xB0FC50", Offset = "0xB0FC50", VA = "0xB0FC50")]
	public GroundMap()
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0xB102A4", Offset = "0xB102A4", VA = "0xB102A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FB780", Offset = "0x6FB780")]
	private void <Init>b__25_0(int x, int y)
	{
	}
}
[Token(Token = "0x2000030")]
public class HappinessManager : CityModule, ISimulationModule, IDebugPanelProvider
{
	[Serializable]
	[Token(Token = "0x20002B4")]
	public class HappinessFactor
	{
		[Token(Token = "0x40012FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x40012FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6F9A00", Offset = "0x6F9A00")]
		public float percentageDelta;

		[Token(Token = "0x40012FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9A20", Offset = "0x6F9A20")]
		private bool <isLocked>k__BackingField;

		[Token(Token = "0x4001300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9A30", Offset = "0x6F9A30")]
		private int <totalCalculated>k__BackingField;

		[Token(Token = "0x4001301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float totalValue;

		[Token(Token = "0x17000352")]
		public float delta
		{
			[Token(Token = "0x6001493")]
			[Address(RVA = "0xB180CC", Offset = "0xB180CC", VA = "0xB180CC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000353")]
		public bool isLocked
		{
			[Token(Token = "0x6001496")]
			[Address(RVA = "0xB18108", Offset = "0xB18108", VA = "0xB18108")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FFFB0", Offset = "0x6FFFB0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001497")]
			[Address(RVA = "0xB18110", Offset = "0xB18110", VA = "0xB18110")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FFFC0", Offset = "0x6FFFC0")]
			set
			{
			}
		}

		[Token(Token = "0x17000354")]
		public int totalCalculated
		{
			[Token(Token = "0x6001498")]
			[Address(RVA = "0xB1811C", Offset = "0xB1811C", VA = "0xB1811C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FFFD0", Offset = "0x6FFFD0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001499")]
			[Address(RVA = "0xB18124", Offset = "0xB18124", VA = "0xB18124")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FFFE0", Offset = "0x6FFFE0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000355")]
		public float score
		{
			[Token(Token = "0x600149A")]
			[Address(RVA = "0xB17790", Offset = "0xB17790", VA = "0xB17790")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000356")]
		public float percentageAffected
		{
			[Token(Token = "0x600149B")]
			[Address(RVA = "0xB168D4", Offset = "0xB168D4", VA = "0xB168D4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001491")]
		[Address(RVA = "0xB180BC", Offset = "0xB180BC", VA = "0xB180BC")]
		public HappinessFactor()
		{
		}

		[Token(Token = "0x6001492")]
		[Address(RVA = "0xB17B0C", Offset = "0xB17B0C", VA = "0xB17B0C")]
		public HappinessFactor(string inName)
		{
		}

		[Token(Token = "0x6001494")]
		[Address(RVA = "0xB1724C", Offset = "0xB1724C", VA = "0xB1724C")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001495")]
		[Address(RVA = "0xB180E0", Offset = "0xB180E0", VA = "0xB180E0")]
		public void Add(float value)
		{
		}
	}

	[Token(Token = "0x20002B5")]
	private struct HappinessFactorAccumulator
	{
		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float total;

		[Token(Token = "0x17000357")]
		public float score
		{
			[Token(Token = "0x600149F")]
			[Address(RVA = "0x778A58", Offset = "0x778A58", VA = "0x778A58")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600149C")]
		[Address(RVA = "0x778A3C", Offset = "0x778A3C", VA = "0x778A3C")]
		public void Reset(float baseValue)
		{
		}

		[Token(Token = "0x600149D")]
		[Address(RVA = "0x778A44", Offset = "0x778A44", VA = "0x778A44")]
		public void Add(HappinessFactor factor, float value = 1f)
		{
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0x778A4C", Offset = "0x778A4C", VA = "0x778A4C")]
		public void Add(HappinessFactor factor, bool affected)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20002B6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F52A0", Offset = "0x6F52A0")]
	private sealed class <>c
	{
		[Token(Token = "0x4001303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<HappinessFactor> <>9__32_0;

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0xB17BAC", Offset = "0xB17BAC", VA = "0xB17BAC")]
		public <>c()
		{
		}

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0xB17BB4", Offset = "0xB17BB4", VA = "0xB17BB4")]
		internal int <Simulate>b__32_0(HappinessFactor x, HappinessFactor y)
		{
			return default(int);
		}
	}

	[Token(Token = "0x20002B7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F52B0", Offset = "0x6F52B0")]
	private sealed class <Simulate>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HappinessManager <>4__this;

		[Token(Token = "0x4001308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float deltaTime;

		[Token(Token = "0x17000358")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60014A6")]
			[Address(RVA = "0xB1804C", Offset = "0xB1804C", VA = "0xB1804C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000359")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014A8")]
			[Address(RVA = "0xB180B4", Offset = "0xB180B4", VA = "0xB180B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0xB172FC", Offset = "0xB172FC", VA = "0xB172FC")]
		[DebuggerHidden]
		public <Simulate>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0xB17C14", Offset = "0xB17C14", VA = "0xB17C14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0xB17C18", Offset = "0xB17C18", VA = "0xB17C18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0xB18054", Offset = "0xB18054", VA = "0xB18054", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float overallHappiness;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<float> baseHappinessPerRegion;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HappinessFactor noPower;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public HappinessFactor noWater;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public HappinessFactor noNetwork;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public HappinessFactor noPolice;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public HappinessFactor noFire;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public HappinessFactor noSchool;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public HappinessFactor noHospital;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public HappinessFactor eyesore;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public HappinessFactor smelly;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public HappinessFactor noisy;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public HappinessFactor sandStorms;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public HappinessFactor tooCloseToIndustrial;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public HappinessFactor localHappinessBoost;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public HappinessFactor globalHappinessBoost;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5E78", Offset = "0x6F5E78")]
	private List<HappinessFactor> <allHappinessFactors>k__BackingField;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5E88", Offset = "0x6F5E88")]
	private List<HappinessFactor> <sortedHappinessFactors>k__BackingField;

	[Token(Token = "0x17000091")]
	public float happinessValueForAnalytics
	{
		[Token(Token = "0x60002A1")]
		[Address(RVA = "0xB16974", Offset = "0xB16974", VA = "0xB16974")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000092")]
	public List<HappinessFactor> allHappinessFactors
	{
		[Token(Token = "0x60002A2")]
		[Address(RVA = "0xB16988", Offset = "0xB16988", VA = "0xB16988")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FB790", Offset = "0x6FB790")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002A3")]
		[Address(RVA = "0xB16990", Offset = "0xB16990", VA = "0xB16990")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FB7A0", Offset = "0x6FB7A0")]
		private set
		{
		}
	}

	[Token(Token = "0x17000093")]
	public List<HappinessFactor> sortedHappinessFactors
	{
		[Token(Token = "0x60002A4")]
		[Address(RVA = "0xB16998", Offset = "0xB16998", VA = "0xB16998")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FB7B0", Offset = "0x6FB7B0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002A5")]
		[Address(RVA = "0xB169A0", Offset = "0xB169A0", VA = "0xB169A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FB7C0", Offset = "0x6FB7C0")]
		private set
		{
		}
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0xB169A8", Offset = "0xB169A8", VA = "0xB169A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0xB16B2C", Offset = "0xB16B2C", VA = "0xB16B2C")]
	private void CalculateBuildingHappinessScores()
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0xB171B8", Offset = "0xB171B8", VA = "0xB171B8")]
	private void ResetHappinessFactors()
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0xB17254", Offset = "0xB17254", VA = "0xB17254", Slot = "10")]
	public override void OnResetProgress()
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0xB1727C", Offset = "0xB1727C", VA = "0xB1727C", Slot = "11")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FB7D0", Offset = "0x6FB7D0")]
	public IEnumerator Simulate(float deltaTime)
	{
		return null;
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0xB17328", Offset = "0xB17328", VA = "0xB17328", Slot = "13")]
	public void OnDebugPanel()
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0xB177AC", Offset = "0xB177AC", VA = "0xB177AC")]
	public HappinessManager()
	{
	}

	[SpecialName]
	[Token(Token = "0x60002AD")]
	[Address(RVA = "0xB17B40", Offset = "0xB17B40", VA = "0xB17B40", Slot = "12")]
	private GameObject ISimulationModule.get_gameObject()
	{
		return null;
	}
}
[Token(Token = "0x2000031")]
public class HintManager : CityModule, ISimulationModule, IDebugPanelProvider
{
	[Token(Token = "0x20002B8")]
	public abstract class Hint
	{
		[Token(Token = "0x4001309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected City city;

		[Token(Token = "0x400130A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float timeActive;

		[Token(Token = "0x400130B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9A40", Offset = "0x6F9A40")]
		private bool <isActive>k__BackingField;

		[Token(Token = "0x400130C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9A50", Offset = "0x6F9A50")]
		private float <calculatedPriority>k__BackingField;

		[Token(Token = "0x1700035A")]
		public float priority
		{
			[Token(Token = "0x60014AA")]
			[Address(RVA = "0xB1CB90", Offset = "0xB1CB90", VA = "0xB1CB90")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700035B")]
		public string debugName
		{
			[Token(Token = "0x60014AB")]
			[Address(RVA = "0xB1C87C", Offset = "0xB1C87C", VA = "0xB1C87C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035C")]
		public bool isActive
		{
			[Token(Token = "0x60014AC")]
			[Address(RVA = "0xB1CC38", Offset = "0xB1CC38", VA = "0xB1CC38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x700040", Offset = "0x700040")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014AD")]
			[Address(RVA = "0xB1CC40", Offset = "0xB1CC40", VA = "0xB1CC40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x700050", Offset = "0x700050")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700035D")]
		public float calculatedPriority
		{
			[Token(Token = "0x60014AE")]
			[Address(RVA = "0xB1CC4C", Offset = "0xB1CC4C", VA = "0xB1CC4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x700060", Offset = "0x700060")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60014AF")]
			[Address(RVA = "0xB1CC54", Offset = "0xB1CC54", VA = "0xB1CC54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x700070", Offset = "0x700070")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700035E")]
		protected abstract float basePriority
		{
			[Token(Token = "0x60014B0")]
			get;
		}

		[Token(Token = "0x1700035F")]
		public abstract float activationTime
		{
			[Token(Token = "0x60014B1")]
			get;
		}

		[Token(Token = "0x17000360")]
		public abstract string hintText
		{
			[Token(Token = "0x60014B2")]
			get;
		}

		[Token(Token = "0x17000361")]
		public virtual Sprite hintIcon
		{
			[Token(Token = "0x60014B3")]
			[Address(RVA = "0xB1CC5C", Offset = "0xB1CC5C", VA = "0xB1CC5C", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0xB1CC30", Offset = "0xB1CC30", VA = "0xB1CC30")]
		public void Init(City inCity)
		{
		}

		[Token(Token = "0x60014B4")]
		public abstract void Update(float deltaTime);

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0xB1CCD4", Offset = "0xB1CCD4", VA = "0xB1CCD4")]
		protected Hint()
		{
		}
	}

	[Token(Token = "0x20002B9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F52C0", Offset = "0x6F52C0")]
	private sealed class <Simulate>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400130D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400130E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400130F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HintManager <>4__this;

		[Token(Token = "0x4001310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float deltaTime;

		[Token(Token = "0x4001311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Hint <calculatedTopHint>5__2;

		[Token(Token = "0x4001312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <n>5__3;

		[Token(Token = "0x17000362")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60014B9")]
			[Address(RVA = "0xB1CBC0", Offset = "0xB1CBC0", VA = "0xB1CBC0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000363")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014BB")]
			[Address(RVA = "0xB1CC28", Offset = "0xB1CC28", VA = "0xB1CC28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0xB1C9BC", Offset = "0xB1C9BC", VA = "0xB1C9BC")]
		[DebuggerHidden]
		public <Simulate>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0xB1C9F8", Offset = "0xB1C9F8", VA = "0xB1C9F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0xB1C9FC", Offset = "0xB1C9FC", VA = "0xB1C9FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0xB1CBC8", Offset = "0xB1CBC8", VA = "0xB1CBC8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Hint> allHints;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5E98", Offset = "0x6F5E98")]
	private Hint <topHint>k__BackingField;

	[Token(Token = "0x17000094")]
	public Hint topHint
	{
		[Token(Token = "0x60002AE")]
		[Address(RVA = "0xB1C028", Offset = "0xB1C028", VA = "0xB1C028")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FB834", Offset = "0x6FB834")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002AF")]
		[Address(RVA = "0xB1C030", Offset = "0xB1C030", VA = "0xB1C030")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FB844", Offset = "0x6FB844")]
		private set
		{
		}
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0xB1C038", Offset = "0xB1C038", VA = "0xB1C038", Slot = "9")]
	public override void PostInit()
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0xB1C608", Offset = "0xB1C608", VA = "0xB1C608", Slot = "13")]
	public void OnDebugPanel()
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0xB1C8A4", Offset = "0xB1C8A4", VA = "0xB1C8A4", Slot = "10")]
	public override void OnResetProgress()
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0xB1C93C", Offset = "0xB1C93C", VA = "0xB1C93C", Slot = "11")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FB854", Offset = "0x6FB854")]
	public IEnumerator Simulate(float deltaTime)
	{
		return null;
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0xB1C9E8", Offset = "0xB1C9E8", VA = "0xB1C9E8")]
	public HintManager()
	{
	}

	[SpecialName]
	[Token(Token = "0x60002B5")]
	[Address(RVA = "0xB1C9F0", Offset = "0xB1C9F0", VA = "0xB1C9F0", Slot = "12")]
	private GameObject ISimulationModule.get_gameObject()
	{
		return null;
	}
}
[Token(Token = "0x2000032")]
public class ZonesNotConnectedToPortHint : HintManager.Hint
{
	[Token(Token = "0x17000095")]
	public override float activationTime
	{
		[Token(Token = "0x60002B6")]
		[Address(RVA = "0xE0EA90", Offset = "0xE0EA90", VA = "0xE0EA90", Slot = "5")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000096")]
	public override string hintText
	{
		[Token(Token = "0x60002B7")]
		[Address(RVA = "0xE0EA98", Offset = "0xE0EA98", VA = "0xE0EA98", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000097")]
	protected override float basePriority
	{
		[Token(Token = "0x60002B8")]
		[Address(RVA = "0xE0EAE0", Offset = "0xE0EAE0", VA = "0xE0EAE0", Slot = "4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0xE0EAE8", Offset = "0xE0EAE8", VA = "0xE0EAE8", Slot = "8")]
	public override void Update(float deltaTime)
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0xE0EAEC", Offset = "0xE0EAEC", VA = "0xE0EAEC")]
	public ZonesNotConnectedToPortHint()
	{
	}
}
[Token(Token = "0x2000033")]
public class NotEnoughUtilityHint : HintManager.Hint
{
	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private UtilityState utilityState;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string utilityText;

	[Token(Token = "0x17000098")]
	public override Sprite hintIcon
	{
		[Token(Token = "0x60002BC")]
		[Address(RVA = "0xA96B50", Offset = "0xA96B50", VA = "0xA96B50", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000099")]
	public override float activationTime
	{
		[Token(Token = "0x60002BD")]
		[Address(RVA = "0xA96C50", Offset = "0xA96C50", VA = "0xA96C50", Slot = "5")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700009A")]
	public override string hintText
	{
		[Token(Token = "0x60002BE")]
		[Address(RVA = "0xA96C58", Offset = "0xA96C58", VA = "0xA96C58", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700009B")]
	protected override float basePriority
	{
		[Token(Token = "0x60002BF")]
		[Address(RVA = "0xA96C60", Offset = "0xA96C60", VA = "0xA96C60", Slot = "4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0xA96B18", Offset = "0xA96B18", VA = "0xA96B18")]
	public NotEnoughUtilityHint(UtilityState inUtilityState, string inText)
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0xA96C68", Offset = "0xA96C68", VA = "0xA96C68", Slot = "8")]
	public override void Update(float deltaTime)
	{
	}
}
[Token(Token = "0x2000034")]
public class AlmostNotEnoughUtilityHint : HintManager.Hint
{
	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private UtilityState utilityState;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string utilityText;

	[Token(Token = "0x40001C3")]
	private const float idealHeadRoom = 0.9f;

	[Token(Token = "0x1700009C")]
	public override float activationTime
	{
		[Token(Token = "0x60002C2")]
		[Address(RVA = "0xB543BC", Offset = "0xB543BC", VA = "0xB543BC", Slot = "5")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700009D")]
	public override string hintText
	{
		[Token(Token = "0x60002C3")]
		[Address(RVA = "0xB543C4", Offset = "0xB543C4", VA = "0xB543C4", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700009E")]
	protected override float basePriority
	{
		[Token(Token = "0x60002C4")]
		[Address(RVA = "0xB543CC", Offset = "0xB543CC", VA = "0xB543CC", Slot = "4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700009F")]
	public override Sprite hintIcon
	{
		[Token(Token = "0x60002C5")]
		[Address(RVA = "0xB543D4", Offset = "0xB543D4", VA = "0xB543D4", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0xB54384", Offset = "0xB54384", VA = "0xB54384")]
	public AlmostNotEnoughUtilityHint(UtilityState inUtilityState, string inText)
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0xB544D4", Offset = "0xB544D4", VA = "0xB544D4", Slot = "8")]
	public override void Update(float deltaTime)
	{
	}
}
[Token(Token = "0x2000035")]
public class NotEnoughNetworkHint : HintManager.Hint
{
	[Token(Token = "0x170000A0")]
	public override float activationTime
	{
		[Token(Token = "0x60002C7")]
		[Address(RVA = "0xA96510", Offset = "0xA96510", VA = "0xA96510", Slot = "5")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000A1")]
	public override string hintText
	{
		[Token(Token = "0x60002C8")]
		[Address(RVA = "0xA96518", Offset = "0xA96518", VA = "0xA96518", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000A2")]
	protected override float basePriority
	{
		[Token(Token = "0x60002C9")]
		[Address(RVA = "0xA96560", Offset = "0xA96560", VA = "0xA96560", Slot = "4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000A3")]
	public override Sprite hintIcon
	{
		[Token(Token = "0x60002CA")]
		[Address(RVA = "0xA96568", Offset = "0xA96568", VA = "0xA96568", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0xA965E0", Offset = "0xA965E0", VA = "0xA965E0", Slot = "8")]
	public override void Update(float deltaTime)
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0xA9671C", Offset = "0xA9671C", VA = "0xA9671C")]
	public NotEnoughNetworkHint()
	{
	}
}
[Token(Token = "0x2000036")]
public class NotEnoughServiceHint : HintManager.Hint
{
	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private CityServiceManager.ServiceType serviceType;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string serviceHintText;

	[Token(Token = "0x40001C6")]
	private const int minBuildingsWithoutServiceToTriggerHint = 40;

	[Token(Token = "0x40001C7")]
	private const int maxBuildingsWithoutServiceToTriggerHint = 100;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool shouldShowMinorMessage;

	[Token(Token = "0x170000A4")]
	public override float activationTime
	{
		[Token(Token = "0x60002CE")]
		[Address(RVA = "0xA96760", Offset = "0xA96760", VA = "0xA96760", Slot = "5")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000A5")]
	public override string hintText
	{
		[Token(Token = "0x60002CF")]
		[Address(RVA = "0xA9676C", Offset = "0xA9676C", VA = "0xA9676C", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000A6")]
	protected override float basePriority
	{
		[Token(Token = "0x60002D0")]
		[Address(RVA = "0xA967D4", Offset = "0xA967D4", VA = "0xA967D4", Slot = "4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000A7")]
	public override Sprite hintIcon
	{
		[Token(Token = "0x60002D1")]
		[Address(RVA = "0xA967DC", Offset = "0xA967DC", VA = "0xA967DC", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0xA96724", Offset = "0xA96724", VA = "0xA96724")]
	public NotEnoughServiceHint(CityServiceManager.ServiceType inService, string inHintText)
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0xA96944", Offset = "0xA96944", VA = "0xA96944", Slot = "8")]
	public override void Update(float deltaTime)
	{
	}
}
[Token(Token = "0x2000037")]
public class WatchTutorialHint : HintManager.Hint
{
	[Token(Token = "0x170000A8")]
	public override string hintText
	{
		[Token(Token = "0x60002D3")]
		[Address(RVA = "0xAA42D4", Offset = "0xAA42D4", VA = "0xAA42D4", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000A9")]
	public override float activationTime
	{
		[Token(Token = "0x60002D4")]
		[Address(RVA = "0xAA431C", Offset = "0xAA431C", VA = "0xAA431C", Slot = "5")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000AA")]
	protected override float basePriority
	{
		[Token(Token = "0x60002D5")]
		[Address(RVA = "0xAA4324", Offset = "0xAA4324", VA = "0xAA4324", Slot = "4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0xAA4330", Offset = "0xAA4330", VA = "0xAA4330", Slot = "8")]
	public override void Update(float deltaTime)
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0xAA43D0", Offset = "0xAA43D0", VA = "0xAA43D0")]
	public WatchTutorialHint()
	{
	}
}
[Token(Token = "0x2000038")]
public abstract class BuildingCountHint : HintManager.Hint
{
	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5EA8", Offset = "0x6F5EA8")]
	private readonly int <minBuildingsToTriggerHint>k__BackingField;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5EB8", Offset = "0x6F5EB8")]
	private readonly int <maxBuildingsToTriggerHint>k__BackingField;

	[Token(Token = "0x170000AB")]
	protected virtual int minBuildingsToTriggerHint
	{
		[Token(Token = "0x60002D9")]
		[Address(RVA = "0xB613F0", Offset = "0xB613F0", VA = "0xB613F0", Slot = "10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FB8B8", Offset = "0x6FB8B8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000AC")]
	protected virtual int maxBuildingsToTriggerHint
	{
		[Token(Token = "0x60002DA")]
		[Address(RVA = "0xB613F8", Offset = "0xB613F8", VA = "0xB613F8", Slot = "11")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FB8C8", Offset = "0x6FB8C8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60002D8")]
	protected abstract bool IsAffected(BuildingInstance building);

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0xB61400", Offset = "0xB61400", VA = "0xB61400", Slot = "8")]
	public override void Update(float deltaTime)
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0xB61568", Offset = "0xB61568", VA = "0xB61568")]
	protected BuildingCountHint()
	{
	}
}
[Token(Token = "0x2000039")]
public class ResidentialIndustrialOverlapHint : BuildingCountHint
{
	[Token(Token = "0x170000AD")]
	public override string hintText
	{
		[Token(Token = "0x60002DD")]
		[Address(RVA = "0xC208C0", Offset = "0xC208C0", VA = "0xC208C0", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000AE")]
	public override float activationTime
	{
		[Token(Token = "0x60002DE")]
		[Address(RVA = "0xC20908", Offset = "0xC20908", VA = "0xC20908", Slot = "5")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000AF")]
	protected override float basePriority
	{
		[Token(Token = "0x60002DF")]
		[Address(RVA = "0xC20914", Offset = "0xC20914", VA = "0xC20914", Slot = "4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000B0")]
	protected override int minBuildingsToTriggerHint
	{
		[Token(Token = "0x60002E0")]
		[Address(RVA = "0xC20920", Offset = "0xC20920", VA = "0xC20920", Slot = "10")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000B1")]
	protected override int maxBuildingsToTriggerHint
	{
		[Token(Token = "0x60002E1")]
		[Address(RVA = "0xC20928", Offset = "0xC20928", VA = "0xC20928", Slot = "11")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0xC20930", Offset = "0xC20930", VA = "0xC20930", Slot = "9")]
	protected override bool IsAffected(BuildingInstance building)
	{
		return default(bool);
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0xC209DC", Offset = "0xC209DC", VA = "0xC209DC")]
	public ResidentialIndustrialOverlapHint()
	{
	}
}
[Token(Token = "0x200003A")]
public class SandstormHint : BuildingCountHint
{
	[Token(Token = "0x170000B2")]
	public override string hintText
	{
		[Token(Token = "0x60002E4")]
		[Address(RVA = "0xAB8EEC", Offset = "0xAB8EEC", VA = "0xAB8EEC", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B3")]
	public override float activationTime
	{
		[Token(Token = "0x60002E5")]
		[Address(RVA = "0xAB8F34", Offset = "0xAB8F34", VA = "0xAB8F34", Slot = "5")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000B4")]
	protected override float basePriority
	{
		[Token(Token = "0x60002E6")]
		[Address(RVA = "0xAB8F40", Offset = "0xAB8F40", VA = "0xAB8F40", Slot = "4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000B5")]
	protected override int minBuildingsToTriggerHint
	{
		[Token(Token = "0x60002E7")]
		[Address(RVA = "0xAB8F48", Offset = "0xAB8F48", VA = "0xAB8F48", Slot = "10")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000B6")]
	protected override int maxBuildingsToTriggerHint
	{
		[Token(Token = "0x60002E8")]
		[Address(RVA = "0xAB8F50", Offset = "0xAB8F50", VA = "0xAB8F50", Slot = "11")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0xAB8F58", Offset = "0xAB8F58", VA = "0xAB8F58", Slot = "9")]
	protected override bool IsAffected(BuildingInstance building)
	{
		return default(bool);
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0xAB8F74", Offset = "0xAB8F74", VA = "0xAB8F74")]
	public SandstormHint()
	{
	}
}
[Token(Token = "0x200003B")]
public class SmellyHint : BuildingCountHint
{
	[Token(Token = "0x170000B7")]
	public override string hintText
	{
		[Token(Token = "0x60002EB")]
		[Address(RVA = "0xA76BCC", Offset = "0xA76BCC", VA = "0xA76BCC", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B8")]
	public override float activationTime
	{
		[Token(Token = "0x60002EC")]
		[Address(RVA = "0xA76C14", Offset = "0xA76C14", VA = "0xA76C14", Slot = "5")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000B9")]
	protected override float basePriority
	{
		[Token(Token = "0x60002ED")]
		[Address(RVA = "0xA76C20", Offset = "0xA76C20", VA = "0xA76C20", Slot = "4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000BA")]
	protected override int minBuildingsToTriggerHint
	{
		[Token(Token = "0x60002EE")]
		[Address(RVA = "0xA76C28", Offset = "0xA76C28", VA = "0xA76C28", Slot = "10")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000BB")]
	protected override int maxBuildingsToTriggerHint
	{
		[Token(Token = "0x60002EF")]
		[Address(RVA = "0xA76C30", Offset = "0xA76C30", VA = "0xA76C30", Slot = "11")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0xA76C38", Offset = "0xA76C38", VA = "0xA76C38", Slot = "9")]
	protected override bool IsAffected(BuildingInstance building)
	{
		return default(bool);
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0xA76C7C", Offset = "0xA76C7C", VA = "0xA76C7C")]
	public SmellyHint()
	{
	}
}
[Token(Token = "0x200003C")]
public class EyeSoreHint : BuildingCountHint
{
	[Token(Token = "0x170000BC")]
	public override string hintText
	{
		[Token(Token = "0x60002F2")]
		[Address(RVA = "0xADC7DC", Offset = "0xADC7DC", VA = "0xADC7DC", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000BD")]
	public override float activationTime
	{
		[Token(Token = "0x60002F3")]
		[Address(RVA = "0xADC824", Offset = "0xADC824", VA = "0xADC824", Slot = "5")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000BE")]
	protected override float basePriority
	{
		[Token(Token = "0x60002F4")]
		[Address(RVA = "0xADC830", Offset = "0xADC830", VA = "0xADC830", Slot = "4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000BF")]
	protected override int minBuildingsToTriggerHint
	{
		[Token(Token = "0x60002F5")]
		[Address(RVA = "0xADC838", Offset = "0xADC838", VA = "0xADC838", Slot = "10")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000C0")]
	protected override int maxBuildingsToTriggerHint
	{
		[Token(Token = "0x60002F6")]
		[Address(RVA = "0xADC840", Offset = "0xADC840", VA = "0xADC840", Slot = "11")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0xADC848", Offset = "0xADC848", VA = "0xADC848", Slot = "9")]
	protected override bool IsAffected(BuildingInstance building)
	{
		return default(bool);
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0xADC88C", Offset = "0xADC88C", VA = "0xADC88C")]
	public EyeSoreHint()
	{
	}
}
[Token(Token = "0x200003D")]
public class NoisyHint : BuildingCountHint
{
	[Token(Token = "0x170000C1")]
	public override string hintText
	{
		[Token(Token = "0x60002F9")]
		[Address(RVA = "0xA96458", Offset = "0xA96458", VA = "0xA96458", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C2")]
	public override float activationTime
	{
		[Token(Token = "0x60002FA")]
		[Address(RVA = "0xA964A0", Offset = "0xA964A0", VA = "0xA964A0", Slot = "5")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000C3")]
	protected override float basePriority
	{
		[Token(Token = "0x60002FB")]
		[Address(RVA = "0xA964AC", Offset = "0xA964AC", VA = "0xA964AC", Slot = "4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000C4")]
	protected override int minBuildingsToTriggerHint
	{
		[Token(Token = "0x60002FC")]
		[Address(RVA = "0xA964B4", Offset = "0xA964B4", VA = "0xA964B4", Slot = "10")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000C5")]
	protected override int maxBuildingsToTriggerHint
	{
		[Token(Token = "0x60002FD")]
		[Address(RVA = "0xA964BC", Offset = "0xA964BC", VA = "0xA964BC", Slot = "11")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0xA964C4", Offset = "0xA964C4", VA = "0xA964C4", Slot = "9")]
	protected override bool IsAffected(BuildingInstance building)
	{
		return default(bool);
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0xA96508", Offset = "0xA96508", VA = "0xA96508")]
	public NoisyHint()
	{
	}
}
[Token(Token = "0x200003E")]
public class ZoneImbalanceHint : HintManager.Hint
{
	[Token(Token = "0x40001CB")]
	private const int notEnoughJobsToTriggerHint = 50;

	[Token(Token = "0x40001CC")]
	private const int notEnoughHousesToTriggerHint = 50;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string zoneHintText;

	[Token(Token = "0x170000C6")]
	public override string hintText
	{
		[Token(Token = "0x6000300")]
		[Address(RVA = "0xE09D58", Offset = "0xE09D58", VA = "0xE09D58", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C7")]
	public override float activationTime
	{
		[Token(Token = "0x6000301")]
		[Address(RVA = "0xE09D60", Offset = "0xE09D60", VA = "0xE09D60", Slot = "5")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000C8")]
	protected override float basePriority
	{
		[Token(Token = "0x6000302")]
		[Address(RVA = "0xE09D6C", Offset = "0xE09D6C", VA = "0xE09D6C", Slot = "4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0xE09D78", Offset = "0xE09D78", VA = "0xE09D78", Slot = "8")]
	public override void Update(float deltaTime)
	{
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0xE09F60", Offset = "0xE09F60", VA = "0xE09F60")]
	public ZoneImbalanceHint()
	{
	}
}
[Token(Token = "0x200003F")]
public class DisconnectedBuildingsHint : HintManager.Hint
{
	[Token(Token = "0x170000C9")]
	public override string hintText
	{
		[Token(Token = "0x6000305")]
		[Address(RVA = "0xAD5330", Offset = "0xAD5330", VA = "0xAD5330", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000CA")]
	public override float activationTime
	{
		[Token(Token = "0x6000306")]
		[Address(RVA = "0xAD5378", Offset = "0xAD5378", VA = "0xAD5378", Slot = "5")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000CB")]
	protected override float basePriority
	{
		[Token(Token = "0x6000307")]
		[Address(RVA = "0xAD5380", Offset = "0xAD5380", VA = "0xAD5380", Slot = "4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0xAD5388", Offset = "0xAD5388", VA = "0xAD5388", Slot = "8")]
	public override void Update(float deltaTime)
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0xAD545C", Offset = "0xAD545C", VA = "0xAD545C")]
	public DisconnectedBuildingsHint()
	{
	}
}
[Token(Token = "0x2000040")]
public class BuildCityHallHint : HintManager.Hint
{
	[Token(Token = "0x170000CC")]
	public override string hintText
	{
		[Token(Token = "0x600030A")]
		[Address(RVA = "0xB5FE70", Offset = "0xB5FE70", VA = "0xB5FE70", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000CD")]
	public override float activationTime
	{
		[Token(Token = "0x600030B")]
		[Address(RVA = "0xB5FEB8", Offset = "0xB5FEB8", VA = "0xB5FEB8", Slot = "5")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000CE")]
	protected override float basePriority
	{
		[Token(Token = "0x600030C")]
		[Address(RVA = "0xB5FEC0", Offset = "0xB5FEC0", VA = "0xB5FEC0", Slot = "4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0xB5FEC8", Offset = "0xB5FEC8", VA = "0xB5FEC8", Slot = "8")]
	public override void Update(float deltaTime)
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0xB60080", Offset = "0xB60080", VA = "0xB60080")]
	public BuildCityHallHint()
	{
	}
}
[Token(Token = "0x2000041")]
public class ReturnToWorldMapHint : HintManager.Hint
{
	[Token(Token = "0x170000CF")]
	public override string hintText
	{
		[Token(Token = "0x600030F")]
		[Address(RVA = "0xC209E4", Offset = "0xC209E4", VA = "0xC209E4", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D0")]
	public override float activationTime
	{
		[Token(Token = "0x6000310")]
		[Address(RVA = "0xC20A2C", Offset = "0xC20A2C", VA = "0xC20A2C", Slot = "5")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000D1")]
	protected override float basePriority
	{
		[Token(Token = "0x6000311")]
		[Address(RVA = "0xC20A34", Offset = "0xC20A34", VA = "0xC20A34", Slot = "4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0xC20A3C", Offset = "0xC20A3C", VA = "0xC20A3C", Slot = "8")]
	public override void Update(float deltaTime)
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0xC20AF8", Offset = "0xC20AF8", VA = "0xC20AF8")]
	public ReturnToWorldMapHint()
	{
	}
}
[Token(Token = "0x2000042")]
public class VolcanoEmergencyWarningHint : HintManager.Hint
{
	[Token(Token = "0x170000D2")]
	public override string hintText
	{
		[Token(Token = "0x6000314")]
		[Address(RVA = "0xAA3FE0", Offset = "0xAA3FE0", VA = "0xAA3FE0", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D3")]
	public override float activationTime
	{
		[Token(Token = "0x6000315")]
		[Address(RVA = "0xAA4028", Offset = "0xAA4028", VA = "0xAA4028", Slot = "5")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000D4")]
	protected override float basePriority
	{
		[Token(Token = "0x6000316")]
		[Address(RVA = "0xAA4030", Offset = "0xAA4030", VA = "0xAA4030", Slot = "4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0xAA4038", Offset = "0xAA4038", VA = "0xAA4038", Slot = "8")]
	public override void Update(float deltaTime)
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0xAA40F4", Offset = "0xAA40F4", VA = "0xAA40F4")]
	public VolcanoEmergencyWarningHint()
	{
	}
}
[Token(Token = "0x2000043")]
public class BankruptcyWarningHint : HintManager.Hint
{
	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float minWeeksTilBankruptcy;

	[Token(Token = "0x170000D5")]
	public override string hintText
	{
		[Token(Token = "0x6000319")]
		[Address(RVA = "0xB56328", Offset = "0xB56328", VA = "0xB56328", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D6")]
	public override float activationTime
	{
		[Token(Token = "0x600031A")]
		[Address(RVA = "0xB5639C", Offset = "0xB5639C", VA = "0xB5639C", Slot = "5")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000D7")]
	protected override float basePriority
	{
		[Token(Token = "0x600031B")]
		[Address(RVA = "0xB563A4", Offset = "0xB563A4", VA = "0xB563A4", Slot = "4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0xB563AC", Offset = "0xB563AC", VA = "0xB563AC", Slot = "8")]
	public override void Update(float deltaTime)
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0xB56488", Offset = "0xB56488", VA = "0xB56488")]
	public BankruptcyWarningHint()
	{
	}
}
[Token(Token = "0x2000044")]
public class CompleteIslandHint : HintManager.Hint
{
	[Token(Token = "0x170000D8")]
	public override string hintText
	{
		[Token(Token = "0x600031E")]
		[Address(RVA = "0xC13EB0", Offset = "0xC13EB0", VA = "0xC13EB0", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D9")]
	public override float activationTime
	{
		[Token(Token = "0x600031F")]
		[Address(RVA = "0xC13EF8", Offset = "0xC13EF8", VA = "0xC13EF8", Slot = "5")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000DA")]
	protected override float basePriority
	{
		[Token(Token = "0x6000320")]
		[Address(RVA = "0xC13F00", Offset = "0xC13F00", VA = "0xC13F00", Slot = "4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0xC13F0C", Offset = "0xC13F0C", VA = "0xC13F0C", Slot = "8")]
	public override void Update(float deltaTime)
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0xC140D0", Offset = "0xC140D0", VA = "0xC140D0")]
	public CompleteIslandHint()
	{
	}
}
[Token(Token = "0x2000045")]
public class InfluenceMapManager : CityModule, ISimulationModule, IDebugPanelProvider
{
	[Token(Token = "0x20002BA")]
	public class InfluenceMapManagerSaveData : SaveSystem.ModuleData
	{
		[Token(Token = "0x4001313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] mapData;

		[NonSerialized]
		[Token(Token = "0x4001314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[XmlIgnore]
		public List<float[]> mapDataRaw;

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0xB3AE44", Offset = "0xB3AE44", VA = "0xB3AE44", Slot = "4")]
		public override void OnPreWrite()
		{
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0xB3A8C0", Offset = "0xB3A8C0", VA = "0xB3A8C0")]
		public InfluenceMapManagerSaveData()
		{
		}
	}

	[Token(Token = "0x20002BB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F52D0", Offset = "0x6F52D0")]
	private sealed class <Simulate>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InfluenceMapManager <>4__this;

		[Token(Token = "0x4001318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float deltaTime;

		[Token(Token = "0x4001319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <n>5__2;

		[Token(Token = "0x400131A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IEnumerator <x>5__3;

		[Token(Token = "0x400131B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool <simulating>5__4;

		[Token(Token = "0x17000364")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60014C1")]
			[Address(RVA = "0xB3ADD4", Offset = "0xB3ADD4", VA = "0xB3ADD4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000365")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014C3")]
			[Address(RVA = "0xB3AE3C", Offset = "0xB3AE3C", VA = "0xB3AE3C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0xB3A6E8", Offset = "0xB3A6E8", VA = "0xB3A6E8")]
		[DebuggerHidden]
		public <Simulate>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0xB3ABB0", Offset = "0xB3ABB0", VA = "0xB3ABB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0xB3ABB4", Offset = "0xB3ABB4", VA = "0xB3ABB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0xB3ADDC", Offset = "0xB3ADDC", VA = "0xB3ADDC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject sandStormParticleEffectPrefab;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5EC8", Offset = "0x6F5EC8")]
	private PopulationDensityMap <populationDensity>k__BackingField;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5ED8", Offset = "0x6F5ED8")]
	private TrafficDensityMap <trafficDensity>k__BackingField;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5EE8", Offset = "0x6F5EE8")]
	private ZoneProximityMap <industrialProximity>k__BackingField;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5EF8", Offset = "0x6F5EF8")]
	private WindMap <wind>k__BackingField;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5F08", Offset = "0x6F5F08")]
	private GroundWaterMap <groundWater>k__BackingField;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5F18", Offset = "0x6F5F18")]
	private PortProximityMap <portProximity>k__BackingField;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5F28", Offset = "0x6F5F28")]
	private SandStormMap <sandStorm>k__BackingField;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5F38", Offset = "0x6F5F38")]
	private SpecialBehaviourMap <specialBehaviour>k__BackingField;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<InfluenceMap> allMaps;

	[Token(Token = "0x170000DB")]
	public PopulationDensityMap populationDensity
	{
		[Token(Token = "0x6000323")]
		[Address(RVA = "0xB3A228", Offset = "0xB3A228", VA = "0xB3A228")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FB8D8", Offset = "0x6FB8D8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000324")]
		[Address(RVA = "0xB3A230", Offset = "0xB3A230", VA = "0xB3A230")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FB8E8", Offset = "0x6FB8E8")]
		private set
		{
		}
	}

	[Token(Token = "0x170000DC")]
	public TrafficDensityMap trafficDensity
	{
		[Token(Token = "0x6000325")]
		[Address(RVA = "0xB3A238", Offset = "0xB3A238", VA = "0xB3A238")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FB8F8", Offset = "0x6FB8F8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000326")]
		[Address(RVA = "0xB3A240", Offset = "0xB3A240", VA = "0xB3A240")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FB908", Offset = "0x6FB908")]
		private set
		{
		}
	}

	[Token(Token = "0x170000DD")]
	public ZoneProximityMap industrialProximity
	{
		[Token(Token = "0x6000327")]
		[Address(RVA = "0xB3A248", Offset = "0xB3A248", VA = "0xB3A248")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FB918", Offset = "0x6FB918")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000328")]
		[Address(RVA = "0xB3A250", Offset = "0xB3A250", VA = "0xB3A250")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FB928", Offset = "0x6FB928")]
		private set
		{
		}
	}

	[Token(Token = "0x170000DE")]
	public WindMap wind
	{
		[Token(Token = "0x6000329")]
		[Address(RVA = "0xB3A258", Offset = "0xB3A258", VA = "0xB3A258")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FB938", Offset = "0x6FB938")]
		get
		{
			return null;
		}
		[Token(Token = "0x600032A")]
		[Address(RVA = "0xB3A260", Offset = "0xB3A260", VA = "0xB3A260")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FB948", Offset = "0x6FB948")]
		private set
		{
		}
	}

	[Token(Token = "0x170000DF")]
	public GroundWaterMap groundWater
	{
		[Token(Token = "0x600032B")]
		[Address(RVA = "0xB3A268", Offset = "0xB3A268", VA = "0xB3A268")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FB958", Offset = "0x6FB958")]
		get
		{
			return null;
		}
		[Token(Token = "0x600032C")]
		[Address(RVA = "0xB3A270", Offset = "0xB3A270", VA = "0xB3A270")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FB968", Offset = "0x6FB968")]
		private set
		{
		}
	}

	[Token(Token = "0x170000E0")]
	public PortProximityMap portProximity
	{
		[Token(Token = "0x600032D")]
		[Address(RVA = "0xB3A278", Offset = "0xB3A278", VA = "0xB3A278")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FB978", Offset = "0x6FB978")]
		get
		{
			return null;
		}
		[Token(Token = "0x600032E")]
		[Address(RVA = "0xB3A280", Offset = "0xB3A280", VA = "0xB3A280")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FB988", Offset = "0x6FB988")]
		private set
		{
		}
	}

	[Token(Token = "0x170000E1")]
	public SandStormMap sandStorm
	{
		[Token(Token = "0x600032F")]
		[Address(RVA = "0xB3A288", Offset = "0xB3A288", VA = "0xB3A288")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FB998", Offset = "0x6FB998")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000330")]
		[Address(RVA = "0xB3A290", Offset = "0xB3A290", VA = "0xB3A290")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FB9A8", Offset = "0x6FB9A8")]
		private set
		{
		}
	}

	[Token(Token = "0x170000E2")]
	public SpecialBehaviourMap specialBehaviour
	{
		[Token(Token = "0x6000331")]
		[Address(RVA = "0xB3A298", Offset = "0xB3A298", VA = "0xB3A298")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FB9B8", Offset = "0x6FB9B8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000332")]
		[Address(RVA = "0xB3A2A0", Offset = "0xB3A2A0", VA = "0xB3A2A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FB9C8", Offset = "0x6FB9C8")]
		private set
		{
		}
	}

	[Token(Token = "0x170000E3")]
	public override Type saveModuleDataType
	{
		[Token(Token = "0x6000336")]
		[Address(RVA = "0xB3A714", Offset = "0xB3A714", VA = "0xB3A714", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0xB3A2A8", Offset = "0xB3A2A8", VA = "0xB3A2A8", Slot = "8")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0xB3A548", Offset = "0xB3A548", VA = "0xB3A548", Slot = "10")]
	public override void OnResetProgress()
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0xB3A668", Offset = "0xB3A668", VA = "0xB3A668", Slot = "11")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FB9D8", Offset = "0x6FB9D8")]
	public IEnumerator Simulate(float deltaTime)
	{
		return null;
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0xB3A784", Offset = "0xB3A784", VA = "0xB3A784", Slot = "5")]
	public override SaveSystem.ModuleData OnSave()
	{
		return null;
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0xB3A8C8", Offset = "0xB3A8C8", VA = "0xB3A8C8", Slot = "6")]
	public override void OnLoad(SaveSystem.SaveGame saveGame, SaveSystem.ModuleData data)
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0xB3A9E0", Offset = "0xB3A9E0", VA = "0xB3A9E0", Slot = "7")]
	public override void OnPostLoad()
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0xB3AA94", Offset = "0xB3AA94", VA = "0xB3AA94", Slot = "13")]
	public void OnDebugPanel()
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0xB3ABA0", Offset = "0xB3ABA0", VA = "0xB3ABA0")]
	public InfluenceMapManager()
	{
	}

	[SpecialName]
	[Token(Token = "0x600033C")]
	[Address(RVA = "0xB3ABA8", Offset = "0xB3ABA8", VA = "0xB3ABA8", Slot = "12")]
	private GameObject ISimulationModule.get_gameObject()
	{
		return null;
	}
}
[Token(Token = "0x2000046")]
public class MilestoneManager : CityModule, IDebugPanelProvider
{
	[Token(Token = "0x20002BC")]
	public enum CelebrationAmount
	{
		[Token(Token = "0x400131D")]
		Low,
		[Token(Token = "0x400131E")]
		Medium,
		[Token(Token = "0x400131F")]
		High
	}

	[Token(Token = "0x20002BD")]
	public class MilestoneManagerSaveData : SaveSystem.ModuleData
	{
		[Token(Token = "0x4001320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int cityLevel;

		[Token(Token = "0x4001321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float cityLevelProgress;

		[Token(Token = "0x4001322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public double lastLevelUpTime;

		[Token(Token = "0x4001323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int[] recentlyUnlockedBuildings;

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0xA884B8", Offset = "0xA884B8", VA = "0xA884B8")]
		public MilestoneManagerSaveData()
		{
		}
	}

	[Token(Token = "0x20002BE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F52E0", Offset = "0x6F52E0")]
	private sealed class <LaunchFireworksRoutine>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MilestoneManager <>4__this;

		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <showTime>5__2;

		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <iterations>5__3;

		[Token(Token = "0x17000366")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60014C8")]
			[Address(RVA = "0xA89724", Offset = "0xA89724", VA = "0xA89724", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000367")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014CA")]
			[Address(RVA = "0xA8978C", Offset = "0xA8978C", VA = "0xA8978C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0xA87CD4", Offset = "0xA87CD4", VA = "0xA87CD4")]
		[DebuggerHidden]
		public <LaunchFireworksRoutine>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0xA893F0", Offset = "0xA893F0", VA = "0xA893F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0xA893F4", Offset = "0xA893F4", VA = "0xA893F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014C9")]
		[Address(RVA = "0xA8972C", Offset = "0xA8972C", VA = "0xA8972C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002BF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F52F0", Offset = "0x6F52F0")]
	private sealed class <LaunchBalloonsRoutine>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400132A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400132B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MilestoneManager <>4__this;

		[Token(Token = "0x400132C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CelebrationAmount celebrationAmount;

		[Token(Token = "0x400132D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <numBalloons>5__2;

		[Token(Token = "0x400132E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <n>5__3;

		[Token(Token = "0x400132F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <iterations>5__4;

		[Token(Token = "0x17000368")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60014CE")]
			[Address(RVA = "0xA89380", Offset = "0xA89380", VA = "0xA89380", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000369")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014D0")]
			[Address(RVA = "0xA893E8", Offset = "0xA893E8", VA = "0xA893E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0xA87D00", Offset = "0xA87D00", VA = "0xA87D00")]
		[DebuggerHidden]
		public <LaunchBalloonsRoutine>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0xA88F90", Offset = "0xA88F90", VA = "0xA88F90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0xA88F94", Offset = "0xA88F94", VA = "0xA88F94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014CF")]
		[Address(RVA = "0xA89388", Offset = "0xA89388", VA = "0xA89388", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int cityLevel;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject fireworksEffectPrefab;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<GameObject> balloonsEffectPrefabs;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip[] cheerSounds;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip[] fireworkSounds;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip[] balloonSounds;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioSource fireworkSoundParameters;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioSource balloonSoundParameters;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float cityLevelProgress;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<BuildingInfo> recentlyUnlockedBuildings;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private double lastLevelUpTime;

	[Token(Token = "0x170000E4")]
	public int maxCityLevel
	{
		[Token(Token = "0x600033D")]
		[Address(RVA = "0xA86F18", Offset = "0xA86F18", VA = "0xA86F18")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000E5")]
	public double timeSinceLevelUp
	{
		[Token(Token = "0x600033E")]
		[Address(RVA = "0xA86FD4", Offset = "0xA86FD4", VA = "0xA86FD4")]
		get
		{
			return default(double);
		}
	}

	[Token(Token = "0x170000E6")]
	private Player player
	{
		[Token(Token = "0x600033F")]
		[Address(RVA = "0xA8700C", Offset = "0xA8700C", VA = "0xA8700C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000E7")]
	public override Type saveModuleDataType
	{
		[Token(Token = "0x600034F")]
		[Address(RVA = "0xA88170", Offset = "0xA88170", VA = "0xA88170", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0xA8705C", Offset = "0xA8705C", VA = "0xA8705C")]
	public string GetLevelName()
	{
		return null;
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0xA87064", Offset = "0xA87064", VA = "0xA87064")]
	public string GetLevelName(int level)
	{
		return null;
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0xA8717C", Offset = "0xA8717C", VA = "0xA8717C")]
	public int GetRequiredPopulation(int level)
	{
		return default(int);
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0xA872B8", Offset = "0xA872B8", VA = "0xA872B8")]
	public int CalculateDisplayPopulation()
	{
		return default(int);
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0xA872F0", Offset = "0xA872F0", VA = "0xA872F0", Slot = "10")]
	public override void OnResetProgress()
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0xA87304", Offset = "0xA87304", VA = "0xA87304")]
	private void Update()
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0xA87710", Offset = "0xA87710", VA = "0xA87710")]
	private void LevelUp(bool sendLevelUpEvent = true)
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0xA87990", Offset = "0xA87990", VA = "0xA87990")]
	public void UnlockAllCheat()
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0xA87A14", Offset = "0xA87A14", VA = "0xA87A14")]
	public void UnlockCheat()
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0xA878B0", Offset = "0xA878B0", VA = "0xA878B0")]
	public void PlayCelebrationEffects(CelebrationAmount celebrationAmount)
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0xA87B48", Offset = "0xA87B48", VA = "0xA87B48")]
	private void LaunchFireworks()
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0xA87A9C", Offset = "0xA87A9C", VA = "0xA87A9C")]
	private void LaunchBalloons(CelebrationAmount celebrationAmount)
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0xA87BE4", Offset = "0xA87BE4", VA = "0xA87BE4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FBA3C", Offset = "0x6FBA3C")]
	private IEnumerator LaunchFireworksRoutine()
	{
		return null;
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0xA87C54", Offset = "0xA87C54", VA = "0xA87C54")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FBAA0", Offset = "0x6FBAA0")]
	private IEnumerator LaunchBalloonsRoutine(CelebrationAmount celebrationAmount)
	{
		return null;
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0xA87D2C", Offset = "0xA87D2C", VA = "0xA87D2C", Slot = "11")]
	public void OnDebugPanel()
	{
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0xA881E0", Offset = "0xA881E0", VA = "0xA881E0", Slot = "6")]
	public override void OnLoad(SaveSystem.SaveGame saveGame, SaveSystem.ModuleData data)
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0xA88350", Offset = "0xA88350", VA = "0xA88350", Slot = "5")]
	public override SaveSystem.ModuleData OnSave()
	{
		return null;
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0xA884C0", Offset = "0xA884C0", VA = "0xA884C0")]
	public int GetUnlockedLevelRequired(BuildingInfo buildingInfo)
	{
		return default(int);
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0xA886D4", Offset = "0xA886D4", VA = "0xA886D4")]
	public bool IsBuildingUnlocked(BuildingInfo buildingInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0xA87198", Offset = "0xA87198", VA = "0xA87198")]
	public CityInfo.Milestone GetMilestone(int level)
	{
		return null;
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0xA888F0", Offset = "0xA888F0", VA = "0xA888F0")]
	public int CalculateServiceUnlockLevel(CityServiceManager.ServiceType serviceType)
	{
		return default(int);
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0xA88A98", Offset = "0xA88A98", VA = "0xA88A98")]
	public int CalculateNetworkUnlockLevel()
	{
		return default(int);
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0xA88C34", Offset = "0xA88C34", VA = "0xA88C34")]
	public int CalculateTreePlantingUnlockLevel()
	{
		return default(int);
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0xA88DC0", Offset = "0xA88DC0", VA = "0xA88DC0")]
	public BuildingInfo FindBuildingType(Predicate<BuildingInfo> predicate)
	{
		return null;
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0xA88F80", Offset = "0xA88F80", VA = "0xA88F80")]
	public MilestoneManager()
	{
	}
}
[Token(Token = "0x2000047")]
public abstract class MiniStory : MonoBehaviour
{
	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CityInfo.Theme theme;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected MiniStoryManager manager;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Player player;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5F48", Offset = "0x6F5F48")]
	private float <timeActive>k__BackingField;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5F58", Offset = "0x6F5F58")]
	private double <lastTimeFinished>k__BackingField;

	[Token(Token = "0x170000E8")]
	public abstract bool canActivate
	{
		[Token(Token = "0x600035A")]
		get;
	}

	[Token(Token = "0x170000E9")]
	public virtual bool shouldSuppressPlaneSpawning
	{
		[Token(Token = "0x600035B")]
		[Address(RVA = "0xA8CE08", Offset = "0xA8CE08", VA = "0xA8CE08", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000EA")]
	public virtual float timeBetweenReactivation
	{
		[Token(Token = "0x600035C")]
		[Address(RVA = "0xA8CE10", Offset = "0xA8CE10", VA = "0xA8CE10", Slot = "6")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000EB")]
	public float timeActive
	{
		[Token(Token = "0x600035D")]
		[Address(RVA = "0xA8CE1C", Offset = "0xA8CE1C", VA = "0xA8CE1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FBB04", Offset = "0x6FBB04")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600035E")]
		[Address(RVA = "0xA8CE24", Offset = "0xA8CE24", VA = "0xA8CE24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FBB14", Offset = "0x6FBB14")]
		set
		{
		}
	}

	[Token(Token = "0x170000EC")]
	public double timeSinceLastFinished
	{
		[Token(Token = "0x600035F")]
		[Address(RVA = "0xA8CCD0", Offset = "0xA8CCD0", VA = "0xA8CCD0")]
		get
		{
			return default(double);
		}
	}

	[Token(Token = "0x170000ED")]
	public double lastTimeFinished
	{
		[Token(Token = "0x6000360")]
		[Address(RVA = "0xA8CE48", Offset = "0xA8CE48", VA = "0xA8CE48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FBB24", Offset = "0x6FBB24")]
		get
		{
			return default(double);
		}
		[Token(Token = "0x6000361")]
		[Address(RVA = "0xA8CE50", Offset = "0xA8CE50", VA = "0xA8CE50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FBB34", Offset = "0x6FBB34")]
		set
		{
		}
	}

	[Token(Token = "0x170000EE")]
	public City city
	{
		[Token(Token = "0x6000362")]
		[Address(RVA = "0xA8CE2C", Offset = "0xA8CE2C", VA = "0xA8CE2C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0xA8CE58", Offset = "0xA8CE58", VA = "0xA8CE58")]
	public void Init(MiniStoryManager manager, Player player)
	{
	}

	[Token(Token = "0x6000364")]
	public abstract bool Activate();

	[Token(Token = "0x6000365")]
	public abstract void Cancel();

	[Token(Token = "0x6000366")]
	[Address(RVA = "0xA8CE68", Offset = "0xA8CE68", VA = "0xA8CE68", Slot = "9")]
	public virtual void OnInit()
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0xA8CE6C", Offset = "0xA8CE6C", VA = "0xA8CE6C", Slot = "10")]
	public virtual void Simulate(float deltaTime)
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0xA8CE70", Offset = "0xA8CE70", VA = "0xA8CE70")]
	protected void FinishStory()
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0xA8CF78", Offset = "0xA8CF78", VA = "0xA8CF78")]
	private void Update()
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0xA8CFD4", Offset = "0xA8CFD4", VA = "0xA8CFD4")]
	protected MiniStory()
	{
	}
}
[Token(Token = "0x2000048")]
public class MiniStoryManager : CityModule, ISimulationModule, IDebugPanelProvider
{
	[Token(Token = "0x20002C0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5300", Offset = "0x6F5300")]
	private sealed class <Simulate>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MiniStoryManager <>4__this;

		[Token(Token = "0x1700036A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60014D4")]
			[Address(RVA = "0xA8E03C", Offset = "0xA8E03C", VA = "0xA8E03C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700036B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014D6")]
			[Address(RVA = "0xA8E0A4", Offset = "0xA8E0A4", VA = "0xA8E0A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014D1")]
		[Address(RVA = "0xA8D7B0", Offset = "0xA8D7B0", VA = "0xA8D7B0")]
		[DebuggerHidden]
		public <Simulate>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x60014D2")]
		[Address(RVA = "0xA8DE30", Offset = "0xA8DE30", VA = "0xA8DE30", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014D3")]
		[Address(RVA = "0xA8DE34", Offset = "0xA8DE34", VA = "0xA8DE34", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0xA8E044", Offset = "0xA8E044", VA = "0xA8E044", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<MiniStory> miniStoryPrefabs;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5F68", Offset = "0x6F5F68")]
	private MiniStory <activeStory>k__BackingField;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<MiniStory> stories;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Vector3> beachPositions;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float waitTimeBetweenStories;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5F78", Offset = "0x6F5F78")]
	private double <lastMiniStoryFinishTime>k__BackingField;

	[Token(Token = "0x170000EF")]
	public MiniStory activeStory
	{
		[Token(Token = "0x600036B")]
		[Address(RVA = "0xA8CFDC", Offset = "0xA8CFDC", VA = "0xA8CFDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FBB44", Offset = "0x6FBB44")]
		get
		{
			return null;
		}
		[Token(Token = "0x600036C")]
		[Address(RVA = "0xA8CFE4", Offset = "0xA8CFE4", VA = "0xA8CFE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FBB54", Offset = "0x6FBB54")]
		private set
		{
		}
	}

	[Token(Token = "0x170000F0")]
	public bool shouldSuppressPlaneSpawning
	{
		[Token(Token = "0x600036D")]
		[Address(RVA = "0xA8CFEC", Offset = "0xA8CFEC", VA = "0xA8CFEC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000F1")]
	public double lastMiniStoryFinishTime
	{
		[Token(Token = "0x600036E")]
		[Address(RVA = "0xA8D088", Offset = "0xA8D088", VA = "0xA8D088")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FBB64", Offset = "0x6FBB64")]
		get
		{
			return default(double);
		}
		[Token(Token = "0x600036F")]
		[Address(RVA = "0xA8D090", Offset = "0xA8D090", VA = "0xA8D090")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FBB74", Offset = "0x6FBB74")]
		private set
		{
		}
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0xA8D098", Offset = "0xA8D098", VA = "0xA8D098", Slot = "7")]
	public override void OnPostLoad()
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0xA8D0CC", Offset = "0xA8D0CC", VA = "0xA8D0CC", Slot = "10")]
	public override void OnResetProgress()
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0xA8D208", Offset = "0xA8D208", VA = "0xA8D208", Slot = "8")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0xA8D740", Offset = "0xA8D740", VA = "0xA8D740", Slot = "11")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FBB84", Offset = "0x6FBB84")]
	public IEnumerator Simulate(float deltaTime)
	{
		return null;
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0xA8CED4", Offset = "0xA8CED4", VA = "0xA8CED4")]
	public void Finish(MiniStory story)
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0xA8D7DC", Offset = "0xA8D7DC", VA = "0xA8D7DC")]
	public bool GenerateBeachPosition(out Vector3 result, bool canBeVisible = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0xA8D9C4", Offset = "0xA8D9C4", VA = "0xA8D9C4")]
	public bool GenerateBeachPositionNearPosition(Vector3 basePosition, float minDistance, float maxDistance, out Vector3 result, bool canBeVisible = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0xA8DB2C", Offset = "0xA8DB2C", VA = "0xA8DB2C")]
	public List<MiniStory> GetStories()
	{
		return null;
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0xA8DB34", Offset = "0xA8DB34", VA = "0xA8DB34", Slot = "13")]
	public void OnDebugPanel()
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0xA8DD68", Offset = "0xA8DD68", VA = "0xA8DD68")]
	public MiniStoryManager()
	{
	}

	[SpecialName]
	[Token(Token = "0x600037A")]
	[Address(RVA = "0xA8DE28", Offset = "0xA8DE28", VA = "0xA8DE28", Slot = "12")]
	private GameObject ISimulationModule.get_gameObject()
	{
		return null;
	}
}
[Token(Token = "0x2000049")]
public class PlantBoxManager : CityModule
{
	[Token(Token = "0x20002C1")]
	private struct TileArrangement
	{
		[Token(Token = "0x4001333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int prefabIndex;

		[Token(Token = "0x4001334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int rotation;

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0x777CCC", Offset = "0x777CCC", VA = "0x777CCC")]
		public TileArrangement(int p, int r)
		{
		}
	}

	[Token(Token = "0x20002C2")]
	public struct Tile
	{
		[Token(Token = "0x4001335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int plantIndex;

		[Token(Token = "0x4001336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public MeshBatcherV2.InstanceId boxId;

		[Token(Token = "0x4001337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public MeshBatcherV2.InstanceId plantId;

		[Token(Token = "0x4001338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public MeshBatcherV2.InstanceId patchId;
	}

	[Token(Token = "0x20002C3")]
	private struct PreviewChange
	{
		[Token(Token = "0x4001339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int x;

		[Token(Token = "0x400133A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int y;

		[Token(Token = "0x400133B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int plantIndex;

		[Token(Token = "0x400133C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool keepChange;

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0x777C94", Offset = "0x777C94", VA = "0x777C94")]
		public PreviewChange(int inX, int inY, int inPlantIndex)
		{
		}

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0x777CA8", Offset = "0x777CA8", VA = "0x777CA8")]
		public PreviewChange MarkOld()
		{
			return default(PreviewChange);
		}

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0x777CB8", Offset = "0x777CB8", VA = "0x777CB8")]
		public PreviewChange MarkKeep()
		{
			return default(PreviewChange);
		}
	}

	[Token(Token = "0x20002C4")]
	public class PlantBoxSaveData : SaveSystem.ModuleData
	{
		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string tiles;

		[NonSerialized]
		[Token(Token = "0x400133E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[XmlIgnore]
		public Tile[] tilesRaw;

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0xA24C70", Offset = "0xA24C70", VA = "0xA24C70", Slot = "4")]
		public override void OnPreWrite()
		{
		}

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0xA246B8", Offset = "0xA246B8", VA = "0xA246B8")]
		public PlantBoxSaveData()
		{
		}
	}

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> plantBoxPrefabs;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<PropCollection> plantPrefabs;

	[Token(Token = "0x40001F1")]
	private const int tileLone = 0;

	[Token(Token = "0x40001F2")]
	private const int tileEnd = 1;

	[Token(Token = "0x40001F3")]
	private const int tileStraight = 2;

	[Token(Token = "0x40001F4")]
	private const int tileL = 3;

	[Token(Token = "0x40001F5")]
	private const int tileT = 4;

	[Token(Token = "0x40001F6")]
	private const int tileCross = 5;

	[Token(Token = "0x40001F7")]
	private const int tilePatch = 6;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TileArrangement[] tileArrangements;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float placementWiggle;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float scaleWiggle;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float baseScale;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float plantHeight;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public MeshBatcherV2 meshBatcher;

	[Token(Token = "0x40001FE")]
	private const int noPlantIndex = -1;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool needsRefresh;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5F88", Offset = "0x6F5F88")]
	private int <unlockLevel>k__BackingField;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Tile[] tiles;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<PreviewChange> previewChangesAdded;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<PreviewChange> previewChangesRemoved;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool isPreviewingChanges;

	[Token(Token = "0x170000F2")]
	public int unlockLevel
	{
		[Token(Token = "0x600037B")]
		[Address(RVA = "0xA224A8", Offset = "0xA224A8", VA = "0xA224A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FBBE8", Offset = "0x6FBBE8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600037C")]
		[Address(RVA = "0xA224B0", Offset = "0xA224B0", VA = "0xA224B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FBBF8", Offset = "0x6FBBF8")]
		private set
		{
		}
	}

	[Token(Token = "0x170000F3")]
	public bool hasPreviewChanges
	{
		[Token(Token = "0x600037D")]
		[Address(RVA = "0xA224B8", Offset = "0xA224B8", VA = "0xA224B8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000F4")]
	public override Type saveModuleDataType
	{
		[Token(Token = "0x600038C")]
		[Address(RVA = "0xA245A8", Offset = "0xA245A8", VA = "0xA245A8", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0xA2252C", Offset = "0xA2252C", VA = "0xA2252C", Slot = "8")]
	public override void Init()
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0xA226C8", Offset = "0xA226C8", VA = "0xA226C8", Slot = "10")]
	public override void OnResetProgress()
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0xA2287C", Offset = "0xA2287C", VA = "0xA2287C")]
	public void ClearPreview()
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0xA23378", Offset = "0xA23378", VA = "0xA23378")]
	private void RemoveStalePreviewChanges()
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0xA2359C", Offset = "0xA2359C", VA = "0xA2359C")]
	public void BeginPreviewChanges()
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0xA23728", Offset = "0xA23728", VA = "0xA23728")]
	public void EndPreviewChanges()
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0xA22A3C", Offset = "0xA22A3C", VA = "0xA22A3C")]
	public void AddPlant(int x, int y, int plantIndex, bool fromSaveData = false, bool affectSandstorm = true)
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0xA23B24", Offset = "0xA23B24", VA = "0xA23B24")]
	public PropInfo GetPropInfo(int x, int y)
	{
		return null;
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0xA23C9C", Offset = "0xA23C9C", VA = "0xA23C9C")]
	public bool HasPlant(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0xA22F70", Offset = "0xA22F70", VA = "0xA22F70")]
	public void RemovePlant(int x, int y, bool affectSandstorm = true)
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0xA2397C", Offset = "0xA2397C", VA = "0xA2397C")]
	private void RefreshTileArea(int x, int y)
	{
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0xA23D40", Offset = "0xA23D40", VA = "0xA23D40")]
	private void RefreshTile(int x, int y)
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0xA23788", Offset = "0xA23788", VA = "0xA23788")]
	private void GetPlantingTransform(int x, int y, out Vector3 position, out Quaternion rotation, out Vector3 scale)
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0xA243C8", Offset = "0xA243C8", VA = "0xA243C8")]
	public int GetPlantCost(int x, int y, int propCollectionIndex)
	{
		return default(int);
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0xA24618", Offset = "0xA24618", VA = "0xA24618", Slot = "5")]
	public override SaveSystem.ModuleData OnSave()
	{
		return null;
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0xA246C0", Offset = "0xA246C0", VA = "0xA246C0", Slot = "6")]
	public override void OnLoad(SaveSystem.SaveGame saveGame, SaveSystem.ModuleData data)
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0xA249F0", Offset = "0xA249F0", VA = "0xA249F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0xA24A48", Offset = "0xA24A48", VA = "0xA24A48")]
	public PlantBoxManager()
	{
	}
}
[Token(Token = "0x200004A")]
public class PropManager : CityModule
{
	[Token(Token = "0x20002C5")]
	private struct PreviewChange
	{
		[Token(Token = "0x400133F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public PropInfo propInfo;

		[Token(Token = "0x4001340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector3 position;

		[Token(Token = "0x4001341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Quaternion rotation;

		[Token(Token = "0x4001342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 scale;

		[Token(Token = "0x4001343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool keepChange;

		[Token(Token = "0x1700036C")]
		public int x
		{
			[Token(Token = "0x60014DE")]
			[Address(RVA = "0x779744", Offset = "0x779744", VA = "0x779744")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700036D")]
		public int y
		{
			[Token(Token = "0x60014DF")]
			[Address(RVA = "0x77974C", Offset = "0x77974C", VA = "0x77974C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0x779714", Offset = "0x779714", VA = "0x779714")]
		public PreviewChange(PropInfo propInfo, Vector3 position, Quaternion rotation, Vector3 scale)
		{
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0x779754", Offset = "0x779754", VA = "0x779754")]
		public PreviewChange MarkKeep()
		{
			return default(PreviewChange);
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0x779778", Offset = "0x779778", VA = "0x779778")]
		public PreviewChange MarkOld()
		{
			return default(PreviewChange);
		}
	}

	[Token(Token = "0x20002C6")]
	public struct Tile
	{
		[Token(Token = "0x4001344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshBatcherV2.InstanceId meshInstance;

		[Token(Token = "0x4001345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int prefabIndex;

		[Token(Token = "0x4001346")]
		public const int unoccupiedIndex = 255;

		[Token(Token = "0x4001347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector3 position;

		[Token(Token = "0x4001348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Quaternion rotation;

		[Token(Token = "0x4001349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 scale;

		[Token(Token = "0x400134A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BirdManager.PerchTransform perchTransform;

		[Token(Token = "0x1700036E")]
		public bool occupied
		{
			[Token(Token = "0x60014E2")]
			[Address(RVA = "0x7797D4", Offset = "0x7797D4", VA = "0x7797D4")]
			get
			{
				return default(bool);
			}
		}
	}

	[Token(Token = "0x20002C7")]
	public class PropSaveData : SaveSystem.ModuleData
	{
		[Token(Token = "0x400134B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int width;

		[Token(Token = "0x400134C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int height;

		[Token(Token = "0x400134D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string tiles;

		[NonSerialized]
		[Token(Token = "0x400134E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[XmlIgnore]
		public Tile[] tilesRaw;

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0xC1BEA0", Offset = "0xC1BEA0", VA = "0xC1BEA0", Slot = "4")]
		public override void OnPreWrite()
		{
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0xC1B940", Offset = "0xC1B940", VA = "0xC1B940")]
		public PropSaveData()
		{
		}
	}

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshBatcherV2 meshBatcher;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<PreviewChange> previewChangesAdded;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<PreviewChange> previewChangesRemoved;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isPreviewingChanges;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Tile[] tiles;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Tile[] startingTiles;

	[Token(Token = "0x170000F5")]
	public override Type saveModuleDataType
	{
		[Token(Token = "0x600039E")]
		[Address(RVA = "0xC1B810", Offset = "0xC1B810", VA = "0xC1B810", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0xC18F7C", Offset = "0xC18F7C", VA = "0xC18F7C")]
	private List<GameObject> GetLandscapePropObjects()
	{
		return null;
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0xC190B4", Offset = "0xC190B4", VA = "0xC190B4", Slot = "8")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0xC191C8", Offset = "0xC191C8", VA = "0xC191C8", Slot = "9")]
	public override void PostInit()
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0xC196B8", Offset = "0xC196B8", VA = "0xC196B8", Slot = "10")]
	public override void OnResetProgress()
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0xC19CD0", Offset = "0xC19CD0", VA = "0xC19CD0")]
	public bool AddProp(PropInfo propInfo, Vector3 position, Quaternion rotation, Vector3 scale)
	{
		return default(bool);
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0xC1A664", Offset = "0xC1A664", VA = "0xC1A664")]
	public void RemoveProp(int x, int y)
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0xC1AC8C", Offset = "0xC1AC8C", VA = "0xC1AC8C")]
	public bool HasProp(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0xC1AD34", Offset = "0xC1AD34", VA = "0xC1AD34")]
	public PropInfo GetPropInfo(int x, int y)
	{
		return null;
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0xC17678", Offset = "0xC17678", VA = "0xC17678")]
	public void AdjustConstructionCost(ConstructionCost costReport, int x, int y)
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0xC1B07C", Offset = "0xC1B07C", VA = "0xC1B07C")]
	public void ClearPreview()
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0xC1B304", Offset = "0xC1B304", VA = "0xC1B304")]
	public void BeginPreviewChanges()
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0xC1B510", Offset = "0xC1B510", VA = "0xC1B510")]
	private void RemoveStalePreviewChanges()
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0xC1B808", Offset = "0xC1B808", VA = "0xC1B808")]
	public void EndPreviewChanges()
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0xC1B880", Offset = "0xC1B880", VA = "0xC1B880", Slot = "5")]
	public override SaveSystem.ModuleData OnSave()
	{
		return null;
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0xC1B948", Offset = "0xC1B948", VA = "0xC1B948", Slot = "6")]
	public override void OnLoad(SaveSystem.SaveGame saveGame, SaveSystem.ModuleData data)
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0xC1BDF4", Offset = "0xC1BDF4", VA = "0xC1BDF4", Slot = "7")]
	public override void OnPostLoad()
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0xC1BE10", Offset = "0xC1BE10", VA = "0xC1BE10")]
	public PropManager()
	{
	}
}
[Token(Token = "0x200004B")]
public class RegionManager : CityModule, IDebugPanelProvider
{
	[Token(Token = "0x20002C8")]
	public class RegionSaveData : SaveSystem.ModuleData
	{
		[Token(Token = "0x400134F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<int> unlockedRegions;

		[Token(Token = "0x4001350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int unlockTokens;

		[Token(Token = "0x4001351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public double lastUnlockTokenReceivedTime;

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0xC1F038", Offset = "0xC1F038", VA = "0xC1F038")]
		public RegionSaveData()
		{
		}
	}

	[Token(Token = "0x400020B")]
	public const int maxRegions = 20;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<int> unlockedRegions;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color lockedColour;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color previewUnlockColour;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color previewCannotUnlockColour;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private double lastUnlockTokenReceivedTime;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5F98", Offset = "0x6F5F98")]
	private int <unlockTokens>k__BackingField;

	[Token(Token = "0x170000F6")]
	public float timeSinceUnlockTokenReceived
	{
		[Token(Token = "0x60003A3")]
		[Address(RVA = "0xC1E888", Offset = "0xC1E888", VA = "0xC1E888")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000F7")]
	public int unlockTokens
	{
		[Token(Token = "0x60003A4")]
		[Address(RVA = "0xC1E90C", Offset = "0xC1E90C", VA = "0xC1E90C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FBC08", Offset = "0x6FBC08")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60003A5")]
		[Address(RVA = "0xC1E914", Offset = "0xC1E914", VA = "0xC1E914")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FBC18", Offset = "0x6FBC18")]
		private set
		{
		}
	}

	[Token(Token = "0x170000F8")]
	public int numUnlockedRegions
	{
		[Token(Token = "0x60003A6")]
		[Address(RVA = "0xC1E91C", Offset = "0xC1E91C", VA = "0xC1E91C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000F9")]
	public override Type saveModuleDataType
	{
		[Token(Token = "0x60003B2")]
		[Address(RVA = "0xC1EE4C", Offset = "0xC1EE4C", VA = "0xC1EE4C", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0xC1AF48", Offset = "0xC1AF48", VA = "0xC1AF48")]
	public int GetRegion(int x, int y)
	{
		return default(int);
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0xC1AFFC", Offset = "0xC1AFFC", VA = "0xC1AFFC")]
	public bool IsRegionUnlocked(int region)
	{
		return default(bool);
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0xC175B4", Offset = "0xC175B4", VA = "0xC175B4")]
	public bool IsRegionUnlocked(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0xC169F4", Offset = "0xC169F4", VA = "0xC169F4")]
	public void UnlockRegion(int region)
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0xC1EACC", Offset = "0xC1EACC", VA = "0xC1EACC")]
	public void UnlockAllCheat()
	{
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0xC1EB8C", Offset = "0xC1EB8C", VA = "0xC1EB8C")]
	public void IncrementUnlockTokens()
	{
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0xC1EBCC", Offset = "0xC1EBCC", VA = "0xC1EBCC")]
	public void PreviewUnlockRegions(ConstructionCost costReport)
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0xC1E970", Offset = "0xC1E970", VA = "0xC1E970")]
	private void TintLandscapeColours()
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0xC1EDB0", Offset = "0xC1EDB0", VA = "0xC1EDB0")]
	public void UndoRegionUnlock(int regionIndex)
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0xC17840", Offset = "0xC17840", VA = "0xC17840")]
	public void AdjustConstructionCost(ConstructionCost costReport, int x, int y)
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0xC1EE48", Offset = "0xC1EE48", VA = "0xC1EE48", Slot = "9")]
	public override void PostInit()
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0xC1EEBC", Offset = "0xC1EEBC", VA = "0xC1EEBC", Slot = "6")]
	public override void OnLoad(SaveSystem.SaveGame saveGame, SaveSystem.ModuleData data)
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0xC1EF88", Offset = "0xC1EF88", VA = "0xC1EF88", Slot = "5")]
	public override SaveSystem.ModuleData OnSave()
	{
		return null;
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0xC1F040", Offset = "0xC1F040", VA = "0xC1F040", Slot = "11")]
	public void OnDebugPanel()
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0xC1F140", Offset = "0xC1F140", VA = "0xC1F140")]
	public string GetNextRegionUnlockMessage()
	{
		return null;
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0xC1F2D8", Offset = "0xC1F2D8", VA = "0xC1F2D8", Slot = "10")]
	public override void OnResetProgress()
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0xC1F338", Offset = "0xC1F338", VA = "0xC1F338")]
	public RegionManager()
	{
	}
}
[Token(Token = "0x200004C")]
public class RoadManager : CityModule
{
	[Token(Token = "0x20002C9")]
	public class Road
	{
		[Token(Token = "0x4001352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4001353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public short index;

		[Token(Token = "0x4001354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int _numTiles;

		[Token(Token = "0x4001355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int x;

		[Token(Token = "0x4001356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int y;

		[Token(Token = "0x4001357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float trafficDensity;

		[Token(Token = "0x4001358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<short> connections;

		[Token(Token = "0x1700036F")]
		public int numTiles
		{
			[Token(Token = "0x60014E6")]
			[Address(RVA = "0xC278FC", Offset = "0xC278FC", VA = "0xC278FC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60014E7")]
			[Address(RVA = "0xC27904", Offset = "0xC27904", VA = "0xC27904")]
			set
			{
			}
		}

		[Token(Token = "0x17000370")]
		public bool isValid
		{
			[Token(Token = "0x60014E8")]
			[Address(RVA = "0xC184AC", Offset = "0xC184AC", VA = "0xC184AC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0xC23D6C", Offset = "0xC23D6C", VA = "0xC23D6C")]
		public Road()
		{
		}
	}

	[Token(Token = "0x20002CA")]
	private delegate void TileVisitor(int x, int y);

	[Token(Token = "0x20002CB")]
	public class RoadSaveData : SaveSystem.ModuleData
	{
		[Token(Token = "0x4001359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Road[] roads;

		[Token(Token = "0x400135A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string roadMap;

		[Token(Token = "0x400135B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string blockedMap;

		[NonSerialized]
		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[XmlIgnore]
		public short[] roadMapRaw;

		[NonSerialized]
		[Token(Token = "0x400135D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[XmlIgnore]
		public bool[] blockedMapRaw;

		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int width;

		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int height;

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0xC2790C", Offset = "0xC2790C", VA = "0xC2790C", Slot = "4")]
		public override void OnPreWrite()
		{
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0xC2654C", Offset = "0xC2654C", VA = "0xC2654C")]
		public RoadSaveData()
		{
		}
	}

	[Token(Token = "0x20002CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5310", Offset = "0x6F5310")]
	private sealed class <>c__DisplayClass32_0
	{
		[Token(Token = "0x4001360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RoadManager <>4__this;

		[Token(Token = "0x4001361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Road targetRoad;

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0xC249C0", Offset = "0xC249C0", VA = "0xC249C0")]
		public <>c__DisplayClass32_0()
		{
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0xC26E44", Offset = "0xC26E44", VA = "0xC26E44")]
		internal void <RecreateRoadConnections>b__0(int x, int y)
		{
		}
	}

	[Token(Token = "0x20002CD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5320", Offset = "0x6F5320")]
	private sealed class <>c__DisplayClass33_0
	{
		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int firstCount;

		[Token(Token = "0x4001363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RoadManager <>4__this;

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0xC24D74", Offset = "0xC24D74", VA = "0xC24D74")]
		public <>c__DisplayClass33_0()
		{
		}

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0xC26F10", Offset = "0xC26F10", VA = "0xC26F10")]
		internal void <SplitRoad>b__0(int x, int y)
		{
		}
	}

	[Token(Token = "0x20002CE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5330", Offset = "0x6F5330")]
	private sealed class <>c__DisplayClass33_1
	{
		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Road newRoad;

		[Token(Token = "0x4001365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass33_0 CS$<>8__locals1;

		[Token(Token = "0x60014F4")]
		[Address(RVA = "0xC24D7C", Offset = "0xC24D7C", VA = "0xC24D7C")]
		public <>c__DisplayClass33_1()
		{
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0xC26F20", Offset = "0xC26F20", VA = "0xC26F20")]
		internal void <SplitRoad>b__1(int x, int y)
		{
		}

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0xC26FA0", Offset = "0xC26FA0", VA = "0xC26FA0")]
		internal void <SplitRoad>b__2(int x, int y)
		{
		}
	}

	[Token(Token = "0x20002CF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5340", Offset = "0x6F5340")]
	private sealed class <>c__DisplayClass37_0
	{
		[Token(Token = "0x4001366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Road firstNeighbour;

		[Token(Token = "0x4001367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Road secondNeighbour;

		[Token(Token = "0x4001368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoadManager <>4__this;

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0xC2555C", Offset = "0xC2555C", VA = "0xC2555C")]
		public <>c__DisplayClass37_0()
		{
		}

		[Token(Token = "0x60014F8")]
		[Address(RVA = "0xC27020", Offset = "0xC27020", VA = "0xC27020")]
		internal void <PlaceRoadInternal>b__0(int i, int j)
		{
		}

		[Token(Token = "0x60014F9")]
		[Address(RVA = "0xC270AC", Offset = "0xC270AC", VA = "0xC270AC")]
		internal void <PlaceRoadInternal>b__1(int i, int j)
		{
		}
	}

	[Token(Token = "0x20002D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5350", Offset = "0x6F5350")]
	private sealed class <>c__DisplayClass38_0
	{
		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Road firstNeighbour;

		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Road secondNeighbour;

		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoadManager <>4__this;

		[Token(Token = "0x60014FA")]
		[Address(RVA = "0xC25A18", Offset = "0xC25A18", VA = "0xC25A18")]
		public <>c__DisplayClass38_0()
		{
		}

		[Token(Token = "0x60014FB")]
		[Address(RVA = "0xC27138", Offset = "0xC27138", VA = "0xC27138")]
		internal void <FixUpJunction>b__0(int i, int j)
		{
		}

		[Token(Token = "0x60014FC")]
		[Address(RVA = "0xC271C4", Offset = "0xC271C4", VA = "0xC271C4")]
		internal void <FixUpJunction>b__1(int i, int j)
		{
		}
	}

	[Token(Token = "0x20002D1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5360", Offset = "0x6F5360")]
	private sealed class <>c__DisplayClass39_0
	{
		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int secondX;

		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int secondY;

		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RoadManager <>4__this;

		[Token(Token = "0x60014FD")]
		[Address(RVA = "0xC260FC", Offset = "0xC260FC", VA = "0xC260FC")]
		public <>c__DisplayClass39_0()
		{
		}
	}

	[Token(Token = "0x20002D2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5370", Offset = "0x6F5370")]
	private sealed class <>c__DisplayClass39_1
	{
		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int firstCount;

		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool isLoop;

		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int secondCount;

		[Token(Token = "0x4001372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public <>c__DisplayClass39_0 CS$<>8__locals1;

		[Token(Token = "0x60014FE")]
		[Address(RVA = "0xC26104", Offset = "0xC26104", VA = "0xC26104")]
		public <>c__DisplayClass39_1()
		{
		}

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0xC27250", Offset = "0xC27250", VA = "0xC27250")]
		internal void <ClearRoadTile>b__0(int i, int j)
		{
		}

		[Token(Token = "0x6001500")]
		[Address(RVA = "0xC27294", Offset = "0xC27294", VA = "0xC27294")]
		internal void <ClearRoadTile>b__1(int i, int j)
		{
		}
	}

	[Token(Token = "0x20002D3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5380", Offset = "0x6F5380")]
	private sealed class <>c__DisplayClass39_2
	{
		[Token(Token = "0x4001373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Road newRoad;

		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass39_1 CS$<>8__locals2;

		[Token(Token = "0x6001501")]
		[Address(RVA = "0xC2610C", Offset = "0xC2610C", VA = "0xC2610C")]
		public <>c__DisplayClass39_2()
		{
		}

		[Token(Token = "0x6001502")]
		[Address(RVA = "0xC272A4", Offset = "0xC272A4", VA = "0xC272A4")]
		internal void <ClearRoadTile>b__2(int i, int j)
		{
		}

		[Token(Token = "0x6001503")]
		[Address(RVA = "0xC2732C", Offset = "0xC2732C", VA = "0xC2732C")]
		internal void <ClearRoadTile>b__3(int i, int j)
		{
		}
	}

	[Token(Token = "0x20002D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5390", Offset = "0x6F5390")]
	private sealed class <StressTestRoutine>d__48 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RoadManager <>4__this;

		[Token(Token = "0x17000371")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001507")]
			[Address(RVA = "0xC2788C", Offset = "0xC2788C", VA = "0xC2788C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000372")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001509")]
			[Address(RVA = "0xC278F4", Offset = "0xC278F4", VA = "0xC278F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001504")]
		[Address(RVA = "0xC26DA8", Offset = "0xC26DA8", VA = "0xC26DA8")]
		[DebuggerHidden]
		public <StressTestRoutine>d__48(int <>1__state)
		{
		}

		[Token(Token = "0x6001505")]
		[Address(RVA = "0xC273B4", Offset = "0xC273B4", VA = "0xC273B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001506")]
		[Address(RVA = "0xC273B8", Offset = "0xC273B8", VA = "0xC273B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001508")]
		[Address(RVA = "0xC27894", Offset = "0xC27894", VA = "0xC27894", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Road> roads;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private short[] roadMap;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool[] lockMap;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool[] blockedMap;

	[Token(Token = "0x170000FA")]
	public static RoadManager current
	{
		[Token(Token = "0x60003B9")]
		[Address(RVA = "0xC20B00", Offset = "0xC20B00", VA = "0xC20B00")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000FB")]
	public override Type saveModuleDataType
	{
		[Token(Token = "0x60003DC")]
		[Address(RVA = "0xC263C0", Offset = "0xC263C0", VA = "0xC263C0", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0xC20BD8", Offset = "0xC20BD8", VA = "0xC20BD8", Slot = "8")]
	public override void Init()
	{
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0xC20D60", Offset = "0xC20D60", VA = "0xC20D60")]
	public void PlaceLandscapeRoadTile(LandscapeRoadTile lrt)
	{
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0xC20F20", Offset = "0xC20F20", VA = "0xC20F20")]
	public bool HasBuiltAnyRoadsYet()
	{
		return default(bool);
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0xC175F8", Offset = "0xC175F8", VA = "0xC175F8")]
	public bool IsLocked(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0xC20DD4", Offset = "0xC20DD4", VA = "0xC20DD4")]
	private void SetTileLock(int x, int y, bool locked)
	{
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0xC21098", Offset = "0xC21098", VA = "0xC21098")]
	public bool IsBlocked(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0xC21118", Offset = "0xC21118", VA = "0xC21118")]
	public void SetTileBlocked(int x, int y, bool blocked)
	{
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0xC21198", Offset = "0xC21198", VA = "0xC21198")]
	private bool ValidateRoadLength(int samplePosition)
	{
		return default(bool);
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0xC21604", Offset = "0xC21604", VA = "0xC21604")]
	private void DebugHighlightRoad(int n, Color color)
	{
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0xC217D8", Offset = "0xC217D8", VA = "0xC217D8")]
	private bool ValidateConnections(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0xC22148", Offset = "0xC22148", VA = "0xC22148")]
	public bool Validate()
	{
		return default(bool);
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0xC23C2C", Offset = "0xC23C2C", VA = "0xC23C2C")]
	private Road CreateRoad()
	{
		return null;
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0xC23DDC", Offset = "0xC23DDC", VA = "0xC23DDC")]
	private void DestroyRoad(Road road)
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0xC21038", Offset = "0xC21038", VA = "0xC21038")]
	private bool IsInRange(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0xC18570", Offset = "0xC18570", VA = "0xC18570")]
	public Road GetRoad(int x, int y)
	{
		return null;
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0xC175DC", Offset = "0xC175DC", VA = "0xC175DC")]
	public bool IsRoad(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0xC23BCC", Offset = "0xC23BCC", VA = "0xC23BCC")]
	public bool IsJunction(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0xC23F6C", Offset = "0xC23F6C", VA = "0xC23F6C")]
	private void PlaceCheckNeighbour(ref int numNeighbours, ref Road firstNeighbour, ref Road secondNeighbour, int x, int y)
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0xC23EDC", Offset = "0xC23EDC", VA = "0xC23EDC")]
	private int GetNumNeighbours(int x, int y)
	{
		return default(int);
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0xC23FD0", Offset = "0xC23FD0", VA = "0xC23FD0")]
	private bool GetFirstNeighbour(int x, int y, out Road neighbour, out int neighbourX, out int neighbourY)
	{
		return default(bool);
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0xC240AC", Offset = "0xC240AC", VA = "0xC240AC")]
	private bool GetNextNeighbour(int x, int y, int currentNeighbourX, int currentNeighbourY, out Road neighbour, out int neighbourX, out int neighbourY)
	{
		return default(bool);
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0xC242B0", Offset = "0xC242B0", VA = "0xC242B0")]
	private void VisitRoadTiles(int startX, int startY, TileVisitor visitFn)
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0xC23E0C", Offset = "0xC23E0C", VA = "0xC23E0C")]
	private void RemoveAllConnections(Road targetRoad)
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0xC24738", Offset = "0xC24738", VA = "0xC24738")]
	private void TransferAllConnections(Road source, Road target)
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0xC248F8", Offset = "0xC248F8", VA = "0xC248F8")]
	private void RecreateRoadConnections(Road targetRoad, int startX, int startY)
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0xC249D8", Offset = "0xC249D8", VA = "0xC249D8")]
	private Road SplitRoad(int splitX, int splitY)
	{
		return null;
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0xC2481C", Offset = "0xC2481C", VA = "0xC2481C")]
	private void AddConnection(Road a, Road b)
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0xC246B4", Offset = "0xC246B4", VA = "0xC246B4")]
	private void RemoveConnection(Road a, Road b)
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0xC20E54", Offset = "0xC20E54", VA = "0xC20E54")]
	public void PlaceRoadTile(int x, int y, bool shouldRecordUndo = true)
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0xC24D84", Offset = "0xC24D84", VA = "0xC24D84")]
	public bool PlaceRoadInternal(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0xC25564", Offset = "0xC25564", VA = "0xC25564")]
	private void FixUpJunction(int x, int y)
	{
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0xC25A20", Offset = "0xC25A20", VA = "0xC25A20")]
	public void ClearRoadTile(int x, int y, bool shouldRecordUndo = true)
	{
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0xC26114", Offset = "0xC26114", VA = "0xC26114")]
	public void OnPlaceBuilding(BuildingInstance building)
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0xC26250", Offset = "0xC26250", VA = "0xC26250")]
	public void OnDemolishBuilding(BuildingInstance building)
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0xC26430", Offset = "0xC26430", VA = "0xC26430", Slot = "5")]
	public override SaveSystem.ModuleData OnSave()
	{
		return null;
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0xC2655C", Offset = "0xC2655C", VA = "0xC2655C", Slot = "6")]
	public override void OnLoad(SaveSystem.SaveGame saveGame, SaveSystem.ModuleData data)
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0xC26BB0", Offset = "0xC26BB0", VA = "0xC26BB0", Slot = "10")]
	public override void OnResetProgress()
	{
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0xC26D38", Offset = "0xC26D38", VA = "0xC26D38")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FBC28", Offset = "0x6FBC28")]
	private IEnumerator StressTestRoutine()
	{
		return null;
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0xC26DD4", Offset = "0xC26DD4", VA = "0xC26DD4")]
	public RoadManager()
	{
	}
}
[Token(Token = "0x200004D")]
public class SeaTrafficManager : CityModule, IDebugPanelProvider
{
	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VehicleCollection shipCollection;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5FA8", Offset = "0x6F5FA8")]
	private List<ShipInfo> <ships>k__BackingField;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<ShipInfo> queuedShips;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ShipInfo[] spaceOccupant;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ShipInfo activeDockingShip;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int maxSpawnedShips;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float timeSinceLastSpawn;

	[Token(Token = "0x170000FC")]
	public Seaport seaport
	{
		[Token(Token = "0x60003E2")]
		[Address(RVA = "0xAC1904", Offset = "0xAC1904", VA = "0xAC1904")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000FD")]
	public List<ShipInfo> ships
	{
		[Token(Token = "0x60003E3")]
		[Address(RVA = "0xAC1930", Offset = "0xAC1930", VA = "0xAC1930")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FBC8C", Offset = "0x6FBC8C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003E4")]
		[Address(RVA = "0xAC1938", Offset = "0xAC1938", VA = "0xAC1938")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FBC9C", Offset = "0x6FBC9C")]
		private set
		{
		}
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0xAC1940", Offset = "0xAC1940", VA = "0xAC1940")]
	public void Awake()
	{
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0xAC19A8", Offset = "0xAC19A8", VA = "0xAC19A8", Slot = "9")]
	public override void PostInit()
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0xAC1A18", Offset = "0xAC1A18", VA = "0xAC1A18", Slot = "10")]
	public override void OnResetProgress()
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0xAC1C18", Offset = "0xAC1C18", VA = "0xAC1C18")]
	private void Update()
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0xAC2AC4", Offset = "0xAC2AC4", VA = "0xAC2AC4")]
	public void OnFinishedDockingAnimation(ShipInfo ship)
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0xAC2BA8", Offset = "0xAC2BA8", VA = "0xAC2BA8")]
	public bool RequestEnter(ShipInfo ship, out Seaport.Space space)
	{
		return default(bool);
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0xAC2DF4", Offset = "0xAC2DF4", VA = "0xAC2DF4")]
	public bool RequestExit(ShipInfo ship)
	{
		return default(bool);
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0xAC3074", Offset = "0xAC3074", VA = "0xAC3074")]
	public Vector3 GetBackOfQueuePosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0xAC3214", Offset = "0xAC3214", VA = "0xAC3214")]
	public void GetQueueTransform(ShipInfo shipInfo, out Vector3 position, out Quaternion rotation)
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0xAC3490", Offset = "0xAC3490", VA = "0xAC3490")]
	public int PickNodeFromTravelDestination(Vector3 travelDestination)
	{
		return default(int);
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0xAC1F24", Offset = "0xAC1F24", VA = "0xAC1F24")]
	private void SpawnShip()
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0xAC3658", Offset = "0xAC3658", VA = "0xAC3658", Slot = "11")]
	public void OnDebugPanel()
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0xAC3758", Offset = "0xAC3758", VA = "0xAC3758")]
	public SeaTrafficManager()
	{
	}
}
[Token(Token = "0x200004E")]
public class SimpleCitySaveData : MonoBehaviour
{
	[Token(Token = "0x20002D5")]
	public class SaveData
	{
		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RoadManager.RoadSaveData roadSaveData;

		[Token(Token = "0x4001379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CitizenManager.CitizenSaveData citizenSaveData;

		[Token(Token = "0x400137A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CarManager.CarSaveData carSaveData;

		[Token(Token = "0x400137B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BuildingManager.BuildingSaveData buildingSaveData;

		[Token(Token = "0x400137C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GroundMap.TerrainSaveData groundMapSaveData;

		[Token(Token = "0x600150A")]
		[Address(RVA = "0xA6EE48", Offset = "0xA6EE48", VA = "0xA6EE48")]
		public SaveData()
		{
		}
	}

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextAsset cityLayout;

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0xA6E800", Offset = "0xA6E800", VA = "0xA6E800")]
	public void LoadFromFile(string filePath)
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0xA6EB4C", Offset = "0xA6EB4C", VA = "0xA6EB4C")]
	public void SaveToFile(string filePath)
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0xA6EE50", Offset = "0xA6EE50", VA = "0xA6EE50")]
	public void LoadLayout()
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0xA6E93C", Offset = "0xA6E93C", VA = "0xA6E93C")]
	public void Apply(SaveData saveData)
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0xA6EFC0", Offset = "0xA6EFC0", VA = "0xA6EFC0")]
	public SimpleCitySaveData()
	{
	}
}
[Token(Token = "0x200004F")]
public class SoundScape : CityModule
{
	[Serializable]
	[Token(Token = "0x20002D6")]
	public class SoundGroup
	{
		[Token(Token = "0x400137D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioClip audioClip;

		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float maxVolume;

		[Token(Token = "0x400137F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public AudioSource source;

		[Token(Token = "0x4001380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9AC0", Offset = "0x6F9AC0")]
		private int <numActiveTiles>k__BackingField;

		[Token(Token = "0x4001381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int cumulativeTilesX;

		[Token(Token = "0x4001382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int cumulativeTilesY;

		[Token(Token = "0x17000373")]
		public int numActiveTiles
		{
			[Token(Token = "0x600150B")]
			[Address(RVA = "0xA7ACF4", Offset = "0xA7ACF4", VA = "0xA7ACF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x700260", Offset = "0x700260")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600150C")]
			[Address(RVA = "0xA7ACFC", Offset = "0xA7ACFC", VA = "0xA7ACFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x700270", Offset = "0x700270")]
			private set
			{
			}
		}

		[Token(Token = "0x600150D")]
		[Address(RVA = "0xA7A958", Offset = "0xA7A958", VA = "0xA7A958")]
		public void ClearActiveTiles()
		{
		}

		[Token(Token = "0x600150E")]
		[Address(RVA = "0xA7A964", Offset = "0xA7A964", VA = "0xA7A964")]
		public void AddActiveTile(int x, int y)
		{
		}

		[Token(Token = "0x600150F")]
		[Address(RVA = "0xA7A984", Offset = "0xA7A984", VA = "0xA7A984")]
		public void ConfigureAudioSource(float inMaxVolume)
		{
		}

		[Token(Token = "0x6001510")]
		[Address(RVA = "0xA7AD04", Offset = "0xA7AD04", VA = "0xA7AD04")]
		public SoundGroup()
		{
		}
	}

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float soundScapeVolume;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject audioSourcePrefab;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SoundGroup ocean;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SoundGroup forest;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SoundGroup jungle;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SoundGroup shoreline;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SoundGroup wind;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public SoundGroup traffic;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public SoundGroup residential;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public SoundGroup commercial;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public SoundGroup industrial;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public SoundGroup construction;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public SoundGroup windTurbine;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public SoundGroup fire;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public SoundGroup sandStorm;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<SoundGroup> allSoundGroups;

	[Token(Token = "0x400022E")]
	private const int reach = 5;

	[Token(Token = "0x170000FE")]
	private Player player
	{
		[Token(Token = "0x60003F7")]
		[Address(RVA = "0xA79D58", Offset = "0xA79D58", VA = "0xA79D58")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0xA79DA8", Offset = "0xA79DA8", VA = "0xA79DA8")]
	private void Start()
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0xA79DAC", Offset = "0xA79DAC", VA = "0xA79DAC")]
	private void GenerateSoundSources()
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0xA7A134", Offset = "0xA7A134", VA = "0xA7A134")]
	private void Update()
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0xA7AC7C", Offset = "0xA7AC7C", VA = "0xA7AC7C")]
	public SoundScape()
	{
	}
}
[Token(Token = "0x2000050")]
public class UndoSystem : CityModule
{
	[Token(Token = "0x20002D7")]
	public struct RoadRecord
	{
		[Token(Token = "0x4001383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int x;

		[Token(Token = "0x4001384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int y;

		[Token(Token = "0x6001511")]
		[Address(RVA = "0x77B8A4", Offset = "0x77B8A4", VA = "0x77B8A4")]
		public RoadRecord(int inX, int inY)
		{
		}
	}

	[Token(Token = "0x20002D8")]
	public struct LandscapeFeatureRecord
	{
		[Token(Token = "0x4001385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int x;

		[Token(Token = "0x4001386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int y;

		[Token(Token = "0x6001512")]
		[Address(RVA = "0x77B814", Offset = "0x77B814", VA = "0x77B814")]
		public LandscapeFeatureRecord(int inX, int inY)
		{
		}
	}

	[Token(Token = "0x20002D9")]
	public struct PlantBoxRecord
	{
		[Token(Token = "0x4001387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int x;

		[Token(Token = "0x4001388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int y;

		[Token(Token = "0x4001389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int index;

		[Token(Token = "0x6001513")]
		[Address(RVA = "0x77B81C", Offset = "0x77B81C", VA = "0x77B81C")]
		public PlantBoxRecord(int inX, int inY, int inIndex)
		{
		}
	}

	[Token(Token = "0x20002DA")]
	public struct RegionUnlockRecord
	{
		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int regionIndex;

		[Token(Token = "0x6001514")]
		[Address(RVA = "0x77B89C", Offset = "0x77B89C", VA = "0x77B89C")]
		public RegionUnlockRecord(int inRegionIndex)
		{
		}
	}

	[Token(Token = "0x20002DB")]
	public struct PropRecord
	{
		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public PropInfo prop;

		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector3 position;

		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Quaternion rotation;

		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 scale;

		[Token(Token = "0x17000374")]
		public int x
		{
			[Token(Token = "0x6001516")]
			[Address(RVA = "0x77B88C", Offset = "0x77B88C", VA = "0x77B88C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000375")]
		public int y
		{
			[Token(Token = "0x6001517")]
			[Address(RVA = "0x77B894", Offset = "0x77B894", VA = "0x77B894")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001515")]
		[Address(RVA = "0x77B864", Offset = "0x77B864", VA = "0x77B864")]
		public PropRecord(PropInfo inProp, Vector3 inPosition, Quaternion inRotation, Vector3 inScale)
		{
		}
	}

	[Token(Token = "0x20002DC")]
	public struct BuildingRecord
	{
		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BuildingInfo building;

		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public BuildingInfo buildingInfoToConstruct;

		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int x;

		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int y;

		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int rot;

		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public double buildTime;

		[Token(Token = "0x6001518")]
		[Address(RVA = "0x77B80C", Offset = "0x77B80C", VA = "0x77B80C")]
		public BuildingRecord(BuildingInstance instance)
		{
		}
	}

	[Token(Token = "0x20002DD")]
	public struct ZoningRecord
	{
		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ZoneManager.ZoneType oldZoneType;

		[Token(Token = "0x4001396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public ZoneManager.ZoneType newZoneType;

		[Token(Token = "0x4001397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int x;

		[Token(Token = "0x4001398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int y;

		[Token(Token = "0x6001519")]
		[Address(RVA = "0x77B8AC", Offset = "0x77B8AC", VA = "0x77B8AC")]
		public ZoningRecord(int inX, int inY, ZoneManager.ZoneType inOldZoneType, ZoneManager.ZoneType inNewZoneType)
		{
		}
	}

	[Token(Token = "0x20002DE")]
	public class UndoRecord
	{
		[Token(Token = "0x4001399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<RoadRecord> addedRoads;

		[Token(Token = "0x400139A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<RoadRecord> removedRoads;

		[Token(Token = "0x400139B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<BuildingRecord> addedBuildings;

		[Token(Token = "0x400139C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<BuildingRecord> removedBuildings;

		[Token(Token = "0x400139D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<PlantBoxRecord> addedPlantBoxes;

		[Token(Token = "0x400139E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<PlantBoxRecord> removedPlantBoxes;

		[Token(Token = "0x400139F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<ZoningRecord> zonedTiles;

		[Token(Token = "0x40013A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<PropRecord> propsAdded;

		[Token(Token = "0x40013A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<PropRecord> propsRemoved;

		[Token(Token = "0x40013A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<LandscapeFeatureRecord> landscapeFeaturesDemolished;

		[Token(Token = "0x40013A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<BridgeManager.Bridge> bridgesAdded;

		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<BridgeManager.Bridge> bridgesRemoved;

		[Token(Token = "0x40013A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<RegionUnlockRecord> regionsUnlocked;

		[Token(Token = "0x40013A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int moneyAmountAtBegin;

		[Token(Token = "0x40013A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public int moneyDelta;

		[Token(Token = "0x40013A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public double undoRecordTime;

		[Token(Token = "0x17000376")]
		public bool hasChanges
		{
			[Token(Token = "0x600151A")]
			[Address(RVA = "0xCB4D34", Offset = "0xCB4D34", VA = "0xCB4D34")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600151B")]
		[Address(RVA = "0xCB4F08", Offset = "0xCB4F08", VA = "0xCB4F08")]
		public void Clear()
		{
		}

		[Token(Token = "0x600151C")]
		private void SwapRecords<T>(ref List<T> first, ref List<T> second)
		{
		}

		[Token(Token = "0x600151D")]
		[Address(RVA = "0xCB6DD0", Offset = "0xCB6DD0", VA = "0xCB6DD0")]
		public void Reverse()
		{
		}

		[Token(Token = "0x600151E")]
		[Address(RVA = "0xCB6BC0", Offset = "0xCB6BC0", VA = "0xCB6BC0")]
		public UndoRecord()
		{
		}
	}

	[Token(Token = "0x400022F")]
	private const bool redoFeatureEnabled = false;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private UndoRecord currentRecord;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private UndoRecord lastRecord;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int undoAvailabilityDuration;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5FB8", Offset = "0x6F5FB8")]
	private bool <isUndoPerformingRedo>k__BackingField;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	private bool isRecordingUndo;

	[Token(Token = "0x170000FF")]
	public bool isUndoAvailable
	{
		[Token(Token = "0x60003FC")]
		[Address(RVA = "0xCB4CD0", Offset = "0xCB4CD0", VA = "0xCB4CD0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000100")]
	public bool isUndoPerformingRedo
	{
		[Token(Token = "0x60003FD")]
		[Address(RVA = "0xCB4E84", Offset = "0xCB4E84", VA = "0xCB4E84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FBCAC", Offset = "0x6FBCAC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003FE")]
		[Address(RVA = "0xCB4E8C", Offset = "0xCB4E8C", VA = "0xCB4E8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FBCBC", Offset = "0x6FBCBC")]
		private set
		{
		}
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0xCB4E98", Offset = "0xCB4E98", VA = "0xCB4E98")]
	private void SwapCurrentAndLastRecord()
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0xCB4EA8", Offset = "0xCB4EA8", VA = "0xCB4EA8")]
	public void BeginRecord()
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0xCB5060", Offset = "0xCB5060", VA = "0xCB5060")]
	public void EndRecord()
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0xCB50FC", Offset = "0xCB50FC", VA = "0xCB50FC")]
	public void OnRegionUnlocked(int regionIndex)
	{
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0xCB5184", Offset = "0xCB5184", VA = "0xCB5184")]
	public void OnPlaceBridge(BridgeManager.Bridge bridge)
	{
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0xCB5230", Offset = "0xCB5230", VA = "0xCB5230")]
	public void OnRemoveBridge(BridgeManager.Bridge bridge)
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0xCB52DC", Offset = "0xCB52DC", VA = "0xCB52DC")]
	public void OnPlaceRoadTile(int x, int y)
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0xCB5374", Offset = "0xCB5374", VA = "0xCB5374")]
	public void OnRemoveRoadTile(int x, int y)
	{
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0xCB5404", Offset = "0xCB5404", VA = "0xCB5404")]
	public void OnPlaceBuilding(BuildingInstance building)
	{
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0xCB54F0", Offset = "0xCB54F0", VA = "0xCB54F0")]
	public void OnDemolishBuilding(BuildingInstance building)
	{
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0xCB5598", Offset = "0xCB5598", VA = "0xCB5598")]
	public void OnZoneTile(int x, int y, ZoneManager.ZoneType oldZoneType, ZoneManager.ZoneType newZoneType)
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0xCB5658", Offset = "0xCB5658", VA = "0xCB5658")]
	public void OnDemolishLandscapeFeature(int x, int y)
	{
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0xCB56F0", Offset = "0xCB56F0", VA = "0xCB56F0")]
	public void OnPropRemoved(PropInfo prop, Vector3 position, Quaternion rotation, Vector3 scale)
	{
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0xCB57F8", Offset = "0xCB57F8", VA = "0xCB57F8")]
	public void OnPropAdded(PropInfo prop, Vector3 position, Quaternion rotation, Vector3 scale)
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0xCB58D8", Offset = "0xCB58D8", VA = "0xCB58D8")]
	public void OnPlacePlantBox(int x, int y, int index)
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0xCB5988", Offset = "0xCB5988", VA = "0xCB5988")]
	public void OnRemovePlantBox(int x, int y, int index)
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0xCB5A2C", Offset = "0xCB5A2C", VA = "0xCB5A2C")]
	public void Undo()
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0xCB6AD0", Offset = "0xCB6AD0", VA = "0xCB6AD0", Slot = "7")]
	public override void OnPostLoad()
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0xCB6B04", Offset = "0xCB6B04", VA = "0xCB6B04", Slot = "10")]
	public override void OnResetProgress()
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0xCB6B38", Offset = "0xCB6B38", VA = "0xCB6B38")]
	public UndoSystem()
	{
	}
}
[Token(Token = "0x2000051")]
public class UtilityManager : CityModule
{
	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PowerUtilityState power;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public WaterUtilityState water;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CellNetworkMap network;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5FC8", Offset = "0x6F5FC8")]
	private BuildingInstance <previewBuilding>k__BackingField;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5FD8", Offset = "0x6F5FD8")]
	private List<BuildingInstance> <previewBuildingsToDemolish>k__BackingField;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int networkUnlockLevel;

	[Token(Token = "0x17000101")]
	public BuildingInstance previewBuilding
	{
		[Token(Token = "0x6000413")]
		[Address(RVA = "0xCBEAF0", Offset = "0xCBEAF0", VA = "0xCBEAF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FBCCC", Offset = "0x6FBCCC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000414")]
		[Address(RVA = "0xCBEAF8", Offset = "0xCBEAF8", VA = "0xCBEAF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FBCDC", Offset = "0x6FBCDC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000102")]
	public List<BuildingInstance> previewBuildingsToDemolish
	{
		[Token(Token = "0x6000415")]
		[Address(RVA = "0xCBEB00", Offset = "0xCBEB00", VA = "0xCBEB00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FBCEC", Offset = "0x6FBCEC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000416")]
		[Address(RVA = "0xCBEB08", Offset = "0xCBEB08", VA = "0xCBEB08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FBCFC", Offset = "0x6FBCFC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000103")]
	public bool isNetworkUnlocked
	{
		[Token(Token = "0x6000417")]
		[Address(RVA = "0xCBEB10", Offset = "0xCBEB10", VA = "0xCBEB10")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0xCBEBD0", Offset = "0xCBEBD0", VA = "0xCBEBD0", Slot = "8")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0xCBED04", Offset = "0xCBED04", VA = "0xCBED04", Slot = "9")]
	public override void PostInit()
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0xCBED70", Offset = "0xCBED70", VA = "0xCBED70", Slot = "10")]
	public override void OnResetProgress()
	{
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0xCBEDC8", Offset = "0xCBEDC8", VA = "0xCBEDC8")]
	public void EnablePreviewBuildingsToDemolish(List<BuildingInstance> buildingsToDemolish)
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0xCBEDE0", Offset = "0xCBEDE0", VA = "0xCBEDE0")]
	public void EnablePreviewBuildingPlacement(BuildingInfo info, int x, int y, int rot, List<BuildingInstance> buildingsToDemolish)
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0xCBF1DC", Offset = "0xCBF1DC", VA = "0xCBF1DC")]
	public void DisablePreviewBuildingPlacement()
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0xCBF43C", Offset = "0xCBF43C", VA = "0xCBF43C")]
	private void RestartAllSimulations()
	{
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0xCBF4D8", Offset = "0xCBF4D8", VA = "0xCBF4D8")]
	public void OnPlaceBuilding(BuildingInstance building, bool fromSaveGame)
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0xCBF560", Offset = "0xCBF560", VA = "0xCBF560")]
	public void OnDemolishBuilding(BuildingInstance building, bool fromSaveGame)
	{
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0xCBF5F4", Offset = "0xCBF5F4", VA = "0xCBF5F4")]
	public void OnPlaceRoadTile(int x, int y)
	{
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0xCBF6BC", Offset = "0xCBF6BC", VA = "0xCBF6BC")]
	public void OnRemoveRoadTile(int x, int y)
	{
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0xCBF780", Offset = "0xCBF780", VA = "0xCBF780")]
	public bool HasPower(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0xCBF7F4", Offset = "0xCBF7F4", VA = "0xCBF7F4")]
	public bool HasWater(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0xCBF80C", Offset = "0xCBF80C", VA = "0xCBF80C")]
	public bool HasNetwork(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0xCBF828", Offset = "0xCBF828", VA = "0xCBF828")]
	public bool HasNetwork(int x, int y, int width, int height)
	{
		return default(bool);
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0xCBF8CC", Offset = "0xCBF8CC", VA = "0xCBF8CC")]
	public bool HasNetworkInPreview(int x, int y, int width, int height)
	{
		return default(bool);
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0xCBF970", Offset = "0xCBF970", VA = "0xCBF970")]
	public void Update()
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0xCBFB04", Offset = "0xCBFB04", VA = "0xCBFB04", Slot = "7")]
	public override void OnPostLoad()
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0xCBFC7C", Offset = "0xCBFC7C", VA = "0xCBFC7C")]
	public UtilityManager()
	{
	}
}
[Token(Token = "0x2000052")]
public abstract class UtilityMapBase : IVisualiserTextureProvider
{
	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5FE8", Offset = "0x6F5FE8")]
	private Texture2D <visualiseTexture>k__BackingField;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Color32[] textureData;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected bool textureDirty;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected UtilityManager utilityManager;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator simulationAsyncState;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5FF8", Offset = "0x6F5FF8")]
	private bool <isProcessingSimulation>k__BackingField;

	[Token(Token = "0x17000104")]
	public abstract string name
	{
		[Token(Token = "0x600042B")]
		get;
	}

	[Token(Token = "0x17000105")]
	protected int mapWidth
	{
		[Token(Token = "0x600042C")]
		[Address(RVA = "0xCBFC84", Offset = "0xCBFC84", VA = "0xCBFC84")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000106")]
	protected int mapHeight
	{
		[Token(Token = "0x600042D")]
		[Address(RVA = "0xCBFCCC", Offset = "0xCBFCCC", VA = "0xCBFCCC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000107")]
	public Texture2D visualiseTexture
	{
		[Token(Token = "0x600042E")]
		[Address(RVA = "0xCBFCF8", Offset = "0xCBFCF8", VA = "0xCBFCF8", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FBD0C", Offset = "0x6FBD0C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600042F")]
		[Address(RVA = "0xCBFD00", Offset = "0xCBFD00", VA = "0xCBFD00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FBD1C", Offset = "0x6FBD1C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000108")]
	public virtual Texture2D secondaryTexture
	{
		[Token(Token = "0x6000430")]
		[Address(RVA = "0xCBFD08", Offset = "0xCBFD08", VA = "0xCBFD08", Slot = "9")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000109")]
	public City city
	{
		[Token(Token = "0x6000431")]
		[Address(RVA = "0xCBFCB0", Offset = "0xCBFCB0", VA = "0xCBFCB0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700010A")]
	public BuildingInstance previewBuilding
	{
		[Token(Token = "0x6000432")]
		[Address(RVA = "0xCBFD10", Offset = "0xCBFD10", VA = "0xCBFD10")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700010B")]
	public List<BuildingInstance> previewBuildingsToDemolish
	{
		[Token(Token = "0x6000433")]
		[Address(RVA = "0xCBFD2C", Offset = "0xCBFD2C", VA = "0xCBFD2C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700010C")]
	public bool isProcessingSimulation
	{
		[Token(Token = "0x600043C")]
		[Address(RVA = "0xCC0148", Offset = "0xCC0148", VA = "0xCC0148")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FBD2C", Offset = "0x6FBD2C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600043D")]
		[Address(RVA = "0xCC0150", Offset = "0xCC0150", VA = "0xCC0150")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FBD3C", Offset = "0x6FBD3C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0xCBFD48", Offset = "0xCBFD48", VA = "0xCBFD48")]
	public UtilityMapBase(UtilityManager inUtilityManager)
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0xCBFEC8", Offset = "0xCBFEC8", VA = "0xCBFEC8", Slot = "10")]
	public virtual void Reset()
	{
	}

	[Token(Token = "0x6000436")]
	public abstract void RefreshVisualiseTexture();

	[Token(Token = "0x6000437")]
	[Address(RVA = "0xCBFF84", Offset = "0xCBFF84", VA = "0xCBFF84", Slot = "12")]
	public virtual void OnPlaceBuilding(BuildingInstance building, bool fromSaveGame)
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0xCC006C", Offset = "0xCC006C", VA = "0xCC006C", Slot = "13")]
	public virtual void OnDemolishBuilding(BuildingInstance building, bool fromSaveGame)
	{
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0xCBF65C", Offset = "0xCBF65C", VA = "0xCBF65C")]
	public void OnPlaceRoadTile(int x, int y)
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0xCBF724", Offset = "0xCBF724", VA = "0xCBF724")]
	public void OnRemoveRoadTile(int x, int y)
	{
	}

	[Token(Token = "0x600043B")]
	protected abstract IEnumerator SimulateAsync();

	[Token(Token = "0x600043E")]
	[Address(RVA = "0xCBFA40", Offset = "0xCBFA40", VA = "0xCBFA40")]
	public void SimulateStep()
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0xCBF1A4", Offset = "0xCBF1A4", VA = "0xCBF1A4")]
	public void RestartSimulation()
	{
	}
}
[Token(Token = "0x2000053")]
public class CellNetworkMap : UtilityMapBase
{
	[Token(Token = "0x20002DF")]
	public class Tower
	{
		[Token(Token = "0x40013A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int x;

		[Token(Token = "0x40013AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int y;

		[Token(Token = "0x600151F")]
		[Address(RVA = "0xC040B4", Offset = "0xC040B4", VA = "0xC040B4")]
		public Tower(BuildingInstance building)
		{
		}
	}

	[Token(Token = "0x20002E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F53A0", Offset = "0x6F53A0")]
	private sealed class <SimulateAsync>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CellNetworkMap <>4__this;

		[Token(Token = "0x17000377")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001523")]
			[Address(RVA = "0xC04EBC", Offset = "0xC04EBC", VA = "0xC04EBC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000378")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001525")]
			[Address(RVA = "0xC04F24", Offset = "0xC04F24", VA = "0xC04F24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001520")]
		[Address(RVA = "0xC04CF4", Offset = "0xC04CF4", VA = "0xC04CF4")]
		[DebuggerHidden]
		public <SimulateAsync>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x6001521")]
		[Address(RVA = "0xC04D20", Offset = "0xC04D20", VA = "0xC04D20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001522")]
		[Address(RVA = "0xC04D24", Offset = "0xC04D24", VA = "0xC04D24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001524")]
		[Address(RVA = "0xC04EC4", Offset = "0xC04EC4", VA = "0xC04EC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ulong[] connectivityMap;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Tower[] towerSlots;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ulong activeTowerMask;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ulong unpoweredTowerMask;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private ulong activeTowerMaskPreview;

	[Token(Token = "0x4000246")]
	private const int maxTowers = 64;

	[Token(Token = "0x4000247")]
	private const int previewSlot = 63;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6008", Offset = "0x6F6008")]
	private int <numTowers>k__BackingField;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int previewX;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int previewY;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int previewRadius;

	[Token(Token = "0x1700010D")]
	public int numTowers
	{
		[Token(Token = "0x6000440")]
		[Address(RVA = "0xC03D5C", Offset = "0xC03D5C", VA = "0xC03D5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FBD4C", Offset = "0x6FBD4C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000441")]
		[Address(RVA = "0xC03D64", Offset = "0xC03D64", VA = "0xC03D64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FBD5C", Offset = "0x6FBD5C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700010E")]
	public override string name
	{
		[Token(Token = "0x6000442")]
		[Address(RVA = "0xC03D6C", Offset = "0xC03D6C", VA = "0xC03D6C", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0xC03DB4", Offset = "0xC03DB4", VA = "0xC03DB4")]
	public CellNetworkMap(UtilityManager inUtilityManager)
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0xC03E60", Offset = "0xC03E60", VA = "0xC03E60", Slot = "10")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0xC03F2C", Offset = "0xC03F2C", VA = "0xC03F2C", Slot = "12")]
	public override void OnPlaceBuilding(BuildingInstance building, bool fromSaveGame)
	{
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0xC042E4", Offset = "0xC042E4", VA = "0xC042E4")]
	public bool HasNetworkConnectivity(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0xC04354", Offset = "0xC04354", VA = "0xC04354")]
	public bool HasNetworkConnectivityInPreview(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0xC043C8", Offset = "0xC043C8", VA = "0xC043C8", Slot = "11")]
	public override void RefreshVisualiseTexture()
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0xC040F4", Offset = "0xC040F4", VA = "0xC040F4")]
	private void CalculateConnectivity(int x, int y, int radius, int slotIndex)
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0xC04838", Offset = "0xC04838", VA = "0xC04838")]
	private void RemoveConnectivity(int x, int y, int radius, int slotIndex)
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0xC04594", Offset = "0xC04594", VA = "0xC04594")]
	private void Trace(int x0, int y0, int x1, int y1, ulong mask)
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0xC049A4", Offset = "0xC049A4", VA = "0xC049A4", Slot = "13")]
	public override void OnDemolishBuilding(BuildingInstance building, bool fromSaveGame)
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0xC04A7C", Offset = "0xC04A7C", VA = "0xC04A7C")]
	private void EnablePreviewBuildingPlacement()
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0xC04C4C", Offset = "0xC04C4C", VA = "0xC04C4C")]
	private void DisablePreviewBuildingPlacement()
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0xC04C84", Offset = "0xC04C84", VA = "0xC04C84", Slot = "14")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FBD6C", Offset = "0x6FBD6C")]
	protected override IEnumerator SimulateAsync()
	{
		return null;
	}
}
[Token(Token = "0x2000054")]
public abstract class UtilityState : UtilityMapBase
{
	[Token(Token = "0x20002E1")]
	private struct Location
	{
		[Token(Token = "0x40013AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int x;

		[Token(Token = "0x40013AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int y;

		[Token(Token = "0x6001526")]
		[Address(RVA = "0x77B8BC", Offset = "0x77B8BC", VA = "0x77B8BC")]
		public Location(int _x, int _y)
		{
		}
	}

	[Token(Token = "0x20002E2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F53B0", Offset = "0x6F53B0")]
	private sealed class <SimulateAsync>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UtilityState <>4__this;

		[Token(Token = "0x40013B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IEnumerator <processSourcesTask>5__2;

		[Token(Token = "0x17000379")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600152A")]
			[Address(RVA = "0xCC1550", Offset = "0xCC1550", VA = "0xCC1550", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700037A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600152C")]
			[Address(RVA = "0xCC15B8", Offset = "0xCC15B8", VA = "0xCC15B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001527")]
		[Address(RVA = "0xCC0490", Offset = "0xCC0490", VA = "0xCC0490")]
		[DebuggerHidden]
		public <SimulateAsync>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6001528")]
		[Address(RVA = "0xCC116C", Offset = "0xCC116C", VA = "0xCC116C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001529")]
		[Address(RVA = "0xCC1170", Offset = "0xCC1170", VA = "0xCC1170", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600152B")]
		[Address(RVA = "0xCC1558", Offset = "0xCC1558", VA = "0xCC1558", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002E3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F53C0", Offset = "0x6F53C0")]
	private sealed class <ProcessSourcesAsync>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool[] supplyMap;

		[Token(Token = "0x40013B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UtilityState <>4__this;

		[Token(Token = "0x40013B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool isPreview;

		[Token(Token = "0x40013B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <n>5__2;

		[Token(Token = "0x1700037B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001530")]
			[Address(RVA = "0xCC10FC", Offset = "0xCC10FC", VA = "0xCC10FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700037C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001532")]
			[Address(RVA = "0xCC1164", Offset = "0xCC1164", VA = "0xCC1164", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600152D")]
		[Address(RVA = "0xCC0544", Offset = "0xCC0544", VA = "0xCC0544")]
		[DebuggerHidden]
		public <ProcessSourcesAsync>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x600152E")]
		[Address(RVA = "0xCC0E78", Offset = "0xCC0E78", VA = "0xCC0E78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600152F")]
		[Address(RVA = "0xCC0E7C", Offset = "0xCC0E7C", VA = "0xCC0E7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001531")]
		[Address(RVA = "0xCC1104", Offset = "0xCC1104", VA = "0xCC1104", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected List<BuildingInstance> sources;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Queue<Location> queue;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool[] visited;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool[] supplied;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool[] previewSupplied;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool[] workingBuffer;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int totalProduction;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int totalConsumption;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int totalRequired;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int workingTotalProduction;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int workingTotalConsumption;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int workingTotalRequired;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public InfluenceMap efficiencyMap;

	[Token(Token = "0x1700010F")]
	public int numSources
	{
		[Token(Token = "0x6000451")]
		[Address(RVA = "0xCC015C", Offset = "0xCC015C", VA = "0xCC015C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000110")]
	public override string name
	{
		[Token(Token = "0x6000452")]
		[Address(RVA = "0xCC01AC", Offset = "0xCC01AC", VA = "0xCC01AC", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000450")]
	public abstract int ResourceUsage(BuildingInstance building);

	[Token(Token = "0x6000453")]
	[Address(RVA = "0xCC01F4", Offset = "0xCC01F4", VA = "0xCC01F4")]
	public UtilityState(UtilityManager inUtilityManager)
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0xCC0358", Offset = "0xCC0358", VA = "0xCC0358", Slot = "10")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0xCC0420", Offset = "0xCC0420", VA = "0xCC0420", Slot = "14")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FBDD0", Offset = "0x6FBDD0")]
	protected override IEnumerator SimulateAsync()
	{
		return null;
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0xCC04BC", Offset = "0xCC04BC", VA = "0xCC04BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FBE34", Offset = "0x6FBE34")]
	private IEnumerator ProcessSourcesAsync(bool[] supplyMap, bool isPreview = false)
	{
		return null;
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0xCC0570", Offset = "0xCC0570", VA = "0xCC0570")]
	private void ProcessSource(BuildingInstance src, bool[] supplyMap)
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0xCC09F8", Offset = "0xCC09F8", VA = "0xCC09F8")]
	private bool TrySupplyBuildings(bool[] supplyMap, int x, int y, ref int supply)
	{
		return default(bool);
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0xCC0828", Offset = "0xCC0828", VA = "0xCC0828")]
	private void FillBuildingInMap(BuildingInstance building, bool[] map)
	{
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0xCC0B24", Offset = "0xCC0B24", VA = "0xCC0B24")]
	public bool IsSuppliedInPreview(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0xCBF798", Offset = "0xCBF798", VA = "0xCBF798")]
	public bool IsSupplied(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0xCC0910", Offset = "0xCC0910", VA = "0xCC0910")]
	private void Enqueue(int x, int y)
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0xCC0B88", Offset = "0xCC0B88", VA = "0xCC0B88", Slot = "12")]
	public override void OnPlaceBuilding(BuildingInstance building, bool fromSaveGame)
	{
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0xCC0C2C", Offset = "0xCC0C2C", VA = "0xCC0C2C", Slot = "13")]
	public override void OnDemolishBuilding(BuildingInstance building, bool fromSaveGame)
	{
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0xCC0CA4", Offset = "0xCC0CA4", VA = "0xCC0CA4", Slot = "11")]
	public override void RefreshVisualiseTexture()
	{
	}
}
[Token(Token = "0x2000055")]
public class WaterUtilityState : UtilityState
{
	[Token(Token = "0x20002E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F53D0", Offset = "0x6F53D0")]
	private sealed class <>c__DisplayClass25_0
	{
		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WaterUtilityState <>4__this;

		[Token(Token = "0x40013BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BuildingInstance building;

		[Token(Token = "0x40013BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int centerX;

		[Token(Token = "0x40013BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int centerY;

		[Token(Token = "0x40013BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<BuildingInstance> buildingsToRecalculate;

		[Token(Token = "0x6001533")]
		[Address(RVA = "0xAA5494", Offset = "0xAA5494", VA = "0xAA5494")]
		public <>c__DisplayClass25_0()
		{
		}

		[Token(Token = "0x6001534")]
		[Address(RVA = "0xAA5E18", Offset = "0xAA5E18", VA = "0xAA5E18")]
		internal void <TapGround>b__0(int x, int y)
		{
		}
	}

	[Token(Token = "0x20002E5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F53E0", Offset = "0x6F53E0")]
	private sealed class <>c__DisplayClass27_0
	{
		[Token(Token = "0x40013BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int totalReach;

		[Token(Token = "0x40013C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WaterUtilityState <>4__this;

		[Token(Token = "0x40013C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BuildingInstance building;

		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int taps;

		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector2 center;

		[Token(Token = "0x6001535")]
		[Address(RVA = "0xAA57F4", Offset = "0xAA57F4", VA = "0xAA57F4")]
		public <>c__DisplayClass27_0()
		{
		}

		[Token(Token = "0x6001536")]
		[Address(RVA = "0xAA6004", Offset = "0xAA6004", VA = "0xAA6004")]
		internal void <RecalculateBuilding>b__0(int x, int y)
		{
		}
	}

	[Token(Token = "0x20002E6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F53F0", Offset = "0x6F53F0")]
	private sealed class <>c__DisplayClass30_0
	{
		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WaterUtilityState <>4__this;

		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BuildingInstance building;

		[Token(Token = "0x6001537")]
		[Address(RVA = "0xAA59A8", Offset = "0xAA59A8", VA = "0xAA59A8")]
		public <>c__DisplayClass30_0()
		{
		}

		[Token(Token = "0x6001538")]
		[Address(RVA = "0xAA629C", Offset = "0xAA629C", VA = "0xAA629C")]
		internal void <OnDemolishBuilding>b__0(int x, int y)
		{
		}
	}

	[Token(Token = "0x20002E7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5400", Offset = "0x6F5400")]
	private sealed class <SimulateAsync>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WaterUtilityState <>4__this;

		[Token(Token = "0x40013C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IEnumerator <baseSimulateProcess>5__2;

		[Token(Token = "0x1700037D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600153C")]
			[Address(RVA = "0xAA66D8", Offset = "0xAA66D8", VA = "0xAA66D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700037E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600153E")]
			[Address(RVA = "0xAA6740", Offset = "0xAA6740", VA = "0xAA6740", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001539")]
		[Address(RVA = "0xAA5C24", Offset = "0xAA5C24", VA = "0xAA5C24")]
		[DebuggerHidden]
		public <SimulateAsync>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0xAA63B4", Offset = "0xAA63B4", VA = "0xAA63B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600153B")]
		[Address(RVA = "0xAA63B8", Offset = "0xAA63B8", VA = "0xAA63B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600153D")]
		[Address(RVA = "0xAA66E0", Offset = "0xAA66E0", VA = "0xAA66E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private BuildingInstance[] tappedMap;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Dictionary<BuildingInstance, float> sourceEfficiencies;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Dictionary<BuildingInstance, int> treatmentPlantSupply;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6018", Offset = "0x6F6018")]
	private int <numUpgradedWaterSupplies>k__BackingField;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected Color32[] flowTextureData;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6028", Offset = "0x6F6028")]
	private Texture2D <flowTexture>k__BackingField;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Color32 noFlow;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private bool hasPreviewReplacement;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Color32[] previewReplacementData;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int previewReplacementX;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private int previewReplacementY;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int previewReplacementWidth;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private int previewReplacementHeight;

	[Token(Token = "0x17000111")]
	public int numUpgradedWaterSupplies
	{
		[Token(Token = "0x6000460")]
		[Address(RVA = "0xAA4BC0", Offset = "0xAA4BC0", VA = "0xAA4BC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FBE98", Offset = "0x6FBE98")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000461")]
		[Address(RVA = "0xAA4BC8", Offset = "0xAA4BC8", VA = "0xAA4BC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FBEA8", Offset = "0x6FBEA8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000112")]
	public Texture2D flowTexture
	{
		[Token(Token = "0x6000462")]
		[Address(RVA = "0xAA4BD0", Offset = "0xAA4BD0", VA = "0xAA4BD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FBEB8", Offset = "0x6FBEB8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000463")]
		[Address(RVA = "0xAA4BD8", Offset = "0xAA4BD8", VA = "0xAA4BD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FBEC8", Offset = "0x6FBEC8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000113")]
	public override Texture2D secondaryTexture
	{
		[Token(Token = "0x6000464")]
		[Address(RVA = "0xAA4BE0", Offset = "0xAA4BE0", VA = "0xAA4BE0", Slot = "9")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0xAA4BE8", Offset = "0xAA4BE8", VA = "0xAA4BE8")]
	public WaterUtilityState(UtilityManager inUtilityManager)
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0xAA4E58", Offset = "0xAA4E58", VA = "0xAA4E58", Slot = "10")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0xAA4F90", Offset = "0xAA4F90", VA = "0xAA4F90", Slot = "15")]
	public override int ResourceUsage(BuildingInstance building)
	{
		return default(int);
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0xAA5170", Offset = "0xAA5170", VA = "0xAA5170")]
	private void VisitRadius(BuildingInstance building, Action<int, int> visitFn)
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0xAA52F8", Offset = "0xAA52F8", VA = "0xAA52F8")]
	private void TapGround(BuildingInstance building)
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0xAA561C", Offset = "0xAA561C", VA = "0xAA561C", Slot = "12")]
	public override void OnPlaceBuilding(BuildingInstance building, bool fromSaveGame)
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0xAA549C", Offset = "0xAA549C", VA = "0xAA549C")]
	private void RecalculateBuilding(BuildingInstance building)
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0xAA4E18", Offset = "0xAA4E18", VA = "0xAA4E18")]
	private void ApplyFlowMap()
	{
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0xAA50D4", Offset = "0xAA50D4", VA = "0xAA50D4")]
	public float GetEfficiency(BuildingInstance building)
	{
		return default(float);
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0xAA57FC", Offset = "0xAA57FC", VA = "0xAA57FC", Slot = "13")]
	public override void OnDemolishBuilding(BuildingInstance building, bool fromSaveGame)
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0xAA59B0", Offset = "0xAA59B0", VA = "0xAA59B0")]
	private void CalculateWaterTreatmentPlantSupply(BuildingInstance building)
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0xAA5BB4", Offset = "0xAA5BB4", VA = "0xAA5BB4", Slot = "14")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FBED8", Offset = "0x6FBED8")]
	protected override IEnumerator SimulateAsync()
	{
		return null;
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0xAA5C50", Offset = "0xAA5C50", VA = "0xAA5C50")]
	private void SavePreviewPlacementData(BuildingInstance building)
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0xAA5708", Offset = "0xAA5708", VA = "0xAA5708")]
	private void RestorePreviewReplacementData()
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0xAA5E10", Offset = "0xAA5E10", VA = "0xAA5E10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FBF3C", Offset = "0x6FBF3C")]
	[DebuggerHidden]
	private IEnumerator <>n__0()
	{
		return null;
	}
}
[Token(Token = "0x2000056")]
public class PowerUtilityState : UtilityState
{
	[Token(Token = "0x6000474")]
	[Address(RVA = "0xC18B78", Offset = "0xC18B78", VA = "0xC18B78")]
	public PowerUtilityState(UtilityManager inUtilityManager)
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0xC18B80", Offset = "0xC18B80", VA = "0xC18B80", Slot = "15")]
	public override int ResourceUsage(BuildingInstance building)
	{
		return default(int);
	}
}
[Token(Token = "0x2000057")]
public class WorldMap : SingletonBehaviour<WorldMap>, IDebugPanelProvider
{
	[Token(Token = "0x20002E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5410", Offset = "0x6F5410")]
	private sealed class <LoadAsync>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WorldMap <>4__this;

		[Token(Token = "0x40013CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<WorldMapCity>.Enumerator <>7__wrap1;

		[Token(Token = "0x40013CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private WorldMapCity <city>5__3;

		[Token(Token = "0x40013CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private DateTime <loadStartTime>5__4;

		[Token(Token = "0x40013D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private IEnumerator <loadOperation>5__5;

		[Token(Token = "0x1700037F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001543")]
			[Address(RVA = "0xE03920", Offset = "0xE03920", VA = "0xE03920", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000380")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001545")]
			[Address(RVA = "0xE03988", Offset = "0xE03988", VA = "0xE03988", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600153F")]
		[Address(RVA = "0xE0323C", Offset = "0xE0323C", VA = "0xE0323C")]
		[DebuggerHidden]
		public <LoadAsync>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x6001540")]
		[Address(RVA = "0xE03268", Offset = "0xE03268", VA = "0xE03268", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001541")]
		[Address(RVA = "0xE032DC", Offset = "0xE032DC", VA = "0xE032DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001542")]
		[Address(RVA = "0xE03284", Offset = "0xE03284", VA = "0xE03284")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6001544")]
		[Address(RVA = "0xE03928", Offset = "0xE03928", VA = "0xE03928", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002E9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5420", Offset = "0x6F5420")]
	private sealed class <ShowOpeningAnimationRoutine>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WorldMap <>4__this;

		[Token(Token = "0x17000381")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001549")]
			[Address(RVA = "0xE03BA8", Offset = "0xE03BA8", VA = "0xE03BA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000382")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600154B")]
			[Address(RVA = "0xE03C10", Offset = "0xE03C10", VA = "0xE03C10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001546")]
		[Address(RVA = "0xE03990", Offset = "0xE03990", VA = "0xE03990")]
		[DebuggerHidden]
		public <ShowOpeningAnimationRoutine>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x6001547")]
		[Address(RVA = "0xE039BC", Offset = "0xE039BC", VA = "0xE039BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001548")]
		[Address(RVA = "0xE039C0", Offset = "0xE039C0", VA = "0xE039C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600154A")]
		[Address(RVA = "0xE03BB0", Offset = "0xE03BB0", VA = "0xE03BB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20002EA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5430", Offset = "0x6F5430")]
	private sealed class <>c
	{
		[Token(Token = "0x40013D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40013D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<WorldMapCity> <>9__38_0;

		[Token(Token = "0x600154D")]
		[Address(RVA = "0xE02CF4", Offset = "0xE02CF4", VA = "0xE02CF4")]
		public <>c()
		{
		}

		[Token(Token = "0x600154E")]
		[Address(RVA = "0xE02CFC", Offset = "0xE02CFC", VA = "0xE02CFC")]
		internal int <CompleteCity>b__38_0(WorldMapCity x, WorldMapCity y)
		{
			return default(int);
		}
	}

	[Token(Token = "0x20002EB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5440", Offset = "0x6F5440")]
	private sealed class <CompleteTutorialCityRoutine>d__43 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WorldMap <>4__this;

		[Token(Token = "0x40013D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <t>5__2;

		[Token(Token = "0x17000383")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001552")]
			[Address(RVA = "0xE031CC", Offset = "0xE031CC", VA = "0xE031CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000384")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001554")]
			[Address(RVA = "0xE03234", Offset = "0xE03234", VA = "0xE03234", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600154F")]
		[Address(RVA = "0xE02D3C", Offset = "0xE02D3C", VA = "0xE02D3C")]
		[DebuggerHidden]
		public <CompleteTutorialCityRoutine>d__43(int <>1__state)
		{
		}

		[Token(Token = "0x6001550")]
		[Address(RVA = "0xE02D68", Offset = "0xE02D68", VA = "0xE02D68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001551")]
		[Address(RVA = "0xE02D6C", Offset = "0xE02D6C", VA = "0xE02D6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0xE031D4", Offset = "0xE031D4", VA = "0xE031D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<WorldMapCity> cities;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject cityPrefab;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform startingIslandTransform;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject handPointHintObject;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float transitionDuration;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float handPointHintRaiseAmount;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float handPointHintFrequency;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float minDistanceFromHandsToHintObject;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float timeBeforeHandPointHintIsVisible;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioClip islandShiftSoundEffect;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6038", Offset = "0x6F6038")]
	private bool <hasCompletedTutorial>k__BackingField;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6048", Offset = "0x6F6048")]
	private bool <isTutorialIslandAnimating>k__BackingField;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 startingIslandActualPosition;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Quaternion startingIslandActualRotation;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 startingIslandActualScale;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector3 startingHandPointHintPosition;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float timeInWorldMap;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float sideImpostorScale;

	[Token(Token = "0x17000114")]
	private Player player
	{
		[Token(Token = "0x6000476")]
		[Address(RVA = "0xAB1938", Offset = "0xAB1938", VA = "0xAB1938")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000115")]
	public bool hasCompletedTutorial
	{
		[Token(Token = "0x6000477")]
		[Address(RVA = "0xAB1988", Offset = "0xAB1988", VA = "0xAB1988")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FBF74", Offset = "0x6FBF74")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000478")]
		[Address(RVA = "0xAB1990", Offset = "0xAB1990", VA = "0xAB1990")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FBF84", Offset = "0x6FBF84")]
		set
		{
		}
	}

	[Token(Token = "0x17000116")]
	public bool isTutorialIslandAnimating
	{
		[Token(Token = "0x6000479")]
		[Address(RVA = "0xAB199C", Offset = "0xAB199C", VA = "0xAB199C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FBF94", Offset = "0x6FBF94")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600047A")]
		[Address(RVA = "0xAB19A4", Offset = "0xAB19A4", VA = "0xAB19A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FBFA4", Offset = "0x6FBFA4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000117")]
	public WorldMapCity tutorialCity
	{
		[Token(Token = "0x600047B")]
		[Address(RVA = "0xAB19B0", Offset = "0xAB19B0", VA = "0xAB19B0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000118")]
	public bool tutorialCityIsBankrupt
	{
		[Token(Token = "0x600047C")]
		[Address(RVA = "0xAB1A14", Offset = "0xAB1A14", VA = "0xAB1A14")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000119")]
	public bool shouldShowReturnToWorldMapHint
	{
		[Token(Token = "0x600047D")]
		[Address(RVA = "0xAB1AF8", Offset = "0xAB1AF8", VA = "0xAB1AF8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0xAB1C4C", Offset = "0xAB1C4C", VA = "0xAB1C4C", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0xAB1D40", Offset = "0xAB1D40", VA = "0xAB1D40")]
	public bool IsAnyCityShowingDialog()
	{
		return default(bool);
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0xAB1DE8", Offset = "0xAB1DE8", VA = "0xAB1DE8")]
	public bool IsAnyCityAnimating()
	{
		return default(bool);
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0xAB1E8C", Offset = "0xAB1E8C", VA = "0xAB1E8C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0xAB233C", Offset = "0xAB233C", VA = "0xAB233C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FBFB4", Offset = "0x6FBFB4")]
	public IEnumerator LoadAsync()
	{
		return null;
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0xAB23AC", Offset = "0xAB23AC", VA = "0xAB23AC")]
	public void ShowOpeningAnimation()
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0xAB2448", Offset = "0xAB2448", VA = "0xAB2448")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FC018", Offset = "0x6FC018")]
	private IEnumerator ShowOpeningAnimationRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0xAB24B8", Offset = "0xAB24B8", VA = "0xAB24B8")]
	public void CompleteCity(WorldMapCity city)
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0xAB2ACC", Offset = "0xAB2ACC", VA = "0xAB2ACC")]
	public bool HasCompletedAllLevels()
	{
		return default(bool);
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0xAB2D3C", Offset = "0xAB2D3C", VA = "0xAB2D3C")]
	public bool DoesCityNeedCompletion(WorldMapCity city)
	{
		return default(bool);
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0xAB2D5C", Offset = "0xAB2D5C", VA = "0xAB2D5C")]
	public bool WillCompletionUnlockNewLevels(WorldMapCity city)
	{
		return default(bool);
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0xAB2BE0", Offset = "0xAB2BE0", VA = "0xAB2BE0")]
	private void UnlockCitiesWithAnimation(List<WorldMapCity> unlocks)
	{
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0xAB2B70", Offset = "0xAB2B70", VA = "0xAB2B70")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FC07C", Offset = "0x6FC07C")]
	private IEnumerator CompleteTutorialCityRoutine()
	{
		return null;
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0xAB2E60", Offset = "0xAB2E60", VA = "0xAB2E60")]
	public void GenerateImpostors()
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0xAB2FB8", Offset = "0xAB2FB8", VA = "0xAB2FB8")]
	public void SwitchToCity(WorldMapCity city)
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0xAB35EC", Offset = "0xAB35EC", VA = "0xAB35EC")]
	public void PostLoad()
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0xAB37D4", Offset = "0xAB37D4", VA = "0xAB37D4")]
	public void Refresh()
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0xAB3160", Offset = "0xAB3160", VA = "0xAB3160")]
	private void SetupSideViewImpostors(WorldMapCity targetCity)
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0xAB38CC", Offset = "0xAB38CC", VA = "0xAB38CC")]
	public bool GenerateTravelDestination(WorldMapCity city, out Vector3 destination)
	{
		return default(bool);
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0xAB3BE4", Offset = "0xAB3BE4", VA = "0xAB3BE4")]
	public void HideSideImpostors()
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0xAB3D10", Offset = "0xAB3D10", VA = "0xAB3D10", Slot = "6")]
	private void IDebugPanelProvider.OnDebugPanel()
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0xAB4300", Offset = "0xAB4300", VA = "0xAB4300")]
	public WorldMap()
	{
	}
}
[Token(Token = "0x2000058")]
public class WorldMapCity : MonoBehaviour
{
	[Token(Token = "0x20002EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5450", Offset = "0x6F5450")]
	private sealed class <LoadAsync>d__59 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WorldMapCity <>4__this;

		[Token(Token = "0x40013DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public WorldMap inWorldMap;

		[Token(Token = "0x40013DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ResourceRequest <loadOperation>5__2;

		[Token(Token = "0x40013DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ResourceRequest <landscapeLoadOperation>5__3;

		[Token(Token = "0x17000385")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001558")]
			[Address(RVA = "0xE0524C", Offset = "0xE0524C", VA = "0xE0524C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000386")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600155A")]
			[Address(RVA = "0xE052B4", Offset = "0xE052B4", VA = "0xE052B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001555")]
		[Address(RVA = "0xE04234", Offset = "0xE04234", VA = "0xE04234")]
		[DebuggerHidden]
		public <LoadAsync>d__59(int <>1__state)
		{
		}

		[Token(Token = "0x6001556")]
		[Address(RVA = "0xE04CB8", Offset = "0xE04CB8", VA = "0xE04CB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001557")]
		[Address(RVA = "0xE04CBC", Offset = "0xE04CBC", VA = "0xE04CBC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001559")]
		[Address(RVA = "0xE05254", Offset = "0xE05254", VA = "0xE05254", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002ED")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5460", Offset = "0x6F5460")]
	private sealed class <ShowRoutine>d__65 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WorldMapCity <>4__this;

		[Token(Token = "0x40013E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float delay;

		[Token(Token = "0x40013E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Material <impostorMaterial>5__2;

		[Token(Token = "0x40013E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <visiblityId>5__3;

		[Token(Token = "0x40013E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <time>5__4;

		[Token(Token = "0x17000387")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600155E")]
			[Address(RVA = "0xE05E5C", Offset = "0xE05E5C", VA = "0xE05E5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000388")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001560")]
			[Address(RVA = "0xE05EC4", Offset = "0xE05EC4", VA = "0xE05EC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600155B")]
		[Address(RVA = "0xE04728", Offset = "0xE04728", VA = "0xE04728")]
		[DebuggerHidden]
		public <ShowRoutine>d__65(int <>1__state)
		{
		}

		[Token(Token = "0x600155C")]
		[Address(RVA = "0xE05994", Offset = "0xE05994", VA = "0xE05994", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600155D")]
		[Address(RVA = "0xE05998", Offset = "0xE05998", VA = "0xE05998", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600155F")]
		[Address(RVA = "0xE05E64", Offset = "0xE05E64", VA = "0xE05E64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002EE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5470", Offset = "0x6F5470")]
	private sealed class <ResetWithAnimationRoutine>d__70 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WorldMapCity <>4__this;

		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material <impostorMaterial>5__2;

		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <visiblityId>5__3;

		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <time>5__4;

		[Token(Token = "0x40013ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <centerPosition>5__5;

		[Token(Token = "0x17000389")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001564")]
			[Address(RVA = "0xE05924", Offset = "0xE05924", VA = "0xE05924", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700038A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001566")]
			[Address(RVA = "0xE0598C", Offset = "0xE0598C", VA = "0xE0598C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001561")]
		[Address(RVA = "0xE04C14", Offset = "0xE04C14", VA = "0xE04C14")]
		[DebuggerHidden]
		public <ResetWithAnimationRoutine>d__70(int <>1__state)
		{
		}

		[Token(Token = "0x6001562")]
		[Address(RVA = "0xE052BC", Offset = "0xE052BC", VA = "0xE052BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001563")]
		[Address(RVA = "0xE052C0", Offset = "0xE052C0", VA = "0xE052C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001565")]
		[Address(RVA = "0xE0592C", Offset = "0xE0592C", VA = "0xE0592C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string cityFile;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<WorldMapCity> unlockedCitiesOnCompletion;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6058", Offset = "0x6F6058")]
	private CityInfo <cityInfo>k__BackingField;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6068", Offset = "0x6F6068")]
	private GameObject <landscapePrefab>k__BackingField;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6078", Offset = "0x6F6078")]
	private City <city>k__BackingField;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform panelRoot;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject infoPanel;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject dialogPanel;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public RectTransform panelContainer;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Image cityLevelProgress;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text cityLevelProgressText;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Text cityNameText;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform demolishHintArrowRoot;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AnimationCurve appearanceCurve;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float appearanceAnimationDuration;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public ParticleSystem appearanceEffectPrefab;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AudioClip[] appearanceSoundEffects;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6088", Offset = "0x6F6088")]
	private WorldMapCityEffects <cityEffects>k__BackingField;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6098", Offset = "0x6F6098")]
	private bool <isAnimating>k__BackingField;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F60A8", Offset = "0x6F60A8")]
	private bool <isLocked>k__BackingField;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F60B8", Offset = "0x6F60B8")]
	private bool <isCompleted>k__BackingField;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F60C8", Offset = "0x6F60C8")]
	private bool <hasVisitedYet>k__BackingField;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F60D8", Offset = "0x6F60D8")]
	private int <completionOrder>k__BackingField;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Button button;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private WorldMap worldMap;

	[Token(Token = "0x1700011A")]
	public CityInfo cityInfo
	{
		[Token(Token = "0x6000494")]
		[Address(RVA = "0xE03C18", Offset = "0xE03C18", VA = "0xE03C18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC0E0", Offset = "0x6FC0E0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000495")]
		[Address(RVA = "0xE03C20", Offset = "0xE03C20", VA = "0xE03C20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC0F0", Offset = "0x6FC0F0")]
		private set
		{
		}
	}

	[Token(Token = "0x1700011B")]
	public GameObject landscapePrefab
	{
		[Token(Token = "0x6000496")]
		[Address(RVA = "0xE03C28", Offset = "0xE03C28", VA = "0xE03C28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC100", Offset = "0x6FC100")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000497")]
		[Address(RVA = "0xE03C30", Offset = "0xE03C30", VA = "0xE03C30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC110", Offset = "0x6FC110")]
		private set
		{
		}
	}

	[Token(Token = "0x1700011C")]
	public City city
	{
		[Token(Token = "0x6000498")]
		[Address(RVA = "0xE03C38", Offset = "0xE03C38", VA = "0xE03C38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC120", Offset = "0x6FC120")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000499")]
		[Address(RVA = "0xE03C40", Offset = "0xE03C40", VA = "0xE03C40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC130", Offset = "0x6FC130")]
		private set
		{
		}
	}

	[Token(Token = "0x1700011D")]
	public WorldMapCityEffects cityEffects
	{
		[Token(Token = "0x600049A")]
		[Address(RVA = "0xE03C48", Offset = "0xE03C48", VA = "0xE03C48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC140", Offset = "0x6FC140")]
		get
		{
			return null;
		}
		[Token(Token = "0x600049B")]
		[Address(RVA = "0xE03C50", Offset = "0xE03C50", VA = "0xE03C50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC150", Offset = "0x6FC150")]
		private set
		{
		}
	}

	[Token(Token = "0x1700011E")]
	private GameObject impostorIsland
	{
		[Token(Token = "0x600049C")]
		[Address(RVA = "0xE03C58", Offset = "0xE03C58", VA = "0xE03C58")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700011F")]
	public bool isAnimating
	{
		[Token(Token = "0x600049D")]
		[Address(RVA = "0xE03C80", Offset = "0xE03C80", VA = "0xE03C80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC160", Offset = "0x6FC160")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600049E")]
		[Address(RVA = "0xE03C88", Offset = "0xE03C88", VA = "0xE03C88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC170", Offset = "0x6FC170")]
		private set
		{
		}
	}

	[Token(Token = "0x17000120")]
	public bool isLocked
	{
		[Token(Token = "0x600049F")]
		[Address(RVA = "0xE03C94", Offset = "0xE03C94", VA = "0xE03C94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC180", Offset = "0x6FC180")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004A0")]
		[Address(RVA = "0xE03C9C", Offset = "0xE03C9C", VA = "0xE03C9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC190", Offset = "0x6FC190")]
		private set
		{
		}
	}

	[Token(Token = "0x17000121")]
	public bool isCompleted
	{
		[Token(Token = "0x60004A1")]
		[Address(RVA = "0xE03CA8", Offset = "0xE03CA8", VA = "0xE03CA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC1A0", Offset = "0x6FC1A0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004A2")]
		[Address(RVA = "0xE03CB0", Offset = "0xE03CB0", VA = "0xE03CB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC1B0", Offset = "0x6FC1B0")]
		set
		{
		}
	}

	[Token(Token = "0x17000122")]
	public bool hasVisitedYet
	{
		[Token(Token = "0x60004A3")]
		[Address(RVA = "0xE03CBC", Offset = "0xE03CBC", VA = "0xE03CBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC1C0", Offset = "0x6FC1C0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004A4")]
		[Address(RVA = "0xE03CC4", Offset = "0xE03CC4", VA = "0xE03CC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC1D0", Offset = "0x6FC1D0")]
		set
		{
		}
	}

	[Token(Token = "0x17000123")]
	public int completionOrder
	{
		[Token(Token = "0x60004A5")]
		[Address(RVA = "0xE03CD0", Offset = "0xE03CD0", VA = "0xE03CD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC1E0", Offset = "0x6FC1E0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60004A6")]
		[Address(RVA = "0xE03CD8", Offset = "0xE03CD8", VA = "0xE03CD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC1F0", Offset = "0x6FC1F0")]
		set
		{
		}
	}

	[Token(Token = "0x17000124")]
	public bool isShowingDialog
	{
		[Token(Token = "0x60004A7")]
		[Address(RVA = "0xE03CE0", Offset = "0xE03CE0", VA = "0xE03CE0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0xE03CFC", Offset = "0xE03CFC", VA = "0xE03CFC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0xE03DB0", Offset = "0xE03DB0", VA = "0xE03DB0")]
	private void OnPressed()
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0xE03EC8", Offset = "0xE03EC8", VA = "0xE03EC8")]
	private void Update()
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0xE037EC", Offset = "0xE037EC", VA = "0xE037EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FC200", Offset = "0x6FC200")]
	public IEnumerator LoadAsync(WorldMap inWorldMap)
	{
		return null;
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0xE04260", Offset = "0xE04260", VA = "0xE04260")]
	public void UpdateInfoPanel()
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0xE044AC", Offset = "0xE044AC", VA = "0xE044AC")]
	public void GenerateImpostors()
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0xE03868", Offset = "0xE03868", VA = "0xE03868")]
	public void SetLocked()
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0xE045F4", Offset = "0xE045F4", VA = "0xE045F4")]
	public void Unlock()
	{
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0xE03AFC", Offset = "0xE03AFC", VA = "0xE03AFC")]
	public Coroutine PlayShowAnimation(float delay = 0f)
	{
		return null;
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0xE046A8", Offset = "0xE046A8", VA = "0xE046A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FC264", Offset = "0x6FC264")]
	private IEnumerator ShowRoutine(float delay)
	{
		return null;
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0xE04754", Offset = "0xE04754", VA = "0xE04754")]
	public void ResetIslandButtonPressed()
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0xE0480C", Offset = "0xE0480C", VA = "0xE0480C")]
	public void YesButtonPressed()
	{
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0xE04AEC", Offset = "0xE04AEC", VA = "0xE04AEC")]
	public void NoButtonPressed()
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0xE04844", Offset = "0xE04844", VA = "0xE04844")]
	public void ResetWithAnimation()
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0xE04BA4", Offset = "0xE04BA4", VA = "0xE04BA4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FC2C8", Offset = "0x6FC2C8")]
	private IEnumerator ResetWithAnimationRoutine()
	{
		return null;
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0xE04C40", Offset = "0xE04C40", VA = "0xE04C40")]
	public WorldMapCity()
	{
	}
}
[Token(Token = "0x2000059")]
public class WorldMapCityEffects : MonoBehaviour
{
	[Token(Token = "0x20002EF")]
	public enum Effect
	{
		[Token(Token = "0x40013EF")]
		Waves,
		[Token(Token = "0x40013F0")]
		Attention,
		[Token(Token = "0x40013F1")]
		Selected,
		[Token(Token = "0x40013F2")]
		Appear
	}

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Effect effect;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int animationId;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int foamWidthId;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float animationValue;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float time;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float selectedAnimationSpeed;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float attentionAnimationSpeed;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float wavesAnimationSpeed;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float appearSpeed;

	[Token(Token = "0x400029A")]
	private const float foamWidth = 0.025f;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0xE05ECC", Offset = "0xE05ECC", VA = "0xE05ECC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0xE05E48", Offset = "0xE05E48", VA = "0xE05E48")]
	public void Appear()
	{
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0xE05F54", Offset = "0xE05F54", VA = "0xE05F54")]
	private void Update()
	{
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0xE061C0", Offset = "0xE061C0", VA = "0xE061C0")]
	public WorldMapCityEffects()
	{
	}
}
[Token(Token = "0x200005A")]
public enum ZoneDensity
{
	[Token(Token = "0x400029D")]
	Low,
	[Token(Token = "0x400029E")]
	Medium,
	[Token(Token = "0x400029F")]
	High
}
[Token(Token = "0x200005B")]
public class ZoneConstructionManager : CityModule, ISimulationModule
{
	[Token(Token = "0x20002F0")]
	private struct PotentialBuildLocation
	{
		[Token(Token = "0x40013F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BuildingInfo buildingInfo;

		[Token(Token = "0x40013F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int x;

		[Token(Token = "0x40013F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int y;

		[Token(Token = "0x40013F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int rotation;

		[Token(Token = "0x40013F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float score;

		[Token(Token = "0x40013F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool destroysExistingBuilding;
	}

	[Token(Token = "0x20002F1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5480", Offset = "0x6F5480")]
	private sealed class <Simulate>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ZoneConstructionManager <>4__this;

		[Token(Token = "0x40013FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float deltaTime;

		[Token(Token = "0x1700038B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600156A")]
			[Address(RVA = "0xE088DC", Offset = "0xE088DC", VA = "0xE088DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700038C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600156C")]
			[Address(RVA = "0xE08944", Offset = "0xE08944", VA = "0xE08944", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0xE084E4", Offset = "0xE084E4", VA = "0xE084E4")]
		[DebuggerHidden]
		public <Simulate>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6001568")]
		[Address(RVA = "0xE087E8", Offset = "0xE087E8", VA = "0xE087E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001569")]
		[Address(RVA = "0xE087EC", Offset = "0xE087EC", VA = "0xE087EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600156B")]
		[Address(RVA = "0xE088E4", Offset = "0xE088E4", VA = "0xE088E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002A0")]
	public const bool useConstructionSitesForUpgradeAndDowngrade = true;

	[Token(Token = "0x40002A1")]
	public const float requestsPerSecond = 1f;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int numAttempts;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float requestsAccumulated;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F60E8", Offset = "0x6F60E8")]
	private int <numUpgradeConstructionSites>k__BackingField;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<PotentialBuildLocation> potentialBuildLocations;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<PotentialBuildLocation> queuedBuildLocations;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float delayUntilNextQueuedConstruction;

	[Token(Token = "0x17000125")]
	public int numUpgradeConstructionSites
	{
		[Token(Token = "0x60004BC")]
		[Address(RVA = "0xE061D4", Offset = "0xE061D4", VA = "0xE061D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC32C", Offset = "0x6FC32C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60004BD")]
		[Address(RVA = "0xE061DC", Offset = "0xE061DC", VA = "0xE061DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC33C", Offset = "0x6FC33C")]
		set
		{
		}
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0xE061E4", Offset = "0xE061E4", VA = "0xE061E4", Slot = "10")]
	public override void OnResetProgress()
	{
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0xE06254", Offset = "0xE06254", VA = "0xE06254")]
	private BuildingInfo GetConstructionSiteBuilding(BuildingInfo building)
	{
		return null;
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0xE06490", Offset = "0xE06490", VA = "0xE06490")]
	private BuildingInfo PickBuilding(ZoneManager.ZoneType zoneType, ZoneDensity requiredDensity)
	{
		return null;
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0xE06618", Offset = "0xE06618", VA = "0xE06618")]
	private float GetMinPopulationDensityFromZoneDensity(ZoneDensity density)
	{
		return default(float);
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0xE06640", Offset = "0xE06640", VA = "0xE06640")]
	private ZoneDensity GetTargetDensityFromPopulationDensity(float density)
	{
		return default(ZoneDensity);
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0xE06670", Offset = "0xE06670", VA = "0xE06670")]
	private bool IsCorrectlyZoned(BuildingInfo building, PotentialBuildLocation loc)
	{
		return default(bool);
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0xE06948", Offset = "0xE06948", VA = "0xE06948")]
	private void ClearArea(BuildingInfo building, PotentialBuildLocation loc)
	{
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0xE06A20", Offset = "0xE06A20", VA = "0xE06A20")]
	private bool IsAreaClear(BuildingInfo building, PotentialBuildLocation loc)
	{
		return default(bool);
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0xE06B70", Offset = "0xE06B70", VA = "0xE06B70")]
	private bool SlideInDirection(BuildingInfo building, PotentialBuildLocation loc, int dirX, int dirY, out PotentialBuildLocation result)
	{
		return default(bool);
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0xE06CEC", Offset = "0xE06CEC", VA = "0xE06CEC")]
	private void GetRoadAccess(BuildingInfo info, PotentialBuildLocation loc, out int roadX, out int roadY)
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0xE06DB0", Offset = "0xE06DB0", VA = "0xE06DB0")]
	private void TryAdd(BuildingInfo building, PotentialBuildLocation loc)
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0xE071C0", Offset = "0xE071C0", VA = "0xE071C0")]
	private bool CanUpgradeToDensityYet(ZoneDensity zoneDensity)
	{
		return default(bool);
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0xE07228", Offset = "0xE07228", VA = "0xE07228")]
	private void DowngradeBuilding(BuildingInstance building)
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0xE07644", Offset = "0xE07644", VA = "0xE07644")]
	private void FulfilRequest()
	{
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0xE07F78", Offset = "0xE07F78", VA = "0xE07F78")]
	private bool FulfilQueuedBuild(PotentialBuildLocation loc)
	{
		return default(bool);
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0xE083C4", Offset = "0xE083C4", VA = "0xE083C4")]
	private void FulfilQueuedBuilds()
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0xE08464", Offset = "0xE08464", VA = "0xE08464", Slot = "11")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FC34C", Offset = "0x6FC34C")]
	public IEnumerator Simulate(float deltaTime)
	{
		return null;
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0xE08510", Offset = "0xE08510", VA = "0xE08510")]
	private void Update()
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0xE085FC", Offset = "0xE085FC", VA = "0xE085FC")]
	public void QueuePotentialZonedBuilding(int x, int y, int rotation)
	{
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0xE08748", Offset = "0xE08748", VA = "0xE08748")]
	public ZoneConstructionManager()
	{
	}

	[SpecialName]
	[Token(Token = "0x60004D2")]
	[Address(RVA = "0xE087E0", Offset = "0xE087E0", VA = "0xE087E0", Slot = "12")]
	private GameObject ISimulationModule.get_gameObject()
	{
		return null;
	}
}
[Token(Token = "0x200005C")]
public class ZoneDemandManager : CityModule, ISimulationModule
{
	[Token(Token = "0x20002F2")]
	public class ZoneDemandManagerSaveData : SaveSystem.ModuleData
	{
		[Token(Token = "0x40013FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float residentialDemand;

		[Token(Token = "0x40013FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float commercialDemand;

		[Token(Token = "0x40013FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float industrialDemand;

		[Token(Token = "0x600156D")]
		[Address(RVA = "0xE08D00", Offset = "0xE08D00", VA = "0xE08D00")]
		public ZoneDemandManagerSaveData()
		{
		}
	}

	[Token(Token = "0x20002F3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5490", Offset = "0x6F5490")]
	private sealed class <Simulate>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ZoneDemandManager <>4__this;

		[Token(Token = "0x1700038D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001571")]
			[Address(RVA = "0xE09324", Offset = "0xE09324", VA = "0xE09324", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700038E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001573")]
			[Address(RVA = "0xE0938C", Offset = "0xE0938C", VA = "0xE0938C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600156E")]
		[Address(RVA = "0xE08B38", Offset = "0xE08B38", VA = "0xE08B38")]
		[DebuggerHidden]
		public <Simulate>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x600156F")]
		[Address(RVA = "0xE08DC4", Offset = "0xE08DC4", VA = "0xE08DC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001570")]
		[Address(RVA = "0xE08DC8", Offset = "0xE08DC8", VA = "0xE08DC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001572")]
		[Address(RVA = "0xE0932C", Offset = "0xE0932C", VA = "0xE0932C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F54A0", Offset = "0x6F54A0")]
	private sealed class <SimulateOld>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ZoneDemandManager <>4__this;

		[Token(Token = "0x4001406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float deltaTime;

		[Token(Token = "0x1700038F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001577")]
			[Address(RVA = "0xE099F0", Offset = "0xE099F0", VA = "0xE099F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000390")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001579")]
			[Address(RVA = "0xE09A58", Offset = "0xE09A58", VA = "0xE09A58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001574")]
		[Address(RVA = "0xE08BE4", Offset = "0xE08BE4", VA = "0xE08BE4")]
		[DebuggerHidden]
		public <SimulateOld>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6001575")]
		[Address(RVA = "0xE09394", Offset = "0xE09394", VA = "0xE09394", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001576")]
		[Address(RVA = "0xE09398", Offset = "0xE09398", VA = "0xE09398", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001578")]
		[Address(RVA = "0xE099F8", Offset = "0xE099F8", VA = "0xE099F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool cheat;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float demandChangeSpeed;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float residentialDemand;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float commercialDemand;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float industrialDemand;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F60F8", Offset = "0x6F60F8")]
	private int <projectedPopulation>k__BackingField;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6108", Offset = "0x6F6108")]
	private int <numIndustrialJobs>k__BackingField;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6118", Offset = "0x6F6118")]
	private int <numCommercialJobs>k__BackingField;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6128", Offset = "0x6F6128")]
	private float <desiredIndustrialJobRatio>k__BackingField;

	[Token(Token = "0x17000126")]
	public int projectedPopulation
	{
		[Token(Token = "0x60004D3")]
		[Address(RVA = "0xE0894C", Offset = "0xE0894C", VA = "0xE0894C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC3B0", Offset = "0x6FC3B0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60004D4")]
		[Address(RVA = "0xE08954", Offset = "0xE08954", VA = "0xE08954")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC3C0", Offset = "0x6FC3C0")]
		private set
		{
		}
	}

	[Token(Token = "0x17000127")]
	public int numIndustrialJobs
	{
		[Token(Token = "0x60004D5")]
		[Address(RVA = "0xE0895C", Offset = "0xE0895C", VA = "0xE0895C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC3D0", Offset = "0x6FC3D0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60004D6")]
		[Address(RVA = "0xE08964", Offset = "0xE08964", VA = "0xE08964")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC3E0", Offset = "0x6FC3E0")]
		private set
		{
		}
	}

	[Token(Token = "0x17000128")]
	public int numCommercialJobs
	{
		[Token(Token = "0x60004D7")]
		[Address(RVA = "0xE0896C", Offset = "0xE0896C", VA = "0xE0896C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC3F0", Offset = "0x6FC3F0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60004D8")]
		[Address(RVA = "0xE08974", Offset = "0xE08974", VA = "0xE08974")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC400", Offset = "0x6FC400")]
		private set
		{
		}
	}

	[Token(Token = "0x17000129")]
	public float desiredIndustrialJobRatio
	{
		[Token(Token = "0x60004D9")]
		[Address(RVA = "0xE0897C", Offset = "0xE0897C", VA = "0xE0897C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC410", Offset = "0x6FC410")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60004DA")]
		[Address(RVA = "0xE08984", Offset = "0xE08984", VA = "0xE08984")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC420", Offset = "0x6FC420")]
		private set
		{
		}
	}

	[Token(Token = "0x1700012A")]
	public override Type saveModuleDataType
	{
		[Token(Token = "0x60004DF")]
		[Address(RVA = "0xE08C10", Offset = "0xE08C10", VA = "0xE08C10", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0xE0898C", Offset = "0xE0898C", VA = "0xE0898C")]
	public float GetDemand(ZoneManager.ZoneType zoneType)
	{
		return default(float);
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0xE089C4", Offset = "0xE089C4", VA = "0xE089C4")]
	public ZoneManager.ZoneType PickDemandedZone()
	{
		return default(ZoneManager.ZoneType);
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0xE08AC8", Offset = "0xE08AC8", VA = "0xE08AC8", Slot = "11")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FC430", Offset = "0x6FC430")]
	public IEnumerator Simulate(float deltaTime)
	{
		return null;
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0xE08B64", Offset = "0xE08B64", VA = "0xE08B64")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FC494", Offset = "0x6FC494")]
	public IEnumerator SimulateOld(float deltaTime)
	{
		return null;
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0xE08C80", Offset = "0xE08C80", VA = "0xE08C80", Slot = "5")]
	public override SaveSystem.ModuleData OnSave()
	{
		return null;
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0xE08D08", Offset = "0xE08D08", VA = "0xE08D08", Slot = "6")]
	public override void OnLoad(SaveSystem.SaveGame saveGame, SaveSystem.ModuleData data)
	{
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0xE08DA8", Offset = "0xE08DA8", VA = "0xE08DA8")]
	public ZoneDemandManager()
	{
	}

	[SpecialName]
	[Token(Token = "0x60004E3")]
	[Address(RVA = "0xE08DBC", Offset = "0xE08DBC", VA = "0xE08DBC", Slot = "12")]
	private GameObject ISimulationModule.get_gameObject()
	{
		return null;
	}
}
[Token(Token = "0x200005D")]
public class ZoneManager : CityModule, IVisualiserTextureProvider
{
	[Token(Token = "0x20002F5")]
	public enum ZoneType : byte
	{
		[Token(Token = "0x4001408")]
		Null,
		[Token(Token = "0x4001409")]
		NoZone,
		[Token(Token = "0x400140A")]
		Residential,
		[Token(Token = "0x400140B")]
		Commercial,
		[Token(Token = "0x400140C")]
		Industrial
	}

	[Token(Token = "0x20002F6")]
	private class State
	{
		[Token(Token = "0x400140D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ZoneType[] data;

		[Token(Token = "0x400140E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public byte[] rotation;

		[Token(Token = "0x400140F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color32[] textureData;

		[Token(Token = "0x600157A")]
		[Address(RVA = "0xE0A398", Offset = "0xE0A398", VA = "0xE0A398")]
		public State(int mapWidth, int mapHeight)
		{
		}

		[Token(Token = "0x600157B")]
		[Address(RVA = "0xE0A4FC", Offset = "0xE0A4FC", VA = "0xE0A4FC")]
		public void CopyFrom(State other)
		{
		}
	}

	[Token(Token = "0x20002F7")]
	public class ZoneSaveData : SaveSystem.ModuleData
	{
		[Token(Token = "0x4001410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int width;

		[Token(Token = "0x4001411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int height;

		[Token(Token = "0x4001412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string zoning;

		[Token(Token = "0x4001413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string rotation;

		[NonSerialized]
		[Token(Token = "0x4001414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[XmlIgnore]
		public ZoneType[] zoningRaw;

		[NonSerialized]
		[Token(Token = "0x4001415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[XmlIgnore]
		public byte[] rotationRaw;

		[Token(Token = "0x600157C")]
		[Address(RVA = "0xE0D198", Offset = "0xE0D198", VA = "0xE0D198", Slot = "4")]
		public override void OnPreWrite()
		{
		}

		[Token(Token = "0x600157D")]
		[Address(RVA = "0xE0C708", Offset = "0xE0C708", VA = "0xE0C708")]
		public ZoneSaveData()
		{
		}
	}

	[Token(Token = "0x40002B1")]
	private const byte zoneAlpha = 64;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color32[] zoneColors;

	[Token(Token = "0x40002B3")]
	private const int zoneSizeFromRoad = 2;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private State stateInternal;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private State previewState;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isPreviewMode;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool showPreviewStateInternal;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Texture2D zoneTexture;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool textureDirty;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool requiresDeferredRefresh;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int deferredRefreshX1;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int deferredRefreshY1;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int deferredRefreshX2;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int deferredRefreshY2;

	[Token(Token = "0x1700012B")]
	public static ZoneManager current
	{
		[Token(Token = "0x60004E4")]
		[Address(RVA = "0xE09F68", Offset = "0xE09F68", VA = "0xE09F68")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700012C")]
	private State state
	{
		[Token(Token = "0x60004E5")]
		[Address(RVA = "0xE0A040", Offset = "0xE0A040", VA = "0xE0A040")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700012D")]
	public bool showPreviewState
	{
		[Token(Token = "0x60004E6")]
		[Address(RVA = "0xE0A05C", Offset = "0xE0A05C", VA = "0xE0A05C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004E7")]
		[Address(RVA = "0xE0A064", Offset = "0xE0A064", VA = "0xE0A064")]
		set
		{
		}
	}

	[Token(Token = "0x1700012E")]
	public Texture2D visualiseTexture
	{
		[Token(Token = "0x60004E9")]
		[Address(RVA = "0xE0A440", Offset = "0xE0A440", VA = "0xE0A440", Slot = "11")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700012F")]
	public Texture2D secondaryTexture
	{
		[Token(Token = "0x60004EA")]
		[Address(RVA = "0xE0A448", Offset = "0xE0A448", VA = "0xE0A448", Slot = "12")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000130")]
	public override Type saveModuleDataType
	{
		[Token(Token = "0x600050B")]
		[Address(RVA = "0xE0C580", Offset = "0xE0C580", VA = "0xE0C580", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0xE0A08C", Offset = "0xE0A08C", VA = "0xE0A08C", Slot = "8")]
	public override void Init()
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0xE0A450", Offset = "0xE0A450", VA = "0xE0A450", Slot = "14")]
	public void RefreshVisualiseTexture()
	{
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0xE0A4B8", Offset = "0xE0A4B8", VA = "0xE0A4B8")]
	public void BeginPreviewChanges()
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0xE0A568", Offset = "0xE0A568", VA = "0xE0A568")]
	public void EndPreviewChanges()
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0xE067D8", Offset = "0xE067D8", VA = "0xE067D8")]
	public ZoneType GetZoneType(int x, int y)
	{
		return default(ZoneType);
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0xE0A68C", Offset = "0xE0A68C", VA = "0xE0A68C")]
	public bool GetRoadSideTile(int x, int y, out int outX, out int outY)
	{
		return default(bool);
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0xE0A7F4", Offset = "0xE0A7F4", VA = "0xE0A7F4")]
	public bool GetNonRoadSideTile(int x, int y, out int outX, out int outY)
	{
		return default(bool);
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0xE0A920", Offset = "0xE0A920", VA = "0xE0A920")]
	public Vector3 GetPlotCenter(int x, int y)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0xE0AA9C", Offset = "0xE0AA9C", VA = "0xE0AA9C")]
	private void GetAdjacentRegionTile(int x, int y, out int adjacentX, out int adjacentY)
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0xE0AB5C", Offset = "0xE0AB5C", VA = "0xE0AB5C")]
	public int PlaceZoneType(int x, int y, ZoneType zoneType, ConstructionCost costReport)
	{
		return default(int);
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0xE0ADF8", Offset = "0xE0ADF8", VA = "0xE0ADF8")]
	public int SetZoneType(int x, int y, ZoneType zoneType)
	{
		return default(int);
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0xE0B364", Offset = "0xE0B364", VA = "0xE0B364")]
	public void AdjustConstructionCost(ConstructionCost costReport, int x, int y, ZoneType newZoneType)
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0xE0B4C4", Offset = "0xE0B4C4", VA = "0xE0B4C4")]
	public bool IsZoned(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0xE0B5A4", Offset = "0xE0B5A4", VA = "0xE0B5A4")]
	public bool CanZone(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0xE0B664", Offset = "0xE0B664", VA = "0xE0B664")]
	public bool IsZonedRegion(int x, int y, int width, int height, ZoneType zoneType)
	{
		return default(bool);
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0xE0B780", Offset = "0xE0B780", VA = "0xE0B780")]
	public void OnPlaceRoadTile(int x, int y)
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0xE0B8C8", Offset = "0xE0B8C8", VA = "0xE0B8C8")]
	public void OnPlacePlantBox(int x, int y)
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0xE0B8E4", Offset = "0xE0B8E4", VA = "0xE0B8E4")]
	public void OnPlaceBuilding(BuildingInstance building)
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0xE0B9EC", Offset = "0xE0B9EC", VA = "0xE0B9EC")]
	public void OnDemolishedBuilding(BuildingInstance building)
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0xE0BF9C", Offset = "0xE0BF9C", VA = "0xE0BF9C")]
	private bool IsRoad(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0xE0C02C", Offset = "0xE0C02C", VA = "0xE0C02C")]
	private bool IsAdjacentToBridge(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0xE0C158", Offset = "0xE0C158", VA = "0xE0C158")]
	private bool CanTileBePotentiallyZoned(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0xE0BB84", Offset = "0xE0BB84", VA = "0xE0BB84")]
	private void RefreshTile(int x, int y)
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0xE0A7B8", Offset = "0xE0A7B8", VA = "0xE0A7B8")]
	private void GetRotationDirection(byte rotation, out int dirX, out int dirY)
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0xE0C278", Offset = "0xE0C278", VA = "0xE0C278")]
	private bool IsTileBuildable(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0xE0C3AC", Offset = "0xE0C3AC", VA = "0xE0C3AC")]
	public void OnRemoveRoadTile(int x, int y)
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0xE0C3C8", Offset = "0xE0C3C8", VA = "0xE0C3C8")]
	public void OnRemovePlantBox(int x, int y)
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0xE0B79C", Offset = "0xE0B79C", VA = "0xE0B79C")]
	private void RefreshRegion(int x1, int y1, int x2, int y2)
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0xE0A5AC", Offset = "0xE0A5AC", VA = "0xE0A5AC")]
	private void RefreshRegionInternal(int x1, int y1, int x2, int y2)
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0xE06890", Offset = "0xE06890", VA = "0xE06890")]
	public byte GetTileRotation(int x, int y)
	{
		return default(byte);
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0xE0C2F0", Offset = "0xE0C2F0", VA = "0xE0C2F0")]
	private void SetTileRotation(int x, int y, byte rotation)
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0xE0B090", Offset = "0xE0B090", VA = "0xE0B090")]
	private bool SetTile(int x, int y, ZoneType zoneType)
	{
		return default(bool);
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0xE0C4E4", Offset = "0xE0C4E4", VA = "0xE0C4E4")]
	private bool IsTilePotentiallyZoneable(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0xE0C5F0", Offset = "0xE0C5F0", VA = "0xE0C5F0", Slot = "5")]
	public override SaveSystem.ModuleData OnSave()
	{
		return null;
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0xE0C710", Offset = "0xE0C710", VA = "0xE0C710", Slot = "6")]
	public override void OnLoad(SaveSystem.SaveGame saveGame, SaveSystem.ModuleData inData)
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0xE0CB9C", Offset = "0xE0CB9C", VA = "0xE0CB9C", Slot = "7")]
	public override void OnPostLoad()
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0xE0CD54", Offset = "0xE0CD54", VA = "0xE0CD54", Slot = "10")]
	public override void OnResetProgress()
	{
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0xE0CE78", Offset = "0xE0CE78", VA = "0xE0CE78")]
	public bool CheckForExistingZoneType(ZoneType zoneType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0xE0D004", Offset = "0xE0D004", VA = "0xE0D004")]
	public ZoneManager()
	{
	}

	[SpecialName]
	[Token(Token = "0x6000512")]
	[Address(RVA = "0xE0D190", Offset = "0xE0D190", VA = "0xE0D190", Slot = "13")]
	private string IVisualiserTextureProvider.get_name()
	{
		return null;
	}
}
[Token(Token = "0x200005E")]
public class AnimatorTimeScale : MonoBehaviour
{
	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator animator;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private City city;

	[Token(Token = "0x6000513")]
	[Address(RVA = "0xB54B14", Offset = "0xB54B14", VA = "0xB54B14")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0xB54C10", Offset = "0xB54C10", VA = "0xB54C10")]
	private void Update()
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0xB54C58", Offset = "0xB54C58", VA = "0xB54C58")]
	public AnimatorTimeScale()
	{
	}
}
[Token(Token = "0x200005F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6F4764", Offset = "0x6F4764")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6F4764", Offset = "0x6F4764")]
[ExecuteInEditMode]
public class BlobShadow : MonoBehaviour
{
	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string blobTag;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer target;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MaterialPropertyBlock materialPropertyBlock;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int shadowPlaneHeightId;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _shadowPlaneHeight;

	[Token(Token = "0x17000131")]
	public float shadowPlaneHeight
	{
		[Token(Token = "0x6000516")]
		[Address(RVA = "0xB5AB9C", Offset = "0xB5AB9C", VA = "0xB5AB9C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000517")]
		[Address(RVA = "0xB534F8", Offset = "0xB534F8", VA = "0xB534F8")]
		set
		{
		}
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0xB5ABA4", Offset = "0xB5ABA4", VA = "0xB5ABA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0xB5AC68", Offset = "0xB5AC68", VA = "0xB5AC68")]
	private void Start()
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0xB5AC6C", Offset = "0xB5AC6C", VA = "0xB5AC6C")]
	private void SetupAtlasCoord()
	{
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0xB5AEB8", Offset = "0xB5AEB8", VA = "0xB5AEB8")]
	public BlobShadow()
	{
	}
}
[Token(Token = "0x2000060")]
public class BlobShadowAtlas : ScriptableObjectSingleton<BlobShadowAtlas>
{
	[Token(Token = "0x20002F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F54B0", Offset = "0x6F54B0")]
	private sealed class <>c__DisplayClass14_0
	{
		[Token(Token = "0x4001416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string tag;

		[Token(Token = "0x600157E")]
		[Address(RVA = "0xB5AF68", Offset = "0xB5AF68", VA = "0xB5AF68")]
		public <>c__DisplayClass14_0()
		{
		}

		[Token(Token = "0x600157F")]
		[Address(RVA = "0xB5AFE0", Offset = "0xB5AFE0", VA = "0xB5AFE0")]
		internal bool <GetTextureCoords>b__0(string x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40002C7")]
	public const int atlasResolution = 512;

	[Token(Token = "0x40002C8")]
	public const int cellPixelSize = 128;

	[Token(Token = "0x40002C9")]
	public const int paddingPixelSize = 16;

	[Token(Token = "0x40002CA")]
	public const int blobPixelSize = 96;

	[Token(Token = "0x40002CB")]
	public const int divisions = 4;

	[Token(Token = "0x40002CC")]
	private const int maxBlobs = 16;

	[Token(Token = "0x40002CD")]
	private const float cellSize = 0.25f;

	[Token(Token = "0x40002CE")]
	private const float padding = 1f / 32f;

	[Token(Token = "0x40002CF")]
	private const float blobSize = 0.1875f;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<string> tags;

	[Token(Token = "0x17000132")]
	public Texture2D atlasTexture
	{
		[Token(Token = "0x600051C")]
		[Address(RVA = "0xB5AEC0", Offset = "0xB5AEC0", VA = "0xB5AEC0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000133")]
	public Material atlasMaterial
	{
		[Token(Token = "0x600051D")]
		[Address(RVA = "0xB5AF14", Offset = "0xB5AF14", VA = "0xB5AF14")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0xB5AD4C", Offset = "0xB5AD4C", VA = "0xB5AD4C")]
	public Vector4 GetTextureCoords(string tag)
	{
		return default(Vector4);
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0xB5AF70", Offset = "0xB5AF70", VA = "0xB5AF70")]
	public BlobShadowAtlas()
	{
	}
}
[Token(Token = "0x2000061")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6F4800", Offset = "0x6F4800")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6F4800", Offset = "0x6F4800")]
public class CircleMesh : MonoBehaviour
{
	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float radius;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int numSegments;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float thickness;

	[Token(Token = "0x6000520")]
	[Address(RVA = "0xC072BC", Offset = "0xC072BC", VA = "0xC072BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0xC072C0", Offset = "0xC072C0", VA = "0xC072C0")]
	public void Generate()
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0xC07708", Offset = "0xC07708", VA = "0xC07708")]
	public CircleMesh()
	{
	}
}
[Token(Token = "0x2000062")]
public class ColourSwatch : ScriptableObject
{
	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color[] colours;

	[Token(Token = "0x6000523")]
	[Address(RVA = "0xC13C8C", Offset = "0xC13C8C", VA = "0xC13C8C")]
	public ColourSwatch()
	{
	}
}
[Token(Token = "0x2000063")]
public class CompassEffect : MonoBehaviour
{
	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform needle;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float moveSpeed;

	[Token(Token = "0x6000524")]
	[Address(RVA = "0xC13C9C", Offset = "0xC13C9C", VA = "0xC13C9C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0xC13EA0", Offset = "0xC13EA0", VA = "0xC13EA0")]
	public CompassEffect()
	{
	}
}
[Token(Token = "0x2000064")]
public class DestroyOnDisable : MonoBehaviour
{
	[Token(Token = "0x6000526")]
	[Address(RVA = "0xAD4CE8", Offset = "0xAD4CE8", VA = "0xAD4CE8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0xAD4D64", Offset = "0xAD4D64", VA = "0xAD4D64")]
	public DestroyOnDisable()
	{
	}
}
[Token(Token = "0x2000065")]
public class DynamicShadowBounds : MonoBehaviour
{
	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SimpleShadow shadow;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Bounds bounds;

	[Token(Token = "0x6000528")]
	[Address(RVA = "0xAD65BC", Offset = "0xAD65BC", VA = "0xAD65BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0xAD6674", Offset = "0xAD6674", VA = "0xAD6674")]
	public DynamicShadowBounds()
	{
	}
}
[Token(Token = "0x2000066")]
public class EmergencyLights : MonoBehaviour
{
	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color[] lightColours;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float colourChangeFrequency;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 lightChangeOffset;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MaterialPropertyBlock propertyBlock;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int currentLightIndex;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float lightTimer;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int colorId;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 startPosition;

	[Token(Token = "0x600052A")]
	[Address(RVA = "0xADC27C", Offset = "0xADC27C", VA = "0xADC27C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0xADC390", Offset = "0xADC390", VA = "0xADC390")]
	private void Update()
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0xADC55C", Offset = "0xADC55C", VA = "0xADC55C")]
	public EmergencyLights()
	{
	}
}
[Token(Token = "0x2000067")]
public class Fire : MonoBehaviour
{
	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int pixWidth;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int pixHeight;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int pixDepth;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float xOrg;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float yOrg;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float scale;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float speed;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Texture3D noiseTex;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Color[] pix;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 fireSample;

	[Token(Token = "0x600052D")]
	[Address(RVA = "0xADCA6C", Offset = "0xADCA6C", VA = "0xADCA6C")]
	private void Start()
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0xADCDA4", Offset = "0xADCDA4", VA = "0xADCDA4")]
	private void Update()
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0xADCB80", Offset = "0xADCB80", VA = "0xADCB80")]
	private void CalcNoise()
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0xADCF70", Offset = "0xADCF70", VA = "0xADCF70")]
	public Fire()
	{
	}
}
[Token(Token = "0x2000068")]
public class FireEffect : MonoBehaviour
{
	[Token(Token = "0x20002F9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F54C0", Offset = "0x6F54C0")]
	private sealed class <IgniteRoutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FireEffect <>4__this;

		[Token(Token = "0x400141A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <endingScale>5__2;

		[Token(Token = "0x400141B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <time>5__3;

		[Token(Token = "0x17000391")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001583")]
			[Address(RVA = "0xADD50C", Offset = "0xADD50C", VA = "0xADD50C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000392")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001585")]
			[Address(RVA = "0xADD574", Offset = "0xADD574", VA = "0xADD574", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001580")]
		[Address(RVA = "0xADD0E0", Offset = "0xADD0E0", VA = "0xADD0E0")]
		[DebuggerHidden]
		public <IgniteRoutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6001581")]
		[Address(RVA = "0xADD390", Offset = "0xADD390", VA = "0xADD390", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001582")]
		[Address(RVA = "0xADD394", Offset = "0xADD394", VA = "0xADD394", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001584")]
		[Address(RVA = "0xADD514", Offset = "0xADD514", VA = "0xADD514", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002FA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F54D0", Offset = "0x6F54D0")]
	private sealed class <ExtinguishRoutine>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400141C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400141D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400141E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FireEffect <>4__this;

		[Token(Token = "0x400141F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startingScale>5__2;

		[Token(Token = "0x4001420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <time>5__3;

		[Token(Token = "0x17000393")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001589")]
			[Address(RVA = "0xADD320", Offset = "0xADD320", VA = "0xADD320", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000394")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600158B")]
			[Address(RVA = "0xADD388", Offset = "0xADD388", VA = "0xADD388", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001586")]
		[Address(RVA = "0xADD10C", Offset = "0xADD10C", VA = "0xADD10C")]
		[DebuggerHidden]
		public <ExtinguishRoutine>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6001587")]
		[Address(RVA = "0xADD148", Offset = "0xADD148", VA = "0xADD148", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001588")]
		[Address(RVA = "0xADD14C", Offset = "0xADD14C", VA = "0xADD14C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0xADD328", Offset = "0xADD328", VA = "0xADD328", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float igniteDuration;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float extinguishDuration;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isExtinguishing;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private City city;

	[Token(Token = "0x6000531")]
	[Address(RVA = "0xADCF94", Offset = "0xADCF94", VA = "0xADCF94")]
	public void Init(City inCity)
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0xADCF9C", Offset = "0xADCF9C", VA = "0xADCF9C")]
	public void Extinguish()
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0xADD044", Offset = "0xADD044", VA = "0xADD044")]
	public void Ignite()
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0xADD070", Offset = "0xADD070", VA = "0xADD070")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FC4F8", Offset = "0x6FC4F8")]
	private IEnumerator IgniteRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0xADCFD4", Offset = "0xADCFD4", VA = "0xADCFD4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FC55C", Offset = "0x6FC55C")]
	private IEnumerator ExtinguishRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0xADD138", Offset = "0xADD138", VA = "0xADD138")]
	public FireEffect()
	{
	}
}
[Token(Token = "0x2000069")]
public class FlyingVolcanoChunk : MonoBehaviour
{
	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float lateralSpeed;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float gravity;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject impactEffectPrefab;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 startPosition;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 targetPosition;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float flightTime;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float verticalLaunchVelocity;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float time;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private City city;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioClip[] launchSounds;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioClip[] hitGroundSounds;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioClip[] hitBuildingSounds;

	[Token(Token = "0x6000537")]
	[Address(RVA = "0xADD57C", Offset = "0xADD57C", VA = "0xADD57C")]
	public void PlotTrajectory(City inCity, Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0xADD6D0", Offset = "0xADD6D0", VA = "0xADD6D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0xADDA2C", Offset = "0xADDA2C", VA = "0xADDA2C")]
	public FlyingVolcanoChunk()
	{
	}
}
[Token(Token = "0x200006A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6F488C", Offset = "0x6F488C")]
public class HeightCapture : SingletonBehaviour<HeightCapture>
{
	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader captureShader;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Camera captureCamera;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isDirty;

	[Token(Token = "0x600053A")]
	[Address(RVA = "0xB1843C", Offset = "0xB1843C", VA = "0xB1843C", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0xB184E4", Offset = "0xB184E4", VA = "0xB184E4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0xB0E548", Offset = "0xB0E548", VA = "0xB0E548")]
	public void MarkDirty()
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0xB18520", Offset = "0xB18520", VA = "0xB18520")]
	public HeightCapture()
	{
	}
}
[Token(Token = "0x200006B")]
public class ImpostorGenerator : CityModule, IDebugPanelProvider
{
	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int meshResolution;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int textureResolution;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Shader heightCaptureShader;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Camera heightCaptureCamera;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Camera captureCamera;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject imposterPrefab;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject sideImposterPrefab;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6138", Offset = "0x6F6138")]
	private GameObject <targetImpostor>k__BackingField;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6148", Offset = "0x6F6148")]
	private GameObject <sideViewImpostor>k__BackingField;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public RenderTexture heightTexture;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public RenderTexture albedoTexture;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Mesh mesh;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3[] vertices;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector2[] uv;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3[] normals;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Camera sideViewCaptureCamera;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public int sideViewResolutionWidth;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public int sideViewResolutionHeight;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float sideViewMinHeight;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float sideViewMaxHeight;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private RenderTexture sideViewTexture;

	[Token(Token = "0x17000134")]
	public GameObject targetImpostor
	{
		[Token(Token = "0x600053E")]
		[Address(RVA = "0xB1E43C", Offset = "0xB1E43C", VA = "0xB1E43C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC5C0", Offset = "0x6FC5C0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600053F")]
		[Address(RVA = "0xB1E444", Offset = "0xB1E444", VA = "0xB1E444")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC5D0", Offset = "0x6FC5D0")]
		private set
		{
		}
	}

	[Token(Token = "0x17000135")]
	public GameObject sideViewImpostor
	{
		[Token(Token = "0x6000540")]
		[Address(RVA = "0xB1E44C", Offset = "0xB1E44C", VA = "0xB1E44C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC5E0", Offset = "0x6FC5E0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000541")]
		[Address(RVA = "0xB1E454", Offset = "0xB1E454", VA = "0xB1E454")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC5F0", Offset = "0x6FC5F0")]
		private set
		{
		}
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0xB1E45C", Offset = "0xB1E45C", VA = "0xB1E45C")]
	public Vector2 GenerateProjectedCoord(Vector3 localPosition)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0xB1E6AC", Offset = "0xB1E6AC", VA = "0xB1E6AC", Slot = "8")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0xB1F168", Offset = "0xB1F168", VA = "0xB1F168")]
	public void CaptureSideView()
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0xB1F184", Offset = "0xB1F184", VA = "0xB1F184")]
	public void Capture()
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0xB1F5CC", Offset = "0xB1F5CC", VA = "0xB1F5CC")]
	public void ShowImpostor()
	{
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0xB1F628", Offset = "0xB1F628", VA = "0xB1F628")]
	public void HideImpostor()
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0xB1F680", Offset = "0xB1F680", VA = "0xB1F680", Slot = "11")]
	public void OnDebugPanel()
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0xB1F8D4", Offset = "0xB1F8D4", VA = "0xB1F8D4")]
	public ImpostorGenerator()
	{
	}
}
[Token(Token = "0x200006C")]
public class MeshOutliner : MonoBehaviour
{
	[Token(Token = "0x600054A")]
	[Address(RVA = "0xA86A38", Offset = "0xA86A38", VA = "0xA86A38")]
	private void Start()
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0xA86A3C", Offset = "0xA86A3C", VA = "0xA86A3C")]
	private void GenerateMesh()
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0xA86E60", Offset = "0xA86E60", VA = "0xA86E60")]
	public static void GenerateOutlineCoordinates(GameObject obj)
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0xA86B2C", Offset = "0xA86B2C", VA = "0xA86B2C")]
	public static void GenerateOutlineCoordinates(Mesh mesh)
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0xA86F10", Offset = "0xA86F10", VA = "0xA86F10")]
	public MeshOutliner()
	{
	}
}
[Token(Token = "0x200006D")]
public class ParticleSystemTimeScale : MonoBehaviour
{
	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem[] particleSystems;

	[Token(Token = "0x600054F")]
	[Address(RVA = "0xA1EA44", Offset = "0xA1EA44", VA = "0xA1EA44")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0xA1EAC4", Offset = "0xA1EAC4", VA = "0xA1EAC4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0xA1EC10", Offset = "0xA1EC10", VA = "0xA1EC10")]
	public ParticleSystemTimeScale()
	{
	}
}
[Token(Token = "0x200006E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6F48F0", Offset = "0x6F48F0")]
public class ReflectionProbeExtension : MonoBehaviour
{
	[Token(Token = "0x20002FB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F54E0", Offset = "0x6F54E0")]
	private sealed class <CaptureDeferredRoutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int frames;

		[Token(Token = "0x4001424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ReflectionProbeExtension <>4__this;

		[Token(Token = "0x17000395")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600158F")]
			[Address(RVA = "0xC1E818", Offset = "0xC1E818", VA = "0xC1E818", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000396")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001591")]
			[Address(RVA = "0xC1E880", Offset = "0xC1E880", VA = "0xC1E880", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600158C")]
		[Address(RVA = "0xC1E6DC", Offset = "0xC1E6DC", VA = "0xC1E6DC")]
		[DebuggerHidden]
		public <CaptureDeferredRoutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600158D")]
		[Address(RVA = "0xC1E7B0", Offset = "0xC1E7B0", VA = "0xC1E7B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600158E")]
		[Address(RVA = "0xC1E7B4", Offset = "0xC1E7B4", VA = "0xC1E7B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001590")]
		[Address(RVA = "0xC1E820", Offset = "0xC1E820", VA = "0xC1E820", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ReflectionProbe probe;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int id;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int renderId;

	[Token(Token = "0x6000552")]
	[Address(RVA = "0xC1E378", Offset = "0xC1E378", VA = "0xC1E378")]
	private void Start()
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0xC1E5E8", Offset = "0xC1E5E8", VA = "0xC1E5E8")]
	public void Capture()
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0xC1E630", Offset = "0xC1E630", VA = "0xC1E630")]
	public void CaptureDeferred(int frames)
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0xC1E65C", Offset = "0xC1E65C", VA = "0xC1E65C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FC600", Offset = "0x6FC600")]
	private IEnumerator CaptureDeferredRoutine(int frames)
	{
		return null;
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0xC1E480", Offset = "0xC1E480", VA = "0xC1E480")]
	private void SetShaderVars()
	{
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0xC1E708", Offset = "0xC1E708", VA = "0xC1E708")]
	private void Update()
	{
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0xC1E7A8", Offset = "0xC1E7A8", VA = "0xC1E7A8")]
	public ReflectionProbeExtension()
	{
	}
}
[Token(Token = "0x200006F")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6F4954", Offset = "0x6F4954")]
public class SimpleShadow : MonoBehaviour
{
	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask shadowCastingLayers;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Camera shadowCaptureCamera;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RenderTexture shadowTexture;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RenderTexture blurredShadowTexture;

	[Token(Token = "0x400031C")]
	private const float nearPlane = 0.05f;

	[Token(Token = "0x400031D")]
	private const float farPlane = 100f;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int shadowTextureSize;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool needsRefresh;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public bool enableBlur;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	public bool executeInEditMode;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Shader blurShader;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Shader shadowPass;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material blurMaterial;

	[Token(Token = "0x4000325")]
	private const bool autoUpdate = false;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Rect captureRect;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool isCaptureDirty;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Rect blurRect;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool isBlurDirty;

	[Token(Token = "0x6000559")]
	[Address(RVA = "0xA6EFC8", Offset = "0xA6EFC8", VA = "0xA6EFC8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0xA6F3F0", Offset = "0xA6F3F0", VA = "0xA6F3F0")]
	public void SetupPosition(Bounds coverageBounds, Transform lightTransform)
	{
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0xA6F810", Offset = "0xA6F810", VA = "0xA6F810")]
	public void CaptureBounds(Bounds bounds)
	{
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0xA6F080", Offset = "0xA6F080", VA = "0xA6F080")]
	private void SetupShadows()
	{
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0xA70144", Offset = "0xA70144", VA = "0xA70144")]
	private void UpdateShadowCamera()
	{
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0xA70208", Offset = "0xA70208", VA = "0xA70208")]
	private void BlurShadow()
	{
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0xA70420", Offset = "0xA70420", VA = "0xA70420")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0xA7042C", Offset = "0xA7042C", VA = "0xA7042C")]
	private bool SetScissorRect(Camera cam, Rect r)
	{
		return default(bool);
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0xA709B0", Offset = "0xA709B0", VA = "0xA709B0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0xA70CB4", Offset = "0xA70CB4", VA = "0xA70CB4")]
	public Vector2 GenerateShadowCoord(Vector3 worldPosition)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0xA70F04", Offset = "0xA70F04", VA = "0xA70F04")]
	public void Refresh()
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0xA70F10", Offset = "0xA70F10", VA = "0xA70F10")]
	public void RefreshImmediate()
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0xA710E0", Offset = "0xA710E0", VA = "0xA710E0")]
	public SimpleShadow()
	{
	}
}
[Token(Token = "0x2000070")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6F49C8", Offset = "0x6F49C8")]
public class WaterSpray : MonoBehaviour
{
	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform startPosition;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform endPositionTransform;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 endPosition;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material sprayMaterial;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int numPositions;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float arcRatio;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float endOffset;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float endOffsetRotationSpeed;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float endOffsetRotation;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool isSprayOn;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float startAlpha;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float endAlpha;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int mainTextureId;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 textureOffset;

	[Token(Token = "0x6000566")]
	[Address(RVA = "0xAA43D8", Offset = "0xAA43D8", VA = "0xAA43D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0xAA4470", Offset = "0xAA4470", VA = "0xAA4470")]
	private void Update()
	{
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0xAA4928", Offset = "0xAA4928", VA = "0xAA4928")]
	public WaterSpray()
	{
	}
}
[Token(Token = "0x2000071")]
[ExecuteInEditMode]
public class WaterTankEffect : MonoBehaviour
{
	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer targetRenderer;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material targetMaterial;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int floorHeightId;

	[Token(Token = "0x6000569")]
	[Address(RVA = "0xAA495C", Offset = "0xAA495C", VA = "0xAA495C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0xAA4BB8", Offset = "0xAA4BB8", VA = "0xAA4BB8")]
	public WaterTankEffect()
	{
	}
}
[Token(Token = "0x2000072")]
public class AudioBank : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x20002FC")]
	public class Sound
	{
		[Token(Token = "0x4001425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioClip clip;

		[Token(Token = "0x4001426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float chance;

		[Token(Token = "0x4001427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float minPitch;

		[Token(Token = "0x4001428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float maxPitch;

		[Token(Token = "0x4001429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float minVolume;

		[Token(Token = "0x400142A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float maxVolume;

		[Token(Token = "0x6001592")]
		[Address(RVA = "0xB551B4", Offset = "0xB551B4", VA = "0xB551B4")]
		public Sound()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20002FD")]
	public class Group
	{
		[Token(Token = "0x400142B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x400142C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sound[] sounds;

		[Token(Token = "0x400142D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public float totalChance;

		[Token(Token = "0x400142E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		public int lastIndexPlayed;

		[Token(Token = "0x6001593")]
		[Address(RVA = "0xB55038", Offset = "0xB55038", VA = "0xB55038")]
		public Sound PickRandomSound()
		{
			return null;
		}

		[Token(Token = "0x6001594")]
		[Address(RVA = "0xB5513C", Offset = "0xB5513C", VA = "0xB5513C")]
		public Group()
		{
		}
	}

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Group[] groups;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<string, Group> groupMapping;

	[Token(Token = "0x600056B")]
	[Address(RVA = "0xB54C60", Offset = "0xB54C60", VA = "0xB54C60")]
	private void Initialize()
	{
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0xB54DC8", Offset = "0xB54DC8", VA = "0xB54DC8")]
	public void Play(AudioSource source, string soundName)
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0xB550DC", Offset = "0xB550DC", VA = "0xB550DC")]
	public AudioBank()
	{
	}
}
[Token(Token = "0x2000073")]
public class AutoSwapFont : MonoBehaviour
{
	[Token(Token = "0x600056E")]
	[Address(RVA = "0xB5532C", Offset = "0xB5532C", VA = "0xB5532C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0xB55330", Offset = "0xB55330", VA = "0xB55330")]
	private void Apply()
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0xB554F0", Offset = "0xB554F0", VA = "0xB554F0")]
	public AutoSwapFont()
	{
	}
}
[Token(Token = "0x2000074")]
public class AutoTranslate : MonoBehaviour
{
	[Token(Token = "0x20002FE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F54F0", Offset = "0x6F54F0")]
	private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400142F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AutoTranslate <>4__this;

		[Token(Token = "0x17000397")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001598")]
			[Address(RVA = "0xB55950", Offset = "0xB55950", VA = "0xB55950", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000398")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600159A")]
			[Address(RVA = "0xB559B8", Offset = "0xB559B8", VA = "0xB559B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001595")]
		[Address(RVA = "0xB55568", Offset = "0xB55568", VA = "0xB55568")]
		[DebuggerHidden]
		public <Start>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6001596")]
		[Address(RVA = "0xB55898", Offset = "0xB55898", VA = "0xB55898", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001597")]
		[Address(RVA = "0xB5589C", Offset = "0xB5589C", VA = "0xB5589C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001599")]
		[Address(RVA = "0xB55958", Offset = "0xB55958", VA = "0xB55958", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string languageKey;

	[Token(Token = "0x6000571")]
	[Address(RVA = "0xB554F8", Offset = "0xB554F8", VA = "0xB554F8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FC664", Offset = "0x6FC664")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0xB55594", Offset = "0xB55594", VA = "0xB55594")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0xB55598", Offset = "0xB55598", VA = "0xB55598")]
	private void Apply()
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0xB55840", Offset = "0xB55840", VA = "0xB55840")]
	public AutoTranslate()
	{
	}
}
[Token(Token = "0x2000075")]
public class BuildConfig : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x20002FF")]
	public class Item
	{
		[Token(Token = "0x4001432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string key;

		[Token(Token = "0x4001433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string val;

		[Token(Token = "0x600159B")]
		[Address(RVA = "0xB60258", Offset = "0xB60258", VA = "0xB60258")]
		public Item()
		{
		}
	}

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string _name;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<Item> _items;

	[Token(Token = "0x17000136")]
	public new string name
	{
		[Token(Token = "0x6000575")]
		[Address(RVA = "0xB60088", Offset = "0xB60088", VA = "0xB60088")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0xB60090", Offset = "0xB60090", VA = "0xB60090")]
	private Item GetItem(string key)
	{
		return null;
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0xB601B0", Offset = "0xB601B0", VA = "0xB601B0")]
	private Item GetOrCreateItem(string key)
	{
		return null;
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0xB60260", Offset = "0xB60260", VA = "0xB60260")]
	public bool HasKey(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0xB6027C", Offset = "0xB6027C", VA = "0xB6027C")]
	public void DeleteKey(string key)
	{
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0xB60304", Offset = "0xB60304", VA = "0xB60304")]
	public bool GetBool(string key, bool defaultValue = false)
	{
		return default(bool);
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0xB603B4", Offset = "0xB603B4", VA = "0xB603B4")]
	public void SetBool(string key, bool val)
	{
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0xB603F4", Offset = "0xB603F4", VA = "0xB603F4")]
	public int GetInt(string key, int defaultValue = 0)
	{
		return default(int);
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0xB60434", Offset = "0xB60434", VA = "0xB60434")]
	public void SetInt(string key, int val)
	{
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0xB60470", Offset = "0xB60470", VA = "0xB60470")]
	public float GetFloat(string key, float defaultValue = 0f)
	{
		return default(float);
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0xB604B0", Offset = "0xB604B0", VA = "0xB604B0")]
	public void SetFloat(string key, float val)
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0xB604EC", Offset = "0xB604EC", VA = "0xB604EC")]
	public string GetString(string key, string defaultValue = "")
	{
		return null;
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0xB60518", Offset = "0xB60518", VA = "0xB60518")]
	public void SetString(string key, string val)
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0xB60544", Offset = "0xB60544", VA = "0xB60544")]
	public BuildConfig()
	{
	}
}
[Token(Token = "0x2000076")]
public class BuildPrefs : ScriptableObjectSingleton<BuildPrefs>
{
	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private BuildConfig _currentConfig;

	[Token(Token = "0x17000137")]
	public static string configName
	{
		[Token(Token = "0x6000583")]
		[Address(RVA = "0xB605C4", Offset = "0xB605C4", VA = "0xB605C4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0xB60710", Offset = "0xB60710", VA = "0xB60710")]
	public static bool HasKey(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0xB6086C", Offset = "0xB6086C", VA = "0xB6086C")]
	public static bool GetBool(string key, bool defaultValue = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0xB609D4", Offset = "0xB609D4", VA = "0xB609D4")]
	public static int GetInt(string key, int defaultValue = 0)
	{
		return default(int);
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0xB60B3C", Offset = "0xB60B3C", VA = "0xB60B3C")]
	public static float GetFloat(string key, float defaultValue = 0f)
	{
		return default(float);
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0xB60CB0", Offset = "0xB60CB0", VA = "0xB60CB0")]
	public static string GetString(string key, string defaultValue = "")
	{
		return null;
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0xB60E18", Offset = "0xB60E18", VA = "0xB60E18")]
	public BuildPrefs()
	{
	}
}
[Token(Token = "0x2000077")]
public static class CoroutineUtils
{
	[Token(Token = "0x2000300")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5500", Offset = "0x6F5500")]
	private sealed class <DoNextFrame>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action action;

		[Token(Token = "0x17000399")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600159F")]
			[Address(RVA = "0xACF00C", Offset = "0xACF00C", VA = "0xACF00C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015A1")]
			[Address(RVA = "0xACF074", Offset = "0xACF074", VA = "0xACF074", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600159C")]
		[Address(RVA = "0xACEDE8", Offset = "0xACEDE8", VA = "0xACEDE8")]
		[DebuggerHidden]
		public <DoNextFrame>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x600159D")]
		[Address(RVA = "0xACEFB0", Offset = "0xACEFB0", VA = "0xACEFB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600159E")]
		[Address(RVA = "0xACEFB4", Offset = "0xACEFB4", VA = "0xACEFB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015A0")]
		[Address(RVA = "0xACF014", Offset = "0xACF014", VA = "0xACF014", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000301")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5510", Offset = "0x6F5510")]
	private sealed class <DoAfterFrames>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int numFrames;

		[Token(Token = "0x400143A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action action;

		[Token(Token = "0x400143B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <n>5__2;

		[Token(Token = "0x1700039B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60015A5")]
			[Address(RVA = "0xACEF40", Offset = "0xACEF40", VA = "0xACEF40", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015A7")]
			[Address(RVA = "0xACEFA8", Offset = "0xACEFA8", VA = "0xACEFA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015A2")]
		[Address(RVA = "0xACEE94", Offset = "0xACEE94", VA = "0xACEE94")]
		[DebuggerHidden]
		public <DoAfterFrames>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x60015A3")]
		[Address(RVA = "0xACEEC0", Offset = "0xACEEC0", VA = "0xACEEC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015A4")]
		[Address(RVA = "0xACEEC4", Offset = "0xACEEC4", VA = "0xACEEC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015A6")]
		[Address(RVA = "0xACEF48", Offset = "0xACEF48", VA = "0xACEF48", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0xACED78", Offset = "0xACED78", VA = "0xACED78")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FC6C8", Offset = "0x6FC6C8")]
	public static IEnumerator DoNextFrame(Action action)
	{
		return null;
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0xACEE14", Offset = "0xACEE14", VA = "0xACEE14")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FC72C", Offset = "0x6FC72C")]
	public static IEnumerator DoAfterFrames(int numFrames, Action action)
	{
		return null;
	}
}
[Token(Token = "0x2000078")]
public interface IDebugPanelProvider
{
	[Token(Token = "0x600058C")]
	void OnDebugPanel();
}
[Token(Token = "0x2000079")]
public class DebugPanel : MonoBehaviour
{
	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<IDebugPanelProvider> panels;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<string, bool> panelExpandedState;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool panelExpanded;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector2 scrollPosition;

	[Token(Token = "0x600058D")]
	[Address(RVA = "0xAD0ED0", Offset = "0xAD0ED0", VA = "0xAD0ED0")]
	public static string SecondsToString(float seconds)
	{
		return null;
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0xAD106C", Offset = "0xAD106C", VA = "0xAD106C")]
	public DebugPanel()
	{
	}
}
[Token(Token = "0x200007A")]
public class DontDestroyOnLoad : MonoBehaviour
{
	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool dontDestroyOnLoad;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool unique;

	[Token(Token = "0x600058F")]
	[Address(RVA = "0xAD63CC", Offset = "0xAD63CC", VA = "0xAD63CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0xAD65AC", Offset = "0xAD65AC", VA = "0xAD65AC")]
	public DontDestroyOnLoad()
	{
	}
}
[Token(Token = "0x200007B")]
public static class EventUtils
{
	[Token(Token = "0x6000591")]
	[Address(RVA = "0xADC574", Offset = "0xADC574", VA = "0xADC574")]
	public static void Broadcast(string eventName)
	{
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0xADC6A0", Offset = "0xADC6A0", VA = "0xADC6A0")]
	public static void Broadcast(string eventName, object parameter)
	{
	}
}
[Token(Token = "0x200007C")]
public class KeepAnimatorControllerStateOnDisable : MonoBehaviour
{
	[Token(Token = "0x6000593")]
	[Address(RVA = "0xB3C4C0", Offset = "0xB3C4C0", VA = "0xB3C4C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0xB3C570", Offset = "0xB3C570", VA = "0xB3C570")]
	public KeepAnimatorControllerStateOnDisable()
	{
	}
}
[Serializable]
[Token(Token = "0x200007D")]
public class FontGroupMapping
{
	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string languageCode;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Font targetFont;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Font replacementFont;

	[Token(Token = "0x6000595")]
	[Address(RVA = "0xADDA40", Offset = "0xADDA40", VA = "0xADDA40")]
	public FontGroupMapping()
	{
	}
}
[Token(Token = "0x200007E")]
public class LanguageDatabase : ScriptableObjectSingleton<LanguageDatabase>
{
	[Serializable]
	[Token(Token = "0x2000302")]
	public class KeyPair
	{
		[Token(Token = "0x400143C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string key;

		[Token(Token = "0x400143D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string value;

		[Token(Token = "0x60015A8")]
		[Address(RVA = "0xB40AE4", Offset = "0xB40AE4", VA = "0xB40AE4")]
		public KeyPair()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000303")]
	public class Language
	{
		[Token(Token = "0x400143E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string languageCode;

		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyPair[] keyPairs;

		[Token(Token = "0x60015A9")]
		[Address(RVA = "0xB40B3C", Offset = "0xB40B3C", VA = "0xB40B3C")]
		public Language()
		{
		}
	}

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Language[] languages;

	[Token(Token = "0x400034C")]
	public const string englishLanguageCode = "en-US";

	[Token(Token = "0x400034D")]
	public const string japaneseLanguageCode = "ja-JP";

	[Token(Token = "0x400034E")]
	public const string koreanLanguageCode = "ko-KR";

	[Token(Token = "0x400034F")]
	public const string chineseSimpLanguageCode = "kh-CN";

	[Token(Token = "0x4000350")]
	public const string chineseTradLanguageCode1 = "kh-TW";

	[Token(Token = "0x4000351")]
	public const string chineseTradLanguageCode2 = "kh-HK";

	[Token(Token = "0x4000352")]
	public const string defaultLanguageCode = "en-US";

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string currentLanguageCode;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static CultureInfo cultureInfo;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static int currentLanguageIndex;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static bool languageWasSet;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<string, string> lookupDictionary;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<FontGroupMapping> fontGroupMapping;

	[Token(Token = "0x4000359")]
	private const bool testForUnlocalisedStrings = false;

	[Token(Token = "0x400035A")]
	private const string japaneseNonPermittedLineBreakCharactersString = ")]｝〕〉》」』】〙〗〟'\"｠»ヽヾーァィゥェォッャュョヮヵヶぁぃぅぇぉっゃゅょゎゕゖㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ々〻‐゠–〜? ! ‼ ⁇ ⁈ ⁉・、:;,。.！";

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static char[] japaneseNonPermittedLineBreakCharacters;

	[Token(Token = "0x400035C")]
	private const string chineseSimpNonPermittedLineBreakCharactersString = "!%),.:;?]}¢°·'\"†‡›℃∶、。〃〆〕〗〞﹚﹜！＂％＇），．：；？！］｝～";

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static char[] chineseSimpNonPermittedLineBreakCharacters;

	[Token(Token = "0x400035E")]
	private const string chineseTradNonPermittedLineBreakCharactersString = "!),.:;?]}¢·–— '\"• 、。〆〞〕〉》」︰︱︲\ufe33﹐﹑﹒\ufe53﹔﹕﹖﹘﹚﹜！），．：；？︶︸︺︼︾﹀﹂﹗］｜｝";

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static char[] chineseTradNonPermittedLineBreakCharacters;

	[Token(Token = "0x6000596")]
	[Address(RVA = "0xB3EE7C", Offset = "0xB3EE7C", VA = "0xB3EE7C")]
	private void PopulateDictionary()
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0xB3EFE0", Offset = "0xB3EFE0", VA = "0xB3EFE0")]
	public Font ReplaceFont(Font inputFont)
	{
		return null;
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0xB3F190", Offset = "0xB3F190", VA = "0xB3F190")]
	private static void GenerateCultureInfo(string languageCode)
	{
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0xB3F2A0", Offset = "0xB3F2A0", VA = "0xB3F2A0")]
	public static void DebugSetLanguage(SystemLanguage language)
	{
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0xB3F498", Offset = "0xB3F498", VA = "0xB3F498")]
	public static void SetLanguage(string languageCode)
	{
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0xB3F8E0", Offset = "0xB3F8E0", VA = "0xB3F8E0")]
	public static string Get(string key)
	{
		return null;
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0xB3FAEC", Offset = "0xB3FAEC", VA = "0xB3FAEC")]
	public static string DetectLanguageCode()
	{
		return null;
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0xB3FFC0", Offset = "0xB3FFC0", VA = "0xB3FFC0")]
	public static void DetectLanguage()
	{
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0xB40078", Offset = "0xB40078", VA = "0xB40078")]
	public static void SetTextWithFixedLineBreaks(Text textComponent, string text)
	{
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0xB4099C", Offset = "0xB4099C", VA = "0xB4099C")]
	public LanguageDatabase()
	{
	}
}
[Token(Token = "0x200007F")]
public static class ListUtil
{
	[Token(Token = "0x60005A1")]
	public static void CopyContents<T>(List<T> from, ref List<T> to)
	{
	}
}
[Token(Token = "0x2000080")]
public class MeshBatcher : MonoBehaviour
{
	[Token(Token = "0x2000304")]
	private class ThreadState
	{
		[Token(Token = "0x4001440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int state;

		[Token(Token = "0x60015AA")]
		[Address(RVA = "0xB4E894", Offset = "0xB4E894", VA = "0xB4E894")]
		public ThreadState()
		{
		}
	}

	[Token(Token = "0x2000305")]
	public struct InstanceId
	{
		[Token(Token = "0x4001441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int id;

		[Token(Token = "0x4001442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int regionIndex;

		[Token(Token = "0x4001443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Material material;
	}

	[Token(Token = "0x2000306")]
	private abstract class Command
	{
		[Token(Token = "0x60015AB")]
		[Address(RVA = "0xB4E8C0", Offset = "0xB4E8C0", VA = "0xB4E8C0")]
		protected Command()
		{
		}
	}

	[Token(Token = "0x2000307")]
	private class AddCommand : Command
	{
		[Token(Token = "0x4001444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public InstanceId id;

		[Token(Token = "0x4001445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BatchedMeshData mesh;

		[Token(Token = "0x4001446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material material;

		[Token(Token = "0x4001447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 position;

		[Token(Token = "0x4001448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Quaternion rotation;

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0xB4CA18", Offset = "0xB4CA18", VA = "0xB4CA18")]
		public AddCommand(InstanceId id, Mesh mesh, Material material, Vector3 position, Quaternion rotation)
		{
		}
	}

	[Token(Token = "0x2000308")]
	private class RemoveCommand : Command
	{
		[Token(Token = "0x4001449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public InstanceId id;

		[Token(Token = "0x60015AD")]
		[Address(RVA = "0xB4CB38", Offset = "0xB4CB38", VA = "0xB4CB38")]
		public RemoveCommand(InstanceId id)
		{
		}
	}

	[Token(Token = "0x2000309")]
	private class ApplyCommand : Command
	{
		[Token(Token = "0x60015AE")]
		[Address(RVA = "0xB4CB70", Offset = "0xB4CB70", VA = "0xB4CB70")]
		public ApplyCommand()
		{
		}
	}

	[Token(Token = "0x200030A")]
	private class MeshInstance
	{
		[Token(Token = "0x400144A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public InstanceId id;

		[Token(Token = "0x400144B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BatchedMeshData sourceMesh;

		[Token(Token = "0x400144C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 position;

		[Token(Token = "0x400144D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Quaternion rotation;

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0xB4D998", Offset = "0xB4D998", VA = "0xB4D998")]
		public MeshInstance()
		{
		}
	}

	[Token(Token = "0x200030B")]
	private class BatchedMeshData
	{
		[Token(Token = "0x400144E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3[] vertices;

		[Token(Token = "0x400144F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3[] normals;

		[Token(Token = "0x4001450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color32[] colors;

		[Token(Token = "0x4001451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2[] uvs;

		[Token(Token = "0x4001452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int[] triangles;

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0xB4E8C8", Offset = "0xB4E8C8", VA = "0xB4E8C8")]
		public static BatchedMeshData FromMesh(Mesh mesh)
		{
			return null;
		}

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0xB4E98C", Offset = "0xB4E98C", VA = "0xB4E98C")]
		public Mesh GenerateMesh()
		{
			return null;
		}

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0xB4E984", Offset = "0xB4E984", VA = "0xB4E984")]
		public BatchedMeshData()
		{
		}
	}

	[Token(Token = "0x200030C")]
	private class Region
	{
		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int regionIndex;

		[Token(Token = "0x4001454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 basePosition;

		[Token(Token = "0x4001455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material material;

		[Token(Token = "0x4001456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<MeshInstance> instances;

		[Token(Token = "0x4001457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<BatchedMeshData> batchedMeshes;

		[Token(Token = "0x4001458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<GameObject> targetObjects;

		[Token(Token = "0x4001459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool weldVertices;

		[Token(Token = "0x60015B3")]
		[Address(RVA = "0xB4EA44", Offset = "0xB4EA44", VA = "0xB4EA44")]
		public Region(int regionIndex, Vector3 basePosition, Material material, bool weldVertices)
		{
		}

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0xB4EB58", Offset = "0xB4EB58", VA = "0xB4EB58")]
		private int FindIndex(List<Vector3> vertices, List<Vector3> normals, List<Vector2> uvs, List<Color32> colors, Vector3 position, Vector3 normal, Vector2 uv, Color32 color)
		{
			return default(int);
		}

		[Token(Token = "0x60015B5")]
		[Address(RVA = "0xB4DC18", Offset = "0xB4DC18", VA = "0xB4DC18")]
		public void GenerateBatch(LightingParams lightingParams)
		{
		}

		[Token(Token = "0x60015B6")]
		[Address(RVA = "0xB4D0E4", Offset = "0xB4D0E4", VA = "0xB4D0E4")]
		public void UpdateGameObject(GameObject parentObject)
		{
		}
	}

	[Token(Token = "0x200030D")]
	private class RegionMap
	{
		[Token(Token = "0x400145A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Region[] regions;

		[Token(Token = "0x60015B7")]
		[Address(RVA = "0xB4D828", Offset = "0xB4D828", VA = "0xB4D828")]
		public RegionMap(Material material, bool weldVertices)
		{
		}
	}

	[Token(Token = "0x200030E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5520", Offset = "0x6F5520")]
	private sealed class <>c__DisplayClass37_0
	{
		[Token(Token = "0x400145B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public InstanceId id;

		[Token(Token = "0x60015B8")]
		[Address(RVA = "0xB4DB14", Offset = "0xB4DB14", VA = "0xB4DB14")]
		public <>c__DisplayClass37_0()
		{
		}

		[Token(Token = "0x60015B9")]
		[Address(RVA = "0xB4E89C", Offset = "0xB4E89C", VA = "0xB4E89C")]
		internal bool <RemoveInstance>b__0(MeshInstance x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool useAsyncThread;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool weldVertices;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool bakeLighting;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Thread buildThread;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isDirty;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<Material, Material> bakedMaterials;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LightingParams lighting;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ThreadState threadState;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<Command> commandQueue;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int idCounter;

	[Token(Token = "0x400036A")]
	private const int regionSize = 16;

	[Token(Token = "0x400036B")]
	private const int regionsWidth = 2;

	[Token(Token = "0x400036C")]
	private const int regionsHeight = 2;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Dictionary<Material, RegionMap> regionsPerMaterial;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<Region> dirtyRegions;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<Region> updatedRegions;

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0xB4C5B8", Offset = "0xB4C5B8", VA = "0xB4C5B8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0xB4C694", Offset = "0xB4C694", VA = "0xB4C694")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0xB4C760", Offset = "0xB4C760", VA = "0xB4C760")]
	private void Start()
	{
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0xB4C7BC", Offset = "0xB4C7BC", VA = "0xB4C7BC")]
	private void EnqueueCommand(Command cmd)
	{
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0xB4C888", Offset = "0xB4C888", VA = "0xB4C888")]
	private Command DequeueCommand()
	{
		return null;
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0xB4C298", Offset = "0xB4C298", VA = "0xB4C298")]
	public InstanceId Add(Mesh mesh, Material material, Vector3 position, Quaternion rotation)
	{
		return default(InstanceId);
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0xB4CAB8", Offset = "0xB4CAB8", VA = "0xB4CAB8")]
	public void Remove(InstanceId id)
	{
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0xB4C4E4", Offset = "0xB4C4E4", VA = "0xB4C4E4")]
	public void Apply()
	{
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0xB4CB78", Offset = "0xB4CB78", VA = "0xB4CB78")]
	private void Update()
	{
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0xB4C97C", Offset = "0xB4C97C", VA = "0xB4C97C")]
	private int GetRegionIndex(Vector3 position)
	{
		return default(int);
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0xB4D63C", Offset = "0xB4D63C", VA = "0xB4D63C")]
	private void AddInstance(InstanceId id, BatchedMeshData mesh, Material material, Vector3 position, Quaternion rotation)
	{
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0xB4D9A0", Offset = "0xB4D9A0", VA = "0xB4D9A0")]
	private void RemoveInstance(InstanceId id)
	{
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0xB4DB1C", Offset = "0xB4DB1C", VA = "0xB4DB1C")]
	private void RegenerateBatchedMeshes()
	{
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0xB4CD0C", Offset = "0xB4CD0C", VA = "0xB4CD0C")]
	private void ProcessCommand(Command cmd)
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0xB4E674", Offset = "0xB4E674", VA = "0xB4E674")]
	private void BuildAsync()
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0xB4E760", Offset = "0xB4E760", VA = "0xB4E760")]
	public MeshBatcher()
	{
	}
}
[Token(Token = "0x2000081")]
public struct sbyte4
{
	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public sbyte x;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public sbyte y;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	public sbyte z;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
	public sbyte w;

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0x783160", Offset = "0x783160", VA = "0x783160")]
	public sbyte4(Vector3 input)
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0xE10DD4", Offset = "0xE10DD4", VA = "0xE10DD4")]
	public static implicit operator Vector3(sbyte4 input)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x2000082")]
public class MeshBatcherV2 : MonoBehaviour
{
	[Token(Token = "0x200030F")]
	private struct BatchedVertex
	{
		[Token(Token = "0x400145C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float3 pos;

		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public sbyte4 normal;

		[Token(Token = "0x400145E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color32 color;

		[Token(Token = "0x400145F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public half2 uv;
	}

	[Token(Token = "0x2000310")]
	[Flags]
	public enum BatchFlags
	{
		[Token(Token = "0x4001461")]
		None = 0,
		[Token(Token = "0x4001462")]
		BakeLighting = 1,
		[Token(Token = "0x4001463")]
		Greyscale = 2,
		[Token(Token = "0x4001464")]
		StoreHeightInUV = 4
	}

	[Token(Token = "0x2000311")]
	public struct InstanceId
	{
		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int id;

		[Token(Token = "0x1700039D")]
		public bool isValid
		{
			[Token(Token = "0x60015BA")]
			[Address(RVA = "0x7785E0", Offset = "0x7785E0", VA = "0x7785E0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60015BB")]
		[Address(RVA = "0x7785F0", Offset = "0x7785F0", VA = "0x7785F0")]
		public void Invalidate()
		{
		}
	}

	[Token(Token = "0x2000312")]
	private class MeshInstance
	{
		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MeshData sourceData;

		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshData transformedData;

		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 position;

		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 scale;

		[Token(Token = "0x400146A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Quaternion rotation;

		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public MeshGroup meshGroup;

		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int mergeIndex;

		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public BatchFlags flags;

		[Token(Token = "0x60015BC")]
		[Address(RVA = "0xA861E0", Offset = "0xA861E0", VA = "0xA861E0")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60015BD")]
		[Address(RVA = "0xA85FE0", Offset = "0xA85FE0", VA = "0xA85FE0")]
		public MeshInstance()
		{
		}
	}

	[Token(Token = "0x2000313")]
	public class MeshData
	{
		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private NativeArray<BatchedVertex> batchedVertices;

		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private NativeArray<ushort> indexBuffer;

		[Token(Token = "0x1700039E")]
		public int vertexCount
		{
			[Token(Token = "0x60015BE")]
			[Address(RVA = "0xA84CAC", Offset = "0xA84CAC", VA = "0xA84CAC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60015BF")]
		[Address(RVA = "0xA84CB4", Offset = "0xA84CB4", VA = "0xA84CB4")]
		public MeshData()
		{
		}

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0xA84CBC", Offset = "0xA84CBC", VA = "0xA84CBC")]
		public MeshData(MeshData inMesh)
		{
		}

		[Token(Token = "0x60015C1")]
		[Address(RVA = "0xA84D74", Offset = "0xA84D74", VA = "0xA84D74")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60015C2")]
		[Address(RVA = "0xA84E1C", Offset = "0xA84E1C", VA = "0xA84E1C")]
		public void Append(MeshData inMesh)
		{
		}

		[Token(Token = "0x60015C3")]
		[Address(RVA = "0xA84F98", Offset = "0xA84F98", VA = "0xA84F98")]
		public void RemoveRange(int start, int count)
		{
		}

		[Token(Token = "0x60015C4")]
		[Address(RVA = "0xA85118", Offset = "0xA85118", VA = "0xA85118")]
		public MeshData(Mesh inMesh, BatchFlags batchFlags)
		{
		}

		[Token(Token = "0x60015C5")]
		[Address(RVA = "0xA85750", Offset = "0xA85750", VA = "0xA85750")]
		public static MeshData TransformCopy(MeshData inMesh, Quaternion rotation, Vector3 position, Vector3 scale)
		{
			return null;
		}

		[Token(Token = "0x60015C6")]
		[Address(RVA = "0xA85998", Offset = "0xA85998", VA = "0xA85998")]
		public void ApplyGreyscale()
		{
		}

		[Token(Token = "0x60015C7")]
		[Address(RVA = "0xA8599C", Offset = "0xA8599C", VA = "0xA8599C")]
		public void BakeLighting(LightingParams lighting)
		{
		}

		[Token(Token = "0x60015C8")]
		[Address(RVA = "0xA859A0", Offset = "0xA859A0", VA = "0xA859A0")]
		public Mesh ToMesh(Mesh mesh)
		{
			return null;
		}
	}

	[Token(Token = "0x2000314")]
	private class MeshGroup
	{
		[Token(Token = "0x2000429")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5C38", Offset = "0x6F5C38")]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x40019A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MeshInstance meshInstance;

			[Token(Token = "0x600190C")]
			[Address(RVA = "0xA861D8", Offset = "0xA861D8", VA = "0xA861D8")]
			public <>c__DisplayClass16_0()
			{
			}

			[Token(Token = "0x600190D")]
			[Address(RVA = "0xA8647C", Offset = "0xA8647C", VA = "0xA8647C")]
			internal bool <Remove>b__0(MeshInstance x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private MeshGroupCollection collection;

		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9B10", Offset = "0x6F9B10")]
		private GameObject <gameObject>k__BackingField;

		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private MeshFilter meshFilter;

		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MeshData mergedMesh;

		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<MeshInstance> meshInstances;

		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int vertCount;

		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9B20", Offset = "0x6F9B20")]
		private bool <isDirty>k__BackingField;

		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Mesh mesh;

		[Token(Token = "0x1700039F")]
		public GameObject gameObject
		{
			[Token(Token = "0x60015C9")]
			[Address(RVA = "0xA85B04", Offset = "0xA85B04", VA = "0xA85B04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x700870", Offset = "0x700870")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015CA")]
			[Address(RVA = "0xA85B0C", Offset = "0xA85B0C", VA = "0xA85B0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x700880", Offset = "0x700880")]
			private set
			{
			}
		}

		[Token(Token = "0x170003A0")]
		public bool isDirty
		{
			[Token(Token = "0x60015CB")]
			[Address(RVA = "0xA85B14", Offset = "0xA85B14", VA = "0xA85B14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x700890", Offset = "0x700890")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015CC")]
			[Address(RVA = "0xA85B1C", Offset = "0xA85B1C", VA = "0xA85B1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7008A0", Offset = "0x7008A0")]
			private set
			{
			}
		}

		[Token(Token = "0x60015CD")]
		[Address(RVA = "0xA85B28", Offset = "0xA85B28", VA = "0xA85B28")]
		public MeshGroup(MeshGroupCollection collection)
		{
		}

		[Token(Token = "0x60015CE")]
		[Address(RVA = "0xA85E34", Offset = "0xA85E34", VA = "0xA85E34")]
		public MeshInstance Add(MeshData meshData, Vector3 position, Quaternion rotation, Vector3 scale, BatchFlags flags)
		{
			return null;
		}

		[Token(Token = "0x60015CF")]
		[Address(RVA = "0xA85FE8", Offset = "0xA85FE8", VA = "0xA85FE8")]
		public void Remove(MeshInstance meshInstance)
		{
		}

		[Token(Token = "0x60015D0")]
		[Address(RVA = "0xA861F0", Offset = "0xA861F0", VA = "0xA861F0")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60015D1")]
		[Address(RVA = "0xA86304", Offset = "0xA86304", VA = "0xA86304")]
		public void ApplyChanges()
		{
		}
	}

	[Token(Token = "0x2000315")]
	private class MeshGroupCollection
	{
		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9B30", Offset = "0x6F9B30")]
		private MeshBatcherV2 <batcher>k__BackingField;

		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9B40", Offset = "0x6F9B40")]
		private Material <material>k__BackingField;

		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9B50", Offset = "0x6F9B50")]
		private bool <needsBake>k__BackingField;

		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<MeshGroup> groups;

		[Token(Token = "0x170003A1")]
		public MeshBatcherV2 batcher
		{
			[Token(Token = "0x60015D2")]
			[Address(RVA = "0xA8648C", Offset = "0xA8648C", VA = "0xA8648C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7008B0", Offset = "0x7008B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015D3")]
			[Address(RVA = "0xA86494", Offset = "0xA86494", VA = "0xA86494")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7008C0", Offset = "0x7008C0")]
			private set
			{
			}
		}

		[Token(Token = "0x170003A2")]
		public Material material
		{
			[Token(Token = "0x60015D4")]
			[Address(RVA = "0xA8649C", Offset = "0xA8649C", VA = "0xA8649C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7008D0", Offset = "0x7008D0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015D5")]
			[Address(RVA = "0xA864A4", Offset = "0xA864A4", VA = "0xA864A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7008E0", Offset = "0x7008E0")]
			private set
			{
			}
		}

		[Token(Token = "0x170003A3")]
		public bool needsBake
		{
			[Token(Token = "0x60015D6")]
			[Address(RVA = "0xA864AC", Offset = "0xA864AC", VA = "0xA864AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7008F0", Offset = "0x7008F0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015D7")]
			[Address(RVA = "0xA864B4", Offset = "0xA864B4", VA = "0xA864B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x700900", Offset = "0x700900")]
			private set
			{
			}
		}

		[Token(Token = "0x60015D8")]
		[Address(RVA = "0xA864C0", Offset = "0xA864C0", VA = "0xA864C0")]
		public MeshGroupCollection(MeshBatcherV2 batcher, Material material, bool needsBake)
		{
		}

		[Token(Token = "0x60015D9")]
		[Address(RVA = "0xA8655C", Offset = "0xA8655C", VA = "0xA8655C")]
		public MeshInstance Add(MeshData meshData, Vector3 position, Quaternion rotation, Vector3 scale, BatchFlags flags)
		{
			return null;
		}

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0xA86414", Offset = "0xA86414", VA = "0xA86414")]
		public void Remove(MeshGroup group)
		{
		}

		[Token(Token = "0x60015DB")]
		[Address(RVA = "0xA866F4", Offset = "0xA866F4", VA = "0xA866F4")]
		public void ApplyChanges()
		{
		}

		[Token(Token = "0x60015DC")]
		[Address(RVA = "0xA867B8", Offset = "0xA867B8", VA = "0xA867B8")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0xA868AC", Offset = "0xA868AC", VA = "0xA868AC")]
		public void Clear()
		{
		}
	}

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Material, Material> bakedMaterials;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<Mesh, MeshData> meshToMeshData;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<InstanceId, MeshInstance> meshInstances;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<Material, MeshGroupCollection> groupsByMaterial;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int idCounter;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool enableLightBaking;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	private bool isDisposed;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6188", Offset = "0x6F6188")]
	private LightingParams <lighting>k__BackingField;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Action<MeshRenderer> onMeshRendererAdded;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Action<MeshRenderer> onMeshRendererRemoved;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly VertexAttributeDescriptor[] vertexLayout;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<MeshGroup> dirtyMeshGroups;

	[Token(Token = "0x17000138")]
	public LightingParams lighting
	{
		[Token(Token = "0x60005B4")]
		[Address(RVA = "0xB4EE88", Offset = "0xB4EE88", VA = "0xB4EE88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC790", Offset = "0x6FC790")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005B5")]
		[Address(RVA = "0xB4EE90", Offset = "0xB4EE90", VA = "0xB4EE90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC7A0", Offset = "0x6FC7A0")]
		private set
		{
		}
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0xB4EE98", Offset = "0xB4EE98", VA = "0xB4EE98")]
	private void Start()
	{
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0xB3CBA4", Offset = "0xB3CBA4", VA = "0xB3CBA4")]
	public InstanceId Add(Mesh mesh, Material material, Vector3 position, Quaternion rotation, Vector3 scale, BatchFlags flags)
	{
		return default(InstanceId);
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0xB3CFF0", Offset = "0xB3CFF0", VA = "0xB3CFF0")]
	public void Remove(InstanceId id)
	{
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0xB3D8B0", Offset = "0xB3D8B0", VA = "0xB3D8B0")]
	public void ApplyChanges()
	{
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0xB4EEF4", Offset = "0xB4EEF4", VA = "0xB4EEF4")]
	private void Update()
	{
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0xB4EEF8", Offset = "0xB4EEF8", VA = "0xB4EEF8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0xB4F0D8", Offset = "0xB4F0D8", VA = "0xB4F0D8")]
	public MeshRenderer[] GetAllMeshRenderers()
	{
		return null;
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0xB4F128", Offset = "0xB4F128", VA = "0xB4F128")]
	public void Clear()
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0xB4F24C", Offset = "0xB4F24C", VA = "0xB4F24C")]
	public MeshBatcherV2()
	{
	}
}
[Token(Token = "0x2000083")]
public static class QuestValidationHelper
{
	[Token(Token = "0x2000316")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5540", Offset = "0x6F5540")]
	private sealed class <ValidationRoutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string libraryPath;

		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<bool> onResult;

		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string expectedHash;

		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <path>5__2;

		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UnityWebRequest <www>5__3;

		[Token(Token = "0x170003A4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60015E1")]
			[Address(RVA = "0xC1E0F0", Offset = "0xC1E0F0", VA = "0xC1E0F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015E3")]
			[Address(RVA = "0xC1E158", Offset = "0xC1E158", VA = "0xC1E158", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0xC1DB50", Offset = "0xC1DB50", VA = "0xC1DB50")]
		[DebuggerHidden]
		public <ValidationRoutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0xC1DC68", Offset = "0xC1DC68", VA = "0xC1DC68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0xC1DC6C", Offset = "0xC1DC6C", VA = "0xC1DC6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015E2")]
		[Address(RVA = "0xC1E0F8", Offset = "0xC1E0F8", VA = "0xC1E0F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000380")]
	public const string libovrplatformloader_path = "lib/arm64-v8a/libovrplatformloader.so";

	[Token(Token = "0x4000381")]
	public const string libovrplatformloader_hash = "b198ec22ada5021786856970a8bdb5d42c66fb92";

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0xC1DA88", Offset = "0xC1DA88", VA = "0xC1DA88")]
	public static void ValidateFileIntegrity(MonoBehaviour contextObject, string libraryPath, string expectedHash, Action<bool> onResult)
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0xC1DB4C", Offset = "0xC1DB4C", VA = "0xC1DB4C")]
	public static void OpenStorePageAndQuit(string targetAppID)
	{
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0xC1DAC8", Offset = "0xC1DAC8", VA = "0xC1DAC8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FC7B0", Offset = "0x6FC7B0")]
	private static IEnumerator ValidationRoutine(string libraryPath, string expectedHash, Action<bool> onResult)
	{
		return null;
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0xC1DB7C", Offset = "0xC1DB7C", VA = "0xC1DB7C")]
	private static string GetHashString(byte[] hash)
	{
		return null;
	}
}
[Token(Token = "0x2000084")]
public static class RandomUtils
{
	[Token(Token = "0x4000382")]
	public const double MAX_RATIO = 2.3283064370807974E-10;

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0xC1E160", Offset = "0xC1E160", VA = "0xC1E160")]
	public static float Random(uint x, uint y, uint z)
	{
		return default(float);
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0xC1E1FC", Offset = "0xC1E1FC", VA = "0xC1E1FC")]
	public static float ValueAtTile(int x, int y, int z = 0)
	{
		return default(float);
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0xC1C768", Offset = "0xC1C768", VA = "0xC1C768")]
	public static float RangeAtTile(float min, float max, int x, int y, int z = 0)
	{
		return default(float);
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0xC1E200", Offset = "0xC1E200", VA = "0xC1E200")]
	public static int PickAtTile(int count, int x, int y, int z = 0)
	{
		return default(int);
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0xC1C6D8", Offset = "0xC1C6D8", VA = "0xC1C6D8")]
	public static Vector2 InsideUnitCircleAtTile(int x, int y, int z = 0)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0xC1E2B8", Offset = "0xC1E2B8", VA = "0xC1E2B8")]
	public static Vector3 InsideUnitSphereAtTile(int x, int y, int z = 0)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x2000085")]
public static class ScreenCaptureUtil
{
	[Token(Token = "0x60005CA")]
	[Address(RVA = "0xAC0458", Offset = "0xAC0458", VA = "0xAC0458")]
	public static void Capture(int captureWidth = 7680, int captureHeight = 4320)
	{
	}
}
[Token(Token = "0x2000086")]
public abstract class Singleton<T> where T : class, new()
{
	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static T _instance;

	[Token(Token = "0x17000139")]
	public static T instance
	{
		[Token(Token = "0x60005CB")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005CC")]
	protected Singleton()
	{
	}
}
[Token(Token = "0x2000087")]
public abstract class SingletonBehaviour<T> : MonoBehaviour where T : MonoBehaviour
{
	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static T _instance;

	[Token(Token = "0x1700013A")]
	public static T instance
	{
		[Token(Token = "0x60005CE")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700013B")]
	public static bool hasInstance
	{
		[Token(Token = "0x60005CF")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60005D0")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x60005D1")]
	public virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60005D2")]
	protected SingletonBehaviour()
	{
	}
}
[Token(Token = "0x2000088")]
public abstract class ScriptableObjectSingletonBase : ScriptableObject
{
	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static List<Action> loadRoutines;

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0xAC073C", Offset = "0xAC073C", VA = "0xAC073C")]
	public static void LoadAll()
	{
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0xAC0A04", Offset = "0xAC0A04", VA = "0xAC0A04")]
	protected ScriptableObjectSingletonBase()
	{
	}
}
[Token(Token = "0x2000089")]
public abstract class ScriptableObjectSingleton<T> : ScriptableObjectSingletonBase where T : ScriptableObject
{
	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static T _instance;

	[Token(Token = "0x1700013C")]
	public static bool hasInstance
	{
		[Token(Token = "0x60005D6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700013D")]
	public static T instance
	{
		[Token(Token = "0x60005D8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005D7")]
	public static void Load()
	{
	}

	[Token(Token = "0x60005D9")]
	protected ScriptableObjectSingleton()
	{
	}
}
[Token(Token = "0x200008A")]
public abstract class AutoSingletonBehaviour<T> : MonoBehaviour where T : MonoBehaviour
{
	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static T _instance;

	[Token(Token = "0x1700013E")]
	public static T instance
	{
		[Token(Token = "0x60005DB")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700013F")]
	public static bool hasInstance
	{
		[Token(Token = "0x60005DC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60005DD")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x60005DE")]
	public virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60005DF")]
	protected AutoSingletonBehaviour()
	{
	}
}
[Token(Token = "0x200008B")]
public static class UnityExtensions
{
	[Token(Token = "0x60005E1")]
	public static T GetComponentInParentForPrefab<T>(this Component component) where T : Component
	{
		return null;
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0xCB6EA8", Offset = "0xCB6EA8", VA = "0xCB6EA8")]
	public static AnalyticsResult AnalyticsEvent(string eventName)
	{
		return default(AnalyticsResult);
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0xCB6EB0", Offset = "0xCB6EB0", VA = "0xCB6EB0")]
	public static AnalyticsResult AnalyticsEvent(string eventName, Dictionary<string, object> parameters)
	{
		return default(AnalyticsResult);
	}
}
[Token(Token = "0x200008C")]
public class FrontEnd : MonoBehaviour
{
	[Token(Token = "0x2000317")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5550", Offset = "0x6F5550")]
	private sealed class <>c__DisplayClass16_0
	{
		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FrontEnd <>4__this;

		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Player player;

		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<bool> <>9__3;

		[Token(Token = "0x60015E4")]
		[Address(RVA = "0xADE6C0", Offset = "0xADE6C0", VA = "0xADE6C0")]
		public <>c__DisplayClass16_0()
		{
		}

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0xADE6C8", Offset = "0xADE6C8", VA = "0xADE6C8")]
		internal void <Start>b__0()
		{
		}

		[Token(Token = "0x60015E6")]
		[Address(RVA = "0xADE6F4", Offset = "0xADE6F4", VA = "0xADE6F4")]
		internal void <Start>b__1()
		{
		}

		[Token(Token = "0x60015E7")]
		[Address(RVA = "0xADE774", Offset = "0xADE774", VA = "0xADE774")]
		internal void <Start>b__2(SaveSlot slot)
		{
		}

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0xADE8F0", Offset = "0xADE8F0", VA = "0xADE8F0")]
		internal void <Start>b__3(bool result)
		{
		}
	}

	[Token(Token = "0x2000318")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5560", Offset = "0x6F5560")]
	private sealed class <Start>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FrontEnd <>4__this;

		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass16_0 <>8__1;

		[Token(Token = "0x170003A6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60015EC")]
			[Address(RVA = "0xADEFA0", Offset = "0xADEFA0", VA = "0xADEFA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015EE")]
			[Address(RVA = "0xADF008", Offset = "0xADF008", VA = "0xADF008", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0xADDEEC", Offset = "0xADDEEC", VA = "0xADDEEC")]
		[DebuggerHidden]
		public <Start>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x60015EA")]
		[Address(RVA = "0xADE928", Offset = "0xADE928", VA = "0xADE928", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015EB")]
		[Address(RVA = "0xADE92C", Offset = "0xADE92C", VA = "0xADE92C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015ED")]
		[Address(RVA = "0xADEFA8", Offset = "0xADEFA8", VA = "0xADEFA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform rooftopRoot;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject mainMenu;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject continueButton;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject continueButtonShadow;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject loadButton;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject loadButtonShadow;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject debugWarpMenu;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SaveMenu loadMenu;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public SaveMenu newReplaceMenu;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public SimpleShadow simpleShadow;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Light sun;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public MeshRenderer environmentBounds;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioSource ambientAudio;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string newSaveSlotFilename;

	[Token(Token = "0x17000140")]
	private bool shouldShowContinueButton
	{
		[Token(Token = "0x60005E4")]
		[Address(RVA = "0xADDDB8", Offset = "0xADDDB8", VA = "0xADDDB8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0xADDE7C", Offset = "0xADDE7C", VA = "0xADDE7C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FC824", Offset = "0x6FC824")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0xADDF18", Offset = "0xADDF18", VA = "0xADDF18")]
	public void StartGamePressed()
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0xADDF58", Offset = "0xADDF58", VA = "0xADDF58")]
	public void ContinuePressed()
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0xADE148", Offset = "0xADE148", VA = "0xADE148")]
	public void LoadPressed()
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0xADE188", Offset = "0xADE188", VA = "0xADE188")]
	private void Update()
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0xADE230", Offset = "0xADE230", VA = "0xADE230")]
	public void DebugWarp1()
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0xADE3AC", Offset = "0xADE3AC", VA = "0xADE3AC")]
	public void DebugWarp2()
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0xADE448", Offset = "0xADE448", VA = "0xADE448")]
	public void DebugWarp3()
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0xADE4E4", Offset = "0xADE4E4", VA = "0xADE4E4")]
	public void DebugWarp4()
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0xADE580", Offset = "0xADE580", VA = "0xADE580")]
	public void DebugWarp5()
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0xADE61C", Offset = "0xADE61C", VA = "0xADE61C")]
	public void DebugWarp6()
	{
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0xADE6B8", Offset = "0xADE6B8", VA = "0xADE6B8")]
	public FrontEnd()
	{
	}
}
[Token(Token = "0x200008D")]
public class MenuRoom : SingletonBehaviour<MenuRoom>
{
	[Token(Token = "0x2000319")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5570", Offset = "0x6F5570")]
	private sealed class <ReturnToMenuRoomRoutine>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MenuRoom <>4__this;

		[Token(Token = "0x170003A8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60015F2")]
			[Address(RVA = "0xB4BCD4", Offset = "0xB4BCD4", VA = "0xB4BCD4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015F4")]
			[Address(RVA = "0xB4BD3C", Offset = "0xB4BD3C", VA = "0xB4BD3C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015EF")]
		[Address(RVA = "0xB4B1D0", Offset = "0xB4B1D0", VA = "0xB4B1D0")]
		[DebuggerHidden]
		public <ReturnToMenuRoomRoutine>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x60015F0")]
		[Address(RVA = "0xB4B950", Offset = "0xB4B950", VA = "0xB4B950", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015F1")]
		[Address(RVA = "0xB4B954", Offset = "0xB4B954", VA = "0xB4B954", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015F3")]
		[Address(RVA = "0xB4BCDC", Offset = "0xB4BCDC", VA = "0xB4BCDC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cityPrefab;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string cityInfoName;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6198", Offset = "0x6F6198")]
	private City <city>k__BackingField;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform playerTablePosition;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform tableTopRoot;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform tableAdjustmentTransform;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform playerCanvasTargetTransform;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Camera saveGameCaptureCamera;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float sittingThreshold;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float standingThreshold;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float standingTableHeight;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float sittingTableHeight;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float minTableOffset;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float maxTableOffset;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float startingHeightFromHeadsetHeight;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform tableHandleTransform;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform tableGrabTransform;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject tableHeightAdjustHint;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject tableHandle;

	[Token(Token = "0x17000141")]
	public City city
	{
		[Token(Token = "0x60005F1")]
		[Address(RVA = "0xB4A568", Offset = "0xB4A568", VA = "0xB4A568")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC888", Offset = "0x6FC888")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005F2")]
		[Address(RVA = "0xB4A570", Offset = "0xB4A570", VA = "0xB4A570")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC898", Offset = "0x6FC898")]
		private set
		{
		}
	}

	[Token(Token = "0x17000142")]
	private Player player
	{
		[Token(Token = "0x60005F3")]
		[Address(RVA = "0xB4A578", Offset = "0xB4A578", VA = "0xB4A578")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0xB4A5C8", Offset = "0xB4A5C8", VA = "0xB4A5C8")]
	private void Start()
	{
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0xB4A6D8", Offset = "0xB4A6D8", VA = "0xB4A6D8")]
	public void PlacePlayerAtTable()
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0xB4A5CC", Offset = "0xB4A5CC", VA = "0xB4A5CC")]
	private void GenerateCity()
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0xB4ACCC", Offset = "0xB4ACCC", VA = "0xB4ACCC")]
	public void Hide()
	{
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0xB4ACF4", Offset = "0xB4ACF4", VA = "0xB4ACF4")]
	public void Show()
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0xB4AD1C", Offset = "0xB4AD1C", VA = "0xB4AD1C")]
	public bool CanReturnToWorldMap()
	{
		return default(bool);
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0xB4AE94", Offset = "0xB4AE94", VA = "0xB4AE94")]
	public void ReturnToMenuRoom()
	{
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0xB4B000", Offset = "0xB4B000", VA = "0xB4B000")]
	public void ReturnToMenuRoomImmediate()
	{
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0xB4AF90", Offset = "0xB4AF90", VA = "0xB4AF90")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FC8A8", Offset = "0x6FC8A8")]
	private IEnumerator ReturnToMenuRoomRoutine()
	{
		return null;
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0xB4B1FC", Offset = "0xB4B1FC", VA = "0xB4B1FC")]
	public void DebugWarp0()
	{
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0xB4B2E4", Offset = "0xB4B2E4", VA = "0xB4B2E4")]
	public void DebugWarp1()
	{
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0xB4B3D0", Offset = "0xB4B3D0", VA = "0xB4B3D0")]
	public void DebugWarp2()
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0xB4B4BC", Offset = "0xB4B4BC", VA = "0xB4B4BC")]
	public void DebugWarp3()
	{
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0xB4B5A8", Offset = "0xB4B5A8", VA = "0xB4B5A8")]
	public void DebugWarp4()
	{
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0xB4B694", Offset = "0xB4B694", VA = "0xB4B694")]
	public void DebugWarp5()
	{
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0xB4AB44", Offset = "0xB4AB44", VA = "0xB4AB44")]
	public void AdjustTableHeight(float desiredHandleWorldHeight)
	{
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0xB4B780", Offset = "0xB4B780", VA = "0xB4B780")]
	public void Update()
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0xB4B8DC", Offset = "0xB4B8DC", VA = "0xB4B8DC")]
	public MenuRoom()
	{
	}
}
[Token(Token = "0x200008E")]
public class GameEnvironment : SingletonBehaviour<GameEnvironment>
{
	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform playerStartLocation;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform zoomOutLocation;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera saveGameCaptureCamera;

	[Token(Token = "0x6000606")]
	[Address(RVA = "0xADF0A0", Offset = "0xADF0A0", VA = "0xADF0A0")]
	public GameEnvironment()
	{
	}
}
[Token(Token = "0x200008F")]
public class GameQuality : MonoBehaviour
{
	[Token(Token = "0x200031A")]
	public enum Level
	{
		[Token(Token = "0x400148E")]
		Low,
		[Token(Token = "0x400148F")]
		Medium,
		[Token(Token = "0x4001490")]
		High
	}

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Level qualityLevel;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Level qualityInEditor;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float gpuCooldownTime;

	[Token(Token = "0x6000607")]
	[Address(RVA = "0xADF160", Offset = "0xADF160", VA = "0xADF160")]
	private void Start()
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0xADF2D0", Offset = "0xADF2D0", VA = "0xADF2D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0xADF1DC", Offset = "0xADF1DC", VA = "0xADF1DC")]
	private void Apply()
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0xADF3F0", Offset = "0xADF3F0", VA = "0xADF3F0")]
	public GameQuality()
	{
	}
}
[Token(Token = "0x2000090")]
public class GameStateManager : SingletonBehaviour<GameStateManager>, IDebugPanelProvider
{
	[Token(Token = "0x200031B")]
	public enum State
	{
		[Token(Token = "0x4001492")]
		FrontEnd,
		[Token(Token = "0x4001493")]
		InGame,
		[Token(Token = "0x4001494")]
		ControlsSettings,
		[Token(Token = "0x4001495")]
		LoadError,
		[Token(Token = "0x4001496")]
		ChooseSaveSlot,
		[Token(Token = "0x4001497")]
		Transitioning,
		[Token(Token = "0x4001498")]
		EntitlementFail
	}

	[Token(Token = "0x200031C")]
	public delegate void OnGameStateChangedHandler(State oldState, State newState);

	[Token(Token = "0x200031D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5580", Offset = "0x6F5580")]
	private sealed class <StartSingleCityRoutine>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400149A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400149B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameStateManager <>4__this;

		[Token(Token = "0x170003AA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60015FC")]
			[Address(RVA = "0xAE4080", Offset = "0xAE4080", VA = "0xAE4080", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015FE")]
			[Address(RVA = "0xAE40E8", Offset = "0xAE40E8", VA = "0xAE40E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015F9")]
		[Address(RVA = "0xADF780", Offset = "0xADF780", VA = "0xADF780")]
		[DebuggerHidden]
		public <StartSingleCityRoutine>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0xAE3E60", Offset = "0xAE3E60", VA = "0xAE3E60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015FB")]
		[Address(RVA = "0xAE3E64", Offset = "0xAE3E64", VA = "0xAE3E64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0xAE4088", Offset = "0xAE4088", VA = "0xAE4088", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200031E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5590", Offset = "0x6F5590")]
	private sealed class <BlankStartRoutine>d__42 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400149C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400149D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400149E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameStateManager <>4__this;

		[Token(Token = "0x170003AC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001602")]
			[Address(RVA = "0xAE09FC", Offset = "0xAE09FC", VA = "0xAE09FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001604")]
			[Address(RVA = "0xAE0A64", Offset = "0xAE0A64", VA = "0xAE0A64", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015FF")]
		[Address(RVA = "0xADF7AC", Offset = "0xADF7AC", VA = "0xADF7AC")]
		[DebuggerHidden]
		public <BlankStartRoutine>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x6001600")]
		[Address(RVA = "0xAE09A4", Offset = "0xAE09A4", VA = "0xAE09A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001601")]
		[Address(RVA = "0xAE09A8", Offset = "0xAE09A8", VA = "0xAE09A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001603")]
		[Address(RVA = "0xAE0A04", Offset = "0xAE0A04", VA = "0xAE0A04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200031F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F55A0", Offset = "0x6F55A0")]
	private sealed class <StartFrontEndRoutine>d__43 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400149F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameStateManager <>4__this;

		[Token(Token = "0x40014A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool needsFrontEndLoad;

		[Token(Token = "0x40014A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool <showSplashscreens>5__2;

		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		private bool <allowContinue>5__3;

		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private DateTime <splashStartTime>5__4;

		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AsyncOperation <frontEndLoadOperation>5__5;

		[Token(Token = "0x40014A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <lastSaveSlot>5__6;

		[Token(Token = "0x40014A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool <shouldContinue>5__7;

		[Token(Token = "0x170003AE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001608")]
			[Address(RVA = "0xAE3528", Offset = "0xAE3528", VA = "0xAE3528", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600160A")]
			[Address(RVA = "0xAE3590", Offset = "0xAE3590", VA = "0xAE3590", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001605")]
		[Address(RVA = "0xADF7D8", Offset = "0xADF7D8", VA = "0xADF7D8")]
		[DebuggerHidden]
		public <StartFrontEndRoutine>d__43(int <>1__state)
		{
		}

		[Token(Token = "0x6001606")]
		[Address(RVA = "0xAE28D0", Offset = "0xAE28D0", VA = "0xAE28D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001607")]
		[Address(RVA = "0xAE28D4", Offset = "0xAE28D4", VA = "0xAE28D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001609")]
		[Address(RVA = "0xAE3530", Offset = "0xAE3530", VA = "0xAE3530", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000320")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F55B0", Offset = "0x6F55B0")]
	private sealed class <ReturnToMainMenuRoutine>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40014AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40014AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameStateManager <>4__this;

		[Token(Token = "0x170003B0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600160E")]
			[Address(RVA = "0xAE20B0", Offset = "0xAE20B0", VA = "0xAE20B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001610")]
			[Address(RVA = "0xAE2118", Offset = "0xAE2118", VA = "0xAE2118", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600160B")]
		[Address(RVA = "0xADF8B0", Offset = "0xADF8B0", VA = "0xADF8B0")]
		[DebuggerHidden]
		public <ReturnToMainMenuRoutine>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x600160C")]
		[Address(RVA = "0xAE1E9C", Offset = "0xAE1E9C", VA = "0xAE1E9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600160D")]
		[Address(RVA = "0xAE1EA0", Offset = "0xAE1EA0", VA = "0xAE1EA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600160F")]
		[Address(RVA = "0xAE20B8", Offset = "0xAE20B8", VA = "0xAE20B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000321")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F55C0", Offset = "0x6F55C0")]
	private sealed class <StartNewGameWithMenuRoomRoutine>d__47 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40014AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40014AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameStateManager <>4__this;

		[Token(Token = "0x40014AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool skipTutorial;

		[Token(Token = "0x40014B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string saveName;

		[Token(Token = "0x40014B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool <shouldSavePreviousGame>5__2;

		[Token(Token = "0x170003B2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001614")]
			[Address(RVA = "0xAE3918", Offset = "0xAE3918", VA = "0xAE3918", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001616")]
			[Address(RVA = "0xAE3980", Offset = "0xAE3980", VA = "0xAE3980", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001611")]
		[Address(RVA = "0xADF9EC", Offset = "0xADF9EC", VA = "0xADF9EC")]
		[DebuggerHidden]
		public <StartNewGameWithMenuRoomRoutine>d__47(int <>1__state)
		{
		}

		[Token(Token = "0x6001612")]
		[Address(RVA = "0xAE3598", Offset = "0xAE3598", VA = "0xAE3598", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001613")]
		[Address(RVA = "0xAE359C", Offset = "0xAE359C", VA = "0xAE359C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001615")]
		[Address(RVA = "0xAE3920", Offset = "0xAE3920", VA = "0xAE3920", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000322")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F55D0", Offset = "0x6F55D0")]
	private sealed class <StartNewGameWithSingleCityRoutine>d__48 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40014B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40014B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameStateManager <>4__this;

		[Token(Token = "0x40014B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string cityInfoPath;

		[Token(Token = "0x40014B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string saveName;

		[Token(Token = "0x40014B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool <shouldSavePreviousGame>5__2;

		[Token(Token = "0x170003B4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600161A")]
			[Address(RVA = "0xAE3DF0", Offset = "0xAE3DF0", VA = "0xAE3DF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600161C")]
			[Address(RVA = "0xAE3E58", Offset = "0xAE3E58", VA = "0xAE3E58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0xADFA18", Offset = "0xADFA18", VA = "0xADFA18")]
		[DebuggerHidden]
		public <StartNewGameWithSingleCityRoutine>d__48(int <>1__state)
		{
		}

		[Token(Token = "0x6001618")]
		[Address(RVA = "0xAE3988", Offset = "0xAE3988", VA = "0xAE3988", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001619")]
		[Address(RVA = "0xAE398C", Offset = "0xAE398C", VA = "0xAE398C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600161B")]
		[Address(RVA = "0xAE3DF8", Offset = "0xAE3DF8", VA = "0xAE3DF8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000323")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F55E0", Offset = "0x6F55E0")]
	private sealed class <LoadGameWithMenuRoomRoutine>d__50 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40014B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40014BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameStateManager <>4__this;

		[Token(Token = "0x40014BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string saveName;

		[Token(Token = "0x40014BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool tryLoadBackup;

		[Token(Token = "0x40014BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool <shouldSavePreviousGame>5__2;

		[Token(Token = "0x170003B6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001620")]
			[Address(RVA = "0xAE19BC", Offset = "0xAE19BC", VA = "0xAE19BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001622")]
			[Address(RVA = "0xAE1A24", Offset = "0xAE1A24", VA = "0xAE1A24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600161D")]
		[Address(RVA = "0xADFB48", Offset = "0xADFB48", VA = "0xADFB48")]
		[DebuggerHidden]
		public <LoadGameWithMenuRoomRoutine>d__50(int <>1__state)
		{
		}

		[Token(Token = "0x600161E")]
		[Address(RVA = "0xAE12A0", Offset = "0xAE12A0", VA = "0xAE12A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600161F")]
		[Address(RVA = "0xAE12A4", Offset = "0xAE12A4", VA = "0xAE12A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001621")]
		[Address(RVA = "0xAE19C4", Offset = "0xAE19C4", VA = "0xAE19C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000324")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F55F0", Offset = "0x6F55F0")]
	private sealed class <LoadGameWithSingleCityRoutine>d__51 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40014BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40014C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameStateManager <>4__this;

		[Token(Token = "0x40014C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string saveName;

		[Token(Token = "0x40014C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <shouldSavePreviousGame>5__2;

		[Token(Token = "0x170003B8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001626")]
			[Address(RVA = "0xAE1E2C", Offset = "0xAE1E2C", VA = "0xAE1E2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001628")]
			[Address(RVA = "0xAE1E94", Offset = "0xAE1E94", VA = "0xAE1E94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001623")]
		[Address(RVA = "0xADFB74", Offset = "0xADFB74", VA = "0xADFB74")]
		[DebuggerHidden]
		public <LoadGameWithSingleCityRoutine>d__51(int <>1__state)
		{
		}

		[Token(Token = "0x6001624")]
		[Address(RVA = "0xAE1A2C", Offset = "0xAE1A2C", VA = "0xAE1A2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001625")]
		[Address(RVA = "0xAE1A30", Offset = "0xAE1A30", VA = "0xAE1A30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001627")]
		[Address(RVA = "0xAE1E34", Offset = "0xAE1E34", VA = "0xAE1E34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000325")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5600", Offset = "0x6F5600")]
	private sealed class <>c
	{
		[Token(Token = "0x40014C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__57_0;

		[Token(Token = "0x40014C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<bool> <>9__61_0;

		[Token(Token = "0x600162A")]
		[Address(RVA = "0xAE0898", Offset = "0xAE0898", VA = "0xAE0898")]
		public <>c()
		{
		}

		[Token(Token = "0x600162B")]
		[Address(RVA = "0xAE08A0", Offset = "0xAE08A0", VA = "0xAE08A0")]
		internal void <GainedFocus>b__57_0()
		{
		}

		[Token(Token = "0x600162C")]
		[Address(RVA = "0xAE0908", Offset = "0xAE0908", VA = "0xAE0908")]
		internal void <ShowControlsSettingsAndStartNewGameRoutine>b__61_0(bool clickedYes)
		{
		}
	}

	[Token(Token = "0x2000326")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5610", Offset = "0x6F5610")]
	private sealed class <LoadErrorRoutine>d__59 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameStateManager <>4__this;

		[Token(Token = "0x170003BA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001630")]
			[Address(RVA = "0xAE1230", Offset = "0xAE1230", VA = "0xAE1230", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003BB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001632")]
			[Address(RVA = "0xAE1298", Offset = "0xAE1298", VA = "0xAE1298", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600162D")]
		[Address(RVA = "0xADFF60", Offset = "0xADFF60", VA = "0xADFF60")]
		[DebuggerHidden]
		public <LoadErrorRoutine>d__59(int <>1__state)
		{
		}

		[Token(Token = "0x600162E")]
		[Address(RVA = "0xAE0E98", Offset = "0xAE0E98", VA = "0xAE0E98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600162F")]
		[Address(RVA = "0xAE0E9C", Offset = "0xAE0E9C", VA = "0xAE0E9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001631")]
		[Address(RVA = "0xAE1238", Offset = "0xAE1238", VA = "0xAE1238", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000327")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5620", Offset = "0x6F5620")]
	private sealed class <ShowControlsSettingsAndStartNewGameRoutine>d__61 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40014CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40014CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameStateManager <>4__this;

		[Token(Token = "0x40014CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool allowTutorialSkip;

		[Token(Token = "0x170003BC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001636")]
			[Address(RVA = "0xAE2860", Offset = "0xAE2860", VA = "0xAE2860", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003BD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001638")]
			[Address(RVA = "0xAE28C8", Offset = "0xAE28C8", VA = "0xAE28C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001633")]
		[Address(RVA = "0xAE01F8", Offset = "0xAE01F8", VA = "0xAE01F8")]
		[DebuggerHidden]
		public <ShowControlsSettingsAndStartNewGameRoutine>d__61(int <>1__state)
		{
		}

		[Token(Token = "0x6001634")]
		[Address(RVA = "0xAE2120", Offset = "0xAE2120", VA = "0xAE2120", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001635")]
		[Address(RVA = "0xAE2124", Offset = "0xAE2124", VA = "0xAE2124", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001637")]
		[Address(RVA = "0xAE2868", Offset = "0xAE2868", VA = "0xAE2868", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000328")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5630", Offset = "0x6F5630")]
	private sealed class <FailEntitlementCheckRoutine>d__63 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40014CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40014CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameStateManager <>4__this;

		[Token(Token = "0x170003BE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600163C")]
			[Address(RVA = "0xAE0E28", Offset = "0xAE0E28", VA = "0xAE0E28", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003BF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600163E")]
			[Address(RVA = "0xAE0E90", Offset = "0xAE0E90", VA = "0xAE0E90", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001639")]
		[Address(RVA = "0xAE0304", Offset = "0xAE0304", VA = "0xAE0304")]
		[DebuggerHidden]
		public <FailEntitlementCheckRoutine>d__63(int <>1__state)
		{
		}

		[Token(Token = "0x600163A")]
		[Address(RVA = "0xAE0A6C", Offset = "0xAE0A6C", VA = "0xAE0A6C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600163B")]
		[Address(RVA = "0xAE0A70", Offset = "0xAE0A70", VA = "0xAE0A70", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600163D")]
		[Address(RVA = "0xAE0E30", Offset = "0xAE0E30", VA = "0xAE0E30", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OnGameStateChangedHandler onGameStateChanged;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action onNewGameStarted;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Action onGameLoaded;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string mainSceneName;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string frontEndSceneName;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F61A8", Offset = "0x6F61A8")]
	private string <saveSlotName>k__BackingField;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float autoSaveFrequencySeconds;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F61B8", Offset = "0x6F61B8")]
	private float <secondsSinceAutoSave>k__BackingField;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public LoadScreen loadScreen;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool skipSplashScreensInEditor;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool skipAutoLoadInEditor;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	public bool skipStartupSettingsInEditor;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
	public bool skipControlsTutorialInEditor;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public SystemLanguage editorLanguage;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool isReleaseBuild;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F61C8", Offset = "0x6F61C8")]
	private bool <hasInputFocus>k__BackingField;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F61D8", Offset = "0x6F61D8")]
	private bool <failedIntegrityValidation>k__BackingField;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private State _state;

	[Token(Token = "0x17000143")]
	private bool hasAccess
	{
		[Token(Token = "0x600060C")]
		[Address(RVA = "0xADF454", Offset = "0xADF454", VA = "0xADF454")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000144")]
	public string saveSlotName
	{
		[Token(Token = "0x600060E")]
		[Address(RVA = "0xADF460", Offset = "0xADF460", VA = "0xADF460")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC90C", Offset = "0x6FC90C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600060F")]
		[Address(RVA = "0xADF468", Offset = "0xADF468", VA = "0xADF468")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC91C", Offset = "0x6FC91C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000145")]
	public float secondsSinceAutoSave
	{
		[Token(Token = "0x6000610")]
		[Address(RVA = "0xADF470", Offset = "0xADF470", VA = "0xADF470")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC92C", Offset = "0x6FC92C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000611")]
		[Address(RVA = "0xADF478", Offset = "0xADF478", VA = "0xADF478")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC93C", Offset = "0x6FC93C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000146")]
	public bool hasInputFocus
	{
		[Token(Token = "0x6000612")]
		[Address(RVA = "0xADF480", Offset = "0xADF480", VA = "0xADF480")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC94C", Offset = "0x6FC94C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000613")]
		[Address(RVA = "0xADF488", Offset = "0xADF488", VA = "0xADF488")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC95C", Offset = "0x6FC95C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000147")]
	public bool failedIntegrityValidation
	{
		[Token(Token = "0x6000614")]
		[Address(RVA = "0xADF494", Offset = "0xADF494", VA = "0xADF494")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC96C", Offset = "0x6FC96C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000615")]
		[Address(RVA = "0xADF49C", Offset = "0xADF49C", VA = "0xADF49C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FC97C", Offset = "0x6FC97C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000148")]
	public State state
	{
		[Token(Token = "0x6000616")]
		[Address(RVA = "0xADF4A8", Offset = "0xADF4A8", VA = "0xADF4A8")]
		get
		{
			return default(State);
		}
		[Token(Token = "0x6000617")]
		[Address(RVA = "0xADF4B0", Offset = "0xADF4B0", VA = "0xADF4B0")]
		set
		{
		}
	}

	[Token(Token = "0x17000149")]
	public Player player
	{
		[Token(Token = "0x6000618")]
		[Address(RVA = "0xADF4E0", Offset = "0xADF4E0", VA = "0xADF4E0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0xADF45C", Offset = "0xADF45C", VA = "0xADF45C", Slot = "6")]
	public void OnDebugPanel()
	{
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0xADF530", Offset = "0xADF530", VA = "0xADF530")]
	private void Start()
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0xADF61C", Offset = "0xADF61C", VA = "0xADF61C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FC98C", Offset = "0x6FC98C")]
	private IEnumerator StartSingleCityRoutine()
	{
		return null;
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0xADF710", Offset = "0xADF710", VA = "0xADF710")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FC9F0", Offset = "0x6FC9F0")]
	private IEnumerator BlankStartRoutine()
	{
		return null;
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0xADF68C", Offset = "0xADF68C", VA = "0xADF68C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FCA54", Offset = "0x6FCA54")]
	private IEnumerator StartFrontEndRoutine(bool needsFrontEndLoad = false)
	{
		return null;
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0xADF804", Offset = "0xADF804", VA = "0xADF804")]
	public void ReturnToMainMenu()
	{
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0xADF840", Offset = "0xADF840", VA = "0xADF840")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FCAB8", Offset = "0x6FCAB8")]
	private IEnumerator ReturnToMainMenuRoutine()
	{
		return null;
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0xADE2CC", Offset = "0xADE2CC", VA = "0xADE2CC")]
	public void StartNewGame(string saveName, [Optional] string cityInfoPath, bool skipTutorial = false)
	{
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0xADF8DC", Offset = "0xADF8DC", VA = "0xADF8DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FCB1C", Offset = "0x6FCB1C")]
	private IEnumerator StartNewGameWithMenuRoomRoutine(string saveName, bool skipTutorial)
	{
		return null;
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0xADF968", Offset = "0xADF968", VA = "0xADF968")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FCB80", Offset = "0x6FCB80")]
	private IEnumerator StartNewGameWithSingleCityRoutine(string saveName, string cityInfoPath)
	{
		return null;
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0xADDFF8", Offset = "0xADDFF8", VA = "0xADDFF8")]
	public void LoadGame(string saveName)
	{
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0xADFA44", Offset = "0xADFA44", VA = "0xADFA44")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FCBE4", Offset = "0x6FCBE4")]
	private IEnumerator LoadGameWithMenuRoomRoutine(string saveName, bool tryLoadBackup = false)
	{
		return null;
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0xADFACC", Offset = "0xADFACC", VA = "0xADFACC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FCC48", Offset = "0x6FCC48")]
	private IEnumerator LoadGameWithSingleCityRoutine(string saveName)
	{
		return null;
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0xADFBA0", Offset = "0xADFBA0", VA = "0xADFBA0")]
	public void AutoSave()
	{
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0xADFC90", Offset = "0xADFC90", VA = "0xADFC90")]
	public void AutoSaveSynchronous()
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0xADFD34", Offset = "0xADFD34", VA = "0xADFD34")]
	public void ChangeSaveSlot(string newSlotName)
	{
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0xADFD40", Offset = "0xADFD40", VA = "0xADFD40")]
	private void Update()
	{
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0xADFDA0", Offset = "0xADFDA0", VA = "0xADFDA0")]
	private void OnApplicationPause(bool paused)
	{
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0xADFDC0", Offset = "0xADFDC0", VA = "0xADFDC0")]
	private void GainedFocus()
	{
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0xADFEC8", Offset = "0xADFEC8", VA = "0xADFEC8")]
	private void LostFocus()
	{
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0xADFEF0", Offset = "0xADFEF0", VA = "0xADFEF0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FCCAC", Offset = "0x6FCCAC")]
	private IEnumerator LoadErrorRoutine()
	{
		return null;
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0xADFF8C", Offset = "0xADFF8C", VA = "0xADFF8C")]
	private void ChooseSaveSlot()
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0xAE0174", Offset = "0xAE0174", VA = "0xAE0174")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FCD10", Offset = "0x6FCD10")]
	private IEnumerator ShowControlsSettingsAndStartNewGameRoutine(bool allowTutorialSkip)
	{
		return null;
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0xAE0224", Offset = "0xAE0224", VA = "0xAE0224")]
	private void FailEntitlementCheck()
	{
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0xAE0294", Offset = "0xAE0294", VA = "0xAE0294")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FCD74", Offset = "0x6FCD74")]
	private IEnumerator FailEntitlementCheckRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0xAE0330", Offset = "0xAE0330", VA = "0xAE0330")]
	private void FireBootAnalytics()
	{
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0xAE06DC", Offset = "0xAE06DC", VA = "0xAE06DC")]
	public GameStateManager()
	{
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0xAE0764", Offset = "0xAE0764", VA = "0xAE0764")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FCDD8", Offset = "0x6FCDD8")]
	private void <AutoSave>b__52_0(bool result)
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0xAE0770", Offset = "0xAE0770", VA = "0xAE0770")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FCDE8", Offset = "0x6FCDE8")]
	private void <ChooseSaveSlot>b__60_0(SaveSlot slot)
	{
	}
}
[Token(Token = "0x2000091")]
public class LightingParams
{
	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 sunDirection;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color sunColor;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Color groundColor;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Color skyColor;

	[Token(Token = "0x6000635")]
	[Address(RVA = "0xB41930", Offset = "0xB41930", VA = "0xB41930")]
	public LightingParams()
	{
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0xB41B38", Offset = "0xB41B38", VA = "0xB41B38")]
	public Color ApplyLighting(Color baseColor, Vector3 normal, bool inShadow)
	{
		return default(Color);
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0xB41DA0", Offset = "0xB41DA0", VA = "0xB41DA0")]
	public Color ApplyLightingGamma(Color baseColor, Vector3 normal, bool inShadow)
	{
		return default(Color);
	}
}
[Token(Token = "0x2000092")]
public interface ISaveInterface
{
	[Token(Token = "0x1700014A")]
	Type saveModuleDataType
	{
		[Token(Token = "0x6000638")]
		get;
	}

	[Token(Token = "0x6000639")]
	SaveSystem.ModuleData OnSave();

	[Token(Token = "0x600063A")]
	void OnLoad(SaveSystem.SaveGame saveGame, SaveSystem.ModuleData moduleData);
}
[Token(Token = "0x2000093")]
public interface ILoadAsyncInterface
{
	[Token(Token = "0x600063B")]
	IEnumerator OnLoadAsync(SaveSystem.SaveGame saveGame, SaveSystem.ModuleData moduleData);
}
[Token(Token = "0x2000094")]
public class SaveSystem : SingletonBehaviour<SaveSystem>
{
	[Serializable]
	[Token(Token = "0x2000329")]
	public class Metadata
	{
		[Token(Token = "0x40014D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x40014D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int version;

		[Token(Token = "0x40014D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DateTime creationTime;

		[Token(Token = "0x40014D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float percentageComplete;

		[Token(Token = "0x40014D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool usesMenuRoom;

		[Token(Token = "0x600163F")]
		[Address(RVA = "0xABBF0C", Offset = "0xABBF0C", VA = "0xABBF0C")]
		public Metadata()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200032A")]
	public class SaveGame
	{
		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<ModuleData> modules;

		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9B60", Offset = "0x6F9B60")]
		private Metadata <metadata>k__BackingField;

		[Token(Token = "0x170003C0")]
		[XmlIgnore]
		public Metadata metadata
		{
			[Token(Token = "0x6001640")]
			[Address(RVA = "0xABFFB8", Offset = "0xABFFB8", VA = "0xABFFB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x700D70", Offset = "0x700D70")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001641")]
			[Address(RVA = "0xABFFC0", Offset = "0xABFFC0", VA = "0xABFFC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x700D80", Offset = "0x700D80")]
			set
			{
			}
		}

		[Token(Token = "0x6001642")]
		[Address(RVA = "0xABAFA0", Offset = "0xABAFA0", VA = "0xABAFA0")]
		public SaveGame()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200032B")]
	public class ModuleData
	{
		[Token(Token = "0x40014D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x6001643")]
		[Address(RVA = "0xABFD78", Offset = "0xABFD78", VA = "0xABFD78", Slot = "4")]
		public virtual void OnPreWrite()
		{
		}

		[Token(Token = "0x6001644")]
		[Address(RVA = "0xABFD7C", Offset = "0xABFD7C", VA = "0xABFD7C")]
		public static string MapToString(short[] map)
		{
			return null;
		}

		[Token(Token = "0x6001645")]
		[Address(RVA = "0xABFEB0", Offset = "0xABFEB0", VA = "0xABFEB0")]
		public static void StringToMap(string stringData, short[] map)
		{
		}

		[Token(Token = "0x6001646")]
		[Address(RVA = "0xABFFB0", Offset = "0xABFFB0", VA = "0xABFFB0")]
		public ModuleData()
		{
		}
	}

	[Token(Token = "0x200032C")]
	private class SaveParameters
	{
		[Token(Token = "0x40014D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string filename;

		[Token(Token = "0x40014D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Type> moduleDataTypes;

		[Token(Token = "0x40014DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SaveGame saveData;

		[Token(Token = "0x40014DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Metadata metadata;

		[Token(Token = "0x40014DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public byte[] screenshotData;

		[Token(Token = "0x40014DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool result;

		[Token(Token = "0x40014DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public byte[] rawScreenshotData;

		[Token(Token = "0x6001647")]
		[Address(RVA = "0xABC9A4", Offset = "0xABC9A4", VA = "0xABC9A4")]
		public SaveParameters()
		{
		}
	}

	[Token(Token = "0x200032D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5640", Offset = "0x6F5640")]
	private sealed class <>c__DisplayClass29_0
	{
		[Token(Token = "0x40014DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SaveSystem <>4__this;

		[Token(Token = "0x40014E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SaveParameters saveParameters;

		[Token(Token = "0x6001648")]
		[Address(RVA = "0xABE1A4", Offset = "0xABE1A4", VA = "0xABE1A4")]
		public <>c__DisplayClass29_0()
		{
		}

		[Token(Token = "0x6001649")]
		[Address(RVA = "0xABE1AC", Offset = "0xABE1AC", VA = "0xABE1AC")]
		internal void <SaveAsyncRoutine>b__0()
		{
		}
	}

	[Token(Token = "0x200032E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5650", Offset = "0x6F5650")]
	private sealed class <SaveAsyncRoutine>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40014E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40014E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SaveSystem <>4__this;

		[Token(Token = "0x40014E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string filename;

		[Token(Token = "0x40014E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private <>c__DisplayClass29_0 <>8__1;

		[Token(Token = "0x40014E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action<bool> onSaveCompleted;

		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Thread <saveThread>5__2;

		[Token(Token = "0x170003C1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600164D")]
			[Address(RVA = "0xABFD08", Offset = "0xABFD08", VA = "0xABFD08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600164F")]
			[Address(RVA = "0xABFD70", Offset = "0xABFD70", VA = "0xABFD70", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600164A")]
		[Address(RVA = "0xABCA30", Offset = "0xABCA30", VA = "0xABCA30")]
		[DebuggerHidden]
		public <SaveAsyncRoutine>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x600164B")]
		[Address(RVA = "0xABF734", Offset = "0xABF734", VA = "0xABF734", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600164C")]
		[Address(RVA = "0xABF738", Offset = "0xABF738", VA = "0xABF738", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600164E")]
		[Address(RVA = "0xABFD10", Offset = "0xABFD10", VA = "0xABFD10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200032F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5660", Offset = "0x6F5660")]
	private sealed class <>c__DisplayClass39_0
	{
		[Token(Token = "0x40014E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ModuleData data;

		[Token(Token = "0x6001650")]
		[Address(RVA = "0xABE1CC", Offset = "0xABE1CC", VA = "0xABE1CC")]
		public <>c__DisplayClass39_0()
		{
		}

		[Token(Token = "0x6001651")]
		[Address(RVA = "0xABE1D4", Offset = "0xABE1D4", VA = "0xABE1D4")]
		internal bool <LoadRoutine>b__0(ISaveInterface x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000330")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5670", Offset = "0x6F5670")]
	private sealed class <LoadRoutine>d__39 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40014EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SaveSystem <>4__this;

		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string filename;

		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<ISaveInterface> <saveModules>5__2;

		[Token(Token = "0x40014EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SaveGame <saveGame>5__3;

		[Token(Token = "0x40014EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<ModuleData>.Enumerator <>7__wrap3;

		[Token(Token = "0x40014F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ISaveInterface <moduleInterface>5__5;

		[Token(Token = "0x40014F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private IEnumerator <progress>5__6;

		[Token(Token = "0x40014F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool <isLoadingModule>5__7;

		[Token(Token = "0x170003C3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001656")]
			[Address(RVA = "0xABF6C4", Offset = "0xABF6C4", VA = "0xABF6C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001658")]
			[Address(RVA = "0xABF72C", Offset = "0xABF72C", VA = "0xABF72C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001652")]
		[Address(RVA = "0xABD570", Offset = "0xABD570", VA = "0xABD570")]
		[DebuggerHidden]
		public <LoadRoutine>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x6001653")]
		[Address(RVA = "0xABE2DC", Offset = "0xABE2DC", VA = "0xABE2DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001654")]
		[Address(RVA = "0xABE360", Offset = "0xABE360", VA = "0xABE360", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001655")]
		[Address(RVA = "0xABE308", Offset = "0xABE308", VA = "0xABE308")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6001657")]
		[Address(RVA = "0xABF6CC", Offset = "0xABF6CC", VA = "0xABF6CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int maxSlots;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int saveVersion;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int minSupportedVersion;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera captureCamera;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int screenshotWidth;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int screenshotHeight;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Action<Metadata> metadataProvider;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool debugValidateSaveFormat;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F61E8", Offset = "0x6F61E8")]
	private bool <isAsyncSaving>k__BackingField;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<Type> additionalModuleDataTypes;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Dictionary<string, Texture2D> cachedScreenshots;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private HashSet<Type> validatedTypes;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string validationTree;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F61F8", Offset = "0x6F61F8")]
	private bool <wasLoadSuccessful>k__BackingField;

	[Token(Token = "0x1700014B")]
	public bool isAsyncSaving
	{
		[Token(Token = "0x600063C")]
		[Address(RVA = "0xABABD4", Offset = "0xABABD4", VA = "0xABABD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FCDF8", Offset = "0x6FCDF8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600063D")]
		[Address(RVA = "0xABABDC", Offset = "0xABABDC", VA = "0xABABDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FCE08", Offset = "0x6FCE08")]
		private set
		{
		}
	}

	[Token(Token = "0x1700014C")]
	public bool wasLoadSuccessful
	{
		[Token(Token = "0x600064B")]
		[Address(RVA = "0xABD3E4", Offset = "0xABD3E4", VA = "0xABD3E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FCE7C", Offset = "0x6FCE7C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600064C")]
		[Address(RVA = "0xABD3EC", Offset = "0xABD3EC", VA = "0xABD3EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FCE8C", Offset = "0x6FCE8C")]
		private set
		{
		}
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0xABABE8", Offset = "0xABABE8", VA = "0xABABE8")]
	public void AddAdditionalModuleDataType(Type type)
	{
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0xABA4F4", Offset = "0xABA4F4", VA = "0xABA4F4")]
	public static string GetSlotName(int index)
	{
		return null;
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0xABAC80", Offset = "0xABAC80", VA = "0xABAC80")]
	public string[] GetSaveFiles()
	{
		return null;
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0xABACD4", Offset = "0xABACD4", VA = "0xABACD4")]
	private void GenerateSaveGameData(out SaveGame saveGame, out List<Type> moduleDataTypes)
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0xABB010", Offset = "0xABB010", VA = "0xABB010")]
	private void ValidateObject(string path, string name, object obj, int indentation = 0)
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0xABBCA8", Offset = "0xABBCA8", VA = "0xABBCA8")]
	private void ValidateSaveGame(SaveGame saveGame)
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0xABBE44", Offset = "0xABBE44", VA = "0xABBE44")]
	private Metadata GenerateMetadata()
	{
		return null;
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0xABBF14", Offset = "0xABBF14", VA = "0xABBF14")]
	private void SaveToDisk(SaveParameters parameters)
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0xABC8B8", Offset = "0xABC8B8", VA = "0xABC8B8")]
	private SaveParameters GenerateSaveParameters(string filename)
	{
		return null;
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0xABC9AC", Offset = "0xABC9AC", VA = "0xABC9AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FCE18", Offset = "0x6FCE18")]
	private IEnumerator SaveAsyncRoutine(string filename, Action<bool> onSaveCompleted)
	{
		return null;
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0xABCA5C", Offset = "0xABCA5C", VA = "0xABCA5C")]
	public void SaveAsync(string filename, Action<bool> onSaveCompleted)
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0xABCB08", Offset = "0xABCB08", VA = "0xABCB08")]
	public bool Save(string filename)
	{
		return default(bool);
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0xABCD88", Offset = "0xABCD88", VA = "0xABCD88")]
	private Stream LoadStreamFromFile(string filename, string streamName)
	{
		return null;
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0xABD3F8", Offset = "0xABD3F8", VA = "0xABD3F8")]
	public Coroutine LoadAsync(string filename)
	{
		return null;
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0xABD4A0", Offset = "0xABD4A0", VA = "0xABD4A0")]
	private void LogLoadError(string errorMessage)
	{
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0xABD424", Offset = "0xABD424", VA = "0xABD424")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FCE9C", Offset = "0x6FCE9C")]
	private IEnumerator LoadRoutine(string filename)
	{
		return null;
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0xABD59C", Offset = "0xABD59C", VA = "0xABD59C")]
	public bool Load(string filename)
	{
		return default(bool);
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0xABD670", Offset = "0xABD670", VA = "0xABD670")]
	private Metadata LoadMetadataInternal(string filename)
	{
		return null;
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0xAB9C80", Offset = "0xAB9C80", VA = "0xAB9C80")]
	public Metadata LoadMetadata(string filename)
	{
		return null;
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0xABDAF0", Offset = "0xABDAF0", VA = "0xABDAF0")]
	private Camera GetCaptureCamera()
	{
		return null;
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0xABDC4C", Offset = "0xABDC4C", VA = "0xABDC4C")]
	public RenderTexture CaptureScreenshotToRenderTexture()
	{
		return null;
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0xABCB68", Offset = "0xABCB68", VA = "0xABCB68")]
	public byte[] CaptureScreenshot()
	{
		return null;
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0xABDD48", Offset = "0xABDD48", VA = "0xABDD48")]
	private Texture2D LoadScreenshotInternal(string filename)
	{
		return null;
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0xAB9D30", Offset = "0xAB9D30", VA = "0xAB9D30")]
	public Texture2D LoadScreenshot(string filename)
	{
		return null;
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0xABDEB0", Offset = "0xABDEB0", VA = "0xABDEB0")]
	public bool DoesSaveExist(string filename)
	{
		return default(bool);
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0xABDA8C", Offset = "0xABDA8C", VA = "0xABDA8C")]
	public bool DoesBackupExist(string filename)
	{
		return default(bool);
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0xABDEC8", Offset = "0xABDEC8", VA = "0xABDEC8")]
	private bool CanLoadSaveInternal(string filename)
	{
		return default(bool);
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0xAB9BF0", Offset = "0xAB9BF0", VA = "0xAB9BF0")]
	public bool CanLoadSave(string filename)
	{
		return default(bool);
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0xABA8F0", Offset = "0xABA8F0", VA = "0xABA8F0")]
	public void Delete(string filename)
	{
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0xABDA10", Offset = "0xABDA10", VA = "0xABDA10")]
	private string FixupPath(string filename)
	{
		return null;
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0xABDF20", Offset = "0xABDF20", VA = "0xABDF20")]
	public void RestoreFromBackup(string filename)
	{
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0xABE0B0", Offset = "0xABE0B0", VA = "0xABE0B0")]
	public SaveSystem()
	{
	}
}
[Token(Token = "0x2000095")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6F4A4C", Offset = "0x6F4A4C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6F4A4C", Offset = "0x6F4A4C")]
public class TileMap : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000331")]
	public class InitialState
	{
		[Token(Token = "0x40014F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int[] savedVertIndex;

		[Token(Token = "0x40014F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3[] displacement;

		[Token(Token = "0x6001659")]
		[Address(RVA = "0xB288B4", Offset = "0xB288B4", VA = "0xB288B4")]
		public InitialState()
		{
		}
	}

	[Token(Token = "0x2000332")]
	public struct Tile
	{
		[Token(Token = "0x40014F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public byte tileType;

		[Token(Token = "0x40014F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public byte rotation;

		[Token(Token = "0x40014F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Vector3 displacement;

		[Token(Token = "0x40014F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float height;

		[Token(Token = "0x40014F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Color baseColor;

		[Token(Token = "0x40014FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int vertIndex;

		[Token(Token = "0x600165A")]
		[Address(RVA = "0x778A60", Offset = "0x778A60", VA = "0x778A60")]
		public Tile(byte tileType, byte rotation)
		{
		}

		[Token(Token = "0x600165B")]
		[Address(RVA = "0x778A68", Offset = "0x778A68", VA = "0x778A68")]
		public void CopyFrom(Tile other)
		{
		}
	}

	[Token(Token = "0x2000333")]
	public struct BatchedVertex
	{
		[Token(Token = "0x40014FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float3 pos;

		[Token(Token = "0x40014FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public sbyte4 normal;

		[Token(Token = "0x40014FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color32 color;

		[Token(Token = "0x40014FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public half2 uv;
	}

	[Token(Token = "0x2000334")]
	public class State
	{
		[Token(Token = "0x40014FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Tile[] tiles;

		[Token(Token = "0x4001500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NativeArray<BatchedVertex> batchedVertices;

		[Token(Token = "0x4001501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public NativeArray<ushort> indexBuffer;

		[Token(Token = "0x170003C5")]
		public int vertexCount
		{
			[Token(Token = "0x6001668")]
			[Address(RVA = "0xB24C74", Offset = "0xB24C74", VA = "0xB24C74")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600165C")]
		[Address(RVA = "0xB2A0D8", Offset = "0xB2A0D8", VA = "0xB2A0D8")]
		public State()
		{
		}

		[Token(Token = "0x600165D")]
		[Address(RVA = "0xB22FF0", Offset = "0xB22FF0", VA = "0xB22FF0")]
		public State(int mapWidth, int mapHeight)
		{
		}

		[Token(Token = "0x600165E")]
		[Address(RVA = "0xB23130", Offset = "0xB23130", VA = "0xB23130")]
		public State(State other)
		{
		}

		[Token(Token = "0x600165F")]
		[Address(RVA = "0xB227F0", Offset = "0xB227F0", VA = "0xB227F0")]
		public void LoadMeshAsset(Mesh meshAsset)
		{
		}

		[Token(Token = "0x6001660")]
		[Address(RVA = "0xB231B8", Offset = "0xB231B8", VA = "0xB231B8")]
		public void CopyFrom(State other)
		{
		}

		[Token(Token = "0x6001661")]
		[Address(RVA = "0xB28498", Offset = "0xB28498", VA = "0xB28498")]
		public void ApplyToMesh(Mesh mesh)
		{
		}

		[Token(Token = "0x6001662")]
		[Address(RVA = "0xB288F8", Offset = "0xB288F8", VA = "0xB288F8")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001663")]
		[Address(RVA = "0xB270EC", Offset = "0xB270EC", VA = "0xB270EC")]
		public void SetPosition(int index, Vector3 position)
		{
		}

		[Token(Token = "0x6001664")]
		[Address(RVA = "0xB270D0", Offset = "0xB270D0", VA = "0xB270D0")]
		public Vector3 GetPosition(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001665")]
		[Address(RVA = "0xB27A18", Offset = "0xB27A18", VA = "0xB27A18")]
		public void SetNormal(int index, Vector3 normal)
		{
		}

		[Token(Token = "0x6001666")]
		[Address(RVA = "0xB265B0", Offset = "0xB265B0", VA = "0xB265B0")]
		public void SetColor(int index, Color32 color)
		{
		}

		[Token(Token = "0x6001667")]
		[Address(RVA = "0xB28308", Offset = "0xB28308", VA = "0xB28308")]
		public void SetUV(int index, Vector2 uv)
		{
		}

		[Token(Token = "0x6001669")]
		[Address(RVA = "0xB226A0", Offset = "0xB226A0", VA = "0xB226A0")]
		public void Clear()
		{
		}
	}

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tileSize;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int mapWidth;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int mapHeight;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int atlasWidth;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int atlasHeight;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float edgePadding;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool useSmoothBlending;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool useNormalizedTextureCoordinates;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	private bool useDisplacements;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	private bool useSmoothNormals;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool useSmoothishNormals;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	private bool useRandomBaseColor;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SimpleShadow shadowCaster;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public InitialState initialState;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly VertexAttributeDescriptor[] vertexLayout;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private State stateInternal;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private State previewState;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh startingMesh;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Mesh mesh;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float halfTexelSize;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool isMeshDirty;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	private bool inPreviewMode;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7E")]
	private bool showPreviewStateInternal;

	[Token(Token = "0x1700014D")]
	private State state
	{
		[Token(Token = "0x6000660")]
		[Address(RVA = "0xB22100", Offset = "0xB22100", VA = "0xB22100")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700014E")]
	private MeshFilter meshFilter
	{
		[Token(Token = "0x6000661")]
		[Address(RVA = "0xB22398", Offset = "0xB22398", VA = "0xB22398")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700014F")]
	private MeshRenderer meshRenderer
	{
		[Token(Token = "0x6000662")]
		[Address(RVA = "0xB22430", Offset = "0xB22430", VA = "0xB22430")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000150")]
	public bool showPreviewState
	{
		[Token(Token = "0x6000663")]
		[Address(RVA = "0xB224C8", Offset = "0xB224C8", VA = "0xB224C8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000664")]
		[Address(RVA = "0xB224D0", Offset = "0xB224D0", VA = "0xB224D0")]
		set
		{
		}
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0xB224F8", Offset = "0xB224F8", VA = "0xB224F8")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0xB22E18", Offset = "0xB22E18", VA = "0xB22E18")]
	public void Init(int width, int height)
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0xB22144", Offset = "0xB22144", VA = "0xB22144")]
	private void InitStates()
	{
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0xB23160", Offset = "0xB23160", VA = "0xB23160")]
	public void BeginPreviewChanges()
	{
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0xB232FC", Offset = "0xB232FC", VA = "0xB232FC")]
	public void EndPreviewChanges()
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0xB23304", Offset = "0xB23304", VA = "0xB23304")]
	private void GenerateUV(int tileType, out Vector2 ul, out Vector2 ll, out Vector2 lr, out Vector2 ur)
	{
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0xB2342C", Offset = "0xB2342C", VA = "0xB2342C")]
	public void RemoveTileFromMesh(int x, int y)
	{
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0xB238C8", Offset = "0xB238C8", VA = "0xB238C8")]
	public void AddTileToMesh(int x, int y)
	{
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0xB24C7C", Offset = "0xB24C7C", VA = "0xB24C7C")]
	private void GenerateMesh()
	{
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0xB24FD8", Offset = "0xB24FD8", VA = "0xB24FD8")]
	private Vector3 CalculatePosition(int x, int y)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0xB25848", Offset = "0xB25848", VA = "0xB25848")]
	private float CalculateHeight(int x, int y)
	{
		return default(float);
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0xB25CC4", Offset = "0xB25CC4", VA = "0xB25CC4")]
	public Vector3 CalculateNormal(int x, int y)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0xB25FD4", Offset = "0xB25FD4", VA = "0xB25FD4")]
	public Vector3 CalculateNormal(int vertIndex)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0xB26340", Offset = "0xB26340", VA = "0xB26340")]
	public void SetTileColour(int x, int y, Color color)
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0xB265C4", Offset = "0xB265C4", VA = "0xB265C4")]
	public Vector3 GetTileDisplacement(int x, int y)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0xB26658", Offset = "0xB26658", VA = "0xB26658")]
	public void FixupTileDisplacements()
	{
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0xB2716C", Offset = "0xB2716C", VA = "0xB2716C")]
	public void SetTileDisplacement(int x, int y, Vector3 displacement)
	{
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0xB27948", Offset = "0xB27948", VA = "0xB27948")]
	private Vector3 BlendNormal(Vector3 coarse, Vector3 smooth)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0xB27AA4", Offset = "0xB27AA4", VA = "0xB27AA4")]
	public int GetTileType(int x, int y)
	{
		return default(int);
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0xB27B34", Offset = "0xB27B34", VA = "0xB27B34")]
	public int GetTileRotation(int x, int y)
	{
		return default(int);
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0xB27BC4", Offset = "0xB27BC4", VA = "0xB27BC4")]
	private Color GetBlendingColor(int x, int y)
	{
		return default(Color);
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0xB27D80", Offset = "0xB27D80", VA = "0xB27D80")]
	private void UpdateBlendingForTile(int x, int y)
	{
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0xB27F88", Offset = "0xB27F88", VA = "0xB27F88")]
	public void SetTile(int x, int y, int tileType, int rotation)
	{
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0xB28488", Offset = "0xB28488", VA = "0xB28488")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0xB22C5C", Offset = "0xB22C5C", VA = "0xB22C5C")]
	private void ApplyRefresh()
	{
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0xB286C0", Offset = "0xB286C0", VA = "0xB286C0")]
	public void Refresh()
	{
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0xB286CC", Offset = "0xB286CC", VA = "0xB286CC")]
	public void RefreshNow()
	{
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0xB28708", Offset = "0xB28708", VA = "0xB28708")]
	private void StoreInitialState()
	{
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0xB288BC", Offset = "0xB288BC", VA = "0xB288BC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0xB289A0", Offset = "0xB289A0", VA = "0xB289A0")]
	public void Simplify(int chunkSize, bool strict = false)
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0xB29F4C", Offset = "0xB29F4C", VA = "0xB29F4C")]
	public TileMap()
	{
	}
}
[Token(Token = "0x2000096")]
public class TrackedStatsManager : SingletonBehaviour<TrackedStatsManager>, IDebugPanelProvider
{
	[Token(Token = "0x2000335")]
	public class TrackedCounter
	{
		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9B70", Offset = "0x6F9B70")]
		private string <eventName>k__BackingField;

		[Token(Token = "0x4001503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9B80", Offset = "0x6F9B80")]
		private int <granularity>k__BackingField;

		[Token(Token = "0x4001504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9B90", Offset = "0x6F9B90")]
		private int <counter>k__BackingField;

		[Token(Token = "0x4001505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int newCounterValue;

		[Token(Token = "0x170003C6")]
		public string eventName
		{
			[Token(Token = "0x600166F")]
			[Address(RVA = "0xB2D9B4", Offset = "0xB2D9B4", VA = "0xB2D9B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x700E30", Offset = "0x700E30")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001670")]
			[Address(RVA = "0xB2D9BC", Offset = "0xB2D9BC", VA = "0xB2D9BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x700E40", Offset = "0x700E40")]
			private set
			{
			}
		}

		[Token(Token = "0x170003C7")]
		public int granularity
		{
			[Token(Token = "0x6001671")]
			[Address(RVA = "0xB2D9C4", Offset = "0xB2D9C4", VA = "0xB2D9C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x700E50", Offset = "0x700E50")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001672")]
			[Address(RVA = "0xB2D9CC", Offset = "0xB2D9CC", VA = "0xB2D9CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x700E60", Offset = "0x700E60")]
			private set
			{
			}
		}

		[Token(Token = "0x170003C8")]
		public int counter
		{
			[Token(Token = "0x6001673")]
			[Address(RVA = "0xB2D9D4", Offset = "0xB2D9D4", VA = "0xB2D9D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x700E70", Offset = "0x700E70")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001674")]
			[Address(RVA = "0xB2D9DC", Offset = "0xB2D9DC", VA = "0xB2D9DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x700E80", Offset = "0x700E80")]
			private set
			{
			}
		}

		[Token(Token = "0x600166A")]
		[Address(RVA = "0xB2D968", Offset = "0xB2D968", VA = "0xB2D968")]
		public TrackedCounter(string eventName, int granularity = 1)
		{
		}

		[Token(Token = "0x600166B")]
		[Address(RVA = "0xB2D9A4", Offset = "0xB2D9A4", VA = "0xB2D9A4")]
		public void Increment(int amount = 1)
		{
		}

		[Token(Token = "0x600166C")]
		[Address(RVA = "0xB2D0E8", Offset = "0xB2D0E8", VA = "0xB2D0E8")]
		public void Start()
		{
		}

		[Token(Token = "0x600166D")]
		[Address(RVA = "0xB2D3C4", Offset = "0xB2D3C4", VA = "0xB2D3C4")]
		public void Reset()
		{
		}

		[Token(Token = "0x600166E")]
		[Address(RVA = "0xB2D1AC", Offset = "0xB2D1AC", VA = "0xB2D1AC")]
		public void Update()
		{
		}
	}

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TrackedCounter roadTilesBuilt;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TrackedCounter buildingsPlaced;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TrackedCounter buildingsUpgraded;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TrackedCounter buildingsDemolished;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TrackedCounter treesPlanted;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TrackedCounter firesExtinguished;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TrackedCounter hotAirBalloonFlights;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TrackedCounter gliderFlights;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TrackedCounter planesTakenOff;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TrackedCounter boatsDocked;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TrackedCounter volcanoEruptions;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TrackedCounter ufoSighted;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TrackedCounter rocketsLaunched;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TrackedCounter birdsSpooked;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public TrackedCounter policeHelicopterChases;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private List<TrackedCounter> allCounters;

	[Token(Token = "0x6000685")]
	[Address(RVA = "0xB2CF38", Offset = "0xB2CF38", VA = "0xB2CF38")]
	private void Start()
	{
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0xB2D118", Offset = "0xB2D118", VA = "0xB2D118")]
	private void Update()
	{
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0xB2D320", Offset = "0xB2D320", VA = "0xB2D320")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0xB2D3DC", Offset = "0xB2D3DC", VA = "0xB2D3DC", Slot = "6")]
	private void IDebugPanelProvider.OnDebugPanel()
	{
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0xB2D620", Offset = "0xB2D620", VA = "0xB2D620")]
	public TrackedStatsManager()
	{
	}
}
[Token(Token = "0x2000097")]
public class VRUtils : MonoBehaviour
{
	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ovrCameraRigPrefab;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static OVRCameraRig ovrCameraRig;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action onRecentered;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private HashSet<XRInputSubsystem> inputSubsystems;

	[Token(Token = "0x600068A")]
	[Address(RVA = "0xA9E1FC", Offset = "0xA9E1FC", VA = "0xA9E1FC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0xA9E278", Offset = "0xA9E278", VA = "0xA9E278")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0xA9E2F4", Offset = "0xA9E2F4", VA = "0xA9E2F4")]
	private void OnXRDeviceConnected(InputDevice inputDevice)
	{
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0xA9E4AC", Offset = "0xA9E4AC", VA = "0xA9E4AC")]
	private void InitOVRPrefab()
	{
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0xA9E658", Offset = "0xA9E658", VA = "0xA9E658")]
	private void Start()
	{
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0xA9E77C", Offset = "0xA9E77C", VA = "0xA9E77C")]
	private void OnTrackingOriginUpdated(XRInputSubsystem subsystem)
	{
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0xA9E780", Offset = "0xA9E780", VA = "0xA9E780")]
	private void OnRecenteredPose()
	{
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0xA9E7E4", Offset = "0xA9E7E4", VA = "0xA9E7E4")]
	public static void TryRecenter()
	{
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0xA9E924", Offset = "0xA9E924", VA = "0xA9E924")]
	public static bool TryGetHMD(out InputDevice result)
	{
		return default(bool);
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0xA9EA80", Offset = "0xA9EA80", VA = "0xA9EA80")]
	public static bool IsHandTrackingAvailable()
	{
		return default(bool);
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0xA9EA88", Offset = "0xA9EA88", VA = "0xA9EA88")]
	public static bool DoesPlatformSupportHandTracking()
	{
		return default(bool);
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0xA9EA90", Offset = "0xA9EA90", VA = "0xA9EA90")]
	public VRUtils()
	{
	}
}
[Token(Token = "0x2000098")]
public interface IVisualiserTextureProvider
{
	[Token(Token = "0x17000151")]
	Texture2D visualiseTexture
	{
		[Token(Token = "0x6000696")]
		get;
	}

	[Token(Token = "0x17000152")]
	Texture2D secondaryTexture
	{
		[Token(Token = "0x6000697")]
		get;
	}

	[Token(Token = "0x17000153")]
	string name
	{
		[Token(Token = "0x6000698")]
		get;
	}

	[Token(Token = "0x6000699")]
	void RefreshVisualiseTexture();
}
[Token(Token = "0x2000099")]
public class VisualiserManager : SingletonBehaviour<VisualiserManager>, IDebugPanelProvider
{
	[Token(Token = "0x2000336")]
	public enum VisualiserType
	{
		[Token(Token = "0x4001507")]
		None,
		[Token(Token = "0x4001508")]
		Zones,
		[Token(Token = "0x4001509")]
		Power,
		[Token(Token = "0x400150A")]
		Water,
		[Token(Token = "0x400150B")]
		Network,
		[Token(Token = "0x400150C")]
		BuildGrid,
		[Token(Token = "0x400150D")]
		Service,
		[Token(Token = "0x400150E")]
		Debug,
		[Token(Token = "0x400150F")]
		WindPower
	}

	[Serializable]
	[Token(Token = "0x2000337")]
	public class VisualiserData
	{
		[Token(Token = "0x4001510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Material terrainMaterial;

		[Token(Token = "0x4001511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material buildingMaterial;

		[Token(Token = "0x4001512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material roadMaterial;

		[Token(Token = "0x4001513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material bridgeMaterial;

		[Token(Token = "0x4001514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IVisualiserTextureProvider textureProvider;

		[Token(Token = "0x4001515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool showBuildingBadges;

		[Token(Token = "0x6001675")]
		[Address(RVA = "0xAA093C", Offset = "0xAA093C", VA = "0xAA093C")]
		public void Init()
		{
		}

		[Token(Token = "0x6001676")]
		[Address(RVA = "0xAA1EBC", Offset = "0xAA1EBC", VA = "0xAA1EBC")]
		public VisualiserData()
		{
		}
	}

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VisualiserData zones;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VisualiserData power;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VisualiserData windPower;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VisualiserData water;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VisualiserData network;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public VisualiserData buildGrid;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public VisualiserData service;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public VisualiserData debug;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Dictionary<MeshRenderer, Material> rendererOriginalMaterialMap;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Dictionary<KeyValuePair<Material, Material>, Material> modifiedMaterialMap;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private VisualiserType currentVisualiserInternal;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private City city;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<MeshRenderer> terrainRenderers;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<MeshRenderer> buildingRenderers;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<MeshRenderer> roadRenderers;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private List<MeshRenderer> bridgeRenderers;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int buildingLayer;

	[Token(Token = "0x17000154")]
	public VisualiserType currentVisualiser
	{
		[Token(Token = "0x600069A")]
		[Address(RVA = "0xA9EE9C", Offset = "0xA9EE9C", VA = "0xA9EE9C")]
		get
		{
			return default(VisualiserType);
		}
		[Token(Token = "0x600069B")]
		[Address(RVA = "0xA9EEA4", Offset = "0xA9EEA4", VA = "0xA9EEA4")]
		set
		{
		}
	}

	[Token(Token = "0x17000155")]
	public VisualiserData currentVisualiserData
	{
		[Token(Token = "0x600069C")]
		[Address(RVA = "0xA9F6EC", Offset = "0xA9F6EC", VA = "0xA9F6EC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0xA9F6F4", Offset = "0xA9F6F4", VA = "0xA9F6F4")]
	public VisualiserData GetData(VisualiserType type)
	{
		return null;
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0xA9F760", Offset = "0xA9F760", VA = "0xA9F760")]
	public void SetDebugVisualiser(IVisualiserTextureProvider provider)
	{
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0xA9F888", Offset = "0xA9F888", VA = "0xA9F888")]
	private void RegisterTerrainObject(GameObject target, bool useTerrainMaterials)
	{
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0xA9F9C8", Offset = "0xA9F9C8", VA = "0xA9F9C8")]
	private void RegisterRoadObject(GameObject target)
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0xA9FAC8", Offset = "0xA9FAC8", VA = "0xA9FAC8")]
	public void Clear()
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0xA9FDA4", Offset = "0xA9FDA4", VA = "0xA9FDA4")]
	public void RegisterBuilding(GameObject newBuilding)
	{
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0xAA00A0", Offset = "0xAA00A0", VA = "0xAA00A0")]
	public void UnregisterBuilding(GameObject building)
	{
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0xAA01E8", Offset = "0xAA01E8", VA = "0xAA01E8")]
	public void RegisterBridgeRenderer(MeshRenderer bridgeRenderer)
	{
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0xAA05FC", Offset = "0xAA05FC", VA = "0xAA05FC")]
	public void UnregisterBridgeRenderer(MeshRenderer bridgeRenderer)
	{
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0xA9FE98", Offset = "0xA9FE98", VA = "0xA9FE98")]
	public void RegisterBuildingRenderer(MeshRenderer buildingRenderer)
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0xAA0164", Offset = "0xAA0164", VA = "0xAA0164")]
	public void UnregisterBuildingRenderer(MeshRenderer buildingRenderer)
	{
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0xAA0680", Offset = "0xAA0680", VA = "0xAA0680")]
	private void Start()
	{
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0xAA0AEC", Offset = "0xAA0AEC", VA = "0xAA0AEC")]
	public void SetCity(City city)
	{
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0xAA03F0", Offset = "0xAA03F0", VA = "0xAA03F0")]
	private void ApplyToRenderer(MeshRenderer targetRenderer, Material replacementMaterial, Texture2D overlayTexture, Texture2D secondaryTexture, bool replaceMainTexture = false)
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0xA9EEAC", Offset = "0xA9EEAC", VA = "0xA9EEAC")]
	private void ApplyVisualiser()
	{
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0xAA12C0", Offset = "0xAA12C0", VA = "0xAA12C0")]
	private void Update()
	{
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0xAA138C", Offset = "0xAA138C", VA = "0xAA138C", Slot = "6")]
	public void OnDebugPanel()
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0xAA1DA4", Offset = "0xAA1DA4", VA = "0xAA1DA4")]
	public VisualiserManager()
	{
	}
}
[Token(Token = "0x200009A")]
public class CustomLandscape : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000338")]
	public class TileData
	{
		[Token(Token = "0x4001516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int type;

		[Token(Token = "0x4001517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float height;

		[Token(Token = "0x4001518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float borderDistance;

		[Token(Token = "0x4001519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool buildable;

		[Token(Token = "0x400151A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int region;

		[Token(Token = "0x400151B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool hasWater;

		[Token(Token = "0x400151C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool hasSandStorm;

		[Token(Token = "0x400151D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float collisionHeight;

		[Token(Token = "0x6001677")]
		[Address(RVA = "0xACFBFC", Offset = "0xACFBFC", VA = "0xACFBFC")]
		public TileData()
		{
		}
	}

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D inputImage;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TileMap landscapeTileMap;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TileMap waterTileMap;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TileMap shorelineTileMap;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TileMap sandStormTileMap;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public OuterWaterPlane outerWaterPlane;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public CityInfo.Theme theme;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Seaport seaport;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ShippingLanes shippingLanes;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject previewLightingGroup;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform regionUnlockHintTransform;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int textureBakeResolution;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public TileData[] tiles;

	[Token(Token = "0x17000156")]
	public LandscapeProps landscapeProps
	{
		[Token(Token = "0x60006AF")]
		[Address(RVA = "0xACF7C4", Offset = "0xACF7C4", VA = "0xACF7C4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000157")]
	public int mapWidth
	{
		[Token(Token = "0x60006B0")]
		[Address(RVA = "0xACF814", Offset = "0xACF814", VA = "0xACF814")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000158")]
	public int mapHeight
	{
		[Token(Token = "0x60006B1")]
		[Address(RVA = "0xACF830", Offset = "0xACF830", VA = "0xACF830")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0xACF84C", Offset = "0xACF84C", VA = "0xACF84C")]
	public bool IsBuildable(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0xACF8CC", Offset = "0xACF8CC", VA = "0xACF8CC")]
	public Bounds GenerateAboveWaterBounds()
	{
		return default(Bounds);
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0xACFA7C", Offset = "0xACFA7C", VA = "0xACFA7C")]
	public float SampleCollisionHeight(Vector3 worldPosition)
	{
		return default(float);
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0xACFBEC", Offset = "0xACFBEC", VA = "0xACFBEC")]
	public CustomLandscape()
	{
	}
}
[Token(Token = "0x200009B")]
public class CustomLandscapeValues : ScriptableObjectSingleton<CustomLandscapeValues>
{
	[Serializable]
	[Token(Token = "0x2000339")]
	public class TileTypeMetadata
	{
		[Token(Token = "0x400151E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x400151F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color key;

		[Token(Token = "0x4001520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color outputMask;

		[Token(Token = "0x4001521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float gradient;

		[Token(Token = "0x4001522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float targetDepth;

		[Token(Token = "0x4001523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float blendPriority;

		[Token(Token = "0x4001524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool buildable;

		[Token(Token = "0x6001678")]
		[Address(RVA = "0xACFCA8", Offset = "0xACFCA8", VA = "0xACFCA8")]
		public TileTypeMetadata(string name, Color key, Color outputMask, float gradient, float targetDepth, float blendPriority, bool buildable)
		{
		}
	}

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<TileTypeMetadata> tileTypeMetadata;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material complexTerrainMaterial;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material bakedLandscapeBaseMaterial;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float waterClipDepth;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float shorelineCutoff;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float deepWaterCutoff;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float borderDistanceJitter;

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0xACFC04", Offset = "0xACFC04", VA = "0xACFC04")]
	public CustomLandscapeValues()
	{
	}
}
[Token(Token = "0x200009C")]
public class LandscapeFeature : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200033A")]
	public class BlockMap
	{
		[Token(Token = "0x4001525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int x;

		[Token(Token = "0x4001526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int y;

		[Token(Token = "0x4001527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int width;

		[Token(Token = "0x4001528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int height;

		[Token(Token = "0x4001529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool[] blocked;

		[Token(Token = "0x6001679")]
		[Address(RVA = "0xB3DB48", Offset = "0xB3DB48", VA = "0xB3DB48")]
		public bool IsDifferent(BlockMap other)
		{
			return default(bool);
		}

		[Token(Token = "0x600167A")]
		[Address(RVA = "0xB3DC28", Offset = "0xB3DC28", VA = "0xB3DC28")]
		public BlockMap()
		{
		}
	}

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BlockMap blockMap;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool canDemolish;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool useMeshBatcher;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6228", Offset = "0x6F6228")]
	private bool <isDemolished>k__BackingField;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject demolishEffectPrefab;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<GameObject> nonBlockingObjects;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int demolitionCostCached;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshBatcherV2 meshBatcher;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<MeshBatcherV2.InstanceId> batchIds;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private City city;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private BirdPerchPoint[] perchPoints;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private BirdManager.PerchTransform[] perchTransforms;

	[Token(Token = "0x17000159")]
	public bool isDemolished
	{
		[Token(Token = "0x60006B7")]
		[Address(RVA = "0xB3C698", Offset = "0xB3C698", VA = "0xB3C698")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FCF00", Offset = "0x6FCF00")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006B8")]
		[Address(RVA = "0xB3C6A0", Offset = "0xB3C6A0", VA = "0xB3C6A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FCF10", Offset = "0x6FCF10")]
		private set
		{
		}
	}

	[Token(Token = "0x1700015A")]
	public int demolitionCost
	{
		[Token(Token = "0x60006B9")]
		[Address(RVA = "0xB3C6AC", Offset = "0xB3C6AC", VA = "0xB3C6AC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0xB3C740", Offset = "0xB3C740", VA = "0xB3C740")]
	public void Init(City inCity)
	{
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0xB3CA38", Offset = "0xB3CA38", VA = "0xB3CA38")]
	private void EnablePerchPoints()
	{
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0xB3CB00", Offset = "0xB3CB00", VA = "0xB3CB00")]
	private void DisablePerchPoints()
	{
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0xB3C7F8", Offset = "0xB3C7F8", VA = "0xB3C7F8")]
	private void AddToBatcher()
	{
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0xB3CF40", Offset = "0xB3CF40", VA = "0xB3CF40")]
	private void RemoveFromBatcher()
	{
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0xB3D168", Offset = "0xB3D168", VA = "0xB3D168")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0xB3D208", Offset = "0xB3D208", VA = "0xB3D208")]
	public bool IsInBlockMap(int worldX, int worldY)
	{
		return default(bool);
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0xB3D2A4", Offset = "0xB3D2A4", VA = "0xB3D2A4")]
	public bool IsBlocked(int worldX, int worldY)
	{
		return default(bool);
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0xB3D2B8", Offset = "0xB3D2B8", VA = "0xB3D2B8")]
	public Bounds CalculateWorldBounds()
	{
		return default(Bounds);
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0xB3D484", Offset = "0xB3D484", VA = "0xB3D484")]
	public int CountBlockedTiles()
	{
		return default(int);
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0xB3D4F4", Offset = "0xB3D4F4", VA = "0xB3D4F4")]
	public void Demolish(bool playDemolishEffect)
	{
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0xB3D958", Offset = "0xB3D958", VA = "0xB3D958")]
	public void Restore()
	{
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0xB3DAA0", Offset = "0xB3DAA0", VA = "0xB3DAA0")]
	public LandscapeFeature()
	{
	}
}
[Token(Token = "0x200009D")]
public class LandscapeGroundWater : MonoBehaviour
{
	[Token(Token = "0x60006C7")]
	[Address(RVA = "0xB3DC30", Offset = "0xB3DC30", VA = "0xB3DC30")]
	public LandscapeGroundWater()
	{
	}
}
[Token(Token = "0x200009E")]
public class LandscapeProps : MonoBehaviour
{
	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float placementWiggle;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float scaleWiggle;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int layerMask;

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0xB3DC38", Offset = "0xB3DC38", VA = "0xB3DC38")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0xB3DCF8", Offset = "0xB3DCF8", VA = "0xB3DCF8")]
	public void GetPlantingTransform(GameObject propObject, int x, int y, out Vector3 position, out Quaternion rotation, out Vector3 scale)
	{
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0xB3E224", Offset = "0xB3E224", VA = "0xB3E224")]
	public LandscapeProps()
	{
	}
}
[Token(Token = "0x200009F")]
public class LandscapeRandomGenerator : MonoBehaviour
{
	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int width;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int height;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int fillSquareWidth;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int[] map;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int numFilled;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int count;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool reset;

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0xB3E238", Offset = "0xB3E238", VA = "0xB3E238")]
	private void Start()
	{
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0xB3E2AC", Offset = "0xB3E2AC", VA = "0xB3E2AC")]
	private void Clear()
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0xB3E304", Offset = "0xB3E304", VA = "0xB3E304")]
	private void FillCenterSquare()
	{
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0xB3E3C8", Offset = "0xB3E3C8", VA = "0xB3E3C8")]
	private void GenerateTexture()
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0xB3E530", Offset = "0xB3E530", VA = "0xB3E530")]
	private int CountNeighbours(int x, int y)
	{
		return default(int);
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0xB3E63C", Offset = "0xB3E63C", VA = "0xB3E63C")]
	private void Update()
	{
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0xB3E830", Offset = "0xB3E830", VA = "0xB3E830")]
	private void Step(int iterations, float clearance)
	{
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0xB3E708", Offset = "0xB3E708", VA = "0xB3E708")]
	private void RandomFill()
	{
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0xB3E23C", Offset = "0xB3E23C", VA = "0xB3E23C")]
	private void Generate()
	{
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0xB3EAA8", Offset = "0xB3EAA8", VA = "0xB3EAA8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0xB3EBE4", Offset = "0xB3EBE4", VA = "0xB3EBE4")]
	public LandscapeRandomGenerator()
	{
	}
}
[Token(Token = "0x20000A0")]
public class LandscapeRegions : MonoBehaviour
{
	[Token(Token = "0x60006D6")]
	[Address(RVA = "0xB3EBFC", Offset = "0xB3EBFC", VA = "0xB3EBFC")]
	public LandscapeRegions()
	{
	}
}
[Token(Token = "0x20000A1")]
public class LandscapeRoadTile : MonoBehaviour
{
	[Token(Token = "0x60006D7")]
	[Address(RVA = "0xB3EC04", Offset = "0xB3EC04", VA = "0xB3EC04")]
	public void Start()
	{
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0xB3ECB0", Offset = "0xB3ECB0", VA = "0xB3ECB0")]
	public void GetTileLocation(City city, out int tileX, out int tileY)
	{
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0xB3ED2C", Offset = "0xB3ED2C", VA = "0xB3ED2C")]
	public void GetTileLocation(City city, out int tileX, out int tileY, out int facingDirection)
	{
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0xB3EE6C", Offset = "0xB3EE6C", VA = "0xB3EE6C")]
	public LandscapeRoadTile()
	{
	}
}
[Token(Token = "0x20000A2")]
public class LandscapeSandStorm : MonoBehaviour
{
	[Token(Token = "0x60006DB")]
	[Address(RVA = "0xB3EE74", Offset = "0xB3EE74", VA = "0xB3EE74")]
	public LandscapeSandStorm()
	{
	}
}
[Token(Token = "0x20000A3")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6F4AD8", Offset = "0x6F4AD8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6F4AD8", Offset = "0x6F4AD8")]
public class OuterWaterPlane : MonoBehaviour
{
	[Token(Token = "0x200033B")]
	private delegate Vector3 VertexPositioner(int x, int y);

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int innerMapWidth;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int innerMapHeight;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int outerMapWidth;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int outerMapHeight;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int outerAmount;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float scale;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float waterDepth;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float firstScale;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int resolution;

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0xC5260C", Offset = "0xC5260C", VA = "0xC5260C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0xC528A0", Offset = "0xC528A0", VA = "0xC528A0")]
	private void AddSide(List<Vector3> vertices, List<Color> colors, List<int> triangles, VertexPositioner positioner)
	{
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0xC52F6C", Offset = "0xC52F6C", VA = "0xC52F6C")]
	private void AddCorner(List<Vector3> vertices, List<int> triangles, Vector3 basePosition)
	{
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0xC52610", Offset = "0xC52610", VA = "0xC52610")]
	public void GenerateMesh()
	{
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0xC53184", Offset = "0xC53184", VA = "0xC53184")]
	public OuterWaterPlane()
	{
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0xC531B8", Offset = "0xC531B8", VA = "0xC531B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FCF20", Offset = "0x6FCF20")]
	private Vector3 <GenerateMesh>b__13_0(int x, int y)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0xC53200", Offset = "0xC53200", VA = "0xC53200")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FCF30", Offset = "0x6FCF30")]
	private Vector3 <GenerateMesh>b__13_1(int x, int y)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0xC53254", Offset = "0xC53254", VA = "0xC53254")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FCF40", Offset = "0x6FCF40")]
	private Vector3 <GenerateMesh>b__13_2(int x, int y)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0xC532B0", Offset = "0xC532B0", VA = "0xC532B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FCF50", Offset = "0x6FCF50")]
	private Vector3 <GenerateMesh>b__13_3(int x, int y)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x20000A4")]
public class PropCollection : ScriptableObject
{
	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CityInfo.Theme theme;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<PropInfo> prefabs;

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0xC18C7C", Offset = "0xC18C7C", VA = "0xC18C7C")]
	public PropCollection()
	{
	}
}
[Token(Token = "0x20000A5")]
public class PropDatabase : ScriptableObjectSingleton<PropDatabase>
{
	[Token(Token = "0x200033C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5680", Offset = "0x6F5680")]
	private sealed class <>c__DisplayClass2_0
	{
		[Token(Token = "0x400152A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PropInfo info;

		[Token(Token = "0x600167F")]
		[Address(RVA = "0xC18E18", Offset = "0xC18E18", VA = "0xC18E18")]
		public <>c__DisplayClass2_0()
		{
		}

		[Token(Token = "0x6001680")]
		[Address(RVA = "0xC18E90", Offset = "0xC18E90", VA = "0xC18E90")]
		internal bool <GetIndex>b__0(PropInfo x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<PropInfo> allProps;

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0xC18C84", Offset = "0xC18C84", VA = "0xC18C84")]
	public PropInfo GetFromIndex(int index)
	{
		return null;
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0xC18D0C", Offset = "0xC18D0C", VA = "0xC18D0C")]
	public int GetIndex(PropInfo info)
	{
		return default(int);
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0xC18E20", Offset = "0xC18E20", VA = "0xC18E20")]
	public PropDatabase()
	{
	}
}
[Token(Token = "0x20000A6")]
public class PropInfo : MonoBehaviour
{
	[Token(Token = "0x200033D")]
	public enum Category
	{
		[Token(Token = "0x400152C")]
		Tree,
		[Token(Token = "0x400152D")]
		Rock,
		[Token(Token = "0x400152E")]
		Bush,
		[Token(Token = "0x400152F")]
		Grass,
		[Token(Token = "0x4001530")]
		PalmTree,
		[Token(Token = "0x4001531")]
		Cactus
	}

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CityInfo.Theme theme;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Category category;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int width;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int height;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool canBulldoze;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int demolitionCost;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int buildCost;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int sandStormReductionRadius;

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0xC18F5C", Offset = "0xC18F5C", VA = "0xC18F5C")]
	public PropInfo()
	{
	}
}
[Token(Token = "0x20000A7")]
public class Seaport : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200033E")]
	public class Space
	{
		[Token(Token = "0x200042A")]
		public enum Type
		{
			[Token(Token = "0x40019A5")]
			CargoShip,
			[Token(Token = "0x40019A6")]
			SmallFerry,
			[Token(Token = "0x40019A7")]
			LargeFerry,
			[Token(Token = "0x40019A8")]
			SmallBoat
		}

		[Token(Token = "0x4001532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Type type;

		[Token(Token = "0x4001533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationClip enterClip;

		[Token(Token = "0x4001534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationClip exitClip;

		[Token(Token = "0x6001681")]
		[Address(RVA = "0xAC4624", Offset = "0xAC4624", VA = "0xAC4624")]
		public Space()
		{
		}
	}

	[Token(Token = "0x200033F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5690", Offset = "0x6F5690")]
	private sealed class <ShowRoutine>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Seaport <>4__this;

		[Token(Token = "0x4001538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Bounds <bounds>5__2;

		[Token(Token = "0x4001539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private DynamicShadowBounds <dsb>5__3;

		[Token(Token = "0x170003C9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001685")]
			[Address(RVA = "0xAC45B4", Offset = "0xAC45B4", VA = "0xAC45B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003CA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001687")]
			[Address(RVA = "0xAC461C", Offset = "0xAC461C", VA = "0xAC461C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001682")]
		[Address(RVA = "0xAC3D88", Offset = "0xAC3D88", VA = "0xAC3D88")]
		[DebuggerHidden]
		public <ShowRoutine>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6001683")]
		[Address(RVA = "0xAC3FC8", Offset = "0xAC3FC8", VA = "0xAC3FC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001684")]
		[Address(RVA = "0xAC3FCC", Offset = "0xAC3FCC", VA = "0xAC3FCC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001686")]
		[Address(RVA = "0xAC45BC", Offset = "0xAC45BC", VA = "0xAC45BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LandscapeRoadTile exitRoadTile;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LandscapeRoadTile adjacentRoadTile;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform entryTransform;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform exitTransform;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ParticleSystem appearanceEffect;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip appearanceSound;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int width;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int height;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Space[] spaces;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform tutorialTextFocusTransform;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6238", Offset = "0x6F6238")]
	private bool <isVisible>k__BackingField;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private City city;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int exitTileX;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int exitTileY;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int exitTileDir;

	[Token(Token = "0x1700015B")]
	public bool isVisible
	{
		[Token(Token = "0x60006EA")]
		[Address(RVA = "0xAC37D0", Offset = "0xAC37D0", VA = "0xAC37D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FCF60", Offset = "0x6FCF60")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006EB")]
		[Address(RVA = "0xAC37D8", Offset = "0xAC37D8", VA = "0xAC37D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FCF70", Offset = "0x6FCF70")]
		private set
		{
		}
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0xAC37E4", Offset = "0xAC37E4", VA = "0xAC37E4")]
	public void GetSeaportExitLocation(City city, out int exitX, out int exitY, out int exitDir)
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0xAC3880", Offset = "0xAC3880", VA = "0xAC3880")]
	public void Init(City inCity)
	{
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0xAC3888", Offset = "0xAC3888", VA = "0xAC3888")]
	public void VisitTiles(Action<int, int> visitor)
	{
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0xAC3B10", Offset = "0xAC3B10", VA = "0xAC3B10")]
	public void Hide()
	{
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0xAC3BBC", Offset = "0xAC3BBC", VA = "0xAC3BBC")]
	private void EnableBirdPerches()
	{
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0xAC3C7C", Offset = "0xAC3C7C", VA = "0xAC3C7C")]
	public void ShowWithAnimation()
	{
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0xAC3D18", Offset = "0xAC3D18", VA = "0xAC3D18")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FCF80", Offset = "0x6FCF80")]
	private IEnumerator ShowRoutine()
	{
		return null;
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0xAC3DB4", Offset = "0xAC3DB4", VA = "0xAC3DB4")]
	public void ShowImmediate()
	{
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0xAC3F8C", Offset = "0xAC3F8C", VA = "0xAC3F8C")]
	public void Reset()
	{
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0xAC3FB0", Offset = "0xAC3FB0", VA = "0xAC3FB0")]
	public Seaport()
	{
	}
}
[Token(Token = "0x20000A8")]
public class ShippingLanes : MonoBehaviour
{
	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Vector3> entryLaneNodes;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Vector3> exitLaneNodes;

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0xA6DC7C", Offset = "0xA6DC7C", VA = "0xA6DC7C")]
	public Vector3 CalculateCenter()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0xA6DDE4", Offset = "0xA6DDE4", VA = "0xA6DDE4")]
	public ShippingLanes()
	{
	}
}
[Token(Token = "0x20000A9")]
public class ThermalVent : MonoBehaviour
{
	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem steam;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject hintArrow;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshBatcherV2 batcher;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MeshBatcherV2.InstanceId batchId;

	[Token(Token = "0x1700015C")]
	public int x
	{
		[Token(Token = "0x60006F8")]
		[Address(RVA = "0xB21794", Offset = "0xB21794", VA = "0xB21794")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700015D")]
	public int y
	{
		[Token(Token = "0x60006F9")]
		[Address(RVA = "0xB21824", Offset = "0xB21824", VA = "0xB21824")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700015E")]
	public bool showHintArrow
	{
		[Token(Token = "0x60006FA")]
		[Address(RVA = "0xB218B4", Offset = "0xB218B4", VA = "0xB218B4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006FB")]
		[Address(RVA = "0xB218D0", Offset = "0xB218D0", VA = "0xB218D0")]
		set
		{
		}
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0xB218F0", Offset = "0xB218F0", VA = "0xB218F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0xB2192C", Offset = "0xB2192C", VA = "0xB2192C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0xB21A30", Offset = "0xB21A30", VA = "0xB21A30")]
	public void Init(MeshBatcherV2 inMeshBatcher)
	{
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0xB21AAC", Offset = "0xB21AAC", VA = "0xB21AAC")]
	private void AddToBatcher()
	{
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0xB219C4", Offset = "0xB219C4", VA = "0xB219C4")]
	private void RemoveFromBatcher()
	{
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0xB21C90", Offset = "0xB21C90", VA = "0xB21C90")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0xB21D44", Offset = "0xB21D44", VA = "0xB21D44")]
	public void Show()
	{
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0xB21DF8", Offset = "0xB21DF8", VA = "0xB21DF8")]
	public ThermalVent()
	{
	}
}
[Token(Token = "0x20000AA")]
public class Volcano : MonoBehaviour, IDebugPanelProvider
{
	[Token(Token = "0x2000340")]
	public class VolcanoSaveData
	{
		[Token(Token = "0x400153A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float eruptionTime;

		[Token(Token = "0x400153B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float timeUntilNextEruption;

		[Token(Token = "0x400153C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool erupting;

		[Token(Token = "0x400153D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float timeUntilChunkLaunches;

		[Token(Token = "0x400153E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int eruptionsOccurred;

		[Token(Token = "0x400153F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int activeLavaIndex;

		[Token(Token = "0x6001688")]
		[Address(RVA = "0xAA3C84", Offset = "0xAA3C84", VA = "0xAA3C84")]
		public VolcanoSaveData()
		{
		}
	}

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float eruptionDuration;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float flowStartTime;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float flowDuration;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float damageTime;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float eruptionEffectStartTime;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float lavaFadeTime;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float chunkLaunchRadius;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int chunkLaunchesPerEruption;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int minEruptionDelayMinutes;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int maxEruptionDelayMinutes;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int minEruptionSpacingMinutes;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int maxEruptionSpacingMinutes;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject steamEffect;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject smokeEffect;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject eruptionEffect;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioSource soundEffect;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioSource lavaSoundEffect;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioSource hissSoundEffect;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<VolcanoLava> volcanoLavas;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int activeLavaIndex;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform chunkLaunchTransform;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public FlyingVolcanoChunk flyingVolcanoChunkPrefab;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int eruptionsOccurred;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6248", Offset = "0x6F6248")]
	private bool <erupting>k__BackingField;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float eruptionTime;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6258", Offset = "0x6F6258")]
	private float <timeUntilNextEruption>k__BackingField;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float timeUntilSoundPlays;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float timeUntilChunkLaunches;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private City city;

	[Token(Token = "0x4000481")]
	private const float minSoundDelay = 1f;

	[Token(Token = "0x4000482")]
	private const float maxSoundDelay = 3f;

	[Token(Token = "0x1700015F")]
	private VolcanoLava lava
	{
		[Token(Token = "0x6000704")]
		[Address(RVA = "0xAA2500", Offset = "0xAA2500", VA = "0xAA2500")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000160")]
	public bool erupting
	{
		[Token(Token = "0x6000705")]
		[Address(RVA = "0xAA2570", Offset = "0xAA2570", VA = "0xAA2570")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FCFE4", Offset = "0x6FCFE4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000706")]
		[Address(RVA = "0xAA2578", Offset = "0xAA2578", VA = "0xAA2578")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FCFF4", Offset = "0x6FCFF4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000161")]
	public float timeUntilNextEruption
	{
		[Token(Token = "0x6000707")]
		[Address(RVA = "0xAA2584", Offset = "0xAA2584", VA = "0xAA2584")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD004", Offset = "0x6FD004")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000708")]
		[Address(RVA = "0xAA258C", Offset = "0xAA258C", VA = "0xAA258C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD014", Offset = "0x6FD014")]
		private set
		{
		}
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0xAA2594", Offset = "0xAA2594", VA = "0xAA2594")]
	private void Start()
	{
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0xAA27D4", Offset = "0xAA27D4", VA = "0xAA27D4")]
	public void Init(City inCity)
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0xAA26D4", Offset = "0xAA26D4", VA = "0xAA26D4")]
	private void SetEffectsEnabled(GameObject obj, bool enabled)
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0xAA27DC", Offset = "0xAA27DC", VA = "0xAA27DC")]
	public void Erupt()
	{
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0xAA29E8", Offset = "0xAA29E8", VA = "0xAA29E8")]
	private void VisitDamagePoints(Action<int, int> action)
	{
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0xAA2CEC", Offset = "0xAA2CEC", VA = "0xAA2CEC")]
	private void ApplyDamage()
	{
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0xAA2D68", Offset = "0xAA2D68", VA = "0xAA2D68")]
	private void UnblockRoads()
	{
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0xAA2DE4", Offset = "0xAA2DE4", VA = "0xAA2DE4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0xAA31DC", Offset = "0xAA31DC", VA = "0xAA31DC")]
	private void LaunchChunk()
	{
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0xAA36A4", Offset = "0xAA36A4", VA = "0xAA36A4", Slot = "4")]
	public void OnDebugPanel()
	{
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0xAA3BEC", Offset = "0xAA3BEC", VA = "0xAA3BEC")]
	public VolcanoSaveData OnSave()
	{
		return null;
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0xAA3C8C", Offset = "0xAA3C8C", VA = "0xAA3C8C")]
	public void OnLoad(VolcanoSaveData saveData)
	{
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0xAA3AA0", Offset = "0xAA3AA0", VA = "0xAA3AA0")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0xAA3E40", Offset = "0xAA3E40", VA = "0xAA3E40")]
	public Volcano()
	{
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0xAA3EE4", Offset = "0xAA3EE4", VA = "0xAA3EE4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD024", Offset = "0x6FD024")]
	private void <ApplyDamage>b__44_0(int i, int j)
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0xAA3FB4", Offset = "0xAA3FB4", VA = "0xAA3FB4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD034", Offset = "0x6FD034")]
	private void <UnblockRoads>b__45_0(int i, int j)
	{
	}
}
[Token(Token = "0x20000AB")]
public class VolcanoLava : MonoBehaviour
{
	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Vector3> damagePoints;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float damagePointRadius;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer lavaEffect;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material lavaEffectMaterial;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int opacityId;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int flowAmountId;

	[Token(Token = "0x17000162")]
	public float opacity
	{
		[Token(Token = "0x6000719")]
		[Address(RVA = "0xAA3680", Offset = "0xAA3680", VA = "0xAA3680")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600071A")]
		[Address(RVA = "0xAA29A0", Offset = "0xAA29A0", VA = "0xAA29A0")]
		set
		{
		}
	}

	[Token(Token = "0x17000163")]
	public float flowAmount
	{
		[Token(Token = "0x600071B")]
		[Address(RVA = "0xAA40FC", Offset = "0xAA40FC", VA = "0xAA40FC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600071C")]
		[Address(RVA = "0xAA29C4", Offset = "0xAA29C4", VA = "0xAA29C4")]
		set
		{
		}
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0xAA4120", Offset = "0xAA4120", VA = "0xAA4120")]
	private void Awake()
	{
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0xAA421C", Offset = "0xAA421C", VA = "0xAA421C")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0xAA423C", Offset = "0xAA423C", VA = "0xAA423C")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0xAA425C", Offset = "0xAA425C", VA = "0xAA425C")]
	public VolcanoLava()
	{
	}
}
[Token(Token = "0x20000AC")]
public class BoatRescueStory : MiniStory
{
	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject sinkingBoatPrefab;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject sinkingBoat;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private EmergencyIncidentManager.Incident incident;

	[Token(Token = "0x17000164")]
	public override bool canActivate
	{
		[Token(Token = "0x6000721")]
		[Address(RVA = "0xB5B4F8", Offset = "0xB5B4F8", VA = "0xB5B4F8", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0xB5B500", Offset = "0xB5B500", VA = "0xB5B500", Slot = "9")]
	public override void OnInit()
	{
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0xB5B5AC", Offset = "0xB5B5AC", VA = "0xB5B5AC", Slot = "8")]
	public override void Cancel()
	{
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0xB5B5D4", Offset = "0xB5B5D4", VA = "0xB5B5D4", Slot = "7")]
	public override bool Activate()
	{
		return default(bool);
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0xB5BA44", Offset = "0xB5BA44", VA = "0xB5BA44", Slot = "10")]
	public override void Simulate(float deltaTime)
	{
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0xB5BBD0", Offset = "0xB5BBD0", VA = "0xB5BBD0")]
	public BoatRescueStory()
	{
	}
}
[Token(Token = "0x20000AD")]
public class DolphinStory : MiniStory
{
	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Dolphin dolphinPrefab;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int dolphinCount;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float minimumDisplayTime;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float maxActiveTime;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ShipInfo targetShip;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<Dolphin> dolphins;

	[Token(Token = "0x17000165")]
	public override float timeBetweenReactivation
	{
		[Token(Token = "0x6000727")]
		[Address(RVA = "0xAD5B88", Offset = "0xAD5B88", VA = "0xAD5B88", Slot = "6")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000166")]
	public override bool canActivate
	{
		[Token(Token = "0x6000728")]
		[Address(RVA = "0xAD5B94", Offset = "0xAD5B94", VA = "0xAD5B94", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0xAD5B9C", Offset = "0xAD5B9C", VA = "0xAD5B9C", Slot = "7")]
	public override bool Activate()
	{
		return default(bool);
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0xAD5FE4", Offset = "0xAD5FE4", VA = "0xAD5FE4", Slot = "8")]
	public override void Cancel()
	{
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0xAD5BD8", Offset = "0xAD5BD8", VA = "0xAD5BD8")]
	private bool ActivateInternal()
	{
		return default(bool);
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0xAD612C", Offset = "0xAD612C", VA = "0xAD612C", Slot = "10")]
	public override void Simulate(float deltaTime)
	{
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0xAD6348", Offset = "0xAD6348", VA = "0xAD6348")]
	public DolphinStory()
	{
	}
}
[Token(Token = "0x20000AE")]
public class HangGliderLaunchPosition : MonoBehaviour
{
	[Token(Token = "0x600072E")]
	[Address(RVA = "0xB15E08", Offset = "0xB15E08", VA = "0xB15E08")]
	private void Awake()
	{
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0xB15EB4", Offset = "0xB15EB4", VA = "0xB15EB4")]
	public HangGliderLaunchPosition()
	{
	}
}
[Token(Token = "0x20000AF")]
public class HangGliderStory : MiniStory
{
	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<HangGlider> gliderPrefabs;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int minGliders;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int maxGliders;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float maxTimeActive;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private HangGliderLaunchPosition[] launchPositions;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<HangGlider> gliders;

	[Token(Token = "0x17000167")]
	public override bool canActivate
	{
		[Token(Token = "0x6000730")]
		[Address(RVA = "0xB15EBC", Offset = "0xB15EBC", VA = "0xB15EBC", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0xB15EF4", Offset = "0xB15EF4", VA = "0xB15EF4", Slot = "9")]
	public override void OnInit()
	{
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0xB15F64", Offset = "0xB15F64", VA = "0xB15F64", Slot = "8")]
	public override void Cancel()
	{
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0xB160AC", Offset = "0xB160AC", VA = "0xB160AC", Slot = "7")]
	public override bool Activate()
	{
		return default(bool);
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0xB165AC", Offset = "0xB165AC", VA = "0xB165AC", Slot = "10")]
	public override void Simulate(float deltaTime)
	{
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0xB166F4", Offset = "0xB166F4", VA = "0xB166F4")]
	public HangGliderStory()
	{
	}
}
[Token(Token = "0x20000B0")]
public class HotAirBalloonStory : MiniStory
{
	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<HotAirBalloon> balloonPrefabs;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float totalStoryTime;

	[Token(Token = "0x400049A")]
	private const int minBalloons = 3;

	[Token(Token = "0x400049B")]
	private const int maxBalloons = 5;

	[Token(Token = "0x400049C")]
	private const int maxSpawnLocations = 5;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] spawnLocations;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6268", Offset = "0x6F6268")]
	private List<HotAirBalloon> <balloons>k__BackingField;

	[Token(Token = "0x17000168")]
	public override bool canActivate
	{
		[Token(Token = "0x6000736")]
		[Address(RVA = "0xB1D858", Offset = "0xB1D858", VA = "0xB1D858", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000169")]
	public override bool shouldSuppressPlaneSpawning
	{
		[Token(Token = "0x6000737")]
		[Address(RVA = "0xB1D88C", Offset = "0xB1D88C", VA = "0xB1D88C", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700016A")]
	public List<HotAirBalloon> balloons
	{
		[Token(Token = "0x6000738")]
		[Address(RVA = "0xB1D894", Offset = "0xB1D894", VA = "0xB1D894")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD044", Offset = "0x6FD044")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000739")]
		[Address(RVA = "0xB1D89C", Offset = "0xB1D89C", VA = "0xB1D89C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD054", Offset = "0x6FD054")]
		private set
		{
		}
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0xB1D8A4", Offset = "0xB1D8A4", VA = "0xB1D8A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0xB1D90C", Offset = "0xB1D90C", VA = "0xB1D90C", Slot = "8")]
	public override void Cancel()
	{
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0xB1DA54", Offset = "0xB1DA54", VA = "0xB1DA54", Slot = "7")]
	public override bool Activate()
	{
		return default(bool);
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0xB1DE80", Offset = "0xB1DE80", VA = "0xB1DE80", Slot = "10")]
	public override void Simulate(float deltaTime)
	{
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0xB1DFFC", Offset = "0xB1DFFC", VA = "0xB1DFFC")]
	public HotAirBalloonStory()
	{
	}
}
[Token(Token = "0x20000B1")]
public class MiniStoriesDebugPanel : MonoBehaviour
{
	[Token(Token = "0x2000341")]
	private class ButtonDetails
	{
		[Token(Token = "0x4001540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject gameObject;

		[Token(Token = "0x4001541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text text;

		[Token(Token = "0x4001542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MiniStory miniStory;

		[Token(Token = "0x4001543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Button button;

		[Token(Token = "0x6001689")]
		[Address(RVA = "0xA8CD90", Offset = "0xA8CD90", VA = "0xA8CD90")]
		public void OnClick()
		{
		}

		[Token(Token = "0x600168A")]
		[Address(RVA = "0xA8CCC8", Offset = "0xA8CCC8", VA = "0xA8CCC8")]
		public ButtonDetails()
		{
		}
	}

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<ButtonDetails> buttons;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text statusText;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject buttonPrefab;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform buttonRoot;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float buttonSpacing;

	[Token(Token = "0x600073F")]
	[Address(RVA = "0xA8C3A8", Offset = "0xA8C3A8", VA = "0xA8C3A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0xA8CD18", Offset = "0xA8CD18", VA = "0xA8CD18")]
	public MiniStoriesDebugPanel()
	{
	}
}
[Token(Token = "0x20000B2")]
public class MountainRescuePosition : MonoBehaviour
{
	[Token(Token = "0x6000741")]
	[Address(RVA = "0xA920F0", Offset = "0xA920F0", VA = "0xA920F0")]
	public MountainRescuePosition()
	{
	}
}
[Token(Token = "0x20000B3")]
public class RocketLaunchStory : MiniStory
{
	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public BuildingInfo launchSitePrefab;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RocketLaunchSite cachedLaunchSite;

	[Token(Token = "0x1700016B")]
	public override bool shouldSuppressPlaneSpawning
	{
		[Token(Token = "0x6000742")]
		[Address(RVA = "0xAB536C", Offset = "0xAB536C", VA = "0xAB536C", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700016C")]
	public override bool canActivate
	{
		[Token(Token = "0x6000743")]
		[Address(RVA = "0xAB5374", Offset = "0xAB5374", VA = "0xAB5374", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700016D")]
	private RocketLaunchSite launchSite
	{
		[Token(Token = "0x6000744")]
		[Address(RVA = "0xAB537C", Offset = "0xAB537C", VA = "0xAB537C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0xAB5534", Offset = "0xAB5534", VA = "0xAB5534", Slot = "8")]
	public override void Cancel()
	{
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0xAB5538", Offset = "0xAB5538", VA = "0xAB5538", Slot = "7")]
	public override bool Activate()
	{
		return default(bool);
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0xAB564C", Offset = "0xAB564C", VA = "0xAB564C", Slot = "10")]
	public override void Simulate(float deltaTime)
	{
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0xAB5700", Offset = "0xAB5700", VA = "0xAB5700")]
	public RocketLaunchStory()
	{
	}
}
[Token(Token = "0x20000B4")]
public class SkySignStory : MiniStory
{
	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<SkySignPlane> skySignPlanePrefabs;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SkySignPlane skySignPlane;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float flightHeight;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool debugDisableStory;

	[Token(Token = "0x40004AA")]
	private const int numSignTexts = 31;

	[Token(Token = "0x1700016E")]
	public override bool canActivate
	{
		[Token(Token = "0x6000749")]
		[Address(RVA = "0xA72AD0", Offset = "0xA72AD0", VA = "0xA72AD0", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0xA72B04", Offset = "0xA72B04", VA = "0xA72B04", Slot = "7")]
	public override bool Activate()
	{
		return default(bool);
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0xA72E98", Offset = "0xA72E98", VA = "0xA72E98", Slot = "8")]
	public override void Cancel()
	{
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0xA72F5C", Offset = "0xA72F5C", VA = "0xA72F5C", Slot = "10")]
	public override void Simulate(float deltaTime)
	{
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0xA731B4", Offset = "0xA731B4", VA = "0xA731B4")]
	public SkySignStory()
	{
	}
}
[Token(Token = "0x20000B5")]
public class UFOStory : MiniStory
{
	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject ufoPrefab;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float flightHeight;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float flightSpeed;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float rotationSpeed;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float tiltAngle;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject ufo;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 travelDirection;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private GazeTimer gazeTimer;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool playerSightedUFO;

	[Token(Token = "0x1700016F")]
	public override bool canActivate
	{
		[Token(Token = "0x600074E")]
		[Address(RVA = "0xCAEE74", Offset = "0xCAEE74", VA = "0xCAEE74", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0xCAEEA8", Offset = "0xCAEEA8", VA = "0xCAEEA8", Slot = "7")]
	public override bool Activate()
	{
		return default(bool);
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0xCAF1CC", Offset = "0xCAF1CC", VA = "0xCAF1CC", Slot = "8")]
	public override void Cancel()
	{
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0xCAF278", Offset = "0xCAF278", VA = "0xCAF278", Slot = "10")]
	public override void Simulate(float deltaTime)
	{
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0xCAF644", Offset = "0xCAF644", VA = "0xCAF644")]
	public UFOStory()
	{
	}
}
[Token(Token = "0x20000B6")]
public class WhaleStory : MiniStory
{
	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject whalePrefab;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int timesToShow;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float durationBetweenShow;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject whaleGroup;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<Whale> whales;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int showCount;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float showTimer;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 basePosition;

	[Token(Token = "0x17000170")]
	public override bool canActivate
	{
		[Token(Token = "0x6000753")]
		[Address(RVA = "0xAA6ABC", Offset = "0xAA6ABC", VA = "0xAA6ABC", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000171")]
	public override float timeBetweenReactivation
	{
		[Token(Token = "0x6000754")]
		[Address(RVA = "0xAA6AC4", Offset = "0xAA6AC4", VA = "0xAA6AC4", Slot = "6")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0xAA6AD0", Offset = "0xAA6AD0", VA = "0xAA6AD0", Slot = "9")]
	public override void OnInit()
	{
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0xAA6B98", Offset = "0xAA6B98", VA = "0xAA6B98", Slot = "8")]
	public override void Cancel()
	{
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0xAA6CA4", Offset = "0xAA6CA4", VA = "0xAA6CA4", Slot = "7")]
	public override bool Activate()
	{
		return default(bool);
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0xAA6F4C", Offset = "0xAA6F4C", VA = "0xAA6F4C")]
	private void ShowWhales()
	{
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0xAA7010", Offset = "0xAA7010", VA = "0xAA7010", Slot = "10")]
	public override void Simulate(float deltaTime)
	{
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0xAA72BC", Offset = "0xAA72BC", VA = "0xAA72BC")]
	public WhaleStory()
	{
	}
}
[Token(Token = "0x20000B7")]
public class ConstructionCost
{
	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public BuildingInfo buildingToConstruct;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int buildingToConstructX;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int buildingToConstructY;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BuildingManager.BuildPlacementQueryResult buildingPlacementQueryResult;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int buildCost;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int upgradeCost;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int demolitionCost;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int deforestationCost;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int refundAmount;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int regionUnlockCost;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<BuildingInstance> buildingsToDemolish;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public HashSet<int> regionsToUnlock;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool showTip;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool cannotBuildHere;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	public bool showRegionsCannotBeUnlockedMessage;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Vector3 tipLocation;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool[] propsToDemolish;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<LandscapeFeature> landscapeFeaturesToDemolish;

	[Token(Token = "0x17000172")]
	public int totalCost
	{
		[Token(Token = "0x600075B")]
		[Address(RVA = "0xC140D8", Offset = "0xC140D8", VA = "0xC140D8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0xC140FC", Offset = "0xC140FC", VA = "0xC140FC")]
	public void Reset(City city)
	{
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0xC1427C", Offset = "0xC1427C", VA = "0xC1427C")]
	public void AddBuildingToDemolish(BuildingInstance building)
	{
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0xC14474", Offset = "0xC14474", VA = "0xC14474")]
	public ConstructionCost()
	{
	}
}
[Token(Token = "0x20000B8")]
public class DebugStats : MonoBehaviour
{
	[Token(Token = "0x600075F")]
	[Address(RVA = "0xAD1104", Offset = "0xAD1104", VA = "0xAD1104")]
	public DebugStats()
	{
	}
}
[Token(Token = "0x20000B9")]
public struct GazeTimer
{
	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float timeGazingAtPoint;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float timeFocusingAtPoint;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float timeNotLookingAtPoint;

	[Token(Token = "0x6000760")]
	[Address(RVA = "0x778A34", Offset = "0x778A34", VA = "0x778A34")]
	public void Update(Vector3 point, float deltaTime)
	{
	}
}
[Token(Token = "0x20000BA")]
public class Debug3DOFInput : Motion3DOFInput
{
	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject controllerPrefab;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float zoomSpeed;

	[Token(Token = "0x40004D3")]
	private const float mouseSpeed = 10f;

	[Token(Token = "0x40004D4")]
	private const float rollSpeed = 45f;

	[Token(Token = "0x40004D5")]
	private const float maxPitch = 90f;

	[Token(Token = "0x40004D6")]
	private const float maxYaw = 180f;

	[Token(Token = "0x40004D7")]
	private const float cameraLag = 0.8f;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float controllerRoll;

	[Token(Token = "0x17000173")]
	public override bool isAvailable
	{
		[Token(Token = "0x6000761")]
		[Address(RVA = "0xACFD5C", Offset = "0xACFD5C", VA = "0xACFD5C", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000174")]
	public override bool isLeftHanded
	{
		[Token(Token = "0x6000762")]
		[Address(RVA = "0xACFDE0", Offset = "0xACFDE0", VA = "0xACFDE0", Slot = "19")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000175")]
	public override int priority
	{
		[Token(Token = "0x6000763")]
		[Address(RVA = "0xACFDE8", Offset = "0xACFDE8", VA = "0xACFDE8", Slot = "9")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0xACFDF0", Offset = "0xACFDF0", VA = "0xACFDF0", Slot = "17")]
	public override GameObject GetControllerMesh()
	{
		return null;
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0xACFDF8", Offset = "0xACFDF8", VA = "0xACFDF8", Slot = "18")]
	public override Quaternion GetControllerRotation()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0xACFE24", Offset = "0xACFE24", VA = "0xACFE24", Slot = "7")]
	public override void UpdateInputInternal()
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0xAD0044", Offset = "0xAD0044", VA = "0xAD0044")]
	public Debug3DOFInput()
	{
	}
}
[Token(Token = "0x20000BB")]
public abstract class Motion3DOFInput : MotionInput
{
	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject zoomIndicatorPrefab;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector3 zoomIndicatorOffset;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Vector3 elbowOffsetVector;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float forearmLength;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float maxElbowRotationAngle;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float elbowRotationBuffer;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float pitchAdjustment;

	[Token(Token = "0x40004E0")]
	private const float zoomTwistAngle = 10f;

	[Token(Token = "0x40004E1")]
	private const float zoomTwistStep = 0.1f;

	[Token(Token = "0x40004E2")]
	private const float twistStep = 1f;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float cumulativeTwist;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float queuedZoom;

	[Token(Token = "0x40004E5")]
	private const float zoomSpeed = 50f;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected GameObject controllerMesh;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool wasGrabMoving;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	private bool hasTriggeredTwistZoom;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Quaternion initalGrabMoveRotation;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Quaternion lastGrabMoveRotation;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private LineRenderer guideLineRenderer;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ZoomIndicator zoomIndicator;

	[Token(Token = "0x17000176")]
	public abstract bool isLeftHanded
	{
		[Token(Token = "0x600076A")]
		get;
	}

	[Token(Token = "0x6000768")]
	public abstract GameObject GetControllerMesh();

	[Token(Token = "0x6000769")]
	public abstract Quaternion GetControllerRotation();

	[Token(Token = "0x600076B")]
	[Address(RVA = "0xA8EE54", Offset = "0xA8EE54", VA = "0xA8EE54", Slot = "16")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0xA8F31C", Offset = "0xA8F31C", VA = "0xA8F31C")]
	private float GetTwist(Quaternion prevRotation, Quaternion nextRotation)
	{
		return default(float);
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0xA8F490", Offset = "0xA8F490", VA = "0xA8F490", Slot = "7")]
	public override void UpdateInputInternal()
	{
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0xA8F78C", Offset = "0xA8F78C", VA = "0xA8F78C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0xA90514", Offset = "0xA90514", VA = "0xA90514", Slot = "4")]
	public override bool GetCursorRay(out Ray cursorRay)
	{
		return default(bool);
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0xA90AEC", Offset = "0xA90AEC", VA = "0xA90AEC")]
	private float CurveFunction(float x)
	{
		return default(float);
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0xA90AF4", Offset = "0xA90AF4", VA = "0xA90AF4")]
	public Quaternion GenerateFacingRotation(Quaternion hmdRotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0xA90E9C", Offset = "0xA90E9C", VA = "0xA90E9C", Slot = "20")]
	public virtual Vector3 GeneratePosition(Vector3 hmdPosition, Quaternion hmdRotation, Quaternion controllerRotation)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0xA910B8", Offset = "0xA910B8", VA = "0xA910B8")]
	protected Motion3DOFInput()
	{
	}
}
[Token(Token = "0x20000BC")]
public abstract class Motion6DOFInput : MotionInput
{
	[Token(Token = "0x2000342")]
	public enum Hand
	{
		[Token(Token = "0x4001545")]
		Left,
		[Token(Token = "0x4001546")]
		Right
	}

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected LineRenderer leftGuideLine;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected LineRenderer rightGuideLine;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected TransformStabiliser leftTransformStabiliser;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected TransformStabiliser rightTransformStabiliser;

	[Token(Token = "0x17000177")]
	public override bool usesPositionalTracking
	{
		[Token(Token = "0x6000778")]
		[Address(RVA = "0xA91168", Offset = "0xA91168", VA = "0xA91168", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000178")]
	public override bool hasSecondaryInput
	{
		[Token(Token = "0x6000779")]
		[Address(RVA = "0xA91170", Offset = "0xA91170", VA = "0xA91170", Slot = "10")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000179")]
	public Hand dominantHand
	{
		[Token(Token = "0x600077A")]
		[Address(RVA = "0xA91178", Offset = "0xA91178", VA = "0xA91178")]
		get
		{
			return default(Hand);
		}
	}

	[Token(Token = "0x1700017A")]
	public Hand nonDominantHand
	{
		[Token(Token = "0x600077B")]
		[Address(RVA = "0xA911A0", Offset = "0xA911A0", VA = "0xA911A0")]
		get
		{
			return default(Hand);
		}
	}

	[Token(Token = "0x6000774")]
	public abstract GameObject GetControllerMesh(Hand hand);

	[Token(Token = "0x6000775")]
	public abstract Vector3 GetControllerPosition(Hand hand);

	[Token(Token = "0x6000776")]
	public abstract Quaternion GetControllerRotation(Hand hand);

	[Token(Token = "0x6000777")]
	public abstract PlayerInput.Button GetButtonState(Hand hand);

	[Token(Token = "0x600077C")]
	[Address(RVA = "0xA911C4", Offset = "0xA911C4", VA = "0xA911C4", Slot = "16")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0xA91238", Offset = "0xA91238", VA = "0xA91238", Slot = "21")]
	public virtual bool IsControllerConnected(Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0xA91240", Offset = "0xA91240", VA = "0xA91240", Slot = "7")]
	public override void UpdateInputInternal()
	{
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0xA912E0", Offset = "0xA912E0", VA = "0xA912E0")]
	private void UpdateGuideLine(LineRenderer lr, Hand hand)
	{
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0xA91364", Offset = "0xA91364", VA = "0xA91364", Slot = "6")]
	public override bool GetMenuTransform(out Transform menuTransform, bool useDominantHand = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0xA91490", Offset = "0xA91490", VA = "0xA91490", Slot = "22")]
	protected virtual void UpdateUITransforms()
	{
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0xA91518", Offset = "0xA91518", VA = "0xA91518", Slot = "23")]
	protected virtual void LateUpdate()
	{
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0xA91BB8", Offset = "0xA91BB8", VA = "0xA91BB8")]
	private float CalculateBubblePointingAmount(Transform inputTransform)
	{
		return default(float);
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0xA91E1C", Offset = "0xA91E1C", VA = "0xA91E1C", Slot = "24")]
	public virtual bool GetCursorRay(Hand hand, out Ray cursorRay)
	{
		return default(bool);
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0xA91FA0", Offset = "0xA91FA0", VA = "0xA91FA0", Slot = "4")]
	public override bool GetCursorRay(out Ray cursorRay)
	{
		return default(bool);
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0xA91FF0", Offset = "0xA91FF0", VA = "0xA91FF0", Slot = "11")]
	public override bool GetSecondaryCursorRay(out Ray cursorRay)
	{
		return default(bool);
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0xA9203C", Offset = "0xA9203C", VA = "0xA9203C")]
	protected Motion6DOFInput()
	{
	}
}
[Token(Token = "0x20000BD")]
public abstract class MotionInput : IInputSystem
{
	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject controllerGuideLinePrefab;

	[Token(Token = "0x40004F2")]
	protected const float downwardPitch = 7f;

	[Token(Token = "0x40004F3")]
	public const float controllerArcDropFactor = 0.1f;

	[Token(Token = "0x40004F4")]
	private const float linearProjDistance = 18f;

	[Token(Token = "0x40004F5")]
	private const float lineWidth = 0.004f;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected Camera uiCamera;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected VRControllerInputModule vrControllerInputModule;

	[Token(Token = "0x6000788")]
	[Address(RVA = "0xA8F10C", Offset = "0xA8F10C", VA = "0xA8F10C", Slot = "16")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0xA8F180", Offset = "0xA8F180", VA = "0xA8F180")]
	protected LineRenderer CreateGuideLine(GameObject controller)
	{
		return null;
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0xA90628", Offset = "0xA90628", VA = "0xA90628")]
	protected bool GetCursorRay(Vector3 controllerPosition, Quaternion controllerRotation, out Ray cursorRay)
	{
		return default(bool);
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0xA90324", Offset = "0xA90324", VA = "0xA90324")]
	protected void SetUITransform(Transform primary, [Optional] Transform secondary)
	{
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0xA8FC88", Offset = "0xA8FC88", VA = "0xA8FC88")]
	protected void UpdateGuideLine(LineRenderer lr, PlayerInterface.WorldCursor worldCursor)
	{
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0xA91160", Offset = "0xA91160", VA = "0xA91160")]
	protected MotionInput()
	{
	}
}
[Token(Token = "0x20000BE")]
public class MouseInput : IInputSystem
{
	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float basePanningSpeed;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float zoomSpeed;

	[Token(Token = "0x1700017B")]
	public override bool isAvailable
	{
		[Token(Token = "0x600078E")]
		[Address(RVA = "0xA920F8", Offset = "0xA920F8", VA = "0xA920F8", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700017C")]
	public override int priority
	{
		[Token(Token = "0x600078F")]
		[Address(RVA = "0xA9212C", Offset = "0xA9212C", VA = "0xA9212C", Slot = "9")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0xA92134", Offset = "0xA92134", VA = "0xA92134", Slot = "4")]
	public override bool GetCursorRay(out Ray cursorRay)
	{
		return default(bool);
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0xA92280", Offset = "0xA92280", VA = "0xA92280", Slot = "7")]
	public override void UpdateInputInternal()
	{
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0xA923D0", Offset = "0xA923D0", VA = "0xA923D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0xA923D4", Offset = "0xA923D4", VA = "0xA923D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0xA923D8", Offset = "0xA923D8", VA = "0xA923D8")]
	public MouseInput()
	{
	}
}
[Token(Token = "0x20000BF")]
public class Oculus3DOFInput : Motion3DOFInput
{
	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject controllerPrefab;

	[Token(Token = "0x1700017D")]
	public override bool isAvailable
	{
		[Token(Token = "0x6000795")]
		[Address(RVA = "0xBD4504", Offset = "0xBD4504", VA = "0xBD4504", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700017E")]
	public override int priority
	{
		[Token(Token = "0x6000796")]
		[Address(RVA = "0xBD450C", Offset = "0xBD450C", VA = "0xBD450C", Slot = "9")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700017F")]
	public override bool isLeftHanded
	{
		[Token(Token = "0x6000797")]
		[Address(RVA = "0xBD4514", Offset = "0xBD4514", VA = "0xBD4514", Slot = "19")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0xBD451C", Offset = "0xBD451C", VA = "0xBD451C", Slot = "17")]
	public override GameObject GetControllerMesh()
	{
		return null;
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0xBD4524", Offset = "0xBD4524", VA = "0xBD4524", Slot = "18")]
	public override Quaternion GetControllerRotation()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0xBD4584", Offset = "0xBD4584", VA = "0xBD4584")]
	public Oculus3DOFInput()
	{
	}
}
[Token(Token = "0x20000C0")]
public class Oculus6DOFInput : Motion6DOFInput
{
	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject leftMeshPrefab;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject rightMeshPrefab;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float leftControllerVibrationTimeLeft;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float rightControllerVibrationTimeLeft;

	[Token(Token = "0x17000180")]
	public override bool isAvailable
	{
		[Token(Token = "0x600079B")]
		[Address(RVA = "0xBD458C", Offset = "0xBD458C", VA = "0xBD458C", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000181")]
	public override int priority
	{
		[Token(Token = "0x600079C")]
		[Address(RVA = "0xBD4638", Offset = "0xBD4638", VA = "0xBD4638", Slot = "9")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0xBD4640", Offset = "0xBD4640", VA = "0xBD4640", Slot = "17")]
	public override GameObject GetControllerMesh(Hand hand)
	{
		return null;
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0xBD4668", Offset = "0xBD4668", VA = "0xBD4668")]
	private OVRInput.Controller GetOVRControllerFromHand(Hand hand)
	{
		return default(OVRInput.Controller);
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0xBD4678", Offset = "0xBD4678", VA = "0xBD4678", Slot = "21")]
	public override bool IsControllerConnected(Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0xBD4788", Offset = "0xBD4788", VA = "0xBD4788", Slot = "14")]
	public override void Vibrate(PlayerInput.VibrateType type, bool vibrateDominantHand = true)
	{
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0xBD48D0", Offset = "0xBD48D0", VA = "0xBD48D0", Slot = "20")]
	public override PlayerInput.Button GetButtonState(Hand hand)
	{
		return default(PlayerInput.Button);
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0xBD4A3C", Offset = "0xBD4A3C", VA = "0xBD4A3C", Slot = "23")]
	protected override void LateUpdate()
	{
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0xBD4C8C", Offset = "0xBD4C8C", VA = "0xBD4C8C", Slot = "18")]
	public override Vector3 GetControllerPosition(Hand hand)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0xBD4D00", Offset = "0xBD4D00", VA = "0xBD4D00", Slot = "19")]
	public override Quaternion GetControllerRotation(Hand hand)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0xBD4D74", Offset = "0xBD4D74", VA = "0xBD4D74")]
	public Oculus6DOFInput()
	{
	}
}
[Token(Token = "0x20000C1")]
public class OculusHandsInput : Motion6DOFInput
{
	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private OVRHand leftOvrHand;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private OVRHand rightOvrHand;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private OVRSkeleton leftHandSkeleton;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private OVRSkeleton rightHandSkeleton;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Text debugText;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Transform leftIndexTip;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Transform leftMiddleTip;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Transform leftRingTip;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Transform leftPinkyTip;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Transform rightIndexTip;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Transform rightMiddleTip;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Transform rightRingTip;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Transform rightPinkyTip;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Transform leftPointerPose;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Transform rightPointerPose;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Transform stabilisedLeftFingerTip;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Transform stabilisedRightFingerTip;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6278", Offset = "0x6F6278")]
	private BoxCollider <leftKnuckleBlocker>k__BackingField;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6288", Offset = "0x6F6288")]
	private BoxCollider <rightKnuckleBlocker>k__BackingField;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private TransformStabiliser leftPointerStabiliser;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private TransformStabiliser rightPointerStabiliser;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private TransformStabiliser leftFingerTipStabiliser;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private TransformStabiliser rightFingerTipStabiliser;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private TransformStabiliser leftAnchorStabiliser;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private TransformStabiliser rightAnchorStabiliser;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Material leftHandMaterial;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Material rightHandMaterial;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Vector3 pinchIndicatorOffset;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public GameObject pinchIndicatorPrefab;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private PinchIndicator leftPinchIndicator;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private PinchIndicator rightPinchIndicator;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public GameObject scaleRotationIndicatorPrefab;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private ScaleRotationIndicator scaleRotationIndicator;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public GameObject handsTutorialHintsPrefab;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6298", Offset = "0x6F6298")]
	private HandsTutorialHints <leftHandsTutorialHints>k__BackingField;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F62A8", Offset = "0x6F62A8")]
	private HandsTutorialHints <rightHandsTutorialHints>k__BackingField;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public GestureSO leftGrabGesture;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public GestureSO rightGrabGesture;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public float grabGestureThreshold;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	public float releaseGestureThreshold;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public float grabGestureCloseThreshold;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	private float leftPinchDuration;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private float rightPinchDuration;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	private float timeSinceLeftHandGrabbed;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private float timeSinceRightHandGrabbed;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	private Color handRimColor;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	private float handRimPower;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private int rimColorId;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	private int rimPowerId;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private int extrusionId;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	public float glowExtrusionSpeed;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private float leftGlowExtrusion;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
	private float rightGlowExtrusion;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public float worldMapDownwardPointerDisplacement;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	public Vector3 leftOffset;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public Vector3 rightOffset;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	public Vector3 rotationLeftOffset;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public Vector3 rotationRightOffset;

	[Token(Token = "0x4000539")]
	private const float fingerTipRadius = 0.005f;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
	public bool useFingerOcclusionCalculation;

	[Token(Token = "0x17000182")]
	public BoxCollider leftKnuckleBlocker
	{
		[Token(Token = "0x60007A6")]
		[Address(RVA = "0xBD4D7C", Offset = "0xBD4D7C", VA = "0xBD4D7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD064", Offset = "0x6FD064")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007A7")]
		[Address(RVA = "0xBD4D84", Offset = "0xBD4D84", VA = "0xBD4D84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD074", Offset = "0x6FD074")]
		private set
		{
		}
	}

	[Token(Token = "0x17000183")]
	public BoxCollider rightKnuckleBlocker
	{
		[Token(Token = "0x60007A8")]
		[Address(RVA = "0xBD4D8C", Offset = "0xBD4D8C", VA = "0xBD4D8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD084", Offset = "0x6FD084")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007A9")]
		[Address(RVA = "0xBD4D94", Offset = "0xBD4D94", VA = "0xBD4D94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD094", Offset = "0x6FD094")]
		private set
		{
		}
	}

	[Token(Token = "0x17000184")]
	public HandsTutorialHints leftHandsTutorialHints
	{
		[Token(Token = "0x60007AA")]
		[Address(RVA = "0xBD4D9C", Offset = "0xBD4D9C", VA = "0xBD4D9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD0A4", Offset = "0x6FD0A4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007AB")]
		[Address(RVA = "0xBD4DA4", Offset = "0xBD4DA4", VA = "0xBD4DA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD0B4", Offset = "0x6FD0B4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000185")]
	public HandsTutorialHints rightHandsTutorialHints
	{
		[Token(Token = "0x60007AC")]
		[Address(RVA = "0xBD4DAC", Offset = "0xBD4DAC", VA = "0xBD4DAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD0C4", Offset = "0x6FD0C4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007AD")]
		[Address(RVA = "0xBD4DB4", Offset = "0xBD4DB4", VA = "0xBD4DB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD0D4", Offset = "0x6FD0D4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000186")]
	public override bool allowInteractionsWithUI
	{
		[Token(Token = "0x60007AE")]
		[Address(RVA = "0xBD4DBC", Offset = "0xBD4DBC", VA = "0xBD4DBC", Slot = "12")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000187")]
	private OVRCameraRig cameraRig
	{
		[Token(Token = "0x60007AF")]
		[Address(RVA = "0xBD4EC8", Offset = "0xBD4EC8", VA = "0xBD4EC8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000188")]
	public override bool isAvailable
	{
		[Token(Token = "0x60007B0")]
		[Address(RVA = "0xBD4F18", Offset = "0xBD4F18", VA = "0xBD4F18", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000189")]
	public override bool hasSecondaryInput
	{
		[Token(Token = "0x60007B1")]
		[Address(RVA = "0xBD50A0", Offset = "0xBD50A0", VA = "0xBD50A0", Slot = "10")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700018A")]
	public override int priority
	{
		[Token(Token = "0x60007B2")]
		[Address(RVA = "0xBD50A8", Offset = "0xBD50A8", VA = "0xBD50A8", Slot = "9")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700018B")]
	private bool useFingerHover
	{
		[Token(Token = "0x60007B4")]
		[Address(RVA = "0xBD4DD8", Offset = "0xBD4DD8", VA = "0xBD4DD8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0xBD50B0", Offset = "0xBD50B0", VA = "0xBD50B0", Slot = "16")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0xBD5124", Offset = "0xBD5124", VA = "0xBD5124")]
	private PinchIndicator GeneratePinchIndicator(Transform targetTransform)
	{
		return null;
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0xBD5268", Offset = "0xBD5268", VA = "0xBD5268")]
	private HandsTutorialHints GenerateHandsTutorialHints(Transform targetTransform)
	{
		return null;
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0xBD53A0", Offset = "0xBD53A0", VA = "0xBD53A0", Slot = "21")]
	public override bool IsControllerConnected(Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0xBD53CC", Offset = "0xBD53CC", VA = "0xBD53CC")]
	private void InitHandObjects()
	{
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0xBD5A88", Offset = "0xBD5A88", VA = "0xBD5A88")]
	private Transform GenerateFingerTip(OVRHand ovrHand, string name)
	{
		return null;
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0xBD5C20", Offset = "0xBD5C20", VA = "0xBD5C20")]
	private BoxCollider GenerateKnuckleBlocker(OVRHand ovrHand, string name)
	{
		return null;
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0xBD5EC0", Offset = "0xBD5EC0", VA = "0xBD5EC0")]
	private void UpdateFingerTip(Transform tip, OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
	{
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0xBD6130", Offset = "0xBD6130", VA = "0xBD6130")]
	private void UpdateKnuckles(BoxCollider knuckles, OVRSkeleton skeleton)
	{
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0xBD63C8", Offset = "0xBD63C8", VA = "0xBD63C8", Slot = "22")]
	protected override void UpdateUITransforms()
	{
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0xBD64E0", Offset = "0xBD64E0", VA = "0xBD64E0", Slot = "23")]
	protected override void LateUpdate()
	{
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0xBD838C", Offset = "0xBD838C", VA = "0xBD838C")]
	private bool IsFingerTipOccluded(OVRSkeleton skeleton, OVRSkeleton.BoneId bone)
	{
		return default(bool);
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0xBD8738", Offset = "0xBD8738", VA = "0xBD8738")]
	private int NumFingerTipsOccluded(OVRSkeleton skeleton)
	{
		return default(int);
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0xBD87C4", Offset = "0xBD87C4", VA = "0xBD87C4")]
	private string DebugFingerText(OVRHand hand, OVRHand.HandFinger finger)
	{
		return null;
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0xBD89D8", Offset = "0xBD89D8", VA = "0xBD89D8")]
	private string DebugHandText(OVRHand hand)
	{
		return null;
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0xBD8A98", Offset = "0xBD8A98", VA = "0xBD8A98")]
	private float ProcessGesture(Hand hand, GestureSO gesture, PlayerInput.Button buttonMask, float enterThreshold, float exitThreshold, ref PlayerInput.Button result)
	{
		return default(float);
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0xBD8F68", Offset = "0xBD8F68", VA = "0xBD8F68")]
	private void ProcessPinch(Hand hand, OVRHand.HandFinger finger, PlayerInput.Button buttonMask, float lowerThreshold, float upperThreshold, ref PlayerInput.Button result, bool usePinchDelay = false)
	{
	}

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0xBD909C", Offset = "0xBD909C", VA = "0xBD909C", Slot = "20")]
	public override PlayerInput.Button GetButtonState(Hand hand)
	{
		return default(PlayerInput.Button);
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0xBD92C8", Offset = "0xBD92C8", VA = "0xBD92C8", Slot = "17")]
	public override GameObject GetControllerMesh(Hand hand)
	{
		return null;
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0xBD92D0", Offset = "0xBD92D0", VA = "0xBD92D0", Slot = "18")]
	public override Vector3 GetControllerPosition(Hand hand)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0xBD9370", Offset = "0xBD9370", VA = "0xBD9370", Slot = "19")]
	public override Quaternion GetControllerRotation(Hand hand)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0xBD8BD0", Offset = "0xBD8BD0", VA = "0xBD8BD0")]
	private float CalculateGestureDistance(OVRHand hand, OVRSkeleton handSkeleton, GestureSO gestureToRecognize, bool ignoreThumbs = true)
	{
		return default(float);
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0xBD94B8", Offset = "0xBD94B8", VA = "0xBD94B8", Slot = "24")]
	public override bool GetCursorRay(Hand hand, out Ray cursorRay)
	{
		return default(bool);
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0xBD9698", Offset = "0xBD9698", VA = "0xBD9698", Slot = "7")]
	public override void UpdateInputInternal()
	{
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0xBD96A0", Offset = "0xBD96A0", VA = "0xBD96A0")]
	public OculusHandsInput()
	{
	}
}
[Token(Token = "0x20000C2")]
public class Pico6DOFInput : Motion6DOFInput
{
	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject leftMeshPrefab;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject rightMeshPrefab;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float leftControllerVibrationTimeLeft;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float rightControllerVibrationTimeLeft;

	[Token(Token = "0x1700018C")]
	public override bool isAvailable
	{
		[Token(Token = "0x60007CD")]
		[Address(RVA = "0xA200A8", Offset = "0xA200A8", VA = "0xA200A8", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700018D")]
	public override int priority
	{
		[Token(Token = "0x60007CE")]
		[Address(RVA = "0xA20108", Offset = "0xA20108", VA = "0xA20108", Slot = "9")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0xA20110", Offset = "0xA20110", VA = "0xA20110", Slot = "17")]
	public override GameObject GetControllerMesh(Hand hand)
	{
		return null;
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0xA20138", Offset = "0xA20138", VA = "0xA20138")]
	private XRNode GetPVRControllerFromHand(Hand hand)
	{
		return default(XRNode);
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0xA20148", Offset = "0xA20148", VA = "0xA20148", Slot = "21")]
	public override bool IsControllerConnected(Hand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0xA2018C", Offset = "0xA2018C", VA = "0xA2018C", Slot = "14")]
	public override void Vibrate(PlayerInput.VibrateType type, bool vibrateDominantHand = true)
	{
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0xA2029C", Offset = "0xA2029C", VA = "0xA2029C", Slot = "20")]
	public override PlayerInput.Button GetButtonState(Hand hand)
	{
		return default(PlayerInput.Button);
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0xA20584", Offset = "0xA20584", VA = "0xA20584", Slot = "23")]
	protected override void LateUpdate()
	{
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0xA207B0", Offset = "0xA207B0", VA = "0xA207B0", Slot = "18")]
	public override Vector3 GetControllerPosition(Hand hand)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0xA20898", Offset = "0xA20898", VA = "0xA20898", Slot = "19")]
	public override Quaternion GetControllerRotation(Hand hand)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0xA2097C", Offset = "0xA2097C", VA = "0xA2097C")]
	public Pico6DOFInput()
	{
	}
}
[Token(Token = "0x20000C3")]
public abstract class IInputSystem : MonoBehaviour
{
	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F62B8", Offset = "0x6F62B8")]
	private Vector2 <panningDelta>k__BackingField;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F62C8", Offset = "0x6F62C8")]
	private float <zoomDelta>k__BackingField;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F62D8", Offset = "0x6F62D8")]
	private float <rotationDelta>k__BackingField;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F62E8", Offset = "0x6F62E8")]
	private PlayerInput <playerInput>k__BackingField;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F62F8", Offset = "0x6F62F8")]
	private PlayerInput.Button <buttons>k__BackingField;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	protected PlayerInput.Button oldButtons;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected PlayerInput.Button oldSecondaryButtons;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6308", Offset = "0x6F6308")]
	private PlayerInput.Button <secondaryButtons>k__BackingField;

	[Token(Token = "0x1700018E")]
	public virtual bool usesPositionalTracking
	{
		[Token(Token = "0x60007D9")]
		[Address(RVA = "0xB1E08C", Offset = "0xB1E08C", VA = "0xB1E08C", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700018F")]
	public abstract bool isAvailable
	{
		[Token(Token = "0x60007DC")]
		get;
	}

	[Token(Token = "0x17000190")]
	public abstract int priority
	{
		[Token(Token = "0x60007DD")]
		get;
	}

	[Token(Token = "0x17000191")]
	public Vector2 panningDelta
	{
		[Token(Token = "0x60007DE")]
		[Address(RVA = "0xB1E0A0", Offset = "0xB1E0A0", VA = "0xB1E0A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD0E4", Offset = "0x6FD0E4")]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x60007DF")]
		[Address(RVA = "0xB1E0A8", Offset = "0xB1E0A8", VA = "0xB1E0A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD0F4", Offset = "0x6FD0F4")]
		protected set
		{
		}
	}

	[Token(Token = "0x17000192")]
	public float zoomDelta
	{
		[Token(Token = "0x60007E0")]
		[Address(RVA = "0xB1E0B0", Offset = "0xB1E0B0", VA = "0xB1E0B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD104", Offset = "0x6FD104")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60007E1")]
		[Address(RVA = "0xB1E0B8", Offset = "0xB1E0B8", VA = "0xB1E0B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD114", Offset = "0x6FD114")]
		protected set
		{
		}
	}

	[Token(Token = "0x17000193")]
	public float rotationDelta
	{
		[Token(Token = "0x60007E2")]
		[Address(RVA = "0xB1E0C0", Offset = "0xB1E0C0", VA = "0xB1E0C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD124", Offset = "0x6FD124")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60007E3")]
		[Address(RVA = "0xB1E0C8", Offset = "0xB1E0C8", VA = "0xB1E0C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD134", Offset = "0x6FD134")]
		protected set
		{
		}
	}

	[Token(Token = "0x17000194")]
	public PlayerInput playerInput
	{
		[Token(Token = "0x60007E4")]
		[Address(RVA = "0xB1E0D0", Offset = "0xB1E0D0", VA = "0xB1E0D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD144", Offset = "0x6FD144")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007E5")]
		[Address(RVA = "0xB1E0D8", Offset = "0xB1E0D8", VA = "0xB1E0D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD154", Offset = "0x6FD154")]
		private set
		{
		}
	}

	[Token(Token = "0x17000195")]
	public Player player
	{
		[Token(Token = "0x60007E6")]
		[Address(RVA = "0xB1E0E0", Offset = "0xB1E0E0", VA = "0xB1E0E0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000196")]
	public PlayerInput.Button buttons
	{
		[Token(Token = "0x60007E7")]
		[Address(RVA = "0xB1E0FC", Offset = "0xB1E0FC", VA = "0xB1E0FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD164", Offset = "0x6FD164")]
		get
		{
			return default(PlayerInput.Button);
		}
		[Token(Token = "0x60007E8")]
		[Address(RVA = "0xB1E104", Offset = "0xB1E104", VA = "0xB1E104")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD174", Offset = "0x6FD174")]
		protected set
		{
		}
	}

	[Token(Token = "0x17000197")]
	public virtual bool hasSecondaryInput
	{
		[Token(Token = "0x60007E9")]
		[Address(RVA = "0xB1E10C", Offset = "0xB1E10C", VA = "0xB1E10C", Slot = "10")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000198")]
	public PlayerInput.Button secondaryButtons
	{
		[Token(Token = "0x60007EB")]
		[Address(RVA = "0xB1E124", Offset = "0xB1E124", VA = "0xB1E124")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD184", Offset = "0x6FD184")]
		get
		{
			return default(PlayerInput.Button);
		}
		[Token(Token = "0x60007EC")]
		[Address(RVA = "0xB1E12C", Offset = "0xB1E12C", VA = "0xB1E12C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD194", Offset = "0x6FD194")]
		protected set
		{
		}
	}

	[Token(Token = "0x17000199")]
	public virtual bool allowInteractionsWithUI
	{
		[Token(Token = "0x60007ED")]
		[Address(RVA = "0xB1E134", Offset = "0xB1E134", VA = "0xB1E134", Slot = "12")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700019A")]
	public bool isActiveInputSystem
	{
		[Token(Token = "0x60007F3")]
		[Address(RVA = "0xB1E1DC", Offset = "0xB1E1DC", VA = "0xB1E1DC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700019B")]
	public virtual bool isLeftHandDominant
	{
		[Token(Token = "0x60007F4")]
		[Address(RVA = "0xB1E2BC", Offset = "0xB1E2BC", VA = "0xB1E2BC", Slot = "13")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60007D8")]
	public abstract bool GetCursorRay(out Ray cursorRay);

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0xB1E094", Offset = "0xB1E094", VA = "0xB1E094", Slot = "6")]
	public virtual bool GetMenuTransform(out Transform transform, bool useDominantHand = false)
	{
		return default(bool);
	}

	[Token(Token = "0x60007DB")]
	public abstract void UpdateInputInternal();

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0xB1E114", Offset = "0xB1E114", VA = "0xB1E114", Slot = "11")]
	public virtual bool GetSecondaryCursorRay(out Ray cursorRay)
	{
		return default(bool);
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0xB1E13C", Offset = "0xB1E13C", VA = "0xB1E13C")]
	public void UpdateInput()
	{
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0xB1E154", Offset = "0xB1E154", VA = "0xB1E154")]
	public bool GetButton(PlayerInput.Button buttonMask)
	{
		return default(bool);
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0xB1E164", Offset = "0xB1E164", VA = "0xB1E164")]
	public bool GetButtonDown(PlayerInput.Button buttonMask)
	{
		return default(bool);
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0xB1E18C", Offset = "0xB1E18C", VA = "0xB1E18C")]
	public bool GetButtonUp(PlayerInput.Button buttonMask)
	{
		return default(bool);
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0xB1E1B4", Offset = "0xB1E1B4", VA = "0xB1E1B4")]
	public bool GetSecondaryButtonDown(PlayerInput.Button buttonMask)
	{
		return default(bool);
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0xB1E2F4", Offset = "0xB1E2F4", VA = "0xB1E2F4")]
	protected void OnEnable()
	{
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0xB1E378", Offset = "0xB1E378", VA = "0xB1E378")]
	protected void OnDisable()
	{
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0xB1E398", Offset = "0xB1E398", VA = "0xB1E398", Slot = "14")]
	public virtual void Vibrate(PlayerInput.VibrateType type, bool dominantHand = true)
	{
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0xB1E39C", Offset = "0xB1E39C", VA = "0xB1E39C", Slot = "15")]
	public virtual void OnActivate(IInputSystem oldSystem)
	{
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0xB1E434", Offset = "0xB1E434", VA = "0xB1E434")]
	protected IInputSystem()
	{
	}
}
[Token(Token = "0x20000C4")]
public class PlayerInput : MonoBehaviour
{
	[Token(Token = "0x2000343")]
	[Flags]
	public enum Button
	{
		[Token(Token = "0x4001548")]
		None = 0,
		[Token(Token = "0x4001549")]
		GrabMovement = 1,
		[Token(Token = "0x400154A")]
		Interact = 2,
		[Token(Token = "0x400154B")]
		Back = 4,
		[Token(Token = "0x400154C")]
		ToggleBuildMenu = 8,
		[Token(Token = "0x400154D")]
		Menu = 0x10
	}

	[Token(Token = "0x2000344")]
	public enum VibrateType
	{
		[Token(Token = "0x400154F")]
		Hover,
		[Token(Token = "0x4001550")]
		Click,
		[Token(Token = "0x4001551")]
		Alert
	}

	[Serializable]
	[Token(Token = "0x2000345")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F56B0", Offset = "0x6F56B0")]
	private sealed class <>c
	{
		[Token(Token = "0x4001552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<IInputSystem> <>9__33_0;

		[Token(Token = "0x4001554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action <>9__35_0;

		[Token(Token = "0x600168C")]
		[Address(RVA = "0xA290A8", Offset = "0xA290A8", VA = "0xA290A8")]
		public <>c()
		{
		}

		[Token(Token = "0x600168D")]
		[Address(RVA = "0xA290B0", Offset = "0xA290B0", VA = "0xA290B0")]
		internal int <RegisterSystem>b__33_0(IInputSystem x, IInputSystem y)
		{
			return default(int);
		}

		[Token(Token = "0x600168E")]
		[Address(RVA = "0xA29110", Offset = "0xA29110", VA = "0xA29110")]
		internal void <OnRecentered>b__35_0()
		{
		}
	}

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<IInputSystem> inputSystems;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6318", Offset = "0x6F6318")]
	private IInputSystem <activeInputSystem>k__BackingField;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6328", Offset = "0x6F6328")]
	private Player <player>k__BackingField;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform leftControllerAnchor;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform rightControllerAnchor;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject leftController;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject rightController;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform leftControllerGuideRoot;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform rightControllerGuideRoot;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public VRHand leftHand;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VRHand rightHand;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform leftGuideRoot;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform rightGuideRoot;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Action<IInputSystem> onInputSystemChanged;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool enableDebugOutput;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Text debugTextOutput;

	[Token(Token = "0x1700019C")]
	public IInputSystem activeInputSystem
	{
		[Token(Token = "0x60007FA")]
		[Address(RVA = "0xA2794C", Offset = "0xA2794C", VA = "0xA2794C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD1A4", Offset = "0x6FD1A4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007FB")]
		[Address(RVA = "0xA27954", Offset = "0xA27954", VA = "0xA27954")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD1B4", Offset = "0x6FD1B4")]
		private set
		{
		}
	}

	[Token(Token = "0x1700019D")]
	public Player player
	{
		[Token(Token = "0x60007FC")]
		[Address(RVA = "0xA2795C", Offset = "0xA2795C", VA = "0xA2795C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD1C4", Offset = "0x6FD1C4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007FD")]
		[Address(RVA = "0xA27964", Offset = "0xA27964", VA = "0xA27964")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD1D4", Offset = "0x6FD1D4")]
		private set
		{
		}
	}

	[Token(Token = "0x1700019E")]
	public VRHand dominantHand
	{
		[Token(Token = "0x60007FE")]
		[Address(RVA = "0xA2796C", Offset = "0xA2796C", VA = "0xA2796C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700019F")]
	public VRHand nonDominantHand
	{
		[Token(Token = "0x60007FF")]
		[Address(RVA = "0xA279B8", Offset = "0xA279B8", VA = "0xA279B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001A0")]
	public bool isUsingHandTracking
	{
		[Token(Token = "0x6000800")]
		[Address(RVA = "0xA27A04", Offset = "0xA27A04", VA = "0xA27A04")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0xA27AEC", Offset = "0xA27AEC", VA = "0xA27AEC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0xA27B44", Offset = "0xA27B44", VA = "0xA27B44")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0xA27C08", Offset = "0xA27C08", VA = "0xA27C08")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000804")]
	[Address(RVA = "0xA27CCC", Offset = "0xA27CCC", VA = "0xA27CCC")]
	public void RegisterSystem(IInputSystem system)
	{
	}

	[Token(Token = "0x6000805")]
	[Address(RVA = "0xA27DE4", Offset = "0xA27DE4", VA = "0xA27DE4")]
	public void UnregisterSystem(IInputSystem system)
	{
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0xA27E4C", Offset = "0xA27E4C", VA = "0xA27E4C")]
	private void OnRecentered()
	{
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0xA27FE4", Offset = "0xA27FE4", VA = "0xA27FE4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0xA28EF4", Offset = "0xA28EF4", VA = "0xA28EF4")]
	private string GetObjectName(Component obj)
	{
		return null;
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0xA28DA8", Offset = "0xA28DA8", VA = "0xA28DA8")]
	private string GetObjectName(GameObject obj)
	{
		return null;
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0xA28D10", Offset = "0xA28D10", VA = "0xA28D10")]
	private void SwitchActiveSystem(IInputSystem newSystem)
	{
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0xA28FAC", Offset = "0xA28FAC", VA = "0xA28FAC")]
	public PlayerInput()
	{
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0xA2901C", Offset = "0xA2901C", VA = "0xA2901C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD1E4", Offset = "0x6FD1E4")]
	private void <OnRecentered>b__35_1()
	{
	}
}
[Token(Token = "0x20000C5")]
public class TransformStabiliser
{
	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<Quaternion> rotationHistory;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Vector3> positionHistory;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6338", Offset = "0x6F6338")]
	private Quaternion <stabilisedRotation>k__BackingField;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6348", Offset = "0x6F6348")]
	private Vector3 <stabilisedPosition>k__BackingField;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int maxHistoryCount;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float positionThreshold;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float rotationThreshold;

	[Token(Token = "0x170001A1")]
	public Quaternion stabilisedRotation
	{
		[Token(Token = "0x6000814")]
		[Address(RVA = "0xB2E948", Offset = "0xB2E948", VA = "0xB2E948")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD1F4", Offset = "0x6FD1F4")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6000815")]
		[Address(RVA = "0xB2E954", Offset = "0xB2E954", VA = "0xB2E954")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD204", Offset = "0x6FD204")]
		private set
		{
		}
	}

	[Token(Token = "0x170001A2")]
	public Vector3 stabilisedPosition
	{
		[Token(Token = "0x6000816")]
		[Address(RVA = "0xB2E960", Offset = "0xB2E960", VA = "0xB2E960")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD214", Offset = "0x6FD214")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000817")]
		[Address(RVA = "0xB2E96C", Offset = "0xB2E96C", VA = "0xB2E96C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD224", Offset = "0x6FD224")]
		private set
		{
		}
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0xB2DD88", Offset = "0xB2DD88", VA = "0xB2DD88")]
	public TransformStabiliser(int maxHistoryCount = 20, float positionThreshold = 0.005f, float rotationThreshold = 2f)
	{
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0xB2DE50", Offset = "0xB2DE50", VA = "0xB2DE50")]
	public void Update(Transform transform)
	{
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0xB2E328", Offset = "0xB2E328", VA = "0xB2E328")]
	public void UpdateLocalSpace(Transform transform)
	{
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0xB2E3B4", Offset = "0xB2E3B4", VA = "0xB2E3B4")]
	public Vector3 GetStabilisedWorldPosition(Transform transform)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0xB2E4A8", Offset = "0xB2E4A8", VA = "0xB2E4A8")]
	public Quaternion GetStabilisedWorldRotation(Transform transform)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0xB2DEDC", Offset = "0xB2DEDC", VA = "0xB2DEDC")]
	public void Update(Vector3 positionSample, Quaternion rotationSample)
	{
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0xB2E614", Offset = "0xB2E614", VA = "0xB2E614")]
	public bool CheckIfIdle()
	{
		return default(bool);
	}
}
[Token(Token = "0x20000C6")]
public class VRControllerInputModule : BaseInputModule
{
	[Token(Token = "0x2000346")]
	public class InputTransformState
	{
		[Token(Token = "0x4001555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform inputTransform;

		[Token(Token = "0x4001556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isWithinPhysicalPushingDistance;

		[Token(Token = "0x4001557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool isPhysicallyPressingButton;

		[Token(Token = "0x4001558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool isPhysicallyPressingButtonChanged;

		[Token(Token = "0x4001559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool isWaitingForPhysicalButtonRelease;

		[Token(Token = "0x400155A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float physicalButtonReleaseTimer;

		[Token(Token = "0x400155B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject lastRaycastHitObject;

		[Token(Token = "0x400155C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<SphereCollider> fingerTips;

		[Token(Token = "0x400155D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SphereCollider activeFingerTip;

		[Token(Token = "0x600168F")]
		[Address(RVA = "0xCC3CF0", Offset = "0xCC3CF0", VA = "0xCC3CF0")]
		public void GatherFingerTips(Transform baseTransform)
		{
		}

		[Token(Token = "0x6001690")]
		[Address(RVA = "0xCC16EC", Offset = "0xCC16EC", VA = "0xCC16EC")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001691")]
		[Address(RVA = "0xCC3C80", Offset = "0xCC3C80", VA = "0xCC3C80")]
		public InputTransformState()
		{
		}
	}

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F6358", Offset = "0x6F6358")]
	public Camera uiCamera;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F6390", Offset = "0x6F6390")]
	public float dragThreshold;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMesh uiDebugText;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool m_useDebugText;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string[] m_debugStrings;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool m_isButtonPressed;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool m_isButtonPressedChanged;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float m_pressedDistance;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector2 m_cameraCenter;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 m_lastRaycastHitPoint;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private PointerEventData m_pointerEventData;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool m_isActive;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F63C8", Offset = "0x6F63C8")]
	private Vector3 <lastRaycastHitNormal>k__BackingField;

	[Token(Token = "0x400056B")]
	private const float pushingDistanceThreshold = 0.03f;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public InputTransformState primaryState;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public InputTransformState secondaryState;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int uiLayer;

	[Token(Token = "0x170001A3")]
	public Transform primaryInputTransform
	{
		[Token(Token = "0x6000818")]
		[Address(RVA = "0xCC15C0", Offset = "0xCC15C0", VA = "0xCC15C0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000819")]
		[Address(RVA = "0xCC15DC", Offset = "0xCC15DC", VA = "0xCC15DC")]
		private set
		{
		}
	}

	[Token(Token = "0x170001A4")]
	public Transform secondaryInputTransform
	{
		[Token(Token = "0x600081A")]
		[Address(RVA = "0xCC1754", Offset = "0xCC1754", VA = "0xCC1754")]
		get
		{
			return null;
		}
		[Token(Token = "0x600081B")]
		[Address(RVA = "0xCC1770", Offset = "0xCC1770", VA = "0xCC1770")]
		private set
		{
		}
	}

	[Token(Token = "0x170001A5")]
	public Vector3 lastRaycastHitPoint
	{
		[Token(Token = "0x600081D")]
		[Address(RVA = "0xCC1988", Offset = "0xCC1988", VA = "0xCC1988")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170001A6")]
	public Vector3 lastRaycastHitNormal
	{
		[Token(Token = "0x600081E")]
		[Address(RVA = "0xCC1994", Offset = "0xCC1994", VA = "0xCC1994")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD234", Offset = "0x6FD234")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600081F")]
		[Address(RVA = "0xCC19A0", Offset = "0xCC19A0", VA = "0xCC19A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD244", Offset = "0x6FD244")]
		private set
		{
		}
	}

	[Token(Token = "0x170001A7")]
	public GameObject lastRaycastHitGameObject
	{
		[Token(Token = "0x6000820")]
		[Address(RVA = "0xCC19AC", Offset = "0xCC19AC", VA = "0xCC19AC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001A8")]
	public Vector3 physicalPushPoint
	{
		[Token(Token = "0x6000821")]
		[Address(RVA = "0xCC19C4", Offset = "0xCC19C4", VA = "0xCC19C4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170001A9")]
	public bool isPhysicallyPressingButton
	{
		[Token(Token = "0x6000822")]
		[Address(RVA = "0xCC1AD0", Offset = "0xCC1AD0", VA = "0xCC1AD0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0xCC1880", Offset = "0xCC1880", VA = "0xCC1880")]
	public void SetInputTransforms(Transform primary, Transform secondary)
	{
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0xCC1B10", Offset = "0xCC1B10", VA = "0xCC1B10", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0xCC1CB0", Offset = "0xCC1CB0", VA = "0xCC1CB0", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0xCC1EE4", Offset = "0xCC1EE4", VA = "0xCC1EE4")]
	private void MyUpdateControllerData()
	{
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0xCC2018", Offset = "0xCC2018", VA = "0xCC2018")]
	private void ProcessControllerEvent()
	{
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0xCC2D34", Offset = "0xCC2D34", VA = "0xCC2D34")]
	private void AttachUICamera(Transform targetTransform)
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0xCC2E6C", Offset = "0xCC2E6C", VA = "0xCC2E6C")]
	private Collider FindFingerTipCollision(InputTransformState state, SphereCollider fingerTip, float radiusMultiplier = 1f)
	{
		return null;
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0xCC3078", Offset = "0xCC3078", VA = "0xCC3078")]
	private void UpdatePhysicalButtonState(InputTransformState state, bool allowNewPresses)
	{
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0xCC3634", Offset = "0xCC3634", VA = "0xCC3634")]
	private RaycastResult DoRaycast(PointerEventData eventData, bool isPrimary)
	{
		return default(RaycastResult);
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0xCC205C", Offset = "0xCC205C", VA = "0xCC205C")]
	private PointerEventData GetPointerEventData()
	{
		return null;
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0xCC2A68", Offset = "0xCC2A68", VA = "0xCC2A68")]
	private void ProcessDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0xCC39CC", Offset = "0xCC39CC", VA = "0xCC39CC")]
	private bool ShouldStartDrag(PointerEventData eventData)
	{
		return default(bool);
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0xCC2A4C", Offset = "0xCC2A4C", VA = "0xCC2A4C")]
	private void ProcessMove(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0xCC2424", Offset = "0xCC2424", VA = "0xCC2424")]
	private void ProcessPress(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0xCC3A58", Offset = "0xCC3A58", VA = "0xCC3A58")]
	private void DeselectIfSelectionChanged(GameObject currentOverGo, BaseEventData pointerEvent)
	{
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0xCC1D90", Offset = "0xCC1D90", VA = "0xCC1D90")]
	private bool SendUpdateEventToSelectedObject()
	{
		return default(bool);
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0xCC3B48", Offset = "0xCC3B48", VA = "0xCC3B48")]
	private bool MyIsButtonReleasedThisFrame()
	{
		return default(bool);
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0xCC39F0", Offset = "0xCC39F0", VA = "0xCC39F0")]
	private bool MyIsButtonPressedThisFrame()
	{
		return default(bool);
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0xCC3BB4", Offset = "0xCC3BB4", VA = "0xCC3BB4")]
	private void WriteDebug(string text)
	{
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0xCC3BDC", Offset = "0xCC3BDC", VA = "0xCC3BDC")]
	public VRControllerInputModule()
	{
	}
}
[Token(Token = "0x20000C7")]
public static class VRInputManager
{
	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool m_isKeyPressed;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Transform m_controllerTransform;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool m_controllerActive;

	[Token(Token = "0x6000836")]
	[Address(RVA = "0xA9DD08", Offset = "0xA9DD08", VA = "0xA9DD08")]
	public static void SetIsControllerButtonPressed(bool isPressed)
	{
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0xA9DD78", Offset = "0xA9DD78", VA = "0xA9DD78")]
	public static bool GetIsControllerButtonPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0xA9DDE0", Offset = "0xA9DDE0", VA = "0xA9DDE0")]
	public static void SetControllerTransform(Transform transform)
	{
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0xA9DE4C", Offset = "0xA9DE4C", VA = "0xA9DE4C")]
	public static Transform GetControllerTransform()
	{
		return null;
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0xA9DEB4", Offset = "0xA9DEB4", VA = "0xA9DEB4")]
	public static void SetControllerActive(bool active)
	{
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0xA9DF24", Offset = "0xA9DF24", VA = "0xA9DF24")]
	public static bool GetControllerActive()
	{
		return default(bool);
	}
}
[Token(Token = "0x20000C8")]
public class PlayerGameSettings
{
	[Token(Token = "0x2000347")]
	public enum HandednessOption
	{
		[Token(Token = "0x400155F")]
		Right,
		[Token(Token = "0x4001560")]
		Left,
		[Token(Token = "0x4001561")]
		OneHanded
	}

	[Token(Token = "0x2000348")]
	public enum CameraRotationOption
	{
		[Token(Token = "0x4001563")]
		Snap,
		[Token(Token = "0x4001564")]
		Smooth
	}

	[Token(Token = "0x2000349")]
	public enum CameraSnapSpeed
	{
		[Token(Token = "0x4001566")]
		Snap30,
		[Token(Token = "0x4001567")]
		Snap45
	}

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int cameraSmoothSpeed;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool enableMusic;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	public bool enableComfortCage;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HandednessOption handedness;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public CameraRotationOption cameraRotationType;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CameraSnapSpeed cameraSnapSpeed;

	[Token(Token = "0x600083D")]
	[Address(RVA = "0xA2754C", Offset = "0xA2754C", VA = "0xA2754C")]
	public PlayerGameSettings()
	{
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0xA278E4", Offset = "0xA278E4", VA = "0xA278E4")]
	public PlayerGameSettings(PlayerGameSettings other)
	{
	}
}
[Token(Token = "0x20000C9")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6F4B64", Offset = "0x6F4B64")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6F4B64", Offset = "0x6F4B64")]
public class Player : MonoBehaviour, ISaveInterface
{
	[Token(Token = "0x200034A")]
	public class PlayerSaveData : SaveSystem.ModuleData
	{
		[Token(Token = "0x4001568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 position;

		[Token(Token = "0x4001569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float rotationYaw;

		[Token(Token = "0x400156A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 scale;

		[Token(Token = "0x400156B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PlayerGameSettings settings;

		[Token(Token = "0x400156C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public double totalPlayTime;

		[Token(Token = "0x6001692")]
		[Address(RVA = "0xA270CC", Offset = "0xA270CC", VA = "0xA270CC")]
		public PlayerSaveData()
		{
		}
	}

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F63D8", Offset = "0x6F63D8")]
	private AudioListener <audioListener>k__BackingField;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F63E8", Offset = "0x6F63E8")]
	private PlayerInput <playerInput>k__BackingField;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F63F8", Offset = "0x6F63F8")]
	private PlayerInterface <playerInterface>k__BackingField;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6408", Offset = "0x6F6408")]
	private Camera <playerCamera>k__BackingField;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Canvas mainCanvas;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public PlayerGameSettings settings;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6418", Offset = "0x6F6418")]
	private double <totalPlayTime>k__BackingField;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6428", Offset = "0x6F6428")]
	private static Player <current>k__BackingField;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float tableHeight;

	[Token(Token = "0x170001AA")]
	public AudioListener audioListener
	{
		[Token(Token = "0x600083F")]
		[Address(RVA = "0xA265A8", Offset = "0xA265A8", VA = "0xA265A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD254", Offset = "0x6FD254")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000840")]
		[Address(RVA = "0xA265B0", Offset = "0xA265B0", VA = "0xA265B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD264", Offset = "0x6FD264")]
		private set
		{
		}
	}

	[Token(Token = "0x170001AB")]
	public PlayerInput playerInput
	{
		[Token(Token = "0x6000841")]
		[Address(RVA = "0xA265B8", Offset = "0xA265B8", VA = "0xA265B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD274", Offset = "0x6FD274")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000842")]
		[Address(RVA = "0xA265C0", Offset = "0xA265C0", VA = "0xA265C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD284", Offset = "0x6FD284")]
		private set
		{
		}
	}

	[Token(Token = "0x170001AC")]
	public PlayerInterface playerInterface
	{
		[Token(Token = "0x6000843")]
		[Address(RVA = "0xA265C8", Offset = "0xA265C8", VA = "0xA265C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD294", Offset = "0x6FD294")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000844")]
		[Address(RVA = "0xA265D0", Offset = "0xA265D0", VA = "0xA265D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD2A4", Offset = "0x6FD2A4")]
		private set
		{
		}
	}

	[Token(Token = "0x170001AD")]
	public IInputSystem input
	{
		[Token(Token = "0x6000845")]
		[Address(RVA = "0xA255B4", Offset = "0xA255B4", VA = "0xA255B4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001AE")]
	public Camera playerCamera
	{
		[Token(Token = "0x6000846")]
		[Address(RVA = "0xA265D8", Offset = "0xA265D8", VA = "0xA265D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD2B4", Offset = "0x6FD2B4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000847")]
		[Address(RVA = "0xA265E0", Offset = "0xA265E0", VA = "0xA265E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD2C4", Offset = "0x6FD2C4")]
		private set
		{
		}
	}

	[Token(Token = "0x170001AF")]
	public double totalPlayTime
	{
		[Token(Token = "0x6000848")]
		[Address(RVA = "0xA265E8", Offset = "0xA265E8", VA = "0xA265E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD2D4", Offset = "0x6FD2D4")]
		get
		{
			return default(double);
		}
		[Token(Token = "0x6000849")]
		[Address(RVA = "0xA265F0", Offset = "0xA265F0", VA = "0xA265F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD2E4", Offset = "0x6FD2E4")]
		private set
		{
		}
	}

	[Token(Token = "0x170001B0")]
	public static Player current
	{
		[Token(Token = "0x600084A")]
		[Address(RVA = "0xA265F8", Offset = "0xA265F8", VA = "0xA265F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD2F4", Offset = "0x6FD2F4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600084B")]
		[Address(RVA = "0xA26648", Offset = "0xA26648", VA = "0xA26648")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD304", Offset = "0x6FD304")]
		private set
		{
		}
	}

	[Token(Token = "0x170001B1")]
	public Type saveModuleDataType
	{
		[Token(Token = "0x6000854")]
		[Address(RVA = "0xA26FD4", Offset = "0xA26FD4", VA = "0xA26FD4", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0xA2669C", Offset = "0xA2669C", VA = "0xA2669C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0xA268A8", Offset = "0xA268A8", VA = "0xA268A8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0xA267CC", Offset = "0xA267CC", VA = "0xA267CC")]
	private void FindAudioListener()
	{
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0xA2698C", Offset = "0xA2698C", VA = "0xA2698C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0xA26B04", Offset = "0xA26B04", VA = "0xA26B04")]
	private void Start()
	{
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0xA26C9C", Offset = "0xA26C9C", VA = "0xA26C9C")]
	private void OnNewGameStarted()
	{
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0xA26CA4", Offset = "0xA26CA4", VA = "0xA26CA4")]
	public void SetPosition(Vector3 position)
	{
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0xA26E8C", Offset = "0xA26E8C", VA = "0xA26E8C")]
	public void SetScale(float scale)
	{
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0xA27044", Offset = "0xA27044", VA = "0xA27044", Slot = "5")]
	public SaveSystem.ModuleData OnSave()
	{
		return null;
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0xA27184", Offset = "0xA27184", VA = "0xA27184", Slot = "6")]
	public void OnLoad(SaveSystem.SaveGame saveGame, SaveSystem.ModuleData data)
	{
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0xA27334", Offset = "0xA27334", VA = "0xA27334")]
	private void FillMetadata(SaveSystem.Metadata metadata)
	{
	}

	[Token(Token = "0x6000858")]
	[Address(RVA = "0xA27410", Offset = "0xA27410", VA = "0xA27410")]
	public bool IsPointVisible(Vector3 point)
	{
		return default(bool);
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0xA27470", Offset = "0xA27470", VA = "0xA27470")]
	public bool IsPointFocused(Vector3 point)
	{
		return default(bool);
	}

	[Token(Token = "0x600085A")]
	[Address(RVA = "0xA274D4", Offset = "0xA274D4", VA = "0xA274D4")]
	public Player()
	{
	}
}
[Token(Token = "0x20000CA")]
public class PlayerInterface : MonoBehaviour
{
	[Token(Token = "0x200034B")]
	public enum Mode
	{
		[Token(Token = "0x400156E")]
		Default,
		[Token(Token = "0x400156F")]
		StreetView
	}

	[Token(Token = "0x200034C")]
	public class WorldCursor
	{
		[Token(Token = "0x200042B")]
		private struct Sample
		{
			[Token(Token = "0x40019A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 position;

			[Token(Token = "0x40019AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float timeElapsed;

			[Token(Token = "0x600190E")]
			[Address(RVA = "0x7796A0", Offset = "0x7796A0", VA = "0x7796A0")]
			public Sample(Vector3 inPos, float inElapsed)
			{
			}
		}

		[Token(Token = "0x4001570")]
		private const float latency = 0.1f;

		[Token(Token = "0x4001571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector3 updateLocation;

		[Token(Token = "0x4001572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool isValid;

		[Token(Token = "0x4001573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int x;

		[Token(Token = "0x4001574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int y;

		[Token(Token = "0x4001575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F9BA0", Offset = "0x6F9BA0")]
		private Vector3 <smoothedLocation>k__BackingField;

		[Token(Token = "0x4001576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Ray ray;

		[Token(Token = "0x4001577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float rayLength;

		[Token(Token = "0x4001578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Sample> samples;

		[Token(Token = "0x170003CB")]
		public Vector3 smoothedLocation
		{
			[Token(Token = "0x6001695")]
			[Address(RVA = "0xC16354", Offset = "0xC16354", VA = "0xC16354")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x700EE0", Offset = "0x700EE0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001696")]
			[Address(RVA = "0xC16360", Offset = "0xC16360", VA = "0xC16360")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x700EF0", Offset = "0x700EF0")]
			private set
			{
			}
		}

		[Token(Token = "0x170003CC")]
		public Vector3 laggedLocation
		{
			[Token(Token = "0x6001697")]
			[Address(RVA = "0xC1636C", Offset = "0xC1636C", VA = "0xC1636C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001693")]
		[Address(RVA = "0xC15DD0", Offset = "0xC15DD0", VA = "0xC15DD0")]
		public void Update(Ray cursorRay, City city)
		{
		}

		[Token(Token = "0x6001694")]
		[Address(RVA = "0xC16218", Offset = "0xC16218", VA = "0xC16218")]
		public void OverrideLocation(Vector3 newLocation, City city)
		{
		}

		[Token(Token = "0x6001698")]
		[Address(RVA = "0xC163F0", Offset = "0xC163F0", VA = "0xC163F0")]
		public WorldCursor()
		{
		}
	}

	[Token(Token = "0x200034D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F56C0", Offset = "0x6F56C0")]
	private sealed class <TransitionRoutine>d__211 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400157A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400157B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerInterface <>4__this;

		[Token(Token = "0x400157C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public WorldMapCity city;

		[Token(Token = "0x400157D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <transitionProgress>5__2;

		[Token(Token = "0x400157E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool <isCityActive>5__3;

		[Token(Token = "0x400157F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <targetWorldPosition>5__4;

		[Token(Token = "0x4001580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 <targetWorldScale>5__5;

		[Token(Token = "0x4001581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion <targetWorldRotation>5__6;

		[Token(Token = "0x4001582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 <startingMiniPosition>5__7;

		[Token(Token = "0x4001583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 <startingMiniScale>5__8;

		[Token(Token = "0x4001584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Quaternion <startingMiniRotation>5__9;

		[Token(Token = "0x4001585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 <targetMiniPosition>5__10;

		[Token(Token = "0x4001586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Quaternion <targetMiniRotation>5__11;

		[Token(Token = "0x4001587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector3 <targetMiniScale>5__12;

		[Token(Token = "0x4001588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 <startingWorldPosition>5__13;

		[Token(Token = "0x4001589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Vector3 <startingWorldScale>5__14;

		[Token(Token = "0x400158A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Quaternion <startingWorldRotation>5__15;

		[Token(Token = "0x170003CD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600169C")]
			[Address(RVA = "0xC15D60", Offset = "0xC15D60", VA = "0xC15D60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003CE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600169E")]
			[Address(RVA = "0xC15DC8", Offset = "0xC15DC8", VA = "0xC15DC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001699")]
		[Address(RVA = "0xC15534", Offset = "0xC15534", VA = "0xC15534")]
		[DebuggerHidden]
		public <TransitionRoutine>d__211(int <>1__state)
		{
		}

		[Token(Token = "0x600169A")]
		[Address(RVA = "0xC15560", Offset = "0xC15560", VA = "0xC15560", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600169B")]
		[Address(RVA = "0xC15564", Offset = "0xC15564", VA = "0xC15564", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600169D")]
		[Address(RVA = "0xC15D68", Offset = "0xC15D68", VA = "0xC15D68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6438", Offset = "0x6F6438")]
	private Player <player>k__BackingField;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6448", Offset = "0x6F6448")]
	private PlayerTool <currentTool>k__BackingField;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SettingsMenu settingsMenu;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SettingsMenu settingsMenuOnStart;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SaveMenu saveMenuOnError;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public CreditsPanel creditsPanel;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public DialogMessage dialogMessage;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public HandTrackingDialog handTrackingDialog;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public PicoPlayBoundaryDialog picoPlayBoundaryClosedDialog;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject navCube;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject wheelMenuRoot;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform wheelMenuUntrackedRoot;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BuildingEffectCalculator buildingEffectCalculator;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject buildingPlacementEffectPrefab;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public MeshRenderer blackVoid;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public ControllerLabels leftHandControllerLabels;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public ControllerLabels rightHandControllerLabels;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6458", Offset = "0x6F6458")]
	private ControllerLabels.LabelType <activeControllerLabels>k__BackingField;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float wheelMenuUntrackedRootDepth;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public ActiveToolDisplay activeToolDisplay;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public HintArrow hintArrow;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Smartwatch watch;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Transform watchRoot;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Transform watchLeftHandRoot;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Transform watchRightHandRoot;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AudioSource interfaceAudio;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Canvas mainCanvas;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float mainCanvasHeight;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private float mainCanvasDepth;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Quaternion mainCanvasStartingRotation;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public float idealCanvasHeightOffsetFromEyeHeight;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public float minCanvasHeight;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6468", Offset = "0x6F6468")]
	private SelectedInfoBox <selectedInfoBox>k__BackingField;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameObject selectedInfoBoxPrefab;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public ConstructionCost toolCost;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6478", Offset = "0x6F6478")]
	private Mode <currentMode>k__BackingField;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool fakeVRInEditor;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject cursorPrefab;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject circleMeshPrefab;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public GameObject highlightSpot;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public float grabMoveSpeed;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public float cameraAngle;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public float minCameraHeight;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public float maxCameraHeight;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public float streetViewScale;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public float streetViewHeight;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public float baseCameraHeight;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	public float baseCameraScale;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public float cameraRotationBaseSpeed;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	public float cameraZoomSpeed;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public float maxCameraRotationTranslationBaseSpeed;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private bool snapRotatedLastFrame;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public float uiScale2D;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	public Vector3 uiOffset2D;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private Vector3 grabMovePlayerStartPosition;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6488", Offset = "0x6F6488")]
	private bool <isPrimaryGrabMoving>k__BackingField;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6498", Offset = "0x6F6498")]
	private bool <isSecondaryGrabMoving>k__BackingField;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F64A8", Offset = "0x6F64A8")]
	private bool <isGrabZooming>k__BackingField;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F64B8", Offset = "0x6F64B8")]
	private bool <isGrabRotating>k__BackingField;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F64C8", Offset = "0x6F64C8")]
	private float <grabRotationAngle>k__BackingField;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F64D8", Offset = "0x6F64D8")]
	private float <grabRotationAngleSmooth>k__BackingField;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F64E8", Offset = "0x6F64E8")]
	private float <grabZoomScaleDifference>k__BackingField;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F64F8", Offset = "0x6F64F8")]
	private Vector3 <grabMoveCursorStart>k__BackingField;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6508", Offset = "0x6F6508")]
	private Vector3 <grabMoveSecondaryCursorStart>k__BackingField;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private List<GameObject> cursorPool;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6518", Offset = "0x6F6518")]
	private VRControllerInputModule <vrInputModule>k__BackingField;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public WorldCursor primaryWorldCursor;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public WorldCursor secondaryWorldCursor;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public float zoomTransitionDuration;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	private bool allowTwoHandedZoom;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private Vector3 leftGrabZoomStartPosition;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	private Vector3 rightGrabZoomStartPosition;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private float grabZoomStartScale;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	private float grabZoomStartYaw;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private Vector3 zoomStartLocation;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
	private float zoomStartScale;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private Quaternion zoomStartRotation;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private float zoomTimer;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	private Vector3 zoomTargetLocation;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private float zoomTargetScale;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
	private Quaternion zoomTargetRotation;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
	private Vector3 lastDefaultLocation;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private Quaternion lastDefaultRotation;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	private float lastDefaultScale;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
	private bool shouldClearTool;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public float navCageTransitionDuration;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	private Material navCageMaterial;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private VRHand tableGrabbedHand;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	private float tableGrabbedHandStartWorldHeight;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
	private float tableHandleStartWorldHeight;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public Vector3 buildButtonHoverOffset;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
	public Vector3 wheelMenuHoverOffset;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	public Vector3 undoButtonHoverOffset;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
	public Vector3 bubbleMenuBaseOffsetFromCamera;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	private bool wasLeftGrabPressed;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B9")]
	private bool wasRightGrabPressed;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
	public float transitionDuration;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	private bool isTransitioning;

	[Token(Token = "0x170001B2")]
	public Player player
	{
		[Token(Token = "0x600085B")]
		[Address(RVA = "0xA29198", Offset = "0xA29198", VA = "0xA29198")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD314", Offset = "0x6FD314")]
		get
		{
			return null;
		}
		[Token(Token = "0x600085C")]
		[Address(RVA = "0xA291A0", Offset = "0xA291A0", VA = "0xA291A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD324", Offset = "0x6FD324")]
		private set
		{
		}
	}

	[Token(Token = "0x170001B3")]
	public PlayerTool currentTool
	{
		[Token(Token = "0x600085D")]
		[Address(RVA = "0xA291A8", Offset = "0xA291A8", VA = "0xA291A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD334", Offset = "0x6FD334")]
		get
		{
			return null;
		}
		[Token(Token = "0x600085E")]
		[Address(RVA = "0xA291B0", Offset = "0xA291B0", VA = "0xA291B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD344", Offset = "0x6FD344")]
		private set
		{
		}
	}

	[Token(Token = "0x170001B4")]
	public ControllerLabels.LabelType activeControllerLabels
	{
		[Token(Token = "0x600085F")]
		[Address(RVA = "0xA291B8", Offset = "0xA291B8", VA = "0xA291B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD354", Offset = "0x6FD354")]
		get
		{
			return default(ControllerLabels.LabelType);
		}
		[Token(Token = "0x6000860")]
		[Address(RVA = "0xA291C0", Offset = "0xA291C0", VA = "0xA291C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD364", Offset = "0x6FD364")]
		set
		{
		}
	}

	[Token(Token = "0x170001B5")]
	public WheelMenu wheelMenu
	{
		[Token(Token = "0x6000861")]
		[Address(RVA = "0xA291C8", Offset = "0xA291C8", VA = "0xA291C8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001B6")]
	public bool isAnyCursorBlockingMenuOpen
	{
		[Token(Token = "0x6000862")]
		[Address(RVA = "0xA29220", Offset = "0xA29220", VA = "0xA29220")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001B7")]
	public Camera eventCamera
	{
		[Token(Token = "0x6000863")]
		[Address(RVA = "0xA292DC", Offset = "0xA292DC", VA = "0xA292DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001B8")]
	public SelectedInfoBox selectedInfoBox
	{
		[Token(Token = "0x6000864")]
		[Address(RVA = "0xA292F8", Offset = "0xA292F8", VA = "0xA292F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD374", Offset = "0x6FD374")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000865")]
		[Address(RVA = "0xA29300", Offset = "0xA29300", VA = "0xA29300")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD384", Offset = "0x6FD384")]
		private set
		{
		}
	}

	[Token(Token = "0x170001B9")]
	public Mode currentMode
	{
		[Token(Token = "0x6000866")]
		[Address(RVA = "0xA29308", Offset = "0xA29308", VA = "0xA29308")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD394", Offset = "0x6FD394")]
		get
		{
			return default(Mode);
		}
		[Token(Token = "0x6000867")]
		[Address(RVA = "0xA29310", Offset = "0xA29310", VA = "0xA29310")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD3A4", Offset = "0x6FD3A4")]
		private set
		{
		}
	}

	[Token(Token = "0x170001BA")]
	public bool isVRMode
	{
		[Token(Token = "0x6000868")]
		[Address(RVA = "0xA29318", Offset = "0xA29318", VA = "0xA29318")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001BB")]
	public float cameraRotationSpeed
	{
		[Token(Token = "0x6000869")]
		[Address(RVA = "0xA293B0", Offset = "0xA293B0", VA = "0xA293B0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001BC")]
	public float maxCameraRotationTranslationSpeed
	{
		[Token(Token = "0x600086A")]
		[Address(RVA = "0xA29454", Offset = "0xA29454", VA = "0xA29454")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001BD")]
	public bool useSnapRotation
	{
		[Token(Token = "0x600086B")]
		[Address(RVA = "0xA294F8", Offset = "0xA294F8", VA = "0xA294F8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001BE")]
	public float snapRotationAngle
	{
		[Token(Token = "0x600086C")]
		[Address(RVA = "0xA29528", Offset = "0xA29528", VA = "0xA29528")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001BF")]
	public bool isGrabMoving
	{
		[Token(Token = "0x600086D")]
		[Address(RVA = "0xA29564", Offset = "0xA29564", VA = "0xA29564")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001C0")]
	public bool isUsingAnyGrabMovement
	{
		[Token(Token = "0x600086E")]
		[Address(RVA = "0xA29584", Offset = "0xA29584", VA = "0xA29584")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001C1")]
	public bool isPrimaryGrabMoving
	{
		[Token(Token = "0x600086F")]
		[Address(RVA = "0xA295B4", Offset = "0xA295B4", VA = "0xA295B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD3B4", Offset = "0x6FD3B4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000870")]
		[Address(RVA = "0xA295BC", Offset = "0xA295BC", VA = "0xA295BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD3C4", Offset = "0x6FD3C4")]
		private set
		{
		}
	}

	[Token(Token = "0x170001C2")]
	public bool isSecondaryGrabMoving
	{
		[Token(Token = "0x6000871")]
		[Address(RVA = "0xA295C8", Offset = "0xA295C8", VA = "0xA295C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD3D4", Offset = "0x6FD3D4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000872")]
		[Address(RVA = "0xA295D0", Offset = "0xA295D0", VA = "0xA295D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD3E4", Offset = "0x6FD3E4")]
		private set
		{
		}
	}

	[Token(Token = "0x170001C3")]
	public bool isGrabZooming
	{
		[Token(Token = "0x6000873")]
		[Address(RVA = "0xA295DC", Offset = "0xA295DC", VA = "0xA295DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD3F4", Offset = "0x6FD3F4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000874")]
		[Address(RVA = "0xA295E4", Offset = "0xA295E4", VA = "0xA295E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD404", Offset = "0x6FD404")]
		private set
		{
		}
	}

	[Token(Token = "0x170001C4")]
	public bool isGrabRotating
	{
		[Token(Token = "0x6000875")]
		[Address(RVA = "0xA295F0", Offset = "0xA295F0", VA = "0xA295F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD414", Offset = "0x6FD414")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000876")]
		[Address(RVA = "0xA295F8", Offset = "0xA295F8", VA = "0xA295F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD424", Offset = "0x6FD424")]
		private set
		{
		}
	}

	[Token(Token = "0x170001C5")]
	public bool allowGrabZoomOrRotate
	{
		[Token(Token = "0x6000877")]
		[Address(RVA = "0xA29604", Offset = "0xA29604", VA = "0xA29604")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001C6")]
	public float grabRotationAngle
	{
		[Token(Token = "0x6000878")]
		[Address(RVA = "0xA29628", Offset = "0xA29628", VA = "0xA29628")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD434", Offset = "0x6FD434")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000879")]
		[Address(RVA = "0xA29630", Offset = "0xA29630", VA = "0xA29630")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD444", Offset = "0x6FD444")]
		private set
		{
		}
	}

	[Token(Token = "0x170001C7")]
	public float grabRotationAngleSmooth
	{
		[Token(Token = "0x600087A")]
		[Address(RVA = "0xA29638", Offset = "0xA29638", VA = "0xA29638")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD454", Offset = "0x6FD454")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600087B")]
		[Address(RVA = "0xA29640", Offset = "0xA29640", VA = "0xA29640")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD464", Offset = "0x6FD464")]
		private set
		{
		}
	}

	[Token(Token = "0x170001C8")]
	public float grabZoomScaleDifference
	{
		[Token(Token = "0x600087C")]
		[Address(RVA = "0xA29648", Offset = "0xA29648", VA = "0xA29648")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD474", Offset = "0x6FD474")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600087D")]
		[Address(RVA = "0xA29650", Offset = "0xA29650", VA = "0xA29650")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD484", Offset = "0x6FD484")]
		private set
		{
		}
	}

	[Token(Token = "0x170001C9")]
	public Vector3 grabMoveCursorStart
	{
		[Token(Token = "0x600087E")]
		[Address(RVA = "0xA29658", Offset = "0xA29658", VA = "0xA29658")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD494", Offset = "0x6FD494")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600087F")]
		[Address(RVA = "0xA29668", Offset = "0xA29668", VA = "0xA29668")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD4A4", Offset = "0x6FD4A4")]
		private set
		{
		}
	}

	[Token(Token = "0x170001CA")]
	public Vector3 grabMoveSecondaryCursorStart
	{
		[Token(Token = "0x6000880")]
		[Address(RVA = "0xA29678", Offset = "0xA29678", VA = "0xA29678")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD4B4", Offset = "0x6FD4B4")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000881")]
		[Address(RVA = "0xA29688", Offset = "0xA29688", VA = "0xA29688")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD4C4", Offset = "0x6FD4C4")]
		private set
		{
		}
	}

	[Token(Token = "0x170001CB")]
	public VRControllerInputModule vrInputModule
	{
		[Token(Token = "0x6000882")]
		[Address(RVA = "0xA29698", Offset = "0xA29698", VA = "0xA29698")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD4D4", Offset = "0x6FD4D4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000883")]
		[Address(RVA = "0xA296A0", Offset = "0xA296A0", VA = "0xA296A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD4E4", Offset = "0x6FD4E4")]
		private set
		{
		}
	}

	[Token(Token = "0x170001CC")]
	public bool isZooming
	{
		[Token(Token = "0x6000884")]
		[Address(RVA = "0xA26E7C", Offset = "0xA26E7C", VA = "0xA26E7C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001CD")]
	public bool areAnyDialogsOpen
	{
		[Token(Token = "0x6000885")]
		[Address(RVA = "0xA2927C", Offset = "0xA2927C", VA = "0xA2927C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001CE")]
	private bool shouldHideTool
	{
		[Token(Token = "0x6000886")]
		[Address(RVA = "0xA296A8", Offset = "0xA296A8", VA = "0xA296A8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001CF")]
	private float navCageAlpha
	{
		[Token(Token = "0x6000887")]
		[Address(RVA = "0xA29778", Offset = "0xA29778", VA = "0xA29778")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000888")]
		[Address(RVA = "0xA297A0", Offset = "0xA297A0", VA = "0xA297A0")]
		set
		{
		}
	}

	[Token(Token = "0x170001D0")]
	public bool isPotentiallyGrabbingTable
	{
		[Token(Token = "0x6000889")]
		[Address(RVA = "0xA297EC", Offset = "0xA297EC", VA = "0xA297EC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0xA298D0", Offset = "0xA298D0", VA = "0xA298D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0xA299F8", Offset = "0xA299F8", VA = "0xA299F8")]
	private void Start()
	{
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0xA29DB4", Offset = "0xA29DB4", VA = "0xA29DB4")]
	public void HideWheelMenu()
	{
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0xA29CE8", Offset = "0xA29CE8", VA = "0xA29CE8")]
	private void CreateSelectedInfoBox()
	{
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0xA29E48", Offset = "0xA29E48", VA = "0xA29E48")]
	private GameObject CreateMeshFromPool(List<GameObject> pool)
	{
		return null;
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0xA2A118", Offset = "0xA2A118", VA = "0xA2A118")]
	private static void SetLayerRecursively(GameObject obj, int layer)
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0xA2A218", Offset = "0xA2A218", VA = "0xA2A218")]
	public GameObject CreateCursor(GameObject prefab)
	{
		return null;
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0xA2A54C", Offset = "0xA2A54C", VA = "0xA2A54C")]
	public GameObject CreateCircleMesh(float radius, Color color, [Optional] Transform attachParent)
	{
		return null;
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0xA2A760", Offset = "0xA2A760", VA = "0xA2A760")]
	private void OnGameStateChanged(GameStateManager.State oldState, GameStateManager.State newState)
	{
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0xA2AD2C", Offset = "0xA2AD2C", VA = "0xA2AD2C")]
	private void OnNewGameStarted()
	{
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0xA2AE0C", Offset = "0xA2AE0C", VA = "0xA2AE0C")]
	public void FocusOnSeaport(City city)
	{
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0xA2B124", Offset = "0xA2B124", VA = "0xA2B124")]
	private void UpdateWheelPositioning()
	{
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0xA2C3B0", Offset = "0xA2C3B0", VA = "0xA2C3B0")]
	private void CalculateBuildButtonPosition(Transform menuRoot, VRHand hand, Vector3 offset)
	{
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0xA2BE04", Offset = "0xA2BE04", VA = "0xA2BE04")]
	private void CalculateMenuPosition(Transform menuRoot, VRHand hand, Vector3 offset)
	{
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0xA2C6D8", Offset = "0xA2C6D8", VA = "0xA2C6D8")]
	private void FrontEndUpdate()
	{
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0xA2D370", Offset = "0xA2D370", VA = "0xA2D370")]
	private void Update()
	{
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0xA30400", Offset = "0xA30400", VA = "0xA30400")]
	private void HandlePlayerHandPoses()
	{
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0xA21C10", Offset = "0xA21C10", VA = "0xA21C10")]
	public void AdjustMainCanvasPosition(bool force = false)
	{
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0xA3092C", Offset = "0xA3092C", VA = "0xA3092C")]
	private void AdjustMainCanvasPositionToPlayer()
	{
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0xA30878", Offset = "0xA30878", VA = "0xA30878")]
	private void ResetMainCanvasPosition()
	{
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0xA30B94", Offset = "0xA30B94", VA = "0xA30B94")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0xA30B98", Offset = "0xA30B98", VA = "0xA30B98")]
	private void HandleQuickSave(int slotIndex)
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0xA2DA24", Offset = "0xA2DA24", VA = "0xA2DA24")]
	private void InGameUpdate()
	{
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0xA2AACC", Offset = "0xA2AACC", VA = "0xA2AACC")]
	public void SwitchTool(PlayerTool tool)
	{
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0xA2AC6C", Offset = "0xA2AC6C", VA = "0xA2AC6C")]
	private void SwitchMode(Mode targetMode)
	{
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0xA3106C", Offset = "0xA3106C", VA = "0xA3106C")]
	private void OnZoomTransitionComplete()
	{
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0xA310E8", Offset = "0xA310E8", VA = "0xA310E8")]
	private void ZoomTransition(Vector3 targetPosition, Quaternion targetRotation, float targetScale)
	{
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0xA311FC", Offset = "0xA311FC", VA = "0xA311FC")]
	public void ZoomToStreetView(Vector3 location)
	{
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0xA31298", Offset = "0xA31298", VA = "0xA31298")]
	public void ZoomBackToDefault()
	{
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0xA30DEC", Offset = "0xA30DEC", VA = "0xA30DEC")]
	private void HandleZoomAnimation()
	{
	}

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0xA312E0", Offset = "0xA312E0", VA = "0xA312E0")]
	public void ClearTool()
	{
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0xA270D4", Offset = "0xA270D4", VA = "0xA270D4")]
	public void FillSaveData(Player.PlayerSaveData saveData)
	{
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0xA312EC", Offset = "0xA312EC", VA = "0xA312EC")]
	public void TransitionToCity(WorldMapCity city)
	{
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0xA31324", Offset = "0xA31324", VA = "0xA31324")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FD4F4", Offset = "0x6FD4F4")]
	private IEnumerator TransitionRoutine(WorldMapCity city)
	{
		return null;
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0xA313A0", Offset = "0xA313A0", VA = "0xA313A0")]
	private void OnInputSystemChanged(IInputSystem newSystem)
	{
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0xA314C0", Offset = "0xA314C0", VA = "0xA314C0")]
	public PlayerInterface()
	{
	}
}
[Token(Token = "0x20000CB")]
public class StressTester : MonoBehaviour
{
	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] stressTestBuildings;

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0xA7EF3C", Offset = "0xA7EF3C", VA = "0xA7EF3C")]
	private void ClearMapForStressTesting(City city)
	{
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0xA7F1D8", Offset = "0xA7F1D8", VA = "0xA7F1D8")]
	private BuildingInfo GetRandomZoneBuilding()
	{
		return null;
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0xA7F2C0", Offset = "0xA7F2C0", VA = "0xA7F2C0")]
	public void StressTestZoneBuildings()
	{
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0xA7F62C", Offset = "0xA7F62C", VA = "0xA7F62C")]
	public void StressTest(int buildingIndex)
	{
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0xA7F830", Offset = "0xA7F830", VA = "0xA7F830")]
	public StressTester()
	{
	}
}
[Token(Token = "0x20000CC")]
public class ToolbarButton : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x200034E")]
	public enum ButtonType
	{
		[Token(Token = "0x400158C")]
		Category,
		[Token(Token = "0x400158D")]
		RoadTool,
		[Token(Token = "0x400158E")]
		BuildingTool,
		[Token(Token = "0x400158F")]
		BulldozeRegionTool,
		[Token(Token = "0x4001590")]
		ZoneTool,
		[Token(Token = "0x4001591")]
		ZoomOutTool,
		[Token(Token = "0x4001592")]
		StreetViewTool,
		[Token(Token = "0x4001593")]
		PropTool
	}

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string toolName;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string toolDescription;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ButtonType buttonType;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public BuildingInfo buildingType;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ZoneManager.ZoneType zoneType;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public PropCollection propCollection;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject subMenu;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject toolInfoPanel;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ToolbarHandler handler;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Player player;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private ToolbarButton parent;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<ToolbarButton> children;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ToolbarButton lastSelectedChild;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Button button;

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0xB2B21C", Offset = "0xB2B21C", VA = "0xB2B21C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0xB2B40C", Offset = "0xB2B40C", VA = "0xB2B40C")]
	private void Start()
	{
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0xB2B4A4", Offset = "0xB2B4A4", VA = "0xB2B4A4")]
	private void OnClick()
	{
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0xB2B53C", Offset = "0xB2B53C", VA = "0xB2B53C")]
	public void Unselect()
	{
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0xB2B784", Offset = "0xB2B784", VA = "0xB2B784")]
	public void Select()
	{
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0xB2BD8C", Offset = "0xB2BD8C", VA = "0xB2BD8C", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0xB2C4AC", Offset = "0xB2C4AC", VA = "0xB2C4AC", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0xB2C4D0", Offset = "0xB2C4D0", VA = "0xB2C4D0")]
	public ToolbarButton()
	{
	}
}
[Token(Token = "0x20000CD")]
public class ToolbarHandler : MonoBehaviour
{
	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ToolTipManager toolTip;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text moneyText;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text moneyDeltaText;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text populationText;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text populationDeltaText;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text monthText;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text dayText;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text yearText;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text cityLevelText;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text cityLevelName;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Image cityLevelProgress;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform infoPanelRoot;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6528", Offset = "0x6F6528")]
	private ToolbarButton <activeCategoryButton>k__BackingField;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6538", Offset = "0x6F6538")]
	private ToolbarButton <activeToolButton>k__BackingField;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6548", Offset = "0x6F6548")]
	private GameObject <activeToolInfoPanel>k__BackingField;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public ColorBlock selectedButtonColors;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public ColorBlock unselectedButtonColors;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Player player;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public BuildingInfo testBuilding;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private bool organisedButtons;

	[Token(Token = "0x170001D1")]
	public ToolbarButton activeCategoryButton
	{
		[Token(Token = "0x60008BC")]
		[Address(RVA = "0xB2C4D8", Offset = "0xB2C4D8", VA = "0xB2C4D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD558", Offset = "0x6FD558")]
		get
		{
			return null;
		}
		[Token(Token = "0x60008BD")]
		[Address(RVA = "0xB2C4E0", Offset = "0xB2C4E0", VA = "0xB2C4E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD568", Offset = "0x6FD568")]
		set
		{
		}
	}

	[Token(Token = "0x170001D2")]
	public ToolbarButton activeToolButton
	{
		[Token(Token = "0x60008BE")]
		[Address(RVA = "0xB2C4E8", Offset = "0xB2C4E8", VA = "0xB2C4E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD578", Offset = "0x6FD578")]
		get
		{
			return null;
		}
		[Token(Token = "0x60008BF")]
		[Address(RVA = "0xB2C4F0", Offset = "0xB2C4F0", VA = "0xB2C4F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD588", Offset = "0x6FD588")]
		set
		{
		}
	}

	[Token(Token = "0x170001D3")]
	public GameObject activeToolInfoPanel
	{
		[Token(Token = "0x60008C0")]
		[Address(RVA = "0xB2C4F8", Offset = "0xB2C4F8", VA = "0xB2C4F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD598", Offset = "0x6FD598")]
		get
		{
			return null;
		}
		[Token(Token = "0x60008C1")]
		[Address(RVA = "0xB2C500", Offset = "0xB2C500", VA = "0xB2C500")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD5A8", Offset = "0x6FD5A8")]
		set
		{
		}
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0xB2C508", Offset = "0xB2C508", VA = "0xB2C508")]
	private void Start()
	{
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0xB2C560", Offset = "0xB2C560", VA = "0xB2C560")]
	private void OrganiseElement(Transform target)
	{
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0xB2C828", Offset = "0xB2C828", VA = "0xB2C828")]
	private void OrganiseButtons()
	{
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0xB2C9D0", Offset = "0xB2C9D0", VA = "0xB2C9D0")]
	private void Update()
	{
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0xB2CD80", Offset = "0xB2CD80", VA = "0xB2CD80")]
	public void ShowInfoPanel(ToolMenu.Entry toolDetails)
	{
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0xB2CED0", Offset = "0xB2CED0", VA = "0xB2CED0")]
	public ToolbarHandler()
	{
	}
}
[Token(Token = "0x20000CE")]
public class BuildingTool : PlayerTool
{
	[Serializable]
	[Token(Token = "0x200034F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F56D0", Offset = "0x6F56D0")]
	private sealed class <>c
	{
		[Token(Token = "0x4001594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static BuildingHighlighter.HighlightMatcher <>9__30_2;

		[Token(Token = "0x4001596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static BuildingHighlighter.HighlightMatcher <>9__30_3;

		[Token(Token = "0x4001597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static BuildingHighlighter.HighlightMatcher <>9__30_4;

		[Token(Token = "0x4001598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static BuildingHighlighter.HighlightMatcher <>9__30_5;

		[Token(Token = "0x60016A0")]
		[Address(RVA = "0xBA0568", Offset = "0xBA0568", VA = "0xBA0568")]
		public <>c()
		{
		}

		[Token(Token = "0x60016A1")]
		[Address(RVA = "0xBA0570", Offset = "0xBA0570", VA = "0xBA0570")]
		internal bool <OnInit>b__30_2(BuildingInstance x)
		{
			return default(bool);
		}

		[Token(Token = "0x60016A2")]
		[Address(RVA = "0xBA059C", Offset = "0xBA059C", VA = "0xBA059C")]
		internal bool <OnInit>b__30_3(BuildingInstance x)
		{
			return default(bool);
		}

		[Token(Token = "0x60016A3")]
		[Address(RVA = "0xBA05C8", Offset = "0xBA05C8", VA = "0xBA05C8")]
		internal bool <OnInit>b__30_4(BuildingInstance x)
		{
			return default(bool);
		}

		[Token(Token = "0x60016A4")]
		[Address(RVA = "0xBA05F4", Offset = "0xBA05F4", VA = "0xBA05F4")]
		internal bool <OnInit>b__30_5(BuildingInstance x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool debugPlaceAnywhere;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6558", Offset = "0x6F6558")]
	private BuildingInfo <buildingType>k__BackingField;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject cursor;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6568", Offset = "0x6F6568")]
	private GameObject <previewMesh>k__BackingField;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private WindTurbine windTurbine;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int previewX;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int previewY;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int previewRot;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6578", Offset = "0x6F6578")]
	private bool <hasValidPreviewLocation>k__BackingField;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6588", Offset = "0x6F6588")]
	private BuildingInstance <upgradeTargetBuilding>k__BackingField;

	[Token(Token = "0x4000610")]
	private const float cursorFloatHeight = 0.05f;

	[Token(Token = "0x4000611")]
	private const float buildingPreviewFloatHeight = 0.03f;

	[Token(Token = "0x170001D4")]
	public override bool toolUnlocksRegions
	{
		[Token(Token = "0x60008C8")]
		[Address(RVA = "0xB9D178", Offset = "0xB9D178", VA = "0xB9D178", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001D5")]
	public override bool toolShouldPlaceImmediately
	{
		[Token(Token = "0x60008C9")]
		[Address(RVA = "0xB9D180", Offset = "0xB9D180", VA = "0xB9D180", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001D6")]
	public BuildingInfo buildingType
	{
		[Token(Token = "0x60008CA")]
		[Address(RVA = "0xB9D188", Offset = "0xB9D188", VA = "0xB9D188")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD5B8", Offset = "0x6FD5B8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60008CB")]
		[Address(RVA = "0xB9D190", Offset = "0xB9D190", VA = "0xB9D190")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD5C8", Offset = "0x6FD5C8")]
		private set
		{
		}
	}

	[Token(Token = "0x170001D7")]
	public GameObject previewMesh
	{
		[Token(Token = "0x60008CC")]
		[Address(RVA = "0xB9D198", Offset = "0xB9D198", VA = "0xB9D198")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD5D8", Offset = "0x6FD5D8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60008CD")]
		[Address(RVA = "0xB9D1A0", Offset = "0xB9D1A0", VA = "0xB9D1A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD5E8", Offset = "0x6FD5E8")]
		private set
		{
		}
	}

	[Token(Token = "0x170001D8")]
	public bool hasValidPreviewLocation
	{
		[Token(Token = "0x60008CE")]
		[Address(RVA = "0xB9D1A8", Offset = "0xB9D1A8", VA = "0xB9D1A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD5F8", Offset = "0x6FD5F8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60008CF")]
		[Address(RVA = "0xB9D1B0", Offset = "0xB9D1B0", VA = "0xB9D1B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD608", Offset = "0x6FD608")]
		private set
		{
		}
	}

	[Token(Token = "0x170001D9")]
	public BuildingInstance upgradeTargetBuilding
	{
		[Token(Token = "0x60008D0")]
		[Address(RVA = "0xB9D1BC", Offset = "0xB9D1BC", VA = "0xB9D1BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD618", Offset = "0x6FD618")]
		get
		{
			return null;
		}
		[Token(Token = "0x60008D1")]
		[Address(RVA = "0xB9D1C4", Offset = "0xB9D1C4", VA = "0xB9D1C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD628", Offset = "0x6FD628")]
		private set
		{
		}
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0xB9D1CC", Offset = "0xB9D1CC", VA = "0xB9D1CC")]
	public BuildingTool(BuildingInfo buildingType)
	{
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0xB9D1F8", Offset = "0xB9D1F8", VA = "0xB9D1F8")]
	public bool GetPreviewLocation(out int x, out int y, out int rotation)
	{
		return default(bool);
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0xB9D234", Offset = "0xB9D234", VA = "0xB9D234", Slot = "7")]
	public override void OnInit()
	{
	}

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0xB9DCA8", Offset = "0xB9DCA8", VA = "0xB9DCA8", Slot = "8")]
	public override void Destroy()
	{
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0xB9DE90", Offset = "0xB9DE90", VA = "0xB9DE90", Slot = "13")]
	public override void SnapCursors(PlayerInterface.WorldCursor primaryCursor, PlayerInterface.WorldCursor secondaryCursor)
	{
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0xB9DEAC", Offset = "0xB9DEAC", VA = "0xB9DEAC", Slot = "20")]
	public override void OnUpdateCursors(ConstructionCost costReport)
	{
	}

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0xB9F62C", Offset = "0xB9F62C", VA = "0xB9F62C")]
	private bool FindUpgradePlacement(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0xB9F6F0", Offset = "0xB9F6F0", VA = "0xB9F6F0")]
	public Vector2 GetRoadsidePosition(int x, int y, int rot)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0xB9EEE8", Offset = "0xB9EEE8", VA = "0xB9EEE8")]
	private bool FindPlacement(out int placementX, out int placementY, out int placementRot, out BuildingManager.BuildPlacementQueryResult bestQueryResult)
	{
		return default(bool);
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0xB9F8B4", Offset = "0xB9F8B4", VA = "0xB9F8B4", Slot = "12")]
	protected override bool PlaceInSelection(ConstructionCost cost)
	{
		return default(bool);
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0xB9FDF0", Offset = "0xB9FDF0", VA = "0xB9FDF0", Slot = "11")]
	public override bool IsSelectionValid()
	{
		return default(bool);
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0xB9FE38", Offset = "0xB9FE38", VA = "0xB9FE38", Slot = "21")]
	public override void CalculateCost(ConstructionCost costReport)
	{
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0xBA030C", Offset = "0xBA030C", VA = "0xBA030C", Slot = "17")]
	public override void OnEndInteraction(ConstructionCost cost)
	{
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0xBA040C", Offset = "0xBA040C", VA = "0xBA040C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD638", Offset = "0x6FD638")]
	private bool <OnInit>b__30_0(BuildingInstance x)
	{
		return default(bool);
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0xBA0444", Offset = "0xBA0444", VA = "0xBA0444")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD648", Offset = "0x6FD648")]
	private bool <OnInit>b__30_1(BuildingInstance x)
	{
		return default(bool);
	}

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0xBA047C", Offset = "0xBA047C", VA = "0xBA047C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD658", Offset = "0x6FD658")]
	private bool <OnInit>b__30_6(BuildingInstance x)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000CF")]
public class BulldozeRegionTool : RegionTool
{
	[Token(Token = "0x60008E2")]
	[Address(RVA = "0xBA0638", Offset = "0xBA0638", VA = "0xBA0638", Slot = "11")]
	public override bool IsSelectionValid()
	{
		return default(bool);
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0xBA0640", Offset = "0xBA0640", VA = "0xBA0640", Slot = "12")]
	protected override bool PlaceInSelection(ConstructionCost cost)
	{
		return default(bool);
	}

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0xBA0A68", Offset = "0xBA0A68", VA = "0xBA0A68", Slot = "21")]
	public override void CalculateCost(ConstructionCost costReport)
	{
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0xBA0C60", Offset = "0xBA0C60", VA = "0xBA0C60", Slot = "20")]
	public override void OnUpdateCursors(ConstructionCost costReport)
	{
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0xBA0E08", Offset = "0xBA0E08", VA = "0xBA0E08", Slot = "15")]
	public override void OnBeginInteraction(int gridX, int gridY)
	{
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0xBA0E5C", Offset = "0xBA0E5C", VA = "0xBA0E5C", Slot = "16")]
	public override void OnHover(int gridX, int gridY)
	{
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0xBA0F04", Offset = "0xBA0F04", VA = "0xBA0F04", Slot = "8")]
	public override void Destroy()
	{
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0xBA0FE0", Offset = "0xBA0FE0", VA = "0xBA0FE0")]
	public BulldozeRegionTool()
	{
	}
}
[Token(Token = "0x20000D0")]
public class CitySelectTool : PlayerTool
{
	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject cursor;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private City hoveredCity;

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0xC10ED0", Offset = "0xC10ED0", VA = "0xC10ED0", Slot = "7")]
	public override void OnInit()
	{
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0xC10FBC", Offset = "0xC10FBC", VA = "0xC10FBC", Slot = "20")]
	public override void OnUpdateCursors(ConstructionCost costReport)
	{
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0xC113D0", Offset = "0xC113D0", VA = "0xC113D0", Slot = "15")]
	public override void OnBeginInteraction(int gridX, int gridY)
	{
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0xC11440", Offset = "0xC11440", VA = "0xC11440")]
	public CitySelectTool()
	{
	}
}
[Token(Token = "0x20000D1")]
public class InspectTool : PlayerTool
{
	[Token(Token = "0x60008EE")]
	[Address(RVA = "0xB3B08C", Offset = "0xB3B08C", VA = "0xB3B08C", Slot = "20")]
	public override void OnUpdateCursors(ConstructionCost costReport)
	{
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0xB3B250", Offset = "0xB3B250", VA = "0xB3B250")]
	public InspectTool()
	{
	}
}
[Token(Token = "0x20000D2")]
public class LineTool : PlayerTool
{
	[Token(Token = "0x2000350")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F56E0", Offset = "0x6F56E0")]
	private sealed class <>c__DisplayClass14_0
	{
		[Token(Token = "0x4001599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LineTool <>4__this;

		[Token(Token = "0x400159A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int score;

		[Token(Token = "0x400159B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int validEndX;

		[Token(Token = "0x400159C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int validEndY;

		[Token(Token = "0x60016A5")]
		[Address(RVA = "0xB421E8", Offset = "0xB421E8", VA = "0xB421E8")]
		public <>c__DisplayClass14_0()
		{
		}

		[Token(Token = "0x60016A6")]
		[Address(RVA = "0xB434DC", Offset = "0xB434DC", VA = "0xB434DC")]
		internal bool <EvaluatePath>b__0(int x, int y)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject primaryCursor;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject secondaryCursor;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material primaryCursorMaterial;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material secondaryCursorMaterial;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected int endX;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	protected int endY;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected bool isHorizontalFirst;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	protected bool attemptingFailedRegionUnlock;

	[Token(Token = "0x400061C")]
	private const float cursorFloatHeight = 0.05f;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	private bool needToDetermineHorizontalFirst;

	[Token(Token = "0x170001DA")]
	public override bool supportsSecondaryCursor
	{
		[Token(Token = "0x60008F0")]
		[Address(RVA = "0xB41FA4", Offset = "0xB41FA4", VA = "0xB41FA4", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0xB41FAC", Offset = "0xB41FAC", VA = "0xB41FAC", Slot = "7")]
	public override void OnInit()
	{
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0xB420D0", Offset = "0xB420D0", VA = "0xB420D0", Slot = "13")]
	public override void SnapCursors(PlayerInterface.WorldCursor primaryCursor, PlayerInterface.WorldCursor secondaryCursor)
	{
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0xB420D4", Offset = "0xB420D4", VA = "0xB420D4", Slot = "22")]
	protected virtual void PreVisitSelectionExtents()
	{
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0xB420D8", Offset = "0xB420D8", VA = "0xB420D8")]
	private int EvaluatePath(bool horizontalFirst, int targetEndX, int targetEndY)
	{
		return default(int);
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0xB421F0", Offset = "0xB421F0", VA = "0xB421F0")]
	private void UpdateSelectionExtents()
	{
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0xB4254C", Offset = "0xB4254C", VA = "0xB4254C", Slot = "20")]
	public override void OnUpdateCursors(ConstructionCost costReport)
	{
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0xB42CC8", Offset = "0xB42CC8", VA = "0xB42CC8")]
	protected void GetDirection(int x, int y, out int deltaX, out int deltaY)
	{
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0xB42D4C", Offset = "0xB42D4C", VA = "0xB42D4C", Slot = "9")]
	public override bool VisitSelection(VisitorFunction visit)
	{
		return default(bool);
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0xB4315C", Offset = "0xB4315C", VA = "0xB4315C", Slot = "10")]
	public override bool IsCellInSelection(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0xB4332C", Offset = "0xB4332C", VA = "0xB4332C", Slot = "11")]
	public override bool IsSelectionValid()
	{
		return default(bool);
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0xB433AC", Offset = "0xB433AC", VA = "0xB433AC", Slot = "12")]
	protected override bool PlaceInSelection(ConstructionCost cost)
	{
		return default(bool);
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0xB4344C", Offset = "0xB4344C", VA = "0xB4344C", Slot = "23")]
	protected virtual bool PlaceInCell(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0xB43454", Offset = "0xB43454", VA = "0xB43454", Slot = "24")]
	protected virtual bool IsCellValid(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0xB4345C", Offset = "0xB4345C", VA = "0xB4345C", Slot = "15")]
	public override void OnBeginInteraction(int gridX, int gridY)
	{
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0xB434BC", Offset = "0xB434BC", VA = "0xB434BC")]
	public LineTool()
	{
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0xB434CC", Offset = "0xB434CC", VA = "0xB434CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD668", Offset = "0x6FD668")]
	private bool <PlaceInSelection>b__22_0(int x, int y)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000D3")]
public class PlantBoxTool : LineTool
{
	[Token(Token = "0x2000351")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F56F0", Offset = "0x6F56F0")]
	private sealed class <>c__DisplayClass4_0
	{
		[Token(Token = "0x400159D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PropCollection propCollection;

		[Token(Token = "0x60016A7")]
		[Address(RVA = "0xA24E9C", Offset = "0xA24E9C", VA = "0xA24E9C")]
		public <>c__DisplayClass4_0()
		{
		}

		[Token(Token = "0x60016A8")]
		[Address(RVA = "0xA2652C", Offset = "0xA2652C", VA = "0xA2652C")]
		internal bool <.ctor>b__0(PropCollection x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000352")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5700", Offset = "0x6F5700")]
	private sealed class <>c__DisplayClass13_0
	{
		[Token(Token = "0x400159E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlantBoxTool <>4__this;

		[Token(Token = "0x400159F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ConstructionCost costReport;

		[Token(Token = "0x60016A9")]
		[Address(RVA = "0xA261D8", Offset = "0xA261D8", VA = "0xA261D8")]
		public <>c__DisplayClass13_0()
		{
		}

		[Token(Token = "0x60016AA")]
		[Address(RVA = "0xA26364", Offset = "0xA26364", VA = "0xA26364")]
		internal bool <CalculateCost>b__0(int x, int y)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int propCollectionIndex;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool previewNeedRefresh;

	[Token(Token = "0x170001DB")]
	public override bool toolUnlocksRegions
	{
		[Token(Token = "0x6000901")]
		[Address(RVA = "0xA24D60", Offset = "0xA24D60", VA = "0xA24D60", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0xA24D68", Offset = "0xA24D68", VA = "0xA24D68")]
	public PlantBoxTool(PropCollection propCollection)
	{
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0xA24EA4", Offset = "0xA24EA4", VA = "0xA24EA4", Slot = "24")]
	protected override bool IsCellValid(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0xA251E0", Offset = "0xA251E0", VA = "0xA251E0", Slot = "23")]
	protected override bool PlaceInCell(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0xA253F8", Offset = "0xA253F8", VA = "0xA253F8", Slot = "15")]
	public override void OnBeginInteraction(int gridX, int gridY)
	{
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0xA255D0", Offset = "0xA255D0", VA = "0xA255D0", Slot = "17")]
	public override void OnEndInteraction(ConstructionCost cost)
	{
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0xA25844", Offset = "0xA25844", VA = "0xA25844", Slot = "8")]
	public override void Destroy()
	{
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0xA25A98", Offset = "0xA25A98", VA = "0xA25A98", Slot = "20")]
	public override void OnUpdateCursors(ConstructionCost costReport)
	{
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0xA25EE0", Offset = "0xA25EE0", VA = "0xA25EE0", Slot = "12")]
	protected override bool PlaceInSelection(ConstructionCost cost)
	{
		return default(bool);
	}

	[Token(Token = "0x600090A")]
	[Address(RVA = "0xA25F7C", Offset = "0xA25F7C", VA = "0xA25F7C", Slot = "16")]
	public override void OnHover(int gridX, int gridY)
	{
	}

	[Token(Token = "0x600090B")]
	[Address(RVA = "0xA2605C", Offset = "0xA2605C", VA = "0xA2605C", Slot = "21")]
	public override void CalculateCost(ConstructionCost costReport)
	{
	}

	[Token(Token = "0x600090C")]
	[Address(RVA = "0xA261E0", Offset = "0xA261E0", VA = "0xA261E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD678", Offset = "0x6FD678")]
	private bool <OnUpdateCursors>b__10_0(int x, int y)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000D4")]
public abstract class PlayerTool
{
	[Token(Token = "0x2000353")]
	public delegate bool VisitorFunction(int x, int y);

	[Token(Token = "0x2000354")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5710", Offset = "0x6F5710")]
	private sealed class <>c__DisplayClass42_0
	{
		[Token(Token = "0x40015A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlayerTool <>4__this;

		[Token(Token = "0x40015A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ConstructionCost costReport;

		[Token(Token = "0x60016AF")]
		[Address(RVA = "0xC16C48", Offset = "0xC16C48", VA = "0xC16C48")]
		public <>c__DisplayClass42_0()
		{
		}

		[Token(Token = "0x60016B0")]
		[Address(RVA = "0xC170AC", Offset = "0xC170AC", VA = "0xC170AC")]
		internal bool <CalculateCost>b__0(int x, int y)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6598", Offset = "0x6F6598")]
	private Player <player>k__BackingField;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F65A8", Offset = "0x6F65A8")]
	private bool <active>k__BackingField;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected int startX;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected int startY;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	protected int hoverX;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected int hoverY;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F65B8", Offset = "0x6F65B8")]
	private bool <overMap>k__BackingField;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<GameObject> demolishIndicators;

	[Token(Token = "0x170001DC")]
	public City city
	{
		[Token(Token = "0x600090D")]
		[Address(RVA = "0xC16460", Offset = "0xC16460", VA = "0xC16460")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001DD")]
	public Player player
	{
		[Token(Token = "0x600090E")]
		[Address(RVA = "0xC164C8", Offset = "0xC164C8", VA = "0xC164C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD688", Offset = "0x6FD688")]
		get
		{
			return null;
		}
		[Token(Token = "0x600090F")]
		[Address(RVA = "0xC164D0", Offset = "0xC164D0", VA = "0xC164D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD698", Offset = "0x6FD698")]
		private set
		{
		}
	}

	[Token(Token = "0x170001DE")]
	protected BuildingEffectCalculator buildingEffectCalculator
	{
		[Token(Token = "0x6000910")]
		[Address(RVA = "0xC164D8", Offset = "0xC164D8", VA = "0xC164D8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001DF")]
	public bool active
	{
		[Token(Token = "0x6000911")]
		[Address(RVA = "0xC16500", Offset = "0xC16500", VA = "0xC16500")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD6A8", Offset = "0x6FD6A8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000912")]
		[Address(RVA = "0xC16508", Offset = "0xC16508", VA = "0xC16508")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD6B8", Offset = "0x6FD6B8")]
		protected set
		{
		}
	}

	[Token(Token = "0x170001E0")]
	public virtual bool supportsSecondaryCursor
	{
		[Token(Token = "0x6000913")]
		[Address(RVA = "0xC16514", Offset = "0xC16514", VA = "0xC16514", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001E1")]
	public virtual bool toolUnlocksRegions
	{
		[Token(Token = "0x6000914")]
		[Address(RVA = "0xC1651C", Offset = "0xC1651C", VA = "0xC1651C", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001E2")]
	public virtual bool toolShouldPlaceImmediately
	{
		[Token(Token = "0x6000915")]
		[Address(RVA = "0xC16524", Offset = "0xC16524", VA = "0xC16524", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001E3")]
	public bool overMap
	{
		[Token(Token = "0x6000916")]
		[Address(RVA = "0xC1652C", Offset = "0xC1652C", VA = "0xC1652C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD6C8", Offset = "0x6FD6C8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000917")]
		[Address(RVA = "0xC16534", Offset = "0xC16534", VA = "0xC16534")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD6D8", Offset = "0x6FD6D8")]
		protected set
		{
		}
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0xC16540", Offset = "0xC16540", VA = "0xC16540")]
	public void Init(Player inPlayer)
	{
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0xC16550", Offset = "0xC16550", VA = "0xC16550", Slot = "7")]
	public virtual void OnInit()
	{
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0xC16554", Offset = "0xC16554", VA = "0xC16554", Slot = "8")]
	public virtual void Destroy()
	{
	}

	[Token(Token = "0x600091B")]
	[Address(RVA = "0xC16558", Offset = "0xC16558", VA = "0xC16558", Slot = "9")]
	public virtual bool VisitSelection(VisitorFunction visit)
	{
		return default(bool);
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0xC16560", Offset = "0xC16560", VA = "0xC16560", Slot = "10")]
	public virtual bool IsCellInSelection(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x600091D")]
	[Address(RVA = "0xC16568", Offset = "0xC16568", VA = "0xC16568", Slot = "11")]
	public virtual bool IsSelectionValid()
	{
		return default(bool);
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0xC16570", Offset = "0xC16570", VA = "0xC16570", Slot = "12")]
	protected virtual bool PlaceInSelection(ConstructionCost cost)
	{
		return default(bool);
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0xC16578", Offset = "0xC16578", VA = "0xC16578", Slot = "13")]
	public virtual void SnapCursors(PlayerInterface.WorldCursor primaryCursor, PlayerInterface.WorldCursor secondaryCursor)
	{
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0xC1657C", Offset = "0xC1657C", VA = "0xC1657C", Slot = "14")]
	public virtual void OnModifyStart(int gridX, int gridY)
	{
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0xC16584", Offset = "0xC16584", VA = "0xC16584", Slot = "15")]
	public virtual void OnBeginInteraction(int gridX, int gridY)
	{
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0xC1659C", Offset = "0xC1659C", VA = "0xC1659C", Slot = "16")]
	public virtual void OnHover(int gridX, int gridY)
	{
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0xC165AC", Offset = "0xC165AC", VA = "0xC165AC", Slot = "17")]
	public virtual void OnEndInteraction(ConstructionCost cost)
	{
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0xC16B1C", Offset = "0xC16B1C", VA = "0xC16B1C", Slot = "18")]
	public virtual void Cancel(ConstructionCost cost)
	{
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0xC16B30", Offset = "0xC16B30", VA = "0xC16B30", Slot = "19")]
	public virtual void OnHoverOffMap()
	{
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0xC16B38", Offset = "0xC16B38", VA = "0xC16B38", Slot = "20")]
	public virtual void OnUpdateCursors(ConstructionCost costReport)
	{
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0xC16B3C", Offset = "0xC16B3C", VA = "0xC16B3C", Slot = "21")]
	public virtual void CalculateCost(ConstructionCost costReport)
	{
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0xC16C60", Offset = "0xC16C60", VA = "0xC16C60")]
	public void ShowDemolishIndicators(ConstructionCost costReport)
	{
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0xC1703C", Offset = "0xC1703C", VA = "0xC1703C")]
	protected PlayerTool()
	{
	}
}
[Token(Token = "0x20000D5")]
public class PropPlacementTool : PlayerTool
{
	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PropCollection propCollection;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PropInfo propInfo;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject cursor;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject previewMesh;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject circleMesh;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int previewX;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int previewY;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float previewMeshHeight;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool hasValidPreviewLocation;

	[Token(Token = "0x4000631")]
	private const float placementWiggle = 0.4f;

	[Token(Token = "0x4000632")]
	private const float scaleWiggle = 0.2f;

	[Token(Token = "0x600092A")]
	[Address(RVA = "0xC1BF90", Offset = "0xC1BF90", VA = "0xC1BF90")]
	public PropPlacementTool(PropCollection propCollection)
	{
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0xC1BFC0", Offset = "0xC1BFC0", VA = "0xC1BFC0", Slot = "7")]
	public override void OnInit()
	{
	}

	[Token(Token = "0x600092C")]
	[Address(RVA = "0xC1C2A0", Offset = "0xC1C2A0", VA = "0xC1C2A0", Slot = "8")]
	public override void Destroy()
	{
	}

	[Token(Token = "0x600092D")]
	[Address(RVA = "0xC1C30C", Offset = "0xC1C30C", VA = "0xC1C30C", Slot = "13")]
	public override void SnapCursors(PlayerInterface.WorldCursor primaryCursor, PlayerInterface.WorldCursor secondaryCursor)
	{
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0xC1C488", Offset = "0xC1C488", VA = "0xC1C488")]
	private void GetPlantingTransform(int x, int y, out Vector3 position, out Quaternion rotation, out Vector3 scale)
	{
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0xC1C798", Offset = "0xC1C798", VA = "0xC1C798")]
	private bool IsValidToPlant(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0xC1C9FC", Offset = "0xC1C9FC", VA = "0xC1C9FC", Slot = "11")]
	public override bool IsSelectionValid()
	{
		return default(bool);
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0xC1CA14", Offset = "0xC1CA14", VA = "0xC1CA14", Slot = "20")]
	public override void OnUpdateCursors(ConstructionCost costReport)
	{
	}

	[Token(Token = "0x6000932")]
	[Address(RVA = "0xC1D2B4", Offset = "0xC1D2B4", VA = "0xC1D2B4", Slot = "12")]
	protected override bool PlaceInSelection(ConstructionCost costReport)
	{
		return default(bool);
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0xC1D894", Offset = "0xC1D894", VA = "0xC1D894", Slot = "15")]
	public override void OnBeginInteraction(int gridX, int gridY)
	{
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0xC1D8B8", Offset = "0xC1D8B8", VA = "0xC1D8B8", Slot = "16")]
	public override void OnHover(int gridX, int gridY)
	{
	}

	[Token(Token = "0x6000935")]
	[Address(RVA = "0xC1D8E0", Offset = "0xC1D8E0", VA = "0xC1D8E0", Slot = "17")]
	public override void OnEndInteraction(ConstructionCost cost)
	{
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0xC1D91C", Offset = "0xC1D91C", VA = "0xC1D91C", Slot = "21")]
	public override void CalculateCost(ConstructionCost costReport)
	{
	}
}
[Token(Token = "0x20000D6")]
public class RegionTool : PlayerTool
{
	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject primaryCursor;

	[Token(Token = "0x4000634")]
	private const float cursorFloatHeight = 0.05f;

	[Token(Token = "0x170001E4")]
	public override bool supportsSecondaryCursor
	{
		[Token(Token = "0x6000937")]
		[Address(RVA = "0xC1F434", Offset = "0xC1F434", VA = "0xC1F434", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000938")]
	[Address(RVA = "0xC1F43C", Offset = "0xC1F43C", VA = "0xC1F43C", Slot = "7")]
	public override void OnInit()
	{
	}

	[Token(Token = "0x6000939")]
	[Address(RVA = "0xC1F528", Offset = "0xC1F528", VA = "0xC1F528", Slot = "13")]
	public override void SnapCursors(PlayerInterface.WorldCursor primaryCursor, PlayerInterface.WorldCursor secondaryCursor)
	{
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0xC1F934", Offset = "0xC1F934", VA = "0xC1F934", Slot = "20")]
	public override void OnUpdateCursors(ConstructionCost costReport)
	{
	}

	[Token(Token = "0x600093B")]
	[Address(RVA = "0xC1FC3C", Offset = "0xC1FC3C", VA = "0xC1FC3C", Slot = "9")]
	public override bool VisitSelection(VisitorFunction visit)
	{
		return default(bool);
	}

	[Token(Token = "0x600093C")]
	[Address(RVA = "0xC1FD2C", Offset = "0xC1FD2C", VA = "0xC1FD2C")]
	public RegionTool()
	{
	}
}
[Token(Token = "0x20000D7")]
public class RoadTool : LineTool
{
	[Token(Token = "0x2000355")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5720", Offset = "0x6F5720")]
	private sealed class <>c__DisplayClass13_0
	{
		[Token(Token = "0x40015A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RoadTool <>4__this;

		[Token(Token = "0x40015A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ConstructionCost costReport;

		[Token(Token = "0x60016B1")]
		[Address(RVA = "0xC2A028", Offset = "0xC2A028", VA = "0xC2A028")]
		public <>c__DisplayClass13_0()
		{
		}

		[Token(Token = "0x60016B2")]
		[Address(RVA = "0xC2AC50", Offset = "0xC2AC50", VA = "0xC2AC50")]
		internal bool <CalculateCost>b__0(int x, int y)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
	private bool previewNeedRefresh;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private HashSet<int> regionsToUnlock;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<BridgeManager.Bridge> bridges;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int numActiveBridges;

	[Token(Token = "0x170001E5")]
	public override bool toolUnlocksRegions
	{
		[Token(Token = "0x600093D")]
		[Address(RVA = "0xC27B8C", Offset = "0xC27B8C", VA = "0xC27B8C", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600093E")]
	[Address(RVA = "0xC27B94", Offset = "0xC27B94", VA = "0xC27B94", Slot = "24")]
	protected override bool IsCellValid(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x600093F")]
	[Address(RVA = "0xC28D20", Offset = "0xC28D20", VA = "0xC28D20")]
	private bool IsRoadOrInSelection(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0xC28DD4", Offset = "0xC28DD4", VA = "0xC28DD4", Slot = "23")]
	protected override bool PlaceInCell(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0xC2917C", Offset = "0xC2917C", VA = "0xC2917C", Slot = "12")]
	protected override bool PlaceInSelection(ConstructionCost costReport)
	{
		return default(bool);
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0xC28514", Offset = "0xC28514", VA = "0xC28514")]
	private bool AttemptBridgeConstruction(int bridgeStartX, int bridgeStartY, int deltaX, int deltaY, bool checkAdjacentTile)
	{
		return default(bool);
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0xC293AC", Offset = "0xC293AC", VA = "0xC293AC", Slot = "22")]
	protected override void PreVisitSelectionExtents()
	{
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0xC29408", Offset = "0xC29408", VA = "0xC29408", Slot = "20")]
	public override void OnUpdateCursors(ConstructionCost costReport)
	{
	}

	[Token(Token = "0x6000945")]
	[Address(RVA = "0xC29B88", Offset = "0xC29B88", VA = "0xC29B88", Slot = "21")]
	public override void CalculateCost(ConstructionCost costReport)
	{
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0xC2A030", Offset = "0xC2A030", VA = "0xC2A030", Slot = "13")]
	public override void SnapCursors(PlayerInterface.WorldCursor primaryCursor, PlayerInterface.WorldCursor secondaryCursor)
	{
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0xC2A038", Offset = "0xC2A038", VA = "0xC2A038", Slot = "15")]
	public override void OnBeginInteraction(int gridX, int gridY)
	{
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0xC2A1F0", Offset = "0xC2A1F0", VA = "0xC2A1F0", Slot = "17")]
	public override void OnEndInteraction(ConstructionCost cost)
	{
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0xC2A4B8", Offset = "0xC2A4B8", VA = "0xC2A4B8", Slot = "8")]
	public override void Destroy()
	{
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0xC2A7B4", Offset = "0xC2A7B4", VA = "0xC2A7B4", Slot = "16")]
	public override void OnHover(int gridX, int gridY)
	{
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0xC2A890", Offset = "0xC2A890", VA = "0xC2A890")]
	public RoadTool()
	{
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0xC2A928", Offset = "0xC2A928", VA = "0xC2A928")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD6E8", Offset = "0x6FD6E8")]
	private bool <OnUpdateCursors>b__12_0(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0xC2ABB8", Offset = "0xC2ABB8", VA = "0xC2ABB8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD6F8", Offset = "0x6FD6F8")]
	private void <OnUpdateCursors>b__12_1(int x, int y)
	{
	}
}
[Token(Token = "0x20000D8")]
public class StreetViewTool : PlayerTool
{
	[Token(Token = "0x4000639")]
	private const float cursorScale = 0.2f;

	[Token(Token = "0x400063A")]
	private const float pavementSpacing = 0.1f;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject cursor;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material cursorMaterial;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 targetLocation;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool hasValidLocation;

	[Token(Token = "0x170001E6")]
	public override bool toolShouldPlaceImmediately
	{
		[Token(Token = "0x600094E")]
		[Address(RVA = "0xA7E38C", Offset = "0xA7E38C", VA = "0xA7E38C", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0xA7E394", Offset = "0xA7E394", VA = "0xA7E394", Slot = "7")]
	public override void OnInit()
	{
	}

	[Token(Token = "0x6000950")]
	[Address(RVA = "0xA7E500", Offset = "0xA7E500", VA = "0xA7E500", Slot = "13")]
	public override void SnapCursors(PlayerInterface.WorldCursor primaryCursor, PlayerInterface.WorldCursor secondaryCursor)
	{
	}

	[Token(Token = "0x6000951")]
	[Address(RVA = "0xA7E5BC", Offset = "0xA7E5BC", VA = "0xA7E5BC", Slot = "20")]
	public override void OnUpdateCursors(ConstructionCost costReport)
	{
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0xA7EDD8", Offset = "0xA7EDD8", VA = "0xA7EDD8", Slot = "15")]
	public override void OnBeginInteraction(int gridX, int gridY)
	{
	}

	[Token(Token = "0x6000953")]
	[Address(RVA = "0xA7EF34", Offset = "0xA7EF34", VA = "0xA7EF34")]
	public StreetViewTool()
	{
	}
}
[Token(Token = "0x20000D9")]
public class ZoneRegionTool : RegionTool
{
	[Token(Token = "0x2000356")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5730", Offset = "0x6F5730")]
	private sealed class <>c__DisplayClass9_0
	{
		[Token(Token = "0x40015A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ZoneRegionTool <>4__this;

		[Token(Token = "0x40015A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ConstructionCost costReport;

		[Token(Token = "0x40015A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool zonedAnything;

		[Token(Token = "0x60016B3")]
		[Address(RVA = "0xE0D884", Offset = "0xE0D884", VA = "0xE0D884")]
		public <>c__DisplayClass9_0()
		{
		}

		[Token(Token = "0x60016B4")]
		[Address(RVA = "0xE0E7E8", Offset = "0xE0E7E8", VA = "0xE0E7E8")]
		internal bool <PlaceInSelection>b__0(int x, int y)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000357")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5740", Offset = "0x6F5740")]
	private sealed class <>c__DisplayClass11_0
	{
		[Token(Token = "0x40015A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ZoneRegionTool <>4__this;

		[Token(Token = "0x40015A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ConstructionCost costReport;

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0xE0DEFC", Offset = "0xE0DEFC", VA = "0xE0DEFC")]
		public <>c__DisplayClass11_0()
		{
		}
	}

	[Token(Token = "0x2000358")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5750", Offset = "0x6F5750")]
	private sealed class <>c__DisplayClass11_1
	{
		[Token(Token = "0x40015A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isZoningAnything;

		[Token(Token = "0x40015AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass11_0 CS$<>8__locals1;

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0xE0DF04", Offset = "0xE0DF04", VA = "0xE0DF04")]
		public <>c__DisplayClass11_1()
		{
		}

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0xE0E584", Offset = "0xE0E584", VA = "0xE0E584")]
		internal bool <OnUpdateCursors>b__0(int x, int y)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000359")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5760", Offset = "0x6F5760")]
	private sealed class <>c__DisplayClass16_0
	{
		[Token(Token = "0x40015AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ZoneRegionTool <>4__this;

		[Token(Token = "0x40015AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ConstructionCost costReport;

		[Token(Token = "0x60016B8")]
		[Address(RVA = "0xE0E57C", Offset = "0xE0E57C", VA = "0xE0E57C")]
		public <>c__DisplayClass16_0()
		{
		}

		[Token(Token = "0x60016B9")]
		[Address(RVA = "0xE0E734", Offset = "0xE0E734", VA = "0xE0E734")]
		internal bool <CalculateCost>b__0(int x, int y)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool previewNeedRefresh;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F65C8", Offset = "0x6F65C8")]
	private ZoneManager.ZoneType <zoneType>k__BackingField;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int tilesZonedByCursor;

	[Token(Token = "0x170001E7")]
	public override bool toolUnlocksRegions
	{
		[Token(Token = "0x6000954")]
		[Address(RVA = "0xE0D61C", Offset = "0xE0D61C", VA = "0xE0D61C", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001E8")]
	public ZoneManager.ZoneType zoneType
	{
		[Token(Token = "0x6000955")]
		[Address(RVA = "0xE0D624", Offset = "0xE0D624", VA = "0xE0D624")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD708", Offset = "0x6FD708")]
		get
		{
			return default(ZoneManager.ZoneType);
		}
		[Token(Token = "0x6000956")]
		[Address(RVA = "0xE0D62C", Offset = "0xE0D62C", VA = "0xE0D62C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD718", Offset = "0x6FD718")]
		private set
		{
		}
	}

	[Token(Token = "0x6000957")]
	[Address(RVA = "0xE0D634", Offset = "0xE0D634", VA = "0xE0D634")]
	public ZoneRegionTool(ZoneManager.ZoneType zoneType)
	{
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0xE0D660", Offset = "0xE0D660", VA = "0xE0D660", Slot = "11")]
	public override bool IsSelectionValid()
	{
		return default(bool);
	}

	[Token(Token = "0x6000959")]
	[Address(RVA = "0xE0D668", Offset = "0xE0D668", VA = "0xE0D668", Slot = "12")]
	protected override bool PlaceInSelection(ConstructionCost costReport)
	{
		return default(bool);
	}

	[Token(Token = "0x600095A")]
	[Address(RVA = "0xE0D88C", Offset = "0xE0D88C", VA = "0xE0D88C", Slot = "20")]
	public override void OnUpdateCursors(ConstructionCost costReport)
	{
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0xE0DF0C", Offset = "0xE0DF0C", VA = "0xE0DF0C", Slot = "15")]
	public override void OnBeginInteraction(int gridX, int gridY)
	{
	}

	[Token(Token = "0x600095C")]
	[Address(RVA = "0xE0E03C", Offset = "0xE0E03C", VA = "0xE0E03C", Slot = "17")]
	public override void OnEndInteraction(ConstructionCost cost)
	{
	}

	[Token(Token = "0x600095D")]
	[Address(RVA = "0xE0E1AC", Offset = "0xE0E1AC", VA = "0xE0E1AC", Slot = "8")]
	public override void Destroy()
	{
	}

	[Token(Token = "0x600095E")]
	[Address(RVA = "0xE0E300", Offset = "0xE0E300", VA = "0xE0E300", Slot = "16")]
	public override void OnHover(int gridX, int gridY)
	{
	}

	[Token(Token = "0x600095F")]
	[Address(RVA = "0xE0E3B0", Offset = "0xE0E3B0", VA = "0xE0E3B0", Slot = "21")]
	public override void CalculateCost(ConstructionCost costReport)
	{
	}
}
[Token(Token = "0x20000DA")]
public class VRHand : MonoBehaviour
{
	[Token(Token = "0x200035A")]
	public enum Pose
	{
		[Token(Token = "0x40015AE")]
		Default,
		[Token(Token = "0x40015AF")]
		HoldController,
		[Token(Token = "0x40015B0")]
		HoverTableHandle,
		[Token(Token = "0x40015B1")]
		GrabTableHandle
	}

	[Token(Token = "0x4000642")]
	public const string ANIM_LAYER_NAME_POINT = "Point Layer";

	[Token(Token = "0x4000643")]
	public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

	[Token(Token = "0x4000644")]
	public const string ANIM_PARAM_NAME_FLEX = "Flex";

	[Token(Token = "0x4000645")]
	public const string ANIM_PARAM_NAME_POSE = "Pose";

	[Token(Token = "0x4000646")]
	public const float THRESH_COLLISION_FLEX = 0.9f;

	[Token(Token = "0x4000647")]
	public const float INPUT_RATE_CHANGE = 20f;

	[Token(Token = "0x4000648")]
	public const float COLLIDER_SCALE_MIN = 0.01f;

	[Token(Token = "0x4000649")]
	public const float COLLIDER_SCALE_MAX = 1f;

	[Token(Token = "0x400064A")]
	public const float COLLIDER_SCALE_PER_SECOND = 1f;

	[Token(Token = "0x400064B")]
	public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

	[Token(Token = "0x400064C")]
	public const float THUMB_DEBOUNCE_TIME = 0.15f;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator m_animator;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInput.Controller m_controller;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool shouldAllowPointFlex;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float forcePointAmount;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform guideRoot;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform menuHoverRoot;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Pose targetPose;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int m_animLayerIndexThumb;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int m_animLayerIndexPoint;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int m_animParamIndexFlex;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int m_animParamIndexPose;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool m_isPointing;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	private bool m_isGivingThumbsUp;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float m_pointBlend;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float m_thumbsUpBlend;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float tableGrabBlend;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public SphereCollider grabVolume;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool hasOverridePosition;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 overridePosition;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Quaternion overrideRotation;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F65D8", Offset = "0x6F65D8")]
	private float <overridePositionBlend>k__BackingField;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 startingLocalPosition;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Quaternion startingLocalRotation;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Transform startingParent;

	[Token(Token = "0x170001E9")]
	private bool shouldPoseToHoldController
	{
		[Token(Token = "0x6000960")]
		[Address(RVA = "0xCC3D58", Offset = "0xCC3D58", VA = "0xCC3D58")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001EA")]
	private int handPoseId
	{
		[Token(Token = "0x6000961")]
		[Address(RVA = "0xCC3D68", Offset = "0xCC3D68", VA = "0xCC3D68")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001EB")]
	public float overridePositionBlend
	{
		[Token(Token = "0x6000962")]
		[Address(RVA = "0xCC3D90", Offset = "0xCC3D90", VA = "0xCC3D90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD728", Offset = "0x6FD728")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000963")]
		[Address(RVA = "0xCC3D98", Offset = "0xCC3D98", VA = "0xCC3D98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD738", Offset = "0x6FD738")]
		private set
		{
		}
	}

	[Token(Token = "0x6000964")]
	[Address(RVA = "0xCC3DA0", Offset = "0xCC3DA0", VA = "0xCC3DA0")]
	public void SetOverridePosition(Vector3 position, Quaternion rotation)
	{
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0xCC3DE0", Offset = "0xCC3DE0", VA = "0xCC3DE0")]
	public void ClearOverridePosition()
	{
	}

	[Token(Token = "0x6000966")]
	[Address(RVA = "0xCC3E18", Offset = "0xCC3E18", VA = "0xCC3E18")]
	private void UpdateOverridePosition()
	{
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0xCC4048", Offset = "0xCC4048", VA = "0xCC4048")]
	private void Start()
	{
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0xCC415C", Offset = "0xCC415C", VA = "0xCC415C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0xCC47A4", Offset = "0xCC47A4", VA = "0xCC47A4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0xCC433C", Offset = "0xCC433C", VA = "0xCC433C")]
	private void UpdateAnimStates()
	{
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0xCC429C", Offset = "0xCC429C", VA = "0xCC429C")]
	private float InputValueRateChange(bool isDown, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0xCC4200", Offset = "0xCC4200", VA = "0xCC4200")]
	private void UpdateCapTouchStates()
	{
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0xCC47A8", Offset = "0xCC47A8", VA = "0xCC47A8")]
	public GameObject GrabVolumeCheck()
	{
		return null;
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0xCC4920", Offset = "0xCC4920", VA = "0xCC4920")]
	public VRHand()
	{
	}
}
[Token(Token = "0x20000DB")]
public class CaptureCarousel : MonoBehaviour
{
	[Token(Token = "0x200035B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5770", Offset = "0x6F5770")]
	private sealed class <Start>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40015B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40015B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40015B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CaptureCarousel <>4__this;

		[Token(Token = "0x40015B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RenderTexture <rt>5__2;

		[Token(Token = "0x40015B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <n>5__3;

		[Token(Token = "0x170003CF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016BD")]
			[Address(RVA = "0xBA1FBC", Offset = "0xBA1FBC", VA = "0xBA1FBC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016BF")]
			[Address(RVA = "0xBA2024", Offset = "0xBA2024", VA = "0xBA2024", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016BA")]
		[Address(RVA = "0xBA1890", Offset = "0xBA1890", VA = "0xBA1890")]
		[DebuggerHidden]
		public <Start>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60016BB")]
		[Address(RVA = "0xBA1980", Offset = "0xBA1980", VA = "0xBA1980", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016BC")]
		[Address(RVA = "0xBA1984", Offset = "0xBA1984", VA = "0xBA1984", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016BE")]
		[Address(RVA = "0xBA1FC4", Offset = "0xBA1FC4", VA = "0xBA1FC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera captureCamera;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int totalFrames;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleShadow shadow;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] targetObjects;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject currentTarget;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int screenshotWidth;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int screenshotHeight;

	[Token(Token = "0x600096F")]
	[Address(RVA = "0xBA1820", Offset = "0xBA1820", VA = "0xBA1820")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FD748", Offset = "0x6FD748")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0xBA18BC", Offset = "0xBA18BC", VA = "0xBA18BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0xBA1968", Offset = "0xBA1968", VA = "0xBA1968")]
	public CaptureCarousel()
	{
	}
}
[Token(Token = "0x20000DC")]
public class MontageManager : SingletonBehaviour<MontageManager>, IDebugPanelProvider
{
	[Token(Token = "0x200035C")]
	public enum State
	{
		[Token(Token = "0x40015B8")]
		Inactive,
		[Token(Token = "0x40015B9")]
		Recording,
		[Token(Token = "0x40015BA")]
		Playback,
		[Token(Token = "0x40015BB")]
		PlaybackNoTimelapse
	}

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float timeBetweenFrames;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F65E8", Offset = "0x6F65E8")]
	private State <state>k__BackingField;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int frameNumber;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private double recordStartTime;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Camera animatedCamera;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int captureWidth;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int captureHeight;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private RenderTexture captureTarget;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Texture2D captureTexture;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int frameWait;

	[Token(Token = "0x170001EC")]
	public State state
	{
		[Token(Token = "0x6000972")]
		[Address(RVA = "0xA8E0AC", Offset = "0xA8E0AC", VA = "0xA8E0AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD7AC", Offset = "0x6FD7AC")]
		get
		{
			return default(State);
		}
		[Token(Token = "0x6000973")]
		[Address(RVA = "0xA8E0B4", Offset = "0xA8E0B4", VA = "0xA8E0B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD7BC", Offset = "0x6FD7BC")]
		private set
		{
		}
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0xA8E0BC", Offset = "0xA8E0BC", VA = "0xA8E0BC")]
	private string GetSaveName(int frame)
	{
		return null;
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0xA8E138", Offset = "0xA8E138", VA = "0xA8E138")]
	private void Update()
	{
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0xA8E800", Offset = "0xA8E800", VA = "0xA8E800")]
	public void Record()
	{
	}

	[Token(Token = "0x6000977")]
	[Address(RVA = "0xA8E8F4", Offset = "0xA8E8F4", VA = "0xA8E8F4")]
	private void StartCamera()
	{
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0xA8EA60", Offset = "0xA8EA60", VA = "0xA8EA60")]
	public void Play()
	{
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0xA8EA98", Offset = "0xA8EA98", VA = "0xA8EA98")]
	private void PlayNoTimelapse()
	{
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0xA8E764", Offset = "0xA8E764", VA = "0xA8E764")]
	public void Stop()
	{
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0xA8EAD0", Offset = "0xA8EAD0", VA = "0xA8EAD0", Slot = "6")]
	public void OnDebugPanel()
	{
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0xA8EDF0", Offset = "0xA8EDF0", VA = "0xA8EDF0")]
	public MontageManager()
	{
	}
}
[Token(Token = "0x20000DD")]
[ExecuteInEditMode]
public class AmbientCubeBaker : MonoBehaviour
{
	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Color[] ambientColors;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3[] ambientDirections;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector4[] shaderVars;

	[Token(Token = "0x600097D")]
	[Address(RVA = "0xB545AC", Offset = "0xB545AC", VA = "0xB545AC")]
	private void Update()
	{
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0xB549A4", Offset = "0xB549A4", VA = "0xB549A4")]
	public AmbientCubeBaker()
	{
	}
}
[Token(Token = "0x20000DE")]
public class CarTester : CityModule
{
	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int numTestCars;

	[Token(Token = "0x600097F")]
	[Address(RVA = "0xC03B9C", Offset = "0xC03B9C", VA = "0xC03B9C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0xC03BA0", Offset = "0xC03BA0", VA = "0xC03BA0")]
	public CarTester()
	{
	}
}
[Token(Token = "0x20000DF")]
[ExecuteInEditMode]
public class GroundPlacer : MonoBehaviour
{
	[Token(Token = "0x6000981")]
	[Address(RVA = "0xB10454", Offset = "0xB10454", VA = "0xB10454")]
	private void Start()
	{
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0xB107D4", Offset = "0xB107D4", VA = "0xB107D4")]
	private float CalculateHeight(Vector3 position)
	{
		return default(float);
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0xB10458", Offset = "0xB10458", VA = "0xB10458")]
	public void PlaceOnTerrain()
	{
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0xB10938", Offset = "0xB10938", VA = "0xB10938")]
	public GroundPlacer()
	{
	}
}
[Token(Token = "0x20000E0")]
public class MeshBatchTester : MonoBehaviour
{
	[Token(Token = "0x200035D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5780", Offset = "0x6F5780")]
	private sealed class <Start>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40015BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40015BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40015BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeshBatchTester <>4__this;

		[Token(Token = "0x170003D1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016C3")]
			[Address(RVA = "0xB4C548", Offset = "0xB4C548", VA = "0xB4C548", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016C5")]
			[Address(RVA = "0xB4C5B0", Offset = "0xB4C5B0", VA = "0xB4C5B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016C0")]
		[Address(RVA = "0xB4BFC4", Offset = "0xB4BFC4", VA = "0xB4BFC4")]
		[DebuggerHidden]
		public <Start>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60016C1")]
		[Address(RVA = "0xB4C00C", Offset = "0xB4C00C", VA = "0xB4C00C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016C2")]
		[Address(RVA = "0xB4C010", Offset = "0xB4C010", VA = "0xB4C010", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016C4")]
		[Address(RVA = "0xB4C550", Offset = "0xB4C550", VA = "0xB4C550", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshBatcher batcher;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Mesh[] testMeshes;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material testMaterial;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float spacingX;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float spacingY;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int sizeX;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int sizeY;

	[Token(Token = "0x6000985")]
	[Address(RVA = "0xB4BF54", Offset = "0xB4BF54", VA = "0xB4BF54")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FD7CC", Offset = "0x6FD7CC")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0xB4BFF0", Offset = "0xB4BFF0", VA = "0xB4BFF0")]
	public MeshBatchTester()
	{
	}
}
[Token(Token = "0x20000E1")]
public class Rotate : MonoBehaviour
{
	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x6000987")]
	[Address(RVA = "0xAB66A0", Offset = "0xAB66A0", VA = "0xAB66A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0xAB67A4", Offset = "0xAB67A4", VA = "0xAB67A4")]
	public Rotate()
	{
	}
}
[Token(Token = "0x20000E2")]
public class ShadowVolume : MonoBehaviour
{
	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minHeight;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxHeight;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Camera heightCaptureCamera;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture heightCaptureTexture;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Shader heightCaptureShader;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int resolution;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material volumeUpdateMaterial;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture shadowVolumeTexture1;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture shadowVolumeTexture2;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool shadowVolumeSwitch;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int timer;

	[Token(Token = "0x170001ED")]
	private RenderTexture currentShadowVolumeTexture
	{
		[Token(Token = "0x6000989")]
		[Address(RVA = "0xACB560", Offset = "0xACB560", VA = "0xACB560")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001EE")]
	private RenderTexture previousShadowVolumeTexture
	{
		[Token(Token = "0x600098A")]
		[Address(RVA = "0xACB57C", Offset = "0xACB57C", VA = "0xACB57C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600098B")]
	[Address(RVA = "0xACB598", Offset = "0xACB598", VA = "0xACB598")]
	private void Start()
	{
	}

	[Token(Token = "0x600098C")]
	[Address(RVA = "0xACB68C", Offset = "0xACB68C", VA = "0xACB68C")]
	private void Update()
	{
	}

	[Token(Token = "0x600098D")]
	[Address(RVA = "0xACB9DC", Offset = "0xACB9DC", VA = "0xACB9DC")]
	public ShadowVolume()
	{
	}
}
[Token(Token = "0x20000E3")]
public class BudgetManager : CityModule, ISimulationModule
{
	[Token(Token = "0x200035E")]
	public enum ExpenseCategory
	{
		[Token(Token = "0x40015C0")]
		Residential,
		[Token(Token = "0x40015C1")]
		Commercial,
		[Token(Token = "0x40015C2")]
		Industrial,
		[Token(Token = "0x40015C3")]
		Police,
		[Token(Token = "0x40015C4")]
		Fire,
		[Token(Token = "0x40015C5")]
		Hospital,
		[Token(Token = "0x40015C6")]
		School,
		[Token(Token = "0x40015C7")]
		Electricity,
		[Token(Token = "0x40015C8")]
		Water,
		[Token(Token = "0x40015C9")]
		Network,
		[Token(Token = "0x40015CA")]
		Road,
		[Token(Token = "0x40015CB")]
		Loans,
		[Token(Token = "0x40015CC")]
		Uncategorised,
		[Token(Token = "0x40015CD")]
		NumCategories
	}

	[Token(Token = "0x200035F")]
	public struct BudgetReport
	{
		[Token(Token = "0x40015CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int residentialIncome;

		[Token(Token = "0x40015CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int residentialTaxCollected;

		[Token(Token = "0x40015D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int commercialIncome;

		[Token(Token = "0x40015D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int commercialTaxCollected;

		[Token(Token = "0x40015D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int industrialIncome;

		[Token(Token = "0x40015D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int industrialTaxCollected;

		[Token(Token = "0x40015D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int[] expensesByCategory;

		[Token(Token = "0x40015D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int totalExpenses;

		[Token(Token = "0x170003D3")]
		public int totalTaxesCollected
		{
			[Token(Token = "0x60016C6")]
			[Address(RVA = "0x778BF8", Offset = "0x778BF8", VA = "0x778BF8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003D4")]
		public int weeklyIncome
		{
			[Token(Token = "0x60016C7")]
			[Address(RVA = "0x778C10", Offset = "0x778C10", VA = "0x778C10")]
			get
			{
				return default(int);
			}
		}
	}

	[Token(Token = "0x2000360")]
	public class BudgetManagerSaveData : SaveSystem.ModuleData
	{
		[Token(Token = "0x40015D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int money;

		[Token(Token = "0x40015D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float timeLosingMoney;

		[Token(Token = "0x40015D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int loanRepaymentWeeksRemaining;

		[Token(Token = "0x40015D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool cityIsBankrupt;

		[Token(Token = "0x60016C8")]
		[Address(RVA = "0xB5F464", Offset = "0xB5F464", VA = "0xB5F464")]
		public BudgetManagerSaveData()
		{
		}
	}

	[Token(Token = "0x2000361")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5790", Offset = "0x6F5790")]
	private sealed class <Simulate>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40015DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40015DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40015DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BudgetManager <>4__this;

		[Token(Token = "0x40015DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float deltaTime;

		[Token(Token = "0x170003D5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016CC")]
			[Address(RVA = "0xB5FA38", Offset = "0xB5FA38", VA = "0xB5FA38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016CE")]
			[Address(RVA = "0xB5FAA0", Offset = "0xB5FAA0", VA = "0xB5FAA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016C9")]
		[Address(RVA = "0xB5F298", Offset = "0xB5F298", VA = "0xB5F298")]
		[DebuggerHidden]
		public <Simulate>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x60016CA")]
		[Address(RVA = "0xB5F530", Offset = "0xB5F530", VA = "0xB5F530", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016CB")]
		[Address(RVA = "0xB5F534", Offset = "0xB5F534", VA = "0xB5F534", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016CD")]
		[Address(RVA = "0xB5FA40", Offset = "0xB5FA40", VA = "0xB5FA40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F65F8", Offset = "0x6F65F8")]
	private int <money>k__BackingField;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BudgetReport latestReport;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int maxTaxRate;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int minTaxRate;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int residentialTaxRate;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int commercialTaxRate;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int industrialTaxRate;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int loanRepaymentPeriodInWeeks;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int loanOfferAmount;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int bankruptBalanceThreshold;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int bankruptTimeThreshold;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float loanInterest;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int loanRepaymentWeeksRemaining;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float timeLosingMoney;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6608", Offset = "0x6F6608")]
	private bool <cityIsBankrupt>k__BackingField;

	[Token(Token = "0x170001EF")]
	public int money
	{
		[Token(Token = "0x600098E")]
		[Address(RVA = "0xB5EB10", Offset = "0xB5EB10", VA = "0xB5EB10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD830", Offset = "0x6FD830")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600098F")]
		[Address(RVA = "0xB5EB18", Offset = "0xB5EB18", VA = "0xB5EB18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD840", Offset = "0x6FD840")]
		set
		{
		}
	}

	[Token(Token = "0x170001F0")]
	public bool cityIsBankrupt
	{
		[Token(Token = "0x6000990")]
		[Address(RVA = "0xB5EB20", Offset = "0xB5EB20", VA = "0xB5EB20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD850", Offset = "0x6FD850")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000991")]
		[Address(RVA = "0xB5EB28", Offset = "0xB5EB28", VA = "0xB5EB28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD860", Offset = "0x6FD860")]
		private set
		{
		}
	}

	[Token(Token = "0x170001F1")]
	private Player player
	{
		[Token(Token = "0x6000992")]
		[Address(RVA = "0xB5EB34", Offset = "0xB5EB34", VA = "0xB5EB34")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001F2")]
	public override Type saveModuleDataType
	{
		[Token(Token = "0x600099C")]
		[Address(RVA = "0xB5F2C4", Offset = "0xB5F2C4", VA = "0xB5F2C4", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0xB5EB84", Offset = "0xB5EB84", VA = "0xB5EB84")]
	private void Start()
	{
	}

	[Token(Token = "0x6000994")]
	[Address(RVA = "0xB5EDD0", Offset = "0xB5EDD0", VA = "0xB5EDD0", Slot = "8")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000995")]
	[Address(RVA = "0xB5EE0C", Offset = "0xB5EE0C", VA = "0xB5EE0C")]
	public void RefreshExpenses()
	{
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0xB5EFE4", Offset = "0xB5EFE4", VA = "0xB5EFE4")]
	public int GetTaxRate(ZoneManager.ZoneType zoneType)
	{
		return default(int);
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0xB5EE14", Offset = "0xB5EE14", VA = "0xB5EE14")]
	private void CalculateExpenses(ref BudgetReport report)
	{
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0xB5EBC8", Offset = "0xB5EBC8", VA = "0xB5EBC8")]
	private BudgetReport CreateReport()
	{
		return default(BudgetReport);
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0xB5F020", Offset = "0xB5F020", VA = "0xB5F020")]
	public void ApplyWeeklyBudget(Player player)
	{
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0xB5F0B0", Offset = "0xB5F0B0", VA = "0xB5F0B0")]
	public bool CanAffordUpkeepForNewBuilding(BuildingInfo info)
	{
		return default(bool);
	}

	[Token(Token = "0x600099B")]
	[Address(RVA = "0xB5F218", Offset = "0xB5F218", VA = "0xB5F218", Slot = "11")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FD870", Offset = "0x6FD870")]
	public IEnumerator Simulate(float deltaTime)
	{
		return null;
	}

	[Token(Token = "0x600099D")]
	[Address(RVA = "0xB5F334", Offset = "0xB5F334", VA = "0xB5F334", Slot = "6")]
	public override void OnLoad(SaveSystem.SaveGame saveGame, SaveSystem.ModuleData data)
	{
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0xB5F3DC", Offset = "0xB5F3DC", VA = "0xB5F3DC", Slot = "5")]
	public override SaveSystem.ModuleData OnSave()
	{
		return null;
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0xB5F46C", Offset = "0xB5F46C", VA = "0xB5F46C", Slot = "10")]
	public override void OnResetProgress()
	{
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0xB5F4FC", Offset = "0xB5F4FC", VA = "0xB5F4FC")]
	public BudgetManager()
	{
	}

	[SpecialName]
	[Token(Token = "0x60009A1")]
	[Address(RVA = "0xB5F528", Offset = "0xB5F528", VA = "0xB5F528", Slot = "12")]
	private GameObject ISimulationModule.get_gameObject()
	{
		return null;
	}
}
[Token(Token = "0x20000E4")]
public class GlobalGameValues : ScriptableObjectSingleton<GlobalGameValues>
{
	[Serializable]
	[Token(Token = "0x2000362")]
	public class Construction
	{
		[Token(Token = "0x40015DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F9BB0", Offset = "0x6F9BB0")]
		public int roadTileCost;

		[Token(Token = "0x40015DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F9BE8", Offset = "0x6F9BE8")]
		public int bridgeTileCost;

		[Token(Token = "0x40015E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F9C20", Offset = "0x6F9C20")]
		public int demolishTileCost;

		[Token(Token = "0x40015E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F9C58", Offset = "0x6F9C58")]
		public int deforestationTileCost;

		[Token(Token = "0x40015E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F9C90", Offset = "0x6F9C90")]
		public int landscapeFeatureDemolishCostPerTile;

		[Token(Token = "0x40015E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F9CC8", Offset = "0x6F9CC8")]
		public int regionUnlockCost;

		[Token(Token = "0x40015E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F9D00", Offset = "0x6F9D00")]
		public float timeBeforeUnoccupiedBadge;

		[Token(Token = "0x40015E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F9D38", Offset = "0x6F9D38")]
		public float minBuildingAbandonmentTime;

		[Token(Token = "0x40015E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F9D70", Offset = "0x6F9D70")]
		public float buildingAbandonmentTime;

		[Token(Token = "0x40015E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F9DA8", Offset = "0x6F9DA8")]
		public float abandonedBuildingAutoDemolishTime;

		[Token(Token = "0x40015E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F9DE0", Offset = "0x6F9DE0")]
		public float abandonedBuildingZoneScorePenalty;

		[Token(Token = "0x40015E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F9E18", Offset = "0x6F9E18")]
		public int abandonedBuildingZoneScoreRadius;

		[Token(Token = "0x40015EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F9E50", Offset = "0x6F9E50")]
		public float constructionMinRequiredZoneScore;

		[Token(Token = "0x40015EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F9E88", Offset = "0x6F9E88")]
		public float timeBeforeDisplayingWarningBadges;

		[Token(Token = "0x40015EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F9EC0", Offset = "0x6F9EC0")]
		public float timeToConstructZoneBuilding;

		[Token(Token = "0x40015ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F9EF8", Offset = "0x6F9EF8")]
		public int maxConcurrentConstructionSites;

		[Token(Token = "0x40015EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F9F30", Offset = "0x6F9F30")]
		public float minReplacementTime;

		[Token(Token = "0x40015EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F9F68", Offset = "0x6F9F68")]
		public float refundPeriod;

		[Token(Token = "0x60016CF")]
		[Address(RVA = "0xB0CA88", Offset = "0xB0CA88", VA = "0xB0CA88")]
		public Construction()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000363")]
	public class Citizen
	{
		[Token(Token = "0x40015F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F9FA0", Offset = "0x6F9FA0")]
		public float loseEmploymentChance;

		[Token(Token = "0x40015F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F9FD8", Offset = "0x6F9FD8")]
		public float evictionChance;

		[Token(Token = "0x40015F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6FA010", Offset = "0x6FA010")]
		public float missingWorkUtilityTolerance;

		[Token(Token = "0x40015F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6FA048", Offset = "0x6FA048")]
		public float missingHomeUtilityTolerance;

		[Token(Token = "0x40015F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6FA080", Offset = "0x6FA080")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6FA080", Offset = "0x6FA080")]
		public float minRequiredResidentialScore;

		[Token(Token = "0x40015F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6FA0D4", Offset = "0x6FA0D4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6FA0D4", Offset = "0x6FA0D4")]
		public float minRequiredJobScore;

		[Token(Token = "0x40015F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6FA128", Offset = "0x6FA128")]
		public int maxDesiredCommuteDistance;

		[Token(Token = "0x60016D0")]
		[Address(RVA = "0xB0CA64", Offset = "0xB0CA64", VA = "0xB0CA64")]
		public Citizen()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000364")]
	public class Budget
	{
		[Token(Token = "0x60016D1")]
		[Address(RVA = "0xB0CA5C", Offset = "0xB0CA5C", VA = "0xB0CA5C")]
		public Budget()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000365")]
	public class Demand
	{
		[Token(Token = "0x40015F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6FA160", Offset = "0x6FA160")]
		public float marketDenomination;

		[Token(Token = "0x40015F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6FA198", Offset = "0x6FA198")]
		public float externalMarket;

		[Token(Token = "0x40015F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float maxLabourBase;

		[Token(Token = "0x40015FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float minProjectedIndustrial;

		[Token(Token = "0x40015FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6FA1D0", Offset = "0x6FA1D0")]
		public float birthRate;

		[Token(Token = "0x40015FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6FA208", Offset = "0x6FA208")]
		public float defaultResidentialRatio;

		[Token(Token = "0x40015FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6FA240", Offset = "0x6FA240")]
		public bool countAbandonedBuildings;

		[Token(Token = "0x60016D2")]
		[Address(RVA = "0xB0CAE8", Offset = "0xB0CAE8", VA = "0xB0CAE8")]
		public Demand()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000366")]
	public class Zones
	{
		[Serializable]
		[Token(Token = "0x200042C")]
		public class Values
		{
			[Token(Token = "0x40019AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6FABDC", Offset = "0x6FABDC")]
			public int tileBuildCost;

			[Token(Token = "0x40019AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6FAC14", Offset = "0x6FAC14")]
			public int citizenCapacityPerTile;

			[Token(Token = "0x40019AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6FAC4C", Offset = "0x6FAC4C")]
			public int incomePerTile;

			[Token(Token = "0x40019AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6FAC84", Offset = "0x6FAC84")]
			public int powerConsumptionPerTile;

			[Token(Token = "0x40019AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6FACBC", Offset = "0x6FACBC")]
			public int waterConsumptionPerTile;

			[Token(Token = "0x40019B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6FACF4", Offset = "0x6FACF4")]
			public float mediumDensityMultipler;

			[Token(Token = "0x40019B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6FAD2C", Offset = "0x6FAD2C")]
			public float highDensityMultipler;

			[Token(Token = "0x600190F")]
			[Address(RVA = "0xB0CD8C", Offset = "0xB0CD8C", VA = "0xB0CD8C")]
			public int GetCitizenCapacityPerTile(ZoneDensity density)
			{
				return default(int);
			}

			[Token(Token = "0x6001910")]
			[Address(RVA = "0xB0CDEC", Offset = "0xB0CDEC", VA = "0xB0CDEC")]
			public int GetPowerConsumptionPerTile(ZoneDensity density)
			{
				return default(int);
			}

			[Token(Token = "0x6001911")]
			[Address(RVA = "0xB0CE24", Offset = "0xB0CE24", VA = "0xB0CE24")]
			public int GetWaterConsumptionPerTile(ZoneDensity density)
			{
				return default(int);
			}

			[Token(Token = "0x6001912")]
			[Address(RVA = "0xB0CE5C", Offset = "0xB0CE5C", VA = "0xB0CE5C")]
			public int GetIncomePerTile(ZoneDensity density)
			{
				return default(int);
			}

			[Token(Token = "0x6001913")]
			[Address(RVA = "0xB0CDC4", Offset = "0xB0CDC4", VA = "0xB0CDC4")]
			public float GetZoneDensityMultiplier(ZoneDensity density)
			{
				return default(float);
			}

			[Token(Token = "0x6001914")]
			[Address(RVA = "0xB0CD64", Offset = "0xB0CD64", VA = "0xB0CD64")]
			public Values()
			{
			}
		}

		[Token(Token = "0x40015FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Values residential;

		[Token(Token = "0x40015FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Values commercial;

		[Token(Token = "0x4001600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Values industrial;

		[Token(Token = "0x60016D3")]
		[Address(RVA = "0xB0CC70", Offset = "0xB0CC70", VA = "0xB0CC70")]
		public Zones()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000367")]
	public class UI
	{
		[Token(Token = "0x4001601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6FA278", Offset = "0x6FA278")]
		[SerializeField]
		public Color costColor;

		[Token(Token = "0x4001602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6FA2C4", Offset = "0x6FA2C4")]
		public Color supplyColor;

		[Token(Token = "0x4001603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6FA2FC", Offset = "0x6FA2FC")]
		public Color utilityUsageColor;

		[Token(Token = "0x170003D7")]
		public string costColorHex
		{
			[Token(Token = "0x60016D4")]
			[Address(RVA = "0xB0CB94", Offset = "0xB0CB94", VA = "0xB0CB94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D8")]
		public string supplyColorHex
		{
			[Token(Token = "0x60016D5")]
			[Address(RVA = "0xB0CBA4", Offset = "0xB0CBA4", VA = "0xB0CBA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D9")]
		public string utilityUsageColorHex
		{
			[Token(Token = "0x60016D6")]
			[Address(RVA = "0xB0CBB4", Offset = "0xB0CBB4", VA = "0xB0CBB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016D7")]
		[Address(RVA = "0xB0CBC4", Offset = "0xB0CBC4", VA = "0xB0CBC4")]
		public UI()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000368")]
	public class Emergency
	{
		[Token(Token = "0x4001604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6FA334", Offset = "0x6FA334")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6FA334", Offset = "0x6FA334")]
		public float crimeChance;

		[Token(Token = "0x4001605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6FA388", Offset = "0x6FA388")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6FA388", Offset = "0x6FA388")]
		public float fireChance;

		[Token(Token = "0x4001606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6FA3DC", Offset = "0x6FA3DC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6FA3DC", Offset = "0x6FA3DC")]
		public float sicknessChance;

		[Token(Token = "0x4001607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6FA430", Offset = "0x6FA430")]
		public float minTimeBetweenIncidents;

		[Token(Token = "0x4001608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6FA468", Offset = "0x6FA468")]
		public float maxTimeBetweenIncidents;

		[Token(Token = "0x4001609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6FA4A0", Offset = "0x6FA4A0")]
		public int timeBetweenIncidentsPopulationScaler;

		[Token(Token = "0x400160A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6FA4D8", Offset = "0x6FA4D8")]
		public float emergencyUnlockGraceTime;

		[Token(Token = "0x400160B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6FA510", Offset = "0x6FA510")]
		public float airportIncidentChance;

		[Token(Token = "0x400160C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6FA548", Offset = "0x6FA548")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6FA548", Offset = "0x6FA548")]
		public float baseCrimeChanceOffset;

		[Token(Token = "0x400160D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6FA59C", Offset = "0x6FA59C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6FA59C", Offset = "0x6FA59C")]
		public float inGameCrimeIncidentChance;

		[Token(Token = "0x400160E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6FA5F0", Offset = "0x6FA5F0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6FA5F0", Offset = "0x6FA5F0")]
		public float policeCompetency;

		[Token(Token = "0x400160F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6FA644", Offset = "0x6FA644")]
		public float crimeDecayRate;

		[Token(Token = "0x4001610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6FA67C", Offset = "0x6FA67C")]
		public int crimeEffectRadius;

		[Token(Token = "0x4001611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6FA6B4", Offset = "0x6FA6B4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6FA6B4", Offset = "0x6FA6B4")]
		public float crimeEffectAmount;

		[Token(Token = "0x4001612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6FA708", Offset = "0x6FA708")]
		public float emergencyIncidentResolveDuration;

		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6FA740", Offset = "0x6FA740")]
		public float helicopterRescueDuration;

		[Token(Token = "0x4001614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6FA778", Offset = "0x6FA778")]
		public float fireResolveDuration;

		[Token(Token = "0x4001615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6FA7B0", Offset = "0x6FA7B0")]
		public float buildingBurnDuration;

		[Token(Token = "0x4001616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6FA7E8", Offset = "0x6FA7E8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6FA7E8", Offset = "0x6FA7E8")]
		public float fireSpreadChance;

		[Token(Token = "0x4001617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6FA83C", Offset = "0x6FA83C")]
		public float minTimeBetweenReginition;

		[Token(Token = "0x60016D8")]
		[Address(RVA = "0xB0CB10", Offset = "0xB0CB10", VA = "0xB0CB10")]
		public Emergency()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000369")]
	public class Utility
	{
		[Token(Token = "0x4001618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6FA874", Offset = "0x6FA874")]
		public float waterTreatmentPlantEfficiency;

		[Token(Token = "0x4001619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6FA8AC", Offset = "0x6FA8AC")]
		public int lowWaterUsagePerTile;

		[Token(Token = "0x400161A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6FA8E4", Offset = "0x6FA8E4")]
		public int mediumWaterUsagePerTile;

		[Token(Token = "0x400161B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6FA91C", Offset = "0x6FA91C")]
		public int highWaterUsagePerTile;

		[Token(Token = "0x400161C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6FA954", Offset = "0x6FA954")]
		public int lowPowerUsagePerTile;

		[Token(Token = "0x400161D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6FA98C", Offset = "0x6FA98C")]
		public int mediumPowerUsagePerTile;

		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6FA9C4", Offset = "0x6FA9C4")]
		public int highPowerUsagePerTile;

		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6FA9FC", Offset = "0x6FA9FC")]
		public int networkUnlockGraceTime;

		[Token(Token = "0x60016D9")]
		[Address(RVA = "0xB0CBCC", Offset = "0xB0CBCC", VA = "0xB0CBCC")]
		public int GetWaterUsagePerTile(BuildingInfo.UtilityUsage usageType)
		{
			return default(int);
		}

		[Token(Token = "0x60016DA")]
		[Address(RVA = "0xB0CC04", Offset = "0xB0CC04", VA = "0xB0CC04")]
		public int GetPowerUsagePerTile(BuildingInfo.UtilityUsage usageType)
		{
			return default(int);
		}

		[Token(Token = "0x60016DB")]
		[Address(RVA = "0xB0CC3C", Offset = "0xB0CC3C", VA = "0xB0CC3C")]
		public Utility()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200036A")]
	public class SpecialBuildingBehaviour
	{
		[Token(Token = "0x4001620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float happinessBoostPercentage;

		[Token(Token = "0x4001621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float commercialBoostPercentage;

		[Token(Token = "0x4001622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float industrialBoostPercentage;

		[Token(Token = "0x4001623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float schoolRadiusBoostMultiplier;

		[Token(Token = "0x4001624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float eyeSoreReductionPercentage;

		[Token(Token = "0x4001625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float smellyReductionPercentage;

		[Token(Token = "0x4001626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float noisyReductionPercentage;

		[Token(Token = "0x4001627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float overallHappinessBoostPercentage;

		[Token(Token = "0x60016DC")]
		[Address(RVA = "0xB0CB78", Offset = "0xB0CB78", VA = "0xB0CB78")]
		public SpecialBuildingBehaviour()
		{
		}
	}

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Construction constructionValues;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Citizen citizenValues;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Budget budgetValues;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Demand demandValues;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F6618", Offset = "0x6F6618")]
	public float[] taxRateZoneScoreShift;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Zones zoneValues;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UI uiValues;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Emergency emergencyValues;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Utility utilityValues;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public SpecialBuildingBehaviour specialBuildingBehaviourValues;

	[Token(Token = "0x170001F3")]
	public static Construction construction
	{
		[Token(Token = "0x60009A2")]
		[Address(RVA = "0xB0C458", Offset = "0xB0C458", VA = "0xB0C458")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001F4")]
	public static Citizen citizen
	{
		[Token(Token = "0x60009A3")]
		[Address(RVA = "0xB0C4D0", Offset = "0xB0C4D0", VA = "0xB0C4D0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001F5")]
	public static Budget budget
	{
		[Token(Token = "0x60009A4")]
		[Address(RVA = "0xB0C548", Offset = "0xB0C548", VA = "0xB0C548")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001F6")]
	public static Demand demand
	{
		[Token(Token = "0x60009A5")]
		[Address(RVA = "0xB0C5C0", Offset = "0xB0C5C0", VA = "0xB0C5C0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001F7")]
	public static Zones zones
	{
		[Token(Token = "0x60009A7")]
		[Address(RVA = "0xB0C72C", Offset = "0xB0C72C", VA = "0xB0C72C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001F8")]
	public static UI ui
	{
		[Token(Token = "0x60009A9")]
		[Address(RVA = "0xB0C80C", Offset = "0xB0C80C", VA = "0xB0C80C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001F9")]
	public static Emergency emergency
	{
		[Token(Token = "0x60009AA")]
		[Address(RVA = "0xB0C884", Offset = "0xB0C884", VA = "0xB0C884")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001FA")]
	public static Utility utility
	{
		[Token(Token = "0x60009AB")]
		[Address(RVA = "0xB0C8FC", Offset = "0xB0C8FC", VA = "0xB0C8FC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001FB")]
	public static SpecialBuildingBehaviour specialBuildingBehaviour
	{
		[Token(Token = "0x60009AC")]
		[Address(RVA = "0xB0C974", Offset = "0xB0C974", VA = "0xB0C974")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0xB0C638", Offset = "0xB0C638", VA = "0xB0C638")]
	public static float GetTaxRateZoneScoreShift(int taxRate)
	{
		return default(float);
	}

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0xB0C7A4", Offset = "0xB0C7A4", VA = "0xB0C7A4")]
	public static Zones.Values GetZoneValues(ZoneManager.ZoneType zoneType)
	{
		return null;
	}

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0xB0C9EC", Offset = "0xB0C9EC", VA = "0xB0C9EC")]
	public GlobalGameValues()
	{
	}
}
[Token(Token = "0x20000E5")]
public class CentroidProximityMap : InfluenceMap
{
	[Token(Token = "0x200036B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F57A0", Offset = "0x6F57A0")]
	private sealed class <Simulate>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400162A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CentroidProximityMap <>4__this;

		[Token(Token = "0x400162B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <centerX>5__2;

		[Token(Token = "0x400162C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <centerY>5__3;

		[Token(Token = "0x170003DA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016E0")]
			[Address(RVA = "0xC0538C", Offset = "0xC0538C", VA = "0xC0538C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003DB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016E2")]
			[Address(RVA = "0xC053F4", Offset = "0xC053F4", VA = "0xC053F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016DD")]
		[Address(RVA = "0xC050D0", Offset = "0xC050D0", VA = "0xC050D0")]
		[DebuggerHidden]
		public <Simulate>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x60016DE")]
		[Address(RVA = "0xC050FC", Offset = "0xC050FC", VA = "0xC050FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016DF")]
		[Address(RVA = "0xC05100", Offset = "0xC05100", VA = "0xC05100", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016E1")]
		[Address(RVA = "0xC05394", Offset = "0xC05394", VA = "0xC05394", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0xC05058", Offset = "0xC05058", VA = "0xC05058")]
	public CentroidProximityMap(City inCity)
	{
	}

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0xC05060", Offset = "0xC05060", VA = "0xC05060", Slot = "12")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FD8D4", Offset = "0x6FD8D4")]
	public override IEnumerator Simulate(float deltaTime)
	{
		return null;
	}
}
[Token(Token = "0x20000E6")]
public class CrimeMap : InfluenceMap
{
	[Token(Token = "0x200036C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F57B0", Offset = "0x6F57B0")]
	private sealed class <Simulate>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400162D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400162E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400162F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CrimeMap <>4__this;

		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float deltaTime;

		[Token(Token = "0x170003DC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016E6")]
			[Address(RVA = "0xACF754", Offset = "0xACF754", VA = "0xACF754", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003DD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016E8")]
			[Address(RVA = "0xACF7BC", Offset = "0xACF7BC", VA = "0xACF7BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016E3")]
		[Address(RVA = "0xACF44C", Offset = "0xACF44C", VA = "0xACF44C")]
		[DebuggerHidden]
		public <Simulate>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60016E4")]
		[Address(RVA = "0xACF610", Offset = "0xACF610", VA = "0xACF610", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016E5")]
		[Address(RVA = "0xACF614", Offset = "0xACF614", VA = "0xACF614", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016E7")]
		[Address(RVA = "0xACF75C", Offset = "0xACF75C", VA = "0xACF75C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006A6")]
	private const float currentWeight = 0.1f;

	[Token(Token = "0x40006A7")]
	private const float populationDensityImportance = 1f;

	[Token(Token = "0x40006A8")]
	private const float policeStationCoverageImportance = -3f;

	[Token(Token = "0x40006A9")]
	private const float landValueImportance = 1f;

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0xACF3C4", Offset = "0xACF3C4", VA = "0xACF3C4")]
	public CrimeMap(City inCity)
	{
	}

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0xACF3CC", Offset = "0xACF3CC", VA = "0xACF3CC", Slot = "12")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FD938", Offset = "0x6FD938")]
	public override IEnumerator Simulate(float deltaTime)
	{
		return null;
	}

	[Token(Token = "0x60009B2")]
	[Address(RVA = "0xACF478", Offset = "0xACF478", VA = "0xACF478")]
	public void RaiseCrimeRateInArea(int crimeX, int crimeY)
	{
	}
}
[Token(Token = "0x20000E7")]
public class GroundWaterMap : InfluenceMap
{
	[Token(Token = "0x60009B3")]
	[Address(RVA = "0xB10940", Offset = "0xB10940", VA = "0xB10940")]
	public GroundWaterMap(City inCity)
	{
	}

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0xB10B70", Offset = "0xB10B70", VA = "0xB10B70", Slot = "13")]
	public override void OnPostLoad()
	{
	}

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0xB10A7C", Offset = "0xB10A7C", VA = "0xB10A7C")]
	private void GenerateValues()
	{
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0xB10B74", Offset = "0xB10B74", VA = "0xB10B74")]
	public bool HasWater(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0xB10BFC", Offset = "0xB10BFC", VA = "0xB10BFC", Slot = "14")]
	public override void Reset()
	{
	}
}
[Token(Token = "0x20000E8")]
public class InfluenceMap : IVisualiserTextureProvider
{
	[Token(Token = "0x200036D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F57C0", Offset = "0x6F57C0")]
	private sealed class <Simulate>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170003DE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016EC")]
			[Address(RVA = "0xB3A1B8", Offset = "0xB3A1B8", VA = "0xB3A1B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003DF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016EE")]
			[Address(RVA = "0xB3A220", Offset = "0xB3A220", VA = "0xB3A220", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016E9")]
		[Address(RVA = "0xB3A170", Offset = "0xB3A170", VA = "0xB3A170")]
		[DebuggerHidden]
		public <Simulate>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x60016EA")]
		[Address(RVA = "0xB3A19C", Offset = "0xB3A19C", VA = "0xB3A19C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016EB")]
		[Address(RVA = "0xB3A1A0", Offset = "0xB3A1A0", VA = "0xB3A1A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016ED")]
		[Address(RVA = "0xB3A1C0", Offset = "0xB3A1C0", VA = "0xB3A1C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected City city;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected float[] current;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected float[] previous;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Texture2D textureInternal;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected bool isTextureDirty;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected Color32[] textureData;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6650", Offset = "0x6F6650")]
	private int <mapWidth>k__BackingField;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6660", Offset = "0x6F6660")]
	private int <mapHeight>k__BackingField;

	[Token(Token = "0x170001FC")]
	public virtual string name
	{
		[Token(Token = "0x60009B9")]
		[Address(RVA = "0xB1F904", Offset = "0xB1F904", VA = "0xB1F904", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001FD")]
	public Texture2D visualiseTexture
	{
		[Token(Token = "0x60009BA")]
		[Address(RVA = "0xB1F92C", Offset = "0xB1F92C", VA = "0xB1F92C", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001FE")]
	public virtual Texture2D secondaryTexture
	{
		[Token(Token = "0x60009BB")]
		[Address(RVA = "0xB1F934", Offset = "0xB1F934", VA = "0xB1F934", Slot = "9")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001FF")]
	public int mapWidth
	{
		[Token(Token = "0x60009BD")]
		[Address(RVA = "0xB1FB00", Offset = "0xB1FB00", VA = "0xB1FB00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD99C", Offset = "0x6FD99C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60009BE")]
		[Address(RVA = "0xB1FB08", Offset = "0xB1FB08", VA = "0xB1FB08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD9AC", Offset = "0x6FD9AC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000200")]
	public int mapHeight
	{
		[Token(Token = "0x60009BF")]
		[Address(RVA = "0xB1FB10", Offset = "0xB1FB10", VA = "0xB1FB10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD9BC", Offset = "0x6FD9BC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60009C0")]
		[Address(RVA = "0xB1FB18", Offset = "0xB1FB18", VA = "0xB1FB18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FD9CC", Offset = "0x6FD9CC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000201")]
	protected virtual float minValue
	{
		[Token(Token = "0x60009C1")]
		[Address(RVA = "0xB1FB20", Offset = "0xB1FB20", VA = "0xB1FB20", Slot = "10")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000202")]
	protected virtual float maxValue
	{
		[Token(Token = "0x60009C2")]
		[Address(RVA = "0xB1FB28", Offset = "0xB1FB28", VA = "0xB1FB28", Slot = "11")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0xB1F8FC", Offset = "0xB1F8FC", VA = "0xB1F8FC")]
	public float[] GetValues()
	{
		return null;
	}

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0xB1F93C", Offset = "0xB1F93C", VA = "0xB1F93C", Slot = "7")]
	public void RefreshVisualiseTexture()
	{
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0xB1FB30", Offset = "0xB1FB30", VA = "0xB1FB30")]
	public void MarkDirty()
	{
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0xB10964", Offset = "0xB10964", VA = "0xB10964")]
	public InfluenceMap(City inCity)
	{
	}

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0xB1F94C", Offset = "0xB1F94C", VA = "0xB1F94C")]
	protected void GenerateTexture()
	{
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0xB1FB3C", Offset = "0xB1FB3C", VA = "0xB1FB3C")]
	protected void Flip()
	{
	}

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0xB1FB4C", Offset = "0xB1FB4C", VA = "0xB1FB4C")]
	public float GetValue(int x, int y)
	{
		return default(float);
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0xB1FB90", Offset = "0xB1FB90", VA = "0xB1FB90", Slot = "12")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FD9DC", Offset = "0x6FD9DC")]
	public virtual IEnumerator Simulate(float deltaTime)
	{
		return null;
	}

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0xB1FBF0", Offset = "0xB1FBF0", VA = "0xB1FBF0")]
	protected void BlurX(int kernelSize)
	{
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0xB1FCF0", Offset = "0xB1FCF0", VA = "0xB1FCF0")]
	protected void BlurY(int kernelSize)
	{
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0xB1FDFC", Offset = "0xB1FDFC", VA = "0xB1FDFC")]
	protected void BlurXMax(int kernelSize)
	{
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0xB1FFA4", Offset = "0xB1FFA4", VA = "0xB1FFA4")]
	protected void BlurYMax(int kernelSize)
	{
	}

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0xB20158", Offset = "0xB20158", VA = "0xB20158")]
	protected void Blur(int kernelSize)
	{
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0xB20290", Offset = "0xB20290", VA = "0xB20290")]
	public void RestoreFromString(string stringData)
	{
	}

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0xB203B4", Offset = "0xB203B4", VA = "0xB203B4", Slot = "13")]
	public virtual void OnPostLoad()
	{
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0xB203B8", Offset = "0xB203B8", VA = "0xB203B8", Slot = "14")]
	public virtual void Reset()
	{
	}
}
[Token(Token = "0x20000E9")]
public class LandValueMap : InfluenceMap
{
	[Token(Token = "0x200036E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F57D0", Offset = "0x6F57D0")]
	private sealed class <Simulate>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170003E0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016F2")]
			[Address(RVA = "0xB3C628", Offset = "0xB3C628", VA = "0xB3C628", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016F4")]
			[Address(RVA = "0xB3C690", Offset = "0xB3C690", VA = "0xB3C690", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016EF")]
		[Address(RVA = "0xB3C5E0", Offset = "0xB3C5E0", VA = "0xB3C5E0")]
		[DebuggerHidden]
		public <Simulate>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0xB3C60C", Offset = "0xB3C60C", VA = "0xB3C60C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016F1")]
		[Address(RVA = "0xB3C610", Offset = "0xB3C610", VA = "0xB3C610", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016F3")]
		[Address(RVA = "0xB3C630", Offset = "0xB3C630", VA = "0xB3C630", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006B2")]
	private const float currentWeight = 0.1f;

	[Token(Token = "0x40006B3")]
	private const float unspoiltValue = 0.1f;

	[Token(Token = "0x40006B4")]
	private const float waterValue = 0.5f;

	[Token(Token = "0x40006B5")]
	private const float crimeInfluence = -0.2f;

	[Token(Token = "0x40006B6")]
	private const float centroidProximityInfluence = 0.55f;

	[Token(Token = "0x40006B7")]
	private const float pollutionInfluence = -1f;

	[Token(Token = "0x40006B8")]
	private const float populationDensityInfluence = 0.25f;

	[Token(Token = "0x40006B9")]
	private const float treeValue = 0.2f;

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0xB3C578", Offset = "0xB3C578", VA = "0xB3C578")]
	public LandValueMap(City inCity)
	{
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0xB3C580", Offset = "0xB3C580", VA = "0xB3C580", Slot = "12")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FDA40", Offset = "0x6FDA40")]
	public override IEnumerator Simulate(float deltaTime)
	{
		return null;
	}
}
[Token(Token = "0x20000EA")]
public class PollutionMap : InfluenceMap
{
	[Token(Token = "0x200036F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F57E0", Offset = "0x6F57E0")]
	private sealed class <Simulate>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170003E2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016F8")]
			[Address(RVA = "0xC17D9C", Offset = "0xC17D9C", VA = "0xC17D9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016FA")]
			[Address(RVA = "0xC17E04", Offset = "0xC17E04", VA = "0xC17E04", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016F5")]
		[Address(RVA = "0xC17D54", Offset = "0xC17D54", VA = "0xC17D54")]
		[DebuggerHidden]
		public <Simulate>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60016F6")]
		[Address(RVA = "0xC17D80", Offset = "0xC17D80", VA = "0xC17D80", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016F7")]
		[Address(RVA = "0xC17D84", Offset = "0xC17D84", VA = "0xC17D84", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016F9")]
		[Address(RVA = "0xC17DA4", Offset = "0xC17DA4", VA = "0xC17DA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006BA")]
	private const float currentWeight = 0.1f;

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0xC17CEC", Offset = "0xC17CEC", VA = "0xC17CEC")]
	public PollutionMap(City inCity)
	{
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0xC17CF4", Offset = "0xC17CF4", VA = "0xC17CF4", Slot = "12")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FDAA4", Offset = "0x6FDAA4")]
	public override IEnumerator Simulate(float deltaTime)
	{
		return null;
	}
}
[Token(Token = "0x20000EB")]
public class PopulationDensityMap : InfluenceMap
{
	[Token(Token = "0x2000370")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F57F0", Offset = "0x6F57F0")]
	private sealed class <Simulate>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PopulationDensityMap <>4__this;

		[Token(Token = "0x170003E4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016FE")]
			[Address(RVA = "0xC1822C", Offset = "0xC1822C", VA = "0xC1822C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001700")]
			[Address(RVA = "0xC18294", Offset = "0xC18294", VA = "0xC18294", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016FB")]
		[Address(RVA = "0xC17E84", Offset = "0xC17E84", VA = "0xC17E84")]
		[DebuggerHidden]
		public <Simulate>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60016FC")]
		[Address(RVA = "0xC17EB0", Offset = "0xC17EB0", VA = "0xC17EB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0xC17EB4", Offset = "0xC17EB4", VA = "0xC17EB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016FF")]
		[Address(RVA = "0xC18234", Offset = "0xC18234", VA = "0xC18234", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006BB")]
	private const float maxDensity = 1f;

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0xC17E0C", Offset = "0xC17E0C", VA = "0xC17E0C")]
	public PopulationDensityMap(City inCity)
	{
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0xC17E14", Offset = "0xC17E14", VA = "0xC17E14", Slot = "12")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FDB08", Offset = "0x6FDB08")]
	public override IEnumerator Simulate(float deltaTime)
	{
		return null;
	}
}
[Token(Token = "0x20000EC")]
public class PortProximityMap : InfluenceMap
{
	[Token(Token = "0x2000371")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5800", Offset = "0x6F5800")]
	private sealed class <Simulate>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400163A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400163B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400163C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PortProximityMap <>4__this;

		[Token(Token = "0x170003E6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001704")]
			[Address(RVA = "0xC18908", Offset = "0xC18908", VA = "0xC18908", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001706")]
			[Address(RVA = "0xC18970", Offset = "0xC18970", VA = "0xC18970", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001701")]
		[Address(RVA = "0xC18760", Offset = "0xC18760", VA = "0xC18760")]
		[DebuggerHidden]
		public <Simulate>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6001702")]
		[Address(RVA = "0xC1878C", Offset = "0xC1878C", VA = "0xC1878C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001703")]
		[Address(RVA = "0xC18790", Offset = "0xC18790", VA = "0xC18790", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001705")]
		[Address(RVA = "0xC18910", Offset = "0xC18910", VA = "0xC18910", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<int> roadProximity;

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0xC1829C", Offset = "0xC1829C", VA = "0xC1829C")]
	public PortProximityMap(City inCity)
	{
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0xC1831C", Offset = "0xC1831C", VA = "0xC1831C")]
	private void FillProximityList(RoadManager.Road road, int score = 0)
	{
	}

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0xC184BC", Offset = "0xC184BC", VA = "0xC184BC")]
	public bool IsConnectedToPort(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x60009DA")]
	[Address(RVA = "0xC18680", Offset = "0xC18680", VA = "0xC18680")]
	public bool IsConnectedToPort(BuildingInstance building)
	{
		return default(bool);
	}

	[Token(Token = "0x60009DB")]
	[Address(RVA = "0xC186F0", Offset = "0xC186F0", VA = "0xC186F0", Slot = "12")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FDB6C", Offset = "0x6FDB6C")]
	public override IEnumerator Simulate(float deltaTime)
	{
		return null;
	}
}
[Token(Token = "0x20000ED")]
public class SandStormMap : InfluenceMap
{
	[Token(Token = "0x2000372")]
	public class Tile
	{
		[Token(Token = "0x400163D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int particleSpawnMeshIndex;

		[Token(Token = "0x400163E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool landscapeHasSandStorm;

		[Token(Token = "0x400163F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool hasSandStorm;

		[Token(Token = "0x6001707")]
		[Address(RVA = "0xAB7650", Offset = "0xAB7650", VA = "0xAB7650")]
		public Tile()
		{
		}
	}

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Tile[] tiles;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int[] treeCoverage;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int[] previewTreeCoverage;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool isPreviewMode;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Material sandStormMaterial;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ParticleSystem sandStormParticles;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Mesh particlesShapeMesh;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<Vector3> particleSpawnPositions;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<int> particleSpawnMeshTriangles;

	[Token(Token = "0x17000203")]
	private bool showSandstormTileMap
	{
		[Token(Token = "0x60009DC")]
		[Address(RVA = "0xAB7404", Offset = "0xAB7404", VA = "0xAB7404")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0xAB7474", Offset = "0xAB7474", VA = "0xAB7474", Slot = "14")]
	public override void Reset()
	{
	}

	[Token(Token = "0x60009DE")]
	[Address(RVA = "0xAB7D08", Offset = "0xAB7D08", VA = "0xAB7D08")]
	public SandStormMap(City inCity)
	{
	}

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0xAB8350", Offset = "0xAB8350", VA = "0xAB8350")]
	public bool HasSandStorm(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0xAB83D0", Offset = "0xAB83D0", VA = "0xAB83D0")]
	public bool HasSandStorm(int x, int y, int width, int height)
	{
		return default(bool);
	}

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0xAB8470", Offset = "0xAB8470", VA = "0xAB8470")]
	public bool HasSandstormInPreviewAndCurrent(int x, int y, int width, int height)
	{
		return default(bool);
	}

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0xAB8554", Offset = "0xAB8554", VA = "0xAB8554")]
	public bool HasSandstormInPreview(int x, int y, int width, int height)
	{
		return default(bool);
	}

	[Token(Token = "0x60009E3")]
	[Address(RVA = "0xAB8618", Offset = "0xAB8618", VA = "0xAB8618")]
	public void BeginPreviewChanges()
	{
	}

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0xAB8624", Offset = "0xAB8624", VA = "0xAB8624")]
	public void EndPreviewChanges()
	{
	}

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0xAB862C", Offset = "0xAB862C", VA = "0xAB862C")]
	public void ClearPreview()
	{
	}

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0xAB8650", Offset = "0xAB8650", VA = "0xAB8650")]
	public void OnTreePlaced(int x, int y, int radius)
	{
	}

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0xAB8790", Offset = "0xAB8790", VA = "0xAB8790")]
	public void OnTreeRemoved(int x, int y, int radius)
	{
	}

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0xAB86B8", Offset = "0xAB86B8", VA = "0xAB86B8")]
	private void AdjustTreeCoverage(int x, int y, int radius, int delta)
	{
	}

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0xAB7660", Offset = "0xAB7660", VA = "0xAB7660")]
	private void UpdateRegion(int x, int y, int width, int height, bool forceUpdate = false)
	{
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0xAB87F8", Offset = "0xAB87F8", VA = "0xAB87F8", Slot = "13")]
	public override void OnPostLoad()
	{
	}

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0xAB8C48", Offset = "0xAB8C48", VA = "0xAB8C48")]
	public void DebugDump()
	{
	}
}
[Token(Token = "0x20000EE")]
public class SpecialBehaviourMap
{
	[Token(Token = "0x2000373")]
	public class SingleBehaviourMap
	{
		[Token(Token = "0x4001640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int[] map;

		[Token(Token = "0x6001708")]
		[Address(RVA = "0xA7AE6C", Offset = "0xA7AE6C", VA = "0xA7AE6C")]
		public SingleBehaviourMap(int mapWidth, int mapHeight)
		{
		}

		[Token(Token = "0x6001709")]
		[Address(RVA = "0xA7AF74", Offset = "0xA7AF74", VA = "0xA7AF74")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000374")]
	private delegate bool BehaviourEffectsBuildingDelegate(BuildingInstance building);

	[Serializable]
	[Token(Token = "0x2000375")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5810", Offset = "0x6F5810")]
	private sealed class <>c
	{
		[Token(Token = "0x4001641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static BehaviourEffectsBuildingDelegate <>9__17_0;

		[Token(Token = "0x4001643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static BehaviourEffectsBuildingDelegate <>9__17_1;

		[Token(Token = "0x4001644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static BehaviourEffectsBuildingDelegate <>9__17_2;

		[Token(Token = "0x600170F")]
		[Address(RVA = "0xA7BBD0", Offset = "0xA7BBD0", VA = "0xA7BBD0")]
		public <>c()
		{
		}

		[Token(Token = "0x6001710")]
		[Address(RVA = "0xA7BBD8", Offset = "0xA7BBD8", VA = "0xA7BBD8")]
		internal bool <GetBuildingEffectPredicate>b__17_0(BuildingInstance building)
		{
			return default(bool);
		}

		[Token(Token = "0x6001711")]
		[Address(RVA = "0xA7BC04", Offset = "0xA7BC04", VA = "0xA7BC04")]
		internal bool <GetBuildingEffectPredicate>b__17_1(BuildingInstance building)
		{
			return default(bool);
		}

		[Token(Token = "0x6001712")]
		[Address(RVA = "0xA7BC30", Offset = "0xA7BC30", VA = "0xA7BC30")]
		internal bool <GetBuildingEffectPredicate>b__17_2(BuildingInstance building)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<SingleBehaviourMap> behaviourMaps;

	[Token(Token = "0x40006C7")]
	public const int numBehaviourMaps = 11;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private City city;

	[Token(Token = "0x17000204")]
	private int mapWidth
	{
		[Token(Token = "0x60009EC")]
		[Address(RVA = "0xA7AD14", Offset = "0xA7AD14", VA = "0xA7AD14")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000205")]
	private int mapHeight
	{
		[Token(Token = "0x60009ED")]
		[Address(RVA = "0xA7AD30", Offset = "0xA7AD30", VA = "0xA7AD30")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0xA7AD4C", Offset = "0xA7AD4C", VA = "0xA7AD4C")]
	public SpecialBehaviourMap(City inCity)
	{
	}

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0xA7AEE0", Offset = "0xA7AEE0", VA = "0xA7AEE0")]
	public void Reset()
	{
	}

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0xA7AF98", Offset = "0xA7AF98", VA = "0xA7AF98")]
	private SingleBehaviourMap GetMap(BuildingInfo.SpecialBehaviour behaviour)
	{
		return null;
	}

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0xA7B0B0", Offset = "0xA7B0B0", VA = "0xA7B0B0")]
	public static int BehaviourEnumToIndex(BuildingInfo.SpecialBehaviour behaviour)
	{
		return default(int);
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0xA7B0EC", Offset = "0xA7B0EC", VA = "0xA7B0EC")]
	public int GetInfluence(BuildingInfo.SpecialBehaviour behaviour, int x, int y)
	{
		return default(int);
	}

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0xA7B164", Offset = "0xA7B164", VA = "0xA7B164")]
	public bool IsInfluenced(BuildingInfo.SpecialBehaviour behaviour, int x, int y, int width, int height)
	{
		return default(bool);
	}

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0xA7B24C", Offset = "0xA7B24C", VA = "0xA7B24C")]
	public int GetInfluence(BuildingInfo.SpecialBehaviour behaviour, BuildingInstance building)
	{
		return default(int);
	}

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0xA7B2C0", Offset = "0xA7B2C0", VA = "0xA7B2C0")]
	public int GetInfluence(BuildingInfo.SpecialBehaviour behaviour, int x, int y, int width, int height)
	{
		return default(int);
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0xA7B3A4", Offset = "0xA7B3A4", VA = "0xA7B3A4")]
	private BehaviourEffectsBuildingDelegate GetBuildingEffectPredicate(BuildingInfo.SpecialBehaviour behaviour)
	{
		return null;
	}

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0xA7B5E4", Offset = "0xA7B5E4", VA = "0xA7B5E4")]
	private bool IsPositiveEffect(BuildingInfo.SpecialBehaviour behaviour, int delta)
	{
		return default(bool);
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0xA7B648", Offset = "0xA7B648", VA = "0xA7B648")]
	public void ModifyInfluence(BuildingInstance building, int delta, bool fromSaveData)
	{
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0xA7B6F8", Offset = "0xA7B6F8", VA = "0xA7B6F8")]
	private void ModifyInfluence(BuildingInstance building, BuildingInfo.SpecialBehaviour behaviour, int delta)
	{
	}

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0xA7B954", Offset = "0xA7B954", VA = "0xA7B954")]
	public static bool InInfluenceRange(BuildingInstance building, int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0xA7BA7C", Offset = "0xA7BA7C", VA = "0xA7BA7C")]
	public static bool InInfluenceRange(BuildingInstance sourceBuilding, BuildingInstance otherBuilding)
	{
		return default(bool);
	}

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0xA7BB30", Offset = "0xA7BB30", VA = "0xA7BB30")]
	public float ApplySpecialEffect(BuildingInfo.SpecialBehaviour specialBehaviour, int x, int y, float baseAmount, float boostPercentage)
	{
		return default(float);
	}
}
[Token(Token = "0x20000EF")]
public class TrafficDensityMap : InfluenceMap
{
	[Token(Token = "0x2000376")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5820", Offset = "0x6F5820")]
	private sealed class <Simulate>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TrafficDensityMap <>4__this;

		[Token(Token = "0x170003E8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001716")]
			[Address(RVA = "0xB2DD18", Offset = "0xB2DD18", VA = "0xB2DD18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001718")]
			[Address(RVA = "0xB2DD80", Offset = "0xB2DD80", VA = "0xB2DD80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001713")]
		[Address(RVA = "0xB2DA6C", Offset = "0xB2DA6C", VA = "0xB2DA6C")]
		[DebuggerHidden]
		public <Simulate>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001714")]
		[Address(RVA = "0xB2DA98", Offset = "0xB2DA98", VA = "0xB2DA98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001715")]
		[Address(RVA = "0xB2DA9C", Offset = "0xB2DA9C", VA = "0xB2DA9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001717")]
		[Address(RVA = "0xB2DD20", Offset = "0xB2DD20", VA = "0xB2DD20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006C9")]
	private const float currentWeight = 0.1f;

	[Token(Token = "0x17000206")]
	protected override float minValue
	{
		[Token(Token = "0x60009FE")]
		[Address(RVA = "0xB2D9EC", Offset = "0xB2D9EC", VA = "0xB2D9EC", Slot = "10")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000207")]
	protected override float maxValue
	{
		[Token(Token = "0x60009FF")]
		[Address(RVA = "0xB2D9F4", Offset = "0xB2D9F4", VA = "0xB2D9F4", Slot = "11")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0xB2D9E4", Offset = "0xB2D9E4", VA = "0xB2D9E4")]
	public TrafficDensityMap(City inCity)
	{
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0xB2D9FC", Offset = "0xB2D9FC", VA = "0xB2D9FC", Slot = "12")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FDBD0", Offset = "0x6FDBD0")]
	public override IEnumerator Simulate(float deltaTime)
	{
		return null;
	}
}
[Token(Token = "0x20000F0")]
public class WindMap : InfluenceMap
{
	[Token(Token = "0x17000208")]
	public Vector3 windDirection
	{
		[Token(Token = "0x6000A01")]
		[Address(RVA = "0xAB12F4", Offset = "0xAB12F4", VA = "0xAB12F4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0xAB1334", Offset = "0xAB1334", VA = "0xAB1334")]
	public WindMap(City inCity)
	{
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0xAB135C", Offset = "0xAB135C", VA = "0xAB135C")]
	private void GenerateWindValues()
	{
	}

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0xAB17F0", Offset = "0xAB17F0", VA = "0xAB17F0", Slot = "14")]
	public override void Reset()
	{
	}
}
[Token(Token = "0x20000F1")]
public class ZoneProximityMap
{
	[Token(Token = "0x40006CA")]
	public const int reach = 2;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private City city;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int[] values;

	[Token(Token = "0x17000209")]
	private int mapWidth
	{
		[Token(Token = "0x6000A05")]
		[Address(RVA = "0xE0D2B8", Offset = "0xE0D2B8", VA = "0xE0D2B8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700020A")]
	private int mapHeight
	{
		[Token(Token = "0x6000A06")]
		[Address(RVA = "0xE0D2D4", Offset = "0xE0D2D4", VA = "0xE0D2D4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0xE0D2F0", Offset = "0xE0D2F0", VA = "0xE0D2F0")]
	public ZoneProximityMap(City inCity)
	{
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0xE0D394", Offset = "0xE0D394", VA = "0xE0D394")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0xE0C3E4", Offset = "0xE0C3E4", VA = "0xE0C3E4")]
	public void Modify(int x, int y, int delta)
	{
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0xE0D3B8", Offset = "0xE0D3B8", VA = "0xE0D3B8")]
	public int GetValue(int x, int y)
	{
		return default(int);
	}

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0xE0D424", Offset = "0xE0D424", VA = "0xE0D424")]
	public bool IsAffected(int x, int y, int width, int height)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0xE0D4F4", Offset = "0xE0D4F4", VA = "0xE0D4F4")]
	public void InitFromCity(ZoneManager.ZoneType zoneType)
	{
	}
}
[Token(Token = "0x20000F2")]
public class ZoneScoreMap : InfluenceMap
{
	[Token(Token = "0x2000377")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5830", Offset = "0x6F5830")]
	private sealed class <Simulate>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170003EA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600171C")]
			[Address(RVA = "0xE0EA08", Offset = "0xE0EA08", VA = "0xE0EA08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003EB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600171E")]
			[Address(RVA = "0xE0EA70", Offset = "0xE0EA70", VA = "0xE0EA70", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001719")]
		[Address(RVA = "0xE0E9C0", Offset = "0xE0E9C0", VA = "0xE0E9C0")]
		[DebuggerHidden]
		public <Simulate>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600171A")]
		[Address(RVA = "0xE0E9EC", Offset = "0xE0E9EC", VA = "0xE0E9EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600171B")]
		[Address(RVA = "0xE0E9F0", Offset = "0xE0E9F0", VA = "0xE0E9F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600171D")]
		[Address(RVA = "0xE0EA10", Offset = "0xE0EA10", VA = "0xE0EA10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ZoneManager.ZoneType zoneType;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ZoneScoreMapWeights weights;

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0xE0E924", Offset = "0xE0E924", VA = "0xE0E924")]
	public ZoneScoreMap(City inCity, ZoneManager.ZoneType inZoneType, ZoneScoreMapWeights inWeights)
	{
	}

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0xE0E960", Offset = "0xE0E960", VA = "0xE0E960", Slot = "12")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FDC34", Offset = "0x6FDC34")]
	public override IEnumerator Simulate(float deltaTime)
	{
		return null;
	}
}
[Token(Token = "0x20000F3")]
public class ZoneScoreMapWeights : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x2000378")]
	public class PositiveWeights
	{
		[Token(Token = "0x400164A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6FAA34", Offset = "0x6FAA34")]
		public float landValue;

		[Token(Token = "0x400164B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6FAA4C", Offset = "0x6FAA4C")]
		public float residentialZoneProximity;

		[Token(Token = "0x400164C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6FAA64", Offset = "0x6FAA64")]
		public float commercialZoneProximity;

		[Token(Token = "0x400164D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6FAA7C", Offset = "0x6FAA7C")]
		public float industrialZoneProximity;

		[Token(Token = "0x400164E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6FAA94", Offset = "0x6FAA94")]
		public float policeCoverage;

		[Token(Token = "0x400164F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6FAAAC", Offset = "0x6FAAAC")]
		public float fireCoverage;

		[Token(Token = "0x4001650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6FAAC4", Offset = "0x6FAAC4")]
		public float healthCoverage;

		[Token(Token = "0x4001651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6FAADC", Offset = "0x6FAADC")]
		public float schoolCoverage;

		[Token(Token = "0x4001652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6FAAF4", Offset = "0x6FAAF4")]
		public float portProximity;

		[Token(Token = "0x600171F")]
		[Address(RVA = "0xE0EA88", Offset = "0xE0EA88", VA = "0xE0EA88")]
		public PositiveWeights()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000379")]
	public class NegativeWeights
	{
		[Token(Token = "0x4001653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6FAB0C", Offset = "0x6FAB0C")]
		public float pollution;

		[Token(Token = "0x4001654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6FAB24", Offset = "0x6FAB24")]
		public float trafficDensity;

		[Token(Token = "0x4001655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6FAB3C", Offset = "0x6FAB3C")]
		public float crime;

		[Token(Token = "0x6001720")]
		[Address(RVA = "0xE0EA80", Offset = "0xE0EA80", VA = "0xE0EA80")]
		public NegativeWeights()
		{
		}
	}

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PositiveWeights positive;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public NegativeWeights negative;

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0xE0EA78", Offset = "0xE0EA78", VA = "0xE0EA78")]
	public ZoneScoreMapWeights()
	{
	}
}
[Token(Token = "0x20000F4")]
public class LoanManager : SingletonBehaviour<LoanManager>
{
	[Serializable]
	[Token(Token = "0x200037A")]
	public class LoanType
	{
		[Token(Token = "0x4001656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int amount;

		[Token(Token = "0x4001657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int interestRate;

		[Token(Token = "0x4001658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int length;

		[Token(Token = "0x170003EC")]
		public int totalCost
		{
			[Token(Token = "0x6001721")]
			[Address(RVA = "0xB45068", Offset = "0xB45068", VA = "0xB45068")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003ED")]
		public int weeklyCost
		{
			[Token(Token = "0x6001722")]
			[Address(RVA = "0xB44FE8", Offset = "0xB44FE8", VA = "0xB44FE8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001723")]
		[Address(RVA = "0xB45090", Offset = "0xB45090", VA = "0xB45090")]
		public LoanType()
		{
		}
	}

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LoanType[] loanTypes;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public int[] loanWeeksRemaining;

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0xB44EB8", Offset = "0xB44EB8", VA = "0xB44EB8", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000A11")]
	[Address(RVA = "0xB44F30", Offset = "0xB44F30", VA = "0xB44F30")]
	public void ToggleLoan(int loanIndex)
	{
	}

	[Token(Token = "0x6000A12")]
	[Address(RVA = "0xB44F34", Offset = "0xB44F34", VA = "0xB44F34")]
	public int GetWeeklyPayment()
	{
		return default(int);
	}

	[Token(Token = "0x6000A13")]
	[Address(RVA = "0xB45018", Offset = "0xB45018", VA = "0xB45018")]
	public LoanManager()
	{
	}
}
[Token(Token = "0x20000F5")]
public static class PathFinder
{
	[Token(Token = "0x200037B")]
	public class Path
	{
		[Token(Token = "0x4001659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int startX;

		[Token(Token = "0x400165A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int startY;

		[Token(Token = "0x400165B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int endX;

		[Token(Token = "0x400165C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int endY;

		[Token(Token = "0x400165D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int endBuildingX;

		[Token(Token = "0x400165E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int endBuildingY;

		[Token(Token = "0x400165F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<short> roads;

		[Token(Token = "0x4001660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int estimatedDistance;

		[Token(Token = "0x6001724")]
		[Address(RVA = "0xA2004C", Offset = "0xA2004C", VA = "0xA2004C")]
		public BuildingInstance GetEndBuilding(City city)
		{
			return null;
		}

		[Token(Token = "0x6001725")]
		[Address(RVA = "0xA1FED8", Offset = "0xA1FED8", VA = "0xA1FED8")]
		public Path()
		{
		}
	}

	[Token(Token = "0x200037C")]
	private class PathNode
	{
		[Token(Token = "0x4001661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public short index;

		[Token(Token = "0x4001662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int hScore;

		[Token(Token = "0x4001663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int gScore;

		[Token(Token = "0x4001664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PathNode parent;

		[Token(Token = "0x170003EE")]
		public int fScore
		{
			[Token(Token = "0x6001727")]
			[Address(RVA = "0xA1FF54", Offset = "0xA1FF54", VA = "0xA1FF54")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001726")]
		[Address(RVA = "0xA1FE04", Offset = "0xA1FE04", VA = "0xA1FE04")]
		public PathNode(short index, PathNode parent, int gScore, int hScore)
		{
		}
	}

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<PathNode> openSet;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<PathNode> closedSet;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static List<PathNode> pathNodePool;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static Path temporaryPath;

	[Token(Token = "0x6000A14")]
	[Address(RVA = "0xA1EC18", Offset = "0xA1EC18", VA = "0xA1EC18")]
	private static int GetHeuristic(int x, int y, int targetX, int targetY)
	{
		return default(int);
	}

	[Token(Token = "0x6000A15")]
	[Address(RVA = "0xA1EC38", Offset = "0xA1EC38", VA = "0xA1EC38")]
	public static Path FindPath(BuildingInstance start, BuildingInstance end, [Optional] Path result)
	{
		return null;
	}

	[Token(Token = "0x6000A16")]
	[Address(RVA = "0xA1ED04", Offset = "0xA1ED04", VA = "0xA1ED04")]
	public static Path FindPath(City city, int startX, int startY, BuildingInstance end, [Optional] Path result)
	{
		return null;
	}

	[Token(Token = "0x6000A17")]
	[Address(RVA = "0xA1F888", Offset = "0xA1F888", VA = "0xA1F888")]
	public static bool AreConnected(BuildingInstance start, BuildingInstance end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0xA1F950", Offset = "0xA1F950", VA = "0xA1F950")]
	public static bool AreConnected(City city, int startX, int startY, BuildingInstance end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0xA1FA0C", Offset = "0xA1FA0C", VA = "0xA1FA0C")]
	public static bool AreConnected(City city, int startX, int startY, int endX, int endY)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0xA1FCA0", Offset = "0xA1FCA0", VA = "0xA1FCA0")]
	private static PathNode CreatePathNode(short index, PathNode parent, int gScore, int hScore)
	{
		return null;
	}

	[Token(Token = "0x6000A1B")]
	[Address(RVA = "0xA1FE54", Offset = "0xA1FE54", VA = "0xA1FE54")]
	private static void ReturnToPool(PathNode node)
	{
	}

	[Token(Token = "0x6000A1C")]
	[Address(RVA = "0xA1EDE0", Offset = "0xA1EDE0", VA = "0xA1EDE0")]
	public static Path FindPath(City city, int startX, int startY, int endX, int endY, [Optional] Path result)
	{
		return null;
	}
}
[Token(Token = "0x20000F6")]
public interface ISimulationModule
{
	[Token(Token = "0x1700020B")]
	GameObject gameObject
	{
		[Token(Token = "0x6000A1F")]
		get;
	}

	[Token(Token = "0x6000A1E")]
	IEnumerator Simulate(float deltaTime);
}
[Token(Token = "0x20000F7")]
public class SimulationScheduler : CityModule
{
	[Token(Token = "0x200037D")]
	public enum SimulationSpeed
	{
		[Token(Token = "0x4001666")]
		Paused,
		[Token(Token = "0x4001667")]
		Normal,
		[Token(Token = "0x4001668")]
		Double,
		[Token(Token = "0x4001669")]
		Triple,
		[Token(Token = "0x400166A")]
		DebugSlomo,
		[Token(Token = "0x400166B")]
		Debug20X
	}

	[Token(Token = "0x200037E")]
	private class SimModule
	{
		[Token(Token = "0x400166C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moduleName;

		[Token(Token = "0x400166D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ISimulationModule moduleInterface;

		[Token(Token = "0x400166E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IEnumerator state;

		[Token(Token = "0x400166F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public double lastUpdateTime;

		[Token(Token = "0x4001670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int numSkips;

		[Token(Token = "0x170003EF")]
		public bool isSleeping
		{
			[Token(Token = "0x6001728")]
			[Address(RVA = "0xA71E8C", Offset = "0xA71E8C", VA = "0xA71E8C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001729")]
		[Address(RVA = "0xA71778", Offset = "0xA71778", VA = "0xA71778")]
		public SimModule()
		{
		}
	}

	[Token(Token = "0x200037F")]
	public delegate IEnumerator SimUpdateMethod(float deltaTime);

	[Token(Token = "0x2000380")]
	public class SimulationSchedulerSaveData : SaveSystem.ModuleData
	{
		[Token(Token = "0x4001671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public double simulationTime;

		[Token(Token = "0x4001672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public double realTimePassed;

		[Token(Token = "0x4001673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DateTime simulationDate;

		[Token(Token = "0x600172E")]
		[Address(RVA = "0xA72158", Offset = "0xA72158", VA = "0xA72158")]
		public SimulationSchedulerSaveData()
		{
		}
	}

	[Token(Token = "0x40006D7")]
	private const int sleepingModuleSkips = 10;

	[Token(Token = "0x40006D8")]
	public const float secondsPerDay = 3f;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6680", Offset = "0x6F6680")]
	private double <realTimePassed>k__BackingField;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6690", Offset = "0x6F6690")]
	private double <simulationTime>k__BackingField;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F66A0", Offset = "0x6F66A0")]
	private SimulationSpeed <simulationSpeed>k__BackingField;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float[] simulationSpeeds;

	[Token(Token = "0x40006DD")]
	private const int maxCyclesPerModule = 60;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<SimModule> modules;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int currentModuleIndex;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int currentModuleCycles;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int simulationTimeId;

	[Token(Token = "0x1700020C")]
	public static float secondsPerWeek
	{
		[Token(Token = "0x6000A20")]
		[Address(RVA = "0xA710F8", Offset = "0xA710F8", VA = "0xA710F8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700020D")]
	public float dayProgress
	{
		[Token(Token = "0x6000A21")]
		[Address(RVA = "0xA71100", Offset = "0xA71100", VA = "0xA71100")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700020E")]
	public float weekProgress
	{
		[Token(Token = "0x6000A22")]
		[Address(RVA = "0xA71188", Offset = "0xA71188", VA = "0xA71188")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700020F")]
	public int currentWeek
	{
		[Token(Token = "0x6000A23")]
		[Address(RVA = "0xA71210", Offset = "0xA71210", VA = "0xA71210")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000210")]
	public bool isPausedByMenu
	{
		[Token(Token = "0x6000A24")]
		[Address(RVA = "0xA71228", Offset = "0xA71228", VA = "0xA71228")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000211")]
	public double realTimePassed
	{
		[Token(Token = "0x6000A25")]
		[Address(RVA = "0xA71380", Offset = "0xA71380", VA = "0xA71380")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FDC98", Offset = "0x6FDC98")]
		get
		{
			return default(double);
		}
		[Token(Token = "0x6000A26")]
		[Address(RVA = "0xA71388", Offset = "0xA71388", VA = "0xA71388")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FDCA8", Offset = "0x6FDCA8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000212")]
	public double simulationTime
	{
		[Token(Token = "0x6000A27")]
		[Address(RVA = "0xA71390", Offset = "0xA71390", VA = "0xA71390")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FDCB8", Offset = "0x6FDCB8")]
		get
		{
			return default(double);
		}
		[Token(Token = "0x6000A28")]
		[Address(RVA = "0xA71398", Offset = "0xA71398", VA = "0xA71398")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FDCC8", Offset = "0x6FDCC8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000213")]
	public float simulationTimeForAnalytics
	{
		[Token(Token = "0x6000A29")]
		[Address(RVA = "0xA713A0", Offset = "0xA713A0", VA = "0xA713A0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000214")]
	public SimulationSpeed simulationSpeed
	{
		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0xA713B8", Offset = "0xA713B8", VA = "0xA713B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FDCD8", Offset = "0x6FDCD8")]
		get
		{
			return default(SimulationSpeed);
		}
		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0xA713C0", Offset = "0xA713C0", VA = "0xA713C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FDCE8", Offset = "0x6FDCE8")]
		set
		{
		}
	}

	[Token(Token = "0x17000215")]
	public float simulationDeltaTime
	{
		[Token(Token = "0x6000A2C")]
		[Address(RVA = "0xA713C8", Offset = "0xA713C8", VA = "0xA713C8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000216")]
	public float simulationSpeedMultiplier
	{
		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0xA71404", Offset = "0xA71404", VA = "0xA71404")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000217")]
	public override Type saveModuleDataType
	{
		[Token(Token = "0x6000A32")]
		[Address(RVA = "0xA72070", Offset = "0xA72070", VA = "0xA72070", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0xA714D8", Offset = "0xA714D8", VA = "0xA714D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0xA71780", Offset = "0xA71780", VA = "0xA71780")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A30")]
	[Address(RVA = "0xA71974", Offset = "0xA71974", VA = "0xA71974")]
	public void Simulate(float deltaTime)
	{
	}

	[Token(Token = "0x6000A31")]
	[Address(RVA = "0xA71F58", Offset = "0xA71F58", VA = "0xA71F58")]
	private void NextModule()
	{
	}

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0xA720E0", Offset = "0xA720E0", VA = "0xA720E0", Slot = "5")]
	public override SaveSystem.ModuleData OnSave()
	{
		return null;
	}

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0xA72160", Offset = "0xA72160", VA = "0xA72160", Slot = "6")]
	public override void OnLoad(SaveSystem.SaveGame saveGame, SaveSystem.ModuleData data)
	{
	}

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0xA722B0", Offset = "0xA722B0", VA = "0xA722B0", Slot = "10")]
	public override void OnResetProgress()
	{
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0xA723B8", Offset = "0xA723B8", VA = "0xA723B8")]
	public SimulationScheduler()
	{
	}
}
[Token(Token = "0x20000F8")]
public class TerrainGenerator
{
	[Token(Token = "0x2000381")]
	public enum TileType : byte
	{
		[Token(Token = "0x4001675")]
		Water,
		[Token(Token = "0x4001676")]
		Land,
		[Token(Token = "0x4001677")]
		Beach,
		[Token(Token = "0x4001678")]
		Grass
	}

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int width;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int height;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TileType[] data;

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0xB206E0", Offset = "0xB206E0", VA = "0xB206E0")]
	public TerrainGenerator(int width, int height)
	{
	}

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0xB20758", Offset = "0xB20758", VA = "0xB20758")]
	public TileType GetTile(int x, int y)
	{
		return default(TileType);
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0xB2079C", Offset = "0xB2079C", VA = "0xB2079C")]
	public bool Crop(int targetWidth, int targetHeight)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0xB20A7C", Offset = "0xB20A7C", VA = "0xB20A7C")]
	private int GetNeighbours(int x, int y, TileType edgeType1, TileType edgeType2)
	{
		return default(int);
	}

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0xB20BC0", Offset = "0xB20BC0", VA = "0xB20BC0")]
	private void FillOcean(bool[] ocean, int x, int y)
	{
	}

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0xB20CD4", Offset = "0xB20CD4", VA = "0xB20CD4")]
	private int FillLakes()
	{
		return default(int);
	}

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0xB20DD0", Offset = "0xB20DD0", VA = "0xB20DD0")]
	private void ErodeEdges(System.Random rnd, int changes)
	{
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0xB20F04", Offset = "0xB20F04", VA = "0xB20F04")]
	public void Generate(int targetSize)
	{
	}

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0xB215B8", Offset = "0xB215B8", VA = "0xB215B8")]
	public void DebugPrint()
	{
	}
}
[Token(Token = "0x20000F9")]
public class VehicleCollection : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x2000382")]
	public class Vehicle
	{
		[Token(Token = "0x4001679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject prefab;

		[Token(Token = "0x400167A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6FAB54", Offset = "0x6FAB54")]
		public float spawnChance;

		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ColourSwatch colourSwatch;

		[Token(Token = "0x600172F")]
		[Address(RVA = "0xA9EE8C", Offset = "0xA9EE8C", VA = "0xA9EE8C")]
		public Vehicle()
		{
		}
	}

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Vehicle> prefabs;

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0xA9EB94", Offset = "0xA9EB94", VA = "0xA9EB94")]
	public GameObject Spawn()
	{
		return null;
	}

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0xA9EBC0", Offset = "0xA9EBC0", VA = "0xA9EBC0")]
	public GameObject Spawn(int randHash)
	{
		return null;
	}

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0xA9EE84", Offset = "0xA9EE84", VA = "0xA9EE84")]
	public VehicleCollection()
	{
	}
}
[Token(Token = "0x20000FA")]
public class Boat : MonoBehaviour
{
	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem wake;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float distanceFromWaterSurface;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float offsetScaler;

	[Token(Token = "0x6000A43")]
	[Address(RVA = "0xB5B0C0", Offset = "0xB5B0C0", VA = "0xB5B0C0")]
	private float SampleHeightAtPosition(Vector3 position)
	{
		return default(float);
	}

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0xB5B19C", Offset = "0xB5B19C", VA = "0xB5B19C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0xB5B4E4", Offset = "0xB5B4E4", VA = "0xB5B4E4")]
	public Boat()
	{
	}
}
[Token(Token = "0x20000FB")]
public class CarInfo : MonoBehaviour
{
	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color[] colorVariations;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int runtimeIndex;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public CarManager.CarState runtimeState;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float runtimeProgress;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool isSirenEnabled;

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0xBA202C", Offset = "0xBA202C", VA = "0xBA202C")]
	public CarInfo()
	{
	}
}
[Token(Token = "0x20000FC")]
public class HangGlider : MonoBehaviour
{
	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float glideSpeed;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float directionAdjustSpeed;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float targetNodeDistance;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float landingDistance;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private HangGliderStory story;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private City city;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int shippingLaneNodeIndex;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F66B0", Offset = "0x6F66B0")]
	private bool <isFlying>k__BackingField;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 targetPosition;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float targetHeight;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float bank;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool isLanding;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	private bool isWaitingForLaunch;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float timeWaitingForLaunch;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public GazeTimer gazeTimer;

	[Token(Token = "0x17000218")]
	public bool isFlying
	{
		[Token(Token = "0x6000A47")]
		[Address(RVA = "0xB151A4", Offset = "0xB151A4", VA = "0xB151A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FDCF8", Offset = "0x6FDCF8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A48")]
		[Address(RVA = "0xB151AC", Offset = "0xB151AC", VA = "0xB151AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FDD08", Offset = "0x6FDD08")]
		private set
		{
		}
	}

	[Token(Token = "0x17000219")]
	private List<Vector3> nodes
	{
		[Token(Token = "0x6000A49")]
		[Address(RVA = "0xB151B8", Offset = "0xB151B8", VA = "0xB151B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0xB151E8", Offset = "0xB151E8", VA = "0xB151E8")]
	public void Init(HangGliderStory story)
	{
	}

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0xB156E8", Offset = "0xB156E8", VA = "0xB156E8")]
	private bool FindLandingPosition()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0xB1542C", Offset = "0xB1542C", VA = "0xB1542C")]
	private void CalculateTargetPosition(int nodeIndex)
	{
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0xB158B0", Offset = "0xB158B0", VA = "0xB158B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0xB15DEC", Offset = "0xB15DEC", VA = "0xB15DEC")]
	public HangGlider()
	{
	}
}
[Token(Token = "0x20000FD")]
public class Helicopter : MonoBehaviour
{
	[Token(Token = "0x2000383")]
	public class HelicopterSaveData
	{
		[Token(Token = "0x400167C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public HelicopterState state;

		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 position;

		[Token(Token = "0x400167E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Quaternion rotation;

		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float rotorBladeSpeed;

		[Token(Token = "0x4001680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 targetPosition;

		[Token(Token = "0x4001681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float targetYaw;

		[Token(Token = "0x4001682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool shouldLandAtTarget;

		[Token(Token = "0x4001683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		public bool shouldDeployAttachment;

		[Token(Token = "0x4001684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		public bool shouldLowerAttachmentToGround;

		[Token(Token = "0x6001730")]
		[Address(RVA = "0xB1A77C", Offset = "0xB1A77C", VA = "0xB1A77C")]
		public HelicopterSaveData()
		{
		}
	}

	[Token(Token = "0x2000384")]
	public enum HelicopterState
	{
		[Token(Token = "0x4001686")]
		Landed,
		[Token(Token = "0x4001687")]
		TakingOff,
		[Token(Token = "0x4001688")]
		Flying,
		[Token(Token = "0x4001689")]
		Landing
	}

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HelicopterState state;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject rotorBlades;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject rotorBladesSpinning;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform rotorBladesRoot;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Renderer searchLight;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject attachment;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ParticleSystem waterDropEffect;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioSource primarySound;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioSource secondarySound;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioClip spinUp;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioClip spinDown;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioClip[] dropWaterSounds;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F66C0", Offset = "0x6F66C0")]
	private bool <shouldDeployAttachment>k__BackingField;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F66D0", Offset = "0x6F66D0")]
	private bool <shouldLowerAttachmentToGround>k__BackingField;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private City city;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Material spinningMaterial;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float rotorBladeSpeed;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float rotorRotation;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3 velocity;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float yawVelocity;

	[Token(Token = "0x4000711")]
	private const float spinningThreshold = 720f;

	[Token(Token = "0x4000712")]
	private const float spinAcceleration = 100f;

	[Token(Token = "0x4000713")]
	private const float maxSpinSpeed = 1000f;

	[Token(Token = "0x4000714")]
	private const float takeOffHeight = 3f;

	[Token(Token = "0x4000715")]
	private const float maxTakeOffLandingMoveSpeed = 1f;

	[Token(Token = "0x4000716")]
	private const float maxMoveSpeed = 4f;

	[Token(Token = "0x4000717")]
	private const float maxYawSpeed = 180f;

	[Token(Token = "0x4000718")]
	private const float maxSearchLightDistance = 4f;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector3 targetPosition;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float targetYaw;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool shouldLandAtTarget;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float searchLightTimer;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Vector3 searchLightVelocity;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Transform targetTransform;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public bool debugFollowPlayer;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private Vector3 attachmentPosition;

	[Token(Token = "0x4000721")]
	private const float attachmentDropLength = 0.65f;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private BlobShadow[] blobShadows;

	[Token(Token = "0x1700021A")]
	public bool waterDropEnabled
	{
		[Token(Token = "0x6000A4F")]
		[Address(RVA = "0xB18570", Offset = "0xB18570", VA = "0xB18570")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A50")]
		[Address(RVA = "0xB18624", Offset = "0xB18624", VA = "0xB18624")]
		set
		{
		}
	}

	[Token(Token = "0x1700021B")]
	public bool shouldDeployAttachment
	{
		[Token(Token = "0x6000A51")]
		[Address(RVA = "0xB18764", Offset = "0xB18764", VA = "0xB18764")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FDD18", Offset = "0x6FDD18")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A52")]
		[Address(RVA = "0xB1876C", Offset = "0xB1876C", VA = "0xB1876C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FDD28", Offset = "0x6FDD28")]
		set
		{
		}
	}

	[Token(Token = "0x1700021C")]
	public bool shouldLowerAttachmentToGround
	{
		[Token(Token = "0x6000A53")]
		[Address(RVA = "0xB18778", Offset = "0xB18778", VA = "0xB18778")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FDD38", Offset = "0x6FDD38")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A54")]
		[Address(RVA = "0xB18780", Offset = "0xB18780", VA = "0xB18780")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FDD48", Offset = "0x6FDD48")]
		set
		{
		}
	}

	[Token(Token = "0x1700021D")]
	public bool didReachTargetPosition
	{
		[Token(Token = "0x6000A55")]
		[Address(RVA = "0xB1878C", Offset = "0xB1878C", VA = "0xB1878C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0xB18728", Offset = "0xB18728", VA = "0xB18728")]
	private void PlaySound(AudioClip clip)
	{
	}

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0xB188B0", Offset = "0xB188B0", VA = "0xB188B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0xB18B60", Offset = "0xB18B60", VA = "0xB18B60")]
	public void Init(City inCity)
	{
	}

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0xB18B68", Offset = "0xB18B68", VA = "0xB18B68")]
	private float CalculateHoverHeight()
	{
		return default(float);
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0xB18D9C", Offset = "0xB18D9C", VA = "0xB18D9C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0xB1913C", Offset = "0xB1913C", VA = "0xB1913C")]
	public void FocusSearchLight(Vector3 target)
	{
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0xB18F70", Offset = "0xB18F70", VA = "0xB18F70")]
	public bool FlyTo(Vector3 location, float radius = 0.1f)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0xB1A200", Offset = "0xB1A200", VA = "0xB1A200")]
	public bool LandAt(Vector3 location, Quaternion rotation)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0xB1A358", Offset = "0xB1A358", VA = "0xB1A358")]
	private bool AccelerateRotorBladesToSpeed(float target, float deltaTime)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0xB19350", Offset = "0xB19350", VA = "0xB19350")]
	public void Simulate(float deltaTime)
	{
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0xB1A448", Offset = "0xB1A448", VA = "0xB1A448")]
	private void UpdateShadowPlaneHeight()
	{
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0xB1A694", Offset = "0xB1A694", VA = "0xB1A694")]
	public HelicopterSaveData GetSaveData()
	{
		return null;
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0xB1A784", Offset = "0xB1A784", VA = "0xB1A784")]
	public void RestoreSaveData(HelicopterSaveData saveData)
	{
	}

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0xB1A828", Offset = "0xB1A828", VA = "0xB1A828")]
	public Helicopter()
	{
	}
}
[Token(Token = "0x20000FE")]
public class HotAirBalloon : MonoBehaviour
{
	[Token(Token = "0x2000385")]
	private enum State
	{
		[Token(Token = "0x400168B")]
		WaitingToBeSeen,
		[Token(Token = "0x400168C")]
		Waiting,
		[Token(Token = "0x400168D")]
		Inflating,
		[Token(Token = "0x400168E")]
		TakingOff,
		[Token(Token = "0x400168F")]
		FlyingTowardsCityCenter,
		[Token(Token = "0x4001690")]
		FlyingAway
	}

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float inflationDuration;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float deflatedScale;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxWaitDuration;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float maxWaitToBeSeenDuration;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float takeoffDuration;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float takeOffAcceleration;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float minCruisingAltitude;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float maxCruisingAltitude;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float flightSpeed;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool startDeflated;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip takeoffClip;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F66E0", Offset = "0x6F66E0")]
	private HotAirBalloonStory <story>k__BackingField;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GazeTimer gazeTimer;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private State state;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private City city;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float timeInState;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float waitDuration;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float cruisingAltitude;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 velocity;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 cityCenter;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private AudioSource audioSource;

	[Token(Token = "0x1700021E")]
	public HotAirBalloonStory story
	{
		[Token(Token = "0x6000A64")]
		[Address(RVA = "0xB1CCDC", Offset = "0xB1CCDC", VA = "0xB1CCDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FDD58", Offset = "0x6FDD58")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A65")]
		[Address(RVA = "0xB1CCE4", Offset = "0xB1CCE4", VA = "0xB1CCE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FDD68", Offset = "0x6FDD68")]
		set
		{
		}
	}

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0xB1CCEC", Offset = "0xB1CCEC", VA = "0xB1CCEC")]
	private void SetState(State newState)
	{
	}

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0xB1CD70", Offset = "0xB1CD70", VA = "0xB1CD70")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0xB1CF0C", Offset = "0xB1CF0C", VA = "0xB1CF0C")]
	private void HandleFlight(float deltaTime)
	{
	}

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0xB1D468", Offset = "0xB1D468", VA = "0xB1D468")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0xB1D830", Offset = "0xB1D830", VA = "0xB1D830")]
	public HotAirBalloon()
	{
	}
}
[Token(Token = "0x20000FF")]
public class JettyBoats : MonoBehaviour
{
	[Token(Token = "0x2000386")]
	public class Boat
	{
		[Token(Token = "0x4001691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject gameObject;

		[Token(Token = "0x4001692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int targetX;

		[Token(Token = "0x4001693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int targetY;

		[Token(Token = "0x4001694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int lastX;

		[Token(Token = "0x4001695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int lastY;

		[Token(Token = "0x4001696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 startPosition;

		[Token(Token = "0x4001697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Quaternion startRotation;

		[Token(Token = "0x6001731")]
		[Address(RVA = "0xB3BD08", Offset = "0xB3BD08", VA = "0xB3BD08")]
		public Boat()
		{
		}
	}

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] boatObjects;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Boat> boats;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private City city;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float boatRotationSpeed;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float boatMoveSpeed;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float maxBoatDistance;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool enableDebugDraw;

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0xB3B2BC", Offset = "0xB3B2BC", VA = "0xB3B2BC")]
	private void PickNewTarget(Boat boat)
	{
	}

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0xB3BB88", Offset = "0xB3BB88", VA = "0xB3BB88")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0xB3BD10", Offset = "0xB3BD10", VA = "0xB3BD10")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0xB3C440", Offset = "0xB3C440", VA = "0xB3C440")]
	public JettyBoats()
	{
	}
}
[Token(Token = "0x2000100")]
public class PlaneInfo : MonoBehaviour
{
	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool canLandAtAirport;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool applyColour;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color colour;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip takeoffSound;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip landingSound;

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0xA22180", Offset = "0xA22180", VA = "0xA22180")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0xA22284", Offset = "0xA22284", VA = "0xA22284")]
	public void PlayTakeOffSound()
	{
	}

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0xA22378", Offset = "0xA22378", VA = "0xA22378")]
	public void PlayLandingSound()
	{
	}

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0xA2246C", Offset = "0xA2246C", VA = "0xA2246C")]
	public PlaneInfo()
	{
	}
}
[Token(Token = "0x2000101")]
public class SeaPlane : MonoBehaviour
{
	[Token(Token = "0x2000387")]
	private enum State
	{
		[Token(Token = "0x4001699")]
		Landed,
		[Token(Token = "0x400169A")]
		TakingOff,
		[Token(Token = "0x400169B")]
		Flying,
		[Token(Token = "0x400169C")]
		Landing
	}

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip takeoffSound;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip landingSound;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform leftProp;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform rightProp;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private State state;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Animator animator;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private City city;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform landingTransform;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float flightAngle;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float flightOffset;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float circleSize;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 lastPosition;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float speed;

	[Token(Token = "0x4000751")]
	private const float flightOffsetDistance = 3f;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float maxBankAmount;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float bankSpeed;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float cruiseHeight;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float delayBetweenFlights;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float bank;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float timeUntilNextFlight;

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0xAC0A80", Offset = "0xAC0A80", VA = "0xAC0A80")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0xAC0AF0", Offset = "0xAC0AF0", VA = "0xAC0AF0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0xAC0EB0", Offset = "0xAC0EB0", VA = "0xAC0EB0")]
	private void FlyAroundPoint(Vector3 pivot, float distance, float height, float deltaTime)
	{
	}

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0xAC1158", Offset = "0xAC1158", VA = "0xAC1158")]
	private bool Fly(float deltaTime)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0xAC17B8", Offset = "0xAC17B8", VA = "0xAC17B8")]
	private void CalculateSpeed(float deltaTime)
	{
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0xAC0B94", Offset = "0xAC0B94", VA = "0xAC0B94")]
	private void Simulate(float deltaTime)
	{
	}

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0xAC18E0", Offset = "0xAC18E0", VA = "0xAC18E0")]
	public SeaPlane()
	{
	}
}
[Token(Token = "0x2000102")]
public class ShipDockBehaviour : StateMachineBehaviour
{
	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string onExitMessage;

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0xACB9F8", Offset = "0xACB9F8", VA = "0xACB9F8", Slot = "6")]
	public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0xACBA20", Offset = "0xACBA20", VA = "0xACBA20")]
	public ShipDockBehaviour()
	{
	}
}
[Token(Token = "0x2000103")]
public class ShipInfo : MonoBehaviour
{
	[Token(Token = "0x2000388")]
	public enum State
	{
		[Token(Token = "0x400169E")]
		MovingToDock,
		[Token(Token = "0x400169F")]
		WaitingToEnterDock,
		[Token(Token = "0x40016A0")]
		EnteringDock,
		[Token(Token = "0x40016A1")]
		Docked,
		[Token(Token = "0x40016A2")]
		WaitingToExitDock,
		[Token(Token = "0x40016A3")]
		ExitingDock,
		[Token(Token = "0x40016A4")]
		MovingToExit,
		[Token(Token = "0x40016A5")]
		ExitingWorld,
		[Token(Token = "0x40016A6")]
		WaitingForRemoval
	}

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject wake;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Seaport.Space.Type seaportSpaceType;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float size;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float dolphinSpawnWidth;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public State state;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private City city;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Animator animator;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AudioSource audioSource;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F66F0", Offset = "0x6F66F0")]
	private float <timeDocked>k__BackingField;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6700", Offset = "0x6F6700")]
	private float <timeQueued>k__BackingField;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AnimatorOverrideController overrideController;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6710", Offset = "0x6F6710")]
	private float <speed>k__BackingField;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float acceleration;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 lastPosition;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int currentShippingLaneNode;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int pickedExitShippingLaneNode;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 pickedExitPosition;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 pickedExitVector;

	[Token(Token = "0x400076B")]
	private const float turnSpeed = 40f;

	[Token(Token = "0x400076C")]
	private const float maxSpeed = 1f;

	[Token(Token = "0x1700021F")]
	public float timeDocked
	{
		[Token(Token = "0x6000A7C")]
		[Address(RVA = "0xACBA28", Offset = "0xACBA28", VA = "0xACBA28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FDD78", Offset = "0x6FDD78")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000A7D")]
		[Address(RVA = "0xACBA30", Offset = "0xACBA30", VA = "0xACBA30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FDD88", Offset = "0x6FDD88")]
		set
		{
		}
	}

	[Token(Token = "0x17000220")]
	public float timeQueued
	{
		[Token(Token = "0x6000A7E")]
		[Address(RVA = "0xACBA38", Offset = "0xACBA38", VA = "0xACBA38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FDD98", Offset = "0x6FDD98")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000A7F")]
		[Address(RVA = "0xACBA40", Offset = "0xACBA40", VA = "0xACBA40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FDDA8", Offset = "0x6FDDA8")]
		set
		{
		}
	}

	[Token(Token = "0x17000221")]
	public float speed
	{
		[Token(Token = "0x6000A80")]
		[Address(RVA = "0xACBA48", Offset = "0xACBA48", VA = "0xACBA48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FDDB8", Offset = "0x6FDDB8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000A81")]
		[Address(RVA = "0xACBA50", Offset = "0xACBA50", VA = "0xACBA50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FDDC8", Offset = "0x6FDDC8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000222")]
	private SeaTrafficManager trafficManager
	{
		[Token(Token = "0x6000A82")]
		[Address(RVA = "0xACBA58", Offset = "0xACBA58", VA = "0xACBA58")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000223")]
	private Seaport seaport
	{
		[Token(Token = "0x6000A83")]
		[Address(RVA = "0xACBA74", Offset = "0xACBA74", VA = "0xACBA74")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0xACBA9C", Offset = "0xACBA9C", VA = "0xACBA9C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0xAC3640", Offset = "0xAC3640", VA = "0xAC3640")]
	public void Init(City inCity, int startingLaneNode)
	{
	}

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0xACBB64", Offset = "0xACBB64", VA = "0xACBB64")]
	public List<Vector3> GenerateDolphinSpawnPositions(int count)
	{
		return null;
	}

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0xACBDB8", Offset = "0xACBDB8", VA = "0xACBDB8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0xACBF74", Offset = "0xACBF74", VA = "0xACBF74")]
	private bool SteerTo(Vector3 targetPosition, Quaternion targetRotation, float deltaTime, bool stopAtDestination = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0xACCA5C", Offset = "0xACCA5C", VA = "0xACCA5C")]
	private bool SteerTo(Transform target, float deltaTime, bool stopAtDestination = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0xACCB00", Offset = "0xACCB00", VA = "0xACCB00")]
	private void CalculateSpeedFromAnimation(float deltaTime)
	{
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0xACCC08", Offset = "0xACCC08", VA = "0xACCC08")]
	private int WrapNode(int node, int count)
	{
		return default(int);
	}

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0xACCC28", Offset = "0xACCC28", VA = "0xACCC28")]
	private bool SteerToNode(float deltaTime, List<Vector3> nodes, int targetNodeIndex, Vector3 finalPosition, Vector3 finalOffsetVector)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0xAC2528", Offset = "0xAC2528", VA = "0xAC2528")]
	public void Simulate(float deltaTime)
	{
	}

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0xACCF50", Offset = "0xACCF50", VA = "0xACCF50")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0xACD4CC", Offset = "0xACD4CC", VA = "0xACD4CC")]
	public void OnDocked()
	{
	}

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0xACD12C", Offset = "0xACD12C", VA = "0xACD12C")]
	public void OnExitedDock()
	{
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0xACD5D0", Offset = "0xACD5D0", VA = "0xACD5D0")]
	public ShipInfo()
	{
	}
}
[Token(Token = "0x2000104")]
public class SkySignPlane : MonoBehaviour
{
	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro frontTextMesh;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro backTextMesh;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform signTransform;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform signEndPointTransform;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform signEndTransform;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float signWidthPadding;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float travelSpeed;

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0xA72768", Offset = "0xA72768", VA = "0xA72768")]
	public void Start()
	{
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0xA727AC", Offset = "0xA727AC", VA = "0xA727AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0xA729A4", Offset = "0xA729A4", VA = "0xA729A4")]
	public void SetMessage(string messageText)
	{
	}

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0xA72ABC", Offset = "0xA72ABC", VA = "0xA72ABC")]
	public SkySignPlane()
	{
	}
}
[Token(Token = "0x2000105")]
public class ControllerLabel : MonoBehaviour
{
	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LineRenderer line;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text text;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float lineWidth;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float paddingX;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float paddingY;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool facePlayer;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool keepBoxWidth;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RectTransform rectTransform;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CanvasGroup canvasGroup;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Quaternion startingRotation;

	[Token(Token = "0x17000224")]
	private Player player
	{
		[Token(Token = "0x6000A96")]
		[Address(RVA = "0xACE5EC", Offset = "0xACE5EC", VA = "0xACE5EC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0xACE63C", Offset = "0xACE63C", VA = "0xACE63C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0xACE6D0", Offset = "0xACE6D0", VA = "0xACE6D0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0xACEB30", Offset = "0xACEB30", VA = "0xACEB30")]
	public ControllerLabel()
	{
	}
}
[Token(Token = "0x2000106")]
public class ControllerLabels : MonoBehaviour
{
	[Token(Token = "0x2000389")]
	[Flags]
	public enum LabelType
	{
		[Token(Token = "0x40016A8")]
		None = 0,
		[Token(Token = "0x40016A9")]
		Grab = 1,
		[Token(Token = "0x40016AA")]
		Rotate = 2,
		[Token(Token = "0x40016AB")]
		Orbit = 4,
		[Token(Token = "0x40016AC")]
		Scale = 8,
		[Token(Token = "0x40016AD")]
		Zoom = 0x10,
		[Token(Token = "0x40016AE")]
		Trigger = 0x20,
		[Token(Token = "0x40016AF")]
		Controller = 0x40
	}

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ControllerLabel grabLabel;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ControllerLabel rotateLabel;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ControllerLabel zoomLabel;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ControllerLabel triggerLabel;

	[Token(Token = "0x17000225")]
	public LabelType activeLabels
	{
		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0xACEB54", Offset = "0xACEB54", VA = "0xACEB54")]
		set
		{
		}
	}

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0xACED70", Offset = "0xACED70", VA = "0xACED70")]
	public ControllerLabels()
	{
	}
}
[Token(Token = "0x2000107")]
public class HandPoseHint : MonoBehaviour
{
	[Token(Token = "0x200038A")]
	public enum Gesture
	{
		[Token(Token = "0x40016B1")]
		Hide,
		[Token(Token = "0x40016B2")]
		Relaxed,
		[Token(Token = "0x40016B3")]
		Pinch,
		[Token(Token = "0x40016B4")]
		OpenPinch,
		[Token(Token = "0x40016B5")]
		Grab,
		[Token(Token = "0x40016B6")]
		KeepGrabbing,
		[Token(Token = "0x40016B7")]
		ThumbsUp,
		[Token(Token = "0x40016B8")]
		OpenGrab
	}

	[Token(Token = "0x200038B")]
	public enum Movement
	{
		[Token(Token = "0x40016BA")]
		None,
		[Token(Token = "0x40016BB")]
		Pan,
		[Token(Token = "0x40016BC")]
		ZoomIn,
		[Token(Token = "0x40016BD")]
		ZoomOut,
		[Token(Token = "0x40016BE")]
		RotateClockwise,
		[Token(Token = "0x40016BF")]
		RotateAntiClockwise,
		[Token(Token = "0x40016C0")]
		Drag
	}

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform leftHandTransform;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform rightHandTransform;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform rotationRoot;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SpriteRenderer leftHandArrowHead;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LineRenderer leftHandArrowTail;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SpriteRenderer rightHandArrowHead;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LineRenderer rightHandArrowTail;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Gesture leftHandGesture;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Gesture rightHandGesture;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Movement movement;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float leftHandGestureStrength;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float rightHandGestureStrength;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Animator leftHandAnimator;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Animator rightHandAnimator;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float gestureChangeSpeed;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float demoFrequency;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float relaxedAngle;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int pinchId;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int holdId;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float handOffset;

	[Token(Token = "0x4000796")]
	private const float movementAnimationDelay = 0.5f;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float movementAnimationTime;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Movement movementLastFrame;

	[Token(Token = "0x4000799")]
	private const int numCirclePoints = 32;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3[] circlePoints;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float lineWidth;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float arrowHeadScale;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float arrowHeadLineOffset;

	[Token(Token = "0x17000226")]
	public bool anyGestureVisible
	{
		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0xB10C00", Offset = "0xB10C00", VA = "0xB10C00")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0xB10C20", Offset = "0xB10C20", VA = "0xB10C20")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0xB10CAC", Offset = "0xB10CAC", VA = "0xB10CAC")]
	private void UpdateHand(Animator animator, Gesture gesture, float deltaTime)
	{
	}

	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0xB10FB8", Offset = "0xB10FB8", VA = "0xB10FB8")]
	private void DemoGesture(Animator animator, Gesture gesture)
	{
	}

	[Token(Token = "0x6000AA0")]
	[Address(RVA = "0xB11038", Offset = "0xB11038", VA = "0xB11038")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0xB124EC", Offset = "0xB124EC", VA = "0xB124EC")]
	public void Configure(Gesture leftGesture, Gesture rightGesture, Movement desiredMovement = Movement.None)
	{
	}

	[Token(Token = "0x6000AA2")]
	[Address(RVA = "0xB11990", Offset = "0xB11990", VA = "0xB11990")]
	private void GenerateRotationHintArrow(SpriteRenderer arrowHead, LineRenderer arrowTail, Vector3 leftPosition, Vector3 rightPosition, float direction = 1f)
	{
	}

	[Token(Token = "0x6000AA3")]
	[Address(RVA = "0xB12044", Offset = "0xB12044", VA = "0xB12044")]
	private void GenerateScaleHintArrow(SpriteRenderer arrowHead, LineRenderer arrowTail, Vector3 leftPosition, Vector3 rightPosition, float distance)
	{
	}

	[Token(Token = "0x6000AA4")]
	[Address(RVA = "0xB124F8", Offset = "0xB124F8", VA = "0xB124F8")]
	public HandPoseHint()
	{
	}
}
[Token(Token = "0x2000108")]
public class HintArrow : MonoBehaviour
{
	[Token(Token = "0x200038C")]
	public enum ArrowType
	{
		[Token(Token = "0x40016C2")]
		None,
		[Token(Token = "0x40016C3")]
		Notification,
		[Token(Token = "0x40016C4")]
		Tutorial,
		[Token(Token = "0x40016C5")]
		TutorialImportant,
		[Token(Token = "0x40016C6")]
		SelectedInfoBoxTutorial,
		[Token(Token = "0x40016C7")]
		ControlsHint
	}

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform targetTransform;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image hintImage;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image arrowImage;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform arrowRoot;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6720", Offset = "0x6F6720")]
	private bool <isGazingAtTarget>k__BackingField;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private ArrowType arrowType;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6730", Offset = "0x6F6730")]
	private Vector3 <arrowDirection>k__BackingField;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6740", Offset = "0x6F6740")]
	private float <arrowScale>k__BackingField;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Player player;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 startingArrowImageOffset;

	[Token(Token = "0x17000227")]
	public bool isGazingAtTarget
	{
		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0xB1B2D8", Offset = "0xB1B2D8", VA = "0xB1B2D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FDDD8", Offset = "0x6FDDD8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0xB1B2E0", Offset = "0xB1B2E0", VA = "0xB1B2E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FDDE8", Offset = "0x6FDDE8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000228")]
	private bool shouldHideWhenGazingAtTarget
	{
		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0xB1B2EC", Offset = "0xB1B2EC", VA = "0xB1B2EC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000229")]
	private bool shouldHintAtDirection
	{
		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0xB1B300", Offset = "0xB1B300", VA = "0xB1B300")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700022A")]
	public Vector3 arrowDirection
	{
		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0xB1B32C", Offset = "0xB1B32C", VA = "0xB1B32C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FDDF8", Offset = "0x6FDDF8")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0xB1B338", Offset = "0xB1B338", VA = "0xB1B338")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FDE08", Offset = "0x6FDE08")]
		set
		{
		}
	}

	[Token(Token = "0x1700022B")]
	public float arrowScale
	{
		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0xB1B344", Offset = "0xB1B344", VA = "0xB1B344")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FDE18", Offset = "0x6FDE18")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0xB1B34C", Offset = "0xB1B34C", VA = "0xB1B34C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FDE28", Offset = "0x6FDE28")]
		set
		{
		}
	}

	[Token(Token = "0x6000AAD")]
	[Address(RVA = "0xB1B354", Offset = "0xB1B354", VA = "0xB1B354")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AAE")]
	[Address(RVA = "0xB1B410", Offset = "0xB1B410", VA = "0xB1B410")]
	public void Show(ArrowType type, Transform target, Vector3 direction, float scale = 1f)
	{
	}

	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0xB1B54C", Offset = "0xB1B54C", VA = "0xB1B54C")]
	public void Hide(ArrowType type = ArrowType.None)
	{
	}

	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0xB1B598", Offset = "0xB1B598", VA = "0xB1B598")]
	public bool IsHintingAt(Transform target)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AB1")]
	[Address(RVA = "0xB1B630", Offset = "0xB1B630", VA = "0xB1B630")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000AB2")]
	[Address(RVA = "0xB1C020", Offset = "0xB1C020", VA = "0xB1C020")]
	public HintArrow()
	{
	}
}
[Token(Token = "0x2000109")]
public class ThermalVentHintArrow : MonoBehaviour
{
	[Token(Token = "0x1700022C")]
	private Player player
	{
		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0xB21E00", Offset = "0xB21E00", VA = "0xB21E00")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0xB21E50", Offset = "0xB21E50", VA = "0xB21E50")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AB5")]
	[Address(RVA = "0xB220F8", Offset = "0xB220F8", VA = "0xB220F8")]
	public ThermalVentHintArrow()
	{
	}
}
[Token(Token = "0x200010A")]
public class TutorialManager : SingletonBehaviour<TutorialManager>, ISaveInterface, IDebugPanelProvider
{
	[Token(Token = "0x200038D")]
	public enum TutorialState
	{
		[Token(Token = "0x40016C9")]
		Start,
		[Token(Token = "0x40016CA")]
		ShowGrabMoveControls,
		[Token(Token = "0x40016CB")]
		ShowRotateInPlaceControls,
		[Token(Token = "0x40016CC")]
		ShowRotateControls,
		[Token(Token = "0x40016CD")]
		ShowZoomInPlaceControls,
		[Token(Token = "0x40016CE")]
		ShowZoomControls,
		[Token(Token = "0x40016CF")]
		ShowHandTrackingStartingPosition,
		[Token(Token = "0x40016D0")]
		ShowHandTrackingGrabMoveControls,
		[Token(Token = "0x40016D1")]
		ShowHandTrackingZoomOutControls,
		[Token(Token = "0x40016D2")]
		ShowHandTrackingZoomInControls,
		[Token(Token = "0x40016D3")]
		ShowHandTrackingRotateClockwiseControls,
		[Token(Token = "0x40016D4")]
		ShowHandTrackingRotateAntiClockwiseControls,
		[Token(Token = "0x40016D5")]
		ShowSeaportMessage,
		[Token(Token = "0x40016D6")]
		ShowRoadHintMessage,
		[Token(Token = "0x40016D7")]
		ShowUndoMessage,
		[Token(Token = "0x40016D8")]
		ShowUnequipMessage,
		[Token(Token = "0x40016D9")]
		ShowResidentialZoneHintMessage,
		[Token(Token = "0x40016DA")]
		ShowPowerHintMessage,
		[Token(Token = "0x40016DB")]
		ShowWaterHintMessage,
		[Token(Token = "0x40016DC")]
		ShowCommercialZoneHintMessage,
		[Token(Token = "0x40016DD")]
		ShowIndustrialZoneHintMessage,
		[Token(Token = "0x40016DE")]
		ShowSmartwatchHintMessage,
		[Token(Token = "0x40016DF")]
		ShowPoliceStationHint,
		[Token(Token = "0x40016E0")]
		ShowGrowCityHintMessage,
		[Token(Token = "0x40016E1")]
		ShowFireStationHint,
		[Token(Token = "0x40016E2")]
		ShowNetworkHintMessage,
		[Token(Token = "0x40016E3")]
		TriggerFireEvent,
		[Token(Token = "0x40016E4")]
		ShowRegionUnlockMessage,
		[Token(Token = "0x40016E5")]
		ShowBuildCityHallHint,
		[Token(Token = "0x40016E6")]
		ShowReturnToWorldMapHint,
		[Token(Token = "0x40016E7")]
		Ended
	}

	[Token(Token = "0x200038E")]
	public class TutorialSaveData : SaveSystem.ModuleData
	{
		[Token(Token = "0x40016E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TutorialState state;

		[Token(Token = "0x40016E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool hasTriggeredFireEvent;

		[Token(Token = "0x40016EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool hasShownSmartwatchHint;

		[Token(Token = "0x40016EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		public bool hasGrabMoved;

		[Token(Token = "0x40016EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
		public bool hasRotatedView;

		[Token(Token = "0x40016ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool hasZoomed;

		[Token(Token = "0x40016EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool hasRotatedViewInPlace;

		[Token(Token = "0x40016EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool hasZoomedInPlace;

		[Token(Token = "0x40016F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		public bool hasShownDisconnectedBuildingsHint;

		[Token(Token = "0x40016F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool hasResolvedDisconnectedBuildings;

		[Token(Token = "0x40016F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool hasShowSandstormWarningHint;

		[Token(Token = "0x40016F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		public bool hasResolvedSandstormWarning;

		[Token(Token = "0x40016F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
		public bool hasUpgradedBuilding;

		[Token(Token = "0x40016F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool hasBuiltAirport;

		[Token(Token = "0x40016F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool hasBuiltSchoolBoostingBuilding;

		[Token(Token = "0x40016F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool hasShownUnpoweredCellTowerHint;

		[Token(Token = "0x40016F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		public bool hasResolvedUnpoweredCellTower;

		[Token(Token = "0x40016F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool hasUsedUndo;

		[Token(Token = "0x40016FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool hasGrabMovedWithHandTracking;

		[Token(Token = "0x40016FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
		public bool hasRotatedClockwiseViewWithHandTracking;

		[Token(Token = "0x40016FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F")]
		public bool hasRotatedAntiClockwiseViewWithHandTracking;

		[Token(Token = "0x40016FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool hasZoomedInWithHandTracking;

		[Token(Token = "0x40016FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool hasZoomedOutWithHandTracking;

		[Token(Token = "0x40016FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool hasBuiltWithHandTracking;

		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		public bool shouldSkipTutorial;

		[Token(Token = "0x6001732")]
		[Address(RVA = "0xCAEE6C", Offset = "0xCAEE6C", VA = "0xCAEE6C")]
		public TutorialSaveData()
		{
		}
	}

	[Token(Token = "0x200038F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5850", Offset = "0x6F5850")]
	private sealed class <>c__DisplayClass102_0
	{
		[Token(Token = "0x4001701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Predicate<ToolMenu.Entry> predicate;

		[Token(Token = "0x6001733")]
		[Address(RVA = "0xCAEB54", Offset = "0xCAEB54", VA = "0xCAEB54")]
		public <>c__DisplayClass102_0()
		{
		}

		[Token(Token = "0x6001734")]
		[Address(RVA = "0xCAEB5C", Offset = "0xCAEB5C", VA = "0xCAEB5C")]
		internal bool <HintAtMenuType>b__0(WheelMenuEntry x)
		{
			return default(bool);
		}

		[Token(Token = "0x6001735")]
		[Address(RVA = "0xCAEBE4", Offset = "0xCAEBE4", VA = "0xCAEBE4")]
		internal bool <HintAtMenuType>b__1(WheelMenuEntry x)
		{
			return default(bool);
		}
	}

	[Serializable]
	[Token(Token = "0x2000390")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5860", Offset = "0x6F5860")]
	private sealed class <>c
	{
		[Token(Token = "0x4001702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<ToolMenu.Entry> <>9__105_0;

		[Token(Token = "0x4001704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Predicate<ToolMenu.Entry> <>9__113_0;

		[Token(Token = "0x4001705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Predicate<ToolMenu.Entry> <>9__113_1;

		[Token(Token = "0x4001706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Predicate<BuildingInstance> <>9__113_2;

		[Token(Token = "0x4001707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Predicate<ToolMenu.Entry> <>9__113_3;

		[Token(Token = "0x4001708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Predicate<BuildingInstance> <>9__113_4;

		[Token(Token = "0x4001709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static Predicate<ToolMenu.Entry> <>9__113_5;

		[Token(Token = "0x400170A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static Predicate<ToolMenu.Entry> <>9__113_6;

		[Token(Token = "0x400170B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static Predicate<ToolMenu.Entry> <>9__113_7;

		[Token(Token = "0x400170C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static Predicate<BuildingInstance> <>9__113_8;

		[Token(Token = "0x400170D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static Predicate<BuildingInstance> <>9__113_9;

		[Token(Token = "0x400170E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static Predicate<ToolMenu.Entry> <>9__113_10;

		[Token(Token = "0x400170F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public static Predicate<ToolMenu.Entry> <>9__113_11;

		[Token(Token = "0x4001710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public static Predicate<ToolMenu.Entry> <>9__114_0;

		[Token(Token = "0x4001711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public static Predicate<BuildingInstance> <>9__121_0;

		[Token(Token = "0x4001712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public static Predicate<BuildingInstance> <>9__121_1;

		[Token(Token = "0x4001713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public static Predicate<ToolMenu.Entry> <>9__121_2;

		[Token(Token = "0x4001714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public static Predicate<BuildingInstance> <>9__123_0;

		[Token(Token = "0x6001737")]
		[Address(RVA = "0xCAE790", Offset = "0xCAE790", VA = "0xCAE790")]
		public <>c()
		{
		}

		[Token(Token = "0x6001738")]
		[Address(RVA = "0xCAE798", Offset = "0xCAE798", VA = "0xCAE798")]
		internal bool <HasEnoughRoads>b__105_0(ToolMenu.Entry x)
		{
			return default(bool);
		}

		[Token(Token = "0x6001739")]
		[Address(RVA = "0xCAE7B8", Offset = "0xCAE7B8", VA = "0xCAE7B8")]
		internal bool <UpdateState>b__113_0(ToolMenu.Entry x)
		{
			return default(bool);
		}

		[Token(Token = "0x600173A")]
		[Address(RVA = "0xCAE7D8", Offset = "0xCAE7D8", VA = "0xCAE7D8")]
		internal bool <UpdateState>b__113_1(ToolMenu.Entry x)
		{
			return default(bool);
		}

		[Token(Token = "0x600173B")]
		[Address(RVA = "0xCAE7F8", Offset = "0xCAE7F8", VA = "0xCAE7F8")]
		internal bool <UpdateState>b__113_2(BuildingInstance x)
		{
			return default(bool);
		}

		[Token(Token = "0x600173C")]
		[Address(RVA = "0xCAE820", Offset = "0xCAE820", VA = "0xCAE820")]
		internal bool <UpdateState>b__113_3(ToolMenu.Entry x)
		{
			return default(bool);
		}

		[Token(Token = "0x600173D")]
		[Address(RVA = "0xCAE860", Offset = "0xCAE860", VA = "0xCAE860")]
		internal bool <UpdateState>b__113_4(BuildingInstance x)
		{
			return default(bool);
		}

		[Token(Token = "0x600173E")]
		[Address(RVA = "0xCAE888", Offset = "0xCAE888", VA = "0xCAE888")]
		internal bool <UpdateState>b__113_5(ToolMenu.Entry x)
		{
			return default(bool);
		}

		[Token(Token = "0x600173F")]
		[Address(RVA = "0xCAE8C8", Offset = "0xCAE8C8", VA = "0xCAE8C8")]
		internal bool <UpdateState>b__113_6(ToolMenu.Entry x)
		{
			return default(bool);
		}

		[Token(Token = "0x6001740")]
		[Address(RVA = "0xCAE908", Offset = "0xCAE908", VA = "0xCAE908")]
		internal bool <UpdateState>b__113_7(ToolMenu.Entry x)
		{
			return default(bool);
		}

		[Token(Token = "0x6001741")]
		[Address(RVA = "0xCAE948", Offset = "0xCAE948", VA = "0xCAE948")]
		internal bool <UpdateState>b__113_8(BuildingInstance x)
		{
			return default(bool);
		}

		[Token(Token = "0x6001742")]
		[Address(RVA = "0xCAE964", Offset = "0xCAE964", VA = "0xCAE964")]
		internal bool <UpdateState>b__113_9(BuildingInstance x)
		{
			return default(bool);
		}

		[Token(Token = "0x6001743")]
		[Address(RVA = "0xCAE98C", Offset = "0xCAE98C", VA = "0xCAE98C")]
		internal bool <UpdateState>b__113_10(ToolMenu.Entry x)
		{
			return default(bool);
		}

		[Token(Token = "0x6001744")]
		[Address(RVA = "0xCAE9CC", Offset = "0xCAE9CC", VA = "0xCAE9CC")]
		internal bool <UpdateState>b__113_11(ToolMenu.Entry x)
		{
			return default(bool);
		}

		[Token(Token = "0x6001745")]
		[Address(RVA = "0xCAEA0C", Offset = "0xCAEA0C", VA = "0xCAEA0C")]
		internal bool <ShowReturnToWorldMapHint>b__114_0(ToolMenu.Entry x)
		{
			return default(bool);
		}

		[Token(Token = "0x6001746")]
		[Address(RVA = "0xCAEA2C", Offset = "0xCAEA2C", VA = "0xCAEA2C")]
		internal bool <ShowGeneralHints>b__121_0(BuildingInstance x)
		{
			return default(bool);
		}

		[Token(Token = "0x6001747")]
		[Address(RVA = "0xCAEA74", Offset = "0xCAEA74", VA = "0xCAEA74")]
		internal bool <ShowGeneralHints>b__121_1(BuildingInstance x)
		{
			return default(bool);
		}

		[Token(Token = "0x6001748")]
		[Address(RVA = "0xCAEB0C", Offset = "0xCAEB0C", VA = "0xCAEB0C")]
		internal bool <ShowGeneralHints>b__121_2(ToolMenu.Entry x)
		{
			return default(bool);
		}

		[Token(Token = "0x6001749")]
		[Address(RVA = "0xCAEB2C", Offset = "0xCAEB2C", VA = "0xCAEB2C")]
		internal bool <ShowPostTutorialHints>b__123_0(BuildingInstance x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000391")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5870", Offset = "0x6F5870")]
	private sealed class <>c__DisplayClass107_0
	{
		[Token(Token = "0x4001715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ZoneManager.ZoneType zoneType;

		[Token(Token = "0x600174A")]
		[Address(RVA = "0xCAEC6C", Offset = "0xCAEC6C", VA = "0xCAEC6C")]
		public <>c__DisplayClass107_0()
		{
		}

		[Token(Token = "0x600174B")]
		[Address(RVA = "0xCAEC74", Offset = "0xCAEC74", VA = "0xCAEC74")]
		internal bool <ShowZoningHintMessage>b__0(ToolMenu.Entry x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000392")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5880", Offset = "0x6F5880")]
	private sealed class <>c__DisplayClass122_0
	{
		[Token(Token = "0x4001716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CityServiceManager.ServiceType serviceType;

		[Token(Token = "0x4001717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BuildingInfo upgradedServiceBuilding;

		[Token(Token = "0x600174C")]
		[Address(RVA = "0xCAECAC", Offset = "0xCAECAC", VA = "0xCAECAC")]
		public <>c__DisplayClass122_0()
		{
		}

		[Token(Token = "0x600174D")]
		[Address(RVA = "0xCAECB4", Offset = "0xCAECB4", VA = "0xCAECB4")]
		internal bool <ShowUpgradeMessageForServiceBuilding>b__0(BuildingInfo x)
		{
			return default(bool);
		}

		[Token(Token = "0x600174E")]
		[Address(RVA = "0xCAED5C", Offset = "0xCAED5C", VA = "0xCAED5C")]
		internal bool <ShowUpgradeMessageForServiceBuilding>b__1(BuildingInstance x)
		{
			return default(bool);
		}

		[Token(Token = "0x600174F")]
		[Address(RVA = "0xCAEE28", Offset = "0xCAEE28", VA = "0xCAEE28")]
		internal bool <ShowUpgradeMessageForServiceBuilding>b__2(ToolMenu.Entry x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6750", Offset = "0x6F6750")]
	private TutorialState <state>k__BackingField;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject inWorldTutorialTipPrefab;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform regionUnlockHintTransform;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SelectedInfoBox inWorldTutorialTip;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private HandPoseHint handPoseHint;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6760", Offset = "0x6F6760")]
	private Vector3 <inWorldTutorialTipLocation>k__BackingField;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float timeInState;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float stateDelay;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float stateTimer;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float interstepDelay;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool hasGazedAtController;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	private bool shouldSkipTutorial;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int focusBuildingX;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int focusBuildingY;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool hasTriggeredFireEvent;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	private bool hasShownSmartwatchHint;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
	private bool hasGrabMoved;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
	private bool hasGrabNotMoved;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool hasRotatedView;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	private bool hasZoomed;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
	private bool hasRotatedViewInPlace;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6F")]
	private bool hasZoomedInPlace;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool hasShownDisconnectedBuildingsHint;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool hasResolvedDisconnectedBuildings;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
	private bool hasShowSandstormWarningHint;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
	private bool hasResolvedSandstormWarning;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool hasUpgradedBuilding;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	private bool hasBuiltAirport;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x76")]
	private bool hasBuiltSchoolBoostingBuilding;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x77")]
	private bool hasShownUnpoweredCellTowerHint;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool hasResolvedUnpoweredCellTower;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	private bool hasUsedUndo;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
	private bool hasGrabMovedWithHandTracking;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6770", Offset = "0x6F6770")]
	private bool <hasRotatedClockwiseViewWithHandTracking>k__BackingField;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6780", Offset = "0x6F6780")]
	private bool <hasRotatedAntiClockwiseViewWithHandTracking>k__BackingField;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6790", Offset = "0x6F6790")]
	private bool <hasZoomedInWithHandTracking>k__BackingField;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F67A0", Offset = "0x6F67A0")]
	private bool <hasZoomedOutWithHandTracking>k__BackingField;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7F")]
	private bool hasBuiltWithHandTracking;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private BuildingInfo policeDepartmentUpgrade;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private BuildingInfo fireDepartmentUpgrade;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 controllerTutorialHintBoxPosition;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float showNotEnoughFundsAlertTime;

	[Token(Token = "0x40007D2")]
	private const float showNotEnoughFundsDuration = 8f;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool hasSentHandTrackingAnalyticsEvent;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float handTrackingControlsStartTime;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float controlsStateTimer;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float timeSpentLookingAtWatch;

	[Token(Token = "0x1700022D")]
	public Type saveModuleDataType
	{
		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0xB2F228", Offset = "0xB2F228", VA = "0xB2F228", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700022E")]
	public TutorialState state
	{
		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0xB2F298", Offset = "0xB2F298", VA = "0xB2F298")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FDE38", Offset = "0x6FDE38")]
		get
		{
			return default(TutorialState);
		}
		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0xB2F2A0", Offset = "0xB2F2A0", VA = "0xB2F2A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FDE48", Offset = "0x6FDE48")]
		private set
		{
		}
	}

	[Token(Token = "0x1700022F")]
	private Player player
	{
		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0xB2F2A8", Offset = "0xB2F2A8", VA = "0xB2F2A8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000230")]
	public Vector3 inWorldTutorialTipLocation
	{
		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0xB2F2F8", Offset = "0xB2F2F8", VA = "0xB2F2F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FDE58", Offset = "0x6FDE58")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0xB2F304", Offset = "0xB2F304", VA = "0xB2F304")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FDE68", Offset = "0x6FDE68")]
		private set
		{
		}
	}

	[Token(Token = "0x17000231")]
	public bool isInTutorialLevel
	{
		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0xB2F310", Offset = "0xB2F310", VA = "0xB2F310")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000232")]
	public bool shouldAllowPlayerMovement
	{
		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0xB2F560", Offset = "0xB2F560", VA = "0xB2F560")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000233")]
	public bool shouldAllowPlayerToolUsage
	{
		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0xB2F570", Offset = "0xB2F570", VA = "0xB2F570")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000234")]
	public bool restrictToRoadTool
	{
		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0xB2F594", Offset = "0xB2F594", VA = "0xB2F594")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000235")]
	public bool restrictBuildingCategories
	{
		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0xB2F5CC", Offset = "0xB2F5CC", VA = "0xB2F5CC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000236")]
	public bool canSpawnSeaport
	{
		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0xB2F604", Offset = "0xB2F604", VA = "0xB2F604")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000237")]
	public bool shouldHideWatchAndBuildButton
	{
		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0xB2F63C", Offset = "0xB2F63C", VA = "0xB2F63C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000238")]
	private Vector3 seaportHintPosition
	{
		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0xB2F680", Offset = "0xB2F680", VA = "0xB2F680")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000239")]
	public bool hasRotatedClockwiseViewWithHandTracking
	{
		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0xB2F70C", Offset = "0xB2F70C", VA = "0xB2F70C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FDE78", Offset = "0x6FDE78")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0xB2F714", Offset = "0xB2F714", VA = "0xB2F714")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FDE88", Offset = "0x6FDE88")]
		private set
		{
		}
	}

	[Token(Token = "0x1700023A")]
	public bool hasRotatedAntiClockwiseViewWithHandTracking
	{
		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0xB2F720", Offset = "0xB2F720", VA = "0xB2F720")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FDE98", Offset = "0x6FDE98")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0xB2F728", Offset = "0xB2F728", VA = "0xB2F728")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FDEA8", Offset = "0x6FDEA8")]
		private set
		{
		}
	}

	[Token(Token = "0x1700023B")]
	public bool hasZoomedInWithHandTracking
	{
		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0xB2F734", Offset = "0xB2F734", VA = "0xB2F734")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FDEB8", Offset = "0x6FDEB8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0xB2F73C", Offset = "0xB2F73C", VA = "0xB2F73C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FDEC8", Offset = "0x6FDEC8")]
		private set
		{
		}
	}

	[Token(Token = "0x1700023C")]
	public bool hasZoomedOutWithHandTracking
	{
		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0xB2F748", Offset = "0xB2F748", VA = "0xB2F748")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FDED8", Offset = "0x6FDED8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0xB2F750", Offset = "0xB2F750", VA = "0xB2F750")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FDEE8", Offset = "0x6FDEE8")]
		private set
		{
		}
	}

	[Token(Token = "0x1700023D")]
	public bool shouldShowHintInWatchDisplay
	{
		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0xB2F75C", Offset = "0xB2F75C", VA = "0xB2F75C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0xB2F794", Offset = "0xB2F794", VA = "0xB2F794")]
	public void ShowNotEnoughFundsAlert()
	{
	}

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0xB2F7C8", Offset = "0xB2F7C8", VA = "0xB2F7C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0xB2F964", Offset = "0xB2F964", VA = "0xB2F964")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0xB2F984", Offset = "0xB2F984", VA = "0xB2F984")]
	private void EnterState(TutorialState newState)
	{
	}

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0xB2FF8C", Offset = "0xB2FF8C", VA = "0xB2FF8C")]
	public void OnBuiltSchoolBoostingBuilding()
	{
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0xB2FF98", Offset = "0xB2FF98", VA = "0xB2FF98")]
	public void OnBuiltWithHandTracking()
	{
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0xB2FFA4", Offset = "0xB2FFA4", VA = "0xB2FFA4")]
	public void OnGrabMove(float distance)
	{
	}

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0xB300B4", Offset = "0xB300B4", VA = "0xB300B4")]
	public void OnUsedUndo()
	{
	}

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0xB300C0", Offset = "0xB300C0", VA = "0xB300C0")]
	public void OnRotateView()
	{
	}

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0xB30370", Offset = "0xB30370", VA = "0xB30370")]
	public void OnZoomView()
	{
	}

	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0xB30534", Offset = "0xB30534", VA = "0xB30534")]
	public void OnRotateInPlace()
	{
	}

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0xB305B4", Offset = "0xB305B4", VA = "0xB305B4")]
	public void OnZoomInPlace()
	{
	}

	[Token(Token = "0x6000AD9")]
	[Address(RVA = "0xB30634", Offset = "0xB30634", VA = "0xB30634")]
	public void OnUpgradedBuilding()
	{
	}

	[Token(Token = "0x6000ADA")]
	[Address(RVA = "0xB30640", Offset = "0xB30640", VA = "0xB30640")]
	private void HintAtSelectedTool()
	{
	}

	[Token(Token = "0x6000ADB")]
	[Address(RVA = "0xB30804", Offset = "0xB30804", VA = "0xB30804")]
	private void HintAtUndoBubble()
	{
	}

	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0xB309C4", Offset = "0xB309C4", VA = "0xB309C4")]
	private void HintAtMenuType(Predicate<ToolMenu.Entry> predicate)
	{
	}

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0xB30FE8", Offset = "0xB30FE8", VA = "0xB30FE8")]
	private bool FindBuilding(Predicate<BuildingInstance> predicate, bool moveTipLocation = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0xB31280", Offset = "0xB31280", VA = "0xB31280")]
	private bool FindZoneableTile(out int tileX, out int tileY)
	{
		return default(bool);
	}

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0xB3146C", Offset = "0xB3146C", VA = "0xB3146C")]
	private bool HasEnoughRoads()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0xB31690", Offset = "0xB31690", VA = "0xB31690")]
	private void HintAtZoneableArea(ZoneManager.ZoneType zoneType, string message)
	{
	}

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0xB3184C", Offset = "0xB3184C", VA = "0xB3184C")]
	private void ShowZoningHintMessage(ZoneManager.ZoneType zoneType)
	{
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0xB32070", Offset = "0xB32070", VA = "0xB32070")]
	private bool CanAffordServiceBuilding(CityServiceManager.ServiceType serviceType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0xB322D8", Offset = "0xB322D8", VA = "0xB322D8")]
	private bool CanBuildCityHall()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0xB31D24", Offset = "0xB31D24", VA = "0xB31D24")]
	private void ShowSelectedInfoBoxHint(string languageKey, Sprite icon, bool showHintIfLineMissing = true)
	{
	}

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0xB32540", Offset = "0xB32540", VA = "0xB32540")]
	private void ShowControlsHint(ControllerLabels.LabelType labelType)
	{
	}

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0xB32778", Offset = "0xB32778", VA = "0xB32778")]
	private void UpdateState()
	{
	}

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0xB35C3C", Offset = "0xB35C3C", VA = "0xB35C3C")]
	private void ShowReturnToWorldMapHint()
	{
	}

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0xB35DF8", Offset = "0xB35DF8", VA = "0xB35DF8")]
	private bool ShouldPlayCompleteChime(TutorialState checkState)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0xB2F584", Offset = "0xB2F584", VA = "0xB2F584")]
	private bool IsControlsTutorialState(TutorialState checkState)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0xB35E1C", Offset = "0xB35E1C", VA = "0xB35E1C")]
	private bool IsStateCompleted(TutorialState checkState)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0xB36924", Offset = "0xB36924", VA = "0xB36924")]
	private void CheckForFastForward()
	{
	}

	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0xB3699C", Offset = "0xB3699C", VA = "0xB3699C")]
	private void CheckForNeededRewind()
	{
	}

	[Token(Token = "0x6000AED")]
	[Address(RVA = "0xB36C38", Offset = "0xB36C38", VA = "0xB36C38")]
	private void ShowGeneralTutorialHints()
	{
	}

	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0xB36EE0", Offset = "0xB36EE0", VA = "0xB36EE0")]
	private void ShowGeneralHints()
	{
	}

	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0xB37A2C", Offset = "0xB37A2C", VA = "0xB37A2C")]
	private bool ShowUpgradeMessageForServiceBuilding(ref BuildingInfo buildingTypeCached, CityServiceManager.ServiceType serviceType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0xB37E04", Offset = "0xB37E04", VA = "0xB37E04")]
	private void ShowPostTutorialHints()
	{
	}

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0xB36A84", Offset = "0xB36A84", VA = "0xB36A84")]
	private bool DoesNeedControlsTutorial()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0xB38504", Offset = "0xB38504", VA = "0xB38504")]
	private void ProcessTutorialState()
	{
	}

	[Token(Token = "0x6000AF3")]
	[Address(RVA = "0xB38720", Offset = "0xB38720", VA = "0xB38720")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AF4")]
	[Address(RVA = "0xB38A00", Offset = "0xB38A00", VA = "0xB38A00", Slot = "7")]
	public SaveSystem.ModuleData OnSave()
	{
		return null;
	}

	[Token(Token = "0x6000AF5")]
	[Address(RVA = "0xB38B30", Offset = "0xB38B30", VA = "0xB38B30", Slot = "8")]
	public void OnLoad(SaveSystem.SaveGame saveGame, SaveSystem.ModuleData moduleData)
	{
	}

	[Token(Token = "0x6000AF6")]
	[Address(RVA = "0xB38CE4", Offset = "0xB38CE4", VA = "0xB38CE4")]
	public void PostLoad()
	{
	}

	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0xB38CEC", Offset = "0xB38CEC", VA = "0xB38CEC", Slot = "9")]
	public void OnDebugPanel()
	{
	}

	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0xB39080", Offset = "0xB39080", VA = "0xB39080")]
	public void SkipTutorial()
	{
	}

	[Token(Token = "0x6000AF9")]
	[Address(RVA = "0xB2FAE8", Offset = "0xB2FAE8", VA = "0xB2FAE8")]
	private void GenerateControllerTutorialHintBoxPosition()
	{
	}

	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0xB39118", Offset = "0xB39118", VA = "0xB39118")]
	public TutorialManager()
	{
	}
}
[Token(Token = "0x200010B")]
public class ActiveToolDisplay : MonoBehaviour
{
	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform displayRoot;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform entryDisplayRoot;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject elementPrefab;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GazeSphere innerGazeTrigger;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GazeSphere outerGazeTrigger;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public WheelMenuDescriptionPanel wheelMenuDescriptionPanel;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Bubble bubble;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Button bubbleButton;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private WheelMenuEntry selectedEntry;

	[Token(Token = "0x1700023E")]
	private Player player
	{
		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0xB504AC", Offset = "0xB504AC", VA = "0xB504AC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000AFC")]
	[Address(RVA = "0xB504FC", Offset = "0xB504FC", VA = "0xB504FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0xB50590", Offset = "0xB50590", VA = "0xB50590")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AFE")]
	[Address(RVA = "0xB5071C", Offset = "0xB5071C", VA = "0xB5071C")]
	public void ClearSelection()
	{
	}

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0xB507E0", Offset = "0xB507E0", VA = "0xB507E0")]
	public void OnPressBubble()
	{
	}

	[Token(Token = "0x6000B00")]
	[Address(RVA = "0xB50BAC", Offset = "0xB50BAC", VA = "0xB50BAC")]
	public void Select(WheelMenuEntry existingEntry)
	{
	}

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0xB50FE8", Offset = "0xB50FE8", VA = "0xB50FE8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0xB51930", Offset = "0xB51930", VA = "0xB51930")]
	public ActiveToolDisplay()
	{
	}
}
[Token(Token = "0x200010C")]
[ExecuteInEditMode]
public class AutoResizeTextBox : MonoBehaviour
{
	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text textComponent;

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0xB55200", Offset = "0xB55200", VA = "0xB55200")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0xB55324", Offset = "0xB55324", VA = "0xB55324")]
	public AutoResizeTextBox()
	{
	}
}
[Token(Token = "0x200010D")]
public class Bubble : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerDownHandler
{
	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem burstEffect;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer crystalMeshRenderer;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer bubbleMeshRenderer;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 startingScale;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float wobbleAmplitude;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float dampedWobbleAmplitude;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float phase;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F67B0", Offset = "0x6F67B0")]
	private SphereCollider <sphereCollider>k__BackingField;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float startingColliderRadius;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 crystalVelocity;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float hintPulseAmplitude;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float hintPulseFrequency;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F67C0", Offset = "0x6F67C0")]
	private bool <isHintingAt>k__BackingField;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private MaterialPropertyBlock materialProperties;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Color bubbleColour;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int colorId;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<Bubble> allBubbles;

	[Token(Token = "0x1700023F")]
	public SphereCollider sphereCollider
	{
		[Token(Token = "0x6000B05")]
		[Address(RVA = "0xB5DA18", Offset = "0xB5DA18", VA = "0xB5DA18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FDEF8", Offset = "0x6FDEF8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B06")]
		[Address(RVA = "0xB5DA20", Offset = "0xB5DA20", VA = "0xB5DA20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FDF08", Offset = "0x6FDF08")]
		private set
		{
		}
	}

	[Token(Token = "0x17000240")]
	public float desiredRadius
	{
		[Token(Token = "0x6000B07")]
		[Address(RVA = "0xB5DA28", Offset = "0xB5DA28", VA = "0xB5DA28")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000241")]
	public bool isHintingAt
	{
		[Token(Token = "0x6000B08")]
		[Address(RVA = "0xB5DA30", Offset = "0xB5DA30", VA = "0xB5DA30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FDF18", Offset = "0x6FDF18")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B09")]
		[Address(RVA = "0xB5DA38", Offset = "0xB5DA38", VA = "0xB5DA38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FDF28", Offset = "0x6FDF28")]
		set
		{
		}
	}

	[Token(Token = "0x17000242")]
	public bool crystalised
	{
		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0xB5DA44", Offset = "0xB5DA44", VA = "0xB5DA44")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0xB505AC", Offset = "0xB505AC", VA = "0xB505AC")]
		set
		{
		}
	}

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0xB5DADC", Offset = "0xB5DADC", VA = "0xB5DADC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0xB50E84", Offset = "0xB50E84", VA = "0xB50E84")]
	public void SetColour(Color colour)
	{
	}

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0xB5DC90", Offset = "0xB5DC90", VA = "0xB5DC90")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0xB5DC80", Offset = "0xB5DC80", VA = "0xB5DC80")]
	public void Poke()
	{
	}

	[Token(Token = "0x6000B10")]
	[Address(RVA = "0xB508C8", Offset = "0xB508C8", VA = "0xB508C8")]
	public void PlayBurstEffect()
	{
	}

	[Token(Token = "0x6000B11")]
	[Address(RVA = "0xB5E1B8", Offset = "0xB5E1B8", VA = "0xB5E1B8", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000B12")]
	[Address(RVA = "0xB5E234", Offset = "0xB5E234", VA = "0xB5E234", Slot = "6")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000B13")]
	[Address(RVA = "0xB5E44C", Offset = "0xB5E44C", VA = "0xB5E44C", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000B14")]
	[Address(RVA = "0xB5E4E4", Offset = "0xB5E4E4", VA = "0xB5E4E4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B15")]
	[Address(RVA = "0xB5E568", Offset = "0xB5E568", VA = "0xB5E568")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0xB5E5EC", Offset = "0xB5E5EC", VA = "0xB5E5EC")]
	public static float GetClosestDistanceToAnyBubble(Ray ray)
	{
		return default(float);
	}

	[Token(Token = "0x6000B17")]
	[Address(RVA = "0xB5E940", Offset = "0xB5E940", VA = "0xB5E940")]
	public Bubble()
	{
	}
}
[Token(Token = "0x200010E")]
public class BudgetExpenseIcon : MonoBehaviour
{
	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BudgetManager.ExpenseCategory category;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text value;

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0xB5EA38", Offset = "0xB5EA38", VA = "0xB5EA38")]
	public void UpdateValue(BudgetManager.BudgetReport report)
	{
	}

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0xB5EB08", Offset = "0xB5EB08", VA = "0xB5EB08")]
	public BudgetExpenseIcon()
	{
	}
}
[Token(Token = "0x200010F")]
public class BudgetMenu : MonoBehaviour
{
	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text totalExpensesValue;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text totalTaxesValue;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text weeklyIncomeValue;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text residentialIncome;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text commercialIncome;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text industrialIncome;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private BudgetExpenseIcon[] expenseIcons;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private TaxRateControl[] taxRateControls;

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0xB5FAA8", Offset = "0xB5FAA8", VA = "0xB5FAA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0xB5FB18", Offset = "0xB5FB18", VA = "0xB5FB18")]
	private void OnShowTab()
	{
	}

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0xB5FB1C", Offset = "0xB5FB1C", VA = "0xB5FB1C")]
	private void Refresh()
	{
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0xB5FE68", Offset = "0xB5FE68", VA = "0xB5FE68")]
	public BudgetMenu()
	{
	}
}
[Token(Token = "0x2000110")]
public class BadgeGroup
{
	[Token(Token = "0x40007FC")]
	private const float badgeSpacing = 0.85f;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F67D0", Offset = "0x6F67D0")]
	private int <numActiveBadges>k__BackingField;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int[] badgeHandles;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isDirty;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private BuildingBadgeManager manager;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool useVerticalBadgeLayout;

	[Token(Token = "0x17000243")]
	public int numActiveBadges
	{
		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0xB559C8", Offset = "0xB559C8", VA = "0xB559C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FDF38", Offset = "0x6FDF38")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000B20")]
		[Address(RVA = "0xB559D0", Offset = "0xB559D0", VA = "0xB559D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FDF48", Offset = "0x6FDF48")]
		private set
		{
		}
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0xB559D8", Offset = "0xB559D8", VA = "0xB559D8")]
	public BadgeGroup(BuildingBadgeManager manager)
	{
	}

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0xB55A94", Offset = "0xB55A94", VA = "0xB55A94")]
	public void FreeBadges()
	{
	}

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0xB55BC4", Offset = "0xB55BC4", VA = "0xB55BC4")]
	public bool IsBadgeEnabled(BuildingBadgeManager.BadgeType type)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0xB55C08", Offset = "0xB55C08", VA = "0xB55C08")]
	public void SetBadgeEnabled(BuildingBadgeManager.BadgeType type, bool enabled)
	{
	}

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0xB55FC8", Offset = "0xB55FC8", VA = "0xB55FC8")]
	public void Refresh(BuildingInstance building)
	{
	}
}
[Token(Token = "0x2000111")]
public class BuildingBadgeManager : CityModule
{
	[Token(Token = "0x2000393")]
	public enum BadgeType
	{
		[Token(Token = "0x4001719")]
		NoElectricity,
		[Token(Token = "0x400171A")]
		NoWater,
		[Token(Token = "0x400171B")]
		NoNetwork,
		[Token(Token = "0x400171C")]
		SandStorm,
		[Token(Token = "0x400171D")]
		UpgradeAvailable
	}

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float badgeSize;

	[Token(Token = "0x4000803")]
	public const int numBadgeTypes = 5;

	[Token(Token = "0x4000804")]
	public const int numBadgeParticles = 8;

	[Token(Token = "0x4000805")]
	private const int maxParticles = 1000;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int numActiveParticles;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem system;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private NativeArray<ParticleSystem.Particle> particles;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F67E0", Offset = "0x6F67E0")]
	private bool <isVisible>k__BackingField;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isDirty;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	private bool waitingForBuildingEffectAnimation;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve curve;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float animationSpeed;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float animationTime;

	[Token(Token = "0x400080F")]
	private const float animationInDuration = 0.25f;

	[Token(Token = "0x17000244")]
	private Player player
	{
		[Token(Token = "0x6000B26")]
		[Address(RVA = "0xB60E88", Offset = "0xB60E88", VA = "0xB60E88")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000245")]
	public bool isVisible
	{
		[Token(Token = "0x6000B27")]
		[Address(RVA = "0xB60ED8", Offset = "0xB60ED8", VA = "0xB60ED8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FDF58", Offset = "0x6FDF58")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B28")]
		[Address(RVA = "0xB60EE0", Offset = "0xB60EE0", VA = "0xB60EE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FDF68", Offset = "0x6FDF68")]
		private set
		{
		}
	}

	[Token(Token = "0x17000246")]
	public bool canAddNewBadges
	{
		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0xB55D2C", Offset = "0xB55D2C", VA = "0xB55D2C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0xB60EEC", Offset = "0xB60EEC", VA = "0xB60EEC")]
	public void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x6000B2A")]
	[Address(RVA = "0xB56280", Offset = "0xB56280", VA = "0xB56280")]
	public void UpdatePosition(int handle, Vector3 position)
	{
	}

	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0xB55E50", Offset = "0xB55E50", VA = "0xB55E50")]
	public int AllocateBadge(BadgeType type)
	{
		return default(int);
	}

	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0xB55B24", Offset = "0xB55B24", VA = "0xB55B24")]
	public void FreeBadge(int handle)
	{
	}

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0xB60FF8", Offset = "0xB60FF8", VA = "0xB60FF8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0xB6108C", Offset = "0xB6108C", VA = "0xB6108C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0xB610DC", Offset = "0xB610DC", VA = "0xB610DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0xB61398", Offset = "0xB61398", VA = "0xB61398", Slot = "10")]
	public override void OnResetProgress()
	{
	}

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0xB613D4", Offset = "0xB613D4", VA = "0xB613D4")]
	public BuildingBadgeManager()
	{
	}
}
[Token(Token = "0x2000112")]
public class BuildingHighlighter : SingletonBehaviour<BuildingHighlighter>
{
	[Token(Token = "0x2000394")]
	private struct Highlight
	{
		[Token(Token = "0x400171E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BuildingInstance building;

		[Token(Token = "0x400171F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject highlightObject;
	}

	[Token(Token = "0x2000395")]
	public delegate bool HighlightMatcher(BuildingInstance building);

	[Token(Token = "0x2000396")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5890", Offset = "0x6F5890")]
	private sealed class <>c__DisplayClass11_0
	{
		[Token(Token = "0x4001720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BuildingInstance building;

		[Token(Token = "0x6001754")]
		[Address(RVA = "0xB93B24", Offset = "0xB93B24", VA = "0xB93B24")]
		public <>c__DisplayClass11_0()
		{
		}

		[Token(Token = "0x6001755")]
		[Address(RVA = "0xB94144", Offset = "0xB94144", VA = "0xB94144")]
		internal bool <RemoveHighlight>b__0(Highlight x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject highlightPrefab;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float highlightHeight;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<GameObject> highlightPool;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<Highlight> highlights;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private HighlightMatcher internalHighlightPredicate;

	[Token(Token = "0x17000247")]
	public HighlightMatcher highlightPredicate
	{
		[Token(Token = "0x6000B33")]
		[Address(RVA = "0xB935A8", Offset = "0xB935A8", VA = "0xB935A8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B34")]
		[Address(RVA = "0xB935B0", Offset = "0xB935B0", VA = "0xB935B0")]
		set
		{
		}
	}

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0xB93718", Offset = "0xB93718", VA = "0xB93718")]
	private void AddHighlight(BuildingInstance building)
	{
	}

	[Token(Token = "0x6000B36")]
	[Address(RVA = "0xB939A4", Offset = "0xB939A4", VA = "0xB939A4")]
	private void RemoveHighlight(BuildingInstance building)
	{
	}

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0xB93B2C", Offset = "0xB93B2C", VA = "0xB93B2C")]
	private void ClearHighlights()
	{
	}

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0xB935B8", Offset = "0xB935B8", VA = "0xB935B8")]
	public void Refresh()
	{
	}

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0xB9409C", Offset = "0xB9409C", VA = "0xB9409C")]
	public BuildingHighlighter()
	{
	}
}
[Token(Token = "0x2000113")]
public class CanvasHeightAdjuster : MonoBehaviour
{
	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Player player;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float adjustDelta;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float startingHeight;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float sittingAdjustDelta;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float sittingThreshold;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float standingThreshold;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool isSitting;

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0xBA14D8", Offset = "0xBA14D8", VA = "0xBA14D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0xBA15C4", Offset = "0xBA15C4", VA = "0xBA15C4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0xBA1800", Offset = "0xBA1800", VA = "0xBA1800")]
	public CanvasHeightAdjuster()
	{
	}
}
[Token(Token = "0x2000114")]
public class CashRewardMessages : ScriptableObjectSingleton<CashRewardMessages>
{
	[Serializable]
	[Token(Token = "0x2000397")]
	public class Message
	{
		[Token(Token = "0x4001721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string messageKey;

		[Token(Token = "0x4001722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CityInfo.Theme requiredTheme;

		[Token(Token = "0x4001723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BuildingInfo requiredBuilding;

		[Token(Token = "0x6001756")]
		[Address(RVA = "0xC03D54", Offset = "0xC03D54", VA = "0xC03D54")]
		public Message()
		{
		}
	}

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Message> messages;

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0xC03BB0", Offset = "0xC03BB0", VA = "0xC03BB0")]
	public Message PickMessage(City city)
	{
		return null;
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0xC03CE4", Offset = "0xC03CE4", VA = "0xC03CE4")]
	public CashRewardMessages()
	{
	}
}
[Token(Token = "0x2000115")]
public class CheatsMenu : MonoBehaviour
{
	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DebugFPSCount fpsCounter;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject messagesPanel;

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0xC062AC", Offset = "0xC062AC", VA = "0xC062AC")]
	public void GiveCash()
	{
	}

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0xC06338", Offset = "0xC06338", VA = "0xC06338")]
	public void LessCash()
	{
	}

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0xC063BC", Offset = "0xC063BC", VA = "0xC063BC")]
	public void ZeroCash()
	{
	}

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0xC06438", Offset = "0xC06438", VA = "0xC06438")]
	public void LevelUp()
	{
	}

	[Token(Token = "0x6000B43")]
	[Address(RVA = "0xC064B4", Offset = "0xC064B4", VA = "0xC064B4")]
	public void UnlockAll()
	{
	}

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0xC06530", Offset = "0xC06530", VA = "0xC06530")]
	public void UnlockAllRegions()
	{
	}

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0xC065AC", Offset = "0xC065AC", VA = "0xC065AC")]
	public void TriggerFire()
	{
	}

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0xC06640", Offset = "0xC06640", VA = "0xC06640")]
	public void TriggerPolice()
	{
	}

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0xC066D8", Offset = "0xC066D8", VA = "0xC066D8")]
	public void TriggerAmbulance()
	{
	}

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0xC0676C", Offset = "0xC0676C", VA = "0xC0676C")]
	public void StreetView()
	{
	}

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0xC06818", Offset = "0xC06818", VA = "0xC06818")]
	public void PauseGame()
	{
	}

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0xC068F0", Offset = "0xC068F0", VA = "0xC068F0")]
	public void TimeX1()
	{
	}

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0xC069CC", Offset = "0xC069CC", VA = "0xC069CC")]
	public void TimeX2()
	{
	}

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0xC06AA8", Offset = "0xC06AA8", VA = "0xC06AA8")]
	public void TimeX3()
	{
	}

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0xC06B84", Offset = "0xC06B84", VA = "0xC06B84")]
	public void TimeX20()
	{
	}

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0xC06C60", Offset = "0xC06C60", VA = "0xC06C60")]
	public void ToggleFPSCounter()
	{
	}

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0xC06CC8", Offset = "0xC06CC8", VA = "0xC06CC8")]
	public void StressTest()
	{
	}

	[Token(Token = "0x6000B50")]
	[Address(RVA = "0xC06E38", Offset = "0xC06E38", VA = "0xC06E38")]
	public void FinishIsland()
	{
	}

	[Token(Token = "0x6000B51")]
	[Address(RVA = "0xC06F74", Offset = "0xC06F74", VA = "0xC06F74")]
	public void SkipTutorial()
	{
	}

	[Token(Token = "0x6000B52")]
	[Address(RVA = "0xC06FFC", Offset = "0xC06FFC", VA = "0xC06FFC")]
	public void EruptVolcano()
	{
	}

	[Token(Token = "0x6000B53")]
	[Address(RVA = "0xC07190", Offset = "0xC07190", VA = "0xC07190")]
	public void ToggleMessagesPanel()
	{
	}

	[Token(Token = "0x6000B54")]
	[Address(RVA = "0xC071D0", Offset = "0xC071D0", VA = "0xC071D0")]
	public void ShowCashRewardMessage(string message)
	{
	}

	[Token(Token = "0x6000B55")]
	[Address(RVA = "0xC072B4", Offset = "0xC072B4", VA = "0xC072B4")]
	public CheatsMenu()
	{
	}
}
[Token(Token = "0x2000116")]
public class CityLevelGraph : MonoBehaviour
{
	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cityLevelBar;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform cityLevelTop;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] cityLevelIcons;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float minCityLevelBarScale;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float maxCityLevelBarScale;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int cityLevelsPerIcon;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform cityDioramaRoot;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text cityLevelText;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Image cityLevelProgress;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text cityLevelName;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float growDuration;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float growProgress;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float timeVisible;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float growShakeAmount;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ParticleSystem fireworks;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioClip levelUpLoopSound;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AudioClip levelUpFinishSound;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private City city;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private AudioSource audioSource;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int unlockedLevel;

	[Token(Token = "0x6000B56")]
	[Address(RVA = "0xC0E464", Offset = "0xC0E464", VA = "0xC0E464")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B57")]
	[Address(RVA = "0xC0E4BC", Offset = "0xC0E4BC", VA = "0xC0E4BC")]
	public void Animate(int inUnlockedLevel)
	{
	}

	[Token(Token = "0x6000B58")]
	[Address(RVA = "0xC0E7B8", Offset = "0xC0E7B8", VA = "0xC0E7B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B59")]
	[Address(RVA = "0xC0E59C", Offset = "0xC0E59C", VA = "0xC0E59C")]
	private void UpdateCityLevelBar(int level, float growAmount)
	{
	}

	[Token(Token = "0x6000B5A")]
	[Address(RVA = "0xC0EA84", Offset = "0xC0EA84", VA = "0xC0EA84")]
	public CityLevelGraph()
	{
	}
}
[Token(Token = "0x2000117")]
public class CreditsPanel : MonoBehaviour
{
	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ScrollRect scrollRect;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float scrollSpeed;

	[Token(Token = "0x6000B5B")]
	[Address(RVA = "0xACF07C", Offset = "0xACF07C", VA = "0xACF07C")]
	public void CloseButtonPressed()
	{
	}

	[Token(Token = "0x6000B5C")]
	[Address(RVA = "0xACF0C0", Offset = "0xACF0C0", VA = "0xACF0C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0xACF3B4", Offset = "0xACF3B4", VA = "0xACF3B4")]
	public CreditsPanel()
	{
	}
}
[Token(Token = "0x2000118")]
public class DebugFPSCount : MonoBehaviour
{
	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text text;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float timeAccum;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int frameAccum;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float averageFrameRate;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float min;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float max;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float averageMin;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float averageMax;

	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0xAD0054", Offset = "0xAD0054", VA = "0xAD0054")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0xAD00AC", Offset = "0xAD00AC", VA = "0xAD00AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B60")]
	[Address(RVA = "0xAD0230", Offset = "0xAD0230", VA = "0xAD0230")]
	public DebugFPSCount()
	{
	}
}
[Token(Token = "0x2000119")]
public class DebugMenu : MonoBehaviour, IDebugPanelProvider
{
	[Token(Token = "0x2000398")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F58A0", Offset = "0x6F58A0")]
	private sealed class <>c__DisplayClass6_0
	{
		[Token(Token = "0x4001724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BuildingInfo info;

		[Token(Token = "0x4001725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DebugMenu <>4__this;

		[Token(Token = "0x6001757")]
		[Address(RVA = "0xAD0698", Offset = "0xAD0698", VA = "0xAD0698")]
		public <>c__DisplayClass6_0()
		{
		}

		[Token(Token = "0x6001758")]
		[Address(RVA = "0xAD0DD8", Offset = "0xAD0DD8", VA = "0xAD0DD8")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform buildAnyMenuRoot;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject buildAnyButtonPrefab;

	[Token(Token = "0x17000248")]
	private City city
	{
		[Token(Token = "0x6000B61")]
		[Address(RVA = "0xAD0238", Offset = "0xAD0238", VA = "0xAD0238")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000249")]
	private Player player
	{
		[Token(Token = "0x6000B62")]
		[Address(RVA = "0xAD02A0", Offset = "0xAD02A0", VA = "0xAD02A0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B63")]
	[Address(RVA = "0xAD02F0", Offset = "0xAD02F0", VA = "0xAD02F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B64")]
	[Address(RVA = "0xAD06A0", Offset = "0xAD06A0", VA = "0xAD06A0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B65")]
	[Address(RVA = "0xAD06D0", Offset = "0xAD06D0", VA = "0xAD06D0")]
	public void StressTest()
	{
	}

	[Token(Token = "0x6000B66")]
	[Address(RVA = "0xAD076C", Offset = "0xAD076C", VA = "0xAD076C")]
	public void UnlockAllCheat()
	{
	}

	[Token(Token = "0x6000B67")]
	[Address(RVA = "0xAD07E8", Offset = "0xAD07E8", VA = "0xAD07E8")]
	public void ZoneDemandCheat()
	{
	}

	[Token(Token = "0x6000B68")]
	[Address(RVA = "0xAD0830", Offset = "0xAD0830", VA = "0xAD0830")]
	public void FundsCheat()
	{
	}

	[Token(Token = "0x6000B69")]
	[Address(RVA = "0xAD0860", Offset = "0xAD0860", VA = "0xAD0860")]
	private int BuildRoad(int roadY)
	{
		return default(int);
	}

	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0xAD0A34", Offset = "0xAD0A34", VA = "0xAD0A34")]
	public void BuildAny()
	{
	}

	[Token(Token = "0x6000B6B")]
	[Address(RVA = "0xAD0A64", Offset = "0xAD0A64", VA = "0xAD0A64")]
	public void BuildAll()
	{
	}

	[Token(Token = "0x6000B6C")]
	[Address(RVA = "0xAD0CE4", Offset = "0xAD0CE4", VA = "0xAD0CE4", Slot = "4")]
	public void OnDebugPanel()
	{
	}

	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0xAD0DD0", Offset = "0xAD0DD0", VA = "0xAD0DD0")]
	public DebugMenu()
	{
	}
}
[Token(Token = "0x200011A")]
public class DepressableButton : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
{
	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxDepression;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float depression;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 startingLocalPosition;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private VRControllerInputModule vrInputModule;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isPressing;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Button button;

	[Token(Token = "0x1700024A")]
	private Player player
	{
		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0xAD4170", Offset = "0xAD4170", VA = "0xAD4170")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B6F")]
	[Address(RVA = "0xAD41C0", Offset = "0xAD41C0", VA = "0xAD41C0", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000B70")]
	[Address(RVA = "0xAD4370", Offset = "0xAD4370", VA = "0xAD4370", Slot = "5")]
	public void OnPointerUp(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000B71")]
	[Address(RVA = "0xAD4378", Offset = "0xAD4378", VA = "0xAD4378")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B72")]
	[Address(RVA = "0xAD4428", Offset = "0xAD4428", VA = "0xAD4428")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B73")]
	[Address(RVA = "0xAD462C", Offset = "0xAD462C", VA = "0xAD462C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B74")]
	[Address(RVA = "0xAD46AC", Offset = "0xAD46AC", VA = "0xAD46AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B75")]
	[Address(RVA = "0xAD4638", Offset = "0xAD4638", VA = "0xAD4638")]
	private void SetDepth(float amount)
	{
	}

	[Token(Token = "0x6000B76")]
	[Address(RVA = "0xAD4808", Offset = "0xAD4808", VA = "0xAD4808")]
	public DepressableButton()
	{
	}
}
[Token(Token = "0x200011B")]
public class DepressableRotatingButton : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
{
	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isPressing;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Button button;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Image image;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float pressedAngle;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Quaternion startingRotation;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private VRControllerInputModule vrInputModule;

	[Token(Token = "0x6000B77")]
	[Address(RVA = "0xAD481C", Offset = "0xAD481C", VA = "0xAD481C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B78")]
	[Address(RVA = "0xAD48CC", Offset = "0xAD48CC", VA = "0xAD48CC")]
	public void Update()
	{
	}

	[Token(Token = "0x6000B79")]
	[Address(RVA = "0xAD4CA4", Offset = "0xAD4CA4", VA = "0xAD4CA4", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000B7A")]
	[Address(RVA = "0xAD4CD8", Offset = "0xAD4CD8", VA = "0xAD4CD8", Slot = "5")]
	public void OnPointerUp(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000B7B")]
	[Address(RVA = "0xAD4CE0", Offset = "0xAD4CE0", VA = "0xAD4CE0")]
	public DepressableRotatingButton()
	{
	}
}
[Token(Token = "0x200011C")]
public class DialogMessage : MonoBehaviour
{
	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject singleButtonLayout;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject dualButtonLayout;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text displayText;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text singleButtonText;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text leftButtonText;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text rightButtonText;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject[] menusToHide;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool[] menusDisplayStatus;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isDualButtonLayout;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Action<bool> resultHandler;

	[Token(Token = "0x1700024B")]
	public bool isOpen
	{
		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0xAD4D6C", Offset = "0xAD4D6C", VA = "0xAD4D6C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0xAD4D90", Offset = "0xAD4D90", VA = "0xAD4D90")]
	public void ShowDialog(string message, string buttonText, [Optional] Action<bool> onClose)
	{
	}

	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0xAD4FE8", Offset = "0xAD4FE8", VA = "0xAD4FE8")]
	public void ShowDialog(string message, string leftButton, string rightButton, Action<bool> onClose)
	{
	}

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0xAD4E44", Offset = "0xAD4E44", VA = "0xAD4E44")]
	private void HideOtherMenus()
	{
	}

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0xAD50BC", Offset = "0xAD50BC", VA = "0xAD50BC")]
	public void Close()
	{
	}

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0xAD51E4", Offset = "0xAD51E4", VA = "0xAD51E4")]
	public void SingleButtonPressed()
	{
	}

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0xAD5250", Offset = "0xAD5250", VA = "0xAD5250")]
	public void LeftButtonPressed()
	{
	}

	[Token(Token = "0x6000B83")]
	[Address(RVA = "0xAD52BC", Offset = "0xAD52BC", VA = "0xAD52BC")]
	public void RightButtonPressed()
	{
	}

	[Token(Token = "0x6000B84")]
	[Address(RVA = "0xAD5328", Offset = "0xAD5328", VA = "0xAD5328")]
	public DialogMessage()
	{
	}
}
[Token(Token = "0x200011D")]
public class ForceFrontFacingCanvas : MonoBehaviour
{
	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CanvasGroup group;

	[Token(Token = "0x4000856")]
	private const float fadeStart = -0.3f;

	[Token(Token = "0x4000857")]
	private const float fadeEnd = -0.15f;

	[Token(Token = "0x1700024C")]
	private Player player
	{
		[Token(Token = "0x6000B85")]
		[Address(RVA = "0xADDA48", Offset = "0xADDA48", VA = "0xADDA48")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B86")]
	[Address(RVA = "0xADDA98", Offset = "0xADDA98", VA = "0xADDA98")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B87")]
	[Address(RVA = "0xADDAF0", Offset = "0xADDAF0", VA = "0xADDAF0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B88")]
	[Address(RVA = "0xADDDB0", Offset = "0xADDDB0", VA = "0xADDDB0")]
	public ForceFrontFacingCanvas()
	{
	}
}
[Token(Token = "0x200011E")]
public class GameCursors : ScriptableObjectSingleton<GameCursors>
{
	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject genericCursor;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject streetViewCursorPrefab;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color toolCursorColour;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color toolInvalidCursorColour;

	[Token(Token = "0x6000B89")]
	[Address(RVA = "0xADF010", Offset = "0xADF010", VA = "0xADF010")]
	public GameCursors()
	{
	}
}
[Token(Token = "0x200011F")]
public class GameIcons : ScriptableObjectSingleton<GameIcons>
{
	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Sprite buildCost;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite buildCostExceedsFunds;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite weeklyCostExceedsIncome;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Sprite refund;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Sprite cannotBuildHere;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Sprite bulldozer;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Sprite increasePower;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Sprite decreasePower;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Sprite noPower;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Sprite increaseWater;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Sprite decreaseWater;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Sprite noWater;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Sprite increaseNetwork;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Sprite decreaseNetwork;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Sprite noNetwork;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Sprite increaseSandstorm;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Sprite decreaseSandstorm;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Sprite sandstormWarning;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Sprite increasePolice;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Sprite decreasePolice;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Sprite noPolice;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Sprite increaseFire;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Sprite decreaseFire;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Sprite noFire;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Sprite increaseEducation;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Sprite decreaseEducation;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Sprite noEducation;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Sprite increaseHealthcare;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Sprite decreaseHealthcare;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Sprite noHealthcare;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Sprite increaseHappiness;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Sprite decreaseHappiness;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Sprite positiveResidential;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Sprite negativeResidential;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Sprite positiveCommercial;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Sprite negativeCommercial;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Sprite positiveIndustrial;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public Sprite negativeIndustrial;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Sprite increaseSmelly;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Sprite airport;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Sprite helicopter;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Sprite unlocksNewLevel;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public Sprite upgrade;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public Sprite efficiency;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public Sprite coastLineBuildRestriction;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public Sprite thermalVentBuildRestriction;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public Sprite groundWaterBuildRestriction;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public Sprite coastLineBuildRestrictionWarning;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public Sprite thermalVentBuildRestrictionWarning;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public Sprite groundWaterBuildRestrictionWarning;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Sprite bank;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public Sprite info;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public Sprite tick;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public Sprite controlsMove;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public Sprite controlsRotate;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public Sprite controlsZoom;

	[Token(Token = "0x6000B8A")]
	[Address(RVA = "0xADF0F0", Offset = "0xADF0F0", VA = "0xADF0F0")]
	public GameIcons()
	{
	}
}
[Token(Token = "0x2000120")]
public class GazeSphere : MonoBehaviour
{
	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float radius;

	[Token(Token = "0x1700024D")]
	public float worldSpaceRadius
	{
		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0xB0A118", Offset = "0xB0A118", VA = "0xB0A118")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700024E")]
	public float worldSpaceRadiusSqr
	{
		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0xB0A1A0", Offset = "0xB0A1A0", VA = "0xB0A1A0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700024F")]
	private Player player
	{
		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0xB0A228", Offset = "0xB0A228", VA = "0xB0A228")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B8E")]
	[Address(RVA = "0xB0A278", Offset = "0xB0A278", VA = "0xB0A278")]
	public bool IsGazingAt()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B8F")]
	[Address(RVA = "0xB0A704", Offset = "0xB0A704", VA = "0xB0A704")]
	public GazeSphere()
	{
	}
}
[Token(Token = "0x2000121")]
public class HandTrackingDialog : MonoBehaviour
{
	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform panel;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button okButton;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text title;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<SelectedInfoBoxLine> lines;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float padding;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F67F0", Offset = "0x6F67F0")]
	private bool <hasShown>k__BackingField;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject previousMenu;

	[Token(Token = "0x17000250")]
	public bool hasShown
	{
		[Token(Token = "0x6000B90")]
		[Address(RVA = "0xB12580", Offset = "0xB12580", VA = "0xB12580")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FDF78", Offset = "0x6FDF78")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B91")]
		[Address(RVA = "0xB12588", Offset = "0xB12588", VA = "0xB12588")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FDF88", Offset = "0x6FDF88")]
		private set
		{
		}
	}

	[Token(Token = "0x17000251")]
	public bool isOpen
	{
		[Token(Token = "0x6000B92")]
		[Address(RVA = "0xB12594", Offset = "0xB12594", VA = "0xB12594")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000252")]
	private Player player
	{
		[Token(Token = "0x6000B93")]
		[Address(RVA = "0xB125B8", Offset = "0xB125B8", VA = "0xB125B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B94")]
	[Address(RVA = "0xB12608", Offset = "0xB12608", VA = "0xB12608")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B95")]
	[Address(RVA = "0xB1260C", Offset = "0xB1260C", VA = "0xB1260C")]
	private void ArrangeLayout()
	{
	}

	[Token(Token = "0x6000B96")]
	[Address(RVA = "0xB12A30", Offset = "0xB12A30", VA = "0xB12A30")]
	public void Show()
	{
	}

	[Token(Token = "0x6000B97")]
	[Address(RVA = "0xB12EB0", Offset = "0xB12EB0", VA = "0xB12EB0")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000B98")]
	[Address(RVA = "0xB12F78", Offset = "0xB12F78", VA = "0xB12F78")]
	public void OnPressOK()
	{
	}

	[Token(Token = "0x6000B99")]
	[Address(RVA = "0xB12FD0", Offset = "0xB12FD0", VA = "0xB12FD0")]
	public void Update()
	{
	}

	[Token(Token = "0x6000B9A")]
	[Address(RVA = "0xB13054", Offset = "0xB13054", VA = "0xB13054")]
	public HandTrackingDialog()
	{
	}
}
[Token(Token = "0x2000122")]
public class HandsTutorialHints : MonoBehaviour
{
	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject moveHint;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject rotateHint;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject scaleHint;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject scaleInArrow;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject scaleOutArrow;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject hintLinePrefab;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float lineWidth;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float arrowHeadScale;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float arrowHeadLineOffset;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private OVRHand hand;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OVRSkeleton skeleton;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private OVRHand otherHand;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private LineRenderer hintLine;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private SpriteRenderer hintLineArrowHead;

	[Token(Token = "0x40008AA")]
	private const int numCirclePoints = 32;

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3[] circlePoints;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 lastFrameLeftPosition;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 lastFrameRightPosition;

	[Token(Token = "0x17000253")]
	private Player player
	{
		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0xB1371C", Offset = "0xB1371C", VA = "0xB1371C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B9C")]
	[Address(RVA = "0xB1376C", Offset = "0xB1376C", VA = "0xB1376C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B9D")]
	[Address(RVA = "0xB13998", Offset = "0xB13998", VA = "0xB13998")]
	public void Init(OVRHand hand, OVRSkeleton skeleton, OVRHand otherHand)
	{
	}

	[Token(Token = "0x6000B9E")]
	[Address(RVA = "0xB139A4", Offset = "0xB139A4", VA = "0xB139A4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000B9F")]
	[Address(RVA = "0xB14C84", Offset = "0xB14C84", VA = "0xB14C84")]
	private float Mod(float x, float y)
	{
		return default(float);
	}

	[Token(Token = "0x6000BA0")]
	[Address(RVA = "0xB13F00", Offset = "0xB13F00", VA = "0xB13F00")]
	private void HideArrows()
	{
	}

	[Token(Token = "0x6000BA1")]
	[Address(RVA = "0xB14730", Offset = "0xB14730", VA = "0xB14730")]
	private void GenerateScaleHintArrow(float direction)
	{
	}

	[Token(Token = "0x6000BA2")]
	[Address(RVA = "0xB13F80", Offset = "0xB13F80", VA = "0xB13F80")]
	private void GenerateRotationHintArrow(float direction = 1f)
	{
	}

	[Token(Token = "0x6000BA3")]
	[Address(RVA = "0xB14D00", Offset = "0xB14D00", VA = "0xB14D00")]
	private bool GenerateLeftAndRight(out Vector3 leftPosition, out Vector3 rightPosition, bool useCached = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0xB15130", Offset = "0xB15130", VA = "0xB15130")]
	public HandsTutorialHints()
	{
	}
}
[Token(Token = "0x2000123")]
public class HighlightSpot : MonoBehaviour
{
	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer mainSpot;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LineRenderer line;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float lineLength;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float lineWidth;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PlayerInterface playerInterface;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 baseSpotScale;

	[Token(Token = "0x6000BA5")]
	[Address(RVA = "0xB1A830", Offset = "0xB1A830", VA = "0xB1A830")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BA6")]
	[Address(RVA = "0xB1A8C8", Offset = "0xB1A8C8", VA = "0xB1A8C8")]
	private void SetElementPosition(Renderer element)
	{
	}

	[Token(Token = "0x6000BA7")]
	[Address(RVA = "0xB1AA1C", Offset = "0xB1AA1C", VA = "0xB1AA1C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BA8")]
	[Address(RVA = "0xB1B2C4", Offset = "0xB1B2C4", VA = "0xB1B2C4")]
	public HighlightSpot()
	{
	}
}
[Token(Token = "0x2000124")]
public class LargeMenu : MonoBehaviour
{
	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Player player;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6800", Offset = "0x6F6800")]
	private ToolTipManager <toolTip>k__BackingField;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SaveMenu saveMenu;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6810", Offset = "0x6F6810")]
	private MenuTab <currentTab>k__BackingField;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color selectedTabColor;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color unselectedTabColor;

	[Token(Token = "0x17000254")]
	public ToolTipManager toolTip
	{
		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0xB40B94", Offset = "0xB40B94", VA = "0xB40B94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FDF98", Offset = "0x6FDF98")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0xB40B9C", Offset = "0xB40B9C", VA = "0xB40B9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FDFA8", Offset = "0x6FDFA8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000255")]
	public bool isOpen
	{
		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0xB40BA4", Offset = "0xB40BA4", VA = "0xB40BA4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000256")]
	public MenuTab currentTab
	{
		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0xB40BC8", Offset = "0xB40BC8", VA = "0xB40BC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FDFB8", Offset = "0x6FDFB8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0xB40BD0", Offset = "0xB40BD0", VA = "0xB40BD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FDFC8", Offset = "0x6FDFC8")]
		set
		{
		}
	}

	[Token(Token = "0x6000BAE")]
	[Address(RVA = "0xB40BD8", Offset = "0xB40BD8", VA = "0xB40BD8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BAF")]
	[Address(RVA = "0xB40C48", Offset = "0xB40C48", VA = "0xB40C48")]
	public void Show()
	{
	}

	[Token(Token = "0x6000BB0")]
	[Address(RVA = "0xB40D44", Offset = "0xB40D44", VA = "0xB40D44")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000BB1")]
	[Address(RVA = "0xB40DA4", Offset = "0xB40DA4", VA = "0xB40DA4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0xB41094", Offset = "0xB41094", VA = "0xB41094")]
	public LargeMenu()
	{
	}
}
[Token(Token = "0x2000125")]
public class LoadScreen : MonoBehaviour
{
	[Token(Token = "0x2000399")]
	public class WaitForTransition : CustomYieldInstruction
	{
		[Token(Token = "0x4001726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private LoadScreen loadScreen;

		[Token(Token = "0x170003F0")]
		public override bool keepWaiting
		{
			[Token(Token = "0x600175A")]
			[Address(RVA = "0xB44EA0", Offset = "0xB44EA0", VA = "0xB44EA0", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001759")]
		[Address(RVA = "0xB44514", Offset = "0xB44514", VA = "0xB44514")]
		public WaitForTransition(LoadScreen inLoadScreen)
		{
		}
	}

	[Token(Token = "0x200039A")]
	public enum LoadDisplayType
	{
		[Token(Token = "0x4001728")]
		None,
		[Token(Token = "0x4001729")]
		Black,
		[Token(Token = "0x400172A")]
		White,
		[Token(Token = "0x400172B")]
		LoadingIcon,
		[Token(Token = "0x400172C")]
		CompanyLogo,
		[Token(Token = "0x400172D")]
		PublisherLogo,
		[Token(Token = "0x400172E")]
		GameLogo
	}

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera loadingCamera;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer fadeBlock;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CanvasGroup canvasGroup;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Canvas loadingCanvas;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image loadingPanel;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Image loadingIcon;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image companyImage;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Image publisherImage;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject companyLogoMesh;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject publisherLogoMesh;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MeshRenderer gameLogo3D;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Image gameLogoImage;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform canvasRoot;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float iconSpinSpeed;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float fadeSpeed;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float timeBeforeShowingLoadSpinner;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float iconSpin;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float fadeAmount;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float iconFadeAmount;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool useLogoMeshes;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Material gameLogoMaterial;

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float timeShowingIcon;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private LoadDisplayType displayType;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private GameObject currentVisibleIcon;

	[Token(Token = "0x17000257")]
	private bool shouldShowFade
	{
		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0xB43F6C", Offset = "0xB43F6C", VA = "0xB43F6C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000258")]
	private bool shouldShowCanvas
	{
		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0xB43F7C", Offset = "0xB43F7C", VA = "0xB43F7C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000259")]
	private GameObject currentRequiredIcon
	{
		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0xB43F9C", Offset = "0xB43F9C", VA = "0xB43F9C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700025A")]
	public bool isFadeTransitioning
	{
		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0xB4402C", Offset = "0xB4402C", VA = "0xB4402C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700025B")]
	public float audioFadeVolume
	{
		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0xB4418C", Offset = "0xB4418C", VA = "0xB4418C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700025C")]
	public bool isFadeVisible
	{
		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0xB4419C", Offset = "0xB4419C", VA = "0xB4419C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000BB9")]
	[Address(RVA = "0xB441BC", Offset = "0xB441BC", VA = "0xB441BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BBA")]
	[Address(RVA = "0xB4429C", Offset = "0xB4429C", VA = "0xB4429C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0xB44360", Offset = "0xB44360", VA = "0xB44360")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0xB44424", Offset = "0xB44424", VA = "0xB44424")]
	private void OnRecenter()
	{
	}

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0xB444A0", Offset = "0xB444A0", VA = "0xB444A0")]
	public WaitForTransition Show(LoadDisplayType loadDisplayType)
	{
		return null;
	}

	[Token(Token = "0x6000BBE")]
	[Address(RVA = "0xB44540", Offset = "0xB44540", VA = "0xB44540")]
	public void ShowImmediate(LoadDisplayType loadDisplayType)
	{
	}

	[Token(Token = "0x6000BBF")]
	[Address(RVA = "0xB44550", Offset = "0xB44550", VA = "0xB44550")]
	public void ResetCameraOrientation()
	{
	}

	[Token(Token = "0x6000BC0")]
	[Address(RVA = "0xB44624", Offset = "0xB44624", VA = "0xB44624")]
	private void SetIconVisibility()
	{
	}

	[Token(Token = "0x6000BC1")]
	[Address(RVA = "0xB44714", Offset = "0xB44714", VA = "0xB44714")]
	public WaitForTransition Hide()
	{
		return null;
	}

	[Token(Token = "0x6000BC2")]
	[Address(RVA = "0xB4477C", Offset = "0xB4477C", VA = "0xB4477C")]
	public void HideImmediate()
	{
	}

	[Token(Token = "0x6000BC3")]
	[Address(RVA = "0xB44788", Offset = "0xB44788", VA = "0xB44788")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BC4")]
	[Address(RVA = "0xB44E74", Offset = "0xB44E74", VA = "0xB44E74")]
	public LoadScreen()
	{
	}
}
[Token(Token = "0x2000126")]
public class LoanMenu : MonoBehaviour
{
	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text moneyText;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text moneyDeltaText;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Player player;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LoanPanel[] panels;

	[Token(Token = "0x6000BC5")]
	[Address(RVA = "0xB45098", Offset = "0xB45098", VA = "0xB45098")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BC6")]
	[Address(RVA = "0xB45144", Offset = "0xB45144", VA = "0xB45144")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BC7")]
	[Address(RVA = "0xB452E0", Offset = "0xB452E0", VA = "0xB452E0")]
	private void OnShowTab()
	{
	}

	[Token(Token = "0x6000BC8")]
	[Address(RVA = "0xB45148", Offset = "0xB45148", VA = "0xB45148")]
	private void Refresh()
	{
	}

	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0xB457B8", Offset = "0xB457B8", VA = "0xB457B8")]
	public LoanMenu()
	{
	}
}
[Token(Token = "0x2000127")]
public class LoanPanel : MonoBehaviour
{
	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int loanIndex;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text amount;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text amountValue;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text duration;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text interest;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text weeklyCost;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text total;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text weeksLeft;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text weeksLeftValue;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Button button;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text buttonText;

	[Token(Token = "0x6000BCA")]
	[Address(RVA = "0xB457C0", Offset = "0xB457C0", VA = "0xB457C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BCB")]
	[Address(RVA = "0xB45854", Offset = "0xB45854", VA = "0xB45854")]
	private void OnClick()
	{
	}

	[Token(Token = "0x6000BCC")]
	[Address(RVA = "0xB452E4", Offset = "0xB452E4", VA = "0xB452E4")]
	public void Refresh()
	{
	}

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0xB458D8", Offset = "0xB458D8", VA = "0xB458D8")]
	public LoanPanel()
	{
	}
}
[Token(Token = "0x2000128")]
public class MenuTab : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string tipText;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject tabContents;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject unselectedTab;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject selectedTab;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LargeMenu handler;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Button button;

	[Token(Token = "0x6000BCE")]
	[Address(RVA = "0xB4BD44", Offset = "0xB4BD44", VA = "0xB4BD44")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BCF")]
	[Address(RVA = "0xB40F14", Offset = "0xB40F14", VA = "0xB40F14")]
	public void SelectTab()
	{
	}

	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0xB40E54", Offset = "0xB40E54", VA = "0xB40E54")]
	public void HideContents()
	{
	}

	[Token(Token = "0x6000BD1")]
	[Address(RVA = "0xB4BE04", Offset = "0xB4BE04", VA = "0xB4BE04", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000BD2")]
	[Address(RVA = "0xB4BF24", Offset = "0xB4BF24", VA = "0xB4BF24", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000BD3")]
	[Address(RVA = "0xB4BF4C", Offset = "0xB4BF4C", VA = "0xB4BF4C")]
	public MenuTab()
	{
	}
}
[Token(Token = "0x2000129")]
public class MilestonePanel : MonoBehaviour, ISmartwatchPanel
{
	[Token(Token = "0x200039B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F58B0", Offset = "0x6F58B0")]
	private sealed class <Animate>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400172F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MilestonePanel <>4__this;

		[Token(Token = "0x170003F1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600175E")]
			[Address(RVA = "0xA8C270", Offset = "0xA8C270", VA = "0xA8C270", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001760")]
			[Address(RVA = "0xA8C2D8", Offset = "0xA8C2D8", VA = "0xA8C2D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600175B")]
		[Address(RVA = "0xA8BCF4", Offset = "0xA8BCF4", VA = "0xA8BCF4")]
		[DebuggerHidden]
		public <Animate>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x600175C")]
		[Address(RVA = "0xA8C064", Offset = "0xA8C064", VA = "0xA8C064", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600175D")]
		[Address(RVA = "0xA8C068", Offset = "0xA8C068", VA = "0xA8C068", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600175F")]
		[Address(RVA = "0xA8C278", Offset = "0xA8C278", VA = "0xA8C278", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text unlockTitleText;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text messageTitle;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text messageText;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform iconRoot;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform descriptionRoot;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject coinIcon;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject compassIcon;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject bridgeIcon;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject treeIcon;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public RectTransform descriptionPanel;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public SelectedInfoBoxLine descriptionLinePrefab;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public CityLevelGraph cityLevelGraph;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private GameObject meshIcon;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float desiredMeshIconRadius;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float iconSpinSpeed;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Color boldTextColour;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<SelectedInfoBoxLine> textLines;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int numTextLines;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float basePanelHeight;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Smartwatch smartwatch;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool isWaitingForExpansion;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	private bool isRegionUnlock;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string overrideRewardMessage;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private int unlockedLevel;

	[Token(Token = "0x1700025D")]
	public bool isOpen
	{
		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0xA89794", Offset = "0xA89794", VA = "0xA89794")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0xA897B8", Offset = "0xA897B8", VA = "0xA897B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BD6")]
	[Address(RVA = "0xA89870", Offset = "0xA89870", VA = "0xA89870")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0xA8999C", Offset = "0xA8999C", VA = "0xA8999C", Slot = "4")]
	public void SetupPanel(Smartwatch.NotificationData notificationData)
	{
	}

	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0xA8BBB0", Offset = "0xA8BBB0", VA = "0xA8BBB0", Slot = "5")]
	public void OnExpand()
	{
	}

	[Token(Token = "0x6000BD9")]
	[Address(RVA = "0xA8BC84", Offset = "0xA8BC84", VA = "0xA8BC84")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FDFD8", Offset = "0x6FDFD8")]
	private IEnumerator Animate()
	{
		return null;
	}

	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0xA8BD20", Offset = "0xA8BD20", VA = "0xA8BD20")]
	public void ShowConfirmButton()
	{
	}

	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0xA8A424", Offset = "0xA8A424", VA = "0xA8A424")]
	private void GenerateMeshIcon(GameObject baseObject)
	{
	}

	[Token(Token = "0x6000BDC")]
	[Address(RVA = "0xA8BD3C", Offset = "0xA8BD3C", VA = "0xA8BD3C")]
	private void AppendLine(Sprite icon, string text)
	{
	}

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0xA8ABC0", Offset = "0xA8ABC0", VA = "0xA8ABC0")]
	private void AddBuildingDescription(BuildingInfo building)
	{
	}

	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0xA8BFD4", Offset = "0xA8BFD4", VA = "0xA8BFD4")]
	public MilestonePanel()
	{
	}
}
[Token(Token = "0x200012A")]
public class MilestoneUnlockPanel : MonoBehaviour
{
	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image iconImage;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text descriptionText;

	[Token(Token = "0x6000BE0")]
	[Address(RVA = "0xA8C2E0", Offset = "0xA8C2E0", VA = "0xA8C2E0")]
	public void Init(Sprite iconSprite, string title, string description)
	{
	}

	[Token(Token = "0x6000BE1")]
	[Address(RVA = "0xA8C3A0", Offset = "0xA8C3A0", VA = "0xA8C3A0")]
	public MilestoneUnlockPanel()
	{
	}
}
[Token(Token = "0x200012B")]
public class PhysicalButtonHandFilter : MonoBehaviour
{
	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool allowDominantHandActivation;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool allowNonDominantHandActivation;

	[Token(Token = "0x6000BE2")]
	[Address(RVA = "0xA20098", Offset = "0xA20098", VA = "0xA20098")]
	public PhysicalButtonHandFilter()
	{
	}
}
[Token(Token = "0x200012C")]
public class PicoPlayBoundaryDialog : MonoBehaviour
{
	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform panel;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button okButton;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text title;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<SelectedInfoBoxLine> lines;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float padding;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6820", Offset = "0x6F6820")]
	private bool <hasShown>k__BackingField;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject previousMenu;

	[Token(Token = "0x1700025E")]
	public bool hasShown
	{
		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0xA212E4", Offset = "0xA212E4", VA = "0xA212E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE03C", Offset = "0x6FE03C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0xA212EC", Offset = "0xA212EC", VA = "0xA212EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE04C", Offset = "0x6FE04C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700025F")]
	public bool isOpen
	{
		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0xA212F8", Offset = "0xA212F8", VA = "0xA212F8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000260")]
	private Player player
	{
		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0xA2131C", Offset = "0xA2131C", VA = "0xA2131C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000BE7")]
	[Address(RVA = "0xA2136C", Offset = "0xA2136C", VA = "0xA2136C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BE8")]
	[Address(RVA = "0xA21370", Offset = "0xA21370", VA = "0xA21370")]
	private void ArrangeLayout()
	{
	}

	[Token(Token = "0x6000BE9")]
	[Address(RVA = "0xA21794", Offset = "0xA21794", VA = "0xA21794")]
	public void Show()
	{
	}

	[Token(Token = "0x6000BEA")]
	[Address(RVA = "0xA21DE0", Offset = "0xA21DE0", VA = "0xA21DE0")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000BEB")]
	[Address(RVA = "0xA21EA8", Offset = "0xA21EA8", VA = "0xA21EA8")]
	public void OnPressOK()
	{
	}

	[Token(Token = "0x6000BEC")]
	[Address(RVA = "0xA21EAC", Offset = "0xA21EAC", VA = "0xA21EAC")]
	public void Update()
	{
	}

	[Token(Token = "0x6000BED")]
	[Address(RVA = "0xA21EE8", Offset = "0xA21EE8", VA = "0xA21EE8")]
	public void ResetHasShown()
	{
	}

	[Token(Token = "0x6000BEE")]
	[Address(RVA = "0xA21EF0", Offset = "0xA21EF0", VA = "0xA21EF0")]
	public PicoPlayBoundaryDialog()
	{
	}
}
[Token(Token = "0x200012D")]
public class PinchIndicator : MonoBehaviour
{
	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpriteRenderer ring;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SpriteRenderer fill;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxSize;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minSize;

	[Token(Token = "0x6000BEF")]
	[Address(RVA = "0xA21F68", Offset = "0xA21F68", VA = "0xA21F68")]
	public void SetPinchStrength(float strength, bool isPinchActive)
	{
	}

	[Token(Token = "0x6000BF0")]
	[Address(RVA = "0xA22164", Offset = "0xA22164", VA = "0xA22164")]
	public PinchIndicator()
	{
	}
}
[Token(Token = "0x200012E")]
public class SaveMenu : MonoBehaviour
{
	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SaveSlotGroup saveSlotGroup;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action onMenuClosed;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Action<SaveSlot> onSlotChosen;

	[Token(Token = "0x6000BF1")]
	[Address(RVA = "0xAB8F7C", Offset = "0xAB8F7C", VA = "0xAB8F7C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BF2")]
	[Address(RVA = "0xAB903C", Offset = "0xAB903C", VA = "0xAB903C")]
	public void CloseButtonPressed()
	{
	}

	[Token(Token = "0x6000BF3")]
	[Address(RVA = "0xAB908C", Offset = "0xAB908C", VA = "0xAB908C")]
	public void Show()
	{
	}

	[Token(Token = "0x6000BF4")]
	[Address(RVA = "0xAB90E4", Offset = "0xAB90E4", VA = "0xAB90E4")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000BF5")]
	[Address(RVA = "0xAB90CC", Offset = "0xAB90CC", VA = "0xAB90CC")]
	public void Refresh()
	{
	}

	[Token(Token = "0x6000BF6")]
	[Address(RVA = "0xAB91B0", Offset = "0xAB91B0", VA = "0xAB91B0")]
	public SaveMenu()
	{
	}

	[Token(Token = "0x6000BF7")]
	[Address(RVA = "0xAB91B8", Offset = "0xAB91B8", VA = "0xAB91B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE05C", Offset = "0x6FE05C")]
	private void <Start>b__3_0(SaveSlot slot)
	{
	}
}
[Token(Token = "0x200012F")]
public class SaveSlot : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject empty;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject filled;

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Button trashButton;

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Renderer screenshotImage;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text dateText;

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text percentageCompletedText;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text emptyText;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject addSymbol;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6830", Offset = "0x6F6830")]
	private bool <isSlotFilled>k__BackingField;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6840", Offset = "0x6F6840")]
	private string <filename>k__BackingField;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool showTrashIcon;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Color standardColour;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Color selectedColour;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string[] monthNameLanguageCodes;

	[Token(Token = "0x17000261")]
	public bool isSlotFilled
	{
		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0xAB93B4", Offset = "0xAB93B4", VA = "0xAB93B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE06C", Offset = "0x6FE06C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0xAB93BC", Offset = "0xAB93BC", VA = "0xAB93BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE07C", Offset = "0x6FE07C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000262")]
	public string filename
	{
		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0xAB93C8", Offset = "0xAB93C8", VA = "0xAB93C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE08C", Offset = "0x6FE08C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0xAB93D0", Offset = "0xAB93D0", VA = "0xAB93D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE09C", Offset = "0x6FE09C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000BFC")]
	[Address(RVA = "0xAB93D8", Offset = "0xAB93D8", VA = "0xAB93D8")]
	public void Refresh()
	{
	}

	[Token(Token = "0x6000BFD")]
	[Address(RVA = "0xAB9E04", Offset = "0xAB9E04", VA = "0xAB9E04")]
	public void SetSlot(string slotName, bool showTrashIcon)
	{
	}

	[Token(Token = "0x6000BFE")]
	[Address(RVA = "0xAB9E14", Offset = "0xAB9E14", VA = "0xAB9E14", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000BFF")]
	[Address(RVA = "0xAB9E80", Offset = "0xAB9E80", VA = "0xAB9E80", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000C00")]
	[Address(RVA = "0xAB9ED0", Offset = "0xAB9ED0", VA = "0xAB9ED0")]
	public SaveSlot()
	{
	}
}
[Token(Token = "0x2000130")]
public class SaveSlotGroup : MonoBehaviour
{
	[Token(Token = "0x200039C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F58C0", Offset = "0x6F58C0")]
	private sealed class <>c__DisplayClass7_0
	{
		[Token(Token = "0x4001732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SaveSlot saveSlot;

		[Token(Token = "0x4001733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string slotName;

		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SaveSlotGroup <>4__this;

		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<bool> <>9__2;

		[Token(Token = "0x6001761")]
		[Address(RVA = "0xABA4EC", Offset = "0xABA4EC", VA = "0xABA4EC")]
		public <>c__DisplayClass7_0()
		{
		}

		[Token(Token = "0x6001762")]
		[Address(RVA = "0xABA594", Offset = "0xABA594", VA = "0xABA594")]
		internal void <Start>b__0()
		{
		}

		[Token(Token = "0x6001763")]
		[Address(RVA = "0xABA604", Offset = "0xABA604", VA = "0xABA604")]
		internal void <Start>b__1()
		{
		}

		[Token(Token = "0x6001764")]
		[Address(RVA = "0xABA7DC", Offset = "0xABA7DC", VA = "0xABA7DC")]
		internal void <Start>b__2(bool result)
		{
		}
	}

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject outerPanel;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject saveSlotPrefab;

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int width;

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int height;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float spacing;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool showTrashIcons;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Action<SaveSlot> onSaveSlotClicked;

	[Token(Token = "0x6000C02")]
	[Address(RVA = "0xABA208", Offset = "0xABA208", VA = "0xABA208")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C03")]
	[Address(RVA = "0xAB910C", Offset = "0xAB910C", VA = "0xAB910C")]
	public void Refresh()
	{
	}

	[Token(Token = "0x6000C04")]
	[Address(RVA = "0xABA570", Offset = "0xABA570", VA = "0xABA570")]
	public SaveSlotGroup()
	{
	}
}
[Token(Token = "0x2000131")]
public class ScaleRotationIndicator : MonoBehaviour
{
	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image indicatorSprite;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image icon;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Canvas canvas;

	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Player player;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Sprite zoomSprite;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Sprite rotateSprite;

	[Token(Token = "0x6000C05")]
	[Address(RVA = "0xABFFC8", Offset = "0xABFFC8", VA = "0xABFFC8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C06")]
	[Address(RVA = "0xAC0038", Offset = "0xAC0038", VA = "0xAC0038")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C07")]
	[Address(RVA = "0xAC0450", Offset = "0xAC0450", VA = "0xAC0450")]
	public ScaleRotationIndicator()
	{
	}
}
[Token(Token = "0x2000132")]
public class SelectedInfoBox : MonoBehaviour
{
	[Token(Token = "0x200039D")]
	public enum SelectionType
	{
		[Token(Token = "0x4001737")]
		None,
		[Token(Token = "0x4001738")]
		Building,
		[Token(Token = "0x4001739")]
		ConstructionCost,
		[Token(Token = "0x400173A")]
		TutorialText
	}

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<SelectedInfoBoxLine> textLines;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int numTextLines;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SelectedInfoBoxLine textLinePrefab;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform textLineRoot;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform panelTop;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color boldColour;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public LineRenderer line;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Image arrow;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float panelPadding;

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float minHeight;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float maxWidth;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Color warningColor;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Color minorWarningColor;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public Color baseTextColor;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Text mainText;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public RectTransform panel;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Image icon;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6850", Offset = "0x6F6850")]
	private SelectionType <currentSelectionType>k__BackingField;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private int selectionX;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int selectionY;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Canvas canvas;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private ConstructionCost costReport;

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Font boldFont;

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Font lightFont;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float baseScale;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private string warningColorCode;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private string minorWarningColorCode;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private string boldOpeningTag;

	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public AnimationCurve animateInCurve;

	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public float animateInDuration;

	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private float animateInTime;

	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private bool shouldShowArrow;

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public float maxScale;

	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Dictionary<string, string> languageKeyToFormattedText;

	[Token(Token = "0x17000263")]
	public SelectionType currentSelectionType
	{
		[Token(Token = "0x6000C08")]
		[Address(RVA = "0xAC462C", Offset = "0xAC462C", VA = "0xAC462C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE0AC", Offset = "0x6FE0AC")]
		get
		{
			return default(SelectionType);
		}
		[Token(Token = "0x6000C09")]
		[Address(RVA = "0xAC4634", Offset = "0xAC4634", VA = "0xAC4634")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE0BC", Offset = "0x6FE0BC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000264")]
	private Player player
	{
		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0xAC463C", Offset = "0xAC463C", VA = "0xAC463C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000265")]
	public bool isVisible
	{
		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0xAC468C", Offset = "0xAC468C", VA = "0xAC468C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000C0C")]
	[Address(RVA = "0xAC46A8", Offset = "0xAC46A8", VA = "0xAC46A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C0D")]
	[Address(RVA = "0xAC478C", Offset = "0xAC478C", VA = "0xAC478C")]
	private Vector3 GetWorldLocation()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C0E")]
	[Address(RVA = "0xAC490C", Offset = "0xAC490C", VA = "0xAC490C")]
	private Vector3 GetCityLocation()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C0F")]
	[Address(RVA = "0xAC4AD8", Offset = "0xAC4AD8", VA = "0xAC4AD8")]
	public void Select(BuildingInstance building)
	{
	}

	[Token(Token = "0x6000C10")]
	[Address(RVA = "0xAC4B00", Offset = "0xAC4B00", VA = "0xAC4B00")]
	public void ShowConstructionCost(ConstructionCost cost)
	{
	}

	[Token(Token = "0x6000C11")]
	[Address(RVA = "0xAC4B10", Offset = "0xAC4B10", VA = "0xAC4B10")]
	public void ResetAnimationIn()
	{
	}

	[Token(Token = "0x6000C12")]
	[Address(RVA = "0xAC4B18", Offset = "0xAC4B18", VA = "0xAC4B18")]
	private string LookupAndFormatText(string languageKey)
	{
		return null;
	}

	[Token(Token = "0x6000C13")]
	[Address(RVA = "0xAC4C24", Offset = "0xAC4C24", VA = "0xAC4C24")]
	public void ShowTutorialText(string languageKey, Sprite icon, bool showArrow = true, bool useLightWeightText = true)
	{
	}

	[Token(Token = "0x6000C14")]
	[Address(RVA = "0xAC5018", Offset = "0xAC5018", VA = "0xAC5018")]
	public void AppendTutorialText(string languageKey, Sprite icon)
	{
	}

	[Token(Token = "0x6000C15")]
	[Address(RVA = "0xAC5064", Offset = "0xAC5064", VA = "0xAC5064")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000C16")]
	[Address(RVA = "0xAC506C", Offset = "0xAC506C", VA = "0xAC506C")]
	private void AddBuildingEffectIcon(BuildingEffectCalculator calculator, int iconIndex, Sprite sprite, bool isNegative, bool showIfZero = false)
	{
	}

	[Token(Token = "0x6000C17")]
	[Address(RVA = "0xAC51D8", Offset = "0xAC51D8", VA = "0xAC51D8")]
	private Color GetEfficiencyColour(int efficiencyPercent)
	{
		return default(Color);
	}

	[Token(Token = "0x6000C18")]
	[Address(RVA = "0xAC5234", Offset = "0xAC5234", VA = "0xAC5234")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000C19")]
	[Address(RVA = "0xAC66DC", Offset = "0xAC66DC", VA = "0xAC66DC")]
	private void UpdateCanvasLayout()
	{
	}

	[Token(Token = "0x6000C1A")]
	[Address(RVA = "0xAC6970", Offset = "0xAC6970", VA = "0xAC6970")]
	private void UpdateCanvasPositioning()
	{
	}

	[Token(Token = "0x6000C1B")]
	[Address(RVA = "0xAC7510", Offset = "0xAC7510", VA = "0xAC7510")]
	private void LateUpdateOld()
	{
	}

	[Token(Token = "0x6000C1C")]
	[Address(RVA = "0xAC4C98", Offset = "0xAC4C98", VA = "0xAC4C98")]
	private void ClearLines()
	{
	}

	[Token(Token = "0x6000C1D")]
	[Address(RVA = "0xAC4D44", Offset = "0xAC4D44", VA = "0xAC4D44")]
	private void AppendLine(Sprite icon, string text, Color textColour, bool useLightWeightText = false)
	{
	}

	[Token(Token = "0x6000C1E")]
	[Address(RVA = "0xAC957C", Offset = "0xAC957C", VA = "0xAC957C")]
	public SelectedInfoBoxLine FindTextLine(Sprite matchingIcon)
	{
		return null;
	}

	[Token(Token = "0x6000C1F")]
	[Address(RVA = "0xAC96AC", Offset = "0xAC96AC", VA = "0xAC96AC")]
	public SelectedInfoBox()
	{
	}
}
[Token(Token = "0x2000133")]
public class SelectedInfoBoxLine : MonoBehaviour
{
	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float paddingHeight;

	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image iconImage;

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text textObject;

	[Token(Token = "0x17000266")]
	public Sprite icon
	{
		[Token(Token = "0x6000C20")]
		[Address(RVA = "0xAC9690", Offset = "0xAC9690", VA = "0xAC9690")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C21")]
		[Address(RVA = "0xAC93C8", Offset = "0xAC93C8", VA = "0xAC93C8")]
		set
		{
		}
	}

	[Token(Token = "0x17000267")]
	public Color textColour
	{
		[Token(Token = "0x6000C23")]
		[Address(RVA = "0xAC97AC", Offset = "0xAC97AC", VA = "0xAC97AC")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000C24")]
		[Address(RVA = "0xAC9470", Offset = "0xAC9470", VA = "0xAC9470")]
		set
		{
		}
	}

	[Token(Token = "0x17000268")]
	public Font font
	{
		[Token(Token = "0x6000C25")]
		[Address(RVA = "0xAC97D0", Offset = "0xAC97D0", VA = "0xAC97D0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C26")]
		[Address(RVA = "0xAC9494", Offset = "0xAC9494", VA = "0xAC9494")]
		set
		{
		}
	}

	[Token(Token = "0x17000269")]
	public float width
	{
		[Token(Token = "0x6000C27")]
		[Address(RVA = "0xAC73A4", Offset = "0xAC73A4", VA = "0xAC73A4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700026A")]
	public float height
	{
		[Token(Token = "0x6000C28")]
		[Address(RVA = "0xAC7408", Offset = "0xAC7408", VA = "0xAC7408")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000C22")]
	[Address(RVA = "0xAC94B0", Offset = "0xAC94B0", VA = "0xAC94B0")]
	public void SetText(string value)
	{
	}

	[Token(Token = "0x6000C29")]
	[Address(RVA = "0xAC97EC", Offset = "0xAC97EC", VA = "0xAC97EC")]
	public SelectedInfoBoxLine()
	{
	}
}
[Token(Token = "0x2000134")]
public class ServiceInfoPanel : MonoBehaviour
{
	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CityServiceManager.ServiceType serviceType;

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image icon;

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text expenseCostValue;

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image coverageIndicator;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float chartSize;

	[Token(Token = "0x6000C2A")]
	[Address(RVA = "0xAC97FC", Offset = "0xAC97FC", VA = "0xAC97FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C2B")]
	[Address(RVA = "0xAC99BC", Offset = "0xAC99BC", VA = "0xAC99BC")]
	private void OnCreate(ToolMenu.Entry tool)
	{
	}

	[Token(Token = "0x6000C2C")]
	[Address(RVA = "0xAC9800", Offset = "0xAC9800", VA = "0xAC9800")]
	private void Refresh()
	{
	}

	[Token(Token = "0x6000C2D")]
	[Address(RVA = "0xAC9A58", Offset = "0xAC9A58", VA = "0xAC9A58")]
	public ServiceInfoPanel()
	{
	}
}
[Token(Token = "0x2000135")]
public class SettingsMenu : MonoBehaviour
{
	[Token(Token = "0x200039E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F58D0", Offset = "0x6F58D0")]
	private sealed class <>c__DisplayClass30_0
	{
		[Token(Token = "0x400173B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LargeMenu largeMenu;

		[Token(Token = "0x400173C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SettingsMenu <>4__this;

		[Token(Token = "0x6001765")]
		[Address(RVA = "0xACAD7C", Offset = "0xACAD7C", VA = "0xACAD7C")]
		public <>c__DisplayClass30_0()
		{
		}

		[Token(Token = "0x6001766")]
		[Address(RVA = "0xACB458", Offset = "0xACB458", VA = "0xACB458")]
		internal void <ReturnToMainMenu>b__0(bool result)
		{
		}
	}

	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UISlider music;

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UISlider comfortCage;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UIComboSelector handedness;

	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UIComboSelector cameraRotationType;

	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UIComboSelector cameraRotationSnapSpeed;

	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UIComboSelector cameraRotationSmoothSpeed;

	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SaveMenu saveSlotsMenu;

	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject cheatsMenu;

	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject devMenu;

	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject miniStoriesDebugMenu;

	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject[] devOnlyOptions;

	[Token(Token = "0x4000961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public RectTransform comfortHintPanel;

	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text comfortHintText;

	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public RectTransform handTrackingTipPanel;

	[Token(Token = "0x4000964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Text handTrackingTipPanelText;

	[Token(Token = "0x4000965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Image handTrackingTipIcon;

	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Sprite handTrackingHandSprite;

	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Sprite handTrackingControllerSprite;

	[Token(Token = "0x4000968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private PlayerGameSettings playerGameSettingsOnOpen;

	[Token(Token = "0x1700026B")]
	private Player player
	{
		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0xAC9D94", Offset = "0xAC9D94", VA = "0xAC9D94")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700026C")]
	public bool anySettingsMenusOpened
	{
		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0xAC9DE4", Offset = "0xAC9DE4", VA = "0xAC9DE4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000C30")]
	[Address(RVA = "0xAC9EA8", Offset = "0xAC9EA8", VA = "0xAC9EA8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C31")]
	[Address(RVA = "0xACA4D8", Offset = "0xACA4D8", VA = "0xACA4D8")]
	private void RefreshSpeedWidgets()
	{
	}

	[Token(Token = "0x6000C32")]
	[Address(RVA = "0xACA6A4", Offset = "0xACA6A4", VA = "0xACA6A4")]
	public void Show()
	{
	}

	[Token(Token = "0x6000C33")]
	[Address(RVA = "0xACA834", Offset = "0xACA834", VA = "0xACA834")]
	public void HideAllSettingsMenus()
	{
	}

	[Token(Token = "0x6000C34")]
	[Address(RVA = "0xACA138", Offset = "0xACA138", VA = "0xACA138")]
	private void RefreshWidgets()
	{
	}

	[Token(Token = "0x6000C35")]
	[Address(RVA = "0xACAB48", Offset = "0xACAB48", VA = "0xACAB48")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C36")]
	[Address(RVA = "0xACAB4C", Offset = "0xACAB4C", VA = "0xACAB4C")]
	public void ViewSaveSlotsPressed()
	{
	}

	[Token(Token = "0x6000C37")]
	[Address(RVA = "0xACAB78", Offset = "0xACAB78", VA = "0xACAB78")]
	public void ReturnToMainMenu()
	{
	}

	[Token(Token = "0x6000C38")]
	[Address(RVA = "0xACAD84", Offset = "0xACAD84", VA = "0xACAD84")]
	public void ToggleCheatsMenu()
	{
	}

	[Token(Token = "0x6000C39")]
	[Address(RVA = "0xACADC4", Offset = "0xACADC4", VA = "0xACADC4")]
	public void ToggleDevMenu()
	{
	}

	[Token(Token = "0x6000C3A")]
	[Address(RVA = "0xACAE04", Offset = "0xACAE04", VA = "0xACAE04")]
	public void ToggleMiniStoriesDebugPanel()
	{
	}

	[Token(Token = "0x6000C3B")]
	[Address(RVA = "0xACA950", Offset = "0xACA950", VA = "0xACA950")]
	private void FireSettingsChangedAnalyticsEvent()
	{
	}

	[Token(Token = "0x6000C3C")]
	[Address(RVA = "0xACAE44", Offset = "0xACAE44", VA = "0xACAE44")]
	public void StartGamePressed()
	{
	}

	[Token(Token = "0x6000C3D")]
	[Address(RVA = "0xACAE70", Offset = "0xACAE70", VA = "0xACAE70")]
	public void CreditsButtonPressed()
	{
	}

	[Token(Token = "0x6000C3E")]
	[Address(RVA = "0xACAEF0", Offset = "0xACAEF0", VA = "0xACAEF0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C3F")]
	[Address(RVA = "0xACB168", Offset = "0xACB168", VA = "0xACB168")]
	public SettingsMenu()
	{
	}

	[Token(Token = "0x6000C40")]
	[Address(RVA = "0xACB1D0", Offset = "0xACB1D0", VA = "0xACB1D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE0CC", Offset = "0x6FE0CC")]
	private void <Start>b__23_0(bool isEnabled)
	{
	}

	[Token(Token = "0x6000C41")]
	[Address(RVA = "0xACB23C", Offset = "0xACB23C", VA = "0xACB23C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE0DC", Offset = "0x6FE0DC")]
	private void <Start>b__23_1(bool isEnabled)
	{
	}

	[Token(Token = "0x6000C42")]
	[Address(RVA = "0xACB2A8", Offset = "0xACB2A8", VA = "0xACB2A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE0EC", Offset = "0x6FE0EC")]
	private void <Start>b__23_2(int index)
	{
	}

	[Token(Token = "0x6000C43")]
	[Address(RVA = "0xACB310", Offset = "0xACB310", VA = "0xACB310")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE0FC", Offset = "0x6FE0FC")]
	private void <Start>b__23_3(int index)
	{
	}

	[Token(Token = "0x6000C44")]
	[Address(RVA = "0xACB388", Offset = "0xACB388", VA = "0xACB388")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE10C", Offset = "0x6FE10C")]
	private void <Start>b__23_4(int index)
	{
	}

	[Token(Token = "0x6000C45")]
	[Address(RVA = "0xACB3F0", Offset = "0xACB3F0", VA = "0xACB3F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE11C", Offset = "0x6FE11C")]
	private void <Start>b__23_5(int index)
	{
	}
}
[Token(Token = "0x2000136")]
public class TaxRateControl : MonoBehaviour
{
	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BudgetManager.ExpenseCategory category;

	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button minusButton;

	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Button plusButton;

	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text rateText;

	[Token(Token = "0x1700026D")]
	private int rate
	{
		[Token(Token = "0x6000C46")]
		[Address(RVA = "0xA7F92C", Offset = "0xA7F92C", VA = "0xA7F92C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000C47")]
		[Address(RVA = "0xA7FA4C", Offset = "0xA7FA4C", VA = "0xA7FA4C")]
		set
		{
		}
	}

	[Token(Token = "0x6000C48")]
	[Address(RVA = "0xA7FB70", Offset = "0xA7FB70", VA = "0xA7FB70")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C49")]
	[Address(RVA = "0xA7FC48", Offset = "0xA7FC48", VA = "0xA7FC48")]
	public void Refresh()
	{
	}

	[Token(Token = "0x6000C4A")]
	[Address(RVA = "0xA7FCEC", Offset = "0xA7FCEC", VA = "0xA7FCEC")]
	private void IncreaseRate()
	{
	}

	[Token(Token = "0x6000C4B")]
	[Address(RVA = "0xA7FDC4", Offset = "0xA7FDC4", VA = "0xA7FDC4")]
	private void DecreaseRate()
	{
	}

	[Token(Token = "0x6000C4C")]
	[Address(RVA = "0xA7FE9C", Offset = "0xA7FE9C", VA = "0xA7FE9C")]
	public TaxRateControl()
	{
	}
}
[Token(Token = "0x2000137")]
public class TimeControl : MonoBehaviour
{
	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Button pauseButton;

	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button speedButton;

	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image pauseButtonIcon;

	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image speedButtonIcon;

	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Sprite playSprite;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Sprite speed1Sprite;

	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Sprite speed2Sprite;

	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Sprite speed3Sprite;

	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Image timeProgress;

	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text dateText;

	[Token(Token = "0x6000C4D")]
	[Address(RVA = "0xB2A1C0", Offset = "0xB2A1C0", VA = "0xB2A1C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C4E")]
	[Address(RVA = "0xB2A2D4", Offset = "0xB2A2D4", VA = "0xB2A2D4")]
	private void SetSpeedFromIcon()
	{
	}

	[Token(Token = "0x6000C4F")]
	[Address(RVA = "0xB2A470", Offset = "0xB2A470", VA = "0xB2A470")]
	private void PauseClicked()
	{
	}

	[Token(Token = "0x6000C50")]
	[Address(RVA = "0xB2A55C", Offset = "0xB2A55C", VA = "0xB2A55C")]
	private void SpeedClicked()
	{
	}

	[Token(Token = "0x6000C51")]
	[Address(RVA = "0xB2A6C8", Offset = "0xB2A6C8", VA = "0xB2A6C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C52")]
	[Address(RVA = "0xB2A7D0", Offset = "0xB2A7D0", VA = "0xB2A7D0")]
	public TimeControl()
	{
	}
}
[Token(Token = "0x2000138")]
public class ToolMenu : ScriptableObject
{
	[Token(Token = "0x200039F")]
	public enum EntryType
	{
		[Token(Token = "0x400173E")]
		Category,
		[Token(Token = "0x400173F")]
		Button,
		[Token(Token = "0x4001740")]
		BulldozeTool,
		[Token(Token = "0x4001741")]
		RoadTool,
		[Token(Token = "0x4001742")]
		BuildingTool,
		[Token(Token = "0x4001743")]
		ZoneTool,
		[Token(Token = "0x4001744")]
		StreetViewTool,
		[Token(Token = "0x4001745")]
		BackButton,
		[Token(Token = "0x4001746")]
		BuildButton,
		[Token(Token = "0x4001747")]
		EmptySlot,
		[Token(Token = "0x4001748")]
		PropTool,
		[Token(Token = "0x4001749")]
		Locked,
		[Token(Token = "0x400174A")]
		UndoButton,
		[Token(Token = "0x400174B")]
		ReturnToWorldMap
	}

	[Serializable]
	[Token(Token = "0x20003A0")]
	public class Entry
	{
		[Token(Token = "0x400174C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string label;

		[Token(Token = "0x400174D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string description;

		[Token(Token = "0x400174E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EntryType type;

		[Token(Token = "0x400174F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ToolMenu submenu;

		[Token(Token = "0x4001750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BuildingInfo buildingType;

		[Token(Token = "0x4001751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PropCollection propType;

		[Token(Token = "0x4001752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string message;

		[Token(Token = "0x4001753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ZoneManager.ZoneType zoneType;

		[Token(Token = "0x4001754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public VisualiserManager.VisualiserType visualiser;

		[Token(Token = "0x4001755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject infoPanelPrefab;

		[Token(Token = "0x4001756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject meshIconPrefab;

		[Token(Token = "0x4001757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Color colour;

		[Token(Token = "0x6001767")]
		[Address(RVA = "0xB2A7E0", Offset = "0xB2A7E0", VA = "0xB2A7E0")]
		public Entry()
		{
		}
	}

	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Entry[] entries;

	[Token(Token = "0x6000C53")]
	[Address(RVA = "0xB2A7D8", Offset = "0xB2A7D8", VA = "0xB2A7D8")]
	public ToolMenu()
	{
	}
}
[Token(Token = "0x2000139")]
public class ToolTipManager : MonoBehaviour
{
	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject tipPanelSmall;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text tipTextSmall;

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject tipPanelTopArrow;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject tipPanelBottomArrow;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform tipPanelTopArrowPoint;

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform tipPanelBottomArrowPoint;

	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject tipPanel;

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text tipText;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Image tipIcon;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float tipPanelPadding;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float tipPanelMinHeight;

	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float tipPanelMaxWidth;

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float tipPanelSmallMaxWidth;

	[Token(Token = "0x6000C54")]
	[Address(RVA = "0xB2A814", Offset = "0xB2A814", VA = "0xB2A814")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C55")]
	[Address(RVA = "0xB2A914", Offset = "0xB2A914", VA = "0xB2A914")]
	public void ShowTip(string text, Transform targetTransform, Vector3 positionOffset, bool arrowOnTop = false)
	{
	}

	[Token(Token = "0x6000C56")]
	[Address(RVA = "0xB2ACCC", Offset = "0xB2ACCC", VA = "0xB2ACCC")]
	public void HideTip()
	{
	}

	[Token(Token = "0x6000C57")]
	[Address(RVA = "0xB2ACFC", Offset = "0xB2ACFC", VA = "0xB2ACFC")]
	public void ShowTipSmall(string text, Transform targetTransform, Vector3 localOffset)
	{
	}

	[Token(Token = "0x6000C58")]
	[Address(RVA = "0xB2B09C", Offset = "0xB2B09C", VA = "0xB2B09C")]
	public void HideTipSmall()
	{
	}

	[Token(Token = "0x6000C59")]
	[Address(RVA = "0xB2B0CC", Offset = "0xB2B0CC", VA = "0xB2B0CC")]
	public ToolTipManager()
	{
	}
}
[Token(Token = "0x200013A")]
public class ToolTipRegion : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string tipText;

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 tipPanelOffset;

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ToolTipManager manager;

	[Token(Token = "0x6000C5A")]
	[Address(RVA = "0xB2B0E0", Offset = "0xB2B0E0", VA = "0xB2B0E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C5B")]
	[Address(RVA = "0xB2B154", Offset = "0xB2B154", VA = "0xB2B154", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000C5C")]
	[Address(RVA = "0xB2B1FC", Offset = "0xB2B1FC", VA = "0xB2B1FC", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000C5D")]
	[Address(RVA = "0xB2B214", Offset = "0xB2B214", VA = "0xB2B214")]
	public ToolTipRegion()
	{
	}
}
[Token(Token = "0x200013B")]
public class TriggerBoxButton : MonoBehaviour
{
	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Button button;

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Image image;

	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Collider pressingCollider;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Collider lastPressedCollider;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float pressedAngle;

	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool isPressed;

	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion startingRotation;

	[Token(Token = "0x6000C5E")]
	[Address(RVA = "0xB2E978", Offset = "0xB2E978", VA = "0xB2E978")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C5F")]
	[Address(RVA = "0xB2E9F4", Offset = "0xB2E9F4", VA = "0xB2E9F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C60")]
	[Address(RVA = "0xB2EEA4", Offset = "0xB2EEA4", VA = "0xB2EEA4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000C61")]
	[Address(RVA = "0xB2F198", Offset = "0xB2F198", VA = "0xB2F198")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000C62")]
	[Address(RVA = "0xB2F220", Offset = "0xB2F220", VA = "0xB2F220")]
	public TriggerBoxButton()
	{
	}
}
[Token(Token = "0x200013C")]
public class UIBlocker : MonoBehaviour
{
	[Token(Token = "0x6000C63")]
	[Address(RVA = "0xCAF658", Offset = "0xCAF658", VA = "0xCAF658")]
	public UIBlocker()
	{
	}
}
[Token(Token = "0x200013D")]
public class UIComboSelector : MonoBehaviour
{
	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text optionText;

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string[] optionNames;

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int optionIndex;

	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool localiseStrings;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Action<int> onOptionChanged;

	[Token(Token = "0x1700026E")]
	private string optionTextString
	{
		[Token(Token = "0x6000C64")]
		[Address(RVA = "0xCAF660", Offset = "0xCAF660", VA = "0xCAF660")]
		set
		{
		}
	}

	[Token(Token = "0x6000C65")]
	[Address(RVA = "0xCAF704", Offset = "0xCAF704", VA = "0xCAF704")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000C66")]
	[Address(RVA = "0xCAF744", Offset = "0xCAF744", VA = "0xCAF744")]
	public void SetOptionIndex(int index)
	{
	}

	[Token(Token = "0x6000C67")]
	[Address(RVA = "0xCAF79C", Offset = "0xCAF79C", VA = "0xCAF79C")]
	public void Previous()
	{
	}

	[Token(Token = "0x6000C68")]
	[Address(RVA = "0xCAF868", Offset = "0xCAF868", VA = "0xCAF868")]
	public void Next()
	{
	}

	[Token(Token = "0x6000C69")]
	[Address(RVA = "0xCAF930", Offset = "0xCAF930", VA = "0xCAF930")]
	public UIComboSelector()
	{
	}
}
[Token(Token = "0x200013E")]
public class UIRoundedRectangle : MaskableGraphic
{
	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private Texture m_Texture;

	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private float _radius;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public int cornerSegments;

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public bool roundTopLeftCorner;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	public bool roundTopRightCorner;

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD2")]
	public bool roundBottomLeftCorner;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD3")]
	public bool roundBottomRightCorner;

	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public float borderUVsize;

	[Token(Token = "0x1700026F")]
	public Texture texture
	{
		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0xCAF940", Offset = "0xCAF940", VA = "0xCAF940")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0xCAF948", Offset = "0xCAF948", VA = "0xCAF948")]
		set
		{
		}
	}

	[Token(Token = "0x17000270")]
	public float radius
	{
		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0xCAFA04", Offset = "0xCAFA04", VA = "0xCAFA04")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0xCAFA0C", Offset = "0xCAFA0C", VA = "0xCAFA0C")]
		set
		{
		}
	}

	[Token(Token = "0x17000271")]
	public override Texture mainTexture
	{
		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0xCAFA68", Offset = "0xCAFA68", VA = "0xCAFA68", Slot = "35")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000C6E")]
	[Address(RVA = "0xCAFA20", Offset = "0xCAFA20", VA = "0xCAFA20", Slot = "10")]
	protected override void OnRectTransformDimensionsChange()
	{
	}

	[Token(Token = "0x6000C70")]
	[Address(RVA = "0xCAFB14", Offset = "0xCAFB14", VA = "0xCAFB14")]
	private void AddRoundedCorner(VertexHelper vh, Vector3 corner, Vector2 cornerUV, Vector3 direction, float startAngle)
	{
	}

	[Token(Token = "0x6000C71")]
	[Address(RVA = "0xCAFF98", Offset = "0xCAFF98", VA = "0xCAFF98")]
	private void AddSquareCorner(VertexHelper vh, Vector3 corner, Vector2 cornerUV, Vector3 direction, float startAngle)
	{
	}

	[Token(Token = "0x6000C72")]
	[Address(RVA = "0xCB042C", Offset = "0xCB042C", VA = "0xCB042C", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper vh)
	{
	}

	[Token(Token = "0x6000C73")]
	[Address(RVA = "0xCB0EC4", Offset = "0xCB0EC4", VA = "0xCB0EC4")]
	public UIRoundedRectangle()
	{
	}
}
[Token(Token = "0x200013F")]
public class UIRoundedRectangle3D : MaskableGraphic
{
	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private Texture m_Texture;

	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private float _radius;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[SerializeField]
	private float _thickness;

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public int cornerSegments;

	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public bool roundTopLeftCorner;

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
	public bool roundTopRightCorner;

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD6")]
	public bool roundBottomLeftCorner;

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD7")]
	public bool roundBottomRightCorner;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float borderUVsize;

	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public float edgeThickness;

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Color edgeColor;

	[Token(Token = "0x17000272")]
	public Texture texture
	{
		[Token(Token = "0x6000C74")]
		[Address(RVA = "0xCB0EEC", Offset = "0xCB0EEC", VA = "0xCB0EEC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C75")]
		[Address(RVA = "0xCB0EF4", Offset = "0xCB0EF4", VA = "0xCB0EF4")]
		set
		{
		}
	}

	[Token(Token = "0x17000273")]
	public float radius
	{
		[Token(Token = "0x6000C76")]
		[Address(RVA = "0xCB0FB0", Offset = "0xCB0FB0", VA = "0xCB0FB0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000C77")]
		[Address(RVA = "0xCB0FB8", Offset = "0xCB0FB8", VA = "0xCB0FB8")]
		set
		{
		}
	}

	[Token(Token = "0x17000274")]
	public float thickness
	{
		[Token(Token = "0x6000C78")]
		[Address(RVA = "0xCB0FCC", Offset = "0xCB0FCC", VA = "0xCB0FCC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000C79")]
		[Address(RVA = "0xCB0FD4", Offset = "0xCB0FD4", VA = "0xCB0FD4")]
		set
		{
		}
	}

	[Token(Token = "0x17000275")]
	public override Texture mainTexture
	{
		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0xCB1030", Offset = "0xCB1030", VA = "0xCB1030", Slot = "35")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000C7A")]
	[Address(RVA = "0xCB0FE8", Offset = "0xCB0FE8", VA = "0xCB0FE8", Slot = "10")]
	protected override void OnRectTransformDimensionsChange()
	{
	}

	[Token(Token = "0x6000C7C")]
	[Address(RVA = "0xCB10DC", Offset = "0xCB10DC", VA = "0xCB10DC")]
	private void AddRoundedCorner(VertexHelper vh, Vector3 corner, Vector2 cornerUV, Vector3 direction, float startAngle)
	{
	}

	[Token(Token = "0x6000C7D")]
	[Address(RVA = "0xCB1560", Offset = "0xCB1560", VA = "0xCB1560")]
	private void AddSquareCorner(VertexHelper vh, Vector3 corner, Vector2 cornerUV, Vector3 direction, float startAngle)
	{
	}

	[Token(Token = "0x6000C7E")]
	[Address(RVA = "0xCB19F4", Offset = "0xCB19F4", VA = "0xCB19F4")]
	private void AddEdgeCorner(VertexHelper vh, Vector3 corner, Vector2 cornerUV, Vector3 direction, Color col, float startAngle)
	{
	}

	[Token(Token = "0x6000C7F")]
	[Address(RVA = "0xCB1E50", Offset = "0xCB1E50", VA = "0xCB1E50")]
	private void PopulateEdges(VertexHelper vh, float edgeOffset = 0f)
	{
	}

	[Token(Token = "0x6000C80")]
	[Address(RVA = "0xCB266C", Offset = "0xCB266C", VA = "0xCB266C", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper vh)
	{
	}

	[Token(Token = "0x6000C81")]
	[Address(RVA = "0xCB26D0", Offset = "0xCB26D0", VA = "0xCB26D0")]
	private void Populate(VertexHelper vh)
	{
	}

	[Token(Token = "0x6000C82")]
	[Address(RVA = "0xCB315C", Offset = "0xCB315C", VA = "0xCB315C")]
	public UIRoundedRectangle3D()
	{
	}
}
[Token(Token = "0x2000140")]
public class UISlider : MonoBehaviour
{
	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image backDrop;

	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image switchImage;

	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite backDropEnabledSprite;

	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Sprite backDropDisabledSprite;

	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Sprite switchEnabledSprite;

	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Sprite switchDisabledSprite;

	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool sliderEnabled;

	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float animationDuration;

	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float minSwitchPosition;

	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float maxSwitchPosition;

	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Button button;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float switchPosition;

	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Action<bool> onOptionChanged;

	[Token(Token = "0x6000C83")]
	[Address(RVA = "0xCB31AC", Offset = "0xCB31AC", VA = "0xCB31AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C84")]
	[Address(RVA = "0xCB3254", Offset = "0xCB3254", VA = "0xCB3254")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C85")]
	[Address(RVA = "0xCB3280", Offset = "0xCB3280", VA = "0xCB3280")]
	public void SetSliderEnabled(bool shouldBeEnabled)
	{
	}

	[Token(Token = "0x6000C86")]
	[Address(RVA = "0xCB32B0", Offset = "0xCB32B0", VA = "0xCB32B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C87")]
	[Address(RVA = "0xCB3434", Offset = "0xCB3434", VA = "0xCB3434")]
	public UISlider()
	{
	}

	[Token(Token = "0x6000C88")]
	[Address(RVA = "0xCB3448", Offset = "0xCB3448", VA = "0xCB3448")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE12C", Offset = "0x6FE12C")]
	private void <Awake>b__13_0()
	{
	}
}
[Token(Token = "0x2000141")]
public class UITrapezium : MaskableGraphic, ICanvasRaycastFilter
{
	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float baseWidth;

	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float shift;

	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float outlineWidth;

	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float outlineUV;

	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public bool edgeLeft;

	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	public bool edgeRight;

	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public float innerOutlineUV;

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private Texture m_Texture;

	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private float _additionalHeight;

	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	[SerializeField]
	private float _accentSize;

	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private Color _accentColor;

	[Token(Token = "0x17000276")]
	public Texture texture
	{
		[Token(Token = "0x6000C89")]
		[Address(RVA = "0xCB34E4", Offset = "0xCB34E4", VA = "0xCB34E4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0xCB34EC", Offset = "0xCB34EC", VA = "0xCB34EC")]
		set
		{
		}
	}

	[Token(Token = "0x17000277")]
	public float additionalHeight
	{
		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0xCB35A8", Offset = "0xCB35A8", VA = "0xCB35A8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0xCB35B0", Offset = "0xCB35B0", VA = "0xCB35B0")]
		set
		{
		}
	}

	[Token(Token = "0x17000278")]
	public float accentSize
	{
		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0xCB35C4", Offset = "0xCB35C4", VA = "0xCB35C4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0xCB35CC", Offset = "0xCB35CC", VA = "0xCB35CC")]
		set
		{
		}
	}

	[Token(Token = "0x17000279")]
	public Color accentColor
	{
		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0xCB35E0", Offset = "0xCB35E0", VA = "0xCB35E0")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000C90")]
		[Address(RVA = "0xCB35EC", Offset = "0xCB35EC", VA = "0xCB35EC")]
		set
		{
		}
	}

	[Token(Token = "0x1700027A")]
	public override Texture mainTexture
	{
		[Token(Token = "0x6000C92")]
		[Address(RVA = "0xCB364C", Offset = "0xCB364C", VA = "0xCB364C", Slot = "35")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000C91")]
	[Address(RVA = "0xCB3604", Offset = "0xCB3604", VA = "0xCB3604", Slot = "10")]
	protected override void OnRectTransformDimensionsChange()
	{
	}

	[Token(Token = "0x6000C93")]
	[Address(RVA = "0xCB36F8", Offset = "0xCB36F8", VA = "0xCB36F8", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper vh)
	{
	}

	[Token(Token = "0x6000C94")]
	[Address(RVA = "0xCB4A08", Offset = "0xCB4A08", VA = "0xCB4A08", Slot = "65")]
	public bool IsRaycastLocationValid(Vector2 screenPosition, Camera eventCamera)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C95")]
	[Address(RVA = "0xCB4C7C", Offset = "0xCB4C7C", VA = "0xCB4C7C")]
	public UITrapezium()
	{
	}
}
[Token(Token = "0x2000142")]
public class UtilityInfoPanel : MonoBehaviour
{
	[Token(Token = "0x20003A1")]
	public enum Type
	{
		[Token(Token = "0x4001759")]
		Electricity,
		[Token(Token = "0x400175A")]
		Water
	}

	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Type type;

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text consumptionValue;

	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text productionValue;

	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image arrow;

	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float chartSize;

	[Token(Token = "0x6000C96")]
	[Address(RVA = "0xCBE8A8", Offset = "0xCBE8A8", VA = "0xCBE8A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C97")]
	[Address(RVA = "0xCBE8AC", Offset = "0xCBE8AC", VA = "0xCBE8AC")]
	private void Refresh()
	{
	}

	[Token(Token = "0x6000C98")]
	[Address(RVA = "0xCBEAE0", Offset = "0xCBEAE0", VA = "0xCBEAE0")]
	public UtilityInfoPanel()
	{
	}
}
[Token(Token = "0x2000143")]
public class VRPlayerInterface : MonoBehaviour
{
	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Smartwatch smartWatch;

	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject leftController;

	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject rightController;

	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject leftHandTool;

	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject rightHandTool;

	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public VRHand leftHand;

	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public VRHand rightHand;

	[Token(Token = "0x6000C99")]
	[Address(RVA = "0xA9DFEC", Offset = "0xA9DFEC", VA = "0xA9DFEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C9A")]
	[Address(RVA = "0xA9E0AC", Offset = "0xA9E0AC", VA = "0xA9E0AC")]
	public VRPlayerInterface()
	{
	}

	[Token(Token = "0x6000C9B")]
	[Address(RVA = "0xA9E0B4", Offset = "0xA9E0B4", VA = "0xA9E0B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE13C", Offset = "0x6FE13C")]
	private void <Start>b__7_0(bool isExpanded)
	{
	}
}
[Token(Token = "0x2000144")]
public class FingerPoseTrigger : MonoBehaviour
{
	[Token(Token = "0x6000C9C")]
	[Address(RVA = "0xADC894", Offset = "0xADC894", VA = "0xADC894")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000C9D")]
	[Address(RVA = "0xADC97C", Offset = "0xADC97C", VA = "0xADC97C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000C9E")]
	[Address(RVA = "0xADCA64", Offset = "0xADCA64", VA = "0xADCA64")]
	public FingerPoseTrigger()
	{
	}
}
[Token(Token = "0x2000145")]
public class GenericWatchPanel : MonoBehaviour, ISmartwatchPanel
{
	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform panel;

	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float panelPadding;

	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text titleText;

	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SelectedInfoBoxLine textLinePrefab;

	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform textLineRoot;

	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Font boldFont;

	[Token(Token = "0x40009D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Font lightFont;

	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<SelectedInfoBoxLine> textLines;

	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int numTextLines;

	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float startingHeight;

	[Token(Token = "0x6000C9F")]
	[Address(RVA = "0xB0AF8C", Offset = "0xB0AF8C", VA = "0xB0AF8C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CA0")]
	[Address(RVA = "0xB0AFE0", Offset = "0xB0AFE0", VA = "0xB0AFE0")]
	private void SetupBankruptPanel()
	{
	}

	[Token(Token = "0x6000CA1")]
	[Address(RVA = "0xB0B560", Offset = "0xB0B560", VA = "0xB0B560")]
	private void SetupGameOverPanel()
	{
	}

	[Token(Token = "0x6000CA2")]
	[Address(RVA = "0xB0B6A4", Offset = "0xB0B6A4", VA = "0xB0B6A4")]
	private void SetupTutorialPanel()
	{
	}

	[Token(Token = "0x6000CA3")]
	[Address(RVA = "0xB0B7A8", Offset = "0xB0B7A8", VA = "0xB0B7A8")]
	private void SetupUnlockedIslandsPanel()
	{
	}

	[Token(Token = "0x6000CA4")]
	[Address(RVA = "0xB0B490", Offset = "0xB0B490", VA = "0xB0B490")]
	private void UpdateCanvasLayout()
	{
	}

	[Token(Token = "0x6000CA5")]
	[Address(RVA = "0xB0B14C", Offset = "0xB0B14C", VA = "0xB0B14C")]
	private void ClearLines()
	{
	}

	[Token(Token = "0x6000CA6")]
	[Address(RVA = "0xB0B1F8", Offset = "0xB0B1F8", VA = "0xB0B1F8")]
	private void AppendLine(Sprite icon, string text, bool useLightWeightText = true)
	{
	}

	[Token(Token = "0x6000CA7")]
	[Address(RVA = "0xB0B8AC", Offset = "0xB0B8AC", VA = "0xB0B8AC", Slot = "4")]
	public void SetupPanel(Smartwatch.NotificationData notificationData)
	{
	}

	[Token(Token = "0x6000CA8")]
	[Address(RVA = "0xB0B8E8", Offset = "0xB0B8E8", VA = "0xB0B8E8", Slot = "5")]
	public void OnExpand()
	{
	}

	[Token(Token = "0x6000CA9")]
	[Address(RVA = "0xB0B914", Offset = "0xB0B914", VA = "0xB0B914")]
	public GenericWatchPanel()
	{
	}
}
[Token(Token = "0x2000146")]
public class HappinessFactorPanel : MonoBehaviour
{
	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text label;

	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text percentage;

	[Token(Token = "0x6000CAA")]
	[Address(RVA = "0xB16798", Offset = "0xB16798", VA = "0xB16798")]
	public void Set(HappinessManager.HappinessFactor factor)
	{
	}

	[Token(Token = "0x6000CAB")]
	[Address(RVA = "0xB1696C", Offset = "0xB1696C", VA = "0xB1696C")]
	public HappinessFactorPanel()
	{
	}
}
[Token(Token = "0x2000147")]
public class HappinessWatchPanel : MonoBehaviour
{
	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image smileyImage;

	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite[] smileySprites;

	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text happinessPercentageText;

	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HappinessFactorPanel[] factorPanels;

	[Token(Token = "0x6000CAC")]
	[Address(RVA = "0xB18134", Offset = "0xB18134", VA = "0xB18134")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CAD")]
	[Address(RVA = "0xB18434", Offset = "0xB18434", VA = "0xB18434")]
	public HappinessWatchPanel()
	{
	}
}
[Token(Token = "0x2000148")]
public class ServiceStatusWatchPanel : MonoBehaviour
{
	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text policeCoveragePercentage;

	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image policeCoverageProgress;

	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text fireCoveragePercentage;

	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image fireCoverageProgress;

	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text hospitalCoveragePercentage;

	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Image hospitalCoverageProgress;

	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text schoolCoveragePercentage;

	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Image schoolCoverageProgress;

	[Token(Token = "0x40009E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color goodCoverage;

	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Color averageCoverage;

	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Color badCoverage;

	[Token(Token = "0x6000CAE")]
	[Address(RVA = "0xAC9A68", Offset = "0xAC9A68", VA = "0xAC9A68")]
	private void UpdateCoverage(Text text, Image progress, float amount)
	{
	}

	[Token(Token = "0x6000CAF")]
	[Address(RVA = "0xAC9BC4", Offset = "0xAC9BC4", VA = "0xAC9BC4")]
	public void Update()
	{
	}

	[Token(Token = "0x6000CB0")]
	[Address(RVA = "0xAC9D40", Offset = "0xAC9D40", VA = "0xAC9D40")]
	public ServiceStatusWatchPanel()
	{
	}
}
[Token(Token = "0x2000149")]
public interface ISmartwatchPanel
{
	[Token(Token = "0x6000CB1")]
	void SetupPanel(Smartwatch.NotificationData notificationData);

	[Token(Token = "0x6000CB2")]
	void OnExpand();
}
[Token(Token = "0x200014A")]
public class Smartwatch : MonoBehaviour
{
	[Token(Token = "0x20003A2")]
	public enum NotificationType
	{
		[Token(Token = "0x400175C")]
		None,
		[Token(Token = "0x400175D")]
		MilestoneReward,
		[Token(Token = "0x400175E")]
		Bankrupt,
		[Token(Token = "0x400175F")]
		GameOver,
		[Token(Token = "0x4001760")]
		WatchIntroduction,
		[Token(Token = "0x4001761")]
		IslandsUnlocked
	}

	[Token(Token = "0x20003A3")]
	public class NotificationData
	{
		[Token(Token = "0x4001762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public NotificationType type;

		[Token(Token = "0x4001763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int levelUnlocked;

		[Token(Token = "0x6001768")]
		[Address(RVA = "0xA743AC", Offset = "0xA743AC", VA = "0xA743AC")]
		public NotificationData(NotificationType inType, int inLevelUnlocked = 0)
		{
		}
	}

	[Token(Token = "0x20003A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F58E0", Offset = "0x6F58E0")]
	private sealed class <>c__DisplayClass94_0
	{
		[Token(Token = "0x4001764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CanvasGroup notificationPanel;

		[Token(Token = "0x6001769")]
		[Address(RVA = "0xA76454", Offset = "0xA76454", VA = "0xA76454")]
		public <>c__DisplayClass94_0()
		{
		}

		[Token(Token = "0x600176A")]
		[Address(RVA = "0xA76B50", Offset = "0xA76B50", VA = "0xA76B50")]
		internal bool <ShowPanel>b__0(CanvasGroup x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator animator;

	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Player player;

	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject watchRoot;

	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject hintIcon;

	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform hintArrowRoot;

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float timeBeforeShowingHintArrow;

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F68F0", Offset = "0x6F68F0")]
	private bool <isExpanded>k__BackingField;

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Action<bool> onExpansionStateChanged;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color pausedTimeColour;

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Color notificationColour;

	[Token(Token = "0x40009F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Color timeColour;

	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Text dayText;

	[Token(Token = "0x40009F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Text weekText;

	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Text weekLabel;

	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Image weekProgress;

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Image weekProgressUnder;

	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Image dayProgress;

	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Image dayProgressUnder;

	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Text timePlayedText;

	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Color progressUnderColour;

	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private SimulationScheduler.SimulationSpeed oldSpeed;

	[Token(Token = "0x40009FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Image pauseButtonImage;

	[Token(Token = "0x40009FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Sprite[] pauseButtonSprites;

	[Token(Token = "0x40009FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Image speedButtonImage;

	[Token(Token = "0x40009FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Sprite[] speedButtonSprites;

	[Token(Token = "0x40009FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public CanvasGroup[] displayPanels;

	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public float displayPanelSpacing;

	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private int currentDisplayPanelIndex;

	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public CanvasGroup statsDisplayPanel;

	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public CanvasGroup milestoneDisplayPanel;

	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public CanvasGroup genericDisplayPanel;

	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public CanvasGroup worldMapStatsDisplayPanel;

	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject defaultButtonGroup;

	[Token(Token = "0x4000A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject confirmButtonGroup;

	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public GameObject dateFace;

	[Token(Token = "0x4000A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject messageFace;

	[Token(Token = "0x4000A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject messageOpenFace;

	[Token(Token = "0x4000A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public GameObject playTimeFace;

	[Token(Token = "0x4000A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public ControllerLabel settingsHintLabel;

	[Token(Token = "0x4000A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Button settingsButton;

	[Token(Token = "0x4000A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public MeshRenderer notificationMesh;

	[Token(Token = "0x4000A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private List<NotificationData> queuedNotifications;

	[Token(Token = "0x4000A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private bool didPauseFromNotification;

	[Token(Token = "0x4000A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x179")]
	private bool makeNotificationSound;

	[Token(Token = "0x4000A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private float notificationVibrationTimer;

	[Token(Token = "0x4000A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private int notificationVibrationPattern;

	[Token(Token = "0x4000A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private float timeMakingNotificationSound;

	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private float timeSinceLastNotification;

	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private float buttonPressCooldown;

	[Token(Token = "0x4000A17")]
	private const float timeShiftSoundVolume = 0.25f;

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6900", Offset = "0x6F6900")]
	private bool <shouldHideButtons>k__BackingField;

	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private string[] weekdayLanguageCodes;

	[Token(Token = "0x1700027B")]
	public bool isExpanded
	{
		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0xA731CC", Offset = "0xA731CC", VA = "0xA731CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE14C", Offset = "0x6FE14C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0xA731D4", Offset = "0xA731D4", VA = "0xA731D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE15C", Offset = "0x6FE15C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700027C")]
	private CanvasGroup currentDisplayPanel
	{
		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0xA731E0", Offset = "0xA731E0", VA = "0xA731E0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700027D")]
	public bool hasQueuedNotification
	{
		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0xA73220", Offset = "0xA73220", VA = "0xA73220")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700027E")]
	public bool canBeExpanded
	{
		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0xA73278", Offset = "0xA73278", VA = "0xA73278")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700027F")]
	public bool hasNotificationMessage
	{
		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0xA732E8", Offset = "0xA732E8", VA = "0xA732E8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000280")]
	public bool canQueueNotification
	{
		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0xA73338", Offset = "0xA73338", VA = "0xA73338")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000281")]
	public bool shouldHideButtons
	{
		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0xA73380", Offset = "0xA73380", VA = "0xA73380")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE16C", Offset = "0x6FE16C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0xA73388", Offset = "0xA73388", VA = "0xA73388")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE17C", Offset = "0x6FE17C")]
		set
		{
		}
	}

	[Token(Token = "0x6000CBC")]
	[Address(RVA = "0xA73394", Offset = "0xA73394", VA = "0xA73394")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CBD")]
	[Address(RVA = "0xA73438", Offset = "0xA73438", VA = "0xA73438")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CBE")]
	[Address(RVA = "0xA7376C", Offset = "0xA7376C", VA = "0xA7376C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CBF")]
	[Address(RVA = "0xA73FFC", Offset = "0xA73FFC", VA = "0xA73FFC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000CC0")]
	[Address(RVA = "0xA74190", Offset = "0xA74190", VA = "0xA74190")]
	private void ResetWatch()
	{
	}

	[Token(Token = "0x6000CC1")]
	[Address(RVA = "0xA74334", Offset = "0xA74334", VA = "0xA74334")]
	public void OnLevelUp(int newLevel)
	{
	}

	[Token(Token = "0x6000CC2")]
	[Address(RVA = "0xA743E4", Offset = "0xA743E4", VA = "0xA743E4")]
	private void QueueNotification(NotificationData notificationData)
	{
	}

	[Token(Token = "0x6000CC3")]
	[Address(RVA = "0xA7444C", Offset = "0xA7444C", VA = "0xA7444C")]
	public void QueueNotification(NotificationType notificationType)
	{
	}

	[Token(Token = "0x6000CC4")]
	[Address(RVA = "0xA744D8", Offset = "0xA744D8", VA = "0xA744D8")]
	private CanvasGroup GetNotificationPanel(NotificationType notificationType)
	{
		return null;
	}

	[Token(Token = "0x6000CC5")]
	[Address(RVA = "0xA74514", Offset = "0xA74514", VA = "0xA74514")]
	private void ShowQueuedNotification()
	{
	}

	[Token(Token = "0x6000CC6")]
	[Address(RVA = "0xA74660", Offset = "0xA74660", VA = "0xA74660")]
	private bool IsAnyStatDisplayPanel(int index)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CC7")]
	[Address(RVA = "0xA746A0", Offset = "0xA746A0", VA = "0xA746A0")]
	private bool IsStatDisplayPanel(int index)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CC8")]
	[Address(RVA = "0xA74748", Offset = "0xA74748", VA = "0xA74748")]
	private bool IsWorldMapStatDisplayPanel(int index)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CC9")]
	[Address(RVA = "0xA747F0", Offset = "0xA747F0", VA = "0xA747F0")]
	private void AnimateProgress(Image progressImage, Image underImage, float newAmount)
	{
	}

	[Token(Token = "0x6000CCA")]
	[Address(RVA = "0xA739FC", Offset = "0xA739FC", VA = "0xA739FC")]
	private void UpdateWatchFace()
	{
	}

	[Token(Token = "0x6000CCB")]
	[Address(RVA = "0xA74918", Offset = "0xA74918", VA = "0xA74918")]
	private void ResetPanels()
	{
	}

	[Token(Token = "0x6000CCC")]
	[Address(RVA = "0xA74AB8", Offset = "0xA74AB8", VA = "0xA74AB8")]
	private void AnimatePanels()
	{
	}

	[Token(Token = "0x6000CCD")]
	[Address(RVA = "0xA74BF4", Offset = "0xA74BF4", VA = "0xA74BF4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000CCE")]
	[Address(RVA = "0xA74D0C", Offset = "0xA74D0C", VA = "0xA74D0C")]
	public bool CheckIfAlmostLookingAtWatch()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CCF")]
	[Address(RVA = "0xA74FCC", Offset = "0xA74FCC", VA = "0xA74FCC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CD0")]
	[Address(RVA = "0xA75F6C", Offset = "0xA75F6C", VA = "0xA75F6C")]
	public void PausePlayPressed()
	{
	}

	[Token(Token = "0x6000CD1")]
	[Address(RVA = "0xA761DC", Offset = "0xA761DC", VA = "0xA761DC")]
	public void TimeCompressionPressed()
	{
	}

	[Token(Token = "0x6000CD2")]
	[Address(RVA = "0xA74B9C", Offset = "0xA74B9C", VA = "0xA74B9C")]
	private float GetPanelPosition(int panelIndex)
	{
		return default(float);
	}

	[Token(Token = "0x6000CD3")]
	[Address(RVA = "0xA74978", Offset = "0xA74978", VA = "0xA74978")]
	private void SetPanelPosition(int panelIndex, float position)
	{
	}

	[Token(Token = "0x6000CD4")]
	[Address(RVA = "0xA74224", Offset = "0xA74224", VA = "0xA74224")]
	public void ShowPanel(NotificationType notificationType, [Optional] NotificationData notificationData)
	{
	}

	[Token(Token = "0x6000CD5")]
	[Address(RVA = "0xA73578", Offset = "0xA73578", VA = "0xA73578")]
	private void ShowPanel(int index, [Optional] NotificationData notificationData)
	{
	}

	[Token(Token = "0x6000CD6")]
	[Address(RVA = "0xA7645C", Offset = "0xA7645C", VA = "0xA7645C")]
	public void NextDisplayPressed()
	{
	}

	[Token(Token = "0x6000CD7")]
	[Address(RVA = "0xA764D0", Offset = "0xA764D0", VA = "0xA764D0")]
	public void ConfirmButtonPressed()
	{
	}

	[Token(Token = "0x6000CD8")]
	[Address(RVA = "0xA74BF8", Offset = "0xA74BF8", VA = "0xA74BF8")]
	private void UpdateHintArrow()
	{
	}

	[Token(Token = "0x6000CD9")]
	[Address(RVA = "0xA766B4", Offset = "0xA766B4", VA = "0xA766B4")]
	public void SettingsButtonPressed()
	{
	}

	[Token(Token = "0x6000CDA")]
	[Address(RVA = "0xA7670C", Offset = "0xA7670C", VA = "0xA7670C")]
	public Smartwatch()
	{
	}

	[Token(Token = "0x6000CDB")]
	[Address(RVA = "0xA76960", Offset = "0xA76960", VA = "0xA76960")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE18C", Offset = "0x6FE18C")]
	private bool <OnEnable>b__71_0(CanvasGroup x)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CDC")]
	[Address(RVA = "0xA769DC", Offset = "0xA769DC", VA = "0xA769DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE19C", Offset = "0x6FE19C")]
	private bool <OnEnable>b__71_1(CanvasGroup x)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CDD")]
	[Address(RVA = "0xA76A58", Offset = "0xA76A58", VA = "0xA76A58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE1AC", Offset = "0x6FE1AC")]
	private bool <Update>b__89_0(CanvasGroup x)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CDE")]
	[Address(RVA = "0xA76AD4", Offset = "0xA76AD4", VA = "0xA76AD4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE1BC", Offset = "0x6FE1BC")]
	private bool <Update>b__89_1(CanvasGroup x)
	{
		return default(bool);
	}
}
[Token(Token = "0x200014B")]
public class StatusWatchPanel : MonoBehaviour
{
	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text populationText;

	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text moneyText;

	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text moneyDeltaText;

	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text moneyDeltaTextPerWeek;

	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text cityLevelText;

	[Token(Token = "0x4000A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Image cityLevelProgress;

	[Token(Token = "0x4000A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text cityLevelName;

	[Token(Token = "0x4000A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject residentialBar;

	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform residentialBarTop;

	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject residentialBarIcon;

	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject commercialBar;

	[Token(Token = "0x4000A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform commercialBarTop;

	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject commercialBarIcon;

	[Token(Token = "0x4000A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject industrialBar;

	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform industrialBarTop;

	[Token(Token = "0x4000A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject industrialBarIcon;

	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject happinessArrow;

	[Token(Token = "0x4000A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float happinessArrowMoveSpeed;

	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject waterGaugeArrow;

	[Token(Token = "0x4000A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject powerGaugeArrow;

	[Token(Token = "0x4000A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject waterBar;

	[Token(Token = "0x4000A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject powerBar;

	[Token(Token = "0x4000A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float minBarScale;

	[Token(Token = "0x4000A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float maxBarScale;

	[Token(Token = "0x4000A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject cityLevelBar;

	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform cityLevelTop;

	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject[] cityLevelIcons;

	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float minCityLevelBarScale;

	[Token(Token = "0x4000A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public float maxCityLevelBarScale;

	[Token(Token = "0x4000A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public int cityLevelsPerIcon;

	[Token(Token = "0x4000A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Transform cityDioramaRoot;

	[Token(Token = "0x4000A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Image hintIcon;

	[Token(Token = "0x4000A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Text hintText;

	[Token(Token = "0x4000A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public RectTransform hintPanel;

	[Token(Token = "0x4000A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public float hintTextPadding;

	[Token(Token = "0x4000A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Image cashDeltaIcon;

	[Token(Token = "0x4000A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Sprite cashIncreaseIcon;

	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Sprite cashDecreaseIcon;

	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public GameObject[] peoplePrefabs;

	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public Transform peopleRoot;

	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public int peoplePerRow;

	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public Vector3 peopleSpacing;

	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private List<GameObject> people;

	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Player player;

	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private MaterialPropertyBlock peopleIconProperties;

	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private int colorId;

	[Token(Token = "0x4000A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	public Color negativeIncomeColor;

	[Token(Token = "0x4000A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	public bool isMenuRoomStatusDisplay;

	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private StatusWatchPanelElement currentHoveredElement;

	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public Color boldColour;

	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private string boldOpeningTag;

	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private Dictionary<string, string> languageKeyToFormattedText;

	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public float minPeopleScale;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	public float maxPeopleScale;

	[Token(Token = "0x4000A50")]
	private const int populationPerPersonIcon = 1000;

	[Token(Token = "0x6000CDF")]
	[Address(RVA = "0xA7C338", Offset = "0xA7C338", VA = "0xA7C338")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CE0")]
	[Address(RVA = "0xA7C41C", Offset = "0xA7C41C", VA = "0xA7C41C")]
	private void SetBar(GameObject bar, Transform top, GameObject icon, float amount, bool animate)
	{
	}

	[Token(Token = "0x6000CE1")]
	[Address(RVA = "0xA7C5C8", Offset = "0xA7C5C8", VA = "0xA7C5C8")]
	private void UpdatePopulation(int populationCount)
	{
	}

	[Token(Token = "0x6000CE2")]
	[Address(RVA = "0xA7CAC0", Offset = "0xA7CAC0", VA = "0xA7CAC0")]
	private void UpdateCityLevelBar(City city)
	{
	}

	[Token(Token = "0x6000CE3")]
	[Address(RVA = "0xA7CC98", Offset = "0xA7CC98", VA = "0xA7CC98")]
	private string GetMoneyString(int amount, bool isDelta = false)
	{
		return null;
	}

	[Token(Token = "0x6000CE4")]
	[Address(RVA = "0xA7CDB4", Offset = "0xA7CDB4", VA = "0xA7CDB4")]
	private void UpdateDemandBars(bool animate)
	{
	}

	[Token(Token = "0x6000CE5")]
	[Address(RVA = "0xA7CEDC", Offset = "0xA7CEDC", VA = "0xA7CEDC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CE6")]
	[Address(RVA = "0xA7CFD4", Offset = "0xA7CFD4", VA = "0xA7CFD4")]
	private void UpdateArrow(GameObject arrow, float amount)
	{
	}

	[Token(Token = "0x6000CE7")]
	[Address(RVA = "0xA7D170", Offset = "0xA7D170", VA = "0xA7D170")]
	private void UpdateHappiness(float happinessAmount)
	{
	}

	[Token(Token = "0x6000CE8")]
	[Address(RVA = "0xA7D178", Offset = "0xA7D178", VA = "0xA7D178")]
	private void UpdateUtility(GameObject bar, UtilityState utilityState)
	{
	}

	[Token(Token = "0x6000CE9")]
	[Address(RVA = "0xA7D320", Offset = "0xA7D320", VA = "0xA7D320")]
	private void UpdateUtilityOld(GameObject arrow, UtilityState utilityState)
	{
	}

	[Token(Token = "0x6000CEA")]
	[Address(RVA = "0xA7D4A4", Offset = "0xA7D4A4", VA = "0xA7D4A4")]
	private void UpdateUtilities(City city)
	{
	}

	[Token(Token = "0x6000CEB")]
	[Address(RVA = "0xA7D4F0", Offset = "0xA7D4F0", VA = "0xA7D4F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CEC")]
	[Address(RVA = "0xA7DD08", Offset = "0xA7DD08", VA = "0xA7DD08")]
	private void SetHintText(string languageKey, [Optional] Sprite icon)
	{
	}

	[Token(Token = "0x6000CED")]
	[Address(RVA = "0xA7DF44", Offset = "0xA7DF44", VA = "0xA7DF44")]
	public void OnHoverElement(StatusWatchPanelElement element)
	{
	}

	[Token(Token = "0x6000CEE")]
	[Address(RVA = "0xA7DF4C", Offset = "0xA7DF4C", VA = "0xA7DF4C")]
	public StatusWatchPanel()
	{
	}
}
[Token(Token = "0x200014C")]
public class StatusWatchPanelElement : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float hoverMovementDuration;

	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float hoverMovementDistance;

	[Token(Token = "0x4000A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string hintMessage;

	[Token(Token = "0x4000A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6910", Offset = "0x6F6910")]
	private bool <isHovering>k__BackingField;

	[Token(Token = "0x4000A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 startingLocalPosition;

	[Token(Token = "0x4000A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private UIRoundedRectangle3D roundedRectangle3D;

	[Token(Token = "0x4000A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private StatusWatchPanel statusWatchPanel;

	[Token(Token = "0x17000282")]
	public bool isHovering
	{
		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0xA7E058", Offset = "0xA7E058", VA = "0xA7E058")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE1CC", Offset = "0x6FE1CC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0xA7E060", Offset = "0xA7E060", VA = "0xA7E060")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE1DC", Offset = "0x6FE1DC")]
		private set
		{
		}
	}

	[Token(Token = "0x6000CF1")]
	[Address(RVA = "0xA7E06C", Offset = "0xA7E06C", VA = "0xA7E06C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CF2")]
	[Address(RVA = "0xA7E100", Offset = "0xA7E100", VA = "0xA7E100", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000CF3")]
	[Address(RVA = "0xA7E1B4", Offset = "0xA7E1B4", VA = "0xA7E1B4", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000CF4")]
	[Address(RVA = "0xA7E1BC", Offset = "0xA7E1BC", VA = "0xA7E1BC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000CF5")]
	[Address(RVA = "0xA7E1C4", Offset = "0xA7E1C4", VA = "0xA7E1C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CF6")]
	[Address(RVA = "0xA7E378", Offset = "0xA7E378", VA = "0xA7E378")]
	public StatusWatchPanelElement()
	{
	}
}
[Token(Token = "0x200014D")]
public class WheelMenu : MonoBehaviour
{
	[Token(Token = "0x4000A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WheelMenu parentMenu;

	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public WheelMenu subMenu;

	[Token(Token = "0x4000A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ToolMenu menu;

	[Token(Token = "0x4000A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject elementPrefab;

	[Token(Token = "0x4000A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float innerDistance;

	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float outerDistance;

	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int numElements;

	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<WheelMenuEntry> elements;

	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float adjustment;

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int ring;

	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int startingElementPosition;

	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Color selectedColor;

	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Color color1;

	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Color color2;

	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject tooltip;

	[Token(Token = "0x4000A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Text tooltipText;

	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private GameObject tooltipReference;

	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public WheelMenuDescriptionPanel wheelMenuDescriptionPanel;

	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public ZoneDemandPanel zoneDemandPanel;

	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Image selectedArrow;

	[Token(Token = "0x4000A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public ToolMenu.Entry backButton;

	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Transform backButtonRoot;

	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public WheelMenuEntry backButtonEntry;

	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Vector3 parentCollapsePosition;

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public ToolMenu.Entry buildButton;

	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Transform buildButtonRoot;

	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public WheelMenuEntry buildButtonEntry;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public ToolMenu.Entry undoButton;

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Transform undoButtonRoot;

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public WheelMenuEntry undoButtonEntry;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GazeSphere innerGazeTrigger;

	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GazeSphere outerGazeTrigger;

	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6920", Offset = "0x6F6920")]
	private WheelMenuEntry <selectedElement>k__BackingField;

	[Token(Token = "0x4000A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private ToolMenu.Entry selectedToolInternal;

	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6930", Offset = "0x6F6930")]
	private bool <isMenuCollapsed>k__BackingField;

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x139")]
	private bool hasGazeTriggeredBeenActivated;

	[Token(Token = "0x17000283")]
	public WheelMenuEntry selectedElement
	{
		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0xAA7338", Offset = "0xAA7338", VA = "0xAA7338")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE1EC", Offset = "0x6FE1EC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0xAA7340", Offset = "0xAA7340", VA = "0xAA7340")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE1FC", Offset = "0x6FE1FC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000284")]
	public ToolMenu.Entry selectedTool
	{
		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0xAA7348", Offset = "0xAA7348", VA = "0xAA7348")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0xAA73E4", Offset = "0xAA73E4", VA = "0xAA73E4")]
		set
		{
		}
	}

	[Token(Token = "0x17000285")]
	public bool isMenuCollapsed
	{
		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0xAA748C", Offset = "0xAA748C", VA = "0xAA748C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE20C", Offset = "0x6FE20C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0xAA7494", Offset = "0xAA7494", VA = "0xAA7494")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE21C", Offset = "0x6FE21C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000286")]
	public bool isMainMenu
	{
		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0xAA74A0", Offset = "0xAA74A0", VA = "0xAA74A0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000287")]
	public bool isAnyMenuOpen
	{
		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0xAA755C", Offset = "0xAA755C", VA = "0xAA755C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000288")]
	private Player player
	{
		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0xAA7644", Offset = "0xAA7644", VA = "0xAA7644")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000D00")]
	[Address(RVA = "0xAA7694", Offset = "0xAA7694", VA = "0xAA7694")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D01")]
	[Address(RVA = "0xAA85D8", Offset = "0xAA85D8", VA = "0xAA85D8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D02")]
	[Address(RVA = "0xAA8668", Offset = "0xAA8668", VA = "0xAA8668")]
	public void SetMenu(ToolMenu newMenu, WheelMenuEntry pressedEntry)
	{
	}

	[Token(Token = "0x6000D03")]
	[Address(RVA = "0xAA882C", Offset = "0xAA882C", VA = "0xAA882C")]
	public void CollapseMenu()
	{
	}

	[Token(Token = "0x6000D04")]
	[Address(RVA = "0xAA8A9C", Offset = "0xAA8A9C", VA = "0xAA8A9C")]
	public void ExpandFromBuildButton()
	{
	}

	[Token(Token = "0x6000D05")]
	[Address(RVA = "0xAA8BBC", Offset = "0xAA8BBC", VA = "0xAA8BBC")]
	public void ExpandMenu()
	{
	}

	[Token(Token = "0x6000D06")]
	[Address(RVA = "0xAA937C", Offset = "0xAA937C", VA = "0xAA937C")]
	public void SetSubMenu(ToolMenu newMenu, WheelMenuEntry pressedEntry)
	{
	}

	[Token(Token = "0x6000D07")]
	[Address(RVA = "0xAA94BC", Offset = "0xAA94BC", VA = "0xAA94BC")]
	public void Unselect()
	{
	}

	[Token(Token = "0x6000D08")]
	[Address(RVA = "0xAA94C0", Offset = "0xAA94C0", VA = "0xAA94C0")]
	public void SelectEntry(int index)
	{
	}

	[Token(Token = "0x6000D09")]
	[Address(RVA = "0xAA953C", Offset = "0xAA953C", VA = "0xAA953C")]
	public void SelectEntry(WheelMenuEntry entry)
	{
	}

	[Token(Token = "0x6000D0A")]
	[Address(RVA = "0xAA77E8", Offset = "0xAA77E8", VA = "0xAA77E8")]
	public void RegenerateElements()
	{
	}

	[Token(Token = "0x6000D0B")]
	[Address(RVA = "0xAA8E30", Offset = "0xAA8E30", VA = "0xAA8E30")]
	private void OrganiseLayout()
	{
	}

	[Token(Token = "0x6000D0C")]
	[Address(RVA = "0xAAA44C", Offset = "0xAAA44C", VA = "0xAAA44C")]
	private void OrganiseLayoutOld()
	{
	}

	[Token(Token = "0x6000D0D")]
	[Address(RVA = "0xAAAA68", Offset = "0xAAAA68", VA = "0xAAAA68")]
	public void SetTooltip(Vector3 offset, string text, [Optional] GameObject referenceObject)
	{
	}

	[Token(Token = "0x6000D0E")]
	[Address(RVA = "0xAA81E0", Offset = "0xAA81E0", VA = "0xAA81E0")]
	public void HideTooltip()
	{
	}

	[Token(Token = "0x6000D0F")]
	[Address(RVA = "0xAA83B8", Offset = "0xAA83B8", VA = "0xAA83B8")]
	private void ShowZoneDemandPanel(bool shouldShow)
	{
	}

	[Token(Token = "0x6000D10")]
	[Address(RVA = "0xAAAD1C", Offset = "0xAAAD1C", VA = "0xAAAD1C")]
	public void ShowDescriptionPanel(Vector3 offset, ToolMenu.Entry details)
	{
	}

	[Token(Token = "0x6000D11")]
	[Address(RVA = "0xAA82C0", Offset = "0xAA82C0", VA = "0xAA82C0")]
	public void HideDescriptionPanel()
	{
	}

	[Token(Token = "0x6000D12")]
	[Address(RVA = "0xAAB3FC", Offset = "0xAAB3FC", VA = "0xAAB3FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D13")]
	[Address(RVA = "0xAAB7C8", Offset = "0xAAB7C8", VA = "0xAAB7C8")]
	public void ToggleMenu()
	{
	}

	[Token(Token = "0x6000D14")]
	[Address(RVA = "0xAAB83C", Offset = "0xAAB83C", VA = "0xAAB83C")]
	public WheelMenu()
	{
	}
}
[Token(Token = "0x200014E")]
public class WheelMenuDescriptionPanel : MonoBehaviour
{
	[Token(Token = "0x20003A5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F58F0", Offset = "0x6F58F0")]
	private sealed class <>c__DisplayClass28_0
	{
		[Token(Token = "0x4001765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public HashSet<BuildingInstance> affectedBuildings;

		[Token(Token = "0x4001766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HashSet<BuildingInstance> negativeAffectedBuildings;

		[Token(Token = "0x600176B")]
		[Address(RVA = "0xAAE294", Offset = "0xAAE294", VA = "0xAAE294")]
		public <>c__DisplayClass28_0()
		{
		}

		[Token(Token = "0x600176C")]
		[Address(RVA = "0xAAE344", Offset = "0xAAE344", VA = "0xAAE344")]
		internal void <SetDescription>b__0(BuildingInstance b)
		{
		}

		[Token(Token = "0x600176D")]
		[Address(RVA = "0xAAE420", Offset = "0xAAE420", VA = "0xAAE420")]
		internal void <SetDescription>b__1(BuildingInstance b)
		{
		}

		[Token(Token = "0x600176E")]
		[Address(RVA = "0xAAE4FC", Offset = "0xAAE4FC", VA = "0xAAE4FC")]
		internal void <SetDescription>b__2(BuildingInstance b)
		{
		}

		[Token(Token = "0x600176F")]
		[Address(RVA = "0xAAE5D8", Offset = "0xAAE5D8", VA = "0xAAE5D8")]
		internal void <SetDescription>b__3(BuildingInstance b)
		{
		}

		[Token(Token = "0x6001770")]
		[Address(RVA = "0xAAE678", Offset = "0xAAE678", VA = "0xAAE678")]
		internal void <SetDescription>b__4(BuildingInstance b)
		{
		}
	}

	[Token(Token = "0x20003A6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5900", Offset = "0x6F5900")]
	private sealed class <>c__DisplayClass29_0
	{
		[Token(Token = "0x4001767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BuildingInfo building;

		[Token(Token = "0x6001771")]
		[Address(RVA = "0xAAE29C", Offset = "0xAAE29C", VA = "0xAAE29C")]
		public <>c__DisplayClass29_0()
		{
		}

		[Token(Token = "0x6001772")]
		[Address(RVA = "0xAAE754", Offset = "0xAAE754", VA = "0xAAE754")]
		internal bool <SetDescription>b__0(BuildingInstance x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color defaultTextColour;

	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color warningTextColour;

	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color boldTextColour;

	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text title;

	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform textLineRoot;

	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject buildingCostRoot;

	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text buildCost;

	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text weeklyCost;

	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Text perWeek;

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject simpleCostRoot;

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Text simpleBuildCost;

	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Image powerUsageIcon;

	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Sprite[] powerUsageSprites;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Text powerUsageText;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Image waterUsageIcon;

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Sprite[] waterUsageSprites;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Text waterUsageText;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject powerUsageGroup;

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject waterUsageGroup;

	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public SelectedInfoBoxLine textLinePrefab;

	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private List<SelectedInfoBoxLine> textLines;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int numTextLines;

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float startingHeight;

	[Token(Token = "0x6000D15")]
	[Address(RVA = "0xAAB8AC", Offset = "0xAAB8AC", VA = "0xAAB8AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D16")]
	[Address(RVA = "0xAAB934", Offset = "0xAAB934", VA = "0xAAB934")]
	private void Clear()
	{
	}

	[Token(Token = "0x6000D17")]
	[Address(RVA = "0xAAAE80", Offset = "0xAAAE80", VA = "0xAAAE80")]
	public void SetDescription(ToolMenu.Entry details)
	{
	}

	[Token(Token = "0x6000D18")]
	[Address(RVA = "0xAACF64", Offset = "0xAACF64", VA = "0xAACF64")]
	public void SetDescription(string titleText, int cost, Sprite icon, string description)
	{
	}

	[Token(Token = "0x6000D19")]
	[Address(RVA = "0xAAD5A4", Offset = "0xAAD5A4", VA = "0xAAD5A4")]
	private string GetUsageString(int usageIndex)
	{
		return null;
	}

	[Token(Token = "0x6000D1A")]
	[Address(RVA = "0xAAD698", Offset = "0xAAD698", VA = "0xAAD698")]
	public void SetDescription(BuildingInstance building)
	{
	}

	[Token(Token = "0x6000D1B")]
	[Address(RVA = "0xAAB9E0", Offset = "0xAAB9E0", VA = "0xAAB9E0")]
	public void SetDescription(BuildingInfo building)
	{
	}

	[Token(Token = "0x6000D1C")]
	[Address(RVA = "0xAAD3AC", Offset = "0xAAD3AC", VA = "0xAAD3AC")]
	private void AdjustPanelSize()
	{
	}

	[Token(Token = "0x6000D1D")]
	[Address(RVA = "0xAAD0E0", Offset = "0xAAD0E0", VA = "0xAAD0E0")]
	private void AppendLine(Sprite icon, string text, Color textColour)
	{
	}

	[Token(Token = "0x6000D1E")]
	[Address(RVA = "0xAAE2A4", Offset = "0xAAE2A4", VA = "0xAAE2A4")]
	public WheelMenuDescriptionPanel()
	{
	}
}
[Token(Token = "0x200014F")]
public class WheelMenuEntry : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UITrapezium trapezium;

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button button;

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image icon;

	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text text;

	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject padlock;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Image newIndicator;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6940", Offset = "0x6F6940")]
	private int <lastSelectedChildIndex>k__BackingField;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6950", Offset = "0x6F6950")]
	private WheelMenu <wheelMenu>k__BackingField;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6960", Offset = "0x6F6960")]
	private ToolMenu.Entry <menuDetails>k__BackingField;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6970", Offset = "0x6F6970")]
	private bool <isLocked>k__BackingField;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int unlockLevelRequired;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Color lockedColor;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Color unlockedColor;

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject meshIcon;

	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6980", Offset = "0x6F6980")]
	private Bubble <bubble>k__BackingField;

	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool isHoveringOver;

	[Token(Token = "0x4000AA3")]
	private const float hoverProjectionAmount = 20f;

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F6990", Offset = "0x6F6990")]
	private bool <isCollapsing>k__BackingField;

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F69A0", Offset = "0x6F69A0")]
	private Vector3 <layoutPosition>k__BackingField;

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool isExpanding;

	[Token(Token = "0x4000AA7")]
	private const float meshIconTiltAngle = -15f;

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private BuildingInfo upgradedBuildingType;

	[Token(Token = "0x17000289")]
	public int lastSelectedChildIndex
	{
		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0xAAE7DC", Offset = "0xAAE7DC", VA = "0xAAE7DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE22C", Offset = "0x6FE22C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000D20")]
		[Address(RVA = "0xAAE7E4", Offset = "0xAAE7E4", VA = "0xAAE7E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE23C", Offset = "0x6FE23C")]
		set
		{
		}
	}

	[Token(Token = "0x1700028A")]
	public WheelMenu wheelMenu
	{
		[Token(Token = "0x6000D21")]
		[Address(RVA = "0xAAE7EC", Offset = "0xAAE7EC", VA = "0xAAE7EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE24C", Offset = "0x6FE24C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D22")]
		[Address(RVA = "0xAAE7F4", Offset = "0xAAE7F4", VA = "0xAAE7F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE25C", Offset = "0x6FE25C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700028B")]
	public ToolMenu.Entry menuDetails
	{
		[Token(Token = "0x6000D23")]
		[Address(RVA = "0xAAE7FC", Offset = "0xAAE7FC", VA = "0xAAE7FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE26C", Offset = "0x6FE26C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D24")]
		[Address(RVA = "0xAAE804", Offset = "0xAAE804", VA = "0xAAE804")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE27C", Offset = "0x6FE27C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700028C")]
	public bool isLocked
	{
		[Token(Token = "0x6000D25")]
		[Address(RVA = "0xAAE80C", Offset = "0xAAE80C", VA = "0xAAE80C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE28C", Offset = "0x6FE28C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D26")]
		[Address(RVA = "0xAAE814", Offset = "0xAAE814", VA = "0xAAE814")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE29C", Offset = "0x6FE29C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700028D")]
	private Player player
	{
		[Token(Token = "0x6000D27")]
		[Address(RVA = "0xAAE820", Offset = "0xAAE820", VA = "0xAAE820")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700028E")]
	public Bubble bubble
	{
		[Token(Token = "0x6000D28")]
		[Address(RVA = "0xAAE870", Offset = "0xAAE870", VA = "0xAAE870")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE2AC", Offset = "0x6FE2AC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D29")]
		[Address(RVA = "0xAAE878", Offset = "0xAAE878", VA = "0xAAE878")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE2BC", Offset = "0x6FE2BC")]
		private set
		{
		}
	}

	[Token(Token = "0x1700028F")]
	public bool isCollapsing
	{
		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0xAAE880", Offset = "0xAAE880", VA = "0xAAE880")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE2CC", Offset = "0x6FE2CC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0xAAE888", Offset = "0xAAE888", VA = "0xAAE888")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE2DC", Offset = "0x6FE2DC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000290")]
	public Vector3 layoutPosition
	{
		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0xAAE894", Offset = "0xAAE894", VA = "0xAAE894")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE2EC", Offset = "0x6FE2EC")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0xAAE8A0", Offset = "0xAAE8A0", VA = "0xAAE8A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE2FC", Offset = "0x6FE2FC")]
		set
		{
		}
	}

	[Token(Token = "0x6000D2E")]
	[Address(RVA = "0xAA9DB4", Offset = "0xAA9DB4", VA = "0xAA9DB4")]
	public void Init(WheelMenu newParentMenu, ToolMenu.Entry newMenuDetails)
	{
	}

	[Token(Token = "0x6000D2F")]
	[Address(RVA = "0xAAF2C8", Offset = "0xAAF2C8", VA = "0xAAF2C8")]
	private void GenerateMeshIcon(GameObject baseObject, bool isBuilding)
	{
	}

	[Token(Token = "0x6000D30")]
	[Address(RVA = "0xAA84C0", Offset = "0xAA84C0", VA = "0xAA84C0")]
	public void CollapseTo(Vector3 position, bool playBurstEffect = true)
	{
	}

	[Token(Token = "0x6000D31")]
	[Address(RVA = "0xAAA2FC", Offset = "0xAAA2FC", VA = "0xAAA2FC")]
	public void ExpandTo(Vector3 position)
	{
	}

	[Token(Token = "0x6000D32")]
	[Address(RVA = "0xAAFAB8", Offset = "0xAAFAB8", VA = "0xAAFAB8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000D33")]
	[Address(RVA = "0xAB01F0", Offset = "0xAB01F0", VA = "0xAB01F0")]
	private void OnButtonClicked()
	{
	}

	[Token(Token = "0x6000D34")]
	[Address(RVA = "0xAB0368", Offset = "0xAB0368", VA = "0xAB0368")]
	public void OnUnselected()
	{
	}

	[Token(Token = "0x6000D35")]
	[Address(RVA = "0xAA9718", Offset = "0xAA9718", VA = "0xAA9718")]
	public void OnSelected()
	{
	}

	[Token(Token = "0x6000D36")]
	[Address(RVA = "0xAB036C", Offset = "0xAB036C", VA = "0xAB036C")]
	public Vector3 GetSelectionArrowOffset()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000D37")]
	[Address(RVA = "0xAB0464", Offset = "0xAB0464", VA = "0xAB0464")]
	public string GenerateTextDescription()
	{
		return null;
	}

	[Token(Token = "0x6000D38")]
	[Address(RVA = "0xAB0D34", Offset = "0xAB0D34", VA = "0xAB0D34", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000D39")]
	[Address(RVA = "0xAB11CC", Offset = "0xAB11CC", VA = "0xAB11CC")]
	public void OnLevelUp(int cityLevel)
	{
	}

	[Token(Token = "0x6000D3A")]
	[Address(RVA = "0xAB11D0", Offset = "0xAB11D0", VA = "0xAB11D0", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000D3B")]
	[Address(RVA = "0xAAE8AC", Offset = "0xAAE8AC", VA = "0xAAE8AC")]
	private void UpdateLockedStatus()
	{
	}

	[Token(Token = "0x6000D3C")]
	[Address(RVA = "0xAB1270", Offset = "0xAB1270", VA = "0xAB1270")]
	public WheelMenuEntry()
	{
	}
}
[Token(Token = "0x2000150")]
public class ZoneDemandPanel : MonoBehaviour
{
	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject residentialBar;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform residentialBarTop;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject residentialBarIcon;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject commercialBar;

	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform commercialBarTop;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject commercialBarIcon;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject industrialBar;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform industrialBarTop;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject industrialBarIcon;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float minBarScale;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float maxBarScale;

	[Token(Token = "0x6000D3D")]
	[Address(RVA = "0xE09A60", Offset = "0xE09A60", VA = "0xE09A60")]
	private void SetBar(GameObject bar, Transform top, GameObject icon, float amount, bool animate)
	{
	}

	[Token(Token = "0x6000D3E")]
	[Address(RVA = "0xE09C0C", Offset = "0xE09C0C", VA = "0xE09C0C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D3F")]
	[Address(RVA = "0xE09D3C", Offset = "0xE09D3C", VA = "0xE09D3C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D40")]
	[Address(RVA = "0xE09C14", Offset = "0xE09C14", VA = "0xE09C14")]
	private void UpdateBars(bool animate)
	{
	}

	[Token(Token = "0x6000D41")]
	[Address(RVA = "0xE09D44", Offset = "0xE09D44", VA = "0xE09D44")]
	public ZoneDemandPanel()
	{
	}
}
[Token(Token = "0x2000151")]
public class ZoomIndicator : MonoBehaviour
{
	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform pivot;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float range;

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F69B0", Offset = "0x6F69B0")]
	private Player <player>k__BackingField;

	[Token(Token = "0x17000291")]
	public Player player
	{
		[Token(Token = "0x6000D42")]
		[Address(RVA = "0xE0EAF4", Offset = "0xE0EAF4", VA = "0xE0EAF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE30C", Offset = "0x6FE30C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D43")]
		[Address(RVA = "0xE0EAFC", Offset = "0xE0EAFC", VA = "0xE0EAFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE31C", Offset = "0x6FE31C")]
		set
		{
		}
	}

	[Token(Token = "0x6000D44")]
	[Address(RVA = "0xE0EB04", Offset = "0xE0EB04", VA = "0xE0EB04")]
	public void UpdateArrow(float playerHeight)
	{
	}

	[Token(Token = "0x6000D45")]
	[Address(RVA = "0xE0EC58", Offset = "0xE0EC58", VA = "0xE0EC58")]
	public ZoomIndicator()
	{
	}
}
[Token(Token = "0x2000152")]
public class BoardVisualizer : MonoBehaviour
{
	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material rock;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material scissors;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material paper;

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer rend;

	[Token(Token = "0x6000D46")]
	[Address(RVA = "0xB5AFF4", Offset = "0xB5AFF4", VA = "0xB5AFF4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D47")]
	[Address(RVA = "0xB5B04C", Offset = "0xB5B04C", VA = "0xB5B04C")]
	public void ShowRock()
	{
	}

	[Token(Token = "0x6000D48")]
	[Address(RVA = "0xB5B070", Offset = "0xB5B070", VA = "0xB5B070")]
	public void ShowScissors()
	{
	}

	[Token(Token = "0x6000D49")]
	[Address(RVA = "0xB5B094", Offset = "0xB5B094", VA = "0xB5B094")]
	public void ShowPaper()
	{
	}

	[Token(Token = "0x6000D4A")]
	[Address(RVA = "0xB5B0B8", Offset = "0xB5B0B8", VA = "0xB5B0B8")]
	public BoardVisualizer()
	{
	}
}
[Token(Token = "0x2000153")]
public class Comments : MonoBehaviour
{
	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Multiline]
	public string text;

	[Token(Token = "0x6000D4B")]
	[Address(RVA = "0xC13C94", Offset = "0xC13C94", VA = "0xC13C94")]
	public Comments()
	{
	}
}
[Token(Token = "0x2000154")]
public class GestureRecognizer : MonoBehaviour
{
	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F69D0", Offset = "0x6F69D0")]
	public GestureSO gestureToRecognize;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F6A08", Offset = "0x6F6A08")]
	public UnityEvent OnGestureRecognized;

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F6A40", Offset = "0x6F6A40")]
	private bool shouldRecognize;

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F6A8C", Offset = "0x6F6A8C")]
	public float timeBetweenRecognition;

	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F6AC4", Offset = "0x6F6AC4")]
	public float recognitionThreshold;

	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F6AFC", Offset = "0x6F6AFC")]
	public bool waitForHighConfidenceData;

	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVRSkeleton skeleton;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<OVRBone> fingerBones;

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float lastRecognition;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private OVRHand hand;

	[Token(Token = "0x6000D4C")]
	[Address(RVA = "0xB0B98C", Offset = "0xB0B98C", VA = "0xB0B98C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D4D")]
	[Address(RVA = "0xB0BBB8", Offset = "0xB0BBB8", VA = "0xB0BBB8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D4E")]
	[Address(RVA = "0xB0BCDC", Offset = "0xB0BCDC", VA = "0xB0BCDC")]
	private bool CheckRecognition()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D4F")]
	[Address(RVA = "0xB0B998", Offset = "0xB0B998", VA = "0xB0B998")]
	private void LoadSkeleton()
	{
	}

	[Token(Token = "0x6000D50")]
	[Address(RVA = "0xB0BF30", Offset = "0xB0BF30", VA = "0xB0BF30")]
	public GestureRecognizer()
	{
	}
}
[Serializable]
[Token(Token = "0x2000155")]
public class GestureSO : ScriptableObject
{
	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string gestureName;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GestureHand hand;

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Vector3> fingerPositions;

	[Token(Token = "0x6000D51")]
	[Address(RVA = "0xB0BF50", Offset = "0xB0BF50", VA = "0xB0BF50")]
	public GestureSO()
	{
	}
}
[Token(Token = "0x2000156")]
public enum GestureHand
{
	[Token(Token = "0x4000ACA")]
	LeftHand,
	[Token(Token = "0x4000ACB")]
	RightHand
}
[Token(Token = "0x2000157")]
public class GestureSaver : MonoBehaviour
{
	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public OVRSkeleton skeleton;

	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<OVRBone> fingerBones;

	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public string gestureName;

	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F6B54", Offset = "0x6F6B54")]
	public GestureHand handToSave;

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F6B8C", Offset = "0x6F6B8C")]
	public KeyCode saveKey;

	[Token(Token = "0x6000D52")]
	[Address(RVA = "0xB0BF58", Offset = "0xB0BF58", VA = "0xB0BF58")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D53")]
	[Address(RVA = "0xB0C1AC", Offset = "0xB0C1AC", VA = "0xB0C1AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D54")]
	[Address(RVA = "0xB0C1E8", Offset = "0xB0C1E8", VA = "0xB0C1E8")]
	public void SaveGesture()
	{
	}

	[Token(Token = "0x6000D55")]
	[Address(RVA = "0xB0C3EC", Offset = "0xB0C3EC", VA = "0xB0C3EC")]
	private void CreateGestureAsset([Optional] List<Vector3> data)
	{
	}

	[Token(Token = "0x6000D56")]
	[Address(RVA = "0xB0C3F0", Offset = "0xB0C3F0", VA = "0xB0C3F0")]
	public string GetSavedGestureLocation()
	{
		return null;
	}

	[Token(Token = "0x6000D57")]
	[Address(RVA = "0xB0BF5C", Offset = "0xB0BF5C", VA = "0xB0BF5C")]
	private void LoadSkeleton()
	{
	}

	[Token(Token = "0x6000D58")]
	[Address(RVA = "0xB0C450", Offset = "0xB0C450", VA = "0xB0C450")]
	public GestureSaver()
	{
	}
}
[Token(Token = "0x2000158")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x6F4C20", Offset = "0x6F4C20")]
public class FastList<T>
{
	[Token(Token = "0x20003A7")]
	public delegate int CompareFunc(T left, T right);

	[Token(Token = "0x20003A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5910", Offset = "0x6F5910")]
	private sealed class <GetEnumerator>d__25 : IEnumerator<T>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4001769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T <>2__current;

		[Token(Token = "0x400176A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FastList<T> <>4__this;

		[Token(Token = "0x400176B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__2;

		[Token(Token = "0x170003F3")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x600177A")]
			[DebuggerHidden]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x170003F4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600177C")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001777")]
		[DebuggerHidden]
		public <GetEnumerator>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6001778")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001779")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600177B")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T[] array;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int size;

	[Token(Token = "0x17000292")]
	public int Count
	{
		[Token(Token = "0x6000D5B")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000D5C")]
		set
		{
		}
	}

	[Token(Token = "0x17000293")]
	public T Item
	{
		[Token(Token = "0x6000D5D")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x6000D5E")]
		set
		{
		}
	}

	[Token(Token = "0x6000D59")]
	public FastList()
	{
	}

	[Token(Token = "0x6000D5A")]
	public FastList(int size)
	{
	}

	[Token(Token = "0x6000D5F")]
	public void Add(T item)
	{
	}

	[Token(Token = "0x6000D60")]
	public void AddUnique(T item)
	{
	}

	[Token(Token = "0x6000D61")]
	public void AddRange(IEnumerable<T> items)
	{
	}

	[Token(Token = "0x6000D62")]
	public void Insert(int index, T item)
	{
	}

	[Token(Token = "0x6000D63")]
	public bool Remove(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D64")]
	public void RemoveAt(int index)
	{
	}

	[Token(Token = "0x6000D65")]
	public bool RemoveFast(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D66")]
	public void RemoveAtFast(int index)
	{
	}

	[Token(Token = "0x6000D67")]
	public bool Contains(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D68")]
	public int IndexOf(T item)
	{
		return default(int);
	}

	[Token(Token = "0x6000D69")]
	public T Pop()
	{
		return (T)null;
	}

	[Token(Token = "0x6000D6A")]
	public T[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x6000D6B")]
	public void Sort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x6000D6C")]
	public void InsertionSort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x6000D6D")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FE32C", Offset = "0x6FE32C")]
	public IEnumerator<T> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x6000D6E")]
	public T Find(Predicate<T> match)
	{
		return (T)null;
	}

	[Token(Token = "0x6000D6F")]
	private void Allocate()
	{
	}

	[Token(Token = "0x6000D70")]
	private void Trim()
	{
	}

	[Token(Token = "0x6000D71")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000D72")]
	public void Release()
	{
	}
}
[Token(Token = "0x2000159")]
public class InspectorNoteAttribute : PropertyAttribute
{
	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string header;

	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly string message;

	[Token(Token = "0x6000D73")]
	[Address(RVA = "0xB3B284", Offset = "0xB3B284", VA = "0xB3B284")]
	public InspectorNoteAttribute(string header, string message = "")
	{
	}
}
[Token(Token = "0x200015A")]
public class InspectorCommentAttribute : PropertyAttribute
{
	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string message;

	[Token(Token = "0x6000D74")]
	[Address(RVA = "0xB3B258", Offset = "0xB3B258", VA = "0xB3B258")]
	public InspectorCommentAttribute(string message = "")
	{
	}
}
[Token(Token = "0x200015B")]
public class OvrAvatarTestDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 headPos;

	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion headRot;

	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x6000D75")]
	[Address(RVA = "0xA1C044", Offset = "0xA1C044", VA = "0xA1C044")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000D76")]
	[Address(RVA = "0xA1C1B0", Offset = "0xA1C1B0", VA = "0xA1C1B0")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000D77")]
	[Address(RVA = "0xA1C554", Offset = "0xA1C554", VA = "0xA1C554")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x6000D78")]
	[Address(RVA = "0xA1C6FC", Offset = "0xA1C6FC", VA = "0xA1C6FC", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000D79")]
	[Address(RVA = "0xA1C72C", Offset = "0xA1C72C", VA = "0xA1C72C")]
	public OvrAvatarTestDriver()
	{
	}
}
[Token(Token = "0x200015C")]
public class PoseEditHelper : MonoBehaviour
{
	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform poseRoot;

	[Token(Token = "0x6000D7A")]
	[Address(RVA = "0xC18978", Offset = "0xC18978", VA = "0xC18978")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000D7B")]
	[Address(RVA = "0xC18A04", Offset = "0xC18A04", VA = "0xC18A04")]
	private void DrawJoints(Transform joint)
	{
	}

	[Token(Token = "0x6000D7C")]
	[Address(RVA = "0xC18B70", Offset = "0xC18B70", VA = "0xC18B70")]
	public PoseEditHelper()
	{
	}
}
[Token(Token = "0x200015D")]
public class GazeTargetSpawner : MonoBehaviour
{
	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GazeTargetPrefab;

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int NumberOfDummyTargets;

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int RadiusMultiplier;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool isVisible;

	[Token(Token = "0x17000294")]
	public bool IsVisible
	{
		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0xB0AA88", Offset = "0xB0AA88", VA = "0xB0AA88")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0xB0AA90", Offset = "0xB0AA90", VA = "0xB0AA90")]
		set
		{
		}
	}

	[Token(Token = "0x6000D7F")]
	[Address(RVA = "0xB0ABB8", Offset = "0xB0ABB8", VA = "0xB0ABB8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D80")]
	[Address(RVA = "0xB0ADD4", Offset = "0xB0ADD4", VA = "0xB0ADD4")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000D81")]
	[Address(RVA = "0xB0ADDC", Offset = "0xB0ADDC", VA = "0xB0ADDC")]
	public GazeTargetSpawner()
	{
	}
}
[Token(Token = "0x200015E")]
public class RemoteLoopbackManager : MonoBehaviour
{
	[Token(Token = "0x20003A9")]
	private class PacketLatencyPair
	{
		[Token(Token = "0x400176C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] PacketData;

		[Token(Token = "0x400176D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FakeLatency;

		[Token(Token = "0x600177D")]
		[Address(RVA = "0xC20690", Offset = "0xC20690", VA = "0xC20690")]
		public PacketLatencyPair()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003AA")]
	public class SimulatedLatencySettings
	{
		[Token(Token = "0x400176E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6FAB6C", Offset = "0x6FAB6C")]
		public float FakeLatencyMax;

		[Token(Token = "0x400176F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6FAB84", Offset = "0x6FAB84")]
		public float FakeLatencyMin;

		[Token(Token = "0x4001770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6FAB9C", Offset = "0x6FAB9C")]
		public float LatencyWeight;

		[Token(Token = "0x4001771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6FABB4", Offset = "0x6FABB4")]
		public int MaxSamples;

		[Token(Token = "0x4001772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float AverageWindow;

		[Token(Token = "0x4001773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal float LatencySum;

		[Token(Token = "0x4001774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal LinkedList<float> LatencyValues;

		[Token(Token = "0x600177E")]
		[Address(RVA = "0xC20698", Offset = "0xC20698", VA = "0xC20698")]
		public float NextValue()
		{
			return default(float);
		}

		[Token(Token = "0x600177F")]
		[Address(RVA = "0xC20830", Offset = "0xC20830", VA = "0xC20830")]
		public SimulatedLatencySettings()
		{
		}
	}

	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OvrAvatar LocalAvatar;

	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar LoopbackAvatar;

	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimulatedLatencySettings LatencySettings;

	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int PacketSequence;

	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LinkedList<PacketLatencyPair> packetQueue;

	[Token(Token = "0x6000D82")]
	[Address(RVA = "0xC1FD30", Offset = "0xC1FD30", VA = "0xC1FD30")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D83")]
	[Address(RVA = "0xC1FE54", Offset = "0xC1FE54", VA = "0xC1FE54")]
	private void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x6000D84")]
	[Address(RVA = "0xC201B8", Offset = "0xC201B8", VA = "0xC201B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D85")]
	[Address(RVA = "0xC2011C", Offset = "0xC2011C", VA = "0xC2011C")]
	private void SendPacketData(byte[] data)
	{
	}

	[Token(Token = "0x6000D86")]
	[Address(RVA = "0xC20414", Offset = "0xC20414", VA = "0xC20414")]
	private void ReceivePacketData(byte[] data)
	{
	}

	[Token(Token = "0x6000D87")]
	[Address(RVA = "0xC207A4", Offset = "0xC207A4", VA = "0xC207A4")]
	public RemoteLoopbackManager()
	{
	}
}
[Token(Token = "0x200015F")]
public class P2PManager
{
	[Token(Token = "0x20003AB")]
	private enum MessageType : byte
	{
		[Token(Token = "0x4001776")]
		Update = 1
	}

	[Token(Token = "0x6000D88")]
	[Address(RVA = "0xA1DA34", Offset = "0xA1DA34", VA = "0xA1DA34")]
	public P2PManager()
	{
	}

	[Token(Token = "0x6000D89")]
	[Address(RVA = "0xA1DAF4", Offset = "0xA1DAF4", VA = "0xA1DAF4")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x6000D8A")]
	[Address(RVA = "0xA1DBD8", Offset = "0xA1DBD8", VA = "0xA1DBD8")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x6000D8B")]
	[Address(RVA = "0xA1DC5C", Offset = "0xA1DC5C", VA = "0xA1DC5C")]
	private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000D8C")]
	[Address(RVA = "0xA1DDB8", Offset = "0xA1DDB8", VA = "0xA1DDB8")]
	private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000D8D")]
	[Address(RVA = "0xA1E068", Offset = "0xA1E068", VA = "0xA1E068")]
	public void SendAvatarUpdate(ulong userID, Transform rootTransform, uint sequence, byte[] avatarPacket)
	{
	}

	[Token(Token = "0x6000D8E")]
	[Address(RVA = "0xA1E45C", Offset = "0xA1E45C", VA = "0xA1E45C")]
	public void GetRemotePackets()
	{
	}

	[Token(Token = "0x6000D8F")]
	[Address(RVA = "0xA1E700", Offset = "0xA1E700", VA = "0xA1E700")]
	public void processAvatarPacket(RemotePlayer remote, ref byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x6000D90")]
	[Address(RVA = "0xA1E22C", Offset = "0xA1E22C", VA = "0xA1E22C")]
	private void PackByte(byte b, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000D91")]
	[Address(RVA = "0xA1E630", Offset = "0xA1E630", VA = "0xA1E630")]
	private byte ReadByte(byte[] buf, ref int offset)
	{
		return default(byte);
	}

	[Token(Token = "0x6000D92")]
	[Address(RVA = "0xA1E314", Offset = "0xA1E314", VA = "0xA1E314")]
	private void PackFloat(float f, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000D93")]
	[Address(RVA = "0xA1E918", Offset = "0xA1E918", VA = "0xA1E918")]
	private float ReadFloat(byte[] buf, ref int offset)
	{
		return default(float);
	}

	[Token(Token = "0x6000D94")]
	[Address(RVA = "0xA1E274", Offset = "0xA1E274", VA = "0xA1E274")]
	private void PackULong(ulong u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000D95")]
	[Address(RVA = "0xA1E674", Offset = "0xA1E674", VA = "0xA1E674")]
	private ulong ReadULong(byte[] buf, ref int offset)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000D96")]
	[Address(RVA = "0xA1E3BC", Offset = "0xA1E3BC", VA = "0xA1E3BC")]
	private void PackUInt32(uint u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000D97")]
	[Address(RVA = "0xA1E9A4", Offset = "0xA1E9A4", VA = "0xA1E9A4")]
	private uint ReadUInt32(byte[] buf, ref int offset)
	{
		return default(uint);
	}
}
[Token(Token = "0x2000160")]
public class PlayerController : SocialPlatformManager
{
	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Camera spyCamera;

	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject cameraRig;

	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool showUI;

	[Token(Token = "0x6000D98")]
	[Address(RVA = "0xA27564", Offset = "0xA27564", VA = "0xA27564", Slot = "5")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000D99")]
	[Address(RVA = "0xA275A0", Offset = "0xA275A0", VA = "0xA275A0", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000D9A")]
	[Address(RVA = "0xA275D8", Offset = "0xA275D8", VA = "0xA275D8", Slot = "4")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000D9B")]
	[Address(RVA = "0xA27600", Offset = "0xA27600", VA = "0xA27600")]
	private void checkInput()
	{
	}

	[Token(Token = "0x6000D9C")]
	[Address(RVA = "0xA277A0", Offset = "0xA277A0", VA = "0xA277A0")]
	private void ToggleCamera()
	{
	}

	[Token(Token = "0x6000D9D")]
	[Address(RVA = "0xA27820", Offset = "0xA27820", VA = "0xA27820")]
	private void ToggleUI()
	{
	}

	[Token(Token = "0x6000D9E")]
	[Address(RVA = "0xA27874", Offset = "0xA27874", VA = "0xA27874")]
	public PlayerController()
	{
	}
}
[Token(Token = "0x2000161")]
public class RemotePlayer
{
	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong remoteUserID;

	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool stillInRoom;

	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PeerConnectionState p2pConnectionState;

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PeerConnectionState voipConnectionState;

	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar RemoteAvatar;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 receivedRootPosition;

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 receivedRootPositionPrior;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Quaternion receivedRootRotation;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Quaternion receivedRootRotationPrior;

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VoipAudioSourceHiLevel voipSource;

	[Token(Token = "0x6000D9F")]
	[Address(RVA = "0xC208B8", Offset = "0xC208B8", VA = "0xC208B8")]
	public RemotePlayer()
	{
	}
}
[Token(Token = "0x2000162")]
public class RoomManager
{
	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong roomID;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong invitedRoomID;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool amIServer;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool startupDone;

	[Token(Token = "0x6000DA0")]
	[Address(RVA = "0xAB5708", Offset = "0xAB5708", VA = "0xAB5708")]
	public RoomManager()
	{
	}

	[Token(Token = "0x6000DA1")]
	[Address(RVA = "0xAB57D4", Offset = "0xAB57D4", VA = "0xAB57D4")]
	private void AcceptingInviteCallback(Message<string> msg)
	{
	}

	[Token(Token = "0x6000DA2")]
	[Address(RVA = "0xAB5934", Offset = "0xAB5934", VA = "0xAB5934")]
	public bool CheckForInvite()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DA3")]
	[Address(RVA = "0xAB5A44", Offset = "0xAB5A44", VA = "0xAB5A44")]
	public void CreateRoom()
	{
	}

	[Token(Token = "0x6000DA4")]
	[Address(RVA = "0xAB5AF8", Offset = "0xAB5AF8", VA = "0xAB5AF8")]
	private void CreateAndJoinPrivateRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x6000DA5")]
	[Address(RVA = "0xAB5C2C", Offset = "0xAB5C2C", VA = "0xAB5C2C")]
	private void OnLaunchInviteWorkflowComplete(Message msg)
	{
	}

	[Token(Token = "0x6000DA6")]
	[Address(RVA = "0xAB5964", Offset = "0xAB5964", VA = "0xAB5964")]
	public void JoinExistingRoom(ulong roomID)
	{
	}

	[Token(Token = "0x6000DA7")]
	[Address(RVA = "0xAB5CB8", Offset = "0xAB5CB8", VA = "0xAB5CB8")]
	private void JoinRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x6000DA8")]
	[Address(RVA = "0xAB6354", Offset = "0xAB6354", VA = "0xAB6354")]
	private void RoomUpdateCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x6000DA9")]
	[Address(RVA = "0xAB6624", Offset = "0xAB6624", VA = "0xAB6624")]
	public void LeaveCurrentRoom()
	{
	}

	[Token(Token = "0x6000DAA")]
	[Address(RVA = "0xAB5F58", Offset = "0xAB5F58", VA = "0xAB5F58")]
	private void ProcessRoomData(Message<Room> msg)
	{
	}
}
[Token(Token = "0x2000163")]
public class SocialPlatformManager : MonoBehaviour
{
	[Token(Token = "0x20003AC")]
	public enum State
	{
		[Token(Token = "0x4001778")]
		INITIALIZING,
		[Token(Token = "0x4001779")]
		CHECKING_LAUNCH_STATE,
		[Token(Token = "0x400177A")]
		CREATING_A_ROOM,
		[Token(Token = "0x400177B")]
		WAITING_IN_A_ROOM,
		[Token(Token = "0x400177C")]
		JOINING_A_ROOM,
		[Token(Token = "0x400177D")]
		CONNECTED_IN_A_ROOM,
		[Token(Token = "0x400177E")]
		LEAVING_A_ROOM,
		[Token(Token = "0x400177F")]
		SHUTDOWN
	}

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 START_ROTATION_ONE;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly Vector3 START_POSITION_ONE;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 START_ROTATION_TWO;

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly Vector3 START_POSITION_TWO;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly Vector3 START_ROTATION_THREE;

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static readonly Vector3 START_POSITION_THREE;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly Vector3 START_ROTATION_FOUR;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static readonly Vector3 START_POSITION_FOUR;

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly Color BLACK;

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static readonly Color WHITE;

	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static readonly Color CYAN;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static readonly Color BLUE;

	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static readonly Color GREEN;

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float voiceCurrent;

	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private uint packetSequence;

	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar localAvatarPrefab;

	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar remoteAvatarPrefab;

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject helpPanel;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected MeshRenderer helpMesh;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material riftMaterial;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material gearMaterial;

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected OvrAvatar localAvatar;

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected GameObject localTrackingSpace;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject localPlayerHead;

	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Dictionary<ulong, RemotePlayer> remoteUsers;

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject roomSphere;

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected MeshRenderer sphereMesh;

	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject roomFloor;

	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected MeshRenderer floorMesh;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected State currentState;

	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected static SocialPlatformManager s_instance;

	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected RoomManager roomManager;

	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected P2PManager p2pManager;

	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected VoipManager voipManager;

	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected ulong myID;

	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected string myOculusID;

	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static readonly float VOIP_SCALE;

	[Token(Token = "0x17000295")]
	public static State CurrentState
	{
		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0xA78A74", Offset = "0xA78A74", VA = "0xA78A74")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x17000296")]
	public static ulong MyID
	{
		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0xA78AE8", Offset = "0xA78AE8", VA = "0xA78AE8")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x17000297")]
	public static string MyOculusID
	{
		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0xA78BC0", Offset = "0xA78BC0", VA = "0xA78BC0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000DAB")]
	[Address(RVA = "0xA76D0C", Offset = "0xA76D0C", VA = "0xA76D0C", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000DAC")]
	[Address(RVA = "0xA77098", Offset = "0xA77098", VA = "0xA77098", Slot = "5")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000DAD")]
	[Address(RVA = "0xA77774", Offset = "0xA77774", VA = "0xA77774")]
	private void InitCallback(Message<PlatformInitialize> msg)
	{
	}

	[Token(Token = "0x6000DAE")]
	[Address(RVA = "0xA77A3C", Offset = "0xA77A3C", VA = "0xA77A3C", Slot = "6")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000DAF")]
	[Address(RVA = "0xA77A40", Offset = "0xA77A40", VA = "0xA77A40")]
	private void IsEntitledCallback(Message msg)
	{
	}

	[Token(Token = "0x6000DB0")]
	[Address(RVA = "0xA77B34", Offset = "0xA77B34", VA = "0xA77B34")]
	private void GetLoggedInUserCallback(Message<User> msg)
	{
	}

	[Token(Token = "0x6000DB1")]
	[Address(RVA = "0xA78228", Offset = "0xA78228", VA = "0xA78228")]
	private void GetLoggedInUserFriendsAndRoomsCallback(Message<UserAndRoomList> msg)
	{
	}

	[Token(Token = "0x6000DB2")]
	[Address(RVA = "0xA786E8", Offset = "0xA786E8", VA = "0xA786E8")]
	public void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x6000DB3")]
	[Address(RVA = "0xA788B4", Offset = "0xA788B4", VA = "0xA788B4")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000DB4")]
	[Address(RVA = "0xA78A04", Offset = "0xA78A04", VA = "0xA78A04")]
	public void AddUser(ulong userID, ref RemotePlayer remoteUser)
	{
	}

	[Token(Token = "0x6000DB5")]
	[Address(RVA = "0xA77398", Offset = "0xA77398", VA = "0xA77398")]
	public void LogOutputLine(string line)
	{
	}

	[Token(Token = "0x6000DB6")]
	[Address(RVA = "0xA778D0", Offset = "0xA778D0", VA = "0xA778D0")]
	public static void TerminateWithError(Message msg)
	{
	}

	[Token(Token = "0x6000DBA")]
	[Address(RVA = "0xA7744C", Offset = "0xA7744C", VA = "0xA7744C")]
	public static void TransitionToState(State newState)
	{
	}

	[Token(Token = "0x6000DBB")]
	[Address(RVA = "0xA78CD4", Offset = "0xA78CD4", VA = "0xA78CD4")]
	private static void SetSphereColorForState()
	{
	}

	[Token(Token = "0x6000DBC")]
	[Address(RVA = "0xA78E54", Offset = "0xA78E54", VA = "0xA78E54")]
	public static void SetFloorColorForState(bool host)
	{
	}

	[Token(Token = "0x6000DBD")]
	[Address(RVA = "0xA78F3C", Offset = "0xA78F3C", VA = "0xA78F3C")]
	public static void MarkAllRemoteUsersAsNotInRoom()
	{
	}

	[Token(Token = "0x6000DBE")]
	[Address(RVA = "0xA79060", Offset = "0xA79060", VA = "0xA79060")]
	public static void MarkRemoteUserInRoom(ulong userID)
	{
	}

	[Token(Token = "0x6000DBF")]
	[Address(RVA = "0xA79130", Offset = "0xA79130", VA = "0xA79130")]
	public static void ForgetRemoteUsersNotInRoom()
	{
	}

	[Token(Token = "0x6000DC0")]
	[Address(RVA = "0xA77980", Offset = "0xA77980", VA = "0xA77980")]
	public static void LogOutput(string line)
	{
	}

	[Token(Token = "0x6000DC1")]
	[Address(RVA = "0xA7955C", Offset = "0xA7955C", VA = "0xA7955C")]
	public static bool IsUserInRoom(ulong userID)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DC2")]
	[Address(RVA = "0xA795E8", Offset = "0xA795E8", VA = "0xA795E8")]
	public static void AddRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x6000DC3")]
	[Address(RVA = "0xA79380", Offset = "0xA79380", VA = "0xA79380")]
	public static void RemoveRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x6000DC4")]
	[Address(RVA = "0xA797BC", Offset = "0xA797BC", VA = "0xA797BC")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000DC5")]
	[Address(RVA = "0xA76C84", Offset = "0xA76C84", VA = "0xA76C84")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x6FE390", Offset = "0x6FE390")]
	public static void MicFilter(short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels)
	{
	}

	[Token(Token = "0x6000DC6")]
	[Address(RVA = "0xA798F8", Offset = "0xA798F8", VA = "0xA798F8")]
	public static RemotePlayer GetRemoteUser(ulong userID)
	{
		return null;
	}

	[Token(Token = "0x6000DC7")]
	[Address(RVA = "0xA799C0", Offset = "0xA799C0", VA = "0xA799C0")]
	public SocialPlatformManager()
	{
	}
}
[Token(Token = "0x2000164")]
public class VoipManager
{
	[Token(Token = "0x6000DC9")]
	[Address(RVA = "0xAA1ECC", Offset = "0xAA1ECC", VA = "0xAA1ECC")]
	public VoipManager()
	{
	}

	[Token(Token = "0x6000DCA")]
	[Address(RVA = "0xAA1F8C", Offset = "0xAA1F8C", VA = "0xAA1F8C")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x6000DCB")]
	[Address(RVA = "0xAA2070", Offset = "0xAA2070", VA = "0xAA2070")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x6000DCC")]
	[Address(RVA = "0xAA20F4", Offset = "0xAA20F4", VA = "0xAA20F4")]
	private void VoipConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000DCD")]
	[Address(RVA = "0xAA2250", Offset = "0xAA2250", VA = "0xAA2250")]
	private void VoipStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}
}
[Token(Token = "0x2000165")]
public class GazeTarget : MonoBehaviour
{
	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarGazeTargetType Type;

	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ovrAvatarGazeTargets RuntimeTargetList;

	[Token(Token = "0x6000DCE")]
	[Address(RVA = "0xB0A714", Offset = "0xB0A714", VA = "0xB0A714")]
	static GazeTarget()
	{
	}

	[Token(Token = "0x6000DCF")]
	[Address(RVA = "0xB0A784", Offset = "0xB0A784", VA = "0xB0A784")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DD0")]
	[Address(RVA = "0xB0A900", Offset = "0xB0A900", VA = "0xB0A900")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DD1")]
	[Address(RVA = "0xB0A964", Offset = "0xB0A964", VA = "0xB0A964")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000DD2")]
	[Address(RVA = "0xB0A7C0", Offset = "0xB0A7C0", VA = "0xB0A7C0")]
	private void UpdateGazeTarget()
	{
	}

	[Token(Token = "0x6000DD3")]
	[Address(RVA = "0xB0AA20", Offset = "0xB0AA20", VA = "0xB0AA20")]
	private ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x6000DD4")]
	[Address(RVA = "0xB0AA80", Offset = "0xB0AA80", VA = "0xB0AA80")]
	public GazeTarget()
	{
	}
}
[Serializable]
[Token(Token = "0x2000166")]
public class AvatarLayer
{
	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int layerIndex;

	[Token(Token = "0x6000DD5")]
	[Address(RVA = "0xB559C0", Offset = "0xB559C0", VA = "0xB559C0")]
	public AvatarLayer()
	{
	}
}
[Serializable]
[Token(Token = "0x2000167")]
public class PacketRecordSettings
{
	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal bool RecordingFrames;

	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float UpdateRate;

	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal float AccumulatedTime;

	[Token(Token = "0x6000DD6")]
	[Address(RVA = "0xA1EA30", Offset = "0xA1EA30", VA = "0xA1EA30")]
	public PacketRecordSettings()
	{
	}
}
[Token(Token = "0x2000168")]
public class OvrAvatar : MonoBehaviour
{
	[Token(Token = "0x20003AD")]
	public class PacketEventArgs : EventArgs
	{
		[Token(Token = "0x4001780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly OvrAvatarPacket Packet;

		[Token(Token = "0x6001780")]
		[Address(RVA = "0xC56A64", Offset = "0xC56A64", VA = "0xC56A64")]
		public PacketEventArgs(OvrAvatarPacket packet)
		{
		}
	}

	[Token(Token = "0x20003AE")]
	public enum HandType
	{
		[Token(Token = "0x4001782")]
		Right,
		[Token(Token = "0x4001783")]
		Left,
		[Token(Token = "0x4001784")]
		Max
	}

	[Token(Token = "0x20003AF")]
	public enum HandJoint
	{
		[Token(Token = "0x4001786")]
		HandBase,
		[Token(Token = "0x4001787")]
		IndexBase,
		[Token(Token = "0x4001788")]
		IndexTip,
		[Token(Token = "0x4001789")]
		ThumbBase,
		[Token(Token = "0x400178A")]
		ThumbTip,
		[Token(Token = "0x400178B")]
		Max
	}

	[Token(Token = "0x20003B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5920", Offset = "0x6F5920")]
	private sealed class <WaitForMouthAudioSource>d__137 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400178C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400178D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400178E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatar <>4__this;

		[Token(Token = "0x170003F5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001784")]
			[Address(RVA = "0xC58D64", Offset = "0xC58D64", VA = "0xC58D64", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001786")]
			[Address(RVA = "0xC58DCC", Offset = "0xC58DCC", VA = "0xC58DCC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001781")]
		[Address(RVA = "0xC58798", Offset = "0xC58798", VA = "0xC58798")]
		[DebuggerHidden]
		public <WaitForMouthAudioSource>d__137(int <>1__state)
		{
		}

		[Token(Token = "0x6001782")]
		[Address(RVA = "0xC58BD4", Offset = "0xC58BD4", VA = "0xC58BD4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001783")]
		[Address(RVA = "0xC58BD8", Offset = "0xC58BD8", VA = "0xC58BD8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001785")]
		[Address(RVA = "0xC58D6C", Offset = "0xC58D6C", VA = "0xC58D6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6F6BD4", Offset = "0x6F6BD4")]
	public IntPtr sdkAvatar;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string oculusUserID;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatarDriver Driver;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6F6C0C", Offset = "0x6F6C0C")]
	public bool EnableBody;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool EnableHands;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool EnableBase;

	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool EnableExpressive;

	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6F6C44", Offset = "0x6F6C44")]
	public bool RecordPackets;

	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool UseSDKPackets;

	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PacketRecordSettings PacketSettings;

	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6F6C7C", Offset = "0x6F6C7C")]
	public bool StartWithControllers;

	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AvatarLayer FirstPersonLayer;

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AvatarLayer ThirdPersonLayer;

	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool ShowFirstPerson;

	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool ShowThirdPerson;

	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	internal ovrAvatarCapabilities Capabilities;

	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6F6CB4", Offset = "0x6F6CB4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F6CB4", Offset = "0x6F6CB4")]
	[SerializeField]
	internal ovrAvatarAssetLevelOfDetail LevelOfDetail;

	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F6D24", Offset = "0x6F6D24")]
	private bool CombineMeshes;

	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F6D5C", Offset = "0x6F6D5C")]
	public bool UseTransparentRenderQueue;

	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6F6D94", Offset = "0x6F6D94")]
	public Shader Monochrome_SurfaceShader;

	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Shader Monochrome_SurfaceShader_SelfOccluding;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Shader Monochrome_SurfaceShader_PBS;

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Shader Skinshaded_SurfaceShader_SingleComponent;

	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Shader Skinshaded_VertFrag_SingleComponent;

	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Shader Skinshaded_VertFrag_CombinedMesh;

	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Shader Skinshaded_Expressive_SurfaceShader_SingleComponent;

	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Shader Skinshaded_Expressive_VertFrag_SingleComponent;

	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Shader Skinshaded_Expressive_VertFrag_CombinedMesh;

	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Shader Loader_VertFrag_CombinedMesh;

	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Shader EyeLens;

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Shader ControllerShader;

	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6F6DCC", Offset = "0x6F6DCC")]
	public bool CanOwnMicrophone;

	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F6E04", Offset = "0x6F6E04")]
	public bool EnableLaughter;

	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject MouthAnchor;

	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform LeftHandCustomPose;

	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform RightHandCustomPose;

	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private HashSet<ulong> assetLoadingIds;

	[Token(Token = "0x4000B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool assetsFinishedLoading;

	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private OvrAvatarMaterialManager materialManager;

	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool waitingForCombinedMesh;

	[Token(Token = "0x4000B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool doneExpressiveGlobalInit;

	[Token(Token = "0x4000B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector4 clothingAlphaOffset;

	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ulong clothingAlphaTexture;

	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private OVRLipSyncMicInput micInput;

	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private OVRLipSyncContext lipsyncContext;

	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private OVRLipSync.Frame currentFrame;

	[Token(Token = "0x4000B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float[] visemes;

	[Token(Token = "0x4000B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private AudioSource audioSource;

	[Token(Token = "0x4000B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private ONSPAudioSource spatializedSource;

	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private List<float[]> voiceUpdates;

	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ovrAvatarVisemes RuntimeVisemes;

	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Transform cachedLeftHandCustomPose;

	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Transform[] cachedCustomLeftHandJoints;

	[Token(Token = "0x4000B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private ovrAvatarTransform[] cachedLeftHandTransforms;

	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Transform cachedRightHandCustomPose;

	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Transform[] cachedCustomRightHandJoints;

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private ovrAvatarTransform[] cachedRightHandTransforms;

	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool showLeftController;

	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
	private bool showRightController;

	[Token(Token = "0x4000B5A")]
	private const bool USE_MOBILE_TEXTURE_FORMAT = true;

	[Token(Token = "0x4000B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 MOUTH_HEAD_OFFSET;

	[Token(Token = "0x4000B5C")]
	private const string MOUTH_HELPER_NAME = "MouthAnchor";

	[Token(Token = "0x4000B5D")]
	private const int VISEME_COUNT = 16;

	[Token(Token = "0x4000B5E")]
	private const float ACTION_UNIT_ONSET_SPEED = 30f;

	[Token(Token = "0x4000B5F")]
	private const float ACTION_UNIT_FALLOFF_SPEED = 20f;

	[Token(Token = "0x4000B60")]
	private const float VISEME_LEVEL_MULTIPLIER = 1.5f;

	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	internal ulong oculusUserIDInternal;

	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	internal OvrAvatarBase Base;

	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	internal OvrAvatarTouchController ControllerLeft;

	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	internal OvrAvatarTouchController ControllerRight;

	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	internal OvrAvatarBody Body;

	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	internal OvrAvatarHand HandLeft;

	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	internal OvrAvatarHand HandRight;

	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	internal ovrAvatarLookAndFeelVersion LookAndFeelVersion;

	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	internal ovrAvatarLookAndFeelVersion FallbackLookAndFeelVersion;

	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private OvrAvatarPacket CurrentUnityPacket;

	[Token(Token = "0x4000B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public EventHandler<PacketEventArgs> PacketRecorded;

	[Token(Token = "0x4000B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string[,] HandJoints;

	[Token(Token = "0x4000B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Vector3 MOUTH_POSITION_OFFSET;

	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static string VOICE_PROPERTY;

	[Token(Token = "0x4000B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static string MOUTH_POSITION_PROPERTY;

	[Token(Token = "0x4000B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static string MOUTH_DIRECTION_PROPERTY;

	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static string MOUTH_SCALE_PROPERTY;

	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static float MOUTH_SCALE_GLOBAL;

	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static float MOUTH_MAX_GLOBAL;

	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static string NECK_JONT;

	[Token(Token = "0x4000B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public float VoiceAmplitude;

	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public bool EnableMouthVertexAnimation;

	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static ovrAvatarLights ovrLights;

	[Token(Token = "0x6000DD7")]
	[Address(RVA = "0xC533D4", Offset = "0xC533D4", VA = "0xC533D4")]
	static OvrAvatar()
	{
	}

	[Token(Token = "0x6000DD8")]
	[Address(RVA = "0xC5373C", Offset = "0xC5373C", VA = "0xC5373C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000DD9")]
	[Address(RVA = "0xC537C8", Offset = "0xC537C8", VA = "0xC537C8")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x6000DDA")]
	[Address(RVA = "0xC53834", Offset = "0xC53834", VA = "0xC53834")]
	public void CombinedMeshLoadedCallback(IntPtr assetPtr)
	{
	}

	[Token(Token = "0x6000DDB")]
	[Address(RVA = "0xC5395C", Offset = "0xC5395C", VA = "0xC5395C")]
	private OvrAvatarSkinnedMeshRenderComponent AddSkinnedMeshRenderComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender)
	{
		return null;
	}

	[Token(Token = "0x6000DDC")]
	[Address(RVA = "0xC53A40", Offset = "0xC53A40", VA = "0xC53A40")]
	private OvrAvatarSkinnedMeshRenderPBSComponent AddSkinnedMeshRenderPBSComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS)
	{
		return null;
	}

	[Token(Token = "0x6000DDD")]
	[Address(RVA = "0xC53B20", Offset = "0xC53B20", VA = "0xC53B20")]
	private OvrAvatarSkinnedMeshPBSV2RenderComponent AddSkinnedMeshRenderPBSV2Component(IntPtr renderPart, GameObject go, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRenderPBSV2, bool isBodyPartZero, bool isControllerModel)
	{
		return null;
	}

	[Token(Token = "0x6000DDE")]
	[Address(RVA = "0xC53D08", Offset = "0xC53D08", VA = "0xC53D08")]
	public static IntPtr GetRenderPart(ovrAvatarComponent component, uint renderPartIndex)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000DDF")]
	[Address(RVA = "0xC53DD0", Offset = "0xC53DD0", VA = "0xC53DD0")]
	private static string GetRenderPartName(ovrAvatarComponent component, uint renderPartIndex)
	{
		return null;
	}

	[Token(Token = "0x6000DE0")]
	[Address(RVA = "0xC53E54", Offset = "0xC53E54", VA = "0xC53E54")]
	internal static void ConvertTransform(float[] transform, ref ovrAvatarTransform target)
	{
	}

	[Token(Token = "0x6000DE1")]
	[Address(RVA = "0xC53F3C", Offset = "0xC53F3C", VA = "0xC53F3C")]
	internal static void ConvertTransform(ovrAvatarTransform transform, Transform target)
	{
	}

	[Token(Token = "0x6000DE2")]
	[Address(RVA = "0xC53FC8", Offset = "0xC53FC8", VA = "0xC53FC8")]
	public static ovrAvatarTransform CreateOvrAvatarTransform(Vector3 position, Quaternion orientation)
	{
		return default(ovrAvatarTransform);
	}

	[Token(Token = "0x6000DE3")]
	[Address(RVA = "0xC540E4", Offset = "0xC540E4", VA = "0xC540E4")]
	private static ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x6000DE4")]
	[Address(RVA = "0xC54144", Offset = "0xC54144", VA = "0xC54144")]
	private void BuildRenderComponents()
	{
	}

	[Token(Token = "0x6000DE5")]
	private void AddAvatarComponent<T>(ref T root, ovrAvatarComponent nativeComponent) where T : OvrAvatarComponent
	{
	}

	[Token(Token = "0x6000DE6")]
	[Address(RVA = "0xC545C8", Offset = "0xC545C8", VA = "0xC545C8")]
	private void UpdateCustomPoses()
	{
	}

	[Token(Token = "0x6000DE7")]
	[Address(RVA = "0xC54928", Offset = "0xC54928", VA = "0xC54928")]
	private static bool UpdatePoseRoot(Transform poseRoot, ref Transform cachedPoseRoot, ref Transform[] cachedPoseJoints, ref ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DE8")]
	[Address(RVA = "0xC54A8C", Offset = "0xC54A8C", VA = "0xC54A8C")]
	private static bool UpdateTransforms(Transform[] joints, ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DE9")]
	[Address(RVA = "0xC54D54", Offset = "0xC54D54", VA = "0xC54D54")]
	private static void OrderJoints(Transform transform, List<Transform> joints)
	{
	}

	[Token(Token = "0x6000DEA")]
	[Address(RVA = "0xC54E40", Offset = "0xC54E40", VA = "0xC54E40")]
	private void AvatarSpecificationCallback(IntPtr avatarSpecification)
	{
	}

	[Token(Token = "0x6000DEB")]
	[Address(RVA = "0xC55444", Offset = "0xC55444", VA = "0xC55444")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DEC")]
	[Address(RVA = "0xC55744", Offset = "0xC55744", VA = "0xC55744")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DED")]
	[Address(RVA = "0xC5615C", Offset = "0xC5615C", VA = "0xC5615C")]
	public static ovrAvatarHandInputState CreateInputState(ovrAvatarTransform transform, OvrAvatarDriver.ControllerPose pose)
	{
		return default(ovrAvatarHandInputState);
	}

	[Token(Token = "0x6000DEE")]
	[Address(RVA = "0xC561B0", Offset = "0xC561B0", VA = "0xC561B0")]
	public void ShowControllers(bool show)
	{
	}

	[Token(Token = "0x6000DEF")]
	[Address(RVA = "0xC550B8", Offset = "0xC550B8", VA = "0xC550B8")]
	public void ShowLeftController(bool show)
	{
	}

	[Token(Token = "0x6000DF0")]
	[Address(RVA = "0xC55154", Offset = "0xC55154", VA = "0xC55154")]
	public void ShowRightController(bool show)
	{
	}

	[Token(Token = "0x6000DF1")]
	[Address(RVA = "0xC561E0", Offset = "0xC561E0", VA = "0xC561E0")]
	public void UpdateVoiceVisualization(float[] voiceSamples)
	{
	}

	[Token(Token = "0x6000DF2")]
	[Address(RVA = "0xC55AB8", Offset = "0xC55AB8", VA = "0xC55AB8")]
	private void RecordFrame()
	{
	}

	[Token(Token = "0x6000DF3")]
	[Address(RVA = "0xC56428", Offset = "0xC56428", VA = "0xC56428")]
	private void RecordUnityFrame()
	{
	}

	[Token(Token = "0x6000DF4")]
	[Address(RVA = "0xC56248", Offset = "0xC56248", VA = "0xC56248")]
	private void RecordSDKFrame()
	{
	}

	[Token(Token = "0x6000DF5")]
	[Address(RVA = "0xC56AE0", Offset = "0xC56AE0", VA = "0xC56AE0")]
	private void AddRenderParts(OvrAvatarComponent ovrComponent, ovrAvatarComponent component, Transform parent)
	{
	}

	[Token(Token = "0x6000DF6")]
	[Address(RVA = "0xC56EE4", Offset = "0xC56EE4", VA = "0xC56EE4")]
	public void RefreshBodyParts()
	{
	}

	[Token(Token = "0x6000DF7")]
	[Address(RVA = "0xC5726C", Offset = "0xC5726C", VA = "0xC5726C")]
	public ovrAvatarBodyComponent? GetBodyComponent()
	{
		return null;
	}

	[Token(Token = "0x6000DF8")]
	[Address(RVA = "0xC573AC", Offset = "0xC573AC", VA = "0xC573AC")]
	public Transform GetHandTransform(HandType hand, HandJoint joint)
	{
		return null;
	}

	[Token(Token = "0x6000DF9")]
	[Address(RVA = "0xC57564", Offset = "0xC57564", VA = "0xC57564")]
	public void GetPointingDirection(HandType hand, ref Vector3 forward, ref Vector3 up)
	{
	}

	[Token(Token = "0x6000DFA")]
	[Address(RVA = "0xC55C58", Offset = "0xC55C58", VA = "0xC55C58")]
	private void UpdateVoiceBehavior()
	{
	}

	[Token(Token = "0x6000DFB")]
	[Address(RVA = "0xC5763C", Offset = "0xC5763C", VA = "0xC5763C")]
	private bool IsValidMic()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DFC")]
	[Address(RVA = "0xC55AC8", Offset = "0xC55AC8", VA = "0xC55AC8")]
	private void InitPostLoad()
	{
	}

	[Token(Token = "0x6000DFD")]
	[Address(RVA = "0xC57730", Offset = "0xC57730", VA = "0xC57730")]
	private static void ExpressiveGlobalInit()
	{
	}

	[Token(Token = "0x6000DFE")]
	[Address(RVA = "0xC57CDC", Offset = "0xC57CDC", VA = "0xC57CDC")]
	private static void InitializeLights()
	{
	}

	[Token(Token = "0x6000DFF")]
	[Address(RVA = "0xC5819C", Offset = "0xC5819C", VA = "0xC5819C")]
	private static ovrAvatarLight CreateLightDirectional(uint id, Vector3 direction, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x6000E00")]
	[Address(RVA = "0xC58214", Offset = "0xC58214", VA = "0xC58214")]
	private static ovrAvatarLight CreateLightPoint(uint id, Vector3 position, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x6000E01")]
	[Address(RVA = "0xC58290", Offset = "0xC58290", VA = "0xC58290")]
	private static ovrAvatarLight CreateLightSpot(uint id, Vector3 position, Vector3 direction, float spotAngleDeg, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x6000E02")]
	[Address(RVA = "0xC55FF0", Offset = "0xC55FF0", VA = "0xC55FF0")]
	private void UpdateExpressive()
	{
	}

	[Token(Token = "0x6000E03")]
	[Address(RVA = "0xC577EC", Offset = "0xC577EC", VA = "0xC577EC")]
	private void ConfigureHelpers()
	{
	}

	[Token(Token = "0x6000E04")]
	[Address(RVA = "0xC58728", Offset = "0xC58728", VA = "0xC58728")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FE3F4", Offset = "0x6FE3F4")]
	private IEnumerator WaitForMouthAudioSource()
	{
		return null;
	}

	[Token(Token = "0x6000E05")]
	[Address(RVA = "0xC587C4", Offset = "0xC587C4", VA = "0xC587C4")]
	public void DestroyHelperObjects()
	{
	}

	[Token(Token = "0x6000E06")]
	[Address(RVA = "0xC585CC", Offset = "0xC585CC", VA = "0xC585CC")]
	public GameObject CreateHelperObject(Transform parent, Vector3 localPositionOffset, string helperName, string helperTag = "")
	{
		return null;
	}

	[Token(Token = "0x6000E07")]
	[Address(RVA = "0xC5888C", Offset = "0xC5888C", VA = "0xC5888C")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000E08")]
	[Address(RVA = "0xC58978", Offset = "0xC58978", VA = "0xC58978")]
	public void UpdateVoiceData(float[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000E09")]
	[Address(RVA = "0xC58360", Offset = "0xC58360", VA = "0xC58360")]
	private void UpdateFacewave()
	{
	}

	[Token(Token = "0x6000E0A")]
	[Address(RVA = "0xC58A64", Offset = "0xC58A64", VA = "0xC58A64")]
	public OvrAvatar()
	{
	}
}
[Token(Token = "0x2000169")]
public class OvrAvatarAsset
{
	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong assetID;

	[Token(Token = "0x6000E0B")]
	[Address(RVA = "0xC58DD4", Offset = "0xC58DD4", VA = "0xC58DD4")]
	public OvrAvatarAsset()
	{
	}
}
[Token(Token = "0x200016A")]
public class OvrAvatarAssetMesh : OvrAvatarAsset
{
	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAvatarSkinnedMeshPose skinnedBindPose;

	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] jointNames;

	[Token(Token = "0x6000E0C")]
	[Address(RVA = "0xC58E84", Offset = "0xC58E84", VA = "0xC58E84")]
	public OvrAvatarAssetMesh(ulong _assetId, IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x6000E0D")]
	[Address(RVA = "0xC5A164", Offset = "0xC5A164", VA = "0xC5A164")]
	private void LoadSubmeshes(IntPtr asset, IntPtr indexBufferPtr, ulong indexCount)
	{
	}

	[Token(Token = "0x6000E0E")]
	[Address(RVA = "0xC59D08", Offset = "0xC59D08", VA = "0xC59D08")]
	private void LoadBlendShapes(IntPtr asset, long vertexCount)
	{
	}

	[Token(Token = "0x6000E0F")]
	[Address(RVA = "0xC59AAC", Offset = "0xC59AAC", VA = "0xC59AAC")]
	private void SetSkinnedBindPose(IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x6000E10")]
	[Address(RVA = "0xC59B7C", Offset = "0xC59B7C", VA = "0xC59B7C")]
	private void GetVertexAndIndexData(IntPtr asset, ovrAvatarAssetType meshType, out long vertexCount, out IntPtr vertexBuffer, out uint indexCount, out IntPtr indexBuffer)
	{
	}

	[Token(Token = "0x6000E11")]
	[Address(RVA = "0xC5A3C8", Offset = "0xC5A3C8", VA = "0xC5A3C8")]
	public SkinnedMeshRenderer CreateSkinnedMeshRendererOnObject(GameObject target)
	{
		return null;
	}
}
[Token(Token = "0x200016B")]
public class OvrAvatarAssetTexture : OvrAvatarAsset
{
	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D texture;

	[Token(Token = "0x4000B7D")]
	private const int ASTCHeaderSize = 16;

	[Token(Token = "0x6000E12")]
	[Address(RVA = "0xC5A948", Offset = "0xC5A948", VA = "0xC5A948")]
	public OvrAvatarAssetTexture(ulong _assetId, IntPtr asset)
	{
	}
}
[Token(Token = "0x200016C")]
public class OvrAvatarBase : OvrAvatarComponent
{
	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ovrAvatarBaseComponent component;

	[Token(Token = "0x6000E13")]
	[Address(RVA = "0xC5ABB0", Offset = "0xC5ABB0", VA = "0xC5ABB0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E14")]
	[Address(RVA = "0xC5AFB8", Offset = "0xC5AFB8", VA = "0xC5AFB8")]
	public OvrAvatarBase()
	{
	}
}
[Token(Token = "0x200016D")]
public class OvrAvatarBody : OvrAvatarComponent
{
	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ovrAvatarBodyComponent component;

	[Token(Token = "0x6000E15")]
	[Address(RVA = "0xC57110", Offset = "0xC57110", VA = "0xC57110")]
	public ovrAvatarComponent? GetNativeAvatarComponent()
	{
		return null;
	}

	[Token(Token = "0x6000E16")]
	[Address(RVA = "0xC5B0B4", Offset = "0xC5B0B4", VA = "0xC5B0B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E17")]
	[Address(RVA = "0xC5B1D0", Offset = "0xC5B1D0", VA = "0xC5B1D0")]
	public OvrAvatarBody()
	{
	}
}
[Token(Token = "0x200016E")]
public class OvrAvatarComponent : MonoBehaviour
{
	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] LayerKeywords;

	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string[] LayerSampleModeParameters;

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string[] LayerBlendModeParameters;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string[] LayerMaskTypeParameters;

	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly string[] LayerColorParameters;

	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly string[] LayerSurfaceParameters;

	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly string[] LayerSampleParametersParameters;

	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly string[] LayerMaskParametersParameters;

	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly string[] LayerMaskAxisParameters;

	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Material, ovrAvatarMaterialState> materialStates;

	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<OvrAvatarRenderComponent> RenderParts;

	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected OvrAvatar owner;

	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected ovrAvatarComponent nativeAvatarComponent;

	[Token(Token = "0x6000E18")]
	[Address(RVA = "0xC5B234", Offset = "0xC5B234", VA = "0xC5B234")]
	public void SetOvrAvatarOwner(OvrAvatar ovrAvatarOwner)
	{
	}

	[Token(Token = "0x6000E19")]
	[Address(RVA = "0xC5ACCC", Offset = "0xC5ACCC", VA = "0xC5ACCC")]
	public void UpdateAvatar(IntPtr nativeComponent)
	{
	}

	[Token(Token = "0x6000E1A")]
	[Address(RVA = "0xC5B23C", Offset = "0xC5B23C", VA = "0xC5B23C")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x6000E1B")]
	[Address(RVA = "0xC5B29C", Offset = "0xC5B29C", VA = "0xC5B29C")]
	public void UpdateAvatarMaterial(Material mat, ovrAvatarMaterialState matState)
	{
	}

	[Token(Token = "0x6000E1C")]
	[Address(RVA = "0xC5BA80", Offset = "0xC5BA80", VA = "0xC5BA80")]
	public static Texture2D GetLoadedTexture(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x6000E1D")]
	[Address(RVA = "0xC5B01C", Offset = "0xC5B01C", VA = "0xC5B01C")]
	public OvrAvatarComponent()
	{
	}
}
[Token(Token = "0x200016F")]
public abstract class OvrAvatarDriver : MonoBehaviour
{
	[Token(Token = "0x20003B1")]
	public enum PacketMode
	{
		[Token(Token = "0x4001790")]
		SDK,
		[Token(Token = "0x4001791")]
		Unity
	}

	[Token(Token = "0x20003B2")]
	public struct ControllerPose
	{
		[Token(Token = "0x4001792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarButton buttons;

		[Token(Token = "0x4001793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ovrAvatarTouch touches;

		[Token(Token = "0x4001794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 joystickPosition;

		[Token(Token = "0x4001795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float indexTrigger;

		[Token(Token = "0x4001796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float handTrigger;

		[Token(Token = "0x4001797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isActive;

		[Token(Token = "0x6001787")]
		[Address(RVA = "0xC5CC28", Offset = "0xC5CC28", VA = "0xC5CC28")]
		public static ControllerPose Interpolate(ControllerPose a, ControllerPose b, float t)
		{
			return default(ControllerPose);
		}
	}

	[Token(Token = "0x20003B3")]
	public struct PoseFrame
	{
		[Token(Token = "0x4001798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 headPosition;

		[Token(Token = "0x4001799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion headRotation;

		[Token(Token = "0x400179A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 handLeftPosition;

		[Token(Token = "0x400179B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion handLeftRotation;

		[Token(Token = "0x400179C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 handRightPosition;

		[Token(Token = "0x400179D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion handRightRotation;

		[Token(Token = "0x400179E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float voiceAmplitude;

		[Token(Token = "0x400179F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerPose controllerLeftPose;

		[Token(Token = "0x40017A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ControllerPose controllerRightPose;

		[Token(Token = "0x6001788")]
		[Address(RVA = "0xC566AC", Offset = "0xC566AC", VA = "0xC566AC")]
		public static PoseFrame Interpolate(PoseFrame a, PoseFrame b, float t)
		{
			return default(PoseFrame);
		}
	}

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PacketMode Mode;

	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected PoseFrame CurrentPose;

	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private ovrAvatarControllerType ControllerType;

	[Token(Token = "0x6000E1F")]
	[Address(RVA = "0xC5CB74", Offset = "0xC5CB74", VA = "0xC5CB74")]
	public PoseFrame GetCurrentPose()
	{
		return default(PoseFrame);
	}

	[Token(Token = "0x6000E20")]
	public abstract void UpdateTransforms(IntPtr sdkAvatar);

	[Token(Token = "0x6000E21")]
	[Address(RVA = "0xC5CB84", Offset = "0xC5CB84", VA = "0xC5CB84")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E22")]
	[Address(RVA = "0xC551F0", Offset = "0xC551F0", VA = "0xC551F0")]
	public void UpdateTransformsFromPose(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000E23")]
	[Address(RVA = "0xC5CC10", Offset = "0xC5CC10", VA = "0xC5CC10")]
	public static bool GetIsTrackedRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E24")]
	[Address(RVA = "0xC5CC18", Offset = "0xC5CC18", VA = "0xC5CC18")]
	protected OvrAvatarDriver()
	{
	}
}
[Token(Token = "0x2000170")]
public class OvrAvatarHand : OvrAvatarComponent
{
	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarHandComponent component;

	[Token(Token = "0x6000E25")]
	[Address(RVA = "0xC5CD84", Offset = "0xC5CD84", VA = "0xC5CD84")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E26")]
	[Address(RVA = "0xC5CEE0", Offset = "0xC5CEE0", VA = "0xC5CEE0")]
	public OvrAvatarHand()
	{
	}
}
[Token(Token = "0x2000171")]
public class OvrAvatarLocalDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 centerEyePosition;

	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion centerEyeRotation;

	[Token(Token = "0x4000B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x6000E27")]
	[Address(RVA = "0xC5CF4C", Offset = "0xC5CF4C", VA = "0xC5CF4C")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000E28")]
	[Address(RVA = "0xC5D0B8", Offset = "0xC5D0B8", VA = "0xC5D0B8")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000E29")]
	[Address(RVA = "0xC5D45C", Offset = "0xC5D45C", VA = "0xC5D45C")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x6000E2A")]
	[Address(RVA = "0xC5D678", Offset = "0xC5D678", VA = "0xC5D678", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000E2B")]
	[Address(RVA = "0xC5D6A4", Offset = "0xC5D6A4", VA = "0xC5D6A4")]
	public OvrAvatarLocalDriver()
	{
	}
}
[Token(Token = "0x2000172")]
public class OvrAvatarMaterialManager : MonoBehaviour
{
	[Token(Token = "0x20003B4")]
	public enum TextureType
	{
		[Token(Token = "0x40017A2")]
		DiffuseTextures,
		[Token(Token = "0x40017A3")]
		NormalMaps,
		[Token(Token = "0x40017A4")]
		RoughnessMaps,
		[Token(Token = "0x40017A5")]
		Count
	}

	[Token(Token = "0x20003B5")]
	public struct AvatarComponentMaterialProperties
	{
		[Token(Token = "0x40017A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarBodyPartType TypeIndex;

		[Token(Token = "0x40017A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color Color;

		[Token(Token = "0x40017A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D[] Textures;

		[Token(Token = "0x40017A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DiffuseIntensity;

		[Token(Token = "0x40017AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RimIntensity;

		[Token(Token = "0x40017AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ReflectionIntensity;
	}

	[Token(Token = "0x20003B6")]
	public struct AvatarTextureArrayProperties
	{
		[Token(Token = "0x40017AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D[] Textures;

		[Token(Token = "0x40017AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2DArray TextureArray;
	}

	[Token(Token = "0x20003B7")]
	public struct AvatarMaterialPropertyBlock
	{
		[Token(Token = "0x40017AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4[] Colors;

		[Token(Token = "0x40017AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] DiffuseIntensities;

		[Token(Token = "0x40017B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] RimIntensities;

		[Token(Token = "0x40017B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] ReflectionIntensities;
	}

	[Serializable]
	[Token(Token = "0x20003B8")]
	public class AvatarMaterialConfig
	{
		[Token(Token = "0x40017B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AvatarComponentMaterialProperties[] ComponentMaterialProperties;

		[Token(Token = "0x40017B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AvatarMaterialPropertyBlock MaterialPropertyBlock;

		[Token(Token = "0x6001789")]
		[Address(RVA = "0xA175A0", Offset = "0xA175A0", VA = "0xA175A0")]
		public AvatarMaterialConfig()
		{
		}
	}

	[Token(Token = "0x20003B9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5930", Offset = "0x6F5930")]
	private sealed class <RunLoadingAnimation>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatarMaterialManager <>4__this;

		[Token(Token = "0x40017B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callBack;

		[Token(Token = "0x40017B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <srcBlend>5__2;

		[Token(Token = "0x40017B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <dstBlend>5__3;

		[Token(Token = "0x40017BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <lightModeTag>5__4;

		[Token(Token = "0x40017BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <renderTypeTag>5__5;

		[Token(Token = "0x40017BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string <renderQueueTag>5__6;

		[Token(Token = "0x40017BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string <ignoreProjectorTag>5__7;

		[Token(Token = "0x40017BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <renderQueue>5__8;

		[Token(Token = "0x40017BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool <transparentQueue>5__9;

		[Token(Token = "0x170003F7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600178D")]
			[Address(RVA = "0xA17530", Offset = "0xA17530", VA = "0xA17530", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600178F")]
			[Address(RVA = "0xA17598", Offset = "0xA17598", VA = "0xA17598", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600178A")]
		[Address(RVA = "0xA16C74", Offset = "0xA16C74", VA = "0xA16C74")]
		[DebuggerHidden]
		public <RunLoadingAnimation>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x600178B")]
		[Address(RVA = "0xA16CA0", Offset = "0xA16CA0", VA = "0xA16CA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600178C")]
		[Address(RVA = "0xA16CA4", Offset = "0xA16CA4", VA = "0xA16CA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600178E")]
		[Address(RVA = "0xA17538", Offset = "0xA17538", VA = "0xA17538", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer TargetRenderer;

	[Token(Token = "0x4000B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AvatarTextureArrayProperties[] TextureArrays;

	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly string[] TextureTypeToShaderProperties;

	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AvatarMaterialConfig LocalAvatarConfig;

	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ReflectionProbeBlendInfo> ReflectionProbes;

	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader CombinedShader;

	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_LOADER;

	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string AVATAR_SHADER_MAINTEX;

	[Token(Token = "0x4000B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string AVATAR_SHADER_NORMALMAP;

	[Token(Token = "0x4000B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string AVATAR_SHADER_ROUGHNESSMAP;

	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string AVATAR_SHADER_COLOR;

	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string AVATAR_SHADER_DIFFUSEINTENSITY;

	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string AVATAR_SHADER_RIMINTENSITY;

	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string AVATAR_SHADER_REFLECTIONINTENSITY;

	[Token(Token = "0x4000BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string AVATAR_SHADER_CUBEMAP;

	[Token(Token = "0x4000BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string AVATAR_SHADER_ALPHA;

	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string AVATAR_SHADER_LOADING_DIMMER;

	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string AVATAR_SHADER_IRIS_COLOR;

	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string AVATAR_SHADER_LIP_COLOR;

	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string AVATAR_SHADER_BROW_COLOR;

	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string AVATAR_SHADER_LASH_COLOR;

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static string AVATAR_SHADER_SCLERA_COLOR;

	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string AVATAR_SHADER_GUM_COLOR;

	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string AVATAR_SHADER_TEETH_COLOR;

	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static string AVATAR_SHADER_LIP_SMOOTHNESS;

	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static float[] DiffuseIntensities;

	[Token(Token = "0x4000BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static float[] RimIntensities;

	[Token(Token = "0x4000BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static float[] ReflectionIntensities;

	[Token(Token = "0x4000BB1")]
	private const float LOADING_ANIMATION_AMPLITUDE = 0.5f;

	[Token(Token = "0x4000BB2")]
	private const float LOADING_ANIMATION_PERIOD = 0.35f;

	[Token(Token = "0x4000BB3")]
	private const float LOADING_ANIMATION_CURVE_SCALE = 0.25f;

	[Token(Token = "0x4000BB4")]
	private const float LOADING_ANIMATION_DIMMER_MIN = 0.3f;

	[Token(Token = "0x6000E2C")]
	[Address(RVA = "0xC5D754", Offset = "0xC5D754", VA = "0xC5D754")]
	public void CreateTextureArrays()
	{
	}

	[Token(Token = "0x6000E2D")]
	[Address(RVA = "0xC5D8B4", Offset = "0xC5D8B4", VA = "0xC5D8B4")]
	public void SetRenderer(Renderer renderer)
	{
	}

	[Token(Token = "0x6000E2E")]
	[Address(RVA = "0xC5D8DC", Offset = "0xC5D8DC", VA = "0xC5D8DC")]
	public void OnCombinedMeshReady()
	{
	}

	[Token(Token = "0x6000E2F")]
	[Address(RVA = "0xC5DFF4", Offset = "0xC5DFF4", VA = "0xC5DFF4")]
	public void AddTextureIDToTextureManager(ulong assetID, bool isSingleComponent)
	{
	}

	[Token(Token = "0x6000E30")]
	[Address(RVA = "0xC5E060", Offset = "0xC5E060", VA = "0xC5E060")]
	private void DeleteTextureSet()
	{
	}

	[Token(Token = "0x6000E31")]
	[Address(RVA = "0xC5D970", Offset = "0xC5D970", VA = "0xC5D970")]
	public void InitTextureArrays()
	{
	}

	[Token(Token = "0x6000E32")]
	[Address(RVA = "0xC5E0B4", Offset = "0xC5E0B4", VA = "0xC5E0B4")]
	private void ProcessTexturesWithMips(Texture2D[] textures, int texArrayResolution, Texture2DArray texArray)
	{
	}

	[Token(Token = "0x6000E33")]
	[Address(RVA = "0xC5DD70", Offset = "0xC5DD70", VA = "0xC5DD70")]
	private void SetMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x6000E34")]
	[Address(RVA = "0xC5E1A4", Offset = "0xC5E1A4", VA = "0xC5E1A4")]
	private void ApplyMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x6000E35")]
	[Address(RVA = "0xC5E41C", Offset = "0xC5E41C", VA = "0xC5E41C")]
	public static ovrAvatarBodyPartType GetComponentType(string objectName)
	{
		return default(ovrAvatarBodyPartType);
	}

	[Token(Token = "0x6000E36")]
	[Address(RVA = "0xC5E518", Offset = "0xC5E518", VA = "0xC5E518")]
	private ulong GetTextureIDForType(ovrAvatarPBSMaterialState materialState, TextureType type)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000E37")]
	[Address(RVA = "0xC5E550", Offset = "0xC5E550", VA = "0xC5E550")]
	public void ValidateTextures(ovrAvatarPBSMaterialState[] materialStates)
	{
	}

	[Token(Token = "0x6000E38")]
	[Address(RVA = "0xC5DF78", Offset = "0xC5DF78", VA = "0xC5DF78")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FE458", Offset = "0x6FE458")]
	private IEnumerator RunLoadingAnimation(Action callBack)
	{
		return null;
	}

	[Token(Token = "0x6000E39")]
	[Address(RVA = "0xC5F304", Offset = "0xC5F304", VA = "0xC5F304")]
	public OvrAvatarMaterialManager()
	{
	}
}
[Token(Token = "0x2000173")]
public class OvrAvatarPacket
{
	[Token(Token = "0x4000BB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr ovrNativePacket;

	[Token(Token = "0x4000BB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<float> frameTimes;

	[Token(Token = "0x4000BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<OvrAvatarDriver.PoseFrame> frames;

	[Token(Token = "0x4000BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte[]> encodedAudioPackets;

	[Token(Token = "0x17000298")]
	public float Duration
	{
		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0xA175A8", Offset = "0xA175A8", VA = "0xA175A8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000299")]
	public OvrAvatarDriver.PoseFrame FinalFrame
	{
		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0xA17614", Offset = "0xA17614", VA = "0xA17614")]
		get
		{
			return default(OvrAvatarDriver.PoseFrame);
		}
	}

	[Token(Token = "0x6000E3D")]
	[Address(RVA = "0xA17698", Offset = "0xA17698", VA = "0xA17698")]
	public OvrAvatarPacket()
	{
	}

	[Token(Token = "0x6000E3E")]
	[Address(RVA = "0xA1775C", Offset = "0xA1775C", VA = "0xA1775C")]
	public OvrAvatarPacket(OvrAvatarDriver.PoseFrame initialPose)
	{
	}

	[Token(Token = "0x6000E3F")]
	[Address(RVA = "0xA1789C", Offset = "0xA1789C", VA = "0xA1789C")]
	private OvrAvatarPacket(List<float> frameTimes, List<OvrAvatarDriver.PoseFrame> frames, List<byte[]> audioPackets)
	{
	}

	[Token(Token = "0x6000E40")]
	[Address(RVA = "0xA17978", Offset = "0xA17978", VA = "0xA17978")]
	public void AddFrame(OvrAvatarDriver.PoseFrame frame, float deltaSeconds)
	{
	}

	[Token(Token = "0x6000E41")]
	[Address(RVA = "0xA17A48", Offset = "0xA17A48", VA = "0xA17A48")]
	public OvrAvatarDriver.PoseFrame GetPoseFrame(float seconds)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x6000E42")]
	[Address(RVA = "0xA17C54", Offset = "0xA17C54", VA = "0xA17C54")]
	public static OvrAvatarPacket Read(Stream stream)
	{
		return null;
	}

	[Token(Token = "0x6000E43")]
	[Address(RVA = "0xA17EAC", Offset = "0xA17EAC", VA = "0xA17EAC")]
	public void Write(Stream stream)
	{
	}
}
[Token(Token = "0x2000174")]
internal static class BinaryWriterExtensions
{
	[Token(Token = "0x6000E44")]
	[Address(RVA = "0xB568C4", Offset = "0xB568C4", VA = "0xB568C4")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.PoseFrame frame)
	{
	}

	[Token(Token = "0x6000E45")]
	[Address(RVA = "0xB569D8", Offset = "0xB569D8", VA = "0xB569D8")]
	public static void Write(this BinaryWriter writer, Vector3 vec3)
	{
	}

	[Token(Token = "0x6000E46")]
	[Address(RVA = "0xB56B84", Offset = "0xB56B84", VA = "0xB56B84")]
	public static void Write(this BinaryWriter writer, Vector2 vec2)
	{
	}

	[Token(Token = "0x6000E47")]
	[Address(RVA = "0xB56A48", Offset = "0xB56A48", VA = "0xB56A48")]
	public static void Write(this BinaryWriter writer, Quaternion quat)
	{
	}

	[Token(Token = "0x6000E48")]
	[Address(RVA = "0xB56ADC", Offset = "0xB56ADC", VA = "0xB56ADC")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.ControllerPose pose)
	{
	}
}
[Token(Token = "0x2000175")]
internal static class BinaryReaderExtensions
{
	[Token(Token = "0x6000E49")]
	[Address(RVA = "0xB564C4", Offset = "0xB564C4", VA = "0xB564C4")]
	public static OvrAvatarDriver.PoseFrame ReadPoseFrame(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x6000E4A")]
	[Address(RVA = "0xB56868", Offset = "0xB56868", VA = "0xB56868")]
	public static Vector2 ReadVector2(this BinaryReader reader)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000E4B")]
	[Address(RVA = "0xB56664", Offset = "0xB56664", VA = "0xB56664")]
	public static Vector3 ReadVector3(this BinaryReader reader)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E4C")]
	[Address(RVA = "0xB566DC", Offset = "0xB566DC", VA = "0xB566DC")]
	public static Quaternion ReadQuaternion(this BinaryReader reader)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000E4D")]
	[Address(RVA = "0xB56778", Offset = "0xB56778", VA = "0xB56778")]
	public static OvrAvatarDriver.ControllerPose ReadControllerPose(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.ControllerPose);
	}
}
[Token(Token = "0x2000176")]
public class OvrAvatarRemoteDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Queue<OvrAvatarPacket> packetQueue;

	[Token(Token = "0x4000BBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IntPtr CurrentSDKPacket;

	[Token(Token = "0x4000BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float CurrentPacketTime;

	[Token(Token = "0x4000BBC")]
	private const int MinPacketQueue = 1;

	[Token(Token = "0x4000BBD")]
	private const int MaxPacketQueue = 4;

	[Token(Token = "0x4000BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int CurrentSequence;

	[Token(Token = "0x4000BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isStreaming;

	[Token(Token = "0x4000BC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OvrAvatarPacket currentPacket;

	[Token(Token = "0x6000E4E")]
	[Address(RVA = "0xA1809C", Offset = "0xA1809C", VA = "0xA1809C")]
	public void QueuePacket(int sequence, OvrAvatarPacket packet)
	{
	}

	[Token(Token = "0x6000E4F")]
	[Address(RVA = "0xA18128", Offset = "0xA18128", VA = "0xA18128", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000E50")]
	[Address(RVA = "0xA18144", Offset = "0xA18144", VA = "0xA18144")]
	private void UpdateFromSDKPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000E51")]
	[Address(RVA = "0xA182F0", Offset = "0xA182F0", VA = "0xA182F0")]
	private void UpdateFromUnityPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000E52")]
	[Address(RVA = "0xA1848C", Offset = "0xA1848C", VA = "0xA1848C")]
	public OvrAvatarRemoteDriver()
	{
	}
}
[Token(Token = "0x2000177")]
public class OvrAvatarRenderComponent : MonoBehaviour
{
	[Token(Token = "0x4000BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool firstSkinnedUpdate;

	[Token(Token = "0x4000BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x4000BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] bones;

	[Token(Token = "0x4000BC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isBodyComponent;

	[Token(Token = "0x6000E53")]
	[Address(RVA = "0xA18504", Offset = "0xA18504", VA = "0xA18504")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x6000E54")]
	[Address(RVA = "0xA185E8", Offset = "0xA185E8", VA = "0xA185E8")]
	protected SkinnedMeshRenderer CreateSkinnedMesh(ulong assetID, ovrAvatarVisibilityFlags visibilityMask, int thirdPersonLayer, int firstPersonLayer)
	{
		return null;
	}

	[Token(Token = "0x6000E55")]
	[Address(RVA = "0xA18860", Offset = "0xA18860", VA = "0xA18860")]
	protected void UpdateSkinnedMesh(OvrAvatar avatar, Transform[] bones, ovrAvatarTransform localTransform, ovrAvatarVisibilityFlags visibilityMask, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000E56")]
	[Address(RVA = "0xA18BF4", Offset = "0xA18BF4", VA = "0xA18BF4")]
	protected Material CreateAvatarMaterial(string name, Shader shader)
	{
		return null;
	}

	[Token(Token = "0x6000E57")]
	[Address(RVA = "0xA18CEC", Offset = "0xA18CEC", VA = "0xA18CEC")]
	public OvrAvatarRenderComponent()
	{
	}
}
[Token(Token = "0x2000178")]
[Flags]
public enum ovrAvatarCapabilities
{
	[Token(Token = "0x4000BC6")]
	Body = 1,
	[Token(Token = "0x4000BC7")]
	Hands = 2,
	[Token(Token = "0x4000BC8")]
	Base = 4,
	[Token(Token = "0x4000BC9")]
	BodyTilt = 0x10,
	[Token(Token = "0x4000BCA")]
	Expressive = 0x20,
	[Token(Token = "0x4000BCB")]
	All = -1
}
[Token(Token = "0x2000179")]
public enum ovrAvatarMessageType
{
	[Token(Token = "0x4000BCD")]
	AvatarSpecification,
	[Token(Token = "0x4000BCE")]
	AssetLoaded,
	[Token(Token = "0x4000BCF")]
	Count
}
[Token(Token = "0x200017A")]
public struct ovrAvatarMessage_AvatarSpecification
{
	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr avatarSpec;

	[Token(Token = "0x4000BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ulong oculusUserID;
}
[Token(Token = "0x200017B")]
public struct ovrAvatarMessage_AssetLoaded
{
	[Token(Token = "0x4000BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong assetID;

	[Token(Token = "0x4000BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr asset;
}
[Token(Token = "0x200017C")]
public enum ovrAvatarAssetType
{
	[Token(Token = "0x4000BD5")]
	Mesh,
	[Token(Token = "0x4000BD6")]
	Texture,
	[Token(Token = "0x4000BD7")]
	Pose,
	[Token(Token = "0x4000BD8")]
	Material,
	[Token(Token = "0x4000BD9")]
	CombinedMesh,
	[Token(Token = "0x4000BDA")]
	PBSMaterial,
	[Token(Token = "0x4000BDB")]
	FailedLoad,
	[Token(Token = "0x4000BDC")]
	Count
}
[Token(Token = "0x200017D")]
public struct ovrAvatarMeshVertex
{
	[Token(Token = "0x4000BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000BE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000BE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000BE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000BE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4000BE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000BE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public byte[] blendIndices;

	[Token(Token = "0x4000BEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] blendWeights;
}
[Token(Token = "0x200017E")]
public struct ovrAvatarMeshVertexV2
{
	[Token(Token = "0x4000BEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000BEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000BED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000BF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000BF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float r;

	[Token(Token = "0x4000BF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float g;

	[Token(Token = "0x4000BF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float b;

	[Token(Token = "0x4000BFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float a;

	[Token(Token = "0x4000BFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public byte[] blendIndices;

	[Token(Token = "0x4000BFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float[] blendWeights;
}
[Token(Token = "0x200017F")]
public struct ovrAvatarBlendVertex
{
	[Token(Token = "0x4000BFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000BFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000C01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;
}
[Token(Token = "0x2000180")]
public struct ovrAvatarMeshAssetData
{
	[Token(Token = "0x4000C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x4000C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x4000C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x4000C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x4000C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x2000181")]
public struct ovrAvatarMeshAssetDataV2
{
	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x4000C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x4000C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x2000182")]
public enum ovrAvatarTextureFormat
{
	[Token(Token = "0x4000C11")]
	RGB24,
	[Token(Token = "0x4000C12")]
	DXT1,
	[Token(Token = "0x4000C13")]
	DXT5,
	[Token(Token = "0x4000C14")]
	ASTC_RGB_6x6,
	[Token(Token = "0x4000C15")]
	ASTC_RGB_6x6_MIPMAPS,
	[Token(Token = "0x4000C16")]
	Count
}
[Token(Token = "0x2000183")]
public struct ovrAvatarTextureAssetData
{
	[Token(Token = "0x4000C17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTextureFormat format;

	[Token(Token = "0x4000C18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint sizeX;

	[Token(Token = "0x4000C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public uint sizeY;

	[Token(Token = "0x4000C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public uint mipCount;

	[Token(Token = "0x4000C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong textureDataSize;

	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr textureData;
}
[Token(Token = "0x2000184")]
public enum ovrAvatarRenderPartType
{
	[Token(Token = "0x4000C1E")]
	SkinnedMeshRender,
	[Token(Token = "0x4000C1F")]
	SkinnedMeshRenderPBS,
	[Token(Token = "0x4000C20")]
	ProjectorRender,
	[Token(Token = "0x4000C21")]
	SkinnedMeshRenderPBS_V2,
	[Token(Token = "0x4000C22")]
	Count
}
[Token(Token = "0x2000185")]
public enum ovrAvatarLogLevel
{
	[Token(Token = "0x4000C24")]
	Unknown,
	[Token(Token = "0x4000C25")]
	Default,
	[Token(Token = "0x4000C26")]
	Verbose,
	[Token(Token = "0x4000C27")]
	Debug,
	[Token(Token = "0x4000C28")]
	Info,
	[Token(Token = "0x4000C29")]
	Warn,
	[Token(Token = "0x4000C2A")]
	Error,
	[Token(Token = "0x4000C2B")]
	Fatal,
	[Token(Token = "0x4000C2C")]
	Silent
}
[Token(Token = "0x2000186")]
public struct ovrAvatarTransform
{
	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x4000C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion orientation;

	[Token(Token = "0x4000C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 scale;
}
[Token(Token = "0x2000187")]
[Flags]
public enum ovrAvatarButton
{
	[Token(Token = "0x4000C31")]
	One = 1,
	[Token(Token = "0x4000C32")]
	Two = 2,
	[Token(Token = "0x4000C33")]
	Three = 4,
	[Token(Token = "0x4000C34")]
	Joystick = 8
}
[Token(Token = "0x2000188")]
[Flags]
public enum ovrAvatarTouch
{
	[Token(Token = "0x4000C36")]
	One = 1,
	[Token(Token = "0x4000C37")]
	Two = 2,
	[Token(Token = "0x4000C38")]
	Joystick = 4,
	[Token(Token = "0x4000C39")]
	ThumbRest = 8,
	[Token(Token = "0x4000C3A")]
	Index = 0x10,
	[Token(Token = "0x4000C3B")]
	Pointing = 0x40,
	[Token(Token = "0x4000C3C")]
	ThumbUp = 0x80
}
[Token(Token = "0x2000189")]
public struct ovrAvatarHandInputState
{
	[Token(Token = "0x4000C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000C3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarButton buttonMask;

	[Token(Token = "0x4000C3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ovrAvatarTouch touchMask;

	[Token(Token = "0x4000C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float joystickX;

	[Token(Token = "0x4000C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float joystickY;

	[Token(Token = "0x4000C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float indexTrigger;

	[Token(Token = "0x4000C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float handTrigger;

	[Token(Token = "0x4000C44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isActive;
}
[Token(Token = "0x200018A")]
public struct ovrAvatarComponent
{
	[Token(Token = "0x4000C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000C46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint renderPartCount;

	[Token(Token = "0x4000C47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr renderParts;

	[Token(Token = "0x4000C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string name;
}
[Token(Token = "0x200018B")]
internal struct ovrAvatarComponent_Offsets
{
	[Token(Token = "0x4000C49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long transform;

	[Token(Token = "0x4000C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int renderPartCount;

	[Token(Token = "0x4000C4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int renderParts;

	[Token(Token = "0x4000C4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int name;
}
[Token(Token = "0x200018C")]
public struct ovrAvatarBaseComponent
{
	[Token(Token = "0x4000C4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 basePosition;

	[Token(Token = "0x4000C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr renderComponent;
}
[Token(Token = "0x200018D")]
public struct ovrAvatarBodyComponent
{
	[Token(Token = "0x4000C4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform leftEyeTransform;

	[Token(Token = "0x4000C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarTransform rightEyeTransform;

	[Token(Token = "0x4000C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ovrAvatarTransform centerEyeTransform;

	[Token(Token = "0x4000C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public IntPtr renderComponent;
}
[Token(Token = "0x200018E")]
public struct ovrAvatarBodyComponent_Offsets
{
	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long leftEyeTransform;

	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long rightEyeTransform;

	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long centerEyeTransform;

	[Token(Token = "0x4000C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long renderComponent;
}
[Token(Token = "0x200018F")]
public struct ovrAvatarControllerComponent
{
	[Token(Token = "0x4000C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x4000C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000190")]
public struct ovrAvatarHandComponent
{
	[Token(Token = "0x4000C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x4000C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000191")]
public enum ovrAvatarMaterialLayerBlendMode
{
	[Token(Token = "0x4000C5C")]
	Add,
	[Token(Token = "0x4000C5D")]
	Multiply,
	[Token(Token = "0x4000C5E")]
	Count
}
[Token(Token = "0x2000192")]
public enum ovrAvatarMaterialLayerSampleMode
{
	[Token(Token = "0x4000C60")]
	Color,
	[Token(Token = "0x4000C61")]
	Texture,
	[Token(Token = "0x4000C62")]
	TextureSingleChannel,
	[Token(Token = "0x4000C63")]
	Parallax,
	[Token(Token = "0x4000C64")]
	Count
}
[Token(Token = "0x2000193")]
public enum ovrAvatarMaterialMaskType
{
	[Token(Token = "0x4000C66")]
	None,
	[Token(Token = "0x4000C67")]
	Positional,
	[Token(Token = "0x4000C68")]
	ViewReflection,
	[Token(Token = "0x4000C69")]
	Fresnel,
	[Token(Token = "0x4000C6A")]
	Pulse,
	[Token(Token = "0x4000C6B")]
	Count
}
[Token(Token = "0x2000194")]
public enum ovrAvatarControllerType
{
	[Token(Token = "0x4000C6D")]
	Touch,
	[Token(Token = "0x4000C6E")]
	Malibu,
	[Token(Token = "0x4000C6F")]
	Go,
	[Token(Token = "0x4000C70")]
	Quest,
	[Token(Token = "0x4000C71")]
	Count
}
[Token(Token = "0x2000195")]
public enum ovrAvatarAssetLevelOfDetail
{
	[Token(Token = "0x4000C73")]
	Lowest = 1,
	[Token(Token = "0x4000C74")]
	Medium = 3,
	[Token(Token = "0x4000C75")]
	Highest = 5
}
[Token(Token = "0x2000196")]
public enum ovrAvatarLookAndFeelVersion
{
	[Token(Token = "0x4000C77")]
	Unknown = -1,
	[Token(Token = "0x4000C78")]
	One,
	[Token(Token = "0x4000C79")]
	Two
}
[Token(Token = "0x2000197")]
public struct ovrAvatarMaterialLayerState
{
	[Token(Token = "0x4000C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarMaterialLayerBlendMode blendMode;

	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x4000C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarMaterialMaskType maskType;

	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector4 layerColor;

	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector4 sampleParameters;

	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong sampleTexture;

	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector4 sampleScaleOffset;

	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector4 maskParameters;

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 maskAxis;

	[Token(Token = "0x6000E5A")]
	[Address(RVA = "0xE100D0", Offset = "0xE100D0", VA = "0xE100D0")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E5B")]
	[Address(RVA = "0x7821CC", Offset = "0x7821CC", VA = "0x7821CC", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E5C")]
	[Address(RVA = "0x7821D4", Offset = "0x7821D4", VA = "0x7821D4", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000198")]
public struct ovrAvatarMaterialState
{
	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x4000C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarMaterialMaskType baseMaskType;

	[Token(Token = "0x4000C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector4 baseMaskParameters;

	[Token(Token = "0x4000C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector4 baseMaskAxis;

	[Token(Token = "0x4000C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x4000C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong alphaMaskTextureID;

	[Token(Token = "0x4000C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 alphaMaskScaleOffset;

	[Token(Token = "0x4000C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong normalMapTextureID;

	[Token(Token = "0x4000C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 normalMapScaleOffset;

	[Token(Token = "0x4000C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong parallaxMapTextureID;

	[Token(Token = "0x4000C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector4 parallaxMapScaleOffset;

	[Token(Token = "0x4000C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ulong roughnessMapTextureID;

	[Token(Token = "0x4000C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector4 roughnessMapScaleOffset;

	[Token(Token = "0x4000C90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public uint layerCount;

	[Token(Token = "0x4000C91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ovrAvatarMaterialLayerState[] layers;

	[Token(Token = "0x6000E5D")]
	[Address(RVA = "0xE10404", Offset = "0xE10404", VA = "0xE10404")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E5E")]
	[Address(RVA = "0x78240C", Offset = "0x78240C", VA = "0x78240C", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E5F")]
	[Address(RVA = "0x782414", Offset = "0x782414", VA = "0x782414", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000199")]
public struct ovrAvatarExpressiveParameters
{
	[Token(Token = "0x4000C92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 irisColor;

	[Token(Token = "0x4000C93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector4 scleraColor;

	[Token(Token = "0x4000C94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4 lashColor;

	[Token(Token = "0x4000C95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 browColor;

	[Token(Token = "0x4000C96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 lipColor;

	[Token(Token = "0x4000C97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector4 teethColor;

	[Token(Token = "0x4000C98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector4 gumColor;

	[Token(Token = "0x4000C99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float browLashIntensity;

	[Token(Token = "0x4000C9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float lipSmoothness;

	[Token(Token = "0x6000E60")]
	[Address(RVA = "0xE0F778", Offset = "0xE0F778", VA = "0xE0F778")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E61")]
	[Address(RVA = "0x781F14", Offset = "0x781F14", VA = "0x781F14", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E62")]
	[Address(RVA = "0x781F1C", Offset = "0x781F1C", VA = "0x781F1C", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x200019A")]
public struct ovrAvatarPBSMaterialState
{
	[Token(Token = "0x4000C9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x4000C9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong albedoTextureID;

	[Token(Token = "0x4000C9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector4 albedoMultiplier;

	[Token(Token = "0x4000C9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ulong metallicnessTextureID;

	[Token(Token = "0x4000C9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float glossinessScale;

	[Token(Token = "0x4000CA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong normalTextureID;

	[Token(Token = "0x4000CA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong heightTextureID;

	[Token(Token = "0x4000CA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ulong occlusionTextureID;

	[Token(Token = "0x4000CA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong emissionTextureID;

	[Token(Token = "0x4000CA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 emissionMultiplier;

	[Token(Token = "0x4000CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong detailMaskTextureID;

	[Token(Token = "0x4000CA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ulong detailAlbedoTextureID;

	[Token(Token = "0x4000CA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ulong detailNormalTextureID;

	[Token(Token = "0x6000E63")]
	[Address(RVA = "0xE10930", Offset = "0xE10930", VA = "0xE10930")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E64")]
	[Address(RVA = "0x782C94", Offset = "0x782C94", VA = "0x782C94", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E65")]
	[Address(RVA = "0x782C9C", Offset = "0x782C9C", VA = "0x782C9C", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x200019B")]
public class OvrAvatarAssetMaterial : OvrAvatarAsset
{
	[Token(Token = "0x4000CA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarMaterialState material;

	[Token(Token = "0x6000E66")]
	[Address(RVA = "0xC58DDC", Offset = "0xC58DDC", VA = "0xC58DDC")]
	public OvrAvatarAssetMaterial(ulong id, IntPtr mat)
	{
	}
}
[Token(Token = "0x200019C")]
public struct ovrAvatarSkinnedMeshPose
{
	[Token(Token = "0x4000CA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint jointCount;

	[Token(Token = "0x4000CAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarTransform[] jointTransform;

	[Token(Token = "0x4000CAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] jointParents;

	[Token(Token = "0x4000CAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr[] jointNames;
}
[Token(Token = "0x200019D")]
[Flags]
public enum ovrAvatarVisibilityFlags
{
	[Token(Token = "0x4000CAE")]
	FirstPerson = 1,
	[Token(Token = "0x4000CAF")]
	ThirdPerson = 2,
	[Token(Token = "0x4000CB0")]
	SelfOccluding = 4
}
[Token(Token = "0x200019E")]
public struct ovrAvatarRenderPart_SkinnedMeshRender
{
	[Token(Token = "0x4000CB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000CB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000CB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000CB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarMaterialState materialState;

	[Token(Token = "0x4000CB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x200019F")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS
{
	[Token(Token = "0x4000CB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000CB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000CB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong albedoTextureAssetID;

	[Token(Token = "0x4000CBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong surfaceTextureAssetID;

	[Token(Token = "0x4000CBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x20001A0")]
public struct ovrAvatarRenderPart_ProjectorRender
{
	[Token(Token = "0x4000CBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000CBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint componentIndex;

	[Token(Token = "0x4000CBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint renderPartIndex;

	[Token(Token = "0x4000CBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ovrAvatarMaterialState materialState;
}
[Token(Token = "0x20001A1")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
{
	[Token(Token = "0x4000CC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000CC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000CC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarPBSMaterialState materialState;

	[Token(Token = "0x4000CC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x20001A2")]
public enum ovrAvatarHandGesture
{
	[Token(Token = "0x4000CC6")]
	Default,
	[Token(Token = "0x4000CC7")]
	GripSphere,
	[Token(Token = "0x4000CC8")]
	GripCube,
	[Token(Token = "0x4000CC9")]
	Count
}
[Token(Token = "0x20001A3")]
public enum ovrAvatarBodyPartType
{
	[Token(Token = "0x4000CCB")]
	Body,
	[Token(Token = "0x4000CCC")]
	Clothing,
	[Token(Token = "0x4000CCD")]
	Eyewear,
	[Token(Token = "0x4000CCE")]
	Hair,
	[Token(Token = "0x4000CCF")]
	Beard,
	[Token(Token = "0x4000CD0")]
	Count
}
[Token(Token = "0x20001A4")]
public struct ovrAvatarBlendShapeParams
{
	[Token(Token = "0x4000CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint blendShapeParamCount;

	[Token(Token = "0x4000CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] blendShapeParams;
}
[Token(Token = "0x20001A5")]
internal struct ovrAvatarBlendShapeParams_Offsets
{
	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int blendShapeParamCount;

	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long blendShapeParams;
}
[Token(Token = "0x20001A6")]
public struct ovrAvatarVisemes
{
	[Token(Token = "0x4000CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint visemeParamCount;

	[Token(Token = "0x4000CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] visemeParams;
}
[Token(Token = "0x20001A7")]
internal struct ovrAvatarVisemes_Offsets
{
	[Token(Token = "0x4000CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int visemeParamCount;

	[Token(Token = "0x4000CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long visemeParams;
}
[Token(Token = "0x20001A8")]
public enum ovrAvatarGazeTargetType
{
	[Token(Token = "0x4000CDA")]
	AvatarHead,
	[Token(Token = "0x4000CDB")]
	AvatarHand,
	[Token(Token = "0x4000CDC")]
	Object,
	[Token(Token = "0x4000CDD")]
	ObjectStatic,
	[Token(Token = "0x4000CDE")]
	Count
}
[Token(Token = "0x20001A9")]
public struct ovrAvatarGazeTarget
{
	[Token(Token = "0x4000CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x4000CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector3 worldPosition;

	[Token(Token = "0x4000CE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarGazeTargetType type;
}
[Token(Token = "0x20001AA")]
internal struct ovrAvatarGazeTarget_Offsets
{
	[Token(Token = "0x4000CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int id;

	[Token(Token = "0x4000CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int worldPosition;

	[Token(Token = "0x4000CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int type;
}
[Token(Token = "0x20001AB")]
public struct ovrAvatarGazeTargets
{
	[Token(Token = "0x4000CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint targetCount;

	[Token(Token = "0x4000CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarGazeTarget[] targets;
}
[Token(Token = "0x20001AC")]
internal struct ovrAvatarGazeTargets_Offsets
{
	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int targetCount;

	[Token(Token = "0x4000CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long targets;
}
[Token(Token = "0x20001AD")]
public enum ovrAvatarLightType
{
	[Token(Token = "0x4000CEA")]
	Point,
	[Token(Token = "0x4000CEB")]
	Direction,
	[Token(Token = "0x4000CEC")]
	Spot,
	[Token(Token = "0x4000CED")]
	Count
}
[Token(Token = "0x20001AE")]
public struct ovrAvatarLight
{
	[Token(Token = "0x4000CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x4000CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarLightType type;

	[Token(Token = "0x4000CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float intensity;

	[Token(Token = "0x4000CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 worldDirection;

	[Token(Token = "0x4000CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 worldPosition;

	[Token(Token = "0x4000CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float range;

	[Token(Token = "0x4000CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spotAngleDeg;
}
[Token(Token = "0x20001AF")]
internal struct ovrAvatarLight_Offsets
{
	[Token(Token = "0x4000CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long id;

	[Token(Token = "0x4000CF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long type;

	[Token(Token = "0x4000CF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long intensity;

	[Token(Token = "0x4000CF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long worldDirection;

	[Token(Token = "0x4000CF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static long worldPosition;

	[Token(Token = "0x4000CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static long range;

	[Token(Token = "0x4000CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static long spotAngleDeg;
}
[Token(Token = "0x20001B0")]
public struct ovrAvatarLights
{
	[Token(Token = "0x4000CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ambientIntensity;

	[Token(Token = "0x4000CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint lightCount;

	[Token(Token = "0x4000CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarLight[] lights;
}
[Token(Token = "0x20001B1")]
internal struct ovrAvatarLights_Offsets
{
	[Token(Token = "0x4000CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long ambientIntensity;

	[Token(Token = "0x4000D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long lightCount;

	[Token(Token = "0x4000D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long lights;
}
[Token(Token = "0x20001B2")]
[Flags]
public enum ovrAvatarDebugContext : uint
{
	[Token(Token = "0x4000D03")]
	None = 0u,
	[Token(Token = "0x4000D04")]
	GazeTarget = 1u,
	[Token(Token = "0x4000D05")]
	Any = uint.MaxValue
}
[Token(Token = "0x20001B3")]
public struct ovrAvatarDebugLine
{
	[Token(Token = "0x4000D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 startPoint;

	[Token(Token = "0x4000D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 endPoint;

	[Token(Token = "0x4000D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 color;

	[Token(Token = "0x4000D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x4000D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntPtr text;
}
[Token(Token = "0x20001B4")]
public struct ovrAvatarDebugTransform
{
	[Token(Token = "0x4000D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x4000D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr text;
}
[Token(Token = "0x20001B5")]
public delegate void specificationCallback(IntPtr specification);
[Token(Token = "0x20001B6")]
public delegate void assetLoadedCallback(OvrAvatarAsset asset);
[Token(Token = "0x20001B7")]
public delegate void combinedMeshLoadedCallback(IntPtr asset);
[Token(Token = "0x20001B8")]
public class OvrAvatarSDKManager : MonoBehaviour
{
	[Token(Token = "0x20003BA")]
	public struct AvatarSpecRequestParams
	{
		[Token(Token = "0x40017C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong _userId;

		[Token(Token = "0x40017C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public specificationCallback _callback;

		[Token(Token = "0x40017C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _useCombinedMesh;

		[Token(Token = "0x40017C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ovrAvatarAssetLevelOfDetail _lod;

		[Token(Token = "0x40017C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _forceMobileTextureFormat;

		[Token(Token = "0x40017C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ovrAvatarLookAndFeelVersion _lookVersion;

		[Token(Token = "0x40017C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ovrAvatarLookAndFeelVersion _fallbackVersion;

		[Token(Token = "0x40017C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool _enableExpressive;

		[Token(Token = "0x6001790")]
		[Address(RVA = "0x777B40", Offset = "0x777B40", VA = "0x777B40")]
		public AvatarSpecRequestParams(ulong userId, specificationCallback callback, bool useCombinedMesh, ovrAvatarAssetLevelOfDetail lod, bool forceMobileTextureFormat, ovrAvatarLookAndFeelVersion lookVersion, ovrAvatarLookAndFeelVersion fallbackVersion, bool enableExpressive)
		{
		}
	}

	[Token(Token = "0x4000D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSDKManager _instance;

	[Token(Token = "0x4000D0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool initialized;

	[Token(Token = "0x4000D10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<ulong, HashSet<specificationCallback>> specificationCallbacks;

	[Token(Token = "0x4000D11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<ulong, HashSet<assetLoadedCallback>> assetLoadedCallbacks;

	[Token(Token = "0x4000D12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<IntPtr, combinedMeshLoadedCallback> combinedMeshLoadedCallbacks;

	[Token(Token = "0x4000D13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<ulong, OvrAvatarAsset> assetCache;

	[Token(Token = "0x4000D14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OvrAvatarTextureCopyManager textureCopyManager;

	[Token(Token = "0x4000D15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarLogLevel LoggingLevel;

	[Token(Token = "0x4000D16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Queue<AvatarSpecRequestParams> avatarSpecificationQueue;

	[Token(Token = "0x4000D17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> loadingAvatars;

	[Token(Token = "0x4000D18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool avatarSpecRequestAvailable;

	[Token(Token = "0x4000D19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastDispatchedAvatarSpecRequestTime;

	[Token(Token = "0x4000D1A")]
	private const float AVATAR_SPEC_REQUEST_TIMEOUT = 5f;

	[Token(Token = "0x1700029A")]
	public static OvrAvatarSDKManager Instance
	{
		[Token(Token = "0x6000E79")]
		[Address(RVA = "0xA172CC", Offset = "0xA172CC", VA = "0xA172CC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000E7A")]
	[Address(RVA = "0xA18CFC", Offset = "0xA18CFC", VA = "0xA18CFC")]
	private bool Initialize()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E7B")]
	[Address(RVA = "0xA18F48", Offset = "0xA18F48", VA = "0xA18F48")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000E7C")]
	[Address(RVA = "0xA18FBC", Offset = "0xA18FBC", VA = "0xA18FBC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E7D")]
	[Address(RVA = "0xA19810", Offset = "0xA19810", VA = "0xA19810")]
	public bool IsAvatarSpecWaiting()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E7E")]
	[Address(RVA = "0xA19868", Offset = "0xA19868", VA = "0xA19868")]
	public bool IsAvatarLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E7F")]
	[Address(RVA = "0xA198C0", Offset = "0xA198C0", VA = "0xA198C0")]
	public void AddLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x6000E80")]
	[Address(RVA = "0xA19928", Offset = "0xA19928", VA = "0xA19928")]
	public void RemoveLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x6000E81")]
	[Address(RVA = "0xA19990", Offset = "0xA19990", VA = "0xA19990")]
	public void RequestAvatarSpecification(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x6000E82")]
	[Address(RVA = "0xA19648", Offset = "0xA19648", VA = "0xA19648")]
	private void DispatchAvatarSpecificationRequest(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x6000E83")]
	[Address(RVA = "0xA19A70", Offset = "0xA19A70", VA = "0xA19A70")]
	public void BeginLoadingAsset(ulong assetId, ovrAvatarAssetLevelOfDetail lod, assetLoadedCallback callback)
	{
	}

	[Token(Token = "0x6000E84")]
	[Address(RVA = "0xA19B8C", Offset = "0xA19B8C", VA = "0xA19B8C")]
	public void RegisterCombinedMeshCallback(IntPtr sdkAvatar, combinedMeshLoadedCallback callback)
	{
	}

	[Token(Token = "0x6000E85")]
	[Address(RVA = "0xA187E0", Offset = "0xA187E0", VA = "0xA187E0")]
	public OvrAvatarAsset GetAsset(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x6000E86")]
	[Address(RVA = "0xA19C6C", Offset = "0xA19C6C", VA = "0xA19C6C")]
	public void DeleteAssetFromCache(ulong assetId)
	{
	}

	[Token(Token = "0x6000E87")]
	[Address(RVA = "0xA18EFC", Offset = "0xA18EFC", VA = "0xA18EFC")]
	public string GetAppId()
	{
		return null;
	}

	[Token(Token = "0x6000E88")]
	[Address(RVA = "0xA1745C", Offset = "0xA1745C", VA = "0xA1745C")]
	public OvrAvatarTextureCopyManager GetTextureCopyManager()
	{
		return null;
	}

	[Token(Token = "0x6000E89")]
	[Address(RVA = "0xA19D44", Offset = "0xA19D44", VA = "0xA19D44")]
	public OvrAvatarSDKManager()
	{
	}
}
[Token(Token = "0x20001B9")]
public sealed class OvrAvatarSettings : ScriptableObject
{
	[Token(Token = "0x4000D1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSettings instance;

	[Token(Token = "0x4000D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string ovrAppID;

	[Token(Token = "0x4000D1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string ovrGearAppID;

	[Token(Token = "0x1700029B")]
	public static string AppID
	{
		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0xA19D04", Offset = "0xA19D04", VA = "0xA19D04")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0xA19E9C", Offset = "0xA19E9C", VA = "0xA19E9C")]
		set
		{
		}
	}

	[Token(Token = "0x1700029C")]
	public static string MobileAppID
	{
		[Token(Token = "0x6000E8C")]
		[Address(RVA = "0xA19D24", Offset = "0xA19D24", VA = "0xA19D24")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0xA19EC8", Offset = "0xA19EC8", VA = "0xA19EC8")]
		set
		{
		}
	}

	[Token(Token = "0x1700029D")]
	public static OvrAvatarSettings Instance
	{
		[Token(Token = "0x6000E8E")]
		[Address(RVA = "0xA19D88", Offset = "0xA19D88", VA = "0xA19D88")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0xA19EF4", Offset = "0xA19EF4", VA = "0xA19EF4")]
		set
		{
		}
	}

	[Token(Token = "0x6000E90")]
	[Address(RVA = "0xA19F48", Offset = "0xA19F48", VA = "0xA19F48")]
	public OvrAvatarSettings()
	{
	}
}
[Token(Token = "0x20001BA")]
public class OvrAvatarSkinnedMeshRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Shader surface;

	[Token(Token = "0x4000D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader surfaceSelfOccluding;

	[Token(Token = "0x4000D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool previouslyActive;

	[Token(Token = "0x6000E91")]
	[Address(RVA = "0xA1B884", Offset = "0xA1B884", VA = "0xA1B884")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender, Shader surface, Shader surfaceSelfOccluding, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x6000E92")]
	[Address(RVA = "0xA1BB28", Offset = "0xA1BB28", VA = "0xA1BB28")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000E93")]
	[Address(RVA = "0xA1B9C8", Offset = "0xA1B9C8", VA = "0xA1B9C8")]
	private void UpdateMeshMaterial(ovrAvatarVisibilityFlags visibilityMask, SkinnedMeshRenderer rootMesh)
	{
	}

	[Token(Token = "0x6000E94")]
	[Address(RVA = "0xA1BD54", Offset = "0xA1BD54", VA = "0xA1BD54")]
	public OvrAvatarSkinnedMeshRenderComponent()
	{
	}
}
[Token(Token = "0x20001BB")]
public class OvrAvatarSkinnedMeshRenderPBSComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isMaterialInitilized;

	[Token(Token = "0x6000E95")]
	[Address(RVA = "0xA1BD64", Offset = "0xA1BD64", VA = "0xA1BD64")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS, Shader shader, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x6000E96")]
	[Address(RVA = "0xA1BE94", Offset = "0xA1BE94", VA = "0xA1BE94")]
	internal void UpdateSkinnedMeshRenderPBS(OvrAvatar avatar, IntPtr renderPart, Material mat)
	{
	}

	[Token(Token = "0x6000E97")]
	[Address(RVA = "0xA1C034", Offset = "0xA1C034", VA = "0xA1C034")]
	public OvrAvatarSkinnedMeshRenderPBSComponent()
	{
	}
}
[Token(Token = "0x20001BC")]
public class OvrAvatarSkinnedMeshPBSV2RenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OvrAvatarMaterialManager avatarMaterialManager;

	[Token(Token = "0x4000D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool previouslyActive;

	[Token(Token = "0x4000D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isCombinedMaterial;

	[Token(Token = "0x4000D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private ovrAvatarExpressiveParameters ExpressiveParameters;

	[Token(Token = "0x4000D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool EnableExpressive;

	[Token(Token = "0x4000D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int blendShapeCount;

	[Token(Token = "0x4000D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ovrAvatarBlendShapeParams blendShapeParams;

	[Token(Token = "0x4000D29")]
	private const string MAIN_MATERIAL_NAME = "main_material";

	[Token(Token = "0x4000D2A")]
	private const string EYE_MATERIAL_NAME = "eye_material";

	[Token(Token = "0x4000D2B")]
	private const string DEFAULT_MATERIAL_NAME = "_material";

	[Token(Token = "0x6000E98")]
	[Address(RVA = "0xA19FA0", Offset = "0xA19FA0", VA = "0xA19FA0")]
	internal void Initialize(IntPtr renderPart, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRender, OvrAvatarMaterialManager materialManager, int thirdPersonLayer, int firstPersonLayer, bool combinedMesh, ovrAvatarAssetLevelOfDetail lod, bool assignExpressiveParams, OvrAvatar avatar, bool isControllerModel)
	{
	}

	[Token(Token = "0x6000E99")]
	[Address(RVA = "0xA1AE08", Offset = "0xA1AE08", VA = "0xA1AE08")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000E9A")]
	[Address(RVA = "0xA1B024", Offset = "0xA1B024", VA = "0xA1B024")]
	private void InitializeSingleComponentMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x6000E9B")]
	[Address(RVA = "0xA1A57C", Offset = "0xA1A57C", VA = "0xA1A57C")]
	private void InitializeCombinedMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x6000E9C")]
	[Address(RVA = "0xA1A34C", Offset = "0xA1A34C", VA = "0xA1A34C")]
	private void SetMaterialTransparent(Material mat)
	{
	}

	[Token(Token = "0x6000E9D")]
	[Address(RVA = "0xA1A460", Offset = "0xA1A460", VA = "0xA1A460")]
	private void SetMaterialOpaque(Material mat)
	{
	}

	[Token(Token = "0x6000E9E")]
	[Address(RVA = "0xA1B874", Offset = "0xA1B874", VA = "0xA1B874")]
	public OvrAvatarSkinnedMeshPBSV2RenderComponent()
	{
	}
}
[Token(Token = "0x20001BD")]
public class OvrAvatarTextureCopyManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20003BB")]
	public struct FallbackTextureSet
	{
		[Token(Token = "0x40017C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Initialized;

		[Token(Token = "0x40017C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2D DiffuseRoughness;

		[Token(Token = "0x40017CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D Normal;
	}

	[Token(Token = "0x20003BC")]
	private struct CopyTextureParams
	{
		[Token(Token = "0x40017CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture Src;

		[Token(Token = "0x40017CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture Dst;

		[Token(Token = "0x40017CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Mip;

		[Token(Token = "0x40017CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int SrcSize;

		[Token(Token = "0x40017CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int DstElement;

		[Token(Token = "0x6001791")]
		[Address(RVA = "0x777BA8", Offset = "0x777BA8", VA = "0x777BA8")]
		public CopyTextureParams(Texture src, Texture dst, int mip, int srcSize, int dstElement)
		{
		}
	}

	[Token(Token = "0x20003BD")]
	public struct TextureSet
	{
		[Token(Token = "0x40017D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<ulong, bool> TextureIDSingleMeshPair;

		[Token(Token = "0x40017D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsProcessed;

		[Token(Token = "0x6001792")]
		[Address(RVA = "0x777C30", Offset = "0x777C30", VA = "0x777C30")]
		public TextureSet(Dictionary<ulong, bool> textureIDSingleMeshPair, bool isProcessed)
		{
		}
	}

	[Token(Token = "0x20003BE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5940", Offset = "0x6F5940")]
	private sealed class <DeleteTextureSetCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40017D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextureSet textureSetToDelete;

		[Token(Token = "0x40017D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OvrAvatarTextureCopyManager <>4__this;

		[Token(Token = "0x40017D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int gameobjectID;

		[Token(Token = "0x170003F9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001796")]
			[Address(RVA = "0xA1D7F4", Offset = "0xA1D7F4", VA = "0xA1D7F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003FA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001798")]
			[Address(RVA = "0xA1D85C", Offset = "0xA1D85C", VA = "0xA1D85C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001793")]
		[Address(RVA = "0xA1D1B4", Offset = "0xA1D1B4", VA = "0xA1D1B4")]
		[DebuggerHidden]
		public <DeleteTextureSetCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6001794")]
		[Address(RVA = "0xA1D31C", Offset = "0xA1D31C", VA = "0xA1D31C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001795")]
		[Address(RVA = "0xA1D320", Offset = "0xA1D320", VA = "0xA1D320", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001797")]
		[Address(RVA = "0xA1D7FC", Offset = "0xA1D7FC", VA = "0xA1D7FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FallbackTextureSet[] FallbackTextureSets;

	[Token(Token = "0x4000D2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Queue<CopyTextureParams> texturesToCopy;

	[Token(Token = "0x4000D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, TextureSet> textureSets;

	[Token(Token = "0x4000D2F")]
	private const int TEXTURES_TO_COPY_QUEUE_CAPACITY = 256;

	[Token(Token = "0x4000D30")]
	private const int COPIES_PER_FRAME = 8;

	[Token(Token = "0x4000D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_DIFFUSE_ROUGHNESS;

	[Token(Token = "0x4000D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_NORMAL;

	[Token(Token = "0x4000D33")]
	private const string PATH_HIGHEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_2048";

	[Token(Token = "0x4000D34")]
	private const string PATH_MEDIUM_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_1024";

	[Token(Token = "0x4000D35")]
	private const string PATH_LOWEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_256";

	[Token(Token = "0x4000D36")]
	private const string PATH_HIGHEST_NORMAL = "FallbackTextures/fallback_normal_2048";

	[Token(Token = "0x4000D37")]
	private const string PATH_MEDIUM_NORMAL = "FallbackTextures/fallback_normal_1024";

	[Token(Token = "0x4000D38")]
	private const string PATH_LOWEST_NORMAL = "FallbackTextures/fallback_normal_256";

	[Token(Token = "0x4000D39")]
	private const int GPU_TEXTURE_COPY_WAIT_TIME = 10;

	[Token(Token = "0x6000E9F")]
	[Address(RVA = "0xA1C7E4", Offset = "0xA1C7E4", VA = "0xA1C7E4")]
	public OvrAvatarTextureCopyManager()
	{
	}

	[Token(Token = "0x6000EA0")]
	[Address(RVA = "0xA1CB40", Offset = "0xA1CB40", VA = "0xA1CB40")]
	public void Update()
	{
	}

	[Token(Token = "0x6000EA1")]
	[Address(RVA = "0xA174E0", Offset = "0xA174E0", VA = "0xA174E0")]
	public int GetTextureCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000EA2")]
	[Address(RVA = "0xA1CD38", Offset = "0xA1CD38", VA = "0xA1CD38")]
	public void CopyTexture(Texture src, Texture dst, int mipLevel, int mipSize, int dstElement, bool useQueue = true)
	{
	}

	[Token(Token = "0x6000EA3")]
	[Address(RVA = "0xA1CCA8", Offset = "0xA1CCA8", VA = "0xA1CCA8")]
	private void CopyTexture(CopyTextureParams copyTextureParams)
	{
	}

	[Token(Token = "0x6000EA4")]
	[Address(RVA = "0xA1CECC", Offset = "0xA1CECC", VA = "0xA1CECC")]
	public void AddTextureIDToTextureSet(int gameobjectID, ulong textureID, bool isSingleMesh)
	{
	}

	[Token(Token = "0x6000EA5")]
	[Address(RVA = "0xA1D078", Offset = "0xA1D078", VA = "0xA1D078")]
	public void DeleteTextureSet(int gameobjectID)
	{
	}

	[Token(Token = "0x6000EA6")]
	[Address(RVA = "0xA1D120", Offset = "0xA1D120", VA = "0xA1D120")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FE55C", Offset = "0x6FE55C")]
	private IEnumerator DeleteTextureSetCoroutine(TextureSet textureSetToDelete, int gameobjectID)
	{
		return null;
	}

	[Token(Token = "0x6000EA7")]
	[Address(RVA = "0xA19A24", Offset = "0xA19A24", VA = "0xA19A24")]
	public void CheckFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}

	[Token(Token = "0x6000EA8")]
	[Address(RVA = "0xA1D1E0", Offset = "0xA1D1E0", VA = "0xA1D1E0")]
	private void InitFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}
}
[Token(Token = "0x20001BE")]
public class OvrAvatarTouchController : OvrAvatarComponent
{
	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x4000D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarControllerComponent component;

	[Token(Token = "0x6000EA9")]
	[Address(RVA = "0xA1D864", Offset = "0xA1D864", VA = "0xA1D864")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EAA")]
	[Address(RVA = "0xA1D9C4", Offset = "0xA1D9C4", VA = "0xA1D9C4")]
	public OvrAvatarTouchController()
	{
	}
}
[Token(Token = "0x20001BF")]
public class EnableSwitch : MonoBehaviour
{
	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] SwitchTargets;

	[Token(Token = "0x6000EAB")]
	public bool SetActive<T>(int target) where T : MonoBehaviour
	{
		return default(bool);
	}

	[Token(Token = "0x6000EAC")]
	[Address(RVA = "0xADC56C", Offset = "0xADC56C", VA = "0xADC56C")]
	public EnableSwitch()
	{
	}
}
[Token(Token = "0x20001C0")]
public class LipSyncDemo_Control : MonoBehaviour
{
	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F6E5C", Offset = "0x6F6E5C")]
	public KeyCode rotateLeftKey;

	[Token(Token = "0x4000D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F6E94", Offset = "0x6F6E94")]
	public KeyCode rotateRightKey;

	[Token(Token = "0x4000D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F6ECC", Offset = "0x6F6ECC")]
	public KeyCode resetRotationKey;

	[Token(Token = "0x4000D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float resetRotation;

	[Token(Token = "0x4000D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float rotationAmount;

	[Token(Token = "0x4000D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float rotationMax;

	[Token(Token = "0x6000EAD")]
	[Address(RVA = "0xB435C8", Offset = "0xB435C8", VA = "0xB435C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EAE")]
	[Address(RVA = "0xB435CC", Offset = "0xB435CC", VA = "0xB435CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EAF")]
	[Address(RVA = "0xB4364C", Offset = "0xB4364C", VA = "0xB4364C")]
	private void RotateObject(float amountDegrees, bool absolute = false)
	{
	}

	[Token(Token = "0x6000EB0")]
	[Address(RVA = "0xB43838", Offset = "0xB43838", VA = "0xB43838")]
	public LipSyncDemo_Control()
	{
	}
}
[Token(Token = "0x20001C1")]
public class LipSyncDemo_SetCurrentTarget : MonoBehaviour
{
	[Token(Token = "0x4000D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnableSwitch[] SwitchTargets;

	[Token(Token = "0x4000D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int targetSet;

	[Token(Token = "0x4000D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int maxTarget;

	[Token(Token = "0x4000D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool XRButtonBeingPressed;

	[Token(Token = "0x6000EB1")]
	[Address(RVA = "0xB43868", Offset = "0xB43868", VA = "0xB43868")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EB2")]
	[Address(RVA = "0xB4396C", Offset = "0xB4396C", VA = "0xB4396C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EB3")]
	[Address(RVA = "0xB43C80", Offset = "0xB43C80", VA = "0xB43C80")]
	private void SetCurrentTarget()
	{
	}

	[Token(Token = "0x6000EB4")]
	[Address(RVA = "0xB43F0C", Offset = "0xB43F0C", VA = "0xB43F0C")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x6000EB5")]
	[Address(RVA = "0xB43F5C", Offset = "0xB43F5C", VA = "0xB43F5C")]
	public LipSyncDemo_SetCurrentTarget()
	{
	}
}
[Token(Token = "0x20001C2")]
public class OVRLipSyncDebugConsole : MonoBehaviour
{
	[Token(Token = "0x4000D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArrayList messages;

	[Token(Token = "0x4000D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxMessages;

	[Token(Token = "0x4000D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text textMsg;

	[Token(Token = "0x4000D4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OVRLipSyncDebugConsole s_Instance;

	[Token(Token = "0x4000D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool clearTimeoutOn;

	[Token(Token = "0x4000D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float clearTimeout;

	[Token(Token = "0x1700029E")]
	public static OVRLipSyncDebugConsole instance
	{
		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0x1162EB4", Offset = "0x1162EB4", VA = "0x1162EB4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000EB7")]
	[Address(RVA = "0x116316C", Offset = "0x116316C", VA = "0x116316C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EB8")]
	[Address(RVA = "0x11632A8", Offset = "0x11632A8", VA = "0x11632A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EB9")]
	[Address(RVA = "0x11631DC", Offset = "0x11631DC", VA = "0x11631DC")]
	public void Init()
	{
	}

	[Token(Token = "0x6000EBA")]
	[Address(RVA = "0x116115C", Offset = "0x116115C", VA = "0x116115C")]
	public static void Log(string message)
	{
	}

	[Token(Token = "0x6000EBB")]
	[Address(RVA = "0x1163430", Offset = "0x1163430", VA = "0x1163430")]
	public static void Log(string message, Color color)
	{
	}

	[Token(Token = "0x6000EBC")]
	[Address(RVA = "0x11610F4", Offset = "0x11610F4", VA = "0x11610F4")]
	public static void Clear()
	{
	}

	[Token(Token = "0x6000EBD")]
	[Address(RVA = "0x11611DC", Offset = "0x11611DC", VA = "0x11611DC")]
	public static void ClearTimeout(float timeToClear)
	{
	}

	[Token(Token = "0x6000EBE")]
	[Address(RVA = "0x1163340", Offset = "0x1163340", VA = "0x1163340")]
	public void AddMessage(string message, Color color)
	{
	}

	[Token(Token = "0x6000EBF")]
	[Address(RVA = "0x11634D0", Offset = "0x11634D0", VA = "0x11634D0")]
	public void ClearMessages()
	{
	}

	[Token(Token = "0x6000EC0")]
	[Address(RVA = "0x116350C", Offset = "0x116350C", VA = "0x116350C")]
	public void SetClearTimeout(float timeout)
	{
	}

	[Token(Token = "0x6000EC1")]
	[Address(RVA = "0x1163700", Offset = "0x1163700", VA = "0x1163700")]
	private void Prune()
	{
	}

	[Token(Token = "0x6000EC2")]
	[Address(RVA = "0x116351C", Offset = "0x116351C", VA = "0x116351C")]
	private void Display()
	{
	}

	[Token(Token = "0x6000EC3")]
	[Address(RVA = "0x11637B0", Offset = "0x11637B0", VA = "0x11637B0")]
	public OVRLipSyncDebugConsole()
	{
	}
}
[Token(Token = "0x20001C3")]
public class OVRNamedArrayAttribute : PropertyAttribute
{
	[Token(Token = "0x4000D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string[] names;

	[Token(Token = "0x6000EC5")]
	[Address(RVA = "0x1164274", Offset = "0x1164274", VA = "0x1164274")]
	public OVRNamedArrayAttribute(string[] names)
	{
	}
}
[Token(Token = "0x20001C4")]
public static class OVRTouchpad
{
	[Token(Token = "0x20003BF")]
	public enum TouchEvent
	{
		[Token(Token = "0x40017D8")]
		SingleTap,
		[Token(Token = "0x40017D9")]
		DoubleTap,
		[Token(Token = "0x40017DA")]
		Left,
		[Token(Token = "0x40017DB")]
		Right,
		[Token(Token = "0x40017DC")]
		Up,
		[Token(Token = "0x40017DD")]
		Down
	}

	[Token(Token = "0x20003C0")]
	public delegate void OVRTouchpadCallback<TouchEvent>(TouchEvent arg);

	[Token(Token = "0x4000D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3 moveAmountMouse;

	[Token(Token = "0x4000D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static float minMovMagnitudeMouse;

	[Token(Token = "0x4000D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Delegate touchPadCallbacks;

	[Token(Token = "0x4000D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static OVRTouchpadHelper touchpadHelper;

	[Token(Token = "0x6000EC6")]
	[Address(RVA = "0xBCBEB4", Offset = "0xBCBEB4", VA = "0xBCBEB4")]
	public static void Create()
	{
	}

	[Token(Token = "0x6000EC7")]
	[Address(RVA = "0xBCBEB8", Offset = "0xBCBEB8", VA = "0xBCBEB8")]
	public static void Update()
	{
	}

	[Token(Token = "0x6000EC8")]
	[Address(RVA = "0xBCC1D8", Offset = "0xBCC1D8", VA = "0xBCC1D8")]
	public static void OnDisable()
	{
	}

	[Token(Token = "0x6000EC9")]
	[Address(RVA = "0xBCC028", Offset = "0xBCC028", VA = "0xBCC028")]
	private static void HandleInputMouse(ref Vector3 move)
	{
	}

	[Token(Token = "0x6000ECA")]
	[Address(RVA = "0xBCC1DC", Offset = "0xBCC1DC", VA = "0xBCC1DC")]
	public static void AddListener(OVRTouchpadCallback<TouchEvent> handler)
	{
	}
}
[Token(Token = "0x20001C5")]
public sealed class OVRTouchpadHelper : MonoBehaviour
{
	[Token(Token = "0x6000ECC")]
	[Address(RVA = "0xBCC348", Offset = "0xBCC348", VA = "0xBCC348")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000ECD")]
	[Address(RVA = "0xBCC3C4", Offset = "0xBCC3C4", VA = "0xBCC3C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ECE")]
	[Address(RVA = "0xBCC45C", Offset = "0xBCC45C", VA = "0xBCC45C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ECF")]
	[Address(RVA = "0xBCC4B8", Offset = "0xBCC4B8", VA = "0xBCC4B8")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000ED0")]
	[Address(RVA = "0xBCC51C", Offset = "0xBCC51C", VA = "0xBCC51C")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x6000ED1")]
	[Address(RVA = "0xBCC520", Offset = "0xBCC520", VA = "0xBCC520")]
	public OVRTouchpadHelper()
	{
	}
}
[Token(Token = "0x20001C6")]
public class OVRLipSync : MonoBehaviour
{
	[Token(Token = "0x20003C1")]
	public enum Result
	{
		[Token(Token = "0x40017DF")]
		Success = 0,
		[Token(Token = "0x40017E0")]
		Unknown = -2200,
		[Token(Token = "0x40017E1")]
		CannotCreateContext = -2201,
		[Token(Token = "0x40017E2")]
		InvalidParam = -2202,
		[Token(Token = "0x40017E3")]
		BadSampleRate = -2203,
		[Token(Token = "0x40017E4")]
		MissingDLL = -2204,
		[Token(Token = "0x40017E5")]
		BadVersion = -2205,
		[Token(Token = "0x40017E6")]
		UndefinedFunction = -2206
	}

	[Token(Token = "0x20003C2")]
	public enum AudioDataType
	{
		[Token(Token = "0x40017E8")]
		S16_Mono,
		[Token(Token = "0x40017E9")]
		S16_Stereo,
		[Token(Token = "0x40017EA")]
		F32_Mono,
		[Token(Token = "0x40017EB")]
		F32_Stereo
	}

	[Token(Token = "0x20003C3")]
	public enum Viseme
	{
		[Token(Token = "0x40017ED")]
		sil,
		[Token(Token = "0x40017EE")]
		PP,
		[Token(Token = "0x40017EF")]
		FF,
		[Token(Token = "0x40017F0")]
		TH,
		[Token(Token = "0x40017F1")]
		DD,
		[Token(Token = "0x40017F2")]
		kk,
		[Token(Token = "0x40017F3")]
		CH,
		[Token(Token = "0x40017F4")]
		SS,
		[Token(Token = "0x40017F5")]
		nn,
		[Token(Token = "0x40017F6")]
		RR,
		[Token(Token = "0x40017F7")]
		aa,
		[Token(Token = "0x40017F8")]
		E,
		[Token(Token = "0x40017F9")]
		ih,
		[Token(Token = "0x40017FA")]
		oh,
		[Token(Token = "0x40017FB")]
		ou
	}

	[Token(Token = "0x20003C4")]
	public enum Signals
	{
		[Token(Token = "0x40017FD")]
		VisemeOn,
		[Token(Token = "0x40017FE")]
		VisemeOff,
		[Token(Token = "0x40017FF")]
		VisemeAmount,
		[Token(Token = "0x4001800")]
		VisemeSmoothing,
		[Token(Token = "0x4001801")]
		LaughterAmount
	}

	[Token(Token = "0x20003C5")]
	public enum ContextProviders
	{
		[Token(Token = "0x4001803")]
		Original,
		[Token(Token = "0x4001804")]
		Enhanced,
		[Token(Token = "0x4001805")]
		Enhanced_with_Laughter
	}

	[Serializable]
	[Token(Token = "0x20003C6")]
	public class Frame
	{
		[Token(Token = "0x4001806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int frameNumber;

		[Token(Token = "0x4001807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int frameDelay;

		[Token(Token = "0x4001808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] Visemes;

		[Token(Token = "0x4001809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float laughterScore;

		[Token(Token = "0x600179D")]
		[Address(RVA = "0x1160A74", Offset = "0x1160A74", VA = "0x1160A74")]
		public void CopyInput(Frame input)
		{
		}

		[Token(Token = "0x600179E")]
		[Address(RVA = "0x1160ACC", Offset = "0x1160ACC", VA = "0x1160ACC")]
		public void Reset()
		{
		}

		[Token(Token = "0x600179F")]
		[Address(RVA = "0x1160B5C", Offset = "0x1160B5C", VA = "0x1160B5C")]
		public Frame()
		{
		}
	}

	[Token(Token = "0x4000D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly int VisemeCount;

	[Token(Token = "0x4000D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static readonly int SignalCount;

	[Token(Token = "0x4000D54")]
	public const string strOVRLS = "OVRLipSync";

	[Token(Token = "0x4000D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Result sInitialized;

	[Token(Token = "0x4000D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static OVRLipSync sInstance;

	[PreserveSig]
	[Token(Token = "0x6000ED2")]
	[Address(RVA = "0x115F408", Offset = "0x115F408", VA = "0x115F408")]
	private static extern int ovrLipSyncDll_Initialize(int samplerate, int buffersize);

	[PreserveSig]
	[Token(Token = "0x6000ED3")]
	[Address(RVA = "0x115F498", Offset = "0x115F498", VA = "0x115F498")]
	private static extern void ovrLipSyncDll_Shutdown();

	[PreserveSig]
	[Token(Token = "0x6000ED4")]
	[Address(RVA = "0x115F508", Offset = "0x115F508", VA = "0x115F508")]
	private static extern IntPtr ovrLipSyncDll_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[PreserveSig]
	[Token(Token = "0x6000ED5")]
	[Address(RVA = "0x115F59C", Offset = "0x115F59C", VA = "0x115F59C")]
	private static extern int ovrLipSyncDll_CreateContextEx(ref uint context, ContextProviders provider, int sampleRate, bool enableAcceleration);

	[PreserveSig]
	[Token(Token = "0x6000ED6")]
	[Address(RVA = "0x115F644", Offset = "0x115F644", VA = "0x115F644")]
	private static extern int ovrLipSyncDll_CreateContextWithModelFile(ref uint context, ContextProviders provider, string modelPath, int sampleRate, bool enableAcceleration);

	[PreserveSig]
	[Token(Token = "0x6000ED7")]
	[Address(RVA = "0x115F710", Offset = "0x115F710", VA = "0x115F710")]
	private static extern int ovrLipSyncDll_DestroyContext(uint context);

	[PreserveSig]
	[Token(Token = "0x6000ED8")]
	[Address(RVA = "0x115F790", Offset = "0x115F790", VA = "0x115F790")]
	private static extern int ovrLipSyncDll_ResetContext(uint context);

	[PreserveSig]
	[Token(Token = "0x6000ED9")]
	[Address(RVA = "0x115F810", Offset = "0x115F810", VA = "0x115F810")]
	private static extern int ovrLipSyncDll_SendSignal(uint context, Signals signal, int arg1, int arg2);

	[PreserveSig]
	[Token(Token = "0x6000EDA")]
	[Address(RVA = "0x115F8B8", Offset = "0x115F8B8", VA = "0x115F8B8")]
	private static extern int ovrLipSyncDll_ProcessFrameEx(uint context, IntPtr audioBuffer, uint bufferSize, AudioDataType dataType, ref int frameNumber, ref int frameDelay, float[] visemes, int visemeCount, ref float laughterScore, float[] laughterCategories, int laughterCategoriesLength);

	[Token(Token = "0x6000EDB")]
	[Address(RVA = "0x115F9C0", Offset = "0x115F9C0", VA = "0x115F9C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EDC")]
	[Address(RVA = "0x115FE30", Offset = "0x115FE30", VA = "0x115FE30")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000EDD")]
	[Address(RVA = "0x115FCF8", Offset = "0x115FCF8", VA = "0x115FCF8")]
	public static Result Initialize()
	{
		return default(Result);
	}

	[Token(Token = "0x6000EDE")]
	[Address(RVA = "0x115FF10", Offset = "0x115FF10", VA = "0x115FF10")]
	public static Result Initialize(int sampleRate, int bufferSize)
	{
		return default(Result);
	}

	[Token(Token = "0x6000EDF")]
	[Address(RVA = "0x1160024", Offset = "0x1160024", VA = "0x1160024")]
	public static void Shutdown()
	{
	}

	[Token(Token = "0x6000EE0")]
	[Address(RVA = "0x1160094", Offset = "0x1160094", VA = "0x1160094")]
	public static Result IsInitialized()
	{
		return default(Result);
	}

	[Token(Token = "0x6000EE1")]
	[Address(RVA = "0x11600FC", Offset = "0x11600FC", VA = "0x11600FC")]
	public static Result CreateContext(ref uint context, ContextProviders provider, int sampleRate = 0, bool enableAcceleration = false)
	{
		return default(Result);
	}

	[Token(Token = "0x6000EE2")]
	[Address(RVA = "0x1160220", Offset = "0x1160220", VA = "0x1160220")]
	public static Result CreateContextWithModelFile(ref uint context, ContextProviders provider, string modelPath, int sampleRate = 0, bool enableAcceleration = false)
	{
		return default(Result);
	}

	[Token(Token = "0x6000EE3")]
	[Address(RVA = "0x1160358", Offset = "0x1160358", VA = "0x1160358")]
	public static Result DestroyContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x6000EE4")]
	[Address(RVA = "0x1160438", Offset = "0x1160438", VA = "0x1160438")]
	public static Result ResetContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x6000EE5")]
	[Address(RVA = "0x1160518", Offset = "0x1160518", VA = "0x1160518")]
	public static Result SendSignal(uint context, Signals signal, int arg1, int arg2)
	{
		return default(Result);
	}

	[Token(Token = "0x6000EE6")]
	[Address(RVA = "0x116061C", Offset = "0x116061C", VA = "0x116061C")]
	public static Result ProcessFrame(uint context, float[] audioBuffer, Frame frame, bool stereo = true)
	{
		return default(Result);
	}

	[Token(Token = "0x6000EE7")]
	[Address(RVA = "0x11607C0", Offset = "0x11607C0", VA = "0x11607C0")]
	public static Result ProcessFrame(uint context, short[] audioBuffer, Frame frame, bool stereo = true)
	{
		return default(Result);
	}

	[Token(Token = "0x6000EE8")]
	[Address(RVA = "0x116095C", Offset = "0x116095C", VA = "0x116095C")]
	public OVRLipSync()
	{
	}
}
[Token(Token = "0x20001C7")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6F4CC8", Offset = "0x6F4CC8")]
public class OVRLipSyncContext : OVRLipSyncContextBase
{
	[Token(Token = "0x4000D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F6F04", Offset = "0x6F6F04")]
	public bool enableKeyboardInput;

	[Token(Token = "0x4000D58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F6F3C", Offset = "0x6F6F3C")]
	public bool enableTouchInput;

	[Token(Token = "0x4000D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F6F74", Offset = "0x6F6F74")]
	public bool audioLoopback;

	[Token(Token = "0x4000D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F6FAC", Offset = "0x6F6FAC")]
	public KeyCode loopbackKey;

	[Token(Token = "0x4000D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F6FE4", Offset = "0x6F6FE4")]
	public bool showVisemes;

	[Token(Token = "0x4000D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F701C", Offset = "0x6F701C")]
	public KeyCode debugVisemesKey;

	[Token(Token = "0x4000D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F7054", Offset = "0x6F7054")]
	public bool skipAudioSource;

	[Token(Token = "0x4000D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F708C", Offset = "0x6F708C")]
	public float gain;

	[Token(Token = "0x4000D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool hasDebugConsole;

	[Token(Token = "0x4000D60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public KeyCode debugLaughterKey;

	[Token(Token = "0x4000D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool showLaughter;

	[Token(Token = "0x4000D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float laughterScore;

	[Token(Token = "0x6000EEA")]
	[Address(RVA = "0x1160BE4", Offset = "0x1160BE4", VA = "0x1160BE4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EEB")]
	[Address(RVA = "0x1160D10", Offset = "0x1160D10", VA = "0x1160D10")]
	private void HandleKeyboard()
	{
	}

	[Token(Token = "0x6000EEC")]
	[Address(RVA = "0x116125C", Offset = "0x116125C", VA = "0x116125C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EED")]
	[Address(RVA = "0x1161508", Offset = "0x1161508", VA = "0x1161508")]
	public void PreprocessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000EEE")]
	[Address(RVA = "0x116156C", Offset = "0x116156C", VA = "0x116156C")]
	public void PostprocessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000EEF")]
	[Address(RVA = "0x11615D8", Offset = "0x11615D8", VA = "0x11615D8")]
	public void ProcessAudioSamplesRaw(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000EF0")]
	[Address(RVA = "0x116173C", Offset = "0x116173C", VA = "0x116173C")]
	public void ProcessAudioSamplesRaw(short[] data, int channels)
	{
	}

	[Token(Token = "0x6000EF1")]
	[Address(RVA = "0x11618A0", Offset = "0x11618A0", VA = "0x11618A0")]
	public void ProcessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000EF2")]
	[Address(RVA = "0x11619D4", Offset = "0x11619D4", VA = "0x11619D4")]
	private void OnAudioFilterRead(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000EF3")]
	[Address(RVA = "0x11612A0", Offset = "0x11612A0", VA = "0x11612A0")]
	private void DebugShowVisemesAndLaughter()
	{
	}

	[Token(Token = "0x6000EF4")]
	[Address(RVA = "0x1161020", Offset = "0x1161020", VA = "0x1161020")]
	private void ToggleAudioLoopback()
	{
	}

	[Token(Token = "0x6000EF5")]
	[Address(RVA = "0x11619E4", Offset = "0x11619E4", VA = "0x11619E4")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x6000EF6")]
	[Address(RVA = "0x1161B10", Offset = "0x1161B10", VA = "0x1161B10")]
	public OVRLipSyncContext()
	{
	}
}
[Token(Token = "0x20001C8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6F4D2C", Offset = "0x6F4D2C")]
public class OVRLipSyncContextBase : MonoBehaviour
{
	[Token(Token = "0x4000D63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x4000D64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F70C4", Offset = "0x6F70C4")]
	public OVRLipSync.ContextProviders provider;

	[Token(Token = "0x4000D65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F70FC", Offset = "0x6F70FC")]
	public bool enableAcceleration;

	[Token(Token = "0x4000D66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRLipSync.Frame frame;

	[Token(Token = "0x4000D67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private uint context;

	[Token(Token = "0x4000D68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _smoothing;

	[Token(Token = "0x1700029F")]
	public int Smoothing
	{
		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0x1161C90", Offset = "0x1161C90", VA = "0x1161C90")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000EF7")]
		[Address(RVA = "0x1161BA4", Offset = "0x1161BA4", VA = "0x1161BA4")]
		set
		{
		}
	}

	[Token(Token = "0x170002A0")]
	public uint Context
	{
		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0x1161C98", Offset = "0x1161C98", VA = "0x1161C98")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170002A1")]
	protected OVRLipSync.Frame Frame
	{
		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0x1161CA0", Offset = "0x1161CA0", VA = "0x1161CA0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000EFB")]
	[Address(RVA = "0x1161CA8", Offset = "0x1161CA8", VA = "0x1161CA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EFC")]
	[Address(RVA = "0x1161E38", Offset = "0x1161E38", VA = "0x1161E38")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000EFD")]
	[Address(RVA = "0x1161F54", Offset = "0x1161F54", VA = "0x1161F54")]
	public OVRLipSync.Frame GetCurrentPhonemeFrame()
	{
		return null;
	}

	[Token(Token = "0x6000EFE")]
	[Address(RVA = "0x1161F5C", Offset = "0x1161F5C", VA = "0x1161F5C")]
	public void SetVisemeBlend(int viseme, int amount)
	{
	}

	[Token(Token = "0x6000EFF")]
	[Address(RVA = "0x1162050", Offset = "0x1162050", VA = "0x1162050")]
	public void SetLaughterBlend(int amount)
	{
	}

	[Token(Token = "0x6000F00")]
	[Address(RVA = "0x1162118", Offset = "0x1162118", VA = "0x1162118")]
	public OVRLipSync.Result ResetContext()
	{
		return default(OVRLipSync.Result);
	}

	[Token(Token = "0x6000F01")]
	[Address(RVA = "0x1161B34", Offset = "0x1161B34", VA = "0x1161B34")]
	public OVRLipSyncContextBase()
	{
	}
}
[Token(Token = "0x20001C9")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6F4D90", Offset = "0x6F4D90")]
public class OVRLipSyncContextCanned : OVRLipSyncContextBase
{
	[Token(Token = "0x4000D69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F7134", Offset = "0x6F7134")]
	public OVRLipSyncSequence currentSequence;

	[Token(Token = "0x6000F02")]
	[Address(RVA = "0x1162190", Offset = "0x1162190", VA = "0x1162190")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F03")]
	[Address(RVA = "0x1162300", Offset = "0x1162300", VA = "0x1162300")]
	public OVRLipSyncContextCanned()
	{
	}
}
[Token(Token = "0x20001CA")]
public class OVRLipSyncContextMorphTarget : MonoBehaviour
{
	[Token(Token = "0x4000D6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F716C", Offset = "0x6F716C")]
	public SkinnedMeshRenderer skinnedMeshRenderer;

	[Token(Token = "0x4000D6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F71A4", Offset = "0x6F71A4")]
	public int[] visemeToBlendTargets;

	[Token(Token = "0x4000D6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F71DC", Offset = "0x6F71DC")]
	public bool enableVisemeTestKeys;

	[Token(Token = "0x4000D6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F7214", Offset = "0x6F7214")]
	public KeyCode[] visemeTestKeys;

	[Token(Token = "0x4000D6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F724C", Offset = "0x6F724C")]
	public KeyCode laughterKey;

	[Token(Token = "0x4000D6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F7284", Offset = "0x6F7284")]
	public int laughterBlendTarget;

	[Token(Token = "0x4000D70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6F72BC", Offset = "0x6F72BC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F72BC", Offset = "0x6F72BC")]
	public float laughterThreshold;

	[Token(Token = "0x4000D71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6F7310", Offset = "0x6F7310")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F7310", Offset = "0x6F7310")]
	public float laughterMultiplier;

	[Token(Token = "0x4000D72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6F7364", Offset = "0x6F7364")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F7364", Offset = "0x6F7364")]
	public int smoothAmount;

	[Token(Token = "0x4000D73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x6000F04")]
	[Address(RVA = "0x1162304", Offset = "0x1162304", VA = "0x1162304")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F05")]
	[Address(RVA = "0x1162448", Offset = "0x1162448", VA = "0x1162448")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F06")]
	[Address(RVA = "0x11626F8", Offset = "0x11626F8", VA = "0x11626F8")]
	private void CheckForKeys()
	{
	}

	[Token(Token = "0x6000F07")]
	[Address(RVA = "0x1162554", Offset = "0x1162554", VA = "0x1162554")]
	private void SetVisemeToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x6000F08")]
	[Address(RVA = "0x1162608", Offset = "0x1162608", VA = "0x1162608")]
	private void SetLaughterToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x6000F09")]
	[Address(RVA = "0x11627C8", Offset = "0x11627C8", VA = "0x11627C8")]
	private void CheckVisemeKey(KeyCode key, int viseme, int amount)
	{
	}

	[Token(Token = "0x6000F0A")]
	[Address(RVA = "0x116288C", Offset = "0x116288C", VA = "0x116288C")]
	private void CheckLaughterKey()
	{
	}

	[Token(Token = "0x6000F0B")]
	[Address(RVA = "0x11628F4", Offset = "0x11628F4", VA = "0x11628F4")]
	public OVRLipSyncContextMorphTarget()
	{
	}
}
[Token(Token = "0x20001CB")]
public class OVRLipSyncContextTextureFlip : MonoBehaviour
{
	[Token(Token = "0x4000D74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material material;

	[Token(Token = "0x4000D75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F73BC", Offset = "0x6F73BC")]
	[AttributeAttribute(Name = "OVRNamedArrayAttribute", RVA = "0x6F73BC", Offset = "0x6F73BC")]
	public Texture[] Textures;

	[Token(Token = "0x4000D76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6F7538", Offset = "0x6F7538")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F7538", Offset = "0x6F7538")]
	public int smoothAmount;

	[Token(Token = "0x4000D77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x4000D78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVRLipSync.Frame oldFrame;

	[Token(Token = "0x6000F0C")]
	[Address(RVA = "0x11629EC", Offset = "0x11629EC", VA = "0x11629EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F0D")]
	[Address(RVA = "0x1162B40", Offset = "0x1162B40", VA = "0x1162B40")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F0E")]
	[Address(RVA = "0x1162CE4", Offset = "0x1162CE4", VA = "0x1162CE4")]
	private void SetVisemeToTexture()
	{
	}

	[Token(Token = "0x6000F0F")]
	[Address(RVA = "0x1162E08", Offset = "0x1162E08", VA = "0x1162E08")]
	public OVRLipSyncContextTextureFlip()
	{
	}
}
[Token(Token = "0x20001CC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6F4DF4", Offset = "0x6F4DF4")]
public class OVRLipSyncMicInput : MonoBehaviour
{
	[Token(Token = "0x20003C7")]
	public enum micActivation
	{
		[Token(Token = "0x400180B")]
		HoldToSpeak,
		[Token(Token = "0x400180C")]
		PushToSpeak,
		[Token(Token = "0x400180D")]
		ConstantSpeak
	}

	[Token(Token = "0x4000D79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F7590", Offset = "0x6F7590")]
	public AudioSource audioSource;

	[Token(Token = "0x4000D7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F75C8", Offset = "0x6F75C8")]
	public bool enableMicSelectionGUI;

	[Token(Token = "0x4000D7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F7600", Offset = "0x6F7600")]
	public KeyCode micSelectionGUIKey;

	[Token(Token = "0x4000D7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6F7638", Offset = "0x6F7638")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F7638", Offset = "0x6F7638")]
	private float micInputVolume;

	[Token(Token = "0x4000D7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F76A0", Offset = "0x6F76A0")]
	private int micFrequency;

	[Token(Token = "0x4000D7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F76EC", Offset = "0x6F76EC")]
	public micActivation micControl;

	[Token(Token = "0x4000D7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F7724", Offset = "0x6F7724")]
	public KeyCode micActivationKey;

	[Token(Token = "0x4000D80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F775C", Offset = "0x6F775C")]
	public string selectedDevice;

	[Token(Token = "0x4000D81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool micSelected;

	[Token(Token = "0x4000D82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int minFreq;

	[Token(Token = "0x4000D83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int maxFreq;

	[Token(Token = "0x4000D84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool focused;

	[Token(Token = "0x4000D85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool initialized;

	[Token(Token = "0x170002A2")]
	public float MicFrequency
	{
		[Token(Token = "0x6000F10")]
		[Address(RVA = "0x1163824", Offset = "0x1163824", VA = "0x1163824")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000F11")]
		[Address(RVA = "0x1163830", Offset = "0x1163830", VA = "0x1163830")]
		set
		{
		}
	}

	[Token(Token = "0x6000F12")]
	[Address(RVA = "0x11638BC", Offset = "0x11638BC", VA = "0x11638BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F13")]
	[Address(RVA = "0x116397C", Offset = "0x116397C", VA = "0x116397C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F14")]
	[Address(RVA = "0x11639C8", Offset = "0x11639C8", VA = "0x11639C8")]
	private void InitializeMicrophone()
	{
	}

	[Token(Token = "0x6000F15")]
	[Address(RVA = "0x1163B0C", Offset = "0x1163B0C", VA = "0x1163B0C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F16")]
	[Address(RVA = "0x1163F44", Offset = "0x1163F44", VA = "0x1163F44")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x6000F17")]
	[Address(RVA = "0x1163F58", Offset = "0x1163F58", VA = "0x1163F58")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6000F18")]
	[Address(RVA = "0x1163F70", Offset = "0x1163F70", VA = "0x1163F70")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F19")]
	[Address(RVA = "0x1163F74", Offset = "0x1163F74", VA = "0x1163F74")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000F1A")]
	[Address(RVA = "0x1163FEC", Offset = "0x1163FEC", VA = "0x1163FEC")]
	public void MicDeviceGUI(float left, float top, float width, float height, float buttonSpaceTop, float buttonSpaceLeft)
	{
	}

	[Token(Token = "0x6000F1B")]
	[Address(RVA = "0x1163A50", Offset = "0x1163A50", VA = "0x1163A50")]
	public void GetMicCaps()
	{
	}

	[Token(Token = "0x6000F1C")]
	[Address(RVA = "0x1163DB0", Offset = "0x1163DB0", VA = "0x1163DB0")]
	public void StartMicrophone()
	{
	}

	[Token(Token = "0x6000F1D")]
	[Address(RVA = "0x1163C68", Offset = "0x1163C68", VA = "0x1163C68")]
	public void StopMicrophone()
	{
	}

	[Token(Token = "0x6000F1E")]
	[Address(RVA = "0x11641CC", Offset = "0x11641CC", VA = "0x11641CC")]
	private float GetAveragedVolume()
	{
		return default(float);
	}

	[Token(Token = "0x6000F1F")]
	[Address(RVA = "0x11641D4", Offset = "0x11641D4", VA = "0x11641D4")]
	public OVRLipSyncMicInput()
	{
	}
}
[Serializable]
[Token(Token = "0x20001CD")]
public class OVRLipSyncSequence : ScriptableObject
{
	[Token(Token = "0x4000D86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<OVRLipSync.Frame> entries;

	[Token(Token = "0x4000D87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float length;

	[Token(Token = "0x6000F20")]
	[Address(RVA = "0x116225C", Offset = "0x116225C", VA = "0x116225C")]
	public OVRLipSync.Frame GetFrameAtTime(float time)
	{
		return null;
	}

	[Token(Token = "0x6000F21")]
	[Address(RVA = "0x1164204", Offset = "0x1164204", VA = "0x1164204")]
	public OVRLipSyncSequence()
	{
	}
}
[Token(Token = "0x20001CE")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x20003C8")]
	public delegate void OnClick();

	[Token(Token = "0x20003C9")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x20003CA")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x20003CB")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x20003CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5950", Offset = "0x6F5950")]
	private sealed class <>c__DisplayClass35_0
	{
		[Token(Token = "0x400180E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x60017B0")]
		[Address(RVA = "0xAD2160", Offset = "0xAD2160", VA = "0xAD2160")]
		public <>c__DisplayClass35_0()
		{
		}

		[Token(Token = "0x60017B1")]
		[Address(RVA = "0xAD2B00", Offset = "0xAD2B00", VA = "0xAD2B00")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x20003CD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5960", Offset = "0x6F5960")]
	private sealed class <>c__DisplayClass37_0
	{
		[Token(Token = "0x400180F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x60017B2")]
		[Address(RVA = "0xAD23D4", Offset = "0xAD23D4", VA = "0xAD23D4")]
		public <>c__DisplayClass37_0()
		{
		}

		[Token(Token = "0x60017B3")]
		[Address(RVA = "0xAD2D24", Offset = "0xAD2D24", VA = "0xAD2D24")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x20003CE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5970", Offset = "0x6F5970")]
	private sealed class <>c__DisplayClass39_0
	{
		[Token(Token = "0x4001810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4001811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x60017B4")]
		[Address(RVA = "0xAD25EC", Offset = "0xAD25EC", VA = "0xAD25EC")]
		public <>c__DisplayClass39_0()
		{
		}

		[Token(Token = "0x60017B5")]
		[Address(RVA = "0xAD2F9C", Offset = "0xAD2F9C", VA = "0xAD2F9C")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x20003CF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5980", Offset = "0x6F5980")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x4001812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4001813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x60017B6")]
		[Address(RVA = "0xAD2780", Offset = "0xAD2780", VA = "0xAD2780")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x60017B7")]
		[Address(RVA = "0xAD3350", Offset = "0xAD3350", VA = "0xAD3350")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x20003D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5990", Offset = "0x6F5990")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x4001814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x4001815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x60017B8")]
		[Address(RVA = "0xAD29D8", Offset = "0xAD29D8", VA = "0xAD29D8")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x60017B9")]
		[Address(RVA = "0xAD3370", Offset = "0xAD3370", VA = "0xAD3370")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x4000D88")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x4000D89")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x4000D8A")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x4000D8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x4000D8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x4000D8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x4000D8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x4000D8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x4000D90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x4000D91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x4000D92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x4000D93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool[] reEnable;

	[Token(Token = "0x4000D94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x4000D95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x4000D96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x4000D97")]
	private const float elementSpacing = 16f;

	[Token(Token = "0x4000D98")]
	private const float marginH = 16f;

	[Token(Token = "0x4000D99")]
	private const float marginV = 16f;

	[Token(Token = "0x4000D9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector2[] insertPositions;

	[Token(Token = "0x4000D9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x4000D9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 menuOffset;

	[Token(Token = "0x4000D9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private OVRCameraRig rig;

	[Token(Token = "0x4000D9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x4000D9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private LaserPointer lp;

	[Token(Token = "0x4000DA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private LineRenderer lr;

	[Token(Token = "0x4000DA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x6000F22")]
	[Address(RVA = "0xAD110C", Offset = "0xAD110C", VA = "0xAD110C")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000F23")]
	[Address(RVA = "0xAD1510", Offset = "0xAD1510", VA = "0xAD1510")]
	public void Show()
	{
	}

	[Token(Token = "0x6000F24")]
	[Address(RVA = "0xAD1ADC", Offset = "0xAD1ADC", VA = "0xAD1ADC")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000F25")]
	[Address(RVA = "0xAD1888", Offset = "0xAD1888", VA = "0xAD1888")]
	private void Relayout()
	{
	}

	[Token(Token = "0x6000F26")]
	[Address(RVA = "0xAD1C84", Offset = "0xAD1C84", VA = "0xAD1C84")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x6000F27")]
	[Address(RVA = "0xAD1F38", Offset = "0xAD1F38", VA = "0xAD1F38")]
	public RectTransform AddButton(string label, OnClick handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000F28")]
	[Address(RVA = "0xAD2168", Offset = "0xAD2168", VA = "0xAD2168")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000F29")]
	[Address(RVA = "0xAD224C", Offset = "0xAD224C", VA = "0xAD224C")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000F2A")]
	[Address(RVA = "0xAD23DC", Offset = "0xAD23DC", VA = "0xAD23DC")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000F2B")]
	[Address(RVA = "0xAD2478", Offset = "0xAD2478", VA = "0xAD2478")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000F2C")]
	[Address(RVA = "0xAD25F4", Offset = "0xAD25F4", VA = "0xAD25F4")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000F2D")]
	[Address(RVA = "0xAD2788", Offset = "0xAD2788", VA = "0xAD2788")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000F2E")]
	[Address(RVA = "0xAD29E0", Offset = "0xAD29E0", VA = "0xAD29E0")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x6000F2F")]
	[Address(RVA = "0xAD2A90", Offset = "0xAD2A90", VA = "0xAD2A90")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x20001CF")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x4000DA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x4000DA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x6000F30")]
	[Address(RVA = "0xB130CC", Offset = "0xB130CC", VA = "0xB130CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F31")]
	[Address(RVA = "0xB13154", Offset = "0xB13154", VA = "0xB13154")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F32")]
	[Address(RVA = "0xB1321C", Offset = "0xB1321C", VA = "0xB1321C")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x6000F33")]
	[Address(RVA = "0xB13258", Offset = "0xB13258", VA = "0xB13258")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x20001D0")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x20003D1")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x4001817")]
		On,
		[Token(Token = "0x4001818")]
		Off,
		[Token(Token = "0x4001819")]
		OnWhenHitTarget
	}

	[Token(Token = "0x4000DA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x4000DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x4000DA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x4000DA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x4000DA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x4000DA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x4000DAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x4000DAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x4000DAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x170002A3")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x6000F35")]
		[Address(RVA = "0xB410E0", Offset = "0xB410E0", VA = "0xB410E0")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x6000F34")]
		[Address(RVA = "0xB4109C", Offset = "0xB4109C", VA = "0xB4109C")]
		set
		{
		}
	}

	[Token(Token = "0x6000F36")]
	[Address(RVA = "0xB410E8", Offset = "0xB410E8", VA = "0xB410E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F37")]
	[Address(RVA = "0xB41140", Offset = "0xB41140", VA = "0xB41140")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F38")]
	[Address(RVA = "0xB41258", Offset = "0xB41258", VA = "0xB41258", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x6000F39")]
	[Address(RVA = "0xB41274", Offset = "0xB41274", VA = "0xB41274", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x6000F3A")]
	[Address(RVA = "0xB412C8", Offset = "0xB412C8", VA = "0xB412C8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000F3B")]
	[Address(RVA = "0xB41524", Offset = "0xB41524", VA = "0xB41524")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x6000F3C")]
	[Address(RVA = "0xB41638", Offset = "0xB41638", VA = "0xB41638")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F3D")]
	[Address(RVA = "0xB416CC", Offset = "0xB416CC", VA = "0xB416CC")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x6000F3E")]
	[Address(RVA = "0xB4179C", Offset = "0xB4179C", VA = "0xB4179C")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x6000F3F")]
	[Address(RVA = "0xB41854", Offset = "0xB41854", VA = "0xB41854")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000F40")]
	[Address(RVA = "0xB41920", Offset = "0xB41920", VA = "0xB41920")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x20001D1")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x4000DAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F7834", Offset = "0x6F7834")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000DAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F786C", Offset = "0x6F786C")]
	public bool EnableCollision;

	[Token(Token = "0x4000DAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask CollideLayers;

	[Token(Token = "0x4000DB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F78A4", Offset = "0x6F78A4")]
	public float MaxFade;

	[Token(Token = "0x4000DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F78DC", Offset = "0x6F78DC")]
	public float FadeMinDistance;

	[Token(Token = "0x4000DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float PreferredHeight;

	[Token(Token = "0x4000DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F7914", Offset = "0x6F7914")]
	public float FadeMaxDistance;

	[Token(Token = "0x4000DB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _cameraUpdateAction;

	[Token(Token = "0x4000DB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action _preCharacterMovementAction;

	[Token(Token = "0x4000DB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CapsuleCollider _character;

	[Token(Token = "0x4000DB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x6000F41")]
	[Address(RVA = "0xC053FC", Offset = "0xC053FC", VA = "0xC053FC")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x6000F42")]
	[Address(RVA = "0xC05484", Offset = "0xC05484", VA = "0xC05484")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F43")]
	[Address(RVA = "0xC054F4", Offset = "0xC054F4", VA = "0xC054F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F44")]
	[Address(RVA = "0xC054F8", Offset = "0xC054F8", VA = "0xC054F8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F45")]
	[Address(RVA = "0xC0551C", Offset = "0xC0551C", VA = "0xC0551C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F46")]
	[Address(RVA = "0xC05540", Offset = "0xC05540", VA = "0xC05540")]
	private void CameraUpdate()
	{
	}
}
[Token(Token = "0x20001D2")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x4000DB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000DB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x4000DBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x6000F47")]
	[Address(RVA = "0xB458E0", Offset = "0xB458E0", VA = "0xB458E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F48")]
	[Address(RVA = "0xB4598C", Offset = "0xB4598C", VA = "0xB4598C")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x20001D3")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x20003D2")]
	public enum States
	{
		[Token(Token = "0x400181B")]
		Ready,
		[Token(Token = "0x400181C")]
		Aim,
		[Token(Token = "0x400181D")]
		CancelAim,
		[Token(Token = "0x400181E")]
		PreTeleport,
		[Token(Token = "0x400181F")]
		CancelTeleport,
		[Token(Token = "0x4001820")]
		Teleporting,
		[Token(Token = "0x4001821")]
		PostTeleport
	}

	[Token(Token = "0x20003D3")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x4001823")]
		None,
		[Token(Token = "0x4001824")]
		Aim,
		[Token(Token = "0x4001825")]
		PreTeleport,
		[Token(Token = "0x4001826")]
		Teleport
	}

	[Token(Token = "0x20003D4")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x4001828")]
		Point,
		[Token(Token = "0x4001829")]
		Sphere,
		[Token(Token = "0x400182A")]
		Capsule
	}

	[Token(Token = "0x20003D5")]
	public class AimData
	{
		[Token(Token = "0x400182B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x400182C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x400182D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x400182E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x400182F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FABCC", Offset = "0x6FABCC")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x170003FB")]
		public List<Vector3> Points
		{
			[Token(Token = "0x60017BB")]
			[Address(RVA = "0xB48B50", Offset = "0xB48B50", VA = "0xB48B50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7014A0", Offset = "0x7014A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017BC")]
			[Address(RVA = "0xB48B58", Offset = "0xB48B58", VA = "0xB48B58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7014B0", Offset = "0x7014B0")]
			private set
			{
			}
		}

		[Token(Token = "0x60017BA")]
		[Address(RVA = "0xB48ADC", Offset = "0xB48ADC", VA = "0xB48ADC")]
		public AimData()
		{
		}

		[Token(Token = "0x60017BD")]
		[Address(RVA = "0xB48B60", Offset = "0xB48B60", VA = "0xB48B60")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x20003D6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F59A0", Offset = "0x6F59A0")]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170003FC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017C1")]
			[Address(RVA = "0xB48928", Offset = "0xB48928", VA = "0xB48928", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003FD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017C3")]
			[Address(RVA = "0xB48990", Offset = "0xB48990", VA = "0xB48990", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0xB46E2C", Offset = "0xB46E2C", VA = "0xB46E2C")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x60017BF")]
		[Address(RVA = "0xB48840", Offset = "0xB48840", VA = "0xB48840", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0xB48844", Offset = "0xB48844", VA = "0xB48844", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017C2")]
		[Address(RVA = "0xB48930", Offset = "0xB48930", VA = "0xB48930", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003D7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F59B0", Offset = "0x6F59B0")]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170003FE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017C7")]
			[Address(RVA = "0xB48308", Offset = "0xB48308", VA = "0xB48308", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003FF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017C9")]
			[Address(RVA = "0xB48370", Offset = "0xB48370", VA = "0xB48370", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017C4")]
		[Address(RVA = "0xB47314", Offset = "0xB47314", VA = "0xB47314")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x60017C5")]
		[Address(RVA = "0xB481D0", Offset = "0xB481D0", VA = "0xB481D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0xB481D4", Offset = "0xB481D4", VA = "0xB481D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017C8")]
		[Address(RVA = "0xB48310", Offset = "0xB48310", VA = "0xB48310", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F59C0", Offset = "0x6F59C0")]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000400")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017CD")]
			[Address(RVA = "0xB4841C", Offset = "0xB4841C", VA = "0xB4841C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000401")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017CF")]
			[Address(RVA = "0xB48484", Offset = "0xB48484", VA = "0xB48484", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017CA")]
		[Address(RVA = "0xB474F8", Offset = "0xB474F8", VA = "0xB474F8")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x60017CB")]
		[Address(RVA = "0xB48378", Offset = "0xB48378", VA = "0xB48378", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017CC")]
		[Address(RVA = "0xB4837C", Offset = "0xB4837C", VA = "0xB4837C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017CE")]
		[Address(RVA = "0xB48424", Offset = "0xB48424", VA = "0xB48424", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003D9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F59D0", Offset = "0x6F59D0")]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400183A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400183B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000402")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017D3")]
			[Address(RVA = "0xB487D0", Offset = "0xB487D0", VA = "0xB487D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000403")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017D5")]
			[Address(RVA = "0xB48838", Offset = "0xB48838", VA = "0xB48838", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017D0")]
		[Address(RVA = "0xB476DC", Offset = "0xB476DC", VA = "0xB476DC")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0xB486F8", Offset = "0xB486F8", VA = "0xB486F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017D2")]
		[Address(RVA = "0xB486FC", Offset = "0xB486FC", VA = "0xB486FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017D4")]
		[Address(RVA = "0xB487D8", Offset = "0xB487D8", VA = "0xB487D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003DA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F59E0", Offset = "0x6F59E0")]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400183C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400183D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400183E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000404")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017D9")]
			[Address(RVA = "0xB48530", Offset = "0xB48530", VA = "0xB48530", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000405")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017DB")]
			[Address(RVA = "0xB48598", Offset = "0xB48598", VA = "0xB48598", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017D6")]
		[Address(RVA = "0xB478C0", Offset = "0xB478C0", VA = "0xB478C0")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x60017D7")]
		[Address(RVA = "0xB4848C", Offset = "0xB4848C", VA = "0xB4848C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017D8")]
		[Address(RVA = "0xB48490", Offset = "0xB48490", VA = "0xB48490", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017DA")]
		[Address(RVA = "0xB48538", Offset = "0xB48538", VA = "0xB48538", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003DB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F59F0", Offset = "0x6F59F0")]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400183F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000406")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017DF")]
			[Address(RVA = "0xB48A6C", Offset = "0xB48A6C", VA = "0xB48A6C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000407")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017E1")]
			[Address(RVA = "0xB48AD4", Offset = "0xB48AD4", VA = "0xB48AD4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017DC")]
		[Address(RVA = "0xB47AA4", Offset = "0xB47AA4", VA = "0xB47AA4")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x60017DD")]
		[Address(RVA = "0xB48998", Offset = "0xB48998", VA = "0xB48998", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017DE")]
		[Address(RVA = "0xB4899C", Offset = "0xB4899C", VA = "0xB4899C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017E0")]
		[Address(RVA = "0xB48A74", Offset = "0xB48A74", VA = "0xB48A74", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5A00", Offset = "0x6F5A00")]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000408")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017E5")]
			[Address(RVA = "0xB48688", Offset = "0xB48688", VA = "0xB48688", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000409")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017E7")]
			[Address(RVA = "0xB486F0", Offset = "0xB486F0", VA = "0xB486F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017E2")]
		[Address(RVA = "0xB47C88", Offset = "0xB47C88", VA = "0xB47C88")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x60017E3")]
		[Address(RVA = "0xB485A0", Offset = "0xB485A0", VA = "0xB485A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017E4")]
		[Address(RVA = "0xB485A4", Offset = "0xB485A4", VA = "0xB485A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017E6")]
		[Address(RVA = "0xB48690", Offset = "0xB48690", VA = "0xB48690", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F794C", Offset = "0x6F794C")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x4000DBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F7984", Offset = "0x6F7984")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x4000DBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F79BC", Offset = "0x6F79BC")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x4000DBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F79F4", Offset = "0x6F79F4")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x4000DBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F7A2C", Offset = "0x6F7A2C")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x4000DC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F7A64", Offset = "0x6F7A64")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x4000DC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F7A9C", Offset = "0x6F7A9C")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x4000DC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F7AD4", Offset = "0x6F7AD4")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x4000DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F7B0C", Offset = "0x6F7B0C")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x4000DC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x4000DC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F7B1C", Offset = "0x6F7B1C")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x4000DC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F7B54", Offset = "0x6F7B54")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x4000DC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x4000DC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x4000DCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x4000DCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x4000DCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x4000DCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x4000DCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F7B9C", Offset = "0x6F7B9C")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x4000DCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F7BAC", Offset = "0x6F7BAC")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x4000DD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F7BE4", Offset = "0x6F7BE4")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x4000DD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F7C1C", Offset = "0x6F7C1C")]
	public float AimCollisionRadius;

	[Token(Token = "0x4000DD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F7C54", Offset = "0x6F7C54")]
	public float AimCollisionHeight;

	[Token(Token = "0x170002A4")]
	public States CurrentState
	{
		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0xB46370", Offset = "0xB46370", VA = "0xB46370")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE5C0", Offset = "0x6FE5C0")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0xB46378", Offset = "0xB46378", VA = "0xB46378")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE5D0", Offset = "0x6FE5D0")]
		private set
		{
		}
	}

	[Token(Token = "0x170002A5")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x6000F50")]
		[Address(RVA = "0xB465A8", Offset = "0xB465A8", VA = "0xB465A8")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x170002A6")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x6000F51")]
		[Address(RVA = "0xB465D0", Offset = "0xB465D0", VA = "0xB465D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE600", Offset = "0x6FE600")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000F52")]
		[Address(RVA = "0xB465D8", Offset = "0xB465D8", VA = "0xB465D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE610", Offset = "0x6FE610")]
		private set
		{
		}
	}

	[Token(Token = "0x14000001")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0xB46380", Offset = "0xB46380", VA = "0xB46380")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE5E0", Offset = "0x6FE5E0")]
		add
		{
		}
		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0xB46424", Offset = "0xB46424", VA = "0xB46424")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE5F0", Offset = "0x6FE5F0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0xB46CE4", Offset = "0xB46CE4", VA = "0xB46CE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE658", Offset = "0x6FE658")]
		add
		{
		}
		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0xB46D88", Offset = "0xB46D88", VA = "0xB46D88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE668", Offset = "0x6FE668")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0xB46E58", Offset = "0xB46E58", VA = "0xB46E58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE6DC", Offset = "0x6FE6DC")]
		add
		{
		}
		[Token(Token = "0x6000F60")]
		[Address(RVA = "0xB46EFC", Offset = "0xB46EFC", VA = "0xB46EFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE6EC", Offset = "0x6FE6EC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x6000F61")]
		[Address(RVA = "0xB46FA0", Offset = "0xB46FA0", VA = "0xB46FA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE6FC", Offset = "0x6FE6FC")]
		add
		{
		}
		[Token(Token = "0x6000F62")]
		[Address(RVA = "0xB47044", Offset = "0xB47044", VA = "0xB47044")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE70C", Offset = "0x6FE70C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x6000F64")]
		[Address(RVA = "0xB4715C", Offset = "0xB4715C", VA = "0xB4715C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE71C", Offset = "0x6FE71C")]
		add
		{
		}
		[Token(Token = "0x6000F65")]
		[Address(RVA = "0xB47200", Offset = "0xB47200", VA = "0xB47200")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE72C", Offset = "0x6FE72C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x6000F67")]
		[Address(RVA = "0xB47340", Offset = "0xB47340", VA = "0xB47340")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE7A0", Offset = "0x6FE7A0")]
		add
		{
		}
		[Token(Token = "0x6000F68")]
		[Address(RVA = "0xB473E4", Offset = "0xB473E4", VA = "0xB473E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE7B0", Offset = "0x6FE7B0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x6000F6A")]
		[Address(RVA = "0xB47524", Offset = "0xB47524", VA = "0xB47524")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE824", Offset = "0x6FE824")]
		add
		{
		}
		[Token(Token = "0x6000F6B")]
		[Address(RVA = "0xB475C8", Offset = "0xB475C8", VA = "0xB475C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE834", Offset = "0x6FE834")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x6000F6D")]
		[Address(RVA = "0xB47708", Offset = "0xB47708", VA = "0xB47708")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE8A8", Offset = "0x6FE8A8")]
		add
		{
		}
		[Token(Token = "0x6000F6E")]
		[Address(RVA = "0xB477AC", Offset = "0xB477AC", VA = "0xB477AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE8B8", Offset = "0x6FE8B8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x6000F70")]
		[Address(RVA = "0xB478EC", Offset = "0xB478EC", VA = "0xB478EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE92C", Offset = "0x6FE92C")]
		add
		{
		}
		[Token(Token = "0x6000F71")]
		[Address(RVA = "0xB47990", Offset = "0xB47990", VA = "0xB47990")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE93C", Offset = "0x6FE93C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x6000F73")]
		[Address(RVA = "0xB47AD0", Offset = "0xB47AD0", VA = "0xB47AD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE9B0", Offset = "0x6FE9B0")]
		add
		{
		}
		[Token(Token = "0x6000F74")]
		[Address(RVA = "0xB47B74", Offset = "0xB47B74", VA = "0xB47B74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FE9C0", Offset = "0x6FE9C0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x6000F76")]
		[Address(RVA = "0xB47CB4", Offset = "0xB47CB4", VA = "0xB47CB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FEA34", Offset = "0x6FEA34")]
		add
		{
		}
		[Token(Token = "0x6000F77")]
		[Address(RVA = "0xB47D58", Offset = "0xB47D58", VA = "0xB47D58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FEA44", Offset = "0x6FEA44")]
		remove
		{
		}
	}

	[Token(Token = "0x6000F49")]
	[Address(RVA = "0xB46040", Offset = "0xB46040", VA = "0xB46040")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000F4A")]
	[Address(RVA = "0xB46064", Offset = "0xB46064", VA = "0xB46064")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000F4F")]
	[Address(RVA = "0xB464C8", Offset = "0xB464C8", VA = "0xB464C8")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x6000F53")]
	[Address(RVA = "0xB465E0", Offset = "0xB465E0", VA = "0xB465E0")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F54")]
	[Address(RVA = "0xB46938", Offset = "0xB46938", VA = "0xB46938")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6FE620", Offset = "0x6FE620")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x6000F55")]
	[Address(RVA = "0xB469F0", Offset = "0xB469F0", VA = "0xB469F0")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x6000F56")]
	[Address(RVA = "0xB46AB8", Offset = "0xB46AB8", VA = "0xB46AB8")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x6000F57")]
	[Address(RVA = "0xB46AD4", Offset = "0xB46AD4", VA = "0xB46AD4")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x6000F58")]
	[Address(RVA = "0xB46B9C", Offset = "0xB46B9C", VA = "0xB46B9C")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x6000F59")]
	[Address(RVA = "0xB46BE0", Offset = "0xB46BE0", VA = "0xB46BE0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F5A")]
	[Address(RVA = "0xB46C3C", Offset = "0xB46C3C", VA = "0xB46C3C", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000F5B")]
	[Address(RVA = "0xB46CDC", Offset = "0xB46CDC", VA = "0xB46CDC", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000F5E")]
	[Address(RVA = "0xB46C6C", Offset = "0xB46C6C", VA = "0xB46C6C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FE678", Offset = "0x6FE678")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000F63")]
	[Address(RVA = "0xB470E8", Offset = "0xB470E8", VA = "0xB470E8")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x6000F66")]
	[Address(RVA = "0xB472A4", Offset = "0xB472A4", VA = "0xB472A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FE73C", Offset = "0x6FE73C")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000F69")]
	[Address(RVA = "0xB47488", Offset = "0xB47488", VA = "0xB47488")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FE7C0", Offset = "0x6FE7C0")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000F6C")]
	[Address(RVA = "0xB4766C", Offset = "0xB4766C", VA = "0xB4766C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FE844", Offset = "0x6FE844")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000F6F")]
	[Address(RVA = "0xB47850", Offset = "0xB47850", VA = "0xB47850")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FE8C8", Offset = "0x6FE8C8")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000F72")]
	[Address(RVA = "0xB47A34", Offset = "0xB47A34", VA = "0xB47A34")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FE94C", Offset = "0x6FE94C")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000F75")]
	[Address(RVA = "0xB47C18", Offset = "0xB47C18", VA = "0xB47C18")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FE9D0", Offset = "0x6FE9D0")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000F78")]
	[Address(RVA = "0xB47DFC", Offset = "0xB47DFC", VA = "0xB47DFC")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x6000F79")]
	[Address(RVA = "0xB47F40", Offset = "0xB47F40", VA = "0xB47F40")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F7A")]
	[Address(RVA = "0xB47F74", Offset = "0xB47F74", VA = "0xB47F74")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000F7B")]
	[Address(RVA = "0xB48094", Offset = "0xB48094", VA = "0xB48094")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x6000F7C")]
	[Address(RVA = "0xB481C0", Offset = "0xB481C0", VA = "0xB481C0")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x20001D4")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x4000DDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x4000DDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x4000DDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x4000DE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x4000DE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x4000DE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x4000DE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000DE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x4000DE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400000C")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0xA6DDEC", Offset = "0xA6DDEC", VA = "0xA6DDEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FEA54", Offset = "0x6FEA54")]
		add
		{
		}
		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0xA6DE90", Offset = "0xA6DE90", VA = "0xA6DE90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FEA64", Offset = "0x6FEA64")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0xA6DF34", Offset = "0xA6DF34", VA = "0xA6DF34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FEA74", Offset = "0x6FEA74")]
		add
		{
		}
		[Token(Token = "0x6000F80")]
		[Address(RVA = "0xA6DFD8", Offset = "0xA6DFD8", VA = "0xA6DFD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FEA84", Offset = "0x6FEA84")]
		remove
		{
		}
	}

	[Token(Token = "0x6000F81")]
	[Address(RVA = "0xA6E07C", Offset = "0xA6E07C", VA = "0xA6E07C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F82")]
	[Address(RVA = "0xA6E124", Offset = "0xA6E124", VA = "0xA6E124")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F83")]
	[Address(RVA = "0xA6E128", Offset = "0xA6E128", VA = "0xA6E128")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000F84")]
	[Address(RVA = "0xA6E19C", Offset = "0xA6E19C", VA = "0xA6E19C")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x6000F85")]
	[Address(RVA = "0xA6E30C", Offset = "0xA6E30C", VA = "0xA6E30C")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x6000F86")]
	[Address(RVA = "0xA6E5F0", Offset = "0xA6E5F0", VA = "0xA6E5F0")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x6000F87")]
	[Address(RVA = "0xA6E7E0", Offset = "0xA6E7E0", VA = "0xA6E7E0")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x20001D5")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x6000F88")]
	[Address(RVA = "0xA7FEA4", Offset = "0xA7FEA4", VA = "0xA7FEA4", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000F89")]
	[Address(RVA = "0xA7FF38", Offset = "0xA7FF38", VA = "0xA7FF38", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000F8A")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x6000F8B")]
	[Address(RVA = "0xA80008", Offset = "0xA80008", VA = "0xA80008")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x20001D6")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x4000DE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F7D4C", Offset = "0x6F7D4C")]
	public float Range;

	[Token(Token = "0x6000F8C")]
	[Address(RVA = "0xA80018", Offset = "0xA80018", VA = "0xA80018", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x6000F8D")]
	[Address(RVA = "0xA80174", Offset = "0xA80174", VA = "0xA80174")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x20001D7")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x4000DE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F7D84", Offset = "0x6F7D84")]
	public float Range;

	[Token(Token = "0x4000DEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F7DBC", Offset = "0x6F7DBC")]
	public float MinimumElevation;

	[Token(Token = "0x4000DEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F7DF4", Offset = "0x6F7DF4")]
	public float Gravity;

	[Token(Token = "0x4000DEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F7E2C", Offset = "0x6F7E2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6F7E2C", Offset = "0x6F7E2C")]
	public float AimVelocity;

	[Token(Token = "0x4000DED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F7E88", Offset = "0x6F7E88")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6F7E88", Offset = "0x6F7E88")]
	public float AimStep;

	[Token(Token = "0x6000F8E")]
	[Address(RVA = "0xA80184", Offset = "0xA80184", VA = "0xA80184", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x6000F8F")]
	[Address(RVA = "0xA803D0", Offset = "0xA803D0", VA = "0xA803D0")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x20001D8")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x4000DEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F7EE0", Offset = "0x6F7EE0")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x4000DEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x4000DF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x4000DF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000DF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x4000DF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x6000F90")]
	[Address(RVA = "0xA803E4", Offset = "0xA803E4", VA = "0xA803E4")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x6000F91")]
	[Address(RVA = "0xA804C8", Offset = "0xA804C8", VA = "0xA804C8")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x6000F92")]
	[Address(RVA = "0xA804F8", Offset = "0xA804F8", VA = "0xA804F8")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x6000F93")]
	[Address(RVA = "0xA80528", Offset = "0xA80528", VA = "0xA80528")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F94")]
	[Address(RVA = "0xA805C8", Offset = "0xA805C8", VA = "0xA805C8", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000F95")]
	[Address(RVA = "0xA80634", Offset = "0xA80634", VA = "0xA80634", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000F96")]
	[Address(RVA = "0xA8069C", Offset = "0xA8069C", VA = "0xA8069C")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x20001D9")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x4000DF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F7F18", Offset = "0x6F7F18")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x4000DF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F7F28", Offset = "0x6F7F28")]
	public Transform PositionIndicator;

	[Token(Token = "0x4000DF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F7F60", Offset = "0x6F7F60")]
	public Transform OrientationIndicator;

	[Token(Token = "0x4000DF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F7F98", Offset = "0x6F7F98")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x4000DF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x4000DF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x4000DFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x4000DFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x170002A7")]
	public bool IsValidDestination
	{
		[Token(Token = "0x6000F97")]
		[Address(RVA = "0xA807B8", Offset = "0xA807B8", VA = "0xA807B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FEA94", Offset = "0x6FEA94")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000F98")]
		[Address(RVA = "0xA807C0", Offset = "0xA807C0", VA = "0xA807C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FEAA4", Offset = "0x6FEAA4")]
		private set
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x6000F9D")]
		[Address(RVA = "0xA80970", Offset = "0xA80970", VA = "0xA80970")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FEAB4", Offset = "0x6FEAB4")]
		add
		{
		}
		[Token(Token = "0x6000F9E")]
		[Address(RVA = "0xA80A14", Offset = "0xA80A14", VA = "0xA80A14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FEAC4", Offset = "0x6FEAC4")]
		remove
		{
		}
	}

	[Token(Token = "0x6000F99")]
	[Address(RVA = "0xA807CC", Offset = "0xA807CC", VA = "0xA807CC")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x6000F9A")]
	[Address(RVA = "0xA80854", Offset = "0xA80854", VA = "0xA80854")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000F9B")]
	[Address(RVA = "0xA8092C", Offset = "0xA8092C", VA = "0xA8092C")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x6000F9C")]
	[Address(RVA = "0xA8096C", Offset = "0xA8096C", VA = "0xA8096C")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000F9F")]
	[Address(RVA = "0xA80AB8", Offset = "0xA80AB8", VA = "0xA80AB8")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x6000FA0")]
	[Address(RVA = "0xA80B20", Offset = "0xA80B20", VA = "0xA80B20")]
	public void Recycle()
	{
	}

	[Token(Token = "0x6000FA1")]
	[Address(RVA = "0xA80B40", Offset = "0xA80B40", VA = "0xA80B40", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x20001DA")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x20003DD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5A10", Offset = "0x6F5A10")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x1700040A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017EB")]
			[Address(RVA = "0xA81204", Offset = "0xA81204", VA = "0xA81204", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700040B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017ED")]
			[Address(RVA = "0xA8126C", Offset = "0xA8126C", VA = "0xA8126C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017E8")]
		[Address(RVA = "0xA80F50", Offset = "0xA80F50", VA = "0xA80F50")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60017E9")]
		[Address(RVA = "0xA81174", Offset = "0xA81174", VA = "0xA81174", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017EA")]
		[Address(RVA = "0xA81178", Offset = "0xA81178", VA = "0xA81178", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017EC")]
		[Address(RVA = "0xA8120C", Offset = "0xA8120C", VA = "0xA8120C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003DE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5A20", Offset = "0x6F5A20")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400184A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x1700040C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017F1")]
			[Address(RVA = "0xA81104", Offset = "0xA81104", VA = "0xA81104", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700040D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017F3")]
			[Address(RVA = "0xA8116C", Offset = "0xA8116C", VA = "0xA8116C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017EE")]
		[Address(RVA = "0xA80FEC", Offset = "0xA80FEC", VA = "0xA80FEC")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60017EF")]
		[Address(RVA = "0xA81070", Offset = "0xA81070", VA = "0xA81070", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017F0")]
		[Address(RVA = "0xA81074", Offset = "0xA81074", VA = "0xA81074", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017F2")]
		[Address(RVA = "0xA8110C", Offset = "0xA8110C", VA = "0xA8110C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x4000DFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x6000FA2")]
	[Address(RVA = "0xA80D20", Offset = "0xA80D20", VA = "0xA80D20")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x6000FA3")]
	[Address(RVA = "0xA80DCC", Offset = "0xA80DCC", VA = "0xA80DCC", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000FA4")]
	[Address(RVA = "0xA80E24", Offset = "0xA80E24", VA = "0xA80E24", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000FA5")]
	[Address(RVA = "0xA80EE0", Offset = "0xA80EE0", VA = "0xA80EE0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FEAD4", Offset = "0x6FEAD4")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000FA6")]
	[Address(RVA = "0xA80F7C", Offset = "0xA80F7C", VA = "0xA80F7C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FEB38", Offset = "0x6FEB38")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000FA7")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x6000FA8")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x6000FA9")]
	[Address(RVA = "0xA81018", Offset = "0xA81018", VA = "0xA81018")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FEB9C", Offset = "0x6FEB9C")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x6000FAA")]
	[Address(RVA = "0xA81044", Offset = "0xA81044", VA = "0xA81044")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FEBAC", Offset = "0x6FEBAC")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x20001DB")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x4000DFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F7FE0", Offset = "0x6F7FE0")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x4000E00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F7FF0", Offset = "0x6F7FF0")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x4000E01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F8028", Offset = "0x6F8028")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x4000E02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F8060", Offset = "0x6F8060")]
	public bool FastTeleport;

	[Token(Token = "0x170002A8")]
	public Transform Pointer
	{
		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0xA81274", Offset = "0xA81274", VA = "0xA81274")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FEBBC", Offset = "0x6FEBBC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0xA8127C", Offset = "0xA8127C", VA = "0xA8127C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FEBCC", Offset = "0x6FEBCC")]
		private set
		{
		}
	}

	[Token(Token = "0x6000FAD")]
	[Address(RVA = "0xA81284", Offset = "0xA81284", VA = "0xA81284", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000FAE")]
	[Address(RVA = "0xA813E0", Offset = "0xA813E0", VA = "0xA813E0", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000FAF")]
	[Address(RVA = "0xA81498", Offset = "0xA81498", VA = "0xA81498")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x20001DC")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x20003DF")]
	public enum InputModes
	{
		[Token(Token = "0x400184C")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x400184D")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x400184E")]
		ThumbstickTeleport,
		[Token(Token = "0x400184F")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x20003E0")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x4001851")]
		A,
		[Token(Token = "0x4001852")]
		B,
		[Token(Token = "0x4001853")]
		LeftTrigger,
		[Token(Token = "0x4001854")]
		LeftThumbstick,
		[Token(Token = "0x4001855")]
		RightTrigger,
		[Token(Token = "0x4001856")]
		RightThumbstick,
		[Token(Token = "0x4001857")]
		X,
		[Token(Token = "0x4001858")]
		Y
	}

	[Token(Token = "0x4000E03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x4000E04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x4000E05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F8098", Offset = "0x6F8098")]
	public InputModes InputMode;

	[Token(Token = "0x4000E06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x4000E07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x4000E08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F80D0", Offset = "0x6F80D0")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x4000E09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x4000E0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F8108", Offset = "0x6F8108")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x4000E0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F8140", Offset = "0x6F8140")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x6000FB0")]
	[Address(RVA = "0xA8149C", Offset = "0xA8149C", VA = "0xA8149C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FB1")]
	[Address(RVA = "0xA814A0", Offset = "0xA814A0", VA = "0xA814A0", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000FB2")]
	[Address(RVA = "0xA818E8", Offset = "0xA818E8", VA = "0xA818E8", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000FB3")]
	[Address(RVA = "0xA819A8", Offset = "0xA819A8", VA = "0xA819A8")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x20001DD")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x20003E1")]
	public enum OrientationModes
	{
		[Token(Token = "0x400185A")]
		HeadRelative,
		[Token(Token = "0x400185B")]
		ForwardFacing
	}

	[Token(Token = "0x20003E2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5A30", Offset = "0x6F5A30")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400185C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400185D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400185E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x1700040E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017F7")]
			[Address(RVA = "0xA81E38", Offset = "0xA81E38", VA = "0xA81E38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700040F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017F9")]
			[Address(RVA = "0xA81EA0", Offset = "0xA81EA0", VA = "0xA81EA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017F4")]
		[Address(RVA = "0xA81C14", Offset = "0xA81C14", VA = "0xA81C14")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0xA81D90", Offset = "0xA81D90", VA = "0xA81D90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017F6")]
		[Address(RVA = "0xA81D94", Offset = "0xA81D94", VA = "0xA81D94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017F8")]
		[Address(RVA = "0xA81E40", Offset = "0xA81E40", VA = "0xA81E40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x4000E0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000E0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x6000FB4")]
	[Address(RVA = "0xA81A54", Offset = "0xA81A54", VA = "0xA81A54")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x6000FB5")]
	[Address(RVA = "0xA81B08", Offset = "0xA81B08", VA = "0xA81B08")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x6000FB6")]
	[Address(RVA = "0xA81B10", Offset = "0xA81B10", VA = "0xA81B10", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000FB7")]
	[Address(RVA = "0xA81B5C", Offset = "0xA81B5C", VA = "0xA81B5C", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000FB8")]
	[Address(RVA = "0xA81BA4", Offset = "0xA81BA4", VA = "0xA81BA4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FEBDC", Offset = "0x6FEBDC")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000FB9")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x6000FBA")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x6000FBB")]
	[Address(RVA = "0xA81C40", Offset = "0xA81C40", VA = "0xA81C40")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000FBC")]
	[Address(RVA = "0xA81D64", Offset = "0xA81D64", VA = "0xA81D64")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FEC40", Offset = "0x6FEC40")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x20001DE")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x6000FBD")]
	[Address(RVA = "0xA81EA8", Offset = "0xA81EA8", VA = "0xA81EA8", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000FBE")]
	[Address(RVA = "0xA81EAC", Offset = "0xA81EAC", VA = "0xA81EAC", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000FBF")]
	[Address(RVA = "0xA81F28", Offset = "0xA81F28", VA = "0xA81F28")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x20001DF")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x4000E0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F8178", Offset = "0x6F8178")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000E10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F81B0", Offset = "0x6F81B0")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x4000E11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F81E8", Offset = "0x6F81E8")]
	public float AimDistanceThreshold;

	[Token(Token = "0x4000E12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F8220", Offset = "0x6F8220")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x4000E13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x6000FC0")]
	[Address(RVA = "0xA81F2C", Offset = "0xA81F2C", VA = "0xA81F2C", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000FC1")]
	[Address(RVA = "0xA81F9C", Offset = "0xA81F9C", VA = "0xA81F9C", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000FC2")]
	[Address(RVA = "0xA82414", Offset = "0xA82414", VA = "0xA82414")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x20001E0")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x4000E14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F8258", Offset = "0x6F8258")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000E15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F8290", Offset = "0x6F8290")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x4000E16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F82C8", Offset = "0x6F82C8")]
	public float RotateStickThreshold;

	[Token(Token = "0x4000E17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x4000E18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x4000E19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x6000FC3")]
	[Address(RVA = "0xA82418", Offset = "0xA82418", VA = "0xA82418", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000FC4")]
	[Address(RVA = "0xA8245C", Offset = "0xA8245C", VA = "0xA8245C", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000FC5")]
	[Address(RVA = "0xA828CC", Offset = "0xA828CC", VA = "0xA828CC")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x20001E1")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x4000E1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x4000E1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x4000E1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x4000E1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x4000E1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x6000FC6")]
	[Address(RVA = "0xA828DC", Offset = "0xA828DC", VA = "0xA828DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FC7")]
	[Address(RVA = "0xA828E0", Offset = "0xA828E0", VA = "0xA828E0")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x6000FC8")]
	[Address(RVA = "0xA828E8", Offset = "0xA828E8", VA = "0xA828E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FC9")]
	[Address(RVA = "0xA829D0", Offset = "0xA829D0", VA = "0xA829D0")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x6000FCA")]
	[Address(RVA = "0xA829F8", Offset = "0xA829F8", VA = "0xA829F8")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x20001E2")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x4000E1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F8300", Offset = "0x6F8300")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x4000E20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x170002A9")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0xA82A10", Offset = "0xA82A10", VA = "0xA82A10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FEC50", Offset = "0x6FEC50")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000FCC")]
		[Address(RVA = "0xA82A18", Offset = "0xA82A18", VA = "0xA82A18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FEC60", Offset = "0x6FEC60")]
		private set
		{
		}
	}

	[Token(Token = "0x6000FCD")]
	[Address(RVA = "0xA7FED4", Offset = "0xA7FED4", VA = "0xA7FED4", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000FCE")]
	[Address(RVA = "0xA7FFDC", Offset = "0xA7FFDC", VA = "0xA7FFDC", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000FCF")]
	[Address(RVA = "0xA82A20", Offset = "0xA82A20", VA = "0xA82A20")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6FEC70", Offset = "0x6FEC70")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x6000FD0")]
	[Address(RVA = "0xA80628", Offset = "0xA80628", VA = "0xA80628", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000FD1")]
	[Address(RVA = "0xA80694", Offset = "0xA80694", VA = "0xA80694", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000FD2")]
	[Address(RVA = "0xA80010", Offset = "0xA80010", VA = "0xA80010")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x20001E3")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x20003E3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5A40", Offset = "0x6F5A40")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400185F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x17000410")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017FD")]
			[Address(RVA = "0xA83074", Offset = "0xA83074", VA = "0xA83074", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000411")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017FF")]
			[Address(RVA = "0xA830DC", Offset = "0xA830DC", VA = "0xA830DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017FA")]
		[Address(RVA = "0xA82C70", Offset = "0xA82C70", VA = "0xA82C70")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60017FB")]
		[Address(RVA = "0xA82E08", Offset = "0xA82E08", VA = "0xA82E08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017FC")]
		[Address(RVA = "0xA82E0C", Offset = "0xA82E0C", VA = "0xA82E0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017FE")]
		[Address(RVA = "0xA8307C", Offset = "0xA8307C", VA = "0xA8307C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F8310", Offset = "0x6F8310")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x4000E22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x4000E23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x4000E24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x4000E25")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x6000FD3")]
	[Address(RVA = "0xA82AE8", Offset = "0xA82AE8", VA = "0xA82AE8")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x6000FD4")]
	[Address(RVA = "0xA82BAC", Offset = "0xA82BAC", VA = "0xA82BAC", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000FD5")]
	[Address(RVA = "0xA82BD8", Offset = "0xA82BD8", VA = "0xA82BD8", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000FD6")]
	[Address(RVA = "0xA82C00", Offset = "0xA82C00", VA = "0xA82C00")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FECA8", Offset = "0x6FECA8")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000FD7")]
	[Address(RVA = "0xA82C9C", Offset = "0xA82C9C", VA = "0xA82C9C", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x6000FD8")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x6000FD9")]
	[Address(RVA = "0xA82CB8", Offset = "0xA82CB8", VA = "0xA82CB8", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000FDA")]
	[Address(RVA = "0xA82DDC", Offset = "0xA82DDC", VA = "0xA82DDC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FED0C", Offset = "0x6FED0C")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x20001E4")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x4000E26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x4000E27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x6000FDB")]
	[Address(RVA = "0xA830E4", Offset = "0xA830E4", VA = "0xA830E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FDC")]
	[Address(RVA = "0xA83144", Offset = "0xA83144", VA = "0xA83144", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FDD")]
	[Address(RVA = "0xA832C8", Offset = "0xA832C8", VA = "0xA832C8", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000FDE")]
	[Address(RVA = "0xA833B8", Offset = "0xA833B8", VA = "0xA833B8")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6FED1C", Offset = "0x6FED1C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000FDF")]
	[Address(RVA = "0xA833BC", Offset = "0xA833BC", VA = "0xA833BC")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x20001E5")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x4000E28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F8348", Offset = "0x6F8348")]
	public float LOSOffset;

	[Token(Token = "0x4000E29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F8380", Offset = "0x6F8380")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x6000FE0")]
	[Address(RVA = "0xA833C8", Offset = "0xA833C8", VA = "0xA833C8", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FE1")]
	[Address(RVA = "0xA835F8", Offset = "0xA835F8", VA = "0xA835F8")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x20001E6")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x6000FE2")]
	[Address(RVA = "0xA83604", Offset = "0xA83604", VA = "0xA83604", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FE3")]
	[Address(RVA = "0xA83788", Offset = "0xA83788", VA = "0xA83788")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x20001E7")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x6000FE4")]
	[Address(RVA = "0xA8378C", Offset = "0xA8378C", VA = "0xA8378C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000FE5")]
	[Address(RVA = "0xA83824", Offset = "0xA83824", VA = "0xA83824", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000FE6")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x6000FE7")]
	[Address(RVA = "0xA838B8", Offset = "0xA838B8", VA = "0xA838B8")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x20001E8")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x20003E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5A50", Offset = "0x6F5A50")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x4001865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4001866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x4001867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x17000412")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001803")]
			[Address(RVA = "0xA83C20", Offset = "0xA83C20", VA = "0xA83C20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000413")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001805")]
			[Address(RVA = "0xA83C88", Offset = "0xA83C88", VA = "0xA83C88", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001800")]
		[Address(RVA = "0xA8395C", Offset = "0xA8395C", VA = "0xA8395C")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6001801")]
		[Address(RVA = "0xA83B20", Offset = "0xA83B20", VA = "0xA83B20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001802")]
		[Address(RVA = "0xA83B24", Offset = "0xA83B24", VA = "0xA83B24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001804")]
		[Address(RVA = "0xA83C28", Offset = "0xA83C28", VA = "0xA83C28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F83B8", Offset = "0x6F83B8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6F83B8", Offset = "0x6F83B8")]
	public float TransitionDuration;

	[Token(Token = "0x4000E2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F8410", Offset = "0x6F8410")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6F8410", Offset = "0x6F8410")]
	public float TeleportDelay;

	[Token(Token = "0x4000E2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F8464", Offset = "0x6F8464")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x6000FE8")]
	[Address(RVA = "0xA838C0", Offset = "0xA838C0", VA = "0xA838C0", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000FE9")]
	[Address(RVA = "0xA838EC", Offset = "0xA838EC", VA = "0xA838EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FED54", Offset = "0x6FED54")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000FEA")]
	[Address(RVA = "0xA83988", Offset = "0xA83988", VA = "0xA83988")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x20001E9")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x6000FEB")]
	[Address(RVA = "0xB20408", Offset = "0xB20408", VA = "0xB20408", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000FEC")]
	[Address(RVA = "0xB20424", Offset = "0xB20424", VA = "0xB20424")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x20001EA")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x20003E5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5A60", Offset = "0x6F5A60")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400186A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x400186B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x400186C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x17000414")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001809")]
			[Address(RVA = "0xB20670", Offset = "0xB20670", VA = "0xB20670", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000415")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600180B")]
			[Address(RVA = "0xB206D8", Offset = "0xB206D8", VA = "0xB206D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001806")]
		[Address(RVA = "0xB204C8", Offset = "0xB204C8", VA = "0xB204C8")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6001807")]
		[Address(RVA = "0xB2053C", Offset = "0xB2053C", VA = "0xB2053C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001808")]
		[Address(RVA = "0xB20540", Offset = "0xB20540", VA = "0xB20540", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600180A")]
		[Address(RVA = "0xB20678", Offset = "0xB20678", VA = "0xB20678", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F849C", Offset = "0x6F849C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6F849C", Offset = "0x6F849C")]
	public float TransitionDuration;

	[Token(Token = "0x4000E2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x6000FED")]
	[Address(RVA = "0xB2042C", Offset = "0xB2042C", VA = "0xB2042C", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000FEE")]
	[Address(RVA = "0xB20458", Offset = "0xB20458", VA = "0xB20458")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FEDB8", Offset = "0x6FEDB8")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x6000FEF")]
	[Address(RVA = "0xB204F4", Offset = "0xB204F4", VA = "0xB204F4")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x20001EB")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x20003E6")]
	public enum PlabackState
	{
		[Token(Token = "0x400186E")]
		Idle = 1,
		[Token(Token = "0x400186F")]
		Preparing,
		[Token(Token = "0x4001870")]
		Buffering,
		[Token(Token = "0x4001871")]
		Ready,
		[Token(Token = "0x4001872")]
		Ended
	}

	[Token(Token = "0x4000E2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x4000E30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x4000E31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x4000E32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x4000E33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getCurrentPlaybackStateMethodId;

	[Token(Token = "0x4000E34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x4000E35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x4000E36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x4000E37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x4000E38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x4000E39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x4000E3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x4000E3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x4000E3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x4000E3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x4000E3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x4000E3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x4000E40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x4000E41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x4000E42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x170002AA")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0xA95E00", Offset = "0xA95E00", VA = "0xA95E00")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x170002AB")]
	private static IntPtr Activity
	{
		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0xA960BC", Offset = "0xA960BC", VA = "0xA960BC")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x170002AC")]
	public static bool IsAvailable
	{
		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0xA92974", Offset = "0xA92974", VA = "0xA92974")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002AD")]
	public static bool IsPlaying
	{
		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0xA93BDC", Offset = "0xA93BDC", VA = "0xA93BDC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002AE")]
	public static PlabackState CurrentPlaybackState
	{
		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0xA96300", Offset = "0xA96300", VA = "0xA96300")]
		get
		{
			return default(PlabackState);
		}
	}

	[Token(Token = "0x170002AF")]
	public static long Duration
	{
		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0xA93DC0", Offset = "0xA93DC0", VA = "0xA93DC0")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x170002B0")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0xA93CCC", Offset = "0xA93CCC", VA = "0xA93CCC")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0xA933A0", Offset = "0xA933A0", VA = "0xA933A0")]
		set
		{
		}
	}

	[Token(Token = "0x6000FF8")]
	[Address(RVA = "0xA94420", Offset = "0xA94420", VA = "0xA94420")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x6000FF9")]
	[Address(RVA = "0xA94164", Offset = "0xA94164", VA = "0xA94164")]
	public static void Stop()
	{
	}

	[Token(Token = "0x6000FFA")]
	[Address(RVA = "0xA93030", Offset = "0xA93030", VA = "0xA93030")]
	public static void Play()
	{
	}

	[Token(Token = "0x6000FFB")]
	[Address(RVA = "0xA931B4", Offset = "0xA931B4", VA = "0xA931B4")]
	public static void Pause()
	{
	}

	[Token(Token = "0x6000FFC")]
	[Address(RVA = "0xA93F8C", Offset = "0xA93F8C", VA = "0xA93F8C")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000FFD")]
	[Address(RVA = "0xA94614", Offset = "0xA94614", VA = "0xA94614")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x6000FFE")]
	[Address(RVA = "0xA93A20", Offset = "0xA93A20", VA = "0xA93A20")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x20001EC")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x1400000F")]
	public event Action onButtonDown
	{
		[Token(Token = "0x6001000")]
		[Address(RVA = "0xBA1374", Offset = "0xBA1374", VA = "0xBA1374")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FEE1C", Offset = "0x6FEE1C")]
		add
		{
		}
		[Token(Token = "0x6001001")]
		[Address(RVA = "0xBA1418", Offset = "0xBA1418", VA = "0xBA1418")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FEE2C", Offset = "0x6FEE2C")]
		remove
		{
		}
	}

	[Token(Token = "0x6001002")]
	[Address(RVA = "0xBA14BC", Offset = "0xBA14BC", VA = "0xBA14BC", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6001003")]
	[Address(RVA = "0xBA14D0", Offset = "0xBA14D0", VA = "0xBA14D0")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x20001ED")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x20003E7")]
	public enum ButtonType
	{
		[Token(Token = "0x4001874")]
		Play,
		[Token(Token = "0x4001875")]
		Pause,
		[Token(Token = "0x4001876")]
		FastForward,
		[Token(Token = "0x4001877")]
		Rewind,
		[Token(Token = "0x4001878")]
		SkipForward,
		[Token(Token = "0x4001879")]
		SkipBack,
		[Token(Token = "0x400187A")]
		Stop
	}

	[Token(Token = "0x4000E44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x170002B1")]
	public ButtonType buttonType
	{
		[Token(Token = "0x6001004")]
		[Address(RVA = "0xB49008", Offset = "0xB49008", VA = "0xB49008")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x6001005")]
		[Address(RVA = "0xB49010", Offset = "0xB49010", VA = "0xB49010")]
		set
		{
		}
	}

	[Token(Token = "0x6001006")]
	[Address(RVA = "0xB49034", Offset = "0xB49034", VA = "0xB49034", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x6001007")]
	[Address(RVA = "0xB4A500", Offset = "0xB4A500", VA = "0xB4A500")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x20001EE")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x20003E8")]
	public enum VideoShape
	{
		[Token(Token = "0x400187C")]
		_360,
		[Token(Token = "0x400187D")]
		_180,
		[Token(Token = "0x400187E")]
		Quad
	}

	[Token(Token = "0x20003E9")]
	public enum VideoStereo
	{
		[Token(Token = "0x4001880")]
		Mono,
		[Token(Token = "0x4001881")]
		TopBottom,
		[Token(Token = "0x4001882")]
		LeftRight,
		[Token(Token = "0x4001883")]
		BottomTop
	}

	[Token(Token = "0x20003EA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5A70", Offset = "0x6F5A70")]
	private sealed class <Start>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x17000416")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600180F")]
			[Address(RVA = "0xA948DC", Offset = "0xA948DC", VA = "0xA948DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000417")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001811")]
			[Address(RVA = "0xA94944", Offset = "0xA94944", VA = "0xA94944", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600180C")]
		[Address(RVA = "0xA92D2C", Offset = "0xA92D2C", VA = "0xA92D2C")]
		[DebuggerHidden]
		public <Start>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x600180D")]
		[Address(RVA = "0xA94758", Offset = "0xA94758", VA = "0xA94758", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600180E")]
		[Address(RVA = "0xA9475C", Offset = "0xA9475C", VA = "0xA9475C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001810")]
		[Address(RVA = "0xA948E4", Offset = "0xA948E4", VA = "0xA948E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003EB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5A80", Offset = "0x6F5A80")]
	private sealed class <>c__DisplayClass33_0
	{
		[Token(Token = "0x4001887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x4001888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x4001889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x6001812")]
		[Address(RVA = "0xA92F94", Offset = "0xA92F94", VA = "0xA92F94")]
		public <>c__DisplayClass33_0()
		{
		}

		[Token(Token = "0x6001813")]
		[Address(RVA = "0xA9434C", Offset = "0xA9434C", VA = "0xA9434C")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x4000E45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x4000E46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x4000E47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x4000E48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x4000E49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F8524", Offset = "0x6F8524")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x4000E4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F8534", Offset = "0x6F8534")]
	private long <Duration>k__BackingField;

	[Token(Token = "0x4000E4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F8544", Offset = "0x6F8544")]
	private long <PlaybackPosition>k__BackingField;

	[Token(Token = "0x4000E4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x4000E4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x4000E4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x4000E4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x4000E50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x4000E51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x4000E52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x4000E53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool DisplayMono;

	[Token(Token = "0x4000E54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x4000E55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x4000E56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x170002B2")]
	public bool IsPlaying
	{
		[Token(Token = "0x6001008")]
		[Address(RVA = "0xA92728", Offset = "0xA92728", VA = "0xA92728")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FEE3C", Offset = "0x6FEE3C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001009")]
		[Address(RVA = "0xA92730", Offset = "0xA92730", VA = "0xA92730")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FEE4C", Offset = "0x6FEE4C")]
		private set
		{
		}
	}

	[Token(Token = "0x170002B3")]
	public long Duration
	{
		[Token(Token = "0x600100A")]
		[Address(RVA = "0xA9273C", Offset = "0xA9273C", VA = "0xA9273C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FEE5C", Offset = "0x6FEE5C")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x600100B")]
		[Address(RVA = "0xA92744", Offset = "0xA92744", VA = "0xA92744")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FEE6C", Offset = "0x6FEE6C")]
		private set
		{
		}
	}

	[Token(Token = "0x170002B4")]
	public long PlaybackPosition
	{
		[Token(Token = "0x600100C")]
		[Address(RVA = "0xA9274C", Offset = "0xA9274C", VA = "0xA9274C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FEE7C", Offset = "0x6FEE7C")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x600100D")]
		[Address(RVA = "0xA92754", Offset = "0xA92754", VA = "0xA92754")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FEE8C", Offset = "0x6FEE8C")]
		private set
		{
		}
	}

	[Token(Token = "0x600100E")]
	[Address(RVA = "0xA9275C", Offset = "0xA9275C", VA = "0xA9275C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600100F")]
	[Address(RVA = "0xA929DC", Offset = "0xA929DC", VA = "0xA929DC")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x6001010")]
	[Address(RVA = "0xA92A44", Offset = "0xA92A44", VA = "0xA92A44")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x6001011")]
	[Address(RVA = "0xA92CBC", Offset = "0xA92CBC", VA = "0xA92CBC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FEE9C", Offset = "0x6FEE9C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6001012")]
	[Address(RVA = "0xA92D58", Offset = "0xA92D58", VA = "0xA92D58")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x6001013")]
	[Address(RVA = "0xA92F9C", Offset = "0xA92F9C", VA = "0xA92F9C")]
	public void Play()
	{
	}

	[Token(Token = "0x6001014")]
	[Address(RVA = "0xA93124", Offset = "0xA93124", VA = "0xA93124")]
	public void Pause()
	{
	}

	[Token(Token = "0x6001015")]
	[Address(RVA = "0xA932A8", Offset = "0xA932A8", VA = "0xA932A8")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x6001016")]
	[Address(RVA = "0xA934E0", Offset = "0xA934E0", VA = "0xA934E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001017")]
	[Address(RVA = "0xA93EB4", Offset = "0xA93EB4", VA = "0xA93EB4")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6001018")]
	[Address(RVA = "0xA940D4", Offset = "0xA940D4", VA = "0xA940D4")]
	public void Stop()
	{
	}

	[Token(Token = "0x6001019")]
	[Address(RVA = "0xA94258", Offset = "0xA94258", VA = "0xA94258")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x600101A")]
	[Address(RVA = "0xA9433C", Offset = "0xA9433C", VA = "0xA9433C")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x20001EF")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x20003EC")]
	private enum PlaybackState
	{
		[Token(Token = "0x400188B")]
		Playing,
		[Token(Token = "0x400188C")]
		Paused,
		[Token(Token = "0x400188D")]
		Rewinding,
		[Token(Token = "0x400188E")]
		FastForwarding
	}

	[Token(Token = "0x4000E57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x4000E58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x4000E59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x4000E5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x4000E5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x4000E5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x4000E5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x4000E5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x4000E5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x4000E60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x4000E61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x4000E62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x4000E63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x4000E64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x4000E65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x4000E66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x4000E67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x4000E68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x4000E69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x4000E6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x4000E6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x600101B")]
	[Address(RVA = "0xA9494C", Offset = "0xA9494C", VA = "0xA9494C")]
	private void Start()
	{
	}

	[Token(Token = "0x600101C")]
	[Address(RVA = "0xA94C00", Offset = "0xA94C00", VA = "0xA94C00")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x600101D")]
	[Address(RVA = "0xA94D2C", Offset = "0xA94D2C", VA = "0xA94D2C")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x600101E")]
	[Address(RVA = "0xA94E38", Offset = "0xA94E38", VA = "0xA94E38")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x600101F")]
	[Address(RVA = "0xA94F18", Offset = "0xA94F18", VA = "0xA94F18")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x6001020")]
	[Address(RVA = "0xA94E0C", Offset = "0xA94E0C", VA = "0xA94E0C")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x6001021")]
	[Address(RVA = "0xA94FE0", Offset = "0xA94FE0", VA = "0xA94FE0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001022")]
	[Address(RVA = "0xA94AF4", Offset = "0xA94AF4", VA = "0xA94AF4")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x6001023")]
	[Address(RVA = "0xA95374", Offset = "0xA95374", VA = "0xA95374")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x20001F0")]
public static class VectorUtil
{
	[Token(Token = "0x6001024")]
	[Address(RVA = "0xA9EB00", Offset = "0xA9EB00", VA = "0xA9EB00")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x20001F1")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x4000E6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x4000E6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x6001025")]
	[Address(RVA = "0xAD3740", Offset = "0xAD3740", VA = "0xAD3740")]
	private void Start()
	{
	}

	[Token(Token = "0x6001026")]
	[Address(RVA = "0xAD3B10", Offset = "0xAD3B10", VA = "0xAD3B10")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x6001027")]
	[Address(RVA = "0xAD3BC8", Offset = "0xAD3BC8", VA = "0xAD3BC8")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x6001028")]
	[Address(RVA = "0xAD3DC8", Offset = "0xAD3DC8", VA = "0xAD3DC8")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x6001029")]
	[Address(RVA = "0xAD3EB0", Offset = "0xAD3EB0", VA = "0xAD3EB0")]
	private void Update()
	{
	}

	[Token(Token = "0x600102A")]
	[Address(RVA = "0xAD3F8C", Offset = "0xAD3F8C", VA = "0xAD3F8C")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x600102B")]
	[Address(RVA = "0xAD3FF8", Offset = "0xAD3FF8", VA = "0xAD3FF8")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x600102C")]
	[Address(RVA = "0xAD4000", Offset = "0xAD4000", VA = "0xAD4000")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FEF10", Offset = "0x6FEF10")]
	private void <Start>b__2_0(Toggle t)
	{
	}

	[Token(Token = "0x600102D")]
	[Address(RVA = "0xAD405C", Offset = "0xAD405C", VA = "0xAD405C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FEF20", Offset = "0x6FEF20")]
	private void <Start>b__2_1(Toggle t)
	{
	}

	[Token(Token = "0x600102E")]
	[Address(RVA = "0xAD40B8", Offset = "0xAD40B8", VA = "0xAD40B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FEF30", Offset = "0x6FEF30")]
	private void <Start>b__2_2(Toggle t)
	{
	}

	[Token(Token = "0x600102F")]
	[Address(RVA = "0xAD4114", Offset = "0xAD4114", VA = "0xAD4114")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FEF40", Offset = "0x6FEF40")]
	private void <Start>b__2_3(Toggle t)
	{
	}
}
[Token(Token = "0x20001F2")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x20003ED")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5A90", Offset = "0x6F5A90")]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400188F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x17000418")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001817")]
			[Address(RVA = "0xB136AC", Offset = "0xB136AC", VA = "0xB136AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000419")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001819")]
			[Address(RVA = "0xB13714", Offset = "0xB13714", VA = "0xB13714", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001814")]
		[Address(RVA = "0xB1355C", Offset = "0xB1355C", VA = "0xB1355C")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001815")]
		[Address(RVA = "0xB13590", Offset = "0xB13590", VA = "0xB13590", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001816")]
		[Address(RVA = "0xB13594", Offset = "0xB13594", VA = "0xB13594", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001818")]
		[Address(RVA = "0xB136B4", Offset = "0xB136B4", VA = "0xB136B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x4000E6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x4000E70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x4000E71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x6001030")]
	[Address(RVA = "0xB13260", Offset = "0xB13260", VA = "0xB13260")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001031")]
	[Address(RVA = "0xB13360", Offset = "0xB13360", VA = "0xB13360")]
	private void Update()
	{
	}

	[Token(Token = "0x6001032")]
	[Address(RVA = "0xB132F0", Offset = "0xB132F0", VA = "0xB132F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FEF50", Offset = "0x6FEF50")]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x6001033")]
	[Address(RVA = "0xB13588", Offset = "0xB13588", VA = "0xB13588")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x20001F3")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x4000E72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x4000E73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x4000E74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x4000E75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x4000E76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6F8564", Offset = "0x6F8564")]
	public int SubdivisionsU;

	[Token(Token = "0x4000E77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6F8580", Offset = "0x6F8580")]
	public int SubdivisionsV;

	[Token(Token = "0x4000E78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x4000E79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x4000E7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x4000E7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x6001034")]
	[Address(RVA = "0xC057EC", Offset = "0xC057EC", VA = "0xC057EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001035")]
	[Address(RVA = "0xC062A4", Offset = "0xC062A4", VA = "0xC062A4")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x20001F4")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x4000E7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x4000E7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x170002B5")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x6001036")]
		[Address(RVA = "0xB45994", Offset = "0xB45994", VA = "0xB45994")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001037")]
	[Address(RVA = "0xB459EC", Offset = "0xB459EC", VA = "0xB459EC")]
	public void Start()
	{
	}

	[Token(Token = "0x6001038")]
	[Address(RVA = "0xB45D30", Offset = "0xB45D30", VA = "0xB45D30")]
	public void Update()
	{
	}

	[Token(Token = "0x6001039")]
	[Address(RVA = "0xB45E14", Offset = "0xB45E14", VA = "0xB45E14")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6FEFB4", Offset = "0x6FEFB4")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x600103A")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x600103B")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x600103C")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x600103D")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x600103E")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x600103F")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x6001040")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x6001041")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6001042")]
	[Address(RVA = "0xB45E7C", Offset = "0xB45E7C", VA = "0xB45E7C")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x6001043")]
	[Address(RVA = "0xB45EB8", Offset = "0xB45EB8", VA = "0xB45EB8")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x6001044")]
	[Address(RVA = "0xB45F2C", Offset = "0xB45F2C", VA = "0xB45F2C")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x6001045")]
	[Address(RVA = "0xB46088", Offset = "0xB46088", VA = "0xB46088")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x6001046")]
	[Address(RVA = "0xB4615C", Offset = "0xB4615C", VA = "0xB4615C")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x6001047")]
	[Address(RVA = "0xB45C3C", Offset = "0xB45C3C", VA = "0xB45C3C")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x6001048")]
	[Address(RVA = "0xB4621C", Offset = "0xB4621C", VA = "0xB4621C")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x6001049")]
	[Address(RVA = "0xB46284", Offset = "0xB46284", VA = "0xB46284")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x600104A")]
	[Address(RVA = "0xB46368", Offset = "0xB46368", VA = "0xB46368")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x20001F5")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6F4E78", Offset = "0x6F4E78")]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x20003EE")]
	public enum DrawMode
	{
		[Token(Token = "0x4001893")]
		Opaque,
		[Token(Token = "0x4001894")]
		OpaqueWithClip,
		[Token(Token = "0x4001895")]
		TransparentDefaultAlpha,
		[Token(Token = "0x4001896")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x4000E7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private Shader _transparentShader;

	[Token(Token = "0x4000E7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private Shader _opaqueShader;

	[Token(Token = "0x4000E80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x4000E81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x4000E82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x4000E83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x4000E84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x4000E85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x4000E86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x4000E87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x4000E88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x4000E89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x4000E8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x4000E8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x4000E8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x4000E8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x4000E8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x4000E8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x4000E90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x4000E91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x170002B6")]
	public bool overlayEnabled
	{
		[Token(Token = "0x6001051")]
		[Address(RVA = "0x1165910", Offset = "0x1165910", VA = "0x1165910")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001052")]
		[Address(RVA = "0x11659A4", Offset = "0x11659A4", VA = "0x11659A4")]
		set
		{
		}
	}

	[Token(Token = "0x600104B")]
	[Address(RVA = "0x11642A0", Offset = "0x11642A0", VA = "0x11642A0")]
	private void Start()
	{
	}

	[Token(Token = "0x600104C")]
	[Address(RVA = "0x1164F10", Offset = "0x1164F10", VA = "0x1164F10")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600104D")]
	[Address(RVA = "0x1164F94", Offset = "0x1164F94", VA = "0x1164F94")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600104E")]
	[Address(RVA = "0x1165088", Offset = "0x1165088", VA = "0x1165088")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600104F")]
	[Address(RVA = "0x116517C", Offset = "0x116517C", VA = "0x116517C", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x6001050")]
	[Address(RVA = "0x1165380", Offset = "0x1165380", VA = "0x1165380")]
	private void Update()
	{
	}

	[Token(Token = "0x6001053")]
	[Address(RVA = "0x1165A74", Offset = "0x1165A74", VA = "0x1165A74")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x20001F6")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x20003EF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5AA0", Offset = "0x6F5AA0")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4001897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sceneIndex;

		[Token(Token = "0x4001898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartMenu <>4__this;

		[Token(Token = "0x600181A")]
		[Address(RVA = "0xA7C20C", Offset = "0xA7C20C", VA = "0xA7C20C")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x600181B")]
		[Address(RVA = "0xA7C31C", Offset = "0xA7C31C", VA = "0xA7C31C")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x4000E92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x4000E93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x4000E94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x6001055")]
	[Address(RVA = "0xA7C04C", Offset = "0xA7C04C", VA = "0xA7C04C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001056")]
	[Address(RVA = "0xA7C214", Offset = "0xA7C214", VA = "0xA7C214")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x6001057")]
	[Address(RVA = "0xA7C314", Offset = "0xA7C314", VA = "0xA7C314")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x20001F7")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x6F4EDC", Offset = "0x6F4EDC")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x20003F0")]
	public enum RotationAxes
	{
		[Token(Token = "0x400189A")]
		MouseXAndY,
		[Token(Token = "0x400189B")]
		MouseX,
		[Token(Token = "0x400189C")]
		MouseY
	}

	[Token(Token = "0x4000E95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x4000E96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x4000E97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x4000E98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x4000E99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x4000E9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x4000E9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x4000E9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationY;

	[Token(Token = "0x6001058")]
	[Address(RVA = "0xA923E8", Offset = "0xA923E8", VA = "0xA923E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001059")]
	[Address(RVA = "0xA92648", Offset = "0xA92648", VA = "0xA92648")]
	private void Start()
	{
	}

	[Token(Token = "0x600105A")]
	[Address(RVA = "0xA92708", Offset = "0xA92708", VA = "0xA92708")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x20001F8")]
public class ONSPAmbisonicsNative : MonoBehaviour
{
	[Token(Token = "0x20003F1")]
	public enum ovrAmbisonicsNativeStatus
	{
		[Token(Token = "0x400189E")]
		Uninitialized = -1,
		[Token(Token = "0x400189F")]
		NotEnabled,
		[Token(Token = "0x40018A0")]
		Success,
		[Token(Token = "0x40018A1")]
		StreamError,
		[Token(Token = "0x40018A2")]
		ProcessError,
		[Token(Token = "0x40018A3")]
		MaxStatValue
	}

	[Token(Token = "0x4000E9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource source;

	[Token(Token = "0x4000E9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int numFOAChannels;

	[Token(Token = "0x4000E9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int paramVSpeakerMode;

	[Token(Token = "0x4000EA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int paramAmbiStat;

	[Token(Token = "0x4000EA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAmbisonicsNativeStatus currentStatus;

	[Token(Token = "0x4000EA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool useVirtualSpeakers;

	[Token(Token = "0x170002B7")]
	public bool UseVirtualSpeakers
	{
		[Token(Token = "0x600105B")]
		[Address(RVA = "0xA96CA4", Offset = "0xA96CA4", VA = "0xA96CA4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600105C")]
		[Address(RVA = "0xA96CAC", Offset = "0xA96CAC", VA = "0xA96CAC")]
		set
		{
		}
	}

	[Token(Token = "0x600105D")]
	[Address(RVA = "0xA96CB8", Offset = "0xA96CB8", VA = "0xA96CB8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600105E")]
	[Address(RVA = "0xA96EEC", Offset = "0xA96EEC", VA = "0xA96EEC")]
	private void Update()
	{
	}

	[Token(Token = "0x600105F")]
	[Address(RVA = "0xA9713C", Offset = "0xA9713C", VA = "0xA9713C")]
	public ONSPAmbisonicsNative()
	{
	}
}
[Token(Token = "0x20001F9")]
public class ONSPAudioSource : MonoBehaviour
{
	[Token(Token = "0x20003F2")]
	private enum Parameters
	{
		[Token(Token = "0x40018A5")]
		P_GAIN,
		[Token(Token = "0x40018A6")]
		P_USEINVSQR,
		[Token(Token = "0x40018A7")]
		P_NEAR,
		[Token(Token = "0x40018A8")]
		P_FAR,
		[Token(Token = "0x40018A9")]
		P_RADIUS,
		[Token(Token = "0x40018AA")]
		P_DISABLE_RFL,
		[Token(Token = "0x40018AB")]
		P_VSPEAKERMODE,
		[Token(Token = "0x40018AC")]
		P_AMBISTAT,
		[Token(Token = "0x40018AD")]
		P_READONLY_GLOBAL_RFL_ENABLED,
		[Token(Token = "0x40018AE")]
		P_READONLY_NUM_VOICES,
		[Token(Token = "0x40018AF")]
		P_SENDLEVEL,
		[Token(Token = "0x40018B0")]
		P_NUM
	}

	[Token(Token = "0x4000EA3")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x4000EA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool enableSpatialization;

	[Token(Token = "0x4000EA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x4000EA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool useInvSqr;

	[Token(Token = "0x4000EA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float near;

	[Token(Token = "0x4000EA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float far;

	[Token(Token = "0x4000EA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float volumetricRadius;

	[Token(Token = "0x4000EAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float reverbSend;

	[Token(Token = "0x4000EAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool enableRfl;

	[Token(Token = "0x4000EAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPAudioSource RoomReflectionGizmoAS;

	[Token(Token = "0x170002B8")]
	public bool EnableSpatialization
	{
		[Token(Token = "0x6001062")]
		[Address(RVA = "0xA972A0", Offset = "0xA972A0", VA = "0xA972A0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001063")]
		[Address(RVA = "0xA972A8", Offset = "0xA972A8", VA = "0xA972A8")]
		set
		{
		}
	}

	[Token(Token = "0x170002B9")]
	public float Gain
	{
		[Token(Token = "0x6001064")]
		[Address(RVA = "0xA972B4", Offset = "0xA972B4", VA = "0xA972B4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001065")]
		[Address(RVA = "0xA972BC", Offset = "0xA972BC", VA = "0xA972BC")]
		set
		{
		}
	}

	[Token(Token = "0x170002BA")]
	public bool UseInvSqr
	{
		[Token(Token = "0x6001066")]
		[Address(RVA = "0xA97340", Offset = "0xA97340", VA = "0xA97340")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001067")]
		[Address(RVA = "0xA97348", Offset = "0xA97348", VA = "0xA97348")]
		set
		{
		}
	}

	[Token(Token = "0x170002BB")]
	public float Near
	{
		[Token(Token = "0x6001068")]
		[Address(RVA = "0xA97354", Offset = "0xA97354", VA = "0xA97354")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001069")]
		[Address(RVA = "0xA9735C", Offset = "0xA9735C", VA = "0xA9735C")]
		set
		{
		}
	}

	[Token(Token = "0x170002BC")]
	public float Far
	{
		[Token(Token = "0x600106A")]
		[Address(RVA = "0xA973E4", Offset = "0xA973E4", VA = "0xA973E4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600106B")]
		[Address(RVA = "0xA973EC", Offset = "0xA973EC", VA = "0xA973EC")]
		set
		{
		}
	}

	[Token(Token = "0x170002BD")]
	public float VolumetricRadius
	{
		[Token(Token = "0x600106C")]
		[Address(RVA = "0xA97474", Offset = "0xA97474", VA = "0xA97474")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600106D")]
		[Address(RVA = "0xA9747C", Offset = "0xA9747C", VA = "0xA9747C")]
		set
		{
		}
	}

	[Token(Token = "0x170002BE")]
	public float ReverbSend
	{
		[Token(Token = "0x600106E")]
		[Address(RVA = "0xA97504", Offset = "0xA97504", VA = "0xA97504")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600106F")]
		[Address(RVA = "0xA9750C", Offset = "0xA9750C", VA = "0xA9750C")]
		set
		{
		}
	}

	[Token(Token = "0x170002BF")]
	public bool EnableRfl
	{
		[Token(Token = "0x6001070")]
		[Address(RVA = "0xA97594", Offset = "0xA97594", VA = "0xA97594")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001071")]
		[Address(RVA = "0xA9759C", Offset = "0xA9759C", VA = "0xA9759C")]
		set
		{
		}
	}

	[PreserveSig]
	[Token(Token = "0x6001061")]
	[Address(RVA = "0xA971C0", Offset = "0xA971C0", VA = "0xA971C0")]
	private static extern void ONSP_GetGlobalRoomReflectionValues(ref bool reflOn, ref bool reverbOn, ref float width, ref float height, ref float length);

	[Token(Token = "0x6001072")]
	[Address(RVA = "0xA975A8", Offset = "0xA975A8", VA = "0xA975A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001073")]
	[Address(RVA = "0xA9771C", Offset = "0xA9771C", VA = "0xA9771C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001074")]
	[Address(RVA = "0xA97720", Offset = "0xA97720", VA = "0xA97720")]
	private void Update()
	{
	}

	[Token(Token = "0x6001075")]
	[Address(RVA = "0xA97614", Offset = "0xA97614", VA = "0xA97614")]
	public void SetParameters(ref AudioSource source)
	{
	}

	[Token(Token = "0x6001076")]
	[Address(RVA = "0xA977E8", Offset = "0xA977E8", VA = "0xA977E8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6001077")]
	[Address(RVA = "0xA97C48", Offset = "0xA97C48", VA = "0xA97C48")]
	private void OnDestroy()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6001078")]
	[Address(RVA = "0xA97D18", Offset = "0xA97D18", VA = "0xA97D18")]
	private static extern int OSP_SetGlobalVoiceLimit(int VoiceLimit);

	[Token(Token = "0x6001079")]
	[Address(RVA = "0xA97D98", Offset = "0xA97D98", VA = "0xA97D98")]
	public ONSPAudioSource()
	{
	}
}
[Token(Token = "0x20001FA")]
public class ONSPProfiler : MonoBehaviour
{
	[Token(Token = "0x4000EAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool profilerEnabled;

	[Token(Token = "0x4000EAE")]
	private const int DEFAULT_PORT = 2121;

	[Token(Token = "0x4000EAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int port;

	[Token(Token = "0x4000EB0")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x600107B")]
	[Address(RVA = "0xA97DB8", Offset = "0xA97DB8", VA = "0xA97DB8")]
	private void Start()
	{
	}

	[Token(Token = "0x600107C")]
	[Address(RVA = "0xA97DC4", Offset = "0xA97DC4", VA = "0xA97DC4")]
	private void Update()
	{
	}

	[PreserveSig]
	[Token(Token = "0x600107D")]
	[Address(RVA = "0xA97E7C", Offset = "0xA97E7C", VA = "0xA97E7C")]
	private static extern int ONSP_SetProfilerEnabled(bool enabled);

	[PreserveSig]
	[Token(Token = "0x600107E")]
	[Address(RVA = "0xA97DFC", Offset = "0xA97DFC", VA = "0xA97DFC")]
	private static extern int ONSP_SetProfilerPort(int port);

	[Token(Token = "0x600107F")]
	[Address(RVA = "0xA97EFC", Offset = "0xA97EFC", VA = "0xA97EFC")]
	public ONSPProfiler()
	{
	}
}
[Token(Token = "0x20001FB")]
public class ONSPPropagationGeometry : MonoBehaviour
{
	[Token(Token = "0x20003F3")]
	private struct MeshMaterial
	{
		[Token(Token = "0x40018B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshFilter meshFilter;

		[Token(Token = "0x40018B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x20003F4")]
	private struct TerrainMaterial
	{
		[Token(Token = "0x40018B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Terrain terrain;

		[Token(Token = "0x40018B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;

		[Token(Token = "0x40018B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh[] treePrototypeMeshes;
	}

	[Token(Token = "0x4000EB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string GeometryAssetDirectory;

	[Token(Token = "0x4000EB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string filePathRelative;

	[Token(Token = "0x4000EB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool fileEnabled;

	[Token(Token = "0x4000EB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool includeChildMeshes;

	[Token(Token = "0x4000EB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr geometryHandle;

	[Token(Token = "0x4000EB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int OSPSuccess;

	[Token(Token = "0x4000EB7")]
	public const string GEOMETRY_FILE_EXTENSION = "ovramesh";

	[Token(Token = "0x4000EB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int terrainDecimation;

	[Token(Token = "0x170002C0")]
	public static string GeometryAssetPath
	{
		[Token(Token = "0x6001080")]
		[Address(RVA = "0xA9A978", Offset = "0xA9A978", VA = "0xA9A978")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002C1")]
	public string filePath
	{
		[Token(Token = "0x6001081")]
		[Address(RVA = "0xA9AA04", Offset = "0xA9AA04", VA = "0xA9AA04")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001082")]
	[Address(RVA = "0xA9AA7C", Offset = "0xA9AA7C", VA = "0xA9AA7C")]
	private static string GetPath(Transform current)
	{
		return null;
	}

	[Token(Token = "0x6001083")]
	[Address(RVA = "0xA9ABC4", Offset = "0xA9ABC4", VA = "0xA9ABC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001084")]
	[Address(RVA = "0xA9ABC8", Offset = "0xA9ABC8", VA = "0xA9ABC8")]
	private void CreatePropagationGeometry()
	{
	}

	[Token(Token = "0x6001085")]
	[Address(RVA = "0xA9B128", Offset = "0xA9B128", VA = "0xA9B128")]
	private void Update()
	{
	}

	[Token(Token = "0x6001086")]
	[Address(RVA = "0xA9B4C0", Offset = "0xA9B4C0", VA = "0xA9B4C0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001087")]
	[Address(RVA = "0xA9B61C", Offset = "0xA9B61C", VA = "0xA9B61C")]
	private static void traverseMeshHierarchy(GameObject obj, ONSPPropagationMaterial[] currentMaterials, bool includeChildren, List<MeshMaterial> meshMaterials, List<TerrainMaterial> terrainMaterials, bool ignoreStatic, ref int ignoredMeshCount)
	{
	}

	[Token(Token = "0x6001088")]
	[Address(RVA = "0xA9BCF4", Offset = "0xA9BCF4", VA = "0xA9BCF4")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal)
	{
		return default(int);
	}

	[Token(Token = "0x6001089")]
	[Address(RVA = "0xA9BD30", Offset = "0xA9BD30", VA = "0xA9BD30")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal, bool ignoreStatic, ref int ignoredMeshCount)
	{
		return default(int);
	}

	[Token(Token = "0x600108A")]
	[Address(RVA = "0xA9D348", Offset = "0xA9D348", VA = "0xA9D348")]
	private static void uploadMeshFilter(List<Vector3> tempVertices, List<int> tempIndices, MeshGroup[] groups, float[] vertices, int[] indices, ref int vertexOffset, ref int indexOffset, ref int groupOffset, Mesh mesh, ONSPPropagationMaterial[] materials, Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x600108B")]
	[Address(RVA = "0xA9D220", Offset = "0xA9D220", VA = "0xA9D220")]
	private static void updateCountsForMesh(ref int totalVertexCount, ref uint totalIndexCount, ref int totalFaceCount, ref int totalMaterialCount, Mesh mesh)
	{
	}

	[Token(Token = "0x600108C")]
	[Address(RVA = "0xA9AF60", Offset = "0xA9AF60", VA = "0xA9AF60")]
	public void UploadGeometry()
	{
	}

	[Token(Token = "0x600108D")]
	[Address(RVA = "0xA9AD94", Offset = "0xA9AD94", VA = "0xA9AD94")]
	public bool ReadFile()
	{
		return default(bool);
	}

	[Token(Token = "0x600108E")]
	[Address(RVA = "0xA9D7F4", Offset = "0xA9D7F4", VA = "0xA9D7F4")]
	public bool WriteToObj()
	{
		return default(bool);
	}

	[Token(Token = "0x600108F")]
	[Address(RVA = "0xA9DC30", Offset = "0xA9DC30", VA = "0xA9DC30")]
	public ONSPPropagationGeometry()
	{
	}
}
[Token(Token = "0x20001FC")]
internal class ONSPPropagation
{
	[Token(Token = "0x20003F5")]
	public enum ovrAudioScalarType : uint
	{
		[Token(Token = "0x40018B7")]
		Int8,
		[Token(Token = "0x40018B8")]
		UInt8,
		[Token(Token = "0x40018B9")]
		Int16,
		[Token(Token = "0x40018BA")]
		UInt16,
		[Token(Token = "0x40018BB")]
		Int32,
		[Token(Token = "0x40018BC")]
		UInt32,
		[Token(Token = "0x40018BD")]
		Int64,
		[Token(Token = "0x40018BE")]
		UInt64,
		[Token(Token = "0x40018BF")]
		Float16,
		[Token(Token = "0x40018C0")]
		Float32,
		[Token(Token = "0x40018C1")]
		Float64
	}

	[Token(Token = "0x20003F6")]
	public class ClientType
	{
		[Token(Token = "0x40018C2")]
		public const uint OVRA_CLIENT_TYPE_NATIVE = 0u;

		[Token(Token = "0x40018C3")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2016 = 1u;

		[Token(Token = "0x40018C4")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_1 = 2u;

		[Token(Token = "0x40018C5")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_2 = 3u;

		[Token(Token = "0x40018C6")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2018_1 = 4u;

		[Token(Token = "0x40018C7")]
		public const uint OVRA_CLIENT_TYPE_FMOD = 5u;

		[Token(Token = "0x40018C8")]
		public const uint OVRA_CLIENT_TYPE_UNITY = 6u;

		[Token(Token = "0x40018C9")]
		public const uint OVRA_CLIENT_TYPE_UE4 = 7u;

		[Token(Token = "0x40018CA")]
		public const uint OVRA_CLIENT_TYPE_VST = 8u;

		[Token(Token = "0x40018CB")]
		public const uint OVRA_CLIENT_TYPE_AAX = 9u;

		[Token(Token = "0x40018CC")]
		public const uint OVRA_CLIENT_TYPE_TEST = 10u;

		[Token(Token = "0x40018CD")]
		public const uint OVRA_CLIENT_TYPE_OTHER = 11u;

		[Token(Token = "0x40018CE")]
		public const uint OVRA_CLIENT_TYPE_WWISE_UNKNOWN = 12u;

		[Token(Token = "0x40018CF")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_1 = 13u;

		[Token(Token = "0x40018D0")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_2 = 14u;

		[Token(Token = "0x600181C")]
		[Address(RVA = "0xA983B0", Offset = "0xA983B0", VA = "0xA983B0")]
		public ClientType()
		{
		}
	}

	[Token(Token = "0x20003F7")]
	public interface PropagationInterface
	{
		[Token(Token = "0x600181D")]
		int SetPropagationQuality(float quality);

		[Token(Token = "0x600181E")]
		int SetPropagationThreadAffinity(ulong cpuMask);

		[Token(Token = "0x600181F")]
		int CreateAudioGeometry(out IntPtr geometry);

		[Token(Token = "0x6001820")]
		int DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6001821")]
		int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount);

		[Token(Token = "0x6001822")]
		int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6001823")]
		int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6001824")]
		int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001825")]
		int AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001826")]
		int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6001827")]
		int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6001828")]
		int CreateAudioMaterial(out IntPtr material);

		[Token(Token = "0x6001829")]
		int DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x600182A")]
		int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x600182B")]
		int AudioMaterialReset(IntPtr material, MaterialProperty property);
	}

	[Token(Token = "0x20003F8")]
	public class UnityNativeInterface : PropagationInterface
	{
		[Token(Token = "0x40018D1")]
		public const string strOSPS = "AudioPluginOculusSpatializer";

		[Token(Token = "0x40018D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x1700041A")]
		private IntPtr context
		{
			[Token(Token = "0x600182C")]
			[Address(RVA = "0xA99020", Offset = "0xA99020", VA = "0xA99020")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x600182D")]
		[Address(RVA = "0xA99084", Offset = "0xA99084", VA = "0xA99084")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x600182E")]
		[Address(RVA = "0xA99114", Offset = "0xA99114", VA = "0xA99114")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x600182F")]
		[Address(RVA = "0xA991A4", Offset = "0xA991A4", VA = "0xA991A4", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001830")]
		[Address(RVA = "0xA991C8", Offset = "0xA991C8", VA = "0xA991C8")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6001831")]
		[Address(RVA = "0xA99258", Offset = "0xA99258", VA = "0xA99258", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001832")]
		[Address(RVA = "0xA9927C", Offset = "0xA9927C", VA = "0xA9927C")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6001833")]
		[Address(RVA = "0xA99308", Offset = "0xA99308", VA = "0xA99308", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001834")]
		[Address(RVA = "0xA9932C", Offset = "0xA9932C", VA = "0xA9932C")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6001835")]
		[Address(RVA = "0xA993AC", Offset = "0xA993AC", VA = "0xA993AC", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001836")]
		[Address(RVA = "0xA993B4", Offset = "0xA993B4", VA = "0xA993B4")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6001837")]
		[Address(RVA = "0xA994D4", Offset = "0xA994D4", VA = "0xA994D4", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001838")]
		[Address(RVA = "0xA995CC", Offset = "0xA995CC", VA = "0xA995CC")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6001839")]
		[Address(RVA = "0xA99664", Offset = "0xA99664", VA = "0xA99664", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600183A")]
		[Address(RVA = "0xA99670", Offset = "0xA99670", VA = "0xA99670")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x600183B")]
		[Address(RVA = "0xA9979C", Offset = "0xA9979C", VA = "0xA9979C", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600183C")]
		[Address(RVA = "0xA997A8", Offset = "0xA997A8", VA = "0xA997A8")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600183D")]
		[Address(RVA = "0xA99854", Offset = "0xA99854", VA = "0xA99854", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600183E")]
		[Address(RVA = "0xA99860", Offset = "0xA99860", VA = "0xA99860")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600183F")]
		[Address(RVA = "0xA9990C", Offset = "0xA9990C", VA = "0xA9990C", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001840")]
		[Address(RVA = "0xA99918", Offset = "0xA99918", VA = "0xA99918")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6001841")]
		[Address(RVA = "0xA999C4", Offset = "0xA999C4", VA = "0xA999C4", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001842")]
		[Address(RVA = "0xA999D0", Offset = "0xA999D0", VA = "0xA999D0")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6001843")]
		[Address(RVA = "0xA99A5C", Offset = "0xA99A5C", VA = "0xA99A5C", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001844")]
		[Address(RVA = "0xA99A80", Offset = "0xA99A80", VA = "0xA99A80")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6001845")]
		[Address(RVA = "0xA99B00", Offset = "0xA99B00", VA = "0xA99B00", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001846")]
		[Address(RVA = "0xA99B08", Offset = "0xA99B08", VA = "0xA99B08")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6001847")]
		[Address(RVA = "0xA99BB0", Offset = "0xA99BB0", VA = "0xA99BB0", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001848")]
		[Address(RVA = "0xA99BBC", Offset = "0xA99BBC", VA = "0xA99BBC")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6001849")]
		[Address(RVA = "0xA99C64", Offset = "0xA99C64", VA = "0xA99C64", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600184A")]
		[Address(RVA = "0xA99C74", Offset = "0xA99C74", VA = "0xA99C74")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x600184B")]
		[Address(RVA = "0xA99D04", Offset = "0xA99D04", VA = "0xA99D04", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x600184C")]
		[Address(RVA = "0xA9835C", Offset = "0xA9835C", VA = "0xA9835C")]
		public UnityNativeInterface()
		{
		}
	}

	[Token(Token = "0x20003F9")]
	public class WwisePluginInterface : PropagationInterface
	{
		[Token(Token = "0x40018D3")]
		public const string strOSPS = "OculusSpatializerWwise";

		[Token(Token = "0x40018D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x1700041B")]
		private IntPtr context
		{
			[Token(Token = "0x600184D")]
			[Address(RVA = "0xA99D10", Offset = "0xA99D10", VA = "0xA99D10")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x600184E")]
		[Address(RVA = "0xA981A4", Offset = "0xA981A4", VA = "0xA981A4")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x600184F")]
		[Address(RVA = "0xA99D74", Offset = "0xA99D74", VA = "0xA99D74")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6001850")]
		[Address(RVA = "0xA99E04", Offset = "0xA99E04", VA = "0xA99E04", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001851")]
		[Address(RVA = "0xA99E28", Offset = "0xA99E28", VA = "0xA99E28")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6001852")]
		[Address(RVA = "0xA99EB8", Offset = "0xA99EB8", VA = "0xA99EB8", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001853")]
		[Address(RVA = "0xA99EDC", Offset = "0xA99EDC", VA = "0xA99EDC")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6001854")]
		[Address(RVA = "0xA99F6C", Offset = "0xA99F6C", VA = "0xA99F6C", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001855")]
		[Address(RVA = "0xA99F90", Offset = "0xA99F90", VA = "0xA99F90")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6001856")]
		[Address(RVA = "0xA9A010", Offset = "0xA9A010", VA = "0xA9A010", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001857")]
		[Address(RVA = "0xA9A018", Offset = "0xA9A018", VA = "0xA9A018")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6001858")]
		[Address(RVA = "0xA9A138", Offset = "0xA9A138", VA = "0xA9A138", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001859")]
		[Address(RVA = "0xA9A230", Offset = "0xA9A230", VA = "0xA9A230")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x600185A")]
		[Address(RVA = "0xA9A2C8", Offset = "0xA9A2C8", VA = "0xA9A2C8", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600185B")]
		[Address(RVA = "0xA9A2D4", Offset = "0xA9A2D4", VA = "0xA9A2D4")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x600185C")]
		[Address(RVA = "0xA9A400", Offset = "0xA9A400", VA = "0xA9A400", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600185D")]
		[Address(RVA = "0xA9A40C", Offset = "0xA9A40C", VA = "0xA9A40C")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600185E")]
		[Address(RVA = "0xA9A4B8", Offset = "0xA9A4B8", VA = "0xA9A4B8", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600185F")]
		[Address(RVA = "0xA9A4C4", Offset = "0xA9A4C4", VA = "0xA9A4C4")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001860")]
		[Address(RVA = "0xA9A570", Offset = "0xA9A570", VA = "0xA9A570", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001861")]
		[Address(RVA = "0xA9A57C", Offset = "0xA9A57C", VA = "0xA9A57C")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6001862")]
		[Address(RVA = "0xA9A628", Offset = "0xA9A628", VA = "0xA9A628", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001863")]
		[Address(RVA = "0xA9A634", Offset = "0xA9A634", VA = "0xA9A634")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6001864")]
		[Address(RVA = "0xA9A6C4", Offset = "0xA9A6C4", VA = "0xA9A6C4", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001865")]
		[Address(RVA = "0xA9A6E8", Offset = "0xA9A6E8", VA = "0xA9A6E8")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6001866")]
		[Address(RVA = "0xA9A768", Offset = "0xA9A768", VA = "0xA9A768", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001867")]
		[Address(RVA = "0xA9A770", Offset = "0xA9A770", VA = "0xA9A770")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6001868")]
		[Address(RVA = "0xA9A818", Offset = "0xA9A818", VA = "0xA9A818", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001869")]
		[Address(RVA = "0xA9A824", Offset = "0xA9A824", VA = "0xA9A824")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x600186A")]
		[Address(RVA = "0xA9A8CC", Offset = "0xA9A8CC", VA = "0xA9A8CC", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600186B")]
		[Address(RVA = "0xA9A8DC", Offset = "0xA9A8DC", VA = "0xA9A8DC")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x600186C")]
		[Address(RVA = "0xA9A96C", Offset = "0xA9A96C", VA = "0xA9A96C", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x600186D")]
		[Address(RVA = "0xA98234", Offset = "0xA98234", VA = "0xA98234")]
		public WwisePluginInterface()
		{
		}
	}

	[Token(Token = "0x20003FA")]
	public class FMODPluginInterface : PropagationInterface
	{
		[Token(Token = "0x40018D5")]
		public const string strOSPS = "OculusSpatializerFMOD";

		[Token(Token = "0x40018D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x1700041C")]
		private IntPtr context
		{
			[Token(Token = "0x600186E")]
			[Address(RVA = "0xA983B8", Offset = "0xA983B8", VA = "0xA983B8")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x600186F")]
		[Address(RVA = "0xA98280", Offset = "0xA98280", VA = "0xA98280")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6001870")]
		[Address(RVA = "0xA9841C", Offset = "0xA9841C", VA = "0xA9841C")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6001871")]
		[Address(RVA = "0xA984AC", Offset = "0xA984AC", VA = "0xA984AC", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001872")]
		[Address(RVA = "0xA984D0", Offset = "0xA984D0", VA = "0xA984D0")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6001873")]
		[Address(RVA = "0xA98560", Offset = "0xA98560", VA = "0xA98560", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001874")]
		[Address(RVA = "0xA98584", Offset = "0xA98584", VA = "0xA98584")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6001875")]
		[Address(RVA = "0xA98614", Offset = "0xA98614", VA = "0xA98614", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001876")]
		[Address(RVA = "0xA98638", Offset = "0xA98638", VA = "0xA98638")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6001877")]
		[Address(RVA = "0xA986B8", Offset = "0xA986B8", VA = "0xA986B8", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001878")]
		[Address(RVA = "0xA986C0", Offset = "0xA986C0", VA = "0xA986C0")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6001879")]
		[Address(RVA = "0xA987E0", Offset = "0xA987E0", VA = "0xA987E0", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600187A")]
		[Address(RVA = "0xA988D8", Offset = "0xA988D8", VA = "0xA988D8")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x600187B")]
		[Address(RVA = "0xA98970", Offset = "0xA98970", VA = "0xA98970", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600187C")]
		[Address(RVA = "0xA9897C", Offset = "0xA9897C", VA = "0xA9897C")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x600187D")]
		[Address(RVA = "0xA98AA8", Offset = "0xA98AA8", VA = "0xA98AA8", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600187E")]
		[Address(RVA = "0xA98AB4", Offset = "0xA98AB4", VA = "0xA98AB4")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600187F")]
		[Address(RVA = "0xA98B60", Offset = "0xA98B60", VA = "0xA98B60", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001880")]
		[Address(RVA = "0xA98B6C", Offset = "0xA98B6C", VA = "0xA98B6C")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001881")]
		[Address(RVA = "0xA98C18", Offset = "0xA98C18", VA = "0xA98C18", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001882")]
		[Address(RVA = "0xA98C24", Offset = "0xA98C24", VA = "0xA98C24")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6001883")]
		[Address(RVA = "0xA98CD0", Offset = "0xA98CD0", VA = "0xA98CD0", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001884")]
		[Address(RVA = "0xA98CDC", Offset = "0xA98CDC", VA = "0xA98CDC")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6001885")]
		[Address(RVA = "0xA98D6C", Offset = "0xA98D6C", VA = "0xA98D6C", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001886")]
		[Address(RVA = "0xA98D90", Offset = "0xA98D90", VA = "0xA98D90")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6001887")]
		[Address(RVA = "0xA98E10", Offset = "0xA98E10", VA = "0xA98E10", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001888")]
		[Address(RVA = "0xA98E18", Offset = "0xA98E18", VA = "0xA98E18")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6001889")]
		[Address(RVA = "0xA98EC0", Offset = "0xA98EC0", VA = "0xA98EC0", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600188A")]
		[Address(RVA = "0xA98ECC", Offset = "0xA98ECC", VA = "0xA98ECC")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x600188B")]
		[Address(RVA = "0xA98F74", Offset = "0xA98F74", VA = "0xA98F74", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600188C")]
		[Address(RVA = "0xA98F84", Offset = "0xA98F84", VA = "0xA98F84")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x600188D")]
		[Address(RVA = "0xA99014", Offset = "0xA99014", VA = "0xA99014", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x600188E")]
		[Address(RVA = "0xA98310", Offset = "0xA98310", VA = "0xA98310")]
		public FMODPluginInterface()
		{
		}
	}

	[Token(Token = "0x4000EB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PropagationInterface CachedInterface;

	[Token(Token = "0x170002C2")]
	public static PropagationInterface Interface
	{
		[Token(Token = "0x6001091")]
		[Address(RVA = "0xA97F0C", Offset = "0xA97F0C", VA = "0xA97F0C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001092")]
	[Address(RVA = "0xA97F7C", Offset = "0xA97F7C", VA = "0xA97F7C")]
	private static PropagationInterface FindInterface()
	{
		return null;
	}

	[Token(Token = "0x6001093")]
	[Address(RVA = "0xA983A8", Offset = "0xA983A8", VA = "0xA983A8")]
	public ONSPPropagation()
	{
	}
}
[Token(Token = "0x20001FD")]
public sealed class ONSPPropagationMaterial : MonoBehaviour
{
	[Token(Token = "0x20003FB")]
	public enum Preset
	{
		[Token(Token = "0x40018D8")]
		Custom,
		[Token(Token = "0x40018D9")]
		AcousticTile,
		[Token(Token = "0x40018DA")]
		Brick,
		[Token(Token = "0x40018DB")]
		BrickPainted,
		[Token(Token = "0x40018DC")]
		Carpet,
		[Token(Token = "0x40018DD")]
		CarpetHeavy,
		[Token(Token = "0x40018DE")]
		CarpetHeavyPadded,
		[Token(Token = "0x40018DF")]
		CeramicTile,
		[Token(Token = "0x40018E0")]
		Concrete,
		[Token(Token = "0x40018E1")]
		ConcreteRough,
		[Token(Token = "0x40018E2")]
		ConcreteBlock,
		[Token(Token = "0x40018E3")]
		ConcreteBlockPainted,
		[Token(Token = "0x40018E4")]
		Curtain,
		[Token(Token = "0x40018E5")]
		Foliage,
		[Token(Token = "0x40018E6")]
		Glass,
		[Token(Token = "0x40018E7")]
		GlassHeavy,
		[Token(Token = "0x40018E8")]
		Grass,
		[Token(Token = "0x40018E9")]
		Gravel,
		[Token(Token = "0x40018EA")]
		GypsumBoard,
		[Token(Token = "0x40018EB")]
		PlasterOnBrick,
		[Token(Token = "0x40018EC")]
		PlasterOnConcreteBlock,
		[Token(Token = "0x40018ED")]
		Soil,
		[Token(Token = "0x40018EE")]
		SoundProof,
		[Token(Token = "0x40018EF")]
		Snow,
		[Token(Token = "0x40018F0")]
		Steel,
		[Token(Token = "0x40018F1")]
		Water,
		[Token(Token = "0x40018F2")]
		WoodThin,
		[Token(Token = "0x40018F3")]
		WoodThick,
		[Token(Token = "0x40018F4")]
		WoodFloor,
		[Token(Token = "0x40018F5")]
		WoodOnConcrete
	}

	[Serializable]
	[Token(Token = "0x20003FC")]
	public sealed class Point
	{
		[Token(Token = "0x40018F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float frequency;

		[Token(Token = "0x40018F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float data;

		[Token(Token = "0x600188F")]
		[Address(RVA = "0x11556D0", Offset = "0x11556D0", VA = "0x11556D0")]
		public Point(float frequency = 0f, float data = 0f)
		{
		}

		[Token(Token = "0x6001890")]
		[Address(RVA = "0x1155818", Offset = "0x1155818", VA = "0x1155818")]
		public static implicit operator Point(Vector2 v)
		{
			return null;
		}

		[Token(Token = "0x6001891")]
		[Address(RVA = "0x1155888", Offset = "0x1155888", VA = "0x1155888")]
		public static implicit operator Vector2(Point point)
		{
			return default(Vector2);
		}
	}

	[Serializable]
	[Token(Token = "0x20003FD")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x6F5AB0", Offset = "0x6F5AB0")]
	public sealed class Spectrum
	{
		[Serializable]
		[Token(Token = "0x200042D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5C48", Offset = "0x6F5C48")]
		private sealed class <>c
		{
			[Token(Token = "0x40019B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40019B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Point, float> <>9__3_0;

			[Token(Token = "0x40019B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Point, float> <>9__3_1;

			[Token(Token = "0x6001916")]
			[Address(RVA = "0x1155CE0", Offset = "0x1155CE0", VA = "0x1155CE0")]
			public <>c()
			{
			}

			[Token(Token = "0x6001917")]
			[Address(RVA = "0x1155CE8", Offset = "0x1155CE8", VA = "0x1155CE8")]
			internal float <get_Item>b__3_0(Point p)
			{
				return default(float);
			}

			[Token(Token = "0x6001918")]
			[Address(RVA = "0x1155D00", Offset = "0x1155D00", VA = "0x1155D00")]
			internal float <get_Item>b__3_1(Point p)
			{
				return default(float);
			}
		}

		[Token(Token = "0x40018F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int selection;

		[Token(Token = "0x40018F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Point> points;

		[Token(Token = "0x1700041D")]
		public float Item
		{
			[Token(Token = "0x6001892")]
			[Address(RVA = "0x11558C0", Offset = "0x11558C0", VA = "0x11558C0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001893")]
		[Address(RVA = "0x11557A0", Offset = "0x11557A0", VA = "0x11557A0")]
		public Spectrum()
		{
		}
	}

	[Token(Token = "0x4000EBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr materialHandle;

	[Token(Token = "0x4000EBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F869C", Offset = "0x6F869C")]
	public Spectrum absorption;

	[Token(Token = "0x4000EBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F86D4", Offset = "0x6F86D4")]
	public Spectrum transmission;

	[Token(Token = "0x4000EBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F870C", Offset = "0x6F870C")]
	public Spectrum scattering;

	[Token(Token = "0x4000EBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Preset preset_;

	[Token(Token = "0x170002C3")]
	public Preset preset
	{
		[Token(Token = "0x6001094")]
		[Address(RVA = "0x114D5B4", Offset = "0x114D5B4", VA = "0x114D5B4")]
		get
		{
			return default(Preset);
		}
		[Token(Token = "0x6001095")]
		[Address(RVA = "0x114D5BC", Offset = "0x114D5BC", VA = "0x114D5BC")]
		set
		{
		}
	}

	[Token(Token = "0x6001096")]
	[Address(RVA = "0x114D778", Offset = "0x114D778", VA = "0x114D778")]
	private void Start()
	{
	}

	[Token(Token = "0x6001097")]
	[Address(RVA = "0x114D77C", Offset = "0x114D77C", VA = "0x114D77C")]
	public void StartInternal()
	{
	}

	[Token(Token = "0x6001098")]
	[Address(RVA = "0x114DEB0", Offset = "0x114DEB0", VA = "0x114DEB0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001099")]
	[Address(RVA = "0x114DEB4", Offset = "0x114DEB4", VA = "0x114DEB4")]
	public void DestroyInternal()
	{
	}

	[Token(Token = "0x600109A")]
	[Address(RVA = "0x114D8EC", Offset = "0x114D8EC", VA = "0x114D8EC")]
	public void UploadMaterial()
	{
	}

	[Token(Token = "0x600109B")]
	[Address(RVA = "0x114D5E4", Offset = "0x114D5E4", VA = "0x114D5E4")]
	public void SetPreset(Preset preset)
	{
	}

	[Token(Token = "0x600109C")]
	[Address(RVA = "0x114DF9C", Offset = "0x114DF9C", VA = "0x114DF9C")]
	private static void AcousticTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600109D")]
	[Address(RVA = "0x114E3FC", Offset = "0x114E3FC", VA = "0x114E3FC")]
	private static void Brick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600109E")]
	[Address(RVA = "0x114E85C", Offset = "0x114E85C", VA = "0x114E85C")]
	private static void BrickPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600109F")]
	[Address(RVA = "0x114ECBC", Offset = "0x114ECBC", VA = "0x114ECBC")]
	private static void Carpet(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60010A0")]
	[Address(RVA = "0x114F11C", Offset = "0x114F11C", VA = "0x114F11C")]
	private static void CarpetHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60010A1")]
	[Address(RVA = "0x114F57C", Offset = "0x114F57C", VA = "0x114F57C")]
	private static void CarpetHeavyPadded(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60010A2")]
	[Address(RVA = "0x114F9DC", Offset = "0x114F9DC", VA = "0x114F9DC")]
	private static void CeramicTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60010A3")]
	[Address(RVA = "0x114FE3C", Offset = "0x114FE3C", VA = "0x114FE3C")]
	private static void Concrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60010A4")]
	[Address(RVA = "0x115029C", Offset = "0x115029C", VA = "0x115029C")]
	private static void ConcreteRough(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60010A5")]
	[Address(RVA = "0x11506FC", Offset = "0x11506FC", VA = "0x11506FC")]
	private static void ConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60010A6")]
	[Address(RVA = "0x1150B5C", Offset = "0x1150B5C", VA = "0x1150B5C")]
	private static void ConcreteBlockPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60010A7")]
	[Address(RVA = "0x1150FBC", Offset = "0x1150FBC", VA = "0x1150FBC")]
	private static void Curtain(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60010A8")]
	[Address(RVA = "0x115141C", Offset = "0x115141C", VA = "0x115141C")]
	private static void Foliage(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60010A9")]
	[Address(RVA = "0x115187C", Offset = "0x115187C", VA = "0x115187C")]
	private static void Glass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60010AA")]
	[Address(RVA = "0x1151CD4", Offset = "0x1151CD4", VA = "0x1151CD4")]
	private static void GlassHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60010AB")]
	[Address(RVA = "0x1152134", Offset = "0x1152134", VA = "0x1152134")]
	private static void Grass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60010AC")]
	[Address(RVA = "0x1152470", Offset = "0x1152470", VA = "0x1152470")]
	private static void Gravel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60010AD")]
	[Address(RVA = "0x11527AC", Offset = "0x11527AC", VA = "0x11527AC")]
	private static void GypsumBoard(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60010AE")]
	[Address(RVA = "0x1152C0C", Offset = "0x1152C0C", VA = "0x1152C0C")]
	private static void PlasterOnBrick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60010AF")]
	[Address(RVA = "0x115306C", Offset = "0x115306C", VA = "0x115306C")]
	private static void PlasterOnConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60010B0")]
	[Address(RVA = "0x11534CC", Offset = "0x11534CC", VA = "0x11534CC")]
	private static void Soil(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60010B1")]
	[Address(RVA = "0x1153808", Offset = "0x1153808", VA = "0x1153808")]
	private static void SoundProof(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60010B2")]
	[Address(RVA = "0x1153964", Offset = "0x1153964", VA = "0x1153964")]
	private static void Snow(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60010B3")]
	[Address(RVA = "0x1153CA0", Offset = "0x1153CA0", VA = "0x1153CA0")]
	private static void Steel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60010B4")]
	[Address(RVA = "0x11540F8", Offset = "0x11540F8", VA = "0x11540F8")]
	private static void Water(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60010B5")]
	[Address(RVA = "0x1154558", Offset = "0x1154558", VA = "0x1154558")]
	private static void WoodThin(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60010B6")]
	[Address(RVA = "0x11549B0", Offset = "0x11549B0", VA = "0x11549B0")]
	private static void WoodThick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60010B7")]
	[Address(RVA = "0x1154E10", Offset = "0x1154E10", VA = "0x1154E10")]
	private static void WoodFloor(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60010B8")]
	[Address(RVA = "0x1155270", Offset = "0x1155270", VA = "0x1155270")]
	private static void WoodOnConcrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60010B9")]
	[Address(RVA = "0x1155708", Offset = "0x1155708", VA = "0x1155708")]
	public ONSPPropagationMaterial()
	{
	}
}
[Token(Token = "0x20001FE")]
public class ONSPPropagationSettings : MonoBehaviour
{
	[Token(Token = "0x4000EBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float quality;

	[Token(Token = "0x60010BA")]
	[Address(RVA = "0x1155D18", Offset = "0x1155D18", VA = "0x1155D18")]
	private void Update()
	{
	}

	[Token(Token = "0x60010BB")]
	[Address(RVA = "0x1155DEC", Offset = "0x1155DEC", VA = "0x1155DEC")]
	public ONSPPropagationSettings()
	{
	}
}
[Token(Token = "0x20001FF")]
public sealed class ONSPSettings : ScriptableObject
{
	[Token(Token = "0x4000EC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public int voiceLimit;

	[Token(Token = "0x4000EC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPSettings instance;

	[Token(Token = "0x170002C4")]
	public static ONSPSettings Instance
	{
		[Token(Token = "0x60010BC")]
		[Address(RVA = "0x11563A8", Offset = "0x11563A8", VA = "0x11563A8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60010BD")]
	[Address(RVA = "0x11564BC", Offset = "0x11564BC", VA = "0x11564BC")]
	public ONSPSettings()
	{
	}
}
[Token(Token = "0x2000200")]
public class ONSPVersion : MonoBehaviour
{
	[Token(Token = "0x4000EC2")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[PreserveSig]
	[Token(Token = "0x60010BE")]
	[Address(RVA = "0x11564CC", Offset = "0x11564CC", VA = "0x11564CC")]
	private static extern void ONSP_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[Token(Token = "0x60010BF")]
	[Address(RVA = "0x1156564", Offset = "0x1156564", VA = "0x1156564")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010C0")]
	[Address(RVA = "0x1156670", Offset = "0x1156670", VA = "0x1156670")]
	private void Start()
	{
	}

	[Token(Token = "0x60010C1")]
	[Address(RVA = "0x1156674", Offset = "0x1156674", VA = "0x1156674")]
	private void Update()
	{
	}

	[Token(Token = "0x60010C2")]
	[Address(RVA = "0x1156678", Offset = "0x1156678", VA = "0x1156678")]
	public ONSPVersion()
	{
	}
}
[Token(Token = "0x2000201")]
public class OculusSpatializerUnity : MonoBehaviour
{
	[Token(Token = "0x20003FE")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data);

	[Token(Token = "0x4000EC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x4000EC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool visualizeRoom;

	[Token(Token = "0x4000EC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x4000EC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int raysPerSecond;

	[Token(Token = "0x4000EC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float roomInterpSpeed;

	[Token(Token = "0x4000EC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxWallDistance;

	[Token(Token = "0x4000EC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rayCacheSize;

	[Token(Token = "0x4000ECA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x4000ECB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float particleSize;

	[Token(Token = "0x4000ECC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float particleOffset;

	[Token(Token = "0x4000ECD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject room;

	[Token(Token = "0x4000ECE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x4000ECF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float[] dims;

	[Token(Token = "0x4000ED0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] coefs;

	[Token(Token = "0x4000ED1")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x4000ED2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3[] points;

	[Token(Token = "0x4000ED3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] normals;

	[Token(Token = "0x4000ED4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ParticleSystem sys;

	[Token(Token = "0x4000ED5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000ED6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x4000ED7")]
	private const string strOSP = "AudioPluginOculusSpatializer";

	[Token(Token = "0x60010C3")]
	[Address(RVA = "0xC50468", Offset = "0xC50468", VA = "0xC50468")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60010C4")]
	[Address(RVA = "0xC50298", Offset = "0xC50298", VA = "0xC50298")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x6FEFEC", Offset = "0x6FEFEC")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x60010C5")]
	[Address(RVA = "0xC504A0", Offset = "0xC504A0", VA = "0xC504A0")]
	private void Start()
	{
	}

	[Token(Token = "0x60010C6")]
	[Address(RVA = "0xC505D4", Offset = "0xC505D4", VA = "0xC505D4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60010C7")]
	[Address(RVA = "0xC506C8", Offset = "0xC506C8", VA = "0xC506C8")]
	private void Update()
	{
	}

	[Token(Token = "0x60010C8")]
	[Address(RVA = "0xC51080", Offset = "0xC51080", VA = "0xC51080")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60010C9")]
	[Address(RVA = "0xC50540", Offset = "0xC50540", VA = "0xC50540")]
	private static extern int OSP_Unity_AssignRaycastCallback(AudioRaycastCallback callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x60010CA")]
	[Address(RVA = "0xC50638", Offset = "0xC50638", VA = "0xC50638")]
	private static extern int OSP_Unity_AssignRaycastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x60010CB")]
	[Address(RVA = "0xC50DE8", Offset = "0xC50DE8", VA = "0xC50DE8")]
	private static extern int OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x60010CC")]
	[Address(RVA = "0xC50E68", Offset = "0xC50E68", VA = "0xC50E68")]
	private static extern int OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x60010CD")]
	[Address(RVA = "0xC50EF0", Offset = "0xC50EF0", VA = "0xC50EF0")]
	private static extern int OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x60010CE")]
	[Address(RVA = "0xC50F78", Offset = "0xC50F78", VA = "0xC50F78")]
	private static extern int OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x60010CF")]
	[Address(RVA = "0xC50FF8", Offset = "0xC50FF8", VA = "0xC50FF8")]
	private static extern int OSP_Unity_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x60010D0")]
	[Address(RVA = "0xC51EB8", Offset = "0xC51EB8", VA = "0xC51EB8")]
	private static extern int OSP_Unity_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out Vector3 position);

	[PreserveSig]
	[Token(Token = "0x60010D1")]
	[Address(RVA = "0xC51F60", Offset = "0xC51F60", VA = "0xC51F60")]
	private static extern int OSP_Unity_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x60010D2")]
	[Address(RVA = "0xC52008", Offset = "0xC52008", VA = "0xC52008")]
	public OculusSpatializerUnity()
	{
	}
}
[Token(Token = "0x2000202")]
public struct ReflectionSnapshot
{
	[Token(Token = "0x4000ED8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x4000ED9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float fadeTime;
}
[Token(Token = "0x2000203")]
public class ONSPReflectionZone : MonoBehaviour
{
	[Token(Token = "0x4000EDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x4000EDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x4000EDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<ReflectionSnapshot> snapshotList;

	[Token(Token = "0x4000EDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ReflectionSnapshot currentSnapshot;

	[Token(Token = "0x60010D4")]
	[Address(RVA = "0x1155DFC", Offset = "0x1155DFC", VA = "0x1155DFC")]
	private void Start()
	{
	}

	[Token(Token = "0x60010D5")]
	[Address(RVA = "0x1155E00", Offset = "0x1155E00", VA = "0x1155E00")]
	private void Update()
	{
	}

	[Token(Token = "0x60010D6")]
	[Address(RVA = "0x1155E04", Offset = "0x1155E04", VA = "0x1155E04")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60010D7")]
	[Address(RVA = "0x1155F6C", Offset = "0x1155F6C", VA = "0x1155F6C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60010D8")]
	[Address(RVA = "0x1155E50", Offset = "0x1155E50", VA = "0x1155E50")]
	private bool CheckForAudioListener(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x60010D9")]
	[Address(RVA = "0x1155EE0", Offset = "0x1155EE0", VA = "0x1155EE0")]
	private void PushCurrentMixerShapshot()
	{
	}

	[Token(Token = "0x60010DA")]
	[Address(RVA = "0x1155FB8", Offset = "0x1155FB8", VA = "0x1155FB8")]
	private void PopCurrentMixerSnapshot()
	{
	}

	[Token(Token = "0x60010DB")]
	[Address(RVA = "0x1156050", Offset = "0x1156050", VA = "0x1156050")]
	private void SetReflectionValues()
	{
	}

	[Token(Token = "0x60010DC")]
	[Address(RVA = "0x11561B8", Offset = "0x11561B8", VA = "0x11561B8")]
	private void SetReflectionValues(ref ReflectionSnapshot mss)
	{
	}

	[Token(Token = "0x60010DD")]
	[Address(RVA = "0x1156320", Offset = "0x1156320", VA = "0x1156320")]
	public ONSPReflectionZone()
	{
	}
}
[Token(Token = "0x2000204")]
public class PicoControllerLabelRoots : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20003FF")]
	public class ControllerInputOffsets
	{
		[Token(Token = "0x40018FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int ControllerType;

		[Token(Token = "0x40018FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string GripName;

		[Token(Token = "0x40018FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 AltGripOffset;

		[Token(Token = "0x40018FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string TriggerName;

		[Token(Token = "0x40018FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 AltTriggerOffset;

		[Token(Token = "0x40018FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string StickName;

		[Token(Token = "0x4001900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector3 AltStickOffset;

		[Token(Token = "0x6001898")]
		[Address(RVA = "0xA2120C", Offset = "0xA2120C", VA = "0xA2120C")]
		public ControllerInputOffsets()
		{
		}
	}

	[Token(Token = "0x2000400")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5AE8", Offset = "0x6F5AE8")]
	private sealed class <>c__DisplayClass9_0
	{
		[Token(Token = "0x4001901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int controllerType;

		[Token(Token = "0x6001899")]
		[Address(RVA = "0xA21014", Offset = "0xA21014", VA = "0xA21014")]
		public <>c__DisplayClass9_0()
		{
		}

		[Token(Token = "0x600189A")]
		[Address(RVA = "0xA21128", Offset = "0xA21128", VA = "0xA21128")]
		internal bool <UpdateLabelOffsets>b__0(ControllerInputOffsets x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000401")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5AF8", Offset = "0x6F5AF8")]
	private sealed class <>c__DisplayClass9_1
	{
		[Token(Token = "0x4001902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ControllerInputOffsets controllerOffsetInfo;

		[Token(Token = "0x600189B")]
		[Address(RVA = "0xA2101C", Offset = "0xA2101C", VA = "0xA2101C")]
		public <>c__DisplayClass9_1()
		{
		}

		[Token(Token = "0x600189C")]
		[Address(RVA = "0xA2114C", Offset = "0xA2114C", VA = "0xA2114C")]
		internal bool <UpdateLabelOffsets>b__2(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x600189D")]
		[Address(RVA = "0xA2118C", Offset = "0xA2118C", VA = "0xA2118C")]
		internal bool <UpdateLabelOffsets>b__3(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x600189E")]
		[Address(RVA = "0xA211CC", Offset = "0xA211CC", VA = "0xA211CC")]
		internal bool <UpdateLabelOffsets>b__4(Transform x)
		{
			return default(bool);
		}
	}

	[Serializable]
	[Token(Token = "0x2000402")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5B08", Offset = "0x6F5B08")]
	private sealed class <>c
	{
		[Token(Token = "0x4001903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<ControllerInputOffsets> <>9__9_1;

		[Token(Token = "0x60018A0")]
		[Address(RVA = "0xA21100", Offset = "0xA21100", VA = "0xA21100")]
		public <>c()
		{
		}

		[Token(Token = "0x60018A1")]
		[Address(RVA = "0xA21108", Offset = "0xA21108", VA = "0xA21108")]
		internal bool <UpdateLabelOffsets>b__9_1(ControllerInputOffsets x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000EDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<ControllerInputOffsets> ControllerOffsetInfos;

	[Token(Token = "0x4000EDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PXR_ControllerLoader ControllerLoader;

	[Token(Token = "0x4000EE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int CurrentControllerType;

	[Token(Token = "0x4000EE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform GripTransform;

	[Token(Token = "0x4000EE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform TriggerTransform;

	[Token(Token = "0x4000EE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform StickTransform;

	[Token(Token = "0x60010DF")]
	[Address(RVA = "0xA20984", Offset = "0xA20984", VA = "0xA20984")]
	private void Start()
	{
	}

	[Token(Token = "0x60010E0")]
	[Address(RVA = "0xA21010", Offset = "0xA21010", VA = "0xA21010")]
	private void Update()
	{
	}

	[Token(Token = "0x60010E1")]
	[Address(RVA = "0xA20988", Offset = "0xA20988", VA = "0xA20988")]
	private void UpdateLabelOffsets()
	{
	}

	[Token(Token = "0x60010E2")]
	[Address(RVA = "0xA21024", Offset = "0xA21024", VA = "0xA21024")]
	public PicoControllerLabelRoots()
	{
	}
}
namespace SubjectNerd.Utilities
{
	[Token(Token = "0x2000205")]
	public class EditScriptableAttribute : PropertyAttribute
	{
		[Token(Token = "0x60010E3")]
		[Address(RVA = "0xA7F838", Offset = "0xA7F838", VA = "0xA7F838")]
		public EditScriptableAttribute()
		{
		}
	}
	[Token(Token = "0x2000206")]
	public class ReorderableAttribute : PropertyAttribute
	{
		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F8764", Offset = "0x6F8764")]
		private string <ElementHeader>k__BackingField;

		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F8774", Offset = "0x6F8774")]
		private bool <HeaderZeroIndex>k__BackingField;

		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F8784", Offset = "0x6F8784")]
		private bool <ElementSingleLine>k__BackingField;

		[Token(Token = "0x170002C5")]
		public string ElementHeader
		{
			[Token(Token = "0x60010E4")]
			[Address(RVA = "0xA7F840", Offset = "0xA7F840", VA = "0xA7F840")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FF050", Offset = "0x6FF050")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010E5")]
			[Address(RVA = "0xA7F848", Offset = "0xA7F848", VA = "0xA7F848")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FF060", Offset = "0x6FF060")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002C6")]
		public bool HeaderZeroIndex
		{
			[Token(Token = "0x60010E6")]
			[Address(RVA = "0xA7F850", Offset = "0xA7F850", VA = "0xA7F850")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FF070", Offset = "0x6FF070")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010E7")]
			[Address(RVA = "0xA7F858", Offset = "0xA7F858", VA = "0xA7F858")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FF080", Offset = "0x6FF080")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002C7")]
		public bool ElementSingleLine
		{
			[Token(Token = "0x60010E8")]
			[Address(RVA = "0xA7F864", Offset = "0xA7F864", VA = "0xA7F864")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FF090", Offset = "0x6FF090")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010E9")]
			[Address(RVA = "0xA7F86C", Offset = "0xA7F86C", VA = "0xA7F86C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FF0A0", Offset = "0x6FF0A0")]
			protected set
			{
			}
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0xA7F878", Offset = "0xA7F878", VA = "0xA7F878")]
		public ReorderableAttribute()
		{
		}

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0xA7F8E0", Offset = "0xA7F8E0", VA = "0xA7F8E0")]
		public ReorderableAttribute(string headerString = "", bool isZeroIndex = true, bool isSingleLine = false)
		{
		}
	}
}
namespace UnityFBXExporter
{
	[Token(Token = "0x2000207")]
	public class FBXExporter
	{
		[Token(Token = "0x170002C8")]
		public static string VersionInformation
		{
			[Token(Token = "0x60010ED")]
			[Address(RVA = "0xCB88B0", Offset = "0xCB88B0", VA = "0xCB88B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0xCB6EB8", Offset = "0xCB6EB8", VA = "0xCB6EB8")]
		public static bool ExportGameObjToFBX(GameObject gameObj, string newPath, bool copyMaterials = false, bool copyTextures = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0xCB88F8", Offset = "0xCB88F8", VA = "0xCB88F8")]
		public static long GetRandomFBXId()
		{
			return default(long);
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0xCB6FE0", Offset = "0xCB6FE0", VA = "0xCB6FE0")]
		public static string MeshToString(GameObject gameObj, string newPath, bool copyMaterials = false, bool copyTextures = false)
		{
			return null;
		}

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0xCB6FDC", Offset = "0xCB6FDC", VA = "0xCB6FDC")]
		public static void CopyComplexMaterialsToPath(GameObject gameObj, string path, bool copyTextures, string texturesFolder = "/Textures", string materialsFolder = "/Materials")
		{
		}

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0xCBBE88", Offset = "0xCBBE88", VA = "0xCBBE88")]
		public static bool CopyAndRenameAsset(UnityEngine.Object obj, string newName, string newFolderPath)
		{
			return default(bool);
		}

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0xCBBE90", Offset = "0xCBBE90", VA = "0xCBBE90")]
		private static string GetFileName(string path)
		{
			return null;
		}

		[Token(Token = "0x60010F3")]
		[Address(RVA = "0xCBBEE0", Offset = "0xCBBEE0", VA = "0xCBBEE0")]
		private static Material CopyTexturesAndAssignCopiesToMaterial(Material material, string newPath)
		{
			return null;
		}

		[Token(Token = "0x60010F4")]
		[Address(RVA = "0xCBC17C", Offset = "0xCBC17C", VA = "0xCBC17C")]
		private static void GetTextureUpdateMaterialWithPath(Material material, string textureShaderName, string newPath)
		{
		}

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0xCBC280", Offset = "0xCBC280", VA = "0xCBC280")]
		public static UnityEngine.Object CopyAndRenameAssetReturnObject(UnityEngine.Object obj, string newName, string newFolderPath)
		{
			return null;
		}

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0xCBC288", Offset = "0xCBC288", VA = "0xCBC288")]
		public FBXExporter()
		{
		}
	}
	[Token(Token = "0x2000208")]
	public class FBXUnityMaterialGetter
	{
		[Token(Token = "0x60010F7")]
		[Address(RVA = "0xCB89B0", Offset = "0xCB89B0", VA = "0xCB89B0")]
		public static void GetAllMaterialsToString(GameObject gameObj, string newPath, bool copyMaterials, bool copyTextures, out Material[] materials, out string matObjects, out string connections)
		{
		}

		[Token(Token = "0x60010F8")]
		[Address(RVA = "0xCBC290", Offset = "0xCBC290", VA = "0xCBC290")]
		private static void SerializedTextures(GameObject gameObj, string newPath, Material material, string materialName, bool copyTextures, out string objects, out string connections)
		{
		}

		[Token(Token = "0x60010F9")]
		[Address(RVA = "0xCBC494", Offset = "0xCBC494", VA = "0xCBC494")]
		private static bool SerializeOneTexture(GameObject gameObj, string newPath, Material material, string materialName, int materialId, bool copyTextures, string unityExtension, string textureType, out string objects, out string connections)
		{
			return default(bool);
		}

		[Token(Token = "0x60010FA")]
		[Address(RVA = "0xCBC5B0", Offset = "0xCBC5B0", VA = "0xCBC5B0")]
		public FBXUnityMaterialGetter()
		{
		}
	}
	[Token(Token = "0x2000209")]
	public class FBXUnityMeshGetter
	{
		[Token(Token = "0x60010FB")]
		[Address(RVA = "0xCB9398", Offset = "0xCB9398", VA = "0xCB9398")]
		public static long GetMeshToString(GameObject gameObj, Material[] materials, ref StringBuilder objects, ref StringBuilder connections, [Optional] GameObject parentObject, long parentModelId = 0L)
		{
			return default(long);
		}

		[Token(Token = "0x60010FC")]
		[Address(RVA = "0xCBC5B8", Offset = "0xCBC5B8", VA = "0xCBC5B8")]
		public FBXUnityMeshGetter()
		{
		}
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x200020A")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4000EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x4000EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x4000EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x4000EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x4000EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x170002C9")]
		public bool Highlight
		{
			[Token(Token = "0x60010FD")]
			[Address(RVA = "0xBDAC9C", Offset = "0xBDAC9C", VA = "0xBDAC9C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010FE")]
			[Address(RVA = "0xBDACA4", Offset = "0xBDACA4", VA = "0xBDACA4")]
			set
			{
			}
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0xBDACB0", Offset = "0xBDACB0", VA = "0xBDACB0")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x6001100")]
		[Address(RVA = "0xBDAE7C", Offset = "0xBDAE7C", VA = "0xBDAE7C", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0xBDAEA4", Offset = "0xBDAEA4", VA = "0xBDAEA4", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6001102")]
		[Address(RVA = "0xBDAECC", Offset = "0xBDAECC", VA = "0xBDAECC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001103")]
		[Address(RVA = "0xBDAD7C", Offset = "0xBDAD7C", VA = "0xBDAD7C")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x6001104")]
		[Address(RVA = "0xBDB120", Offset = "0xBDB120", VA = "0xBDB120")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x200020B")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4000EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x4000EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x4000EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x4000EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x4000EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x4000EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x4000EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x170002CA")]
		public bool InRange
		{
			[Token(Token = "0x6001106")]
			[Address(RVA = "0xBDB580", Offset = "0xBDB580", VA = "0xBDB580")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001107")]
			[Address(RVA = "0xBDB588", Offset = "0xBDB588", VA = "0xBDB588")]
			set
			{
			}
		}

		[Token(Token = "0x170002CB")]
		public bool Targeted
		{
			[Token(Token = "0x6001108")]
			[Address(RVA = "0xBDB704", Offset = "0xBDB704", VA = "0xBDB704")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001109")]
			[Address(RVA = "0xBDB70C", Offset = "0xBDB70C", VA = "0xBDB70C")]
			set
			{
			}
		}

		[Token(Token = "0x600110A")]
		[Address(RVA = "0xBDB718", Offset = "0xBDB718", VA = "0xBDB718", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600110B")]
		[Address(RVA = "0xBDB594", Offset = "0xBDB594", VA = "0xBDB594")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x600110C")]
		[Address(RVA = "0xBDB8B8", Offset = "0xBDB8B8", VA = "0xBDB8B8")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x200020C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6F4F14", Offset = "0x6F4F14")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x4000EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x4000EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x4000EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x4000EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x4000EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x4000EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x4000EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x4000EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x4000EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x4000EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x4000EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x4000EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Collider m_targetCollider;

		[Token(Token = "0x170002CC")]
		public bool UseSpherecast
		{
			[Token(Token = "0x600110D")]
			[Address(RVA = "0xBDB8C0", Offset = "0xBDB8C0", VA = "0xBDB8C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600110E")]
			[Address(RVA = "0xBDB8C8", Offset = "0xBDB8C8", VA = "0xBDB8C8")]
			set
			{
			}
		}

		[Token(Token = "0x600110F")]
		[Address(RVA = "0xBDB8E4", Offset = "0xBDB8E4", VA = "0xBDB8E4", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001110")]
		[Address(RVA = "0xBDBAEC", Offset = "0xBDBAEC", VA = "0xBDBAEC", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x6001111")]
		[Address(RVA = "0xBDC408", Offset = "0xBDC408", VA = "0xBDC408", Slot = "7")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x6001112")]
		[Address(RVA = "0xBDC9C4", Offset = "0xBDC9C4", VA = "0xBDC9C4", Slot = "8")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x6001113")]
		[Address(RVA = "0xBDCDA4", Offset = "0xBDCDA4", VA = "0xBDCDA4")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x6001114")]
		[Address(RVA = "0xBDBD38", Offset = "0xBDBD38", VA = "0xBDBD38")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6001115")]
		[Address(RVA = "0xBDCE80", Offset = "0xBDCE80", VA = "0xBDCE80")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6001116")]
		[Address(RVA = "0xBDD2BC", Offset = "0xBDD2BC", VA = "0xBDD2BC", Slot = "9")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x6001117")]
		[Address(RVA = "0xBDD2D4", Offset = "0xBDD2D4", VA = "0xBDD2D4", Slot = "10")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x6001118")]
		[Address(RVA = "0xBDD2DC", Offset = "0xBDD2DC", VA = "0xBDD2DC")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x200020D")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x4000F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x4000F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x4000F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x4000F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color OutlineColorOutOfRange;

		[Token(Token = "0x6001119")]
		[Address(RVA = "0xBDEE2C", Offset = "0xBDEE2C", VA = "0xBDEE2C")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x600111A")]
		[Address(RVA = "0xBDEEDC", Offset = "0xBDEEDC", VA = "0xBDEEDC")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x600111B")]
		[Address(RVA = "0xBDEF88", Offset = "0xBDEF88", VA = "0xBDEF88")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x200020E")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x2000403")]
		public enum CrosshairState
		{
			[Token(Token = "0x4001906")]
			Disabled,
			[Token(Token = "0x4001907")]
			Enabled,
			[Token(Token = "0x4001908")]
			Targeted
		}

		[Token(Token = "0x4000F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x4000F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x4000F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x4000F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x600111C")]
		[Address(RVA = "0xBDEF90", Offset = "0xBDEF90", VA = "0xBDEF90")]
		private void Start()
		{
		}

		[Token(Token = "0x600111D")]
		[Address(RVA = "0xBDB81C", Offset = "0xBDB81C", VA = "0xBDB81C")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x600111E")]
		[Address(RVA = "0xBDEFF8", Offset = "0xBDEFF8", VA = "0xBDEFF8")]
		private void Update()
		{
		}

		[Token(Token = "0x600111F")]
		[Address(RVA = "0xBDF040", Offset = "0xBDF040", VA = "0xBDF040")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x200020F")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x6001120")]
		[Address(RVA = "0xC4905C", Offset = "0xC4905C", VA = "0xC4905C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001121")]
		[Address(RVA = "0xC49128", Offset = "0xC49128", VA = "0xC49128")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6001122")]
		[Address(RVA = "0xC49134", Offset = "0xC49134", VA = "0xC49134")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6001123")]
		[Address(RVA = "0xC49140", Offset = "0xC49140", VA = "0xC49140")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x2000210")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x4000F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x4000F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x4000F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x6001124")]
		[Address(RVA = "0xBD9928", Offset = "0xBD9928", VA = "0xBD9928")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001125")]
		[Address(RVA = "0xBD9980", Offset = "0xBD9980", VA = "0xBD9980")]
		private void Update()
		{
		}

		[Token(Token = "0x6001126")]
		[Address(RVA = "0xBD9C24", Offset = "0xBD9C24", VA = "0xBD9C24")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001127")]
		[Address(RVA = "0xBD9D14", Offset = "0xBD9D14", VA = "0xBD9D14")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001128")]
		[Address(RVA = "0xBD9984", Offset = "0xBD9984", VA = "0xBD9984")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x6001129")]
		[Address(RVA = "0xBD9E04", Offset = "0xBD9E04", VA = "0xBD9E04")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x2000211")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x2000404")]
		public enum ContactTest
		{
			[Token(Token = "0x400190A")]
			PerpenTest,
			[Token(Token = "0x400190B")]
			BackwardsPress
		}

		[Token(Token = "0x4000F0B")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x4000F0C")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x4000F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x4000F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x4000F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x4000F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x4000F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x4000F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x4000F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x4000F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x4000F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x4000F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private InteractableState _currentButtonState;

		[Token(Token = "0x4000F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x170002CD")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x600112A")]
			[Address(RVA = "0xBD9E9C", Offset = "0xBD9E9C", VA = "0xBD9E9C", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002CE")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x600112B")]
			[Address(RVA = "0xBD9EA4", Offset = "0xBD9EA4", VA = "0xBD9EA4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x600112C")]
		[Address(RVA = "0xBD9EB0", Offset = "0xBD9EB0", VA = "0xBD9EB0", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600112D")]
		[Address(RVA = "0xBDA000", Offset = "0xBDA000", VA = "0xBDA000")]
		private void FireInteractionEventsOnDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool, InteractionType interactionType)
		{
		}

		[Token(Token = "0x600112E")]
		[Address(RVA = "0xBDA208", Offset = "0xBDA208", VA = "0xBDA208", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth)
		{
		}

		[Token(Token = "0x600112F")]
		[Address(RVA = "0xBDA74C", Offset = "0xBDA74C", VA = "0xBDA74C")]
		private InteractableState GetUpcomingStateNearField(InteractableState oldState, InteractableCollisionDepth newCollisionDepth, bool toolIsInActionZone, bool toolIsInContactZone, bool toolIsInProximity, bool validContact, bool onPositiveSideOfInteractable)
		{
			return default(InteractableState);
		}

		[Token(Token = "0x6001130")]
		[Address(RVA = "0xBDA664", Offset = "0xBDA664", VA = "0xBDA664")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001131")]
		[Address(RVA = "0xBDA89C", Offset = "0xBDA89C", VA = "0xBDA89C")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001132")]
		[Address(RVA = "0xBDA990", Offset = "0xBDA990", VA = "0xBDA990")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001133")]
		[Address(RVA = "0xBDAABC", Offset = "0xBDAABC", VA = "0xBDAABC")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x2000212")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x4000F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F88C4", Offset = "0x6F88C4")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F88D4", Offset = "0x6F88D4")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x170002CF")]
		public Collider Collider
		{
			[Token(Token = "0x6001134")]
			[Address(RVA = "0xBDABA8", Offset = "0xBDABA8", VA = "0xBDABA8", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FF0B0", Offset = "0x6FF0B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001135")]
			[Address(RVA = "0xBDABB0", Offset = "0xBDABB0", VA = "0xBDABB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FF0C0", Offset = "0x6FF0C0")]
			private set
			{
			}
		}

		[Token(Token = "0x170002D0")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x6001136")]
			[Address(RVA = "0xBDABB8", Offset = "0xBDABB8", VA = "0xBDABB8", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FF0D0", Offset = "0x6FF0D0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001137")]
			[Address(RVA = "0xBDABC0", Offset = "0xBDABC0", VA = "0xBDABC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FF0E0", Offset = "0x6FF0E0")]
			private set
			{
			}
		}

		[Token(Token = "0x170002D1")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6001138")]
			[Address(RVA = "0xBDABC8", Offset = "0xBDABC8", VA = "0xBDABC8", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x6001139")]
		[Address(RVA = "0xBDAC18", Offset = "0xBDAC18", VA = "0xBDAC18")]
		private void Awake()
		{
		}

		[Token(Token = "0x600113A")]
		[Address(RVA = "0xBDAC94", Offset = "0xBDAC94", VA = "0xBDAC94")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x2000213")]
	public interface ColliderZone
	{
		[Token(Token = "0x170002D2")]
		Collider Collider
		{
			[Token(Token = "0x600113B")]
			get;
		}

		[Token(Token = "0x170002D3")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x600113C")]
			get;
		}

		[Token(Token = "0x170002D4")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x600113D")]
			get;
		}
	}
	[Token(Token = "0x2000214")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x600113E")]
		[Address(RVA = "0xBDA164", Offset = "0xBDA164", VA = "0xBDA164")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x2000215")]
	public enum InteractionType
	{
		[Token(Token = "0x4000F20")]
		Enter,
		[Token(Token = "0x4000F21")]
		Stay,
		[Token(Token = "0x4000F22")]
		Exit
	}
	[Token(Token = "0x2000216")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x2000405")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x400190D")]
			Mesh,
			[Token(Token = "0x400190E")]
			Skeleton,
			[Token(Token = "0x400190F")]
			Both
		}

		[Token(Token = "0x2000406")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5B18", Offset = "0x6F5B18")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001910")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001911")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001912")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x1700041E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018A5")]
				[Address(RVA = "0xBDFF34", Offset = "0xBDFF34", VA = "0xBDFF34", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700041F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018A7")]
				[Address(RVA = "0xBDFF9C", Offset = "0xBDFF9C", VA = "0xBDFF9C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018A2")]
			[Address(RVA = "0xBDFA28", Offset = "0xBDFA28", VA = "0xBDFA28")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x60018A3")]
			[Address(RVA = "0xBDFD14", Offset = "0xBDFD14", VA = "0xBDFD14", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018A4")]
			[Address(RVA = "0xBDFD18", Offset = "0xBDFD18", VA = "0xBDFD18", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018A6")]
			[Address(RVA = "0xBDFF3C", Offset = "0xBDFF3C", VA = "0xBDFF3C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F23")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x4000F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x4000F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x4000F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F8904", Offset = "0x6F8904")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x170002D5")]
		public OVRHand RightHand
		{
			[Token(Token = "0x600113F")]
			[Address(RVA = "0xBDDF30", Offset = "0xBDDF30", VA = "0xBDDF30")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001140")]
			[Address(RVA = "0xBDF048", Offset = "0xBDF048", VA = "0xBDF048")]
			private set
			{
			}
		}

		[Token(Token = "0x170002D6")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x6001141")]
			[Address(RVA = "0xBDEAB0", Offset = "0xBDEAB0", VA = "0xBDEAB0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001142")]
			[Address(RVA = "0xBDF0B0", Offset = "0xBDF0B0", VA = "0xBDF0B0")]
			private set
			{
			}
		}

		[Token(Token = "0x170002D7")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x6001143")]
			[Address(RVA = "0xBDF118", Offset = "0xBDF118", VA = "0xBDF118")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001144")]
			[Address(RVA = "0xBDF150", Offset = "0xBDF150", VA = "0xBDF150")]
			private set
			{
			}
		}

		[Token(Token = "0x170002D8")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x6001145")]
			[Address(RVA = "0xBDF1B8", Offset = "0xBDF1B8", VA = "0xBDF1B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001146")]
			[Address(RVA = "0xBDF1F0", Offset = "0xBDF1F0", VA = "0xBDF1F0")]
			private set
			{
			}
		}

		[Token(Token = "0x170002D9")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x6001147")]
			[Address(RVA = "0xBDF258", Offset = "0xBDF258", VA = "0xBDF258")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001148")]
			[Address(RVA = "0xBDF290", Offset = "0xBDF290", VA = "0xBDF290")]
			private set
			{
			}
		}

		[Token(Token = "0x170002DA")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x6001149")]
			[Address(RVA = "0xBDDEFC", Offset = "0xBDDEFC", VA = "0xBDDEFC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600114A")]
			[Address(RVA = "0xBDF2F8", Offset = "0xBDF2F8", VA = "0xBDF2F8")]
			private set
			{
			}
		}

		[Token(Token = "0x170002DB")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x600114B")]
			[Address(RVA = "0xBDEA7C", Offset = "0xBDEA7C", VA = "0xBDEA7C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600114C")]
			[Address(RVA = "0xBDF35C", Offset = "0xBDF35C", VA = "0xBDF35C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002DC")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x600114D")]
			[Address(RVA = "0xBDF3C0", Offset = "0xBDF3C0", VA = "0xBDF3C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600114E")]
			[Address(RVA = "0xBDF3F4", Offset = "0xBDF3F4", VA = "0xBDF3F4")]
			private set
			{
			}
		}

		[Token(Token = "0x170002DD")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x600114F")]
			[Address(RVA = "0xBDF458", Offset = "0xBDF458", VA = "0xBDF458")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001150")]
			[Address(RVA = "0xBDF48C", Offset = "0xBDF48C", VA = "0xBDF48C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002DE")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x6001151")]
			[Address(RVA = "0xBDF4F0", Offset = "0xBDF4F0", VA = "0xBDF4F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001152")]
			[Address(RVA = "0xBDF524", Offset = "0xBDF524", VA = "0xBDF524")]
			private set
			{
			}
		}

		[Token(Token = "0x170002DF")]
		public static HandsManager Instance
		{
			[Token(Token = "0x6001153")]
			[Address(RVA = "0xBDF588", Offset = "0xBDF588", VA = "0xBDF588")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FF0F0", Offset = "0x6FF0F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001154")]
			[Address(RVA = "0xBDF5D8", Offset = "0xBDF5D8", VA = "0xBDF5D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FF100", Offset = "0x6FF100")]
			private set
			{
			}
		}

		[Token(Token = "0x6001155")]
		[Address(RVA = "0xBDF62C", Offset = "0xBDF62C", VA = "0xBDF62C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001156")]
		[Address(RVA = "0xBDF9A0", Offset = "0xBDF9A0", VA = "0xBDF9A0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001157")]
		[Address(RVA = "0xBDF930", Offset = "0xBDF930", VA = "0xBDF930")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FF110", Offset = "0x6FF110")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x6001158")]
		[Address(RVA = "0xBDB3D4", Offset = "0xBDB3D4", VA = "0xBDB3D4")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x6001159")]
		[Address(RVA = "0xBDFA54", Offset = "0xBDFA54", VA = "0xBDFA54")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x600115A")]
		[Address(RVA = "0xBDEAE8", Offset = "0xBDEAE8", VA = "0xBDEAE8")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x600115B")]
		[Address(RVA = "0xBDDD6C", Offset = "0xBDDD6C", VA = "0xBDDD6C")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x600115C")]
		[Address(RVA = "0xBDFC34", Offset = "0xBDFC34", VA = "0xBDFC34")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x2000217")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000407")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x60018A8")]
			[Address(RVA = "0xBE06EC", Offset = "0xBE06EC", VA = "0xBE06EC")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x4000F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x170002E0")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x600115D")]
			[Address(RVA = "0xBDFFA4", Offset = "0xBDFFA4", VA = "0xBDFFA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E1")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x600115E")]
			[Address(RVA = "0xBDFFAC", Offset = "0xBDFFAC", VA = "0xBDFFAC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E2")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x600115F")]
			[Address(RVA = "0xBDFFB4", Offset = "0xBDFFB4", VA = "0xBDFFB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E3")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x6001160")]
			[Address(RVA = "0xBDFFBC", Offset = "0xBDFFBC", VA = "0xBDFFBC", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000010")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x6001161")]
			[Address(RVA = "0xBDFFC4", Offset = "0xBDFFC4", VA = "0xBDFFC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FF174", Offset = "0x6FF174")]
			add
			{
			}
			[Token(Token = "0x6001162")]
			[Address(RVA = "0xBE0068", Offset = "0xBE0068", VA = "0xBE0068")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FF184", Offset = "0x6FF184")]
			remove
			{
			}
		}

		[Token(Token = "0x14000011")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x6001164")]
			[Address(RVA = "0xBE0180", Offset = "0xBE0180", VA = "0xBE0180")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FF194", Offset = "0x6FF194")]
			add
			{
			}
			[Token(Token = "0x6001165")]
			[Address(RVA = "0xBE0224", Offset = "0xBE0224", VA = "0xBE0224")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FF1A4", Offset = "0x6FF1A4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000012")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x6001167")]
			[Address(RVA = "0xBE033C", Offset = "0xBE033C", VA = "0xBE033C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FF1B4", Offset = "0x6FF1B4")]
			add
			{
			}
			[Token(Token = "0x6001168")]
			[Address(RVA = "0xBE03E0", Offset = "0xBE03E0", VA = "0xBE03E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FF1C4", Offset = "0x6FF1C4")]
			remove
			{
			}
		}

		[Token(Token = "0x6001163")]
		[Address(RVA = "0xBE010C", Offset = "0xBE010C", VA = "0xBE010C", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6001166")]
		[Address(RVA = "0xBE02C8", Offset = "0xBE02C8", VA = "0xBE02C8", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6001169")]
		[Address(RVA = "0xBE0484", Offset = "0xBE0484", VA = "0xBE0484", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x600116A")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth);

		[Token(Token = "0x600116B")]
		[Address(RVA = "0xBD9F9C", Offset = "0xBD9F9C", VA = "0xBD9F9C", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600116C")]
		[Address(RVA = "0xBE05C0", Offset = "0xBE05C0", VA = "0xBE05C0", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x600116D")]
		[Address(RVA = "0xBDABA0", Offset = "0xBDABA0", VA = "0xBDABA0")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x2000218")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x4000F3B")]
		None,
		[Token(Token = "0x4000F3C")]
		Proximity,
		[Token(Token = "0x4000F3D")]
		Contact,
		[Token(Token = "0x4000F3E")]
		Action
	}
	[Token(Token = "0x2000219")]
	public enum InteractableState
	{
		[Token(Token = "0x4000F40")]
		Default,
		[Token(Token = "0x4000F41")]
		ProximityState,
		[Token(Token = "0x4000F42")]
		ContactState,
		[Token(Token = "0x4000F43")]
		ActionState
	}
	[Token(Token = "0x200021A")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x600116E")]
		[Address(RVA = "0xBDA7F8", Offset = "0xBDA7F8", VA = "0xBDA7F8")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x200021B")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x4000F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x170002E4")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x600116F")]
			[Address(RVA = "0xBE073C", Offset = "0xBE073C", VA = "0xBE073C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001170")]
		[Address(RVA = "0xBE04F8", Offset = "0xBE04F8", VA = "0xBE04F8")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001171")]
		[Address(RVA = "0xBE0624", Offset = "0xBE0624", VA = "0xBE0624")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001172")]
		[Address(RVA = "0xBE07A4", Offset = "0xBE07A4", VA = "0xBE07A4")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x200021C")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x2000408")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5B28", Offset = "0x6F5B28")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001913")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001914")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001915")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x4001916")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x4001917")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x4001918")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x4001919")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x400191A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x400191B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x17000420")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018AD")]
				[Address(RVA = "0xBE17E4", Offset = "0xBE17E4", VA = "0xBE17E4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000421")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018AF")]
				[Address(RVA = "0xBE184C", Offset = "0xBE184C", VA = "0xBE184C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018A9")]
			[Address(RVA = "0xBE12A8", Offset = "0xBE12A8", VA = "0xBE12A8")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x60018AA")]
			[Address(RVA = "0xBE13D4", Offset = "0xBE13D4", VA = "0xBE13D4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018AB")]
			[Address(RVA = "0xBE1448", Offset = "0xBE1448", VA = "0xBE1448", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018AC")]
			[Address(RVA = "0xBE13F0", Offset = "0xBE13F0", VA = "0xBE13F0")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60018AE")]
			[Address(RVA = "0xBE17EC", Offset = "0xBE17EC", VA = "0xBE17EC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x4000F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x6001174")]
		[Address(RVA = "0xBE11A0", Offset = "0xBE11A0", VA = "0xBE11A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001175")]
		[Address(RVA = "0xBE121C", Offset = "0xBE121C", VA = "0xBE121C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FF1D4", Offset = "0x6FF1D4")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x6001176")]
		[Address(RVA = "0xBE12D4", Offset = "0xBE12D4", VA = "0xBE12D4")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x6001177")]
		[Address(RVA = "0xBE13CC", Offset = "0xBE13CC", VA = "0xBE13CC")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x200021D")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x4000F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x4000F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x4000F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x4000F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x170002E5")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x6001178")]
			[Address(RVA = "0xBDD7A8", Offset = "0xBDD7A8", VA = "0xBDD7A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001179")]
		[Address(RVA = "0xBDD910", Offset = "0xBDD910", VA = "0xBDD910")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x600117A")]
		[Address(RVA = "0xBE1854", Offset = "0xBE1854", VA = "0xBE1854")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x600117B")]
		[Address(RVA = "0xBE1900", Offset = "0xBE1900", VA = "0xBE1900")]
		private void Update()
		{
		}

		[Token(Token = "0x600117C")]
		[Address(RVA = "0xBE1BC8", Offset = "0xBE1BC8", VA = "0xBE1BC8")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x600117D")]
		[Address(RVA = "0xBE1C10", Offset = "0xBE1C10", VA = "0xBE1C10")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600117E")]
		[Address(RVA = "0xBE1E60", Offset = "0xBE1E60", VA = "0xBE1E60")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x600117F")]
		[Address(RVA = "0xBE1F8C", Offset = "0xBE1F8C", VA = "0xBE1F8C")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x200021E")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x2000409")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5B38", Offset = "0x6F5B38")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400191C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400191D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400191E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x17000422")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018B3")]
				[Address(RVA = "0xBDECF8", Offset = "0xBDECF8", VA = "0xBDECF8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000423")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018B5")]
				[Address(RVA = "0xBDED60", Offset = "0xBDED60", VA = "0xBDED60", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018B0")]
			[Address(RVA = "0xBDDA2C", Offset = "0xBDDA2C", VA = "0xBDDA2C")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x60018B1")]
			[Address(RVA = "0xBDE714", Offset = "0xBDE714", VA = "0xBDE714", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018B2")]
			[Address(RVA = "0xBDE718", Offset = "0xBDE718", VA = "0xBDE718", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018B4")]
			[Address(RVA = "0xBDED00", Offset = "0xBDED00", VA = "0xBDED00", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F53")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x4000F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x4000F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x170002E6")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001180")]
			[Address(RVA = "0xBDD68C", Offset = "0xBDD68C", VA = "0xBDD68C", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x170002E7")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6001181")]
			[Address(RVA = "0xBDD694", Offset = "0xBDD694", VA = "0xBDD694", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x170002E8")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6001182")]
			[Address(RVA = "0xBDD69C", Offset = "0xBDD69C", VA = "0xBDD69C", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002E9")]
		public override bool EnableState
		{
			[Token(Token = "0x6001183")]
			[Address(RVA = "0xBDD6A4", Offset = "0xBDD6A4", VA = "0xBDD6A4", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001184")]
			[Address(RVA = "0xBDD6D0", Offset = "0xBDD6D0", VA = "0xBDD6D0", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6001185")]
		[Address(RVA = "0xBDD70C", Offset = "0xBDD70C", VA = "0xBDD70C", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001186")]
		[Address(RVA = "0xBDD9BC", Offset = "0xBDD9BC", VA = "0xBDD9BC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FF238", Offset = "0x6FF238")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x6001187")]
		[Address(RVA = "0xBDDA58", Offset = "0xBDDA58", VA = "0xBDDA58")]
		private void Update()
		{
		}

		[Token(Token = "0x6001188")]
		[Address(RVA = "0xBDDF68", Offset = "0xBDDF68", VA = "0xBDDF68")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x6001189")]
		[Address(RVA = "0xBDE1E0", Offset = "0xBDE1E0", VA = "0xBDE1E0")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x600118A")]
		[Address(RVA = "0xBDE320", Offset = "0xBDE320", VA = "0xBDE320", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x600118B")]
		[Address(RVA = "0xBDE5E8", Offset = "0xBDE5E8", VA = "0xBDE5E8", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x600118C")]
		[Address(RVA = "0xBDE5EC", Offset = "0xBDE5EC", VA = "0xBDE5EC", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x600118D")]
		[Address(RVA = "0xBDE5F0", Offset = "0xBDE5F0", VA = "0xBDE5F0")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x200021F")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4000F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x4000F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F8994", Offset = "0x6F8994")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F89A4", Offset = "0x6F89A4")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F89B4", Offset = "0x6F89B4")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x170002EA")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x600118E")]
			[Address(RVA = "0xBDED68", Offset = "0xBDED68", VA = "0xBDED68", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FF29C", Offset = "0x6FF29C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600118F")]
			[Address(RVA = "0xBDED70", Offset = "0xBDED70", VA = "0xBDED70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FF2AC", Offset = "0x6FF2AC")]
			set
			{
			}
		}

		[Token(Token = "0x170002EB")]
		public bool EnableState
		{
			[Token(Token = "0x6001190")]
			[Address(RVA = "0xBDED78", Offset = "0xBDED78", VA = "0xBDED78", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001191")]
			[Address(RVA = "0xBDED94", Offset = "0xBDED94", VA = "0xBDED94", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170002EC")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6001192")]
			[Address(RVA = "0xBDEDB4", Offset = "0xBDEDB4", VA = "0xBDEDB4", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FF2BC", Offset = "0x6FF2BC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001193")]
			[Address(RVA = "0xBDEDBC", Offset = "0xBDEDBC", VA = "0xBDEDBC", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FF2CC", Offset = "0x6FF2CC")]
			set
			{
			}
		}

		[Token(Token = "0x170002ED")]
		public float SphereRadius
		{
			[Token(Token = "0x6001194")]
			[Address(RVA = "0xBDEDC8", Offset = "0xBDEDC8", VA = "0xBDEDC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FF2DC", Offset = "0x6FF2DC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001195")]
			[Address(RVA = "0xBDEDD0", Offset = "0xBDEDD0", VA = "0xBDEDD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FF2EC", Offset = "0x6FF2EC")]
			private set
			{
			}
		}

		[Token(Token = "0x6001196")]
		[Address(RVA = "0xBDEDD8", Offset = "0xBDEDD8", VA = "0xBDEDD8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001197")]
		[Address(RVA = "0xBDEE20", Offset = "0xBDEE20", VA = "0xBDEE20", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001198")]
		[Address(RVA = "0xBDEE24", Offset = "0xBDEE24", VA = "0xBDEE24")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x2000220")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x4000F63")]
		None = 0,
		[Token(Token = "0x4000F64")]
		Ray = 1,
		[Token(Token = "0x4000F65")]
		Poke = 4,
		[Token(Token = "0x4000F66")]
		All = -1
	}
	[Token(Token = "0x2000221")]
	public enum ToolInputState
	{
		[Token(Token = "0x4000F68")]
		Inactive,
		[Token(Token = "0x4000F69")]
		PrimaryInputDown,
		[Token(Token = "0x4000F6A")]
		PrimaryInputDownStay,
		[Token(Token = "0x4000F6B")]
		PrimaryInputUp
	}
	[Token(Token = "0x2000222")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x4000F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x4000F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x6001199")]
		[Address(RVA = "0xBDE5A4", Offset = "0xBDE5A4", VA = "0xBDE5A4")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x2000223")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F89C4", Offset = "0x6F89C4")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F89D4", Offset = "0x6F89D4")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F89E4", Offset = "0x6F89E4")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x170002EE")]
		public Transform ToolTransform
		{
			[Token(Token = "0x600119A")]
			[Address(RVA = "0xBDAAB4", Offset = "0xBDAAB4", VA = "0xBDAAB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EF")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x600119B")]
			[Address(RVA = "0xBE0820", Offset = "0xBE0820", VA = "0xBE0820")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FF2FC", Offset = "0x6FF2FC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600119C")]
			[Address(RVA = "0xBE0828", Offset = "0xBE0828", VA = "0xBE0828")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FF30C", Offset = "0x6FF30C")]
			set
			{
			}
		}

		[Token(Token = "0x170002F0")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x600119D")]
			get;
		}

		[Token(Token = "0x170002F1")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x600119E")]
			get;
		}

		[Token(Token = "0x170002F2")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x600119F")]
			get;
		}

		[Token(Token = "0x170002F3")]
		public Vector3 Velocity
		{
			[Token(Token = "0x60011A0")]
			[Address(RVA = "0xBE0834", Offset = "0xBE0834", VA = "0xBE0834")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FF31C", Offset = "0x6FF31C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60011A1")]
			[Address(RVA = "0xBE0840", Offset = "0xBE0840", VA = "0xBE0840")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FF32C", Offset = "0x6FF32C")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002F4")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x60011A2")]
			[Address(RVA = "0xBE084C", Offset = "0xBE084C", VA = "0xBE084C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FF33C", Offset = "0x6FF33C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60011A3")]
			[Address(RVA = "0xBE0858", Offset = "0xBE0858", VA = "0xBE0858")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FF34C", Offset = "0x6FF34C")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002F5")]
		public abstract bool EnableState
		{
			[Token(Token = "0x60011A8")]
			get;
			[Token(Token = "0x60011A9")]
			set;
		}

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0xBE0864", Offset = "0xBE0864", VA = "0xBE0864")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x60011A5")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x60011A6")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x60011A7")]
		public abstract void DeFocus();

		[Token(Token = "0x60011AA")]
		public abstract void Initialize();

		[Token(Token = "0x60011AB")]
		[Address(RVA = "0xBE086C", Offset = "0xBE086C", VA = "0xBE086C")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x60011AC")]
		[Address(RVA = "0xBE08BC", Offset = "0xBE08BC", VA = "0xBE08BC")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x60011AD")]
		[Address(RVA = "0xBE0914", Offset = "0xBE0914", VA = "0xBE0914", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0xBE0B58", Offset = "0xBE0B58", VA = "0xBE0B58", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0xBDE604", Offset = "0xBDE604", VA = "0xBDE604")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x2000224")]
	public interface InteractableToolView
	{
		[Token(Token = "0x170002F6")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x60011B0")]
			get;
		}

		[Token(Token = "0x170002F7")]
		bool EnableState
		{
			[Token(Token = "0x60011B2")]
			get;
			[Token(Token = "0x60011B3")]
			set;
		}

		[Token(Token = "0x170002F8")]
		bool ToolActivateState
		{
			[Token(Token = "0x60011B4")]
			get;
			[Token(Token = "0x60011B5")]
			set;
		}

		[Token(Token = "0x60011B1")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x2000225")]
	public class PinchStateModule
	{
		[Token(Token = "0x200040A")]
		private enum PinchState
		{
			[Token(Token = "0x4001920")]
			None,
			[Token(Token = "0x4001921")]
			PinchDown,
			[Token(Token = "0x4001922")]
			PinchStay,
			[Token(Token = "0x4001923")]
			PinchUp
		}

		[Token(Token = "0x4000F78")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x4000F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x170002F9")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x60011B6")]
			[Address(RVA = "0xC49148", Offset = "0xC49148", VA = "0xC49148")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002FA")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x60011B7")]
			[Address(RVA = "0xC491D4", Offset = "0xC491D4", VA = "0xC491D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002FB")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x60011B8")]
			[Address(RVA = "0xC49260", Offset = "0xC49260", VA = "0xC49260")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60011B9")]
		[Address(RVA = "0xC492EC", Offset = "0xC492EC", VA = "0xC492EC")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0xC49318", Offset = "0xC49318", VA = "0xC49318")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x2000226")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x4000F7B")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x4000F7C")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x4000F7D")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x4000F7E")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x4000F7F")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6F8A04", Offset = "0x6F8A04")]
		[SerializeField]
		private float _coneAngleDegrees;

		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x4000F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x4000F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x4000F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x4000F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x170002FC")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x60011BB")]
			[Address(RVA = "0xC495B8", Offset = "0xC495B8", VA = "0xC495B8", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x170002FD")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x60011BC")]
			[Address(RVA = "0xC495C0", Offset = "0xC495C0", VA = "0xC495C0", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x170002FE")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x60011BD")]
			[Address(RVA = "0xC49628", Offset = "0xC49628", VA = "0xC49628", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002FF")]
		public override bool EnableState
		{
			[Token(Token = "0x60011BE")]
			[Address(RVA = "0xC49630", Offset = "0xC49630", VA = "0xC49630", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011BF")]
			[Address(RVA = "0xC49674", Offset = "0xC49674", VA = "0xC49674", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x60011C0")]
		[Address(RVA = "0xC496E8", Offset = "0xC496E8", VA = "0xC496E8", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60011C1")]
		[Address(RVA = "0xC49748", Offset = "0xC49748", VA = "0xC49748")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60011C2")]
		[Address(RVA = "0xC497F0", Offset = "0xC497F0", VA = "0xC497F0")]
		private void Update()
		{
		}

		[Token(Token = "0x60011C3")]
		[Address(RVA = "0xC49AF8", Offset = "0xC49AF8", VA = "0xC49AF8")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011C4")]
		[Address(RVA = "0xC49BF4", Offset = "0xC49BF4", VA = "0xC49BF4", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x60011C5")]
		[Address(RVA = "0xC49F58", Offset = "0xC49F58", VA = "0xC49F58")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x60011C6")]
		[Address(RVA = "0xC4A0FC", Offset = "0xC4A0FC", VA = "0xC4A0FC")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x60011C7")]
		[Address(RVA = "0xC4A224", Offset = "0xC4A224", VA = "0xC4A224")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x60011C8")]
		[Address(RVA = "0xC4A55C", Offset = "0xC4A55C", VA = "0xC4A55C")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x60011C9")]
		[Address(RVA = "0xC4A96C", Offset = "0xC4A96C", VA = "0xC4A96C", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x60011CA")]
		[Address(RVA = "0xC4AA40", Offset = "0xC4AA40", VA = "0xC4AA40", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x60011CB")]
		[Address(RVA = "0xC4AA74", Offset = "0xC4AA74", VA = "0xC4AA74")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x2000227")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4000F8B")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x4000F8C")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x4000F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x4000F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x4000F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x4000F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x4000F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x4000F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F8A78", Offset = "0x6F8A78")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x17000300")]
		public bool EnableState
		{
			[Token(Token = "0x60011CC")]
			[Address(RVA = "0xC49658", Offset = "0xC49658", VA = "0xC49658", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011CD")]
			[Address(RVA = "0xC49690", Offset = "0xC49690", VA = "0xC49690", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000301")]
		public bool ToolActivateState
		{
			[Token(Token = "0x60011CE")]
			[Address(RVA = "0xC4AB30", Offset = "0xC4AB30", VA = "0xC4AB30", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011CF")]
			[Address(RVA = "0xC49ABC", Offset = "0xC49ABC", VA = "0xC49ABC", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x17000302")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x60011D1")]
			[Address(RVA = "0xC4AD60", Offset = "0xC4AD60", VA = "0xC4AD60", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FF35C", Offset = "0x6FF35C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011D2")]
			[Address(RVA = "0xC4AD68", Offset = "0xC4AD68", VA = "0xC4AD68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FF36C", Offset = "0x6FF36C")]
			set
			{
			}
		}

		[Token(Token = "0x60011D0")]
		[Address(RVA = "0xC4AB38", Offset = "0xC4AB38", VA = "0xC4AB38")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011D3")]
		[Address(RVA = "0xC4A9A0", Offset = "0xC4A9A0", VA = "0xC4A9A0", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60011D4")]
		[Address(RVA = "0xC4AD70", Offset = "0xC4AD70", VA = "0xC4AD70")]
		private void Update()
		{
		}

		[Token(Token = "0x60011D5")]
		[Address(RVA = "0xC4B09C", Offset = "0xC4B09C", VA = "0xC4B09C")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011D6")]
		[Address(RVA = "0xC4B28C", Offset = "0xC4B28C", VA = "0xC4B28C")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x2000228")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x4000F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x4000F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x17000303")]
		public bool UseSpherecast
		{
			[Token(Token = "0x60011D7")]
			[Address(RVA = "0xBDD2FC", Offset = "0xBDD2FC", VA = "0xBDD2FC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011D8")]
			[Address(RVA = "0xBDD304", Offset = "0xBDD304", VA = "0xBDD304")]
			set
			{
			}
		}

		[Token(Token = "0x17000304")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x60011D9")]
			[Address(RVA = "0xBDD38C", Offset = "0xBDD38C", VA = "0xBDD38C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011DA")]
			[Address(RVA = "0xBDD394", Offset = "0xBDD394", VA = "0xBDD394")]
			set
			{
			}
		}

		[Token(Token = "0x60011DB")]
		[Address(RVA = "0xBDD400", Offset = "0xBDD400", VA = "0xBDD400")]
		private void Start()
		{
		}

		[Token(Token = "0x60011DC")]
		[Address(RVA = "0xBDD664", Offset = "0xBDD664", VA = "0xBDD664")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x60011DD")]
		[Address(RVA = "0xBDD674", Offset = "0xBDD674", VA = "0xBDD674")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x60011DE")]
		[Address(RVA = "0xBDD684", Offset = "0xBDD684", VA = "0xBDD684")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x2000229")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x4000F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x4000F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x60011DF")]
		[Address(RVA = "0xBDB20C", Offset = "0xBDB20C", VA = "0xBDB20C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011E0")]
		[Address(RVA = "0xBDB210", Offset = "0xBDB210", VA = "0xBDB210")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60011E1")]
		[Address(RVA = "0xBDB248", Offset = "0xBDB248", VA = "0xBDB248")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60011E2")]
		[Address(RVA = "0xBDB280", Offset = "0xBDB280", VA = "0xBDB280")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60011E3")]
		[Address(RVA = "0xBDB2B8", Offset = "0xBDB2B8", VA = "0xBDB2B8")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60011E4")]
		[Address(RVA = "0xBDB2F0", Offset = "0xBDB2F0", VA = "0xBDB2F0")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60011E5")]
		[Address(RVA = "0xBDB328", Offset = "0xBDB328", VA = "0xBDB328")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60011E6")]
		[Address(RVA = "0xBDB360", Offset = "0xBDB360", VA = "0xBDB360")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60011E7")]
		[Address(RVA = "0xBDB4BC", Offset = "0xBDB4BC", VA = "0xBDB4BC")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60011E8")]
		[Address(RVA = "0xBDB52C", Offset = "0xBDB52C", VA = "0xBDB52C")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x200022A")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x4000F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x60011E9")]
		[Address(RVA = "0xBDB534", Offset = "0xBDB534", VA = "0xBDB534")]
		private void Start()
		{
		}

		[Token(Token = "0x60011EA")]
		[Address(RVA = "0xBDB538", Offset = "0xBDB538", VA = "0xBDB538")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x60011EB")]
		[Address(RVA = "0xBDB4F0", Offset = "0xBDB4F0", VA = "0xBDB4F0")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0xBDB578", Offset = "0xBDB578", VA = "0xBDB578")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x200022B")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x200040B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5B48", Offset = "0x6F5B48")]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001924")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001925")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001926")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x4001927")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x4001928")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x4001929")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x17000424")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018B9")]
				[Address(RVA = "0xC48FEC", Offset = "0xC48FEC", VA = "0xC48FEC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000425")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018BB")]
				[Address(RVA = "0xC49054", Offset = "0xC49054", VA = "0xC49054", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018B6")]
			[Address(RVA = "0xC48D20", Offset = "0xC48D20", VA = "0xC48D20")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60018B7")]
			[Address(RVA = "0xC48DFC", Offset = "0xC48DFC", VA = "0xC48DFC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018B8")]
			[Address(RVA = "0xC48E00", Offset = "0xC48E00", VA = "0xC48E00", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018BA")]
			[Address(RVA = "0xC48FF4", Offset = "0xC48FF4", VA = "0xC48FF4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F9C")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x4000F9D")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x4000F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x4000F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x4000FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x4000FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x4000FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x4000FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x4000FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0xC48938", Offset = "0xC48938", VA = "0xC48938")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0xC489D0", Offset = "0xC489D0", VA = "0xC489D0")]
		private void Update()
		{
		}

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0xC48C5C", Offset = "0xC48C5C", VA = "0xC48C5C")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011F0")]
		[Address(RVA = "0xC48BEC", Offset = "0xC48BEC", VA = "0xC48BEC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FF37C", Offset = "0x6FF37C")]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x60011F1")]
		[Address(RVA = "0xC48D4C", Offset = "0xC48D4C", VA = "0xC48D4C")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x200022C")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x200040C")]
		public enum SelectionState
		{
			[Token(Token = "0x400192B")]
			Off,
			[Token(Token = "0x400192C")]
			Selected,
			[Token(Token = "0x400192D")]
			Highlighted
		}

		[Token(Token = "0x4000FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x4000FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x4000FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x4000FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x4000FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x4000FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x17000305")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x60011F2")]
			[Address(RVA = "0xC4B2EC", Offset = "0xC4B2EC", VA = "0xC4B2EC")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x60011F3")]
			[Address(RVA = "0xC4B2F4", Offset = "0xC4B2F4", VA = "0xC4B2F4")]
			set
			{
			}
		}

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0xC4B47C", Offset = "0xC4B47C", VA = "0xC4B47C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011F5")]
		[Address(RVA = "0xC4B63C", Offset = "0xC4B63C", VA = "0xC4B63C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60011F6")]
		[Address(RVA = "0xC4B37C", Offset = "0xC4B37C", VA = "0xC4B37C")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x60011F7")]
		[Address(RVA = "0xC4B72C", Offset = "0xC4B72C", VA = "0xC4B72C")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x200022D")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x200040D")]
		public enum SegmentType
		{
			[Token(Token = "0x400192F")]
			Straight,
			[Token(Token = "0x4001930")]
			LeftTurn,
			[Token(Token = "0x4001931")]
			RightTurn,
			[Token(Token = "0x4001932")]
			Switch
		}

		[Token(Token = "0x4000FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x4000FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x4000FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x4000FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x4000FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x4000FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x4000FB2")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x4000FB3")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x4000FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x4000FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F8B58", Offset = "0x6F8B58")]
		private float <StartDistance>k__BackingField;

		[Token(Token = "0x4000FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x4000FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x17000306")]
		public float StartDistance
		{
			[Token(Token = "0x60011F9")]
			[Address(RVA = "0xC4B798", Offset = "0xC4B798", VA = "0xC4B798")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FF3E0", Offset = "0x6FF3E0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60011FA")]
			[Address(RVA = "0xC4B7A0", Offset = "0xC4B7A0", VA = "0xC4B7A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FF3F0", Offset = "0x6FF3F0")]
			set
			{
			}
		}

		[Token(Token = "0x17000307")]
		public float GridSize
		{
			[Token(Token = "0x60011FB")]
			[Address(RVA = "0xC4B7A8", Offset = "0xC4B7A8", VA = "0xC4B7A8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60011FC")]
			[Address(RVA = "0xC4B7B0", Offset = "0xC4B7B0", VA = "0xC4B7B0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000308")]
		public int SubDivCount
		{
			[Token(Token = "0x60011FD")]
			[Address(RVA = "0xC4B7B8", Offset = "0xC4B7B8", VA = "0xC4B7B8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60011FE")]
			[Address(RVA = "0xC4B7C0", Offset = "0xC4B7C0", VA = "0xC4B7C0")]
			set
			{
			}
		}

		[Token(Token = "0x17000309")]
		public SegmentType Type
		{
			[Token(Token = "0x60011FF")]
			[Address(RVA = "0xC4B7C8", Offset = "0xC4B7C8", VA = "0xC4B7C8")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x1700030A")]
		public Pose EndPose
		{
			[Token(Token = "0x6001200")]
			[Address(RVA = "0xC4B7D0", Offset = "0xC4B7D0", VA = "0xC4B7D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030B")]
		public float Radius
		{
			[Token(Token = "0x6001201")]
			[Address(RVA = "0xC4BC64", Offset = "0xC4BC64", VA = "0xC4BC64")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700030C")]
		public float SegmentLength
		{
			[Token(Token = "0x6001203")]
			[Address(RVA = "0xC4B838", Offset = "0xC4B838", VA = "0xC4B838")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001202")]
		[Address(RVA = "0xC4BC74", Offset = "0xC4BC74", VA = "0xC4BC74")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x6001204")]
		[Address(RVA = "0xC4BC8C", Offset = "0xC4BC8C", VA = "0xC4BC8C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001205")]
		[Address(RVA = "0xC4B878", Offset = "0xC4B878", VA = "0xC4B878")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x6001206")]
		[Address(RVA = "0xC4BC90", Offset = "0xC4BC90", VA = "0xC4BC90")]
		private void Update()
		{
		}

		[Token(Token = "0x6001207")]
		[Address(RVA = "0xC4BC94", Offset = "0xC4BC94", VA = "0xC4BC94")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001208")]
		[Address(RVA = "0xC4BD00", Offset = "0xC4BD00", VA = "0xC4BD00")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x6001209")]
		[Address(RVA = "0xC4C888", Offset = "0xC4C888", VA = "0xC4C888")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x600120A")]
		[Address(RVA = "0xC4CB94", Offset = "0xC4CB94", VA = "0xC4CB94")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x200022E")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x200040E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5B58", Offset = "0x6F5B58")]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001933")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001934")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001935")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x4001936")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x4001937")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x17000426")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018BF")]
				[Address(RVA = "0xC4D7AC", Offset = "0xC4D7AC", VA = "0xC4D7AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000427")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018C1")]
				[Address(RVA = "0xC4D814", Offset = "0xC4D814", VA = "0xC4D814", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018BC")]
			[Address(RVA = "0xC4D524", Offset = "0xC4D524", VA = "0xC4D524")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x60018BD")]
			[Address(RVA = "0xC4D600", Offset = "0xC4D600", VA = "0xC4D600", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018BE")]
			[Address(RVA = "0xC4D604", Offset = "0xC4D604", VA = "0xC4D604", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018C0")]
			[Address(RVA = "0xC4D7B4", Offset = "0xC4D7B4", VA = "0xC4D7B4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FB9")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x4000FBA")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x4000FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x4000FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x4000FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x4000FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x4000FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x4000FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x4000FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x4000FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x4000FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x4000FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x4000FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x4000FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x4000FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x600120B")]
		[Address(RVA = "0xC4CC38", Offset = "0xC4CC38", VA = "0xC4CC38")]
		private void Awake()
		{
		}

		[Token(Token = "0x600120C")]
		[Address(RVA = "0xC4CCE4", Offset = "0xC4CCE4", VA = "0xC4CCE4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600120D")]
		[Address(RVA = "0xC4CD98", Offset = "0xC4CD98", VA = "0xC4CD98")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600120E")]
		[Address(RVA = "0xC4CECC", Offset = "0xC4CECC", VA = "0xC4CECC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600120F")]
		[Address(RVA = "0xC4D044", Offset = "0xC4D044", VA = "0xC4D044")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x6001210")]
		[Address(RVA = "0xC4D1E0", Offset = "0xC4D1E0", VA = "0xC4D1E0")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001211")]
		[Address(RVA = "0xC4D45C", Offset = "0xC4D45C", VA = "0xC4D45C")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x6001212")]
		[Address(RVA = "0xC4D2F4", Offset = "0xC4D2F4", VA = "0xC4D2F4")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0xC4D308", Offset = "0xC4D308", VA = "0xC4D308")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x6001214")]
		[Address(RVA = "0xC4D4B4", Offset = "0xC4D4B4", VA = "0xC4D4B4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FF400", Offset = "0x6FF400")]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x6001215")]
		[Address(RVA = "0xC4D550", Offset = "0xC4D550", VA = "0xC4D550")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x200022F")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x4000FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x4000FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x1700030D")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x6001216")]
			[Address(RVA = "0xC4D81C", Offset = "0xC4D81C", VA = "0xC4D81C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0xC4D82C", Offset = "0xC4D82C", VA = "0xC4D82C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001218")]
		[Address(RVA = "0xC4D834", Offset = "0xC4D834", VA = "0xC4D834", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6001219")]
		[Address(RVA = "0xC4DCA0", Offset = "0xC4DCA0", VA = "0xC4DCA0")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x2000230")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x4000FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x4000FCD")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x4000FCE")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x4000FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x4000FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x4000FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x4000FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x4000FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F8C58", Offset = "0x6F8C58")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x4000FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x1700030E")]
		public float Distance
		{
			[Token(Token = "0x600121A")]
			[Address(RVA = "0xC4DD98", Offset = "0xC4DD98", VA = "0xC4DD98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FF464", Offset = "0x6FF464")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600121B")]
			[Address(RVA = "0xC4DDA0", Offset = "0xC4DDA0", VA = "0xC4DDA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FF474", Offset = "0x6FF474")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700030F")]
		public float Scale
		{
			[Token(Token = "0x600121C")]
			[Address(RVA = "0xC4DDA8", Offset = "0xC4DDA8", VA = "0xC4DDA8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600121D")]
			[Address(RVA = "0xC4DDB0", Offset = "0xC4DDB0", VA = "0xC4DDB0")]
			set
			{
			}
		}

		[Token(Token = "0x600121E")]
		[Address(RVA = "0xC4D830", Offset = "0xC4D830", VA = "0xC4D830", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600121F")]
		[Address(RVA = "0xC4DDB8", Offset = "0xC4DDB8", VA = "0xC4DDB8")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x6001220")]
		[Address(RVA = "0xC4D87C", Offset = "0xC4D87C", VA = "0xC4D87C")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x6001221")]
		[Address(RVA = "0xC4DB54", Offset = "0xC4DB54", VA = "0xC4DB54")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x6001222")]
		public abstract void UpdatePosition();

		[Token(Token = "0x6001223")]
		[Address(RVA = "0xC4DD10", Offset = "0xC4DD10", VA = "0xC4DD10")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x2000231")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x200040F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5B68", Offset = "0x6F5B68")]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001938")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001939")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400193A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x400193B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x400193C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x400193D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x400193E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x400193F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x4001940")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x4001941")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x4001942")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x4001943")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x17000428")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018C5")]
				[Address(RVA = "0xC4E740", Offset = "0xC4E740", VA = "0xC4E740", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000429")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018C7")]
				[Address(RVA = "0xC4E7A8", Offset = "0xC4E7A8", VA = "0xC4E7A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018C2")]
			[Address(RVA = "0xC4E384", Offset = "0xC4E384", VA = "0xC4E384")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x60018C3")]
			[Address(RVA = "0xC4E51C", Offset = "0xC4E51C", VA = "0xC4E51C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018C4")]
			[Address(RVA = "0xC4E520", Offset = "0xC4E520", VA = "0xC4E520", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018C6")]
			[Address(RVA = "0xC4E748", Offset = "0xC4E748", VA = "0xC4E748", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x4000FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4000FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x4000FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x4000FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x4000FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x4000FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6001225")]
		[Address(RVA = "0xC4DF88", Offset = "0xC4DF88", VA = "0xC4DF88")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001226")]
		[Address(RVA = "0xC4DFD4", Offset = "0xC4DFD4", VA = "0xC4DFD4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001227")]
		[Address(RVA = "0xC4E0E0", Offset = "0xC4E0E0", VA = "0xC4E0E0")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001228")]
		[Address(RVA = "0xC4E228", Offset = "0xC4E228", VA = "0xC4E228")]
		private void Update()
		{
		}

		[Token(Token = "0x6001229")]
		[Address(RVA = "0xC4E13C", Offset = "0xC4E13C", VA = "0xC4E13C")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x600122A")]
		[Address(RVA = "0xC4E304", Offset = "0xC4E304", VA = "0xC4E304")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FF484", Offset = "0x6FF484")]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x600122B")]
		[Address(RVA = "0xC4E3B0", Offset = "0xC4E3B0", VA = "0xC4E3B0")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x600122C")]
		[Address(RVA = "0xC4E45C", Offset = "0xC4E45C", VA = "0xC4E45C")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x600122D")]
		[Address(RVA = "0xC4E4BC", Offset = "0xC4E4BC", VA = "0xC4E4BC")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x2000232")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x2000410")]
		private enum EngineSoundState
		{
			[Token(Token = "0x4001945")]
			Start,
			[Token(Token = "0x4001946")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x4001947")]
			Stop
		}

		[Token(Token = "0x2000411")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5B78", Offset = "0x6F5B78")]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001948")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001949")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400194A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x400194B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x400194C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x400194D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x400194E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x400194F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x4001950")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x1700042A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018CB")]
				[Address(RVA = "0xC4F3E8", Offset = "0xC4F3E8", VA = "0xC4F3E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700042B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018CD")]
				[Address(RVA = "0xC4F450", Offset = "0xC4F450", VA = "0xC4F450", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018C8")]
			[Address(RVA = "0xC4EAB4", Offset = "0xC4EAB4", VA = "0xC4EAB4")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x60018C9")]
			[Address(RVA = "0xC4F1C8", Offset = "0xC4F1C8", VA = "0xC4F1C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018CA")]
			[Address(RVA = "0xC4F1CC", Offset = "0xC4F1CC", VA = "0xC4F1CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018CC")]
			[Address(RVA = "0xC4F3F0", Offset = "0xC4F3F0", VA = "0xC4F3F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FE1")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x4000FE2")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x4000FE3")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x4000FE4")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x4000FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6F8CB8", Offset = "0x6F8CB8")]
		protected float _initialSpeed;

		[Token(Token = "0x4000FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4000FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x4000FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x4000FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x4000FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x4000FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x4000FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x4000FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x4000FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x4000FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x4000FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x4000FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x4000FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x4000FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x4000FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x4000FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x4000FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x4000FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x4000FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x4000FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x4000FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x4000FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x4000FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x600122E")]
		[Address(RVA = "0xC4E7B0", Offset = "0xC4E7B0", VA = "0xC4E7B0")]
		private void Start()
		{
		}

		[Token(Token = "0x600122F")]
		[Address(RVA = "0xC4E908", Offset = "0xC4E908", VA = "0xC4E908")]
		private void Update()
		{
		}

		[Token(Token = "0x6001230")]
		[Address(RVA = "0xC4E914", Offset = "0xC4E914", VA = "0xC4E914", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6001231")]
		[Address(RVA = "0xC4EA68", Offset = "0xC4EA68", VA = "0xC4EA68")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x6001232")]
		[Address(RVA = "0xC4E884", Offset = "0xC4E884", VA = "0xC4E884")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FF4E8", Offset = "0x6FF4E8")]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x6001233")]
		[Address(RVA = "0xC4EAE0", Offset = "0xC4EAE0", VA = "0xC4EAE0")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x6001234")]
		[Address(RVA = "0xC4EA04", Offset = "0xC4EA04", VA = "0xC4EA04")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x6001235")]
		[Address(RVA = "0xC4ED14", Offset = "0xC4ED14", VA = "0xC4ED14")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6001236")]
		[Address(RVA = "0xC4EEC0", Offset = "0xC4EEC0", VA = "0xC4EEC0")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6001237")]
		[Address(RVA = "0xC4EDD0", Offset = "0xC4EDD0", VA = "0xC4EDD0")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x6001238")]
		[Address(RVA = "0xC4EF7C", Offset = "0xC4EF7C", VA = "0xC4EF7C")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x6001239")]
		[Address(RVA = "0xC4F004", Offset = "0xC4F004", VA = "0xC4F004")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x600123A")]
		[Address(RVA = "0xC4F090", Offset = "0xC4F090", VA = "0xC4F090")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x600123B")]
		[Address(RVA = "0xC4F14C", Offset = "0xC4F14C", VA = "0xC4F14C")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x600123C")]
		[Address(RVA = "0xC4F15C", Offset = "0xC4F15C", VA = "0xC4F15C")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x2000233")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x4000FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x4000FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x4001000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x4001001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x4001002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x4001003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x4001004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x17000310")]
		public float TrackLength
		{
			[Token(Token = "0x600123D")]
			[Address(RVA = "0xC4F458", Offset = "0xC4F458", VA = "0xC4F458")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600123E")]
			[Address(RVA = "0xC4F460", Offset = "0xC4F460", VA = "0xC4F460")]
			private set
			{
			}
		}

		[Token(Token = "0x600123F")]
		[Address(RVA = "0xC4F468", Offset = "0xC4F468", VA = "0xC4F468")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001240")]
		[Address(RVA = "0xC4DE38", Offset = "0xC4DE38", VA = "0xC4DE38")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x6001241")]
		[Address(RVA = "0xC4F46C", Offset = "0xC4F46C", VA = "0xC4F46C")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0xC4F664", Offset = "0xC4F664", VA = "0xC4F664")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x6001243")]
		[Address(RVA = "0xC4F780", Offset = "0xC4F780", VA = "0xC4F780")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x2000234")]
	public class Pose
	{
		[Token(Token = "0x4001005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x4001006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x6001244")]
		[Address(RVA = "0xC4949C", Offset = "0xC4949C", VA = "0xC4949C")]
		public Pose()
		{
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0xC49548", Offset = "0xC49548", VA = "0xC49548")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x2000235")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x2000412")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5B88", Offset = "0x6F5B88")]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001951")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001952")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001953")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4001954")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x4001955")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x4001956")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x1700042C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018D1")]
				[Address(RVA = "0xC4FD64", Offset = "0xC4FD64", VA = "0xC4FD64", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700042D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018D3")]
				[Address(RVA = "0xC4FDCC", Offset = "0xC4FDCC", VA = "0xC4FDCC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018CE")]
			[Address(RVA = "0xC4FA28", Offset = "0xC4FA28", VA = "0xC4FA28")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x60018CF")]
			[Address(RVA = "0xC4FB88", Offset = "0xC4FB88", VA = "0xC4FB88", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018D0")]
			[Address(RVA = "0xC4FB8C", Offset = "0xC4FB8C", VA = "0xC4FB8C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018D2")]
			[Address(RVA = "0xC4FD6C", Offset = "0xC4FD6C", VA = "0xC4FD6C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000413")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5B98", Offset = "0x6F5B98")]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001957")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001958")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001959")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x400195A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x400195B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x400195C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x1700042E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018D7")]
				[Address(RVA = "0xC4FEA0", Offset = "0xC4FEA0", VA = "0xC4FEA0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700042F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018D9")]
				[Address(RVA = "0xC4FF08", Offset = "0xC4FF08", VA = "0xC4FF08", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018D4")]
			[Address(RVA = "0xC4FAE8", Offset = "0xC4FAE8", VA = "0xC4FAE8")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x60018D5")]
			[Address(RVA = "0xC4FDD4", Offset = "0xC4FDD4", VA = "0xC4FDD4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018D6")]
			[Address(RVA = "0xC4FDD8", Offset = "0xC4FDD8", VA = "0xC4FDD8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018D8")]
			[Address(RVA = "0xC4FEA8", Offset = "0xC4FEA8", VA = "0xC4FEA8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001007")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x4001008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4001009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x400100A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x400100B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x400100C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F8EA0", Offset = "0x6F8EA0")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x400100D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x400100E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x400100F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x4001010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x4001011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x17000311")]
		public bool IsMoving
		{
			[Token(Token = "0x6001246")]
			[Address(RVA = "0xC4F79C", Offset = "0xC4F79C", VA = "0xC4F79C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FF54C", Offset = "0x6FF54C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001247")]
			[Address(RVA = "0xC4F7A4", Offset = "0xC4F7A4", VA = "0xC4F7A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FF55C", Offset = "0x6FF55C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0xC4F7B0", Offset = "0xC4F7B0", VA = "0xC4F7B0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001249")]
		[Address(RVA = "0xC4F7EC", Offset = "0xC4F7EC", VA = "0xC4F7EC")]
		private void Update()
		{
		}

		[Token(Token = "0x600124A")]
		[Address(RVA = "0xC4F940", Offset = "0xC4F940", VA = "0xC4F940")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x600124B")]
		[Address(RVA = "0xC4F9A8", Offset = "0xC4F9A8", VA = "0xC4F9A8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FF56C", Offset = "0x6FF56C")]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x600124C")]
		[Address(RVA = "0xC4FA54", Offset = "0xC4FA54", VA = "0xC4FA54")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FF5D0", Offset = "0x6FF5D0")]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x600124D")]
		[Address(RVA = "0xC4FB14", Offset = "0xC4FB14", VA = "0xC4FB14")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0xC4FB80", Offset = "0xC4FB80", VA = "0xC4FB80")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x2000236")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x4001012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4001013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x4001014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4001015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x4001016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x600124F")]
		[Address(RVA = "0xC4FF10", Offset = "0xC4FF10", VA = "0xC4FF10")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001250")]
		[Address(RVA = "0xC4FF78", Offset = "0xC4FF78", VA = "0xC4FF78")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001251")]
		[Address(RVA = "0xC50030", Offset = "0xC50030", VA = "0xC50030")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001252")]
		[Address(RVA = "0xC50130", Offset = "0xC50130", VA = "0xC50130")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001253")]
		[Address(RVA = "0xC501AC", Offset = "0xC501AC", VA = "0xC501AC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001254")]
		[Address(RVA = "0xC50288", Offset = "0xC50288", VA = "0xC50288")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x2000237")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x4001018")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x4001019")]
		EUDT_OverlayQuad,
		[Token(Token = "0x400101A")]
		EUDT_None,
		[Token(Token = "0x400101B")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x2000238")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x2000414")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5BA8", Offset = "0x6F5BA8")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400195D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400195E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400195F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x17000430")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018DD")]
				[Address(RVA = "0xC488C8", Offset = "0xC488C8", VA = "0xC488C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000431")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018DF")]
				[Address(RVA = "0xC48930", Offset = "0xC48930", VA = "0xC48930", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018DA")]
			[Address(RVA = "0xC47F44", Offset = "0xC47F44", VA = "0xC47F44")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x60018DB")]
			[Address(RVA = "0xC4867C", Offset = "0xC4867C", VA = "0xC4867C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018DC")]
			[Address(RVA = "0xC48680", Offset = "0xC48680", VA = "0xC48680", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018DE")]
			[Address(RVA = "0xC488D0", Offset = "0xC488D0", VA = "0xC488D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400101C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x400101D")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x400101E")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x400101F")]
		private const string noneID = "NoneID";

		[Token(Token = "0x4001020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x4001021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x4001022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6F8EE0", Offset = "0x6F8EE0")]
		public GameObject mainCamera;

		[Token(Token = "0x4001023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x4001024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x4001025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x4001026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x4001027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x4001028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x4001029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x400102A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6F8F18", Offset = "0x6F8F18")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x400102B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x400102C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x400102D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x400102E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x400102F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x4001030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x4001031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x4001032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x4001033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x6001255")]
		[Address(RVA = "0xC4728C", Offset = "0xC4728C", VA = "0xC4728C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001256")]
		[Address(RVA = "0xC47A6C", Offset = "0xC47A6C", VA = "0xC47A6C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001257")]
		[Address(RVA = "0xC47BAC", Offset = "0xC47BAC", VA = "0xC47BAC")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x6001258")]
		[Address(RVA = "0xC47CD4", Offset = "0xC47CD4", VA = "0xC47CD4")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x6001259")]
		[Address(RVA = "0xC47DFC", Offset = "0xC47DFC", VA = "0xC47DFC")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x600125A")]
		[Address(RVA = "0xC47B80", Offset = "0xC47B80", VA = "0xC47B80")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x600125B")]
		[Address(RVA = "0xC47ED4", Offset = "0xC47ED4", VA = "0xC47ED4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FF634", Offset = "0x6FF634")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x600125C")]
		[Address(RVA = "0xC47F70", Offset = "0xC47F70", VA = "0xC47F70")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x600125D")]
		[Address(RVA = "0xC475F8", Offset = "0xC475F8", VA = "0xC475F8")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0xC48098", Offset = "0xC48098", VA = "0xC48098")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x600125F")]
		[Address(RVA = "0xC47FA4", Offset = "0xC47FA4", VA = "0xC47FA4")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x6001260")]
		[Address(RVA = "0xC48434", Offset = "0xC48434", VA = "0xC48434")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0xC48510", Offset = "0xC48510", VA = "0xC48510")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x6001262")]
		[Address(RVA = "0xC4858C", Offset = "0xC4858C", VA = "0xC4858C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FF698", Offset = "0x6FF698")]
		private void <Start>b__24_0(Toggle t)
		{
		}

		[Token(Token = "0x6001263")]
		[Address(RVA = "0xC485DC", Offset = "0xC485DC", VA = "0xC485DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FF6A8", Offset = "0x6FF6A8")]
		private void <Start>b__24_1(Toggle t)
		{
		}

		[Token(Token = "0x6001264")]
		[Address(RVA = "0xC4862C", Offset = "0xC4862C", VA = "0xC4862C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6FF6B8", Offset = "0x6FF6B8")]
		private void <Start>b__24_2(Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x2000239")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6F4F88", Offset = "0x6F4F88")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000415")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5BB8", Offset = "0x6F5BB8")]
		private sealed class <>c
		{
			[Token(Token = "0x4001960")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001961")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x60018E1")]
			[Address(RVA = "0xBCBB44", Offset = "0xBCBB44", VA = "0xBCBB44")]
			public <>c()
			{
			}

			[Token(Token = "0x60018E2")]
			[Address(RVA = "0xBCBB4C", Offset = "0xBCBB4C", VA = "0xBCBB4C")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001034")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x4001035")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x4001036")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x4001037")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x4001038")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x4001039")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x400103A")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x400103B")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x400103C")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x400103D")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x400103E")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x400103F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4001040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4001041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x4001042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x4001043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x4001044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x4001045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x4001046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x4001047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x4001048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x4001049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x400104A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x400104B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x6001265")]
		[Address(RVA = "0xBCAD88", Offset = "0xBCAD88", VA = "0xBCAD88")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001266")]
		[Address(RVA = "0xBCADE0", Offset = "0xBCADE0", VA = "0xBCADE0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001267")]
		[Address(RVA = "0xBCB1E8", Offset = "0xBCB1E8", VA = "0xBCB1E8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001268")]
		[Address(RVA = "0xBCB2B4", Offset = "0xBCB2B4", VA = "0xBCB2B4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001269")]
		[Address(RVA = "0xBCB3C0", Offset = "0xBCB3C0", VA = "0xBCB3C0")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x600126A")]
		[Address(RVA = "0xBCB6F8", Offset = "0xBCB6F8", VA = "0xBCB6F8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600126B")]
		[Address(RVA = "0xBCB860", Offset = "0xBCB860", VA = "0xBCB860")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x600126C")]
		[Address(RVA = "0xBCB9AC", Offset = "0xBCB9AC", VA = "0xBCB9AC")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x600126D")]
		[Address(RVA = "0xBCB45C", Offset = "0xBCB45C", VA = "0xBCB45C")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x600126E")]
		[Address(RVA = "0xBCB4FC", Offset = "0xBCB4FC", VA = "0xBCB4FC")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x600126F")]
		[Address(RVA = "0xBCB03C", Offset = "0xBCB03C", VA = "0xBCB03C")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x6001270")]
		[Address(RVA = "0xBCBAC8", Offset = "0xBCBAC8", VA = "0xBCBAC8")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x200023A")]
	public enum HandPoseId
	{
		[Token(Token = "0x4001051")]
		Default,
		[Token(Token = "0x4001052")]
		Generic,
		[Token(Token = "0x4001053")]
		PingPongBall,
		[Token(Token = "0x4001054")]
		Controller
	}
	[Token(Token = "0x200023B")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x17000312")]
		public bool AllowPointing
		{
			[Token(Token = "0x6001271")]
			[Address(RVA = "0xBCBB78", Offset = "0xBCBB78", VA = "0xBCBB78")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000313")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x6001272")]
			[Address(RVA = "0xBCBB80", Offset = "0xBCBB80", VA = "0xBCBB80")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000314")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x6001273")]
			[Address(RVA = "0xBCBB88", Offset = "0xBCBB88", VA = "0xBCBB88")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x6001274")]
		[Address(RVA = "0xBCBB90", Offset = "0xBCBB90", VA = "0xBCBB90")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x200023C")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x6001275")]
		[Address(RVA = "0xBCBB98", Offset = "0xBCBB98", VA = "0xBCBB98")]
		private void Update()
		{
		}

		[Token(Token = "0x6001276")]
		[Address(RVA = "0xBCBE0C", Offset = "0xBCBE0C", VA = "0xBCBE0C")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6001277")]
		[Address(RVA = "0xBCBE68", Offset = "0xBCBE68", VA = "0xBCBE68")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6001278")]
		[Address(RVA = "0xBCBEAC", Offset = "0xBCBEAC", VA = "0xBCBEAC")]
		public TouchController()
		{
		}
	}
}
namespace Oculus.Spatializer.Propagation
{
	[Token(Token = "0x200023D")]
	public enum FaceType : uint
	{
		[Token(Token = "0x400105C")]
		TRIANGLES,
		[Token(Token = "0x400105D")]
		QUADS
	}
	[Token(Token = "0x200023E")]
	public enum MaterialProperty : uint
	{
		[Token(Token = "0x400105F")]
		ABSORPTION,
		[Token(Token = "0x4001060")]
		TRANSMISSION,
		[Token(Token = "0x4001061")]
		SCATTERING
	}
	[Token(Token = "0x200023F")]
	public struct MeshGroup
	{
		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UIntPtr indexOffset;

		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UIntPtr faceCount;

		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FaceType faceType;

		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IntPtr material;
	}
}
namespace Oculus.Avatar
{
	[Token(Token = "0x2000240")]
	public static class AvatarLogger
	{
		[Token(Token = "0x4001066")]
		public const string LogAvatar = "[Avatars] - ";

		[Token(Token = "0x4001067")]
		public const string Tab = "    ";

		[Token(Token = "0x6001279")]
		[Address(RVA = "0xBCC528", Offset = "0xBCC528", VA = "0xBCC528")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6FF6C8", Offset = "0x6FF6C8")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6FF6C8", Offset = "0x6FF6C8")]
		public static void Log(string logMsg)
		{
		}

		[Token(Token = "0x600127A")]
		[Address(RVA = "0xBCC5B0", Offset = "0xBCC5B0", VA = "0xBCC5B0")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6FF728", Offset = "0x6FF728")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6FF728", Offset = "0x6FF728")]
		public static void Log(string logMsg, UnityEngine.Object context)
		{
		}

		[Token(Token = "0x600127B")]
		[Address(RVA = "0xBCC648", Offset = "0xBCC648", VA = "0xBCC648")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6FF788", Offset = "0x6FF788")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6FF788", Offset = "0x6FF788")]
		public static void LogWarning(string logMsg)
		{
		}

		[Token(Token = "0x600127C")]
		[Address(RVA = "0xBCC6D0", Offset = "0xBCC6D0", VA = "0xBCC6D0")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6FF7E8", Offset = "0x6FF7E8")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6FF7E8", Offset = "0x6FF7E8")]
		public static void LogError(string logMsg)
		{
		}

		[Token(Token = "0x600127D")]
		[Address(RVA = "0xBCC758", Offset = "0xBCC758", VA = "0xBCC758")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6FF848", Offset = "0x6FF848")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6FF848", Offset = "0x6FF848")]
		public static void LogError(string logMsg, UnityEngine.Object context)
		{
		}
	}
	[Token(Token = "0x2000241")]
	public class CAPI
	{
		[Token(Token = "0x2000416")]
		public delegate void LoggingDelegate(IntPtr str);

		[Token(Token = "0x2000417")]
		public enum Result
		{
			[Token(Token = "0x4001963")]
			Success = 0,
			[Token(Token = "0x4001964")]
			Failure = -1000,
			[Token(Token = "0x4001965")]
			Failure_InvalidParameter = -1001,
			[Token(Token = "0x4001966")]
			Failure_NotInitialized = -1002,
			[Token(Token = "0x4001967")]
			Failure_InvalidOperation = -1003,
			[Token(Token = "0x4001968")]
			Failure_Unsupported = -1004,
			[Token(Token = "0x4001969")]
			Failure_NotYetImplemented = -1005,
			[Token(Token = "0x400196A")]
			Failure_OperationFailed = -1006,
			[Token(Token = "0x400196B")]
			Failure_InsufficientSize = -1007
		}

		[Token(Token = "0x2000418")]
		private static class OVRP_1_30_0
		{
			[Token(Token = "0x400196C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly Version version;

			[PreserveSig]
			[Token(Token = "0x60018E7")]
			[Address(RVA = "0xBD3F90", Offset = "0xBD3F90", VA = "0xBD3F90")]
			public static extern Result ovrp_SendEvent2(string name, string param, string source);
		}

		[Token(Token = "0x4001068")]
		private const string LibFile = "ovravatarloader";

		[Token(Token = "0x4001069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr nativeVisemeData;

		[Token(Token = "0x400106A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IntPtr nativeGazeTargetsData;

		[Token(Token = "0x400106B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IntPtr nativeAvatarLightsData;

		[Token(Token = "0x400106C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IntPtr DebugLineCountData;

		[Token(Token = "0x400106D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static float[] scratchBufferFloat;

		[Token(Token = "0x400106E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject debugLineGo;

		[Token(Token = "0x400106F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string SDKRuntimePrefix;

		[Token(Token = "0x4001070")]
		private const string ovrPluginDLL = "OVRPlugin";

		[Token(Token = "0x4001071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Version ovrPluginVersion;

		[PreserveSig]
		[Token(Token = "0x600127E")]
		[Address(RVA = "0xBCC858", Offset = "0xBCC858", VA = "0xBCC858")]
		public static extern void ovrAvatar_InitializeAndroidUnity(string appID);

		[Token(Token = "0x600127F")]
		[Address(RVA = "0xBCC8E8", Offset = "0xBCC8E8", VA = "0xBCC8E8")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6001280")]
		[Address(RVA = "0xBCCAA4", Offset = "0xBCCAA4", VA = "0xBCCAA4")]
		public static void Shutdown()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001281")]
		[Address(RVA = "0xBCCB84", Offset = "0xBCCB84", VA = "0xBCCB84")]
		public static extern void ovrAvatar_Shutdown();

		[PreserveSig]
		[Token(Token = "0x6001282")]
		[Address(RVA = "0xBCCBF4", Offset = "0xBCCBF4", VA = "0xBCCBF4")]
		public static extern IntPtr ovrAvatarMessage_Pop();

		[PreserveSig]
		[Token(Token = "0x6001283")]
		[Address(RVA = "0xBCCC68", Offset = "0xBCCC68", VA = "0xBCCC68")]
		public static extern ovrAvatarMessageType ovrAvatarMessage_GetType(IntPtr msg);

		[Token(Token = "0x6001284")]
		[Address(RVA = "0xBCCCE8", Offset = "0xBCCCE8", VA = "0xBCCCE8")]
		public static ovrAvatarMessage_AvatarSpecification ovrAvatarMessage_GetAvatarSpecification(IntPtr msg)
		{
			return default(ovrAvatarMessage_AvatarSpecification);
		}

		[PreserveSig]
		[Token(Token = "0x6001285")]
		[Address(RVA = "0xBCCE00", Offset = "0xBCCE00", VA = "0xBCCE00")]
		private static extern IntPtr ovrAvatarMessage_GetAvatarSpecification_Native(IntPtr msg);

		[Token(Token = "0x6001286")]
		[Address(RVA = "0xBCCE80", Offset = "0xBCCE80", VA = "0xBCCE80")]
		public static ovrAvatarMessage_AssetLoaded ovrAvatarMessage_GetAssetLoaded(IntPtr msg)
		{
			return default(ovrAvatarMessage_AssetLoaded);
		}

		[PreserveSig]
		[Token(Token = "0x6001287")]
		[Address(RVA = "0xBCCF98", Offset = "0xBCCF98", VA = "0xBCCF98")]
		private static extern IntPtr ovrAvatarMessage_GetAssetLoaded_Native(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6001288")]
		[Address(RVA = "0xBCD018", Offset = "0xBCD018", VA = "0xBCD018")]
		public static extern void ovrAvatarMessage_Free(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6001289")]
		[Address(RVA = "0xBCD098", Offset = "0xBCD098", VA = "0xBCD098")]
		public static extern IntPtr ovrAvatarSpecificationRequest_Create(ulong userID);

		[PreserveSig]
		[Token(Token = "0x600128A")]
		[Address(RVA = "0xBCD118", Offset = "0xBCD118", VA = "0xBCD118")]
		public static extern void ovrAvatarSpecificationRequest_Destroy(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x600128B")]
		[Address(RVA = "0xBCD198", Offset = "0xBCD198", VA = "0xBCD198")]
		public static extern void ovrAvatarSpecificationRequest_SetCombineMeshes(IntPtr specificationRequest, bool useCombinedMesh);

		[PreserveSig]
		[Token(Token = "0x600128C")]
		[Address(RVA = "0xBCD228", Offset = "0xBCD228", VA = "0xBCD228")]
		public static extern void ovrAvatarSpecificationRequest_SetLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x600128D")]
		[Address(RVA = "0xBCD2B8", Offset = "0xBCD2B8", VA = "0xBCD2B8")]
		public static extern void ovrAvatarSpecificationRequest_SetLevelOfDetail(IntPtr specificationRequest, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x600128E")]
		[Address(RVA = "0xBCD348", Offset = "0xBCD348", VA = "0xBCD348")]
		public static extern void ovrAvatar_RequestAvatarSpecification(ulong userID);

		[PreserveSig]
		[Token(Token = "0x600128F")]
		[Address(RVA = "0xBCD3C8", Offset = "0xBCD3C8", VA = "0xBCD3C8")]
		public static extern void ovrAvatar_RequestAvatarSpecificationFromSpecRequest(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6001290")]
		[Address(RVA = "0xBCD448", Offset = "0xBCD448", VA = "0xBCD448")]
		public static extern void ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6001291")]
		[Address(RVA = "0xBCD4D8", Offset = "0xBCD4D8", VA = "0xBCD4D8")]
		public static extern void ovrAvatarSpecificationRequest_SetExpressiveFlag(IntPtr specificationRequest, bool enable);

		[PreserveSig]
		[Token(Token = "0x6001292")]
		[Address(RVA = "0xBCD568", Offset = "0xBCD568", VA = "0xBCD568")]
		public static extern IntPtr ovrAvatar_Create(IntPtr avatarSpecification, ovrAvatarCapabilities capabilities);

		[PreserveSig]
		[Token(Token = "0x6001293")]
		[Address(RVA = "0xBCD5F8", Offset = "0xBCD5F8", VA = "0xBCD5F8")]
		public static extern void ovrAvatar_Destroy(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001294")]
		[Address(RVA = "0xBCD678", Offset = "0xBCD678", VA = "0xBCD678")]
		public static extern void ovrAvatarPose_UpdateBody(IntPtr avatar, ovrAvatarTransform headPose);

		[Token(Token = "0x6001295")]
		[Address(RVA = "0xBCD718", Offset = "0xBCD718", VA = "0xBCD718")]
		public static void ovrAvatarPose_UpdateVoiceVisualization(IntPtr avatar, float[] pcmData)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001296")]
		[Address(RVA = "0xBCD798", Offset = "0xBCD798", VA = "0xBCD798")]
		private static extern void ovrAvatarPose_UpdateVoiceVisualization_Native(IntPtr avatar, uint pcmDataSize, [In] float[] pcmData);

		[PreserveSig]
		[Token(Token = "0x6001297")]
		[Address(RVA = "0xBCD838", Offset = "0xBCD838", VA = "0xBCD838")]
		public static extern void ovrAvatarPose_UpdateHands(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight);

		[PreserveSig]
		[Token(Token = "0x6001298")]
		[Address(RVA = "0xBCD8F8", Offset = "0xBCD8F8", VA = "0xBCD8F8")]
		public static extern void ovrAvatarPose_UpdateHandsWithType(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight, ovrAvatarControllerType type);

		[PreserveSig]
		[Token(Token = "0x6001299")]
		[Address(RVA = "0xBCD9C8", Offset = "0xBCD9C8", VA = "0xBCD9C8")]
		public static extern void ovrAvatarPose_Finalize(IntPtr avatar, float elapsedSeconds);

		[PreserveSig]
		[Token(Token = "0x600129A")]
		[Address(RVA = "0xBCDA58", Offset = "0xBCDA58", VA = "0xBCDA58")]
		public static extern void ovrAvatar_SetLeftControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x600129B")]
		[Address(RVA = "0xBCDAE8", Offset = "0xBCDAE8", VA = "0xBCDAE8")]
		public static extern void ovrAvatar_SetRightControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x600129C")]
		[Address(RVA = "0xBCDB78", Offset = "0xBCDB78", VA = "0xBCDB78")]
		public static extern void ovrAvatar_SetLeftHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x600129D")]
		[Address(RVA = "0xBCDC08", Offset = "0xBCDC08", VA = "0xBCDC08")]
		public static extern void ovrAvatar_SetRightHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x600129E")]
		[Address(RVA = "0xBCDC98", Offset = "0xBCDC98", VA = "0xBCDC98")]
		public static extern uint ovrAvatarComponent_Count(IntPtr avatar);

		[Token(Token = "0x600129F")]
		[Address(RVA = "0xBCDD18", Offset = "0xBCDD18", VA = "0xBCDD18")]
		public static void ovrAvatarComponent_Get(IntPtr avatar, uint index, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0xBCDE38", Offset = "0xBCDE38", VA = "0xBCDE38")]
		public static void ovrAvatarComponent_Get(IntPtr componentPtr, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60012A1")]
		[Address(RVA = "0xBCDDA8", Offset = "0xBCDDA8", VA = "0xBCDDA8")]
		public static extern IntPtr ovrAvatarComponent_Get_Native(IntPtr avatar, uint index);

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0xBCE02C", Offset = "0xBCE02C", VA = "0xBCE02C")]
		public static bool ovrAvatarPose_GetBaseComponent(IntPtr avatar, ref ovrAvatarBaseComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60012A3")]
		[Address(RVA = "0xBCE164", Offset = "0xBCE164", VA = "0xBCE164")]
		private static extern IntPtr ovrAvatarPose_GetBaseComponent_Native(IntPtr avatar);

		[Token(Token = "0x60012A4")]
		public static IntPtr MarshalRenderComponent<T>(IntPtr ptr) where T : struct
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0xBCE1E4", Offset = "0xBCE1E4", VA = "0xBCE1E4")]
		public static bool ovrAvatarPose_GetBodyComponent(IntPtr avatar, ref ovrAvatarBodyComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60012A6")]
		[Address(RVA = "0xBCE454", Offset = "0xBCE454", VA = "0xBCE454")]
		private static extern IntPtr ovrAvatarPose_GetBodyComponent_Native(IntPtr avatar);

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0xBCE4D4", Offset = "0xBCE4D4", VA = "0xBCE4D4")]
		public static bool ovrAvatarPose_GetLeftControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60012A8")]
		[Address(RVA = "0xBCE60C", Offset = "0xBCE60C", VA = "0xBCE60C")]
		private static extern IntPtr ovrAvatarPose_GetLeftControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0xBCE68C", Offset = "0xBCE68C", VA = "0xBCE68C")]
		public static bool ovrAvatarPose_GetRightControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60012AA")]
		[Address(RVA = "0xBCE7C4", Offset = "0xBCE7C4", VA = "0xBCE7C4")]
		private static extern IntPtr ovrAvatarPose_GetRightControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0xBCE844", Offset = "0xBCE844", VA = "0xBCE844")]
		public static bool ovrAvatarPose_GetLeftHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60012AC")]
		[Address(RVA = "0xBCE97C", Offset = "0xBCE97C", VA = "0xBCE97C")]
		private static extern IntPtr ovrAvatarPose_GetLeftHandComponent_Native(IntPtr avatar);

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0xBCE9FC", Offset = "0xBCE9FC", VA = "0xBCE9FC")]
		public static bool ovrAvatarPose_GetRightHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x60012AE")]
		[Address(RVA = "0xBCEB34", Offset = "0xBCEB34", VA = "0xBCEB34")]
		private static extern IntPtr ovrAvatarPose_GetRightHandComponent_Native(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60012AF")]
		[Address(RVA = "0xBCEBB4", Offset = "0xBCEBB4", VA = "0xBCEBB4")]
		public static extern void ovrAvatarAsset_BeginLoading(ulong assetID);

		[PreserveSig]
		[Token(Token = "0x60012B0")]
		[Address(RVA = "0xBCEC34", Offset = "0xBCEC34", VA = "0xBCEC34")]
		public static extern bool ovrAvatarAsset_BeginLoadingLOD(ulong assetId, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x60012B1")]
		[Address(RVA = "0xBCECCC", Offset = "0xBCECCC", VA = "0xBCECCC")]
		public static extern ovrAvatarAssetType ovrAvatarAsset_GetType(IntPtr assetHandle);

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0xBCED4C", Offset = "0xBCED4C", VA = "0xBCED4C")]
		public static ovrAvatarMeshAssetData ovrAvatarAsset_GetMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetData);
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0xBCEEF8", Offset = "0xBCEEF8", VA = "0xBCEEF8")]
		public static ovrAvatarMeshAssetDataV2 ovrAvatarAsset_GetCombinedMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetDataV2);
		}

		[PreserveSig]
		[Token(Token = "0x60012B4")]
		[Address(RVA = "0xBCF024", Offset = "0xBCF024", VA = "0xBCF024")]
		private static extern IntPtr ovrAvatarAsset_GetCombinedMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60012B5")]
		[Address(RVA = "0xBCEE78", Offset = "0xBCEE78", VA = "0xBCEE78")]
		private static extern IntPtr ovrAvatarAsset_GetMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60012B6")]
		[Address(RVA = "0xBCF0A4", Offset = "0xBCF0A4", VA = "0xBCF0A4")]
		public static extern uint ovrAvatarAsset_GetMeshBlendShapeCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60012B7")]
		[Address(RVA = "0xBCF124", Offset = "0xBCF124", VA = "0xBCF124")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeName(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x60012B8")]
		[Address(RVA = "0xBCF1B4", Offset = "0xBCF1B4", VA = "0xBCF1B4")]
		public static extern uint ovrAvatarAsset_GetSubmeshCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60012B9")]
		[Address(RVA = "0xBCF234", Offset = "0xBCF234", VA = "0xBCF234")]
		public static extern uint ovrAvatarAsset_GetSubmeshLastIndex(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x60012BA")]
		[Address(RVA = "0xBCF2C4", Offset = "0xBCF2C4", VA = "0xBCF2C4")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeVertices(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60012BB")]
		[Address(RVA = "0xBCF344", Offset = "0xBCF344", VA = "0xBCF344")]
		public static extern IntPtr ovrAvatarAsset_GetAvatar(IntPtr assetHandle);

		[Token(Token = "0x60012BC")]
		[Address(RVA = "0xBCF3C4", Offset = "0xBCF3C4", VA = "0xBCF3C4")]
		public static ulong[] ovrAvatarAsset_GetCombinedMeshIDs(IntPtr assetHandle)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60012BD")]
		[Address(RVA = "0xBCF600", Offset = "0xBCF600", VA = "0xBCF600")]
		public static extern IntPtr ovrAvatarAsset_GetCombinedMeshIDs_Native(IntPtr assetHandle, IntPtr count);

		[Token(Token = "0x60012BE")]
		[Address(RVA = "0xBCF690", Offset = "0xBCF690", VA = "0xBCF690")]
		public static void ovrAvatar_GetCombinedMeshAlphaData(IntPtr avatar, ref ulong textureID, ref Vector4 offset)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60012BF")]
		[Address(RVA = "0xBCF87C", Offset = "0xBCF87C", VA = "0xBCF87C")]
		public static extern IntPtr ovrAvatar_GetCombinedMeshAlphaData_Native(IntPtr avatar, IntPtr textureIDPtr, IntPtr offsetPtr);

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0xBCF914", Offset = "0xBCF914", VA = "0xBCF914")]
		public static ovrAvatarTextureAssetData ovrAvatarAsset_GetTextureData(IntPtr assetPtr)
		{
			return default(ovrAvatarTextureAssetData);
		}

		[PreserveSig]
		[Token(Token = "0x60012C1")]
		[Address(RVA = "0xBCFA38", Offset = "0xBCFA38", VA = "0xBCFA38")]
		private static extern IntPtr ovrAvatarAsset_GetTextureData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x60012C2")]
		[Address(RVA = "0xBCFAB8", Offset = "0xBCFAB8", VA = "0xBCFAB8")]
		private static extern IntPtr ovrAvatarAsset_GetMaterialData_Native(IntPtr assetPtr);

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0xBCFB38", Offset = "0xBCFB38", VA = "0xBCFB38")]
		public static ovrAvatarMaterialState ovrAvatarAsset_GetMaterialState(IntPtr assetPtr)
		{
			return default(ovrAvatarMaterialState);
		}

		[PreserveSig]
		[Token(Token = "0x60012C4")]
		[Address(RVA = "0xBCFC60", Offset = "0xBCFC60", VA = "0xBCFC60")]
		public static extern ovrAvatarRenderPartType ovrAvatarRenderPart_GetType(IntPtr renderPart);

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0xBCFCE0", Offset = "0xBCFCE0", VA = "0xBCFCE0")]
		public static ovrAvatarRenderPart_SkinnedMeshRender ovrAvatarRenderPart_GetSkinnedMeshRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRender);
		}

		[PreserveSig]
		[Token(Token = "0x60012C6")]
		[Address(RVA = "0xBCFE08", Offset = "0xBCFE08", VA = "0xBCFE08")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60012C7")]
		[Address(RVA = "0xBCFE88", Offset = "0xBCFE88", VA = "0xBCFE88")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60012C8")]
		[Address(RVA = "0xBCFF18", Offset = "0xBCFF18", VA = "0xBCFF18")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60012C9")]
		[Address(RVA = "0xBCFFA8", Offset = "0xBCFFA8", VA = "0xBCFFA8")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60012CA")]
		[Address(RVA = "0xBD0038", Offset = "0xBD0038", VA = "0xBD0038")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRender_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60012CB")]
		[Address(RVA = "0xBD00B8", Offset = "0xBD00B8", VA = "0xBD00B8")]
		public static extern bool ovrAvatarSkinnedMeshRender_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60012CC")]
		[Address(RVA = "0xBD0140", Offset = "0xBD0140", VA = "0xBD0140")]
		public static extern bool ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60012CD")]
		[Address(RVA = "0xBD01C8", Offset = "0xBD01C8", VA = "0xBD01C8")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60012CE")]
		[Address(RVA = "0xBD0248", Offset = "0xBD0248", VA = "0xBD0248")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60012CF")]
		[Address(RVA = "0xBD02C8", Offset = "0xBD02C8", VA = "0xBD02C8")]
		public static extern ovrAvatarMaterialState ovrAvatarSkinnedMeshRender_GetMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60012D0")]
		[Address(RVA = "0xBD037C", Offset = "0xBD037C", VA = "0xBD037C")]
		public static extern ovrAvatarPBSMaterialState ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60012D1")]
		[Address(RVA = "0xBD040C", Offset = "0xBD040C", VA = "0xBD040C")]
		public static extern ovrAvatarExpressiveParameters ovrAvatar_GetExpressiveParameters(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60012D2")]
		[Address(RVA = "0xBD049C", Offset = "0xBD049C", VA = "0xBD049C")]
		public static extern ulong ovrAvatarSkinnedMeshRender_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60012D3")]
		[Address(RVA = "0xBD051C", Offset = "0xBD051C", VA = "0xBD051C")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60012D4")]
		[Address(RVA = "0xBD059C", Offset = "0xBD059C", VA = "0xBD059C")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60012D5")]
		[Address(RVA = "0xBD061C", Offset = "0xBD061C", VA = "0xBD061C")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x60012D6")]
		[Address(RVA = "0xBD06B4", Offset = "0xBD06B4", VA = "0xBD06B4")]
		public static extern void ovrAvatar_SetActionUnitOnsetSpeed(IntPtr avatar, float onsetSpeed);

		[PreserveSig]
		[Token(Token = "0x60012D7")]
		[Address(RVA = "0xBD0744", Offset = "0xBD0744", VA = "0xBD0744")]
		public static extern void ovrAvatar_SetActionUnitFalloffSpeed(IntPtr avatar, float falloffSpeed);

		[PreserveSig]
		[Token(Token = "0x60012D8")]
		[Address(RVA = "0xBD07D4", Offset = "0xBD07D4", VA = "0xBD07D4")]
		public static extern void ovrAvatar_SetVisemeMultiplier(IntPtr avatar, float visemeMultiplier);

		[PreserveSig]
		[Token(Token = "0x60012D9")]
		[Address(RVA = "0xBD0864", Offset = "0xBD0864", VA = "0xBD0864")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x60012DA")]
		[Address(RVA = "0xBD08FC", Offset = "0xBD08FC", VA = "0xBD08FC")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x60012DB")]
		[Address(RVA = "0xBD0994", Offset = "0xBD0994", VA = "0xBD0994")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60012DC")]
		[Address(RVA = "0xBD0A14", Offset = "0xBD0A14", VA = "0xBD0A14")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(IntPtr renderPart);

		[Token(Token = "0x60012DD")]
		[Address(RVA = "0xBD0A94", Offset = "0xBD0A94", VA = "0xBD0A94")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS);
		}

		[PreserveSig]
		[Token(Token = "0x60012DE")]
		[Address(RVA = "0xBD0BBC", Offset = "0xBD0BBC", VA = "0xBD0BBC")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(IntPtr renderPart);

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0xBD0C3C", Offset = "0xBD0C3C", VA = "0xBD0C3C")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2);
		}

		[PreserveSig]
		[Token(Token = "0x60012E0")]
		[Address(RVA = "0xBD0D64", Offset = "0xBD0D64", VA = "0xBD0D64")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(IntPtr renderPart);

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0xBD0DE4", Offset = "0xBD0DE4", VA = "0xBD0DE4")]
		public static void ovrAvatarSkinnedMeshRender_GetBlendShapeParams(IntPtr renderPart, ref ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60012E2")]
		[Address(RVA = "0xBD0F0C", Offset = "0xBD0F0C", VA = "0xBD0F0C")]
		private static extern IntPtr ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native(IntPtr renderPart);

		[Token(Token = "0x60012E3")]
		[Address(RVA = "0xBD0F8C", Offset = "0xBD0F8C", VA = "0xBD0F8C")]
		public static ovrAvatarRenderPart_ProjectorRender ovrAvatarRenderPart_GetProjectorRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_ProjectorRender);
		}

		[Token(Token = "0x60012E4")]
		[Address(RVA = "0xBD1134", Offset = "0xBD1134", VA = "0xBD1134")]
		public static ovrAvatarPBSMaterialState[] ovrAvatar_GetBodyPBSMaterialStates(IntPtr renderPart)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60012E5")]
		[Address(RVA = "0xBD13D0", Offset = "0xBD13D0", VA = "0xBD13D0")]
		private static extern IntPtr ovrAvatar_GetBodyPBSMaterialStates_Native(IntPtr avatar, IntPtr count);

		[PreserveSig]
		[Token(Token = "0x60012E6")]
		[Address(RVA = "0xBD10B4", Offset = "0xBD10B4", VA = "0xBD10B4")]
		private static extern IntPtr ovrAvatarRenderPart_GetProjectorRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x60012E7")]
		[Address(RVA = "0xBD1460", Offset = "0xBD1460", VA = "0xBD1460")]
		public static extern uint ovrAvatar_GetReferencedAssetCount(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60012E8")]
		[Address(RVA = "0xBD14E0", Offset = "0xBD14E0", VA = "0xBD14E0")]
		public static extern ulong ovrAvatar_GetReferencedAsset(IntPtr avatar, uint index);

		[PreserveSig]
		[Token(Token = "0x60012E9")]
		[Address(RVA = "0xBD1570", Offset = "0xBD1570", VA = "0xBD1570")]
		public static extern void ovrAvatar_SetLeftHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x60012EA")]
		[Address(RVA = "0xBD1600", Offset = "0xBD1600", VA = "0xBD1600")]
		public static extern void ovrAvatar_SetRightHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x60012EB")]
		[Address(RVA = "0xBD1690", Offset = "0xBD1690", VA = "0xBD1690")]
		public static extern void ovrAvatar_SetLeftHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x60012EC")]
		[Address(RVA = "0xBD1730", Offset = "0xBD1730", VA = "0xBD1730")]
		public static extern void ovrAvatar_SetRightHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x60012ED")]
		[Address(RVA = "0xBD17D0", Offset = "0xBD17D0", VA = "0xBD17D0")]
		public static extern void ovrAvatar_UpdatePoseFromPacket(IntPtr avatar, IntPtr packet, float secondsFromStart);

		[PreserveSig]
		[Token(Token = "0x60012EE")]
		[Address(RVA = "0xBD1870", Offset = "0xBD1870", VA = "0xBD1870")]
		public static extern void ovrAvatarPacket_BeginRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60012EF")]
		[Address(RVA = "0xBD18F0", Offset = "0xBD18F0", VA = "0xBD18F0")]
		public static extern IntPtr ovrAvatarPacket_EndRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60012F0")]
		[Address(RVA = "0xBD1970", Offset = "0xBD1970", VA = "0xBD1970")]
		public static extern uint ovrAvatarPacket_GetSize(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x60012F1")]
		[Address(RVA = "0xBD19F0", Offset = "0xBD19F0", VA = "0xBD19F0")]
		public static extern float ovrAvatarPacket_GetDurationSeconds(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x60012F2")]
		[Address(RVA = "0xBD1A70", Offset = "0xBD1A70", VA = "0xBD1A70")]
		public static extern void ovrAvatarPacket_Free(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x60012F3")]
		[Address(RVA = "0xBD1AF0", Offset = "0xBD1AF0", VA = "0xBD1AF0")]
		public static extern bool ovrAvatarPacket_Write(IntPtr packet, uint bufferSize, [Out] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x60012F4")]
		[Address(RVA = "0xBD1C18", Offset = "0xBD1C18", VA = "0xBD1C18")]
		public static extern IntPtr ovrAvatarPacket_Read(uint bufferSize, [In] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x60012F5")]
		[Address(RVA = "0xBD1CB0", Offset = "0xBD1CB0", VA = "0xBD1CB0")]
		private static extern void ovrAvatar_SetInternalForceASTCTextures(bool value);

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0xBD1D30", Offset = "0xBD1D30", VA = "0xBD1D30")]
		public static void ovrAvatar_SetForceASTCTextures(bool value)
		{
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0xBD1D94", Offset = "0xBD1D94", VA = "0xBD1D94")]
		public static void ovrAvatar_OverrideExpressiveLogic(IntPtr avatar, ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60012F8")]
		[Address(RVA = "0xBD1EB0", Offset = "0xBD1EB0", VA = "0xBD1EB0")]
		private static extern void ovrAvatar_OverrideExpressiveLogic_Native(IntPtr avatar, IntPtr state);

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0xBD1F40", Offset = "0xBD1F40", VA = "0xBD1F40")]
		public static void ovrAvatar_SetVisemes(IntPtr avatar, ovrAvatarVisemes visemes)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60012FA")]
		[Address(RVA = "0xBD2084", Offset = "0xBD2084", VA = "0xBD2084")]
		private static extern void ovrAvatar_SetVisemes_Native(IntPtr avatar, IntPtr visemes);

		[PreserveSig]
		[Token(Token = "0x60012FB")]
		[Address(RVA = "0xBD2114", Offset = "0xBD2114", VA = "0xBD2114")]
		public static extern void ovrAvatar_UpdateWorldTransform(IntPtr avatar, ovrAvatarTransform transform);

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0xBD21B4", Offset = "0xBD21B4", VA = "0xBD21B4")]
		public static void ovrAvatar_UpdateGazeTargets(ovrAvatarGazeTargets targets)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60012FD")]
		[Address(RVA = "0xBD254C", Offset = "0xBD254C", VA = "0xBD254C")]
		private static extern void ovrAvatar_UpdateGazeTargets_Native(IntPtr targets);

		[PreserveSig]
		[Token(Token = "0x60012FE")]
		[Address(RVA = "0xBD25CC", Offset = "0xBD25CC", VA = "0xBD25CC")]
		public static extern void ovrAvatar_RemoveGazeTargets(uint targetCount, uint[] ids);

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0xBD2664", Offset = "0xBD2664", VA = "0xBD2664")]
		public static void ovrAvatar_UpdateLights(ovrAvatarLights lights)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001300")]
		[Address(RVA = "0xBD2E2C", Offset = "0xBD2E2C", VA = "0xBD2E2C")]
		private static extern void ovrAvatar_UpdateLights_Native(IntPtr lights);

		[PreserveSig]
		[Token(Token = "0x6001301")]
		[Address(RVA = "0xBD2EAC", Offset = "0xBD2EAC", VA = "0xBD2EAC")]
		public static extern void ovrAvatar_RemoveLights(uint lightCount, uint[] ids);

		[Token(Token = "0x6001302")]
		[Address(RVA = "0xBCC7F0", Offset = "0xBCC7F0", VA = "0xBCC7F0")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x6FF8A8", Offset = "0x6FF8A8")]
		public static void LoggingCallback(IntPtr str)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001303")]
		[Address(RVA = "0xBD2F44", Offset = "0xBD2F44", VA = "0xBD2F44")]
		public static extern void ovrAvatar_RegisterLoggingCallback(LoggingDelegate callback);

		[PreserveSig]
		[Token(Token = "0x6001304")]
		[Address(RVA = "0xBD2FC8", Offset = "0xBD2FC8", VA = "0xBD2FC8")]
		public static extern void ovrAvatar_SetLoggingLevel(ovrAvatarLogLevel level);

		[PreserveSig]
		[Token(Token = "0x6001305")]
		[Address(RVA = "0xBD3048", Offset = "0xBD3048", VA = "0xBD3048")]
		public static extern IntPtr ovrAvatar_GetDebugTransforms_Native(IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6001306")]
		[Address(RVA = "0xBD30C8", Offset = "0xBD30C8", VA = "0xBD30C8")]
		public static extern IntPtr ovrAvatar_GetDebugLines_Native(IntPtr count);

		[Token(Token = "0x6001307")]
		[Address(RVA = "0xBD3148", Offset = "0xBD3148", VA = "0xBD3148")]
		public static void ovrAvatar_DrawDebugLines()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001308")]
		[Address(RVA = "0xBD3B28", Offset = "0xBD3B28", VA = "0xBD3B28")]
		public static extern void ovrAvatar_SetDebugDrawContext(uint context);

		[Token(Token = "0x6001309")]
		[Address(RVA = "0xBD3BA8", Offset = "0xBD3BA8", VA = "0xBD3BA8")]
		public static bool SendEvent(string name, string param = "", string source = "")
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x600130A")]
		[Address(RVA = "0xBD406C", Offset = "0xBD406C", VA = "0xBD406C")]
		private static extern IntPtr _ovrp_GetVersion();

		[Token(Token = "0x600130B")]
		[Address(RVA = "0xBD3F00", Offset = "0xBD3F00", VA = "0xBD3F00")]
		public static string ovrp_GetVersion()
		{
			return null;
		}

		[Token(Token = "0x600130C")]
		[Address(RVA = "0xBD40E0", Offset = "0xBD40E0", VA = "0xBD40E0")]
		public CAPI()
		{
		}
	}
}
namespace OVR
{
	[Token(Token = "0x2000242")]
	public class TestScript : MonoBehaviour
	{
		[Token(Token = "0x4001072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "InspectorNoteAttribute", RVA = "0x6F8FD0", Offset = "0x6F8FD0")]
		public SoundFXRef testSound1;

		[Token(Token = "0x4001073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundFXRef testSound2;

		[Token(Token = "0x600130E")]
		[Address(RVA = "0x115F33C", Offset = "0x115F33C", VA = "0x115F33C")]
		private void Start()
		{
		}

		[Token(Token = "0x600130F")]
		[Address(RVA = "0x115F340", Offset = "0x115F340", VA = "0x115F340")]
		private void Update()
		{
		}

		[Token(Token = "0x6001310")]
		[Address(RVA = "0x115F400", Offset = "0x115F400", VA = "0x115F400")]
		public TestScript()
		{
		}
	}
	[Token(Token = "0x2000243")]
	public class AmbienceEmitter : MonoBehaviour
	{
		[Token(Token = "0x4001074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFXRef[] ambientSounds;

		[Token(Token = "0x4001075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool autoActivate;

		[Token(Token = "0x4001076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F901C", Offset = "0x6F901C")]
		public bool autoRetrigger;

		[Token(Token = "0x4001077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x6F9054", Offset = "0x6F9054")]
		public Vector2 randomRetriggerDelaySecs;

		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F9078", Offset = "0x6F9078")]
		public Transform[] playPositions;

		[Token(Token = "0x4001079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool activated;

		[Token(Token = "0x400107A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int playingIdx;

		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float nextPlayTime;

		[Token(Token = "0x400107C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float fadeTime;

		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int lastPosIdx;

		[Token(Token = "0x6001311")]
		[Address(RVA = "0x1156680", Offset = "0x1156680", VA = "0x1156680")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001312")]
		[Address(RVA = "0x1156804", Offset = "0x1156804", VA = "0x1156804")]
		private void Update()
		{
		}

		[Token(Token = "0x6001313")]
		[Address(RVA = "0x11569E0", Offset = "0x11569E0", VA = "0x11569E0")]
		public void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x6001314")]
		[Address(RVA = "0x1156864", Offset = "0x1156864", VA = "0x1156864")]
		public void Play()
		{
		}

		[Token(Token = "0x6001315")]
		[Address(RVA = "0x1156B20", Offset = "0x1156B20", VA = "0x1156B20")]
		public void EnableEmitter(bool enable)
		{
		}

		[Token(Token = "0x6001316")]
		[Address(RVA = "0x1156C94", Offset = "0x1156C94", VA = "0x1156C94")]
		public AmbienceEmitter()
		{
		}
	}
	[Token(Token = "0x2000244")]
	public enum PreloadSounds
	{
		[Token(Token = "0x400107F")]
		Default,
		[Token(Token = "0x4001080")]
		Preload,
		[Token(Token = "0x4001081")]
		ManualPreload
	}
	[Token(Token = "0x2000245")]
	public enum Fade
	{
		[Token(Token = "0x4001083")]
		In,
		[Token(Token = "0x4001084")]
		Out
	}
	[Serializable]
	[Token(Token = "0x2000246")]
	public class SoundGroup
	{
		[Token(Token = "0x4001085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4001086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFX[] soundList;

		[Token(Token = "0x4001087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioMixerGroup mixerGroup;

		[Token(Token = "0x4001088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6F90B0", Offset = "0x6F90B0")]
		public int maxPlayingSounds;

		[Token(Token = "0x4001089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public PreloadSounds preloadAudio;

		[Token(Token = "0x400108A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float volumeOverride;

		[Token(Token = "0x400108B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public int playingSoundCount;

		[Token(Token = "0x6001317")]
		[Address(RVA = "0x115F21C", Offset = "0x115F21C", VA = "0x115F21C")]
		public SoundGroup(string name)
		{
		}

		[Token(Token = "0x6001318")]
		[Address(RVA = "0x115F2B0", Offset = "0x115F2B0", VA = "0x115F2B0")]
		public SoundGroup()
		{
		}

		[Token(Token = "0x6001319")]
		[Address(RVA = "0x115DC88", Offset = "0x115DC88", VA = "0x115DC88")]
		public void IncrementPlayCount()
		{
		}

		[Token(Token = "0x600131A")]
		[Address(RVA = "0x115DDC8", Offset = "0x115DDC8", VA = "0x115DDC8")]
		public void DecrementPlayCount()
		{
		}

		[Token(Token = "0x600131B")]
		[Address(RVA = "0x115E880", Offset = "0x115E880", VA = "0x115E880")]
		public bool CanPlaySound()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000247")]
	public class AudioManager : MonoBehaviour
	{
		[Token(Token = "0x2000419")]
		public enum Fade
		{
			[Token(Token = "0x400196E")]
			In,
			[Token(Token = "0x400196F")]
			Out
		}

		[Token(Token = "0x200041A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5BC8", Offset = "0x6F5BC8")]
		private sealed class <>c__DisplayClass75_0
		{
			[Token(Token = "0x4001970")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SoundPriority priority;

			[Token(Token = "0x60018E9")]
			[Address(RVA = "0x115ADA8", Offset = "0x115ADA8", VA = "0x115ADA8")]
			public <>c__DisplayClass75_0()
			{
			}

			[Token(Token = "0x60018EA")]
			[Address(RVA = "0x115D744", Offset = "0x115D744", VA = "0x115D744")]
			internal bool <FindFreeEmitter>b__0(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x200041B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5BD8", Offset = "0x6F5BD8")]
		private sealed class <>c
		{
			[Token(Token = "0x4001971")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001972")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<SoundEmitter> <>9__75_1;

			[Token(Token = "0x60018EC")]
			[Address(RVA = "0x115D6AC", Offset = "0x115D6AC", VA = "0x115D6AC")]
			public <>c()
			{
			}

			[Token(Token = "0x60018ED")]
			[Address(RVA = "0x115D6B4", Offset = "0x115D6B4", VA = "0x115D6B4")]
			internal bool <FindFreeEmitter>b__75_1(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400108C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F90DC", Offset = "0x6F90DC")]
		public bool makePersistent;

		[Token(Token = "0x400108D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F9114", Offset = "0x6F9114")]
		public bool enableSpatializedAudio;

		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F914C", Offset = "0x6F914C")]
		public bool enableSpatializedFastOverride;

		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F9184", Offset = "0x6F9184")]
		public AudioMixer audioMixer;

		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F91BC", Offset = "0x6F91BC")]
		public AudioMixerGroup defaultMixerGroup;

		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F91F4", Offset = "0x6F91F4")]
		public AudioMixerGroup reservedMixerGroup;

		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F922C", Offset = "0x6F922C")]
		public AudioMixerGroup voiceChatMixerGroup;

		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F9264", Offset = "0x6F9264")]
		public bool verboseLogging;

		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F929C", Offset = "0x6F929C")]
		public int maxSoundEmitters;

		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F92D4", Offset = "0x6F92D4")]
		public float volumeSoundFX;

		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F930C", Offset = "0x6F930C")]
		public float soundFxFadeSecs;

		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float audioMinFallOffDistance;

		[Token(Token = "0x4001098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float audioMaxFallOffDistance;

		[Token(Token = "0x4001099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SoundGroup[] soundGroupings;

		[Token(Token = "0x400109A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<string, SoundFX> soundFXCache;

		[Token(Token = "0x400109B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioManager theAudioManager;

		[Token(Token = "0x400109C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static FastList<string> names;

		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string[] defaultSound;

		[Token(Token = "0x400109E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static SoundFX nullSound;

		[Token(Token = "0x400109F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool hideWarnings;

		[Token(Token = "0x40010A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float audioMaxFallOffDistanceSqr;

		[Token(Token = "0x40010A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SoundEmitter[] soundEmitters;

		[Token(Token = "0x40010A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FastList<SoundEmitter> playingEmitters;

		[Token(Token = "0x40010A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private FastList<SoundEmitter> nextFreeEmitters;

		[Token(Token = "0x40010A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MixerSnapshot currentSnapshot;

		[Token(Token = "0x40010A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject soundEmitterParent;

		[Token(Token = "0x40010A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Transform staticListenerPosition;

		[Token(Token = "0x40010A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static bool showPlayingEmitterCount;

		[Token(Token = "0x40010A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private static bool forceShowEmitterCount;

		[Token(Token = "0x40010A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private static bool soundEnabled;

		[Token(Token = "0x40010AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly AnimationCurve defaultReverbZoneMix;

		[Token(Token = "0x17000315")]
		public static bool enableSpatialization
		{
			[Token(Token = "0x600131C")]
			[Address(RVA = "0x1156D54", Offset = "0x1156D54", VA = "0x1156D54")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000316")]
		public static AudioManager Instance
		{
			[Token(Token = "0x600131D")]
			[Address(RVA = "0x1156E34", Offset = "0x1156E34", VA = "0x1156E34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000317")]
		public static float NearFallOff
		{
			[Token(Token = "0x600131E")]
			[Address(RVA = "0x1156E9C", Offset = "0x1156E9C", VA = "0x1156E9C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000318")]
		public static float FarFallOff
		{
			[Token(Token = "0x600131F")]
			[Address(RVA = "0x1156F10", Offset = "0x1156F10", VA = "0x1156F10")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000319")]
		public static AudioMixerGroup EmitterGroup
		{
			[Token(Token = "0x6001320")]
			[Address(RVA = "0x1156F84", Offset = "0x1156F84", VA = "0x1156F84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031A")]
		public static AudioMixerGroup ReservedGroup
		{
			[Token(Token = "0x6001321")]
			[Address(RVA = "0x1156FF8", Offset = "0x1156FF8", VA = "0x1156FF8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031B")]
		public static AudioMixerGroup VoipGroup
		{
			[Token(Token = "0x6001322")]
			[Address(RVA = "0x115706C", Offset = "0x115706C", VA = "0x115706C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031C")]
		public static bool SoundEnabled
		{
			[Token(Token = "0x600132D")]
			[Address(RVA = "0x1158DBC", Offset = "0x1158DBC", VA = "0x1158DBC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001323")]
		[Address(RVA = "0x11570E0", Offset = "0x11570E0", VA = "0x11570E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001324")]
		[Address(RVA = "0x1157308", Offset = "0x1157308", VA = "0x1157308")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001325")]
		[Address(RVA = "0x11570E4", Offset = "0x11570E4", VA = "0x11570E4")]
		private void Init()
		{
		}

		[Token(Token = "0x6001326")]
		[Address(RVA = "0x1157F34", Offset = "0x1157F34", VA = "0x1157F34")]
		private void Update()
		{
		}

		[Token(Token = "0x6001327")]
		[Address(RVA = "0x1157460", Offset = "0x1157460", VA = "0x1157460")]
		private void RebuildSoundFXCache()
		{
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0x1158558", Offset = "0x1158558", VA = "0x1158558")]
		public static SoundFX FindSoundFX(string name, bool rebuildCache = false)
		{
			return null;
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0x11586D8", Offset = "0x11586D8", VA = "0x11586D8")]
		private static bool FindAudioManager()
		{
			return default(bool);
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0x1158874", Offset = "0x1158874", VA = "0x1158874")]
		public static GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x600132B")]
		[Address(RVA = "0x1158974", Offset = "0x1158974", VA = "0x1158974")]
		public static string NameMinusGroup(string name)
		{
			return null;
		}

		[Token(Token = "0x600132C")]
		[Address(RVA = "0x1158A04", Offset = "0x1158A04", VA = "0x1158A04")]
		public static string[] GetSoundFXNames(string currentValue, out int currentIdx)
		{
			return null;
		}

		[Token(Token = "0x600132E")]
		[Address(RVA = "0x11578AC", Offset = "0x11578AC", VA = "0x11578AC")]
		private void InitializeSoundSystem()
		{
		}

		[Token(Token = "0x600132F")]
		[Address(RVA = "0x1157F38", Offset = "0x1157F38", VA = "0x1157F38")]
		private void UpdateFreeEmitters()
		{
		}

		[Token(Token = "0x6001330")]
		[Address(RVA = "0x115903C", Offset = "0x115903C", VA = "0x115903C")]
		private string Fmt(int count)
		{
			return null;
		}

		[Token(Token = "0x6001331")]
		[Address(RVA = "0x1159140", Offset = "0x1159140", VA = "0x1159140")]
		private string FmtFree(int count)
		{
			return null;
		}

		[Token(Token = "0x6001332")]
		[Address(RVA = "0x1159248", Offset = "0x1159248", VA = "0x1159248")]
		private void OnPreSceneLoad()
		{
		}

		[Token(Token = "0x6001333")]
		[Address(RVA = "0x1158F04", Offset = "0x1158F04", VA = "0x1158F04")]
		private void ResetFreeEmitters()
		{
		}

		[Token(Token = "0x6001334")]
		[Address(RVA = "0x11593B4", Offset = "0x11593B4", VA = "0x11593B4")]
		public static void FadeOutSoundChannel(int channel, float delaySecs, float fadeTime)
		{
		}

		[Token(Token = "0x6001335")]
		[Address(RVA = "0x1159508", Offset = "0x1159508", VA = "0x1159508")]
		public static bool StopSound(int idx, bool fadeOut = true, bool stopReserved = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001336")]
		[Address(RVA = "0x11596B8", Offset = "0x11596B8", VA = "0x11596B8")]
		public static void FadeInSound(int idx, float fadeTime, float volume)
		{
		}

		[Token(Token = "0x6001337")]
		[Address(RVA = "0x1156A70", Offset = "0x1156A70", VA = "0x1156A70")]
		public static void FadeInSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6001338")]
		[Address(RVA = "0x1156BE4", Offset = "0x1156BE4", VA = "0x1156BE4")]
		public static void FadeOutSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6001339")]
		[Address(RVA = "0x1159864", Offset = "0x1159864", VA = "0x1159864")]
		public static void StopAllSounds(bool fadeOut, bool stopReserved = false)
		{
		}

		[Token(Token = "0x600133A")]
		[Address(RVA = "0x1159930", Offset = "0x1159930", VA = "0x1159930")]
		public void MuteAllSounds(bool mute, bool muteReserved = false)
		{
		}

		[Token(Token = "0x600133B")]
		[Address(RVA = "0x11599C4", Offset = "0x11599C4", VA = "0x11599C4")]
		public void UnMuteAllSounds(bool unmute, bool unmuteReserved = false)
		{
		}

		[Token(Token = "0x600133C")]
		[Address(RVA = "0x1159A88", Offset = "0x1159A88", VA = "0x1159A88")]
		public static float GetEmitterEndTime(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x600133D")]
		[Address(RVA = "0x1159B2C", Offset = "0x1159B2C", VA = "0x1159B2C")]
		public static float SetEmitterTime(int idx, float time)
		{
			return default(float);
		}

		[Token(Token = "0x600133E")]
		[Address(RVA = "0x1159C0C", Offset = "0x1159C0C", VA = "0x1159C0C")]
		public static int PlaySound(AudioClip clip, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitchVariance = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x600133F")]
		[Address(RVA = "0x115A6F0", Offset = "0x115A6F0", VA = "0x115A6F0")]
		private static int FindFreeEmitter(EmitterChannel src, SoundPriority priority)
		{
			return default(int);
		}

		[Token(Token = "0x6001340")]
		[Address(RVA = "0x115ADB0", Offset = "0x115ADB0", VA = "0x115ADB0")]
		public static int PlaySound(SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6001341")]
		[Address(RVA = "0x115AF90", Offset = "0x115AF90", VA = "0x115AF90")]
		public static int PlaySoundAt(Vector3 position, SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6001342")]
		[Address(RVA = "0x115BCD4", Offset = "0x115BCD4", VA = "0x115BCD4")]
		public static int PlayRandomSoundAt(Vector3 position, AudioClip[] clips, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001343")]
		[Address(RVA = "0x1159E14", Offset = "0x1159E14", VA = "0x1159E14")]
		public static int PlaySoundAt(Vector3 position, AudioClip clip, float volume = 1f, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001344")]
		[Address(RVA = "0x115BDF4", Offset = "0x115BDF4", VA = "0x115BDF4")]
		public static void SetOnFinished(int emitterIdx, Action onFinished)
		{
		}

		[Token(Token = "0x6001345")]
		[Address(RVA = "0x115BED8", Offset = "0x115BED8", VA = "0x115BED8")]
		public static void SetOnFinished(int emitterIdx, Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6001346")]
		[Address(RVA = "0x115BFC8", Offset = "0x115BFC8", VA = "0x115BFC8")]
		public static void AttachSoundToParent(int idx, Transform parent)
		{
		}

		[Token(Token = "0x6001347")]
		[Address(RVA = "0x115C380", Offset = "0x115C380", VA = "0x115C380")]
		public static void DetachSoundFromParent(int idx)
		{
		}

		[Token(Token = "0x6001348")]
		[Address(RVA = "0x115C57C", Offset = "0x115C57C", VA = "0x115C57C")]
		public static void DetachSoundsFromParent(SoundEmitter[] emitters, bool stopSounds = true)
		{
		}

		[Token(Token = "0x6001349")]
		[Address(RVA = "0x115C698", Offset = "0x115C698", VA = "0x115C698")]
		public static void SetEmitterMixerGroup(int idx, AudioMixerGroup mixerGroup)
		{
		}

		[Token(Token = "0x600134A")]
		[Address(RVA = "0x115C860", Offset = "0x115C860", VA = "0x115C860")]
		public static MixerSnapshot GetActiveSnapshot()
		{
			return null;
		}

		[Token(Token = "0x600134B")]
		[Address(RVA = "0x115C938", Offset = "0x115C938", VA = "0x115C938")]
		public static void SetCurrentSnapshot(MixerSnapshot mixerSnapshot)
		{
		}

		[Token(Token = "0x600134C")]
		[Address(RVA = "0x115CA6C", Offset = "0x115CA6C", VA = "0x115CA6C")]
		public static void BlendWithCurrentSnapshot(MixerSnapshot blendSnapshot, float weight, float blendTime = 0f)
		{
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0x115CE58", Offset = "0x115CE58", VA = "0x115CE58")]
		public AudioManager()
		{
		}
	}
	[Token(Token = "0x2000248")]
	public enum EmitterChannel
	{
		[Token(Token = "0x40010AC")]
		None = -1,
		[Token(Token = "0x40010AD")]
		Reserved,
		[Token(Token = "0x40010AE")]
		Any
	}
	[Serializable]
	[Token(Token = "0x2000249")]
	public class MixerSnapshot
	{
		[Token(Token = "0x40010AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioMixerSnapshot snapshot;

		[Token(Token = "0x40010B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float transitionTime;

		[Token(Token = "0x600134F")]
		[Address(RVA = "0x115D840", Offset = "0x115D840", VA = "0x115D840")]
		public MixerSnapshot()
		{
		}
	}
	[Token(Token = "0x200024A")]
	public class MinMaxAttribute : PropertyAttribute
	{
		[Token(Token = "0x40010B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minDefaultVal;

		[Token(Token = "0x40010B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxDefaultVal;

		[Token(Token = "0x40010B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float min;

		[Token(Token = "0x40010B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float max;

		[Token(Token = "0x6001350")]
		[Address(RVA = "0x115D7E4", Offset = "0x115D7E4", VA = "0x115D7E4")]
		public MinMaxAttribute(float minDefaultVal, float maxDefaultVal, float min, float max)
		{
		}
	}
	[Token(Token = "0x200024B")]
	public class SoundEmitter : MonoBehaviour
	{
		[Token(Token = "0x200041C")]
		public enum FadeState
		{
			[Token(Token = "0x4001974")]
			Null,
			[Token(Token = "0x4001975")]
			FadingIn,
			[Token(Token = "0x4001976")]
			FadingOut,
			[Token(Token = "0x4001977")]
			Ducking
		}

		[Token(Token = "0x200041D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5BE8", Offset = "0x6F5BE8")]
		private sealed class <DelayedSyncTo>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001978")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001979")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400197A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x400197B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SoundEmitter other;

			[Token(Token = "0x400197C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float fadeTime;

			[Token(Token = "0x400197D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float toVolume;

			[Token(Token = "0x17000432")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018F1")]
				[Address(RVA = "0x115E28C", Offset = "0x115E28C", VA = "0x115E28C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000433")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018F3")]
				[Address(RVA = "0x115E2F4", Offset = "0x115E2F4", VA = "0x115E2F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018EE")]
			[Address(RVA = "0x115DF6C", Offset = "0x115DF6C", VA = "0x115DF6C")]
			[DebuggerHidden]
			public <DelayedSyncTo>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x60018EF")]
			[Address(RVA = "0x115E19C", Offset = "0x115E19C", VA = "0x115E19C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018F0")]
			[Address(RVA = "0x115E1A0", Offset = "0x115E1A0", VA = "0x115E1A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018F2")]
			[Address(RVA = "0x115E294", Offset = "0x115E294", VA = "0x115E294", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200041E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5BF8", Offset = "0x6F5BF8")]
		private sealed class <FadeSoundChannelTo>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400197E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400197F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001980")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4001981")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float toVolume;

			[Token(Token = "0x4001982")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float fadeTime;

			[Token(Token = "0x4001983")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <start>5__2;

			[Token(Token = "0x4001984")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <end>5__3;

			[Token(Token = "0x4001985")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4001986")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <elapsedTime>5__5;

			[Token(Token = "0x17000434")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018F7")]
				[Address(RVA = "0x115E740", Offset = "0x115E740", VA = "0x115E740", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000435")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018F9")]
				[Address(RVA = "0x115E7A8", Offset = "0x115E7A8", VA = "0x115E7A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018F4")]
			[Address(RVA = "0x115E12C", Offset = "0x115E12C", VA = "0x115E12C")]
			[DebuggerHidden]
			public <FadeSoundChannelTo>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x60018F5")]
			[Address(RVA = "0x115E5D4", Offset = "0x115E5D4", VA = "0x115E5D4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018F6")]
			[Address(RVA = "0x115E5D8", Offset = "0x115E5D8", VA = "0x115E5D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018F8")]
			[Address(RVA = "0x115E748", Offset = "0x115E748", VA = "0x115E748", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200041F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5C08", Offset = "0x6F5C08")]
		private sealed class <FadeSoundChannel>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001987")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001988")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001989")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySecs;

			[Token(Token = "0x400198A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Fade fadeType;

			[Token(Token = "0x400198B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float defaultVolume;

			[Token(Token = "0x400198C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x400198D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float fadeTime;

			[Token(Token = "0x400198E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <start>5__2;

			[Token(Token = "0x400198F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <end>5__3;

			[Token(Token = "0x4001990")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private bool <restartPlay>5__4;

			[Token(Token = "0x4001991")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <startTime>5__5;

			[Token(Token = "0x4001992")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <elapsedTime>5__6;

			[Token(Token = "0x17000436")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018FD")]
				[Address(RVA = "0x115E564", Offset = "0x115E564", VA = "0x115E564", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000437")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018FF")]
				[Address(RVA = "0x115E5CC", Offset = "0x115E5CC", VA = "0x115E5CC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018FA")]
			[Address(RVA = "0x115E158", Offset = "0x115E158", VA = "0x115E158")]
			[DebuggerHidden]
			public <FadeSoundChannel>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x60018FB")]
			[Address(RVA = "0x115E2FC", Offset = "0x115E2FC", VA = "0x115E2FC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018FC")]
			[Address(RVA = "0x115E300", Offset = "0x115E300", VA = "0x115E300", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018FE")]
			[Address(RVA = "0x115E56C", Offset = "0x115E56C", VA = "0x115E56C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40010B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EmitterChannel channel;

		[Token(Token = "0x40010B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool disableSpatialization;

		[Token(Token = "0x40010B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FadeState state;

		[NonSerialized]
		[Token(Token = "0x40010B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public AudioSource audioSource;

		[NonSerialized]
		[Token(Token = "0x40010B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public SoundPriority priority;

		[NonSerialized]
		[Token(Token = "0x40010BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public ONSPAudioSource osp;

		[NonSerialized]
		[Token(Token = "0x40010BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float endPlayTime;

		[Token(Token = "0x40010BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform lastParentTransform;

		[NonSerialized]
		[Token(Token = "0x40010BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public float defaultVolume;

		[NonSerialized]
		[Token(Token = "0x40010BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Transform defaultParent;

		[NonSerialized]
		[Token(Token = "0x40010BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public int originalIdx;

		[NonSerialized]
		[Token(Token = "0x40010C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Action onFinished;

		[NonSerialized]
		[Token(Token = "0x40010C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public Action<object> onFinishedObject;

		[NonSerialized]
		[Token(Token = "0x40010C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public object onFinishedParam;

		[NonSerialized]
		[Token(Token = "0x40010C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public SoundGroup playingSoundGroup;

		[Token(Token = "0x1700031D")]
		public float volume
		{
			[Token(Token = "0x6001351")]
			[Address(RVA = "0x115BCB8", Offset = "0x115BCB8", VA = "0x115BCB8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001352")]
			[Address(RVA = "0x115D8E0", Offset = "0x115D8E0", VA = "0x115D8E0")]
			set
			{
			}
		}

		[Token(Token = "0x1700031E")]
		public float pitch
		{
			[Token(Token = "0x6001353")]
			[Address(RVA = "0x115D8FC", Offset = "0x115D8FC", VA = "0x115D8FC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001354")]
			[Address(RVA = "0x115D918", Offset = "0x115D918", VA = "0x115D918")]
			set
			{
			}
		}

		[Token(Token = "0x1700031F")]
		public AudioClip clip
		{
			[Token(Token = "0x6001355")]
			[Address(RVA = "0x115D934", Offset = "0x115D934", VA = "0x115D934")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001356")]
			[Address(RVA = "0x115D950", Offset = "0x115D950", VA = "0x115D950")]
			set
			{
			}
		}

		[Token(Token = "0x17000320")]
		public float time
		{
			[Token(Token = "0x6001357")]
			[Address(RVA = "0x115D96C", Offset = "0x115D96C", VA = "0x115D96C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001358")]
			[Address(RVA = "0x1159BF0", Offset = "0x1159BF0", VA = "0x1159BF0")]
			set
			{
			}
		}

		[Token(Token = "0x17000321")]
		public float length
		{
			[Token(Token = "0x6001359")]
			[Address(RVA = "0x115D988", Offset = "0x115D988", VA = "0x115D988")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000322")]
		public bool loop
		{
			[Token(Token = "0x600135A")]
			[Address(RVA = "0x115DA40", Offset = "0x115DA40", VA = "0x115DA40")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600135B")]
			[Address(RVA = "0x115DA5C", Offset = "0x115DA5C", VA = "0x115DA5C")]
			set
			{
			}
		}

		[Token(Token = "0x17000323")]
		public bool mute
		{
			[Token(Token = "0x600135C")]
			[Address(RVA = "0x115DA7C", Offset = "0x115DA7C", VA = "0x115DA7C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600135D")]
			[Address(RVA = "0x115DA98", Offset = "0x115DA98", VA = "0x115DA98")]
			set
			{
			}
		}

		[Token(Token = "0x17000324")]
		public AudioVelocityUpdateMode velocityUpdateMode
		{
			[Token(Token = "0x600135E")]
			[Address(RVA = "0x115DAB8", Offset = "0x115DAB8", VA = "0x115DAB8")]
			get
			{
				return default(AudioVelocityUpdateMode);
			}
			[Token(Token = "0x600135F")]
			[Address(RVA = "0x115DAD4", Offset = "0x115DAD4", VA = "0x115DAD4")]
			set
			{
			}
		}

		[Token(Token = "0x17000325")]
		public bool isPlaying
		{
			[Token(Token = "0x6001360")]
			[Address(RVA = "0x115DAF0", Offset = "0x115DAF0", VA = "0x115DAF0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001361")]
		[Address(RVA = "0x115DB0C", Offset = "0x115DB0C", VA = "0x115DB0C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001362")]
		[Address(RVA = "0x115BCA4", Offset = "0x115BCA4", VA = "0x115BCA4")]
		public void SetPlayingSoundGroup(SoundGroup soundGroup)
		{
		}

		[Token(Token = "0x6001363")]
		[Address(RVA = "0x115DD18", Offset = "0x115DD18", VA = "0x115DD18")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6001364")]
		[Address(RVA = "0x115BFC0", Offset = "0x115BFC0", VA = "0x115BFC0")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6001365")]
		[Address(RVA = "0x115DD20", Offset = "0x115DD20", VA = "0x115DD20")]
		public void SetChannel(int _channel)
		{
		}

		[Token(Token = "0x6001366")]
		[Address(RVA = "0x115DD28", Offset = "0x115DD28", VA = "0x115DD28")]
		public void SetDefaultParent(Transform parent)
		{
		}

		[Token(Token = "0x6001367")]
		[Address(RVA = "0x115C7B8", Offset = "0x115C7B8", VA = "0x115C7B8")]
		public void SetAudioMixer(AudioMixerGroup _mixer)
		{
		}

		[Token(Token = "0x6001368")]
		[Address(RVA = "0x1158FD0", Offset = "0x1158FD0", VA = "0x1158FD0")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6001369")]
		[Address(RVA = "0x115DD30", Offset = "0x115DD30", VA = "0x115DD30")]
		public void Play()
		{
		}

		[Token(Token = "0x600136A")]
		[Address(RVA = "0x115DD90", Offset = "0x115DD90", VA = "0x115DD90")]
		public void Pause()
		{
		}

		[Token(Token = "0x600136B")]
		[Address(RVA = "0x1158E24", Offset = "0x1158E24", VA = "0x1158E24")]
		public void Stop()
		{
		}

		[Token(Token = "0x600136C")]
		[Address(RVA = "0x115DE58", Offset = "0x115DE58", VA = "0x115DE58")]
		private int GetSampleTime()
		{
			return default(int);
		}

		[Token(Token = "0x600136D")]
		[Address(RVA = "0x115C284", Offset = "0x115C284", VA = "0x115C284")]
		public void ParentTo(Transform parent)
		{
		}

		[Token(Token = "0x600136E")]
		[Address(RVA = "0x115C4C4", Offset = "0x115C4C4", VA = "0x115C4C4")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x600136F")]
		[Address(RVA = "0x1159374", Offset = "0x1159374", VA = "0x1159374")]
		public void ResetParent(Transform parent)
		{
		}

		[Token(Token = "0x6001370")]
		[Address(RVA = "0x115DEB0", Offset = "0x115DEB0", VA = "0x115DEB0")]
		public void SyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6001371")]
		[Address(RVA = "0x115DEDC", Offset = "0x115DEDC", VA = "0x115DEDC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FF90C", Offset = "0x6FF90C")]
		private IEnumerator DelayedSyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6001372")]
		[Address(RVA = "0x115DF98", Offset = "0x115DF98", VA = "0x115DF98")]
		public void FadeTo(float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6001373")]
		[Address(RVA = "0x1159770", Offset = "0x1159770", VA = "0x1159770")]
		public void FadeIn(float fadeTime, float defaultVolume)
		{
		}

		[Token(Token = "0x6001374")]
		[Address(RVA = "0x11597EC", Offset = "0x11597EC", VA = "0x11597EC")]
		public void FadeIn(float fadeTime)
		{
		}

		[Token(Token = "0x6001375")]
		[Address(RVA = "0x1159620", Offset = "0x1159620", VA = "0x1159620")]
		public void FadeOut(float fadeTime)
		{
		}

		[Token(Token = "0x6001376")]
		[Address(RVA = "0x115946C", Offset = "0x115946C", VA = "0x115946C")]
		public void FadeOutDelayed(float delayedSecs, float fadeTime)
		{
		}

		[Token(Token = "0x6001377")]
		[Address(RVA = "0x115E000", Offset = "0x115E000", VA = "0x115E000")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FF970", Offset = "0x6FF970")]
		private IEnumerator FadeSoundChannelTo(float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6001378")]
		[Address(RVA = "0x115E084", Offset = "0x115E084", VA = "0x115E084")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FF9D4", Offset = "0x6FF9D4")]
		private IEnumerator FadeSoundChannel(float delaySecs, float fadeTime, Fade fadeType, float defaultVolume)
		{
			return null;
		}

		[Token(Token = "0x6001379")]
		[Address(RVA = "0x115E184", Offset = "0x115E184", VA = "0x115E184")]
		public SoundEmitter()
		{
		}
	}
	[Token(Token = "0x200024C")]
	public enum SoundFXNext
	{
		[Token(Token = "0x40010C5")]
		Random,
		[Token(Token = "0x40010C6")]
		Sequential
	}
	[Token(Token = "0x200024D")]
	public enum FreqHint
	{
		[Token(Token = "0x40010C8")]
		None,
		[Token(Token = "0x40010C9")]
		Wide,
		[Token(Token = "0x40010CA")]
		Narrow
	}
	[Token(Token = "0x200024E")]
	public enum SoundPriority
	{
		[Token(Token = "0x40010CC")]
		VeryLow = -2,
		[Token(Token = "0x40010CD")]
		Low,
		[Token(Token = "0x40010CE")]
		Default,
		[Token(Token = "0x40010CF")]
		High,
		[Token(Token = "0x40010D0")]
		VeryHigh
	}
	[Serializable]
	[Token(Token = "0x200024F")]
	public class OSPProps
	{
		[Token(Token = "0x40010D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F93F4", Offset = "0x6F93F4")]
		public bool enableSpatialization;

		[Token(Token = "0x40010D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F942C", Offset = "0x6F942C")]
		public bool useFastOverride;

		[Token(Token = "0x40010D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F9464", Offset = "0x6F9464")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6F9464", Offset = "0x6F9464")]
		public float gain;

		[Token(Token = "0x40010D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F94B8", Offset = "0x6F94B8")]
		public bool enableInvSquare;

		[Token(Token = "0x40010D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F94F0", Offset = "0x6F94F0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6F94F0", Offset = "0x6F94F0")]
		public float volumetric;

		[Token(Token = "0x40010D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F9548", Offset = "0x6F9548")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x6F9548", Offset = "0x6F9548")]
		public Vector2 invSquareFalloff;

		[Token(Token = "0x600137A")]
		[Address(RVA = "0x115D850", Offset = "0x115D850", VA = "0x115D850")]
		public OSPProps()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000250")]
	public class SoundFX
	{
		[Token(Token = "0x40010D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F95A8", Offset = "0x6F95A8")]
		public string name;

		[Token(Token = "0x40010D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F95E0", Offset = "0x6F95E0")]
		public SoundFXNext playback;

		[Token(Token = "0x40010D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F9618", Offset = "0x6F9618")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6F9618", Offset = "0x6F9618")]
		public float volume;

		[Token(Token = "0x40010DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F966C", Offset = "0x6F966C")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x6F966C", Offset = "0x6F966C")]
		public Vector2 pitchVariance;

		[Token(Token = "0x40010DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F96C8", Offset = "0x6F96C8")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x6F96C8", Offset = "0x6F96C8")]
		public Vector2 falloffDistance;

		[Token(Token = "0x40010DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F9728", Offset = "0x6F9728")]
		public AudioRolloffMode falloffCurve;

		[Token(Token = "0x40010DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F9760", Offset = "0x6F9760")]
		public AnimationCurve volumeFalloffCurve;

		[Token(Token = "0x40010DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F9798", Offset = "0x6F9798")]
		public AnimationCurve reverbZoneMix;

		[Token(Token = "0x40010DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F97D0", Offset = "0x6F97D0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6F97D0", Offset = "0x6F97D0")]
		public float spread;

		[Token(Token = "0x40010E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F9828", Offset = "0x6F9828")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6F9828", Offset = "0x6F9828")]
		public float pctChanceToPlay;

		[Token(Token = "0x40010E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F987C", Offset = "0x6F987C")]
		public SoundPriority priority;

		[Token(Token = "0x40010E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F98B4", Offset = "0x6F98B4")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x6F98B4", Offset = "0x6F98B4")]
		public Vector2 delay;

		[Token(Token = "0x40010E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F9910", Offset = "0x6F9910")]
		public bool looping;

		[Token(Token = "0x40010E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public OSPProps ospProps;

		[Token(Token = "0x40010E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6F9948", Offset = "0x6F9948")]
		public AudioClip[] soundClips;

		[Token(Token = "0x40010E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool visibilityToggle;

		[NonSerialized]
		[Token(Token = "0x40010E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SoundGroup soundGroup;

		[Token(Token = "0x40010E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int lastIdx;

		[Token(Token = "0x40010E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int playingIdx;

		[Token(Token = "0x17000326")]
		public int Length
		{
			[Token(Token = "0x600137C")]
			[Address(RVA = "0x115E7B0", Offset = "0x115E7B0", VA = "0x115E7B0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000327")]
		public bool IsValid
		{
			[Token(Token = "0x600137D")]
			[Address(RVA = "0x115E7CC", Offset = "0x115E7CC", VA = "0x115E7CC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000328")]
		public SoundGroup Group
		{
			[Token(Token = "0x600137E")]
			[Address(RVA = "0x115E870", Offset = "0x115E870", VA = "0x115E870")]
			get
			{
				return null;
			}
			[Token(Token = "0x600137F")]
			[Address(RVA = "0x115E878", Offset = "0x115E878", VA = "0x115E878")]
			set
			{
			}
		}

		[Token(Token = "0x17000329")]
		public float MaxFalloffDistSquared
		{
			[Token(Token = "0x6001380")]
			[Address(RVA = "0x115BBAC", Offset = "0x115BBAC", VA = "0x115BBAC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700032A")]
		public float GroupVolumeOverride
		{
			[Token(Token = "0x6001381")]
			[Address(RVA = "0x115BBE0", Offset = "0x115BBE0", VA = "0x115BBE0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600137B")]
		[Address(RVA = "0x115D160", Offset = "0x115D160", VA = "0x115D160")]
		public SoundFX()
		{
		}

		[Token(Token = "0x6001382")]
		[Address(RVA = "0x115BADC", Offset = "0x115BADC", VA = "0x115BADC")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6001383")]
		[Address(RVA = "0x115BC04", Offset = "0x115BC04", VA = "0x115BC04")]
		public AudioMixerGroup GetMixerGroup(AudioMixerGroup defaultMixerGroup)
		{
			return null;
		}

		[Token(Token = "0x6001384")]
		[Address(RVA = "0x115BBB8", Offset = "0x115BBB8", VA = "0x115BBB8")]
		public bool ReachedGroupPlayLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x6001385")]
		[Address(RVA = "0x115E8A0", Offset = "0x115E8A0", VA = "0x115E8A0")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6001386")]
		[Address(RVA = "0x115BBF8", Offset = "0x115BBF8", VA = "0x115BBF8")]
		public float GetPitch()
		{
			return default(float);
		}

		[Token(Token = "0x6001387")]
		[Address(RVA = "0x115E99C", Offset = "0x115E99C", VA = "0x115E99C")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6001388")]
		[Address(RVA = "0x115EA78", Offset = "0x115EA78", VA = "0x115EA78")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6001389")]
		[Address(RVA = "0x115EB8C", Offset = "0x115EB8C", VA = "0x115EB8C")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x600138A")]
		[Address(RVA = "0x115EC18", Offset = "0x115EC18", VA = "0x115EC18")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x600138B")]
		[Address(RVA = "0x115ECAC", Offset = "0x115ECAC", VA = "0x115ECAC")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x600138C")]
		[Address(RVA = "0x115ED38", Offset = "0x115ED38", VA = "0x115ED38")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x600138D")]
		[Address(RVA = "0x115EDC4", Offset = "0x115EDC4", VA = "0x115EDC4")]
		public void DetachFromParent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000251")]
	public class SoundFXRef
	{
		[Token(Token = "0x40010EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string soundFXName;

		[Token(Token = "0x40010EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool initialized;

		[Token(Token = "0x40010EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SoundFX soundFXCached;

		[Token(Token = "0x1700032B")]
		public SoundFX soundFX
		{
			[Token(Token = "0x600138E")]
			[Address(RVA = "0x115EE3C", Offset = "0x115EE3C", VA = "0x115EE3C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032C")]
		public string name
		{
			[Token(Token = "0x600138F")]
			[Address(RVA = "0x115EF30", Offset = "0x115EF30", VA = "0x115EF30")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001390")]
			[Address(RVA = "0x115EF38", Offset = "0x115EF38", VA = "0x115EF38")]
			set
			{
			}
		}

		[Token(Token = "0x1700032D")]
		public int Length
		{
			[Token(Token = "0x6001392")]
			[Address(RVA = "0x115EF40", Offset = "0x115EF40", VA = "0x115EF40")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700032E")]
		public bool IsValid
		{
			[Token(Token = "0x6001393")]
			[Address(RVA = "0x115EF84", Offset = "0x115EF84", VA = "0x115EF84")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001391")]
		[Address(RVA = "0x115EE6C", Offset = "0x115EE6C", VA = "0x115EE6C")]
		private void Init()
		{
		}

		[Token(Token = "0x6001394")]
		[Address(RVA = "0x115EFBC", Offset = "0x115EFBC", VA = "0x115EFBC")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6001395")]
		[Address(RVA = "0x115EFF4", Offset = "0x115EFF4", VA = "0x115EFF4")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6001396")]
		[Address(RVA = "0x115F034", Offset = "0x115F034", VA = "0x115F034")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6001397")]
		[Address(RVA = "0x11569F0", Offset = "0x11569F0", VA = "0x11569F0")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volume = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6001398")]
		[Address(RVA = "0x115F07C", Offset = "0x115F07C", VA = "0x115F07C")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6001399")]
		[Address(RVA = "0x115F0BC", Offset = "0x115F0BC", VA = "0x115F0BC")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x600139A")]
		[Address(RVA = "0x115F10C", Offset = "0x115F10C", VA = "0x115F10C")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x600139B")]
		[Address(RVA = "0x115F144", Offset = "0x115F144", VA = "0x115F144")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x600139C")]
		[Address(RVA = "0x115F184", Offset = "0x115F184", VA = "0x115F184")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x600139D")]
		[Address(RVA = "0x115F1BC", Offset = "0x115F1BC", VA = "0x115F1BC")]
		public SoundFXRef()
		{
		}
	}
}
namespace UnityStandardAssets.Effects
{
	[Token(Token = "0x2000252")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6F4FEC", Offset = "0x6F4FEC")]
	public class AfterburnerPhysicsForce : MonoBehaviour
	{
		[Token(Token = "0x40010ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float effectAngle;

		[Token(Token = "0x40010EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float effectWidth;

		[Token(Token = "0x40010EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float effectDistance;

		[Token(Token = "0x40010F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float force;

		[Token(Token = "0x40010F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Collider[] m_Cols;

		[Token(Token = "0x40010F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SphereCollider m_Sphere;

		[Token(Token = "0x600139E")]
		[Address(RVA = "0xCBC5C0", Offset = "0xCBC5C0", VA = "0xCBC5C0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600139F")]
		[Address(RVA = "0xCBC658", Offset = "0xCBC658", VA = "0xCBC658")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60013A0")]
		[Address(RVA = "0xCBCB04", Offset = "0xCBCB04", VA = "0xCBCB04")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60013A1")]
		[Address(RVA = "0xCBD048", Offset = "0xCBD048", VA = "0xCBD048")]
		public AfterburnerPhysicsForce()
		{
		}
	}
	[Token(Token = "0x2000253")]
	public class ExplosionFireAndDebris : MonoBehaviour
	{
		[Token(Token = "0x2000420")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5C18", Offset = "0x6F5C18")]
		private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001993")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001994")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001995")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ExplosionFireAndDebris <>4__this;

			[Token(Token = "0x4001996")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <multiplier>5__2;

			[Token(Token = "0x17000438")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001903")]
				[Address(RVA = "0xCBD874", Offset = "0xCBD874", VA = "0xCBD874", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000439")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001905")]
				[Address(RVA = "0xCBD8DC", Offset = "0xCBD8DC", VA = "0xCBD8DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001900")]
			[Address(RVA = "0xCBD0CC", Offset = "0xCBD0CC", VA = "0xCBD0CC")]
			[DebuggerHidden]
			public <Start>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6001901")]
			[Address(RVA = "0xCBD284", Offset = "0xCBD284", VA = "0xCBD284", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001902")]
			[Address(RVA = "0xCBD288", Offset = "0xCBD288", VA = "0xCBD288", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001904")]
			[Address(RVA = "0xCBD87C", Offset = "0xCBD87C", VA = "0xCBD87C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40010F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform[] debrisPrefabs;

		[Token(Token = "0x40010F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform firePrefab;

		[Token(Token = "0x40010F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int numDebrisPieces;

		[Token(Token = "0x40010F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int numFires;

		[Token(Token = "0x60013A2")]
		[Address(RVA = "0xCBD05C", Offset = "0xCBD05C", VA = "0xCBD05C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FFA38", Offset = "0x6FFA38")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x60013A3")]
		[Address(RVA = "0xCBD0F8", Offset = "0xCBD0F8", VA = "0xCBD0F8")]
		private void AddFire(Transform t, Vector3 pos, Vector3 normal)
		{
		}

		[Token(Token = "0x60013A4")]
		[Address(RVA = "0xCBD27C", Offset = "0xCBD27C", VA = "0xCBD27C")]
		public ExplosionFireAndDebris()
		{
		}
	}
	[Token(Token = "0x2000254")]
	public class ExplosionPhysicsForce : MonoBehaviour
	{
		[Token(Token = "0x2000421")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F5C28", Offset = "0x6F5C28")]
		private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001997")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001998")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001999")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ExplosionPhysicsForce <>4__this;

			[Token(Token = "0x1700043A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001909")]
				[Address(RVA = "0xCBDC98", Offset = "0xCBDC98", VA = "0xCBDC98", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700043B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600190B")]
				[Address(RVA = "0xCBDD00", Offset = "0xCBDD00", VA = "0xCBDD00", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001906")]
			[Address(RVA = "0xCBD954", Offset = "0xCBD954", VA = "0xCBD954")]
			[DebuggerHidden]
			public <Start>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x6001907")]
			[Address(RVA = "0xCBD990", Offset = "0xCBD990", VA = "0xCBD990", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001908")]
			[Address(RVA = "0xCBD994", Offset = "0xCBD994", VA = "0xCBD994", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600190A")]
			[Address(RVA = "0xCBDCA0", Offset = "0xCBDCA0", VA = "0xCBDCA0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40010F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float explosionForce;

		[Token(Token = "0x60013A5")]
		[Address(RVA = "0xCBD8E4", Offset = "0xCBD8E4", VA = "0xCBD8E4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6FFA9C", Offset = "0x6FFA9C")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x60013A6")]
		[Address(RVA = "0xCBD980", Offset = "0xCBD980", VA = "0xCBD980")]
		public ExplosionPhysicsForce()
		{
		}
	}
	[Token(Token = "0x2000255")]
	public class ExtinguishableParticleSystem : MonoBehaviour
	{
		[Token(Token = "0x40010F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float multiplier;

		[Token(Token = "0x40010F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ParticleSystem[] m_Systems;

		[Token(Token = "0x60013A7")]
		[Address(RVA = "0xCBDD08", Offset = "0xCBDD08", VA = "0xCBDD08")]
		private void Start()
		{
		}

		[Token(Token = "0x60013A8")]
		[Address(RVA = "0xCBDD60", Offset = "0xCBDD60", VA = "0xCBDD60")]
		public void Extinguish()
		{
		}

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0xCBDDEC", Offset = "0xCBDDEC", VA = "0xCBDDEC")]
		public ExtinguishableParticleSystem()
		{
		}
	}
	[Token(Token = "0x2000256")]
	public class FireLight : MonoBehaviour
	{
		[Token(Token = "0x40010FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_Rnd;

		[Token(Token = "0x40010FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool m_Burning;

		[Token(Token = "0x40010FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Light m_Light;

		[Token(Token = "0x60013AA")]
		[Address(RVA = "0xCBDDFC", Offset = "0xCBDDFC", VA = "0xCBDDFC")]
		private void Start()
		{
		}

		[Token(Token = "0x60013AB")]
		[Address(RVA = "0xCBDE6C", Offset = "0xCBDE6C", VA = "0xCBDE6C")]
		private void Update()
		{
		}

		[Token(Token = "0x60013AC")]
		[Address(RVA = "0xCBE0CC", Offset = "0xCBE0CC", VA = "0xCBE0CC")]
		public void Extinguish()
		{
		}

		[Token(Token = "0x60013AD")]
		[Address(RVA = "0xCBE0F4", Offset = "0xCBE0F4", VA = "0xCBE0F4")]
		public FireLight()
		{
		}
	}
	[Token(Token = "0x2000257")]
	public class Hose : MonoBehaviour
	{
		[Token(Token = "0x40010FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float maxPower;

		[Token(Token = "0x40010FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float minPower;

		[Token(Token = "0x40010FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float changeSpeed;

		[Token(Token = "0x4001100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ParticleSystem[] hoseWaterSystems;

		[Token(Token = "0x4001101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Renderer systemRenderer;

		[Token(Token = "0x4001102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float m_Power;

		[Token(Token = "0x60013AE")]
		[Address(RVA = "0xCBE104", Offset = "0xCBE104", VA = "0xCBE104")]
		private void Update()
		{
		}

		[Token(Token = "0x60013AF")]
		[Address(RVA = "0xCBE2C8", Offset = "0xCBE2C8", VA = "0xCBE2C8")]
		public Hose()
		{
		}
	}
	[Token(Token = "0x2000258")]
	public class ParticleSystemMultiplier : MonoBehaviour
	{
		[Token(Token = "0x4001103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float multiplier;

		[Token(Token = "0x60013B0")]
		[Address(RVA = "0xCBE2E4", Offset = "0xCBE2E4", VA = "0xCBE2E4")]
		private void Start()
		{
		}

		[Token(Token = "0x60013B1")]
		[Address(RVA = "0xCBE470", Offset = "0xCBE470", VA = "0xCBE470")]
		public ParticleSystemMultiplier()
		{
		}
	}
	[Token(Token = "0x2000259")]
	public class SmokeParticles : MonoBehaviour
	{
		[Token(Token = "0x4001104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip[] extinguishSounds;

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0xCBE480", Offset = "0xCBE480", VA = "0xCBE480")]
		private void Start()
		{
		}

		[Token(Token = "0x60013B3")]
		[Address(RVA = "0xCBE540", Offset = "0xCBE540", VA = "0xCBE540")]
		public SmokeParticles()
		{
		}
	}
	[Token(Token = "0x200025A")]
	public class WaterHoseParticles : MonoBehaviour
	{
		[Token(Token = "0x4001105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float lastSoundTime;

		[Token(Token = "0x4001106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float force;

		[Token(Token = "0x4001107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<ParticleCollisionEvent> m_CollisionEvents;

		[Token(Token = "0x4001108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ParticleSystem m_ParticleSystem;

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0xCBE548", Offset = "0xCBE548", VA = "0xCBE548")]
		private void Start()
		{
		}

		[Token(Token = "0x60013B5")]
		[Address(RVA = "0xCBE5A0", Offset = "0xCBE5A0", VA = "0xCBE5A0")]
		private void OnParticleCollision(GameObject other)
		{
		}

		[Token(Token = "0x60013B6")]
		[Address(RVA = "0xCBE830", Offset = "0xCBE830", VA = "0xCBE830")]
		public WaterHoseParticles()
		{
		}
	}
}
namespace LowPolyWater
{
	[Token(Token = "0x200025B")]
	public class LowPolyWater : MonoBehaviour
	{
		[Token(Token = "0x4001109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float waveHeight;

		[Token(Token = "0x400110A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float waveFrequency;

		[Token(Token = "0x400110B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float waveLength;

		[Token(Token = "0x400110C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 waveOriginPosition;

		[Token(Token = "0x400110D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MeshFilter meshFilter;

		[Token(Token = "0x400110E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Mesh mesh;

		[Token(Token = "0x400110F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3[] vertices;

		[Token(Token = "0x60013B7")]
		[Address(RVA = "0xB48BC4", Offset = "0xB48BC4", VA = "0xB48BC4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0xB48C1C", Offset = "0xB48C1C", VA = "0xB48C1C")]
		private void Start()
		{
		}

		[Token(Token = "0x60013B9")]
		[Address(RVA = "0xB48C24", Offset = "0xB48C24", VA = "0xB48C24")]
		private MeshFilter CreateMeshLowPoly(MeshFilter mf)
		{
			return null;
		}

		[Token(Token = "0x60013BA")]
		[Address(RVA = "0xB48DB8", Offset = "0xB48DB8", VA = "0xB48DB8")]
		private void Update()
		{
		}

		[Token(Token = "0x60013BB")]
		[Address(RVA = "0xB48DBC", Offset = "0xB48DBC", VA = "0xB48DBC")]
		private void GenerateWaves()
		{
		}

		[Token(Token = "0x60013BC")]
		[Address(RVA = "0xB48F98", Offset = "0xB48F98", VA = "0xB48F98")]
		public LowPolyWater()
		{
		}
	}
}
