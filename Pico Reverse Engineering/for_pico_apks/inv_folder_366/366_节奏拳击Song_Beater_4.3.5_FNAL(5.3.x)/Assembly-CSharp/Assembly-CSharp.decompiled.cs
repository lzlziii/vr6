using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Runtime.Serialization;
using System.Security.Cryptography;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using System.Threading.Tasks;
using ExitGames.Client.Photon;
using ICSharpCode.SharpZipLib.Checksum;
using ICSharpCode.SharpZipLib.Core;
using ICSharpCode.SharpZipLib.Zip;
using ICSharpCode.SharpZipLib.Zip.Compression;
using ICSharpCode.SharpZipLib.Zip.Compression.Streams;
using Il2CppDummyDll;
using LitJson;
using MK.Glow.Legacy;
using Newtonsoft.Json.Linq;
using Photon.Chat;
using Photon.Pun;
using Photon.Realtime;
using Photon.Voice.PUN;
using Photon.Voice.Unity;
using Photon.Voice.Unity.UtilityScripts;
using Pvr_UnitySDKAPI;
using Pvr_UnitySDKAPI.Achievement;
using TMPro;
using UnityEngine;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Networking;
using UnityEngine.Rendering;
using UnityEngine.UI;
using UnityEngine.Video;
using VLB;
using VacuumShaders.TerrainToMesh;
using Valve.VR;
using VolumetricFogAndMist;
using YoutubeLight;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F5ABC", Offset = "0x7F5ABC")]
internal sealed class <>f__AnonymousType0<<pose>j__TPar, <index>j__TPar>
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x7FB3CC", Offset = "0x7FB3CC")]
	private readonly <pose>j__TPar <pose>i__Field;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x7FB3E0", Offset = "0x7FB3E0")]
	private readonly <index>j__TPar <index>i__Field;

	[Token(Token = "0x17000001")]
	public <pose>j__TPar pose
	{
		[Token(Token = "0x6000001")]
		get
		{
			return (<pose>j__TPar)null;
		}
	}

	[Token(Token = "0x17000002")]
	public <index>j__TPar index
	{
		[Token(Token = "0x6000002")]
		get
		{
			return (<index>j__TPar)null;
		}
	}

	[Token(Token = "0x6000003")]
	[DebuggerHidden]
	public <>f__AnonymousType0(<pose>j__TPar pose, <index>j__TPar index)
	{
	}

	[Token(Token = "0x6000004")]
	[DebuggerHidden]
	public override bool Equals(object value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000005")]
	[DebuggerHidden]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000006")]
	[DebuggerHidden]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000003")]
[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F5ACC", Offset = "0x7F5ACC")]
internal sealed class <>f__AnonymousType1<<pose>j__TPar, <index>j__TPar, <deviceClass>j__TPar>
{
	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x7FB3F4", Offset = "0x7FB3F4")]
	private readonly <pose>j__TPar <pose>i__Field;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x7FB408", Offset = "0x7FB408")]
	private readonly <index>j__TPar <index>i__Field;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x7FB41C", Offset = "0x7FB41C")]
	private readonly <deviceClass>j__TPar <deviceClass>i__Field;

	[Token(Token = "0x17000003")]
	public <pose>j__TPar pose
	{
		[Token(Token = "0x6000007")]
		get
		{
			return (<pose>j__TPar)null;
		}
	}

	[Token(Token = "0x17000004")]
	public <index>j__TPar index
	{
		[Token(Token = "0x6000008")]
		get
		{
			return (<index>j__TPar)null;
		}
	}

	[Token(Token = "0x17000005")]
	public <deviceClass>j__TPar deviceClass
	{
		[Token(Token = "0x6000009")]
		get
		{
			return (<deviceClass>j__TPar)null;
		}
	}

	[Token(Token = "0x600000A")]
	[DebuggerHidden]
	public <>f__AnonymousType1(<pose>j__TPar pose, <index>j__TPar index, <deviceClass>j__TPar deviceClass)
	{
	}

	[Token(Token = "0x600000B")]
	[DebuggerHidden]
	public override bool Equals(object value)
	{
		return default(bool);
	}

	[Token(Token = "0x600000C")]
	[DebuggerHidden]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x600000D")]
	[DebuggerHidden]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000004")]
[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F5ADC", Offset = "0x7F5ADC")]
internal sealed class <>f__AnonymousType2<<pose>j__TPar, <index>j__TPar, <deviceClass>j__TPar, <deviceRole>j__TPar, <modelNumber>j__TPar, <renderModel>j__TPar>
{
	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x7FB430", Offset = "0x7FB430")]
	private readonly <pose>j__TPar <pose>i__Field;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x7FB444", Offset = "0x7FB444")]
	private readonly <index>j__TPar <index>i__Field;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x7FB458", Offset = "0x7FB458")]
	private readonly <deviceClass>j__TPar <deviceClass>i__Field;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x7FB46C", Offset = "0x7FB46C")]
	private readonly <deviceRole>j__TPar <deviceRole>i__Field;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x7FB480", Offset = "0x7FB480")]
	private readonly <modelNumber>j__TPar <modelNumber>i__Field;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x7FB494", Offset = "0x7FB494")]
	private readonly <renderModel>j__TPar <renderModel>i__Field;

	[Token(Token = "0x17000006")]
	public <pose>j__TPar pose
	{
		[Token(Token = "0x600000E")]
		get
		{
			return (<pose>j__TPar)null;
		}
	}

	[Token(Token = "0x17000007")]
	public <index>j__TPar index
	{
		[Token(Token = "0x600000F")]
		get
		{
			return (<index>j__TPar)null;
		}
	}

	[Token(Token = "0x17000008")]
	public <deviceClass>j__TPar deviceClass
	{
		[Token(Token = "0x6000010")]
		get
		{
			return (<deviceClass>j__TPar)null;
		}
	}

	[Token(Token = "0x17000009")]
	public <deviceRole>j__TPar deviceRole
	{
		[Token(Token = "0x6000011")]
		get
		{
			return (<deviceRole>j__TPar)null;
		}
	}

	[Token(Token = "0x1700000A")]
	public <modelNumber>j__TPar modelNumber
	{
		[Token(Token = "0x6000012")]
		get
		{
			return (<modelNumber>j__TPar)null;
		}
	}

	[Token(Token = "0x1700000B")]
	public <renderModel>j__TPar renderModel
	{
		[Token(Token = "0x6000013")]
		get
		{
			return (<renderModel>j__TPar)null;
		}
	}

	[Token(Token = "0x6000014")]
	[DebuggerHidden]
	public <>f__AnonymousType2(<pose>j__TPar pose, <index>j__TPar index, <deviceClass>j__TPar deviceClass, <deviceRole>j__TPar deviceRole, <modelNumber>j__TPar modelNumber, <renderModel>j__TPar renderModel)
	{
	}

	[Token(Token = "0x6000015")]
	[DebuggerHidden]
	public override bool Equals(object value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000016")]
	[DebuggerHidden]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000017")]
	[DebuggerHidden]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000005")]
public class ConnectAudioSettingsSlider : MonoBehaviour
{
	[Token(Token = "0x2000313")]
	private enum AudioMixers
	{
		[Token(Token = "0x4002267")]
		Master,
		[Token(Token = "0x4002268")]
		Music,
		[Token(Token = "0x4002269")]
		SFX
	}

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioMixers audioSource;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private UISlider slider;

	[Token(Token = "0x6000018")]
	[Address(RVA = "0xA8A384", Offset = "0xA8A384", VA = "0xA8A384")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0xA8A60C", Offset = "0xA8A60C", VA = "0xA8A60C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0xA8A6B4", Offset = "0xA8A6B4", VA = "0xA8A6B4")]
	private void OnAudioChange(float decibelValue)
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0xA8A524", Offset = "0xA8A524", VA = "0xA8A524")]
	private float GetAudioValue(AudioMixers mixer)
	{
		return default(float);
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0xA8A6B8", Offset = "0xA8A6B8", VA = "0xA8A6B8")]
	private void SetAudioValue(float volume)
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0xA8A7A8", Offset = "0xA8A7A8", VA = "0xA8A7A8")]
	public ConnectAudioSettingsSlider()
	{
	}
}
[Token(Token = "0x2000006")]
public class BlurManager : MonoBehaviour
{
	[Token(Token = "0x2000314")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F95E8", Offset = "0x7F95E8")]
	private sealed class <BlurIn>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400226A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400226B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400226C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BlurManager <>4__this;

		[Token(Token = "0x170002B5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001734")]
			[Address(RVA = "0xA3B770", Offset = "0xA3B770", VA = "0xA3B770", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001736")]
			[Address(RVA = "0xA3B7DC", Offset = "0xA3B7DC", VA = "0xA3B7DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001731")]
		[Address(RVA = "0xA3B43C", Offset = "0xA3B43C", VA = "0xA3B43C")]
		[DebuggerHidden]
		public <BlurIn>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001732")]
		[Address(RVA = "0xA3B64C", Offset = "0xA3B64C", VA = "0xA3B64C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001733")]
		[Address(RVA = "0xA3B650", Offset = "0xA3B650", VA = "0xA3B650", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001735")]
		[Address(RVA = "0xA3B778", Offset = "0xA3B778", VA = "0xA3B778", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000315")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F95F8", Offset = "0x7F95F8")]
	private sealed class <BlurOut>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400226D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400226E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400226F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BlurManager <>4__this;

		[Token(Token = "0x170002B7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600173A")]
			[Address(RVA = "0xA3B900", Offset = "0xA3B900", VA = "0xA3B900", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600173C")]
			[Address(RVA = "0xA3B96C", Offset = "0xA3B96C", VA = "0xA3B96C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001737")]
		[Address(RVA = "0xA3B4DC", Offset = "0xA3B4DC", VA = "0xA3B4DC")]
		[DebuggerHidden]
		public <BlurOut>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6001738")]
		[Address(RVA = "0xA3B7E4", Offset = "0xA3B7E4", VA = "0xA3B7E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001739")]
		[Address(RVA = "0xA3B7E8", Offset = "0xA3B7E8", VA = "0xA3B7E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600173B")]
		[Address(RVA = "0xA3B908", Offset = "0xA3B908", VA = "0xA3B908", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7FB4B8", Offset = "0x7FB4B8")]
	public Material blurMaterial;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7FB4F0", Offset = "0x7FB4F0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FB4F0", Offset = "0x7FB4F0")]
	public float blurValue;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FB544", Offset = "0x7FB544")]
	public float animationSpeed;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string customProperty;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float currentBlurValue;

	[Token(Token = "0x600001E")]
	[Address(RVA = "0xA3B350", Offset = "0xA3B350", VA = "0xA3B350")]
	private void Start()
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0xA3B3C8", Offset = "0xA3B3C8", VA = "0xA3B3C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x801F10", Offset = "0x801F10")]
	private IEnumerator BlurIn()
	{
		return null;
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0xA3B468", Offset = "0xA3B468", VA = "0xA3B468")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x801F74", Offset = "0x801F74")]
	private IEnumerator BlurOut()
	{
		return null;
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0xA3B508", Offset = "0xA3B508", VA = "0xA3B508")]
	public void BlurInAnim()
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0xA3B574", Offset = "0xA3B574", VA = "0xA3B574")]
	public void BlurOutAnim()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0xA3B5E0", Offset = "0xA3B5E0", VA = "0xA3B5E0")]
	public void SetBlurValue(float cbv)
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0xA3B5E8", Offset = "0xA3B5E8", VA = "0xA3B5E8")]
	public BlurManager()
	{
	}
}
[Token(Token = "0x2000007")]
public static class SaveIDs
{
	[Token(Token = "0x2000316")]
	public enum AudioSettings
	{
		[Token(Token = "0x4002271")]
		MasterVolume,
		[Token(Token = "0x4002272")]
		Music,
		[Token(Token = "0x4002273")]
		SFX
	}

	[Token(Token = "0x2000317")]
	public enum GeneralSettings
	{
		[Token(Token = "0x4002275")]
		Language,
		[Token(Token = "0x4002276")]
		VSync,
		[Token(Token = "0x4002277")]
		Difficulty_Details,
		[Token(Token = "0x4002278")]
		Album,
		[Token(Token = "0x4002279")]
		Diff
	}

	[Token(Token = "0x2000318")]
	public static class SaveIDsDictionary
	{
		[Serializable]
		[Token(Token = "0x200057E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7FB3BC", Offset = "0x7FB3BC")]
		private sealed class <>c
		{
			[Token(Token = "0x40027BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x6001FC7")]
			[Address(RVA = "0xA50F68", Offset = "0xA50F68", VA = "0xA50F68")]
			public <>c()
			{
			}

			[Token(Token = "0x6001FC8")]
			[Address(RVA = "0xA50F70", Offset = "0xA50F70", VA = "0xA50F70")]
			internal bool <.cctor>b__1_0(Type t)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400227A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<Enum, string> _value;

		[Token(Token = "0x170002B9")]
		public static Dictionary<Enum, string> Value
		{
			[Token(Token = "0x600173E")]
			[Address(RVA = "0xA50E9C", Offset = "0xA50E9C", VA = "0xA50E9C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600173D")]
		[Address(RVA = "0xA507AC", Offset = "0xA507AC", VA = "0xA507AC")]
		static SaveIDsDictionary()
		{
		}
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0xA50644", Offset = "0xA50644", VA = "0xA50644")]
	internal static bool IsSameSaveID(this string ID, Enum IDEnum)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000008")]
public class SaveIDAttribute : PropertyAttribute
{
	[Token(Token = "0x6000026")]
	[Address(RVA = "0xA5063C", Offset = "0xA5063C", VA = "0xA5063C")]
	public SaveIDAttribute()
	{
	}
}
[Serializable]
[Token(Token = "0x2000009")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x7F5AFC", Offset = "0x7F5AFC")]
[AttributeAttribute(Name = "DebuggerDisplayAttribute", RVA = "0x7F5AFC", Offset = "0x7F5AFC")]
public class SerializableDictionary<TKey, TValue> : IDictionary<TKey, TValue>, ICollection<KeyValuePair<TKey, TValue>>, IEnumerable<KeyValuePair<TKey, TValue>>, IEnumerable
{
	[Token(Token = "0x2000319")]
	private static class PrimeHelper
	{
		[Token(Token = "0x400227B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int[] Primes;

		[Token(Token = "0x600173F")]
		public static bool IsPrime(int candidate)
		{
			return default(bool);
		}

		[Token(Token = "0x6001740")]
		public static int GetPrime(int min)
		{
			return default(int);
		}

		[Token(Token = "0x6001741")]
		public static int ExpandPrime(int oldSize)
		{
			return default(int);
		}
	}

	[Token(Token = "0x200031A")]
	public struct Enumerator : IEnumerator<KeyValuePair<TKey, TValue>>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400227C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly SerializableDictionary<TKey, TValue> _Dictionary;

		[Token(Token = "0x400227D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int _Version;

		[Token(Token = "0x400227E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int _Index;

		[Token(Token = "0x400227F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private KeyValuePair<TKey, TValue> _Current;

		[Token(Token = "0x170002BA")]
		public KeyValuePair<TKey, TValue> Current
		{
			[Token(Token = "0x6001743")]
			get
			{
				return default(KeyValuePair<TKey, TValue>);
			}
		}

		[Token(Token = "0x170002BB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001747")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001744")]
		internal Enumerator(SerializableDictionary<TKey, TValue> dictionary)
		{
		}

		[Token(Token = "0x6001745")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001746")]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6001748")]
		public void Dispose()
		{
		}
	}

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	[HideInInspector]
	private int[] _Buckets;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	[HideInInspector]
	private int[] _HashCodes;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	[HideInInspector]
	private int[] _Next;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	[HideInInspector]
	private int _Count;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	[HideInInspector]
	private int _Version;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	[HideInInspector]
	private int _FreeList;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	[HideInInspector]
	private int _FreeCount;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	[HideInInspector]
	private TKey[] _Keys;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	[HideInInspector]
	private TValue[] _Values;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private readonly IEqualityComparer<TKey> _Comparer;

	[Token(Token = "0x1700000C")]
	public Dictionary<TKey, TValue> AsDictionary
	{
		[Token(Token = "0x6000027")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000D")]
	public int Count
	{
		[Token(Token = "0x6000028")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700000E")]
	public TValue Item
	{
		[Token(Token = "0x6000029")]
		get
		{
			return (TValue)null;
		}
	}

	[Token(Token = "0x1700000F")]
	public TValue Item
	{
		[Token(Token = "0x600002A")]
		get
		{
			return (TValue)null;
		}
		[Token(Token = "0x600002B")]
		set
		{
		}
	}

	[Token(Token = "0x17000010")]
	public ICollection<TKey> Keys
	{
		[Token(Token = "0x600003D")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000011")]
	public ICollection<TValue> Values
	{
		[Token(Token = "0x600003E")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000012")]
	public bool IsReadOnly
	{
		[Token(Token = "0x6000042")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600002C")]
	public SerializableDictionary()
	{
	}

	[Token(Token = "0x600002D")]
	public SerializableDictionary(int capacity)
	{
	}

	[Token(Token = "0x600002E")]
	public SerializableDictionary(IEqualityComparer<TKey> comparer)
	{
	}

	[Token(Token = "0x600002F")]
	public SerializableDictionary(int capacity, IEqualityComparer<TKey> comparer)
	{
	}

	[Token(Token = "0x6000030")]
	public SerializableDictionary(IDictionary<TKey, TValue> dictionary)
	{
	}

	[Token(Token = "0x6000031")]
	public SerializableDictionary(IDictionary<TKey, TValue> dictionary, IEqualityComparer<TKey> comparer)
	{
	}

	[Token(Token = "0x6000032")]
	public bool ContainsValue(TValue value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000033")]
	public bool ContainsKey(TKey key)
	{
		return default(bool);
	}

	[Token(Token = "0x6000034")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000035")]
	public void Add(TKey key, TValue value)
	{
	}

	[Token(Token = "0x6000036")]
	private void Resize(int newSize, bool forceNewHashCodes)
	{
	}

	[Token(Token = "0x6000037")]
	private void Resize()
	{
	}

	[Token(Token = "0x6000038")]
	public bool Remove(TKey key)
	{
		return default(bool);
	}

	[Token(Token = "0x6000039")]
	private void Insert(TKey key, TValue value, bool add)
	{
	}

	[Token(Token = "0x600003A")]
	private void Initialize(int capacity)
	{
	}

	[Token(Token = "0x600003B")]
	private int FindIndex(TKey key)
	{
		return default(int);
	}

	[Token(Token = "0x600003C")]
	public bool TryGetValue(TKey key, out TValue value)
	{
		return default(bool);
	}

	[Token(Token = "0x600003F")]
	public void Add(KeyValuePair<TKey, TValue> item)
	{
	}

	[Token(Token = "0x6000040")]
	public bool Contains(KeyValuePair<TKey, TValue> item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000041")]
	public void CopyTo(KeyValuePair<TKey, TValue>[] array, int index)
	{
	}

	[Token(Token = "0x6000043")]
	public bool Remove(KeyValuePair<TKey, TValue> item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000044")]
	public Enumerator GetEnumerator()
	{
		return default(Enumerator);
	}

	[Token(Token = "0x6000045")]
	private IEnumerator System.Collections.IEnumerable.GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x6000046")]
	private IEnumerator<KeyValuePair<TKey, TValue>> System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator()
	{
		return null;
	}
}
[Token(Token = "0x200000A")]
public class UIAutoResizer : MonoBehaviour, ISerializationCallbackReceiver
{
	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool doUpdate;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool isLayoutGroup;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform rectTransform;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private UIAutoResizer layoutGroupResizer;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool vacsie;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private BoxCollider col;

	[Token(Token = "0x6000047")]
	[Address(RVA = "0xA03940", Offset = "0xA03940", VA = "0xA03940")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0xA03944", Offset = "0xA03944", VA = "0xA03944")]
	public void SetDoUpdate()
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0xA03950", Offset = "0xA03950", VA = "0xA03950")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0xA039D0", Offset = "0xA039D0", VA = "0xA039D0")]
	private void ResizeUIElements()
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0xA039D4", Offset = "0xA039D4", VA = "0xA039D4", Slot = "4")]
	public void OnBeforeSerialize()
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0xA039D8", Offset = "0xA039D8", VA = "0xA039D8", Slot = "5")]
	public void OnAfterDeserialize()
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0xA039DC", Offset = "0xA039DC", VA = "0xA039DC")]
	public UIAutoResizer()
	{
	}
}
[Token(Token = "0x200000B")]
public class UITooltip_Prefab : MonoBehaviour
{
	[Token(Token = "0x200031B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9608", Offset = "0x7F9608")]
	private sealed class <pre_disable>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UITooltip_Prefab <>4__this;

		[Token(Token = "0x170002BC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600174C")]
			[Address(RVA = "0xA0D4E8", Offset = "0xA0D4E8", VA = "0xA0D4E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600174E")]
			[Address(RVA = "0xA0D554", Offset = "0xA0D554", VA = "0xA0D554", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001749")]
		[Address(RVA = "0xA0D3B8", Offset = "0xA0D3B8", VA = "0xA0D3B8")]
		[DebuggerHidden]
		public <pre_disable>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600174A")]
		[Address(RVA = "0xA0D3F0", Offset = "0xA0D3F0", VA = "0xA0D3F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600174B")]
		[Address(RVA = "0xA0D3F4", Offset = "0xA0D3F4", VA = "0xA0D3F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600174D")]
		[Address(RVA = "0xA0D4F0", Offset = "0xA0D4F0", VA = "0xA0D4F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro mouseTitle;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro mouseDescription;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject container;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static UITooltip_Prefab uprefab;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool any_tooltip_active;

	[Token(Token = "0x600004E")]
	[Address(RVA = "0xA0D2D4", Offset = "0xA0D2D4", VA = "0xA0D2D4")]
	private void Start()
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0xA0D2D8", Offset = "0xA0D2D8", VA = "0xA0D2D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0xA0D344", Offset = "0xA0D344", VA = "0xA0D344")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x801FE8", Offset = "0x801FE8")]
	private IEnumerator pre_disable()
	{
		return null;
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0xA0D1E0", Offset = "0xA0D1E0", VA = "0xA0D1E0")]
	public void _Enable()
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0xA0D2AC", Offset = "0xA0D2AC", VA = "0xA0D2AC")]
	public void _Disable()
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0xA0D3E4", Offset = "0xA0D3E4", VA = "0xA0D3E4")]
	public UITooltip_Prefab()
	{
	}
}
[Serializable]
[Token(Token = "0x200000C")]
public class UnityEventString : UnityEvent<string>
{
	[Token(Token = "0x6000055")]
	[Address(RVA = "0xA0DF3C", Offset = "0xA0DF3C", VA = "0xA0DF3C")]
	public UnityEventString()
	{
	}
}
[Serializable]
[Token(Token = "0x200000D")]
public class UnityEventInt : UnityEvent<int>
{
	[Token(Token = "0x6000056")]
	[Address(RVA = "0xA0DEEC", Offset = "0xA0DEEC", VA = "0xA0DEEC")]
	public UnityEventInt()
	{
	}
}
[Serializable]
[Token(Token = "0x200000E")]
public class UnityEventFloat : UnityEvent<float>
{
	[Token(Token = "0x6000057")]
	[Address(RVA = "0xA0DE9C", Offset = "0xA0DE9C", VA = "0xA0DE9C")]
	public UnityEventFloat()
	{
	}
}
[Serializable]
[Token(Token = "0x200000F")]
public class UnityEventBool : UnityEvent<bool>
{
	[Token(Token = "0x6000058")]
	[Address(RVA = "0xA0DE4C", Offset = "0xA0DE4C", VA = "0xA0DE4C")]
	public UnityEventBool()
	{
	}
}
[Token(Token = "0x2000010")]
public interface IUIInteractable
{
}
[Token(Token = "0x2000011")]
public interface IUIPointerClickHandler : IUIInteractable
{
	[Token(Token = "0x6000059")]
	void OnPointerClick();
}
[Token(Token = "0x2000012")]
public interface IUIPointerDownHandler : IUIInteractable
{
	[Token(Token = "0x600005A")]
	void OnPointerDown();
}
[Token(Token = "0x2000013")]
public interface IUIPointerDragHandler : IUIInteractable
{
	[Token(Token = "0x600005B")]
	void OnPointerDrag(RaycastHit hit);
}
[Token(Token = "0x2000014")]
public interface IUIPointerEnterHandler : IUIInteractable
{
	[Token(Token = "0x600005C")]
	void OnPointerEnter();
}
[Token(Token = "0x2000015")]
public interface IUIPointerExitHandler : IUIInteractable
{
	[Token(Token = "0x600005D")]
	void OnPointerExit();
}
[Token(Token = "0x2000016")]
public interface IUIPointerOverHandler : IUIInteractable
{
	[Token(Token = "0x600005E")]
	void OnPointerOver();
}
[Token(Token = "0x2000017")]
public interface IUIPointerUpHandler : IUIInteractable
{
	[Token(Token = "0x600005F")]
	void OnPointerUp();
}
[Token(Token = "0x2000018")]
public class AudioManager : MonoBehaviour
{
	[Token(Token = "0x200031C")]
	public enum Sounds
	{
		[Token(Token = "0x4002284")]
		UI_Click,
		[Token(Token = "0x4002285")]
		UI_Hover,
		[Token(Token = "0x4002286")]
		UI_Notification
	}

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AudioManager Instance;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static AudioSource audioSource;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip click;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip hover;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static AudioClip _click;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static AudioClip _hover;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static byte[] buffer_over;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static byte[] buffer_push;

	[Token(Token = "0x6000060")]
	[Address(RVA = "0xA34DA0", Offset = "0xA34DA0", VA = "0xA34DA0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0xA34E48", Offset = "0xA34E48", VA = "0xA34E48")]
	public static void PlaySound(Sounds soundEnum, Vector3 position)
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0xA34FEC", Offset = "0xA34FEC", VA = "0xA34FEC")]
	public static void PlaySound(Sounds soundEnum)
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0xA35144", Offset = "0xA35144", VA = "0xA35144")]
	public static void Haptic_Short()
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0xA351D8", Offset = "0xA351D8", VA = "0xA351D8")]
	public static void Haptic_Push()
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0xA35264", Offset = "0xA35264", VA = "0xA35264")]
	public AudioManager()
	{
	}
}
[Token(Token = "0x2000019")]
public class MouseInputManager : MonoBehaviour
{
	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Ray ray;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RaycastHit[] raycastHitsArray;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int UILayerMask;

	[Token(Token = "0x6000067")]
	[Address(RVA = "0xA29E6C", Offset = "0xA29E6C", VA = "0xA29E6C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0xA29F2C", Offset = "0xA29F2C", VA = "0xA29F2C")]
	public MouseInputManager()
	{
	}
}
[Token(Token = "0x200001A")]
public static class SaveLoadManager
{
	[Token(Token = "0x200031D")]
	public delegate void OnSavedIDHandler(string ID);

	[Token(Token = "0x14000001")]
	public static event OnSavedIDHandler OnSavedID
	{
		[Token(Token = "0x6000069")]
		[Address(RVA = "0xA51040", Offset = "0xA51040", VA = "0xA51040")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x80204C", Offset = "0x80204C")]
		add
		{
		}
		[Token(Token = "0x600006A")]
		[Address(RVA = "0xA510F4", Offset = "0xA510F4", VA = "0xA510F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x80205C", Offset = "0x80205C")]
		remove
		{
		}
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0xA511A8", Offset = "0xA511A8", VA = "0xA511A8")]
	public static bool CanLoad(string ID, bool showLog = false)
	{
		return default(bool);
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0xA51220", Offset = "0xA51220", VA = "0xA51220")]
	public static bool CanLoad(Enum ID, bool showLog = false)
	{
		return default(bool);
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0xA5137C", Offset = "0xA5137C", VA = "0xA5137C")]
	public static int LoadInt(string ID)
	{
		return default(int);
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0xA513BC", Offset = "0xA513BC", VA = "0xA513BC")]
	public static int LoadInt(Enum ID)
	{
		return default(int);
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0xA514B0", Offset = "0xA514B0", VA = "0xA514B0")]
	public static float LoadFloat(string ID)
	{
		return default(float);
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0xA514F0", Offset = "0xA514F0", VA = "0xA514F0")]
	public static float LoadFloat(Enum ID)
	{
		return default(float);
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0xA515E4", Offset = "0xA515E4", VA = "0xA515E4")]
	public static string LoadString(string ID)
	{
		return null;
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0xA51654", Offset = "0xA51654", VA = "0xA51654")]
	public static string LoadString(Enum ID)
	{
		return null;
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0xA51750", Offset = "0xA51750", VA = "0xA51750")]
	public static void SaveInt(string ID, int value)
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0xA51844", Offset = "0xA51844", VA = "0xA51844")]
	public static void SaveInt(Enum ID, int value)
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0xA5197C", Offset = "0xA5197C", VA = "0xA5197C")]
	public static void SaveFloat(string ID, float value)
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0xA51A08", Offset = "0xA51A08", VA = "0xA51A08")]
	public static void SaveFloat(Enum ID, float value)
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0xA51B40", Offset = "0xA51B40", VA = "0xA51B40")]
	public static void SaveString(string ID, string value)
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0xA51BCC", Offset = "0xA51BCC", VA = "0xA51BCC")]
	public static void SaveString(Enum ID, string value)
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0xA517DC", Offset = "0xA517DC", VA = "0xA517DC")]
	private static void ExecuteSave(string ID)
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0xA520B8", Offset = "0xA520B8", VA = "0xA520B8")]
	public static void SaveSettingsToFile()
	{
	}
}
[Token(Token = "0x200001B")]
public class UIInteractionManager : MonoBehaviour
{
	[Token(Token = "0x200031E")]
	public enum UsedInput
	{
		[Token(Token = "0x4002288")]
		Mouse,
		[Token(Token = "0x4002289")]
		VRController
	}

	[Token(Token = "0x200031F")]
	private class UIInteractionControllerData
	{
		[Token(Token = "0x400228A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit[] raycastHits;

		[Token(Token = "0x400228B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UIInteractionObject firstHitInteractableObject;

		[Token(Token = "0x400228C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 currentControllerPosition;

		[Token(Token = "0x400228D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 previousControllerPosition;

		[Token(Token = "0x400228E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Dictionary<int, UIInteractionObject> InteractionObjectsDictionary;

		[Token(Token = "0x6001753")]
		[Address(RVA = "0xA09E20", Offset = "0xA09E20", VA = "0xA09E20")]
		public UIInteractionControllerData()
		{
		}
	}

	[Token(Token = "0x2000320")]
	private class UIInteractionObject
	{
		[Token(Token = "0x400228F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit hit;

		[Token(Token = "0x4002290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IUIInteractable[] UIInteractables;

		[Token(Token = "0x4002291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool didClickStarted;

		[Token(Token = "0x4002292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool isFreshlyFound;

		[Token(Token = "0x6001754")]
		[Address(RVA = "0xA09F84", Offset = "0xA09F84", VA = "0xA09F84")]
		public UIInteractionObject()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000321")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9618", Offset = "0x7F9618")]
	private sealed class <>c
	{
		[Token(Token = "0x4002293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<RaycastHit> <>9__14_0;

		[Token(Token = "0x6001756")]
		[Address(RVA = "0xA0A998", Offset = "0xA0A998", VA = "0xA0A998")]
		public <>c()
		{
		}

		[Token(Token = "0x6001757")]
		[Address(RVA = "0xA0A9A0", Offset = "0xA0A9A0", VA = "0xA0A9A0")]
		internal int <ProcessRaycasts>b__14_0(RaycastHit x, RaycastHit y)
		{
			return default(int);
		}
	}

	[Token(Token = "0x2000322")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9628", Offset = "0x7F9628")]
	private sealed class <>c__DisplayClass23_0
	{
		[Token(Token = "0x4002295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public KeyValuePair<int, UIInteractionObject> item;

		[Token(Token = "0x6001758")]
		[Address(RVA = "0xA09F94", Offset = "0xA09F94", VA = "0xA09F94")]
		public <>c__DisplayClass23_0()
		{
		}

		[Token(Token = "0x6001759")]
		[Address(RVA = "0xA0A9E4", Offset = "0xA0A9E4", VA = "0xA0A9E4")]
		internal bool <HandleObjectExit>b__0(RaycastHit o)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static UIInteractionManager Instance;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float _globalUIElementOffset;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private UIInteractionObject interactionObj;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<int> removeObjList;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<UsedInput, UIInteractionControllerData> InputTypeDictionary;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 hitpoint;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private UsedInput[] UsedInputEnumArray;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private IUIInteractable[] interactableComponents;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int objID;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private UIInteractionObject intObj;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private IUIPointerDownHandler pointerDownHandler;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private IUIPointerClickHandler pointerClickHandler;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private IUIPointerUpHandler pointerUpHandler;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private IUIPointerDragHandler pointerDragHandler;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private IUIPointerEnterHandler pointerEnterHandler;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private IUIPointerExitHandler pointerExitHandler;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private IUIPointerOverHandler pointerOverHandler;

	[Token(Token = "0x600007B")]
	[Address(RVA = "0xA03BC4", Offset = "0xA03BC4", VA = "0xA03BC4")]
	public void OffsetUIElement(GameObject obj, bool offsetRelativeToCurrentPos = false)
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0xA08BF0", Offset = "0xA08BF0", VA = "0xA08BF0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0xA08D08", Offset = "0xA08D08", VA = "0xA08D08")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0xA08DA4", Offset = "0xA08DA4", VA = "0xA08DA4")]
	private void Start()
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0xA08F5C", Offset = "0xA08F5C", VA = "0xA08F5C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0xA09258", Offset = "0xA09258", VA = "0xA09258")]
	public Vector3 ProcessRaycasts(RaycastHit[] raycastHits, Vector3 controllerPosition, UsedInput usedInput)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0xA08F60", Offset = "0xA08F60", VA = "0xA08F60")]
	private void HandleInteractionInput()
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0xA08DA8", Offset = "0xA08DA8", VA = "0xA08DA8")]
	private void InitializeInteractionObjectDictionary()
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0xA095C4", Offset = "0xA095C4", VA = "0xA095C4")]
	private void UpdateInteractionObjectInDictionary(RaycastHit hit, UsedInput usedInput)
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0xA09E90", Offset = "0xA09E90", VA = "0xA09E90")]
	private void AddInteractionObjToDictionary(RaycastHit hit, UsedInput usedInput, IUIInteractable[] interactables)
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0xA097E0", Offset = "0xA097E0", VA = "0xA097E0")]
	private void HandleObjectExit(RaycastHit[] raycastHits, UsedInput usedInput)
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0xA09BC4", Offset = "0xA09BC4", VA = "0xA09BC4")]
	private void HandleAllInputs(UIInteractionObject interactObject, UsedInput usedInput)
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0xA0A088", Offset = "0xA0A088", VA = "0xA0A088")]
	private bool GetButtonDownInput(UsedInput usedInput)
	{
		return default(bool);
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0xA0A1F8", Offset = "0xA0A1F8", VA = "0xA0A1F8")]
	private bool GetButtonUpInput(UsedInput usedInput)
	{
		return default(bool);
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0xA0A368", Offset = "0xA0A368", VA = "0xA0A368")]
	private bool GetButtonInput(UsedInput usedInput)
	{
		return default(bool);
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0xA0A518", Offset = "0xA0A518", VA = "0xA0A518")]
	private bool GetButtonClickInput(UsedInput usedInput)
	{
		return default(bool);
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0xA0A10C", Offset = "0xA0A10C", VA = "0xA0A10C")]
	private void ResolvePointerDown(IUIInteractable interactable)
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0xA0A59C", Offset = "0xA0A59C", VA = "0xA0A59C")]
	private void ResolvePointerClick(IUIInteractable interactable)
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0xA0A27C", Offset = "0xA0A27C", VA = "0xA0A27C")]
	private void ResolvePointerUp(IUIInteractable interactable)
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0xA0A3EC", Offset = "0xA0A3EC", VA = "0xA0A3EC")]
	private void ResolveOnDrag(IUIInteractable interactable, RaycastHit hit)
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0xA0A688", Offset = "0xA0A688", VA = "0xA0A688")]
	private void ResolveOnEnter(IUIInteractable interactable)
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0xA09F9C", Offset = "0xA09F9C", VA = "0xA09F9C")]
	private void ResolveOnExit(IUIInteractable interactable)
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0xA0A774", Offset = "0xA0A774", VA = "0xA0A774")]
	private void ResolveOver(IUIInteractable interactable)
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0xA0A860", Offset = "0xA0A860", VA = "0xA0A860")]
	public UIInteractionManager()
	{
	}
}
[Token(Token = "0x200001C")]
public class UIButton : MonoBehaviour, IUIPointerEnterHandler, IUIInteractable, IUIPointerExitHandler, IUIPointerDownHandler, IUIPointerUpHandler, IUIPointerClickHandler
{
	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7FB77C", Offset = "0x7FB77C")]
	public bool EnableSoundOnClick;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableSoundOnHover;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7FB7B4", Offset = "0x7FB7B4")]
	public bool EnableHapticsOnClick;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool EnableHapticsOnHover;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7FB7EC", Offset = "0x7FB7EC")]
	public bool isInteractable;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool EnableOnClick;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool EnableOnEnter;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	public bool EnableOnExit;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7FB824", Offset = "0x7FB824")]
	public bool OffsetButton;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7FB85C", Offset = "0x7FB85C")]
	public UnityEvent OnClick;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent OnEnter;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent OnExit;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Animator buttonAnimator;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool use_group;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int group;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int num;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool isclicked;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int counter;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool use_onEnable;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	public bool is_pressedable;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	public bool b_rdy1;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMeshPro tmpr_rdy1;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool b_rdy2;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TextMeshPro tmpr_rdy2;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool pre_diff_setting;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ClickScript cs;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool pre_weapon_setting;

	[Token(Token = "0x6000093")]
	[Address(RVA = "0xA039EC", Offset = "0xA039EC", VA = "0xA039EC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0xA03CD8", Offset = "0xA03CD8", VA = "0xA03CD8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0xA041D0", Offset = "0xA041D0", VA = "0xA041D0")]
	public void Update()
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0xA04360", Offset = "0xA04360", VA = "0xA04360", Slot = "8")]
	public void OnPointerClick()
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0xA04364", Offset = "0xA04364", VA = "0xA04364", Slot = "6")]
	public void OnPointerDown()
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0xA04518", Offset = "0xA04518", VA = "0xA04518", Slot = "4")]
	public void OnPointerEnter()
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0xA0461C", Offset = "0xA0461C", VA = "0xA0461C", Slot = "5")]
	public void OnPointerExit()
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0xA046F4", Offset = "0xA046F4", VA = "0xA046F4", Slot = "7")]
	public void OnPointerUp()
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0xA04784", Offset = "0xA04784", VA = "0xA04784")]
	public UIButton()
	{
	}
}
[Token(Token = "0x200001D")]
public class UIHorizontalSelector : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000323")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9638", Offset = "0x7F9638")]
	private sealed class <>c
	{
		[Token(Token = "0x4002296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Task> <>9__39_0;

		[Token(Token = "0x4002298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<Task> <>9__40_0;

		[Token(Token = "0x600175B")]
		[Address(RVA = "0xA08174", Offset = "0xA08174", VA = "0xA08174")]
		public <>c()
		{
		}

		[Token(Token = "0x600175C")]
		[Address(RVA = "0xA0817C", Offset = "0xA0817C", VA = "0xA0817C")]
		internal Task <PreviousClick>b__39_0()
		{
			return null;
		}

		[Token(Token = "0x600175D")]
		[Address(RVA = "0xA081E0", Offset = "0xA081E0", VA = "0xA081E0")]
		internal Task <ForwardClick>b__40_0()
		{
			return null;
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x2000324")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9648", Offset = "0x7F9648")]
	private struct <PreviousClick>d__39 : IAsyncStateMachine
	{
		[Token(Token = "0x4002299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x400229A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x400229B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UIHorizontalSelector <>4__this;

		[Token(Token = "0x400229C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TaskAwaiter <>u__1;

		[Token(Token = "0x600175E")]
		[Address(RVA = "0x885E4C", Offset = "0x885E4C", VA = "0x885E4C", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x600175F")]
		[Address(RVA = "0x885E54", Offset = "0x885E54", VA = "0x885E54", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x2000325")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9658", Offset = "0x7F9658")]
	private struct <ForwardClick>d__40 : IAsyncStateMachine
	{
		[Token(Token = "0x400229D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x400229E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x400229F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UIHorizontalSelector <>4__this;

		[Token(Token = "0x40022A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TaskAwaiter <>u__1;

		[Token(Token = "0x6001760")]
		[Address(RVA = "0x885E38", Offset = "0x885E38", VA = "0x885E38", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6001761")]
		[Address(RVA = "0x885E40", Offset = "0x885E40", VA = "0x885E40", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7FB894", Offset = "0x7FB894")]
	[SerializeField]
	private bool EnableSave;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[SaveID]
	private string saveID;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7FB918", Offset = "0x7FB918")]
	public bool invokeEventAtStart;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7FB950", Offset = "0x7FB950")]
	public List<string> elements;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7FB988", Offset = "0x7FB988")]
	public bool use_textures;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<Texture2D> textures;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<int> picture_count;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7FB9C0", Offset = "0x7FB9C0")]
	public UnityEventString onValueChanged;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEventInt onSelectChanged;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private TextMeshPro label;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private TextMeshPro labeHelper;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Material _weapon;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool use_playersetting1;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	public byte byte_position;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
	public bool use_group;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int group;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool use_group_if_playersetting1;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int index_modify;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool import_move_setting;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	public bool r360;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Animator selectorAnimator;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int index;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public bool use_voicechat;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
	public bool _debris;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9E")]
	public bool _effects;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9F")]
	public bool _uiquality;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool _uilanguage;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	public bool _uicolor;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
	public bool _uiregion;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Recorder recorder;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int zalchangelanguages;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private int unityMicrophoneDeviceIndex;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private string[] photonDeviceNames;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int colCount;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int rowCount;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int rowNumber;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private int colNumber;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int totalCells;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private int fps;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int animindex;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private int zalindex;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float timexPrefix;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private Vector2 offset;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private Vector2 size;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private int uIndex;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private int vIndex;

	[Token(Token = "0x17000013")]
	public string SaveID
	{
		[Token(Token = "0x600009C")]
		[Address(RVA = "0xA06DA0", Offset = "0xA06DA0", VA = "0xA06DA0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0xA06DA8", Offset = "0xA06DA8", VA = "0xA06DA8")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0xA06E00", Offset = "0xA06E00", VA = "0xA06E00")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0xA07540", Offset = "0xA07540", VA = "0xA07540")]
	public void force_change()
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0xA077CC", Offset = "0xA077CC", VA = "0xA077CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0xA07C78", Offset = "0xA07C78", VA = "0xA07C78")]
	[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x80206C", Offset = "0x80206C")]
	public void PreviousClick()
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0xA07D40", Offset = "0xA07D40", VA = "0xA07D40")]
	[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x8020D0", Offset = "0x8020D0")]
	public void ForwardClick()
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0xA07E08", Offset = "0xA07E08", VA = "0xA07E08")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0xA07F18", Offset = "0xA07F18", VA = "0xA07F18")]
	private void SetSpriteAnimation()
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0xA08014", Offset = "0xA08014", VA = "0xA08014")]
	public UIHorizontalSelector()
	{
	}
}
[Token(Token = "0x200001E")]
public class UISlider : MonoBehaviour, IUIPointerEnterHandler, IUIInteractable, IUIPointerExitHandler, IUIPointerDragHandler, ISerializationCallbackReceiver
{
	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7FB9F8", Offset = "0x7FB9F8")]
	[SerializeField]
	private bool EnableSave;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[SaveID]
	private string saveID;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7FBA7C", Offset = "0x7FBA7C")]
	public bool EnableSoundOnClick;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool EnableSoundOnHover;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7FBAB4", Offset = "0x7FBAB4")]
	public bool EnableHapticsOnClick;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	public bool EnableHapticsOnHover;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7FBAEC", Offset = "0x7FBAEC")]
	public string customSuffix;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool showValue;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool showPopupValue;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool useRoundValue;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7FBB24", Offset = "0x7FBB24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FBB24", Offset = "0x7FBB24")]
	public bool useDecibels;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7FBB84", Offset = "0x7FBB84")]
	public bool isInteractable;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7FBBBC", Offset = "0x7FBBBC")]
	public float MinValue;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float MaxValue;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float DefaultValue;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7FBBF4", Offset = "0x7FBBF4")]
	public UnityEventFloat OnValueChange;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7FBC2C", Offset = "0x7FBC2C")]
	public RectTransform Handle;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public RectTransform ContentHolder;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public RectTransform FillArea;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public SpriteRenderer FillSpriteImage;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7FBC64", Offset = "0x7FBC64")]
	public TextMeshPro valueText;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TextMeshPro popupValueText;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Animator sliderAnimator;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private RectTransform rectTransf;

	[Token(Token = "0x17000014")]
	public string SaveID
	{
		[Token(Token = "0x60000A6")]
		[Address(RVA = "0xA0B814", Offset = "0xA0B814", VA = "0xA0B814")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000015")]
	private float convertedWidth
	{
		[Token(Token = "0x60000A7")]
		[Address(RVA = "0xA0B81C", Offset = "0xA0B81C", VA = "0xA0B81C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000016")]
	private float currentPercent
	{
		[Token(Token = "0x60000A8")]
		[Address(RVA = "0xA0B860", Offset = "0xA0B860", VA = "0xA0B860")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000017")]
	private float linearSliderValue
	{
		[Token(Token = "0x60000A9")]
		[Address(RVA = "0xA0B904", Offset = "0xA0B904", VA = "0xA0B904")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000018")]
	public float SliderValue
	{
		[Token(Token = "0x60000AA")]
		[Address(RVA = "0xA0B934", Offset = "0xA0B934", VA = "0xA0B934")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000019")]
	private float sliderValueLocalPosition
	{
		[Token(Token = "0x60000AB")]
		[Address(RVA = "0xA0BA0C", Offset = "0xA0BA0C", VA = "0xA0BA0C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0xA0BA78", Offset = "0xA0BA78", VA = "0xA0BA78")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0xA0BAD0", Offset = "0xA0BAD0", VA = "0xA0BAD0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0xA0BF2C", Offset = "0xA0BF2C", VA = "0xA0BF2C", Slot = "6")]
	public void OnPointerDrag(RaycastHit hit)
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0xA0C070", Offset = "0xA0C070", VA = "0xA0C070")]
	private void MoveSliderToPosition(float value)
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0xA0BC98", Offset = "0xA0BC98", VA = "0xA0BC98")]
	private void ActivateDeactivateTexts()
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0xA0C218", Offset = "0xA0C218", VA = "0xA0C218")]
	private void ChangeValueTexts()
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0xA0C408", Offset = "0xA0C408", VA = "0xA0C408", Slot = "4")]
	public void OnPointerEnter()
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0xA0BE6C", Offset = "0xA0BE6C", VA = "0xA0BE6C")]
	public void SetValue(float value)
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0xA0C51C", Offset = "0xA0C51C", VA = "0xA0C51C", Slot = "5")]
	public void OnPointerExit()
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0xA0B97C", Offset = "0xA0B97C", VA = "0xA0B97C")]
	private float LinearToDecibel(float linear)
	{
		return default(float);
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0xA0C4AC", Offset = "0xA0C4AC", VA = "0xA0C4AC")]
	private float DecibelToLinear(float dB)
	{
		return default(float);
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0xA0C58C", Offset = "0xA0C58C", VA = "0xA0C58C")]
	public void SetValueTo(float set_this_value)
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0xA0C5E8", Offset = "0xA0C5E8", VA = "0xA0C5E8", Slot = "7")]
	public void OnBeforeSerialize()
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0xA0C5EC", Offset = "0xA0C5EC", VA = "0xA0C5EC", Slot = "8")]
	public void OnAfterDeserialize()
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xA0C5F0", Offset = "0xA0C5F0", VA = "0xA0C5F0")]
	public UISlider()
	{
	}
}
[Token(Token = "0x200001F")]
public class UISwitch : MonoBehaviour, IUIPointerDownHandler, IUIInteractable, IUIPointerClickHandler, IUIPointerEnterHandler, IUIPointerExitHandler
{
	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7FBC9C", Offset = "0x7FBC9C")]
	[SerializeField]
	private bool EnableSave;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[SaveID]
	private string saveID;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7FBD20", Offset = "0x7FBD20")]
	public bool EnableSoundOnClick;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool EnableSoundOnHover;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7FBD58", Offset = "0x7FBD58")]
	public bool EnableHapticsOnClick;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	public bool EnableHapticsOnHover;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7FBD90", Offset = "0x7FBD90")]
	public bool isInteractable;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool EnableOnClick;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
	public bool EnableOnEnter;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F")]
	public bool EnableOnExit;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7FBDC8", Offset = "0x7FBDC8")]
	[SerializeField]
	private bool isOn;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Animator switchAnimator;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7FBE14", Offset = "0x7FBE14")]
	public UnityEventBool OnSwitchChange;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent onEvent;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UnityEvent offEvent;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string onTransition;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string offTransition;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool use_playersetting1;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	public byte byte_position;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
	public bool modeswitch;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
	public bool irecolor;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool iremove;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	public bool ivoice;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
	public bool iflaten;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6F")]
	public bool iglow;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool itrans;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	public bool ilast30;

	[Token(Token = "0x1700001A")]
	public string SaveID
	{
		[Token(Token = "0x60000BB")]
		[Address(RVA = "0xA0C680", Offset = "0xA0C680", VA = "0xA0C680")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700001B")]
	public bool IsOn
	{
		[Token(Token = "0x60000BC")]
		[Address(RVA = "0xA0C688", Offset = "0xA0C688", VA = "0xA0C688")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000BD")]
		[Address(RVA = "0xA0C690", Offset = "0xA0C690", VA = "0xA0C690")]
		set
		{
		}
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0xA0C77C", Offset = "0xA0C77C", VA = "0xA0C77C")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0xA0C7D4", Offset = "0xA0C7D4", VA = "0xA0C7D4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0xA0C698", Offset = "0xA0C698", VA = "0xA0C698")]
	public void SetInstant(bool value)
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0xA0CBE0", Offset = "0xA0CBE0", VA = "0xA0CBE0")]
	public void AnimateSwitch()
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0xA0CCA4", Offset = "0xA0CCA4", VA = "0xA0CCA4", Slot = "5")]
	public void OnPointerClick()
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0xA0CCA8", Offset = "0xA0CCA8", VA = "0xA0CCA8", Slot = "4")]
	public void OnPointerDown()
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0xA0CD98", Offset = "0xA0CD98", VA = "0xA0CD98", Slot = "6")]
	public void OnPointerEnter()
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0xA0CE70", Offset = "0xA0CE70", VA = "0xA0CE70", Slot = "7")]
	public void OnPointerExit()
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0xA0CEA8", Offset = "0xA0CEA8", VA = "0xA0CEA8")]
	public UISwitch()
	{
	}
}
[Token(Token = "0x2000020")]
public class UITooltip : MonoBehaviour, IUIPointerEnterHandler, IUIInteractable, IUIPointerExitHandler
{
	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7FBE4C", Offset = "0x7FBE4C")]
	public string title;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x7FBE84", Offset = "0x7FBE84")]
	public string description;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7FBE94", Offset = "0x7FBE94")]
	private UITooltip_Prefab TooltipObject;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Animator mouseAnimator;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private BoxCollider boxCollider;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool moveleft;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool movedown;

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0xA0CF2C", Offset = "0xA0CF2C", VA = "0xA0CF2C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0xA0CFF8", Offset = "0xA0CFF8", VA = "0xA0CFF8", Slot = "4")]
	public void OnPointerEnter()
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0xA0D200", Offset = "0xA0D200", VA = "0xA0D200", Slot = "5")]
	public void OnPointerExit()
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0xA0D2CC", Offset = "0xA0D2CC", VA = "0xA0D2CC")]
	public UITooltip()
	{
	}
}
[Token(Token = "0x2000021")]
public static class UtilityScripts
{
	[Token(Token = "0x60000CB")]
	[Address(RVA = "0xAB4FD8", Offset = "0xAB4FD8", VA = "0xAB4FD8")]
	public static float Remap(this float x, float x1, float x2, float y1, float y2)
	{
		return default(float);
	}
}
[Token(Token = "0x2000022")]
public class RotateCamera : MonoBehaviour
{
	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float MouseRotateSpeed;

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0xA4E258", Offset = "0xA4E258", VA = "0xA4E258")]
	private void Start()
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0xA4E25C", Offset = "0xA4E25C", VA = "0xA4E25C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0xA4E3B4", Offset = "0xA4E3B4", VA = "0xA4E3B4")]
	public RotateCamera()
	{
	}
}
[Token(Token = "0x2000023")]
public class AnimationScript : MonoBehaviour
{
	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isAnimated;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool isRotating;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool isFloating;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool isScaling;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 rotationAngle;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float rotationSpeed;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float floatSpeed;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool goingUp;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float floatRate;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float floatTimer;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 startScale;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 endScale;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool scalingUp;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float scaleSpeed;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float scaleRate;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float scaleTimer;

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0xA34468", Offset = "0xA34468", VA = "0xA34468")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0xA3446C", Offset = "0xA3446C", VA = "0xA3446C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0xA34718", Offset = "0xA34718", VA = "0xA34718")]
	public AnimationScript()
	{
	}
}
[Token(Token = "0x2000024")]
public class LightningBolt : MonoBehaviour
{
	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject obj1;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject obj2;

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0xA127FC", Offset = "0xA127FC", VA = "0xA127FC")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0xA12800", Offset = "0xA12800", VA = "0xA12800")]
	private void Update()
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0xA12918", Offset = "0xA12918", VA = "0xA12918")]
	public LightningBolt()
	{
	}
}
[Token(Token = "0x2000025")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x7F5B6C", Offset = "0x7F5B6C")]
public class DrawIfAttribute : PropertyAttribute
{
	[Token(Token = "0x2000326")]
	public enum DisablingType
	{
		[Token(Token = "0x40022A2")]
		ReadOnly = 2,
		[Token(Token = "0x40022A3")]
		DontDraw
	}

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7FBECC", Offset = "0x7FBECC")]
	private string <comparedPropertyName>k__BackingField;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7FBEDC", Offset = "0x7FBEDC")]
	private object <comparedValue>k__BackingField;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7FBEEC", Offset = "0x7FBEEC")]
	private DisablingType <disablingType>k__BackingField;

	[Token(Token = "0x1700001C")]
	public string comparedPropertyName
	{
		[Token(Token = "0x60000D5")]
		[Address(RVA = "0xA8DC20", Offset = "0xA8DC20", VA = "0xA8DC20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x802144", Offset = "0x802144")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000D6")]
		[Address(RVA = "0xA8DC28", Offset = "0xA8DC28", VA = "0xA8DC28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x802154", Offset = "0x802154")]
		private set
		{
		}
	}

	[Token(Token = "0x1700001D")]
	public object comparedValue
	{
		[Token(Token = "0x60000D7")]
		[Address(RVA = "0xA8DC30", Offset = "0xA8DC30", VA = "0xA8DC30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x802164", Offset = "0x802164")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000D8")]
		[Address(RVA = "0xA8DC38", Offset = "0xA8DC38", VA = "0xA8DC38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x802174", Offset = "0x802174")]
		private set
		{
		}
	}

	[Token(Token = "0x1700001E")]
	public DisablingType disablingType
	{
		[Token(Token = "0x60000D9")]
		[Address(RVA = "0xA8DC40", Offset = "0xA8DC40", VA = "0xA8DC40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x802184", Offset = "0x802184")]
		get
		{
			return default(DisablingType);
		}
		[Token(Token = "0x60000DA")]
		[Address(RVA = "0xA8DC48", Offset = "0xA8DC48", VA = "0xA8DC48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x802194", Offset = "0x802194")]
		private set
		{
		}
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0xA8DC50", Offset = "0xA8DC50", VA = "0xA8DC50")]
	public DrawIfAttribute(string comparedPropertyName, object comparedValue, DisablingType disablingType = DisablingType.DontDraw)
	{
	}
}
[Token(Token = "0x2000026")]
public class ReactingLights : MonoBehaviour
{
	[Token(Token = "0x2000327")]
	public enum VideoSide
	{
		[Token(Token = "0x40022A5")]
		up,
		[Token(Token = "0x40022A6")]
		left,
		[Token(Token = "0x40022A7")]
		right,
		[Token(Token = "0x40022A8")]
		down,
		[Token(Token = "0x40022A9")]
		center
	}

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VideoPlayer videoSource;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Light[] lights;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color averageColor;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Texture2D tex;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public VideoSide videoSide;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool createTexture;

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0xA45FAC", Offset = "0xA45FAC", VA = "0xA45FAC")]
	private void Start()
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0xA46050", Offset = "0xA46050", VA = "0xA46050")]
	private void NewFrame(VideoPlayer vplayer, long frame)
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0xA46698", Offset = "0xA46698", VA = "0xA46698")]
	private Color32 AverageColorFromTexture(Texture2D tex)
	{
		return default(Color32);
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0xA4679C", Offset = "0xA4679C", VA = "0xA4679C")]
	public ReactingLights()
	{
	}
}
[Token(Token = "0x2000027")]
public static class UISetExtensions
{
	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly MethodInfo toggleSetMethod;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly MethodInfo sliderSetMethod;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly MethodInfo scrollbarSetMethod;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly FieldInfo dropdownValueField;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly MethodInfo dropdownRefreshMethod;

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0xA0B098", Offset = "0xA0B098", VA = "0xA0B098")]
	static UISetExtensions()
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0xA0B314", Offset = "0xA0B314", VA = "0xA0B314")]
	public static void Set(this Toggle instance, bool value, bool sendCallback = false)
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0xA0B474", Offset = "0xA0B474", VA = "0xA0B474")]
	public static void Set(this Slider instance, float value, bool sendCallback = false)
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0xA0B5E4", Offset = "0xA0B5E4", VA = "0xA0B5E4")]
	public static void Set(this Scrollbar instance, float value, bool sendCallback = false)
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0xA0B754", Offset = "0xA0B754", VA = "0xA0B754")]
	public static void Set(this Dropdown instance, int value)
	{
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0xA0B1E8", Offset = "0xA0B1E8", VA = "0xA0B1E8")]
	private static MethodInfo FindSetMethod(Type objectType)
	{
		return null;
	}
}
[Token(Token = "0x2000028")]
public class JsonNetSample : MonoBehaviour
{
	[Token(Token = "0x2000328")]
	public class Product
	{
		[Token(Token = "0x40022AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x40022AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DateTime ExpiryDate;

		[Token(Token = "0x40022AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public decimal Price;

		[Token(Token = "0x40022AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string[] Sizes;

		[Token(Token = "0x6001762")]
		[Address(RVA = "0x9AA950", Offset = "0x9AA950", VA = "0x9AA950", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001763")]
		[Address(RVA = "0x9AAAA0", Offset = "0x9AAAA0", VA = "0x9AAAA0", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001764")]
		[Address(RVA = "0x9AA820", Offset = "0x9AA820", VA = "0x9AA820")]
		public Product()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000329")]
	public class CharacterListItem
	{
		[Token(Token = "0x40022AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x801D10", Offset = "0x801D10")]
		private int <Id>k__BackingField;

		[Token(Token = "0x40022AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x801D20", Offset = "0x801D20")]
		private string <Name>k__BackingField;

		[Token(Token = "0x40022B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x801D30", Offset = "0x801D30")]
		private int <Level>k__BackingField;

		[Token(Token = "0x40022B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x801D40", Offset = "0x801D40")]
		private string <Class>k__BackingField;

		[Token(Token = "0x40022B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x801D50", Offset = "0x801D50")]
		private string <Sex>k__BackingField;

		[Token(Token = "0x170002BE")]
		public int Id
		{
			[Token(Token = "0x6001765")]
			[Address(RVA = "0x9AA88C", Offset = "0x9AA88C", VA = "0x9AA88C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x805488", Offset = "0x805488")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001766")]
			[Address(RVA = "0x9AA894", Offset = "0x9AA894", VA = "0x9AA894")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x805498", Offset = "0x805498")]
			set
			{
			}
		}

		[Token(Token = "0x170002BF")]
		public string Name
		{
			[Token(Token = "0x6001767")]
			[Address(RVA = "0x9AA89C", Offset = "0x9AA89C", VA = "0x9AA89C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8054A8", Offset = "0x8054A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001768")]
			[Address(RVA = "0x9AA8A4", Offset = "0x9AA8A4", VA = "0x9AA8A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8054B8", Offset = "0x8054B8")]
			set
			{
			}
		}

		[Token(Token = "0x170002C0")]
		public int Level
		{
			[Token(Token = "0x6001769")]
			[Address(RVA = "0x9AA8AC", Offset = "0x9AA8AC", VA = "0x9AA8AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8054C8", Offset = "0x8054C8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600176A")]
			[Address(RVA = "0x9AA8B4", Offset = "0x9AA8B4", VA = "0x9AA8B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8054D8", Offset = "0x8054D8")]
			set
			{
			}
		}

		[Token(Token = "0x170002C1")]
		public string Class
		{
			[Token(Token = "0x600176B")]
			[Address(RVA = "0x9AA8BC", Offset = "0x9AA8BC", VA = "0x9AA8BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8054E8", Offset = "0x8054E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600176C")]
			[Address(RVA = "0x9AA8C4", Offset = "0x9AA8C4", VA = "0x9AA8C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8054F8", Offset = "0x8054F8")]
			set
			{
			}
		}

		[Token(Token = "0x170002C2")]
		public string Sex
		{
			[Token(Token = "0x600176D")]
			[Address(RVA = "0x9AA8CC", Offset = "0x9AA8CC", VA = "0x9AA8CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x805508", Offset = "0x805508")]
			get
			{
				return null;
			}
			[Token(Token = "0x600176E")]
			[Address(RVA = "0x9AA8D4", Offset = "0x9AA8D4", VA = "0x9AA8D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x805518", Offset = "0x805518")]
			set
			{
			}
		}

		[Token(Token = "0x600176F")]
		[Address(RVA = "0x9AA8DC", Offset = "0x9AA8DC", VA = "0x9AA8DC")]
		public CharacterListItem()
		{
		}
	}

	[Token(Token = "0x200032A")]
	public class Movie
	{
		[Token(Token = "0x40022B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x801D60", Offset = "0x801D60")]
		private string <Name>k__BackingField;

		[Token(Token = "0x40022B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x801D70", Offset = "0x801D70")]
		private string <Description>k__BackingField;

		[Token(Token = "0x40022B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x801D80", Offset = "0x801D80")]
		private string <Classification>k__BackingField;

		[Token(Token = "0x40022B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x801D90", Offset = "0x801D90")]
		private string <Studio>k__BackingField;

		[Token(Token = "0x40022B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x801DA0", Offset = "0x801DA0")]
		private DateTime? <ReleaseDate>k__BackingField;

		[Token(Token = "0x40022B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x801DB0", Offset = "0x801DB0")]
		private List<string> <ReleaseCountries>k__BackingField;

		[Token(Token = "0x170002C3")]
		public string Name
		{
			[Token(Token = "0x6001770")]
			[Address(RVA = "0x9AA8E4", Offset = "0x9AA8E4", VA = "0x9AA8E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x805528", Offset = "0x805528")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001771")]
			[Address(RVA = "0x9AA8EC", Offset = "0x9AA8EC", VA = "0x9AA8EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x805538", Offset = "0x805538")]
			set
			{
			}
		}

		[Token(Token = "0x170002C4")]
		public string Description
		{
			[Token(Token = "0x6001772")]
			[Address(RVA = "0x9AA8F4", Offset = "0x9AA8F4", VA = "0x9AA8F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x805548", Offset = "0x805548")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001773")]
			[Address(RVA = "0x9AA8FC", Offset = "0x9AA8FC", VA = "0x9AA8FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x805558", Offset = "0x805558")]
			set
			{
			}
		}

		[Token(Token = "0x170002C5")]
		public string Classification
		{
			[Token(Token = "0x6001774")]
			[Address(RVA = "0x9AA904", Offset = "0x9AA904", VA = "0x9AA904")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x805568", Offset = "0x805568")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001775")]
			[Address(RVA = "0x9AA90C", Offset = "0x9AA90C", VA = "0x9AA90C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x805578", Offset = "0x805578")]
			set
			{
			}
		}

		[Token(Token = "0x170002C6")]
		public string Studio
		{
			[Token(Token = "0x6001776")]
			[Address(RVA = "0x9AA914", Offset = "0x9AA914", VA = "0x9AA914")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x805588", Offset = "0x805588")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001777")]
			[Address(RVA = "0x9AA91C", Offset = "0x9AA91C", VA = "0x9AA91C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x805598", Offset = "0x805598")]
			set
			{
			}
		}

		[Token(Token = "0x170002C7")]
		public DateTime? ReleaseDate
		{
			[Token(Token = "0x6001778")]
			[Address(RVA = "0x9AA924", Offset = "0x9AA924", VA = "0x9AA924")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8055A8", Offset = "0x8055A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001779")]
			[Address(RVA = "0x9AA930", Offset = "0x9AA930", VA = "0x9AA930")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8055B8", Offset = "0x8055B8")]
			set
			{
			}
		}

		[Token(Token = "0x170002C8")]
		public List<string> ReleaseCountries
		{
			[Token(Token = "0x600177A")]
			[Address(RVA = "0x9AA938", Offset = "0x9AA938", VA = "0x9AA938")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8055C8", Offset = "0x8055C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600177B")]
			[Address(RVA = "0x9AA940", Offset = "0x9AA940", VA = "0x9AA940")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8055D8", Offset = "0x8055D8")]
			set
			{
			}
		}

		[Token(Token = "0x600177C")]
		[Address(RVA = "0x9AA948", Offset = "0x9AA948", VA = "0x9AA948")]
		public Movie()
		{
		}
	}

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Output;

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x9A9FA4", Offset = "0x9A9FA4", VA = "0x9A9FA4")]
	private void Start()
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0x9AA784", Offset = "0x9AA784", VA = "0x9AA784")]
	private void WriteLine(string msg)
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x9AA044", Offset = "0x9AA044", VA = "0x9AA044")]
	private void TestJson()
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x9AA128", Offset = "0x9AA128", VA = "0x9AA128")]
	private void SerailizeJson()
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x9AA284", Offset = "0x9AA284", VA = "0x9AA284")]
	private void DeserializeJson()
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x9AA324", Offset = "0x9AA324", VA = "0x9AA324")]
	private void LinqToJson()
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x9AA47C", Offset = "0x9AA47C", VA = "0x9AA47C")]
	private void JsonPath()
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x9AA884", Offset = "0x9AA884", VA = "0x9AA884")]
	public JsonNetSample()
	{
	}
}
[Token(Token = "0x2000029")]
public class YT_RotateCamera : MonoBehaviour
{
	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speedH;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float speedV;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float yaw;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float pitch;

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x1287BC0", Offset = "0x1287BC0", VA = "0x1287BC0")]
	private void Update()
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x1287CB4", Offset = "0x1287CB4", VA = "0x1287CB4")]
	public YT_RotateCamera()
	{
	}
}
[Token(Token = "0x200002A")]
public class YoutubeLogo : MonoBehaviour
{
	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string youtubeurl;

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x128A7D0", Offset = "0x128A7D0", VA = "0x128A7D0")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x128A7DC", Offset = "0x128A7DC", VA = "0x128A7DC")]
	public YoutubeLogo()
	{
	}
}
[Token(Token = "0x200002B")]
public class YoutubePlayer : MonoBehaviour
{
	[Token(Token = "0x200032B")]
	public enum YoutubeVideoQuality
	{
		[Token(Token = "0x40022BA")]
		STANDARD,
		[Token(Token = "0x40022BB")]
		HD,
		[Token(Token = "0x40022BC")]
		FULLHD,
		[Token(Token = "0x40022BD")]
		UHD1440,
		[Token(Token = "0x40022BE")]
		UHD2160
	}

	[Token(Token = "0x200032C")]
	public enum Layout3D
	{
		[Token(Token = "0x40022C0")]
		sideBySide,
		[Token(Token = "0x40022C1")]
		OverUnder
	}

	[Token(Token = "0x200032D")]
	public class YoutubeResultIds
	{
		[Token(Token = "0x40022C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string lowQuality;

		[Token(Token = "0x40022C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string standardQuality;

		[Token(Token = "0x40022C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string mediumQuality;

		[Token(Token = "0x40022C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string hdQuality;

		[Token(Token = "0x40022C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string fullHdQuality;

		[Token(Token = "0x40022C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string ultraHdQuality;

		[Token(Token = "0x40022C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string bestFormatWithAudioIncluded;

		[Token(Token = "0x40022C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string audioUrl;

		[Token(Token = "0x600177D")]
		[Address(RVA = "0x12942E0", Offset = "0x12942E0", VA = "0x12942E0")]
		public YoutubeResultIds()
		{
		}
	}

	[Token(Token = "0x200032E")]
	public class Html5PlayerResult
	{
		[Token(Token = "0x40022CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string scriptName;

		[Token(Token = "0x40022CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string result;

		[Token(Token = "0x40022CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isValid;

		[Token(Token = "0x600177E")]
		[Address(RVA = "0x1294D6C", Offset = "0x1294D6C", VA = "0x1294D6C")]
		public Html5PlayerResult(string _script, string _result, bool _valid)
		{
		}
	}

	[Token(Token = "0x200032F")]
	private class DownloadUrlResponse
	{
		[Token(Token = "0x40022CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string data;

		[Token(Token = "0x40022CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isValid;

		[Token(Token = "0x40022CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public long httpCode;

		[Token(Token = "0x600177F")]
		[Address(RVA = "0x1292598", Offset = "0x1292598", VA = "0x1292598")]
		public DownloadUrlResponse()
		{
		}
	}

	[Token(Token = "0x2000330")]
	private class ExtractionInfo
	{
		[Token(Token = "0x40022D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x801DC0", Offset = "0x801DC0")]
		private bool <RequiresDecryption>k__BackingField;

		[Token(Token = "0x40022D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x801DD0", Offset = "0x801DD0")]
		private Uri <Uri>k__BackingField;

		[Token(Token = "0x170002C9")]
		public bool RequiresDecryption
		{
			[Token(Token = "0x6001780")]
			[Address(RVA = "0x1294D48", Offset = "0x1294D48", VA = "0x1294D48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8055E8", Offset = "0x8055E8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001781")]
			[Address(RVA = "0x1294D50", Offset = "0x1294D50", VA = "0x1294D50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8055F8", Offset = "0x8055F8")]
			set
			{
			}
		}

		[Token(Token = "0x170002CA")]
		public Uri Uri
		{
			[Token(Token = "0x6001782")]
			[Address(RVA = "0x1294D5C", Offset = "0x1294D5C", VA = "0x1294D5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x805608", Offset = "0x805608")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001783")]
			[Address(RVA = "0x1294D64", Offset = "0x1294D64", VA = "0x1294D64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x805618", Offset = "0x805618")]
			set
			{
			}
		}

		[Token(Token = "0x6001784")]
		[Address(RVA = "0x1292F20", Offset = "0x1292F20", VA = "0x1292F20")]
		public ExtractionInfo()
		{
		}
	}

	[Token(Token = "0x2000331")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9668", Offset = "0x7F9668")]
	private sealed class <DownloadThumbnail>d__51 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40022D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40022D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40022D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string videoId;

		[Token(Token = "0x40022D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public YoutubePlayer <>4__this;

		[Token(Token = "0x40022D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WWW <www>5__2;

		[Token(Token = "0x170002CB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001788")]
			[Address(RVA = "0x1291FD0", Offset = "0x1291FD0", VA = "0x1291FD0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600178A")]
			[Address(RVA = "0x129203C", Offset = "0x129203C", VA = "0x129203C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001785")]
		[Address(RVA = "0x128AE2C", Offset = "0x128AE2C", VA = "0x128AE2C")]
		[DebuggerHidden]
		public <DownloadThumbnail>d__51(int <>1__state)
		{
		}

		[Token(Token = "0x6001786")]
		[Address(RVA = "0x1291EB0", Offset = "0x1291EB0", VA = "0x1291EB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001787")]
		[Address(RVA = "0x1291EB4", Offset = "0x1291EB4", VA = "0x1291EB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001789")]
		[Address(RVA = "0x1291FD8", Offset = "0x1291FD8", VA = "0x1291FD8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000332")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9678", Offset = "0x7F9678")]
	private sealed class <WaitThingsGetDone>d__59 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40022D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40022D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40022D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public YoutubePlayer <>4__this;

		[Token(Token = "0x170002CD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600178E")]
			[Address(RVA = "0x129396C", Offset = "0x129396C", VA = "0x129396C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001790")]
			[Address(RVA = "0x12939D8", Offset = "0x12939D8", VA = "0x12939D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600178B")]
		[Address(RVA = "0x128B170", Offset = "0x128B170", VA = "0x128B170")]
		[DebuggerHidden]
		public <WaitThingsGetDone>d__59(int <>1__state)
		{
		}

		[Token(Token = "0x600178C")]
		[Address(RVA = "0x129385C", Offset = "0x129385C", VA = "0x129385C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600178D")]
		[Address(RVA = "0x1293860", Offset = "0x1293860", VA = "0x1293860", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600178F")]
		[Address(RVA = "0x1293974", Offset = "0x1293974", VA = "0x1293974", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000333")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9688", Offset = "0x7F9688")]
	private sealed class <HandHeldPlayback>d__79 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40022DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40022DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40022DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public YoutubePlayer <>4__this;

		[Token(Token = "0x170002CF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001794")]
			[Address(RVA = "0x1293130", Offset = "0x1293130", VA = "0x1293130", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001796")]
			[Address(RVA = "0x129319C", Offset = "0x129319C", VA = "0x129319C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001791")]
		[Address(RVA = "0x128D680", Offset = "0x128D680", VA = "0x128D680")]
		[DebuggerHidden]
		public <HandHeldPlayback>d__79(int <>1__state)
		{
		}

		[Token(Token = "0x6001792")]
		[Address(RVA = "0x1293050", Offset = "0x1293050", VA = "0x1293050", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001793")]
		[Address(RVA = "0x1293054", Offset = "0x1293054", VA = "0x1293054", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001795")]
		[Address(RVA = "0x1293138", Offset = "0x1293138", VA = "0x1293138", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000334")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9698", Offset = "0x7F9698")]
	private sealed class <WebRequest>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40022DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40022DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40022DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string videoID;

		[Token(Token = "0x40022E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public YoutubePlayer <>4__this;

		[Token(Token = "0x40022E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WWW <request>5__2;

		[Token(Token = "0x170002D1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600179A")]
			[Address(RVA = "0x1294CD4", Offset = "0x1294CD4", VA = "0x1294CD4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600179C")]
			[Address(RVA = "0x1294D40", Offset = "0x1294D40", VA = "0x1294D40", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001797")]
		[Address(RVA = "0x128D738", Offset = "0x128D738", VA = "0x128D738")]
		[DebuggerHidden]
		public <WebRequest>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x6001798")]
		[Address(RVA = "0x1294524", Offset = "0x1294524", VA = "0x1294524", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001799")]
		[Address(RVA = "0x1294528", Offset = "0x1294528", VA = "0x1294528", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600179B")]
		[Address(RVA = "0x1294CDC", Offset = "0x1294CDC", VA = "0x1294CDC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000335")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F96A8", Offset = "0x7F96A8")]
	private sealed class <SeekFinished>d__121 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40022E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40022E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40022E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public YoutubePlayer <>4__this;

		[Token(Token = "0x170002D3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017A0")]
			[Address(RVA = "0x12936A8", Offset = "0x12936A8", VA = "0x12936A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017A2")]
			[Address(RVA = "0x1293714", Offset = "0x1293714", VA = "0x1293714", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600179D")]
		[Address(RVA = "0x128E4AC", Offset = "0x128E4AC", VA = "0x128E4AC")]
		[DebuggerHidden]
		public <SeekFinished>d__121(int <>1__state)
		{
		}

		[Token(Token = "0x600179E")]
		[Address(RVA = "0x1293604", Offset = "0x1293604", VA = "0x1293604", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600179F")]
		[Address(RVA = "0x1293608", Offset = "0x1293608", VA = "0x1293608", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017A1")]
		[Address(RVA = "0x12936B0", Offset = "0x12936B0", VA = "0x12936B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000336")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F96B8", Offset = "0x7F96B8")]
	private sealed class <Downloader>d__127 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40022E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40022E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40022E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string uri;

		[Token(Token = "0x40022E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public YoutubePlayer <>4__this;

		[Token(Token = "0x40022E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool audio;

		[Token(Token = "0x40022EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UnityWebRequest <request>5__2;

		[Token(Token = "0x170002D5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017A6")]
			[Address(RVA = "0x1292738", Offset = "0x1292738", VA = "0x1292738", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017A8")]
			[Address(RVA = "0x12927A4", Offset = "0x12927A4", VA = "0x12927A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017A3")]
		[Address(RVA = "0x1290074", Offset = "0x1290074", VA = "0x1290074")]
		[DebuggerHidden]
		public <Downloader>d__127(int <>1__state)
		{
		}

		[Token(Token = "0x60017A4")]
		[Address(RVA = "0x129263C", Offset = "0x129263C", VA = "0x129263C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017A5")]
		[Address(RVA = "0x1292640", Offset = "0x1292640", VA = "0x1292640", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017A7")]
		[Address(RVA = "0x1292740", Offset = "0x1292740", VA = "0x1292740", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000337")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F96C8", Offset = "0x7F96C8")]
	private sealed class <WebGlRequest>d__129 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40022EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40022EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40022ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string videoID;

		[Token(Token = "0x40022EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public YoutubePlayer <>4__this;

		[Token(Token = "0x40022EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WWW <request>5__2;

		[Token(Token = "0x170002D7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017AC")]
			[Address(RVA = "0x12942E8", Offset = "0x12942E8", VA = "0x12942E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017AE")]
			[Address(RVA = "0x1294354", Offset = "0x1294354", VA = "0x1294354", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017A9")]
		[Address(RVA = "0x1290120", Offset = "0x1290120", VA = "0x1290120")]
		[DebuggerHidden]
		public <WebGlRequest>d__129(int <>1__state)
		{
		}

		[Token(Token = "0x60017AA")]
		[Address(RVA = "0x1293AFC", Offset = "0x1293AFC", VA = "0x1293AFC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017AB")]
		[Address(RVA = "0x1293B00", Offset = "0x1293B00", VA = "0x1293B00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017AD")]
		[Address(RVA = "0x12942F0", Offset = "0x12942F0", VA = "0x12942F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000338")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F96D8", Offset = "0x7F96D8")]
	private sealed class <WebGLPlay>d__132 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40022F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40022F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40022F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public YoutubePlayer <>4__this;

		[Token(Token = "0x170002D9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017B2")]
			[Address(RVA = "0x1293A88", Offset = "0x1293A88", VA = "0x1293A88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017B4")]
			[Address(RVA = "0x1293AF4", Offset = "0x1293AF4", VA = "0x1293AF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017AF")]
		[Address(RVA = "0x129037C", Offset = "0x129037C", VA = "0x129037C")]
		[DebuggerHidden]
		public <WebGLPlay>d__132(int <>1__state)
		{
		}

		[Token(Token = "0x60017B0")]
		[Address(RVA = "0x12939E0", Offset = "0x12939E0", VA = "0x12939E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017B1")]
		[Address(RVA = "0x12939E4", Offset = "0x12939E4", VA = "0x12939E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017B3")]
		[Address(RVA = "0x1293A90", Offset = "0x1293A90", VA = "0x1293A90", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000339")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F96E8", Offset = "0x7F96E8")]
	private sealed class <WebGlRequest>d__158 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40022F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40022F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40022F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string host;

		[Token(Token = "0x40022F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string id;

		[Token(Token = "0x40022F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<string> callback;

		[Token(Token = "0x40022F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private WWW <request>5__2;

		[Token(Token = "0x170002DB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017B8")]
			[Address(RVA = "0x12944B0", Offset = "0x12944B0", VA = "0x12944B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017BA")]
			[Address(RVA = "0x129451C", Offset = "0x129451C", VA = "0x129451C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017B5")]
		[Address(RVA = "0x1290674", Offset = "0x1290674", VA = "0x1290674")]
		[DebuggerHidden]
		public <WebGlRequest>d__158(int <>1__state)
		{
		}

		[Token(Token = "0x60017B6")]
		[Address(RVA = "0x129435C", Offset = "0x129435C", VA = "0x129435C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017B7")]
		[Address(RVA = "0x1294360", Offset = "0x1294360", VA = "0x1294360", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017B9")]
		[Address(RVA = "0x12944B8", Offset = "0x12944B8", VA = "0x12944B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200033A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F96F8", Offset = "0x7F96F8")]
	private sealed class <ExtractDownloadUrls>d__163 : IEnumerable<ExtractionInfo>, IEnumerable, IEnumerator<ExtractionInfo>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40022F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40022FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ExtractionInfo <>2__current;

		[Token(Token = "0x40022FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x40022FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private JObject json;

		[Token(Token = "0x40022FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public JObject <>3__json;

		[Token(Token = "0x40022FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string[] <>7__wrap1;

		[Token(Token = "0x40022FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int <>7__wrap2;

		[Token(Token = "0x170002DD")]
		private ExtractionInfo System.Collections.Generic.IEnumerator<YoutubePlayer.ExtractionInfo>.Current
		{
			[Token(Token = "0x60017BE")]
			[Address(RVA = "0x1292F28", Offset = "0x1292F28", VA = "0x1292F28", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017C0")]
			[Address(RVA = "0x1292F94", Offset = "0x1292F94", VA = "0x1292F94", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017BB")]
		[Address(RVA = "0x12915A8", Offset = "0x12915A8", VA = "0x12915A8")]
		[DebuggerHidden]
		public <ExtractDownloadUrls>d__163(int <>1__state)
		{
		}

		[Token(Token = "0x60017BC")]
		[Address(RVA = "0x12927AC", Offset = "0x12927AC", VA = "0x12927AC", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017BD")]
		[Address(RVA = "0x12927B0", Offset = "0x12927B0", VA = "0x12927B0", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017BF")]
		[Address(RVA = "0x1292F30", Offset = "0x1292F30", VA = "0x1292F30", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x60017C1")]
		[Address(RVA = "0x1292F9C", Offset = "0x1292F9C", VA = "0x1292F9C", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<ExtractionInfo> System.Collections.Generic.IEnumerable<YoutubePlayer.ExtractionInfo>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60017C2")]
		[Address(RVA = "0x129304C", Offset = "0x129304C", VA = "0x129304C", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x200033B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9708", Offset = "0x7F9708")]
	private sealed class <>c__DisplayClass168_0
	{
		[Token(Token = "0x4002300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int formatCode;

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0x129179C", Offset = "0x129179C", VA = "0x129179C")]
		public <>c__DisplayClass168_0()
		{
		}

		[Token(Token = "0x60017C4")]
		[Address(RVA = "0x1291E88", Offset = "0x1291E88", VA = "0x1291E88")]
		internal bool <GetVideoInfos>b__0(VideoInfo videoInfo)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200033C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9718", Offset = "0x7F9718")]
	private sealed class <DownloadUrl>d__175 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string url;

		[Token(Token = "0x4002304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityWebRequest <request>5__2;

		[Token(Token = "0x170002DF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017C8")]
			[Address(RVA = "0x1292224", Offset = "0x1292224", VA = "0x1292224", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017CA")]
			[Address(RVA = "0x1292290", Offset = "0x1292290", VA = "0x1292290", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017C5")]
		[Address(RVA = "0x1291818", Offset = "0x1291818", VA = "0x1291818")]
		[DebuggerHidden]
		public <DownloadUrl>d__175(int <>1__state)
		{
		}

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0x1292044", Offset = "0x1292044", VA = "0x1292044", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017C7")]
		[Address(RVA = "0x1292048", Offset = "0x1292048", VA = "0x1292048", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017C9")]
		[Address(RVA = "0x129222C", Offset = "0x129222C", VA = "0x129222C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200033D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9728", Offset = "0x7F9728")]
	private sealed class <DownloadYoutubeUrl>d__176 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public YoutubePlayer <>4__this;

		[Token(Token = "0x4002308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string url;

		[Token(Token = "0x4002309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action callback;

		[Token(Token = "0x400230A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public YoutubePlayer player;

		[Token(Token = "0x400230B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UnityWebRequest <request>5__2;

		[Token(Token = "0x170002E1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017CE")]
			[Address(RVA = "0x12925C8", Offset = "0x12925C8", VA = "0x12925C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017D0")]
			[Address(RVA = "0x1292634", Offset = "0x1292634", VA = "0x1292634", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017CB")]
		[Address(RVA = "0x1291844", Offset = "0x1291844", VA = "0x1291844")]
		[DebuggerHidden]
		public <DownloadYoutubeUrl>d__176(int <>1__state)
		{
		}

		[Token(Token = "0x60017CC")]
		[Address(RVA = "0x1292298", Offset = "0x1292298", VA = "0x1292298", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017CD")]
		[Address(RVA = "0x129229C", Offset = "0x129229C", VA = "0x129229C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017CF")]
		[Address(RVA = "0x12925D0", Offset = "0x12925D0", VA = "0x12925D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200033E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9738", Offset = "0x7F9738")]
	private sealed class <VideoSeekCall>d__181 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400230C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400230D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400230E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public YoutubePlayer <>4__this;

		[Token(Token = "0x170002E3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017D4")]
			[Address(RVA = "0x12937E8", Offset = "0x12937E8", VA = "0x12937E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017D6")]
			[Address(RVA = "0x1293854", Offset = "0x1293854", VA = "0x1293854", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0x1291A3C", Offset = "0x1291A3C", VA = "0x1291A3C")]
		[DebuggerHidden]
		public <VideoSeekCall>d__181(int <>1__state)
		{
		}

		[Token(Token = "0x60017D2")]
		[Address(RVA = "0x129371C", Offset = "0x129371C", VA = "0x129371C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017D3")]
		[Address(RVA = "0x1293720", Offset = "0x1293720", VA = "0x1293720", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017D5")]
		[Address(RVA = "0x12937F0", Offset = "0x12937F0", VA = "0x12937F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200033F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9748", Offset = "0x7F9748")]
	private sealed class <PlayNow>d__186 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400230F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public YoutubePlayer <>4__this;

		[Token(Token = "0x170002E5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017DA")]
			[Address(RVA = "0x12932F8", Offset = "0x12932F8", VA = "0x12932F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017DC")]
			[Address(RVA = "0x1293364", Offset = "0x1293364", VA = "0x1293364", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017D7")]
		[Address(RVA = "0x1291BE0", Offset = "0x1291BE0", VA = "0x1291BE0")]
		[DebuggerHidden]
		public <PlayNow>d__186(int <>1__state)
		{
		}

		[Token(Token = "0x60017D8")]
		[Address(RVA = "0x12931A4", Offset = "0x12931A4", VA = "0x12931A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017D9")]
		[Address(RVA = "0x12931A8", Offset = "0x12931A8", VA = "0x12931A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017DB")]
		[Address(RVA = "0x1293300", Offset = "0x1293300", VA = "0x1293300", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000340")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9758", Offset = "0x7F9758")]
	private sealed class <ReleaseDrop>d__188 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public YoutubePlayer <>4__this;

		[Token(Token = "0x170002E7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017E0")]
			[Address(RVA = "0x1293590", Offset = "0x1293590", VA = "0x1293590", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017E2")]
			[Address(RVA = "0x12935FC", Offset = "0x12935FC", VA = "0x12935FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017DD")]
		[Address(RVA = "0x1291DA8", Offset = "0x1291DA8", VA = "0x1291DA8")]
		[DebuggerHidden]
		public <ReleaseDrop>d__188(int <>1__state)
		{
		}

		[Token(Token = "0x60017DE")]
		[Address(RVA = "0x12934DC", Offset = "0x12934DC", VA = "0x12934DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017DF")]
		[Address(RVA = "0x12934E0", Offset = "0x12934E0", VA = "0x12934E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017E1")]
		[Address(RVA = "0x1293598", Offset = "0x1293598", VA = "0x1293598", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000341")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9768", Offset = "0x7F9768")]
	private sealed class <PlayNowFromTime>d__189 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x4002318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public YoutubePlayer <>4__this;

		[Token(Token = "0x170002E9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017E6")]
			[Address(RVA = "0x1293468", Offset = "0x1293468", VA = "0x1293468", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017E8")]
			[Address(RVA = "0x12934D4", Offset = "0x12934D4", VA = "0x12934D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017E3")]
		[Address(RVA = "0x1291DD4", Offset = "0x1291DD4", VA = "0x1291DD4")]
		[DebuggerHidden]
		public <PlayNowFromTime>d__189(int <>1__state)
		{
		}

		[Token(Token = "0x60017E4")]
		[Address(RVA = "0x129336C", Offset = "0x129336C", VA = "0x129336C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017E5")]
		[Address(RVA = "0x1293370", Offset = "0x1293370", VA = "0x1293370", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017E7")]
		[Address(RVA = "0x1293470", Offset = "0x1293470", VA = "0x1293470", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000EF")]
	private const string USER_AGENT = "Mozilla/5.0 (X11; Linux x86_64; rv:10.0) Gecko/20100101 Firefox/10.0 (Chrome)";

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7FBEFC", Offset = "0x7FBEFC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FBEFC", Offset = "0x7FBEFC")]
	public string youtubeUrl;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7FBF48", Offset = "0x7FBF48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FBF48", Offset = "0x7FBF48")]
	public bool startFromSecond;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0x7FBF94", Offset = "0x7FBF94")]
	public int startFromSecondTime;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7FC02C", Offset = "0x7FC02C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FC02C", Offset = "0x7FC02C")]
	public bool autoPlayOnStart;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7FC078", Offset = "0x7FC078")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FC078", Offset = "0x7FC078")]
	public bool autoPlayOnEnable;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7FC0C4", Offset = "0x7FC0C4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FC0C4", Offset = "0x7FC0C4")]
	public bool playUsingInternalDevicePlayer;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7FC110", Offset = "0x7FC110")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7FC110", Offset = "0x7FC110")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7FC110", Offset = "0x7FC110")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FC110", Offset = "0x7FC110")]
	public bool loadYoutubeUrlsOnly;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7FC190", Offset = "0x7FC190")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FC190", Offset = "0x7FC190")]
	public bool is3DLayoutVideo;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0x7FC1DC", Offset = "0x7FC1DC")]
	public Layout3D layout3d;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7FC274", Offset = "0x7FC274")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7FC274", Offset = "0x7FC274")]
	public GameObject videoControllerCanvas;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7FC2C0", Offset = "0x7FC2C0")]
	public Camera mainCamera;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7FC2D0", Offset = "0x7FC2D0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7FC2D0", Offset = "0x7FC2D0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FC2D0", Offset = "0x7FC2D0")]
	public YoutubeVideoQuality videoQuality;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7FC340", Offset = "0x7FC340")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7FC340", Offset = "0x7FC340")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FC340", Offset = "0x7FC340")]
	public GameObject loadingContent;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7FC3B0", Offset = "0x7FC3B0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FC3B0", Offset = "0x7FC3B0")]
	public UnityEvent OnYoutubeUrlAreReady;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FC410", Offset = "0x7FC410")]
	public UnityEvent OnVideoReadyToStart;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FC448", Offset = "0x7FC448")]
	public UnityEvent OnVideoStarted;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FC480", Offset = "0x7FC480")]
	public UnityEvent OnVideoPaused;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FC4B8", Offset = "0x7FC4B8")]
	public UnityEvent OnVideoFinished;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7FC4F0", Offset = "0x7FC4F0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7FC4F0", Offset = "0x7FC4F0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FC4F0", Offset = "0x7FC4F0")]
	public GameObject[] objectsToRenderTheVideoImage;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7FC560", Offset = "0x7FC560")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7FC560", Offset = "0x7FC560")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FC560", Offset = "0x7FC560")]
	public VideoPlayer videoPlayer;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FC5D0", Offset = "0x7FC5D0")]
	public VideoPlayer audioPlayer;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7FC608", Offset = "0x7FC608")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FC608", Offset = "0x7FC608")]
	public bool debug;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[HideInInspector]
	public string videoUrl;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[HideInInspector]
	public string audioUrl;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7FC674", Offset = "0x7FC674")]
	public bool ForceGetWebServer;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7FC684", Offset = "0x7FC684")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FC684", Offset = "0x7FC684")]
	public bool showPlayerControls;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private int maxRequestTime;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float currentRequestTime;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private int retryTimeUntilToRequestFromServer;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int currentRetryTime;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private bool gettingYoutubeURL;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC5")]
	private bool videoAreReadyToPlay;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float lastPlayTime;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private bool audioDecryptDone;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
	private bool videoDecryptDone;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCE")]
	private bool videoPrepared;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCF")]
	private bool audioPrepared;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool isRetry;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private string lastTryVideoId;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float lastStartedTime;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private bool youtubeUrlReady;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private YoutubeResultIds newRequestResults;

	[Token(Token = "0x400011A")]
	private const string serverURI = "https://unity-dev-youtube.herokuapp.com/api/info?url=";

	[Token(Token = "0x400011B")]
	private const string formatURI = "&format=best&flatten=true";

	[Token(Token = "0x400011C")]
	private const string VIDEOURIFORWEBGLPLAYER = "https://youtubewebgl.herokuapp.com/download.php?mime=video/mp4&title=generatedvideo&token=";

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool fullscreenModeEnabled;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
	private bool videoEnded;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF2")]
	private bool noAudioAtacched;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private string videoTitle;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool startedFromTime;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
	private bool videoStarted;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private float lastErrorTime;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[HideInInspector]
	public bool pauseCalled;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0x7FC6E0", Offset = "0x7FC6E0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FC6E0", Offset = "0x7FC6E0")]
	public int autoHideControlsTime;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0x7FC79C", Offset = "0x7FC79C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FC79C", Offset = "0x7FC79C")]
	public GameObject mainControllerUi;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private float totalVideoDuration;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private float currentVideoDuration;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private bool videoSeekDone;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x121")]
	private bool videoAudioSeekDone;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x122")]
	private bool lowRes;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private float hideScreenTime;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private float audioDuration;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private bool showingPlaybackSpeed;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12D")]
	private bool showingVolume;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12E")]
	private bool seekUsingLowQuality;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Thread thread1;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private YoutubeResultIds webGlResults;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private bool startedPlayingWebgl;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private string logTest;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[HideInInspector]
	public bool isSyncing;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x151")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7FC868", Offset = "0x7FC868")]
	public bool showThumbnailBeforeVideoLoad;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private string thumbnailVideoID;

	[Token(Token = "0x4000138")]
	private const string RateBypassFlag = "ratebypass";

	[Token(Token = "0x4000139")]
	[HideInInspector]
	public const string SignatureQuery = "signature";

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[HideInInspector]
	public string encryptedSignatureVideo;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[HideInInspector]
	public string encryptedSignatureAudio;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[HideInInspector]
	private string masterURLForVideo;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[HideInInspector]
	private string masterURLForAudio;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[HideInInspector]
	public bool decryptedUrlForVideo;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x181")]
	[HideInInspector]
	public bool decryptedUrlForAudio;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[HideInInspector]
	public string decryptedVideoUrlResult;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[HideInInspector]
	public string decryptedAudioUrlResult;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public List<VideoInfo> youtubeVideoInfos;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[HideInInspector]
	public string EncryptUrlForVideo;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[HideInInspector]
	public string EncryptUrlForAudio;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private DownloadUrlResponse downloadYoutubeUrlResponse;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private bool waitAudioSeek;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B9")]
	private bool notSeeking;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BA")]
	private bool ignoreDrop;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BB")]
	private bool dropAlreadyCalled;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7FC950", Offset = "0x7FC950")]
	public bool checkIfSync;

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x128A7E4", Offset = "0x128A7E4", VA = "0x128A7E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x128A898", Offset = "0x128A898", VA = "0x128A898")]
	public void Start()
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x128AD18", Offset = "0x128AD18", VA = "0x128AD18")]
	private void TryToLoadThumbnailBeforeOpenVideo(string id)
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x128ADAC", Offset = "0x128ADAC", VA = "0x128ADAC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8021E4", Offset = "0x8021E4")]
	private IEnumerator DownloadThumbnail(string videoId)
	{
		return null;
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x128AB28", Offset = "0x128AB28", VA = "0x128AB28")]
	private void Skybox3DSettup()
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x128AE58", Offset = "0x128AE58", VA = "0x128AE58")]
	public void ToogleFullsScreenMode()
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x128A9AC", Offset = "0x128A9AC", VA = "0x128A9AC")]
	private void FixCameraEvent()
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x128AF3C", Offset = "0x128AF3C", VA = "0x128AF3C")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x128B004", Offset = "0x128B004", VA = "0x128B004")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x128B0F8", Offset = "0x128B0F8", VA = "0x128B0F8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x128B0FC", Offset = "0x128B0FC", VA = "0x128B0FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x802248", Offset = "0x802248")]
	private IEnumerator WaitThingsGetDone()
	{
		return null;
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x128B19C", Offset = "0x128B19C", VA = "0x128B19C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x128ABEC", Offset = "0x128ABEC", VA = "0x128ABEC")]
	private void PrepareVideoPlayerCallbacks()
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x128B818", Offset = "0x128B818", VA = "0x128B818")]
	private void ShowLoading()
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x128B8B0", Offset = "0x128B8B0", VA = "0x128B8B0")]
	private void HideLoading()
	{
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x128B948", Offset = "0x128B948", VA = "0x128B948")]
	public void Play(string url)
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x128BCF4", Offset = "0x128BCF4", VA = "0x128BCF4")]
	private string CheckVideoUrlAndExtractThevideoId(string url)
	{
		return null;
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x128C06C", Offset = "0x128C06C", VA = "0x128C06C")]
	public void OnYoutubeError(string errorType)
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x128BE20", Offset = "0x128BE20", VA = "0x128BE20")]
	private bool TryNormalizeYoutubeUrlLocal(string url, out string normalizedUrl)
	{
		return default(bool);
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x128C100", Offset = "0x128C100", VA = "0x128C100")]
	private void ResetThings()
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x128C260", Offset = "0x128C260", VA = "0x128C260")]
	public void PlayFromDefaultUrl()
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x128BBA8", Offset = "0x128BBA8", VA = "0x128BBA8")]
	private void PlayYoutubeVideo(string _videoId)
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0x128B5F8", Offset = "0x128B5F8", VA = "0x128B5F8")]
	public void DecryptAudioDone(string url)
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x128B618", Offset = "0x128B618", VA = "0x128B618")]
	public void DecryptVideoDone(string url)
	{
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0x128C534", Offset = "0x128C534", VA = "0x128C534")]
	public string GetVideoTitle()
	{
		return null;
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0x128C53C", Offset = "0x128C53C", VA = "0x128C53C")]
	private void UrlsLoaded()
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x128B760", Offset = "0x128B760", VA = "0x128B760")]
	private void StartPlayingWebgl()
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0x128D450", Offset = "0x128D450", VA = "0x128D450")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8022AC", Offset = "0x8022AC")]
	private IEnumerator HandHeldPlayback()
	{
		return null;
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x128D4C4", Offset = "0x128D4C4", VA = "0x128D4C4")]
	private void StartPlayback()
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x128B548", Offset = "0x128B548", VA = "0x128B548")]
	private void ErrorCheck()
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x128D6AC", Offset = "0x128D6AC", VA = "0x128D6AC")]
	public int GetMaxQualitySupportedByDevice()
	{
		return default(int);
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x128C368", Offset = "0x128C368", VA = "0x128C368")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x802310", Offset = "0x802310")]
	private IEnumerator WebRequest(string videoID)
	{
		return null;
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x128D764", Offset = "0x128D764", VA = "0x128D764")]
	private string ConvertToWebglUrl(string url)
	{
		return null;
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x128B43C", Offset = "0x128B43C", VA = "0x128B43C")]
	public void RetryPlayYoutubeVideo()
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x128D854", Offset = "0x128D854", VA = "0x128D854")]
	private void StopIfPlaying()
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x128D92C", Offset = "0x128D92C", VA = "0x128D92C")]
	public void UrlReadyToUse()
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x128C3E8", Offset = "0x128C3E8", VA = "0x128C3E8")]
	public void OnYoutubeUrlsLoaded()
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0x128DA44", Offset = "0x128DA44", VA = "0x128DA44")]
	public void OnYoutubeVideoAreReadyToPlay()
	{
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x128DA78", Offset = "0x128DA78", VA = "0x128DA78")]
	public void OnVideoPlayerFinished()
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x128B758", Offset = "0x128B758", VA = "0x128B758")]
	private void PlaybackDone(VideoPlayer vPlayer)
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x128B6BC", Offset = "0x128B6BC", VA = "0x128B6BC")]
	private void VideoStarted(VideoPlayer source)
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x128DBDC", Offset = "0x128DBDC", VA = "0x128DBDC")]
	private void VideoErrorReceived(VideoPlayer source, string message)
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x128DC84", Offset = "0x128DC84", VA = "0x128DC84")]
	public void Play()
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x128DCE0", Offset = "0x128DCE0", VA = "0x128DCE0")]
	public void Pause()
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x128DD3C", Offset = "0x128DD3C", VA = "0x128DD3C")]
	public void PlayPause()
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x128DDA0", Offset = "0x128DDA0", VA = "0x128DDA0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x128E0FC", Offset = "0x128E0FC", VA = "0x128E0FC")]
	public void Seek(float time)
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x128E178", Offset = "0x128E178", VA = "0x128E178")]
	public void PlayButton()
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x128E21C", Offset = "0x128E21C", VA = "0x128E21C")]
	private void VideoPreparedSeek(VideoPlayer p)
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0x128E228", Offset = "0x128E228", VA = "0x128E228")]
	private void AudioPreparedSeek(VideoPlayer p)
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x128BA2C", Offset = "0x128BA2C", VA = "0x128BA2C")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x128E234", Offset = "0x128E234", VA = "0x128E234")]
	private void SeekVideoDone(VideoPlayer vp)
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x128E39C", Offset = "0x128E39C", VA = "0x128E39C")]
	private void SeekVideoAudioDone(VideoPlayer vp)
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x128E328", Offset = "0x128E328", VA = "0x128E328")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x802374", Offset = "0x802374")]
	private IEnumerator SeekFinished()
	{
		return null;
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x128E4D8", Offset = "0x128E4D8", VA = "0x128E4D8")]
	private string FormatTime(int time)
	{
		return null;
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x128E044", Offset = "0x128E044", VA = "0x128E044")]
	private bool UserInteract()
	{
		return default(bool);
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x128D08C", Offset = "0x128D08C", VA = "0x128D08C")]
	public void DecryptDownloadUrl(string encryptedUrlVideo, string encrytedUrlAudio, string htmlVersion, bool videoOnly)
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x128E81C", Offset = "0x128E81C", VA = "0x128E81C")]
	public void ReadyForExtract(string r, bool audioExtract)
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x128E790", Offset = "0x128E790", VA = "0x128E790")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8023D8", Offset = "0x8023D8")]
	private IEnumerator Downloader(string uri, bool audio)
	{
		return null;
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x12900A0", Offset = "0x12900A0", VA = "0x12900A0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x80243C", Offset = "0x80243C")]
	private IEnumerator WebGlRequest(string videoID)
	{
		return null;
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x129014C", Offset = "0x129014C", VA = "0x129014C")]
	public void WebGlGetVideo(string url)
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x129030C", Offset = "0x129030C", VA = "0x129030C")]
	private void WeblPrepared(VideoPlayer source)
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x128B648", Offset = "0x128B648", VA = "0x128B648")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8024A0", Offset = "0x8024A0")]
	private IEnumerator WebGLPlay()
	{
		return null;
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x12903A8", Offset = "0x12903A8", VA = "0x12903A8")]
	public void SetMasterUrlForAudio(string url)
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x12903B0", Offset = "0x12903B0", VA = "0x12903B0")]
	public void SetMasterUrlForVideo(string url)
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x128F4D4", Offset = "0x128F4D4", VA = "0x128F4D4")]
	public void DoRegexFunctionsForVideo()
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x129046C", Offset = "0x129046C", VA = "0x129046C")]
	private static int GetOpIndex(string op)
	{
		return default(int);
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x1290510", Offset = "0x1290510", VA = "0x1290510")]
	private static char[] SpliceFunction(char[] a, int b)
	{
		return null;
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x1290570", Offset = "0x1290570", VA = "0x1290570")]
	private static char[] SwapFunction(char[] a, int b)
	{
		return null;
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x12905C4", Offset = "0x12905C4", VA = "0x12905C4")]
	private static char[] ReverseFunction(char[] a)
	{
		return null;
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x128E940", Offset = "0x128E940", VA = "0x128E940")]
	public void DoRegexFunctionsForAudio()
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x12903B8", Offset = "0x12903B8", VA = "0x12903B8")]
	private static string GetFunctionFromLine(string currentLine)
	{
		return null;
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x12905EC", Offset = "0x12905EC", VA = "0x12905EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x802504", Offset = "0x802504")]
	public IEnumerator WebGlRequest(Action<string> callback, string id, string host)
	{
		return null;
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x128C268", Offset = "0x128C268", VA = "0x128C268")]
	public void GetDownloadUrls(Action callback, string videoUrl, YoutubePlayer player)
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x1290980", Offset = "0x1290980", VA = "0x1290980")]
	private void YoutubeURLDownloadFinished(Action callback, YoutubePlayer player)
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x12906A0", Offset = "0x12906A0", VA = "0x12906A0")]
	public static bool TryNormalizeYoutubeUrl(string url, out string normalizedUrl)
	{
		return default(bool);
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x1290E9C", Offset = "0x1290E9C", VA = "0x1290E9C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x802568", Offset = "0x802568")]
	private static IEnumerable<ExtractionInfo> ExtractDownloadUrls(JObject json)
	{
		return null;
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x12915E0", Offset = "0x12915E0", VA = "0x12915E0")]
	private static string GetAdaptiveStreamMap(JObject json)
	{
		return null;
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x1291460", Offset = "0x1291460", VA = "0x1291460")]
	private static string GetHtml5PlayerVersion(JObject json)
	{
		return null;
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x12916A4", Offset = "0x12916A4", VA = "0x12916A4")]
	private static string GetStreamMap(JObject json)
	{
		return null;
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x1290F20", Offset = "0x1290F20", VA = "0x1290F20")]
	private static IEnumerable<VideoInfo> GetVideoInfos(IEnumerable<ExtractionInfo> extractionInfos, string videoTitle)
	{
		return null;
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x1290DEC", Offset = "0x1290DEC", VA = "0x1290DEC")]
	private static string GetVideoTitle(JObject json)
	{
		return null;
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x1290D8C", Offset = "0x1290D8C", VA = "0x1290D8C")]
	private static bool IsVideoUnavailable(string pageSource)
	{
		return default(bool);
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x12917A4", Offset = "0x12917A4", VA = "0x12917A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8025CC", Offset = "0x8025CC")]
	private IEnumerator DownloadUrl(string url, Action<string> callback, VideoInfo videoInfo)
	{
		return null;
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x12908EC", Offset = "0x12908EC", VA = "0x12908EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x802630", Offset = "0x802630")]
	private IEnumerator DownloadYoutubeUrl(string url, Action callback, YoutubePlayer player)
	{
		return null;
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x1291870", Offset = "0x1291870", VA = "0x1291870")]
	private static void ThrowYoutubeParseException(Exception innerException, string videoUrl)
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x1291910", Offset = "0x1291910", VA = "0x1291910")]
	private void SkipToPercent(float pct)
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0x12919C8", Offset = "0x12919C8", VA = "0x12919C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x802694", Offset = "0x802694")]
	private IEnumerator VideoSeekCall()
	{
		return null;
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0x1291A68", Offset = "0x1291A68", VA = "0x1291A68")]
	private void VideoSeeked(VideoPlayer source)
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x1291BB4", Offset = "0x1291BB4", VA = "0x1291BB4")]
	private void AudioSeeked(VideoPlayer source)
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0x1291B40", Offset = "0x1291B40", VA = "0x1291B40")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8026F8", Offset = "0x8026F8")]
	private IEnumerator PlayNow()
	{
		return null;
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0x1291C0C", Offset = "0x1291C0C", VA = "0x1291C0C")]
	private void CheckIfIsSync()
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0x1291D34", Offset = "0x1291D34", VA = "0x1291D34")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x80275C", Offset = "0x80275C")]
	private IEnumerator ReleaseDrop()
	{
		return null;
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0x1291ABC", Offset = "0x1291ABC", VA = "0x1291ABC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8027C0", Offset = "0x8027C0")]
	private IEnumerator PlayNowFromTime(float time)
	{
		return null;
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0x1291E00", Offset = "0x1291E00", VA = "0x1291E00")]
	private void AudioPlayer_frameDropped(VideoPlayer source)
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x1291E04", Offset = "0x1291E04", VA = "0x1291E04")]
	private void VideoPlayer_frameDropped(VideoPlayer source)
	{
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0x1291E08", Offset = "0x1291E08", VA = "0x1291E08")]
	public YoutubePlayer()
	{
	}
}
[Token(Token = "0x200002C")]
public static class Extensions
{
	[Token(Token = "0x6000153")]
	public static T[] Splice<T>(this T[] source, int start)
	{
		return null;
	}
}
[Token(Token = "0x200002D")]
public class YoutubePlayerLivestream : MonoBehaviour
{
	[Token(Token = "0x2000342")]
	private class DownloadUrlResponse
	{
		[Token(Token = "0x4002319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string data;

		[Token(Token = "0x400231A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isValid;

		[Token(Token = "0x400231B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public long httpCode;

		[Token(Token = "0x60017E9")]
		[Address(RVA = "0x12954DC", Offset = "0x12954DC", VA = "0x12954DC")]
		public DownloadUrlResponse()
		{
		}
	}

	[Token(Token = "0x2000343")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9778", Offset = "0x7F9778")]
	private sealed class <DownloadYoutubeUrl>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400231C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400231D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400231E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public YoutubePlayerLivestream <>4__this;

		[Token(Token = "0x400231F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string url;

		[Token(Token = "0x4002320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<string> callback;

		[Token(Token = "0x4002321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UnityWebRequest <request>5__2;

		[Token(Token = "0x170002EB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017ED")]
			[Address(RVA = "0x129550C", Offset = "0x129550C", VA = "0x129550C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017EF")]
			[Address(RVA = "0x1295578", Offset = "0x1295578", VA = "0x1295578", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017EA")]
		[Address(RVA = "0x1294FA4", Offset = "0x1294FA4", VA = "0x1294FA4")]
		[DebuggerHidden]
		public <DownloadYoutubeUrl>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60017EB")]
		[Address(RVA = "0x12951DC", Offset = "0x12951DC", VA = "0x12951DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017EC")]
		[Address(RVA = "0x12951E0", Offset = "0x12951E0", VA = "0x12951E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017EE")]
		[Address(RVA = "0x1295514", Offset = "0x1295514", VA = "0x1295514", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string _livestreamUrl;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private DownloadUrlResponse downloadYoutubeUrlResponse;

	[Token(Token = "0x6000154")]
	[Address(RVA = "0x1294DB0", Offset = "0x1294DB0", VA = "0x1294DB0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x1294DB8", Offset = "0x1294DB8", VA = "0x1294DB8")]
	public void GetLivestreamUrl(string url)
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0x1294E54", Offset = "0x1294E54", VA = "0x1294E54")]
	public void StartProcess(Action<string> callback, string url)
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x1294F14", Offset = "0x1294F14", VA = "0x1294F14")]
	private void OnLiveUrlLoaded(string url)
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0x1294E8C", Offset = "0x1294E8C", VA = "0x1294E8C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x802834", Offset = "0x802834")]
	private IEnumerator DownloadYoutubeUrl(string url, Action<string> callback)
	{
		return null;
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0x1294FD0", Offset = "0x1294FD0", VA = "0x1294FD0")]
	private void GetUrlFromJson(Action<string> callback)
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0x12951D4", Offset = "0x12951D4", VA = "0x12951D4")]
	public YoutubePlayerLivestream()
	{
	}
}
[Token(Token = "0x200002E")]
public static class AppSettingsExtensions
{
	[Token(Token = "0x600015B")]
	[Address(RVA = "0xA3472C", Offset = "0xA3472C", VA = "0xA3472C")]
	public static ChatAppSettings GetChatSettings(this AppSettings appSettings)
	{
		return null;
	}
}
[Token(Token = "0x200002F")]
public class ChannelSelector : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
{
	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string Channel;

	[Token(Token = "0x600015C")]
	[Address(RVA = "0xA41310", Offset = "0xA41310", VA = "0xA41310")]
	public void SetChannel(string channel)
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0xA4138C", Offset = "0xA4138C", VA = "0xA4138C", Slot = "4")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0xA41640", Offset = "0xA41640", VA = "0xA41640")]
	public ChannelSelector()
	{
	}
}
[Token(Token = "0x2000030")]
[ExecuteInEditMode]
public class ChatAppIdCheckerUI : MonoBehaviour
{
	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Description;

	[Token(Token = "0x600015F")]
	[Address(RVA = "0xA41648", Offset = "0xA41648", VA = "0xA41648")]
	public void Update()
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0xA41794", Offset = "0xA41794", VA = "0xA41794")]
	public ChatAppIdCheckerUI()
	{
	}
}
[Token(Token = "0x2000031")]
public class ChatGui : MonoBehaviour, IChatClientListener
{
	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string[] ChannelsToJoinOnConnect;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string[] FriendsList;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int HistoryLengthToFetch;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7FC988", Offset = "0x7FC988")]
	private string <UserName>k__BackingField;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string selectedChannelName;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ChatClient chatClient;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected internal ChatAppSettings chatAppSettings;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject missingAppIdErrorPanel;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject ConnectingLabel;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public RectTransform ChatPanel;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject UserIdFormPanel;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public InputField InputFieldChat;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text CurrentChannelText;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Toggle ChannelToggleToInstantiate;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject FriendListUiItemtoInstantiate;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private readonly Dictionary<string, Toggle> channelToggles;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private readonly Dictionary<string, FriendItem> friendListItemLUT;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool ShowState;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject Title;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Text StateText;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Text UserIdText;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string HelpText;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public int TestLength;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private byte[] testBytes;

	[Token(Token = "0x1700001F")]
	public string UserName
	{
		[Token(Token = "0x6000161")]
		[Address(RVA = "0xA4179C", Offset = "0xA4179C", VA = "0xA4179C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8028A8", Offset = "0x8028A8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000162")]
		[Address(RVA = "0xA417A4", Offset = "0xA417A4", VA = "0xA417A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8028B8", Offset = "0x8028B8")]
		set
		{
		}
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0xA417AC", Offset = "0xA417AC", VA = "0xA417AC")]
	public void Start()
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0xA41A40", Offset = "0xA41A40", VA = "0xA41A40")]
	public void Connect()
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0xA41BA8", Offset = "0xA41BA8", VA = "0xA41BA8")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0xA41BC0", Offset = "0xA41BC0", VA = "0xA41BC0")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0xA41BD8", Offset = "0xA41BD8", VA = "0xA41BD8")]
	public void Update()
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0xA41CCC", Offset = "0xA41CCC", VA = "0xA41CCC")]
	public void OnEnterSend()
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0xA4264C", Offset = "0xA4264C", VA = "0xA4264C")]
	public void OnClickSend()
	{
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0xA41D6C", Offset = "0xA41D6C", VA = "0xA41D6C")]
	private void SendChatMessage(string inputLine)
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0xA42704", Offset = "0xA42704", VA = "0xA42704")]
	public void PostHelpToCurrentChannel()
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0xA427C4", Offset = "0xA427C4", VA = "0xA427C4", Slot = "4")]
	public void DebugReturn(DebugLevel level, string message)
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0xA428AC", Offset = "0xA428AC", VA = "0xA428AC", Slot = "6")]
	public void OnConnected()
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0xA42BF8", Offset = "0xA42BF8", VA = "0xA42BF8", Slot = "5")]
	public void OnDisconnected()
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0xA42C18", Offset = "0xA42C18", VA = "0xA42C18", Slot = "7")]
	public void OnChatStateChange(ChatState state)
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0xA42CD0", Offset = "0xA42CD0", VA = "0xA42CD0", Slot = "10")]
	public void OnSubscribed(string[] channels, bool[] results)
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0xA42E5C", Offset = "0xA42E5C", VA = "0xA42E5C")]
	private void InstantiateChannelButton(string channelName)
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0xA42AB4", Offset = "0xA42AB4", VA = "0xA42AB4")]
	private void InstantiateFriendButton(string friendId)
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0xA42FF4", Offset = "0xA42FF4", VA = "0xA42FF4", Slot = "11")]
	public void OnUnsubscribed(string[] channels)
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0xA433D0", Offset = "0xA433D0", VA = "0xA433D0", Slot = "8")]
	public void OnGetMessages(string channelName, string[] senders, object[] messages)
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0xA43424", Offset = "0xA43424", VA = "0xA43424", Slot = "9")]
	public void OnPrivateMessage(string sender, object message, string channelName)
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0xA43534", Offset = "0xA43534", VA = "0xA43534", Slot = "12")]
	public void OnStatusUpdate(string user, int status, bool gotMessage, object message)
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0xA436C8", Offset = "0xA436C8", VA = "0xA436C8", Slot = "13")]
	public void OnUserSubscribed(string channel, string user)
	{
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0xA437CC", Offset = "0xA437CC", VA = "0xA437CC", Slot = "14")]
	public void OnUserUnsubscribed(string channel, string user)
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0xA438D0", Offset = "0xA438D0", VA = "0xA438D0")]
	public void AddMessageToSelectedChannel(string msg)
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0xA41408", Offset = "0xA41408", VA = "0xA41408")]
	public void ShowChannel(string channelName)
	{
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0xA439B4", Offset = "0xA439B4", VA = "0xA439B4")]
	public void OpenDashboard()
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0xA43A00", Offset = "0xA43A00", VA = "0xA43A00")]
	public ChatGui()
	{
	}
}
[Token(Token = "0x2000032")]
public class FriendItem : MonoBehaviour
{
	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text NameLabel;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text StatusLabel;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text Health;

	[Token(Token = "0x17000020")]
	[HideInInspector]
	public string FriendId
	{
		[Token(Token = "0x600017F")]
		[Address(RVA = "0xA6879C", Offset = "0xA6879C", VA = "0xA6879C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600017E")]
		[Address(RVA = "0xA68778", Offset = "0xA68778", VA = "0xA68778")]
		set
		{
		}
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0xA687C0", Offset = "0xA687C0", VA = "0xA687C0")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0xA6882C", Offset = "0xA6882C", VA = "0xA6882C")]
	public void OnFriendStatusUpdate(int status, bool gotMessage, object message)
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0xA68954", Offset = "0xA68954", VA = "0xA68954")]
	public FriendItem()
	{
	}
}
[Token(Token = "0x2000033")]
public class IgnoreUiRaycastWhenInactive : MonoBehaviour, ICanvasRaycastFilter
{
	[Token(Token = "0x6000183")]
	[Address(RVA = "0x9A8104", Offset = "0x9A8104", VA = "0x9A8104", Slot = "4")]
	public bool IsRaycastLocationValid(Vector2 screenPoint, Camera eventCamera)
	{
		return default(bool);
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0x9A8128", Offset = "0x9A8128", VA = "0x9A8128")]
	public IgnoreUiRaycastWhenInactive()
	{
	}
}
[Token(Token = "0x2000034")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7F5BE4", Offset = "0x7F5BE4")]
public class NamePickGui : MonoBehaviour
{
	[Token(Token = "0x400016A")]
	private const string UserNamePlayerPref = "NamePickUserName";

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ChatGui chatNewComponent;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InputField idInput;

	[Token(Token = "0x6000185")]
	[Address(RVA = "0x9D7EAC", Offset = "0x9D7EAC", VA = "0x9D7EAC")]
	public void Start()
	{
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0x9D7F64", Offset = "0x9D7F64", VA = "0x9D7F64")]
	public void EndEditOnEnter()
	{
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0x9D7FB0", Offset = "0x9D7FB0", VA = "0x9D7FB0")]
	public void StartChat()
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0x9D807C", Offset = "0x9D807C", VA = "0x9D807C")]
	public NamePickGui()
	{
	}
}
[Token(Token = "0x2000035")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7F5C48", Offset = "0x7F5C48")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7F5C48", Offset = "0x7F5C48")]
public class ChangeColor : MonoBehaviour
{
	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PhotonView photonView;

	[Token(Token = "0x6000189")]
	[Address(RVA = "0xA4101C", Offset = "0xA4101C", VA = "0xA4101C")]
	private void Start()
	{
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0xA41178", Offset = "0xA41178", VA = "0xA41178")]
	[PunRPC]
	private void ChangeColour(Vector3 randomColor)
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0xA4124C", Offset = "0xA4124C", VA = "0xA4124C")]
	public ChangeColor()
	{
	}
}
[Token(Token = "0x2000036")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7F5CD4", Offset = "0x7F5CD4")]
public class ChangeName : MonoBehaviour
{
	[Token(Token = "0x600018C")]
	[Address(RVA = "0xA41254", Offset = "0xA41254", VA = "0xA41254")]
	private void Start()
	{
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0xA41308", Offset = "0xA41308", VA = "0xA41308")]
	public ChangeName()
	{
	}
}
[Token(Token = "0x2000037")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7F5D38", Offset = "0x7F5D38")]
public class PointersController : MonoBehaviour
{
	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject pointerDown;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject pointerUp;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PhotonVoiceView photonVoiceView;

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x9EFC14", Offset = "0x9EFC14", VA = "0x9EFC14")]
	private void Start()
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x9EFC6C", Offset = "0x9EFC6C", VA = "0x9EFC6C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x9EFCC8", Offset = "0x9EFCC8", VA = "0x9EFCC8")]
	private void SetActiveSafe(GameObject go, bool active)
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x9EFD84", Offset = "0x9EFD84", VA = "0x9EFD84")]
	public PointersController()
	{
	}
}
[Token(Token = "0x2000038")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7F5D9C", Offset = "0x7F5D9C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7F5D9C", Offset = "0x7F5D9C")]
public class ProximityVoiceTrigger : VoiceComponent
{
	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte> groupsToAdd;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<byte> groupsToRemove;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private byte[] subscribedGroups;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PhotonVoiceView photonVoiceView;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private PhotonView photonView;

	[Token(Token = "0x17000021")]
	public byte TargetInterestGroup
	{
		[Token(Token = "0x6000192")]
		[Address(RVA = "0x9F0334", Offset = "0x9F0334", VA = "0x9F0334")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0x9F03C8", Offset = "0x9F03C8", VA = "0x9F03C8", Slot = "7")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0x9F045C", Offset = "0x9F045C", VA = "0x9F045C")]
	private void ToggleTransmission()
	{
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0x9F0704", Offset = "0x9F0704", VA = "0x9F0704")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0x9F08DC", Offset = "0x9F08DC", VA = "0x9F08DC")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0x9F0AE8", Offset = "0x9F0AE8", VA = "0x9F0AE8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0x9F1040", Offset = "0x9F1040", VA = "0x9F1040")]
	public ProximityVoiceTrigger()
	{
	}
}
[Serializable]
[Token(Token = "0x2000039")]
public class MouseLookHelper
{
	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float XSensitivity;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float YSensitivity;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool clampVerticalRotation;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float MinimumX;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float MaximumX;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool smooth;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float smoothTime;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Quaternion m_CharacterTargetRot;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Quaternion m_CameraTargetRot;

	[Token(Token = "0x6000199")]
	[Address(RVA = "0xA29F8C", Offset = "0xA29F8C", VA = "0xA29F8C")]
	public void Init(Transform character, Transform camera)
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0xA29FE4", Offset = "0xA29FE4", VA = "0xA29FE4")]
	public void LookRotation(Transform character, Transform camera)
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0xA2A2AC", Offset = "0xA2A2AC", VA = "0xA2A2AC")]
	private Quaternion ClampRotationAroundXAxis(Quaternion q)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0xA2A374", Offset = "0xA2A374", VA = "0xA2A374")]
	public MouseLookHelper()
	{
	}
}
[Token(Token = "0x200003A")]
public class SoundsForJoinAndLeave : MonoBehaviourPunCallbacks
{
	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip JoinClip;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip LeaveClip;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioSource source;

	[Token(Token = "0x600019D")]
	[Address(RVA = "0xAA39D0", Offset = "0xAA39D0", VA = "0xAA39D0", Slot = "42")]
	public override void OnPlayerEnteredRoom(Player newPlayer)
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0xAA3AD8", Offset = "0xAA3AD8", VA = "0xAA3AD8", Slot = "43")]
	public override void OnPlayerLeftRoom(Player otherPlayer)
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0xAA3BE0", Offset = "0xAA3BE0", VA = "0xAA3BE0")]
	public SoundsForJoinAndLeave()
	{
	}
}
[Token(Token = "0x200003B")]
public class AchievementSample : MonoBehaviour
{
	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text dataOutput;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InputField getDefinitionsByNameInputField;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public InputField getProgressByNameInputField;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public InputField unLockInputField;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public InputField addCountInputField;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public InputField addFieldsInputField;

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0xA2E3F4", Offset = "0xA2E3F4", VA = "0xA2E3F4")]
	private void Start()
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0xA2E454", Offset = "0xA2E454", VA = "0xA2E454")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0xA2E4B4", Offset = "0xA2E4B4", VA = "0xA2E4B4")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0xA2E694", Offset = "0xA2E694", VA = "0xA2E694")]
	private void Update()
	{
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0xA2E6A0", Offset = "0xA2E6A0", VA = "0xA2E6A0")]
	public void AsyncInitialize()
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0xA2E720", Offset = "0xA2E720", VA = "0xA2E720")]
	public void GetDefinitionsByName()
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0xA2E914", Offset = "0xA2E914", VA = "0xA2E914")]
	public void GetProgressByName()
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0xA2EB08", Offset = "0xA2EB08", VA = "0xA2EB08")]
	public void GetAllDefinitions()
	{
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0xA2EC34", Offset = "0xA2EC34", VA = "0xA2EC34")]
	public void GetAllProgress()
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0xA2ED60", Offset = "0xA2ED60", VA = "0xA2ED60")]
	public void UnLock()
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0xA2EF04", Offset = "0xA2EF04", VA = "0xA2EF04")]
	public void AddCount()
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0xA2F218", Offset = "0xA2F218", VA = "0xA2F218")]
	public void AddFields()
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0xA2E5E8", Offset = "0xA2E5E8", VA = "0xA2E5E8")]
	private void achievementInit()
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0xA2EB88", Offset = "0xA2EB88", VA = "0xA2EB88")]
	private void getAchievementAllDefinition()
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0xA2ECB4", Offset = "0xA2ECB4", VA = "0xA2ECB4")]
	private void getAchievementAllProgress()
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0xA2F368", Offset = "0xA2F368", VA = "0xA2F368")]
	private void addFieldsAchievement(string achievementName, string fields)
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0xA2F130", Offset = "0xA2F130", VA = "0xA2F130")]
	private void addCountAchievement(string achievementName, string count)
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0xA2EE50", Offset = "0xA2EE50", VA = "0xA2EE50")]
	private void unlockAchievement(string achievementName)
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0xA2EA54", Offset = "0xA2EA54", VA = "0xA2EA54")]
	private void getAchievementProgress(string[] achievementNames)
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0xA2E860", Offset = "0xA2E860", VA = "0xA2E860")]
	private void getAchievementDefinition(string[] achievementNames)
	{
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0xA2E52C", Offset = "0xA2E52C", VA = "0xA2E52C")]
	private void printOutputLine(string newLine)
	{
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0xA2F424", Offset = "0xA2F424", VA = "0xA2F424")]
	private void achievementAllDefinitionCallback(Pvr_Message<Pvr_AchievementDefinitionList> msg)
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0xA2FC40", Offset = "0xA2FC40", VA = "0xA2FC40")]
	private void achievementAllProgressCallback(Pvr_Message<Pvr_AchievementProgressList> msg)
	{
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0xA30258", Offset = "0xA30258", VA = "0xA30258")]
	private void achievementFieldsCallback(Pvr_Message msg)
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0xA304B8", Offset = "0xA304B8", VA = "0xA304B8")]
	private void achievementCountCallback(Pvr_Message msg)
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0xA30718", Offset = "0xA30718", VA = "0xA30718")]
	private void achievementUnlockCallback(Pvr_Message msg)
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0xA30978", Offset = "0xA30978", VA = "0xA30978")]
	private void achievementProgressCallback(Pvr_Message<Pvr_AchievementProgressList> msg)
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0xA30E7C", Offset = "0xA30E7C", VA = "0xA30E7C")]
	private void achievementDefinitionCallback(Pvr_Message<Pvr_AchievementDefinitionList> msg)
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0xA313F8", Offset = "0xA313F8", VA = "0xA313F8")]
	private void initAchievementCallback(Pvr_Message msg)
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0xA31658", Offset = "0xA31658", VA = "0xA31658")]
	private void LoginCallback(string LoginInfo)
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0xA31710", Offset = "0xA31710", VA = "0xA31710")]
	public AchievementSample()
	{
	}
}
[Token(Token = "0x200003C")]
public class Pvr_Controller : MonoBehaviour
{
	[Token(Token = "0x2000344")]
	public enum UserHandNess
	{
		[Token(Token = "0x4002323")]
		Right,
		[Token(Token = "0x4002324")]
		Left
	}

	[Token(Token = "0x2000345")]
	public enum GazeType
	{
		[Token(Token = "0x4002326")]
		Never,
		[Token(Token = "0x4002327")]
		DuringMotion,
		[Token(Token = "0x4002328")]
		Always
	}

	[Token(Token = "0x2000346")]
	public enum ControllerAxis
	{
		[Token(Token = "0x400232A")]
		Controller,
		[Token(Token = "0x400232B")]
		Wrist,
		[Token(Token = "0x400232C")]
		Elbow,
		[Token(Token = "0x400232D")]
		Shoulder
	}

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject controller0;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject controller1;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static UserHandNess handness;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ControllerAxis Axis;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public GazeType Gazetype;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FC9C8", Offset = "0x7FC9C8")]
	public float ElbowHeight;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FC9E4", Offset = "0x7FC9E4")]
	public float ElbowDepth;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FCA00", Offset = "0x7FCA00")]
	public float PointerTiltAngle;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float mouseX;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float mouseY;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float mouseZ;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3[] inputDirection;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7FCA18", Offset = "0x7FCA18")]
	private static Vector3 <pointerPosition>k__BackingField;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7FCA28", Offset = "0x7FCA28")]
	private static Quaternion <pointerRotation>k__BackingField;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7FCA38", Offset = "0x7FCA38")]
	private static Vector3 <elbowPosition>k__BackingField;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7FCA48", Offset = "0x7FCA48")]
	private static Quaternion <elbowRotation>k__BackingField;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7FCA58", Offset = "0x7FCA58")]
	private static Vector3 <wristPosition>k__BackingField;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7FCA68", Offset = "0x7FCA68")]
	private static Quaternion <wristRotation>k__BackingField;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7FCA78", Offset = "0x7FCA78")]
	private static Vector3 <shoulderPosition>k__BackingField;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7FCA88", Offset = "0x7FCA88")]
	private static Quaternion <shoulderRotation>k__BackingField;

	[Token(Token = "0x17000022")]
	public static Vector3 pointerPosition
	{
		[Token(Token = "0x60001D2")]
		[Address(RVA = "0x9F2F64", Offset = "0x9F2F64", VA = "0x9F2F64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8028D8", Offset = "0x8028D8")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60001D3")]
		[Address(RVA = "0x9F2FB8", Offset = "0x9F2FB8", VA = "0x9F2FB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8028E8", Offset = "0x8028E8")]
		set
		{
		}
	}

	[Token(Token = "0x17000023")]
	public static Quaternion pointerRotation
	{
		[Token(Token = "0x60001D4")]
		[Address(RVA = "0x9F3028", Offset = "0x9F3028", VA = "0x9F3028")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8028F8", Offset = "0x8028F8")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x60001D5")]
		[Address(RVA = "0x9F307C", Offset = "0x9F307C", VA = "0x9F307C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x802908", Offset = "0x802908")]
		set
		{
		}
	}

	[Token(Token = "0x17000024")]
	public static Vector3 elbowPosition
	{
		[Token(Token = "0x60001D6")]
		[Address(RVA = "0x9F30F0", Offset = "0x9F30F0", VA = "0x9F30F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x802918", Offset = "0x802918")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60001D7")]
		[Address(RVA = "0x9F3144", Offset = "0x9F3144", VA = "0x9F3144")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x802928", Offset = "0x802928")]
		set
		{
		}
	}

	[Token(Token = "0x17000025")]
	public static Quaternion elbowRotation
	{
		[Token(Token = "0x60001D8")]
		[Address(RVA = "0x9F31B4", Offset = "0x9F31B4", VA = "0x9F31B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x802938", Offset = "0x802938")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x60001D9")]
		[Address(RVA = "0x9F3208", Offset = "0x9F3208", VA = "0x9F3208")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x802948", Offset = "0x802948")]
		set
		{
		}
	}

	[Token(Token = "0x17000026")]
	public static Vector3 wristPosition
	{
		[Token(Token = "0x60001DA")]
		[Address(RVA = "0x9F327C", Offset = "0x9F327C", VA = "0x9F327C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x802958", Offset = "0x802958")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60001DB")]
		[Address(RVA = "0x9F32D0", Offset = "0x9F32D0", VA = "0x9F32D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x802968", Offset = "0x802968")]
		set
		{
		}
	}

	[Token(Token = "0x17000027")]
	public static Quaternion wristRotation
	{
		[Token(Token = "0x60001DC")]
		[Address(RVA = "0x9F3340", Offset = "0x9F3340", VA = "0x9F3340")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x802978", Offset = "0x802978")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x60001DD")]
		[Address(RVA = "0x9F3394", Offset = "0x9F3394", VA = "0x9F3394")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x802988", Offset = "0x802988")]
		set
		{
		}
	}

	[Token(Token = "0x17000028")]
	public static Vector3 shoulderPosition
	{
		[Token(Token = "0x60001DE")]
		[Address(RVA = "0x9F3408", Offset = "0x9F3408", VA = "0x9F3408")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x802998", Offset = "0x802998")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60001DF")]
		[Address(RVA = "0x9F345C", Offset = "0x9F345C", VA = "0x9F345C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8029A8", Offset = "0x8029A8")]
		set
		{
		}
	}

	[Token(Token = "0x17000029")]
	public static Quaternion shoulderRotation
	{
		[Token(Token = "0x60001E0")]
		[Address(RVA = "0x9F34CC", Offset = "0x9F34CC", VA = "0x9F34CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8029B8", Offset = "0x8029B8")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x60001E1")]
		[Address(RVA = "0x9F3520", Offset = "0x9F3520", VA = "0x9F3520")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8029C8", Offset = "0x8029C8")]
		set
		{
		}
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x9F1148", Offset = "0x9F1148", VA = "0x9F1148")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x9F1284", Offset = "0x9F1284", VA = "0x9F1284")]
	private void Start()
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x9F12F4", Offset = "0x9F12F4", VA = "0x9F12F4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x9F1430", Offset = "0x9F1430", VA = "0x9F1430")]
	private void MainControllerChanged(string index)
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0x9F14D8", Offset = "0x9F14D8", VA = "0x9F14D8")]
	private void HandnessChanged(string index)
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0x9F14DC", Offset = "0x9F14DC", VA = "0x9F14DC")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0x9F1434", Offset = "0x9F1434", VA = "0x9F1434")]
	private void RefreshHandness()
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0x9F153C", Offset = "0x9F153C", VA = "0x9F153C")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0x9F16C8", Offset = "0x9F16C8", VA = "0x9F16C8")]
	private void ShowController()
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0x9F1830", Offset = "0x9F1830", VA = "0x9F1830")]
	private void CheckControllerState(string data)
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x9F1908", Offset = "0x9F1908", VA = "0x9F1908")]
	private void Update()
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0x9F14E0", Offset = "0x9F14E0", VA = "0x9F14E0")]
	public static void ChangeHandNess()
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x9F1B14", Offset = "0x9F1B14", VA = "0x9F1B14")]
	private void DoUpdateControler0()
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x9F1B90", Offset = "0x9F1B90", VA = "0x9F1B90")]
	private void DoUpdateControler1()
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0x9F1C14", Offset = "0x9F1C14", VA = "0x9F1C14")]
	private void UpdateControlloerRay(bool update0 = true, bool update1 = true)
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x9F2D80", Offset = "0x9F2D80", VA = "0x9F2D80")]
	private Quaternion UpdateSimulatedFrameParams()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0x9F1D68", Offset = "0x9F1D68", VA = "0x9F1D68")]
	private void SetArmParaToSo(int hand, int gazeType, float elbowHeight, float elbowDepth, float pointerTiltAngle)
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0x9F1D78", Offset = "0x9F1D78", VA = "0x9F1D78")]
	private void CalcArmModelfromSo(int hand)
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0x9F2258", Offset = "0x9F2258", VA = "0x9F2258")]
	public void UpdateControllerDataSO(int hand)
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0x9F3594", Offset = "0x9F3594", VA = "0x9F3594")]
	public Pvr_Controller()
	{
	}
}
[Token(Token = "0x200003D")]
public class Pvr_ControllerDemo : MonoBehaviour
{
	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject HeadSetController;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject controller0;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject controller1;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject cube;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Ray ray;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject currentController;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform lastHit;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform currentHit;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Material normat;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Material gazemat;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Material clickmat;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool noClick;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject referenceObj;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float rayDefaultLength;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool isHasController;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
	private bool headcontrolmode;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private RaycastHit hit;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject rayLine;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private GameObject dot;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Transform dragObj;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float disX;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float disY;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float disZ;

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x9F35FC", Offset = "0x9F35FC", VA = "0x9F35FC")]
	private void Start()
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x9F378C", Offset = "0x9F378C", VA = "0x9F378C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0x9F38A4", Offset = "0x9F38A4", VA = "0x9F38A4")]
	private void Update()
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0x9F51A0", Offset = "0x9F51A0", VA = "0x9F51A0")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x9F5238", Offset = "0x9F5238", VA = "0x9F5238")]
	private void ControllerStateListener(string data)
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x9F52D0", Offset = "0x9F52D0", VA = "0x9F52D0")]
	private void CheckControllerStateForGoblin(string state)
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0x9F536C", Offset = "0x9F536C", VA = "0x9F536C")]
	public void SwitchControlMode()
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0x9F5370", Offset = "0x9F5370", VA = "0x9F5370")]
	public Pvr_ControllerDemo()
	{
	}
}
[Token(Token = "0x200003E")]
public class Pvr_ControllerEventsExamples : MonoBehaviour
{
	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x1228F20", Offset = "0x1228F20", VA = "0x1228F20")]
	private void Start()
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x122915C", Offset = "0x122915C", VA = "0x122915C")]
	private void UIPointerElementEnter(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x12291FC", Offset = "0x12291FC", VA = "0x12291FC")]
	private void UIPointerElementExit(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x122929C", Offset = "0x122929C", VA = "0x122929C")]
	private void UIPointerElementClick(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x122933C", Offset = "0x122933C", VA = "0x122933C")]
	private void UIPointerElementDragStart(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0x12293DC", Offset = "0x12293DC", VA = "0x12293DC")]
	private void UIPointerElementDragEnd(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x122947C", Offset = "0x122947C", VA = "0x122947C")]
	public Pvr_ControllerEventsExamples()
	{
	}
}
[Token(Token = "0x200003F")]
public class Pvr_ControllerInit : MonoBehaviour
{
	[Token(Token = "0x2000347")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9788", Offset = "0x7F9788")]
	private sealed class <RefreshController>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400232E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400232F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int id;

		[Token(Token = "0x4002331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Pvr_ControllerInit <>4__this;

		[Token(Token = "0x170002ED")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60017F3")]
			[Address(RVA = "0x122B900", Offset = "0x122B900", VA = "0x122B900", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017F5")]
			[Address(RVA = "0x122B96C", Offset = "0x122B96C", VA = "0x122B96C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017F0")]
		[Address(RVA = "0x122A884", Offset = "0x122A884", VA = "0x122A884")]
		[DebuggerHidden]
		public <RefreshController>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x60017F1")]
		[Address(RVA = "0x122B51C", Offset = "0x122B51C", VA = "0x122B51C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017F2")]
		[Address(RVA = "0x122B520", Offset = "0x122B520", VA = "0x122B520", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017F4")]
		[Address(RVA = "0x122B908", Offset = "0x122B908", VA = "0x122B908", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ControllerVariety Variety;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool isCustomModel;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject goblin;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject g2;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject neo2L;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject neo2R;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject neo3L;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject neo3R;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Material standardMat;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Material unlitMat;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int controllerType;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[HideInInspector]
	public bool loadModelSuccess;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int systemOrUnity;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private JsonData curControllerData;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string modelName;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string texFormat;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string prePath;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private string modelFilePath;

	[Token(Token = "0x40001C5")]
	private const string goblinTexbasePath = "Controller/controller1/controller1";

	[Token(Token = "0x40001C6")]
	private const string g2TexbasePath = "Controller/controller3/controller3";

	[Token(Token = "0x40001C7")]
	private const string neo2TexbasePath = "Controller/controller4/controller4";

	[Token(Token = "0x40001C8")]
	private const string neo3TexbasePath = "Controller/controller5/controller5";

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x1229484", Offset = "0x1229484", VA = "0x1229484")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x12298E0", Offset = "0x12298E0", VA = "0x12298E0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x1229C98", Offset = "0x1229C98", VA = "0x1229C98")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x1229F6C", Offset = "0x1229F6C", VA = "0x1229F6C")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x122A168", Offset = "0x122A168", VA = "0x122A168")]
	private void LoadResFromJson()
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x122A35C", Offset = "0x122A35C", VA = "0x122A35C")]
	private void CheckControllerStateForGoblin(string state)
	{
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x122A71C", Offset = "0x122A71C", VA = "0x122A71C")]
	private void CheckControllerStateOfAbility(string data)
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x1229CA4", Offset = "0x1229CA4", VA = "0x1229CA4")]
	private void DestroyLocalController()
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x122A448", Offset = "0x122A448", VA = "0x122A448")]
	private void DestroySysController()
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x122A2D8", Offset = "0x122A2D8", VA = "0x122A2D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8029D8", Offset = "0x8029D8")]
	private IEnumerator RefreshController(int id)
	{
		return null;
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x122A8B0", Offset = "0x122A8B0", VA = "0x122A8B0")]
	private void LoadControllerFromPrefab()
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x122AE6C", Offset = "0x122AE6C", VA = "0x122AE6C")]
	private void LoadControllerFromSystem(int id)
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x122AB70", Offset = "0x122AB70", VA = "0x122AB70")]
	private void LoadTexture(Pvr_ControllerVisual visual, string controllerName, bool fromRes)
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x122B284", Offset = "0x122B284", VA = "0x122B284")]
	private Texture2D LoadOneTexture(string filepath, bool fromRes)
	{
		return null;
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x122B398", Offset = "0x122B398", VA = "0x122B398")]
	private byte[] ReadPNG(string path)
	{
		return null;
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x122B4A8", Offset = "0x122B4A8", VA = "0x122B4A8")]
	public Pvr_ControllerInit()
	{
	}
}
[Token(Token = "0x2000040")]
public class Pvr_ControllerLink
{
	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AndroidJavaClass javaHummingbirdClass;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AndroidJavaClass javaPico2ReceiverClass;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AndroidJavaClass javaserviceClass;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AndroidJavaClass javavractivityclass;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AndroidJavaClass javaCVClass;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AndroidJavaObject activity;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string gameobjname;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool picoDevice;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string hummingBirdMac;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int hummingBirdRSSI;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool goblinserviceStarted;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	public bool neoserviceStarted;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	public bool controller0Connected;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F")]
	public bool controller1Connected;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int mainHandID;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Pvr_Controller.UserHandNess handness;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int controllerType;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ControllerHand Controller0;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ControllerHand Controller1;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int platFormType;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int trackingmode;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int systemProp;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int enablehand6dofbyhead;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool switchHomeKey;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int iPhoneHMDModeEnabled;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float[] hbPoseData;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float[] sensorData;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int[] keyData;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int[] neo3TouchValue;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float[] fixedState;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float[] neoposeData;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int[] goblinKeyArray;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int[] neoKeyArray;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int[] neotriggerV;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float[] velocity;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float[] angularVelocity;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float[] acceData;

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x122B974", Offset = "0x122B974", VA = "0x122B974")]
	public Pvr_ControllerLink(string name)
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x122BD04", Offset = "0x122BD04", VA = "0x122BD04")]
	private void StartHummingBirdService()
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x122C750", Offset = "0x122C750", VA = "0x122C750")]
	public bool IsServiceExisted()
	{
		return default(bool);
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x122C4F4", Offset = "0x122C4F4", VA = "0x122C4F4")]
	public void SetGameObjectToJar(string name)
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x122C604", Offset = "0x122C604", VA = "0x122C604")]
	public void BindService()
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x122C8D8", Offset = "0x122C8D8", VA = "0x122C8D8")]
	public void UnBindService()
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x122CA24", Offset = "0x122CA24", VA = "0x122CA24")]
	public void StopLark2Receiver()
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x122CB80", Offset = "0x122CB80", VA = "0x122CB80")]
	public void StartLark2Receiver()
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0x122CCA4", Offset = "0x122CCA4", VA = "0x122CCA4")]
	public void StopLark2Service()
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0x122CE00", Offset = "0x122CE00", VA = "0x122CE00")]
	public void StartLark2Service()
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0x122CF88", Offset = "0x122CF88", VA = "0x122CF88")]
	public int getHandness()
	{
		return default(int);
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x122D198", Offset = "0x122D198", VA = "0x122D198")]
	public void setHandness(int hand)
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x122D2F4", Offset = "0x122D2F4", VA = "0x122D2F4")]
	public void StartScan()
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x122D410", Offset = "0x122D410", VA = "0x122D410")]
	public void StopScan()
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x122C380", Offset = "0x122C380", VA = "0x122C380")]
	public int GetSysproc()
	{
		return default(int);
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x122D530", Offset = "0x122D530", VA = "0x122D530")]
	public void ResetController(int num)
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x122D738", Offset = "0x122D738", VA = "0x122D738")]
	public void ConnectBLE()
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x122D874", Offset = "0x122D874", VA = "0x122D874")]
	public void DisConnectBLE()
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x122D994", Offset = "0x122D994", VA = "0x122D994")]
	public bool StartUpgrade()
	{
		return default(bool);
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x122DAD0", Offset = "0x122DAD0", VA = "0x122DAD0")]
	public void setBinPath(string path, bool isasset)
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0x122DC48", Offset = "0x122DC48", VA = "0x122DC48")]
	public string GetBLEImageType()
	{
		return null;
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x122DDAC", Offset = "0x122DDAC", VA = "0x122DDAC")]
	public long GetBLEVersion()
	{
		return default(long);
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x122DF14", Offset = "0x122DF14", VA = "0x122DF14")]
	public string GetFileImageType()
	{
		return null;
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x122E078", Offset = "0x122E078", VA = "0x122E078")]
	public long GetFileVersion()
	{
		return default(long);
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0x122E1E0", Offset = "0x122E1E0", VA = "0x122E1E0")]
	public int GetControllerConnectionState(int num)
	{
		return default(int);
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0x122E524", Offset = "0x122E524", VA = "0x122E524")]
	public void RebackToLauncher()
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0x122E70C", Offset = "0x122E70C", VA = "0x122E70C")]
	public void TurnUpVolume()
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0x122E888", Offset = "0x122E888", VA = "0x122E888")]
	public void TurnDownVolume()
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0x122EA04", Offset = "0x122EA04", VA = "0x122EA04")]
	public float[] GetHBControllerPoseData()
	{
		return null;
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0x122EDD4", Offset = "0x122EDD4", VA = "0x122EDD4")]
	public float[] GetControllerSensorData()
	{
		return null;
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0x122EFA4", Offset = "0x122EFA4", VA = "0x122EFA4")]
	public int[] GetControllerKeyData()
	{
		return null;
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0x122F0A8", Offset = "0x122F0A8", VA = "0x122F0A8")]
	public int[] GetNeo3TouchData(int hand)
	{
		return null;
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x122F824", Offset = "0x122F824", VA = "0x122F824")]
	public int GetNeo3GripValue(int hand)
	{
		return default(int);
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x122F9B8", Offset = "0x122F9B8", VA = "0x122F9B8")]
	public float[] GetControllerFixedSensorState(int hand)
	{
		return null;
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x122FF64", Offset = "0x122FF64", VA = "0x122FF64")]
	public float[] GetCvControllerPoseData(int hand)
	{
		return null;
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0x1230538", Offset = "0x1230538", VA = "0x1230538")]
	public int[] GetHBControllerKeyData()
	{
		return null;
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x123183C", Offset = "0x123183C", VA = "0x123183C")]
	public int GetHBKeyValue()
	{
		return default(int);
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0x12319DC", Offset = "0x12319DC", VA = "0x12319DC")]
	public int[] GetCvControllerKeyData(int hand)
	{
		return null;
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0x1233478", Offset = "0x1233478", VA = "0x1233478")]
	public int GetCVTriggerValue(int hand)
	{
		return default(int);
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x1233634", Offset = "0x1233634", VA = "0x1233634")]
	public void AutoConnectHbController(int scanTimeMs)
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0x12337B0", Offset = "0x12337B0", VA = "0x12337B0")]
	public void StartControllerThread(int headSensorState, int handSensorState)
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x1233978", Offset = "0x1233978", VA = "0x1233978")]
	public void StopControllerThread(int headSensorState, int handSensorState)
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x1233B40", Offset = "0x1233B40", VA = "0x1233B40")]
	public void SetUnityVersionToJar(string version)
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x1233C60", Offset = "0x1233C60", VA = "0x1233C60")]
	public Vector3 GetVelocity(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x1233FD4", Offset = "0x1233FD4", VA = "0x1233FD4")]
	public Vector3 GetAngularVelocity(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x12343E0", Offset = "0x12343E0", VA = "0x12343E0")]
	public Vector3 GetAcceleration(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x123478C", Offset = "0x123478C", VA = "0x123478C")]
	public string GetConnectedDeviceMac()
	{
		return null;
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x12348F0", Offset = "0x12348F0", VA = "0x12348F0")]
	public void VibrateNeo2Controller(float strength, int time, int hand)
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x1234BD0", Offset = "0x1234BD0", VA = "0x1234BD0")]
	public int GetMainControllerIndex()
	{
		return default(int);
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x1234D48", Offset = "0x1234D48", VA = "0x1234D48")]
	public void SetMainController(int index)
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x1234EA0", Offset = "0x1234EA0", VA = "0x1234EA0")]
	public void ResetHeadSensorForController()
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x1234FC8", Offset = "0x1234FC8", VA = "0x1234FC8")]
	public void GetDeviceVersion(int deviceType)
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x1235128", Offset = "0x1235128", VA = "0x1235128")]
	public void GetControllerSnCode(int controllerSerialNum)
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x1235288", Offset = "0x1235288", VA = "0x1235288")]
	public void SetControllerUnbind(int controllerSerialNum)
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x12353E8", Offset = "0x12353E8", VA = "0x12353E8")]
	public void SetStationRestart()
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x1235510", Offset = "0x1235510", VA = "0x1235510")]
	public void StartStationOtaUpdate()
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x1235638", Offset = "0x1235638", VA = "0x1235638")]
	public void StartControllerOtaUpdate(int mode, int controllerSerialNum)
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x12357F8", Offset = "0x12357F8", VA = "0x12357F8")]
	public void EnterPairMode(int controllerSerialNum)
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0x1235958", Offset = "0x1235958", VA = "0x1235958")]
	public void SetControllerShutdown(int controllerSerialNum)
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0x1235AB8", Offset = "0x1235AB8", VA = "0x1235AB8")]
	public int GetStationPairState()
	{
		return default(int);
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0x1235C34", Offset = "0x1235C34", VA = "0x1235C34")]
	public int GetStationOtaUpdateProgress()
	{
		return default(int);
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x1235DB0", Offset = "0x1235DB0", VA = "0x1235DB0")]
	public int GetControllerOtaUpdateProgress()
	{
		return default(int);
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x1235F2C", Offset = "0x1235F2C", VA = "0x1235F2C")]
	public void GetControllerVersionAndSN(int controllerSerialNum)
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x123608C", Offset = "0x123608C", VA = "0x123608C")]
	public void GetControllerUniqueID()
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x12361B4", Offset = "0x12361B4", VA = "0x12361B4")]
	public void InterruptStationPairMode()
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x12362DC", Offset = "0x12362DC", VA = "0x12362DC")]
	public int GetControllerAbility(int controllerSerialNum)
	{
		return default(int);
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x1236458", Offset = "0x1236458", VA = "0x1236458")]
	public void SwitchHomeKey(bool state)
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x123650C", Offset = "0x123650C", VA = "0x123650C")]
	public void SetBootReconnect()
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x123662C", Offset = "0x123662C", VA = "0x123662C")]
	public int GetTemperature()
	{
		return default(int);
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x12367A0", Offset = "0x12367A0", VA = "0x12367A0")]
	public int GetDeviceType()
	{
		return default(int);
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x1236914", Offset = "0x1236914", VA = "0x1236914")]
	public int GetControllerType()
	{
		return default(int);
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x1236A1C", Offset = "0x1236A1C", VA = "0x1236A1C")]
	public string GetHummingBird2SN()
	{
		return null;
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x1236B78", Offset = "0x1236B78", VA = "0x1236B78")]
	public string GetControllerVersion()
	{
		return null;
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x1236CD4", Offset = "0x1236CD4", VA = "0x1236CD4")]
	public bool IsEnbleTrigger()
	{
		return default(bool);
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x1236E34", Offset = "0x1236E34", VA = "0x1236E34")]
	public void StartCV2PairingMode(int devicetype)
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x1236F94", Offset = "0x1236F94", VA = "0x1236F94")]
	public void StopCV2PairingMode(int devicetype)
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x12370F4", Offset = "0x12370F4", VA = "0x12370F4")]
	public int GetControllerBindingState(int id)
	{
		return default(int);
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x1237260", Offset = "0x1237260", VA = "0x1237260")]
	public void setIsEnbleHomeKey(bool state)
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x12373B0", Offset = "0x12373B0", VA = "0x12373B0")]
	public int getControllerSensorStatus(int id)
	{
		return default(int);
	}
}
[Token(Token = "0x2000041")]
public class Pvr_ControllerManager : MonoBehaviour
{
	[Token(Token = "0x2000348")]
	public delegate void PvrServiceStartSuccess();

	[Token(Token = "0x2000349")]
	public delegate void PvrControllerStateChanged(string data);

	[Token(Token = "0x200034A")]
	public delegate void ChangeMainControllerCallBack(string index);

	[Token(Token = "0x200034B")]
	public delegate void ChangeHandNessCallBack(string index);

	[Token(Token = "0x200034C")]
	public delegate void SetHbServiceBindState();

	[Token(Token = "0x200034D")]
	public delegate void ControllerThreadStartedCallback();

	[Token(Token = "0x200034E")]
	public delegate void SetControllerServiceBindState();

	[Token(Token = "0x200034F")]
	public delegate void ControllerStatusChange(string isconnect);

	[Token(Token = "0x2000350")]
	public delegate void SetControllerAbility(string data);

	[Token(Token = "0x2000351")]
	public delegate void SetControllerStateChanged(string data);

	[Token(Token = "0x2000352")]
	public delegate void SetHbControllerMac(string mac);

	[Token(Token = "0x2000353")]
	public delegate void ControllerDeviceVersionCallback(string data);

	[Token(Token = "0x2000354")]
	public delegate void ControllerSnCodeCallback(string data);

	[Token(Token = "0x2000355")]
	public delegate void ControllerUnbindCallback(string status);

	[Token(Token = "0x2000356")]
	public delegate void ControllerStationStatusCallback(string status);

	[Token(Token = "0x2000357")]
	public delegate void ControllerStationBusyCallback(string status);

	[Token(Token = "0x2000358")]
	public delegate void ControllerOtaStartCodeCallback(string data);

	[Token(Token = "0x2000359")]
	public delegate void ControllerDeviceVersionAndSNCallback(string data);

	[Token(Token = "0x200035A")]
	public delegate void ControllerUniqueIDCallback(string data);

	[Token(Token = "0x200035B")]
	public delegate void ControllerCombinedKeyUnbindCallback(string data);

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_ControllerManager instance;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Pvr_ControllerLink controllerlink;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float cTime;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool stopConnect;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text toast;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool controllerServicestate;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float disConnectTime;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool LengthAdaptiveRay;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float[] sensorData;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int[] keyData;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float[] g2SensorData;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int[] g2KeyData;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int keyOffset;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int rotControllerMode;

	[Token(Token = "0x1700002A")]
	public static Pvr_ControllerManager Instance
	{
		[Token(Token = "0x6000251")]
		[Address(RVA = "0x123751C", Offset = "0x123751C", VA = "0x123751C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000002")]
	public static event PvrServiceStartSuccess PvrServiceStartSuccessEvent
	{
		[Token(Token = "0x6000252")]
		[Address(RVA = "0x12295F0", Offset = "0x12295F0", VA = "0x12295F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x802A3C", Offset = "0x802A3C")]
		add
		{
		}
		[Token(Token = "0x6000253")]
		[Address(RVA = "0x12299C8", Offset = "0x12299C8", VA = "0x12299C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x802A4C", Offset = "0x802A4C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public static event PvrControllerStateChanged PvrControllerStateChangedEvent
	{
		[Token(Token = "0x6000254")]
		[Address(RVA = "0x1237750", Offset = "0x1237750", VA = "0x1237750")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x802A5C", Offset = "0x802A5C")]
		add
		{
		}
		[Token(Token = "0x6000255")]
		[Address(RVA = "0x1237840", Offset = "0x1237840", VA = "0x1237840")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x802A6C", Offset = "0x802A6C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public static event ChangeMainControllerCallBack ChangeMainControllerCallBackEvent
	{
		[Token(Token = "0x6000256")]
		[Address(RVA = "0x1237930", Offset = "0x1237930", VA = "0x1237930")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x802A7C", Offset = "0x802A7C")]
		add
		{
		}
		[Token(Token = "0x6000257")]
		[Address(RVA = "0x1237A20", Offset = "0x1237A20", VA = "0x1237A20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x802A8C", Offset = "0x802A8C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public static event ChangeHandNessCallBack ChangeHandNessCallBackEvent
	{
		[Token(Token = "0x6000258")]
		[Address(RVA = "0x1237B10", Offset = "0x1237B10", VA = "0x1237B10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x802A9C", Offset = "0x802A9C")]
		add
		{
		}
		[Token(Token = "0x6000259")]
		[Address(RVA = "0x1237C00", Offset = "0x1237C00", VA = "0x1237C00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x802AAC", Offset = "0x802AAC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public static event SetHbServiceBindState SetHbServiceBindStateEvent
	{
		[Token(Token = "0x600025A")]
		[Address(RVA = "0x1237CF0", Offset = "0x1237CF0", VA = "0x1237CF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x802ABC", Offset = "0x802ABC")]
		add
		{
		}
		[Token(Token = "0x600025B")]
		[Address(RVA = "0x1237DE0", Offset = "0x1237DE0", VA = "0x1237DE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x802ACC", Offset = "0x802ACC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public static event ControllerThreadStartedCallback ControllerThreadStartedCallbackEvent
	{
		[Token(Token = "0x600025C")]
		[Address(RVA = "0x1237ED0", Offset = "0x1237ED0", VA = "0x1237ED0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x802ADC", Offset = "0x802ADC")]
		add
		{
		}
		[Token(Token = "0x600025D")]
		[Address(RVA = "0x1237FC0", Offset = "0x1237FC0", VA = "0x1237FC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x802AEC", Offset = "0x802AEC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public static event SetControllerServiceBindState SetControllerServiceBindStateEvent
	{
		[Token(Token = "0x600025E")]
		[Address(RVA = "0x12380B0", Offset = "0x12380B0", VA = "0x12380B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x802AFC", Offset = "0x802AFC")]
		add
		{
		}
		[Token(Token = "0x600025F")]
		[Address(RVA = "0x12381A0", Offset = "0x12381A0", VA = "0x12381A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x802B0C", Offset = "0x802B0C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public static event ControllerStatusChange ControllerStatusChangeEvent
	{
		[Token(Token = "0x6000260")]
		[Address(RVA = "0x12297F0", Offset = "0x12297F0", VA = "0x12297F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x802B1C", Offset = "0x802B1C")]
		add
		{
		}
		[Token(Token = "0x6000261")]
		[Address(RVA = "0x1229BA8", Offset = "0x1229BA8", VA = "0x1229BA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x802B2C", Offset = "0x802B2C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public static event SetControllerAbility SetControllerAbilityEvent
	{
		[Token(Token = "0x6000262")]
		[Address(RVA = "0x12296F0", Offset = "0x12296F0", VA = "0x12296F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x802B3C", Offset = "0x802B3C")]
		add
		{
		}
		[Token(Token = "0x6000263")]
		[Address(RVA = "0x1229AB8", Offset = "0x1229AB8", VA = "0x1229AB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x802B4C", Offset = "0x802B4C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public static event SetControllerStateChanged SetControllerStateChangedEvent
	{
		[Token(Token = "0x6000264")]
		[Address(RVA = "0x1238290", Offset = "0x1238290", VA = "0x1238290")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x802B5C", Offset = "0x802B5C")]
		add
		{
		}
		[Token(Token = "0x6000265")]
		[Address(RVA = "0x1238380", Offset = "0x1238380", VA = "0x1238380")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x802B6C", Offset = "0x802B6C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public static event SetHbControllerMac SetHbControllerMacEvent
	{
		[Token(Token = "0x6000266")]
		[Address(RVA = "0x1238470", Offset = "0x1238470", VA = "0x1238470")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x802B7C", Offset = "0x802B7C")]
		add
		{
		}
		[Token(Token = "0x6000267")]
		[Address(RVA = "0x1238560", Offset = "0x1238560", VA = "0x1238560")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x802B8C", Offset = "0x802B8C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public static event ControllerDeviceVersionCallback ControllerDeviceVersionCallbackEvent
	{
		[Token(Token = "0x6000268")]
		[Address(RVA = "0x1238650", Offset = "0x1238650", VA = "0x1238650")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x802B9C", Offset = "0x802B9C")]
		add
		{
		}
		[Token(Token = "0x6000269")]
		[Address(RVA = "0x1238740", Offset = "0x1238740", VA = "0x1238740")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x802BAC", Offset = "0x802BAC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public static event ControllerSnCodeCallback ControllerSnCodeCallbackEvent
	{
		[Token(Token = "0x600026A")]
		[Address(RVA = "0x1238830", Offset = "0x1238830", VA = "0x1238830")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x802BBC", Offset = "0x802BBC")]
		add
		{
		}
		[Token(Token = "0x600026B")]
		[Address(RVA = "0x1238920", Offset = "0x1238920", VA = "0x1238920")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x802BCC", Offset = "0x802BCC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000F")]
	public static event ControllerUnbindCallback ControllerUnbindCallbackEvent
	{
		[Token(Token = "0x600026C")]
		[Address(RVA = "0x1238A10", Offset = "0x1238A10", VA = "0x1238A10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x802BDC", Offset = "0x802BDC")]
		add
		{
		}
		[Token(Token = "0x600026D")]
		[Address(RVA = "0x1238B00", Offset = "0x1238B00", VA = "0x1238B00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x802BEC", Offset = "0x802BEC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000010")]
	public static event ControllerStationStatusCallback ControllerStationStatusCallbackEvent
	{
		[Token(Token = "0x600026E")]
		[Address(RVA = "0x1238BF0", Offset = "0x1238BF0", VA = "0x1238BF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x802BFC", Offset = "0x802BFC")]
		add
		{
		}
		[Token(Token = "0x600026F")]
		[Address(RVA = "0x1238CE0", Offset = "0x1238CE0", VA = "0x1238CE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x802C0C", Offset = "0x802C0C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000011")]
	public static event ControllerStationBusyCallback ControllerStationBusyCallbackEvent
	{
		[Token(Token = "0x6000270")]
		[Address(RVA = "0x1238DD0", Offset = "0x1238DD0", VA = "0x1238DD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x802C1C", Offset = "0x802C1C")]
		add
		{
		}
		[Token(Token = "0x6000271")]
		[Address(RVA = "0x1238EC0", Offset = "0x1238EC0", VA = "0x1238EC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x802C2C", Offset = "0x802C2C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000012")]
	public static event ControllerOtaStartCodeCallback ControllerOtaStartCodeCallbackEvent
	{
		[Token(Token = "0x6000272")]
		[Address(RVA = "0x1238FB0", Offset = "0x1238FB0", VA = "0x1238FB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x802C3C", Offset = "0x802C3C")]
		add
		{
		}
		[Token(Token = "0x6000273")]
		[Address(RVA = "0x12390A0", Offset = "0x12390A0", VA = "0x12390A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x802C4C", Offset = "0x802C4C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000013")]
	public static event ControllerDeviceVersionAndSNCallback ControllerDeviceVersionAndSNCallbackEvent
	{
		[Token(Token = "0x6000274")]
		[Address(RVA = "0x1239190", Offset = "0x1239190", VA = "0x1239190")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x802C5C", Offset = "0x802C5C")]
		add
		{
		}
		[Token(Token = "0x6000275")]
		[Address(RVA = "0x1239280", Offset = "0x1239280", VA = "0x1239280")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x802C6C", Offset = "0x802C6C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000014")]
	public static event ControllerUniqueIDCallback ControllerUniqueIDCallbackEvent
	{
		[Token(Token = "0x6000276")]
		[Address(RVA = "0x1239370", Offset = "0x1239370", VA = "0x1239370")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x802C7C", Offset = "0x802C7C")]
		add
		{
		}
		[Token(Token = "0x6000277")]
		[Address(RVA = "0x1239460", Offset = "0x1239460", VA = "0x1239460")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x802C8C", Offset = "0x802C8C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000015")]
	public static event ControllerCombinedKeyUnbindCallback ControllerCombinedKeyUnbindCallbackEvent
	{
		[Token(Token = "0x6000278")]
		[Address(RVA = "0x1239550", Offset = "0x1239550", VA = "0x1239550")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x802C9C", Offset = "0x802C9C")]
		add
		{
		}
		[Token(Token = "0x6000279")]
		[Address(RVA = "0x1239640", Offset = "0x1239640", VA = "0x1239640")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x802CAC", Offset = "0x802CAC")]
		remove
		{
		}
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0x1239730", Offset = "0x1239730", VA = "0x1239730")]
	private void Awake()
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0x1239A28", Offset = "0x1239A28", VA = "0x1239A28")]
	private void Start()
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x1239AD4", Offset = "0x1239AD4", VA = "0x1239AD4")]
	private void Update()
	{
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0x123B584", Offset = "0x123B584", VA = "0x123B584")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0x123BBFC", Offset = "0x123BBFC", VA = "0x123BBFC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0x123BCD8", Offset = "0x123BCD8", VA = "0x123BCD8")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0x123BE28", Offset = "0x123BE28", VA = "0x123BE28")]
	public void StopLark2Service()
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x123BED0", Offset = "0x123BED0", VA = "0x123BED0")]
	public Vector3 GetAngularVelocity(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x123BFB4", Offset = "0x123BFB4", VA = "0x123BFB4")]
	public Vector3 GetAcceleration(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x1239980", Offset = "0x1239980", VA = "0x1239980")]
	public void BindService()
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x123C098", Offset = "0x123C098", VA = "0x123C098")]
	public void StartScan()
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x123C140", Offset = "0x123C140", VA = "0x123C140")]
	public void StopScan()
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0x123C1E8", Offset = "0x123C1E8", VA = "0x123C1E8")]
	public void ResetController(int num)
	{
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x123B968", Offset = "0x123B968", VA = "0x123B968")]
	public static int GetControllerConnectionState(int num)
	{
		return default(int);
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x123C298", Offset = "0x123C298", VA = "0x123C298")]
	public void ConnectBLE()
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x123C340", Offset = "0x123C340", VA = "0x123C340")]
	public void DisConnectBLE()
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x123C3E8", Offset = "0x123C3E8", VA = "0x123C3E8")]
	public void SetBinPath(string path, bool isAsset)
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x123C4AC", Offset = "0x123C4AC", VA = "0x123C4AC")]
	public void StartUpgrade()
	{
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0x123C554", Offset = "0x123C554", VA = "0x123C554")]
	public static string GetBLEImageType()
	{
		return null;
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x123C5C4", Offset = "0x123C5C4", VA = "0x123C5C4")]
	public static long GetBLEVersion()
	{
		return default(long);
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x123C634", Offset = "0x123C634", VA = "0x123C634")]
	public static string GetFileImageType()
	{
		return null;
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x123C6A4", Offset = "0x123C6A4", VA = "0x123C6A4")]
	public static long GetFileVersion()
	{
		return default(long);
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x123C714", Offset = "0x123C714", VA = "0x123C714")]
	public static void AutoConnectHbController(int scans)
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x123C7C4", Offset = "0x123C7C4", VA = "0x123C7C4")]
	public static string GetConnectedDeviceMac()
	{
		return null;
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x123C87C", Offset = "0x123C87C", VA = "0x123C87C")]
	public void setHbControllerMac(string mac)
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x123CDF0", Offset = "0x123CDF0", VA = "0x123CDF0")]
	public int GetControllerRSSI()
	{
		return default(int);
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x123CE68", Offset = "0x123CE68", VA = "0x123CE68")]
	public void setHbServiceBindState(string state)
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0x123D30C", Offset = "0x123D30C", VA = "0x123D30C")]
	public void setControllerServiceBindState(string state)
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x123D7B8", Offset = "0x123D7B8", VA = "0x123D7B8")]
	public void setHbControllerConnectState(string isconnect)
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x123E1B4", Offset = "0x123E1B4", VA = "0x123E1B4")]
	public void setControllerStateChanged(string state)
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x123EAFC", Offset = "0x123EAFC", VA = "0x123EAFC")]
	public void setControllerAbility(string data)
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x123EFAC", Offset = "0x123EFAC", VA = "0x123EFAC")]
	public void controllerThreadStartedCallback()
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x123F600", Offset = "0x123F600", VA = "0x123F600")]
	public void controllerDeviceVersionCallback(string data)
	{
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0x123FAB0", Offset = "0x123FAB0", VA = "0x123FAB0")]
	public void controllerSnCodeCallback(string data)
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0x123FF60", Offset = "0x123FF60", VA = "0x123FF60")]
	public void controllerUnbindCallback(string status)
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x1240410", Offset = "0x1240410", VA = "0x1240410")]
	public void controllerStationStatusCallback(string status)
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0x12408C0", Offset = "0x12408C0", VA = "0x12408C0")]
	public void controllerStationBusyCallback(string status)
	{
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x1240D70", Offset = "0x1240D70", VA = "0x1240D70")]
	public void controllerOTAStartCodeCallback(string data)
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x1241220", Offset = "0x1241220", VA = "0x1241220")]
	public void controllerDeviceVersionAndSNCallback(string data)
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x12416D0", Offset = "0x12416D0", VA = "0x12416D0")]
	public void controllerUniqueIDCallback(string data)
	{
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x1241B80", Offset = "0x1241B80", VA = "0x1241B80")]
	public void controllerCombinedKeyUnbindCallback(string controllerSerialNum)
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x1241FE4", Offset = "0x1241FE4", VA = "0x1241FE4")]
	public void setupdateFailed()
	{
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0x1241FE8", Offset = "0x1241FE8", VA = "0x1241FE8")]
	public void setupdateSuccess()
	{
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x1241FEC", Offset = "0x1241FEC", VA = "0x1241FEC")]
	public void setupdateProgress(string progress)
	{
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x1241FF0", Offset = "0x1241FF0", VA = "0x1241FF0")]
	public void setHbAutoConnectState(string state)
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x1242310", Offset = "0x1242310", VA = "0x1242310")]
	public void callbackControllerServiceState(string state)
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x124246C", Offset = "0x124246C", VA = "0x124246C")]
	public void changeMainControllerCallback(string index)
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x1242970", Offset = "0x1242970", VA = "0x1242970")]
	public void changeHandnessCallback(string index)
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0x1242144", Offset = "0x1242144", VA = "0x1242144")]
	private void ShowToast(int type)
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0x1242E74", Offset = "0x1242E74", VA = "0x1242E74")]
	private void HideToast()
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0x1242F1C", Offset = "0x1242F1C", VA = "0x1242F1C")]
	private void CheckControllerService()
	{
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0x123F0E8", Offset = "0x123F0E8", VA = "0x123F0E8")]
	private void GetCVControllerState()
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x123AE78", Offset = "0x123AE78", VA = "0x123AE78")]
	private void SetSystemKey()
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0x123AAA0", Offset = "0x123AAA0", VA = "0x123AAA0")]
	private void TransformData(ControllerHand hand, int handId, int[] data)
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0x1242F30", Offset = "0x1242F30", VA = "0x1242F30")]
	private void TransSingleKey(PvrControllerKey key, int beginIndex, int[] data)
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0x1243088", Offset = "0x1243088", VA = "0x1243088")]
	private void TransformTouchData(ControllerHand hand, int handId, int[] data)
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0x1243130", Offset = "0x1243130", VA = "0x1243130")]
	private void TransSingleTouchValue(PvrControllerKey key, int beginIndex, int[] data)
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0x1243238", Offset = "0x1243238", VA = "0x1243238")]
	public Pvr_ControllerManager()
	{
	}
}
[Token(Token = "0x2000042")]
public class Pvr_ControllerModuleInit : MonoBehaviour
{
	[Token(Token = "0x200035C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9798", Offset = "0x7F9798")]
	private sealed class <ShowOrHideRay>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_ControllerModuleInit <>4__this;

		[Token(Token = "0x4002335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int id;

		[Token(Token = "0x170002EF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001849")]
			[Address(RVA = "0x1244098", Offset = "0x1244098", VA = "0x1244098", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600184B")]
			[Address(RVA = "0x1244104", Offset = "0x1244104", VA = "0x1244104", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001846")]
		[Address(RVA = "0x1243C70", Offset = "0x1243C70", VA = "0x1243C70")]
		[DebuggerHidden]
		public <ShowOrHideRay>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6001847")]
		[Address(RVA = "0x1243FC4", Offset = "0x1243FC4", VA = "0x1243FC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001848")]
		[Address(RVA = "0x1243FC8", Offset = "0x1243FC8", VA = "0x1243FC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600184A")]
		[Address(RVA = "0x12440A0", Offset = "0x12440A0", VA = "0x12440A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ControllerVariety Variety;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool IsCustomModel;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject dot;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject rayLine;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject controller;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool moduleState;

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0x12437FC", Offset = "0x12437FC", VA = "0x12437FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0x1243984", Offset = "0x1243984", VA = "0x1243984")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x1243A6C", Offset = "0x1243A6C", VA = "0x1243A6C")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x1243AE0", Offset = "0x1243AE0", VA = "0x1243AE0")]
	private void ControllerStateChanged(string data)
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x1243BE8", Offset = "0x1243BE8", VA = "0x1243BE8")]
	private void MainControllerIDChanged(string data)
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x1243A70", Offset = "0x1243A70", VA = "0x1243A70")]
	private void RefreshRay()
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x1243BEC", Offset = "0x1243BEC", VA = "0x1243BEC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x802CBC", Offset = "0x802CBC")]
	private IEnumerator ShowOrHideRay(int id)
	{
		return null;
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0x1243C9C", Offset = "0x1243C9C", VA = "0x1243C9C")]
	public void ForceHideOrShow(bool state)
	{
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x1243DA0", Offset = "0x1243DA0", VA = "0x1243DA0")]
	public void UpdateRay()
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x1243FB4", Offset = "0x1243FB4", VA = "0x1243FB4")]
	public Pvr_ControllerModuleInit()
	{
	}
}
[Token(Token = "0x2000043")]
public class Pvr_ControllerPower : MonoBehaviour
{
	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Sprite power1;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Sprite power2;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Sprite power3;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Sprite power4;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Sprite power5;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public ControllerVariety variety;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public ControllerDevice currentDevice;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Image powerImage;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int powerValue;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float power;

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x124410C", Offset = "0x124410C", VA = "0x124410C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0x12441D4", Offset = "0x12441D4", VA = "0x12441D4")]
	private void Update()
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x12441F4", Offset = "0x12441F4", VA = "0x12441F4")]
	private void RefreshPower(int hand)
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0x1244318", Offset = "0x1244318", VA = "0x1244318")]
	public Pvr_ControllerPower()
	{
	}
}
[Token(Token = "0x2000044")]
public class Pvr_ControllerVisual : MonoBehaviour
{
	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ControllerDevice currentDevice;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture2D m_idle;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture2D m_app;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture2D m_home;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture2D m_touchpad;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture2D m_volUp;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D m_volDn;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Texture2D m_trigger;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Texture2D m_a;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Texture2D m_b;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Texture2D m_x;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Texture2D m_y;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Texture2D m_grip;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Renderer controllerRenderMat;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[HideInInspector]
	public ControllerVariety variety;

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x1244320", Offset = "0x1244320", VA = "0x1244320")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0x1244378", Offset = "0x1244378", VA = "0x1244378")]
	private void Start()
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0x12443E8", Offset = "0x12443E8", VA = "0x12443E8")]
	private void Update()
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0x1244408", Offset = "0x1244408", VA = "0x1244408")]
	private void ChangeKeyEffects(int hand)
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0x1244734", Offset = "0x1244734", VA = "0x1244734")]
	public Pvr_ControllerVisual()
	{
	}
}
[Token(Token = "0x2000045")]
public class Pvr_ToolTips : MonoBehaviour
{
	[Token(Token = "0x200035D")]
	public enum TipBtn
	{
		[Token(Token = "0x4002337")]
		app,
		[Token(Token = "0x4002338")]
		touchpad,
		[Token(Token = "0x4002339")]
		home,
		[Token(Token = "0x400233A")]
		volup,
		[Token(Token = "0x400233B")]
		voldown,
		[Token(Token = "0x400233C")]
		trigger,
		[Token(Token = "0x400233D")]
		grip
	}

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ControllerDevice currentDevice;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float tipsAlpha;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Pvr_ToolTips tooltips;

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0xC87D94", Offset = "0xC87D94", VA = "0xC87D94")]
	public void ChangeTipsText(TipBtn tip, string key)
	{
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0xC87F0C", Offset = "0xC87F0C", VA = "0xC87F0C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0xC87F84", Offset = "0xC87F84", VA = "0xC87F84")]
	private void Update()
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0xC88188", Offset = "0xC88188", VA = "0xC88188")]
	private void LoadTextFromJson()
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0xC887BC", Offset = "0xC887BC", VA = "0xC887BC")]
	public static void RefreshTips()
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0xC88860", Offset = "0xC88860", VA = "0xC88860")]
	public Pvr_ToolTips()
	{
	}
}
[Token(Token = "0x2000046")]
public class Pvr_TouchPadScroll : MonoBehaviour
{
	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ScrollRect scrollRect;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isHoving;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int mainHand;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SwipeDirection direction;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector2 currPos;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector2 tarPos;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float lerpSpeed;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform tranViewport;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float ignoreDis;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector2 lastTouchDownPos;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector2 lastTouchUpPos;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool isTouching;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	private bool isClosed;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector2 vecOrigin;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector2 vecOriginNeo2;

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0xC88868", Offset = "0xC88868", VA = "0xC88868")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0xC888F8", Offset = "0xC888F8", VA = "0xC888F8")]
	private void Update()
	{
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0xC88D98", Offset = "0xC88D98", VA = "0xC88D98")]
	private bool IsControllerConnect()
	{
		return default(bool);
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0xC88A44", Offset = "0xC88A44", VA = "0xC88A44")]
	private void UpdateTargetPos()
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0xC89A70", Offset = "0xC89A70", VA = "0xC89A70")]
	private void ComputeTouchPos()
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0xC89DBC", Offset = "0xC89DBC", VA = "0xC89DBC")]
	private void ComputeRockerPos()
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0xC8A23C", Offset = "0xC8A23C", VA = "0xC8A23C")]
	private bool VerifyNeo2TouchValid(Vector2 nowTouchPos)
	{
		return default(bool);
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0xC88B90", Offset = "0xC88B90", VA = "0xC88B90")]
	private void UpdatePos()
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0xC89990", Offset = "0xC89990", VA = "0xC89990")]
	private void ResetParameter()
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0xC88924", Offset = "0xC88924", VA = "0xC88924")]
	private void Process()
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0xC8A278", Offset = "0xC8A278", VA = "0xC8A278")]
	private bool IsHovering(Pvr_UIPointer pointer)
	{
		return default(bool);
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0xC8A470", Offset = "0xC8A470", VA = "0xC8A470")]
	private bool FindTree(Transform tran)
	{
		return default(bool);
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0xC8A560", Offset = "0xC8A560", VA = "0xC8A560")]
	public Pvr_TouchPadScroll()
	{
	}
}
[Token(Token = "0x2000047")]
public class Pvr_TouchVisual : MonoBehaviour
{
	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public ControllerDevice currentDevice;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public ControllerVariety variety;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshRenderer touchRenderer;

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0xC8A61C", Offset = "0xC8A61C", VA = "0xC8A61C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0xC8A6C4", Offset = "0xC8A6C4", VA = "0xC8A6C4")]
	private void Update()
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0xC8A6E4", Offset = "0xC8A6E4", VA = "0xC8A6E4")]
	private void ChangeEffects(int hand)
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0xC8A9BC", Offset = "0xC8A9BC", VA = "0xC8A9BC")]
	public Pvr_TouchVisual()
	{
	}
}
[Token(Token = "0x2000048")]
public class DemoController : MonoBehaviour
{
	[Token(Token = "0x200035E")]
	public delegate void showLoadingEventHandler();

	[Token(Token = "0x200035F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F97A8", Offset = "0x7F97A8")]
	private sealed class <>c__DisplayClass12_0
	{
		[Token(Token = "0x400233E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject btnObj;

		[Token(Token = "0x400233F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DemoController <>4__this;

		[Token(Token = "0x6001850")]
		[Address(RVA = "0xA8D168", Offset = "0xA8D168", VA = "0xA8D168")]
		public <>c__DisplayClass12_0()
		{
		}

		[Token(Token = "0x6001851")]
		[Address(RVA = "0xA8D9A0", Offset = "0xA8D9A0", VA = "0xA8D9A0")]
		internal void <InitDelegate>b__0()
		{
		}
	}

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Callback callback;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject msg;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Pvr_UnitySDKManager picoVrManager;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string currentOrderID;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject loading;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject BG;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject InputPanel;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static showLoadingEventHandler showLoading;

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0xA8C99C", Offset = "0xA8C99C", VA = "0xA8C99C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0xA8CB50", Offset = "0xA8CB50", VA = "0xA8CB50")]
	private void Start()
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0xA8D004", Offset = "0xA8D004", VA = "0xA8D004")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0xA8CC1C", Offset = "0xA8CC1C", VA = "0xA8CC1C")]
	private void InitDelegate()
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0xA8D170", Offset = "0xA8D170", VA = "0xA8D170")]
	private void OnClick(GameObject btnObj)
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0xA8D4A8", Offset = "0xA8D4A8", VA = "0xA8D4A8")]
	public string getRamdomTestOrderID()
	{
		return null;
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0xA8D464", Offset = "0xA8D464", VA = "0xA8D464")]
	private void StartLoading()
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0xA8D4EC", Offset = "0xA8D4EC", VA = "0xA8D4EC")]
	public void StopLoading()
	{
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0xA8D5FC", Offset = "0xA8D5FC", VA = "0xA8D5FC")]
	public void DoPayByCode()
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0xA8D8C8", Offset = "0xA8D8C8", VA = "0xA8D8C8")]
	private bool VerifyLocalToken()
	{
		return default(bool);
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0xA8D998", Offset = "0xA8D998", VA = "0xA8D998")]
	public DemoController()
	{
	}
}
[Token(Token = "0x2000049")]
public class LoadingRatation : MonoBehaviour
{
	[Token(Token = "0x60002EA")]
	[Address(RVA = "0xA16544", Offset = "0xA16544", VA = "0xA16544")]
	private void Start()
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0xA16548", Offset = "0xA16548", VA = "0xA16548")]
	private void Update()
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0xA165C4", Offset = "0xA165C4", VA = "0xA165C4")]
	public LoadingRatation()
	{
	}
}
[Token(Token = "0x200004A")]
public class InputManager : MonoBehaviour
{
	[Token(Token = "0x2000360")]
	public delegate void doEnterEventHandler();

	[Token(Token = "0x2000361")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F97B8", Offset = "0x7F97B8")]
	private sealed class <>c__DisplayClass8_0
	{
		[Token(Token = "0x4002340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject btnObj;

		[Token(Token = "0x4002341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InputManager <>4__this;

		[Token(Token = "0x6001856")]
		[Address(RVA = "0x9A8B70", Offset = "0x9A8B70", VA = "0x9A8B70")]
		public <>c__DisplayClass8_0()
		{
		}

		[Token(Token = "0x6001857")]
		[Address(RVA = "0x9A979C", Offset = "0x9A979C", VA = "0x9A979C")]
		internal void <InitKeyBoard>b__0()
		{
		}
	}

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static doEnterEventHandler doEnter;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private StringBuilder sb;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ArrayList btnsName;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject enter;

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x9A8274", Offset = "0x9A8274", VA = "0x9A8274")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x9A8B68", Offset = "0x9A8B68", VA = "0x9A8B68")]
	private void Start()
	{
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0x9A8B6C", Offset = "0x9A8B6C", VA = "0x9A8B6C")]
	private void Update()
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x9A8278", Offset = "0x9A8278", VA = "0x9A8278")]
	private void InitKeyBoard()
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x9A8B78", Offset = "0x9A8B78", VA = "0x9A8B78")]
	private void OnClick(GameObject btnObj)
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x9A9620", Offset = "0x9A9620", VA = "0x9A9620")]
	private void EnterChar(string s)
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x9A8DB0", Offset = "0x9A8DB0", VA = "0x9A8DB0")]
	private void DoCapslock(bool IsUpper)
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x9A9390", Offset = "0x9A9390", VA = "0x9A9390")]
	private void ClearBuffer()
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x9A9714", Offset = "0x9A9714", VA = "0x9A9714")]
	public InputManager()
	{
	}
}
[Token(Token = "0x200004B")]
public class Callback : MonoBehaviour
{
	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string IS_SUCCESS;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string MSG;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string CODE;

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0xA3EDF0", Offset = "0xA3EDF0", VA = "0xA3EDF0")]
	public void LoginCallback(string LoginInfo)
	{
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0xA3F16C", Offset = "0xA3F16C", VA = "0xA3F16C")]
	public void QueryOrPayCallback(string queryOrPayInfo)
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0xA3F390", Offset = "0xA3F390", VA = "0xA3F390")]
	public void UserInfoCallback(string userInfo)
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0xA3F0A4", Offset = "0xA3F0A4", VA = "0xA3F0A4")]
	public void SetMassage(string massage)
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0xA3F6B0", Offset = "0xA3F6B0", VA = "0xA3F6B0")]
	public GameObject GetCurrentGameObject()
	{
		return null;
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0xA3F6FC", Offset = "0xA3F6FC", VA = "0xA3F6FC")]
	public void ActivityForResultCallback(string activity)
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0xA3F82C", Offset = "0xA3F82C", VA = "0xA3F82C")]
	public Callback()
	{
	}
}
[Token(Token = "0x200004C")]
public class CommonDic
{
	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static CommonDic dic;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<string, string> mydic;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private string _app_ID;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string _app_Key;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string _user_token;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string _access_token;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string _open_id;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string _refresh_token;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string _expires_in;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string _user_info;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string _subject;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string _body;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string _order_id;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string _total;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string _goods_tag;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string _notify_url;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string _trade_type;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string _pay_code;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private string _order_info;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private string _code;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private string _msg;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string _merchant_ID;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private string _payKey;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private string _isSuucess;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private string _loginMsg;

	[Token(Token = "0x1700002B")]
	public string subject
	{
		[Token(Token = "0x6000302")]
		[Address(RVA = "0xA88858", Offset = "0xA88858", VA = "0xA88858")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000303")]
		[Address(RVA = "0xA88860", Offset = "0xA88860", VA = "0xA88860")]
		set
		{
		}
	}

	[Token(Token = "0x1700002C")]
	public string body
	{
		[Token(Token = "0x6000304")]
		[Address(RVA = "0xA88868", Offset = "0xA88868", VA = "0xA88868")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000305")]
		[Address(RVA = "0xA88870", Offset = "0xA88870", VA = "0xA88870")]
		set
		{
		}
	}

	[Token(Token = "0x1700002D")]
	public string order_id
	{
		[Token(Token = "0x6000306")]
		[Address(RVA = "0xA88878", Offset = "0xA88878", VA = "0xA88878")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000307")]
		[Address(RVA = "0xA88880", Offset = "0xA88880", VA = "0xA88880")]
		set
		{
		}
	}

	[Token(Token = "0x1700002E")]
	public string total
	{
		[Token(Token = "0x6000308")]
		[Address(RVA = "0xA88888", Offset = "0xA88888", VA = "0xA88888")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000309")]
		[Address(RVA = "0xA88890", Offset = "0xA88890", VA = "0xA88890")]
		set
		{
		}
	}

	[Token(Token = "0x1700002F")]
	public string goods_tag
	{
		[Token(Token = "0x600030A")]
		[Address(RVA = "0xA88898", Offset = "0xA88898", VA = "0xA88898")]
		get
		{
			return null;
		}
		[Token(Token = "0x600030B")]
		[Address(RVA = "0xA888A0", Offset = "0xA888A0", VA = "0xA888A0")]
		set
		{
		}
	}

	[Token(Token = "0x17000030")]
	public string notify_url
	{
		[Token(Token = "0x600030C")]
		[Address(RVA = "0xA888A8", Offset = "0xA888A8", VA = "0xA888A8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600030D")]
		[Address(RVA = "0xA888B0", Offset = "0xA888B0", VA = "0xA888B0")]
		set
		{
		}
	}

	[Token(Token = "0x17000031")]
	public string pay_code
	{
		[Token(Token = "0x600030E")]
		[Address(RVA = "0xA888B8", Offset = "0xA888B8", VA = "0xA888B8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600030F")]
		[Address(RVA = "0xA888C0", Offset = "0xA888C0", VA = "0xA888C0")]
		set
		{
		}
	}

	[Token(Token = "0x17000032")]
	public string trade_type
	{
		[Token(Token = "0x6000310")]
		[Address(RVA = "0xA888C8", Offset = "0xA888C8", VA = "0xA888C8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000311")]
		[Address(RVA = "0xA888D0", Offset = "0xA888D0", VA = "0xA888D0")]
		set
		{
		}
	}

	[Token(Token = "0x17000033")]
	public string user_token
	{
		[Token(Token = "0x6000312")]
		[Address(RVA = "0xA888D8", Offset = "0xA888D8", VA = "0xA888D8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000313")]
		[Address(RVA = "0xA888E0", Offset = "0xA888E0", VA = "0xA888E0")]
		set
		{
		}
	}

	[Token(Token = "0x17000034")]
	public string access_token
	{
		[Token(Token = "0x6000314")]
		[Address(RVA = "0xA888E8", Offset = "0xA888E8", VA = "0xA888E8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000315")]
		[Address(RVA = "0xA888F0", Offset = "0xA888F0", VA = "0xA888F0")]
		set
		{
		}
	}

	[Token(Token = "0x17000035")]
	public string open_id
	{
		[Token(Token = "0x6000316")]
		[Address(RVA = "0xA888F8", Offset = "0xA888F8", VA = "0xA888F8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000317")]
		[Address(RVA = "0xA88900", Offset = "0xA88900", VA = "0xA88900")]
		set
		{
		}
	}

	[Token(Token = "0x17000036")]
	public string refresh_token
	{
		[Token(Token = "0x6000318")]
		[Address(RVA = "0xA88908", Offset = "0xA88908", VA = "0xA88908")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000319")]
		[Address(RVA = "0xA88910", Offset = "0xA88910", VA = "0xA88910")]
		set
		{
		}
	}

	[Token(Token = "0x17000037")]
	public string expires_in
	{
		[Token(Token = "0x600031A")]
		[Address(RVA = "0xA88918", Offset = "0xA88918", VA = "0xA88918")]
		get
		{
			return null;
		}
		[Token(Token = "0x600031B")]
		[Address(RVA = "0xA88920", Offset = "0xA88920", VA = "0xA88920")]
		set
		{
		}
	}

	[Token(Token = "0x17000038")]
	public string isSuccess
	{
		[Token(Token = "0x600031C")]
		[Address(RVA = "0xA88928", Offset = "0xA88928", VA = "0xA88928")]
		get
		{
			return null;
		}
		[Token(Token = "0x600031D")]
		[Address(RVA = "0xA88930", Offset = "0xA88930", VA = "0xA88930")]
		set
		{
		}
	}

	[Token(Token = "0x17000039")]
	public string loginMsg
	{
		[Token(Token = "0x600031E")]
		[Address(RVA = "0xA88938", Offset = "0xA88938", VA = "0xA88938")]
		get
		{
			return null;
		}
		[Token(Token = "0x600031F")]
		[Address(RVA = "0xA88940", Offset = "0xA88940", VA = "0xA88940")]
		set
		{
		}
	}

	[Token(Token = "0x1700003A")]
	public string user_info
	{
		[Token(Token = "0x6000320")]
		[Address(RVA = "0xA88948", Offset = "0xA88948", VA = "0xA88948")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000321")]
		[Address(RVA = "0xA88950", Offset = "0xA88950", VA = "0xA88950")]
		set
		{
		}
	}

	[Token(Token = "0x1700003B")]
	public string order_info
	{
		[Token(Token = "0x6000322")]
		[Address(RVA = "0xA88958", Offset = "0xA88958", VA = "0xA88958")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000323")]
		[Address(RVA = "0xA88960", Offset = "0xA88960", VA = "0xA88960")]
		set
		{
		}
	}

	[Token(Token = "0x1700003C")]
	public string code
	{
		[Token(Token = "0x6000324")]
		[Address(RVA = "0xA88968", Offset = "0xA88968", VA = "0xA88968")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000325")]
		[Address(RVA = "0xA88970", Offset = "0xA88970", VA = "0xA88970")]
		set
		{
		}
	}

	[Token(Token = "0x1700003D")]
	public string msg
	{
		[Token(Token = "0x6000326")]
		[Address(RVA = "0xA88978", Offset = "0xA88978", VA = "0xA88978")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000327")]
		[Address(RVA = "0xA88980", Offset = "0xA88980", VA = "0xA88980")]
		set
		{
		}
	}

	[Token(Token = "0x1700003E")]
	public string app_ID
	{
		[Token(Token = "0x6000328")]
		[Address(RVA = "0xA88988", Offset = "0xA88988", VA = "0xA88988")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000329")]
		[Address(RVA = "0xA88990", Offset = "0xA88990", VA = "0xA88990")]
		set
		{
		}
	}

	[Token(Token = "0x1700003F")]
	public string app_Key
	{
		[Token(Token = "0x600032A")]
		[Address(RVA = "0xA88998", Offset = "0xA88998", VA = "0xA88998")]
		get
		{
			return null;
		}
		[Token(Token = "0x600032B")]
		[Address(RVA = "0xA889A0", Offset = "0xA889A0", VA = "0xA889A0")]
		set
		{
		}
	}

	[Token(Token = "0x17000040")]
	public string merchant_ID
	{
		[Token(Token = "0x600032C")]
		[Address(RVA = "0xA889A8", Offset = "0xA889A8", VA = "0xA889A8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600032D")]
		[Address(RVA = "0xA889B0", Offset = "0xA889B0", VA = "0xA889B0")]
		set
		{
		}
	}

	[Token(Token = "0x17000041")]
	public string paykey
	{
		[Token(Token = "0x600032E")]
		[Address(RVA = "0xA889B8", Offset = "0xA889B8", VA = "0xA889B8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600032F")]
		[Address(RVA = "0xA889C0", Offset = "0xA889C0", VA = "0xA889C0")]
		set
		{
		}
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0xA88084", Offset = "0xA88084", VA = "0xA88084")]
	public static CommonDic getInstance()
	{
		return null;
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0xA8863C", Offset = "0xA8863C", VA = "0xA8863C")]
	public Dictionary<string, string> getDic()
	{
		return null;
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0xA8868C", Offset = "0xA8868C", VA = "0xA8868C")]
	public void setParameters(string name, string value)
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0xA887E8", Offset = "0xA887E8", VA = "0xA887E8")]
	public string PayOrderString()
	{
		return null;
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0xA881B4", Offset = "0xA881B4", VA = "0xA881B4")]
	public static void InitDicData(Dictionary<string, string> mydic)
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0xA88148", Offset = "0xA88148", VA = "0xA88148")]
	public CommonDic()
	{
	}
}
[Token(Token = "0x200004D")]
public class LoginSDK
{
	[Token(Token = "0x6000332")]
	[Address(RVA = "0xA1C2A0", Offset = "0xA1C2A0", VA = "0xA1C2A0")]
	public static void Login()
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0xA1C300", Offset = "0xA1C300", VA = "0xA1C300")]
	public static void GetUserAPI()
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0xA1C360", Offset = "0xA1C360", VA = "0xA1C360")]
	public LoginSDK()
	{
	}
}
[Token(Token = "0x200004E")]
public class PicoPaymentSDK
{
	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AndroidJavaObject _jo;

	[Token(Token = "0x17000042")]
	public static AndroidJavaObject jo
	{
		[Token(Token = "0x6000335")]
		[Address(RVA = "0x9EDE8C", Offset = "0x9EDE8C", VA = "0x9EDE8C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000336")]
		[Address(RVA = "0x9EDEF4", Offset = "0x9EDEF4", VA = "0x9EDEF4")]
		set
		{
		}
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0x9EDF60", Offset = "0x9EDF60", VA = "0x9EDF60")]
	public static void Login()
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x9EE1D0", Offset = "0x9EE1D0", VA = "0x9EE1D0")]
	public static void Pay(string payOrderJson)
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x9EE3FC", Offset = "0x9EE3FC", VA = "0x9EE3FC")]
	public static void QueryOrder(string orderId)
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0x9EE628", Offset = "0x9EE628", VA = "0x9EE628")]
	public static void GetUserAPI()
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0x9EE898", Offset = "0x9EE898", VA = "0x9EE898")]
	public PicoPaymentSDK()
	{
	}
}
[Token(Token = "0x200004F")]
public class Pvr_ToBService : MonoBehaviour
{
	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text deviceInfoText;

	[Token(Token = "0x600033D")]
	[Address(RVA = "0xC8786C", Offset = "0xC8786C", VA = "0xC8786C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0xC878A4", Offset = "0xC878A4", VA = "0xC878A4")]
	private void Start()
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0xC878B4", Offset = "0xC878B4", VA = "0xC878B4")]
	private void OnDestory()
	{
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0xC87870", Offset = "0xC87870", VA = "0xC87870")]
	private void InitToBService()
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0xC878AC", Offset = "0xC878AC", VA = "0xC878AC")]
	private void BindToBService()
	{
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0xC878BC", Offset = "0xC878BC", VA = "0xC878BC")]
	private void UnBindToBService()
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0xC878C4", Offset = "0xC878C4", VA = "0xC878C4")]
	private void BoolCallback(string value)
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0xC87974", Offset = "0xC87974", VA = "0xC87974")]
	private void IntCallback(string value)
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0xC87A04", Offset = "0xC87A04", VA = "0xC87A04")]
	private void LongCallback(string value)
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0xC87A94", Offset = "0xC87A94", VA = "0xC87A94")]
	public void StateGetDeviceInfo()
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0xC87B20", Offset = "0xC87B20", VA = "0xC87B20")]
	public void ControlSetDeviceAction()
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0xC87BA0", Offset = "0xC87BA0", VA = "0xC87BA0")]
	private void ControlSetDeviceActionCallBack(int value)
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0xC87C50", Offset = "0xC87C50", VA = "0xC87C50")]
	public void AppManager()
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0xC87CDC", Offset = "0xC87CDC", VA = "0xC87CDC")]
	private void AppManagerCallBack(int value)
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0xC87D8C", Offset = "0xC87D8C", VA = "0xC87D8C")]
	public Pvr_ToBService()
	{
	}
}
[Token(Token = "0x2000050")]
public class PLOG : MonoBehaviour
{
	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int logLevel;

	[Token(Token = "0x600034C")]
	[Address(RVA = "0x9E9D50", Offset = "0x9E9D50", VA = "0x9E9D50")]
	public static void getConfigTraceLevel()
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0x9E9DBC", Offset = "0x9E9DBC", VA = "0x9E9DBC")]
	public static void D(string msg)
	{
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0x9E9E64", Offset = "0x9E9E64", VA = "0x9E9E64")]
	public static void I(string msg)
	{
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0x9E9F0C", Offset = "0x9E9F0C", VA = "0x9E9F0C")]
	public static void W(string msg)
	{
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x9E9FB4", Offset = "0x9E9FB4", VA = "0x9E9FB4")]
	public static void E(string msg)
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0x9EA01C", Offset = "0x9EA01C", VA = "0x9EA01C")]
	public PLOG()
	{
	}
}
[Token(Token = "0x2000051")]
public class CPicoSDKSettingAsset : ScriptableObject
{
	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IgnoreSDKSetting;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool DontshowBuildWaring;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool AppIDChecked;

	[Token(Token = "0x6000353")]
	[Address(RVA = "0xA3EDE8", Offset = "0xA3EDE8", VA = "0xA3EDE8")]
	public CPicoSDKSettingAsset()
	{
	}
}
[Serializable]
[Token(Token = "0x2000052")]
public class Pvr_UnitySDKProjectSetting : ScriptableObject
{
	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RenderTextureAntiAliasing rtAntiAlising;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public RenderTextureDepth rtBitDepth;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RenderTextureFormat rtFormat;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool usedefaultRenderTexture;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2 customRTSize;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool usedefaultfps;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int customfps;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool usesinglepass;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool usecontentprotect;

	[Token(Token = "0x6000354")]
	[Address(RVA = "0xED4F5C", Offset = "0xED4F5C", VA = "0xED4F5C")]
	public static Pvr_UnitySDKProjectSetting GetProjectConfig()
	{
		return null;
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0xEDC358", Offset = "0xEDC358", VA = "0xEDC358")]
	public Pvr_UnitySDKProjectSetting()
	{
	}
}
[Token(Token = "0x2000053")]
public sealed class Pvr_UnitySDKPlatformSetting : ScriptableObject
{
	[Token(Token = "0x2000362")]
	public enum simulationType
	{
		[Token(Token = "0x4002343")]
		Null,
		[Token(Token = "0x4002344")]
		Invalid,
		[Token(Token = "0x4002345")]
		Valid
	}

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool entitlementchecksimulation;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	private bool startTimeEntitlementCheck;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public string appID;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<string> deviceSN;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKPlatformSetting instance;

	[Token(Token = "0x17000043")]
	public static bool Entitlementchecksimulation
	{
		[Token(Token = "0x6000356")]
		[Address(RVA = "0xEDB6A4", Offset = "0xEDB6A4", VA = "0xEDB6A4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000357")]
		[Address(RVA = "0xEDB6C4", Offset = "0xEDB6C4", VA = "0xEDB6C4")]
		set
		{
		}
	}

	[Token(Token = "0x17000044")]
	public static bool StartTimeEntitlementCheck
	{
		[Token(Token = "0x6000358")]
		[Address(RVA = "0xEDB300", Offset = "0xEDB300", VA = "0xEDB300")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000359")]
		[Address(RVA = "0xEDB710", Offset = "0xEDB710", VA = "0xEDB710")]
		set
		{
		}
	}

	[Token(Token = "0x17000045")]
	public static Pvr_UnitySDKPlatformSetting Instance
	{
		[Token(Token = "0x600035A")]
		[Address(RVA = "0xEDB320", Offset = "0xEDB320", VA = "0xEDB320")]
		get
		{
			return null;
		}
		[Token(Token = "0x600035B")]
		[Address(RVA = "0xEDB75C", Offset = "0xEDB75C", VA = "0xEDB75C")]
		set
		{
		}
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0xEDB7B0", Offset = "0xEDB7B0", VA = "0xEDB7B0")]
	public Pvr_UnitySDKPlatformSetting()
	{
	}
}
[Token(Token = "0x2000054")]
public class Pvr_UnitySDKManager : MonoBehaviour
{
	[Token(Token = "0x2000363")]
	public delegate void EntitlementCheckResult(int ReturnValue);

	[Token(Token = "0x2000364")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F97C8", Offset = "0x7F97C8")]
	private sealed class <ToastManager>d__97 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x4002349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int type;

		[Token(Token = "0x400234A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Pvr_UnitySDKManager <>4__this;

		[Token(Token = "0x400234B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool state;

		[Token(Token = "0x170002F1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600185F")]
			[Address(RVA = "0xEDB588", Offset = "0xEDB588", VA = "0xEDB588", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001861")]
			[Address(RVA = "0xEDB5F4", Offset = "0xEDB5F4", VA = "0xEDB5F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600185C")]
		[Address(RVA = "0xED63A4", Offset = "0xED63A4", VA = "0xED63A4")]
		[DebuggerHidden]
		public <ToastManager>d__97(int <>1__state)
		{
		}

		[Token(Token = "0x600185D")]
		[Address(RVA = "0xEDB44C", Offset = "0xEDB44C", VA = "0xEDB44C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600185E")]
		[Address(RVA = "0xEDB450", Offset = "0xEDB450", VA = "0xEDB450", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001860")]
		[Address(RVA = "0xEDB590", Offset = "0xEDB590", VA = "0xEDB590", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000365")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F97D8", Offset = "0x7F97D8")]
	private sealed class <>c__DisplayClass102_0
	{
		[Token(Token = "0x400234C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Pvr_UnitySDKManager <>4__this;

		[Token(Token = "0x400234D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform trans;

		[Token(Token = "0x6001862")]
		[Address(RVA = "0xED777C", Offset = "0xED777C", VA = "0xED777C")]
		public <>c__DisplayClass102_0()
		{
		}

		[Token(Token = "0x6001863")]
		[Address(RVA = "0xEDA478", Offset = "0xEDA478", VA = "0xEDA478")]
		internal void <SetProperty>b__0()
		{
		}
	}

	[Token(Token = "0x2000366")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F97E8", Offset = "0x7F97E8")]
	private sealed class <G3TipsManager>d__106 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400234E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400234F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x4002351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject tip;

		[Token(Token = "0x170002F3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001867")]
			[Address(RVA = "0xEDA58C", Offset = "0xEDA58C", VA = "0xEDA58C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001869")]
			[Address(RVA = "0xEDA5F8", Offset = "0xEDA5F8", VA = "0xEDA5F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001864")]
		[Address(RVA = "0xED7AB8", Offset = "0xED7AB8", VA = "0xED7AB8")]
		[DebuggerHidden]
		public <G3TipsManager>d__106(int <>1__state)
		{
		}

		[Token(Token = "0x6001865")]
		[Address(RVA = "0xEDA4D0", Offset = "0xEDA4D0", VA = "0xEDA4D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001866")]
		[Address(RVA = "0xEDA4D4", Offset = "0xEDA4D4", VA = "0xEDA4D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001868")]
		[Address(RVA = "0xEDA594", Offset = "0xEDA594", VA = "0xEDA594", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000367")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F97F8", Offset = "0x7F97F8")]
	private sealed class <Start>d__118 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_UnitySDKManager <>4__this;

		[Token(Token = "0x170002F5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600186D")]
			[Address(RVA = "0xEDB3D8", Offset = "0xEDB3D8", VA = "0xEDB3D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600186F")]
			[Address(RVA = "0xEDB444", Offset = "0xEDB444", VA = "0xEDB444", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600186A")]
		[Address(RVA = "0xED9730", Offset = "0xED9730", VA = "0xED9730")]
		[DebuggerHidden]
		public <Start>d__118(int <>1__state)
		{
		}

		[Token(Token = "0x600186B")]
		[Address(RVA = "0xEDB0B8", Offset = "0xEDB0B8", VA = "0xEDB0B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600186C")]
		[Address(RVA = "0xEDB0BC", Offset = "0xEDB0BC", VA = "0xEDB0BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600186E")]
		[Address(RVA = "0xEDB3E0", Offset = "0xEDB3E0", VA = "0xEDB3E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000368")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9808", Offset = "0x7F9808")]
	private sealed class <InitRenderThreadRoutine>d__119 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <i>5__2;

		[Token(Token = "0x170002F7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001873")]
			[Address(RVA = "0xEDA8F8", Offset = "0xEDA8F8", VA = "0xEDA8F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001875")]
			[Address(RVA = "0xEDA964", Offset = "0xEDA964", VA = "0xEDA964", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001870")]
		[Address(RVA = "0xED97BC", Offset = "0xED97BC", VA = "0xED97BC")]
		[DebuggerHidden]
		public <InitRenderThreadRoutine>d__119(int <>1__state)
		{
		}

		[Token(Token = "0x6001871")]
		[Address(RVA = "0xEDA600", Offset = "0xEDA600", VA = "0xEDA600", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001872")]
		[Address(RVA = "0xEDA604", Offset = "0xEDA604", VA = "0xEDA604", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001874")]
		[Address(RVA = "0xEDA900", Offset = "0xEDA900", VA = "0xEDA900", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000369")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9818", Offset = "0x7F9818")]
	private sealed class <OnResume>d__132 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400235A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_UnitySDKManager <>4__this;

		[Token(Token = "0x400235B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <ability6dof>5__2;

		[Token(Token = "0x400235C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <waitNum>5__3;

		[Token(Token = "0x400235D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <resetNum>5__4;

		[Token(Token = "0x400235E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <i>5__5;

		[Token(Token = "0x170002F9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001879")]
			[Address(RVA = "0xEDB044", Offset = "0xEDB044", VA = "0xEDB044", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600187B")]
			[Address(RVA = "0xEDB0B0", Offset = "0xEDB0B0", VA = "0xEDB0B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001876")]
		[Address(RVA = "0xEDA36C", Offset = "0xEDA36C", VA = "0xEDA36C")]
		[DebuggerHidden]
		public <OnResume>d__132(int <>1__state)
		{
		}

		[Token(Token = "0x6001877")]
		[Address(RVA = "0xEDA96C", Offset = "0xEDA96C", VA = "0xEDA96C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001878")]
		[Address(RVA = "0xEDA970", Offset = "0xEDA970", VA = "0xEDA970", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600187A")]
		[Address(RVA = "0xEDB04C", Offset = "0xEDB04C", VA = "0xEDB04C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PlatForm platform;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Pvr_UnitySDKManager sdk;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public float EyesAspect;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public int posStatus;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public bool ismirroring;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public Vector3 resetBasePos;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public int trackingmode;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public int systemprop;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public bool systemFPS;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public float[] headData;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private bool rotfoldout;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[SerializeField]
	private bool hmdOnlyrot;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	[SerializeField]
	private bool controllerOnlyrot;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private TrackingOrigin trackingOrigin;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool ResetTrackerOnLoad;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[HideInInspector]
	public Vector3 leftEyeOffset;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public Vector3 rightEyeOffset;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[HideInInspector]
	public Rect leftEyeRect;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[HideInInspector]
	public Rect rightEyeRect;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[HideInInspector]
	public Matrix4x4 leftEyeView;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[HideInInspector]
	public Matrix4x4 rightEyeView;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[HideInInspector]
	public Pvr_UnitySDKEditor pvr_UnitySDKEditor;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private bool vrModeEnabled;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[HideInInspector]
	public Material Eyematerial;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[HideInInspector]
	public Material Middlematerial;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7FCEF8", Offset = "0x7FCEF8")]
	private bool <picovrTriggered>k__BackingField;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x131")]
	[HideInInspector]
	public bool newPicovrTriggered;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x132")]
	[SerializeField]
	private bool showFPS;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	[HideInInspector]
	public Vector3 neckOffset;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private bool pVRNeck;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x141")]
	[HideInInspector]
	public bool UseCustomNeckPara;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x142")]
	[HideInInspector]
	public bool onResume;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x143")]
	[HideInInspector]
	public bool isEnterVRMode;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public bool isHasController;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Pvr_UnitySDKConfigProfile pvr_UnitySDKConfig;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private GameObject calltoast;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private GameObject msgtoast;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private GameObject lowhmdBatterytoast;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private GameObject lowphoneBatterytoast;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private GameObject LowPhoneHealthtoast;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private GameObject LowcontrollerBatterytoast;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private bool lowControllerpowerstate;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private float controllerpowershowtime;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool UseToast;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private int iPhoneHMDModeEnabled;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private GameObject G3LiteTips;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[SerializeField]
	private bool monoscopic;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x199")]
	private bool mIsAndroid7;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Func<bool> eventEnterVRMode;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19A")]
	[HideInInspector]
	public bool ShowVideoSeethrough;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	public int SystemDebugFFRLevel;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public int SystemFFRLevel;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	public int AppCheckResult;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Action longPressHomeKeyAction;

	[Token(Token = "0x17000046")]
	public static Pvr_UnitySDKManager SDK
	{
		[Token(Token = "0x600035D")]
		[Address(RVA = "0xECCD6C", Offset = "0xECCD6C", VA = "0xECCD6C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000047")]
	public bool Rotfoldout
	{
		[Token(Token = "0x600035E")]
		[Address(RVA = "0xED4E60", Offset = "0xED4E60", VA = "0xED4E60")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600035F")]
		[Address(RVA = "0xED4E68", Offset = "0xED4E68", VA = "0xED4E68")]
		set
		{
		}
	}

	[Token(Token = "0x17000048")]
	public bool HmdOnlyrot
	{
		[Token(Token = "0x6000360")]
		[Address(RVA = "0xED4E88", Offset = "0xED4E88", VA = "0xED4E88")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000361")]
		[Address(RVA = "0xED4E90", Offset = "0xED4E90", VA = "0xED4E90")]
		set
		{
		}
	}

	[Token(Token = "0x17000049")]
	public bool ControllerOnlyrot
	{
		[Token(Token = "0x6000362")]
		[Address(RVA = "0xED4EB0", Offset = "0xED4EB0", VA = "0xED4EB0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000363")]
		[Address(RVA = "0xED4EB8", Offset = "0xED4EB8", VA = "0xED4EB8")]
		set
		{
		}
	}

	[Token(Token = "0x1700004A")]
	public TrackingOrigin TrackingOrigin
	{
		[Token(Token = "0x6000364")]
		[Address(RVA = "0xED4ED8", Offset = "0xED4ED8", VA = "0xED4ED8")]
		get
		{
			return default(TrackingOrigin);
		}
		[Token(Token = "0x6000365")]
		[Address(RVA = "0xED4EE0", Offset = "0xED4EE0", VA = "0xED4EE0")]
		set
		{
		}
	}

	[Token(Token = "0x1700004B")]
	[HideInInspector]
	public bool VRModeEnabled
	{
		[Token(Token = "0x6000369")]
		[Address(RVA = "0xED4FEC", Offset = "0xED4FEC", VA = "0xED4FEC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600036A")]
		[Address(RVA = "0xECDF1C", Offset = "0xECDF1C", VA = "0xECDF1C")]
		set
		{
		}
	}

	[Token(Token = "0x1700004C")]
	[HideInInspector]
	public bool picovrTriggered
	{
		[Token(Token = "0x600036B")]
		[Address(RVA = "0xED4FF4", Offset = "0xED4FF4", VA = "0xED4FF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x802D20", Offset = "0x802D20")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600036C")]
		[Address(RVA = "0xED4FFC", Offset = "0xED4FFC", VA = "0xED4FFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x802D30", Offset = "0x802D30")]
		set
		{
		}
	}

	[Token(Token = "0x1700004D")]
	public bool ShowFPS
	{
		[Token(Token = "0x600036D")]
		[Address(RVA = "0xED5008", Offset = "0xED5008", VA = "0xED5008")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600036E")]
		[Address(RVA = "0xED5010", Offset = "0xED5010", VA = "0xED5010")]
		set
		{
		}
	}

	[Token(Token = "0x1700004E")]
	public bool PVRNeck
	{
		[Token(Token = "0x600036F")]
		[Address(RVA = "0xED5030", Offset = "0xED5030", VA = "0xED5030")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000370")]
		[Address(RVA = "0xED5038", Offset = "0xED5038", VA = "0xED5038")]
		set
		{
		}
	}

	[Token(Token = "0x1700004F")]
	[HideInInspector]
	public bool Monoscopic
	{
		[Token(Token = "0x6000371")]
		[Address(RVA = "0xED5058", Offset = "0xED5058", VA = "0xED5058")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000372")]
		[Address(RVA = "0xED5060", Offset = "0xED5060", VA = "0xED5060")]
		set
		{
		}
	}

	[Token(Token = "0x14000016")]
	public static event EntitlementCheckResult EntitlementCheckResultEvent
	{
		[Token(Token = "0x6000373")]
		[Address(RVA = "0xED508C", Offset = "0xED508C", VA = "0xED508C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x802D40", Offset = "0x802D40")]
		add
		{
		}
		[Token(Token = "0x6000374")]
		[Address(RVA = "0xED517C", Offset = "0xED517C", VA = "0xED517C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x802D50", Offset = "0x802D50")]
		remove
		{
		}
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0xED4F00", Offset = "0xED4F00", VA = "0xED4F00")]
	public void ChangeDefaultCustomRtSize(int w, int h)
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0xECF318", Offset = "0xECF318", VA = "0xECF318")]
	public Vector3 EyeOffset(Eye eye)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0xED4FB0", Offset = "0xED4FB0", VA = "0xED4FB0")]
	public Rect EyeRect(Eye eye)
	{
		return default(Rect);
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0xED526C", Offset = "0xED526C", VA = "0xED526C")]
	private bool SDKManagerInit()
	{
		return default(bool);
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0xED53BC", Offset = "0xED53BC", VA = "0xED53BC")]
	private bool SDKManagerInitCoreAbility()
	{
		return default(bool);
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0xED54F4", Offset = "0xED54F4", VA = "0xED54F4")]
	public void smsReceivedCallback(string msg)
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0xED5C28", Offset = "0xED5C28", VA = "0xED5C28")]
	public void phoneStateCallback(string state)
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0xED5FB4", Offset = "0xED5FB4", VA = "0xED5FB4")]
	public void phoneBatteryStateCallback(string state)
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0xED6268", Offset = "0xED6268", VA = "0xED6268")]
	public void hmdLowBatteryCallback(string level)
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0xED5880", Offset = "0xED5880", VA = "0xED5880")]
	private string TransformNumber(string number)
	{
		return null;
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0xED63A0", Offset = "0xED63A0", VA = "0xED63A0")]
	public void onHmdOrientationReseted()
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0xED5B88", Offset = "0xED5B88", VA = "0xED5B88")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x802D60", Offset = "0x802D60")]
	private IEnumerator ToastManager(int type, bool state, float time)
	{
		return null;
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0xED63D0", Offset = "0xED63D0", VA = "0xED63D0")]
	private void CheckControllerStateForG2(string state)
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0xED6580", Offset = "0xED6580", VA = "0xED6580")]
	public void notificationCallback(string data)
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0xED7514", Offset = "0xED7514", VA = "0xED7514")]
	private Sprite LoadSprite(Vector2 size, string filepath)
	{
		return null;
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0xED7634", Offset = "0xED7634", VA = "0xED7634")]
	private byte[] ReadTex(string path)
	{
		return null;
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0xED6910", Offset = "0xED6910", VA = "0xED6910")]
	private void SetProperty(int type, JsonData data, string value)
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0xED6E14", Offset = "0xED6E14", VA = "0xED6E14")]
	private void SetBaseProperty(Transform trans, JsonData data, string value)
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0xED71F4", Offset = "0xED71F4", VA = "0xED71F4")]
	private void SetImageProperty(Transform image, JsonData data, string value)
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0xED7784", Offset = "0xED7784", VA = "0xED7784")]
	private void SetTextProperty(Transform text, JsonData data, string value)
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0xED7490", Offset = "0xED7490", VA = "0xED7490")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x802DC4", Offset = "0x802DC4")]
	private IEnumerator G3TipsManager(GameObject tip, float time)
	{
		return null;
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0xED7A3C", Offset = "0xED7A3C", VA = "0xED7A3C")]
	private float JsonToFloat(JsonData data)
	{
		return default(float);
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0xED7AE4", Offset = "0xED7AE4", VA = "0xED7AE4")]
	private bool SDKManagerInitFPS()
	{
		return default(bool);
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0xED5348", Offset = "0xED5348", VA = "0xED5348")]
	private bool SDKManagerInitConfigProfile()
	{
		return default(bool);
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0xED7CAC", Offset = "0xED7CAC", VA = "0xED7CAC")]
	private bool SDKManagerInitEditor()
	{
		return default(bool);
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0xED7D58", Offset = "0xED7D58", VA = "0xED7D58")]
	private bool SDKManagerInitPara()
	{
		return default(bool);
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0xED7D60", Offset = "0xED7D60", VA = "0xED7D60")]
	public void SDKManagerLongHomeKey()
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0xED7E5C", Offset = "0xED7E5C", VA = "0xED7E5C")]
	private void setLongHomeKey()
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0xED823C", Offset = "0xED823C", VA = "0xED823C")]
	public void verifyAPPCallback(string code)
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0xED85BC", Offset = "0xED85BC", VA = "0xED85BC")]
	public void IpdRefreshCallBack(string ipd)
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0xED86F8", Offset = "0xED86F8", VA = "0xED86F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0xED96BC", Offset = "0xED96BC", VA = "0xED96BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x802E28", Offset = "0x802E28")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0xED975C", Offset = "0xED975C", VA = "0xED975C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x802E8C", Offset = "0x802E8C")]
	private IEnumerator InitRenderThreadRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0xED97E8", Offset = "0xED97E8", VA = "0xED97E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0xED9ABC", Offset = "0xED9ABC", VA = "0xED9ABC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0xED9C1C", Offset = "0xED9C1C", VA = "0xED9C1C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0xED9D54", Offset = "0xED9D54", VA = "0xED9D54")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0xED9D5C", Offset = "0xED9D5C", VA = "0xED9D5C")]
	private void OnPause()
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0xED9FC0", Offset = "0xED9FC0", VA = "0xED9FC0")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0xEDA270", Offset = "0xEDA270", VA = "0xEDA270")]
	public void EnterVRMode()
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0xED9E04", Offset = "0xED9E04", VA = "0xED9E04")]
	public void LeaveVRMode()
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0xEDA364", Offset = "0xEDA364", VA = "0xEDA364")]
	public void SixDofForceQuit()
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0xED90EC", Offset = "0xED90EC", VA = "0xED90EC")]
	private void InitUI()
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0xED92EC", Offset = "0xED92EC", VA = "0xED92EC")]
	private void RefreshTextByLanguage()
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0xED8D10", Offset = "0xED8D10", VA = "0xED8D10")]
	private void LoadIsMirroringValue()
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0xEDA1FC", Offset = "0xEDA1FC", VA = "0xEDA1FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x802EF0", Offset = "0x802EF0")]
	private IEnumerator OnResume()
	{
		return null;
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0xEDA398", Offset = "0xEDA398", VA = "0xEDA398")]
	public Pvr_UnitySDKManager()
	{
	}
}
[Token(Token = "0x2000055")]
public class QuitGame : MonoBehaviour
{
	[Token(Token = "0x60003A2")]
	[Address(RVA = "0xA45380", Offset = "0xA45380", VA = "0xA45380")]
	private void Start()
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0xA45384", Offset = "0xA45384", VA = "0xA45384")]
	private void Update()
	{
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0xA453B0", Offset = "0xA453B0", VA = "0xA453B0")]
	public QuitGame()
	{
	}
}
[Token(Token = "0x2000056")]
public class Pvr_UnityEyeMask : MonoBehaviour
{
	[Token(Token = "0x200036A")]
	private class EyeMaskData
	{
		[Token(Token = "0x400235F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Eye eyeSide;

		[Token(Token = "0x4002360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera camera;

		[Token(Token = "0x4002361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CommandBuffer cmdBuf;

		[Token(Token = "0x600187C")]
		[Address(RVA = "0xC8FCF0", Offset = "0xC8FCF0", VA = "0xC8FCF0")]
		public EyeMaskData()
		{
		}
	}

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Shader eyeMaskShader;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material eyeMaskMaterial;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Mesh eyeMaskMeshLeft;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Mesh eyeMaskMeshRight;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Mesh eyeMaskMeshBoth;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float zDir;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Color eyeMaskColor;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<EyeMaskData> cameraDataList;

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0xC8E3C0", Offset = "0xC8E3C0", VA = "0xC8E3C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0xC8E47C", Offset = "0xC8E47C", VA = "0xC8E47C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0xC8EFF4", Offset = "0xC8EFF4", VA = "0xC8EFF4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0xC8EA1C", Offset = "0xC8EA1C", VA = "0xC8EA1C")]
	private void CreateCommandBuffer()
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0xC8FB18", Offset = "0xC8FB18", VA = "0xC8FB18")]
	private void OnCustomPreRender(Camera cam)
	{
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0xC8F378", Offset = "0xC8F378", VA = "0xC8F378")]
	private Mesh GetStencilMesh(Eye eyeSide)
	{
		return null;
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0xC8F6DC", Offset = "0xC8F6DC", VA = "0xC8F6DC")]
	private Mesh GetStencilMeshBoth(Mesh leftMesh, Mesh rightMesh)
	{
		return null;
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0xC8F264", Offset = "0xC8F264", VA = "0xC8F264")]
	private bool VerifyCommadBuffer()
	{
		return default(bool);
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0xC8E6D4", Offset = "0xC8E6D4", VA = "0xC8E6D4")]
	private void PrepareCameras()
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0xC8FCBC", Offset = "0xC8FCBC", VA = "0xC8FCBC")]
	private void AddCameraCommandBuffer(EyeMaskData data)
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0xC8F1C8", Offset = "0xC8F1C8", VA = "0xC8F1C8")]
	private void RemoveCameraCommandBuffer(EyeMaskData data)
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0xC8F1F8", Offset = "0xC8F1F8", VA = "0xC8F1F8")]
	private void CleanEyeMask()
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0xC8FCF8", Offset = "0xC8FCF8", VA = "0xC8FCF8")]
	public Pvr_UnityEyeMask()
	{
	}
}
[Token(Token = "0x2000057")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7F5E28", Offset = "0x7F5E28")]
public class Pvr_UnitySDKEye : MonoBehaviour
{
	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Pvr_UnitySDKEye> Instances;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Eye eyeSide;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7FCFA8", Offset = "0x7FCFA8")]
	private Camera <eyecamera>k__BackingField;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int eyeCameraOriginCullingMask;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private CameraClearFlags eyeCameraOriginClearFlag;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color eyeCameraOriginBackgroundColor;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int lastBoundaryState;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Matrix4x4 realProj;

	[Token(Token = "0x40002C7")]
	private const int bufferSize = 3;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int IDIndex;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private RenderEventType eventType;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int previousId;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool setLevel;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Material mat_Vignette;

	[Token(Token = "0x17000050")]
	public Camera eyecamera
	{
		[Token(Token = "0x60003B2")]
		[Address(RVA = "0xECDFD8", Offset = "0xECDFD8", VA = "0xECDFD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x802F54", Offset = "0x802F54")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003B3")]
		[Address(RVA = "0xECDFE0", Offset = "0xECDFE0", VA = "0xECDFE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x802F64", Offset = "0x802F64")]
		private set
		{
		}
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0xECDFE8", Offset = "0xECDFE8", VA = "0xECDFE8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0xECE088", Offset = "0xECE088", VA = "0xECE088")]
	private void Start()
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0xECE5F4", Offset = "0xECE5F4", VA = "0xECE5F4")]
	private void Update()
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0xECE830", Offset = "0xECE830", VA = "0xECE830")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0xECE938", Offset = "0xECE938", VA = "0xECE938")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0xECEA40", Offset = "0xECEA40", VA = "0xECEA40")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0xECEAC4", Offset = "0xECEAC4", VA = "0xECEAC4")]
	public void MyPreRender(Camera camera)
	{
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0xECECB0", Offset = "0xECECB0", VA = "0xECECB0")]
	public void MyPreRender(ScriptableRenderContext context, Camera camera)
	{
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0xECED74", Offset = "0xECED74", VA = "0xECED74")]
	public void MyPostRender(ScriptableRenderContext context, Camera camera)
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0xECEB88", Offset = "0xECEB88", VA = "0xECEB88")]
	private void OnPreRender()
	{
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0xECEE38", Offset = "0xECEE38", VA = "0xECEE38")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0xECF19C", Offset = "0xECF19C", VA = "0xECF19C")]
	public void EyeRender()
	{
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0xECE168", Offset = "0xECE168", VA = "0xECE168")]
	private void Setup(Eye eyeSide)
	{
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0xECE37C", Offset = "0xECE37C", VA = "0xECE37C")]
	private void SetupUpdate()
	{
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0xECF350", Offset = "0xECF350", VA = "0xECF350")]
	public void RefreshCameraPosition(float ipd)
	{
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0xECF4F8", Offset = "0xECF4F8", VA = "0xECF4F8")]
	private void DrawVignetteLine()
	{
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0xECF624", Offset = "0xECF624", VA = "0xECF624")]
	private void vignette()
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0xECEFE4", Offset = "0xECEFE4", VA = "0xECEFE4")]
	private void SetFFRParameter()
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0xECF99C", Offset = "0xECF99C", VA = "0xECF99C")]
	public Pvr_UnitySDKEye()
	{
	}
}
[Token(Token = "0x2000058")]
public class Pvr_UnitySDKEyeManager : MonoBehaviour
{
	[Token(Token = "0x200036B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9828", Offset = "0x7F9828")]
	private sealed class <EndOfFrame>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_UnitySDKEyeManager <>4__this;

		[Token(Token = "0x170002FB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001880")]
			[Address(RVA = "0xED35E8", Offset = "0xED35E8", VA = "0xED35E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001882")]
			[Address(RVA = "0xED3654", Offset = "0xED3654", VA = "0xED3654", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600187D")]
		[Address(RVA = "0xED1720", Offset = "0xED1720", VA = "0xED1720")]
		[DebuggerHidden]
		public <EndOfFrame>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x600187E")]
		[Address(RVA = "0xED24A4", Offset = "0xED24A4", VA = "0xED24A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600187F")]
		[Address(RVA = "0xED24A8", Offset = "0xED24A8", VA = "0xED24A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001881")]
		[Address(RVA = "0xED35F0", Offset = "0xED35F0", VA = "0xED35F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200036C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9838", Offset = "0x7F9838")]
	private sealed class <ScreenFade>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_UnitySDKEyeManager <>4__this;

		[Token(Token = "0x4002368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float startAlpha;

		[Token(Token = "0x4002369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float endAlpha;

		[Token(Token = "0x400236A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x170002FD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001886")]
			[Address(RVA = "0xED3794", Offset = "0xED3794", VA = "0xED3794", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001888")]
			[Address(RVA = "0xED3800", Offset = "0xED3800", VA = "0xED3800", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001883")]
		[Address(RVA = "0xED23E0", Offset = "0xED23E0", VA = "0xED23E0")]
		[DebuggerHidden]
		public <ScreenFade>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6001884")]
		[Address(RVA = "0xED365C", Offset = "0xED365C", VA = "0xED365C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001885")]
		[Address(RVA = "0xED3660", Offset = "0xED3660", VA = "0xED3660", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001887")]
		[Address(RVA = "0xED379C", Offset = "0xED379C", VA = "0xED379C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKEyeManager instance;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Pvr_UnitySDKEye[] eyes;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Camera LeftEyeCamera;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public Camera RightEyeCamera;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Camera MonoEyeCamera;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public Camera BothEyeCamera;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int MonoEyeTextureID;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private readonly int WaitSplashScreenFrames;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int frameNum;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	[HideInInspector]
	private bool foveatedRendering;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[HideInInspector]
	private EFoveationLevel foveationLevel;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int eyeTextureId;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RenderEventType eventType;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Pvr_UnitySDKEyeOverlay compositeLayer;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int overlayLayerDepth;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int underlayLayerDepth;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool isHeadLocked;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int layerFlags;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public bool EyeTracking;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[HideInInspector]
	public Vector3 eyePoint;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private EyeTrackingData eyePoseData;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[HideInInspector]
	public static bool supportEyeTracking;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FD098", Offset = "0x7FD098")]
	public bool screenFade;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FD0D0", Offset = "0x7FD0D0")]
	public float fadeTime;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FD108", Offset = "0x7FD108")]
	public Color fadeColor;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public int renderQueue;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private MeshRenderer fadeMeshRenderer;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private MeshFilter fadeMeshFilter;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Material fadeMaterial;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private float elapsedTime;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private bool isFading;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private float currentAlpha;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private float nowFadeAlpha;

	[Token(Token = "0x17000051")]
	public static Pvr_UnitySDKEyeManager Instance
	{
		[Token(Token = "0x60003C8")]
		[Address(RVA = "0xECF8A4", Offset = "0xECF8A4", VA = "0xECF8A4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000052")]
	public Pvr_UnitySDKEye[] Eyes
	{
		[Token(Token = "0x60003C9")]
		[Address(RVA = "0xECFABC", Offset = "0xECFABC", VA = "0xECFABC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000053")]
	[HideInInspector]
	public bool FoveatedRendering
	{
		[Token(Token = "0x60003CA")]
		[Address(RVA = "0xECFB4C", Offset = "0xECFB4C", VA = "0xECFB4C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003CB")]
		[Address(RVA = "0xECFB54", Offset = "0xECFB54", VA = "0xECFB54")]
		set
		{
		}
	}

	[Token(Token = "0x17000054")]
	[HideInInspector]
	public EFoveationLevel FoveationLevel
	{
		[Token(Token = "0x60003CC")]
		[Address(RVA = "0xECFBC0", Offset = "0xECFBC0", VA = "0xECFBC0")]
		get
		{
			return default(EFoveationLevel);
		}
		[Token(Token = "0x60003CD")]
		[Address(RVA = "0xECFBC8", Offset = "0xECFBC8", VA = "0xECFBC8")]
		set
		{
		}
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0xECFBDC", Offset = "0xECFBDC", VA = "0xECFBDC")]
	private void SetCameraEnableEditor()
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0xECFE10", Offset = "0xECFE10", VA = "0xECFE10")]
	private void SetCamerasEnableByStereoRendering()
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0xECFED8", Offset = "0xECFED8", VA = "0xECFED8")]
	private void SetupMonoCamera()
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0xECFFF0", Offset = "0xECFFF0", VA = "0xECFFF0")]
	private void SetupUpdate()
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0xED00CC", Offset = "0xED00CC", VA = "0xED00CC")]
	private void MonoEyeRender()
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0xED0248", Offset = "0xED0248", VA = "0xED0248")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0xED0A08", Offset = "0xED0A08", VA = "0xED0A08")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0xED10B0", Offset = "0xED10B0", VA = "0xED10B0")]
	private void Start()
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0xED10D4", Offset = "0xED10D4", VA = "0xED10D4")]
	private void Update()
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0xED134C", Offset = "0xED134C", VA = "0xED134C")]
	private void OnPause()
	{
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0xED1430", Offset = "0xED1430", VA = "0xED1430")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0xED1438", Offset = "0xED1438", VA = "0xED1438")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0xED15A0", Offset = "0xED15A0", VA = "0xED15A0")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0xED16AC", Offset = "0xED16AC", VA = "0xED16AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x802F74", Offset = "0x802F74")]
	private IEnumerator EndOfFrame()
	{
		return null;
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0xED174C", Offset = "0xED174C", VA = "0xED174C")]
	private void CreateExternalSurface(Pvr_UnitySDKEyeOverlay overlayInstance, int layerDepth)
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0xED1B4C", Offset = "0xED1B4C", VA = "0xED1B4C")]
	public bool SetEyeTrackingMode()
	{
		return default(bool);
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0xED1E04", Offset = "0xED1E04", VA = "0xED1E04")]
	public Vector3 GetEyeTrackingPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0xED2034", Offset = "0xED2034", VA = "0xED2034")]
	private EyeDeviceInfo GetDeviceInfo()
	{
		return default(EyeDeviceInfo);
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0xED058C", Offset = "0xED058C", VA = "0xED058C")]
	private void CreateFadeMesh()
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0xED143C", Offset = "0xED143C", VA = "0xED143C")]
	private void DestoryFadeMesh()
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0xED0A00", Offset = "0xED0A00", VA = "0xED0A00")]
	public void SetCurrentAlpha(float alpha)
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0xED1028", Offset = "0xED1028", VA = "0xED1028")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x802FD8", Offset = "0x802FD8")]
	private IEnumerator ScreenFade(float startAlpha, float endAlpha)
	{
		return null;
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0xED2288", Offset = "0xED2288", VA = "0xED2288")]
	private void SetMaterialAlpha()
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0xED1020", Offset = "0xED1020", VA = "0xED1020")]
	public bool GfxDeviceAdvanceFrameGLES()
	{
		return default(bool);
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0xED240C", Offset = "0xED240C", VA = "0xED240C")]
	public Pvr_UnitySDKEyeManager()
	{
	}
}
[Token(Token = "0x2000059")]
public class Pvr_UnitySDKEyeOverlay : MonoBehaviour, IComparable<Pvr_UnitySDKEyeOverlay>
{
	[Token(Token = "0x200036D")]
	public delegate void ExternalAndroidSurfaceObjectCreated();

	[Token(Token = "0x200036E")]
	public enum OverlayShape
	{
		[Token(Token = "0x400236C")]
		Quad,
		[Token(Token = "0x400236D")]
		Cylinder,
		[Token(Token = "0x400236E")]
		Equirect
	}

	[Token(Token = "0x200036F")]
	public enum OverlayType
	{
		[Token(Token = "0x4002370")]
		Overlay,
		[Token(Token = "0x4002371")]
		Underlay
	}

	[Token(Token = "0x2000370")]
	public enum OverlayTexFilterMode
	{
		[Token(Token = "0x4002373")]
		NotCare,
		[Token(Token = "0x4002374")]
		Nearest,
		[Token(Token = "0x4002375")]
		Linear,
		[Token(Token = "0x4002376")]
		Nearest_Mipmap_Nearest,
		[Token(Token = "0x4002377")]
		Linear_Mipmap_Nearest,
		[Token(Token = "0x4002378")]
		Nearest_Mipmap_Linear,
		[Token(Token = "0x4002379")]
		Linear_Mipmap_Linear
	}

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Pvr_UnitySDKEyeOverlay> Instances;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int layerIndex;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public OverlayType overlayType;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OverlayShape overlayShape;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform layerTransform;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture[] layerTextures;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int[] layerTextureIds;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Matrix4x4[] MVMatrixs;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3[] ModelScales;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Quaternion[] ModelRotations;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3[] ModelTranslations;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Quaternion[] CameraRotations;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Vector3[] CameraTranslations;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Camera[] layerEyeCamera;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool overrideColorScaleAndOffset;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Vector4 colorScale;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public Vector4 colorOffset;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector4 overlayLayerColorScaleDefault;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Vector4 overlayLayerColorOffsetDefault;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public bool isExternalAndroidSurface;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public IntPtr externalAndroidSurfaceObject;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public ExternalAndroidSurfaceObjectCreated externalAndroidSurfaceObjectCreated;

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0xED3808", Offset = "0xED3808", VA = "0xED3808", Slot = "4")]
	public int CompareTo(Pvr_UnitySDKEyeOverlay other)
	{
		return default(int);
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0xED382C", Offset = "0xED382C", VA = "0xED382C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0xED3D24", Offset = "0xED3D24", VA = "0xED3D24")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0xED4204", Offset = "0xED4204", VA = "0xED4204")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0xED0DE4", Offset = "0xED0DE4", VA = "0xED0DE4")]
	public void RefreshCamera()
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0xED3B60", Offset = "0xED3B60", VA = "0xED3B60")]
	private void InitializeBuffer()
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0xED3D28", Offset = "0xED3D28", VA = "0xED3D28")]
	private void UpdateCoords()
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0xED44C4", Offset = "0xED44C4", VA = "0xED44C4")]
	public void SetTexture(Texture texture)
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0xED4560", Offset = "0xED4560", VA = "0xED4560")]
	public void SetLayerColorScaleAndOffset(Vector4 scale, Vector4 offset)
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0xED3568", Offset = "0xED3568", VA = "0xED3568")]
	public Vector4 GetLayerColorScale()
	{
		return default(Vector4);
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0xED35A8", Offset = "0xED35A8", VA = "0xED35A8")]
	public Vector4 GetLayerColorOffset()
	{
		return default(Vector4);
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0xED4574", Offset = "0xED4574", VA = "0xED4574")]
	public Pvr_UnitySDKEyeOverlay()
	{
	}
}
[Token(Token = "0x200005A")]
public class Pvr_UnitySDKRender
{
	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKRender instance;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AndroidJavaObject activity;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static AndroidJavaClass javaVrActivityClass;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static AndroidJavaClass javaSysActivityClass;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static AndroidJavaClass javaserviceClass;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static AndroidJavaClass javaVrActivityLongReceiver;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static AndroidJavaClass javaVrActivityClientClass;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool canConnecttoActivity;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool isInitrenderThread;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string model;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector2 prefinger1;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector2 prefinger2;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int eyeTextureCount;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RenderTexture[] eyeTextures;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int[] eyeTextureIds;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int currEyeTextureIdx;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int nextEyeTextureIdx;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int lastEyeTextureIdx;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool isSwitchSDK;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int RenderviewNumber;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool isFirstStartup;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	public bool isShellMode;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private StereoRenderingPathPico stereoRenderPath;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7FD140", Offset = "0x7FD140")]
	private SDKStereoRendering <StereoRendering>k__BackingField;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float rtScaleFactor;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float eyeVFov;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float eyeHFov;

	[Token(Token = "0x17000055")]
	public static Pvr_UnitySDKRender Instance
	{
		[Token(Token = "0x60003F5")]
		[Address(RVA = "0xECAB00", Offset = "0xECAB00", VA = "0xECAB00")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003F6")]
		[Address(RVA = "0xEDC470", Offset = "0xEDC470", VA = "0xEDC470")]
		set
		{
		}
	}

	[Token(Token = "0x17000056")]
	public StereoRenderingPathPico StereoRenderPath
	{
		[Token(Token = "0x60003F8")]
		[Address(RVA = "0xEDCE30", Offset = "0xEDCE30", VA = "0xEDCE30")]
		get
		{
			return default(StereoRenderingPathPico);
		}
	}

	[Token(Token = "0x17000057")]
	public SDKStereoRendering StereoRendering
	{
		[Token(Token = "0x60003F9")]
		[Address(RVA = "0xEDCE38", Offset = "0xEDCE38", VA = "0xEDCE38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x80303C", Offset = "0x80303C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003FA")]
		[Address(RVA = "0xEDCE40", Offset = "0xEDCE40", VA = "0xEDCE40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x80304C", Offset = "0x80304C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000058")]
	public float RtScaleFactor
	{
		[Token(Token = "0x60003FB")]
		[Address(RVA = "0xEDCE48", Offset = "0xEDCE48", VA = "0xEDCE48")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003FC")]
		[Address(RVA = "0xEDCE50", Offset = "0xEDCE50", VA = "0xEDCE50")]
		set
		{
		}
	}

	[Token(Token = "0x17000059")]
	public float EyeVFoV
	{
		[Token(Token = "0x60003FD")]
		[Address(RVA = "0xEDCFC0", Offset = "0xEDCFC0", VA = "0xEDCFC0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003FE")]
		[Address(RVA = "0xECDD7C", Offset = "0xECDD7C", VA = "0xECDD7C")]
		set
		{
		}
	}

	[Token(Token = "0x1700005A")]
	public float EyeHFoV
	{
		[Token(Token = "0x60003FF")]
		[Address(RVA = "0xEDCFC8", Offset = "0xEDCFC8", VA = "0xEDCFC8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000400")]
		[Address(RVA = "0xEDCFD0", Offset = "0xEDCFD0", VA = "0xEDCFD0")]
		set
		{
		}
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0xEDC360", Offset = "0xEDC360", VA = "0xEDC360")]
	public Pvr_UnitySDKRender()
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0xEDC4DC", Offset = "0xEDC4DC", VA = "0xEDC4DC")]
	public void ConnectToAndriod()
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0xEDCDB0", Offset = "0xEDCDB0", VA = "0xEDCDB0")]
	public void Init()
	{
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0xEDD438", Offset = "0xEDD438", VA = "0xEDD438")]
	private bool InitRenderAbility()
	{
		return default(bool);
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0xEDD550", Offset = "0xEDD550", VA = "0xEDD550")]
	private bool UpdateRenderParaFrame()
	{
		return default(bool);
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0xEDD5F8", Offset = "0xEDD5F8", VA = "0xEDD5F8")]
	private bool CreateEyeBuffer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0xEDDF50", Offset = "0xEDDF50", VA = "0xEDDF50")]
	private void InitSinglePass()
	{
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0xEDD940", Offset = "0xEDD940", VA = "0xEDD940")]
	public float GetEyeVFOV()
	{
		return default(float);
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0xEDDAA8", Offset = "0xEDDAA8", VA = "0xEDDAA8")]
	public float GetEyeHFOV()
	{
		return default(float);
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0xEDE168", Offset = "0xEDE168", VA = "0xEDE168")]
	private void ConfigureEyeBuffer(int eyeTextureIndex, Vector2 resolution)
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0xEDCE68", Offset = "0xEDCE68", VA = "0xEDCE68")]
	public bool ReCreateEyeBuffer()
	{
		return default(bool);
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0xEDB2E8", Offset = "0xEDB2E8", VA = "0xEDB2E8")]
	public void ReInit()
	{
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0xEDA7A8", Offset = "0xEDA7A8", VA = "0xEDA7A8")]
	public void IssueRenderThread()
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0xEDE68C", Offset = "0xEDE68C", VA = "0xEDE68C")]
	private void AutoAdpatForPico1s()
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0xEDDC10", Offset = "0xEDDC10", VA = "0xEDDC10")]
	public Vector2 GetEyeBufferResolution()
	{
		return default(Vector2);
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0xEDE8D4", Offset = "0xEDE8D4", VA = "0xEDE8D4")]
	public bool GetUsePredictedMatrix()
	{
		return default(bool);
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0xEDCFE4", Offset = "0xEDCFE4", VA = "0xEDCFE4")]
	public bool GetIsShellMode()
	{
		return default(bool);
	}
}
[Token(Token = "0x200005B")]
public class Pvr_UnitySDKSinglePass : SDKStereoRendering
{
	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Camera bothCamera;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Matrix4x4[] unity_StereoMatrixP;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Matrix4x4[] unity_StereoMatrixInvP;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Matrix4x4[] unity_StereoWorldToCamera;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Matrix4x4[] unity_StereoCameraToWorld;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Matrix4x4[] unity_StereoMatrixVP;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3[] eyesOffset;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Matrix4x4[] eyesOffsetMatrix;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CommandBuffer commandBufferBeforeForwardOpaque;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CommandBuffer commandBufferBeforeSkybox;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CommandBuffer commandBufferAfterSkybox;

	[Token(Token = "0x6000412")]
	[Address(RVA = "0xEE1700", Offset = "0xEE1700", VA = "0xEE1700", Slot = "4")]
	public override void InitEye(Camera eye)
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0xEE1FB4", Offset = "0xEE1FB4", VA = "0xEE1FB4", Slot = "5")]
	public override void OnSDKRenderInited()
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0xEE20E4", Offset = "0xEE20E4", VA = "0xEE20E4", Slot = "6")]
	public override void OnSDKPreRender()
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0xEE29AC", Offset = "0xEE29AC", VA = "0xEE29AC", Slot = "7")]
	public override void OnSDKPostRender()
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0xEE1FB8", Offset = "0xEE1FB8", VA = "0xEE1FB8")]
	public void OnSDKRenderInited_SinglePass()
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0xEE2A64", Offset = "0xEE2A64", VA = "0xEE2A64")]
	private void SetAntiAliasing()
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0xEE1A24", Offset = "0xEE1A24", VA = "0xEE1A24")]
	public void SetEyesPosition()
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0xEE1E6C", Offset = "0xEE1E6C", VA = "0xEE1E6C")]
	public void SetEyeProjection()
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0xEE2B6C", Offset = "0xEE2B6C", VA = "0xEE2B6C")]
	private static Matrix4x4 GetProjection(float near, float far)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0xEE2DF0", Offset = "0xEE2DF0", VA = "0xEE2DF0")]
	public static Matrix4x4 MakeProjection(float n, float f)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0xEE2C40", Offset = "0xEE2C40", VA = "0xEE2C40")]
	public void SetStereoProjectionMatrix(Matrix4x4 left, Matrix4x4 right)
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0xEE29B4", Offset = "0xEE29B4", VA = "0xEE29B4")]
	private void SwitchKeywordAndDeviceView(bool enable)
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0xED4288", Offset = "0xED4288", VA = "0xED4288")]
	public static Matrix4x4[] GetStereoWorldToCameraMat()
	{
		return null;
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0xEE20E8", Offset = "0xEE20E8", VA = "0xEE20E8")]
	public void SinglePassPreRender()
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0xEE3078", Offset = "0xEE3078", VA = "0xEE3078")]
	private void SetCommandBuffers()
	{
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0xEE2FCC", Offset = "0xEE2FCC", VA = "0xEE2FCC")]
	private void SetRenderTextureWithDepth()
	{
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0xEDE5E4", Offset = "0xEDE5E4", VA = "0xEDE5E4")]
	public Pvr_UnitySDKSinglePass()
	{
	}
}
[Token(Token = "0x200005C")]
public abstract class SDKStereoRendering
{
	[Token(Token = "0x6000424")]
	public abstract void InitEye(Camera eye);

	[Token(Token = "0x6000425")]
	public abstract void OnSDKRenderInited();

	[Token(Token = "0x6000426")]
	public abstract void OnSDKPreRender();

	[Token(Token = "0x6000427")]
	public abstract void OnSDKPostRender();

	[Token(Token = "0x6000428")]
	[Address(RVA = "0xA50634", Offset = "0xA50634", VA = "0xA50634")]
	protected SDKStereoRendering()
	{
	}
}
[Token(Token = "0x200005D")]
public class HighlightAtGaze : MonoBehaviour
{
	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color HighlightColor;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float AnimationTime;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer myRenderer;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color originalColor;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Color targetColor;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private EyeTrackingGazeRay gazeRay;

	[Token(Token = "0x6000429")]
	[Address(RVA = "0xA6FD18", Offset = "0xA6FD18", VA = "0xA6FD18")]
	private void Start()
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0xA6FD9C", Offset = "0xA6FD9C", VA = "0xA6FD9C")]
	private void Update()
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0xA6FF80", Offset = "0xA6FF80", VA = "0xA6FF80")]
	public HighlightAtGaze()
	{
	}
}
[Token(Token = "0x200005E")]
public class RayVisualizer : MonoBehaviour
{
	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LineRenderer _line;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private EyeTrackingGazeRay gazeRay;

	[Token(Token = "0x600042C")]
	[Address(RVA = "0xA45D68", Offset = "0xA45D68", VA = "0xA45D68")]
	private void Start()
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0xA45E00", Offset = "0xA45E00", VA = "0xA45E00")]
	private void Update()
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0xA45FA4", Offset = "0xA45FA4", VA = "0xA45FA4")]
	public RayVisualizer()
	{
	}
}
[Token(Token = "0x200005F")]
public class GetSeeThroughImage : MonoBehaviour
{
	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RawImage viewImage_left;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RawImage viewImage_right;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int width;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int height;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RenderTexture cameraTex_left;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RenderTexture cameraTex_right;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool cameraPreview;

	[Token(Token = "0x600042F")]
	[Address(RVA = "0xA68F5C", Offset = "0xA68F5C", VA = "0xA68F5C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0xA69074", Offset = "0xA69074", VA = "0xA69074")]
	private void Update()
	{
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0xA69100", Offset = "0xA69100", VA = "0xA69100")]
	private void OnDestory()
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0xA68F60", Offset = "0xA68F60", VA = "0xA68F60")]
	private void CreateTexture()
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0xA690B0", Offset = "0xA690B0", VA = "0xA690B0")]
	private void DrawTexture()
	{
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0xA69118", Offset = "0xA69118", VA = "0xA69118")]
	public GetSeeThroughImage()
	{
	}
}
[Token(Token = "0x2000060")]
public class OverlayExternalSurfaceDemo : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000371")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9848", Offset = "0x7F9848")]
	private sealed class <>c
	{
		[Token(Token = "0x400237A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400237B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Pvr_UnitySDKEyeOverlay.ExternalAndroidSurfaceObjectCreated <>9__7_0;

		[Token(Token = "0x600188E")]
		[Address(RVA = "0x9E9AB4", Offset = "0x9E9AB4", VA = "0x9E9AB4")]
		public <>c()
		{
		}

		[Token(Token = "0x600188F")]
		[Address(RVA = "0x9E9ABC", Offset = "0x9E9ABC", VA = "0x9E9ABC")]
		internal void <StartPlay>b__7_0()
		{
		}
	}

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string movieName;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Pvr_UnitySDKEyeOverlay.OverlayType overlayType;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Pvr_UnitySDKEyeOverlay.OverlayShape overlayShape;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Pvr_UnitySDKEyeOverlay overlay;

	[Token(Token = "0x400033D")]
	private const string TAG = "[ExternalSurface]>>>>>>";

	[Token(Token = "0x6000435")]
	[Address(RVA = "0x9E96A4", Offset = "0x9E96A4", VA = "0x9E96A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0x9E97D0", Offset = "0x9E97D0", VA = "0x9E97D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0x9E9854", Offset = "0x9E9854", VA = "0x9E9854")]
	private void StartPlay(string moviePath, string licenceUrl)
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0x9E9A48", Offset = "0x9E9A48", VA = "0x9E9A48")]
	public OverlayExternalSurfaceDemo()
	{
	}
}
[Token(Token = "0x2000061")]
public class MoveCylinder : MonoBehaviour
{
	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 startingPosition;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Quaternion startingRotation;

	[Token(Token = "0x6000439")]
	[Address(RVA = "0xA2A3A0", Offset = "0xA2A3A0", VA = "0xA2A3A0")]
	private void Start()
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0xA2A3FC", Offset = "0xA2A3FC", VA = "0xA2A3FC")]
	public void Reset()
	{
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0xA2A454", Offset = "0xA2A454", VA = "0xA2A454")]
	public MoveCylinder()
	{
	}
}
[Token(Token = "0x2000062")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7F5E8C", Offset = "0x7F5E8C")]
public class MoveSphere : MonoBehaviour
{
	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 startingPosition;

	[Token(Token = "0x600043C")]
	[Address(RVA = "0xA2A464", Offset = "0xA2A464", VA = "0xA2A464")]
	private void Start()
	{
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0xA2A5E8", Offset = "0xA2A5E8", VA = "0xA2A5E8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0xA2A548", Offset = "0xA2A548", VA = "0xA2A548")]
	public void SetGazedAt(bool gazedAt)
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0xA2A5EC", Offset = "0xA2A5EC", VA = "0xA2A5EC")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0xA2A6F4", Offset = "0xA2A6F4", VA = "0xA2A6F4")]
	public void TeleportRandomly()
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0xA2A804", Offset = "0xA2A804", VA = "0xA2A804")]
	public MoveSphere()
	{
	}
}
[Token(Token = "0x2000063")]
public class Resetbutton : MonoBehaviour
{
	[Token(Token = "0x6000442")]
	[Address(RVA = "0xA46818", Offset = "0xA46818", VA = "0xA46818")]
	public void DemoResetTracking()
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0xA468B8", Offset = "0xA468B8", VA = "0xA468B8")]
	public Resetbutton()
	{
	}
}
[Token(Token = "0x2000064")]
public class UserEntitlementCheck : MonoBehaviour
{
	[Token(Token = "0x6000444")]
	[Address(RVA = "0xAB4BDC", Offset = "0xAB4BDC", VA = "0xAB4BDC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0xAB4C70", Offset = "0xAB4C70", VA = "0xAB4C70")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0xAB4D04", Offset = "0xAB4D04", VA = "0xAB4D04")]
	private void HandelEntitlementCheckResult(int resultCode)
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0xAB4FD0", Offset = "0xAB4FD0", VA = "0xAB4FD0")]
	public UserEntitlementCheck()
	{
	}
}
[Token(Token = "0x2000065")]
public class Pvr_UnitySDKHeadTrack : MonoBehaviour
{
	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FD150", Offset = "0x7FD150")]
	public bool trackRotation;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FD188", Offset = "0x7FD188")]
	public bool trackPosition;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform target;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool updated;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool dataClock;

	[Token(Token = "0x1700005B")]
	public Ray Gaze
	{
		[Token(Token = "0x6000448")]
		[Address(RVA = "0xED4954", Offset = "0xED4954", VA = "0xED4954")]
		get
		{
			return default(Ray);
		}
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0xED4E48", Offset = "0xED4E48", VA = "0xED4E48")]
	private void Update()
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0xED49F0", Offset = "0xED49F0", VA = "0xED49F0")]
	private void UpdateHead()
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0xED4E50", Offset = "0xED4E50", VA = "0xED4E50")]
	public Pvr_UnitySDKHeadTrack()
	{
	}
}
[Token(Token = "0x2000066")]
public class Pvr_UnitySDKPose
{
	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static readonly Matrix4x4 flipZ;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7FD1C0", Offset = "0x7FD1C0")]
	private Vector3 <Position>k__BackingField;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7FD1D0", Offset = "0x7FD1D0")]
	private Quaternion <Orientation>k__BackingField;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7FD1E0", Offset = "0x7FD1E0")]
	private Matrix4x4 <Matrix>k__BackingField;

	[Token(Token = "0x1700005C")]
	public Matrix4x4 RightHandedMatrix
	{
		[Token(Token = "0x600044C")]
		[Address(RVA = "0xEDBC98", Offset = "0xEDBC98", VA = "0xEDBC98")]
		get
		{
			return default(Matrix4x4);
		}
	}

	[Token(Token = "0x1700005D")]
	public Vector3 Position
	{
		[Token(Token = "0x600044D")]
		[Address(RVA = "0xEDBE04", Offset = "0xEDBE04", VA = "0xEDBE04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x80305C", Offset = "0x80305C")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600044E")]
		[Address(RVA = "0xEDBE10", Offset = "0xEDBE10", VA = "0xEDBE10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x80306C", Offset = "0x80306C")]
		protected set
		{
		}
	}

	[Token(Token = "0x1700005E")]
	public Quaternion Orientation
	{
		[Token(Token = "0x600044F")]
		[Address(RVA = "0xEDBE1C", Offset = "0xEDBE1C", VA = "0xEDBE1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x80307C", Offset = "0x80307C")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6000450")]
		[Address(RVA = "0xEDBE28", Offset = "0xEDBE28", VA = "0xEDBE28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x80308C", Offset = "0x80308C")]
		protected set
		{
		}
	}

	[Token(Token = "0x1700005F")]
	public Matrix4x4 Matrix
	{
		[Token(Token = "0x6000451")]
		[Address(RVA = "0xEDBE34", Offset = "0xEDBE34", VA = "0xEDBE34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x80309C", Offset = "0x80309C")]
		get
		{
			return default(Matrix4x4);
		}
		[Token(Token = "0x6000452")]
		[Address(RVA = "0xEDBE58", Offset = "0xEDBE58", VA = "0xEDBE58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8030AC", Offset = "0x8030AC")]
		protected set
		{
		}
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0xECDEC0", Offset = "0xECDEC0", VA = "0xECDEC0")]
	public Pvr_UnitySDKPose(Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0xEDBFE0", Offset = "0xEDBFE0", VA = "0xEDBFE0")]
	public Pvr_UnitySDKPose(Vector3 position, Quaternion orientation)
	{
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0xEDC060", Offset = "0xEDC060", VA = "0xEDC060")]
	public void Set(Vector3 position, Quaternion orientation)
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0xEDBE74", Offset = "0xEDBE74", VA = "0xEDBE74")]
	protected void Set(Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0xEDC1A0", Offset = "0xEDC1A0", VA = "0xEDC1A0")]
	private Quaternion NormalizeQuaternion(ref Quaternion q)
	{
		return default(Quaternion);
	}
}
[Token(Token = "0x2000067")]
public class Pvr_UnitySDKSensor
{
	[Token(Token = "0x2000372")]
	public delegate void Enter3DofModel();

	[Token(Token = "0x2000373")]
	public delegate void Exit3DofModel();

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKSensor instance;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool SensorStart;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool SensorInit;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Quaternion UnityQuaternion;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 UnityPosition;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Sensorindex sensorIndex;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool dofClock;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action EyeFovChanged;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Pvr_UnitySDKPose HeadPose;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float vfov;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float hfov;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float w;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float x;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float y;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float z;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float px;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float py;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float pz;

	[Token(Token = "0x17000060")]
	public static Pvr_UnitySDKSensor Instance
	{
		[Token(Token = "0x6000459")]
		[Address(RVA = "0xECD51C", Offset = "0xECD51C", VA = "0xECD51C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600045A")]
		[Address(RVA = "0xEDE99C", Offset = "0xEDE99C", VA = "0xEDE99C")]
		set
		{
		}
	}

	[Token(Token = "0x14000017")]
	public static event Enter3DofModel Enter3DofModelEvent
	{
		[Token(Token = "0x600045C")]
		[Address(RVA = "0xEDEB3C", Offset = "0xEDEB3C", VA = "0xEDEB3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8030BC", Offset = "0x8030BC")]
		add
		{
		}
		[Token(Token = "0x600045D")]
		[Address(RVA = "0xEDEC2C", Offset = "0xEDEC2C", VA = "0xEDEC2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8030CC", Offset = "0x8030CC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000018")]
	public static event Exit3DofModel Exit3DofModelEvent
	{
		[Token(Token = "0x600045E")]
		[Address(RVA = "0xEDED1C", Offset = "0xEDED1C", VA = "0xEDED1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8030DC", Offset = "0x8030DC")]
		add
		{
		}
		[Token(Token = "0x600045F")]
		[Address(RVA = "0xEDEE0C", Offset = "0xEDEE0C", VA = "0xEDEE0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8030EC", Offset = "0x8030EC")]
		remove
		{
		}
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0xEDE8E0", Offset = "0xEDE8E0", VA = "0xEDE8E0")]
	public Pvr_UnitySDKSensor()
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0xEDEA08", Offset = "0xEDEA08", VA = "0xEDEA08")]
	public void Init()
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0xED9A70", Offset = "0xED9A70", VA = "0xED9A70")]
	public void SensorUpdate()
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0xEDF144", Offset = "0xEDF144", VA = "0xEDF144")]
	public bool InitUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0xEDEEFC", Offset = "0xEDEEFC", VA = "0xEDEEFC")]
	public bool InitUnitySDK6DofSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0xEDAF00", Offset = "0xEDAF00", VA = "0xEDAF00")]
	public bool StartUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0xED9E7C", Offset = "0xED9E7C", VA = "0xED9E7C")]
	public bool StopUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0xED80B8", Offset = "0xED80B8", VA = "0xED80B8")]
	public bool ResetUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0xED3374", Offset = "0xED3374", VA = "0xED3374")]
	public bool OptionalResetUnitySDKSensor(int resetRot, int resetPos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0xEDF288", Offset = "0xEDF288", VA = "0xEDF288")]
	public bool GetUnitySDKSensorState()
	{
		return default(bool);
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0xEE08EC", Offset = "0xEE08EC", VA = "0xEE08EC")]
	public bool GetUnitySDKPSensorState()
	{
		return default(bool);
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0xEE075C", Offset = "0xEE075C", VA = "0xEE075C")]
	private void RefreshHeadData(float x, float y, float z, float w, float px, float py, float pz)
	{
	}
}
[Token(Token = "0x2000068")]
public class CLoadingAsset : ScriptableObject
{
	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int SplashScreenType;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Texture2D> splashImage;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture2D Inside_background;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool UseSplashText;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string DefaultText;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string ChineseText;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string EnglishText;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string JapaneseText;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string KoreanText;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string FontSize;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Color FontColor;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string TextHeight;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool UseCarousel;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int SplashTextAlignment;

	[Token(Token = "0x600046C")]
	[Address(RVA = "0xA3ED78", Offset = "0xA3ED78", VA = "0xA3ED78")]
	public CLoadingAsset()
	{
	}
}
[Serializable]
[Token(Token = "0x2000069")]
public class Pvr_UnitySDKConfigProfile
{
	[Token(Token = "0x2000374")]
	public struct Lenses
	{
		[Token(Token = "0x400237C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float separation;

		[Token(Token = "0x400237D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float offset;

		[Token(Token = "0x400237E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float distance;

		[Token(Token = "0x400237F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int alignment;

		[Token(Token = "0x4002380")]
		public const int AlignTop = -1;

		[Token(Token = "0x4002381")]
		public const int AlignCenter = 0;

		[Token(Token = "0x4002382")]
		public const int AlignBottom = 1;
	}

	[Token(Token = "0x2000375")]
	public struct MaxFOV
	{
		[Token(Token = "0x4002383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float upper;

		[Token(Token = "0x4002384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float lower;

		[Token(Token = "0x4002385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float inner;

		[Token(Token = "0x4002386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float outer;
	}

	[Token(Token = "0x2000376")]
	public struct Distortion
	{
		[Token(Token = "0x4002387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float k1;

		[Token(Token = "0x4002388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float k2;

		[Token(Token = "0x4002389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float k3;

		[Token(Token = "0x400238A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float k4;

		[Token(Token = "0x400238B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float k5;

		[Token(Token = "0x400238C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float k6;

		[Token(Token = "0x6001898")]
		[Address(RVA = "0x8951E8", Offset = "0x8951E8", VA = "0x8951E8")]
		public float distort(float r)
		{
			return default(float);
		}

		[Token(Token = "0x6001899")]
		[Address(RVA = "0x8951F0", Offset = "0x8951F0", VA = "0x8951F0")]
		public float distort(float r, float dist)
		{
			return default(float);
		}

		[Token(Token = "0x600189A")]
		[Address(RVA = "0x8951F8", Offset = "0x8951F8", VA = "0x8951F8")]
		public float diatortInv(float radious)
		{
			return default(float);
		}
	}

	[Token(Token = "0x2000377")]
	public struct Device
	{
		[Token(Token = "0x400238D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Lenses devLenses;

		[Token(Token = "0x400238E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MaxFOV devMaxFov;

		[Token(Token = "0x400238F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Distortion devDistortion;

		[Token(Token = "0x4002390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Distortion devDistortionInv;
	}

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly Device SimulateDevice;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Device device;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static readonly Pvr_UnitySDKConfigProfile Default;

	[Token(Token = "0x600046D")]
	[Address(RVA = "0xECC0D0", Offset = "0xECC0D0", VA = "0xECC0D0")]
	public Pvr_UnitySDKConfigProfile Clone()
	{
		return null;
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0xECC16C", Offset = "0xECC16C", VA = "0xECC16C")]
	public static Pvr_UnitySDKConfigProfile GetPicoProfile()
	{
		return null;
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0xECC218", Offset = "0xECC218", VA = "0xECC218")]
	public float[] GetLeftEyeVisibleTanAngles(float width, float height)
	{
		return null;
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0xECC568", Offset = "0xECC568", VA = "0xECC568")]
	public float[] GetLeftEyeNoLensTanAngles(float width, float height)
	{
		return null;
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0xECC798", Offset = "0xECC798", VA = "0xECC798")]
	public Rect GetLeftEyeVisibleScreenRect(float[] undistortedFrustum, float width, float height)
	{
		return default(Rect);
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0xECC164", Offset = "0xECC164", VA = "0xECC164")]
	public Pvr_UnitySDKConfigProfile()
	{
	}
}
[Token(Token = "0x200006A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7F5EF0", Offset = "0x7F5EF0")]
public class Pvr_UnitySDKFPS : MonoBehaviour
{
	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text fpsText;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float updateInterval;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float accum;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int frames;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float timeLeft;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string strFps;

	[Token(Token = "0x6000474")]
	[Address(RVA = "0xED47AC", Offset = "0xED47AC", VA = "0xED47AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0xED4834", Offset = "0xED4834", VA = "0xED4834")]
	private void ShowFps()
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0xED4944", Offset = "0xED4944", VA = "0xED4944")]
	public Pvr_UnitySDKFPS()
	{
	}
}
[Token(Token = "0x200006B")]
public class Pvr_GazeFuse : MonoBehaviour
{
	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject gazeGameObject;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Image image;

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x1244744", Offset = "0x1244744", VA = "0x1244744")]
	private void Start()
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x124479C", Offset = "0x124479C", VA = "0x124479C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0x12448D0", Offset = "0x12448D0", VA = "0x12448D0")]
	private void FuseAmountChanged(float fuseAmount)
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x1244978", Offset = "0x1244978", VA = "0x1244978")]
	public Pvr_GazeFuse()
	{
	}
}
[Token(Token = "0x200006C")]
public class Pvr_GazeInputModule : PointerInputModule
{
	[Token(Token = "0x2000378")]
	public enum Mode
	{
		[Token(Token = "0x4002392")]
		Click,
		[Token(Token = "0x4002393")]
		Gaze
	}

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Mode mode;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7FD210", Offset = "0x7FD210")]
	public string ClickInputName;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7FD248", Offset = "0x7FD248")]
	public float GazeTimeInSeconds;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7FD280", Offset = "0x7FD280")]
	private static float <gazeFraction>k__BackingField;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7FD290", Offset = "0x7FD290")]
	private static GameObject <gazeGameObject>k__BackingField;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public RaycastResult CurrentRaycast;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private PointerEventData pointerEventData;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private GameObject currentLookAtHandler;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float currentLookAtHandlerClickTime;

	[Token(Token = "0x17000061")]
	public static float gazeFraction
	{
		[Token(Token = "0x600047B")]
		[Address(RVA = "0x1244980", Offset = "0x1244980", VA = "0x1244980")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8030FC", Offset = "0x8030FC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600047C")]
		[Address(RVA = "0x12449D0", Offset = "0x12449D0", VA = "0x12449D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x80310C", Offset = "0x80310C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000062")]
	public static GameObject gazeGameObject
	{
		[Token(Token = "0x600047D")]
		[Address(RVA = "0x1244A2C", Offset = "0x1244A2C", VA = "0x1244A2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x80311C", Offset = "0x80311C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600047E")]
		[Address(RVA = "0x1244A7C", Offset = "0x1244A7C", VA = "0x1244A7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x80312C", Offset = "0x80312C")]
		private set
		{
		}
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x1244AD0", Offset = "0x1244AD0", VA = "0x1244AD0", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x1244AF4", Offset = "0x1244AF4", VA = "0x1244AF4")]
	private void HandleLook()
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x1244CBC", Offset = "0x1244CBC", VA = "0x1244CBC")]
	private void HandleSelection()
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0x124516C", Offset = "0x124516C", VA = "0x124516C")]
	public Pvr_GazeInputModule()
	{
	}
}
[Token(Token = "0x200006D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7F5F54", Offset = "0x7F5F54")]
public class Pvr_GazeInputModuleCrosshair : MonoBehaviour
{
	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool DisplayCrosshair;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FD2A0", Offset = "0x7FD2A0")]
	public Transform Crosshair;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Pvr_GazeInputModule gazeInputModule;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 CrosshairOriginalScale;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float CrosshairOriginalDistance;

	[Token(Token = "0x6000483")]
	[Address(RVA = "0x12451CC", Offset = "0x12451CC", VA = "0x12451CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x1245224", Offset = "0x1245224", VA = "0x1245224")]
	private void Start()
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0x124528C", Offset = "0x124528C", VA = "0x124528C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0x12453A4", Offset = "0x12453A4", VA = "0x12453A4")]
	private void SetCrossHairAtDistance(float dist)
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0x12454A4", Offset = "0x12454A4", VA = "0x12454A4")]
	public Pvr_GazeInputModuleCrosshair()
	{
	}
}
[Token(Token = "0x200006E")]
public enum RenderEventType
{
	[Token(Token = "0x4000386")]
	InitRenderThread = 1024,
	[Token(Token = "0x4000387")]
	Pause,
	[Token(Token = "0x4000388")]
	Resume,
	[Token(Token = "0x4000389")]
	LeftEyeEndFrame,
	[Token(Token = "0x400038A")]
	RightEyeEndFrame,
	[Token(Token = "0x400038B")]
	TimeWarp,
	[Token(Token = "0x400038C")]
	ResetVrModeParms,
	[Token(Token = "0x400038D")]
	ShutdownRenderThread,
	[Token(Token = "0x400038E")]
	BeginEye,
	[Token(Token = "0x400038F")]
	EndEye,
	[Token(Token = "0x4000390")]
	BoundaryRenderLeft,
	[Token(Token = "0x4000391")]
	BoundaryRenderRight,
	[Token(Token = "0x4000392")]
	BothEyeEndFrame,
	[Token(Token = "0x4000393")]
	CameraFrameLeft,
	[Token(Token = "0x4000394")]
	CameraFrameRight,
	[Token(Token = "0x4000395")]
	StartCameraFrame,
	[Token(Token = "0x4000396")]
	StopCameraFrame
}
[Token(Token = "0x200006F")]
public static class Pvr_UnitySDKPluginEvent
{
	[Token(Token = "0x2000379")]
	private delegate void RenderEventDelegate(int eventId);

	[Token(Token = "0x4000397")]
	private const uint IS_DATA_FLAG = 2147483648u;

	[Token(Token = "0x4000398")]
	private const uint DATA_POS_MASK = 1073741824u;

	[Token(Token = "0x4000399")]
	private const int DATA_POS_SHIFT = 30;

	[Token(Token = "0x400039A")]
	private const uint EVENT_TYPE_MASK = 1056899072u;

	[Token(Token = "0x400039B")]
	private const int EVENT_TYPE_SHIFT = 17;

	[Token(Token = "0x400039C")]
	private const uint PAYLOAD_MASK = 65535u;

	[Token(Token = "0x400039D")]
	private const int PAYLOAD_SHIFT = 16;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RenderEventDelegate SetSinglePassBeforeForwardOpaqueHandle;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static IntPtr SetSinglePassBeforeForwardOpaquePtr;

	[Token(Token = "0x6000489")]
	[Address(RVA = "0xECF170", Offset = "0xECF170", VA = "0xECF170")]
	public static void Issue(RenderEventType eventType)
	{
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0xEDB828", Offset = "0xEDB828", VA = "0xEDB828")]
	private static int EncodeType(int eventType)
	{
		return default(int);
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0xEDB830", Offset = "0xEDB830", VA = "0xEDB830")]
	private static int EncodeData(int eventId, int eventData, int pos)
	{
		return default(int);
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0xEDB850", Offset = "0xEDB850", VA = "0xEDB850")]
	private static int DecodeData(int eventData)
	{
		return default(int);
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0xEDB820", Offset = "0xEDB820", VA = "0xEDB820")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x80313C", Offset = "0x80313C")]
	private static void SetSinglePassBeforeForwardOpaque(int eventId)
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0xEDB864", Offset = "0xEDB864", VA = "0xEDB864")]
	public static void SetSinglePassBeforeForwardOpaque(CommandBuffer cmd)
	{
	}
}
[Token(Token = "0x2000070")]
public class Pvr_UnitySDKSightInputModule : BaseInputModule
{
	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FD2D8", Offset = "0x7FD2D8")]
	public GameObject cursor;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int trigger;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[HideInInspector]
	public float clickTime;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public Vector2 hotspot;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private PointerEventData pointerData;

	[Token(Token = "0x6000490")]
	[Address(RVA = "0xEE0AD4", Offset = "0xEE0AD4", VA = "0xEE0AD4", Slot = "21")]
	public override bool ShouldActivateModule()
	{
		return default(bool);
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0xEE0B64", Offset = "0xEE0B64", VA = "0xEE0B64", Slot = "22")]
	public override void DeactivateModule()
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0xEE0E54", Offset = "0xEE0E54", VA = "0xEE0E54", Slot = "20")]
	public override bool IsPointerOverGameObject(int pointerId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0xEE0EDC", Offset = "0xEE0EDC", VA = "0xEE0EDC", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0xEE0F18", Offset = "0xEE0F18", VA = "0xEE0F18")]
	private void CastRayFromGaze()
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0xEE1060", Offset = "0xEE1060", VA = "0xEE1060")]
	private void UpdateCurrentObject()
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0xEE1204", Offset = "0xEE1204", VA = "0xEE1204")]
	private void PlaceCursor()
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0xEE0C64", Offset = "0xEE0C64", VA = "0xEE0C64")]
	private void HandlePendingClick()
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0xEE1430", Offset = "0xEE1430", VA = "0xEE1430")]
	private void HandleTrigger()
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0xEE16AC", Offset = "0xEE16AC", VA = "0xEE16AC")]
	public Pvr_UnitySDKSightInputModule()
	{
	}
}
[Token(Token = "0x2000071")]
public class Pvr_ObjImporter
{
	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_ObjImporter _instance;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<int> triangles;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Vector3> vertices;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Vector2> uv;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Vector3> normals;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<PvrVector3Int> faceData;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<int> intArray;

	[Token(Token = "0x40003AC")]
	private const int MIN_POW_10 = -16;

	[Token(Token = "0x40003AD")]
	private const int MAX_POW_10 = 16;

	[Token(Token = "0x40003AE")]
	private const int NUM_POWS_10 = 33;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly float[] pow10;

	[Token(Token = "0x17000063")]
	public static Pvr_ObjImporter Instance
	{
		[Token(Token = "0x600049A")]
		[Address(RVA = "0xC8658C", Offset = "0xC8658C", VA = "0xC8658C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0xC86638", Offset = "0xC86638", VA = "0xC86638")]
	public Mesh ImportFile(string filePath)
	{
		return null;
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0xC86A74", Offset = "0xC86A74", VA = "0xC86A74")]
	private void LoadMeshData(string fileName)
	{
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0xC87150", Offset = "0xC87150", VA = "0xC87150")]
	private float GetFloat(StringBuilder sb, ref int start, ref StringBuilder sbFloat)
	{
		return default(float);
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0xC872CC", Offset = "0xC872CC", VA = "0xC872CC")]
	private int GetInt(StringBuilder sb, ref int start, ref StringBuilder sbInt)
	{
		return default(int);
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0xC876F8", Offset = "0xC876F8", VA = "0xC876F8")]
	private static float[] GenerateLookupTable()
	{
		return null;
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0xC87410", Offset = "0xC87410", VA = "0xC87410")]
	private float ParseFloat(StringBuilder value)
	{
		return default(float);
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0xC87668", Offset = "0xC87668", VA = "0xC87668")]
	private int IntParseFast(StringBuilder value)
	{
		return default(int);
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0xC86630", Offset = "0xC86630", VA = "0xC86630")]
	public Pvr_ObjImporter()
	{
	}
}
[Token(Token = "0x2000072")]
public sealed class PvrVector3Int
{
	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7FD330", Offset = "0x7FD330")]
	private int <x>k__BackingField;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7FD340", Offset = "0x7FD340")]
	private int <y>k__BackingField;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7FD350", Offset = "0x7FD350")]
	private int <z>k__BackingField;

	[Token(Token = "0x17000064")]
	public int x
	{
		[Token(Token = "0x60004A4")]
		[Address(RVA = "0x9F10D0", Offset = "0x9F10D0", VA = "0x9F10D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8031A0", Offset = "0x8031A0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60004A5")]
		[Address(RVA = "0x9F10D8", Offset = "0x9F10D8", VA = "0x9F10D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8031B0", Offset = "0x8031B0")]
		set
		{
		}
	}

	[Token(Token = "0x17000065")]
	public int y
	{
		[Token(Token = "0x60004A6")]
		[Address(RVA = "0x9F10E0", Offset = "0x9F10E0", VA = "0x9F10E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8031C0", Offset = "0x8031C0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60004A7")]
		[Address(RVA = "0x9F10E8", Offset = "0x9F10E8", VA = "0x9F10E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8031D0", Offset = "0x8031D0")]
		set
		{
		}
	}

	[Token(Token = "0x17000066")]
	public int z
	{
		[Token(Token = "0x60004A8")]
		[Address(RVA = "0x9F10F0", Offset = "0x9F10F0", VA = "0x9F10F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8031E0", Offset = "0x8031E0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60004A9")]
		[Address(RVA = "0x9F10F8", Offset = "0x9F10F8", VA = "0x9F10F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8031F0", Offset = "0x8031F0")]
		set
		{
		}
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x9F1100", Offset = "0x9F1100", VA = "0x9F1100")]
	public PvrVector3Int()
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0x9F1108", Offset = "0x9F1108", VA = "0x9F1108")]
	public PvrVector3Int(int x, int y, int z)
	{
	}
}
[Token(Token = "0x2000073")]
public class Pvr_EnumFlags : PropertyAttribute
{
	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x124473C", Offset = "0x124473C", VA = "0x124473C")]
	public Pvr_EnumFlags()
	{
	}
}
[Token(Token = "0x2000074")]
public enum ConfirmBtn
{
	[Token(Token = "0x40003B4")]
	App = 1,
	[Token(Token = "0x40003B5")]
	TouchPad = 2,
	[Token(Token = "0x40003B6")]
	Trigger = 4
}
[Token(Token = "0x2000075")]
public class Pvr_InputModule : PointerInputModule
{
	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Pvr_UIPointer> pointers;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Pvr_EnumFlags]
	public ConfirmBtn confirmBtn;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<RaycastResult> rayCasts;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private RaycastResult rayCastResult;

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x1245500", Offset = "0x1245500", VA = "0x1245500", Slot = "30")]
	public virtual void Initialise()
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x124557C", Offset = "0x124557C", VA = "0x124557C")]
	public static void AddPoint(Pvr_UIPointer point)
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x124564C", Offset = "0x124564C", VA = "0x124564C")]
	public static void RemovePoint(Pvr_UIPointer point)
	{
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x124571C", Offset = "0x124571C", VA = "0x124571C", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x1245A98", Offset = "0x1245A98", VA = "0x1245A98", Slot = "31")]
	protected virtual List<RaycastResult> CheckRaycasts(Pvr_UIPointer pointer)
	{
		return null;
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x1245B4C", Offset = "0x1245B4C", VA = "0x1245B4C", Slot = "32")]
	protected virtual bool CheckTransformTree(Transform target, Transform source)
	{
		return default(bool);
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x1245C40", Offset = "0x1245C40", VA = "0x1245C40", Slot = "33")]
	protected virtual bool NoValidCollision(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
		return default(bool);
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x1245D04", Offset = "0x1245D04", VA = "0x1245D04", Slot = "34")]
	protected virtual bool IsHovering(Pvr_UIPointer pointer)
	{
		return default(bool);
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x1245F1C", Offset = "0x1245F1C", VA = "0x1245F1C", Slot = "35")]
	protected virtual bool ValidElement(GameObject obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0x1245FD0", Offset = "0x1245FD0", VA = "0x1245FD0", Slot = "36")]
	protected virtual void CheckPointerHoverClick(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0x1246070", Offset = "0x1246070", VA = "0x1246070", Slot = "37")]
	protected virtual void Hover(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0x1246CC0", Offset = "0x1246CC0", VA = "0x1246CC0", Slot = "38")]
	protected virtual void Click(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0x1246D0C", Offset = "0x1246D0C", VA = "0x1246D0C", Slot = "39")]
	protected virtual void ClickOnUp(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0x1246DB0", Offset = "0x1246DB0", VA = "0x1246DB0", Slot = "40")]
	protected virtual void ClickOnDown(Pvr_UIPointer pointer, List<RaycastResult> results, bool forceClick = false)
	{
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x1246E70", Offset = "0x1246E70", VA = "0x1246E70", Slot = "41")]
	protected virtual bool IsEligibleClick(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
		return default(bool);
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x1247154", Offset = "0x1247154", VA = "0x1247154", Slot = "42")]
	protected virtual bool AttemptClick(Pvr_UIPointer pointer)
	{
		return default(bool);
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x1247428", Offset = "0x1247428", VA = "0x1247428", Slot = "43")]
	protected virtual void Drag(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x1247B0C", Offset = "0x1247B0C", VA = "0x1247B0C")]
	public Pvr_InputModule()
	{
	}
}
[Token(Token = "0x2000076")]
public class Pvr_UICanvas : MonoBehaviour
{
	[Token(Token = "0x200037A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9858", Offset = "0x7F9858")]
	private sealed class <CreateDraggablePanel>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Canvas canvas;

		[Token(Token = "0x4002397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 canvasSize;

		[Token(Token = "0x170002FF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60018A2")]
			[Address(RVA = "0xC8B4A4", Offset = "0xC8B4A4", VA = "0xC8B4A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000300")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018A4")]
			[Address(RVA = "0xC8B510", Offset = "0xC8B510", VA = "0xC8B510", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600189F")]
		[Address(RVA = "0xC8AE00", Offset = "0xC8AE00", VA = "0xC8AE00")]
		[DebuggerHidden]
		public <CreateDraggablePanel>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x60018A0")]
		[Address(RVA = "0xC8B118", Offset = "0xC8B118", VA = "0xC8B118", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60018A1")]
		[Address(RVA = "0xC8B11C", Offset = "0xC8B11C", VA = "0xC8B11C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018A3")]
		[Address(RVA = "0xC8B4AC", Offset = "0xC8B4AC", VA = "0xC8B4AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool clickOnPointerCollision;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float autoActivateWithinDistance;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected BoxCollider canvasBoxCollider;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Rigidbody canvasRigidBody;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected Coroutine draggablePanelCreation;

	[Token(Token = "0x40003C0")]
	protected const string CANVAS_DRAGGABLE_PANEL = "UICANVAS_DRAGGABLE_PANEL";

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0xC8A9C4", Offset = "0xC8A9C4", VA = "0xC8A9C4", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0xC8A9D0", Offset = "0xC8A9D0", VA = "0xC8A9D0", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0xC8A9DC", Offset = "0xC8A9DC", VA = "0xC8A9DC", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0xC8A9E8", Offset = "0xC8A9E8", VA = "0xC8A9E8", Slot = "7")]
	protected virtual void SetupCanvas()
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0xC8AD78", Offset = "0xC8AD78", VA = "0xC8AD78", Slot = "8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x803200", Offset = "0x803200")]
	protected virtual IEnumerator CreateDraggablePanel(Canvas canvas, Vector2 canvasSize)
	{
		return null;
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0xC8AE2C", Offset = "0xC8AE2C", VA = "0xC8AE2C", Slot = "9")]
	protected virtual void RemoveCanvas()
	{
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0xC8B110", Offset = "0xC8B110", VA = "0xC8B110")]
	public Pvr_UICanvas()
	{
	}
}
[Token(Token = "0x2000077")]
public struct UIDraggableItemEventArgs
{
	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject target;
}
[Token(Token = "0x2000078")]
public delegate void UIDraggableItemEventHandler(object sender, UIDraggableItemEventArgs e);
[Token(Token = "0x2000079")]
public class Pvr_UIDraggableItem : MonoBehaviour, IBeginDragHandler, IEventSystemHandler, IDragHandler, IEndDragHandler
{
	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool restrictToDropZone;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool restrictToOriginalCanvas;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float moveOffset;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public GameObject validDropZone;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected RectTransform dragTransform;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Vector3 startPosition;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected Quaternion startRotation;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject startDropZone;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Transform startParent;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Canvas startCanvas;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected CanvasGroup canvasGroup;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected Pvr_InputModule currentInputmodule;

	[Token(Token = "0x14000019")]
	public event UIDraggableItemEventHandler DraggableItemDropped
	{
		[Token(Token = "0x60004CB")]
		[Address(RVA = "0xC8B518", Offset = "0xC8B518", VA = "0xC8B518")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x803264", Offset = "0x803264")]
		add
		{
		}
		[Token(Token = "0x60004CC")]
		[Address(RVA = "0xC8B5BC", Offset = "0xC8B5BC", VA = "0xC8B5BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x803274", Offset = "0x803274")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001A")]
	public event UIDraggableItemEventHandler DraggableItemReset
	{
		[Token(Token = "0x60004CD")]
		[Address(RVA = "0xC8B660", Offset = "0xC8B660", VA = "0xC8B660")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x803284", Offset = "0x803284")]
		add
		{
		}
		[Token(Token = "0x60004CE")]
		[Address(RVA = "0xC8B704", Offset = "0xC8B704", VA = "0xC8B704")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x803294", Offset = "0x803294")]
		remove
		{
		}
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0xC8B7A8", Offset = "0xC8B7A8", VA = "0xC8B7A8", Slot = "7")]
	public virtual void OnDraggableItemDropped(UIDraggableItemEventArgs e)
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0xC8B7CC", Offset = "0xC8B7CC", VA = "0xC8B7CC", Slot = "8")]
	public virtual void OnDraggableItemReset(UIDraggableItemEventArgs e)
	{
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0xC8B7F0", Offset = "0xC8B7F0", VA = "0xC8B7F0", Slot = "4")]
	public void OnBeginDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0xC8BA0C", Offset = "0xC8BA0C", VA = "0xC8BA0C", Slot = "5")]
	public void OnDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0xC8BA18", Offset = "0xC8BA18", VA = "0xC8BA18", Slot = "6")]
	public void OnEndDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0xC8BE64", Offset = "0xC8BE64", VA = "0xC8BE64", Slot = "9")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0xC8BF58", Offset = "0xC8BF58", VA = "0xC8BF58", Slot = "10")]
	protected virtual Pvr_UIPointer GetPointer()
	{
		return null;
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0xC8C0E4", Offset = "0xC8C0E4", VA = "0xC8C0E4", Slot = "11")]
	protected virtual void SetDragPosition(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0xC8C3AC", Offset = "0xC8C3AC", VA = "0xC8C3AC", Slot = "12")]
	protected virtual void ResetElement()
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0xC8C45C", Offset = "0xC8C45C", VA = "0xC8C45C", Slot = "13")]
	protected virtual UIDraggableItemEventArgs SetEventPayload(GameObject target)
	{
		return default(UIDraggableItemEventArgs);
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0xC8C464", Offset = "0xC8C464", VA = "0xC8C464")]
	public Pvr_UIDraggableItem()
	{
	}
}
[Token(Token = "0x200007A")]
public class Pvr_UIDropZone : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Pvr_UIDraggableItem droppableItem;

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0xC8C478", Offset = "0xC8C478", VA = "0xC8C478", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0xC8C56C", Offset = "0xC8C56C", VA = "0xC8C56C", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0xC8C5F8", Offset = "0xC8C5F8", VA = "0xC8C5F8")]
	public Pvr_UIDropZone()
	{
	}
}
[Token(Token = "0x200007B")]
public class Pvr_UIGraphicRaycaster : GraphicRaycaster
{
	[Serializable]
	[Token(Token = "0x200037B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9868", Offset = "0x7F9868")]
	private sealed class <>c
	{
		[Token(Token = "0x4002398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<RaycastResult> <>9__7_0;

		[Token(Token = "0x60018A6")]
		[Address(RVA = "0xC8D534", Offset = "0xC8D534", VA = "0xC8D534")]
		public <>c()
		{
		}

		[Token(Token = "0x60018A7")]
		[Address(RVA = "0xC8D53C", Offset = "0xC8D53C", VA = "0xC8D53C")]
		internal int <Raycast>b__7_0(RaycastResult g1, RaycastResult g2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Canvas currentCanvas;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected Vector2 lastKnownPosition;

	[Token(Token = "0x40003D3")]
	protected const float UI_CONTROL_OFFSET = 1E-05f;

	[NonSerialized]
	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<RaycastResult> s_RaycastResults;

	[Token(Token = "0x17000067")]
	protected virtual Canvas canvas
	{
		[Token(Token = "0x60004E1")]
		[Address(RVA = "0xC8D34C", Offset = "0xC8D34C", VA = "0xC8D34C", Slot = "25")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0xC8C600", Offset = "0xC8C600", VA = "0xC8C600", Slot = "17")]
	public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0xC8C7B4", Offset = "0xC8C7B4", VA = "0xC8C7B4", Slot = "22")]
	protected virtual void SetNearestRaycast(ref PointerEventData eventData, ref List<RaycastResult> resultAppendList, ref List<RaycastResult> raycastResults)
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0xC8CA40", Offset = "0xC8CA40", VA = "0xC8CA40", Slot = "23")]
	protected virtual float GetHitDistance(Ray ray)
	{
		return default(float);
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0xC8CD60", Offset = "0xC8CD60", VA = "0xC8CD60", Slot = "24")]
	protected virtual void Raycast(Canvas canvas, Camera eventCamera, Ray ray, ref List<RaycastResult> results)
	{
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0xC8D3F4", Offset = "0xC8D3F4", VA = "0xC8D3F4")]
	public Pvr_UIGraphicRaycaster()
	{
	}
}
[Token(Token = "0x200007C")]
public struct UIPointerEventArgs
{
	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool isActive;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public GameObject currentTarget;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject previousTarget;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RaycastResult raycastResult;
}
[Token(Token = "0x200007D")]
public delegate void UIPointerEventHandler(object sender, UIPointerEventArgs e);
[Token(Token = "0x200007E")]
public class Pvr_UIPointer : MonoBehaviour
{
	[Token(Token = "0x200037C")]
	public enum ClickMethods
	{
		[Token(Token = "0x400239B")]
		ClickOnButtonUp,
		[Token(Token = "0x400239C")]
		ClickOnButtonDown
	}

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ClickMethods clickMethod;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public bool collisionClick;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[HideInInspector]
	public bool pressToDrag;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public GameObject autoActivatingCanvas;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public PointerEventData pointerEventData;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public GameObject hoveringElement;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public float hoverDurationTimer;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public bool canClickOnHover;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform pointerOriginTransform;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected bool pointerClicked;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	protected bool beamEnabledState;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	protected bool lastPointerPressState;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
	protected bool lastPointerClickState;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected GameObject currentTarget;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected EventSystem cachedEventSystem;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected Pvr_InputModule cachedVRInputModule;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Transform originalPointerOriginTransform;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool TouchBtnValue;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool AppBtnValue;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	public static bool TriggerBtnValue;

	[Token(Token = "0x1400001B")]
	public event UIPointerEventHandler UIPointerElementEnter
	{
		[Token(Token = "0x60004E8")]
		[Address(RVA = "0xC8D54C", Offset = "0xC8D54C", VA = "0xC8D54C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8032A4", Offset = "0x8032A4")]
		add
		{
		}
		[Token(Token = "0x60004E9")]
		[Address(RVA = "0xC8D5F0", Offset = "0xC8D5F0", VA = "0xC8D5F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8032B4", Offset = "0x8032B4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001C")]
	public event UIPointerEventHandler UIPointerElementExit
	{
		[Token(Token = "0x60004EA")]
		[Address(RVA = "0xC8D694", Offset = "0xC8D694", VA = "0xC8D694")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8032C4", Offset = "0x8032C4")]
		add
		{
		}
		[Token(Token = "0x60004EB")]
		[Address(RVA = "0xC8D738", Offset = "0xC8D738", VA = "0xC8D738")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8032D4", Offset = "0x8032D4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001D")]
	public event UIPointerEventHandler UIPointerElementClick
	{
		[Token(Token = "0x60004EC")]
		[Address(RVA = "0xC8D7DC", Offset = "0xC8D7DC", VA = "0xC8D7DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8032E4", Offset = "0x8032E4")]
		add
		{
		}
		[Token(Token = "0x60004ED")]
		[Address(RVA = "0xC8D880", Offset = "0xC8D880", VA = "0xC8D880")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8032F4", Offset = "0x8032F4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001E")]
	public event UIPointerEventHandler UIPointerElementDragStart
	{
		[Token(Token = "0x60004EE")]
		[Address(RVA = "0xC8D924", Offset = "0xC8D924", VA = "0xC8D924")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x803304", Offset = "0x803304")]
		add
		{
		}
		[Token(Token = "0x60004EF")]
		[Address(RVA = "0xC8D9C8", Offset = "0xC8D9C8", VA = "0xC8D9C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x803314", Offset = "0x803314")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001F")]
	public event UIPointerEventHandler UIPointerElementDragEnd
	{
		[Token(Token = "0x60004F0")]
		[Address(RVA = "0xC8DA6C", Offset = "0xC8DA6C", VA = "0xC8DA6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x803324", Offset = "0x803324")]
		add
		{
		}
		[Token(Token = "0x60004F1")]
		[Address(RVA = "0xC8DB10", Offset = "0xC8DB10", VA = "0xC8DB10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x803334", Offset = "0x803334")]
		remove
		{
		}
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0xC8DBB4", Offset = "0xC8DBB4", VA = "0xC8DBB4", Slot = "4")]
	public virtual bool PointerActive()
	{
		return default(bool);
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0xC8DBBC", Offset = "0xC8DBBC", VA = "0xC8DBBC", Slot = "5")]
	public virtual bool IsSelectionButtonPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0xC8DC9C", Offset = "0xC8DC9C", VA = "0xC8DC9C", Slot = "6")]
	public virtual Vector3 GetOriginPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0xC8DD30", Offset = "0xC8DD30", VA = "0xC8DD30", Slot = "7")]
	public virtual Vector3 GetOriginForward()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0xC8DDC4", Offset = "0xC8DDC4", VA = "0xC8DDC4", Slot = "8")]
	public virtual bool ValidClick(bool checkLastClick, bool lastClickState = false)
	{
		return default(bool);
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0xC8DDE0", Offset = "0xC8DDE0", VA = "0xC8DDE0", Slot = "9")]
	protected virtual void ResetHoverTimer()
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0xC8DDEC", Offset = "0xC8DDEC", VA = "0xC8DDEC", Slot = "10")]
	public virtual void OnUIPointerElementEnter(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0xC8DED0", Offset = "0xC8DED0", VA = "0xC8DED0", Slot = "11")]
	public virtual void OnUIPointerElementExit(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0xC8DF9C", Offset = "0xC8DF9C", VA = "0xC8DF9C", Slot = "12")]
	public virtual void OnUIPointerElementClick(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0xC8E068", Offset = "0xC8E068", VA = "0xC8E068", Slot = "13")]
	public virtual void OnUIPointerElementDragStart(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0xC8E0B4", Offset = "0xC8E0B4", VA = "0xC8E0B4", Slot = "14")]
	public virtual void OnUIPointerElementDragEnd(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0xC8E100", Offset = "0xC8E100", VA = "0xC8E100", Slot = "15")]
	public virtual UIPointerEventArgs SetUIPointerEvent(RaycastResult currentRaycastResult, GameObject currentTarget, [Optional] GameObject lastTarget)
	{
		return default(UIPointerEventArgs);
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0xC8E164", Offset = "0xC8E164", VA = "0xC8E164", Slot = "16")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0xC8E170", Offset = "0xC8E170", VA = "0xC8E170", Slot = "17")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0xC8E1A8", Offset = "0xC8E1A8", VA = "0xC8E1A8", Slot = "18")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0xC8E210", Offset = "0xC8E210", VA = "0xC8E210", Slot = "19")]
	protected virtual void ConfigureEventSystem()
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0xC8E3B4", Offset = "0xC8E3B4", VA = "0xC8E3B4")]
	public Pvr_UIPointer()
	{
	}
}
[Token(Token = "0x200007F")]
[ExecuteInEditMode]
public class Pvr_UnitySDKEditor : MonoBehaviour
{
	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool vrModeEnabled;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float mouseX;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float mouseY;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float mouseZ;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float neckModelScale;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool autoUntiltHead;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 neckOffset;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Matrix4x4 headView;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public Matrix4x4 leftEyeUndistortedProj;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[HideInInspector]
	public Matrix4x4 rightEyeUndistortedProj;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[HideInInspector]
	public Matrix4x4 leftEyeProj;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[HideInInspector]
	public Matrix4x4 rightEyeProj;

	[Token(Token = "0x40003FE")]
	private const float TOUCH_TIME_LIMIT = 0.2f;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private float touchStartTime;

	[Token(Token = "0x6000504")]
	[Address(RVA = "0xECC94C", Offset = "0xECC94C", VA = "0xECC94C")]
	public Matrix4x4 UndistortedProjection(Eye eye)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0xECC998", Offset = "0xECC998", VA = "0xECC998")]
	public Matrix4x4 Projection(Eye eye)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0xECC9E4", Offset = "0xECC9E4", VA = "0xECC9E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0xECCBCC", Offset = "0xECCBCC", VA = "0xECCBCC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0xECC9F8", Offset = "0xECC9F8", VA = "0xECC9F8")]
	public void InitEyePara()
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0xECCB3C", Offset = "0xECCB3C", VA = "0xECCB3C")]
	private void InitEditorSensorPara()
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0xECD69C", Offset = "0xECD69C", VA = "0xECD69C")]
	public static Matrix4x4 MakeProjection(float l, float t, float r, float b, float n, float f)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0xECD840", Offset = "0xECD840", VA = "0xECD840")]
	public bool UpdateStatesensor()
	{
		return default(bool);
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0xECCE94", Offset = "0xECCE94", VA = "0xECCE94")]
	public void ComputeEyesFromProfile()
	{
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0xECDCCC", Offset = "0xECDCCC", VA = "0xECDCCC")]
	public bool ResetUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0xECCC68", Offset = "0xECCC68", VA = "0xECCC68")]
	private void SimulateInput()
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0xECD5DC", Offset = "0xECD5DC", VA = "0xECD5DC")]
	private void FovAdjust()
	{
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0xECDD90", Offset = "0xECDD90", VA = "0xECDD90")]
	private Rect RectAdjust(Rect eyeRect)
	{
		return default(Rect);
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0xECD858", Offset = "0xECD858", VA = "0xECD858")]
	private void UpdateSimulatedSensor()
	{
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0xECD3AC", Offset = "0xECD3AC", VA = "0xECD3AC")]
	private void InitForEye(ref Material mat, ref Material mat1)
	{
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0xECDCE0", Offset = "0xECDCE0", VA = "0xECDCE0")]
	private void EnableVEmodel()
	{
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0xECDF3C", Offset = "0xECDF3C", VA = "0xECDF3C")]
	public Pvr_UnitySDKEditor()
	{
	}
}
[Token(Token = "0x2000080")]
public class Pvr_VolumePowerBrightness : MonoBehaviour
{
	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool VolEnable;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool BattEnable;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text showResult;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text setVolumnum;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text setBrightnum;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string MusicPath;

	[Token(Token = "0x6000516")]
	[Address(RVA = "0xEE3784", Offset = "0xEE3784", VA = "0xEE3784")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0xEE383C", Offset = "0xEE383C", VA = "0xEE383C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0xEE3880", Offset = "0xEE3880", VA = "0xEE3880")]
	public void GetMaxVolumeNumber()
	{
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0xEE3920", Offset = "0xEE3920", VA = "0xEE3920")]
	public void GetCurrentVolumeNumber()
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0xEE39C0", Offset = "0xEE39C0", VA = "0xEE39C0")]
	public void VolumeUp()
	{
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0xEE3A40", Offset = "0xEE3A40", VA = "0xEE3A40")]
	public void VolumeDown()
	{
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0xEE3AC0", Offset = "0xEE3AC0", VA = "0xEE3AC0")]
	public void SetVolumeNum()
	{
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0xEE3BD8", Offset = "0xEE3BD8", VA = "0xEE3BD8")]
	public void SetBrightness()
	{
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0xEE3CF0", Offset = "0xEE3CF0", VA = "0xEE3CF0")]
	public void GetCurrentBrightness()
	{
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0xEE3D90", Offset = "0xEE3D90", VA = "0xEE3D90")]
	public bool setAudio(string s)
	{
		return default(bool);
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0xEE3E24", Offset = "0xEE3E24", VA = "0xEE3E24")]
	public bool setBattery(string s)
	{
		return default(bool);
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0xEE37E0", Offset = "0xEE37E0", VA = "0xEE37E0")]
	private bool InitBatteryVolClass()
	{
		return default(bool);
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0xEE37E4", Offset = "0xEE37E4", VA = "0xEE37E4")]
	private bool StartBatteryReceiver(string startreceivre)
	{
		return default(bool);
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0xEE387C", Offset = "0xEE387C", VA = "0xEE387C")]
	private bool StopBatteryReceiver()
	{
		return default(bool);
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0xEE3810", Offset = "0xEE3810", VA = "0xEE3810")]
	private bool StartAudioReceiver(string startreceivre)
	{
		return default(bool);
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0xEE3878", Offset = "0xEE3878", VA = "0xEE3878")]
	private bool StopAudioReceiver()
	{
		return default(bool);
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0xEE3EB8", Offset = "0xEE3EB8", VA = "0xEE3EB8")]
	public Pvr_VolumePowerBrightness()
	{
	}
}
[Token(Token = "0x2000081")]
public static class ResonanceAudio
{
	[StructLayout(0)]
	[Token(Token = "0x200037D")]
	private class RoomProperties
	{
		[Token(Token = "0x400239D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float positionX;

		[Token(Token = "0x400239E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float positionY;

		[Token(Token = "0x400239F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float positionZ;

		[Token(Token = "0x40023A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float rotationX;

		[Token(Token = "0x40023A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float rotationY;

		[Token(Token = "0x40023A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float rotationZ;

		[Token(Token = "0x40023A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float rotationW;

		[Token(Token = "0x40023A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float dimensionsX;

		[Token(Token = "0x40023A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float dimensionsY;

		[Token(Token = "0x40023A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float dimensionsZ;

		[Token(Token = "0x40023A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ResonanceAudioRoomManager.SurfaceMaterial materialLeft;

		[Token(Token = "0x40023A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public ResonanceAudioRoomManager.SurfaceMaterial materialRight;

		[Token(Token = "0x40023A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ResonanceAudioRoomManager.SurfaceMaterial materialBottom;

		[Token(Token = "0x40023AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public ResonanceAudioRoomManager.SurfaceMaterial materialTop;

		[Token(Token = "0x40023AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ResonanceAudioRoomManager.SurfaceMaterial materialFront;

		[Token(Token = "0x40023AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public ResonanceAudioRoomManager.SurfaceMaterial materialBack;

		[Token(Token = "0x40023AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float reflectionScalar;

		[Token(Token = "0x40023AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float reverbGain;

		[Token(Token = "0x40023AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float reverbTime;

		[Token(Token = "0x40023B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float reverbBrightness;

		[Token(Token = "0x60018A8")]
		[Address(RVA = "0xA481AC", Offset = "0xA481AC", VA = "0xA481AC")]
		public RoomProperties()
		{
		}
	}

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Transform listenerTransform;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly Color listenerDirectivityColor;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly Color sourceDirectivityColor;

	[Token(Token = "0x4000409")]
	public const float distanceEpsilon = 0.01f;

	[Token(Token = "0x400040A")]
	public const float maxDistanceLimit = 1000000f;

	[Token(Token = "0x400040B")]
	public const float minDistanceLimit = 990099f;

	[Token(Token = "0x400040C")]
	public const float maxGainDb = 24f;

	[Token(Token = "0x400040D")]
	public const float minGainDb = -24f;

	[Token(Token = "0x400040E")]
	public const float maxReverbBrightness = 1f;

	[Token(Token = "0x400040F")]
	public const float minReverbBrightness = -1f;

	[Token(Token = "0x4000410")]
	public const float maxReverbTime = 10f;

	[Token(Token = "0x4000411")]
	public const float maxReflectivity = 2f;

	[Token(Token = "0x4000412")]
	public const int maxNumOcclusionHits = 12;

	[Token(Token = "0x4000413")]
	public const float occlusionDetectionInterval = 0.2f;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static readonly Matrix4x4 flipZ;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static RaycastHit[] occlusionHits;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static int occlusionMaskValue;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static float[] roomPosition;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static RoomProperties roomProperties;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static IntPtr roomPropertiesPtr;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static Matrix4x4 transformMatrix;

	[Token(Token = "0x400041B")]
	private const string pluginName = "audiopluginresonanceaudio";

	[Token(Token = "0x17000068")]
	public static Transform ListenerTransform
	{
		[Token(Token = "0x6000527")]
		[Address(RVA = "0xA468C0", Offset = "0xA468C0", VA = "0xA468C0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0xA46A0C", Offset = "0xA46A0C", VA = "0xA46A0C")]
	public static void UpdateAudioListener(ResonanceAudioListener listener)
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0xA46C5C", Offset = "0xA46C5C", VA = "0xA46C5C")]
	public static void DisableRoomEffects()
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0xA46DF0", Offset = "0xA46DF0", VA = "0xA46DF0")]
	public static void UpdateRoom(ResonanceAudioRoom room)
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0xA47144", Offset = "0xA47144", VA = "0xA47144")]
	public static void UpdateReverbProbe(ResonanceAudioReverbProbe reverbPobe)
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0xA473FC", Offset = "0xA473FC", VA = "0xA473FC")]
	public static bool StartRecording()
	{
		return default(bool);
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0xA47404", Offset = "0xA47404", VA = "0xA47404")]
	public static bool StopRecordingAndSaveToFile(string filePath, bool seamless)
	{
		return default(bool);
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0xA4740C", Offset = "0xA4740C", VA = "0xA4740C")]
	public static void InitializeReverbComputer(float[] vertices, int[] triangles, int[] materialIndices, float scatteringCoefficient)
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0xA47410", Offset = "0xA47410", VA = "0xA47410")]
	public static bool ComputeRt60sAndProxyRoom(ResonanceAudioReverbProbe reverbProbe, int totalNumPaths, int numPathsPerBatch, int maxDepth, float energyThreshold, float listenerSphereRadius)
	{
		return default(bool);
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0xA47418", Offset = "0xA47418", VA = "0xA47418")]
	public static float ComputeOcclusion(Transform sourceTransform)
	{
		return default(float);
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0xA46AB0", Offset = "0xA46AB0", VA = "0xA46AB0")]
	public static float ConvertAmplitudeFromDb(float db)
	{
		return default(float);
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0xA47744", Offset = "0xA47744", VA = "0xA47744")]
	public static Vector2[] Generate2dPolarPattern(float alpha, float order, int resolution)
	{
		return null;
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0xA478C4", Offset = "0xA478C4", VA = "0xA478C4")]
	private static void ConvertAudioTransformFromUnity(ref Vector3 position, ref Quaternion rotation)
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0xA47BD4", Offset = "0xA47BD4", VA = "0xA47BD4")]
	private static void SetProxyRoomProperties(ResonanceAudioReverbProbe reverbProbe, RoomProperties proxyRoomProperties)
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0xA46FB0", Offset = "0xA46FB0", VA = "0xA46FB0")]
	private static void UpdateRoomProperties(ResonanceAudioRoom room)
	{
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0xA47310", Offset = "0xA47310", VA = "0xA47310")]
	private static void UpdateRoomProperties(ResonanceAudioReverbProbe reverbProbe)
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0xA47C78", Offset = "0xA47C78", VA = "0xA47C78")]
	private static void FillGeometryOfRoomProperties(Vector3 position, Quaternion rotation, Vector3 scale)
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0xA47DCC", Offset = "0xA47DCC", VA = "0xA47DCC")]
	private static void FillWallMaterialsOfRoomProperties(ResonanceAudioRoomManager.SurfaceMaterial leftWall, ResonanceAudioRoomManager.SurfaceMaterial rightWall, ResonanceAudioRoomManager.SurfaceMaterial floor, ResonanceAudioRoomManager.SurfaceMaterial ceiling, ResonanceAudioRoomManager.SurfaceMaterial frontWall, ResonanceAudioRoomManager.SurfaceMaterial backWall)
	{
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0xA47EC4", Offset = "0xA47EC4", VA = "0xA47EC4")]
	private static void FillModifiersOfRoomProperties(float reverbGainDb, float reverbTime, float reverbBrightness, float reflectivity)
	{
	}

	[PreserveSig]
	[Token(Token = "0x600053A")]
	[Address(RVA = "0xA46B28", Offset = "0xA46B28", VA = "0xA46B28")]
	private static extern void SetListenerGain(float gain);

	[PreserveSig]
	[Token(Token = "0x600053B")]
	[Address(RVA = "0xA46BC4", Offset = "0xA46BC4", VA = "0xA46BC4")]
	private static extern void SetListenerStereoSpeakerMode(bool enableStereoSpeakerMode);

	[PreserveSig]
	[Token(Token = "0x600053C")]
	[Address(RVA = "0xA46D40", Offset = "0xA46D40", VA = "0xA46D40")]
	private static extern void SetRoomProperties(IntPtr roomProperties, float[] rt60s);
}
[Token(Token = "0x2000082")]
public class ResonanceAudioAcousticMesh
{
	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7FD4B0", Offset = "0x7FD4B0")]
	private Mesh <mesh>k__BackingField;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7FD4C0", Offset = "0x7FD4C0")]
	private GameObject <sourceObject>k__BackingField;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isIncludedByObjectFiltering;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ResonanceAudioRoomManager.SurfaceMaterial[] surfaceMaterialsFromSubMesh;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RangeInt[] triangleRangesFromSubMesh;

	[Token(Token = "0x4000421")]
	private const int unityMaxNumVerticesPerMesh = 65000;

	[Token(Token = "0x4000422")]
	private const int maxNumSubMeshes = 256;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material visualizationMaterial;

	[Token(Token = "0x17000069")]
	public Mesh mesh
	{
		[Token(Token = "0x600053E")]
		[Address(RVA = "0xA481B4", Offset = "0xA481B4", VA = "0xA481B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x803344", Offset = "0x803344")]
		get
		{
			return null;
		}
		[Token(Token = "0x600053F")]
		[Address(RVA = "0xA481BC", Offset = "0xA481BC", VA = "0xA481BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x803354", Offset = "0x803354")]
		private set
		{
		}
	}

	[Token(Token = "0x1700006A")]
	public GameObject sourceObject
	{
		[Token(Token = "0x6000540")]
		[Address(RVA = "0xA481C4", Offset = "0xA481C4", VA = "0xA481C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x803364", Offset = "0x803364")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000541")]
		[Address(RVA = "0xA481CC", Offset = "0xA481CC", VA = "0xA481CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x803374", Offset = "0x803374")]
		private set
		{
		}
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0xA481D4", Offset = "0xA481D4", VA = "0xA481D4")]
	public static ResonanceAudioAcousticMesh GenerateFromMeshFilter(MeshFilter meshFilter, Shader surfaceMaterialShader)
	{
		return null;
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0xA48AE4", Offset = "0xA48AE4", VA = "0xA48AE4")]
	public static ResonanceAudioAcousticMesh GenerateFromTerrain(Terrain terrain, Shader surfaceMaterialShader)
	{
		return null;
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0xA491F8", Offset = "0xA491F8", VA = "0xA491F8")]
	public int[] GetSurfaceMaterialIndicesFromTriangle()
	{
		return null;
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0xA49354", Offset = "0xA49354", VA = "0xA49354")]
	public void SetSurfaceMaterialToAllSubMeshes(ResonanceAudioRoomManager.SurfaceMaterial surfaceMaterial)
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0xA494BC", Offset = "0xA494BC", VA = "0xA494BC")]
	public void SetSurfaceMaterialToSubMesh(ResonanceAudioRoomManager.SurfaceMaterial surfaceMaterial, int subMeshIndex)
	{
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0xA49700", Offset = "0xA49700", VA = "0xA49700")]
	public bool Render()
	{
		return default(bool);
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0xA49808", Offset = "0xA49808", VA = "0xA49808")]
	public bool IsIncluded()
	{
		return default(bool);
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0xA498E4", Offset = "0xA498E4", VA = "0xA498E4")]
	public bool IsSubMeshTriangular(int subMeshIndex)
	{
		return default(bool);
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0xA483E8", Offset = "0xA483E8", VA = "0xA483E8")]
	private static int CountTriangleIndices(Mesh sourceMesh)
	{
		return default(int);
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0xA48D58", Offset = "0xA48D58", VA = "0xA48D58")]
	private static void SubSampleHeightMap(int originalM, int originalN, out int m, out int n, out int subSampleStep, out int subSampledNumTriangleIndices)
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0xA48484", Offset = "0xA48484", VA = "0xA48484")]
	private void InitializeMesh(int numTriangleIndices, int numVertices, out int[] triangles, out Vector3[] vertices)
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0xA4896C", Offset = "0xA4896C", VA = "0xA4896C")]
	private void InitializeSubMeshMaterials()
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0xA48A38", Offset = "0xA48A38", VA = "0xA48A38")]
	private void InitializeVisualizationMaterial(Shader surfaceMaterialShader)
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0xA485A4", Offset = "0xA485A4", VA = "0xA485A4")]
	private void FillVerticesAndTrianglesFromMesh(Mesh sourceMesh, Transform sourceObjectTransform, ref Vector3[] vertices, ref int[] triangles)
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0xA48E04", Offset = "0xA48E04", VA = "0xA48E04")]
	private void FillTrianglesAndVerticesFromHeightMap(Vector3 terrainPosition, Vector3 terrainSize, float[,] heightMap, int m, int n, int subSampleStep, ref int[] triangles, ref Vector3[] vertices)
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0xA49930", Offset = "0xA49930", VA = "0xA49930")]
	private void SetSubMeshEnds()
	{
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0xA493AC", Offset = "0xA493AC", VA = "0xA493AC")]
	private void SetSubMeshSurfaceMaterials()
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0xA4847C", Offset = "0xA4847C", VA = "0xA4847C")]
	public ResonanceAudioAcousticMesh()
	{
	}
}
[Token(Token = "0x2000083")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7F5FC8", Offset = "0x7F5FC8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7F5FC8", Offset = "0x7F5FC8")]
[ExecuteInEditMode]
public class ResonanceAudioListener : MonoBehaviour
{
	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FD4D0", Offset = "0x7FD4D0")]
	public float globalGainDb;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FD508", Offset = "0x7FD508")]
	public LayerMask occlusionMask;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FD540", Offset = "0x7FD540")]
	public bool stereoSpeakerModeEnabled;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FD578", Offset = "0x7FD578")]
	public bool recorderSeamless;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FD5B0", Offset = "0x7FD5B0")]
	public string recorderSourceTag;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7FD5E8", Offset = "0x7FD5E8")]
	private bool <IsRecording>k__BackingField;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[SerializeField]
	private bool recorderFoldout;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<AudioSource> recorderTaggedSources;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private double recorderStartTime;

	[Token(Token = "0x1700006B")]
	public bool IsRecording
	{
		[Token(Token = "0x6000554")]
		[Address(RVA = "0xA49C70", Offset = "0xA49C70", VA = "0xA49C70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x803384", Offset = "0x803384")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000555")]
		[Address(RVA = "0xA49C78", Offset = "0xA49C78", VA = "0xA49C78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x803394", Offset = "0x803394")]
		private set
		{
		}
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0xA49C84", Offset = "0xA49C84", VA = "0xA49C84")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0xA49D0C", Offset = "0xA49D0C", VA = "0xA49D0C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0xA49F40", Offset = "0xA49F40", VA = "0xA49F40")]
	private void Update()
	{
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0xA4A160", Offset = "0xA4A160", VA = "0xA4A160")]
	public double GetCurrentRecordDuration()
	{
		return default(double);
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0xA4A19C", Offset = "0xA4A19C", VA = "0xA4A19C")]
	public void StartSoundfieldRecorder()
	{
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0xA49DA4", Offset = "0xA49DA4", VA = "0xA49DA4")]
	public void StopSoundfieldRecorder(string filePath)
	{
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0xA49FD4", Offset = "0xA49FD4", VA = "0xA49FD4")]
	private void UpdateTaggedSources()
	{
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0xA4A3D4", Offset = "0xA4A3D4", VA = "0xA4A3D4")]
	public ResonanceAudioListener()
	{
	}
}
[Token(Token = "0x2000084")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7F6060", Offset = "0x7F6060")]
public class ResonanceAudioMaterialMap : ScriptableObject
{
	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly Color[] surfaceMaterialColors;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ResonanceAudioRoomManager.SurfaceMaterialDictionary surfaceMaterialFromGuid;

	[Token(Token = "0x400042F")]
	private const ResonanceAudioRoomManager.SurfaceMaterial defaultSurfaceMaterial = ResonanceAudioRoomManager.SurfaceMaterial.Transparent;

	[Token(Token = "0x600055E")]
	[Address(RVA = "0xA4A43C", Offset = "0xA4A43C", VA = "0xA4A43C")]
	public List<string> GuidList()
	{
		return null;
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0xA4A4A4", Offset = "0xA4A4A4", VA = "0xA4A4A4")]
	public ResonanceAudioRoomManager.SurfaceMaterial GetMaterialFromGuid(string guid)
	{
		return default(ResonanceAudioRoomManager.SurfaceMaterial);
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0xA4A50C", Offset = "0xA4A50C", VA = "0xA4A50C")]
	public void AddDefaultMaterialIfGuidUnmapped(string guid)
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0xA4A5A8", Offset = "0xA4A5A8", VA = "0xA4A5A8")]
	public ResonanceAudioMaterialMap()
	{
	}
}
[Token(Token = "0x2000085")]
public class ResonanceAudioMaterialMapper : ScriptableObject
{
	[Token(Token = "0x200037E")]
	private class UnityMaterialAcousticMeshData
	{
		[Token(Token = "0x40023B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<ResonanceAudioAcousticMesh> acousticMeshes;

		[Token(Token = "0x40023B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<int> subMeshIndices;

		[Token(Token = "0x60018A9")]
		[Address(RVA = "0xA4B860", Offset = "0xA4B860", VA = "0xA4B860")]
		public UnityMaterialAcousticMeshData()
		{
		}
	}

	[Token(Token = "0x200037F")]
	private class TerrainAcousticMeshData
	{
		[Token(Token = "0x40023B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<ResonanceAudioAcousticMesh> acousticMeshes;

		[Token(Token = "0x60018AA")]
		[Address(RVA = "0xA4B8FC", Offset = "0xA4B8FC", VA = "0xA4B8FC")]
		public TerrainAcousticMeshData()
		{
		}
	}

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ResonanceAudioMaterialMap materialMap;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<string, UnityMaterialAcousticMeshData> unityMaterialAcousticMeshDataFromGuid;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<string, TerrainAcousticMeshData> terrainAcousticMeshDataFromGuid;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private LayerMask reverbLayerMask;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool includeNonStaticGameObjects;

	[Token(Token = "0x6000563")]
	[Address(RVA = "0xA4ABA8", Offset = "0xA4ABA8", VA = "0xA4ABA8")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0xA4AC38", Offset = "0xA4AC38", VA = "0xA4AC38")]
	public void ApplyMaterialMapping(MeshRenderer[] meshRenderers, List<string>[] guidsForMeshRenderers, Terrain[] activeTerrains, string[] guidsForTerrains, Shader surfaceMaterialShader)
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0xA4B480", Offset = "0xA4B480", VA = "0xA4B480")]
	public void RenderAcousticMeshes()
	{
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0xA4B518", Offset = "0xA4B518", VA = "0xA4B518")]
	public List<ResonanceAudioAcousticMesh> GetIncludedAcousticMeshes()
	{
		return null;
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0xA4ACA4", Offset = "0xA4ACA4", VA = "0xA4ACA4")]
	private void BuildUnityMaterialData(MeshRenderer[] meshRenderers, List<string>[] guidsForMeshRenderers, Shader surfaceMaterialShader)
	{
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0xA4AF74", Offset = "0xA4AF74", VA = "0xA4AF74")]
	private void BuildTerrainData(Terrain[] activeTerrains, string[] guidsForTerrains, Shader surfaceMaterialShader)
	{
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0xA4B168", Offset = "0xA4B168", VA = "0xA4B168")]
	private void ApplyMaterialMappingToGuids(List<string> guids)
	{
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0xA4B970", Offset = "0xA4B970", VA = "0xA4B970")]
	private void ApplySurfaceMaterialToGameObjects(ResonanceAudioRoomManager.SurfaceMaterial surfaceMaterial, string guid)
	{
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0xA4BC3C", Offset = "0xA4BC3C", VA = "0xA4BC3C")]
	private void ApplySurfaceMaterialToTerrains(ResonanceAudioRoomManager.SurfaceMaterial surfaceMaterial, string guid)
	{
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0xA4B28C", Offset = "0xA4B28C", VA = "0xA4B28C")]
	private void ApplyObjectFiltering()
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0xA4BD14", Offset = "0xA4BD14", VA = "0xA4BD14")]
	private bool IsIncludedByObjectFiltering(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0xA4BDA4", Offset = "0xA4BDA4", VA = "0xA4BDA4")]
	public ResonanceAudioMaterialMapper()
	{
	}
}
[Token(Token = "0x2000086")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7F60B4", Offset = "0x7F60B4")]
[ExecuteInEditMode]
public class ResonanceAudioMaterialMapperUpdater : MonoBehaviour
{
	[Token(Token = "0x2000380")]
	public delegate void RefreshMaterialMapperDelegate();

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RefreshMaterialMapperDelegate RefreshMaterialMapper;

	[Token(Token = "0x600056F")]
	[Address(RVA = "0xA4BDE0", Offset = "0xA4BDE0", VA = "0xA4BDE0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0xA4C044", Offset = "0xA4C044", VA = "0xA4C044")]
	public ResonanceAudioMaterialMapperUpdater()
	{
	}
}
[Token(Token = "0x2000087")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7F6100", Offset = "0x7F6100")]
[ExecuteInEditMode]
public class ResonanceAudioReverbProbe : MonoBehaviour
{
	[Token(Token = "0x2000381")]
	public enum RegionShape
	{
		[Token(Token = "0x40023B5")]
		Sphere,
		[Token(Token = "0x40023B6")]
		Box
	}

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FD648", Offset = "0x7FD648")]
	public float[] rt60s;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FD680", Offset = "0x7FD680")]
	public float reverbGainDb;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FD6B8", Offset = "0x7FD6B8")]
	public float reverbBrightness;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FD6F0", Offset = "0x7FD6F0")]
	public float reverbTime;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FD728", Offset = "0x7FD728")]
	public RegionShape regionShape;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FD760", Offset = "0x7FD760")]
	public Vector3 boxRegionSize;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FD798", Offset = "0x7FD798")]
	public float sphereRegionRadius;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FD7D0", Offset = "0x7FD7D0")]
	public bool onlyApplyWhenVisible;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 proxyRoomPosition;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Quaternion proxyRoomRotation;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector3 proxyRoomSize;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public ResonanceAudioRoomManager.SurfaceMaterial proxyRoomLeftWall;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ResonanceAudioRoomManager.SurfaceMaterial proxyRoomRightWall;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public ResonanceAudioRoomManager.SurfaceMaterial proxyRoomFloor;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ResonanceAudioRoomManager.SurfaceMaterial proxyRoomCeiling;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public ResonanceAudioRoomManager.SurfaceMaterial proxyRoomBackWall;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ResonanceAudioRoomManager.SurfaceMaterial proxyRoomFrontWall;

	[Token(Token = "0x6000571")]
	[Address(RVA = "0xA4C09C", Offset = "0xA4C09C", VA = "0xA4C09C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0xA4C174", Offset = "0xA4C174", VA = "0xA4C174")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0xA4C244", Offset = "0xA4C244", VA = "0xA4C244")]
	private void Update()
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0xA4C2A8", Offset = "0xA4C2A8", VA = "0xA4C2A8")]
	public float GetScaledSphericalRegionRadius()
	{
		return default(float);
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0xA4C364", Offset = "0xA4C364", VA = "0xA4C364")]
	public Vector3 GetScaledBoxRegionSize()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0xA4C428", Offset = "0xA4C428", VA = "0xA4C428")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0xA4C56C", Offset = "0xA4C56C", VA = "0xA4C56C")]
	public ResonanceAudioReverbProbe()
	{
	}
}
[Token(Token = "0x2000088")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7F614C", Offset = "0x7F614C")]
public class ResonanceAudioRoom : MonoBehaviour
{
	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FD808", Offset = "0x7FD808")]
	public ResonanceAudioRoomManager.SurfaceMaterial leftWall;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FD840", Offset = "0x7FD840")]
	public ResonanceAudioRoomManager.SurfaceMaterial rightWall;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FD878", Offset = "0x7FD878")]
	public ResonanceAudioRoomManager.SurfaceMaterial floor;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FD8B0", Offset = "0x7FD8B0")]
	public ResonanceAudioRoomManager.SurfaceMaterial ceiling;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FD8E8", Offset = "0x7FD8E8")]
	public ResonanceAudioRoomManager.SurfaceMaterial backWall;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FD920", Offset = "0x7FD920")]
	public ResonanceAudioRoomManager.SurfaceMaterial frontWall;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FD958", Offset = "0x7FD958")]
	public float reflectivity;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FD990", Offset = "0x7FD990")]
	public float reverbGainDb;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FD9C8", Offset = "0x7FD9C8")]
	public float reverbBrightness;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FDA00", Offset = "0x7FDA00")]
	public float reverbTime;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FDA38", Offset = "0x7FDA38")]
	public Vector3 size;

	[Token(Token = "0x6000578")]
	[Address(RVA = "0xA4C668", Offset = "0xA4C668", VA = "0xA4C668")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0xA4C740", Offset = "0xA4C740", VA = "0xA4C740")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0xA4C810", Offset = "0xA4C810", VA = "0xA4C810")]
	private void Update()
	{
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0xA4C874", Offset = "0xA4C874", VA = "0xA4C874")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0xA4C940", Offset = "0xA4C940", VA = "0xA4C940")]
	public ResonanceAudioRoom()
	{
	}
}
[Token(Token = "0x2000089")]
public static class ResonanceAudioRoomManager
{
	[Token(Token = "0x2000382")]
	public enum SurfaceMaterial
	{
		[Token(Token = "0x40023B8")]
		Transparent,
		[Token(Token = "0x40023B9")]
		AcousticCeilingTiles,
		[Token(Token = "0x40023BA")]
		BrickBare,
		[Token(Token = "0x40023BB")]
		BrickPainted,
		[Token(Token = "0x40023BC")]
		ConcreteBlockCoarse,
		[Token(Token = "0x40023BD")]
		ConcreteBlockPainted,
		[Token(Token = "0x40023BE")]
		CurtainHeavy,
		[Token(Token = "0x40023BF")]
		FiberglassInsulation,
		[Token(Token = "0x40023C0")]
		GlassThin,
		[Token(Token = "0x40023C1")]
		GlassThick,
		[Token(Token = "0x40023C2")]
		Grass,
		[Token(Token = "0x40023C3")]
		LinoleumOnConcrete,
		[Token(Token = "0x40023C4")]
		Marble,
		[Token(Token = "0x40023C5")]
		Metal,
		[Token(Token = "0x40023C6")]
		ParquetOnConcrete,
		[Token(Token = "0x40023C7")]
		PlasterRough,
		[Token(Token = "0x40023C8")]
		PlasterSmooth,
		[Token(Token = "0x40023C9")]
		PlywoodPanel,
		[Token(Token = "0x40023CA")]
		PolishedConcreteOrTile,
		[Token(Token = "0x40023CB")]
		Sheetrock,
		[Token(Token = "0x40023CC")]
		WaterOrIceSurface,
		[Token(Token = "0x40023CD")]
		WoodCeiling,
		[Token(Token = "0x40023CE")]
		WoodPanel
	}

	[Serializable]
	[Token(Token = "0x2000383")]
	public class SurfaceMaterialDictionary : Dictionary<string, SurfaceMaterial>, ISerializationCallbackReceiver
	{
		[Token(Token = "0x40023CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private List<string> guids;

		[Token(Token = "0x40023D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private List<SurfaceMaterial> surfaceMaterials;

		[Token(Token = "0x60018AF")]
		[Address(RVA = "0xA4DAC4", Offset = "0xA4DAC4", VA = "0xA4DAC4")]
		public SurfaceMaterialDictionary()
		{
		}

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0xA4DB68", Offset = "0xA4DB68", VA = "0xA4DB68", Slot = "42")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x60018B1")]
		[Address(RVA = "0xA4DCE0", Offset = "0xA4DCE0", VA = "0xA4DCE0", Slot = "43")]
		public void OnAfterDeserialize()
		{
		}
	}

	[Token(Token = "0x2000384")]
	private struct RoomEffectsRegion
	{
		[Token(Token = "0x40023D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ResonanceAudioRoom room;

		[Token(Token = "0x40023D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ResonanceAudioReverbProbe reverbProbe;

		[Token(Token = "0x60018B2")]
		[Address(RVA = "0x886808", Offset = "0x886808", VA = "0x886808")]
		public RoomEffectsRegion(ResonanceAudioRoom room, ResonanceAudioReverbProbe reverbProbe)
		{
		}
	}

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<RoomEffectsRegion> roomEffectsRegions;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Bounds bounds;

	[Token(Token = "0x600057D")]
	[Address(RVA = "0xA4C9D8", Offset = "0xA4C9D8", VA = "0xA4C9D8")]
	public static float ComputeRoomEffectsGain(Vector3 sourcePosition)
	{
		return default(float);
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0xA4C6CC", Offset = "0xA4C6CC", VA = "0xA4C6CC")]
	public static void UpdateRoom(ResonanceAudioRoom room)
	{
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0xA4C7A4", Offset = "0xA4C7A4", VA = "0xA4C7A4")]
	public static void RemoveRoom(ResonanceAudioRoom room)
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0xA4C100", Offset = "0xA4C100", VA = "0xA4C100")]
	public static void UpdateReverbProbe(ResonanceAudioReverbProbe reverbProbe)
	{
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0xA4C1D8", Offset = "0xA4C1D8", VA = "0xA4C1D8")]
	public static void RemoveReverbProbe(ResonanceAudioReverbProbe reverbProbe)
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0xA4D1C0", Offset = "0xA4D1C0", VA = "0xA4D1C0")]
	private static void UpdateRoomEffectsRegions(ResonanceAudioRoom room, bool isEnabled)
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0xA4D7DC", Offset = "0xA4D7DC", VA = "0xA4D7DC")]
	private static void UpdateRoomEffectsRegions(ResonanceAudioReverbProbe reverbProbe, bool isEnabled)
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0xA4D394", Offset = "0xA4D394", VA = "0xA4D394")]
	private static void UpdateRoomEffects()
	{
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0xA4CED0", Offset = "0xA4CED0", VA = "0xA4CED0")]
	private static float ComputeRoomEffectsAttenuation(float distanceToRoom)
	{
		return default(float);
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0xA4CF48", Offset = "0xA4CF48", VA = "0xA4CF48")]
	private static bool IsListenerInsideRoom(ResonanceAudioRoom room)
	{
		return default(bool);
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0xA4D500", Offset = "0xA4D500", VA = "0xA4D500")]
	private static bool IsListenerInsideVisibleReverbProbe(ResonanceAudioReverbProbe reverbProbe)
	{
		return default(bool);
	}
}
[Token(Token = "0x200008A")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7F6184", Offset = "0x7F6184")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7F6184", Offset = "0x7F6184")]
[ExecuteInEditMode]
public class ResonanceAudioSource : MonoBehaviour
{
	[Token(Token = "0x2000385")]
	public enum Quality
	{
		[Token(Token = "0x40023D4")]
		Stereo,
		[Token(Token = "0x40023D5")]
		Low,
		[Token(Token = "0x40023D6")]
		High
	}

	[Token(Token = "0x2000386")]
	private enum EffectData
	{
		[Token(Token = "0x40023D8")]
		Id,
		[Token(Token = "0x40023D9")]
		DistanceAttenuation,
		[Token(Token = "0x40023DA")]
		RoomEffectsGain,
		[Token(Token = "0x40023DB")]
		Gain,
		[Token(Token = "0x40023DC")]
		DirectivityAlpha,
		[Token(Token = "0x40023DD")]
		DirectivitySharpness,
		[Token(Token = "0x40023DE")]
		ListenerDirectivityAlpha,
		[Token(Token = "0x40023DF")]
		ListenerDirectivitySharpness,
		[Token(Token = "0x40023E0")]
		Occlusion,
		[Token(Token = "0x40023E1")]
		Quality,
		[Token(Token = "0x40023E2")]
		NearFieldEffectGain,
		[Token(Token = "0x40023E3")]
		Volume
	}

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FDA70", Offset = "0x7FDA70")]
	public bool bypassRoomEffects;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FDAA8", Offset = "0x7FDAA8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FDAA8", Offset = "0x7FDAA8")]
	public float directivityAlpha;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FDAFC", Offset = "0x7FDAFC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FDAFC", Offset = "0x7FDAFC")]
	public float directivitySharpness;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FDB50", Offset = "0x7FDB50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FDB50", Offset = "0x7FDB50")]
	public float listenerDirectivityAlpha;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FDBA4", Offset = "0x7FDBA4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FDBA4", Offset = "0x7FDBA4")]
	public float listenerDirectivitySharpness;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FDBF8", Offset = "0x7FDBF8")]
	public float gainDb;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FDC30", Offset = "0x7FDC30")]
	public bool nearFieldEffectEnabled;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FDC68", Offset = "0x7FDC68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FDC68", Offset = "0x7FDC68")]
	public float nearFieldEffectGain;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FDCBC", Offset = "0x7FDCBC")]
	public bool occlusionEnabled;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FDCF4", Offset = "0x7FDCF4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FDCF4", Offset = "0x7FDCF4")]
	public float occlusionIntensity;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FDD48", Offset = "0x7FDD48")]
	public Quality quality;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7FDD80", Offset = "0x7FDD80")]
	private AudioSource <audioSource>k__BackingField;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float currentOcclusion;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float nextOcclusionUpdate;

	[Token(Token = "0x1700006C")]
	public AudioSource audioSource
	{
		[Token(Token = "0x6000589")]
		[Address(RVA = "0xA4DDD0", Offset = "0xA4DDD0", VA = "0xA4DDD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8033A4", Offset = "0x8033A4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600058A")]
		[Address(RVA = "0xA4DDD8", Offset = "0xA4DDD8", VA = "0xA4DDD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8033B4", Offset = "0x8033B4")]
		private set
		{
		}
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0xA4DDE0", Offset = "0xA4DDE0", VA = "0xA4DDE0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0xA4DE38", Offset = "0xA4DE38", VA = "0xA4DE38")]
	private void Update()
	{
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0xA4DF08", Offset = "0xA4DF08", VA = "0xA4DF08")]
	private void UpdateSource()
	{
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0xA4E238", Offset = "0xA4E238", VA = "0xA4E238")]
	public ResonanceAudioSource()
	{
	}
}
[Token(Token = "0x200008B")]
public class Achiev : MonoBehaviour
{
	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SongList songlist;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool[,] achiev_buffer;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int achiev_gained;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static bool[,] achiv_done;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string[,] achiv_names;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string[,] achiv_description;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static bool ach_firstfailed;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static float ach_boost_letter;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static bool ach_party_plays;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public static bool ach_see_deadpeople;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public static int ach_succes_inrow;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static int[] ach_succesplay;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static int[] ach_bestplay;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static float[,] achiv_actual;

	[Token(Token = "0x600058F")]
	[Address(RVA = "0xA2B88C", Offset = "0xA2B88C", VA = "0xA2B88C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0xA2B960", Offset = "0xA2B960", VA = "0xA2B960")]
	public static float Achievdone()
	{
		return default(float);
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0xA2BA54", Offset = "0xA2BA54", VA = "0xA2BA54")]
	public static float AchievState(int num1, int num2)
	{
		return default(float);
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0xA2BA5C", Offset = "0xA2BA5C", VA = "0xA2BA5C")]
	public static bool GetAchievFromBuffer(out int x, out int y)
	{
		return default(bool);
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0xA2BB60", Offset = "0xA2BB60", VA = "0xA2BB60")]
	public void ControllAchievs()
	{
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0xA2D518", Offset = "0xA2D518", VA = "0xA2D518")]
	public void GetAchiev(int num1, int num2)
	{
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0xA2D668", Offset = "0xA2D668", VA = "0xA2D668")]
	private static string SteamAchievName(int idx)
	{
		return null;
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0xA2D6D0", Offset = "0xA2D6D0", VA = "0xA2D6D0")]
	public void Achievements()
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0xA2D6D4", Offset = "0xA2D6D4", VA = "0xA2D6D4")]
	public static bool Get32Bool(int value, byte index)
	{
		return default(bool);
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0xA2D6EC", Offset = "0xA2D6EC", VA = "0xA2D6EC")]
	public static int Set32Bool(int value, bool b, byte index)
	{
		return default(int);
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0xA2D784", Offset = "0xA2D784", VA = "0xA2D784")]
	public static int Clear(int Value, byte index)
	{
		return default(int);
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0xA2D798", Offset = "0xA2D798", VA = "0xA2D798")]
	public Achiev()
	{
	}
}
[Token(Token = "0x200008C")]
public class Analyzer : MonoBehaviour
{
	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform podklad;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform podklad_accuracy;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform podklad_strange;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject gpoint;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform zaklad;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform zaklad_accuracy;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform zaklad_strange;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshPro tmax;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMeshPro taver;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMeshPro taver_acc;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TextMeshPro taver_strange;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 psca;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 ppos;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject[] go;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private GameObject[] go_a;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GameObject[] go_s;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float aver;

	[Token(Token = "0x600059C")]
	[Address(RVA = "0xA31718", Offset = "0xA31718", VA = "0xA31718")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0xA3171C", Offset = "0xA3171C", VA = "0xA3171C")]
	public void ViewData()
	{
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0xA32BC0", Offset = "0xA32BC0", VA = "0xA32BC0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0xA32D70", Offset = "0xA32D70", VA = "0xA32D70")]
	private void Start()
	{
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0xA32D74", Offset = "0xA32D74", VA = "0xA32D74")]
	private void Update()
	{
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0xA32D78", Offset = "0xA32D78", VA = "0xA32D78")]
	public Analyzer()
	{
	}
}
[Token(Token = "0x200008D")]
public class AnalyzerEasy : MonoBehaviour
{
	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float accuracy;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float power;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool count_accuracy;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	public static bool count_power;

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0xA32DF8", Offset = "0xA32DF8", VA = "0xA32DF8")]
	public void ViewData_Accuracy()
	{
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0xA32FE4", Offset = "0xA32FE4", VA = "0xA32FE4")]
	public void ViewData_Power()
	{
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0xA331D0", Offset = "0xA331D0", VA = "0xA331D0")]
	public AnalyzerEasy()
	{
	}
}
[Token(Token = "0x200008E")]
public class Anim : MonoBehaviour
{
	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int colCount;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int rowCount;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int rowNumber;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int colNumber;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int totalCells;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int fps;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool loopAnim;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float timexPrefix;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Renderer ren;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int zalindex;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector2 offset;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool is_number;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int number_num;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool score;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool multiplikator;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool fpsko;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x57")]
	public bool invidible_noexist;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int cislo;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int zalcislo;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int index;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool align_left;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int zalnumber_num;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Camera cam;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int laser_num;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool only_anim;

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0xA331DC", Offset = "0xA331DC", VA = "0xA331DC")]
	private void Start()
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0xA33254", Offset = "0xA33254", VA = "0xA33254")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0xA3327C", Offset = "0xA3327C", VA = "0xA3327C")]
	public static int digit(int val, int digit)
	{
		return default(int);
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0xA33324", Offset = "0xA33324", VA = "0xA33324")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0xA3354C", Offset = "0xA3354C", VA = "0xA3354C")]
	private void SetSpriteAnimation(int colCount, int rowCount, int rowNumber, int colNumber, int totalCells)
	{
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0xA33704", Offset = "0xA33704", VA = "0xA33704")]
	public Anim()
	{
	}
}
[Token(Token = "0x200008F")]
public class AnimAchiev : MonoBehaviour
{
	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int colCount;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int rowCount;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int rowNumber;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int colNumber;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int totalCells;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer ren;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int zalindex;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector2 offset;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int achiev_num;

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0xA33738", Offset = "0xA33738", VA = "0xA33738")]
	public void SetSprite(int index)
	{
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0xA33874", Offset = "0xA33874", VA = "0xA33874")]
	public AnimAchiev()
	{
	}
}
[Token(Token = "0x2000090")]
public class AnimRefrection : MonoBehaviour
{
	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer ren;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float timer;

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0xA33894", Offset = "0xA33894", VA = "0xA33894")]
	private void Start()
	{
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0xA338EC", Offset = "0xA338EC", VA = "0xA338EC")]
	private void Update()
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0xA33998", Offset = "0xA33998", VA = "0xA33998")]
	public AnimRefrection()
	{
	}
}
[Token(Token = "0x2000091")]
public class AnimShield : MonoBehaviour
{
	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool loopAnim;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector2 uvAnimationRate;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool playAnim;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector2 offset;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector2 uvOffset;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int aktivate;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float stimer;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Color ncol;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Renderer ren;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float animSpeed;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool isclose;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	public bool zalisclose;

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0xA339A0", Offset = "0xA339A0", VA = "0xA339A0")]
	private void Start()
	{
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0xA33AE8", Offset = "0xA33AE8", VA = "0xA33AE8")]
	public void StopAnim()
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0xA33AA4", Offset = "0xA33AA4", VA = "0xA33AA4")]
	public void StartAnim()
	{
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0xA33AF0", Offset = "0xA33AF0", VA = "0xA33AF0")]
	private void Update()
	{
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0xA33E5C", Offset = "0xA33E5C", VA = "0xA33E5C")]
	public AnimShield()
	{
	}
}
[Token(Token = "0x2000092")]
public class AnimSphere : MonoBehaviour
{
	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int colCount;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int rowCount;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int rowNumber;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int colNumber;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int totalCells;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Renderer ren;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int zalindex;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector2 offset;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int _num;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int zalbluechange;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int zalyellowchange;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool isset;

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0xA33F08", Offset = "0xA33F08", VA = "0xA33F08")]
	public void Awake()
	{
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0xA34058", Offset = "0xA34058", VA = "0xA34058")]
	private void Update()
	{
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0xA33F1C", Offset = "0xA33F1C", VA = "0xA33F1C")]
	public void SetSprite(int index)
	{
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0xA341D4", Offset = "0xA341D4", VA = "0xA341D4")]
	public AnimSphere()
	{
	}
}
[Token(Token = "0x2000093")]
public class Asteroid_belt : MonoBehaviour
{
	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject asteroid;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject belt;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float innerRadius;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float outerRadius;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7FDD90", Offset = "0x7FDD90")]
	public int iterations;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject markerObject;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<GameObject> markerList;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 pos;

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0xA347F4", Offset = "0xA347F4", VA = "0xA347F4")]
	private void Start()
	{
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0xA34860", Offset = "0xA34860", VA = "0xA34860")]
	private void Generate()
	{
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0xA34C4C", Offset = "0xA34C4C", VA = "0xA34C4C")]
	private Vector3 GetRandomPositionInTorus(float ringRadius, float wallRadius)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0xA34D84", Offset = "0xA34D84", VA = "0xA34D84")]
	public Asteroid_belt()
	{
	}
}
[Token(Token = "0x2000094")]
public class Autodestory : MonoBehaviour
{
	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource audioOdraz;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource audioDestroy;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float volume;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool znic;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool startaudio;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
	public bool zostrelene;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float auto_destroy;

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0xA35320", Offset = "0xA35320", VA = "0xA35320")]
	private void Start()
	{
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0xA354DC", Offset = "0xA354DC", VA = "0xA354DC")]
	public Autodestory()
	{
	}
}
[Token(Token = "0x2000095")]
public class AvailableClick : MonoBehaviour
{
	[Token(Token = "0x60005C0")]
	[Address(RVA = "0xA354F8", Offset = "0xA354F8", VA = "0xA354F8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0xA35564", Offset = "0xA35564", VA = "0xA35564")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0xA355CC", Offset = "0xA355CC", VA = "0xA355CC")]
	public AvailableClick()
	{
	}
}
[Token(Token = "0x2000096")]
public class BeatScale : MonoBehaviour
{
	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 scale;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 pos;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 newpos;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 newscale;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 forwscale;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Vector3 forwpos;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float tim;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool stav;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Renderer ren;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float zalspeed;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float impulse;

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0xA3A748", Offset = "0xA3A748", VA = "0xA3A748")]
	private void Start()
	{
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0xA3A8C0", Offset = "0xA3A8C0", VA = "0xA3A8C0")]
	private void Update()
	{
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0xA3AD2C", Offset = "0xA3AD2C", VA = "0xA3AD2C")]
	public BeatScale()
	{
	}
}
[Token(Token = "0x2000097")]
public class BigLow : MonoBehaviour
{
	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string low;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string big;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool use_switch_lang1;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string low1;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string big1;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool use_switch_lang2;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string low2;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string big2;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int zallang_type;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool zalshift_state;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private TextMeshPro tmpr;

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0xA3AD50", Offset = "0xA3AD50", VA = "0xA3AD50")]
	private void Start()
	{
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0xA3ADA8", Offset = "0xA3ADA8", VA = "0xA3ADA8")]
	private void Update()
	{
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0xA3AF48", Offset = "0xA3AF48", VA = "0xA3AF48")]
	public void Click_Keyboard_button()
	{
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0xA3B000", Offset = "0xA3B000", VA = "0xA3B000")]
	public BigLow()
	{
	}
}
[Token(Token = "0x2000098")]
public class BlowBack : MonoBehaviour
{
	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject blow;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro perc;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 blow_pos;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 blow_pos_end;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int stat;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool bolvystrel;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float tim;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool left;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int perce;

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0xA3B014", Offset = "0xA3B014", VA = "0xA3B014")]
	private void Start()
	{
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0xA3B068", Offset = "0xA3B068", VA = "0xA3B068")]
	private void Update()
	{
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0xA3B334", Offset = "0xA3B334", VA = "0xA3B334")]
	public void vystrel()
	{
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0xA3B348", Offset = "0xA3B348", VA = "0xA3B348")]
	public BlowBack()
	{
	}
}
[Token(Token = "0x2000099")]
public class BonusScript : MonoBehaviour
{
	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer ren;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Color32 col;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float time;

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0xA3B974", Offset = "0xA3B974", VA = "0xA3B974")]
	private void Start()
	{
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0xA3BA08", Offset = "0xA3BA08", VA = "0xA3BA08")]
	private void Update()
	{
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0xA3BC24", Offset = "0xA3BC24", VA = "0xA3BC24")]
	public BonusScript()
	{
	}
}
[Token(Token = "0x200009A")]
public class Calories : MonoBehaviour
{
	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float LHand_mag;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float RHand_mag;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string kcalkj;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float basic_kcal_sec_kg;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject graphobj;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 vec;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float sectime;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float accx;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float accy;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float accz;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float actual_for_sec;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool zalbool;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject graph;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject graph_point;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform point_position;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static bool rstcal;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static int kal_counter;

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0xA3F8BC", Offset = "0xA3F8BC", VA = "0xA3F8BC")]
	private void Start()
	{
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0xA3FA5C", Offset = "0xA3FA5C", VA = "0xA3FA5C")]
	public static string kcalUnit(float amount)
	{
		return null;
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0xA3FB3C", Offset = "0xA3FB3C", VA = "0xA3FB3C")]
	public static string kcalUnit_int(float amount)
	{
		return null;
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0xA3FC1C", Offset = "0xA3FC1C", VA = "0xA3FC1C")]
	public static int kcalUnit_ToInt(float amount)
	{
		return default(int);
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0xA3F944", Offset = "0xA3F944", VA = "0xA3F944")]
	public static void changekcal()
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0xA3FCFC", Offset = "0xA3FCFC", VA = "0xA3FCFC")]
	private void Update()
	{
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0xA3FCE4", Offset = "0xA3FCE4", VA = "0xA3FCE4")]
	public static bool Get32Bool(int value, byte index)
	{
		return default(bool);
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0xA40528", Offset = "0xA40528", VA = "0xA40528")]
	public Calories()
	{
	}
}
[Token(Token = "0x200009B")]
public class CameraAroundPlayer : MonoBehaviour
{
	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool camera_around;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool camera_back;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool camera_head2;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float speed;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject lookposition;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject head;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float timer;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool traceback;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float tb;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool ison;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Camera cam;

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0xA405C0", Offset = "0xA405C0", VA = "0xA405C0")]
	private void Start()
	{
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0xA40618", Offset = "0xA40618", VA = "0xA40618")]
	private void Update()
	{
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0xA40C68", Offset = "0xA40C68", VA = "0xA40C68")]
	public CameraAroundPlayer()
	{
	}
}
[Token(Token = "0x200009C")]
public class CirclebarScript : MonoBehaviour
{
	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int curent;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int max;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float maxperc;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float posun;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float curperc;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float speed;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float timer;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float pretimer;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Renderer ren;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Color zalfill;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Color zalback;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Color32 col;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Color32 back_col;

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0xA7E200", Offset = "0xA7E200", VA = "0xA7E200")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0xA7E2D4", Offset = "0xA7E2D4", VA = "0xA7E2D4")]
	private void Start()
	{
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0xA7E2D8", Offset = "0xA7E2D8", VA = "0xA7E2D8")]
	public void SecColor_Back(Color cc)
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0xA7E394", Offset = "0xA7E394", VA = "0xA7E394")]
	public void ResetBar()
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0xA7E4A8", Offset = "0xA7E4A8", VA = "0xA7E4A8")]
	private void Update()
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0xA7E570", Offset = "0xA7E570", VA = "0xA7E570")]
	public CirclebarScript()
	{
	}
}
[Token(Token = "0x200009D")]
public class ClickScript : MonoBehaviour
{
	[Token(Token = "0x2000387")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9878", Offset = "0x7F9878")]
	private sealed class <DisableCam>d__86 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40023E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40023E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40023E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float extime;

		[Token(Token = "0x40023E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ClickScript <>4__this;

		[Token(Token = "0x17000301")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60018B6")]
			[Address(RVA = "0xA87950", Offset = "0xA87950", VA = "0xA87950", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000302")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018B8")]
			[Address(RVA = "0xA879BC", Offset = "0xA879BC", VA = "0xA879BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0xA7F4F4", Offset = "0xA7F4F4", VA = "0xA7F4F4")]
		[DebuggerHidden]
		public <DisableCam>d__86(int <>1__state)
		{
		}

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0xA87888", Offset = "0xA87888", VA = "0xA87888", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60018B5")]
		[Address(RVA = "0xA8788C", Offset = "0xA8788C", VA = "0xA8788C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018B7")]
		[Address(RVA = "0xA87958", Offset = "0xA87958", VA = "0xA87958", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ui_select_game;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject ui_select_gamemode;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject ui_down;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject ui_select_song;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject ui_select_difficulty;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject ui_select_difficulty_net;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject ui_championship;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject ui_multak;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject ui_leaderboard;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject ui_credits;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject ui_quit;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject ui_party;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject ui_themes;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject ui_statistics;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject ui_achievements;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject ui_quicksetting;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject ui_help;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject ui_setting;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject ui_keyboard;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject ui_steamfriends;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject ui_sortwindow;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject ui_difficultywindow;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject ui_weaponwindow;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject ui_detailwindow;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject[] ui_setting_all;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject ui_userinterface;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject ui_environment;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool interface_environment;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private int mini_ui;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public SongList sl;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Camera Menu_camera;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject[] all_ui;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Animator menu_anim;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public WinAnimator leader_anim;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private int old_opened;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject camquad;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject weapons;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public LobbyPanel loby;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject details_2;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject details_3;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public GameObject voice_chat;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public GameObject[] setting_microphone;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public GameObject microphone_setting_in_multi;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public GameObject microphone_button;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public Recorder recorder;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private bool zalmultion;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool nastavenie_zapnute;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool stav_rdy1;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	public static bool stav_rdy2;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public GameObject[] camery;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public GameObject leaderboardpos;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private bool zalbutmulti;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	private int zalquality;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private bool zal_flaten_window;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x199")]
	private bool sortw;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19A")]
	private bool diffw;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19B")]
	private bool weapw;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private bool detw;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public TextMeshPro dif_tmpr;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Transform dif_arrow;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public TextMeshPro weap_tmpr;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public Transform weap_arrow;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public Color[] col1;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public string[] diff_names;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public string[] weap_names;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public Material[] pretransparent;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private bool dont_transp_win;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public GameObject[] noflat_win;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public GameObject[] flat_win;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public bool colorsetting;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public GameObject[] colorsetting_objects;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public GameObject transparencysetting;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public GameObject colorsetting_button;

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0xA7E58C", Offset = "0xA7E58C", VA = "0xA7E58C")]
	public void Switch_Language(int index)
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0xA7E5F8", Offset = "0xA7E5F8", VA = "0xA7E5F8")]
	public void Switch_Region(int index)
	{
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0xA7E720", Offset = "0xA7E720", VA = "0xA7E720")]
	public void Switch_microphone(int index)
	{
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0xA7E7F8", Offset = "0xA7E7F8", VA = "0xA7E7F8")]
	private void Start()
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0xA7EA8C", Offset = "0xA7EA8C", VA = "0xA7EA8C")]
	private void Update()
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0xA7E94C", Offset = "0xA7E94C", VA = "0xA7E94C")]
	private void loadnewsetting()
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0xA7EEE4", Offset = "0xA7EEE4", VA = "0xA7EEE4")]
	public void set_visible(int index)
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0xA7EF84", Offset = "0xA7EF84", VA = "0xA7EF84")]
	public void Click_uicolors_object(int index)
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0xA7EFF0", Offset = "0xA7EFF0", VA = "0xA7EFF0")]
	public void Click_uicolors_settings(int index)
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0xA7F0C0", Offset = "0xA7F0C0", VA = "0xA7F0C0")]
	public void Close_colorsetting()
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0xA7F18C", Offset = "0xA7F18C", VA = "0xA7F18C")]
	public void Open_colorsetting()
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0xA7F278", Offset = "0xA7F278", VA = "0xA7F278")]
	public void Click_bestscore(int index)
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0xA7F2E4", Offset = "0xA7F2E4", VA = "0xA7F2E4")]
	public void Click_singleplayer()
	{
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0xA7F470", Offset = "0xA7F470", VA = "0xA7F470")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8033C4", Offset = "0x8033C4")]
	private IEnumerator DisableCam(float extime)
	{
		return null;
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0xA7F520", Offset = "0xA7F520", VA = "0xA7F520")]
	public void Click_Real360()
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0xA7F6B0", Offset = "0xA7F6B0", VA = "0xA7F6B0")]
	public void Click_Club()
	{
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0xA7F840", Offset = "0xA7F840", VA = "0xA7F840")]
	public void Click_BackDiff()
	{
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0xA7FB08", Offset = "0xA7FB08", VA = "0xA7FB08")]
	public void Click_Setting()
	{
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0xA7FC88", Offset = "0xA7FC88", VA = "0xA7FC88")]
	public void Click_CloseSetting()
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0xA7FD28", Offset = "0xA7FD28", VA = "0xA7FD28")]
	public void invisible1()
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0xA7FDBC", Offset = "0xA7FDBC", VA = "0xA7FDBC")]
	public void Click_Party()
	{
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0xA7FED0", Offset = "0xA7FED0", VA = "0xA7FED0")]
	public void Click_Themes()
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0xA7FFEC", Offset = "0xA7FFEC", VA = "0xA7FFEC")]
	public void Click_Statistics()
	{
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0xA80108", Offset = "0xA80108", VA = "0xA80108")]
	public void Click_Achievements()
	{
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0xA80224", Offset = "0xA80224", VA = "0xA80224")]
	public void Click_Help()
	{
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0xA80340", Offset = "0xA80340", VA = "0xA80340")]
	public void Click_QuickSetting()
	{
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0xA8045C", Offset = "0xA8045C", VA = "0xA8045C")]
	public void Click_MicrophoneSetting_Close()
	{
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0xA804A0", Offset = "0xA804A0", VA = "0xA804A0")]
	public void Click_MicrophoneSetting_Open()
	{
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0xA804E4", Offset = "0xA804E4", VA = "0xA804E4")]
	public void Select_Achievements_sort(int index)
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0xA8057C", Offset = "0xA8057C", VA = "0xA8057C")]
	public void Select_Themes(int num)
	{
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0xA805E8", Offset = "0xA805E8", VA = "0xA805E8")]
	public void Select_Song(int num)
	{
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0xA80670", Offset = "0xA80670", VA = "0xA80670")]
	public void Select_Album2(int index)
	{
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0xA80748", Offset = "0xA80748", VA = "0xA80748")]
	public void Select_Album(int album)
	{
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0xA80844", Offset = "0xA80844", VA = "0xA80844")]
	public void Click_Reorder()
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0xA808B0", Offset = "0xA808B0", VA = "0xA808B0")]
	public void Select_Sort(int sort)
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0xA80968", Offset = "0xA80968", VA = "0xA80968")]
	public void switch_leader30(bool index)
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0xA809F0", Offset = "0xA809F0", VA = "0xA809F0")]
	public void switch_dont_transp_win(bool index)
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0xA80BE4", Offset = "0xA80BE4", VA = "0xA80BE4")]
	public void switch_enviro_interface()
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0xA80C40", Offset = "0xA80C40", VA = "0xA80C40")]
	public void switch_details_selector(int index)
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0xA80CD0", Offset = "0xA80CD0", VA = "0xA80CD0")]
	public void Click_OpenDetail()
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0xA80D04", Offset = "0xA80D04", VA = "0xA80D04")]
	public void Click_Openorder()
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0xA80D38", Offset = "0xA80D38", VA = "0xA80D38")]
	public void Click_OpenDififcultySelector()
	{
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0xA80ECC", Offset = "0xA80ECC", VA = "0xA80ECC")]
	public void Click_OpenWeaponSelector()
	{
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0xA81060", Offset = "0xA81060", VA = "0xA81060")]
	public void Select_SortWindow(int index)
	{
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0xA81140", Offset = "0xA81140", VA = "0xA81140")]
	public void Select_WeaponIndex(int index)
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0xA813F0", Offset = "0xA813F0", VA = "0xA813F0")]
	public void Select_Diff(int num)
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0xA815B0", Offset = "0xA815B0", VA = "0xA815B0")]
	public void Click_Song_ListDown()
	{
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0xA8163C", Offset = "0xA8163C", VA = "0xA8163C")]
	public void Click_Song_ListUp()
	{
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0xA816C8", Offset = "0xA816C8", VA = "0xA816C8")]
	public void Click_Download_ListDown()
	{
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0xA81738", Offset = "0xA81738", VA = "0xA81738")]
	public void Click_Dowbload_ListUp()
	{
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0xA817A8", Offset = "0xA817A8", VA = "0xA817A8")]
	public void Click_Deletesong()
	{
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0xA817C4", Offset = "0xA817C4", VA = "0xA817C4")]
	public void Select_Weapon(string sort)
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0xA81B88", Offset = "0xA81B88", VA = "0xA81B88")]
	public void Back_to_menu_from_game()
	{
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0xA81C44", Offset = "0xA81C44", VA = "0xA81C44")]
	public void Click_play_multak()
	{
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0xA81CE0", Offset = "0xA81CE0", VA = "0xA81CE0")]
	public void Click_QuickPlay()
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0xA81ED8", Offset = "0xA81ED8", VA = "0xA81ED8")]
	public void Click_Play()
	{
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0xA82014", Offset = "0xA82014", VA = "0xA82014")]
	public void switch_details(int index)
	{
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0xA82148", Offset = "0xA82148", VA = "0xA82148")]
	public void Click_download_button()
	{
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0xA82284", Offset = "0xA82284", VA = "0xA82284")]
	public void Click_download_off()
	{
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0xA82368", Offset = "0xA82368", VA = "0xA82368")]
	public void Click_download(int num)
	{
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0xA82460", Offset = "0xA82460", VA = "0xA82460")]
	public void Select_Server(int index)
	{
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0xA824CC", Offset = "0xA824CC", VA = "0xA824CC")]
	public void Select_Leaderboard_sort(int index)
	{
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0xA82564", Offset = "0xA82564", VA = "0xA82564")]
	public void Click_name_change()
	{
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0xA8266C", Offset = "0xA8266C", VA = "0xA8266C")]
	public void Click_Keyboard_button(string s)
	{
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0xA82704", Offset = "0xA82704", VA = "0xA82704")]
	public void Click_Keyboard_shift()
	{
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0xA82774", Offset = "0xA82774", VA = "0xA82774")]
	public void Click_Keyboard_space()
	{
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0xA827E8", Offset = "0xA827E8", VA = "0xA827E8")]
	public void Click_Keyboard_backspace()
	{
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0xA8285C", Offset = "0xA8285C", VA = "0xA8285C")]
	public void Click_Keyboard_enter()
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0xA828EC", Offset = "0xA828EC", VA = "0xA828EC")]
	public void Click_Keyboard_close()
	{
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0xA8297C", Offset = "0xA8297C", VA = "0xA8297C")]
	public void Select_Keyboard_lang(int index)
	{
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0xA829E8", Offset = "0xA829E8", VA = "0xA829E8")]
	public void Switch_nofail(bool index)
	{
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0xA82A7C", Offset = "0xA82A7C", VA = "0xA82A7C")]
	public void Switch_dontuseglow(bool index)
	{
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0xA82AEC", Offset = "0xA82AEC", VA = "0xA82AEC")]
	public void Switch_reflexmod(bool index)
	{
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0xA82B9C", Offset = "0xA82B9C", VA = "0xA82B9C")]
	public void Switch_obstacles(bool index)
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0xA82C4C", Offset = "0xA82C4C", VA = "0xA82C4C")]
	public void Switch_autoshot(bool index)
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0xA82CE0", Offset = "0xA82CE0", VA = "0xA82CE0")]
	public void Switch_hitscore(int index)
	{
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0xA82DFC", Offset = "0xA82DFC", VA = "0xA82DFC")]
	public void Switch_real360(int index)
	{
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0xA82E68", Offset = "0xA82E68", VA = "0xA82E68")]
	public void Switch_sound_tonfa(bool index)
	{
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0xA82EF0", Offset = "0xA82EF0", VA = "0xA82EF0")]
	public void Switch_debris(bool index)
	{
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0xA82EF4", Offset = "0xA82EF4", VA = "0xA82EF4")]
	public void Switch_flaten(bool index)
	{
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0xA82F64", Offset = "0xA82F64", VA = "0xA82F64")]
	public void Switch_modingaudio(bool index)
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0xA82FF8", Offset = "0xA82FF8", VA = "0xA82FF8")]
	public void Switch_modingcolors(bool index)
	{
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0xA830A8", Offset = "0xA830A8", VA = "0xA830A8")]
	public void Set_Icon_sphere_blue(int index)
	{
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0xA8316C", Offset = "0xA8316C", VA = "0xA8316C")]
	public void Set_Icon_sphere_yellow(int index)
	{
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0xA83230", Offset = "0xA83230", VA = "0xA83230")]
	public void Reset_Color()
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0xA833C0", Offset = "0xA833C0", VA = "0xA833C0")]
	public void Switch_Channel(bool index)
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0xA83478", Offset = "0xA83478", VA = "0xA83478")]
	public void Test_Haptic()
	{
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0xA8351C", Offset = "0xA8351C", VA = "0xA8351C")]
	public void Test_Haptic2()
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0xA835B4", Offset = "0xA835B4", VA = "0xA835B4")]
	public void Switch_Settings(int index)
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0xA83758", Offset = "0xA83758", VA = "0xA83758")]
	public void Switch_Camera(int index)
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0xA83820", Offset = "0xA83820", VA = "0xA83820")]
	public void Switch_Avatar(int index)
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0xA838B8", Offset = "0xA838B8", VA = "0xA838B8")]
	public void Switch_Avatar_Type(int index)
	{
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0xA83924", Offset = "0xA83924", VA = "0xA83924")]
	public void Switch_Statistics(int index)
	{
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0xA83990", Offset = "0xA83990", VA = "0xA83990")]
	public void Change_Profile(int index)
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0xA83A5C", Offset = "0xA83A5C", VA = "0xA83A5C")]
	public void Click_Resume()
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0xA83AC8", Offset = "0xA83AC8", VA = "0xA83AC8")]
	public void Click_Quit()
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0xA83B80", Offset = "0xA83B80", VA = "0xA83B80")]
	public void Switch_effectson(bool index)
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0xA83BF0", Offset = "0xA83BF0", VA = "0xA83BF0")]
	public void Switch_sound_hitvolume(bool index)
	{
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0xA83C84", Offset = "0xA83C84", VA = "0xA83C84")]
	public void Switch_sound_shots(bool index)
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0xA83D0C", Offset = "0xA83D0C", VA = "0xA83D0C")]
	public void Switch_sound_fail_miss(bool index)
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0xA83DA0", Offset = "0xA83DA0", VA = "0xA83DA0")]
	public void Switch_sound_position(bool index)
	{
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0xA83E34", Offset = "0xA83E34", VA = "0xA83E34")]
	public void Switch_import_recolor(bool index)
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0xA83EA4", Offset = "0xA83EA4", VA = "0xA83EA4")]
	public void Switch_import_remove(bool index)
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0xA83F14", Offset = "0xA83F14", VA = "0xA83F14")]
	public void Switch_import_move(int index)
	{
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0xA83FF0", Offset = "0xA83FF0", VA = "0xA83FF0")]
	public void Switch_mode(bool index)
	{
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0xA84060", Offset = "0xA84060", VA = "0xA84060")]
	public void Switch_OneHand(int index)
	{
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0xA840F8", Offset = "0xA840F8", VA = "0xA840F8")]
	public void Switch_songspeed(int index)
	{
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0xA84190", Offset = "0xA84190", VA = "0xA84190")]
	public void Switch_GraphicsQuality(int index)
	{
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0xA84228", Offset = "0xA84228", VA = "0xA84228")]
	public void Switch_UIQuality(int index)
	{
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0xA84294", Offset = "0xA84294", VA = "0xA84294")]
	public void Switch_DebrisReduction(int index)
	{
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0xA84300", Offset = "0xA84300", VA = "0xA84300")]
	public void Switch_EffectsReduction(int index)
	{
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0xA8436C", Offset = "0xA8436C", VA = "0xA8436C")]
	public void Switch_target_plus()
	{
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0xA84410", Offset = "0xA84410", VA = "0xA84410")]
	public void Switch_target_minus()
	{
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0xA84520", Offset = "0xA84520", VA = "0xA84520")]
	public void Switch_weight_plus()
	{
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0xA845C4", Offset = "0xA845C4", VA = "0xA845C4")]
	public void Switch_weight_minus()
	{
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0xA84668", Offset = "0xA84668", VA = "0xA84668")]
	public void Switch_height_plus()
	{
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0xA84754", Offset = "0xA84754", VA = "0xA84754")]
	public void Switch_height_minus()
	{
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0xA84840", Offset = "0xA84840", VA = "0xA84840")]
	public void Switch_kcal_kj(int index)
	{
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0xA848CC", Offset = "0xA848CC", VA = "0xA848CC")]
	public void Switch_kg_lbs(int index)
	{
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0xA84958", Offset = "0xA84958", VA = "0xA84958")]
	public void Click_Add_profile()
	{
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0xA849F0", Offset = "0xA849F0", VA = "0xA849F0")]
	public void Click_Remove_profile()
	{
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0xA84A88", Offset = "0xA84A88", VA = "0xA84A88")]
	public void Click_party_player_setting(int index)
	{
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0xA84B20", Offset = "0xA84B20", VA = "0xA84B20")]
	public void Click_add_steam_friend(int index)
	{
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0xA84BFC", Offset = "0xA84BFC", VA = "0xA84BFC")]
	public void Click_close_steam_friend()
	{
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0xA84C40", Offset = "0xA84C40", VA = "0xA84C40")]
	public void Click_select_steam_friend()
	{
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0xA84C84", Offset = "0xA84C84", VA = "0xA84C84")]
	public void Click_friends_next()
	{
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0xA84D04", Offset = "0xA84D04", VA = "0xA84D04")]
	public void Click_friends_prew()
	{
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0xA84D84", Offset = "0xA84D84", VA = "0xA84D84")]
	public void Click_multi_jointoroom(int index)
	{
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0xA84DA0", Offset = "0xA84DA0", VA = "0xA84DA0")]
	public void Click_multi_ready1()
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0xA84E30", Offset = "0xA84E30", VA = "0xA84E30")]
	public void Click_multi_ready2()
	{
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0xA84EC0", Offset = "0xA84EC0", VA = "0xA84EC0")]
	public void Click_multi_kick()
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0xA84EDC", Offset = "0xA84EDC", VA = "0xA84EDC")]
	public void Click_multi_difficulty(int index)
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0xA85008", Offset = "0xA85008", VA = "0xA85008")]
	public void Click_multiplayer()
	{
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0xA85194", Offset = "0xA85194", VA = "0xA85194")]
	public void Click_multi_playrandom()
	{
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0xA851B0", Offset = "0xA851B0", VA = "0xA851B0")]
	public void Click_multi_playmultigame()
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0xA851CC", Offset = "0xA851CC", VA = "0xA851CC")]
	public void Click_multi_creatediff(int index)
	{
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0xA85264", Offset = "0xA85264", VA = "0xA85264")]
	public void Click_multi_createfree()
	{
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0xA85280", Offset = "0xA85280", VA = "0xA85280")]
	public void Click_multi_back()
	{
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0xA85494", Offset = "0xA85494", VA = "0xA85494")]
	public void Click_multi_diff_back()
	{
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0xA855B8", Offset = "0xA855B8", VA = "0xA855B8")]
	public void Auto_multi_diff_back()
	{
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0xA856A4", Offset = "0xA856A4", VA = "0xA856A4")]
	public void Click_multi_leaveclient()
	{
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0xA85784", Offset = "0xA85784", VA = "0xA85784")]
	public void Click_multi_resumeclient()
	{
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0xA857A0", Offset = "0xA857A0", VA = "0xA857A0")]
	public void Click_multi_leavelobby_client()
	{
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0xA85854", Offset = "0xA85854", VA = "0xA85854")]
	public void Click_multi_resumelobby_client()
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0xA85870", Offset = "0xA85870", VA = "0xA85870")]
	public void Switch_voicechat(bool index)
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0xA8595C", Offset = "0xA8595C", VA = "0xA8595C")]
	public void Click_Platform()
	{
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0xA85C34", Offset = "0xA85C34", VA = "0xA85C34")]
	public void Click_Blades()
	{
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0xA85F0C", Offset = "0xA85F0C", VA = "0xA85F0C")]
	public void Click_Chamionship()
	{
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0xA8605C", Offset = "0xA8605C", VA = "0xA8605C")]
	public void Select_Diff_Champ(int num)
	{
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0xA86140", Offset = "0xA86140", VA = "0xA86140")]
	public void Click_ChampionshipBack()
	{
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0xA8628C", Offset = "0xA8628C", VA = "0xA8628C")]
	public void Champ_play()
	{
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0xA86378", Offset = "0xA86378", VA = "0xA86378")]
	public void Back_to_menu_from_champ()
	{
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0xA86434", Offset = "0xA86434", VA = "0xA86434")]
	public void Quick_select_album(int index)
	{
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0xA864A0", Offset = "0xA864A0", VA = "0xA864A0")]
	public void Quick_select_diff(int index)
	{
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0xA8650C", Offset = "0xA8650C", VA = "0xA8650C")]
	public void Back_to_menu_from_quick()
	{
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0xA865DC", Offset = "0xA865DC", VA = "0xA865DC")]
	public void Setup_select_handtype(int index)
	{
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0xA86674", Offset = "0xA86674", VA = "0xA86674")]
	public void Click_handROT_next()
	{
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0xA869B4", Offset = "0xA869B4", VA = "0xA869B4")]
	public void Click_handROT_prev()
	{
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0xA86CF4", Offset = "0xA86CF4", VA = "0xA86CF4")]
	public void Click_handPOS_next()
	{
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0xA87040", Offset = "0xA87040", VA = "0xA87040")]
	public void Click_handPOS_prev()
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0xA8738C", Offset = "0xA8738C", VA = "0xA8738C")]
	public void Click_OpenQuit()
	{
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0xA873D0", Offset = "0xA873D0", VA = "0xA873D0")]
	public void Click_CloseQuit()
	{
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0xA87414", Offset = "0xA87414", VA = "0xA87414")]
	public void Click_quitgame()
	{
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0xA8741C", Offset = "0xA8741C", VA = "0xA8741C")]
	public void Click_OpenCredits()
	{
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0xA87460", Offset = "0xA87460", VA = "0xA87460")]
	public void Click_CloseCredits()
	{
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0xA874A4", Offset = "0xA874A4", VA = "0xA874A4")]
	public void Multak_open_songs()
	{
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0xA87524", Offset = "0xA87524", VA = "0xA87524")]
	public void Multak_close_songs()
	{
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0xA875A4", Offset = "0xA875A4", VA = "0xA875A4")]
	public ClickScript()
	{
	}
}
[Token(Token = "0x200009E")]
public class Colidiak : MonoBehaviour
{
	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ps;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool left;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int countdown;

	[Token(Token = "0x600068C")]
	[Address(RVA = "0xA879C4", Offset = "0xA879C4", VA = "0xA879C4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0xA87A74", Offset = "0xA87A74", VA = "0xA87A74")]
	private void Start()
	{
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0xA87AEC", Offset = "0xA87AEC", VA = "0xA87AEC")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0xA87B64", Offset = "0xA87B64", VA = "0xA87B64")]
	private void OnCollisionStay(Collision col)
	{
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0xA87F0C", Offset = "0xA87F0C", VA = "0xA87F0C")]
	private void OnCollisionEnter(Collision col)
	{
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0xA8807C", Offset = "0xA8807C", VA = "0xA8807C")]
	public Colidiak()
	{
	}
}
[Token(Token = "0x200009F")]
public class ConcertEffectsScript : MonoBehaviour
{
	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource effect_quitemytempo;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource effect_notquitemytempo;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioSource effect_personal;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioSource effect_perfect;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioSource effect_startgame;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioSource effect_failedboost;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioSource effect_missboost;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AudioSource effect_newleader1;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AudioSource effect_newleader2;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AudioSource effect_nlkick;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AudioSource effect_recharge;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private AudioSource effect_empty;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private AudioSource effect_tik;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private AudioSource effect_20;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private AudioSource effect_15;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private AudioSource effect_10;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private AudioSource effect_5;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private AudioSource effect_3;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private AudioSource effect_2;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private AudioSource effect_1;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private AudioSource effect_place_100;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private AudioSource effect_place_50;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private AudioSource effect_place_20;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private AudioSource effect_place_10;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private AudioSource effect_place_9;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private AudioSource effect_place_8;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private AudioSource effect_place_7;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private AudioSource effect_place_6;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private AudioSource effect_place_5;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private AudioSource effect_place_4;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private AudioSource effect_place_3;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private AudioSource effect_place_2;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private AudioSource effect_place_1;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private AudioSource effect_good;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private AudioSource effect_verygood;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private AudioSource effect_excellent;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private AudioSource effect_great;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private AudioSource effect_amazing;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private AudioSource effect_uder;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private AudioSource effect_nosave;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private AudioSource effect_youwin;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private AudioSource effect_dailyriched;

	[Token(Token = "0x6000692")]
	[Address(RVA = "0xA889C8", Offset = "0xA889C8", VA = "0xA889C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0xA8902C", Offset = "0xA8902C", VA = "0xA8902C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0xA89030", Offset = "0xA89030", VA = "0xA89030")]
	public void setaudio()
	{
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0xA89034", Offset = "0xA89034", VA = "0xA89034")]
	public void effect_riched()
	{
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0xA89050", Offset = "0xA89050", VA = "0xA89050")]
	public void effect_winyou()
	{
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0xA8906C", Offset = "0xA8906C", VA = "0xA8906C")]
	public void effect_saveno()
	{
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0xA89088", Offset = "0xA89088", VA = "0xA89088")]
	public void effect_uderplay()
	{
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0xA890D4", Offset = "0xA890D4", VA = "0xA890D4")]
	public void effect_place100()
	{
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0xA89198", Offset = "0xA89198", VA = "0xA89198")]
	public void effect_place50()
	{
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0xA89280", Offset = "0xA89280", VA = "0xA89280")]
	public void effect_place20()
	{
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0xA89368", Offset = "0xA89368", VA = "0xA89368")]
	public void effect_place10()
	{
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0xA89450", Offset = "0xA89450", VA = "0xA89450")]
	public void effect_place9()
	{
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0xA89538", Offset = "0xA89538", VA = "0xA89538")]
	public void effect_place8()
	{
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0xA89620", Offset = "0xA89620", VA = "0xA89620")]
	public void effect_place7()
	{
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0xA89708", Offset = "0xA89708", VA = "0xA89708")]
	public void effect_place6()
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0xA897F0", Offset = "0xA897F0", VA = "0xA897F0")]
	public void effect_place5()
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0xA898D8", Offset = "0xA898D8", VA = "0xA898D8")]
	public void effect_place4()
	{
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0xA899C0", Offset = "0xA899C0", VA = "0xA899C0")]
	public void effect_place3()
	{
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0xA89AA8", Offset = "0xA89AA8", VA = "0xA89AA8")]
	public void effect_place2()
	{
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0xA89B90", Offset = "0xA89B90", VA = "0xA89B90")]
	public void effect_place1()
	{
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0xA89C78", Offset = "0xA89C78", VA = "0xA89C78")]
	public void effect_tiktak()
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0xA89C94", Offset = "0xA89C94", VA = "0xA89C94")]
	public void effect_time20()
	{
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0xA89CE0", Offset = "0xA89CE0", VA = "0xA89CE0")]
	public void effect_time15()
	{
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0xA89D2C", Offset = "0xA89D2C", VA = "0xA89D2C")]
	public void effect_time10()
	{
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0xA89D78", Offset = "0xA89D78", VA = "0xA89D78")]
	public void effect_time5()
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0xA89DC4", Offset = "0xA89DC4", VA = "0xA89DC4")]
	public void effect_time3()
	{
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0xA89E10", Offset = "0xA89E10", VA = "0xA89E10")]
	public void effect_time2()
	{
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0xA89E5C", Offset = "0xA89E5C", VA = "0xA89E5C")]
	public void effect_time1()
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0xA89EA8", Offset = "0xA89EA8", VA = "0xA89EA8")]
	public void effect_emptyweapon()
	{
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0xA89EF4", Offset = "0xA89EF4", VA = "0xA89EF4")]
	public void effect_needrecharge()
	{
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0xA89F40", Offset = "0xA89F40", VA = "0xA89F40")]
	public void effect_nl0()
	{
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0xA89F5C", Offset = "0xA89F5C", VA = "0xA89F5C")]
	public void effect_nl1()
	{
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0xA89FA8", Offset = "0xA89FA8", VA = "0xA89FA8")]
	public void effect_nl2()
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0xA89FF4", Offset = "0xA89FF4", VA = "0xA89FF4")]
	public void effect_boostmiss()
	{
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0xA8A094", Offset = "0xA8A094", VA = "0xA8A094")]
	public void effect_boostfailed()
	{
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0xA8A134", Offset = "0xA8A134", VA = "0xA8A134")]
	public void effect_start()
	{
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0xA8A150", Offset = "0xA8A150", VA = "0xA8A150")]
	public void effect_quite()
	{
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0xA8A16C", Offset = "0xA8A16C", VA = "0xA8A16C")]
	public void effect_notquite()
	{
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0xA8A188", Offset = "0xA8A188", VA = "0xA8A188")]
	public void effect_personalbest()
	{
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0xA8A2D4", Offset = "0xA8A2D4", VA = "0xA8A2D4")]
	public void effect_perfectgame()
	{
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0xA8A2F0", Offset = "0xA8A2F0", VA = "0xA8A2F0")]
	public void effect_goodgame()
	{
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0xA8A30C", Offset = "0xA8A30C", VA = "0xA8A30C")]
	public void effect_verygoodgame()
	{
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0xA8A328", Offset = "0xA8A328", VA = "0xA8A328")]
	public void effect_excellentgame()
	{
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0xA8A344", Offset = "0xA8A344", VA = "0xA8A344")]
	public void effect_greatgame()
	{
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0xA8A360", Offset = "0xA8A360", VA = "0xA8A360")]
	public void effect_amazinggame()
	{
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0xA8A37C", Offset = "0xA8A37C", VA = "0xA8A37C")]
	public ConcertEffectsScript()
	{
	}
}
[Token(Token = "0x20000A0")]
public class Cubelight : MonoBehaviour
{
	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Light lght;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material cubemat;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material cubemat2;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 zalscale;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Renderer ren;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int zalm;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int plusminus;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Color lcolor;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color mcolor;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Color zallcolor;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool asteroid;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	public bool water_sphere;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	public bool water_anubis;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x83")]
	public bool santa;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public bool jelly;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
	public bool add_quad;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x86")]
	public bool _mod360;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Renderer[] ast_next;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject[] blesky;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3[] scales;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Renderer jelly_renderer;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Renderer jelly_renderer2;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool tint;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	public bool santacolor;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB2")]
	public bool dragon1;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB3")]
	public bool dragon2;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public bool dragon3;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
	public bool hieroglyfs;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int ra;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool pre_blesk;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float alfa;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Animator ani;

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0xA8A7B0", Offset = "0xA8A7B0", VA = "0xA8A7B0")]
	private void Start()
	{
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0xA8AA6C", Offset = "0xA8AA6C", VA = "0xA8AA6C")]
	private void Update()
	{
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0xA8BDFC", Offset = "0xA8BDFC", VA = "0xA8BDFC")]
	private void SetSpriteAnimation(int index)
	{
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0xA8BF24", Offset = "0xA8BF24", VA = "0xA8BF24")]
	public Cubelight()
	{
	}
}
[Token(Token = "0x20000A1")]
public class DancingScript : MonoBehaviour
{
	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator ani;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int state;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float timer;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float rantimer;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float ran;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float sadtimer;

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0xA8C4F8", Offset = "0xA8C4F8", VA = "0xA8C4F8")]
	private void Start()
	{
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0xA8C568", Offset = "0xA8C568", VA = "0xA8C568")]
	private void Update()
	{
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0xA8C98C", Offset = "0xA8C98C", VA = "0xA8C98C")]
	public DancingScript()
	{
	}
}
[Token(Token = "0x20000A2")]
public class docasny : MonoBehaviour
{
	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 pos;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float time;

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0x12959BC", Offset = "0x12959BC", VA = "0x12959BC")]
	private void Start()
	{
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0x12959F8", Offset = "0x12959F8", VA = "0x12959F8")]
	private void Update()
	{
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0x1295AB4", Offset = "0x1295AB4", VA = "0x1295AB4")]
	public docasny()
	{
	}
}
[Token(Token = "0x20000A3")]
public class Efektor : MonoBehaviour
{
	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject rotate_obj;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool moveit;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Quaternion zalrot;

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0xA956CC", Offset = "0xA956CC", VA = "0xA956CC")]
	private void Start()
	{
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0xA95710", Offset = "0xA95710", VA = "0xA95710")]
	private void Update()
	{
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0xA9587C", Offset = "0xA9587C", VA = "0xA9587C")]
	public Efektor()
	{
	}
}
[Token(Token = "0x20000A4")]
public class ExistCheck : MonoBehaviour
{
	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] difficulty;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool[] zalstav;

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0xA95884", Offset = "0xA95884", VA = "0xA95884")]
	private void Start()
	{
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0xA95940", Offset = "0xA95940", VA = "0xA95940")]
	private void Update()
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0xA95B48", Offset = "0xA95B48", VA = "0xA95B48")]
	public ExistCheck()
	{
	}
}
[Token(Token = "0x20000A5")]
public class Explosions : MonoBehaviour
{
	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] Explosion;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int pooledAmount;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool willGrow;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<List<GameObject>> pooledObjects;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip[] newaudio;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool sferepool;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool spawny;

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0xA6688C", Offset = "0xA6688C", VA = "0xA6688C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0xA66A3C", Offset = "0xA66A3C", VA = "0xA66A3C")]
	public void setaudio()
	{
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0xA66C50", Offset = "0xA66C50", VA = "0xA66C50")]
	public void setcolors(int j)
	{
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0xA66F7C", Offset = "0xA66F7C", VA = "0xA66F7C")]
	public GameObject GetPooledObject(int j)
	{
		return null;
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0xA67528", Offset = "0xA67528", VA = "0xA67528")]
	public void GetAsteroidExplosion(Vector3 position, Vector3 norm)
	{
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0xA6752C", Offset = "0xA6752C", VA = "0xA6752C")]
	public Explosions()
	{
	}
}
[Token(Token = "0x20000A6")]
public class FakeLightColor : MonoBehaviour
{
	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool left;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int zalyellowchange;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int zalbluechange;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Renderer ren;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float alfa;

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0xA6791C", Offset = "0xA6791C", VA = "0xA6791C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0xA679A0", Offset = "0xA679A0", VA = "0xA679A0")]
	private void Update()
	{
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0xA67B7C", Offset = "0xA67B7C", VA = "0xA67B7C")]
	public FakeLightColor()
	{
	}
}
[Token(Token = "0x20000A7")]
public class FakeSphereLight : MonoBehaviour
{
	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject fake_svetlo;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LayerMask layermask;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Renderer ren;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color col;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool easylight;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 dis;

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0xA67B84", Offset = "0xA67B84", VA = "0xA67B84")]
	private void Start()
	{
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0xA67C10", Offset = "0xA67C10", VA = "0xA67C10")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0xA67FA0", Offset = "0xA67FA0", VA = "0xA67FA0")]
	public FakeSphereLight()
	{
	}
}
[Token(Token = "0x20000A8")]
public class FallGround : MonoBehaviour
{
	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Ray ray;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float fall_speed;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public LayerMask layermask;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 pos;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float hity;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool anyhit;

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0xA68004", Offset = "0xA68004", VA = "0xA68004")]
	private void Start()
	{
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0xA68008", Offset = "0xA68008", VA = "0xA68008")]
	private void Update()
	{
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0xA68248", Offset = "0xA68248", VA = "0xA68248")]
	public FallGround()
	{
	}
}
[Token(Token = "0x20000A9")]
public class FirstSphereColl : MonoBehaviour
{
	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Odraz ModifiOodraz;

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0xA68258", Offset = "0xA68258", VA = "0xA68258")]
	public FirstSphereColl()
	{
	}
}
[Token(Token = "0x20000AA")]
public class FPSCounter : MonoBehaviour
{
	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool count;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro TextPro;

	[Token(Token = "0x40005D9")]
	private const int targetFPS = 60;

	[Token(Token = "0x40005DA")]
	private const float updateInterval = 0.5f;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int framesCount;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float framesTime;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int fps_stat;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static bool fps_active;

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0xA67718", Offset = "0xA67718", VA = "0xA67718")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0xA67784", Offset = "0xA67784", VA = "0xA67784")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0xA677EC", Offset = "0xA677EC", VA = "0xA677EC")]
	private void Start()
	{
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0xA677F0", Offset = "0xA677F0", VA = "0xA677F0")]
	private void Update()
	{
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0xA67910", Offset = "0xA67910", VA = "0xA67910")]
	public FPSCounter()
	{
	}
}
[Token(Token = "0x20000AB")]
public class Fskuska : MonoBehaviour
{
	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject forw;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool imp;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float smer;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float timer;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float najv;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float najm;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float speed;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool lefthand;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float y;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AudioSource audioSwoosh;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool playtonfa;

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0xA6895C", Offset = "0xA6895C", VA = "0xA6895C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0xA689DC", Offset = "0xA689DC", VA = "0xA689DC")]
	private void Start()
	{
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0xA68A84", Offset = "0xA68A84", VA = "0xA68A84")]
	private void Update()
	{
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0xA68F4C", Offset = "0xA68F4C", VA = "0xA68F4C")]
	public Fskuska()
	{
	}
}
[Token(Token = "0x20000AC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7F621C", Offset = "0x7F621C")]
public class gIKcontrol : MonoBehaviour
{
	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cam;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected Animator animator;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform head_obj;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool ikActive;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform rightHandObj;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 right_correction_pos;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Vector3 right_correction_rot;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform leftHandObj;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector3 left_correction_pos;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Vector3 left_correction_rot;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform lookObj;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Vector3 basic_position;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool lerpleft;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
	private bool lerpright;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8E")]
	private bool lerpforw;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8F")]
	private bool lerpback;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool lerpotoc;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float timotoc;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float timback;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float timforw;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float timleft;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float timright;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Quaternion zalq;

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0x1295ABC", Offset = "0x1295ABC", VA = "0x1295ABC")]
	private void Start()
	{
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0x1295B14", Offset = "0x1295B14", VA = "0x1295B14")]
	private void OnAnimatorIK()
	{
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0x129633C", Offset = "0x129633C", VA = "0x129633C")]
	public gIKcontrol()
	{
	}
}
[Token(Token = "0x20000AD")]
public class GraphScript : MonoBehaviour
{
	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 vec;

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0xA69630", Offset = "0xA69630", VA = "0xA69630")]
	public GraphScript()
	{
	}
}
[Token(Token = "0x20000AE")]
public class GulaScore : MonoBehaviour
{
	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int stype;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 pos;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int AktualScore;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TextMeshPro tmpr;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera cam;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Color zalcolor;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Color nocolor;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float timer;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int scoreb;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int scorey;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int countb;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int county;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int zaly;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int zalb;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int zalbluechange;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int zalyellowchange;

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0xA69638", Offset = "0xA69638", VA = "0xA69638")]
	private void Start()
	{
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0xA69758", Offset = "0xA69758", VA = "0xA69758")]
	private void Update()
	{
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0xA6A1B0", Offset = "0xA6A1B0", VA = "0xA6A1B0")]
	public GulaScore()
	{
	}
}
[Token(Token = "0x20000AF")]
public class HakyBaky : MonoBehaviour
{
	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool _horizontal_left;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool _horizontal_right;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool _vertical_up;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool _vertical_down;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 original_position;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 off_position1;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 off_position2;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 original_scale;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 off_scale;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float speed;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float tim;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool openstate;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool isopen;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int goopen;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool win_opener;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject win_obj;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool win_gametype;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	public bool win_songlist;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
	public bool win_difficulty;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7B")]
	public bool win_profile;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool win_pause;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	public bool win_setting;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7E")]
	public bool win_weapon;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7F")]
	public bool win_leaderboard;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool win_achievboard;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	public bool win_achiev;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	public bool win_dead;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x83")]
	public bool win_steamfriend;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public bool win_credits;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
	public bool win_quit;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x86")]
	public bool win_keyboard;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x87")]
	public bool win_rank;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool win_rank2;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	public bool win_newleader;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
	public bool win_multak;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8B")]
	public bool win_champ;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public bool win_theme;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
	public bool win_download;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float delay;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float zaldelay;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool loop;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float looppause;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject tpo;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool testneed;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	private bool zaltestneed;

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0xA6A228", Offset = "0xA6A228", VA = "0xA6A228")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0xA6A700", Offset = "0xA6A700", VA = "0xA6A700")]
	private void checkstate()
	{
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0xA6AC10", Offset = "0xA6AC10", VA = "0xA6AC10")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0xA6AD0C", Offset = "0xA6AD0C", VA = "0xA6AD0C")]
	private void Update()
	{
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0xA6B228", Offset = "0xA6B228", VA = "0xA6B228")]
	public HakyBaky()
	{
	}
}
[Token(Token = "0x20000B0")]
public class HandController : MonoBehaviour
{
	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ControllerVariety Variety;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ConcertEffectsScript concert;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float angleModify;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool lefthand;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 lastPos;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 lastPos2;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Vector3 _lastPos;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static Vector3 _lastPos2;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static Vector3 _lastPos_forw;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static Vector3 _lastPos2_forw;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 tonfa_left;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 tonfa_right;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3[] positionRegister;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float[] posTimeRegister;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int positionSamplesTaken;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Renderer hand;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject forw;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Color zalhandcolor;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Color aktualcolor;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Color handcolor;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject spds;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float zalpower;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float power;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool upp;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float tim;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float timbeat;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform hlaven1;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Explosions shot_spawner;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private AudioSource strelaAudio;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private int zalsm;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private int zalsm2;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool beatready;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
	public bool autofire;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject laser1;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private float ltimer;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private bool scaleset;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10D")]
	private bool bolshot;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10E")]
	public bool demo;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10F")]
	private bool shotsound;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private float checkshot;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private float beatreadytimer;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private bool fir1;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x119")]
	private bool zalfir1;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11A")]
	private bool fir2;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11B")]
	private bool zalfir2;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private bool killOnHalf;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private float killtim;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Odraz killodraz;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public BlowBack bb;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private int zalbluechange;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private int zalyellowchange;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject fpsvisible;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private float fpstimer;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private bool fps_visible;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14D")]
	private bool bcl;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private int max;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private float maxtimer;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public TextMeshPro tm;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private int[] right_average;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private int[] left_average;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private int counter;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private int lcounter;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private int zalhit_right;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private int zalhit_left;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private float r_cislo;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private float l_cislo;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private int poci;

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0xA6B240", Offset = "0xA6B240", VA = "0xA6B240")]
	private void Start()
	{
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0xA6B340", Offset = "0xA6B340", VA = "0xA6B340")]
	public static Quaternion GetControllerQUA(int hand)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0xA6B45C", Offset = "0xA6B45C", VA = "0xA6B45C")]
	public static Vector3 GetControllerPOS(int hand)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0xA6B574", Offset = "0xA6B574", VA = "0xA6B574")]
	private void UpdateHands(int ruka)
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0xA6B638", Offset = "0xA6B638", VA = "0xA6B638")]
	private void Update()
	{
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0xA6C578", Offset = "0xA6C578", VA = "0xA6C578")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0xA6C590", Offset = "0xA6C590", VA = "0xA6C590")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0xA6CDE8", Offset = "0xA6CDE8", VA = "0xA6CDE8")]
	public HandController()
	{
	}
}
[Token(Token = "0x20000B1")]
public class HapticImpulse : MonoBehaviour
{
	[Token(Token = "0x2000388")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9888", Offset = "0x7F9888")]
	private sealed class <SendHaptic>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40023E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40023E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40023EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HapticImpulse <>4__this;

		[Token(Token = "0x40023EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int hand;

		[Token(Token = "0x17000303")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60018BC")]
			[Address(RVA = "0xA6D410", Offset = "0xA6D410", VA = "0xA6D410", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000304")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018BE")]
			[Address(RVA = "0xA6D47C", Offset = "0xA6D47C", VA = "0xA6D47C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018B9")]
		[Address(RVA = "0xA6D0E8", Offset = "0xA6D0E8", VA = "0xA6D0E8")]
		[DebuggerHidden]
		public <SendHaptic>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x60018BA")]
		[Address(RVA = "0xA6D32C", Offset = "0xA6D32C", VA = "0xA6D32C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60018BB")]
		[Address(RVA = "0xA6D330", Offset = "0xA6D330", VA = "0xA6D330", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018BD")]
		[Address(RVA = "0xA6D418", Offset = "0xA6D418", VA = "0xA6D418", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int left;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int right;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float timerleft;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float timerright;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool left_right;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private byte[] buffer;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float amplitude;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float duration;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int size;

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0xA6CF64", Offset = "0xA6CF64", VA = "0xA6CF64")]
	private void Start()
	{
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0xA6CF68", Offset = "0xA6CF68", VA = "0xA6CF68")]
	public void TrySendHapticImpulse(int hand)
	{
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0xA6D064", Offset = "0xA6D064", VA = "0xA6D064")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x803428", Offset = "0x803428")]
	private IEnumerator SendHaptic(int hand)
	{
		return null;
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0xA6D114", Offset = "0xA6D114", VA = "0xA6D114")]
	private void Update()
	{
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0xA6D2C8", Offset = "0xA6D2C8", VA = "0xA6D2C8")]
	public HapticImpulse()
	{
	}
}
[Token(Token = "0x20000B2")]
public class HeadCollider : MonoBehaviour
{
	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool head;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool lefthand;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool righthand;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource audiobum;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioSource audiotalk;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioSource audiohead;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioSource audiohead2;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool uz_talk;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform otherhand;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform[] jump;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Animator[] _ani;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject[] _bonus;

	[Token(Token = "0x6000705")]
	[Address(RVA = "0xA6D484", Offset = "0xA6D484", VA = "0xA6D484")]
	private void Start()
	{
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0xA6D598", Offset = "0xA6D598", VA = "0xA6D598")]
	private void Update()
	{
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0xA6D6D0", Offset = "0xA6D6D0", VA = "0xA6D6D0")]
	private void OnCollisionEnter(Collision col)
	{
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0xA6DDE0", Offset = "0xA6DDE0", VA = "0xA6DDE0")]
	public HeadCollider()
	{
	}
}
[Serializable]
[Token(Token = "0x20000B3")]
public class BendingSegment
{
	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform firstTransform;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform lastTransform;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float thresholdAngleDifference;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float bendingMultiplier;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxAngleDifference;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float maxBendingAngle;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float responsiveness;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	internal float angleH;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	internal float angleV;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	internal Vector3 dirUp;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	internal Vector3 referenceLookDir;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	internal Vector3 referenceUpDir;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	internal int chainLength;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	internal Quaternion[] origRotations;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	internal Vector3[] origPosition;

	[Token(Token = "0x6000709")]
	[Address(RVA = "0xA3AD3C", Offset = "0xA3AD3C", VA = "0xA3AD3C")]
	public BendingSegment()
	{
	}
}
[Serializable]
[Token(Token = "0x20000B4")]
public class NonAffectedJoints
{
	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform joint;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float effect;

	[Token(Token = "0x600070A")]
	[Address(RVA = "0x9E0398", Offset = "0x9E0398", VA = "0x9E0398")]
	public NonAffectedJoints()
	{
	}
}
[Serializable]
[Token(Token = "0x20000B5")]
public class MoveSegment
{
	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform objTransform;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 dirMove;

	[Token(Token = "0x600070B")]
	[Address(RVA = "0xA2A45C", Offset = "0xA2A45C", VA = "0xA2A45C")]
	public MoveSegment()
	{
	}
}
[Token(Token = "0x20000B6")]
public class HeadLookController : MonoBehaviour
{
	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform rootNode;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BendingSegment[] segments;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public NonAffectedJoints[] nonAffectedJoints;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 headLookVector;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 headUpVector;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 target;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float effect;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool overrideAnimation;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool lookto_object;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject look_object;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MoveSegment[] msegments;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool useAnim;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Animator anim;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool hand;

	[Token(Token = "0x600070C")]
	[Address(RVA = "0xA6DDF0", Offset = "0xA6DDF0", VA = "0xA6DDF0")]
	private void Start()
	{
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0xA6E238", Offset = "0xA6E238", VA = "0xA6E238")]
	private void Update()
	{
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0xA6E23C", Offset = "0xA6E23C", VA = "0xA6E23C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0xA6F5A8", Offset = "0xA6F5A8", VA = "0xA6F5A8")]
	public static float AngleAroundAxis(Vector3 dirA, Vector3 dirB, Vector3 axis)
	{
		return default(float);
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0xA6F770", Offset = "0xA6F770", VA = "0xA6F770")]
	public HeadLookController()
	{
	}
}
[Token(Token = "0x20000B7")]
public class HiResScreenShots : MonoBehaviour
{
	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int resWidth;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int resHeight;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool takeHiResShot;

	[Token(Token = "0x6000711")]
	[Address(RVA = "0xA6F810", Offset = "0xA6F810", VA = "0xA6F810")]
	public static string ScreenShotName(int width, int height)
	{
		return null;
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0xA6FAAC", Offset = "0xA6FAAC", VA = "0xA6FAAC")]
	public void TakeHiResShot()
	{
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0xA6FAB8", Offset = "0xA6FAB8", VA = "0xA6FAB8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0xA6FD04", Offset = "0xA6FD04", VA = "0xA6FD04")]
	public HiResScreenShots()
	{
	}
}
[Token(Token = "0x20000B8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7F6280", Offset = "0x7F6280")]
public class IKControl : MonoBehaviour
{
	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Animator animator;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool ikActive;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform leftHandObj;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform rightHandObj;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform headObj;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform hipsObj;

	[Token(Token = "0x6000715")]
	[Address(RVA = "0x9A7888", Offset = "0x9A7888", VA = "0x9A7888")]
	private void Start()
	{
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0x9A78E0", Offset = "0x9A78E0", VA = "0x9A78E0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0x9A7C5C", Offset = "0x9A7C5C", VA = "0x9A7C5C")]
	private void OnAnimatorIK()
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0x9A7EC4", Offset = "0x9A7EC4", VA = "0x9A7EC4")]
	public IKControl()
	{
	}
}
[Token(Token = "0x20000B9")]
public class InputController : MonoBehaviour
{
	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool Button_Fire1;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool Button_Fire1_Click;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	public static bool Button_Fire1_Down;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
	public static bool Button_Fire1_Up;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static bool Button_Grip;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int[] click;

	[Token(Token = "0x6000719")]
	[Address(RVA = "0x9A8130", Offset = "0x9A8130", VA = "0x9A8130")]
	private void Start()
	{
	}

	[Token(Token = "0x600071A")]
	[Address(RVA = "0x9A8184", Offset = "0x9A8184", VA = "0x9A8184")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0x9A8210", Offset = "0x9A8210", VA = "0x9A8210")]
	public InputController()
	{
	}
}
[Token(Token = "0x20000BA")]
public class InvisOnStart : MonoBehaviour
{
	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer[] stmievace;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer[] stmievace_tintove;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color32[] stmievace_color;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color32[] stmievace_tint;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float time;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool nieco_nahodene;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject[] ps;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int zhasnute;

	[Token(Token = "0x600071D")]
	[Address(RVA = "0x9A9810", Offset = "0x9A9810", VA = "0x9A9810")]
	private void Start()
	{
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0x9A99AC", Offset = "0x9A99AC", VA = "0x9A99AC")]
	private void Update()
	{
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0x9A9F9C", Offset = "0x9A9F9C", VA = "0x9A9F9C")]
	public InvisOnStart()
	{
	}
}
[Token(Token = "0x20000BB")]
public class KeyScript : MonoBehaviour
{
	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int what_change;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static bool shift_state;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string insert_text;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string add_letter;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static string use_text;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string kurzor;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string kurzorblik;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro tmpr;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float kurzortimer;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string back_text;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static int maxlenght_text;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static int lang_type;

	[Token(Token = "0x6000720")]
	[Address(RVA = "0x9AAB0C", Offset = "0x9AAB0C", VA = "0x9AAB0C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0x9AACF8", Offset = "0x9AACF8", VA = "0x9AACF8")]
	public static void setenter()
	{
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0x9AB334", Offset = "0x9AB334", VA = "0x9AB334")]
	public static void setend()
	{
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0x9AB45C", Offset = "0x9AB45C", VA = "0x9AB45C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0x9AB784", Offset = "0x9AB784", VA = "0x9AB784")]
	public KeyScript()
	{
	}
}
[Token(Token = "0x20000BC")]
public class Languages : MonoBehaviour
{
	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ClickScript cs;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int language;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int changelanguage;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int zalllanguage;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UITooltip ui_tooltip_closegame_button;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UITooltip ui_tooltip_credit_button;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UITooltip ui_tooltip_setting_button;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UITooltip ui_tooltip_party_button;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UITooltip ui_tooltip_theme_button;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UITooltip ui_tooltip_stat_button;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UITooltip ui_tooltip_achiev_button;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UITooltip ui_tooltip_quick_button;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public UITooltip ui_tooltip_help_button;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TextMeshPro window_select_gamemode_title;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TextMeshPro window_select_gamemode_singleplayer_title;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TextMeshPro window_select_gamemode_singleplayer_description;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public TextMeshPro window_select_gamemode_club_title;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TextMeshPro window_select_gamemode_club_description;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public TextMeshPro window_select_gamemode_real360_title;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public TextMeshPro window_select_gamemode_real360_description;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TextMeshPro window_select_gamemode_quick_title;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TextMeshPro window_select_gamemode_quick_description;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public TextMeshPro window_select_gamemode_multiplayer_title;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public TextMeshPro window_select_gamemode_multiplayer_description;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public TextMeshPro window_select_gamemode_inlobby_title;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public TextMeshPro window_select_gamemode_championship_title;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public TextMeshPro window_select_gamemode_championship_description;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public UIHorizontalSelector ui_down_gamesetting_hselector_songspeed;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public UIHorizontalSelector ui_down_gamesetting_hselector_hitscore;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public UIHorizontalSelector ui_down_gamesetting_hselector_real360;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public TextMeshPro ui_down_gamesetting_score_modifier;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public TextMeshPro ui_down_gamesetting_insta_shock;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public TextMeshPro ui_down_gamesetting_obstacles;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public TextMeshPro ui_down_gamesetting_game_style;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public TextMeshPro ui_down_gamesetting_auto_shot;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public TextMeshPro ui_down_gamesetting_resulting_modifier;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public TextMeshPro ui_down_gamesetting_nofail;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public TextMeshPro ui_down_gamesetting_score_notbe_saved;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public TextMeshPro window_select_gamemode_theme_early_title;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public TextMeshPro window_select_gamemode_theme_early_description;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public TextMeshPro window_select_gamemode_theme_space_title;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public TextMeshPro window_select_gamemode_theme_space_description;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public TextMeshPro window_select_gamemode_theme_island_title;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public TextMeshPro window_select_gamemode_theme_island_description;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public TextMeshPro window_select_gamemode_theme_egypt_title;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public TextMeshPro window_select_gamemode_theme_egypt_description;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public TextMeshPro window_select_gamemode_theme_winter_title;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public TextMeshPro window_select_gamemode_theme_winter_description;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public TextMeshPro window_select_gamemode_theme_deep_title;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public TextMeshPro window_select_gamemode_theme_deep_description;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public TextMeshPro window_select_gamemode_theme_dragon_title;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public TextMeshPro window_select_gamemode_theme_dragon_description;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public UIHorizontalSelector ui_down_achievements_hselector;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public UIHorizontalSelector ui_down_statistics_hselector;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public TextMeshPro ui_down_statistics_plays;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public TextMeshPro ui_down_statistics_time;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public TextMeshPro ui_down_statistics_ranked_songs;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public TextMeshPro ui_down_statistics_next_rank;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public TextMeshPro ui_down_statistics_rank_progress;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public TextMeshPro ui_down_statistics_multiplayer;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public TextMeshPro ui_down_statistics_wins;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public TextMeshPro ui_down_statistics_loses;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public TextMeshPro ui_down_statistics_champpoints;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public TextMeshPro ui_down_help_title;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public UIHorizontalSelector window_setting_hselector;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public UITooltip window_setting_tooltip_setting_button;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public UITooltip window_setting_party_tooltip_edit_button;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public UITooltip window_setting_party_tooltip_friends_button;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public UITooltip window_setting_party_tooltip_add_button1;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public UITooltip window_setting_party_tooltip_add_button2;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public UITooltip window_setting_party_tooltip_add_button3;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public UITooltip window_setting_party_tooltip_add_button4;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public UITooltip window_setting_party_tooltip_remove_button1;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public UITooltip window_setting_party_tooltip_remove_button2;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public UITooltip window_setting_party_tooltip_remove_button3;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public UITooltip window_setting_party_tooltip_remove_button4;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public UIHorizontalSelector window_setting_hselector_weight;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public UIHorizontalSelector window_setting_hselector_calories;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public TextMeshPro window_setting_hselector_weight_title;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public TextMeshPro window_setting_hselector_calories_title;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public TextMeshPro window_setting_hselector_spawner_title;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public TextMeshPro window_setting_hselector_goal_title;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	public UIHorizontalSelector window_setting_graphics_hselector_quality;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	public UIHorizontalSelector window_setting_graphics_hselector_environment;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	public UIHorizontalSelector window_setting_graphics_hselector_effects;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	public UIHorizontalSelector window_setting_graphics_hselector_debris;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	public UIHorizontalSelector window_setting_graphics_hselector_onehand;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	public UIHorizontalSelector window_setting_graphics_hselector_ui_env;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	public TextMeshPro window_setting_graphics_hselector_glow_title;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	public TextMeshPro window_setting_graphics_hselector_flat_title;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	public TextMeshPro window_setting_graphics_hselector_transp_title;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	public TextMeshPro window_setting_graphics_hselector_quality_title;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	public TextMeshPro window_setting_graphics_hselector_ui_title;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	public TextMeshPro window_setting_graphics_hselector_environment_title;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	public TextMeshPro window_setting_graphics_hselector_effects_title;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	public TextMeshPro window_setting_graphics_hselector_debris_title;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	public TextMeshPro window_setting_graphics_hselector_onehand_title;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	public TextMeshPro window_setting_graphics_roomscale_title;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	public TextMeshPro window_setting_audio_master_title;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	public TextMeshPro window_setting_audio_music_title;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	public TextMeshPro window_setting_audio_effects_title;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	public TextMeshPro window_setting_audio_voices_title;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	public TextMeshPro window_setting_audio_pphasers;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	public TextMeshPro window_setting_audio_phit;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	public TextMeshPro window_setting_audio_dfail;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	public TextMeshPro window_setting_audio_dposition;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	public UITooltip window_setting_haptic_tooltip_button1;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	public UITooltip window_setting_haptic_tooltip_button2;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	public UITooltip window_setting_haptic_tooltip_button3;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	public TextMeshPro window_setting_haptic_channel;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
	public TextMeshPro window_setting_haptic_amplitude;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
	public TextMeshPro window_setting_haptic_duration;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
	public TextMeshPro window_setting_haptic_test;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
	public TextMeshPro window_setting_modding_audio;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
	public TextMeshPro window_setting_modding_colors;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
	public TextMeshPro window_setting_modding_reset;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
	public UIHorizontalSelector window_setting_cameras_hselector_camera;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
	public UIHorizontalSelector window_setting_cameras_hselector_avatar;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
	public TextMeshPro window_setting_modding_cameras_camera_title;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
	public TextMeshPro window_setting_modding_cameras_avatar_title;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
	public TextMeshPro window_setting_cameras_nosave;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
	public UIHorizontalSelector window_setting_quick_hselector_album;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
	public UIHorizontalSelector window_setting_quick_hselector_diff;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
	public TextMeshPro window_setting_quick_hselector_album_title;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
	public TextMeshPro window_setting_quick_hselector_diff_title;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
	public TextMeshPro window_setting_import_recolor;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F8")]
	public TextMeshPro window_setting_import_remove;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
	public TextMeshPro window_setting_import_move;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x408")]
	public UIHorizontalSelector window_setting_language_hselector;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
	public TextMeshPro window_setting_language_hselector_title;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x418")]
	public TextMeshPro window_setting_friendlist;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
	public UITooltip window_setting_friendlist_button;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x428")]
	private string _hand_desription;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x430")]
	private string static_theme;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x438")]
	private string movie_theme;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x440")]
	private string back_to_menu;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x448")]
	private string _add;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x450")]
	private string _add_description;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x458")]
	private string _remove;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x460")]
	private string _remove_desription;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string lang_kcal;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string lang_kJ;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string lang_RANK;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string lang_wikg;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string lang_wilbs;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string[] lang_help_description;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string lang_fitboxing;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string lang_real360;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string lang_theclub;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string lang_saw;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string lang_staff;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string lang_blades;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string lang_phasers;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string lang_tonfas;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static string lang_gentle;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string lang_light;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string lang_normal;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static string lang_intense;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static string lang_impossibru;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static string lang_play;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x468")]
	public TextMeshPro window_newleader;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static string lang_glow;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public static string lang_ui;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static string lang_env;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public static string lang_flat;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public static string lang_transp;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public static string lang_designedby;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public static string lang_plays;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public static string lang_length;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public static string lang_bpm;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public static string lang_sort_song;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public static string lang_sort_autor;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public static string lang_sort_plays;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public static string lang_sort_bpm;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public static string lang_sort_cal;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public static string lang_sort_length;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public static string lang_sort_favor;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public static string lang_detailson;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public static string lang_detailsoff;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public static string lang_detailsanal;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public static string lang_server;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public static string lang_downloading;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public static string lang_vs;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x470")]
	public TextMeshPro window_ssd_selectsong_title;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x478")]
	public TextMeshPro window_ssd_selectdifficulty_title;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x480")]
	public TextMeshPro window_ssd_sortby_title;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x488")]
	public UIHorizontalSelector window_ssd_hselector_album;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x490")]
	public UIHorizontalSelector window_ssd_hselector_sort;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x498")]
	public UIHorizontalSelector window_ssd_hselector_details2;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A0")]
	public UIHorizontalSelector window_ssd_hselector_details3;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A8")]
	public UIHorizontalSelector window_ssd_hselector_weapons;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B0")]
	public UITooltip window_ssd_tooltip_close_button;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B8")]
	public UITooltip window_ssd_tooltip_resort_button;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C0")]
	public UITooltip window_ssd_tooltip_download_button;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C8")]
	public TextMeshPro window_ssd_diff_gentle;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D0")]
	public TextMeshPro window_ssd_diff_light;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D8")]
	public TextMeshPro window_ssd_diff_normal;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E0")]
	public TextMeshPro window_ssd_diff_intense;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E8")]
	public TextMeshPro window_ssd_diff_imposs;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F0")]
	public TextMeshPro window_ssd_diff_play;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F8")]
	public UITooltip window_ssd_tooltip_closedownload_button;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x500")]
	public UITooltip window_ssd_tooltip_deletesong_button;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x508")]
	public UIHorizontalSelector window_ssd_hselector_server;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x510")]
	public TextMeshPro window_ssd_freespace;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x518")]
	public TextMeshPro window_ssd_downloading;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x520")]
	public TextMeshPro window_ssd_vs;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x528")]
	public TextMeshPro window_ssdnet_diff_gentle;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x530")]
	public TextMeshPro window_ssdnet_diff_light;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x538")]
	public TextMeshPro window_ssdnet_diff_normal;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x540")]
	public TextMeshPro window_ssdnet_diff_intense;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x548")]
	public TextMeshPro window_ssdnet_diff_imposs;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x550")]
	public TextMeshPro window_ssdnet_diff_play;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x558")]
	public TextMeshPro window_ssdnet_diff_otherplayersong;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x560")]
	public TextMeshPro window_ssd_diff_videoplayback;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x568")]
	public UITooltip window_ssdnet_tooltip_close_button;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public static string lang_norated;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public static string lang_swift;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public static string lang_burst;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public static string lang_turbo;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public static string lang_super;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public static string lang_hyper;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public static string lang_extreme;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public static string lang_tmaxscore;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public static string lang_tmaxboost;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public static string lang_tboost;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public static string lang_gfailed;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public static string lang_gsuccs;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public static string lang_gnodata;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public static string lang_sbeats;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public static string lang_hour;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public static string lang_max;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public static string lang_speed;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public static string lang_notes;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public static string lang_freestyle;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public static string lang_songspeed;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public static string lang_scoremodifier;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x570")]
	public TextMeshPro window_ssd_diff_details_title;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x578")]
	public TextMeshPro window_ssd_diff_analyze_title;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x580")]
	public TextMeshPro window_ssd_diff_sort_song_title;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x588")]
	public TextMeshPro window_ssd_diff_sort_author_title;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x590")]
	public TextMeshPro window_ssd_diff_sort_plays_title;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x598")]
	public TextMeshPro window_ssd_diff_sort_bpm_title;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A0")]
	public TextMeshPro window_ssd_diff_sort_calories_title;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A8")]
	public TextMeshPro window_ssd_diff_sort_length_title;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B0")]
	public TextMeshPro window_ssd_diff_sort_favorites_title;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B8")]
	public TextMeshPro window_ssd_select_weapon_fitbox_title;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C0")]
	public TextMeshPro window_ssd_select_weapon_saw_title;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C8")]
	public TextMeshPro window_ssd_select_weapon_staff_title;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D0")]
	public TextMeshPro window_ssd_select_weapon_blades_title;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D8")]
	public TextMeshPro window_ssd_select_weapon_phasers_title;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E0")]
	public TextMeshPro window_ssd_select_weapon_tonfas_title;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E8")]
	public UITooltip window_ssd_tooltip_opensort_button;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F0")]
	public UITooltip window_ssd_tooltip_opendetail_button;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public static string lang_sortby;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public static string lang_selectsort;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public static string lang_selectdetails;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F8")]
	private string lang_achiv_worthiness;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x600")]
	private string lang_achiv_mastery;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x608")]
	public UITooltip window_leaderboard_tooltip_button1;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x610")]
	public UITooltip window_leaderboard_tooltip_button2;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x618")]
	public UITooltip window_leaderboard_tooltip_button3;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x620")]
	public UITooltip window_leaderboard_tooltip_button4;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x628")]
	public UITooltip window_leaderboard_tooltip_button5;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x630")]
	public UITooltip window_leaderboard_tooltip_button6;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x638")]
	public UITooltip window_leaderboard_tooltip_button7;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x640")]
	public UITooltip window_leaderboard_tooltip_button8;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x648")]
	public UIHorizontalSelector window_leaderboard_hselector_type;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public static string lang_unpacking;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public static string lang_done;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public static string lang_lb_global;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public static string lang_lb_player;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public static string lang_lb_friends;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public static string lang_lb_party;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public static string lang_lb_leaderskings;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public static string lang_lb_bestscore;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public static string lang_lb_calories;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public static string lang_lb_champ;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public static string lang_loading_leaderboard;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public static string lang_loading_error;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public static string lang_loading_empty;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public static string lang_lob_rank;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public static string lang_lob_name;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public static string lang_lob_points;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	public static string lang_lob_namespeed;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	public static string lang_lob_namescore;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	public static string lang_lob_score;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	public static string lang_lob_burned;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	public static string lang_lob_cpoints;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x650")]
	public TextMeshPro window_champ_gentle;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x658")]
	public TextMeshPro window_champ_light;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x660")]
	public TextMeshPro window_champ_normal;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x668")]
	public TextMeshPro window_champ_intense;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x670")]
	public TextMeshPro window_champ_imposs;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x678")]
	public TextMeshPro window_champ_curently;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x680")]
	public TextMeshPro window_champ_next;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x688")]
	public TextMeshPro window_champ_players;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x690")]
	public TextMeshPro window_champ_ending;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x698")]
	public TextMeshPro window_champ_starting;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A0")]
	public TextMeshPro window_champ_selectdifficulty;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A8")]
	public UITooltip window_champ_tooltip_button_close;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6B0")]
	public UITooltip window_tooltip_button_R1;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6B8")]
	public UITooltip window_tooltip_button_K1;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C0")]
	public UITooltip window_tooltip_button_S1;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C8")]
	public UITooltip window_tooltip_button_R2;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D0")]
	public UITooltip window_tooltip_button_K2;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D8")]
	public UITooltip window_tooltip_button_S2;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6E0")]
	public TextMeshPro window_pause_resume;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6E8")]
	public TextMeshPro window_pause_quit;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6F0")]
	public TextMeshPro window_pause_game_title;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6F8")]
	public TextMeshPro window_pause2_resume;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x700")]
	public TextMeshPro window_pause2_quit;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x708")]
	public TextMeshPro window_pause2_leave_title;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x710")]
	public TextMeshPro window_pause3_resume;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x718")]
	public TextMeshPro window_pause3_quit;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x720")]
	public TextMeshPro window_pause3_quit_title;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x728")]
	public TextMeshPro window_pause4_resume;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x730")]
	public TextMeshPro window_pause4_leave;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x738")]
	public TextMeshPro window_pause4_leave_title;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x740")]
	public TextMeshPro window_pause5_resume;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x748")]
	public TextMeshPro window_pause5_leave;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x750")]
	public TextMeshPro window_pause5_leave_title;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x758")]
	public TextMeshPro window_pause6_resume;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x760")]
	public TextMeshPro window_pause6_leave;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x768")]
	public TextMeshPro window_pause6_leaveroom_title;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x770")]
	private string lang_quit;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x778")]
	private string lang_resume;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x780")]
	private string lang_leave;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x788")]
	private string lang_pausegame;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x790")]
	private string lang_leavegame;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x798")]
	private string lang_leaveroom;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A0")]
	private string lang_quitgame;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A8")]
	private string lang_off;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7B0")]
	private string lang_avagirl;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7B8")]
	private string lang_avaboy;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C0")]
	private string lang_voicechat;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C8")]
	private string lang_micvolume;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D0")]
	private string lang_microphone;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D8")]
	private string lang_avatar;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	public static string lang_days;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	public static string lang_players;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7E0")]
	public UITooltip window_ssdnet_tooltip_button_micavatar;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7E8")]
	public UIHorizontalSelector window_ssdnet_avatar_hselector_avatar;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7F0")]
	public TextMeshPro window_ssdnet_avatar_title;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7F8")]
	public TextMeshPro window_ssdnet_microphone_title;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x800")]
	public TextMeshPro window_ssdnet_micvolume_title;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x808")]
	public TextMeshPro window_ssdnet_voicechat_title;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x810")]
	public TextMeshPro window_ssdnet_voicechatsetting_title;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x818")]
	public UIHorizontalSelector window_ssdnet_avatar_hselector_avatar2;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x820")]
	public TextMeshPro window_ssdnet_avatar_title2;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x828")]
	public TextMeshPro window_ssdnet_microphone_title2;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x830")]
	public TextMeshPro window_ssdnet_micvolume_title2;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x838")]
	public TextMeshPro window_ssdnet_voicechat_title2;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x840")]
	public TextMeshPro window_net_multiplayer_title;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x848")]
	public TextMeshPro window_net_playrandom;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x850")]
	public TextMeshPro window_net_header;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x858")]
	public TextMeshPro window_net_kick;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x860")]
	public TextMeshPro window_net_startgame;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x868")]
	private string lang_join;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x870")]
	public TextMeshPro window_net_join1;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x878")]
	public TextMeshPro window_net_join2;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x880")]
	public TextMeshPro window_net_join3;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x888")]
	public TextMeshPro window_net_join4;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x890")]
	public TextMeshPro window_net_join5;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x898")]
	public UITooltip window_net_tooltip_button_close;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8A0")]
	public TextMeshPro window_net_emptyroom;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	public static string lang_accuracy;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	public static string lang_power;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8A8")]
	public TextMeshPro window_ssd_lastscore;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8B0")]
	public TextMeshPro window_ssd_maxscore;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8B8")]
	public TextMeshPro gameui_speed;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C0")]
	public TextMeshPro gameui_boost;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C8")]
	public TextMeshPro gameui_score;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	public static string lang_nodata;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	public static string lang_average;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	public static string lang_calsec;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	public static string lang_averagepernote;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8D0")]
	public TextMeshPro window_seting_language_thanks;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8D8")]
	public TextMeshPro achievement_unlocked;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8E0")]
	public TextMeshPro multak_region;

	[Token(Token = "0x6000726")]
	[Address(RVA = "0x9B2124", Offset = "0x9B2124", VA = "0x9B2124")]
	private void language_english()
	{
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0x9B6A14", Offset = "0x9B6A14", VA = "0x9B6A14")]
	private void old_version_fallback()
	{
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0x9B5828", Offset = "0x9B5828", VA = "0x9B5828")]
	private void new_version_fallback()
	{
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0x9B5EC0", Offset = "0x9B5EC0", VA = "0x9B5EC0")]
	private void donttranslate_fallback()
	{
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0x9B6E34", Offset = "0x9B6E34", VA = "0x9B6E34")]
	private void Start()
	{
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0x9B71EC", Offset = "0x9B71EC", VA = "0x9B71EC")]
	private void Update()
	{
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0x9D2AE4", Offset = "0x9D2AE4", VA = "0x9D2AE4")]
	private void language_italian()
	{
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0x9CBD30", Offset = "0x9CBD30", VA = "0x9CBD30")]
	private void language_french()
	{
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0x9CF400", Offset = "0x9CF400", VA = "0x9CF400")]
	private void language_spanish()
	{
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0x9C1958", Offset = "0x9C1958", VA = "0x9C1958")]
	private void language_czech()
	{
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0x9BABF8", Offset = "0x9BABF8", VA = "0x9BABF8")]
	private void language_germany()
	{
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0x9BE27C", Offset = "0x9BE27C", VA = "0x9BE27C")]
	private void language_rusian()
	{
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0x9B752C", Offset = "0x9B752C", VA = "0x9B752C")]
	public void language_chinesse()
	{
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0x9C4FCC", Offset = "0x9C4FCC", VA = "0x9C4FCC")]
	public void language_japan()
	{
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0x9C8694", Offset = "0x9C8694", VA = "0x9C8694")]
	public void language_korean()
	{
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0x9D61E0", Offset = "0x9D61E0", VA = "0x9D61E0")]
	public Languages()
	{
	}
}
[Token(Token = "0x20000BD")]
public class LeaderboardScript : MonoBehaviour
{
	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] normal;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] multak;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject butony;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool zabutmulti;

	[Token(Token = "0x6000737")]
	[Address(RVA = "0xA11740", Offset = "0xA11740", VA = "0xA11740")]
	private void Start()
	{
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0xA11744", Offset = "0xA11744", VA = "0xA11744")]
	private void Update()
	{
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0xA11958", Offset = "0xA11958", VA = "0xA11958")]
	public LeaderboardScript()
	{
	}
}
[Token(Token = "0x20000BE")]
public class LetterScript : MonoBehaviour
{
	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool its_logo;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject logo;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int trafene;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static char[] pismena;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string veta;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static bool[] veta_bool;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string need_letters;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static int need_letters_num;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static int FartAndScreams;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static int[] EasterEggBuffer;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static int[] veta_pomocny;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TextMeshPro t;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool start;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float[] bliktimer;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Color col;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color premod3;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Color vyznacene;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Color original;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static bool koniec;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 original_scale;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Color zallf;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Color vypcolor;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float lftimer;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int opakuj;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private int zalopakuj;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public static int fas;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static int preboost;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private AudioSource audioVoiceFart;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private AudioSource audioVoiceScream;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public static int letterinreason;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Color letterdonecolor;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private string whitestr;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private string donestr;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private string vyznacenestr;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private string scol;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static bool needrefresh;

	[Token(Token = "0x600073A")]
	[Address(RVA = "0xA11960", Offset = "0xA11960", VA = "0xA11960")]
	private void Start()
	{
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0xA11964", Offset = "0xA11964", VA = "0xA11964")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0xA11A00", Offset = "0xA11A00", VA = "0xA11A00")]
	public static void zasah(int _trafene)
	{
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0xA12414", Offset = "0xA12414", VA = "0xA12414")]
	public LetterScript()
	{
	}
}
[Token(Token = "0x20000BF")]
public class LeviatanScrip : MonoBehaviour
{
	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Speed;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 pos;

	[Token(Token = "0x600073F")]
	[Address(RVA = "0xA125C0", Offset = "0xA125C0", VA = "0xA125C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0xA125FC", Offset = "0xA125FC", VA = "0xA125FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0xA12674", Offset = "0xA12674", VA = "0xA12674")]
	public LeviatanScrip()
	{
	}
}
[Token(Token = "0x20000C0")]
public class Lightblik : MonoBehaviour
{
	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Light l;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float f;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float timer;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float zalint;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float newint;

	[Token(Token = "0x6000742")]
	[Address(RVA = "0xA12684", Offset = "0xA12684", VA = "0xA12684")]
	private void Start()
	{
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0xA126F4", Offset = "0xA126F4", VA = "0xA126F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0xA127F4", Offset = "0xA127F4", VA = "0xA127F4")]
	public Lightblik()
	{
	}
}
[Token(Token = "0x20000C1")]
public class LineScript : MonoBehaviour
{
	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource tick;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject hand;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LineRenderer lr;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool Laser_writer;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float size;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject atrament;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LayerMask layermask;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public LayerMask layermask2;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int zalid;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int zalid2;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool zameriavac;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject terc;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool lefthand;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int num;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool only_shot;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Camera cam;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float dostrel;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool winston;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private RaycastHit[] raycastHitsArray;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int raysize;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Ray ray;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Transform point_to;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Texture2D tex;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector2 tiling;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Vector2 pixelUV;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private VRUItem1 vru;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Vector3 vec;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private bool jevru;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private int interval;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float predostrel;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Renderer laserpoint;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Vector3 hitnormal;

	[Token(Token = "0x6000745")]
	[Address(RVA = "0xA12920", Offset = "0xA12920", VA = "0xA12920")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0xA1294C", Offset = "0xA1294C", VA = "0xA1294C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0xA12A30", Offset = "0xA12A30", VA = "0xA12A30")]
	private void Update()
	{
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0xA15E2C", Offset = "0xA15E2C", VA = "0xA15E2C")]
	public LineScript()
	{
	}
}
[Token(Token = "0x20000C2")]
public class Loader : MonoBehaviour
{
	[Token(Token = "0x2000389")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9898", Offset = "0x7F9898")]
	private sealed class <Start_VR>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40023EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40023ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40023EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool start_oculus;

		[Token(Token = "0x40023EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Loader <>4__this;

		[Token(Token = "0x17000305")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60018C2")]
			[Address(RVA = "0xA164D0", Offset = "0xA164D0", VA = "0xA164D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000306")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018C4")]
			[Address(RVA = "0xA1653C", Offset = "0xA1653C", VA = "0xA1653C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018BF")]
		[Address(RVA = "0xA15F74", Offset = "0xA15F74", VA = "0xA15F74")]
		[DebuggerHidden]
		public <Start_VR>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60018C0")]
		[Address(RVA = "0xA16268", Offset = "0xA16268", VA = "0xA16268", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60018C1")]
		[Address(RVA = "0xA1626C", Offset = "0xA1626C", VA = "0xA1626C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018C3")]
		[Address(RVA = "0xA164D8", Offset = "0xA164D8", VA = "0xA164D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200038A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F98A8", Offset = "0x7F98A8")]
	private sealed class <LoadNewScene>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40023F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40023F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40023F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string sceneName;

		[Token(Token = "0x40023F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Loader <>4__this;

		[Token(Token = "0x40023F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AsyncOperation <async>5__2;

		[Token(Token = "0x17000307")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60018C8")]
			[Address(RVA = "0xA161F4", Offset = "0xA161F4", VA = "0xA161F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000308")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018CA")]
			[Address(RVA = "0xA16260", Offset = "0xA16260", VA = "0xA16260", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018C5")]
		[Address(RVA = "0xA16024", Offset = "0xA16024", VA = "0xA16024")]
		[DebuggerHidden]
		public <LoadNewScene>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60018C6")]
		[Address(RVA = "0xA16064", Offset = "0xA16064", VA = "0xA16064", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60018C7")]
		[Address(RVA = "0xA16068", Offset = "0xA16068", VA = "0xA16068", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018C9")]
		[Address(RVA = "0xA161FC", Offset = "0xA161FC", VA = "0xA161FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro _progress;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool loader_oculus;

	[Token(Token = "0x6000749")]
	[Address(RVA = "0xA15EEC", Offset = "0xA15EEC", VA = "0xA15EEC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x80348C", Offset = "0x80348C")]
	private IEnumerator Start_VR(bool start_oculus)
	{
		return null;
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0xA15FA0", Offset = "0xA15FA0", VA = "0xA15FA0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0xA15FA4", Offset = "0xA15FA4", VA = "0xA15FA4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8034F0", Offset = "0x8034F0")]
	private IEnumerator LoadNewScene(string sceneName)
	{
		return null;
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0xA16050", Offset = "0xA16050", VA = "0xA16050")]
	private void Start()
	{
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0xA16054", Offset = "0xA16054", VA = "0xA16054")]
	private void Update()
	{
	}

	[Token(Token = "0x600074E")]
	[Address(RVA = "0xA16058", Offset = "0xA16058", VA = "0xA16058")]
	public Loader()
	{
	}
}
[Token(Token = "0x20000C3")]
public class LobbyPanel : MonoBehaviourPunCallbacks, IConnectionCallbacks
{
	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject leavegame_client;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject leavegame_master;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject leavelobby_client;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SongList songlist;

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject leaderboard;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject klavesnica;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject allobj;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject koliecko;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject vrplayer1;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject platform1;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject platform2;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject laser1;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject laser2;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject emptynapis;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject netmanager;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Color[] diff;

	[Token(Token = "0x40008B7")]
	public const string PLAYER_READY = "IsPlayerReady";

	[Token(Token = "0x40008B8")]
	public const string PLAYER_LOADED_LEVEL = "PlayerLoadedLevel";

	[Token(Token = "0x40008B9")]
	public const string GO_LOADED_LEVEL = "GoLoadedLevel";

	[Token(Token = "0x40008BA")]
	public const string TEAM_NAME = "TeamName";

	[Token(Token = "0x40008BB")]
	public const string PLAYER_OBSTACLES = "UseObstacles";

	[Token(Token = "0x40008BC")]
	public const string PLAYER_HANDS = "UsedHand";

	[Token(Token = "0x40008BD")]
	public const string PLAYER_RANK = "Rank";

	[Token(Token = "0x40008BE")]
	public const string PLAYER_ID = "ID";

	[Token(Token = "0x40008BF")]
	public const string PLAYER_LEAVES = "Leaves";

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public TextMeshPro ConnectionStatusText;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TextMeshPro TeamName;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TextMeshPro playername1;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public TextMeshPro playername2;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject selectplay;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject selectrandom;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject createteam;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject waitinloby;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Dictionary<string, RoomInfo> cachedRoomList;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject[] rooms;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public TextMeshPro[] roomsname;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public TextMeshPro player1Name;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public TextMeshPro player2Name;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public TextMeshPro player1Readytext;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public TextMeshPro player2Readytext;

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public TextMeshPro player1Ranktext;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public TextMeshPro player2Ranktext;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public TextMeshPro player1Leavertext;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public TextMeshPro player2Leavertext;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public GameObject Kick;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public TextMeshPro CreateFreetext;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject player1Ready;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public GameObject player2Ready;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public GameObject startbutton;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private string[] roomnames;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private int room_count;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private readonly string connectionStatusMessage;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private string gameVersion;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string _READY;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string NOT_READY;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string IS_READY;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static int deep_in_multi;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private string freeroomName;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private string freeroom;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private int zalfiff;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	private int zalrom;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private Player other_player;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private ClientState zalclientstate;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static bool leaveisopen;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public static bool leavelobyisopen;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private AudioSource otherleavegame;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string region;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string connection_status;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string connection_server;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string connection_createroom;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static int zallang_count;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public TextMeshPro playeright;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public TextMeshPro playerleft;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private string zalregion;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private int lang_count;

	[Token(Token = "0x6000750")]
	[Address(RVA = "0xA165CC", Offset = "0xA165CC", VA = "0xA165CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0xA16660", Offset = "0xA16660", VA = "0xA16660")]
	private void Start()
	{
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0xA16750", Offset = "0xA16750", VA = "0xA16750")]
	private void Update()
	{
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0xA17F04", Offset = "0xA17F04", VA = "0xA17F04")]
	public void Onkeyboard()
	{
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0xA17F48", Offset = "0xA17F48", VA = "0xA17F48")]
	public void Offkeyboard()
	{
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0xA17F8C", Offset = "0xA17F8C", VA = "0xA17F8C", Slot = "36")]
	public override void OnJoinedLobby()
	{
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0xA1808C", Offset = "0xA1808C", VA = "0xA1808C", Slot = "45")]
	public override void OnConnectedToMaster()
	{
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0xA18264", Offset = "0xA18264", VA = "0xA18264")]
	public void CreateRoom()
	{
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0xA183B4", Offset = "0xA183B4", VA = "0xA183B4")]
	public void CreateFreeRoom()
	{
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0xA17094", Offset = "0xA17094", VA = "0xA17094")]
	public void GoLogin()
	{
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0xA18548", Offset = "0xA18548", VA = "0xA18548")]
	public void backclicknet()
	{
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0xA185DC", Offset = "0xA185DC", VA = "0xA185DC", Slot = "38")]
	public override void OnDisconnected(DisconnectCause cause)
	{
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0xA18724", Offset = "0xA18724", VA = "0xA18724")]
	public void backclick()
	{
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0xA18A28", Offset = "0xA18A28", VA = "0xA18A28")]
	public void loadandplayclick()
	{
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0xA18BCC", Offset = "0xA18BCC", VA = "0xA18BCC")]
	public void playinteamclick()
	{
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0xA18C68", Offset = "0xA18C68", VA = "0xA18C68")]
	public void playinrandomclick()
	{
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0xA18D50", Offset = "0xA18D50", VA = "0xA18D50")]
	private void UpdateCachedRoomList(List<RoomInfo> roomList)
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0xA17828", Offset = "0xA17828", VA = "0xA17828")]
	private void UpdateRoomListView()
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0xA18F64", Offset = "0xA18F64", VA = "0xA18F64", Slot = "40")]
	public override void OnRoomListUpdate(List<RoomInfo> roomList)
	{
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0xA1902C", Offset = "0xA1902C", VA = "0xA1902C", Slot = "37")]
	public override void OnLeftLobby()
	{
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0xA177B4", Offset = "0xA177B4", VA = "0xA177B4")]
	private void ClearRoomListView()
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0xA1919C", Offset = "0xA1919C", VA = "0xA1919C", Slot = "31")]
	public override void OnLeftRoom()
	{
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0xA195D8", Offset = "0xA195D8", VA = "0xA195D8", Slot = "41")]
	public override void OnJoinedRoom()
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0xA19F40", Offset = "0xA19F40", VA = "0xA19F40")]
	private void SetPlayers()
	{
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0xA1A8A4", Offset = "0xA1A8A4", VA = "0xA1A8A4", Slot = "42")]
	public override void OnPlayerEnteredRoom(Player newPlayer)
	{
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0xA1A96C", Offset = "0xA1A96C", VA = "0xA1A96C")]
	public void LeaveLobbyProcess()
	{
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0xA1AA6C", Offset = "0xA1AA6C", VA = "0xA1AA6C")]
	public void ResumeLobbyClient()
	{
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0xA1AAF0", Offset = "0xA1AAF0", VA = "0xA1AAF0")]
	public void OpenLeaveLobbyClient()
	{
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0xA1AB78", Offset = "0xA1AB78", VA = "0xA1AB78")]
	public void LeaveProcess()
	{
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0xA1AC54", Offset = "0xA1AC54", VA = "0xA1AC54")]
	public void ResumeClient()
	{
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0xA1AD3C", Offset = "0xA1AD3C", VA = "0xA1AD3C")]
	public void OpenLeaveClient()
	{
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0xA1ADF8", Offset = "0xA1ADF8", VA = "0xA1ADF8")]
	public void KickPlayer()
	{
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0xA1AE64", Offset = "0xA1AE64", VA = "0xA1AE64")]
	public void JoinToLobbyRoom(int num)
	{
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0xA1AFC8", Offset = "0xA1AFC8", VA = "0xA1AFC8")]
	public void PlayerLeftRoom(Player otherPlayer)
	{
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0xA1B11C", Offset = "0xA1B11C", VA = "0xA1B11C", Slot = "43")]
	public override void OnPlayerLeftRoom(Player otherPlayer)
	{
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0xA1B270", Offset = "0xA1B270", VA = "0xA1B270", Slot = "32")]
	public override void OnMasterClientSwitched(Player newMasterClient)
	{
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0xA1B394", Offset = "0xA1B394", VA = "0xA1B394", Slot = "47")]
	public override void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
	{
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0xA1BF64", Offset = "0xA1BF64", VA = "0xA1BF64")]
	public void ClickToReady(bool rdy)
	{
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0xA1A6D4", Offset = "0xA1A6D4", VA = "0xA1A6D4")]
	private bool CheckPlayersReady()
	{
		return default(bool);
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0xA1C104", Offset = "0xA1C104", VA = "0xA1C104")]
	public LobbyPanel()
	{
	}
}
[Token(Token = "0x20000C4")]
public class LogoBeats : MonoBehaviour
{
	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 original_scale;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool oldspectral;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float sp;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float zalsp;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float timer;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 lastvec;

	[Token(Token = "0x6000779")]
	[Address(RVA = "0xA1C368", Offset = "0xA1C368", VA = "0xA1C368")]
	private void Start()
	{
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0xA1C3A4", Offset = "0xA1C3A4", VA = "0xA1C3A4")]
	private void Update()
	{
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0xA1C5B4", Offset = "0xA1C5B4", VA = "0xA1C5B4")]
	public LogoBeats()
	{
	}
}
[Token(Token = "0x20000C5")]
public class LookTo : MonoBehaviour
{
	[Token(Token = "0x200038B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F98B8", Offset = "0x7F98B8")]
	private sealed class <HandleIt>d__188 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40023F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40023F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40023F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LookTo <>4__this;

		[Token(Token = "0x40023F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float extime;

		[Token(Token = "0x17000309")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60018CE")]
			[Address(RVA = "0xA21F20", Offset = "0xA21F20", VA = "0xA21F20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018D0")]
			[Address(RVA = "0xA21F8C", Offset = "0xA21F8C", VA = "0xA21F8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018CB")]
		[Address(RVA = "0xA1D138", Offset = "0xA1D138", VA = "0xA1D138")]
		[DebuggerHidden]
		public <HandleIt>d__188(int <>1__state)
		{
		}

		[Token(Token = "0x60018CC")]
		[Address(RVA = "0xA21DD8", Offset = "0xA21DD8", VA = "0xA21DD8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0xA21DDC", Offset = "0xA21DDC", VA = "0xA21DDC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018CF")]
		[Address(RVA = "0xA21F28", Offset = "0xA21F28", VA = "0xA21F28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ClickScript click_script;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LobbyPanel loby;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject handleft;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject handright;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SongList songlist;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RankScript _rank;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshPro ranktxt;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public RankScript _rank2;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMeshPro ranktxt2;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public RankScript _rank_alt;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TextMeshPro ranktxt_alt;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public RankScript _rank2_alt;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TextMeshPro ranktxt2_alt;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject menu_rank_alt;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject menu_rank2_alt;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject skeleton;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Renderer skeleton_renderer;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool skeleton_on;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float skeltimer;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float skeltimer2;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject menu_achievgained_alt;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject menu_achievdead;

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject can2;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject can4;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject can4_newui;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject pauza_champ;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject pauza_champ_alt;

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int helper;

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool pauza;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	public static bool bolclick;

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
	public static bool unclick;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int menu;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int menupauze;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static bool Righthanded;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private int zaloldmenu;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private int zalmenu;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static int laser;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static int startuj;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static int select_gametype;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private int zalselec_gametype;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static int select_difficulty;

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static bool odpauzuj;

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public static bool quittomenu;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public static bool Shield_left;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject laser_right;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject laser_left;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject laser_writer;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject lasery_strelba;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public bool demo;

	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x111")]
	private bool lwriter;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private float timer;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	public static bool isclicked1;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static bool isclicked2;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static int isjoyupdown;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public static bool play_klik;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public static bool is_left_target1;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static GameObject left_target1;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static bool is_right_target1;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static GameObject right_target1;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject shield_target;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static Vector3 shield_target_vector;

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public static Vector3 okforward_left;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static Vector3 okforward_right;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public static bool speedleft;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	public static bool speedright;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static float hand_distance;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public static bool stafaright;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static Vector3 okpos_left;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public static Vector3 okpos_right;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private AudioSource klik;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private AudioSource achivsound;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private AudioSource ranksound;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private AudioSource ranksound2;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static bool win_gametype_on;

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	public static bool win_songlist_on;

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
	public static bool win_difficulty_on;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9B")]
	public static bool win_profile_on;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public static bool win_setting_on;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
	public static bool win_pause_on;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9E")]
	public static bool win_weapon_on;

	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9F")]
	public static bool win_leaderboard_on;

	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static bool win_achievboard_on;

	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	public static bool win_achievgained_on;

	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
	public static bool win_steamfriends_on;

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA3")]
	public static bool win_dead_on;

	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public static bool win_credits_on;

	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
	public static bool win_quit_on;

	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA6")]
	public static bool win_keyboard_on;

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA7")]
	public static bool win_rank_on;

	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static bool win_rank2_on;

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	public static bool win_newleader_on;

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAA")]
	public static bool win_multak_on;

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAB")]
	public static bool win_champ_on;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public static bool win_theme_on;

	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
	public static bool win_download_on;

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private int zalsettingmenu;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public bool trening;

	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private float achievtimer;

	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private bool show_achiev;

	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14D")]
	private bool show_rank;

	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Achiev achi;

	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public static int _achiev_x;

	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public static int _achiev_y;

	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private bool waittocontroll;

	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private float resettimer;

	[Token(Token = "0x4000961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private float ranktimer;

	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private float ranktimer2;

	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static int needloadleaderboard;

	[Token(Token = "0x4000964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private bool isstart;

	[Token(Token = "0x4000965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x169")]
	private bool uprank;

	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16A")]
	private bool uprank2;

	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private Vector3 zalrls;

	[Token(Token = "0x4000968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Vector3 zalrls2;

	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private float startdelay;

	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public static int zapnileadra;

	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private Camera cam;

	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public static bool dash;

	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private bool zaldash;

	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	private int zalbothhand;

	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	public static bool but_multi;

	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public static int iamplayer;

	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public static byte other_player_boothand;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	public static byte other_player_rank;

	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCA")]
	public static bool other_player_obstacles;

	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public static string other_player_id;

	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public static byte other_player_avatar_type;

	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
	public static byte other_player_avatar_change;

	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDA")]
	public static byte player_win;

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDB")]
	public static byte other_player_leaves;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public static bool other_player_pause;

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
	public static bool other_player_unpause;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDE")]
	public static bool connect_begin;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDF")]
	public static bool deb;

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public static bool zhasnilaser;

	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
	public static bool zapnilaser;

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE2")]
	public static bool dontneed_laser;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE3")]
	public static bool camerasetting_on;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public static bool but_champ;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public static Color global_yellow;

	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public static Color global_blue;

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public Color original_yellow;

	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Color original_blue;

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public static Color original_global_yellow;

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public static Color original_global_blue;

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public static Color last_global_yellow;

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public static Color last_global_blue;

	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public static int symbol_yellow;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public static int symbol_blue;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public static int yellowchange;

	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public static int bluechange;

	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public static bool champ_pauza;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public Transform fakesvetlo;

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public Transform kamerastage;

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public Transform legs;

	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x159")]
	public static bool seat_mode;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15A")]
	public static bool zalseat_mode;

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public static string col_yellow;

	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public static string col_blue;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public static bool IsQuest2;

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x171")]
	public static bool IsQuest;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x172")]
	public static bool IsGo;

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	public static int channel;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public static float amplitude;

	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	public static float duration;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public static bool call_recenter;

	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public GameObject new_leader_win;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public GameObject new_logo_win;

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public GameObject platno_center;

	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x181")]
	public static bool quick_playing;

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public static float[] stat_kalorie;

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public static float[] stat_accuracy;

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public static float[] stat_strange;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public static float vertical_change_sword;

	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	public static float vertical_change_staff;

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public static Vector3 new_hand_position;

	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	public static Vector3 new_hand_rotation;

	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public static bool change_new_hand_pos;

	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C1")]
	public static bool change_new_hand_rot;

	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C2")]
	public static bool available_click;

	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C3")]
	public static bool other_player_leaved_from_lobby;

	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	public static bool other_player_leaved_from_song;

	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C5")]
	public static bool _use_voice_chat;

	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C6")]
	public static bool prescroll;

	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private int Rthumb;

	[Token(Token = "0x600077C")]
	[Address(RVA = "0xA1C68C", Offset = "0xA1C68C", VA = "0xA1C68C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0xA1C804", Offset = "0xA1C804", VA = "0xA1C804")]
	public void pauses_on(int typ_pauzy)
	{
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0xA1C9B8", Offset = "0xA1C9B8", VA = "0xA1C9B8")]
	public void pauses_off(int typ_pauzy)
	{
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0xA1CBC0", Offset = "0xA1CBC0", VA = "0xA1CBC0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0xA1D0B4", Offset = "0xA1D0B4", VA = "0xA1D0B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x803554", Offset = "0x803554")]
	private IEnumerator HandleIt(float extime)
	{
		return null;
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0xA1CF44", Offset = "0xA1CF44", VA = "0xA1CF44")]
	public void re_center(bool mode)
	{
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0xA1D164", Offset = "0xA1D164", VA = "0xA1D164")]
	private void Update()
	{
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0xA219E4", Offset = "0xA219E4", VA = "0xA219E4")]
	public LookTo()
	{
	}
}
[Token(Token = "0x20000C6")]
public class Mod360 : MonoBehaviour
{
	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float move_after_sec;

	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float posun;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float timer;

	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float timer2;

	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform vertical_ring;

	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform horizontal_ring;

	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform inner_ring;

	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform outer_ring;

	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform prerotator;

	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform gui360;

	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3 new_position360;

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool _vertical;

	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	public bool _horizontal;

	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float old_angle_vert;

	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float new_angle_vert;

	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float old_angle_hor;

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float new_angle_hor;

	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int max_up;

	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int max_down;

	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int max_hor;

	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int count_vert;

	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int count_hor;

	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int start_vertical;

	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int start_horizontal;

	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float vtime;

	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float htime;

	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Renderer sipka_left;

	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Renderer sipka_right;

	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Renderer sipka_up;

	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Renderer sipka_down;

	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Color sipka_color;

	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Color sipka_color_off;

	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool vypzap;

	[Token(Token = "0x40009D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject podstavec;

	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject podstavec2;

	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool zal360;

	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private int zal_real360;

	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static System.Random rotateRandom;

	[Token(Token = "0x6000785")]
	[Address(RVA = "0xA281F4", Offset = "0xA281F4", VA = "0xA281F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0xA28260", Offset = "0xA28260", VA = "0xA28260")]
	private void SettingAngles()
	{
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0xA284E4", Offset = "0xA284E4", VA = "0xA284E4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0xA29350", Offset = "0xA29350", VA = "0xA29350")]
	public Mod360()
	{
	}
}
[Token(Token = "0x20000C7")]
public class ModingScript : MonoBehaviour
{
	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ConcertEffectsScript concert;

	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip[] saw_shots_blades;

	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip[] new_saw_shots_blades;

	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Explosions modingaudio;

	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool zalmodingaudio;

	[Token(Token = "0x600078A")]
	[Address(RVA = "0xA29378", Offset = "0xA29378", VA = "0xA29378")]
	private void Start()
	{
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0xA2993C", Offset = "0xA2993C", VA = "0xA2993C")]
	private void Update()
	{
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0xA29E64", Offset = "0xA29E64", VA = "0xA29E64")]
	public ModingScript()
	{
	}
}
[Token(Token = "0x20000C8")]
public class WavUtility
{
	[Token(Token = "0x40009DB")]
	private const int BlockSize_16Bit = 2;

	[Token(Token = "0x600078D")]
	[Address(RVA = "0x12862A0", Offset = "0x12862A0", VA = "0x12862A0")]
	public static AudioClip ToAudioClip(string filePath)
	{
		return null;
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0x12863A0", Offset = "0x12863A0", VA = "0x12863A0")]
	public static AudioClip ToAudioClip(byte[] fileBytes, int offsetSamples = 0, string name = "wav")
	{
		return null;
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0x12866DC", Offset = "0x12866DC", VA = "0x12866DC")]
	private static float[] Convert8BitByteArrayToAudioClipData(byte[] source, int headerOffset, int dataSize)
	{
		return null;
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0x12867EC", Offset = "0x12867EC", VA = "0x12867EC")]
	private static float[] Convert16BitByteArrayToAudioClipData(byte[] source, int headerOffset, int dataSize)
	{
		return null;
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0x128693C", Offset = "0x128693C", VA = "0x128693C")]
	private static float[] Convert24BitByteArrayToAudioClipData(byte[] source, int headerOffset, int dataSize)
	{
		return null;
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0x1286ACC", Offset = "0x1286ACC", VA = "0x1286ACC")]
	private static float[] Convert32BitByteArrayToAudioClipData(byte[] source, int headerOffset, int dataSize)
	{
		return null;
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0x1286C1C", Offset = "0x1286C1C", VA = "0x1286C1C")]
	public static byte[] SaveAudioClip(AudioClip audioClip, string filepath)
	{
		return null;
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0x1286D30", Offset = "0x1286D30", VA = "0x1286D30")]
	private static int WriteFileHeader(ref MemoryStream stream, int fileSize)
	{
		return default(int);
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0x1286E34", Offset = "0x1286E34", VA = "0x1286E34")]
	private static int WriteFileFormat(ref MemoryStream stream, int channels, int sampleRate, ushort bitDepth)
	{
		return default(int);
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0x1287018", Offset = "0x1287018", VA = "0x1287018")]
	private static int WriteFileData(ref MemoryStream stream, AudioClip audioClip, ushort bitDepth)
	{
		return default(int);
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0x12871EC", Offset = "0x12871EC", VA = "0x12871EC")]
	private static byte[] ConvertAudioClipDataToInt16ByteArray(float[] data)
	{
		return null;
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0x1287198", Offset = "0x1287198", VA = "0x1287198")]
	private static int WriteBytesToMemoryStream(ref MemoryStream stream, byte[] bytes, string tag = "")
	{
		return default(int);
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0x1287364", Offset = "0x1287364", VA = "0x1287364")]
	public static ushort BitDepth(AudioClip audioClip)
	{
		return default(ushort);
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0x12871E4", Offset = "0x12871E4", VA = "0x12871E4")]
	private static int BytesPerSample(ushort bitDepth)
	{
		return default(int);
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0x128743C", Offset = "0x128743C", VA = "0x128743C")]
	private static int BlockSize(ushort bitDepth)
	{
		return default(int);
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0x12865B4", Offset = "0x12865B4", VA = "0x12865B4")]
	private static string FormatCode(ushort code)
	{
		return null;
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0x1287520", Offset = "0x1287520", VA = "0x1287520")]
	public WavUtility()
	{
	}
}
[Token(Token = "0x20000C9")]
public class MoveWin : MonoBehaviour
{
	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 original;

	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 original_right;

	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int move_right;

	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int move_left;

	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool state_after_move;

	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float right;

	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float timer;

	[Token(Token = "0x600079E")]
	[Address(RVA = "0x9D7BA8", Offset = "0x9D7BA8", VA = "0x9D7BA8")]
	private void Start()
	{
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0x9D7BF0", Offset = "0x9D7BF0", VA = "0x9D7BF0")]
	private void Update()
	{
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0x9D7E94", Offset = "0x9D7E94", VA = "0x9D7E94")]
	public MoveWin()
	{
	}
}
[Token(Token = "0x20000CA")]
public class multion : MonoBehaviour
{
	[Token(Token = "0x60007A1")]
	[Address(RVA = "0x129643C", Offset = "0x129643C", VA = "0x129643C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0x12964D8", Offset = "0x12964D8", VA = "0x12964D8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0x1296570", Offset = "0x1296570", VA = "0x1296570")]
	public multion()
	{
	}
}
[Token(Token = "0x20000CB")]
public class Neonscript : MonoBehaviour
{
	[Token(Token = "0x40009E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float start_at;

	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer ren;

	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool svieti;

	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioSource potlesk;

	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] notystart;

	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 endpos;

	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Vector3 startpos;

	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 endscale;

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float timer;

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0x9D8084", Offset = "0x9D8084", VA = "0x9D8084")]
	private void Start()
	{
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0x9D8194", Offset = "0x9D8194", VA = "0x9D8194")]
	private void Update()
	{
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0x9D84B8", Offset = "0x9D84B8", VA = "0x9D84B8")]
	public Neonscript()
	{
	}
}
[Token(Token = "0x20000CC")]
public class NetGameManager : MonoBehaviourPunCallbacks
{
	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SongList songlist;

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject leaderboard;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshPro p1_boost;

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshPro p1_score;

	[Token(Token = "0x40009F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshPro p1_average;

	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshPro p2_boost;

	[Token(Token = "0x40009F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshPro p2_score;

	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMeshPro p2_average;

	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int p1_hit;

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int p1_b;

	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int p1_s;

	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int p1_a;

	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int p2_hit;

	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static int p2_b;

	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static int p2_s;

	[Token(Token = "0x40009FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static int p2_a;

	[Token(Token = "0x40009FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMeshPro p1_stav;

	[Token(Token = "0x40009FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TextMeshPro p2_stav;

	[Token(Token = "0x40009FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TextMeshPro p1_vysledok;

	[Token(Token = "0x40009FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TextMeshPro p2_vysledok;

	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static int p1_spolu;

	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static int p2_spolu;

	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TextMeshPro p1_stav_new;

	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public TextMeshPro p2_stav_new;

	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TextMeshPro p1_vysledok_new;

	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public TextMeshPro p2_vysledok_new;

	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int zalp1_spolu;

	[Token(Token = "0x4000A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private int zalp2_spolu;

	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int zalp1_hit;

	[Token(Token = "0x4000A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int zalp2_hit;

	[Token(Token = "0x4000A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public players pl;

	[Token(Token = "0x4000A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject winstonlaser_right;

	[Token(Token = "0x4000A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject winstonlaser_left;

	[Token(Token = "0x4000A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject selectsongs;

	[Token(Token = "0x4000A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject selectdiff;

	[Token(Token = "0x4000A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public ClickScript clickscript;

	[Token(Token = "0x4000A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject allobj;

	[Token(Token = "0x4000A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject allobj_alternative;

	[Token(Token = "0x4000A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject vrplayer1;

	[Token(Token = "0x4000A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject platform1;

	[Token(Token = "0x4000A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject platform2;

	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Vector3 platform1_pos;

	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private Vector3 platform2_pos;

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Vector3 platform1_end_pos;

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private Vector3 platform2_end_pos;

	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public GameObject player1;

	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject player2;

	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private float platform_distance;

	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static NetGameManager Instance;

	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private float timerstart;

	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static byte func;

	[Token(Token = "0x4000A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public static byte param;

	[Token(Token = "0x4000A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static PhotonView pv;

	[Token(Token = "0x4000A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private bool afterstart;

	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private float sendtimer_score;

	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private bool zalpauza;

	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x159")]
	private bool zalunpauza;

	[Token(Token = "0x4000A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private int zalhitscore;

	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private int zalcombo;

	[Token(Token = "0x4000A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	public Color cscore;

	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	public Color c10;

	[Token(Token = "0x4000A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	public Color c25;

	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	public Color c50;

	[Token(Token = "0x4000A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	public Color c75;

	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	public Color c100;

	[Token(Token = "0x4000A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private string scscore;

	[Token(Token = "0x4000A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private string sc10;

	[Token(Token = "0x4000A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private string sc25;

	[Token(Token = "0x4000A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private string sc50;

	[Token(Token = "0x4000A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private string sc75;

	[Token(Token = "0x4000A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private string sc100;

	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static bool leav_or_end;

	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private float endtimer;

	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	private bool endgame;

	[Token(Token = "0x4000A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private AudioSource ding;

	[Token(Token = "0x4000A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private AudioSource otherfailed;

	[Token(Token = "0x4000A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private AudioSource otherleavelevel;

	[Token(Token = "0x4000A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private AudioSource otherleavegame;

	[Token(Token = "0x4000A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private AudioSource youwin;

	[Token(Token = "0x4000A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private AudioSource youlost;

	[Token(Token = "0x4000A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private bool preset;

	[Token(Token = "0x4000A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x231")]
	private bool sfailed;

	[Token(Token = "0x4000A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public GameObject play;

	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public GameObject noplay;

	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static GameObject _play;

	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static GameObject _noplay;

	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public LobbyPanel _lobbypanel;

	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public GameObject microphone_obj;

	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	private byte zalavatartype;

	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x259")]
	private byte zalavatarchange;

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0x9D84CC", Offset = "0x9D84CC", VA = "0x9D84CC")]
	public void Awake()
	{
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0x9D87D4", Offset = "0x9D87D4", VA = "0x9D87D4", Slot = "29")]
	public override void OnDisable()
	{
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0x9D8A5C", Offset = "0x9D8A5C", VA = "0x9D8A5C", Slot = "28")]
	public override void OnEnable()
	{
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0x9D9700", Offset = "0x9D9700", VA = "0x9D9700")]
	public void setvysledok(bool beforeplay)
	{
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0x9DB0C4", Offset = "0x9DB0C4", VA = "0x9DB0C4")]
	public void setscore()
	{
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0x9DB2AC", Offset = "0x9DB2AC", VA = "0x9DB2AC")]
	[PunRPC]
	public void DiffWindow(bool open)
	{
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0x9DB408", Offset = "0x9DB408", VA = "0x9DB408")]
	public static void setlaser(byte num)
	{
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0x9DB548", Offset = "0x9DB548", VA = "0x9DB548")]
	[PunRPC]
	public void Laser(byte num)
	{
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0x9DB6A4", Offset = "0x9DB6A4", VA = "0x9DB6A4")]
	public static void setdiff(byte num)
	{
	}

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0x9DB7E4", Offset = "0x9DB7E4", VA = "0x9DB7E4")]
	[PunRPC]
	public void Diff(byte sdif)
	{
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0x9DB978", Offset = "0x9DB978", VA = "0x9DB978")]
	public static void songclick(byte album, string id, byte bolclick, byte sdif)
	{
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0x9DBBB4", Offset = "0x9DBBB4", VA = "0x9DBBB4")]
	[PunRPC]
	public void Song_select(byte album, string id, byte bolclick, byte sdif)
	{
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0x9DBDE8", Offset = "0x9DBDE8", VA = "0x9DBDE8")]
	[PunRPC]
	public void Song_exist(bool _songexist)
	{
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0x9DBEC8", Offset = "0x9DBEC8", VA = "0x9DBEC8")]
	public static void endplay()
	{
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0x9DC024", Offset = "0x9DC024", VA = "0x9DC024")]
	[PunRPC]
	public void Endplaystart()
	{
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0x9DC0D8", Offset = "0x9DC0D8", VA = "0x9DC0D8")]
	public static void setplay()
	{
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0x9DC234", Offset = "0x9DC234", VA = "0x9DC234")]
	[PunRPC]
	public void playstart()
	{
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0x9DC2E8", Offset = "0x9DC2E8", VA = "0x9DC2E8")]
	public static void setfailed()
	{
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0x9DC46C", Offset = "0x9DC46C", VA = "0x9DC46C")]
	[PunRPC]
	public void failedplay()
	{
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0x9DC560", Offset = "0x9DC560", VA = "0x9DC560", Slot = "43")]
	public override void OnPlayerLeftRoom(Player otherPlayer)
	{
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0x9DC614", Offset = "0x9DC614", VA = "0x9DC614")]
	public static void setleave()
	{
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0x9DC734", Offset = "0x9DC734", VA = "0x9DC734")]
	[PunRPC]
	public void leaveplay()
	{
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0x9DC828", Offset = "0x9DC828", VA = "0x9DC828")]
	public static void setleavegame()
	{
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0x9DC980", Offset = "0x9DC980", VA = "0x9DC980")]
	[PunRPC]
	public void leavegame()
	{
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0x9DCA74", Offset = "0x9DCA74", VA = "0x9DCA74")]
	public void Start()
	{
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0x9DCBC8", Offset = "0x9DCBC8", VA = "0x9DCBC8")]
	private void Update()
	{
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0x9DEA3C", Offset = "0x9DEA3C", VA = "0x9DEA3C", Slot = "47")]
	public override void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
	{
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0x9DE8F4", Offset = "0x9DE8F4", VA = "0x9DE8F4")]
	private bool CheckAllPlayerLoadedLevel()
	{
		return default(bool);
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0x9DECBC", Offset = "0x9DECBC", VA = "0x9DECBC")]
	public NetGameManager()
	{
	}
}
[Token(Token = "0x20000CD")]
public class NewObjectPoolerScript : MonoBehaviour
{
	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject pooledObject;

	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int pooledAmount;

	[Token(Token = "0x4000A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool willGrow;

	[Token(Token = "0x4000A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<GameObject> pooledObjects;

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0x9DED8C", Offset = "0x9DED8C", VA = "0x9DED8C")]
	private void Start()
	{
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0x9DEE94", Offset = "0x9DEE94", VA = "0x9DEE94")]
	public void ChangeColor(Color newcolor)
	{
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0x9DEF98", Offset = "0x9DEF98", VA = "0x9DEF98")]
	public GameObject GetPooledObject()
	{
		return null;
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0x9DF0EC", Offset = "0x9DF0EC", VA = "0x9DF0EC")]
	public NewObjectPoolerScript()
	{
	}
}
[Token(Token = "0x20000CE")]
public class NewQuite : MonoBehaviour
{
	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer _not;

	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer _quite;

	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer _my;

	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Renderer _tempo;

	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 scale_not;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 scale_quite;

	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 scale_my;

	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 scale_tempo;

	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 scale_not_big;

	[Token(Token = "0x4000A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 scale_quite_big;

	[Token(Token = "0x4000A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 scale_my_big;

	[Token(Token = "0x4000A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 scale_tempo_big;

	[Token(Token = "0x4000A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Color32 col_not;

	[Token(Token = "0x4000A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Color32 col_quite;

	[Token(Token = "0x4000A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Color32 col_my;

	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Color32 col_tempo;

	[Token(Token = "0x4000A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public int starting;

	[Token(Token = "0x4000A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int _starting;

	[Token(Token = "0x4000A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float timer1;

	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float timer2;

	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float vac;

	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool zaciatok;

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0x9DF104", Offset = "0x9DF104", VA = "0x9DF104")]
	private void Start()
	{
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0x9DF360", Offset = "0x9DF360", VA = "0x9DF360")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0x9DF374", Offset = "0x9DF374", VA = "0x9DF374")]
	private void Update()
	{
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0x9DFC14", Offset = "0x9DFC14", VA = "0x9DFC14")]
	public NewQuite()
	{
	}
}
[Token(Token = "0x20000CF")]
public class NewRotateScript : MonoBehaviour
{
	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float RotateSpeed;

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool rotatex;

	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool rotatey;

	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool rotatez;

	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	public bool aktive;

	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer ren;

	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool pulze;

	[Token(Token = "0x4000A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 lscale;

	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 nscale;

	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float pulzetime;

	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool stav;

	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Color zcolor;

	[Token(Token = "0x4000A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool Randomrotate;

	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	public bool wave_at_hit;

	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	public bool left;

	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int hitright;

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int hitleft;

	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float timerhit;

	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float state;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float oneskorenie;

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0x9DFC2C", Offset = "0x9DFC2C", VA = "0x9DFC2C")]
	private void Start()
	{
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0x9DFD7C", Offset = "0x9DFD7C", VA = "0x9DFD7C")]
	private void Update()
	{
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0x9E036C", Offset = "0x9E036C", VA = "0x9E036C")]
	public NewRotateScript()
	{
	}
}
[Token(Token = "0x20000D0")]
public class ObstaclesMover : MonoBehaviour
{
	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float speed2;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 pos;

	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float tim;

	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float zalz;

	[Token(Token = "0x4000A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float zalx;

	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float zalx_end;

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool leftright;

	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public bool updown;

	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 lrpos;

	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject leftright_laser;

	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool lrstav;

	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool toplaser;

	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	public bool head_obstacle;

	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
	public bool use1;

	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject top1;

	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool use2;

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject top2;

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool use3;

	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject top3;

	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool use4;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject top4;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool use5;

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject top5;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int songrun;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float timerchange;

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float change_after;

	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private bool zmenstranu;

	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float impulse;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public bool disco;

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public int _odraz;

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Vector3 aktual_pos;

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Transform _odraz_transform;

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0x9E03A0", Offset = "0x9E03A0", VA = "0x9E03A0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0x9E0654", Offset = "0x9E0654", VA = "0x9E0654")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0x9E0710", Offset = "0x9E0710", VA = "0x9E0710")]
	private void Destro()
	{
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0x9E0738", Offset = "0x9E0738", VA = "0x9E0738")]
	private void Update()
	{
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0x9E0B4C", Offset = "0x9E0B4C", VA = "0x9E0B4C")]
	public ObstaclesMover()
	{
	}
}
[Token(Token = "0x20000D1")]
public class Odraz : MonoBehaviour
{
	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int gula_type;

	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int side;

	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int zalside;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject sphera;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool use_hup;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject hup;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 original;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AudioSource audioBoom_Box;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AudioSource audioBoom_Saw;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AudioSource audioDestroy;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AudioSource audioBoom_Blades;

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private AudioSource audioBoom_Shots;

	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private AudioSource audioBoom_Farts;

	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private AudioSource audioBoom_Screams;

	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private AudioSource audioBoom_dager;

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject ps;

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject ps1;

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject ps2;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject ps3;

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject pologula;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject pologula2;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject stred;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject[] variacie;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Transform[] smer;

	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float[] mag;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject trailvypinac;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private bool otoc;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private float timer;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Vector3 orpos;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private Vector3 savedVelocity;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Vector3 savedAngularVelocity;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private bool ispause;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x115")]
	public bool shield_hit;

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private float sh_timer;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private bool sh_hit;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Color zalecolor;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Texture2D kill_texture;

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Color ecolor;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public int letter;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private Vector3 zalscale;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Rigidbody rigidb;

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Vector3 zalvel;

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private Vector3 zalangular;

	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private float veltimer;

	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private Collider collid;

	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private float ran;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private float huptimer;

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public bool test;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x191")]
	private bool zostrelne;

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x192")]
	private bool dea;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x193")]
	private bool tchange;

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	private Vector3 cpoint;

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private Vector3 spoint;

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	private Vector3 contact_forward;

	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private float destro_speed;

	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	public int ans_num;

	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private AnimSphere ans;

	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private int gametype;

	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	private float endtime;

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private bool IsDestroyTime;

	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D1")]
	private bool aright;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D2")]
	private bool odraz_lefthand;

	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D3")]
	private bool odraz_righthand;

	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	private bool odraz_bluelaser;

	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D5")]
	private bool odraz_yellowlaser;

	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D6")]
	private bool strela_blue;

	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D7")]
	private bool strela_yellow;

	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private bool anyyes;

	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D9")]
	private bool aleft;

	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DA")]
	private bool beatrdy;

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	private float staff_blades_score;

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private int staff_blades_score2;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	private float tonfa_score;

	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private Vector3 rotside;

	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
	private bool dead_sphera;

	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private Vector3 ok_forward;

	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
	private Vector3 ok_pos;

	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public Material inside_mat;

	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private int checkcount;

	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private Rigidbody r1;

	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private Rigidbody r2;

	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private float destrotimer;

	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
	private int rozdiel;

	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private int spolu;

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
	private int lavy;

	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private int pravy;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
	private bool schange;

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private Vector3 bladescale;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
	private float impulse;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	private bool good_hit;

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
	private int zalsymbolyellow;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	private int zalsymbolblue;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
	private float soundvolume;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	private float speed360;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
	public bool chrobak;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public GameObject obj_chrobak;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private float nextvolume;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
	public bool diamond;

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0x9E0B88", Offset = "0x9E0B88", VA = "0x9E0B88")]
	public void SetAns(int num)
	{
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0x9E0C90", Offset = "0x9E0C90", VA = "0x9E0C90")]
	private void OnPauseGame()
	{
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0x9E0CF4", Offset = "0x9E0CF4", VA = "0x9E0CF4")]
	private void OnResumeGame()
	{
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0x9E0D60", Offset = "0x9E0D60", VA = "0x9E0D60")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0x9E0E90", Offset = "0x9E0E90", VA = "0x9E0E90")]
	private void Start()
	{
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0x9E10B4", Offset = "0x9E10B4", VA = "0x9E10B4")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0x9E1834", Offset = "0x9E1834", VA = "0x9E1834")]
	public void Setside(int i, float etime, bool left)
	{
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0x9E1930", Offset = "0x9E1930", VA = "0x9E1930")]
	private void Update()
	{
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0x9E23D8", Offset = "0x9E23D8", VA = "0x9E23D8")]
	private void checkdestroy()
	{
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0x9E28A8", Offset = "0x9E28A8", VA = "0x9E28A8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0x9E2704", Offset = "0x9E2704", VA = "0x9E2704")]
	private void deaktivuj()
	{
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0x9E22A0", Offset = "0x9E22A0", VA = "0x9E22A0")]
	private void Destro()
	{
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0x9E2DD0", Offset = "0x9E2DD0", VA = "0x9E2DD0")]
	private void OnCollisionEnter(Collision col)
	{
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0x9E6C40", Offset = "0x9E6C40", VA = "0x9E6C40")]
	public void prekolizia(bool right, bool beatready)
	{
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0x9E3384", Offset = "0x9E3384", VA = "0x9E3384")]
	public void kolizia(Vector3 contact_point, Vector3 contact_normal)
	{
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0x9E6E6C", Offset = "0x9E6E6C", VA = "0x9E6E6C")]
	private void PreGraf(float _power, float _accuracy)
	{
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0x9E6D50", Offset = "0x9E6D50", VA = "0x9E6D50")]
	private void Aktivuj(int sscore)
	{
	}

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0x9E7044", Offset = "0x9E7044", VA = "0x9E7044")]
	public static int Accuracy(Vector3 p, Vector3 e, Vector3 s)
	{
		return default(int);
	}

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0x9E71B8", Offset = "0x9E71B8", VA = "0x9E71B8")]
	public Odraz()
	{
	}
}
[Token(Token = "0x20000D2")]
public class OdrazFake : MonoBehaviour
{
	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int gula_type;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int side;

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int zalside;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject sphera;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool use_hup;

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject hup;

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 original;

	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AudioSource audioBoom_Box;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AudioSource audioBoom_Saw;

	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AudioSource audioDestroy;

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AudioSource audioBoom_Blades;

	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private AudioSource audioBoom_Shots;

	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private AudioSource audioBoom_Farts;

	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private AudioSource audioBoom_Screams;

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private AudioSource audioBoom_dager;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject ps;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject ps2;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject pologula;

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject stred;

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject[] variacie;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float[] mag;

	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject trailvypinac;

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool otoc;

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float timer;

	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Vector3 orpos;

	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private Vector3 savedVelocity;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Vector3 savedAngularVelocity;

	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private bool ispause;

	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float sh_timer;

	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private bool sh_hit;

	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Color zalecolor;

	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Color ecolor;

	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public int letter;

	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private Vector3 zalscale;

	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Rigidbody rigidb;

	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Vector3 zalvel;

	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private Vector3 zalangular;

	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private float veltimer;

	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Collider collid;

	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private float ran;

	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private float huptimer;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private bool dea;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x169")]
	private bool tchange;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private Vector3 cpoint;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Vector3 spoint;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private Vector3 contact_forward;

	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private float destro_speed;

	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	public int ans_num;

	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private AnimSphere ans;

	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private int gametype;

	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	private float endtime;

	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private bool IsDestroyTime;

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A9")]
	private bool aright;

	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AA")]
	private bool odraz_lefthand;

	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AB")]
	private bool odraz_righthand;

	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	private bool anyyes;

	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AD")]
	private bool aleft;

	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private Vector3 rotside;

	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	private bool dead_sphera;

	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private Vector3 ok_forward;

	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	private Vector3 ok_pos;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private int checkcount;

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private Rigidbody r1;

	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private Rigidbody r2;

	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private float destrotimer;

	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
	private bool schange;

	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private float impulse;

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0x9E72EC", Offset = "0x9E72EC", VA = "0x9E72EC")]
	public void SetAns(int num)
	{
	}

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0x9E7310", Offset = "0x9E7310", VA = "0x9E7310")]
	private void OnPauseGame()
	{
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0x9E7370", Offset = "0x9E7370", VA = "0x9E7370")]
	private void OnResumeGame()
	{
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0x9E73D8", Offset = "0x9E73D8", VA = "0x9E73D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0x9E7508", Offset = "0x9E7508", VA = "0x9E7508")]
	private void Start()
	{
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0x9E75CC", Offset = "0x9E75CC", VA = "0x9E75CC")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0x9E77B4", Offset = "0x9E77B4", VA = "0x9E77B4")]
	public void Setside(int i, float etime, bool left)
	{
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0x9E78B0", Offset = "0x9E78B0", VA = "0x9E78B0")]
	private void Update()
	{
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0x9E7CB0", Offset = "0x9E7CB0", VA = "0x9E7CB0")]
	private void checkdestroy()
	{
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0x9E7E8C", Offset = "0x9E7E8C", VA = "0x9E7E8C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0x9E7DF0", Offset = "0x9E7DF0", VA = "0x9E7DF0")]
	private void deaktivuj()
	{
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0x9E7C3C", Offset = "0x9E7C3C", VA = "0x9E7C3C")]
	private void Destro()
	{
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0x9E8320", Offset = "0x9E8320", VA = "0x9E8320")]
	private void OnCollisionEnter(Collision col)
	{
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0x9E8900", Offset = "0x9E8900", VA = "0x9E8900")]
	public void prekolizia(bool right, bool beatready)
	{
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0x9E858C", Offset = "0x9E858C", VA = "0x9E858C")]
	public void kolizia(Vector3 contact_point, Vector3 contact_normal)
	{
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0x9E89F0", Offset = "0x9E89F0", VA = "0x9E89F0")]
	public OdrazFake()
	{
	}
}
[Token(Token = "0x20000D3")]
public class OffAnimAuto : MonoBehaviour
{
	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject go;

	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TrailRenderer tr;

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0x9E8AD4", Offset = "0x9E8AD4", VA = "0x9E8AD4")]
	private void Start()
	{
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0x9E8B2C", Offset = "0x9E8B2C", VA = "0x9E8B2C")]
	public void offhim()
	{
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0x9E8B6C", Offset = "0x9E8B6C", VA = "0x9E8B6C")]
	public OffAnimAuto()
	{
	}
}
[Token(Token = "0x20000D4")]
public class Offset_Oculus : MonoBehaviour
{
	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 oculus_position;

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 oculus_rotation;

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0x9E8B74", Offset = "0x9E8B74", VA = "0x9E8B74")]
	private void Start()
	{
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0x9E8C30", Offset = "0x9E8C30", VA = "0x9E8C30")]
	public Offset_Oculus()
	{
	}
}
[Token(Token = "0x20000D5")]
public class OkForward : MonoBehaviour
{
	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool left;

	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 oldpos;

	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool delta;

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0x9E8C38", Offset = "0x9E8C38", VA = "0x9E8C38")]
	private void Start()
	{
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0x9E8C3C", Offset = "0x9E8C3C", VA = "0x9E8C3C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0x9E9040", Offset = "0x9E9040", VA = "0x9E9040")]
	public OkForward()
	{
	}
}
[Token(Token = "0x20000D6")]
public class OkHit : MonoBehaviour
{
	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject stred;

	[Token(Token = "0x6000800")]
	[Address(RVA = "0x9E9048", Offset = "0x9E9048", VA = "0x9E9048")]
	public OkHit()
	{
	}
}
[Token(Token = "0x20000D7")]
public class OnIfNoGO : MonoBehaviour
{
	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] island;

	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] island_off;

	[Token(Token = "0x6000801")]
	[Address(RVA = "0x9E9050", Offset = "0x9E9050", VA = "0x9E9050")]
	private void Start()
	{
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0x9E91D0", Offset = "0x9E91D0", VA = "0x9E91D0")]
	public OnIfNoGO()
	{
	}
}
[Token(Token = "0x20000D8")]
public class OpenweaponScript : MonoBehaviour
{
	[Token(Token = "0x4000B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] all;

	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject openwin;

	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int state;

	[Token(Token = "0x4000B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float timer;

	[Token(Token = "0x4000B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 norm;

	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 big;

	[Token(Token = "0x6000803")]
	[Address(RVA = "0x9E91D8", Offset = "0x9E91D8", VA = "0x9E91D8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000804")]
	[Address(RVA = "0x9E9310", Offset = "0x9E9310", VA = "0x9E9310")]
	private void Start()
	{
	}

	[Token(Token = "0x6000805")]
	[Address(RVA = "0x9E9314", Offset = "0x9E9314", VA = "0x9E9314")]
	private void Update()
	{
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0x9E94F0", Offset = "0x9E94F0", VA = "0x9E94F0")]
	public OpenweaponScript()
	{
	}
}
[Token(Token = "0x20000D9")]
public class OtacatkoScript : MonoBehaviour
{
	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float cosnum;

	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float nnum;

	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float huptimer;

	[Token(Token = "0x6000807")]
	[Address(RVA = "0x9E9580", Offset = "0x9E9580", VA = "0x9E9580")]
	private void Start()
	{
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0x9E9584", Offset = "0x9E9584", VA = "0x9E9584")]
	private void Update()
	{
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0x9E9690", Offset = "0x9E9690", VA = "0x9E9690")]
	public OtacatkoScript()
	{
	}
}
[Token(Token = "0x20000DA")]
public class Ownershiptransform : MonoBehaviourPun, IPunOwnershipCallbacks
{
	[Token(Token = "0x600080A")]
	[Address(RVA = "0x9E9B28", Offset = "0x9E9B28", VA = "0x9E9B28")]
	private void Awake()
	{
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0x9E9B90", Offset = "0x9E9B90", VA = "0x9E9B90")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0x9E9BF8", Offset = "0x9E9BF8", VA = "0x9E9BF8", Slot = "4")]
	public void OnOwnershipRequest(PhotonView targetView, Player requestingPlayer)
	{
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0x9E9CBC", Offset = "0x9E9CBC", VA = "0x9E9CBC", Slot = "5")]
	public void OnOwnershipTransfered(PhotonView targetView, Player previousOwner)
	{
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0x9E9D48", Offset = "0x9E9D48", VA = "0x9E9D48")]
	public Ownershiptransform()
	{
	}
}
[Token(Token = "0x20000DB")]
public class PasikScript : MonoBehaviour
{
	[Token(Token = "0x4000B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float timer;

	[Token(Token = "0x4000B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer ren;

	[Token(Token = "0x4000B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color col;

	[Token(Token = "0x600080F")]
	[Address(RVA = "0x9EA028", Offset = "0x9EA028", VA = "0x9EA028")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0x9EA0B4", Offset = "0x9EA0B4", VA = "0x9EA0B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0x9EA198", Offset = "0x9EA198", VA = "0x9EA198")]
	public PasikScript()
	{
	}
}
[Token(Token = "0x20000DC")]
public class PatternScript : MonoBehaviour
{
	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool use_patern;

	[Token(Token = "0x6000812")]
	[Address(RVA = "0x9EA1A8", Offset = "0x9EA1A8", VA = "0x9EA1A8")]
	public PatternScript()
	{
	}
}
[Token(Token = "0x20000DD")]
public class PauzeScript : MonoBehaviour
{
	[Token(Token = "0x6000813")]
	[Address(RVA = "0x9EA1B0", Offset = "0x9EA1B0", VA = "0x9EA1B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0x9EA1B4", Offset = "0x9EA1B4", VA = "0x9EA1B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000815")]
	[Address(RVA = "0x9EA1B8", Offset = "0x9EA1B8", VA = "0x9EA1B8")]
	public PauzeScript()
	{
	}
}
[Token(Token = "0x20000DE")]
public class Platform_mover : MonoBehaviour
{
	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float timer;

	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float destroytimer;

	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 move_vec;

	[Token(Token = "0x4000B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 startposition;

	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 destination;

	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float starttime;

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float vzdialenost;

	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 velocity;

	[Token(Token = "0x6000816")]
	[Address(RVA = "0x9EEBEC", Offset = "0x9EEBEC", VA = "0x9EEBEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0x9EEBF0", Offset = "0x9EEBF0", VA = "0x9EEBF0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0x9EEC84", Offset = "0x9EEC84", VA = "0x9EEC84")]
	private void Update()
	{
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0x9EEE9C", Offset = "0x9EEE9C", VA = "0x9EEE9C")]
	public Platform_mover()
	{
	}
}
[Token(Token = "0x20000DF")]
public class Platform_Mover_Global : MonoBehaviour
{
	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float timer;

	[Token(Token = "0x4000B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float destroytimer;

	[Token(Token = "0x4000B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 move_vec;

	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 destination;

	[Token(Token = "0x600081A")]
	[Address(RVA = "0x9EE9A8", Offset = "0x9EE9A8", VA = "0x9EE9A8")]
	private void Start()
	{
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0x9EE9AC", Offset = "0x9EE9AC", VA = "0x9EE9AC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0x9EE9B4", Offset = "0x9EE9B4", VA = "0x9EE9B4")]
	private void Update()
	{
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0x9EEB8C", Offset = "0x9EEB8C", VA = "0x9EEB8C")]
	public Platform_Mover_Global()
	{
	}
}
[Token(Token = "0x20000E0")]
public class Platform_spawner : MonoBehaviour
{
	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator player_anim;

	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform player_transform;

	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Explosions platform_pool;

	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform _parent;

	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject obj;

	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 minusjedna;

	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 plusjedna;

	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 plusdva;

	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 plusnula;

	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 move_vec;

	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform mover;

	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float timer;

	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int counter;

	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool run;

	[Token(Token = "0x4000B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool playerhit;

	[Token(Token = "0x4000B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int hitefekt;

	[Token(Token = "0x4000B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float hitefekt_timer;

	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Material[] player_material;

	[Token(Token = "0x4000B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Color[] player_material_color_basic;

	[Token(Token = "0x4000B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Color[] player_material_color_light;

	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool disable_all;

	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int jump;

	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float jump_timer;

	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool pauza;

	[Token(Token = "0x4000B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Vector3 prejump;

	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool have_parent;

	[Token(Token = "0x600081E")]
	[Address(RVA = "0x9EEF50", Offset = "0x9EEF50", VA = "0x9EEF50")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0x9EF19C", Offset = "0x9EF19C", VA = "0x9EF19C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0x9EF2A0", Offset = "0x9EF2A0", VA = "0x9EF2A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0x9EF3D8", Offset = "0x9EF3D8", VA = "0x9EF3D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0x9EFA8C", Offset = "0x9EFA8C", VA = "0x9EFA8C")]
	public Platform_spawner()
	{
	}
}
[Token(Token = "0x20000E1")]
public class players : MonoBehaviour
{
	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] myplayer;

	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] netplayer_client;

	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] netplayer_master;

	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameObject[] _myplayer;

	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static GameObject[] _netplayer_client;

	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static GameObject[] _netplayer_master;

	[Token(Token = "0x6000824")]
	[Address(RVA = "0x1296578", Offset = "0x1296578", VA = "0x1296578")]
	private void Start()
	{
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0x12965EC", Offset = "0x12965EC", VA = "0x12965EC")]
	public players()
	{
	}
}
[Token(Token = "0x20000E2")]
public class PrebleskScript : MonoBehaviour
{
	[Token(Token = "0x4000B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float start;

	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float end;

	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speed;

	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float move_time;

	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 vec_start;

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 vec_end;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool go;

	[Token(Token = "0x6000826")]
	[Address(RVA = "0x9EFD8C", Offset = "0x9EFD8C", VA = "0x9EFD8C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0x9EFDD4", Offset = "0x9EFDD4", VA = "0x9EFDD4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0x9EFF70", Offset = "0x9EFF70", VA = "0x9EFF70")]
	public PrebleskScript()
	{
	}
}
[Token(Token = "0x20000E3")]
public class Premover : MonoBehaviour
{
	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ObstaclesMover om;

	[Token(Token = "0x6000829")]
	[Address(RVA = "0x9EFF88", Offset = "0x9EFF88", VA = "0x9EFF88")]
	public Premover()
	{
	}
}
[Token(Token = "0x20000E4")]
public class Profiliak : MonoBehaviour
{
	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] next_profil;

	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] next_plus;

	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] next_minus;

	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int zalnpc;

	[Token(Token = "0x600082A")]
	[Address(RVA = "0x9EFF90", Offset = "0x9EFF90", VA = "0x9EFF90")]
	private void Start()
	{
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0x9EFF94", Offset = "0x9EFF94", VA = "0x9EFF94")]
	private void setprofil()
	{
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0x9F0274", Offset = "0x9F0274", VA = "0x9F0274")]
	private void Update()
	{
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0x9F032C", Offset = "0x9F032C", VA = "0x9F032C")]
	public Profiliak()
	{
	}
}
[Token(Token = "0x20000E5")]
public class QualityScript : MonoBehaviour
{
	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] high_objs;

	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] midle_objs;

	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int zalsetting_GameQuality;

	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int zalsetting_effectsreduction;

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] effects_midle_objs;

	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] effects_low_objs;

	[Token(Token = "0x600082E")]
	[Address(RVA = "0xA44B1C", Offset = "0xA44B1C", VA = "0xA44B1C")]
	private void Start()
	{
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0xA44F14", Offset = "0xA44F14", VA = "0xA44F14")]
	private void Update()
	{
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0xA45370", Offset = "0xA45370", VA = "0xA45370")]
	public QualityScript()
	{
	}
}
[Token(Token = "0x20000E6")]
public class RandomHeight : MonoBehaviour
{
	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] zone;

	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float max_posun2;

	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 vec;

	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3[] zalpos;

	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float[] randomi;

	[Token(Token = "0x4000B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int counter;

	[Token(Token = "0x4000B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float timer_spodny;

	[Token(Token = "0x6000831")]
	[Address(RVA = "0xA453B8", Offset = "0xA453B8", VA = "0xA453B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0xA45528", Offset = "0xA45528", VA = "0xA45528")]
	public RandomHeight()
	{
	}
}
[Token(Token = "0x20000E7")]
public class RankScript : MonoBehaviour
{
	[Token(Token = "0x4000B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int colCount;

	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int rowCount;

	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int rowNumber;

	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int colNumber;

	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int totalCells;

	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int fps;

	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool loopAnim;

	[Token(Token = "0x4000B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float timexPrefix;

	[Token(Token = "0x4000B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Renderer ren;

	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int zalindex;

	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector2 offset;

	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool is_number;

	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int number_num;

	[Token(Token = "0x4000BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool rank;

	[Token(Token = "0x4000BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool rank2;

	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool rank_selected;

	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int player_num;

	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool invidible_noexist;

	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int cislo;

	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int zalcislo;

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int index;

	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int rankindex;

	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int zalrankindex;

	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public bool align_left;

	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	public bool is_saw;

	[Token(Token = "0x4000BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int zalrank;

	[Token(Token = "0x4000BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Camera cam;

	[Token(Token = "0x4000BB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int laser_num;

	[Token(Token = "0x4000BB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public bool only_rank;

	[Token(Token = "0x4000BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private TextMeshPro ranktext;

	[Token(Token = "0x6000833")]
	[Address(RVA = "0xA45594", Offset = "0xA45594", VA = "0xA45594")]
	private void Start()
	{
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0xA45628", Offset = "0xA45628", VA = "0xA45628")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0xA45650", Offset = "0xA45650", VA = "0xA45650")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0xA45B58", Offset = "0xA45B58", VA = "0xA45B58")]
	private void SetSpriteAnimation(int colCount, int rowCount, int rowNumber, int colNumber, int totalCells)
	{
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0xA45D2C", Offset = "0xA45D2C", VA = "0xA45D2C")]
	public RankScript()
	{
	}
}
[Token(Token = "0x20000E8")]
public static class RendererExtensions
{
	[Token(Token = "0x6000838")]
	[Address(RVA = "0xA467A4", Offset = "0xA467A4", VA = "0xA467A4")]
	public static bool IsVisibleFrom(this Renderer renderer, Camera camera)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000E9")]
public class Rotator : MonoBehaviour
{
	[Token(Token = "0x4000BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool rot360;

	[Token(Token = "0x4000BB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool horizontal;

	[Token(Token = "0x4000BB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool updown;

	[Token(Token = "0x4000BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool rotacia_1;

	[Token(Token = "0x4000BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool rotacia_2;

	[Token(Token = "0x4000BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool rotacia_time;

	[Token(Token = "0x4000BBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool rotacia_fog;

	[Token(Token = "0x4000BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float tim;

	[Token(Token = "0x4000BBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 zalpos;

	[Token(Token = "0x4000BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float speed;

	[Token(Token = "0x6000839")]
	[Address(RVA = "0xA4E3C4", Offset = "0xA4E3C4", VA = "0xA4E3C4")]
	private void Start()
	{
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0xA4E40C", Offset = "0xA4E40C", VA = "0xA4E40C")]
	private void Update()
	{
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0xA4E830", Offset = "0xA4E830", VA = "0xA4E830")]
	public Rotator()
	{
	}
}
[Token(Token = "0x20000EA")]
public class Rotator360 : MonoBehaviour
{
	[Token(Token = "0x4000BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject pas360;

	[Token(Token = "0x4000BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject stredspawner;

	[Token(Token = "0x4000BC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject scene;

	[Token(Token = "0x4000BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int spawncounter;

	[Token(Token = "0x4000BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int zalspawncounter;

	[Token(Token = "0x4000BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float otacka;

	[Token(Token = "0x4000BC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int smer;

	[Token(Token = "0x4000BC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int nexttrandsform;

	[Token(Token = "0x600083C")]
	[Address(RVA = "0xA4E840", Offset = "0xA4E840", VA = "0xA4E840")]
	private void Start()
	{
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0xA4E844", Offset = "0xA4E844", VA = "0xA4E844")]
	private void Update()
	{
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0xA4EC5C", Offset = "0xA4EC5C", VA = "0xA4EC5C")]
	public Rotator360()
	{
	}
}
[Token(Token = "0x20000EB")]
public class RozpadScript : MonoBehaviour
{
	[Token(Token = "0x4000BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] obj;

	[Token(Token = "0x4000BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float upravaZ;

	[Token(Token = "0x4000BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 stred;

	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 pos;

	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Quaternion rot;

	[Token(Token = "0x4000BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] smer_rozpadu;

	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3[] zaltranspos;

	[Token(Token = "0x4000BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3[] zaltransrot2;

	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float tim;

	[Token(Token = "0x4000BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform originalparent;

	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform original;

	[Token(Token = "0x4000BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float y;

	[Token(Token = "0x4000BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float sila;

	[Token(Token = "0x6000840")]
	[Address(RVA = "0xA4EC70", Offset = "0xA4EC70", VA = "0xA4EC70")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0xA4F070", Offset = "0xA4F070", VA = "0xA4F070")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0xA4F1B0", Offset = "0xA4F1B0", VA = "0xA4F1B0")]
	private void Destro()
	{
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0xA4F340", Offset = "0xA4F340", VA = "0xA4F340")]
	private void Update()
	{
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0xA4F6F8", Offset = "0xA4F6F8", VA = "0xA4F6F8")]
	public RozpadScript()
	{
	}
}
[Token(Token = "0x20000EC")]
public class ScreenLogger : MonoBehaviour
{
	[Token(Token = "0x4000BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool can_log;

	[Token(Token = "0x4000BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string log;

	[Token(Token = "0x4000BD5")]
	private const int MAXCHARS = 10000;

	[Token(Token = "0x4000BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Queue myLogQueue;

	[Token(Token = "0x4000BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TextMeshPro logtext;

	[Token(Token = "0x4000BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool logon;

	[Token(Token = "0x4000BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool zal_logon;

	[Token(Token = "0x4000BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float timer;

	[Token(Token = "0x4000BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int i;

	[Token(Token = "0x6000845")]
	[Address(RVA = "0xA52100", Offset = "0xA52100", VA = "0xA52100")]
	private void Start()
	{
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0xA521AC", Offset = "0xA521AC", VA = "0xA521AC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0xA52234", Offset = "0xA52234", VA = "0xA52234")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0xA522BC", Offset = "0xA522BC", VA = "0xA522BC")]
	private void HandleLog(string logString, string stackTrace, LogType type)
	{
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0xA52678", Offset = "0xA52678", VA = "0xA52678")]
	private void Update()
	{
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0xA52834", Offset = "0xA52834", VA = "0xA52834")]
	public ScreenLogger()
	{
	}
}
[Token(Token = "0x20000ED")]
public class SendManager : MonoBehaviourPunCallbacks, IPunObservable
{
	[Token(Token = "0x4000BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] myplayer;

	[Token(Token = "0x4000BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] netplayer;

	[Token(Token = "0x4000BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float SmoothingDelay;

	[Token(Token = "0x4000BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool Master;

	[Token(Token = "0x4000BE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool fake;

	[Token(Token = "0x4000BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 Pos1;

	[Token(Token = "0x4000BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Quaternion Rot1;

	[Token(Token = "0x4000BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 Pos2;

	[Token(Token = "0x4000BE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Quaternion Rot2;

	[Token(Token = "0x4000BE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 Pos3;

	[Token(Token = "0x4000BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Quaternion Rot3;

	[Token(Token = "0x4000BE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float controltimer;

	[Token(Token = "0x4000BE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool wait_to_start;

	[Token(Token = "0x600084B")]
	[Address(RVA = "0xA528A4", Offset = "0xA528A4", VA = "0xA528A4")]
	public void Awake()
	{
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0xA52A44", Offset = "0xA52A44", VA = "0xA52A44")]
	public void Start()
	{
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0xA52B14", Offset = "0xA52B14", VA = "0xA52B14", Slot = "54")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0xA52F5C", Offset = "0xA52F5C", VA = "0xA52F5C")]
	private void Update()
	{
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0xA53B24", Offset = "0xA53B24", VA = "0xA53B24")]
	public SendManager()
	{
	}
}
[Token(Token = "0x20000EE")]
public class SetGlobalColorScript : MonoBehaviour
{
	[Token(Token = "0x4000BE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool left;

	[Token(Token = "0x4000BEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer ren;

	[Token(Token = "0x4000BEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int zalbluechange;

	[Token(Token = "0x4000BEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int zalyellowchange;

	[Token(Token = "0x4000BED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int zalgyellow;

	[Token(Token = "0x4000BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int zalgblue;

	[Token(Token = "0x4000BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int farba;

	[Token(Token = "0x4000BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool gula;

	[Token(Token = "0x4000BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AnimSphere ans;

	[Token(Token = "0x4000BF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool _gula_material;

	[Token(Token = "0x4000BF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool _ruka_material;

	[Token(Token = "0x4000BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	public bool _weapon_material;

	[Token(Token = "0x4000BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
	public bool _objekt_material;

	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool _terc_material;

	[Token(Token = "0x4000BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	public bool _iny_material;

	[Token(Token = "0x4000BF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Renderer iny_material;

	[Token(Token = "0x4000BF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Material terc_material;

	[Token(Token = "0x4000BFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Material gula_material;

	[Token(Token = "0x4000BFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Material ruka_material;

	[Token(Token = "0x4000BFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Material weapon_material;

	[Token(Token = "0x4000BFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Material objekt_material;

	[Token(Token = "0x4000BFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float alpha;

	[Token(Token = "0x4000BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Color weaponmodify;

	[Token(Token = "0x4000C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Color ncol;

	[Token(Token = "0x6000850")]
	[Address(RVA = "0xA53C24", Offset = "0xA53C24", VA = "0xA53C24")]
	private void Start()
	{
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0xA53C84", Offset = "0xA53C84", VA = "0xA53C84")]
	private void Update()
	{
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0xA5482C", Offset = "0xA5482C", VA = "0xA5482C")]
	public SetGlobalColorScript()
	{
	}
}
[Token(Token = "0x20000EF")]
public class Setting_Builder : MonoBehaviour
{
	[Token(Token = "0x4000C01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera[] cameras;

	[Token(Token = "0x4000C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] obj_for_activate_on_quest;

	[Token(Token = "0x4000C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] obj_for_activate_on_oculus_quest;

	[Token(Token = "0x4000C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] obj_for_activate_on_steam;

	[Token(Token = "0x4000C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string dsymbols;

	[Token(Token = "0x4000C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshPro verzia_credit;

	[Token(Token = "0x6000853")]
	[Address(RVA = "0xA548AC", Offset = "0xA548AC", VA = "0xA548AC")]
	public Setting_Builder()
	{
	}
}
[Token(Token = "0x20000F0")]
public class ShieldOdraz : MonoBehaviour
{
	[Token(Token = "0x4000C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool righthand;

	[Token(Token = "0x4000C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject sstarter;

	[Token(Token = "0x6000854")]
	[Address(RVA = "0xA548B4", Offset = "0xA548B4", VA = "0xA548B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0xA548B8", Offset = "0xA548B8", VA = "0xA548B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0xA548BC", Offset = "0xA548BC", VA = "0xA548BC")]
	private void OnCollisionEnter(Collision col)
	{
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0xA54AE8", Offset = "0xA54AE8", VA = "0xA54AE8")]
	public ShieldOdraz()
	{
	}
}
[Token(Token = "0x20000F1")]
public class ShieldStarter : MonoBehaviour
{
	[Token(Token = "0x4000C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool fakeshield;

	[Token(Token = "0x4000C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] shieldzone1;

	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] shieldzone2;

	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] shieldzone3;

	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject shieldcollider;

	[Token(Token = "0x4000C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject handcollider;

	[Token(Token = "0x4000C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool lefthand;

	[Token(Token = "0x4000C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int isStarted;

	[Token(Token = "0x4000C11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float timers;

	[Token(Token = "0x4000C12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float timers2;

	[Token(Token = "0x4000C13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float timers3;

	[Token(Token = "0x4000C14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int hitstav2;

	[Token(Token = "0x4000C15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int hitstav;

	[Token(Token = "0x4000C16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 zalpos;

	[Token(Token = "0x4000C17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 pos;

	[Token(Token = "0x4000C18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Color col1;

	[Token(Token = "0x4000C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Color col2;

	[Token(Token = "0x4000C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Color col3;

	[Token(Token = "0x4000C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Color zalcol1;

	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Color zalcol2;

	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private Color zalcol3;

	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private bool shield_left;

	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
	private bool shield_rigth;

	[Token(Token = "0x4000C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private int gamemode;

	[Token(Token = "0x4000C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private int menu;

	[Token(Token = "0x6000858")]
	[Address(RVA = "0xA54AF8", Offset = "0xA54AF8", VA = "0xA54AF8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0xA54AD8", Offset = "0xA54AD8", VA = "0xA54AD8")]
	public void damage()
	{
	}

	[Token(Token = "0x600085A")]
	[Address(RVA = "0xA54C84", Offset = "0xA54C84", VA = "0xA54C84")]
	private void Update()
	{
	}

	[Token(Token = "0x600085B")]
	[Address(RVA = "0xA55ACC", Offset = "0xA55ACC", VA = "0xA55ACC")]
	public ShieldStarter()
	{
	}
}
[Token(Token = "0x20000F2")]
public class skuskahop : MonoBehaviour
{
	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float huptimer;

	[Token(Token = "0x600085C")]
	[Address(RVA = "0x12965F4", Offset = "0x12965F4", VA = "0x12965F4")]
	private void Start()
	{
	}

	[Token(Token = "0x600085D")]
	[Address(RVA = "0x12965F8", Offset = "0x12965F8", VA = "0x12965F8")]
	public skuskahop()
	{
	}
}
[Token(Token = "0x20000F3")]
public class SkuskaMenu : MonoBehaviour
{
	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float t1;

	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float t2;

	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float delay;

	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float zaldelay;

	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 faza1;

	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 faza2;

	[Token(Token = "0x4000C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 faza3;

	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool calldisable;

	[Token(Token = "0x600085E")]
	[Address(RVA = "0xA5D6BC", Offset = "0xA5D6BC", VA = "0xA5D6BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0xA5D700", Offset = "0xA5D700", VA = "0xA5D700")]
	private void Start()
	{
	}

	[Token(Token = "0x6000860")]
	[Address(RVA = "0xA5D704", Offset = "0xA5D704", VA = "0xA5D704")]
	public void Close()
	{
	}

	[Token(Token = "0x6000861")]
	[Address(RVA = "0xA5D748", Offset = "0xA5D748", VA = "0xA5D748")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0xA5D794", Offset = "0xA5D794", VA = "0xA5D794")]
	private void Update()
	{
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0xA5DA70", Offset = "0xA5DA70", VA = "0xA5DA70")]
	public SkuskaMenu()
	{
	}
}
[Token(Token = "0x20000F4")]
public class SkySpectrum : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200038C")]
	public class Paterns
	{
		[Token(Token = "0x40023F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool use_on_this_panel;

		[Token(Token = "0x40023FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool ping_pong;

		[Token(Token = "0x40023FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool ping_pong_state;

		[Token(Token = "0x40023FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float speed;

		[Token(Token = "0x40023FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool color_position;

		[Token(Token = "0x40023FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture2D filler;

		[Token(Token = "0x40023FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Texture2D[] patern;

		[Token(Token = "0x60018D1")]
		[Address(RVA = "0x965210", Offset = "0x965210", VA = "0x965210")]
		public Paterns()
		{
		}
	}

	[Token(Token = "0x4000C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool wave_at_hit;

	[Token(Token = "0x4000C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool off_move_wave_at_mid;

	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool off_blik_wave_at_low;

	[Token(Token = "0x4000C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool use_video;

	[Token(Token = "0x4000C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color videocolor_off;

	[Token(Token = "0x4000C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Color videocolor_on;

	[Token(Token = "0x4000C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool use_efekt1;

	[Token(Token = "0x4000C32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public bool blend_efect1;

	[Token(Token = "0x4000C33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture2D[] vypln;

	[Token(Token = "0x4000C34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D empty_texture;

	[Token(Token = "0x4000C35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public RenderTexture YTTexture;

	[Token(Token = "0x4000C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject[] videopatern;

	[Token(Token = "0x4000C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject[] paternzone;

	[Token(Token = "0x4000C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Renderer[] paternzone_renderer;

	[Token(Token = "0x4000C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private PatternScript[] paterzone_paternscript;

	[Token(Token = "0x4000C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool[] paternzone_aktive;

	[Token(Token = "0x4000C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Vector3 vec;

	[Token(Token = "0x4000C3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject[] zone1;

	[Token(Token = "0x4000C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject[] zone2;

	[Token(Token = "0x4000C3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject[] zone3;

	[Token(Token = "0x4000C3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject[] zone4;

	[Token(Token = "0x4000C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject[] zone5;

	[Token(Token = "0x4000C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Material zonemat1;

	[Token(Token = "0x4000C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Material zonemat2;

	[Token(Token = "0x4000C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Material zonemat3;

	[Token(Token = "0x4000C44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Material zonemat4;

	[Token(Token = "0x4000C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Material zonemat5;

	[Token(Token = "0x4000C46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Material panelmat;

	[Token(Token = "0x4000C47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Vector3[] zalpos1;

	[Token(Token = "0x4000C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Vector3[] zalpos2;

	[Token(Token = "0x4000C49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Vector3[] zalpos3;

	[Token(Token = "0x4000C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Vector3[] zalpos4;

	[Token(Token = "0x4000C4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Vector3[] oldpos1;

	[Token(Token = "0x4000C4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Vector3[] oldpos2;

	[Token(Token = "0x4000C4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Vector3[] oldpos3;

	[Token(Token = "0x4000C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Vector3[] oldpos4;

	[Token(Token = "0x4000C4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Vector3[] newpos1;

	[Token(Token = "0x4000C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Vector3[] newpos2;

	[Token(Token = "0x4000C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Vector3[] newpos3;

	[Token(Token = "0x4000C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Vector3[] newpos4;

	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Vector3[] _newpos1;

	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Vector3[] _newpos2;

	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Vector3[] _newpos3;

	[Token(Token = "0x4000C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Vector3[] _newpos4;

	[Token(Token = "0x4000C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private Color matcolor1;

	[Token(Token = "0x4000C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Color matcolor2;

	[Token(Token = "0x4000C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private Color matcolor3;

	[Token(Token = "0x4000C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private Color matcolor4;

	[Token(Token = "0x4000C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private Color matcolor5;

	[Token(Token = "0x4000C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private Color panelcolor;

	[Token(Token = "0x4000C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public GameObject[] panels0;

	[Token(Token = "0x4000C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public GameObject[] panels1;

	[Token(Token = "0x4000C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public GameObject[] panels2;

	[Token(Token = "0x4000C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public GameObject[] panels3;

	[Token(Token = "0x4000C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public GameObject[] panels4;

	[Token(Token = "0x4000C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public GameObject[] panels5;

	[Token(Token = "0x4000C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public GameObject[] panels6;

	[Token(Token = "0x4000C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public GameObject[] panels7;

	[Token(Token = "0x4000C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public GameObject[] panels8;

	[Token(Token = "0x4000C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public GameObject[] panels9;

	[Token(Token = "0x4000C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public GameObject[] panels10;

	[Token(Token = "0x4000C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private float timers2;

	[Token(Token = "0x4000C69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	private float timers3;

	[Token(Token = "0x4000C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private int hitstav;

	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
	private float max_posun;

	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private int hit;

	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
	private int hitleft;

	[Token(Token = "0x4000C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private int hitright;

	[Token(Token = "0x4000C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
	private bool change;

	[Token(Token = "0x4000C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private Color zalcol1;

	[Token(Token = "0x4000C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private Color zalcol2;

	[Token(Token = "0x4000C72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	private Color zalcol3;

	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	private Color zalcol4;

	[Token(Token = "0x4000C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	private Color zalcol5;

	[Token(Token = "0x4000C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	private Color zalpanelcolor;

	[Token(Token = "0x4000C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	private Color clerp;

	[Token(Token = "0x4000C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	private bool zapvypcolor;

	[Token(Token = "0x4000C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B1")]
	private bool zapvypefekt;

	[Token(Token = "0x4000C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B4")]
	private int spust;

	[Token(Token = "0x4000C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	private float timer;

	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
	public bool mat_changer;

	[Token(Token = "0x4000C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	public Color corners;

	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	public Color blue_hit;

	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	public Color yellow_hit;

	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	public Color green_hit;

	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	public Color basiccolor1;

	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	public Color basiccolor2;

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	public Color basiccolor3;

	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	public Color basiccolor4;

	[Token(Token = "0x4000C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	public Color basiccorners;

	[Token(Token = "0x4000C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	private Color boomcolor;

	[Token(Token = "0x4000C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	private Vector3[] pzone_pos;

	[Token(Token = "0x4000C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	public int[] GameMode_patern_use;

	[Token(Token = "0x4000C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	private Color semiblack;

	[Token(Token = "0x4000C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
	private int patternCounter;

	[Token(Token = "0x4000C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
	public Paterns[] paterns;

	[Token(Token = "0x4000C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
	private float patern_timer;

	[Token(Token = "0x4000C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x394")]
	private int patern_position;

	[Token(Token = "0x4000C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
	private int aktivepatern;

	[Token(Token = "0x4000C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39C")]
	private bool reset_patern;

	[Token(Token = "0x4000C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
	private int zapvideo;

	[Token(Token = "0x4000C90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A4")]
	private float vtimer;

	[Token(Token = "0x4000C91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
	private byte[,] pixelbuffer0;

	[Token(Token = "0x4000C92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
	private byte[,] pixelbuffer1;

	[Token(Token = "0x4000C93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
	private byte[,] pixelbuffer2;

	[Token(Token = "0x4000C94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
	private byte[,] pixelbuffer3;

	[Token(Token = "0x4000C95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
	private bool zapnivypln;

	[Token(Token = "0x4000C96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3CC")]
	private int vyplncounter;

	[Token(Token = "0x4000C97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
	private int zalmeasure;

	[Token(Token = "0x4000C98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D4")]
	private int blendblik;

	[Token(Token = "0x4000C99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
	private float lftimer;

	[Token(Token = "0x4000C9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3DC")]
	private float emis;

	[Token(Token = "0x6000864")]
	[Address(RVA = "0xA5DA78", Offset = "0xA5DA78", VA = "0xA5DA78")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0xA5DBAC", Offset = "0xA5DBAC", VA = "0xA5DBAC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0xA5E5FC", Offset = "0xA5E5FC", VA = "0xA5E5FC")]
	private void NewPos()
	{
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0xA5EB1C", Offset = "0xA5EB1C", VA = "0xA5EB1C")]
	private void UsedPos()
	{
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0xA5EF4C", Offset = "0xA5EF4C", VA = "0xA5EF4C")]
	private void NewPos2()
	{
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0xA5F308", Offset = "0xA5F308", VA = "0xA5F308")]
	private void VideoPos()
	{
	}

	[Token(Token = "0x600086A")]
	[Address(RVA = "0xA5F7F0", Offset = "0xA5F7F0", VA = "0xA5F7F0")]
	private void setbackmat()
	{
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0xA5F9E8", Offset = "0xA5F9E8", VA = "0xA5F9E8")]
	private void setbackmatrurky()
	{
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0xA5FDC0", Offset = "0xA5FDC0", VA = "0xA5FDC0")]
	private void Update()
	{
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0xA62D3C", Offset = "0xA62D3C", VA = "0xA62D3C")]
	public SkySpectrum()
	{
	}
}
[Token(Token = "0x20000F5")]
public class SnowRoad : MonoBehaviour
{
	[Token(Token = "0x4000C9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool dragon_theme;

	[Token(Token = "0x4000C9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float speed;

	[Token(Token = "0x4000C9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float impulse;

	[Token(Token = "0x4000C9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float timer;

	[Token(Token = "0x4000C9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 original;

	[Token(Token = "0x4000CA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 posunute;

	[Token(Token = "0x4000CA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 posunute_theme7;

	[Token(Token = "0x4000CA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool prep;

	[Token(Token = "0x4000CA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public VolumetricFog[] vf;

	[Token(Token = "0x4000CA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool ret;

	[Token(Token = "0x4000CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool zalret;

	[Token(Token = "0x4000CA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Animator dragon1;

	[Token(Token = "0x4000CA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Animator dragon2;

	[Token(Token = "0x4000CA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform dragon;

	[Token(Token = "0x4000CA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform fly_position;

	[Token(Token = "0x4000CAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform stay_position;

	[Token(Token = "0x4000CAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int goto_position;

	[Token(Token = "0x4000CAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int zalgoto_position;

	[Token(Token = "0x4000CAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float postimer;

	[Token(Token = "0x600086E")]
	[Address(RVA = "0x965E80", Offset = "0x965E80", VA = "0x965E80")]
	private void Start()
	{
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0x966038", Offset = "0x966038", VA = "0x966038")]
	private void Update()
	{
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0x966870", Offset = "0x966870", VA = "0x966870")]
	public SnowRoad()
	{
	}
}
[Token(Token = "0x20000F6")]
public static class ExtensionMethod
{
	[Token(Token = "0x6000871")]
	[Address(RVA = "0xA67544", Offset = "0xA67544", VA = "0xA67544")]
	public static Texture2D DeCompress(this Texture2D source)
	{
		return null;
	}
}
[Token(Token = "0x20000F7")]
public static class NeutralFloat
{
	[Token(Token = "0x6000872")]
	[Address(RVA = "0x9DECE0", Offset = "0x9DECE0", VA = "0x9DECE0")]
	public static float Parse(string source)
	{
		return default(float);
	}
}
[Token(Token = "0x20000F8")]
public class SongList : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200038D")]
	public class Songs
	{
		[Token(Token = "0x4002400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int dataType;

		[Token(Token = "0x4002401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SSong jsonInfo;

		[Token(Token = "0x4002402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SModSong modJsonInfo;

		[Token(Token = "0x4002403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SMDatSong mdatJsonInfo;

		[Token(Token = "0x4002404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string id_song;

		[Token(Token = "0x4002405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string Song_name;

		[Token(Token = "0x4002406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string Song_author;

		[Token(Token = "0x4002407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string Song_designedBy;

		[Token(Token = "0x4002408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string Song_letterHunter;

		[Token(Token = "0x4002409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int Song_plays;

		[Token(Token = "0x400240A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int Song_time_sec;

		[Token(Token = "0x400240B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float Song_kcal;

		[Token(Token = "0x400240C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float BPM;

		[Token(Token = "0x400240D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float Song_start;

		[Token(Token = "0x400240E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float Song_duration;

		[Token(Token = "0x400240F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int Offset;

		[Token(Token = "0x4002410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public int VideoOffset;

		[Token(Token = "0x4002411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float Preview_start;

		[Token(Token = "0x4002412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float Preview_duration;

		[Token(Token = "0x4002413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Texture Song_Image;

		[Token(Token = "0x4002414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public string Directory;

		[Token(Token = "0x4002415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public string Link;

		[Token(Token = "0x4002416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public string VideoID;

		[Token(Token = "0x4002417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public string local_file_name;

		[Token(Token = "0x4002418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public int[] plays_succes;

		[Token(Token = "0x4002419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public int[] plays_failed;

		[Token(Token = "0x400241A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public int[] maxscorex;

		[Token(Token = "0x400241B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public int[] maxboostx;

		[Token(Token = "0x400241C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public int[] maxkcal;

		[Token(Token = "0x400241D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public int[] maxkcalh;

		[Token(Token = "0x400241E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public int[] placeholder1;

		[Token(Token = "0x400241F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public int[] placeholder2;

		[Token(Token = "0x4002420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public int[] placeholder3;

		[Token(Token = "0x4002421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public int[] placeholder4;

		[Token(Token = "0x4002422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public int[] placeholder5;

		[Token(Token = "0x4002423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public int[] placeholder6;

		[Token(Token = "0x4002424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public bool[] difficulty;

		[Token(Token = "0x4002425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public int[] diff_notes;

		[Token(Token = "0x4002426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public AudioClip clipsong;

		[Token(Token = "0x4002427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public bool need_load;

		[Token(Token = "0x4002428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x121")]
		public bool use_video_clip;

		[Token(Token = "0x4002429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public VideoClip vclipsong;

		[Token(Token = "0x400242A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public bool own_video;

		[Token(Token = "0x400242B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x131")]
		public bool favorites;

		[Token(Token = "0x60018D2")]
		[Address(RVA = "0xA9DDB8", Offset = "0xA9DDB8", VA = "0xA9DDB8")]
		public Songs()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200038E")]
	public class SList
	{
		[Token(Token = "0x400242C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject ramik;

		[Token(Token = "0x400242D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshPro Song_name;

		[Token(Token = "0x400242E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshPro Song_author;

		[Token(Token = "0x400242F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshPro Song_plays;

		[Token(Token = "0x4002430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshPro Song_bpm;

		[Token(Token = "0x4002431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TextMeshPro Song_designedBy;

		[Token(Token = "0x4002432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TextMeshPro Song_letterHunter;

		[Token(Token = "0x4002433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Renderer Song_Image;

		[Token(Token = "0x4002434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public SpriteRenderer Song_Sprite;

		[Token(Token = "0x4002435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Renderer Song_Video;

		[Token(Token = "0x4002436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject Song_Loader;

		[Token(Token = "0x4002437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject[] difficulty;

		[Token(Token = "0x4002438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Color[] zalcolor;

		[Token(Token = "0x4002439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Renderer Song_Favorite;

		[Token(Token = "0x60018D3")]
		[Address(RVA = "0xA9DA78", Offset = "0xA9DA78", VA = "0xA9DA78")]
		public SList()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200038F")]
	public class DownloadList
	{
		[Token(Token = "0x400243A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject download_object;

		[Token(Token = "0x400243B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshPro Song_name;

		[Token(Token = "0x400243C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshPro Song_autor;

		[Token(Token = "0x400243D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string link;

		[Token(Token = "0x400243E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string id_song;

		[Token(Token = "0x400243F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TextMeshPro dlzka;

		[Token(Token = "0x4002440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TextMeshPro audio_video;

		[Token(Token = "0x4002441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int size_mb;

		[Token(Token = "0x4002442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool is_downloaded;

		[Token(Token = "0x4002443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public SpriteRenderer Song_Sprite;

		[Token(Token = "0x60018D4")]
		[Address(RVA = "0xA9D9A0", Offset = "0xA9D9A0", VA = "0xA9D9A0")]
		public DownloadList()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000390")]
	public class DownList
	{
		[Token(Token = "0x4002444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Song_name;

		[Token(Token = "0x4002445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Song_autor;

		[Token(Token = "0x4002446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string link;

		[Token(Token = "0x4002447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string id_song;

		[Token(Token = "0x4002448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string audio_video;

		[Token(Token = "0x4002449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int size_mb;

		[Token(Token = "0x400244A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool is_downloaded;

		[Token(Token = "0x400244B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Sprite Song_Sprite;

		[Token(Token = "0x400244C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool exist;

		[Token(Token = "0x60018D5")]
		[Address(RVA = "0xA9D998", Offset = "0xA9D998", VA = "0xA9D998")]
		public DownList()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000391")]
	public class FList
	{
		[Token(Token = "0x400244D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject ramik;

		[Token(Token = "0x400244E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshPro Friend_name;

		[Token(Token = "0x400244F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Renderer Friend_Image;

		[Token(Token = "0x4002450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string avatarid;

		[Token(Token = "0x4002451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SpriteRenderer Friend_Sprite;

		[Token(Token = "0x60018D6")]
		[Address(RVA = "0xA9D9A8", Offset = "0xA9D9A8", VA = "0xA9D9A8")]
		public FList()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000392")]
	public class LeaderList
	{
		[Token(Token = "0x4002452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string tableid;

		[Token(Token = "0x4002453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float last_load_timer;

		[Token(Token = "0x4002454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string num;

		[Token(Token = "0x4002455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string name;

		[Token(Token = "0x4002456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string score;

		[Token(Token = "0x4002457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int poradie;

		[Token(Token = "0x4002458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool poradovnik;

		[Token(Token = "0x4002459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int cislo;

		[Token(Token = "0x60018D7")]
		[Address(RVA = "0xA9DA00", Offset = "0xA9DA00", VA = "0xA9DA00")]
		public LeaderList()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000393")]
	public class SSong
	{
		[Token(Token = "0x400245A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string version;

		[Token(Token = "0x400245B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float bpm;

		[Token(Token = "0x400245C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string id;

		[Token(Token = "0x400245D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string audio;

		[Token(Token = "0x400245E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string video;

		[Token(Token = "0x400245F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string fallback;

		[Token(Token = "0x4002460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string song;

		[Token(Token = "0x4002461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float start;

		[Token(Token = "0x4002462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float length;

		[Token(Token = "0x4002463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int offset;

		[Token(Token = "0x4002464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int videoOffset;

		[Token(Token = "0x4002465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string author;

		[Token(Token = "0x4002466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string cover;

		[Token(Token = "0x4002467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float previewStart;

		[Token(Token = "0x4002468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float previewLength;

		[Token(Token = "0x4002469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int notes1;

		[Token(Token = "0x400246A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public int notes2;

		[Token(Token = "0x400246B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int notes3;

		[Token(Token = "0x400246C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public int notes4;

		[Token(Token = "0x400246D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int notes5;

		[Token(Token = "0x400246E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public string designedBy;

		[Token(Token = "0x400246F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public string letterHunter;

		[Token(Token = "0x4002470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public SIntensity[] intensities1;

		[Token(Token = "0x4002471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public SIntensity[] intensities2;

		[Token(Token = "0x4002472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public SIntensity[] intensities3;

		[Token(Token = "0x4002473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public SIntensity[] intensities4;

		[Token(Token = "0x4002474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public SIntensity[] intensities5;

		[Token(Token = "0x4002475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public SEffect[] effects1_1;

		[Token(Token = "0x4002476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public SEffect[] effects1_2;

		[Token(Token = "0x4002477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public SEffect[] effects1_3;

		[Token(Token = "0x4002478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public SEffect[] effects1_4;

		[Token(Token = "0x4002479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public SEffect[] effects1_5;

		[Token(Token = "0x400247A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public SEffect[] effects1_6;

		[Token(Token = "0x400247B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public SEffect[] effects1_7;

		[Token(Token = "0x400247C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public SEffect[] effects1_8;

		[Token(Token = "0x400247D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public SEffect[] effects1_9;

		[Token(Token = "0x400247E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public SEffect[] effects1_10;

		[Token(Token = "0x400247F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public SEffect[] effects2_1;

		[Token(Token = "0x4002480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public SEffect[] effects2_2;

		[Token(Token = "0x4002481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public SEffect[] effects2_3;

		[Token(Token = "0x4002482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public SEffect[] effects2_4;

		[Token(Token = "0x4002483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public SEffect[] effects2_5;

		[Token(Token = "0x4002484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public SEffect[] effects2_6;

		[Token(Token = "0x4002485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public SEffect[] effects2_7;

		[Token(Token = "0x4002486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public SEffect[] effects2_8;

		[Token(Token = "0x4002487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public SEffect[] effects2_9;

		[Token(Token = "0x4002488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public SEffect[] effects2_10;

		[Token(Token = "0x4002489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public SEffect[] effects3_1;

		[Token(Token = "0x400248A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public SEffect[] effects3_2;

		[Token(Token = "0x400248B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public SEffect[] effects3_3;

		[Token(Token = "0x400248C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public SEffect[] effects3_4;

		[Token(Token = "0x400248D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public SEffect[] effects3_5;

		[Token(Token = "0x400248E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public SEffect[] effects3_6;

		[Token(Token = "0x400248F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public SEffect[] effects3_7;

		[Token(Token = "0x4002490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public SEffect[] effects3_8;

		[Token(Token = "0x4002491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public SEffect[] effects3_9;

		[Token(Token = "0x4002492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public SEffect[] effects3_10;

		[Token(Token = "0x4002493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public SEffect[] effects4_1;

		[Token(Token = "0x4002494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public SEffect[] effects4_2;

		[Token(Token = "0x4002495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public SEffect[] effects4_3;

		[Token(Token = "0x4002496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public SEffect[] effects4_4;

		[Token(Token = "0x4002497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public SEffect[] effects4_5;

		[Token(Token = "0x4002498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public SEffect[] effects4_6;

		[Token(Token = "0x4002499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public SEffect[] effects4_7;

		[Token(Token = "0x400249A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public SEffect[] effects4_8;

		[Token(Token = "0x400249B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		public SEffect[] effects4_9;

		[Token(Token = "0x400249C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public SEffect[] effects4_10;

		[Token(Token = "0x400249D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public SEffect[] effects5_1;

		[Token(Token = "0x400249E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		public SEffect[] effects5_2;

		[Token(Token = "0x400249F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		public SEffect[] effects5_3;

		[Token(Token = "0x40024A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		public SEffect[] effects5_4;

		[Token(Token = "0x40024A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		public SEffect[] effects5_5;

		[Token(Token = "0x40024A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		public SEffect[] effects5_6;

		[Token(Token = "0x40024A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		public SEffect[] effects5_7;

		[Token(Token = "0x40024A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		public SEffect[] effects5_8;

		[Token(Token = "0x40024A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		public SEffect[] effects5_9;

		[Token(Token = "0x40024A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		public SEffect[] effects5_10;

		[Token(Token = "0x60018D8")]
		[Address(RVA = "0xA9DD08", Offset = "0xA9DD08", VA = "0xA9DD08")]
		public static SSong CreateFromJSON(string jsonString)
		{
			return null;
		}

		[Token(Token = "0x60018D9")]
		[Address(RVA = "0xA9DD58", Offset = "0xA9DD58", VA = "0xA9DD58")]
		public SSong()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000394")]
	public class SIntensity
	{
		[Token(Token = "0x40024A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int beat;

		[Token(Token = "0x40024A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int intensity;

		[Token(Token = "0x60018DA")]
		[Address(RVA = "0xA9DA70", Offset = "0xA9DA70", VA = "0xA9DA70")]
		public SIntensity()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000395")]
	public class SEffect
	{
		[Token(Token = "0x40024A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int beat;

		[Token(Token = "0x40024AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int intensity;

		[Token(Token = "0x40024AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int red;

		[Token(Token = "0x40024AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int green;

		[Token(Token = "0x40024AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int blue;

		[Token(Token = "0x60018DB")]
		[Address(RVA = "0xA9DA68", Offset = "0xA9DA68", VA = "0xA9DA68")]
		public SEffect()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000396")]
	public class SSphere
	{
		[Token(Token = "0x40024AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float time;

		[Token(Token = "0x40024AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int x;

		[Token(Token = "0x40024B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int y;

		[Token(Token = "0x40024B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int type;

		[Token(Token = "0x60018DC")]
		[Address(RVA = "0xA9DDB0", Offset = "0xA9DDB0", VA = "0xA9DDB0")]
		public SSphere()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000397")]
	public class SModDifficulty
	{
		[Token(Token = "0x40024B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string difficulty;

		[Token(Token = "0x40024B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int difficultyRank;

		[Token(Token = "0x40024B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string audioPath;

		[Token(Token = "0x40024B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string videoPath;

		[Token(Token = "0x40024B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string jsonPath;

		[Token(Token = "0x40024B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float offset;

		[Token(Token = "0x40024B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float videoOffset;

		[Token(Token = "0x40024B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float oldOffset;

		[Token(Token = "0x60018DD")]
		[Address(RVA = "0xA9DC48", Offset = "0xA9DC48", VA = "0xA9DC48")]
		public SModDifficulty()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000398")]
	public class SModSong
	{
		[Token(Token = "0x40024BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string songName;

		[Token(Token = "0x40024BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string songSubName;

		[Token(Token = "0x40024BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string authorName;

		[Token(Token = "0x40024BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float beatsPerMinute;

		[Token(Token = "0x40024BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float previewStartTime;

		[Token(Token = "0x40024BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float previewDuration;

		[Token(Token = "0x40024C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string coverImagePath;

		[Token(Token = "0x40024C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SModDifficulty[] difficultyLevels;

		[Token(Token = "0x60018DE")]
		[Address(RVA = "0xA9DCB0", Offset = "0xA9DCB0", VA = "0xA9DCB0")]
		public static SModSong CreateFromJSON(string jsonString)
		{
			return null;
		}

		[Token(Token = "0x60018DF")]
		[Address(RVA = "0xA9DD00", Offset = "0xA9DD00", VA = "0xA9DD00")]
		public SModSong()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000399")]
	public class SModLevel
	{
		[Token(Token = "0x40024C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SModNote[] _notes;

		[Token(Token = "0x60018E0")]
		[Address(RVA = "0xA9DC50", Offset = "0xA9DC50", VA = "0xA9DC50")]
		public static SModLevel CreateFromJSON(string jsonString)
		{
			return null;
		}

		[Token(Token = "0x60018E1")]
		[Address(RVA = "0xA9DCA0", Offset = "0xA9DCA0", VA = "0xA9DCA0")]
		public SModLevel()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200039A")]
	public class SModNote
	{
		[Token(Token = "0x40024C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float _time;

		[Token(Token = "0x40024C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int _lineIndex;

		[Token(Token = "0x40024C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int _lineLayer;

		[Token(Token = "0x40024C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int _type;

		[Token(Token = "0x60018E2")]
		[Address(RVA = "0xA9DCA8", Offset = "0xA9DCA8", VA = "0xA9DCA8")]
		public SModNote()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200039B")]
	public class SMDatCustomData
	{
		[Token(Token = "0x40024C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float _editorOffset;

		[Token(Token = "0x40024C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float _editorOldOffset;

		[Token(Token = "0x60018E3")]
		[Address(RVA = "0xA9DAD8", Offset = "0xA9DAD8", VA = "0xA9DAD8")]
		public SMDatCustomData()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200039C")]
	public class SMDatDifficultyMap
	{
		[Token(Token = "0x40024C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SMDatCustomData _customData;

		[Token(Token = "0x40024CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string _difficulty;

		[Token(Token = "0x40024CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int _difficultyRank;

		[Token(Token = "0x40024CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string _beatmapFilename;

		[Token(Token = "0x60018E4")]
		[Address(RVA = "0xA9DAE0", Offset = "0xA9DAE0", VA = "0xA9DAE0")]
		public static SMDatDifficultyMap CreateFromJSON(string jsonString)
		{
			return null;
		}

		[Token(Token = "0x60018E5")]
		[Address(RVA = "0xA9DB30", Offset = "0xA9DB30", VA = "0xA9DB30")]
		public SMDatDifficultyMap()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200039D")]
	public class SMDatDifficultySet
	{
		[Token(Token = "0x40024CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SMDatDifficultyMap[] _difficultyBeatmaps;

		[Token(Token = "0x60018E6")]
		[Address(RVA = "0xA9DB38", Offset = "0xA9DB38", VA = "0xA9DB38")]
		public static SMDatDifficultySet CreateFromJSON(string jsonString)
		{
			return null;
		}

		[Token(Token = "0x60018E7")]
		[Address(RVA = "0xA9DB88", Offset = "0xA9DB88", VA = "0xA9DB88")]
		public SMDatDifficultySet()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200039E")]
	public class SMDatSong
	{
		[Token(Token = "0x40024CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string _songName;

		[Token(Token = "0x40024CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string _songSubName;

		[Token(Token = "0x40024D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string _songAuthorName;

		[Token(Token = "0x40024D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string _levelAuthorName;

		[Token(Token = "0x40024D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float _beatsPerMinute;

		[Token(Token = "0x40024D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float _songTimeOffset;

		[Token(Token = "0x40024D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float _previewStartTime;

		[Token(Token = "0x40024D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float _previewDuration;

		[Token(Token = "0x40024D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string _songFilename;

		[Token(Token = "0x40024D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string _videoFilename;

		[Token(Token = "0x40024D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float _videoTimeOffset;

		[Token(Token = "0x40024D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string _coverImageFilename;

		[Token(Token = "0x40024DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public SMDatDifficultySet[] _difficultyBeatmapSets;

		[Token(Token = "0x60018E8")]
		[Address(RVA = "0xA9DBF0", Offset = "0xA9DBF0", VA = "0xA9DBF0")]
		public static SMDatSong CreateFromJSON(string jsonString)
		{
			return null;
		}

		[Token(Token = "0x60018E9")]
		[Address(RVA = "0xA9DC40", Offset = "0xA9DC40", VA = "0xA9DC40")]
		public SMDatSong()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200039F")]
	public class SMDatLevel
	{
		[Token(Token = "0x40024DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SMDatNote[] _notes;

		[Token(Token = "0x60018EA")]
		[Address(RVA = "0xA9DB90", Offset = "0xA9DB90", VA = "0xA9DB90")]
		public static SMDatLevel CreateFromJSON(string jsonString)
		{
			return null;
		}

		[Token(Token = "0x60018EB")]
		[Address(RVA = "0xA9DBE0", Offset = "0xA9DBE0", VA = "0xA9DBE0")]
		public SMDatLevel()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003A0")]
	public class SMDatNote
	{
		[Token(Token = "0x40024DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float _time;

		[Token(Token = "0x40024DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int _lineIndex;

		[Token(Token = "0x40024DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int _lineLayer;

		[Token(Token = "0x40024DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int _type;

		[Token(Token = "0x60018EC")]
		[Address(RVA = "0xA9DBE8", Offset = "0xA9DBE8", VA = "0xA9DBE8")]
		public SMDatNote()
		{
		}
	}

	[Token(Token = "0x20003A1")]
	public class BypassCertificate : CertificateHandler
	{
		[Token(Token = "0x60018ED")]
		[Address(RVA = "0xA9D988", Offset = "0xA9D988", VA = "0xA9D988", Slot = "5")]
		protected override bool ValidateCertificate(byte[] certificateData)
		{
			return default(bool);
		}

		[Token(Token = "0x60018EE")]
		[Address(RVA = "0xA9D990", Offset = "0xA9D990", VA = "0xA9D990")]
		public BypassCertificate()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003A2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F98C8", Offset = "0x7F98C8")]
	private sealed class <>c
	{
		[Token(Token = "0x40024E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40024E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<Songs> <>9__557_0;

		[Token(Token = "0x40024E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Comparison<Songs> <>9__557_1;

		[Token(Token = "0x40024E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Comparison<Songs> <>9__557_2;

		[Token(Token = "0x40024E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Comparison<Songs> <>9__557_3;

		[Token(Token = "0x40024E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Comparison<Songs> <>9__557_4;

		[Token(Token = "0x40024E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Comparison<Songs> <>9__557_5;

		[Token(Token = "0x40024E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static Comparison<Songs> <>9__557_6;

		[Token(Token = "0x40024E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static Comparison<Songs> <>9__557_7;

		[Token(Token = "0x40024E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static Comparison<Songs> <>9__557_8;

		[Token(Token = "0x40024EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static Comparison<Songs> <>9__557_9;

		[Token(Token = "0x40024EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static Comparison<Songs> <>9__557_10;

		[Token(Token = "0x40024EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static Comparison<Songs> <>9__557_11;

		[Token(Token = "0x40024ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public static Comparison<Songs> <>9__557_12;

		[Token(Token = "0x40024EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public static Comparison<Songs> <>9__557_13;

		[Token(Token = "0x60018F0")]
		[Address(RVA = "0xB028F0", Offset = "0xB028F0", VA = "0xB028F0")]
		public <>c()
		{
		}

		[Token(Token = "0x60018F1")]
		[Address(RVA = "0xB028F8", Offset = "0xB028F8", VA = "0xB028F8")]
		internal int <Sorting>b__557_0(Songs songs1, Songs songs2)
		{
			return default(int);
		}

		[Token(Token = "0x60018F2")]
		[Address(RVA = "0xB02928", Offset = "0xB02928", VA = "0xB02928")]
		internal int <Sorting>b__557_1(Songs songs1, Songs songs2)
		{
			return default(int);
		}

		[Token(Token = "0x60018F3")]
		[Address(RVA = "0xB02958", Offset = "0xB02958", VA = "0xB02958")]
		internal int <Sorting>b__557_2(Songs songs1, Songs songs2)
		{
			return default(int);
		}

		[Token(Token = "0x60018F4")]
		[Address(RVA = "0xB02988", Offset = "0xB02988", VA = "0xB02988")]
		internal int <Sorting>b__557_3(Songs songs1, Songs songs2)
		{
			return default(int);
		}

		[Token(Token = "0x60018F5")]
		[Address(RVA = "0xB029B8", Offset = "0xB029B8", VA = "0xB029B8")]
		internal int <Sorting>b__557_4(Songs songs1, Songs songs2)
		{
			return default(int);
		}

		[Token(Token = "0x60018F6")]
		[Address(RVA = "0xB029E4", Offset = "0xB029E4", VA = "0xB029E4")]
		internal int <Sorting>b__557_5(Songs songs1, Songs songs2)
		{
			return default(int);
		}

		[Token(Token = "0x60018F7")]
		[Address(RVA = "0xB02A14", Offset = "0xB02A14", VA = "0xB02A14")]
		internal int <Sorting>b__557_6(Songs songs1, Songs songs2)
		{
			return default(int);
		}

		[Token(Token = "0x60018F8")]
		[Address(RVA = "0xB02A40", Offset = "0xB02A40", VA = "0xB02A40")]
		internal int <Sorting>b__557_7(Songs songs1, Songs songs2)
		{
			return default(int);
		}

		[Token(Token = "0x60018F9")]
		[Address(RVA = "0xB02A6C", Offset = "0xB02A6C", VA = "0xB02A6C")]
		internal int <Sorting>b__557_8(Songs songs1, Songs songs2)
		{
			return default(int);
		}

		[Token(Token = "0x60018FA")]
		[Address(RVA = "0xB02A98", Offset = "0xB02A98", VA = "0xB02A98")]
		internal int <Sorting>b__557_9(Songs songs1, Songs songs2)
		{
			return default(int);
		}

		[Token(Token = "0x60018FB")]
		[Address(RVA = "0xB02AC4", Offset = "0xB02AC4", VA = "0xB02AC4")]
		internal int <Sorting>b__557_10(Songs songs1, Songs songs2)
		{
			return default(int);
		}

		[Token(Token = "0x60018FC")]
		[Address(RVA = "0xB02AF0", Offset = "0xB02AF0", VA = "0xB02AF0")]
		internal int <Sorting>b__557_11(Songs songs1, Songs songs2)
		{
			return default(int);
		}

		[Token(Token = "0x60018FD")]
		[Address(RVA = "0xB02B1C", Offset = "0xB02B1C", VA = "0xB02B1C")]
		internal int <Sorting>b__557_12(Songs songs1, Songs songs2)
		{
			return default(int);
		}

		[Token(Token = "0x60018FE")]
		[Address(RVA = "0xB02B48", Offset = "0xB02B48", VA = "0xB02B48")]
		internal int <Sorting>b__557_13(Songs songs1, Songs songs2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x20003A3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F98D8", Offset = "0x7F98D8")]
	private sealed class <getstar>d__562 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40024F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40024F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SongList <>4__this;

		[Token(Token = "0x1700030B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001902")]
			[Address(RVA = "0xB103BC", Offset = "0xB103BC", VA = "0xB103BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001904")]
			[Address(RVA = "0xB10428", Offset = "0xB10428", VA = "0xB10428", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018FF")]
		[Address(RVA = "0xB102C0", Offset = "0xB102C0", VA = "0xB102C0")]
		[DebuggerHidden]
		public <getstar>d__562(int <>1__state)
		{
		}

		[Token(Token = "0x6001900")]
		[Address(RVA = "0xB102EC", Offset = "0xB102EC", VA = "0xB102EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001901")]
		[Address(RVA = "0xB102F0", Offset = "0xB102F0", VA = "0xB102F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001903")]
		[Address(RVA = "0xB103C4", Offset = "0xB103C4", VA = "0xB103C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F98E8", Offset = "0x7F98E8")]
	private sealed class <DownloadSongList>d__569 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40024F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40024F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SongList <>4__this;

		[Token(Token = "0x40024F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool ender;

		[Token(Token = "0x40024F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x1700030D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001908")]
			[Address(RVA = "0xB03D24", Offset = "0xB03D24", VA = "0xB03D24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600190A")]
			[Address(RVA = "0xB03D90", Offset = "0xB03D90", VA = "0xB03D90", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001905")]
		[Address(RVA = "0xB036D8", Offset = "0xB036D8", VA = "0xB036D8")]
		[DebuggerHidden]
		public <DownloadSongList>d__569(int <>1__state)
		{
		}

		[Token(Token = "0x6001906")]
		[Address(RVA = "0xB03704", Offset = "0xB03704", VA = "0xB03704", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001907")]
		[Address(RVA = "0xB03708", Offset = "0xB03708", VA = "0xB03708", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001909")]
		[Address(RVA = "0xB03D2C", Offset = "0xB03D2C", VA = "0xB03D2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003A5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F98F8", Offset = "0x7F98F8")]
	private sealed class <LoadDownloads>d__570 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40024F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40024F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SongList <>4__this;

		[Token(Token = "0x40024FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x1700030F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600190E")]
			[Address(RVA = "0xB05134", Offset = "0xB05134", VA = "0xB05134", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000310")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001910")]
			[Address(RVA = "0xB051A0", Offset = "0xB051A0", VA = "0xB051A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600190B")]
		[Address(RVA = "0xB05000", Offset = "0xB05000", VA = "0xB05000")]
		[DebuggerHidden]
		public <LoadDownloads>d__570(int <>1__state)
		{
		}

		[Token(Token = "0x600190C")]
		[Address(RVA = "0xB0502C", Offset = "0xB0502C", VA = "0xB0502C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600190D")]
		[Address(RVA = "0xB05030", Offset = "0xB05030", VA = "0xB05030", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600190F")]
		[Address(RVA = "0xB0513C", Offset = "0xB0513C", VA = "0xB0513C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003A6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9908", Offset = "0x7F9908")]
	private sealed class <DownloadSongList_alternative>d__571 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40024FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40024FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40024FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SongList <>4__this;

		[Token(Token = "0x40024FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int index;

		[Token(Token = "0x40024FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool ender;

		[Token(Token = "0x4002500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x4002501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <i>5__3;

		[Token(Token = "0x17000311")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001914")]
			[Address(RVA = "0xB045B4", Offset = "0xB045B4", VA = "0xB045B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000312")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001916")]
			[Address(RVA = "0xB04620", Offset = "0xB04620", VA = "0xB04620", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001911")]
		[Address(RVA = "0xB03D98", Offset = "0xB03D98", VA = "0xB03D98")]
		[DebuggerHidden]
		public <DownloadSongList_alternative>d__571(int <>1__state)
		{
		}

		[Token(Token = "0x6001912")]
		[Address(RVA = "0xB03DC4", Offset = "0xB03DC4", VA = "0xB03DC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001913")]
		[Address(RVA = "0xB03DC8", Offset = "0xB03DC8", VA = "0xB03DC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001915")]
		[Address(RVA = "0xB045BC", Offset = "0xB045BC", VA = "0xB045BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003A7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9918", Offset = "0x7F9918")]
	private sealed class <Download_Cover>d__572 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string cover;

		[Token(Token = "0x4002505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SongList <>4__this;

		[Token(Token = "0x4002506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int index;

		[Token(Token = "0x4002507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int num;

		[Token(Token = "0x4002508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x17000313")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600191A")]
			[Address(RVA = "0xB04C88", Offset = "0xB04C88", VA = "0xB04C88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000314")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600191C")]
			[Address(RVA = "0xB04CF4", Offset = "0xB04CF4", VA = "0xB04CF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001917")]
		[Address(RVA = "0xB049BC", Offset = "0xB049BC", VA = "0xB049BC")]
		[DebuggerHidden]
		public <Download_Cover>d__572(int <>1__state)
		{
		}

		[Token(Token = "0x6001918")]
		[Address(RVA = "0xB049E8", Offset = "0xB049E8", VA = "0xB049E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001919")]
		[Address(RVA = "0xB049EC", Offset = "0xB049EC", VA = "0xB049EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600191B")]
		[Address(RVA = "0xB04C90", Offset = "0xB04C90", VA = "0xB04C90", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9928", Offset = "0x7F9928")]
	private sealed class <_unpack>d__573 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400250A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400250B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SongList <>4__this;

		[Token(Token = "0x400250C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Stream res;

		[Token(Token = "0x400250D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string docPath;

		[Token(Token = "0x400250E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ZipInputStream <s>5__2;

		[Token(Token = "0x400250F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <filename>5__3;

		[Token(Token = "0x17000315")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001921")]
			[Address(RVA = "0xB05ED4", Offset = "0xB05ED4", VA = "0xB05ED4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000316")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001923")]
			[Address(RVA = "0xB05F40", Offset = "0xB05F40", VA = "0xB05F40", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600191D")]
		[Address(RVA = "0xB05460", Offset = "0xB05460", VA = "0xB05460")]
		[DebuggerHidden]
		public <_unpack>d__573(int <>1__state)
		{
		}

		[Token(Token = "0x600191E")]
		[Address(RVA = "0xB0548C", Offset = "0xB0548C", VA = "0xB0548C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600191F")]
		[Address(RVA = "0xB05568", Offset = "0xB05568", VA = "0xB05568", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001920")]
		[Address(RVA = "0xB054A8", Offset = "0xB054A8", VA = "0xB054A8")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6001922")]
		[Address(RVA = "0xB05EDC", Offset = "0xB05EDC", VA = "0xB05EDC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003A9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9938", Offset = "0x7F9938")]
	private sealed class <DownloadSongFromList>d__574 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SongList <>4__this;

		[Token(Token = "0x4002513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string _link;

		[Token(Token = "0x4002514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x4002515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UnityWebRequestAsyncOperation <async>5__3;

		[Token(Token = "0x17000317")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001927")]
			[Address(RVA = "0xB03664", Offset = "0xB03664", VA = "0xB03664", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000318")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001929")]
			[Address(RVA = "0xB036D0", Offset = "0xB036D0", VA = "0xB036D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001924")]
		[Address(RVA = "0xB02EEC", Offset = "0xB02EEC", VA = "0xB02EEC")]
		[DebuggerHidden]
		public <DownloadSongFromList>d__574(int <>1__state)
		{
		}

		[Token(Token = "0x6001925")]
		[Address(RVA = "0xB02F18", Offset = "0xB02F18", VA = "0xB02F18", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001926")]
		[Address(RVA = "0xB02F1C", Offset = "0xB02F1C", VA = "0xB02F1C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001928")]
		[Address(RVA = "0xB0366C", Offset = "0xB0366C", VA = "0xB0366C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003AA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9948", Offset = "0x7F9948")]
	private sealed class <cloadscorefriends>d__601 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SongList <>4__this;

		[Token(Token = "0x4002519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string udata;

		[Token(Token = "0x400251A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int fh;

		[Token(Token = "0x400251B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x17000319")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600192E")]
			[Address(RVA = "0xB0D748", Offset = "0xB0D748", VA = "0xB0D748", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001930")]
			[Address(RVA = "0xB0D7B4", Offset = "0xB0D7B4", VA = "0xB0D7B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600192A")]
		[Address(RVA = "0xB0B508", Offset = "0xB0B508", VA = "0xB0B508")]
		[DebuggerHidden]
		public <cloadscorefriends>d__601(int <>1__state)
		{
		}

		[Token(Token = "0x600192B")]
		[Address(RVA = "0xB0B534", Offset = "0xB0B534", VA = "0xB0B534", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600192C")]
		[Address(RVA = "0xB0B610", Offset = "0xB0B610", VA = "0xB0B610", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600192D")]
		[Address(RVA = "0xB0B550", Offset = "0xB0B550", VA = "0xB0B550")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x600192F")]
		[Address(RVA = "0xB0D750", Offset = "0xB0D750", VA = "0xB0D750", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003AB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9958", Offset = "0x7F9958")]
	private sealed class <cloadscoreparty>d__602 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400251C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400251D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400251E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SongList <>4__this;

		[Token(Token = "0x400251F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string udata;

		[Token(Token = "0x4002520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int fh;

		[Token(Token = "0x4002521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x1700031B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001935")]
			[Address(RVA = "0xB0F9FC", Offset = "0xB0F9FC", VA = "0xB0F9FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001937")]
			[Address(RVA = "0xB0FA68", Offset = "0xB0FA68", VA = "0xB0FA68", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001931")]
		[Address(RVA = "0xB0D7BC", Offset = "0xB0D7BC", VA = "0xB0D7BC")]
		[DebuggerHidden]
		public <cloadscoreparty>d__602(int <>1__state)
		{
		}

		[Token(Token = "0x6001932")]
		[Address(RVA = "0xB0D7E8", Offset = "0xB0D7E8", VA = "0xB0D7E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001933")]
		[Address(RVA = "0xB0D8C4", Offset = "0xB0D8C4", VA = "0xB0D8C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001934")]
		[Address(RVA = "0xB0D804", Offset = "0xB0D804", VA = "0xB0D804")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6001936")]
		[Address(RVA = "0xB0FA04", Offset = "0xB0FA04", VA = "0xB0FA04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9968", Offset = "0x7F9968")]
	private sealed class <cloadscorecenter>d__603 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SongList <>4__this;

		[Token(Token = "0x4002525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string udata;

		[Token(Token = "0x4002526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int fh;

		[Token(Token = "0x4002527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x1700031D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600193C")]
			[Address(RVA = "0xB0B494", Offset = "0xB0B494", VA = "0xB0B494", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600193E")]
			[Address(RVA = "0xB0B500", Offset = "0xB0B500", VA = "0xB0B500", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001938")]
		[Address(RVA = "0xB09254", Offset = "0xB09254", VA = "0xB09254")]
		[DebuggerHidden]
		public <cloadscorecenter>d__603(int <>1__state)
		{
		}

		[Token(Token = "0x6001939")]
		[Address(RVA = "0xB09280", Offset = "0xB09280", VA = "0xB09280", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600193A")]
		[Address(RVA = "0xB0935C", Offset = "0xB0935C", VA = "0xB0935C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600193B")]
		[Address(RVA = "0xB0929C", Offset = "0xB0929C", VA = "0xB0929C")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x600193D")]
		[Address(RVA = "0xB0B49C", Offset = "0xB0B49C", VA = "0xB0B49C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003AD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9978", Offset = "0x7F9978")]
	private sealed class <cloadscoreFirstx>d__604 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400252A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SongList <>4__this;

		[Token(Token = "0x400252B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string udata;

		[Token(Token = "0x400252C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int fh;

		[Token(Token = "0x400252D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x1700031F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001943")]
			[Address(RVA = "0xB089EC", Offset = "0xB089EC", VA = "0xB089EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000320")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001945")]
			[Address(RVA = "0xB08A58", Offset = "0xB08A58", VA = "0xB08A58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600193F")]
		[Address(RVA = "0xB06778", Offset = "0xB06778", VA = "0xB06778")]
		[DebuggerHidden]
		public <cloadscoreFirstx>d__604(int <>1__state)
		{
		}

		[Token(Token = "0x6001940")]
		[Address(RVA = "0xB067A4", Offset = "0xB067A4", VA = "0xB067A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001941")]
		[Address(RVA = "0xB06880", Offset = "0xB06880", VA = "0xB06880", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001942")]
		[Address(RVA = "0xB067C0", Offset = "0xB067C0", VA = "0xB067C0")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6001944")]
		[Address(RVA = "0xB089F4", Offset = "0xB089F4", VA = "0xB089F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003AE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9988", Offset = "0x7F9988")]
	private sealed class <loadleaderkings>d__606 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400252E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400252F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SongList <>4__this;

		[Token(Token = "0x4002531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int fh;

		[Token(Token = "0x4002532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x17000321")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600194A")]
			[Address(RVA = "0xB1AD5C", Offset = "0xB1AD5C", VA = "0xB1AD5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000322")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600194C")]
			[Address(RVA = "0xB1ADC8", Offset = "0xB1ADC8", VA = "0xB1ADC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001946")]
		[Address(RVA = "0xB18C50", Offset = "0xB18C50", VA = "0xB18C50")]
		[DebuggerHidden]
		public <loadleaderkings>d__606(int <>1__state)
		{
		}

		[Token(Token = "0x6001947")]
		[Address(RVA = "0xB18C7C", Offset = "0xB18C7C", VA = "0xB18C7C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001948")]
		[Address(RVA = "0xB18D58", Offset = "0xB18D58", VA = "0xB18D58", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001949")]
		[Address(RVA = "0xB18C98", Offset = "0xB18C98", VA = "0xB18C98")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x600194B")]
		[Address(RVA = "0xB1AD64", Offset = "0xB1AD64", VA = "0xB1AD64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003AF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9998", Offset = "0x7F9998")]
	private sealed class <loadleadercal>d__607 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SongList <>4__this;

		[Token(Token = "0x4002536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int fh;

		[Token(Token = "0x4002537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x17000323")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001951")]
			[Address(RVA = "0xB1753C", Offset = "0xB1753C", VA = "0xB1753C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000324")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001953")]
			[Address(RVA = "0xB175A8", Offset = "0xB175A8", VA = "0xB175A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600194D")]
		[Address(RVA = "0xB15F18", Offset = "0xB15F18", VA = "0xB15F18")]
		[DebuggerHidden]
		public <loadleadercal>d__607(int <>1__state)
		{
		}

		[Token(Token = "0x600194E")]
		[Address(RVA = "0xB15F44", Offset = "0xB15F44", VA = "0xB15F44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600194F")]
		[Address(RVA = "0xB16020", Offset = "0xB16020", VA = "0xB16020", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001950")]
		[Address(RVA = "0xB15F60", Offset = "0xB15F60", VA = "0xB15F60")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6001952")]
		[Address(RVA = "0xB17544", Offset = "0xB17544", VA = "0xB17544", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F99A8", Offset = "0x7F99A8")]
	private sealed class <loadleaderchamp>d__608 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400253A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SongList <>4__this;

		[Token(Token = "0x400253B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int fh;

		[Token(Token = "0x400253C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x17000325")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001958")]
			[Address(RVA = "0xB18BDC", Offset = "0xB18BDC", VA = "0xB18BDC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000326")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600195A")]
			[Address(RVA = "0xB18C48", Offset = "0xB18C48", VA = "0xB18C48", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001954")]
		[Address(RVA = "0xB175B0", Offset = "0xB175B0", VA = "0xB175B0")]
		[DebuggerHidden]
		public <loadleaderchamp>d__608(int <>1__state)
		{
		}

		[Token(Token = "0x6001955")]
		[Address(RVA = "0xB175DC", Offset = "0xB175DC", VA = "0xB175DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001956")]
		[Address(RVA = "0xB176B8", Offset = "0xB176B8", VA = "0xB176B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001957")]
		[Address(RVA = "0xB175F8", Offset = "0xB175F8", VA = "0xB175F8")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6001959")]
		[Address(RVA = "0xB18BE4", Offset = "0xB18BE4", VA = "0xB18BE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003B1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F99B8", Offset = "0x7F99B8")]
	private sealed class <loadleaderbest>d__609 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400253D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400253E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400253F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SongList <>4__this;

		[Token(Token = "0x4002540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x17000327")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600195F")]
			[Address(RVA = "0xB15EA4", Offset = "0xB15EA4", VA = "0xB15EA4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000328")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001961")]
			[Address(RVA = "0xB15F10", Offset = "0xB15F10", VA = "0xB15F10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600195B")]
		[Address(RVA = "0xB130D8", Offset = "0xB130D8", VA = "0xB130D8")]
		[DebuggerHidden]
		public <loadleaderbest>d__609(int <>1__state)
		{
		}

		[Token(Token = "0x600195C")]
		[Address(RVA = "0xB13104", Offset = "0xB13104", VA = "0xB13104", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600195D")]
		[Address(RVA = "0xB131E0", Offset = "0xB131E0", VA = "0xB131E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600195E")]
		[Address(RVA = "0xB13120", Offset = "0xB13120", VA = "0xB13120")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6001960")]
		[Address(RVA = "0xB15EAC", Offset = "0xB15EAC", VA = "0xB15EAC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003B2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F99C8", Offset = "0x7F99C8")]
	private sealed class <loadscorefriends>d__610 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SongList <>4__this;

		[Token(Token = "0x4002544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string udata;

		[Token(Token = "0x4002545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int fh;

		[Token(Token = "0x4002546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x17000329")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001966")]
			[Address(RVA = "0xB23CEC", Offset = "0xB23CEC", VA = "0xB23CEC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001968")]
			[Address(RVA = "0xB23D58", Offset = "0xB23D58", VA = "0xB23D58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001962")]
		[Address(RVA = "0xB21AAC", Offset = "0xB21AAC", VA = "0xB21AAC")]
		[DebuggerHidden]
		public <loadscorefriends>d__610(int <>1__state)
		{
		}

		[Token(Token = "0x6001963")]
		[Address(RVA = "0xB21AD8", Offset = "0xB21AD8", VA = "0xB21AD8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001964")]
		[Address(RVA = "0xB21BB4", Offset = "0xB21BB4", VA = "0xB21BB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001965")]
		[Address(RVA = "0xB21AF4", Offset = "0xB21AF4", VA = "0xB21AF4")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6001967")]
		[Address(RVA = "0xB23CF4", Offset = "0xB23CF4", VA = "0xB23CF4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003B3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F99D8", Offset = "0x7F99D8")]
	private sealed class <loadscoreparty>d__611 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SongList <>4__this;

		[Token(Token = "0x400254A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string udata;

		[Token(Token = "0x400254B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int fh;

		[Token(Token = "0x400254C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x1700032B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600196D")]
			[Address(RVA = "0xB25FA0", Offset = "0xB25FA0", VA = "0xB25FA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600196F")]
			[Address(RVA = "0xB2600C", Offset = "0xB2600C", VA = "0xB2600C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001969")]
		[Address(RVA = "0xB23D60", Offset = "0xB23D60", VA = "0xB23D60")]
		[DebuggerHidden]
		public <loadscoreparty>d__611(int <>1__state)
		{
		}

		[Token(Token = "0x600196A")]
		[Address(RVA = "0xB23D8C", Offset = "0xB23D8C", VA = "0xB23D8C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600196B")]
		[Address(RVA = "0xB23E68", Offset = "0xB23E68", VA = "0xB23E68", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600196C")]
		[Address(RVA = "0xB23DA8", Offset = "0xB23DA8", VA = "0xB23DA8")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x600196E")]
		[Address(RVA = "0xB25FA8", Offset = "0xB25FA8", VA = "0xB25FA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F99E8", Offset = "0x7F99E8")]
	private sealed class <loadscorecenter>d__612 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400254D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400254E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400254F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SongList <>4__this;

		[Token(Token = "0x4002550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string udata;

		[Token(Token = "0x4002551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int fh;

		[Token(Token = "0x4002552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <zalsong_id>5__2;

		[Token(Token = "0x4002553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int <zaldiff>5__3;

		[Token(Token = "0x4002554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int <gametyp>5__4;

		[Token(Token = "0x4002555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private UnityWebRequest <www>5__5;

		[Token(Token = "0x1700032D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001974")]
			[Address(RVA = "0xB21A38", Offset = "0xB21A38", VA = "0xB21A38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001976")]
			[Address(RVA = "0xB21AA4", Offset = "0xB21AA4", VA = "0xB21AA4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001970")]
		[Address(RVA = "0xB1F554", Offset = "0xB1F554", VA = "0xB1F554")]
		[DebuggerHidden]
		public <loadscorecenter>d__612(int <>1__state)
		{
		}

		[Token(Token = "0x6001971")]
		[Address(RVA = "0xB1F580", Offset = "0xB1F580", VA = "0xB1F580", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001972")]
		[Address(RVA = "0xB1F65C", Offset = "0xB1F65C", VA = "0xB1F65C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001973")]
		[Address(RVA = "0xB1F59C", Offset = "0xB1F59C", VA = "0xB1F59C")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6001975")]
		[Address(RVA = "0xB21A40", Offset = "0xB21A40", VA = "0xB21A40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003B5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F99F8", Offset = "0x7F99F8")]
	private sealed class <cloadscoreFirstxNew>d__614 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SongList <>4__this;

		[Token(Token = "0x4002559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string <udata>5__2;

		[Token(Token = "0x400255A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string <zaludata>5__3;

		[Token(Token = "0x400255B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UnityWebRequest <www>5__4;

		[Token(Token = "0x1700032F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600197B")]
			[Address(RVA = "0xB091E0", Offset = "0xB091E0", VA = "0xB091E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000330")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600197D")]
			[Address(RVA = "0xB0924C", Offset = "0xB0924C", VA = "0xB0924C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001977")]
		[Address(RVA = "0xB08A60", Offset = "0xB08A60", VA = "0xB08A60")]
		[DebuggerHidden]
		public <cloadscoreFirstxNew>d__614(int <>1__state)
		{
		}

		[Token(Token = "0x6001978")]
		[Address(RVA = "0xB08A8C", Offset = "0xB08A8C", VA = "0xB08A8C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001979")]
		[Address(RVA = "0xB08B68", Offset = "0xB08B68", VA = "0xB08B68", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600197A")]
		[Address(RVA = "0xB08AA8", Offset = "0xB08AA8", VA = "0xB08AA8")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x600197C")]
		[Address(RVA = "0xB091E8", Offset = "0xB091E8", VA = "0xB091E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003B6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9A08", Offset = "0x7F9A08")]
	private sealed class <loadscoreFirstxNew>d__615 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400255C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400255D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400255E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SongList <>4__this;

		[Token(Token = "0x400255F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string <udata>5__2;

		[Token(Token = "0x4002560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string <zaludata>5__3;

		[Token(Token = "0x4002561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UnityWebRequest <www>5__4;

		[Token(Token = "0x17000331")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001982")]
			[Address(RVA = "0xB1EE60", Offset = "0xB1EE60", VA = "0xB1EE60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000332")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001984")]
			[Address(RVA = "0xB1EECC", Offset = "0xB1EECC", VA = "0xB1EECC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600197E")]
		[Address(RVA = "0xB1E6D8", Offset = "0xB1E6D8", VA = "0xB1E6D8")]
		[DebuggerHidden]
		public <loadscoreFirstxNew>d__615(int <>1__state)
		{
		}

		[Token(Token = "0x600197F")]
		[Address(RVA = "0xB1E704", Offset = "0xB1E704", VA = "0xB1E704", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001980")]
		[Address(RVA = "0xB1E7E0", Offset = "0xB1E7E0", VA = "0xB1E7E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001981")]
		[Address(RVA = "0xB1E720", Offset = "0xB1E720", VA = "0xB1E720")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6001983")]
		[Address(RVA = "0xB1EE68", Offset = "0xB1EE68", VA = "0xB1EE68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003B7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9A18", Offset = "0x7F9A18")]
	private sealed class <loadscoreFirstx>d__616 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SongList <>4__this;

		[Token(Token = "0x4002565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string udata;

		[Token(Token = "0x4002566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int fh;

		[Token(Token = "0x4002567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <zalsong_id>5__2;

		[Token(Token = "0x4002568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int <zaldiff>5__3;

		[Token(Token = "0x4002569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int <gametyp>5__4;

		[Token(Token = "0x400256A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private UnityWebRequest <www>5__5;

		[Token(Token = "0x17000333")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001989")]
			[Address(RVA = "0xB1E664", Offset = "0xB1E664", VA = "0xB1E664", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000334")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600198B")]
			[Address(RVA = "0xB1E6D0", Offset = "0xB1E6D0", VA = "0xB1E6D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001985")]
		[Address(RVA = "0xB1C0FC", Offset = "0xB1C0FC", VA = "0xB1C0FC")]
		[DebuggerHidden]
		public <loadscoreFirstx>d__616(int <>1__state)
		{
		}

		[Token(Token = "0x6001986")]
		[Address(RVA = "0xB1C128", Offset = "0xB1C128", VA = "0xB1C128", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001987")]
		[Address(RVA = "0xB1C204", Offset = "0xB1C204", VA = "0xB1C204", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001988")]
		[Address(RVA = "0xB1C144", Offset = "0xB1C144", VA = "0xB1C144")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x600198A")]
		[Address(RVA = "0xB1E66C", Offset = "0xB1E66C", VA = "0xB1E66C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9A28", Offset = "0x7F9A28")]
	private sealed class <loadleaders>d__617 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400256B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400256C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400256D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SongList <>4__this;

		[Token(Token = "0x400256E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x17000335")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001990")]
			[Address(RVA = "0xB1C088", Offset = "0xB1C088", VA = "0xB1C088", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000336")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001992")]
			[Address(RVA = "0xB1C0F4", Offset = "0xB1C0F4", VA = "0xB1C0F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600198C")]
		[Address(RVA = "0xB1ADD0", Offset = "0xB1ADD0", VA = "0xB1ADD0")]
		[DebuggerHidden]
		public <loadleaders>d__617(int <>1__state)
		{
		}

		[Token(Token = "0x600198D")]
		[Address(RVA = "0xB1ADFC", Offset = "0xB1ADFC", VA = "0xB1ADFC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600198E")]
		[Address(RVA = "0xB1AED8", Offset = "0xB1AED8", VA = "0xB1AED8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600198F")]
		[Address(RVA = "0xB1AE18", Offset = "0xB1AE18", VA = "0xB1AE18")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6001991")]
		[Address(RVA = "0xB1C090", Offset = "0xB1C090", VA = "0xB1C090", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003B9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9A38", Offset = "0x7F9A38")]
	private sealed class <cscoresave>d__618 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400256F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string udata;

		[Token(Token = "0x4002572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x17000337")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001997")]
			[Address(RVA = "0xB0FE38", Offset = "0xB0FE38", VA = "0xB0FE38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000338")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001999")]
			[Address(RVA = "0xB0FEA4", Offset = "0xB0FEA4", VA = "0xB0FEA4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001993")]
		[Address(RVA = "0xB0FA70", Offset = "0xB0FA70", VA = "0xB0FA70")]
		[DebuggerHidden]
		public <cscoresave>d__618(int <>1__state)
		{
		}

		[Token(Token = "0x6001994")]
		[Address(RVA = "0xB0FA9C", Offset = "0xB0FA9C", VA = "0xB0FA9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001995")]
		[Address(RVA = "0xB0FB78", Offset = "0xB0FB78", VA = "0xB0FB78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001996")]
		[Address(RVA = "0xB0FAB8", Offset = "0xB0FAB8", VA = "0xB0FAB8")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6001998")]
		[Address(RVA = "0xB0FE40", Offset = "0xB0FE40", VA = "0xB0FE40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003BA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9A48", Offset = "0x7F9A48")]
	private sealed class <delsave>d__619 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string udata;

		[Token(Token = "0x4002576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x17000339")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600199E")]
			[Address(RVA = "0xB1024C", Offset = "0xB1024C", VA = "0xB1024C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019A0")]
			[Address(RVA = "0xB102B8", Offset = "0xB102B8", VA = "0xB102B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600199A")]
		[Address(RVA = "0xB0FEAC", Offset = "0xB0FEAC", VA = "0xB0FEAC")]
		[DebuggerHidden]
		public <delsave>d__619(int <>1__state)
		{
		}

		[Token(Token = "0x600199B")]
		[Address(RVA = "0xB0FED8", Offset = "0xB0FED8", VA = "0xB0FED8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600199C")]
		[Address(RVA = "0xB0FFB4", Offset = "0xB0FFB4", VA = "0xB0FFB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600199D")]
		[Address(RVA = "0xB0FEF4", Offset = "0xB0FEF4", VA = "0xB0FEF4")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x600199F")]
		[Address(RVA = "0xB10254", Offset = "0xB10254", VA = "0xB10254", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003BB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9A58", Offset = "0x7F9A58")]
	private sealed class <calsave>d__620 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string udata;

		[Token(Token = "0x400257A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x1700033B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60019A5")]
			[Address(RVA = "0xB062B4", Offset = "0xB062B4", VA = "0xB062B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019A7")]
			[Address(RVA = "0xB06320", Offset = "0xB06320", VA = "0xB06320", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019A1")]
		[Address(RVA = "0xB05F48", Offset = "0xB05F48", VA = "0xB05F48")]
		[DebuggerHidden]
		public <calsave>d__620(int <>1__state)
		{
		}

		[Token(Token = "0x60019A2")]
		[Address(RVA = "0xB05F74", Offset = "0xB05F74", VA = "0xB05F74", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019A3")]
		[Address(RVA = "0xB06050", Offset = "0xB06050", VA = "0xB06050", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019A4")]
		[Address(RVA = "0xB05F90", Offset = "0xB05F90", VA = "0xB05F90")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60019A6")]
		[Address(RVA = "0xB062BC", Offset = "0xB062BC", VA = "0xB062BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9A68", Offset = "0x7F9A68")]
	private sealed class <scoresave>d__621 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400257B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400257C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400257D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string udata;

		[Token(Token = "0x400257E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x1700033D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60019AC")]
			[Address(RVA = "0xA9D4B4", Offset = "0xA9D4B4", VA = "0xA9D4B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019AE")]
			[Address(RVA = "0xA9D520", Offset = "0xA9D520", VA = "0xA9D520", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019A8")]
		[Address(RVA = "0xA9D0EC", Offset = "0xA9D0EC", VA = "0xA9D0EC")]
		[DebuggerHidden]
		public <scoresave>d__621(int <>1__state)
		{
		}

		[Token(Token = "0x60019A9")]
		[Address(RVA = "0xA9D118", Offset = "0xA9D118", VA = "0xA9D118", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019AA")]
		[Address(RVA = "0xA9D1F4", Offset = "0xA9D1F4", VA = "0xA9D1F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019AB")]
		[Address(RVA = "0xA9D134", Offset = "0xA9D134", VA = "0xA9D134")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60019AD")]
		[Address(RVA = "0xA9D4BC", Offset = "0xA9D4BC", VA = "0xA9D4BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003BD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9A78", Offset = "0x7F9A78")]
	private sealed class <scoresave_beaters>d__622 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400257F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string udata;

		[Token(Token = "0x4002582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x1700033F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60019B3")]
			[Address(RVA = "0xA9D914", Offset = "0xA9D914", VA = "0xA9D914", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000340")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019B5")]
			[Address(RVA = "0xA9D980", Offset = "0xA9D980", VA = "0xA9D980", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019AF")]
		[Address(RVA = "0xA9D528", Offset = "0xA9D528", VA = "0xA9D528")]
		[DebuggerHidden]
		public <scoresave_beaters>d__622(int <>1__state)
		{
		}

		[Token(Token = "0x60019B0")]
		[Address(RVA = "0xA9D554", Offset = "0xA9D554", VA = "0xA9D554", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019B1")]
		[Address(RVA = "0xA9D630", Offset = "0xA9D630", VA = "0xA9D630", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019B2")]
		[Address(RVA = "0xA9D570", Offset = "0xA9D570", VA = "0xA9D570")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60019B4")]
		[Address(RVA = "0xA9D91C", Offset = "0xA9D91C", VA = "0xA9D91C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003BE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9A88", Offset = "0x7F9A88")]
	private sealed class <loadleaderbeaters>d__624 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SongList <>4__this;

		[Token(Token = "0x4002586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x17000341")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60019BA")]
			[Address(RVA = "0xB13064", Offset = "0xB13064", VA = "0xB13064", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000342")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019BC")]
			[Address(RVA = "0xB130D0", Offset = "0xB130D0", VA = "0xB130D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019B6")]
		[Address(RVA = "0xB117C4", Offset = "0xB117C4", VA = "0xB117C4")]
		[DebuggerHidden]
		public <loadleaderbeaters>d__624(int <>1__state)
		{
		}

		[Token(Token = "0x60019B7")]
		[Address(RVA = "0xB117F0", Offset = "0xB117F0", VA = "0xB117F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019B8")]
		[Address(RVA = "0xB118CC", Offset = "0xB118CC", VA = "0xB118CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019B9")]
		[Address(RVA = "0xB1180C", Offset = "0xB1180C", VA = "0xB1180C")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60019BB")]
		[Address(RVA = "0xB1306C", Offset = "0xB1306C", VA = "0xB1306C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003BF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9A98", Offset = "0x7F9A98")]
	private sealed class <loadscore_two_beaters>d__625 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string udata;

		[Token(Token = "0x400258A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x17000343")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60019C1")]
			[Address(RVA = "0xB1F4E0", Offset = "0xB1F4E0", VA = "0xB1F4E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000344")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019C3")]
			[Address(RVA = "0xB1F54C", Offset = "0xB1F54C", VA = "0xB1F54C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019BD")]
		[Address(RVA = "0xB1EED4", Offset = "0xB1EED4", VA = "0xB1EED4")]
		[DebuggerHidden]
		public <loadscore_two_beaters>d__625(int <>1__state)
		{
		}

		[Token(Token = "0x60019BE")]
		[Address(RVA = "0xB1EF00", Offset = "0xB1EF00", VA = "0xB1EF00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019BF")]
		[Address(RVA = "0xB1EFDC", Offset = "0xB1EFDC", VA = "0xB1EFDC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019C0")]
		[Address(RVA = "0xB1EF1C", Offset = "0xB1EF1C", VA = "0xB1EF1C")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60019C2")]
		[Address(RVA = "0xB1F4E8", Offset = "0xB1F4E8", VA = "0xB1F4E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003C0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9AA8", Offset = "0x7F9AA8")]
	private sealed class <join_champs>d__640 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400258B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400258C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400258D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string udata;

		[Token(Token = "0x400258E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SongList <>4__this;

		[Token(Token = "0x400258F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x17000345")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60019C8")]
			[Address(RVA = "0xB1128C", Offset = "0xB1128C", VA = "0xB1128C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000346")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019CA")]
			[Address(RVA = "0xB112F8", Offset = "0xB112F8", VA = "0xB112F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019C4")]
		[Address(RVA = "0xB10430", Offset = "0xB10430", VA = "0xB10430")]
		[DebuggerHidden]
		public <join_champs>d__640(int <>1__state)
		{
		}

		[Token(Token = "0x60019C5")]
		[Address(RVA = "0xB1045C", Offset = "0xB1045C", VA = "0xB1045C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019C6")]
		[Address(RVA = "0xB10538", Offset = "0xB10538", VA = "0xB10538", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019C7")]
		[Address(RVA = "0xB10478", Offset = "0xB10478", VA = "0xB10478")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60019C9")]
		[Address(RVA = "0xB11294", Offset = "0xB11294", VA = "0xB11294", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003C1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9AB8", Offset = "0x7F9AB8")]
	private sealed class <join_multi>d__641 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string udata;

		[Token(Token = "0x4002593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x17000347")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60019CF")]
			[Address(RVA = "0xB11750", Offset = "0xB11750", VA = "0xB11750", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000348")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019D1")]
			[Address(RVA = "0xB117BC", Offset = "0xB117BC", VA = "0xB117BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019CB")]
		[Address(RVA = "0xB11300", Offset = "0xB11300", VA = "0xB11300")]
		[DebuggerHidden]
		public <join_multi>d__641(int <>1__state)
		{
		}

		[Token(Token = "0x60019CC")]
		[Address(RVA = "0xB1132C", Offset = "0xB1132C", VA = "0xB1132C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019CD")]
		[Address(RVA = "0xB11408", Offset = "0xB11408", VA = "0xB11408", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019CE")]
		[Address(RVA = "0xB11348", Offset = "0xB11348", VA = "0xB11348")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60019D0")]
		[Address(RVA = "0xB11758", Offset = "0xB11758", VA = "0xB11758", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003C2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9AC8", Offset = "0x7F9AC8")]
	private sealed class <check_multi>d__642 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string udata;

		[Token(Token = "0x4002597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x17000349")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60019D6")]
			[Address(RVA = "0xB06704", Offset = "0xB06704", VA = "0xB06704", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019D8")]
			[Address(RVA = "0xB06770", Offset = "0xB06770", VA = "0xB06770", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019D2")]
		[Address(RVA = "0xB06328", Offset = "0xB06328", VA = "0xB06328")]
		[DebuggerHidden]
		public <check_multi>d__642(int <>1__state)
		{
		}

		[Token(Token = "0x60019D3")]
		[Address(RVA = "0xB06354", Offset = "0xB06354", VA = "0xB06354", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019D4")]
		[Address(RVA = "0xB06430", Offset = "0xB06430", VA = "0xB06430", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019D5")]
		[Address(RVA = "0xB06370", Offset = "0xB06370", VA = "0xB06370")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60019D7")]
		[Address(RVA = "0xB0670C", Offset = "0xB0670C", VA = "0xB0670C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003C3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9AD8", Offset = "0x7F9AD8")]
	private sealed class <score_champs>d__646 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400259A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string udata;

		[Token(Token = "0x400259B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool with_sending;

		[Token(Token = "0x400259C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SongList <>4__this;

		[Token(Token = "0x400259D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x1700034B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60019DD")]
			[Address(RVA = "0xA9D078", Offset = "0xA9D078", VA = "0xA9D078", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019DF")]
			[Address(RVA = "0xA9D0E4", Offset = "0xA9D0E4", VA = "0xA9D0E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019D9")]
		[Address(RVA = "0xA99C68", Offset = "0xA99C68", VA = "0xA99C68")]
		[DebuggerHidden]
		public <score_champs>d__646(int <>1__state)
		{
		}

		[Token(Token = "0x60019DA")]
		[Address(RVA = "0xA99C94", Offset = "0xA99C94", VA = "0xA99C94", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019DB")]
		[Address(RVA = "0xA99D70", Offset = "0xA99D70", VA = "0xA99D70", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019DC")]
		[Address(RVA = "0xA99CB0", Offset = "0xA99CB0", VA = "0xA99CB0")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60019DE")]
		[Address(RVA = "0xA9D080", Offset = "0xA9D080", VA = "0xA9D080", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9AE8", Offset = "0x7F9AE8")]
	private sealed class <LoadCustomSong>d__672 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400259E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400259F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40025A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string fname;

		[Token(Token = "0x40025A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SongList <>4__this;

		[Token(Token = "0x40025A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int cis;

		[Token(Token = "0x40025A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x1700034D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60019E3")]
			[Address(RVA = "0xB04F8C", Offset = "0xB04F8C", VA = "0xB04F8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019E5")]
			[Address(RVA = "0xB04FF8", Offset = "0xB04FF8", VA = "0xB04FF8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019E0")]
		[Address(RVA = "0xB04CFC", Offset = "0xB04CFC", VA = "0xB04CFC")]
		[DebuggerHidden]
		public <LoadCustomSong>d__672(int <>1__state)
		{
		}

		[Token(Token = "0x60019E1")]
		[Address(RVA = "0xB04D28", Offset = "0xB04D28", VA = "0xB04D28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019E2")]
		[Address(RVA = "0xB04D2C", Offset = "0xB04D2C", VA = "0xB04D2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019E4")]
		[Address(RVA = "0xB04F94", Offset = "0xB04F94", VA = "0xB04F94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003C5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9AF8", Offset = "0x7F9AF8")]
	private sealed class <LoadMusic>d__673 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40025A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40025A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SongList <>4__this;

		[Token(Token = "0x40025A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool prehraj_ukazku;

		[Token(Token = "0x40025A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x1700034F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60019E9")]
			[Address(RVA = "0xB053EC", Offset = "0xB053EC", VA = "0xB053EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000350")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019EB")]
			[Address(RVA = "0xB05458", Offset = "0xB05458", VA = "0xB05458", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019E6")]
		[Address(RVA = "0xB051A8", Offset = "0xB051A8", VA = "0xB051A8")]
		[DebuggerHidden]
		public <LoadMusic>d__673(int <>1__state)
		{
		}

		[Token(Token = "0x60019E7")]
		[Address(RVA = "0xB051D4", Offset = "0xB051D4", VA = "0xB051D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019E8")]
		[Address(RVA = "0xB051D8", Offset = "0xB051D8", VA = "0xB051D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019EA")]
		[Address(RVA = "0xB053F4", Offset = "0xB053F4", VA = "0xB053F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003C6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9B08", Offset = "0x7F9B08")]
	private sealed class <DownloadPICOAvatar>d__675 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40025AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40025AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string imageurl;

		[Token(Token = "0x40025AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SongList <>4__this;

		[Token(Token = "0x40025AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int i;

		[Token(Token = "0x40025AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x17000351")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60019EF")]
			[Address(RVA = "0xB02E78", Offset = "0xB02E78", VA = "0xB02E78", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000352")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019F1")]
			[Address(RVA = "0xB02EE4", Offset = "0xB02EE4", VA = "0xB02EE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019EC")]
		[Address(RVA = "0xB02B78", Offset = "0xB02B78", VA = "0xB02B78")]
		[DebuggerHidden]
		public <DownloadPICOAvatar>d__675(int <>1__state)
		{
		}

		[Token(Token = "0x60019ED")]
		[Address(RVA = "0xB02BA4", Offset = "0xB02BA4", VA = "0xB02BA4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019EE")]
		[Address(RVA = "0xB02BA8", Offset = "0xB02BA8", VA = "0xB02BA8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019F0")]
		[Address(RVA = "0xB02E80", Offset = "0xB02E80", VA = "0xB02E80", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003C7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9B18", Offset = "0x7F9B18")]
	private sealed class <DownloadThumbnail>d__676 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40025B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40025B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string videoId;

		[Token(Token = "0x40025B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SongList <>4__this;

		[Token(Token = "0x40025B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int i;

		[Token(Token = "0x40025B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private WWW <www>5__2;

		[Token(Token = "0x17000353")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60019F5")]
			[Address(RVA = "0xB04948", Offset = "0xB04948", VA = "0xB04948", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000354")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019F7")]
			[Address(RVA = "0xB049B4", Offset = "0xB049B4", VA = "0xB049B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019F2")]
		[Address(RVA = "0xB047E4", Offset = "0xB047E4", VA = "0xB047E4")]
		[DebuggerHidden]
		public <DownloadThumbnail>d__676(int <>1__state)
		{
		}

		[Token(Token = "0x60019F3")]
		[Address(RVA = "0xB04810", Offset = "0xB04810", VA = "0xB04810", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019F4")]
		[Address(RVA = "0xB04814", Offset = "0xB04814", VA = "0xB04814", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019F6")]
		[Address(RVA = "0xB04950", Offset = "0xB04950", VA = "0xB04950", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9B28", Offset = "0x7F9B28")]
	private sealed class <DownloadSongName>d__677 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40025B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40025B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string videoId;

		[Token(Token = "0x40025B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WWW <www>5__2;

		[Token(Token = "0x17000355")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60019FB")]
			[Address(RVA = "0xB04770", Offset = "0xB04770", VA = "0xB04770", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000356")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019FD")]
			[Address(RVA = "0xB047DC", Offset = "0xB047DC", VA = "0xB047DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019F8")]
		[Address(RVA = "0xB04628", Offset = "0xB04628", VA = "0xB04628")]
		[DebuggerHidden]
		public <DownloadSongName>d__677(int <>1__state)
		{
		}

		[Token(Token = "0x60019F9")]
		[Address(RVA = "0xB04654", Offset = "0xB04654", VA = "0xB04654", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019FA")]
		[Address(RVA = "0xB04658", Offset = "0xB04658", VA = "0xB04658", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019FC")]
		[Address(RVA = "0xB04778", Offset = "0xB04778", VA = "0xB04778", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Callback callback;

	[Token(Token = "0x4000CAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool PICO_Initialized;

	[Token(Token = "0x4000CB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string PICO_User_Name;

	[Token(Token = "0x4000CB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string PICO_User_ID;

	[Token(Token = "0x4000CB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string PICO_avatar;

	[Token(Token = "0x4000CB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static Texture2D PICO_User_Avatar;

	[Token(Token = "0x4000CB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static int PICO_state;

	[Token(Token = "0x4000CB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string PICO_Login_info;

	[Token(Token = "0x4000CB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture empty;

	[Token(Token = "0x4000CB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string ApplicationDataPath;

	[Token(Token = "0x4000CB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Songs[] SongsList_Original;

	[Token(Token = "0x4000CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Songs[] SongsList_Original2;

	[Token(Token = "0x4000CBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Songs[] SongsList_Custom;

	[Token(Token = "0x4000CBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Songs[] SongsList_Youtube;

	[Token(Token = "0x4000CBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static Songs vybrate;

	[Token(Token = "0x4000CBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static Songs oldvybrate;

	[Token(Token = "0x4000CBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public DownloadList[] download_list;

	[Token(Token = "0x4000CBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public DownloadList[] download_list_alternative;

	[Token(Token = "0x4000CC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public DownList[] down_list;

	[Token(Token = "0x4000CC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public DownList[] down_list_alternative;

	[Token(Token = "0x4000CC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public DownList[] down_list_loader;

	[Token(Token = "0x4000CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<DownList[]> down_list_buffer;

	[Token(Token = "0x4000CC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static int download_server_selected;

	[Token(Token = "0x4000CC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int zaldownload_server_selected;

	[Token(Token = "0x4000CC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public FList[] friend_list;

	[Token(Token = "0x4000CC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public FList[] friend_list_alternative;

	[Token(Token = "0x4000CC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public static bool load_friends;

	[Token(Token = "0x4000CC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public static bool selectfriend;

	[Token(Token = "0x4000CCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public static bool zalload_friends;

	[Token(Token = "0x4000CCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public LeaderList[] leader_list;

	[Token(Token = "0x4000CCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public LeaderList[] leader_global;

	[Token(Token = "0x4000CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public LeaderList[] leader_party;

	[Token(Token = "0x4000CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public LeaderList[] leader_friends;

	[Token(Token = "0x4000CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public LeaderList[] leader_kings;

	[Token(Token = "0x4000CD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public LeaderList[] leader_best;

	[Token(Token = "0x4000CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public LeaderList[] leader_cal;

	[Token(Token = "0x4000CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public LeaderList[] leader_champ;

	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public TextMeshPro leader_nadpis;

	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public LeaderList[] cleader_list;

	[Token(Token = "0x4000CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public LeaderList[] cleader_global;

	[Token(Token = "0x4000CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public LeaderList[] cleader_party;

	[Token(Token = "0x4000CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public LeaderList[] cleader_friends;

	[Token(Token = "0x4000CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public string[] bestleaders_song;

	[Token(Token = "0x4000CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public string[] bestleaders_gametype;

	[Token(Token = "0x4000CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public string[] bestleaders_name;

	[Token(Token = "0x4000CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private int blarray_lenght;

	[Token(Token = "0x4000CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public SList[] new_slist;

	[Token(Token = "0x4000CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public SList slist_button_up;

	[Token(Token = "0x4000CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public SList slist_button_down;

	[Token(Token = "0x4000CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Transform scroll_container;

	[Token(Token = "0x4000CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Renderer Song_Video_alternative_ui;

	[Token(Token = "0x4000CE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private string webtablename;

	[Token(Token = "0x4000CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private string zalwebtablename;

	[Token(Token = "0x4000CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private int zaldur;

	[Token(Token = "0x4000CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static int SongTypeSelected;

	[Token(Token = "0x4000CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public static int ListSelected;

	[Token(Token = "0x4000CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private bool needreload;

	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static int NumClicked;

	[Token(Token = "0x4000CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static int[] SelectGroup;

	[Token(Token = "0x4000CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public GameObject[] rotate_icons;

	[Token(Token = "0x4000CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private int zal_hand_setting;

	[Token(Token = "0x4000CEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public TextMeshPro hand_pos;

	[Token(Token = "0x4000CEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public TextMeshPro hand_rot;

	[Token(Token = "0x4000CED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public Transform left_hand_setting;

	[Token(Token = "0x4000CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public Transform right_hand_setting;

	[Token(Token = "0x4000CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static int leaderboard_menu_selected;

	[Token(Token = "0x4000CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public static bool selectdownload;

	[Token(Token = "0x4000CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static int bothhand;

	[Token(Token = "0x4000CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public static int need_setting;

	[Token(Token = "0x4000CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static int zalsort;

	[Token(Token = "0x4000CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public static int nextpage;

	[Token(Token = "0x4000CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static int nextpagefriends;

	[Token(Token = "0x4000CF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private int zalnextpage;

	[Token(Token = "0x4000CF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private int zalnextpagefriends;

	[Token(Token = "0x4000CF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private int ListSelected_zal;

	[Token(Token = "0x4000CF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	private int posun;

	[Token(Token = "0x4000CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private int posunfriends;

	[Token(Token = "0x4000CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private int scrol;

	[Token(Token = "0x4000CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private float scroltimer;

	[Token(Token = "0x4000CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	private int move;

	[Token(Token = "0x4000CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private Vector3[] origpos;

	[Token(Token = "0x4000CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private float rep;

	[Token(Token = "0x4000D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private AudioSource songIntro;

	[Token(Token = "0x4000D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public AudioSource songAudio;

	[Token(Token = "0x4000D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public YoutubePlayer yplayer;

	[Token(Token = "0x4000D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public GameObject yt;

	[Token(Token = "0x4000D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public VideoPlayer vpp;

	[Token(Token = "0x4000D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private int bolposun;

	[Token(Token = "0x4000D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private UnityWebRequest www;

	[Token(Token = "0x4000D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private int start_ukazka;

	[Token(Token = "0x4000D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
	private float timer_ukazka;

	[Token(Token = "0x4000D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private bool first_run;

	[Token(Token = "0x4000D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	private float preview_time;

	[Token(Token = "0x4000D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private float preview_start;

	[Token(Token = "0x4000D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
	private bool audioprepare;

	[Token(Token = "0x4000D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x205")]
	private bool emptyflag;

	[Token(Token = "0x4000D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public Texture2D empty_texture;

	[Token(Token = "0x4000D0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public RenderTexture YTTexture;

	[Token(Token = "0x4000D10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public static int rankplayer;

	[Token(Token = "0x4000D11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private bool pripravujem;

	[Token(Token = "0x4000D12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static int dailytarget;

	[Token(Token = "0x4000D13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private int[,] player_data;

	[Token(Token = "0x4000D14")]
	private const string save_version = "v0.1.5";

	[Token(Token = "0x4000D15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public static int player_manager_selected;

	[Token(Token = "0x4000D16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static int[] player_manager_target;

	[Token(Token = "0x4000D17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static int[] zalplayer_manager_target;

	[Token(Token = "0x4000D18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static int[] player_manager_weight;

	[Token(Token = "0x4000D19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public static int[] player_manager_height;

	[Token(Token = "0x4000D1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static int[] zalplayer_manager_height;

	[Token(Token = "0x4000D1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public static string[] player_manager_name;

	[Token(Token = "0x4000D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public static string[] player_manager_id;

	[Token(Token = "0x4000D1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public static byte player_multi_leaves;

	[Token(Token = "0x4000D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public static string player_team_name;

	[Token(Token = "0x4000D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public static string player_team_password;

	[Token(Token = "0x4000D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public static int player_weight;

	[Token(Token = "0x4000D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public static int player_setting1;

	[Token(Token = "0x4000D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public static int player_setting2;

	[Token(Token = "0x4000D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public static int player_wins;

	[Token(Token = "0x4000D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public static int player_losts;

	[Token(Token = "0x4000D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public static int[] player_manager_rank;

	[Token(Token = "0x4000D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public static int[] player_manager_rank2;

	[Token(Token = "0x4000D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public static float stats_daily_kcal;

	[Token(Token = "0x4000D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public static int stats_daily_time;

	[Token(Token = "0x4000D29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public static int stats_daily_plays;

	[Token(Token = "0x4000D2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public static int stats_song_plays;

	[Token(Token = "0x4000D2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public static float stats_song_kcal;

	[Token(Token = "0x4000D2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public static int stats_song_time;

	[Token(Token = "0x4000D2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public static int stats_all_plays;

	[Token(Token = "0x4000D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public static float stats_all_kcal;

	[Token(Token = "0x4000D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public static int stats_all_time;

	[Token(Token = "0x4000D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public static int profile;

	[Token(Token = "0x4000D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private int zalprofile;

	[Token(Token = "0x4000D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
	private int zalselec_gametype;

	[Token(Token = "0x4000D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private int zalselectweapon;

	[Token(Token = "0x4000D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
	private int save_load_gametype;

	[Token(Token = "0x4000D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public static int clear_saves;

	[Token(Token = "0x4000D36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	public static int next_profil_count;

	[Token(Token = "0x4000D37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private int zalnext_profil_count;

	[Token(Token = "0x4000D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public static int Optionvalue1;

	[Token(Token = "0x4000D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
	private int zaloptionvalue1;

	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private string datum;

	[Token(Token = "0x4000D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private DateTime newDate;

	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public GameObject listup;

	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public GameObject listdown;

	[Token(Token = "0x4000D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public GameObject listup_alternative;

	[Token(Token = "0x4000D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public GameObject listdown_alternative;

	[Token(Token = "0x4000D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public GameObject listupfriends;

	[Token(Token = "0x4000D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public GameObject listdownfriends;

	[Token(Token = "0x4000D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public GameObject listupfriends_alternative;

	[Token(Token = "0x4000D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public GameObject listdownfriends_alternative;

	[Token(Token = "0x4000D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	private float date_check;

	[Token(Token = "0x4000D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public static int score_calories_switch;

	[Token(Token = "0x4000D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public static int forcestop;

	[Token(Token = "0x4000D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
	private int forceplay;

	[Token(Token = "0x4000D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public static int view_leaders;

	[Token(Token = "0x4000D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public static float bestleadetimer;

	[Token(Token = "0x4000D4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	private float bestleadetimer2;

	[Token(Token = "0x4000D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	public TextMeshPro total_plays;

	[Token(Token = "0x4000D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	public TextMeshPro total_time;

	[Token(Token = "0x4000D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	public TextMeshPro total_kcal;

	[Token(Token = "0x4000D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	public TextMeshPro today_plays;

	[Token(Token = "0x4000D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	public TextMeshPro today_time;

	[Token(Token = "0x4000D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	public TextMeshPro today_kcal;

	[Token(Token = "0x4000D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public static bool nacitane_cal;

	[Token(Token = "0x4000D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public static int newui_switcher;

	[Token(Token = "0x4000D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	public static int zalnewui_switcher;

	[Token(Token = "0x4000D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	public TextMeshPro newui_plays;

	[Token(Token = "0x4000D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	public TextMeshPro newui_time;

	[Token(Token = "0x4000D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	public TextMeshPro newui_kcal;

	[Token(Token = "0x4000D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public static bool sortclick;

	[Token(Token = "0x4000D58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	private bool[] zoradenie;

	[Token(Token = "0x4000D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	public TextMeshPro names_songname;

	[Token(Token = "0x4000D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	public TextMeshPro names_autorname;

	[Token(Token = "0x4000D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	public TextMeshPro names_songname_multak;

	[Token(Token = "0x4000D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	public TextMeshPro names_autorname_multak;

	[Token(Token = "0x4000D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	public TextMeshPro names_songname_multak_new;

	[Token(Token = "0x4000D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	public TextMeshPro names_autorname_multak_new;

	[Token(Token = "0x4000D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	public TextMeshPro names_songname_ingame;

	[Token(Token = "0x4000D60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	public TextMeshPro names_autorname_ingame;

	[Token(Token = "0x4000D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	public TextMeshPro names_songdurration_ingame;

	[Token(Token = "0x4000D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	public TextMeshPro leader_num;

	[Token(Token = "0x4000D63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	public TextMeshPro leader_name;

	[Token(Token = "0x4000D64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	public TextMeshPro leader_score;

	[Token(Token = "0x4000D65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	public TextMeshPro leader_num_alt_ui;

	[Token(Token = "0x4000D66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	public TextMeshPro leader_name_alt_ui;

	[Token(Token = "0x4000D67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	public TextMeshPro leader_score_alt_ui;

	[Token(Token = "0x4000D68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	public GameObject bestscore_objekt;

	[Token(Token = "0x4000D69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	public static int bestscore_switch;

	[Token(Token = "0x4000D6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	private int zal_bestscore_switch;

	[Token(Token = "0x4000D6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
	private string[] l_num;

	[Token(Token = "0x4000D6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
	private string[] l_name;

	[Token(Token = "0x4000D6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
	private string[] l_score;

	[Token(Token = "0x4000D6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
	private int[] l_poradie;

	[Token(Token = "0x4000D6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
	private bool[] l_poradovnik;

	[Token(Token = "0x4000D70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
	private int[] l_cislo;

	[Token(Token = "0x4000D71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
	public TextMeshPro beater_num;

	[Token(Token = "0x4000D72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
	public TextMeshPro beater_name;

	[Token(Token = "0x4000D73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
	public TextMeshPro beater_score;

	[Token(Token = "0x4000D74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
	public TextMeshPro beater_num_alt_ui;

	[Token(Token = "0x4000D75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
	public TextMeshPro beater_name_alt_ui;

	[Token(Token = "0x4000D76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
	public TextMeshPro beater_score_alt_ui;

	[Token(Token = "0x4000D77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public static bool saveplayerstats;

	[Token(Token = "0x4000D78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
	private int zalselect_difficulty;

	[Token(Token = "0x4000D79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x169")]
	public static bool call_name_change;

	[Token(Token = "0x4000D7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
	public AnimAchiev[] Achiev_View_Image;

	[Token(Token = "0x4000D7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
	public Renderer[] Achiev_View_true_false;

	[Token(Token = "0x4000D7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	public static int achiev_selected;

	[Token(Token = "0x4000D7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
	private int zal_achiev_selects;

	[Token(Token = "0x4000D7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F8")]
	public TextMeshPro[] Achiev_name;

	[Token(Token = "0x4000D7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
	public TextMeshPro[] Achiev_description;

	[Token(Token = "0x4000D80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x408")]
	public Renderer Achiev_progres_back;

	[Token(Token = "0x4000D81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
	public Renderer Achiev_progres_up;

	[Token(Token = "0x4000D82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x418")]
	public AnimAchiev[] Achiev_View_Image_alt;

	[Token(Token = "0x4000D83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
	public Renderer[] Achiev_View_true_false_alt;

	[Token(Token = "0x4000D84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x428")]
	public TextMeshPro[] Achiev_name_alt;

	[Token(Token = "0x4000D85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x430")]
	public TextMeshPro[] Achiev_description_alt;

	[Token(Token = "0x4000D86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x438")]
	public SpriteRenderer[] Achiev_progres_alt;

	[Token(Token = "0x4000D87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x440")]
	public Achiev achivs;

	[Token(Token = "0x4000D88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x448")]
	public Material achiv_true;

	[Token(Token = "0x4000D89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x450")]
	public Material achiv_false;

	[Token(Token = "0x4000D8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x458")]
	public AnimAchiev Achievgained_View_Image;

	[Token(Token = "0x4000D8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x460")]
	public Renderer Achievgained_View_true_false;

	[Token(Token = "0x4000D8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x468")]
	public TextMeshPro Achievgained_name;

	[Token(Token = "0x4000D8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x470")]
	public TextMeshPro Achievgained_description;

	[Token(Token = "0x4000D8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x478")]
	public AnimAchiev Achievgained_View_Image_alt;

	[Token(Token = "0x4000D8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x480")]
	public Renderer Achievgained_View_true_false_alt;

	[Token(Token = "0x4000D90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x488")]
	public TextMeshPro Achievgained_name_alt;

	[Token(Token = "0x4000D91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x490")]
	public TextMeshPro Achievgained_description_alt;

	[Token(Token = "0x4000D92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x498")]
	public Renderer[] Drzky_menu;

	[Token(Token = "0x4000D93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A0")]
	public Renderer[] Drzky_setting;

	[Token(Token = "0x4000D94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A8")]
	public SpriteRenderer[] Drzky_menu_alternative;

	[Token(Token = "0x4000D95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B0")]
	public SpriteRenderer[] Drzky_setting_alternative;

	[Token(Token = "0x4000D96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B8")]
	public GameObject addsteamfriend_button;

	[Token(Token = "0x4000D97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C0")]
	public GameObject addsteamfriend_button_alt;

	[Token(Token = "0x4000D98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public static bool reloadachiev;

	[Token(Token = "0x4000D99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public static float[] kcal_last7days;

	[Token(Token = "0x4000D9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C8")]
	public Color c10;

	[Token(Token = "0x4000D9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D8")]
	public Color c25;

	[Token(Token = "0x4000D9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E8")]
	public Color c50;

	[Token(Token = "0x4000D9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F8")]
	public Color c75;

	[Token(Token = "0x4000D9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x508")]
	public Color c100;

	[Token(Token = "0x4000D9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x518")]
	public Color c110;

	[Token(Token = "0x4000DA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private static string sc10;

	[Token(Token = "0x4000DA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private static string sc25;

	[Token(Token = "0x4000DA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private static string sc50;

	[Token(Token = "0x4000DA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private static string sc75;

	[Token(Token = "0x4000DA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private static string sc100;

	[Token(Token = "0x4000DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private static string sc110;

	[Token(Token = "0x4000DA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x528")]
	public TextMeshPro randked_score;

	[Token(Token = "0x4000DA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x530")]
	public TextMeshPro needtonext_rank;

	[Token(Token = "0x4000DA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x538")]
	public TextMeshPro thisrank;

	[Token(Token = "0x4000DA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x540")]
	public TextMeshPro randked_score2;

	[Token(Token = "0x4000DAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x548")]
	public TextMeshPro needtonext_rank2;

	[Token(Token = "0x4000DAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x550")]
	public TextMeshPro thisrank2;

	[Token(Token = "0x4000DAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x558")]
	public SpriteRenderer ranked_score_alt;

	[Token(Token = "0x4000DAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x560")]
	public SpriteRenderer ranked_score2_alt;

	[Token(Token = "0x4000DAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x568")]
	public TextMeshPro thisrank_alt;

	[Token(Token = "0x4000DAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x570")]
	public TextMeshPro thisrank2_alt;

	[Token(Token = "0x4000DB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public static int debrisreduction;

	[Token(Token = "0x4000DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	public static int effectsreduction;

	[Token(Token = "0x4000DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public static bool obstacles;

	[Token(Token = "0x4000DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B9")]
	public static bool percnum;

	[Token(Token = "0x4000DB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BA")]
	public static bool beatscore;

	[Token(Token = "0x4000DB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BB")]
	public static bool moddingaudio;

	[Token(Token = "0x4000DB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	public static bool autoshoot;

	[Token(Token = "0x4000DB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x578")]
	private bool zalbeatscore;

	[Token(Token = "0x4000DB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x580")]
	public GameObject vyska;

	[Token(Token = "0x4000DB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x588")]
	public GameObject vyska360;

	[Token(Token = "0x4000DBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x590")]
	public TextMeshPro bleaders_gtype;

	[Token(Token = "0x4000DBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x598")]
	public TextMeshPro bleaders_song;

	[Token(Token = "0x4000DBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A0")]
	public TextMeshPro bleaders_name;

	[Token(Token = "0x4000DBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A8")]
	public TextMeshPro new_bleaders_gtype;

	[Token(Token = "0x4000DBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B0")]
	public TextMeshPro new_bleaders_song;

	[Token(Token = "0x4000DBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B8")]
	public TextMeshPro new_bleaders_name;

	[Token(Token = "0x4000DC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C0")]
	private int posinlead;

	[Token(Token = "0x4000DC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C8")]
	public ConcertEffectsScript concert;

	[Token(Token = "0x4000DC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D0")]
	private bool zaldash;

	[Token(Token = "0x4000DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D8")]
	public GameObject percnum_obj;

	[Token(Token = "0x4000DC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E0")]
	public GameObject volume2obj;

	[Token(Token = "0x4000DC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E8")]
	private bool fullrls;

	[Token(Token = "0x4000DC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F0")]
	public GameObject customobj;

	[Token(Token = "0x4000DC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F8")]
	public GameObject videoobj;

	[Token(Token = "0x4000DC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x600")]
	private bool zal_but_multi;

	[Token(Token = "0x4000DC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x608")]
	public TextMeshPro playerwins;

	[Token(Token = "0x4000DCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x610")]
	public TextMeshPro playerlosts;

	[Token(Token = "0x4000DCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x618")]
	public TextMeshPro playerwins_alt;

	[Token(Token = "0x4000DCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x620")]
	public TextMeshPro playerlosts_alt;

	[Token(Token = "0x4000DCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BD")]
	public static bool nofail;

	[Token(Token = "0x4000DCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BE")]
	public static bool reflexmod;

	[Token(Token = "0x4000DCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x628")]
	public GameObject reflex_obj;

	[Token(Token = "0x4000DD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public static int playspeed;

	[Token(Token = "0x4000DD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	public static int pow_acc_perc_num;

	[Token(Token = "0x4000DD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x630")]
	public TextMeshPro champ_diff1;

	[Token(Token = "0x4000DD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x638")]
	public TextMeshPro champ_diff2;

	[Token(Token = "0x4000DD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x640")]
	public TextMeshPro champ_diff3;

	[Token(Token = "0x4000DD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x648")]
	public TextMeshPro champ_diff4;

	[Token(Token = "0x4000DD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x650")]
	public TextMeshPro champ_diff5;

	[Token(Token = "0x4000DD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x658")]
	public TextMeshPro[] champ_diff_alternative;

	[Token(Token = "0x4000DD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x660")]
	public GameObject curently_playing;

	[Token(Token = "0x4000DD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x668")]
	public GameObject next_playing;

	[Token(Token = "0x4000DDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x670")]
	public GameObject lastscore_champ;

	[Token(Token = "0x4000DDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x678")]
	public GameObject curently_playing_alt;

	[Token(Token = "0x4000DDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x680")]
	public GameObject next_playing_alt;

	[Token(Token = "0x4000DDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x688")]
	public GameObject lastscore_champ_alt;

	[Token(Token = "0x4000DDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x690")]
	public TextMeshPro names_songname_champ;

	[Token(Token = "0x4000DDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x698")]
	public TextMeshPro names_autorname_champ;

	[Token(Token = "0x4000DE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A0")]
	public TextMeshPro names_startfor;

	[Token(Token = "0x4000DE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A8")]
	public TextMeshPro names_songname_champ_cur;

	[Token(Token = "0x4000DE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6B0")]
	public TextMeshPro names_autorname_champ_cur;

	[Token(Token = "0x4000DE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6B8")]
	public TextMeshPro names_endfor;

	[Token(Token = "0x4000DE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C0")]
	public TextMeshPro names_songname_champ_alt;

	[Token(Token = "0x4000DE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C8")]
	public TextMeshPro names_autorname_champ_alt;

	[Token(Token = "0x4000DE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D0")]
	public TextMeshPro names_startfor_alt;

	[Token(Token = "0x4000DE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D8")]
	public TextMeshPro names_songname_champ_cur_alt;

	[Token(Token = "0x4000DE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6E0")]
	public TextMeshPro names_autorname_champ_cur_alt;

	[Token(Token = "0x4000DE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6E8")]
	public TextMeshPro names_endfor_alt;

	[Token(Token = "0x4000DEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6F0")]
	public TextMeshPro countdown;

	[Token(Token = "0x4000DEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6F8")]
	public GameObject ingame_champ;

	[Token(Token = "0x4000DEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x700")]
	public TextMeshPro leader_name_champ;

	[Token(Token = "0x4000DED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x708")]
	public TextMeshPro leader_score_champ;

	[Token(Token = "0x4000DEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x710")]
	public TextMeshPro leader_num_champ_board;

	[Token(Token = "0x4000DEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x718")]
	public TextMeshPro leader_name_champ_board;

	[Token(Token = "0x4000DF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x720")]
	public TextMeshPro leader_score_champ_board;

	[Token(Token = "0x4000DF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x728")]
	public GameObject champ_leaderboard;

	[Token(Token = "0x4000DF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x730")]
	public GameObject champ_leaderboard_alt;

	[Token(Token = "0x4000DF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x738")]
	public WinAnimator leader_anim;

	[Token(Token = "0x4000DF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x740")]
	public TextMeshPro champ_players;

	[Token(Token = "0x4000DF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x748")]
	public TextMeshPro champ_players_alternative;

	[Token(Token = "0x4000DF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x750")]
	private int game;

	[Token(Token = "0x4000DF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x754")]
	private int oldgame;

	[Token(Token = "0x4000DF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x758")]
	private int played_oldgame;

	[Token(Token = "0x4000DF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public static int lastolddiff;

	[Token(Token = "0x4000DFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75C")]
	private bool zalbutchamp;

	[Token(Token = "0x4000DFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x760")]
	private float champ_timer;

	[Token(Token = "0x4000DFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x764")]
	private float champ_timer2;

	[Token(Token = "0x4000DFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x768")]
	private float champ_scoretimer;

	[Token(Token = "0x4000DFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x76C")]
	private float champ_endtimer;

	[Token(Token = "0x4000DFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x770")]
	private int champ_start;

	[Token(Token = "0x4000E00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x774")]
	private int champ_end;

	[Token(Token = "0x4000E01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x778")]
	private bool lfail;

	[Token(Token = "0x4000E02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	public static int active_theme;

	[Token(Token = "0x4000E03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x77C")]
	private int zalactive_theme;

	[Token(Token = "0x4000E04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x780")]
	public GameObject[] themes;

	[Token(Token = "0x4000E05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x788")]
	public GameObject theme360;

	[Token(Token = "0x4000E06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x790")]
	public GameObject theme_disco;

	[Token(Token = "0x4000E07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x798")]
	public GameObject theme_platform;

	[Token(Token = "0x4000E08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A0")]
	public GameObject theme_blades;

	[Token(Token = "0x4000E09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public static int ColorChangeEnabled;

	[Token(Token = "0x4000E0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	public static int Real360;

	[Token(Token = "0x4000E0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A8")]
	private int zalColorChangeEnabled;

	[Token(Token = "0x4000E0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7B0")]
	public GameObject colorsetting;

	[Token(Token = "0x4000E0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7B8")]
	public GameObject colorsetting_new;

	[Token(Token = "0x4000E0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public static int _mod360;

	[Token(Token = "0x4000E0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	public static int credits_volume;

	[Token(Token = "0x4000E10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C0")]
	private int zalcredits_volume;

	[Token(Token = "0x4000E11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C8")]
	public GameObject volume1;

	[Token(Token = "0x4000E12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D0")]
	public GameObject volume2;

	[Token(Token = "0x4000E13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D8")]
	public TextMeshPro[] flawless;

	[Token(Token = "0x4000E14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7E0")]
	public Renderer[] flawless_new;

	[Token(Token = "0x4000E15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7E8")]
	public GameObject download_button;

	[Token(Token = "0x4000E16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7F0")]
	public GameObject download_button_alternative_ui;

	[Token(Token = "0x4000E17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public static int show_download_songs;

	[Token(Token = "0x4000E18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public static string download_patch;

	[Token(Token = "0x4000E19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public static string[] all_download_name;

	[Token(Token = "0x4000E1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public static string[] all_download_patch;

	[Token(Token = "0x4000E1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7F8")]
	public UIHorizontalSelector uhs;

	[Token(Token = "0x4000E1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x800")]
	private int rozpakuj;

	[Token(Token = "0x4000E1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x808")]
	private string unpack_link;

	[Token(Token = "0x4000E1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x810")]
	private int zal_7;

	[Token(Token = "0x4000E1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public static int multak_players_count;

	[Token(Token = "0x4000E20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x814")]
	private float check_multak_timer;

	[Token(Token = "0x4000E21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x818")]
	public GameObject _Cameras;

	[Token(Token = "0x4000E22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
	public static int favorites_click;

	[Token(Token = "0x4000E23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x820")]
	public GameObject win_download;

	[Token(Token = "0x4000E24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x828")]
	public GameObject win_progress;

	[Token(Token = "0x4000E25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x830")]
	public TextMeshPro win_text;

	[Token(Token = "0x4000E26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x838")]
	public GameObject win_difficulty;

	[Token(Token = "0x4000E27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x840")]
	public GameObject win_download_alternative;

	[Token(Token = "0x4000E28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x848")]
	public GameObject win_progress_alternative;

	[Token(Token = "0x4000E29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x850")]
	public TextMeshPro win_text_alternative;

	[Token(Token = "0x4000E2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x858")]
	public TextMeshPro free_space;

	[Token(Token = "0x4000E2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x860")]
	public TextMeshPro free_space_alternative;

	[Token(Token = "0x4000E2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public static int download_zalmenu;

	[Token(Token = "0x4000E2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
	public static int download_pozicia;

	[Token(Token = "0x4000E2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public static int download_nextpage;

	[Token(Token = "0x4000E2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	public static int zaldownload_nextpage;

	[Token(Token = "0x4000E30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x868")]
	public GameObject d_up;

	[Token(Token = "0x4000E31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x870")]
	public GameObject d_down;

	[Token(Token = "0x4000E32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x878")]
	public GameObject d_up_alt;

	[Token(Token = "0x4000E33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x880")]
	public GameObject d_down_alt;

	[Token(Token = "0x4000E34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public static int details;

	[Token(Token = "0x4000E35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x888")]
	private int zaldetails;

	[Token(Token = "0x4000E36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x890")]
	public GameObject[] off_details;

	[Token(Token = "0x4000E37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x898")]
	public GameObject[] off_details2;

	[Token(Token = "0x4000E38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8A0")]
	public GameObject analyze;

	[Token(Token = "0x4000E39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8A8")]
	public GameObject weapons;

	[Token(Token = "0x4000E3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8B0")]
	public GameObject[] off_download;

	[Token(Token = "0x4000E3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8B8")]
	public GameObject button_delete;

	[Token(Token = "0x4000E3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C0")]
	public GameObject button_close_download;

	[Token(Token = "0x4000E3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
	public static int UIQuality;

	[Token(Token = "0x4000E3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public static bool dontuseglow;

	[Token(Token = "0x4000E3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	public static int zalUIQuality;

	[Token(Token = "0x4000E40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public static int state_download_panel;

	[Token(Token = "0x4000E41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C8")]
	private int zalstate_download_panel;

	[Token(Token = "0x4000E42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8CC")]
	private int download_cover_couner;

	[Token(Token = "0x4000E43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
	public static int ui_result_modifier;

	[Token(Token = "0x4000E44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8D0")]
	public TextMeshPro resulting_modifier;

	[Token(Token = "0x4000E45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public static bool play_failmiss;

	[Token(Token = "0x4000E46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x231")]
	public static bool play_position;

	[Token(Token = "0x4000E47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x232")]
	public static bool play_hitvolume;

	[Token(Token = "0x4000E48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8D8")]
	private float[] timer_sca;

	[Token(Token = "0x4000E49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8E0")]
	private float[] sca;

	[Token(Token = "0x4000E4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8E8")]
	private bool zalkal;

	[Token(Token = "0x4000E4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
	public static int quick_play_album;

	[Token(Token = "0x4000E4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public static int quick_play_diff;

	[Token(Token = "0x4000E4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8F0")]
	public Analyzer _analyzer;

	[Token(Token = "0x4000E4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8F8")]
	public UIHorizontalSelector uhs_album;

	[Token(Token = "0x4000E4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
	public static bool import_recolor;

	[Token(Token = "0x4000E50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23D")]
	public static bool import_remove;

	[Token(Token = "0x4000E51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public static int import_move;

	[Token(Token = "0x4000E52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x900")]
	public GameObject[] profile_ranks;

	[Token(Token = "0x4000E53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x908")]
	public GameObject ranked_r;

	[Token(Token = "0x4000E54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x910")]
	public GameObject ranked_k;

	[Token(Token = "0x4000E55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x918")]
	public GameObject ranked_s;

	[Token(Token = "0x4000E56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x920")]
	public GameObject ranked_r_not;

	[Token(Token = "0x4000E57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x928")]
	public GameObject ranked_k_not;

	[Token(Token = "0x4000E58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x930")]
	public GameObject ranked_s_not;

	[Token(Token = "0x4000E59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x938")]
	public TextMeshPro disco_round;

	[Token(Token = "0x4000E5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x940")]
	public TextMeshPro disco_speed;

	[Token(Token = "0x4000E5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
	public static float discospeed;

	[Token(Token = "0x4000E5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public static bool discopauza;

	[Token(Token = "0x4000E5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
	public static int discoend;

	[Token(Token = "0x4000E5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public static int discoround;

	[Token(Token = "0x4000E5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x948")]
	private int zaldiscoround;

	[Token(Token = "0x4000E60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x950")]
	public GameObject buton_play;

	[Token(Token = "0x4000E61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x958")]
	public GameObject text_play;

	[Token(Token = "0x4000E62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x960")]
	private int loadujem_tabulku;

	[Token(Token = "0x4000E63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public static int[] score_first;

	[Token(Token = "0x4000E64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public static int score_first_index;

	[Token(Token = "0x4000E65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x968")]
	private string score_first_loaded;

	[Token(Token = "0x4000E66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
	public static bool score_first_znulovat;

	[Token(Token = "0x4000E67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x265")]
	public static bool multi_on;

	[Token(Token = "0x4000E68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x970")]
	private string data_for_parse;

	[Token(Token = "0x4000E69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x978")]
	private string data_maxboost;

	[Token(Token = "0x4000E6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x980")]
	private string data_maxscore;

	[Token(Token = "0x4000E6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x988")]
	private string data_plays_succes;

	[Token(Token = "0x4000E6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x990")]
	private string data_plays_failed;

	[Token(Token = "0x4000E6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x998")]
	private string data_maxkcal;

	[Token(Token = "0x4000E6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9A0")]
	private string data_maxkcalh;

	[Token(Token = "0x4000E6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9A8")]
	private string data_placeholder1;

	[Token(Token = "0x4000E70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9B0")]
	private string data_placeholder2;

	[Token(Token = "0x4000E71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9B8")]
	private string data_placeholder3;

	[Token(Token = "0x4000E72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C0")]
	private string data_placeholder4;

	[Token(Token = "0x4000E73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C8")]
	private string data_placeholder5;

	[Token(Token = "0x4000E74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9D0")]
	private string data_placeholder6;

	[Token(Token = "0x4000E75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public static float mic_volume;

	[Token(Token = "0x4000E76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9D8")]
	private float zal_mic_volume;

	[Token(Token = "0x4000E77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
	public static bool global_voice_on;

	[Token(Token = "0x4000E78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9E0")]
	public GameObject[] voice_objs;

	[Token(Token = "0x4000E79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9E8")]
	public MicAmplifier ma;

	[Token(Token = "0x4000E7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9F0")]
	public GameObject theme_button;

	[Token(Token = "0x4000E7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9F8")]
	public GameObject fitbox_button;

	[Token(Token = "0x4000E7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA00")]
	public GameObject theme_ui;

	[Token(Token = "0x4000E7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA08")]
	public TextMeshPro resulting_modifier_nofail;

	[Token(Token = "0x4000E7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA10")]
	private bool zalnofail;

	[Token(Token = "0x4000E7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26D")]
	public static bool photon_mic;

	[Token(Token = "0x4000E80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA14")]
	private int champ_sejvni;

	[Token(Token = "0x4000E81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA18")]
	private int champ_points;

	[Token(Token = "0x4000E82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA20")]
	public TextMeshPro t_champ_points;

	[Token(Token = "0x4000E83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA28")]
	public TextMeshPro watch;

	[Token(Token = "0x4000E84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA30")]
	public TextMeshPro watch_kalories;

	[Token(Token = "0x4000E85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA38")]
	public Renderer watch_progress;

	[Token(Token = "0x4000E86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA40")]
	private float watchtimer;

	[Token(Token = "0x4000E87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26E")]
	public static bool flaten_window;

	[Token(Token = "0x4000E88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public static int calcounter;

	[Token(Token = "0x4000E89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
	public static bool daily_caloeriesis_riched;

	[Token(Token = "0x4000E8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA44")]
	private float prog;

	[Token(Token = "0x4000E8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA48")]
	public GameObject max_progres_rank;

	[Token(Token = "0x4000E8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA50")]
	public GameObject max_max_rank;

	[Token(Token = "0x4000E8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA58")]
	private int zalmanagerrank;

	[Token(Token = "0x4000E8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA5C")]
	private bool needsetranks;

	[Token(Token = "0x4000E8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA60")]
	public Camera cam_center_ui;

	[Token(Token = "0x4000E90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA68")]
	public RenderTexture texture_center_ui;

	[Token(Token = "0x4000E91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA70")]
	public RenderTexture texture_center_ui_big;

	[Token(Token = "0x4000E92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA78")]
	public Material material_center_ui;

	[Token(Token = "0x4000E93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA80")]
	public Camera cam_leaderboard;

	[Token(Token = "0x4000E94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA88")]
	public RenderTexture texture_leaderboard;

	[Token(Token = "0x4000E95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA90")]
	public RenderTexture texture_leaderboard_big;

	[Token(Token = "0x4000E96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA98")]
	public Material material_leaderboard;

	[Token(Token = "0x4000E97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAA0")]
	public TextMeshPro help_description;

	[Token(Token = "0x4000E98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public static int help_position;

	[Token(Token = "0x4000E99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
	public static int zalhelp_position;

	[Token(Token = "0x4000E9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAA8")]
	public GameObject posuvnik1;

	[Token(Token = "0x4000E9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAB0")]
	public GameObject posuvnik2;

	[Token(Token = "0x4000E9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAB8")]
	private string isloadedanalyze;

	[Token(Token = "0x4000E9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC0")]
	public Color32 leaderboard_head;

	[Token(Token = "0x4000E9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC8")]
	private string lhcolor;

	[Token(Token = "0x4000E9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAD0")]
	public GameObject poradovnik;

	[Token(Token = "0x4000EA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAD8")]
	public GameObject aktualne_poradie;

	[Token(Token = "0x4000EA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAE0")]
	public SpriteRenderer aktualne_poradie_sprite;

	[Token(Token = "0x4000EA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAE8")]
	public GameObject[] aktualne_poradie_circle;

	[Token(Token = "0x4000EA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAF0")]
	public Color[] poradie_color;

	[Token(Token = "0x4000EA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public static bool dont_transparent;

	[Token(Token = "0x4000EA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAF8")]
	public GameObject owoobject;

	[Token(Token = "0x4000EA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x281")]
	public static bool OWOvest;

	[Token(Token = "0x4000EA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public static string OWOIP;

	[Token(Token = "0x4000EA8")]
	public const string OWOEffects_DEFAULT = "23,17,0,7,19";

	[Token(Token = "0x4000EA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public static string OWOEffects;

	[Token(Token = "0x4000EAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	public static int[] OWOEffect;

	[Token(Token = "0x4000EAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	public static float OWOTimeout;

	[Token(Token = "0x4000EAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
	public static int last30;

	[Token(Token = "0x4000EAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB00")]
	private int zal_last30;

	[Token(Token = "0x4000EAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB08")]
	public GameObject internet_avaiability;

	[Token(Token = "0x4000EAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB10")]
	public TextMeshPro last30_days;

	[Token(Token = "0x6000873")]
	[Address(RVA = "0x966888", Offset = "0x966888", VA = "0x966888")]
	private void Poradie(bool place, int por, int cislo)
	{
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0x966AD4", Offset = "0x966AD4", VA = "0x966AD4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0x966B7C", Offset = "0x966B7C", VA = "0x966B7C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0x977A68", Offset = "0x977A68", VA = "0x977A68")]
	public void Reload_CustomSongs()
	{
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0x97B86C", Offset = "0x97B86C", VA = "0x97B86C")]
	public bool SetSong(int random_album, string idsong, int bolclick, int sdif)
	{
		return default(bool);
	}

	[Token(Token = "0x6000878")]
	[Address(RVA = "0x97C3CC", Offset = "0x97C3CC", VA = "0x97C3CC")]
	public void FindRandomSong()
	{
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0x97CF04", Offset = "0x97CF04", VA = "0x97CF04")]
	public void ResetSelectSongs()
	{
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0x97D0E8", Offset = "0x97D0E8", VA = "0x97D0E8")]
	public void SetSongCurently(string idsong)
	{
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0x97D3BC", Offset = "0x97D3BC", VA = "0x97D3BC")]
	public void SetSong(string idsong)
	{
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0x974BD8", Offset = "0x974BD8", VA = "0x974BD8")]
	public static Texture2D LoadTextureFromFile(string filePath)
	{
		return null;
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0x97D7B0", Offset = "0x97D7B0", VA = "0x97D7B0")]
	public void failsbettersucces(out int pocet, out int lengt)
	{
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0x97D890", Offset = "0x97D890", VA = "0x97D890")]
	public void succesplay_anydone(out int pocet, out int lengt)
	{
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0x97D950", Offset = "0x97D950", VA = "0x97D950")]
	public void bestplay_any_done(out int pocet, out int lengt)
	{
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0x97DAAC", Offset = "0x97DAAC", VA = "0x97DAAC")]
	public void bestplay_impossibru_done(out int pocet, out int lengt)
	{
	}

	[Token(Token = "0x6000881")]
	[Address(RVA = "0x97DBB0", Offset = "0x97DBB0", VA = "0x97DBB0")]
	public void bestplay_done(int from, int num, out int pocet, out int lengt)
	{
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0x97DD34", Offset = "0x97DD34", VA = "0x97DD34")]
	private void from_slist_to_slist(SList from, SList to)
	{
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0x97DEA8", Offset = "0x97DEA8", VA = "0x97DEA8")]
	private bool vyber_helper_helper(SList _slist, int i, int npage, Songs[] _song_list)
	{
		return default(bool);
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0x974AC8", Offset = "0x974AC8", VA = "0x974AC8")]
	private void vyber_helper(int npage, Songs[] _song_list)
	{
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0x975990", Offset = "0x975990", VA = "0x975990")]
	private void vyber(int npage)
	{
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0x97ED88", Offset = "0x97ED88", VA = "0x97ED88")]
	private void vyberfriends(int npage)
	{
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0x97CCC0", Offset = "0x97CCC0", VA = "0x97CCC0")]
	private void FindAvailableDifficulty()
	{
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0x976824", Offset = "0x976824", VA = "0x976824")]
	private void listupdate()
	{
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0x97EE40", Offset = "0x97EE40", VA = "0x97EE40")]
	private void listupdatefriends()
	{
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0x974CCC", Offset = "0x974CCC", VA = "0x974CCC")]
	private void Sorting(Songs[] songs)
	{
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0x97EEF4", Offset = "0x97EEF4", VA = "0x97EEF4")]
	public void RefreshWindow()
	{
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0x97E834", Offset = "0x97E834", VA = "0x97E834")]
	public void set_flawless()
	{
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0x975B08", Offset = "0x975B08", VA = "0x975B08")]
	private void vyber_sett()
	{
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0x983654", Offset = "0x983654", VA = "0x983654")]
	private void reloadsongsdata()
	{
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0x983A64", Offset = "0x983A64", VA = "0x983A64")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x803678", Offset = "0x803678")]
	private IEnumerator getstar()
	{
		return null;
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0x96F9B4", Offset = "0x96F9B4", VA = "0x96F9B4")]
	private void SetImageToAvatar(int i, Texture2D tex)
	{
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0x983AD8", Offset = "0x983AD8", VA = "0x983AD8")]
	public int GetRankFromBuffer(out bool uprank)
	{
		return default(int);
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0x9844B0", Offset = "0x9844B0", VA = "0x9844B0")]
	public void ReloadSongList()
	{
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0x984BEC", Offset = "0x984BEC", VA = "0x984BEC")]
	public void ReloadSongList_alternative(int index)
	{
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0x985AE4", Offset = "0x985AE4", VA = "0x985AE4")]
	public void DeleteSong()
	{
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0x9853B8", Offset = "0x9853B8", VA = "0x9853B8")]
	public void set_downlist_from_buffer(int index)
	{
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0x985C90", Offset = "0x985C90", VA = "0x985C90")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8036DC", Offset = "0x8036DC")]
	private IEnumerator DownloadSongList(bool ender)
	{
		return null;
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0x985D18", Offset = "0x985D18", VA = "0x985D18")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x803740", Offset = "0x803740")]
	private IEnumerator LoadDownloads()
	{
		return null;
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0x985D8C", Offset = "0x985D8C", VA = "0x985D8C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8037A4", Offset = "0x8037A4")]
	private IEnumerator DownloadSongList_alternative(bool ender, int index)
	{
		return null;
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0x985E1C", Offset = "0x985E1C", VA = "0x985E1C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x803808", Offset = "0x803808")]
	private IEnumerator Download_Cover(int num, string cover, int index)
	{
		return null;
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0x985EB0", Offset = "0x985EB0", VA = "0x985EB0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x80386C", Offset = "0x80386C")]
	private IEnumerator _unpack(string docPath, Stream res)
	{
		return null;
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0x985F38", Offset = "0x985F38", VA = "0x985F38")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8038D0", Offset = "0x8038D0")]
	private IEnumerator DownloadSongFromList(string _link)
	{
		return null;
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0x985FB8", Offset = "0x985FB8", VA = "0x985FB8")]
	public void DownloadSongStart()
	{
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0x9860F0", Offset = "0x9860F0", VA = "0x9860F0")]
	public void zrataj_modifikator()
	{
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0x98648C", Offset = "0x98648C", VA = "0x98648C")]
	public void zrataj_kalorie_ingame()
	{
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0x9866F8", Offset = "0x9866F8", VA = "0x9866F8")]
	public void zrataj_kalorie()
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0x986D7C", Offset = "0x986D7C", VA = "0x986D7C")]
	public void CreateSample(string outPathname, string password, string folderName, int fofset)
	{
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0x986FE8", Offset = "0x986FE8", VA = "0x986FE8")]
	private void CompressFolder(string path, ZipOutputStream zipStream, int folderOffset)
	{
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0x9872D8", Offset = "0x9872D8", VA = "0x9872D8")]
	public void DelMaxScore()
	{
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0x9873A8", Offset = "0x9873A8", VA = "0x9873A8")]
	public void SetRank()
	{
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0x977938", Offset = "0x977938", VA = "0x977938")]
	private void pre_posuvnik(int pocetstran, int nastavenastrana, int poc)
	{
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0x985820", Offset = "0x985820", VA = "0x985820")]
	private void pre_posuvnik2(int pocetstran, int nastavenastrana, int poc)
	{
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0x98799C", Offset = "0x98799C", VA = "0x98799C")]
	private void Update()
	{
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0x996D04", Offset = "0x996D04", VA = "0x996D04")]
	private void FindSong(string idsong)
	{
	}

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0x9984C0", Offset = "0x9984C0", VA = "0x9984C0")]
	public static string profilex()
	{
		return null;
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0x976BF4", Offset = "0x976BF4", VA = "0x976BF4")]
	public void LoadSetting()
	{
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0x99383C", Offset = "0x99383C", VA = "0x99383C")]
	public void SaveSetting()
	{
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0x971EB0", Offset = "0x971EB0", VA = "0x971EB0")]
	public void LoadPlayerStat()
	{
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0x994130", Offset = "0x994130", VA = "0x994130")]
	public void SavePlayerStat()
	{
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0x96FB80", Offset = "0x96FB80", VA = "0x96FB80")]
	public void LoadSongStatInfo(string ids)
	{
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0x97EEFC", Offset = "0x97EEFC", VA = "0x97EEFC")]
	public void LoadSongStat()
	{
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0x97F0EC", Offset = "0x97F0EC", VA = "0x97F0EC")]
	public void LoadAnalyzeOnly()
	{
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0x97F830", Offset = "0x97F830", VA = "0x97F830")]
	public void LoadAnalyze()
	{
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0x998DF8", Offset = "0x998DF8", VA = "0x998DF8")]
	public void SaveAnalyze()
	{
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0x999300", Offset = "0x999300", VA = "0x999300")]
	public void SaveSongStat()
	{
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0x97485C", Offset = "0x97485C", VA = "0x97485C")]
	public void LoadDailyStatFromSevenDays()
	{
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0x9745A8", Offset = "0x9745A8", VA = "0x9745A8")]
	public void LoadDailyStat()
	{
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0x99565C", Offset = "0x99565C", VA = "0x99565C")]
	public void SaveDailyStat()
	{
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0x9995C4", Offset = "0x9995C4", VA = "0x9995C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x803934", Offset = "0x803934")]
	private IEnumerator cloadscorefriends(string udata, int fh)
	{
		return null;
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0x99964C", Offset = "0x99964C", VA = "0x99964C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x803998", Offset = "0x803998")]
	private IEnumerator cloadscoreparty(string udata, int fh)
	{
		return null;
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0x9996D4", Offset = "0x9996D4", VA = "0x9996D4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8039FC", Offset = "0x8039FC")]
	private IEnumerator cloadscorecenter(string udata, int fh)
	{
		return null;
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0x99975C", Offset = "0x99975C", VA = "0x99975C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x803A60", Offset = "0x803A60")]
	private IEnumerator cloadscoreFirstx(string udata, int fh)
	{
		return null;
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0x9997E4", Offset = "0x9997E4", VA = "0x9997E4")]
	public static string setSize(string _s, int _num, bool _zarovnanie)
	{
		return null;
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0x9998FC", Offset = "0x9998FC", VA = "0x9998FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x803AC4", Offset = "0x803AC4")]
	private IEnumerator loadleaderkings(int fh)
	{
		return null;
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0x999980", Offset = "0x999980", VA = "0x999980")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x803B28", Offset = "0x803B28")]
	private IEnumerator loadleadercal(int fh)
	{
		return null;
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0x999A04", Offset = "0x999A04", VA = "0x999A04")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x803B8C", Offset = "0x803B8C")]
	private IEnumerator loadleaderchamp(int fh)
	{
		return null;
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0x999A88", Offset = "0x999A88", VA = "0x999A88")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x803BF0", Offset = "0x803BF0")]
	private IEnumerator loadleaderbest(int fh)
	{
		return null;
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0x999AFC", Offset = "0x999AFC", VA = "0x999AFC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x803C54", Offset = "0x803C54")]
	private IEnumerator loadscorefriends(string udata, int fh)
	{
		return null;
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0x999B84", Offset = "0x999B84", VA = "0x999B84")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x803CB8", Offset = "0x803CB8")]
	private IEnumerator loadscoreparty(string udata, int fh)
	{
		return null;
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0x999C0C", Offset = "0x999C0C", VA = "0x999C0C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x803D1C", Offset = "0x803D1C")]
	private IEnumerator loadscorecenter(string udata, int fh)
	{
		return null;
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0x999C94", Offset = "0x999C94", VA = "0x999C94")]
	public void LSFN()
	{
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0x999E18", Offset = "0x999E18", VA = "0x999E18")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x803D80", Offset = "0x803D80")]
	private IEnumerator cloadscoreFirstxNew()
	{
		return null;
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0x999E8C", Offset = "0x999E8C", VA = "0x999E8C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x803DE4", Offset = "0x803DE4")]
	private IEnumerator loadscoreFirstxNew()
	{
		return null;
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0x999F00", Offset = "0x999F00", VA = "0x999F00")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x803E48", Offset = "0x803E48")]
	private IEnumerator loadscoreFirstx(string udata, int fh)
	{
		return null;
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0x994034", Offset = "0x994034", VA = "0x994034")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x803EAC", Offset = "0x803EAC")]
	private IEnumerator loadleaders()
	{
		return null;
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0x999F88", Offset = "0x999F88", VA = "0x999F88")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x803F10", Offset = "0x803F10")]
	private IEnumerator cscoresave(string udata)
	{
		return null;
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0x999FFC", Offset = "0x999FFC", VA = "0x999FFC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x803F74", Offset = "0x803F74")]
	private IEnumerator delsave(string udata)
	{
		return null;
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0x992D68", Offset = "0x992D68", VA = "0x992D68")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x803FD8", Offset = "0x803FD8")]
	private IEnumerator calsave(string udata)
	{
		return null;
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0x99A070", Offset = "0x99A070", VA = "0x99A070")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x80403C", Offset = "0x80403C")]
	private IEnumerator scoresave(string udata)
	{
		return null;
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0x99A0E4", Offset = "0x99A0E4", VA = "0x99A0E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8040A0", Offset = "0x8040A0")]
	private IEnumerator scoresave_beaters(string udata)
	{
		return null;
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0x99A158", Offset = "0x99A158", VA = "0x99A158")]
	public void LoadBeatersLeaderboard()
	{
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0x99A184", Offset = "0x99A184", VA = "0x99A184")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x804104", Offset = "0x804104")]
	private IEnumerator loadleaderbeaters()
	{
		return null;
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0x99A1F8", Offset = "0x99A1F8", VA = "0x99A1F8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x804168", Offset = "0x804168")]
	private IEnumerator loadscore_two_beaters(string udata)
	{
		return null;
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0x980F38", Offset = "0x980F38", VA = "0x980F38")]
	public void cLoadScoreFriends(bool needhim)
	{
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0x9808A0", Offset = "0x9808A0", VA = "0x9808A0")]
	public void cLoadScoreParty(bool needhim)
	{
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0x980458", Offset = "0x980458", VA = "0x980458")]
	public void cLoadScoreCenter(bool needhim)
	{
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0x980074", Offset = "0x980074", VA = "0x980074")]
	public void cLoadScoreX(bool needhim)
	{
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0x981F28", Offset = "0x981F28", VA = "0x981F28")]
	public void LoadLeaderChamp(bool needhim)
	{
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0x981BE8", Offset = "0x981BE8", VA = "0x981BE8")]
	public void LoadLeaderCal(bool needhim)
	{
	}

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0x981848", Offset = "0x981848", VA = "0x981848")]
	public void LoadBestScore(bool needhim)
	{
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0x981460", Offset = "0x981460", VA = "0x981460")]
	public void LoadLeaderKings(bool needhim)
	{
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0x98312C", Offset = "0x98312C", VA = "0x98312C")]
	public void LoadScoreFriends(bool needhim)
	{
	}

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0x982A94", Offset = "0x982A94", VA = "0x982A94")]
	public void LoadScoreParty(bool needhim)
	{
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0x98264C", Offset = "0x98264C", VA = "0x98264C")]
	public void LoadScoreCenter(bool needhim)
	{
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0x982268", Offset = "0x982268", VA = "0x982268")]
	public void LoadScoreX(bool needhim)
	{
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0x99A26C", Offset = "0x99A26C", VA = "0x99A26C")]
	public void LoadScoreTwoBeaters()
	{
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0x99A378", Offset = "0x99A378", VA = "0x99A378")]
	public void SaveScoreBeaters()
	{
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0x99A770", Offset = "0x99A770", VA = "0x99A770")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8041CC", Offset = "0x8041CC")]
	private IEnumerator join_champs(string udata)
	{
		return null;
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0x99A7F0", Offset = "0x99A7F0", VA = "0x99A7F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x804230", Offset = "0x804230")]
	private IEnumerator join_multi(string udata)
	{
		return null;
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0x99A864", Offset = "0x99A864", VA = "0x99A864")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x804294", Offset = "0x804294")]
	private IEnumerator check_multi(string udata)
	{
		return null;
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0x9937E0", Offset = "0x9937E0", VA = "0x9937E0")]
	public void CheckMultiplayer()
	{
	}

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0x99A8D8", Offset = "0x99A8D8", VA = "0x99A8D8")]
	public void JoinMultiplayer(int multak_onoff)
	{
	}

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0x996530", Offset = "0x996530", VA = "0x996530")]
	public void JoinChamp()
	{
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0x99AB24", Offset = "0x99AB24", VA = "0x99AB24")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8042F8", Offset = "0x8042F8")]
	private IEnumerator score_champs(string udata, bool with_sending)
	{
		return null;
	}

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0x99686C", Offset = "0x99686C", VA = "0x99686C")]
	public void SendScoreChamp(bool with_sending, int hscore, int fails)
	{
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0x992BC8", Offset = "0x992BC8", VA = "0x992BC8")]
	public void DelScore()
	{
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0x99ABB4", Offset = "0x99ABB4", VA = "0x99ABB4")]
	public void SaveScore()
	{
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0x992DDC", Offset = "0x992DDC", VA = "0x992DDC")]
	public void FavoriteSave(string idsong)
	{
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0x99B238", Offset = "0x99B238", VA = "0x99B238")]
	public void QuickSave()
	{
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0x99BC60", Offset = "0x99BC60", VA = "0x99BC60")]
	private void load_part(string idsong)
	{
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0x99C9F4", Offset = "0x99C9F4", VA = "0x99C9F4")]
	public void ClearSave(int clearprofile, string idsong)
	{
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0x9959D0", Offset = "0x9959D0", VA = "0x9959D0")]
	private void Save_profile_data_clear(int clearprofile)
	{
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0x96FD24", Offset = "0x96FD24", VA = "0x96FD24")]
	private void Load_profile_data_clear()
	{
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0x9986B8", Offset = "0x9986B8", VA = "0x9986B8")]
	public static void LoadAchievs()
	{
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0x99CFA8", Offset = "0x99CFA8", VA = "0x99CFA8")]
	public static void SaveAchievs()
	{
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0x99D43C", Offset = "0x99D43C", VA = "0x99D43C")]
	public static string EncryptString(string message)
	{
		return null;
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0x96F5F4", Offset = "0x96F5F4", VA = "0x96F5F4")]
	public static string Encrypt(string toEncrypt)
	{
		return null;
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0x96F7D8", Offset = "0x96F7D8", VA = "0x96F7D8")]
	public static string Decrypt(string toDecrypt)
	{
		return null;
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0x99DBB8", Offset = "0x99DBB8", VA = "0x99DBB8")]
	private static string Md5Sum(string strToEncrypt)
	{
		return null;
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0x99869C", Offset = "0x99869C", VA = "0x99869C")]
	public static int ConvertBytesToInt32(byte b0, byte b1, byte b2, byte b3)
	{
		return default(int);
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0x9985F4", Offset = "0x9985F4", VA = "0x9985F4")]
	public static byte[] ConvertInt32ToBytes(int intValue)
	{
		return null;
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0x97DA94", Offset = "0x97DA94", VA = "0x97DA94")]
	public static bool Get32Bool(int value, byte index)
	{
		return default(bool);
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0x99855C", Offset = "0x99855C", VA = "0x99855C")]
	public static int Set32Bool(int value, bool b, byte index)
	{
		return default(int);
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0x99DD44", Offset = "0x99DD44", VA = "0x99DD44")]
	public static int Clear(int Value, byte index)
	{
		return default(int);
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0x99DD58", Offset = "0x99DD58", VA = "0x99DD58")]
	public static int ConvertInt16ToInt32(short b0, short b1)
	{
		return default(int);
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0x99B1B0", Offset = "0x99B1B0", VA = "0x99B1B0")]
	public static short[] ConvertInt32ToInt16(int intValue)
	{
		return null;
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0x99DD64", Offset = "0x99DD64", VA = "0x99DD64")]
	private static byte Combine224(byte b1, byte b2, byte b3)
	{
		return default(byte);
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0x99DD78", Offset = "0x99DD78", VA = "0x99DD78")]
	private static byte Decombine224(byte b, byte ord)
	{
		return default(byte);
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0x9758C4", Offset = "0x9758C4", VA = "0x9758C4")]
	private void LoadMusicOriginal(string fname, bool prehraj_ukazku)
	{
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0x99DDA4", Offset = "0x99DDA4", VA = "0x99DDA4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x80435C", Offset = "0x80435C")]
	public IEnumerator LoadCustomSong(string fname, int cis)
	{
		return null;
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0x996C7C", Offset = "0x996C7C", VA = "0x996C7C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8043C0", Offset = "0x8043C0")]
	private IEnumerator LoadMusic(string fname, bool prehraj_ukazku)
	{
		return null;
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0x9940A8", Offset = "0x9940A8", VA = "0x9940A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x804424", Offset = "0x804424")]
	private IEnumerator DownloadPICOAvatar(string imageurl, int i)
	{
		return null;
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0x99DE2C", Offset = "0x99DE2C", VA = "0x99DE2C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x804488", Offset = "0x804488")]
	private IEnumerator DownloadThumbnail(string videoId, int i)
	{
		return null;
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0x99DEB4", Offset = "0x99DEB4", VA = "0x99DEB4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8044EC", Offset = "0x8044EC")]
	private IEnumerator DownloadSongName(string videoId, int i)
	{
		return null;
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0x97E3E0", Offset = "0x97E3E0", VA = "0x97E3E0")]
	private string FormatTime(int time)
	{
		return null;
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0x97FF90", Offset = "0x97FF90", VA = "0x97FF90")]
	private string FormatTimeShort(int time)
	{
		return null;
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0x9967A8", Offset = "0x9967A8", VA = "0x9967A8")]
	private string FormatTimeSek(int time)
	{
		return null;
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0x99DF28", Offset = "0x99DF28", VA = "0x99DF28")]
	public static string getperc(int zalhit)
	{
		return null;
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0x98434C", Offset = "0x98434C", VA = "0x98434C")]
	public static int MaxScore(int spheres, int mode, int group)
	{
		return default(int);
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0x99E2E8", Offset = "0x99E2E8", VA = "0x99E2E8")]
	private void DecodeSong(string id, out string namesong, out string gtype, out int dif)
	{
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0x99EA14", Offset = "0x99EA14", VA = "0x99EA14")]
	private string FormatTimeForInsert(int time)
	{
		return null;
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0x99EAEC", Offset = "0x99EAEC", VA = "0x99EAEC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600090A")]
	[Address(RVA = "0x99ECBC", Offset = "0x99ECBC", VA = "0x99ECBC")]
	public SongList()
	{
	}
}
[Token(Token = "0x20000F9")]
public class SoundSpectrumAnalyzer : MonoBehaviour
{
	[Token(Token = "0x4000EB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool blik360;

	[Token(Token = "0x4000EB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material mat360;

	[Token(Token = "0x4000EB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool use_eff9;

	[Token(Token = "0x4000EB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer[] RGroup1;

	[Token(Token = "0x4000EB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Renderer[] RGroup2;

	[Token(Token = "0x4000EB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Renderer[] RGroup3;

	[Token(Token = "0x4000EB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Renderer[] RGroup4;

	[Token(Token = "0x4000EB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Renderer[] RGroupOther;

	[Token(Token = "0x4000EB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject[] reflektor_big;

	[Token(Token = "0x4000EB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public VolumetricLightBeam[] reflektor_vlb;

	[Token(Token = "0x4000EBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject[] reflektor_big2;

	[Token(Token = "0x4000EBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VolumetricLightBeam[] reflektor_vlb2;

	[Token(Token = "0x4000EBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Light[] lig;

	[Token(Token = "0x4000EBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool[] use_this_effects;

	[Token(Token = "0x4000EBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private byte zalgamequality;

	[Token(Token = "0x4000EBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	public bool effect10;

	[Token(Token = "0x4000EC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public Color color_e10;

	[Token(Token = "0x4000EC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject levelfailed;

	[Token(Token = "0x4000EC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject levelfailed_net;

	[Token(Token = "0x4000EC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Color lfcolor;

	[Token(Token = "0x4000EC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject levelsuccess;

	[Token(Token = "0x4000EC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject levelsuccess_net;

	[Token(Token = "0x4000EC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Color lscolor;

	[Token(Token = "0x4000EC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Color zallscolor;

	[Token(Token = "0x4000EC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Color zallfcolor;

	[Token(Token = "0x4000EC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Renderer lfren;

	[Token(Token = "0x4000ECA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Renderer lsren;

	[Token(Token = "0x4000ECB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private float lstimer;

	[Token(Token = "0x4000ECC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private bool lsstart;

	[Token(Token = "0x4000ECD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private float lftimer;

	[Token(Token = "0x4000ECE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private bool lfstart;

	[Token(Token = "0x4000ECF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject[] reflektory_right;

	[Token(Token = "0x4000ED0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject[] reflektory_left;

	[Token(Token = "0x4000ED1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject[] reflektory_right_multi;

	[Token(Token = "0x4000ED2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Material reflektor_right_vlb;

	[Token(Token = "0x4000ED3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Material reflektor_left_vlb;

	[Token(Token = "0x4000ED4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public Material[] mat;

	[Token(Token = "0x4000ED5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Color[] zalcolor;

	[Token(Token = "0x4000ED6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Color[] lastcolor;

	[Token(Token = "0x4000ED7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private float[] polohaZ;

	[Token(Token = "0x4000ED8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public AudioSource video_aus;

	[Token(Token = "0x4000ED9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public AudioSource songAudio;

	[Token(Token = "0x4000EDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private AudioSource songIntro;

	[Token(Token = "0x4000EDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private float timer;

	[Token(Token = "0x4000EDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private float[] timer_eall;

	[Token(Token = "0x4000EDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private float timer_e10;

	[Token(Token = "0x4000EDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private float[] timer_e2;

	[Token(Token = "0x4000EDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private float[] timer_ie2;

	[Token(Token = "0x4000EE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private bool[] change_e2;

	[Token(Token = "0x4000EE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private bool[] change_ie2;

	[Token(Token = "0x4000EE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private bool[] efekt_enabled;

	[Token(Token = "0x4000EE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private int sme10;

	[Token(Token = "0x4000EE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	private bool be10;

	[Token(Token = "0x4000EE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private bool[] beall;

	[Token(Token = "0x4000EE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private int RGold;

	[Token(Token = "0x4000EE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	private int RGold2;

	[Token(Token = "0x4000EE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private bool reflektory_on;

	[Token(Token = "0x4000EE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	private int pol;

	[Token(Token = "0x4000EEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private float changefor;

	[Token(Token = "0x4000EEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	private bool zm;

	[Token(Token = "0x4000EEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private int zalmeasure;

	[Token(Token = "0x4000EED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	private float ticktimer;

	[Token(Token = "0x4000EEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private float tickpower;

	[Token(Token = "0x4000EEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	private bool reflektory_spustene;

	[Token(Token = "0x4000EF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private byte[,] nextbytecolors;

	[Token(Token = "0x4000EF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private byte[,] bytecolors;

	[Token(Token = "0x4000EF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private Color[] aktualcolor;

	[Token(Token = "0x4000EF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private Color[] nextcolor;

	[Token(Token = "0x4000EF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private Vector3[] zalrot;

	[Token(Token = "0x4000EF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private Vector3[] zalrot2;

	[Token(Token = "0x4000EF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private Vector3[] zalrot4;

	[Token(Token = "0x4000EF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public Color RGcolor;

	[Token(Token = "0x4000EF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private float[] RGtimer;

	[Token(Token = "0x4000EF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private float[] RGtimer2;

	[Token(Token = "0x4000EFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private int zalsm;

	[Token(Token = "0x4000EFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public Material Spodny_panel;

	[Token(Token = "0x4000EFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public Color Spodny_basic;

	[Token(Token = "0x4000EFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public Color Spodny_basic2;

	[Token(Token = "0x4000EFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private float timer_spodny;

	[Token(Token = "0x4000EFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
	private int zalhitcounetr;

	[Token(Token = "0x4000F00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	private bool eff9;

	[Token(Token = "0x4000F01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
	private int counter;

	[Token(Token = "0x4000F02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	private float emis;

	[Token(Token = "0x4000F03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
	private int zalmenu;

	[Token(Token = "0x4000F04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	private int zalm;

	[Token(Token = "0x4000F05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
	private int plusminus;

	[Token(Token = "0x4000F06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	private Vector3 zalsgroupscale;

	[Token(Token = "0x4000F07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
	private float scaletim;

	[Token(Token = "0x4000F08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private float sxx;

	[Token(Token = "0x4000F09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
	private int quality;

	[Token(Token = "0x4000F0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	private float[] spec;

	[Token(Token = "0x4000F0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	private int controllmeasure;

	[Token(Token = "0x4000F0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	private float[] zalintcol;

	[Token(Token = "0x4000F0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	private Color spodny;

	[Token(Token = "0x4000F0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	private int zaltype;

	[Token(Token = "0x4000F0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
	private int analyzercounter;

	[Token(Token = "0x4000F10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	private int efektcounter;

	[Token(Token = "0x4000F11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
	private bool zalbut_multi;

	[Token(Token = "0x600090C")]
	[Address(RVA = "0xA9DF3C", Offset = "0xA9DF3C", VA = "0xA9DF3C")]
	private void Start()
	{
	}

	[Token(Token = "0x600090D")]
	[Address(RVA = "0xA9E378", Offset = "0xA9E378", VA = "0xA9E378")]
	private void Update()
	{
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0xAA2368", Offset = "0xAA2368", VA = "0xAA2368")]
	private void lejzre(int stav, float cc1, int typ)
	{
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0xAA29F8", Offset = "0xAA29F8", VA = "0xAA29F8")]
	private void colorize(int effe, Color col, float intenz, int type)
	{
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0xAA321C", Offset = "0xAA321C", VA = "0xAA321C")]
	public Color efektbeat(int effect_num, int count, Color cfrom, Color cto)
	{
		return default(Color);
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0xAA3504", Offset = "0xAA3504", VA = "0xAA3504")]
	public SoundSpectrumAnalyzer()
	{
	}
}
[Token(Token = "0x20000FA")]
public class Spawner : MonoBehaviour
{
	[Token(Token = "0x20003C9")]
	public enum NextCamera
	{
		[Token(Token = "0x40025BA")]
		Default,
		[Token(Token = "0x40025BB")]
		Around,
		[Token(Token = "0x40025BC")]
		Back,
		[Token(Token = "0x40025BD")]
		Head2
	}

	[Token(Token = "0x20003CA")]
	public enum PPOnOff
	{
		[Token(Token = "0x40025BF")]
		Off,
		[Token(Token = "0x40025C0")]
		On
	}

	[Token(Token = "0x20003CB")]
	public enum NextAvatar
	{
		[Token(Token = "0x40025C2")]
		None,
		[Token(Token = "0x40025C3")]
		Girl,
		[Token(Token = "0x40025C4")]
		Winston
	}

	[Serializable]
	[Token(Token = "0x20003CC")]
	public class SMat
	{
		[Token(Token = "0x40025C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Material mat1;

		[Token(Token = "0x40025C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material mat2;

		[Token(Token = "0x60019FE")]
		[Address(RVA = "0x9F65A8", Offset = "0x9F65A8", VA = "0x9F65A8")]
		public SMat()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003CD")]
	public class SLevel
	{
		[Token(Token = "0x40025C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string version;

		[Token(Token = "0x40025C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SSphere[] spheres;

		[Token(Token = "0x60019FF")]
		[Address(RVA = "0x9F64F0", Offset = "0x9F64F0", VA = "0x9F64F0")]
		public static SLevel CreateFromJSON(string jsonString)
		{
			return null;
		}

		[Token(Token = "0x6001A00")]
		[Address(RVA = "0x9F6540", Offset = "0x9F6540", VA = "0x9F6540")]
		public SLevel()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003CE")]
	public class SSphere
	{
		[Token(Token = "0x40025C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float time;

		[Token(Token = "0x40025CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int x;

		[Token(Token = "0x40025CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int y;

		[Token(Token = "0x40025CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int type;

		[Token(Token = "0x6001A01")]
		[Address(RVA = "0x9F6610", Offset = "0x9F6610", VA = "0x9F6610")]
		public SSphere()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003CF")]
	public class SModLevel
	{
		[Token(Token = "0x40025CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SModNote[] _notes;

		[Token(Token = "0x6001A02")]
		[Address(RVA = "0x9F65B0", Offset = "0x9F65B0", VA = "0x9F65B0")]
		public static SModLevel CreateFromJSON(string jsonString)
		{
			return null;
		}

		[Token(Token = "0x6001A03")]
		[Address(RVA = "0x9F6600", Offset = "0x9F6600", VA = "0x9F6600")]
		public SModLevel()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003D0")]
	public class SModNote
	{
		[Token(Token = "0x40025CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float _time;

		[Token(Token = "0x40025CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int _lineIndex;

		[Token(Token = "0x40025D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int _lineLayer;

		[Token(Token = "0x40025D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int _type;

		[Token(Token = "0x6001A04")]
		[Address(RVA = "0x9F6608", Offset = "0x9F6608", VA = "0x9F6608")]
		public SModNote()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003D1")]
	public class SMDatLevel
	{
		[Token(Token = "0x40025D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SMDatNote[] _notes;

		[Token(Token = "0x6001A05")]
		[Address(RVA = "0x9F6548", Offset = "0x9F6548", VA = "0x9F6548")]
		public static SMDatLevel CreateFromJSON(string jsonString)
		{
			return null;
		}

		[Token(Token = "0x6001A06")]
		[Address(RVA = "0x9F6598", Offset = "0x9F6598", VA = "0x9F6598")]
		public SMDatLevel()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003D2")]
	public class SMDatNote
	{
		[Token(Token = "0x40025D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float _time;

		[Token(Token = "0x40025D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int _lineIndex;

		[Token(Token = "0x40025D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int _lineLayer;

		[Token(Token = "0x40025D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int _type;

		[Token(Token = "0x6001A07")]
		[Address(RVA = "0x9F65A0", Offset = "0x9F65A0", VA = "0x9F65A0")]
		public SMDatNote()
		{
		}
	}

	[Token(Token = "0x20003D3")]
	public enum ROOMSIZE
	{
		[Token(Token = "0x40025D8")]
		Small,
		[Token(Token = "0x40025D9")]
		Medium,
		[Token(Token = "0x40025DA")]
		Large,
		[Token(Token = "0x40025DB")]
		None
	}

	[Token(Token = "0x20003D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9B38", Offset = "0x7F9B38")]
	private sealed class <Start_VR>d__257 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40025DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000357")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A0B")]
			[Address(RVA = "0x9F647C", Offset = "0x9F647C", VA = "0x9F647C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000358")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A0D")]
			[Address(RVA = "0x9F64E8", Offset = "0x9F64E8", VA = "0x9F64E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A08")]
		[Address(RVA = "0x9F6380", Offset = "0x9F6380", VA = "0x9F6380")]
		[DebuggerHidden]
		public <Start_VR>d__257(int <>1__state)
		{
		}

		[Token(Token = "0x6001A09")]
		[Address(RVA = "0x9F63AC", Offset = "0x9F63AC", VA = "0x9F63AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A0A")]
		[Address(RVA = "0x9F63B0", Offset = "0x9F63B0", VA = "0x9F63B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A0C")]
		[Address(RVA = "0x9F6484", Offset = "0x9F6484", VA = "0x9F6484", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject _liv;

	[Token(Token = "0x4000F13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip[] intro_themes;

	[Token(Token = "0x4000F14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip intro_theme360;

	[Token(Token = "0x4000F15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip intro_theme_disco;

	[Token(Token = "0x4000F16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip intro_theme_platform;

	[Token(Token = "0x4000F17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip intro_theme_blades;

	[Token(Token = "0x4000F18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject[] videotextury_tema;

	[Token(Token = "0x4000F19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 rot360;

	[Token(Token = "0x4000F1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform scene_transform_player1;

	[Token(Token = "0x4000F1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform scene_transform_player2;

	[Token(Token = "0x4000F1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool spawn360;

	[Token(Token = "0x4000F1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool spawn_disco;

	[Token(Token = "0x4000F1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform spawner;

	[Token(Token = "0x4000F1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform ring_inner;

	[Token(Token = "0x4000F20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform platform_spawner;

	[Token(Token = "0x4000F21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Transform scene_transform;

	[Token(Token = "0x4000F22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Transform scene_transform_fake;

	[Token(Token = "0x4000F23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject panel_original;

	[Token(Token = "0x4000F24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject panel_minecr;

	[Token(Token = "0x4000F25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject zver;

	[Token(Token = "0x4000F26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Light dlight;

	[Token(Token = "0x4000F27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Renderer life_renderer;

	[Token(Token = "0x4000F28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Renderer time_renderer;

	[Token(Token = "0x4000F29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Renderer life_renderer_newui;

	[Token(Token = "0x4000F2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Renderer time_renderer_newui;

	[Token(Token = "0x4000F2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Renderer life_renderer_net;

	[Token(Token = "0x4000F2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Renderer time_renderer_net;

	[Token(Token = "0x4000F2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Vector3 lifepos;

	[Token(Token = "0x4000F2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private Vector3 lifescale;

	[Token(Token = "0x4000F2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Vector3 timepos;

	[Token(Token = "0x4000F30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private Vector3 timescale;

	[Token(Token = "0x4000F31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public SongList songlist;

	[Token(Token = "0x4000F32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public ConcertEffectsScript concert;

	[Token(Token = "0x4000F33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private GameObject mainCamera;

	[Token(Token = "0x4000F34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	public static byte setting_GameQuality;

	[Token(Token = "0x4000F35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public NextCamera CameraType;

	[Token(Token = "0x4000F36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private NextCamera zalCameraType;

	[Token(Token = "0x4000F37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public PPOnOff postproces;

	[Token(Token = "0x4000F38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private PPOnOff zalpostproces;

	[Token(Token = "0x4000F39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static NextAvatar AvatarType;

	[Token(Token = "0x4000F3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private NextAvatar zalAvatarType;

	[Token(Token = "0x4000F3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool show_graph;

	[Token(Token = "0x4000F3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public bool use_graph;

	[Token(Token = "0x4000F3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject next_camera;

	[Token(Token = "0x4000F3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public GameObject next_camera2;

	[Token(Token = "0x4000F3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public GameObject next_camera3;

	[Token(Token = "0x4000F40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public GameObject setting_next_camera;

	[Token(Token = "0x4000F41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public GameObject setting_next_camera2;

	[Token(Token = "0x4000F42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public GameObject setting_next_camera3;

	[Token(Token = "0x4000F43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public GameObject[] Avatar_girl;

	[Token(Token = "0x4000F44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public GameObject[] Avatar_boy;

	[Token(Token = "0x4000F45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public GameObject[] Avatar_girl_net_master;

	[Token(Token = "0x4000F46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public GameObject[] Avatar_boy_net_master;

	[Token(Token = "0x4000F47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public GameObject[] Avatar_girl_net;

	[Token(Token = "0x4000F48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public GameObject[] Avatar_boy_net;

	[Token(Token = "0x4000F49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private byte zal_other_player_avatar_type;

	[Token(Token = "0x4000F4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A9")]
	private byte zal_other_player_avatar_change;

	[Token(Token = "0x4000F4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int avatarchange;

	[Token(Token = "0x4000F4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	private int zalavatarchange;

	[Token(Token = "0x4000F4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public Explosions Gula;

	[Token(Token = "0x4000F4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public Explosions Spawns;

	[Token(Token = "0x4000F4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public Explosions Obstacles;

	[Token(Token = "0x4000F50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public Explosions Pasiky;

	[Token(Token = "0x4000F51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public TurretScript gun1;

	[Token(Token = "0x4000F52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public TurretScript gun2;

	[Token(Token = "0x4000F53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public Transform[] spawn_obstacles;

	[Token(Token = "0x4000F54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public GameObject video_loader;

	[Token(Token = "0x4000F55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public YoutubePlayer yplayer;

	[Token(Token = "0x4000F56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public VideoPlayer vpp;

	[Token(Token = "0x4000F57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public GameObject Videoplayer_object;

	[Token(Token = "0x4000F58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static bool video_is_prepared;

	[Token(Token = "0x4000F59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public AudioSource songVideo;

	[Token(Token = "0x4000F5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static int gridSize;

	[Token(Token = "0x4000F5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static bool play_video;

	[Token(Token = "0x4000F5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private int xx;

	[Token(Token = "0x4000F5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public static bool VideoMode;

	[Token(Token = "0x4000F5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static int GameMode;

	[Token(Token = "0x4000F5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static int HitCounter;

	[Token(Token = "0x4000F60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static byte Average;

	[Token(Token = "0x4000F61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static int Average_counter;

	[Token(Token = "0x4000F62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static int Average_count;

	[Token(Token = "0x4000F63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static int SecretValuesIndex;

	[Token(Token = "0x4000F64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static int[,] SecretValues;

	[Token(Token = "0x4000F65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static float SecretValuesTimeout;

	[Token(Token = "0x4000F66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public static int HitLeft;

	[Token(Token = "0x4000F67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static int HitRight;

	[Token(Token = "0x4000F68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public static int HitOK;

	[Token(Token = "0x4000F69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static int Losts;

	[Token(Token = "0x4000F6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public static float HitPower;

	[Token(Token = "0x4000F6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static float AktualPower_Right;

	[Token(Token = "0x4000F6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public static float AktualPower_Left;

	[Token(Token = "0x4000F6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static Vector3 RH_Vektor;

	[Token(Token = "0x4000F6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public static Vector3 LH_Vektor;

	[Token(Token = "0x4000F6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static float HitAccuracy;

	[Token(Token = "0x4000F70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public static float HitPowerMax;

	[Token(Token = "0x4000F71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static float HitPowerMin;

	[Token(Token = "0x4000F72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public static float KCAL;

	[Token(Token = "0x4000F73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static float KCALH;

	[Token(Token = "0x4000F74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public static int KCALH_Counter;

	[Token(Token = "0x4000F75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static int Ksonglenght;

	[Token(Token = "0x4000F76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public static bool prebieha_ukazka;

	[Token(Token = "0x4000F77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static int playsong;

	[Token(Token = "0x4000F78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public static int shortpause;

	[Token(Token = "0x4000F79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static float msPerBeat;

	[Token(Token = "0x4000F7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public static float shake_time;

	[Token(Token = "0x4000F7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static double song_time_current;

	[Token(Token = "0x4000F7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public static string veta;

	[Token(Token = "0x4000F7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static string zalveta;

	[Token(Token = "0x4000F7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public GameObject kocka;

	[Token(Token = "0x4000F7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public GameObject kocka_red;

	[Token(Token = "0x4000F80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public GameObject kocka_green;

	[Token(Token = "0x4000F81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private float f;

	[Token(Token = "0x4000F82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public static int songMeasure;

	[Token(Token = "0x4000F83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public static int songMeasure2;

	[Token(Token = "0x4000F84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public static int songMeasureHalf;

	[Token(Token = "0x4000F85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public static int songMeasure05;

	[Token(Token = "0x4000F86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public static int songMeasureHalf05;

	[Token(Token = "0x4000F87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public static int songHalfMeasure;

	[Token(Token = "0x4000F88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public static int[] intensityPerBeat;

	[Token(Token = "0x4000F89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public static int[,] effectPerBeat;

	[Token(Token = "0x4000F8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public static byte[,,] colorPerBeat;

	[Token(Token = "0x4000F8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public static Color[,] beatColor;

	[Token(Token = "0x4000F8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private double spawnTime;

	[Token(Token = "0x4000F8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private double spawnEffectTime;

	[Token(Token = "0x4000F8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private static int letterSpawnerIterator;

	[Token(Token = "0x4000F8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private static int letterSpawnerCount;

	[Token(Token = "0x4000F90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private static float letterSpawnerTime;

	[Token(Token = "0x4000F91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private static string letterSpawnerText;

	[Token(Token = "0x4000F92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private static int letterLast1;

	[Token(Token = "0x4000F93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private static int letterLast2;

	[Token(Token = "0x4000F94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private static System.Random letterRandom;

	[Token(Token = "0x4000F95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private static string letterEasterEggs;

	[Token(Token = "0x4000F96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private static int letterEEiterator;

	[Token(Token = "0x4000F97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private static bool ObstacleSuggested;

	[Token(Token = "0x4000F98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private static double ObstacleSuggestedTime;

	[Token(Token = "0x4000F99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private static int ObstacleSuggestedType;

	[Token(Token = "0x4000F9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private static double ObstacleLastTime;

	[Token(Token = "0x4000F9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private static int ObstacleUseNextLongerIgnore;

	[Token(Token = "0x4000F9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private static float OBSTACLE_Hole;

	[Token(Token = "0x4000F9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private static float OBSTACLE_IgnoreStart;

	[Token(Token = "0x4000F9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private static float OBSTACLE_IgnoreNext;

	[Token(Token = "0x4000F9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private static float OBSTACLE_IgnoreNextLonger;

	[Token(Token = "0x4000FA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private static int OBSTACLE_Difficulty;

	[Token(Token = "0x4000FA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private AudioSource songAudio;

	[Token(Token = "0x4000FA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private AudioSource songIntro;

	[Token(Token = "0x4000FA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	private AudioSource songPlay;

	[Token(Token = "0x4000FA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private static SLevel songData;

	[Token(Token = "0x4000FA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private static double spawnedTime;

	[Token(Token = "0x4000FA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private static bool songispaused;

	[Token(Token = "0x4000FA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private static int nextNote;

	[Token(Token = "0x4000FA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private static int nextNoteEffect;

	[Token(Token = "0x4000FA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	private float timer_short;

	[Token(Token = "0x4000FAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
	private bool volup;

	[Token(Token = "0x4000FAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public GameObject fogy;

	[Token(Token = "0x4000FAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public GameObject part_red;

	[Token(Token = "0x4000FAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public GameObject part_blue;

	[Token(Token = "0x4000FAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public GameObject part_green;

	[Token(Token = "0x4000FAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	public static float spectral1;

	[Token(Token = "0x4000FB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public static float spectral2;

	[Token(Token = "0x4000FB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	public static float spectral3;

	[Token(Token = "0x4000FB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	private bool zapauznute;

	[Token(Token = "0x4000FB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
	public Color fogColor1;

	[Token(Token = "0x4000FB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
	public Color fogColor2;

	[Token(Token = "0x4000FB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
	public Color fogLight1;

	[Token(Token = "0x4000FB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
	public Color fogLight2;

	[Token(Token = "0x4000FB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	public Light[] foglight;

	[Token(Token = "0x4000FB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public static bool endgame;

	[Token(Token = "0x4000FB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	private int life_start;

	[Token(Token = "0x4000FBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	public static int life_max;

	[Token(Token = "0x4000FBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public static int life;

	[Token(Token = "0x4000FBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	public static bool Level_failed;

	[Token(Token = "0x4000FBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
	private float lftimer;

	[Token(Token = "0x4000FBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	private float lfpom;

	[Token(Token = "0x4000FBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
	private int subMeasure;

	[Token(Token = "0x4000FC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	private bool pp;

	[Token(Token = "0x4000FC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
	private float esctimer;

	[Token(Token = "0x4000FC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	private NextCamera zalzalcam;

	[Token(Token = "0x4000FC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	public GameObject hlaska;

	[Token(Token = "0x4000FC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	private int maxboost_aktual;

	[Token(Token = "0x4000FC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x304")]
	private float playtime;

	[Token(Token = "0x4000FC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	private int pocitadloguli;

	[Token(Token = "0x4000FC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
	private bool comboplus;

	[Token(Token = "0x4000FC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public static int typ_failu;

	[Token(Token = "0x4000FC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public static double songAudio_time;

	[Token(Token = "0x4000FCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public static int good_beat_ready;

	[Token(Token = "0x4000FCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	public static Vector3 score_blue_pos;

	[Token(Token = "0x4000FCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public static int score_blue_num;

	[Token(Token = "0x4000FCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	public static int score_blue_aktivated;

	[Token(Token = "0x4000FCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public static Vector3 score_yellow_pos;

	[Token(Token = "0x4000FCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	public static int score_yellow_num;

	[Token(Token = "0x4000FD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public static int score_yellow_aktivated;

	[Token(Token = "0x4000FD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	public static int songrun;

	[Token(Token = "0x4000FD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public static int perc_max;

	[Token(Token = "0x4000FD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	public static int perc_left;

	[Token(Token = "0x4000FD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public static int perc_right;

	[Token(Token = "0x4000FD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public static bool isprepared;

	[Token(Token = "0x4000FD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public static float[] speeds;

	[Token(Token = "0x4000FD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	private int zallife;

	[Token(Token = "0x4000FD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x314")]
	private int zalcam;

	[Token(Token = "0x4000FD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	private int zalavat;

	[Token(Token = "0x4000FDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public static bool effectson;

	[Token(Token = "0x4000FDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31C")]
	private bool zaleffectson;

	[Token(Token = "0x4000FDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	private int zalnextt;

	[Token(Token = "0x4000FDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x324")]
	private int zalactive_theme;

	[Token(Token = "0x4000FDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F1")]
	public static bool use_oculus_offset;

	[Token(Token = "0x4000FDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F2")]
	public static bool alternative_ui;

	[Token(Token = "0x4000FE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public static Camera Menu_camera;

	[Token(Token = "0x4000FE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public static Camera Menu_camera_right;

	[Token(Token = "0x4000FE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public static Camera Menu_camera_uicolors;

	[Token(Token = "0x4000FE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	public Camera _menu_camera_center;

	[Token(Token = "0x4000FE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	public Camera _menu_camera_right;

	[Token(Token = "0x4000FE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	public Camera _menu_camera_uicolors;

	[Token(Token = "0x4000FE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	private float nextround_timer;

	[Token(Token = "0x4000FE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x344")]
	private float nextround_value;

	[Token(Token = "0x4000FE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	private float songduration_counter;

	[Token(Token = "0x4000FE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	private double last_audio_time;

	[Token(Token = "0x4000FEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public static bool startoculus;

	[Token(Token = "0x4000FEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x211")]
	public static bool use_low_setting_menu;

	[Token(Token = "0x4000FEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x212")]
	public static bool low_setting_menu;

	[Token(Token = "0x4000FED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	private bool zalglow;

	[Token(Token = "0x4000FEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x213")]
	public static bool ver5;

	[Token(Token = "0x4000FEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	public static bool ver4;

	[Token(Token = "0x4000FF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x359")]
	private bool zalver4;

	[Token(Token = "0x4000FF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35A")]
	private bool zalver5;

	[Token(Token = "0x4000FF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x215")]
	public static bool nove_mody;

	[Token(Token = "0x4000FF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public static float playspeed;

	[Token(Token = "0x4000FF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
	public static float normalspeed;

	[Token(Token = "0x4000FF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public static float platform_speed;

	[Token(Token = "0x4000FF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public static Transform platform_aktual;

	[Token(Token = "0x4000FF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35C")]
	public ROOMSIZE room;

	[Token(Token = "0x4000FF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public static Vector3[] rotsides_R;

	[Token(Token = "0x4000FF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public static Vector3[] rotsides_L;

	[Token(Token = "0x4000FFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	private bool zalspawn360;

	[Token(Token = "0x4000FFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x361")]
	private bool zalspawn_disco;

	[Token(Token = "0x1700006D")]
	public static int Combo
	{
		[Token(Token = "0x6000913")]
		[Address(RVA = "0xAA3BE8", Offset = "0xAA3BE8", VA = "0xAA3BE8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000914")]
		[Address(RVA = "0xAA3C94", Offset = "0xAA3C94", VA = "0xAA3C94")]
		set
		{
		}
	}

	[Token(Token = "0x1700006E")]
	public static int HitScore
	{
		[Token(Token = "0x6000915")]
		[Address(RVA = "0xAA3D44", Offset = "0xAA3D44", VA = "0xAA3D44")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000916")]
		[Address(RVA = "0xAA3DF4", Offset = "0xAA3DF4", VA = "0xAA3DF4")]
		set
		{
		}
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0xAA3EA8", Offset = "0xAA3EA8", VA = "0xAA3EA8")]
	public static int ConvertInt16ToInt32(short b0, short b1)
	{
		return default(int);
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0xAA3EB4", Offset = "0xAA3EB4", VA = "0xAA3EB4")]
	public static short[] ConvertInt32ToInt16(int intValue)
	{
		return null;
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0xAA3F3C", Offset = "0xAA3F3C", VA = "0xAA3F3C")]
	public static bool Get32Bool(int value, byte index)
	{
		return default(bool);
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0xAA3F54", Offset = "0xAA3F54", VA = "0xAA3F54")]
	public static int Set32Bool(int value, bool b, byte index)
	{
		return default(int);
	}

	[Token(Token = "0x600091B")]
	[Address(RVA = "0xAA3FEC", Offset = "0xAA3FEC", VA = "0xAA3FEC")]
	public static int Clear(int Value, byte index)
	{
		return default(int);
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0xAA4000", Offset = "0xAA4000", VA = "0xAA4000")]
	private void Start()
	{
	}

	[Token(Token = "0x600091D")]
	[Address(RVA = "0xAA44A8", Offset = "0xAA44A8", VA = "0xAA44A8")]
	public static void ProcessNearSpheres(int difficulty, int si)
	{
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0xAA4E2C", Offset = "0xAA4E2C", VA = "0xAA4E2C")]
	public static void SongDataPrepare()
	{
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0xAA6CB8", Offset = "0xAA6CB8", VA = "0xAA6CB8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x804550", Offset = "0x804550")]
	private IEnumerator Start_VR(bool start_oculus)
	{
		return null;
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0xAA6D18", Offset = "0xAA6D18", VA = "0xAA6D18")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0xAA6D1C", Offset = "0xAA6D1C", VA = "0xAA6D1C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0xAB167C", Offset = "0xAB167C", VA = "0xAB167C")]
	private void SpawnObstacle(int type)
	{
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0xAB22D0", Offset = "0xAB22D0", VA = "0xAB22D0")]
	private void SpawnObstacle(int type, bool a1, bool a2, bool a3, bool a4, bool a5)
	{
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0xAAE52C", Offset = "0xAAE52C", VA = "0xAAE52C")]
	private void Spawn(bool left, int gridX, int gridY, int orientation, bool spawnEffect, int gridSize, float endtime)
	{
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0xAB080C", Offset = "0xAB080C", VA = "0xAB080C")]
	private void FakeSpawn(bool left, int gridX, int gridY, int orientation, bool spawnEffect, int gridSize, float endtime)
	{
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0xAB2630", Offset = "0xAB2630", VA = "0xAB2630")]
	public Spawner()
	{
	}
}
[Token(Token = "0x20000FB")]
public class SpeedSetting : MonoBehaviour
{
	[Token(Token = "0x4000FFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 vec;

	[Token(Token = "0x4000FFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool righthand;

	[Token(Token = "0x4000FFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool blue_laser;

	[Token(Token = "0x4000FFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	public bool yellow_laser;

	[Token(Token = "0x4001000")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Collider coli;

	[Token(Token = "0x6000928")]
	[Address(RVA = "0x9F6618", Offset = "0x9F6618", VA = "0x9F6618")]
	private void Start()
	{
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0x9F6670", Offset = "0x9F6670", VA = "0x9F6670")]
	public SpeedSetting()
	{
	}
}
[Token(Token = "0x20000FC")]
public class StartEndPanels : MonoBehaviour
{
	[Token(Token = "0x4001001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject _panelLeft;

	[Token(Token = "0x4001002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject _panelRight;

	[Token(Token = "0x4001003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject _panelCenter;

	[Token(Token = "0x4001004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject _menuLeft;

	[Token(Token = "0x4001005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject _menuRight;

	[Token(Token = "0x4001006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject _menuCenter_net;

	[Token(Token = "0x4001007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject _panelMidle_net;

	[Token(Token = "0x4001008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject _panelRight_net;

	[Token(Token = "0x4001009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject _panelCenter_net;

	[Token(Token = "0x400100A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject _cas;

	[Token(Token = "0x400100B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject _menuOstatne;

	[Token(Token = "0x400100C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject _reflektory;

	[Token(Token = "0x400100D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject _menuCenter_disco;

	[Token(Token = "0x400100E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject _menu_pozadie_left;

	[Token(Token = "0x400100F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject _menu_pozadie_right;

	[Token(Token = "0x4001010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 caspos;

	[Token(Token = "0x4001011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 caspos_right;

	[Token(Token = "0x4001012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector3 caspos_left;

	[Token(Token = "0x4001013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float starttimer;

	[Token(Token = "0x4001014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int stav;

	[Token(Token = "0x4001015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion wing_left;

	[Token(Token = "0x4001016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private Quaternion wing_right;

	[Token(Token = "0x4001017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private Quaternion wing_left_new;

	[Token(Token = "0x4001018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private Quaternion wing_right_new;

	[Token(Token = "0x4001019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private Vector3 menu_left;

	[Token(Token = "0x400101A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Vector3 menu_right;

	[Token(Token = "0x400101B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private Vector3 menu_left_new;

	[Token(Token = "0x400101C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Vector3 menu_right_new;

	[Token(Token = "0x400101D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private int eff9begin;

	[Token(Token = "0x400101E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private float zrychly;

	[Token(Token = "0x400101F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public bool right;

	[Token(Token = "0x600092A")]
	[Address(RVA = "0x9F7620", Offset = "0x9F7620", VA = "0x9F7620")]
	private void Awake()
	{
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0x9F77F0", Offset = "0x9F77F0", VA = "0x9F77F0")]
	private void Start()
	{
	}

	[Token(Token = "0x600092C")]
	[Address(RVA = "0x9F77F4", Offset = "0x9F77F4", VA = "0x9F77F4")]
	private void Update()
	{
	}

	[Token(Token = "0x600092D")]
	[Address(RVA = "0x9F8BE8", Offset = "0x9F8BE8", VA = "0x9F8BE8")]
	public StartEndPanels()
	{
	}
}
[Token(Token = "0x20000FD")]
public class StlpikMover : MonoBehaviour
{
	[Token(Token = "0x4001020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 pos_start;

	[Token(Token = "0x4001021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 pos_end;

	[Token(Token = "0x4001022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 rot_start;

	[Token(Token = "0x4001023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool smer;

	[Token(Token = "0x4001024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float posuv1;

	[Token(Token = "0x4001025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float posuv2;

	[Token(Token = "0x600092E")]
	[Address(RVA = "0x9F8BF8", Offset = "0x9F8BF8", VA = "0x9F8BF8")]
	private void Start()
	{
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0x9F8C8C", Offset = "0x9F8C8C", VA = "0x9F8C8C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0x9F8D4C", Offset = "0x9F8D4C", VA = "0x9F8D4C")]
	public StlpikMover()
	{
	}
}
[Token(Token = "0x20000FE")]
public class StrelaMover : MonoBehaviour
{
	[Token(Token = "0x4001026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer strela_renderer;

	[Token(Token = "0x4001027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float impulse;

	[Token(Token = "0x4001028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float speed360;

	[Token(Token = "0x4001029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioSource audioVystrel1;

	[Token(Token = "0x400102A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioSource audioVystrel2;

	[Token(Token = "0x400102B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool dea;

	[Token(Token = "0x400102C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float deatimer;

	[Token(Token = "0x400102D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Collider col;

	[Token(Token = "0x400102E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float lifetimer;

	[Token(Token = "0x400102F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Rigidbody rigidb;

	[Token(Token = "0x6000931")]
	[Address(RVA = "0x9F8D54", Offset = "0x9F8D54", VA = "0x9F8D54")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000932")]
	[Address(RVA = "0x9F8E30", Offset = "0x9F8E30", VA = "0x9F8E30")]
	private void Start()
	{
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0x9F8E34", Offset = "0x9F8E34", VA = "0x9F8E34")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0x9F906C", Offset = "0x9F906C", VA = "0x9F906C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000935")]
	[Address(RVA = "0x9F9364", Offset = "0x9F9364", VA = "0x9F9364")]
	public void Destro(bool bolo_kombo)
	{
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0x9F9314", Offset = "0x9F9314", VA = "0x9F9314")]
	private void deaktivuj()
	{
	}

	[Token(Token = "0x6000937")]
	[Address(RVA = "0x9F944C", Offset = "0x9F944C", VA = "0x9F944C")]
	public StrelaMover()
	{
	}
}
[Token(Token = "0x20000FF")]
public class StrelaScript : MonoBehaviour
{
	[Token(Token = "0x4001030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tim;

	[Token(Token = "0x4001031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool beatready;

	[Token(Token = "0x6000938")]
	[Address(RVA = "0x9F9464", Offset = "0x9F9464", VA = "0x9F9464")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000939")]
	[Address(RVA = "0x9F946C", Offset = "0x9F946C", VA = "0x9F946C")]
	private void Destro()
	{
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0x9F9494", Offset = "0x9F9494", VA = "0x9F9494")]
	private void Update()
	{
	}

	[Token(Token = "0x600093B")]
	[Address(RVA = "0x9F9634", Offset = "0x9F9634", VA = "0x9F9634")]
	public StrelaScript()
	{
	}
}
[Token(Token = "0x2000100")]
public class SwordStart : MonoBehaviour
{
	[Token(Token = "0x4001032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject fitbox;

	[Token(Token = "0x4001033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject saw;

	[Token(Token = "0x4001034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject staff;

	[Token(Token = "0x4001035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject blades;

	[Token(Token = "0x4001036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject phasers;

	[Token(Token = "0x4001037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject tonfas;

	[Token(Token = "0x4001038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform blade;

	[Token(Token = "0x4001039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform staff_up;

	[Token(Token = "0x400103A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform staff_down;

	[Token(Token = "0x400103B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject weapon;

	[Token(Token = "0x400103C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject weapon2;

	[Token(Token = "0x400103D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject weapon3;

	[Token(Token = "0x400103E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject weapon4;

	[Token(Token = "0x400103F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject dager;

	[Token(Token = "0x4001040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject pistol;

	[Token(Token = "0x4001041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Quaternion rot;

	[Token(Token = "0x4001042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float timer;

	[Token(Token = "0x4001043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private int part;

	[Token(Token = "0x4001044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float size;

	[Token(Token = "0x4001045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Vector3 pos;

	[Token(Token = "0x4001046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Vector3 smer1;

	[Token(Token = "0x4001047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public Vector3 smer2;

	[Token(Token = "0x4001048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Vector3 smer3;

	[Token(Token = "0x4001049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public Vector3 smerdager;

	[Token(Token = "0x400104A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float sizedager;

	[Token(Token = "0x400104B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private int stav;

	[Token(Token = "0x400104C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private int zalstav;

	[Token(Token = "0x400104D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public bool aktive_doblesword;

	[Token(Token = "0x400104E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF5")]
	public bool aktive_doblesword_spodny;

	[Token(Token = "0x400104F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF6")]
	public bool aktive_sword;

	[Token(Token = "0x4001050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF7")]
	public bool aktive_weapon2;

	[Token(Token = "0x4001051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public bool aktive_weapon3;

	[Token(Token = "0x4001052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
	public bool aktive_tonfa;

	[Token(Token = "0x4001053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFA")]
	public bool aktive_dager;

	[Token(Token = "0x4001054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFB")]
	public bool playsounds;

	[Token(Token = "0x4001055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private AudioSource audio1;

	[Token(Token = "0x4001056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private AudioSource audio2;

	[Token(Token = "0x4001057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private AudioSource audio3;

	[Token(Token = "0x4001058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private AudioSource audio4;

	[Token(Token = "0x4001059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private AudioSource audio5;

	[Token(Token = "0x400105A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private AudioSource audio6;

	[Token(Token = "0x400105B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private AudioSource audio7;

	[Token(Token = "0x400105C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private bool inproces;

	[Token(Token = "0x400105D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private int stavstav;

	[Token(Token = "0x400105E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private bool demo;

	[Token(Token = "0x400105F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x141")]
	private bool stafaright;

	[Token(Token = "0x4001060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x142")]
	public bool left;

	[Token(Token = "0x4001061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private float changetimer;

	[Token(Token = "0x4001062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private float zalvc;

	[Token(Token = "0x4001063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private float oldzalvc;

	[Token(Token = "0x4001064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private float zalvcb;

	[Token(Token = "0x4001065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private float oldzalvcb;

	[Token(Token = "0x4001066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private bool nieco_nahodene;

	[Token(Token = "0x4001067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private int zalselect;

	[Token(Token = "0x4001068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private bool staff_mode;

	[Token(Token = "0x4001069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x161")]
	private bool start_mode;

	[Token(Token = "0x600093C")]
	[Address(RVA = "0x9F9858", Offset = "0x9F9858", VA = "0x9F9858")]
	private void Start()
	{
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0x9F9934", Offset = "0x9F9934", VA = "0x9F9934")]
	private void Update()
	{
	}

	[Token(Token = "0x600093E")]
	[Address(RVA = "0x9FA660", Offset = "0x9FA660", VA = "0x9FA660")]
	public SwordStart()
	{
	}
}
[Token(Token = "0x2000101")]
public class swordTrail : MonoBehaviour
{
	[Token(Token = "0x400106A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float lastUpdate;

	[Token(Token = "0x400106B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform pointup;

	[Token(Token = "0x400106C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 lasposition;

	[Token(Token = "0x400106D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform quadtransform;

	[Token(Token = "0x600093F")]
	[Address(RVA = "0x1296608", Offset = "0x1296608", VA = "0x1296608")]
	private void Start()
	{
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0x129664C", Offset = "0x129664C", VA = "0x129664C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0x129676C", Offset = "0x129676C", VA = "0x129676C")]
	public swordTrail()
	{
	}
}
[Token(Token = "0x2000102")]
public class TextureScale
{
	[Token(Token = "0x20003D5")]
	public class ThreadData
	{
		[Token(Token = "0x40025DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int start;

		[Token(Token = "0x40025DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int end;

		[Token(Token = "0x6001A0E")]
		[Address(RVA = "0x9FB368", Offset = "0x9FB368", VA = "0x9FB368")]
		public ThreadData(int s, int e)
		{
		}
	}

	[Token(Token = "0x400106E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Color[] texColors;

	[Token(Token = "0x400106F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Color[] newColors;

	[Token(Token = "0x4001070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static int w;

	[Token(Token = "0x4001071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static float ratioX;

	[Token(Token = "0x4001072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static float ratioY;

	[Token(Token = "0x4001073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static int w2;

	[Token(Token = "0x4001074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static int finishCount;

	[Token(Token = "0x4001075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static Mutex mutex;

	[Token(Token = "0x6000942")]
	[Address(RVA = "0x9FAF60", Offset = "0x9FAF60", VA = "0x9FAF60")]
	public static void Point(Texture2D tex, int newWidth, int newHeight)
	{
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0x9FB360", Offset = "0x9FB360", VA = "0x9FB360")]
	public static void Bilinear(Texture2D tex, int newWidth, int newHeight)
	{
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0x9FAF68", Offset = "0x9FAF68", VA = "0x9FAF68")]
	private static void ThreadedScale(Texture2D tex, int newWidth, int newHeight, bool useBilinear)
	{
	}

	[Token(Token = "0x6000945")]
	[Address(RVA = "0x9FB3A0", Offset = "0x9FB3A0", VA = "0x9FB3A0")]
	public static void BilinearScale(object obj)
	{
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0x9FB6B8", Offset = "0x9FB6B8", VA = "0x9FB6B8")]
	public static void PointScale(object obj)
	{
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0x9FB858", Offset = "0x9FB858", VA = "0x9FB858")]
	private static Color ColorLerpUnclamped(Color c1, Color c2, float value)
	{
		return default(Color);
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0x9FB8BC", Offset = "0x9FB8BC", VA = "0x9FB8BC")]
	public TextureScale()
	{
	}
}
[Token(Token = "0x2000103")]
public class Texty : MonoBehaviour
{
	[Token(Token = "0x4001076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnalyzerEasy analyzer_easy;

	[Token(Token = "0x4001077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CirclebarScript circle_skript;

	[Token(Token = "0x4001078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool use_circle;

	[Token(Token = "0x4001079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ConcertEffectsScript concert;

	[Token(Token = "0x400107A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshPro tmpr;

	[Token(Token = "0x400107B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SpriteRenderer sprite_kruh;

	[Token(Token = "0x400107C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool b_hitcounter;

	[Token(Token = "0x400107D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Color bestscorecolor;

	[Token(Token = "0x400107E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool t_accuracy;

	[Token(Token = "0x400107F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	public bool t_power;

	[Token(Token = "0x4001080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	public bool t_time_end;

	[Token(Token = "0x4001081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F")]
	public bool t_time_current;

	[Token(Token = "0x4001082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool b_hitok;

	[Token(Token = "0x4001083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool b_losts;

	[Token(Token = "0x4001084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	public bool b_power;

	[Token(Token = "0x4001085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
	public bool b_acuracy;

	[Token(Token = "0x4001086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool b_powermax;

	[Token(Token = "0x4001087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	public bool b_powermin;

	[Token(Token = "0x4001088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
	public bool b_boost;

	[Token(Token = "0x4001089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x67")]
	public bool b_place;

	[Token(Token = "0x400108A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool t_kcal;

	[Token(Token = "0x400108B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	public bool t_lastkcal;

	[Token(Token = "0x400108C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
	public bool t_maxkcal;

	[Token(Token = "0x400108D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
	public bool t_kcalh;

	[Token(Token = "0x400108E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool t_lastkcalh;

	[Token(Token = "0x400108F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	public bool t_gametype;

	[Token(Token = "0x4001090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
	public bool t_songname;

	[Token(Token = "0x4001091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6F")]
	public bool t_author;

	[Token(Token = "0x4001092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool t_maxscore;

	[Token(Token = "0x4001093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	public bool t_lastmaxscore;

	[Token(Token = "0x4001094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
	public bool t_lastoldscore;

	[Token(Token = "0x4001095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TextMeshPro tmpr2;

	[Token(Token = "0x4001096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TextMeshPro tmpr3;

	[Token(Token = "0x4001097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool t_impossibru;

	[Token(Token = "0x4001098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	public bool t_plays;

	[Token(Token = "0x4001099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
	public bool t_plays_succ;

	[Token(Token = "0x400109A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8B")]
	public bool t_plays_fail;

	[Token(Token = "0x400109B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public bool t_maxboost;

	[Token(Token = "0x400109C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
	public bool t_lastboost;

	[Token(Token = "0x400109D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8E")]
	public bool t_difficulty;

	[Token(Token = "0x400109E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8F")]
	public bool t_weightinkg;

	[Token(Token = "0x400109F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool t_weight;

	[Token(Token = "0x40010A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	public bool t_height;

	[Token(Token = "0x40010A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
	public bool t_target;

	[Token(Token = "0x40010A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x93")]
	public bool t_notes;

	[Token(Token = "0x40010A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public bool t_notes_net_left;

	[Token(Token = "0x40010A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
	public bool t_notes_net_right;

	[Token(Token = "0x40010A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x96")]
	public bool t_lastnotes;

	[Token(Token = "0x40010A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x97")]
	public bool t_lastsucces_failed;

	[Token(Token = "0x40010A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool name_player1;

	[Token(Token = "0x40010A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	public bool name_player2;

	[Token(Token = "0x40010A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
	public bool name_player3;

	[Token(Token = "0x40010AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9B")]
	public bool name_player4;

	[Token(Token = "0x40010AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public bool name_player5;

	[Token(Token = "0x40010AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
	public bool selected_player_name;

	[Token(Token = "0x40010AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9E")]
	public bool selected_player_rank;

	[Token(Token = "0x40010AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9F")]
	public bool selected_player_rank2;

	[Token(Token = "0x40010AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool t_team_name;

	[Token(Token = "0x40010B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	public bool t_team_pin;

	[Token(Token = "0x40010B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
	public bool t_kcalonly;

	[Token(Token = "0x40010B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA3")]
	public bool t_multak_players_count;

	[Token(Token = "0x40010B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public bool t_coloryellow;

	[Token(Token = "0x40010B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
	public bool t_colorblue;

	[Token(Token = "0x40010B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA6")]
	public bool s_speed;

	[Token(Token = "0x40010B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Color[] diff;

	[Token(Token = "0x40010B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int zalhit;

	[Token(Token = "0x40010B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private int zalhit2;

	[Token(Token = "0x40010B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int zalhit3;

	[Token(Token = "0x40010BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private string zalstr;

	[Token(Token = "0x40010BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float alhit;

	[Token(Token = "0x40010BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float zalfloat;

	[Token(Token = "0x40010BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public bool use_blik;

	[Token(Token = "0x40010BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	public bool use_zvyraznovac;

	[Token(Token = "0x40010BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Color zalcolor;

	[Token(Token = "0x40010C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private Color zalcolor2;

	[Token(Token = "0x40010C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private bool blik;

	[Token(Token = "0x40010C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float timer;

	[Token(Token = "0x40010C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private float zalsize;

	[Token(Token = "0x40010C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool bcisset;

	[Token(Token = "0x40010C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private float timerms;

	[Token(Token = "0x40010C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private double zaldouble;

	[Token(Token = "0x40010C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private int zobraz;

	[Token(Token = "0x40010C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private bool zalbool;

	[Token(Token = "0x40010C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x115")]
	private bool zalbool2;

	[Token(Token = "0x40010CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private float date_check;

	[Token(Token = "0x40010CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private bool isset;

	[Token(Token = "0x40010CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11D")]
	public bool visible_reaction;

	[Token(Token = "0x40010CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11E")]
	public bool visible_on_lastplay;

	[Token(Token = "0x40010CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11F")]
	public bool invisible_on_lastplay;

	[Token(Token = "0x40010CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private bool visiblestate;

	[Token(Token = "0x40010D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public Color c10;

	[Token(Token = "0x40010D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public Color c25;

	[Token(Token = "0x40010D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public Color c50;

	[Token(Token = "0x40010D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public Color c75;

	[Token(Token = "0x40010D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	public Color c100;

	[Token(Token = "0x40010D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	public Color c110;

	[Token(Token = "0x40010D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private string sc10;

	[Token(Token = "0x40010D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private string sc25;

	[Token(Token = "0x40010D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private string sc50;

	[Token(Token = "0x40010D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private string sc75;

	[Token(Token = "0x40010DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private string sc100;

	[Token(Token = "0x40010DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private string sc110;

	[Token(Token = "0x40010DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private bool setallkcal;

	[Token(Token = "0x40010DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	private int blikstav;

	[Token(Token = "0x40010DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private int interval;

	[Token(Token = "0x40010DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	private int interval2;

	[Token(Token = "0x40010E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private int zalj;

	[Token(Token = "0x40010E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	private int zaldetails;

	[Token(Token = "0x40010E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public Color32 h100;

	[Token(Token = "0x40010E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	public Color32 h50;

	[Token(Token = "0x40010E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public Color32 h20;

	[Token(Token = "0x40010E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	public Color32 h10;

	[Token(Token = "0x40010E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public Color32 h1;

	[Token(Token = "0x40010E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	private bool play100;

	[Token(Token = "0x40010E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E5")]
	private bool play50;

	[Token(Token = "0x40010E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E6")]
	private bool play20;

	[Token(Token = "0x40010EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private short[] nt;

	[Token(Token = "0x40010EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private int zalcalcounter;

	[Token(Token = "0x40010EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
	private bool zmenacal;

	[Token(Token = "0x40010ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private float concert_pauza;

	[Token(Token = "0x40010EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	public Color32 colordontplay;

	[Token(Token = "0x40010EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public Color32 colorfailed;

	[Token(Token = "0x40010F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
	public Color32 colorsucces;

	[Token(Token = "0x40010F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private float colortimer;

	[Token(Token = "0x40010F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
	private Color32 changecolor;

	[Token(Token = "0x40010F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private Color32 zalchangecolor;

	[Token(Token = "0x40010F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	private int zalchangelanguage;

	[Token(Token = "0x6000949")]
	[Address(RVA = "0x9FB8C4", Offset = "0x9FB8C4", VA = "0x9FB8C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0x9FBA60", Offset = "0x9FBA60", VA = "0x9FBA60")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0x9FBAF4", Offset = "0x9FBAF4", VA = "0x9FBAF4")]
	private void Start()
	{
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0x9FBD0C", Offset = "0x9FBD0C", VA = "0x9FBD0C")]
	private void Update()
	{
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0x9FBCF4", Offset = "0x9FBCF4", VA = "0x9FBCF4")]
	public static bool Get32Bool(int value, byte index)
	{
		return default(bool);
	}

	[Token(Token = "0x600094E")]
	[Address(RVA = "0xA03194", Offset = "0xA03194", VA = "0xA03194")]
	public static int Set32Bool(int value, bool b, byte index)
	{
		return default(int);
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0xA031B4", Offset = "0xA031B4", VA = "0xA031B4")]
	public static int Clear(int Value, byte index)
	{
		return default(int);
	}

	[Token(Token = "0x6000950")]
	[Address(RVA = "0xA03054", Offset = "0xA03054", VA = "0xA03054")]
	public short[] ConvertInt32ToInt16(int intValue)
	{
		return null;
	}

	[Token(Token = "0x6000951")]
	[Address(RVA = "0xA030B0", Offset = "0xA030B0", VA = "0xA030B0")]
	private string FormatTime(int time)
	{
		return null;
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0xA031C8", Offset = "0xA031C8", VA = "0xA031C8")]
	public Texty()
	{
	}
}
[Token(Token = "0x2000104")]
public class ThemeScript : MonoBehaviour
{
	[Token(Token = "0x40010F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool is_camera;

	[Token(Token = "0x40010F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int theme_num;

	[Token(Token = "0x40010F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VolumetricFog vf;

	[Token(Token = "0x40010F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject podstavec;

	[Token(Token = "0x40010F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject podstavec2;

	[Token(Token = "0x40010FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject bubliny;

	[Token(Token = "0x40010FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int zaltheme;

	[Token(Token = "0x40010FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool zalspawn360;

	[Token(Token = "0x40010FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	private bool zalspawndisco;

	[Token(Token = "0x6000953")]
	[Address(RVA = "0xA03268", Offset = "0xA03268", VA = "0xA03268")]
	private void Update()
	{
	}

	[Token(Token = "0x6000954")]
	[Address(RVA = "0xA03494", Offset = "0xA03494", VA = "0xA03494")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000955")]
	[Address(RVA = "0xA035D0", Offset = "0xA035D0", VA = "0xA035D0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000956")]
	[Address(RVA = "0xA03700", Offset = "0xA03700", VA = "0xA03700")]
	public ThemeScript()
	{
	}
}
[Token(Token = "0x2000105")]
public class TurretScript : MonoBehaviour
{
	[Token(Token = "0x40010FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer zablesk;

	[Token(Token = "0x40010FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Light light_zablesk;

	[Token(Token = "0x4001100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform campos;

	[Token(Token = "0x4001101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Explosions Strela;

	[Token(Token = "0x4001102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform Gun_position;

	[Token(Token = "0x4001103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool prefire;

	[Token(Token = "0x4001104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int count;

	[Token(Token = "0x4001105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float speed;

	[Token(Token = "0x4001106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float pause_timer;

	[Token(Token = "0x4001107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform ciel;

	[Token(Token = "0x4001108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 zablesk_rot;

	[Token(Token = "0x4001109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float zablesk_timer;

	[Token(Token = "0x6000957")]
	[Address(RVA = "0xA03710", Offset = "0xA03710", VA = "0xA03710")]
	public void TurretFire(int _count, float _speed)
	{
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0xA03724", Offset = "0xA03724", VA = "0xA03724")]
	private void Start()
	{
	}

	[Token(Token = "0x6000959")]
	[Address(RVA = "0xA03768", Offset = "0xA03768", VA = "0xA03768")]
	private void Update()
	{
	}

	[Token(Token = "0x600095A")]
	[Address(RVA = "0xA0391C", Offset = "0xA0391C", VA = "0xA0391C")]
	public TurretScript()
	{
	}
}
[Token(Token = "0x2000106")]
public class UIColor_Settings : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20003D6")]
	public class SetCol
	{
		[Token(Token = "0x40025E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x40025E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color32 col_okna;

		[Token(Token = "0x40025E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Color32 col_podklad;

		[Token(Token = "0x40025E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color32 col_songbuttons;

		[Token(Token = "0x40025E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color32 col_podklad_spodne_buttony;

		[Token(Token = "0x40025E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color32 col_podklad_vyskakovacie_okna;

		[Token(Token = "0x40025E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color32 col_podklad_position;

		[Token(Token = "0x40025E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color32 col_ramiky;

		[Token(Token = "0x40025E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float transparency;

		[Token(Token = "0x40025E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float bri;

		[Token(Token = "0x6001A0F")]
		[Address(RVA = "0xA068A4", Offset = "0xA068A4", VA = "0xA068A4")]
		public SetCol()
		{
		}
	}

	[Token(Token = "0x400110A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SetCol col_default;

	[Token(Token = "0x400110B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SetCol[] col_themes;

	[Token(Token = "0x400110C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SpriteRenderer[] okna_vnutro;

	[Token(Token = "0x400110D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SpriteRenderer[] podklad;

	[Token(Token = "0x400110E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SpriteRenderer[] song_buttony;

	[Token(Token = "0x400110F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SpriteRenderer[] podklad_spodne_buttony;

	[Token(Token = "0x4001110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SpriteRenderer[] vyskakovacie_okna;

	[Token(Token = "0x4001111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public CirclebarScript[] kruhy;

	[Token(Token = "0x4001112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public SpriteRenderer[] kruhy2;

	[Token(Token = "0x4001113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public SpriteRenderer position;

	[Token(Token = "0x4001114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public SpriteRenderer[] ramiky;

	[Token(Token = "0x4001115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Material[] pretransparent;

	[Token(Token = "0x4001116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int ui_songcolor_change;

	[Token(Token = "0x4001117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int ui_wincolor_change;

	[Token(Token = "0x4001118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int ui_podkladcolor_change;

	[Token(Token = "0x4001119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int ui_podklad_spodnebuttony;

	[Token(Token = "0x400111A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int ui_podklad_vyskakovacieokna;

	[Token(Token = "0x400111B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static int ui_position;

	[Token(Token = "0x400111C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static int ui_ramiky;

	[Token(Token = "0x400111D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static Color global_wincolor;

	[Token(Token = "0x400111E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static Color global_podkladcolor;

	[Token(Token = "0x400111F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public static Color global_songcolor;

	[Token(Token = "0x4001120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public static Color global_podkladspodnebuttony;

	[Token(Token = "0x4001121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public static Color global_podkladvyskakovacie;

	[Token(Token = "0x4001122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public static Color global_position;

	[Token(Token = "0x4001123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public static Color global_ramiky;

	[Token(Token = "0x4001124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Color svetlejsia_kruhy;

	[Token(Token = "0x4001125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int _ui_songcolor_change;

	[Token(Token = "0x4001126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int _ui_wincolor_change;

	[Token(Token = "0x4001127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int _ui_podkladcolor_change;

	[Token(Token = "0x4001128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int _ui_podklad_spodnebuttony;

	[Token(Token = "0x4001129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int _ui_podklad_vyskakovacieokna;

	[Token(Token = "0x400112A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private int _ui_position;

	[Token(Token = "0x400112B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int _ui_ramiky;

	[Token(Token = "0x400112C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public static int object_type;

	[Token(Token = "0x400112D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static int uicolors_settings;

	[Token(Token = "0x400112E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private int zaluicolors_settings;

	[Token(Token = "0x400112F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public static float transparency_default;

	[Token(Token = "0x4001130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static float transparency;

	[Token(Token = "0x4001131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public static float bri_default;

	[Token(Token = "0x4001132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static float bri;

	[Token(Token = "0x4001133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float zaltransparency;

	[Token(Token = "0x4001134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float zalbri;

	[Token(Token = "0x4001135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int zalactive_theme;

	[Token(Token = "0x4001136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public static bool sejvni_colors;

	[Token(Token = "0x4001137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
	public static bool loadni_colors;

	[Token(Token = "0x4001138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static Color pre_position;

	[Token(Token = "0x4001139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public TextMeshPro tmpr;

	[Token(Token = "0x400113A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool zalspawn360;

	[Token(Token = "0x400113B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	private bool zalspawn_disco;

	[Token(Token = "0x600095B")]
	[Address(RVA = "0xA047AC", Offset = "0xA047AC", VA = "0xA047AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600095C")]
	[Address(RVA = "0xA04834", Offset = "0xA04834", VA = "0xA04834")]
	private void Start()
	{
	}

	[Token(Token = "0x600095D")]
	[Address(RVA = "0xA049B8", Offset = "0xA049B8", VA = "0xA049B8")]
	public void Load_Colors()
	{
	}

	[Token(Token = "0x600095E")]
	[Address(RVA = "0xA04D54", Offset = "0xA04D54", VA = "0xA04D54")]
	public void ColorGO(string savename, Color defaultcol)
	{
	}

	[Token(Token = "0x600095F")]
	[Address(RVA = "0xA04BC0", Offset = "0xA04BC0", VA = "0xA04BC0")]
	public static Color ColorLoad(string savename, Color defaultcol)
	{
		return default(Color);
	}

	[Token(Token = "0x6000960")]
	[Address(RVA = "0xA04D9C", Offset = "0xA04D9C", VA = "0xA04D9C")]
	public void Save_Colors()
	{
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0xA04F40", Offset = "0xA04F40", VA = "0xA04F40")]
	private void SetDefaultColors()
	{
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0xA054BC", Offset = "0xA054BC", VA = "0xA054BC")]
	private void SetThemeColors(int theme)
	{
	}

	[Token(Token = "0x6000963")]
	[Address(RVA = "0xA05BB4", Offset = "0xA05BB4", VA = "0xA05BB4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000964")]
	[Address(RVA = "0xA067A8", Offset = "0xA067A8", VA = "0xA067A8")]
	public UIColor_Settings()
	{
	}
}
[Token(Token = "0x2000107")]
public class Vietor : MonoBehaviour
{
	[Token(Token = "0x400113C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 zalscale;

	[Token(Token = "0x400113D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float ps;

	[Token(Token = "0x400113E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 zalrot;

	[Token(Token = "0x400113F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool ship;

	[Token(Token = "0x6000966")]
	[Address(RVA = "0xB71310", Offset = "0xB71310", VA = "0xB71310")]
	private void Start()
	{
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0xB7136C", Offset = "0xB7136C", VA = "0xB7136C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0xB714C4", Offset = "0xB714C4", VA = "0xB714C4")]
	public Vietor()
	{
	}
}
[Token(Token = "0x2000108")]
public class Volumes : MonoBehaviour
{
	[Token(Token = "0x4001140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ConcertEffectsScript concert;

	[Token(Token = "0x4001141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioMixer masterMixer;

	[Token(Token = "0x4001142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string parameterMaster;

	[Token(Token = "0x4001143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string parameterMusic;

	[Token(Token = "0x4001144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string parameterSFX;

	[Token(Token = "0x4001145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string parameterVoices;

	[Token(Token = "0x4001146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float _master;

	[Token(Token = "0x4001147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float _music;

	[Token(Token = "0x4001148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float _sfx;

	[Token(Token = "0x4001149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static float _voices;

	[Token(Token = "0x400114A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float zal_master;

	[Token(Token = "0x400114B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float zal_music;

	[Token(Token = "0x400114C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float zal_sfx;

	[Token(Token = "0x400114D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float zal_voices;

	[Token(Token = "0x400114E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float timer;

	[Token(Token = "0x400114F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool play;

	[Token(Token = "0x4001150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static bool _sfx_voices_change;

	[Token(Token = "0x6000969")]
	[Address(RVA = "0xB714CC", Offset = "0xB714CC", VA = "0xB714CC")]
	private void Start()
	{
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0xB71608", Offset = "0xB71608", VA = "0xB71608")]
	private void Update()
	{
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0xB719E0", Offset = "0xB719E0", VA = "0xB719E0")]
	public Volumes()
	{
	}
}
[Token(Token = "0x2000109")]
public class VRUItem1 : MonoBehaviour
{
	[Token(Token = "0x4001151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SongList sl;

	[Token(Token = "0x4001152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LobbyPanel loby;

	[Token(Token = "0x4001153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject mover;

	[Token(Token = "0x4001154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool rimgUsed;

	[Token(Token = "0x4001155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Renderer rimg;

	[Token(Token = "0x4001156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool rimgUsed2;

	[Token(Token = "0x4001157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Renderer img2;

	[Token(Token = "0x4001158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color rimgColor;

	[Token(Token = "0x4001159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color rimgOriginal;

	[Token(Token = "0x400115A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool txtUsed;

	[Token(Token = "0x400115B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TextMeshPro txt;

	[Token(Token = "0x400115C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Color txtColor;

	[Token(Token = "0x400115D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool txtUsed2;

	[Token(Token = "0x400115E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public TextMeshPro txt2;

	[Token(Token = "0x400115F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Color txtColor2;

	[Token(Token = "0x4001160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool txtUsed34;

	[Token(Token = "0x4001161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public TextMeshPro txt3;

	[Token(Token = "0x4001162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public TextMeshPro txt4;

	[Token(Token = "0x4001163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Color txtOriginal;

	[Token(Token = "0x4001164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Color txtOriginal2;

	[Token(Token = "0x4001165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private bool isover;

	[Token(Token = "0x4001166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
	private bool overisset;

	[Token(Token = "0x4001167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEA")]
	public bool butt_pismeno;

	[Token(Token = "0x4001168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public string letter_Big;

	[Token(Token = "0x4001169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public string letter_Low;

	[Token(Token = "0x400116A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public TextMeshPro _letter;

	[Token(Token = "0x400116B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public bool butt_shift;

	[Token(Token = "0x400116C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
	public bool butt_space;

	[Token(Token = "0x400116D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10A")]
	public bool butt_enter;

	[Token(Token = "0x400116E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10B")]
	public bool butt_backspace;

	[Token(Token = "0x400116F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public bool butt_changename;

	[Token(Token = "0x4001170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10D")]
	public bool butt_changeyellow;

	[Token(Token = "0x4001171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10E")]
	public bool butt_changeblue;

	[Token(Token = "0x4001172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10F")]
	public bool butt_teamchangename;

	[Token(Token = "0x4001173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public bool butt_teamchangepin;

	[Token(Token = "0x4001174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x111")]
	public bool butt_ready1;

	[Token(Token = "0x4001175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x112")]
	public bool butt_ready2;

	[Token(Token = "0x4001176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x113")]
	public bool buttons_join;

	[Token(Token = "0x4001177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public bool butt_joinorcreategame;

	[Token(Token = "0x4001178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x115")]
	public bool butt_createfree;

	[Token(Token = "0x4001179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x116")]
	public bool butt_startmultiplayergame;

	[Token(Token = "0x400117A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x117")]
	public bool butt_start_multak;

	[Token(Token = "0x400117B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public bool butt_start_championship;

	[Token(Token = "0x400117C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x119")]
	public bool butt_playinteam;

	[Token(Token = "0x400117D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11A")]
	public bool butt_playinrandom;

	[Token(Token = "0x400117E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11B")]
	public bool butt_back_from_diff_multak;

	[Token(Token = "0x400117F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public bool butt_kick;

	[Token(Token = "0x4001180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11D")]
	public bool butt_resume_client;

	[Token(Token = "0x4001181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11E")]
	public bool butt_leave_client;

	[Token(Token = "0x4001182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11F")]
	public bool butt_resumeloby_client;

	[Token(Token = "0x4001183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public bool butt_leaveloby_client;

	[Token(Token = "0x4001184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x121")]
	public bool butt_play_m;

	[Token(Token = "0x4001185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x122")]
	public bool butt_play;

	[Token(Token = "0x4001186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x123")]
	public bool butt_start;

	[Token(Token = "0x4001187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public bool butt_start_mode1;

	[Token(Token = "0x4001188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x125")]
	public bool butt_start_mode2;

	[Token(Token = "0x4001189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x126")]
	public bool butt_goto_theme;

	[Token(Token = "0x400118A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x127")]
	public bool butt_backfrom_theme;

	[Token(Token = "0x400118B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public bool butt_theme0;

	[Token(Token = "0x400118C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x129")]
	public bool butt_theme1;

	[Token(Token = "0x400118D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12A")]
	public bool butt_theme2;

	[Token(Token = "0x400118E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12B")]
	public bool butt_theme3;

	[Token(Token = "0x400118F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public bool butt_theme4;

	[Token(Token = "0x4001190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12D")]
	public bool butt_theme5;

	[Token(Token = "0x4001191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12E")]
	public bool butt_theme6;

	[Token(Token = "0x4001192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12F")]
	public bool butt_theme7;

	[Token(Token = "0x4001193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public bool butt_resume;

	[Token(Token = "0x4001194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x131")]
	public bool butt_resumemenu;

	[Token(Token = "0x4001195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x132")]
	public bool butt_quit;

	[Token(Token = "0x4001196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x133")]
	public bool butt_quit_game;

	[Token(Token = "0x4001197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public bool butt_list_up;

	[Token(Token = "0x4001198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x135")]
	public bool butt_list_down;

	[Token(Token = "0x4001199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x136")]
	public bool butt_listfriends_up;

	[Token(Token = "0x400119A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x137")]
	public bool butt_listfriends_down;

	[Token(Token = "0x400119B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public bool butt_download_up;

	[Token(Token = "0x400119C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x139")]
	public bool butt_download_down;

	[Token(Token = "0x400119D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13A")]
	public bool butt_back_from_diff;

	[Token(Token = "0x400119E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13B")]
	public bool butt_back_from_diff_champ;

	[Token(Token = "0x400119F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	public bool butt_back_from_achiev;

	[Token(Token = "0x40011A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13D")]
	public bool butt_back_from_credits;

	[Token(Token = "0x40011A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13E")]
	public bool butt_back_from_keyboard;

	[Token(Token = "0x40011A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13F")]
	public bool butt_back_from_profilemanager;

	[Token(Token = "0x40011A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public bool butt_back_from_multak;

	[Token(Token = "0x40011A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x141")]
	public bool butt_goto_profilemanager;

	[Token(Token = "0x40011A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x142")]
	public bool butt_goto_achievements;

	[Token(Token = "0x40011A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x143")]
	public bool butt_goto_credits;

	[Token(Token = "0x40011A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public bool butt_goto_quitgame;

	[Token(Token = "0x40011A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x145")]
	public bool butt_diff1_m;

	[Token(Token = "0x40011A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x146")]
	public bool butt_diff2_m;

	[Token(Token = "0x40011AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x147")]
	public bool butt_diff3_m;

	[Token(Token = "0x40011AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public bool butt_diff4_m;

	[Token(Token = "0x40011AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x149")]
	public bool butt_diff5_m;

	[Token(Token = "0x40011AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14A")]
	public bool butt_diff1_champ;

	[Token(Token = "0x40011AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14B")]
	public bool butt_diff2_champ;

	[Token(Token = "0x40011AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public bool butt_diff3_champ;

	[Token(Token = "0x40011B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14D")]
	public bool butt_diff4_champ;

	[Token(Token = "0x40011B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14E")]
	public bool butt_diff5_champ;

	[Token(Token = "0x40011B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14F")]
	public bool butt_quit_pause_champ;

	[Token(Token = "0x40011B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public bool butt_resume_pause_champ;

	[Token(Token = "0x40011B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x151")]
	public bool butt_diff1;

	[Token(Token = "0x40011B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x152")]
	public bool butt_diff2;

	[Token(Token = "0x40011B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x153")]
	public bool butt_diff3;

	[Token(Token = "0x40011B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public bool butt_diff4;

	[Token(Token = "0x40011B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x155")]
	public bool butt_diff5;

	[Token(Token = "0x40011B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x156")]
	public bool slid_transparency;

	[Token(Token = "0x40011BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x157")]
	public bool slid_bri;

	[Token(Token = "0x40011BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public bool slid_master;

	[Token(Token = "0x40011BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x159")]
	public bool slid_music;

	[Token(Token = "0x40011BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15A")]
	public bool slid_sfx;

	[Token(Token = "0x40011BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15B")]
	public bool slid_voices;

	[Token(Token = "0x40011BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	public bool slid_amplitude;

	[Token(Token = "0x40011C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15D")]
	public bool slid_duration;

	[Token(Token = "0x40011C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15E")]
	public bool slid_mic;

	[Token(Token = "0x40011C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15F")]
	public bool add_profile;

	[Token(Token = "0x40011C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public bool remove_profile;

	[Token(Token = "0x40011C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x161")]
	public bool change_profile;

	[Token(Token = "0x40011C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x162")]
	public bool clear_saves;

	[Token(Token = "0x40011C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x163")]
	public bool load_from_steam;

	[Token(Token = "0x40011C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	public bool add_steam_friend;

	[Token(Token = "0x40011C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x165")]
	public bool add_download;

	[Token(Token = "0x40011C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x166")]
	public bool butt_achiev;

	[Token(Token = "0x40011CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x167")]
	public bool butt_weight_plus;

	[Token(Token = "0x40011CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public bool butt_weight_minus;

	[Token(Token = "0x40011CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x169")]
	public bool butt_height_plus;

	[Token(Token = "0x40011CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16A")]
	public bool butt_height_minus;

	[Token(Token = "0x40011CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16B")]
	public bool butt_download;

	[Token(Token = "0x40011CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	public bool butt_back_from_download;

	[Token(Token = "0x40011D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16D")]
	public bool butt_favorites;

	[Token(Token = "0x40011D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16E")]
	public bool butt_test;

	[Token(Token = "0x40011D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16F")]
	public bool switch_kg_lbs;

	[Token(Token = "0x40011D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public bool switch_kcal_kj;

	[Token(Token = "0x40011D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x171")]
	public bool switch_shots;

	[Token(Token = "0x40011D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x172")]
	public bool switch_tonfa;

	[Token(Token = "0x40011D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x173")]
	public bool switch_beatscore;

	[Token(Token = "0x40011D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	public bool switch_avatarname;

	[Token(Token = "0x40011D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x175")]
	public bool switch_debris;

	[Token(Token = "0x40011D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x176")]
	public bool switch_obstacles;

	[Token(Token = "0x40011DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x177")]
	public bool switch_percnum;

	[Token(Token = "0x40011DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public bool switch_modingaudio;

	[Token(Token = "0x40011DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x179")]
	public bool switch_autoshoot;

	[Token(Token = "0x40011DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17A")]
	public bool switch_nofail;

	[Token(Token = "0x40011DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17B")]
	public bool switch_speed;

	[Token(Token = "0x40011DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	public bool switch_reflex;

	[Token(Token = "0x40011E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17D")]
	public bool switch_effectson;

	[Token(Token = "0x40011E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17E")]
	public bool switch_colors;

	[Token(Token = "0x40011E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17F")]
	public bool switch_mode;

	[Token(Token = "0x40011E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public bool switch_360;

	[Token(Token = "0x40011E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x181")]
	public bool switch_channel;

	[Token(Token = "0x40011E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x182")]
	public bool otacatko;

	[Token(Token = "0x40011E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x183")]
	public bool rozsvecovatko;

	[Token(Token = "0x40011E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public OtacatkoScript ot1;

	[Token(Token = "0x40011E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public OtacatkoScript ot2;

	[Token(Token = "0x40011E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public Renderer otren;

	[Token(Token = "0x40011EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public Material otmat1;

	[Token(Token = "0x40011EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Material otmat2;

	[Token(Token = "0x40011EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private Renderer rt;

	[Token(Token = "0x40011ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private Vector3 zalpos;

	[Token(Token = "0x40011EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	private Vector3 pos;

	[Token(Token = "0x40011EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public bool use_help;

	[Token(Token = "0x40011F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	public int helpnum;

	[Token(Token = "0x40011F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public Renderer rawhelp;

	[Token(Token = "0x40011F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public TextMeshPro texthelp;

	[Token(Token = "0x40011F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public string help_text;

	[Token(Token = "0x40011F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private float helptimer;

	[Token(Token = "0x40011F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
	public Color rawcolor;

	[Token(Token = "0x40011F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
	public Color textcolor;

	[Token(Token = "0x40011F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	private Color outcolor;

	[Token(Token = "0x40011F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	private bool helpisset;

	[Token(Token = "0x40011F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private float rtimer;

	[Token(Token = "0x40011FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
	private bool risset;

	[Token(Token = "0x40011FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22D")]
	public bool change_self;

	[Token(Token = "0x40011FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public Color SelfColor;

	[Token(Token = "0x40011FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public Color SelfColor_Selected;

	[Token(Token = "0x40011FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public Color SelfColor_Achiev;

	[Token(Token = "0x40011FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public Vector3 posun;

	[Token(Token = "0x4001200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
	private Vector3 posun_original;

	[Token(Token = "0x4001201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public bool IsSelectable;

	[Token(Token = "0x4001202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
	public int SelectGroup;

	[Token(Token = "0x4001203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public int Num_In_SelectGroup;

	[Token(Token = "0x4001204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
	private bool opakovanie;

	[Token(Token = "0x4001205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	private float otimer;

	[Token(Token = "0x4001206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
	private int need_setting;

	[Token(Token = "0x4001207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	private bool need_setting2;

	[Token(Token = "0x4001208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
	private int other_over;

	[Token(Token = "0x4001209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	public bool Slider;

	[Token(Token = "0x400120A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x299")]
	public bool Slider_linear;

	[Token(Token = "0x400120B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29A")]
	public bool Switch;

	[Token(Token = "0x400120C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
	private float amplitude_max;

	[Token(Token = "0x400120D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	private float duration_max;

	[Token(Token = "0x400120E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
	private float mic_max;

	[Token(Token = "0x400120F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	public bool stav;

	[Token(Token = "0x4001210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A9")]
	public bool zalstav;

	[Token(Token = "0x4001211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
	private float xxpos;

	[Token(Token = "0x4001212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	private float zalxxpos;

	[Token(Token = "0x4001213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B4")]
	public bool select_transform;

	[Token(Token = "0x4001214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	public RectTransform rect;

	[Token(Token = "0x4001215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	private Vector2 open_width;

	[Token(Token = "0x4001216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	private Vector2 close_width;

	[Token(Token = "0x4001217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	private Vector2 open_pos;

	[Token(Token = "0x4001218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	private Vector2 close_pos;

	[Token(Token = "0x4001219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	private int settrans;

	[Token(Token = "0x400121A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
	private float transtimer;

	[Token(Token = "0x400121B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	public bool blik;

	[Token(Token = "0x400121C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E9")]
	public bool blikself;

	[Token(Token = "0x400121D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
	private float bliktimer;

	[Token(Token = "0x400121E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	private Color zaltxtcol;

	[Token(Token = "0x400121F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	private bool blikstav;

	[Token(Token = "0x4001220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x301")]
	private bool zalshift_state;

	[Token(Token = "0x4001221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x304")]
	private int playersetting1;

	[Token(Token = "0x600096D")]
	[Address(RVA = "0xAB4FF8", Offset = "0xAB4FF8", VA = "0xAB4FF8")]
	public void Awake()
	{
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0xAB50CC", Offset = "0xAB50CC", VA = "0xAB50CC")]
	public void Start()
	{
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0xAB6EC4", Offset = "0xAB6EC4", VA = "0xAB6EC4")]
	public void Over(float xpos)
	{
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0xAB6ED4", Offset = "0xAB6ED4", VA = "0xAB6ED4")]
	public void Update()
	{
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0xABC5A4", Offset = "0xABC5A4", VA = "0xABC5A4")]
	private float LinearToMax(float linear, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0xAB6EBC", Offset = "0xAB6EBC", VA = "0xAB6EBC")]
	private float MaxToLinear(float dB, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0xABC5B8", Offset = "0xABC5B8", VA = "0xABC5B8")]
	private float LinearToDecibel(float linear)
	{
		return default(float);
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0xAB6E4C", Offset = "0xAB6E4C", VA = "0xAB6E4C")]
	private float DecibelToLinear(float dB)
	{
		return default(float);
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0xAB6E34", Offset = "0xAB6E34", VA = "0xAB6E34")]
	public static bool Get32Bool(int value, byte index)
	{
		return default(bool);
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0xABC648", Offset = "0xABC648", VA = "0xABC648")]
	public static int Set32Bool(int value, bool b, byte index)
	{
		return default(int);
	}

	[Token(Token = "0x6000977")]
	[Address(RVA = "0xABC668", Offset = "0xABC668", VA = "0xABC668")]
	public static int Clear(int Value, byte index)
	{
		return default(int);
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0xABC67C", Offset = "0xABC67C", VA = "0xABC67C")]
	public VRUItem1()
	{
	}
}
[Token(Token = "0x200010A")]
public class WinAnimator : MonoBehaviour
{
	[Token(Token = "0x20003D7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9B48", Offset = "0x7F9B48")]
	private sealed class <HandleIt>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40025EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40025EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float extime;

		[Token(Token = "0x40025ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public WinAnimator <>4__this;

		[Token(Token = "0x17000359")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A13")]
			[Address(RVA = "0x1287844", Offset = "0x1287844", VA = "0x1287844", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A15")]
			[Address(RVA = "0x12878B0", Offset = "0x12878B0", VA = "0x12878B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A10")]
		[Address(RVA = "0x12876A0", Offset = "0x12876A0", VA = "0x12876A0")]
		[DebuggerHidden]
		public <HandleIt>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6001A11")]
		[Address(RVA = "0x128774C", Offset = "0x128774C", VA = "0x128774C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A12")]
		[Address(RVA = "0x1287750", Offset = "0x1287750", VA = "0x1287750", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A14")]
		[Address(RVA = "0x128784C", Offset = "0x128784C", VA = "0x128784C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator _animator;

	[Token(Token = "0x4001223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject platno;

	[Token(Token = "0x4001224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool off_leaderboard_buttons;

	[Token(Token = "0x4001225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject leaderboard_buttony;

	[Token(Token = "0x4001226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool camera_switcher;

	[Token(Token = "0x4001227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Camera cam;

	[Token(Token = "0x6000979")]
	[Address(RVA = "0x1287528", Offset = "0x1287528", VA = "0x1287528")]
	public void MyEnable()
	{
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0x128761C", Offset = "0x128761C", VA = "0x128761C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8045B4", Offset = "0x8045B4")]
	private IEnumerator HandleIt(float extime)
	{
		return null;
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0x12876CC", Offset = "0x12876CC", VA = "0x12876CC")]
	public void MyDisable()
	{
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0x1287744", Offset = "0x1287744", VA = "0x1287744")]
	public WinAnimator()
	{
	}
}
[Token(Token = "0x200010B")]
public class Winmove : MonoBehaviour
{
	[Token(Token = "0x4001228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] okna;

	[Token(Token = "0x4001229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float height;

	[Token(Token = "0x600097D")]
	[Address(RVA = "0x12878B8", Offset = "0x12878B8", VA = "0x12878B8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0x12879F8", Offset = "0x12879F8", VA = "0x12879F8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0x1287BB0", Offset = "0x1287BB0", VA = "0x1287BB0")]
	public Winmove()
	{
	}
}
[Token(Token = "0x200010C")]
public class ZoomImage : MonoBehaviour
{
	[Token(Token = "0x400122A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float time;

	[Token(Token = "0x400122B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer ren;

	[Token(Token = "0x400122C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float zoom_in;

	[Token(Token = "0x400122D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float zalzoom_in;

	[Token(Token = "0x400122E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool zoom;

	[Token(Token = "0x400122F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool moveright;

	[Token(Token = "0x4001230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool movedown;

	[Token(Token = "0x4001231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool zoom2;

	[Token(Token = "0x4001232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ZoomImage zi;

	[Token(Token = "0x4001233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool movemenu;

	[Token(Token = "0x4001234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool changemat;

	[Token(Token = "0x4001235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	public bool changemat2;

	[Token(Token = "0x4001236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material original;

	[Token(Token = "0x4001237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector2 size;

	[Token(Token = "0x4001238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector2 offset;

	[Token(Token = "0x4001239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float _offset;

	[Token(Token = "0x400123A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector2 offsetrandom;

	[Token(Token = "0x6000980")]
	[Address(RVA = "0x1295580", Offset = "0x1295580", VA = "0x1295580")]
	private void Start()
	{
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0x129567C", Offset = "0x129567C", VA = "0x129567C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0x1295924", Offset = "0x1295924", VA = "0x1295924")]
	public ZoomImage()
	{
	}
}
[Token(Token = "0x200010D")]
public class TestDiskUtils : MonoBehaviour
{
	[Token(Token = "0x20003D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9B58", Offset = "0x7F9B58")]
	private sealed class <Tests>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40025EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40025F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TestDiskUtils <>4__this;

		[Token(Token = "0x1700035B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A19")]
			[Address(RVA = "0x9FAC48", Offset = "0x9FAC48", VA = "0x9FAC48", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A1B")]
			[Address(RVA = "0x9FACB4", Offset = "0x9FACB4", VA = "0x9FACB4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A16")]
		[Address(RVA = "0x9FAA0C", Offset = "0x9FAA0C", VA = "0x9FAA0C")]
		[DebuggerHidden]
		public <Tests>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001A17")]
		[Address(RVA = "0x9FAA90", Offset = "0x9FAA90", VA = "0x9FAA90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A18")]
		[Address(RVA = "0x9FAA94", Offset = "0x9FAA94", VA = "0x9FAA94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A1A")]
		[Address(RVA = "0x9FAC50", Offset = "0x9FAC50", VA = "0x9FAC50", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400123B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMesh text;

	[Token(Token = "0x400123C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string obj;

	[Token(Token = "0x6000983")]
	[Address(RVA = "0x9FA684", Offset = "0x9FA684", VA = "0x9FA684")]
	private void PrintDebug(string str)
	{
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0x9FA768", Offset = "0x9FA768", VA = "0x9FA768")]
	private void PrintDebugLn(string str = "")
	{
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0x9FA7D4", Offset = "0x9FA7D4", VA = "0x9FA7D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0x9FA8C8", Offset = "0x9FA8C8", VA = "0x9FA8C8")]
	private void PrintStorageStats()
	{
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0x9FA854", Offset = "0x9FA854", VA = "0x9FA854")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x804618", Offset = "0x804618")]
	private IEnumerator Tests()
	{
		return null;
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0x9FAA38", Offset = "0x9FAA38", VA = "0x9FAA38")]
	public TestDiskUtils()
	{
	}
}
[Token(Token = "0x200010E")]
public class TextMover : MonoBehaviour
{
	[Token(Token = "0x400123D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float speed;

	[Token(Token = "0x6000989")]
	[Address(RVA = "0x9FACBC", Offset = "0x9FACBC", VA = "0x9FACBC")]
	private void Update()
	{
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0x9FAE18", Offset = "0x9FAE18", VA = "0x9FAE18")]
	private void GetMobile(out float h, out float v)
	{
	}

	[Token(Token = "0x600098B")]
	[Address(RVA = "0x9FAED4", Offset = "0x9FAED4", VA = "0x9FAED4")]
	private void GetDesktop(out float h, out float v)
	{
	}

	[Token(Token = "0x600098C")]
	[Address(RVA = "0x9FAF50", Offset = "0x9FAF50", VA = "0x9FAF50")]
	public TextMover()
	{
	}
}
[Token(Token = "0x200010F")]
internal class AnimateTiledTexture : MonoBehaviour
{
	[Token(Token = "0x400123E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int colCount;

	[Token(Token = "0x400123F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int rowCount;

	[Token(Token = "0x4001240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int rowNumber;

	[Token(Token = "0x4001241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int colNumber;

	[Token(Token = "0x4001242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int totalCells;

	[Token(Token = "0x4001243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int fps;

	[Token(Token = "0x4001244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float timexPrefix;

	[Token(Token = "0x4001245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Renderer ren;

	[Token(Token = "0x4001246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int zalindex;

	[Token(Token = "0x4001247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector2 offset;

	[Token(Token = "0x4001248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int index;

	[Token(Token = "0x600098D")]
	[Address(RVA = "0xA341FC", Offset = "0xA341FC", VA = "0xA341FC")]
	private void Start()
	{
	}

	[Token(Token = "0x600098E")]
	[Address(RVA = "0xA34260", Offset = "0xA34260", VA = "0xA34260")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600098F")]
	[Address(RVA = "0xA34288", Offset = "0xA34288", VA = "0xA34288")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000990")]
	[Address(RVA = "0xA342D8", Offset = "0xA342D8", VA = "0xA342D8")]
	private void SetSpriteAnimation(int colCount, int rowCount, int rowNumber, int colNumber, int totalCells)
	{
	}

	[Token(Token = "0x6000991")]
	[Address(RVA = "0xA34440", Offset = "0xA34440", VA = "0xA34440")]
	public AnimateTiledTexture()
	{
	}
}
[Token(Token = "0x2000110")]
public class DEMO_GUI : MonoBehaviour
{
	[Token(Token = "0x4001249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float contrast;

	[Token(Token = "0x400124A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float brightness;

	[Token(Token = "0x400124B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float edge_brightness;

	[Token(Token = "0x400124C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float contrast_old;

	[Token(Token = "0x400124D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float saturation;

	[Token(Token = "0x400124E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float saturation_old;

	[Token(Token = "0x400124F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float brightness_old;

	[Token(Token = "0x4001250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float edge_brightness_old;

	[Token(Token = "0x6000992")]
	[Address(RVA = "0xA8BFA4", Offset = "0xA8BFA4", VA = "0xA8BFA4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0xA8C0CC", Offset = "0xA8C0CC", VA = "0xA8C0CC")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000994")]
	[Address(RVA = "0xA8C360", Offset = "0xA8C360", VA = "0xA8C360")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000995")]
	[Address(RVA = "0xA8C4F0", Offset = "0xA8C4F0", VA = "0xA8C4F0")]
	public DEMO_GUI()
	{
	}
}
[Token(Token = "0x2000111")]
public class LookAtScript : MonoBehaviour
{
	[Token(Token = "0x6000996")]
	[Address(RVA = "0xA1C624", Offset = "0xA1C624", VA = "0xA1C624")]
	private void Start()
	{
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0xA1C628", Offset = "0xA1C628", VA = "0xA1C628")]
	private void Update()
	{
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0xA1C684", Offset = "0xA1C684", VA = "0xA1C684")]
	public LookAtScript()
	{
	}
}
[Token(Token = "0x2000112")]
public class Sun_Scale : MonoBehaviour
{
	[Token(Token = "0x4001251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 cur_scale;

	[Token(Token = "0x4001252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform glow;

	[Token(Token = "0x4001253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform flares;

	[Token(Token = "0x4001254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform flares_big;

	[Token(Token = "0x4001255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float saturation_old;

	[Token(Token = "0x4001256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float contrast_old;

	[Token(Token = "0x4001257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float brightness_old;

	[Token(Token = "0x4001258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float edge_brightness_old;

	[Token(Token = "0x4001259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float hue_old;

	[Token(Token = "0x6000999")]
	[Address(RVA = "0x9F963C", Offset = "0x9F963C", VA = "0x9F963C")]
	private void Start()
	{
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0x9F9850", Offset = "0x9F9850", VA = "0x9F9850")]
	public Sun_Scale()
	{
	}
}
[Token(Token = "0x2000113")]
public class FlyDeko : MonoBehaviour
{
	[Token(Token = "0x400125A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float lookSpeed;

	[Token(Token = "0x400125B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float moveSpeed;

	[Token(Token = "0x400125C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float rotationX;

	[Token(Token = "0x400125D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float rotationY;

	[Token(Token = "0x600099B")]
	[Address(RVA = "0xA68400", Offset = "0xA68400", VA = "0xA68400")]
	private void Update()
	{
	}

	[Token(Token = "0x600099C")]
	[Address(RVA = "0xA68764", Offset = "0xA68764", VA = "0xA68764")]
	public FlyDeko()
	{
	}
}
[Token(Token = "0x2000114")]
public class WaterAnim2 : MonoBehaviour
{
	[Token(Token = "0x400125E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D[] Textures;

	[Token(Token = "0x400125F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture2D[] NormalTextures;

	[Token(Token = "0x4001260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool NormalMapOn;

	[Token(Token = "0x4001261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int fps;

	[Token(Token = "0x4001262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int counter;

	[Token(Token = "0x600099D")]
	[Address(RVA = "0x12860DC", Offset = "0x12860DC", VA = "0x12860DC")]
	private void Start()
	{
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0x1286144", Offset = "0x1286144", VA = "0x1286144")]
	private void Increment()
	{
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0x128617C", Offset = "0x128617C", VA = "0x128617C")]
	private void Update()
	{
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0x1286298", Offset = "0x1286298", VA = "0x1286298")]
	public WaterAnim2()
	{
	}
}
[Token(Token = "0x2000115")]
public class CameraOrbit : MonoBehaviour
{
	[Token(Token = "0x4001263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Transform _XForm_Camera;

	[Token(Token = "0x4001264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected Transform _XForm_Parent;

	[Token(Token = "0x4001265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Vector3 _LocalRotation;

	[Token(Token = "0x4001266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	protected float _CameraDistance;

	[Token(Token = "0x4001267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float MouseSensitivity;

	[Token(Token = "0x4001268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float ScrollSensitvity;

	[Token(Token = "0x4001269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float OrbitDampening;

	[Token(Token = "0x400126A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float ScrollDampening;

	[Token(Token = "0x400126B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool CameraDisabled;

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0xA40C88", Offset = "0xA40C88", VA = "0xA40C88")]
	private void Start()
	{
	}

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0xA40CD0", Offset = "0xA40CD0", VA = "0xA40CD0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0xA41000", Offset = "0xA41000", VA = "0xA41000")]
	public CameraOrbit()
	{
	}
}
[Token(Token = "0x2000116")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7F6304", Offset = "0x7F6304")]
public class GhostFreeRoamCamera : MonoBehaviour
{
	[Token(Token = "0x400126C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float initialSpeed;

	[Token(Token = "0x400126D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float increaseSpeed;

	[Token(Token = "0x400126E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool allowMovement;

	[Token(Token = "0x400126F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool allowRotation;

	[Token(Token = "0x4001270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public KeyCode forwardButton;

	[Token(Token = "0x4001271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public KeyCode backwardButton;

	[Token(Token = "0x4001272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public KeyCode rightButton;

	[Token(Token = "0x4001273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public KeyCode leftButton;

	[Token(Token = "0x4001274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float cursorSensitivity;

	[Token(Token = "0x4001275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool cursorToggleAllowed;

	[Token(Token = "0x4001276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public KeyCode cursorToggleButton;

	[Token(Token = "0x4001277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float currentSpeed;

	[Token(Token = "0x4001278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool moving;

	[Token(Token = "0x4001279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	private bool togglePressed;

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0xA69120", Offset = "0xA69120", VA = "0xA69120")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0xA69150", Offset = "0xA69150", VA = "0xA69150")]
	private void Update()
	{
	}

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0xA69510", Offset = "0xA69510", VA = "0xA69510")]
	private void CheckMove(KeyCode keyCode, ref Vector3 deltaPosition, Vector3 directionVector)
	{
	}

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0xA695EC", Offset = "0xA695EC", VA = "0xA695EC")]
	public GhostFreeRoamCamera()
	{
	}
}
[Token(Token = "0x2000117")]
public class FlamesToggle : MonoBehaviour
{
	[Token(Token = "0x400127A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool dragon;

	[Token(Token = "0x400127B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource roar;

	[Token(Token = "0x400127C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioSource roar2;

	[Token(Token = "0x400127D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioSource flapp;

	[Token(Token = "0x400127E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject flameObject;

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0xA68260", Offset = "0xA68260", VA = "0xA68260")]
	private void Start()
	{
	}

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0xA68364", Offset = "0xA68364", VA = "0xA68364")]
	public void flame_start()
	{
	}

	[Token(Token = "0x60009AA")]
	[Address(RVA = "0xA683D8", Offset = "0xA683D8", VA = "0xA683D8")]
	public void flame_end()
	{
	}

	[Token(Token = "0x60009AB")]
	[Address(RVA = "0xA683F8", Offset = "0xA683F8", VA = "0xA683F8")]
	public FlamesToggle()
	{
	}
}
[Token(Token = "0x2000118")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7F6368", Offset = "0x7F6368")]
public class SmoothCameraOrbit : MonoBehaviour
{
	[Token(Token = "0x400127F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4001280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 targetOffset;

	[Token(Token = "0x4001281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float distance;

	[Token(Token = "0x4001282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maxDistance;

	[Token(Token = "0x4001283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float minDistance;

	[Token(Token = "0x4001284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float xSpeed;

	[Token(Token = "0x4001285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float ySpeed;

	[Token(Token = "0x4001286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int yMinLimit;

	[Token(Token = "0x4001287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int yMaxLimit;

	[Token(Token = "0x4001288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int zoomRate;

	[Token(Token = "0x4001289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float panSpeed;

	[Token(Token = "0x400128A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float zoomDampening;

	[Token(Token = "0x400128B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float xDeg;

	[Token(Token = "0x400128C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float yDeg;

	[Token(Token = "0x400128D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float currentDistance;

	[Token(Token = "0x400128E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float desiredDistance;

	[Token(Token = "0x400128F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Quaternion currentRotation;

	[Token(Token = "0x4001290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Quaternion desiredRotation;

	[Token(Token = "0x4001291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Quaternion rotation;

	[Token(Token = "0x4001292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 position;

	[Token(Token = "0x60009AC")]
	[Address(RVA = "0x965228", Offset = "0x965228", VA = "0x965228")]
	private void Start()
	{
	}

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0x9655E4", Offset = "0x9655E4", VA = "0x9655E4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0x96522C", Offset = "0x96522C", VA = "0x96522C")]
	public void Init()
	{
	}

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0x9655E8", Offset = "0x9655E8", VA = "0x9655E8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0x9659FC", Offset = "0x9659FC", VA = "0x9659FC")]
	private static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0x965AAC", Offset = "0x965AAC", VA = "0x965AAC")]
	public SmoothCameraOrbit()
	{
	}
}
[Token(Token = "0x2000119")]
public class toggle : MonoBehaviour
{
	[Token(Token = "0x4001293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject myobject;

	[Token(Token = "0x4001294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool activateme;

	[Token(Token = "0x60009B2")]
	[Address(RVA = "0x1296774", Offset = "0x1296774", VA = "0x1296774")]
	private void Start()
	{
	}

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0x12967B0", Offset = "0x12967B0", VA = "0x12967B0")]
	private void Update()
	{
	}

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0x129680C", Offset = "0x129680C", VA = "0x129680C")]
	public toggle()
	{
	}
}
[Token(Token = "0x200011A")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7F63A0", Offset = "0x7F63A0")]
public class RunTime_Terrain_Convertion : MonoBehaviour
{
	[Token(Token = "0x4001295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Terrain sourceTerrain;

	[Token(Token = "0x4001296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TerrainConvertInfo convertInfo;

	[Token(Token = "0x4001297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool generateBasemap;

	[Token(Token = "0x4001298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool attachMeshCollider;

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0xA4F708", Offset = "0xA4F708", VA = "0xA4F708")]
	private void Start()
	{
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0xA4FB34", Offset = "0xA4FB34", VA = "0xA4FB34")]
	private Material GenerateMaterial_Basemap()
	{
		return null;
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0xA4FE14", Offset = "0xA4FE14", VA = "0xA4FE14")]
	private Material GenerateMaterial_Splatmap()
	{
		return null;
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0xA5062C", Offset = "0xA5062C", VA = "0xA5062C")]
	public RunTime_Terrain_Convertion()
	{
	}
}
[Token(Token = "0x200011B")]
public class IKHands : MonoBehaviour
{
	[Token(Token = "0x4001299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform leftHandObj;

	[Token(Token = "0x400129A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform rightHandObj;

	[Token(Token = "0x400129B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform attachLeft;

	[Token(Token = "0x400129C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform attachRight;

	[Token(Token = "0x400129D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float leftHandPositionWeight;

	[Token(Token = "0x400129E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float leftHandRotationWeight;

	[Token(Token = "0x400129F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float rightHandPositionWeight;

	[Token(Token = "0x40012A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float rightHandRotationWeight;

	[Token(Token = "0x40012A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Animator animator;

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0x9A7ECC", Offset = "0x9A7ECC", VA = "0x9A7ECC")]
	private void Start()
	{
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0x9A7F34", Offset = "0x9A7F34", VA = "0x9A7F34")]
	private void OnAnimatorIK(int layerIndex)
	{
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0x9A80FC", Offset = "0x9A80FC", VA = "0x9A80FC")]
	public IKHands()
	{
	}
}
[Token(Token = "0x200011C")]
public class SmoothFollow : MonoBehaviour
{
	[Token(Token = "0x40012A2")]
	private const float SMOOTH_TIME = 0.3f;

	[Token(Token = "0x40012A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool LockX;

	[Token(Token = "0x40012A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float offSetZ;

	[Token(Token = "0x40012A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool LockY;

	[Token(Token = "0x40012A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool LockZ;

	[Token(Token = "0x40012A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool useSmoothing;

	[Token(Token = "0x40012A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform target;

	[Token(Token = "0x40012A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject hudElements;

	[Token(Token = "0x40012AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform thisTransform;

	[Token(Token = "0x40012AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 velocity;

	[Token(Token = "0x40012AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool hudActive;

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0x965AEC", Offset = "0x965AEC", VA = "0x965AEC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0x965B4C", Offset = "0x965B4C", VA = "0x965B4C")]
	private void Update()
	{
	}

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0x965BC0", Offset = "0x965BC0", VA = "0x965BC0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0x965E70", Offset = "0x965E70", VA = "0x965E70")]
	public SmoothFollow()
	{
	}
}
[Token(Token = "0x200011D")]
public class WarriorAnimationDemoFREE : MonoBehaviour
{
	[Token(Token = "0x20003D9")]
	public enum Warrior
	{
		[Token(Token = "0x40025F2")]
		Karate,
		[Token(Token = "0x40025F3")]
		Ninja,
		[Token(Token = "0x40025F4")]
		Brute,
		[Token(Token = "0x40025F5")]
		Sorceress,
		[Token(Token = "0x40025F6")]
		Knight,
		[Token(Token = "0x40025F7")]
		Mage,
		[Token(Token = "0x40025F8")]
		Archer,
		[Token(Token = "0x40025F9")]
		TwoHanded,
		[Token(Token = "0x40025FA")]
		Swordsman,
		[Token(Token = "0x40025FB")]
		Spearman,
		[Token(Token = "0x40025FC")]
		Hammer,
		[Token(Token = "0x40025FD")]
		Crossbow
	}

	[Token(Token = "0x20003DA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9B68", Offset = "0x7F9B68")]
	private sealed class <COStunPause>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40025FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float pauseTime;

		[Token(Token = "0x1700035D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A1F")]
			[Address(RVA = "0x1286068", Offset = "0x1286068", VA = "0x1286068", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A21")]
			[Address(RVA = "0x12860D4", Offset = "0x12860D4", VA = "0x12860D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A1C")]
		[Address(RVA = "0x1285B34", Offset = "0x1285B34", VA = "0x1285B34")]
		[DebuggerHidden]
		public <COStunPause>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6001A1D")]
		[Address(RVA = "0x1285FC4", Offset = "0x1285FC4", VA = "0x1285FC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A1E")]
		[Address(RVA = "0x1285FC8", Offset = "0x1285FC8", VA = "0x1285FC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A20")]
		[Address(RVA = "0x1286070", Offset = "0x1286070", VA = "0x1286070", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40012AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator animator;

	[Token(Token = "0x40012AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float rotationSpeed;

	[Token(Token = "0x40012AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 inputVec;

	[Token(Token = "0x40012B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 targetDirection;

	[Token(Token = "0x40012B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Warrior warrior;

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0x128580C", Offset = "0x128580C", VA = "0x128580C")]
	private void Update()
	{
	}

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0x12859B8", Offset = "0x12859B8", VA = "0x12859B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x80467C", Offset = "0x80467C")]
	public IEnumerator COStunPause(float pauseTime)
	{
		return null;
	}

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0x1285B60", Offset = "0x1285B60", VA = "0x1285B60")]
	private void GetCameraRelativeMovement()
	{
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0x1285CEC", Offset = "0x1285CEC", VA = "0x1285CEC")]
	private void RotateTowardMovementDirection()
	{
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0x1285A34", Offset = "0x1285A34", VA = "0x1285A34")]
	private void UpdateMovement()
	{
	}

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0x1285EA0", Offset = "0x1285EA0", VA = "0x1285EA0")]
	private void Hit()
	{
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0x1285EA4", Offset = "0x1285EA4", VA = "0x1285EA4")]
	private void FootR()
	{
	}

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0x1285EA8", Offset = "0x1285EA8", VA = "0x1285EA8")]
	private void FootL()
	{
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0x1285EAC", Offset = "0x1285EAC", VA = "0x1285EAC")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0x1285FB4", Offset = "0x1285FB4", VA = "0x1285FB4")]
	public WarriorAnimationDemoFREE()
	{
	}
}
namespace DynamicFogAndMist
{
	[Token(Token = "0x200011E")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7F63D8", Offset = "0x7F63D8")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x7F63D8", Offset = "0x7F63D8")]
	[ImageEffectAllowedInSceneView]
	public class DynamicFog : DynamicFogBase
	{
		[Token(Token = "0x60009CA")]
		[Address(RVA = "0xA8DC90", Offset = "0xA8DC90", VA = "0xA8DC90")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60009CB")]
		[Address(RVA = "0xA8E9CC", Offset = "0xA8E9CC", VA = "0xA8E9CC")]
		public DynamicFog()
		{
		}
	}
	[Token(Token = "0x200011F")]
	public enum FOG_TYPE
	{
		[Token(Token = "0x40012B3")]
		DesktopFogWithSkyHaze,
		[Token(Token = "0x40012B4")]
		MobileFogWithSkyHaze,
		[Token(Token = "0x40012B5")]
		MobileFogOnlyGround,
		[Token(Token = "0x40012B6")]
		DesktopFogPlusWithSkyHaze,
		[Token(Token = "0x40012B7")]
		MobileFogSimple,
		[Token(Token = "0x40012B8")]
		MobileFogBasic,
		[Token(Token = "0x40012B9")]
		MobileFogOrthogonal,
		[Token(Token = "0x40012BA")]
		DesktopFogPlusOrthogonal
	}
	[Token(Token = "0x2000120")]
	internal static class FOG_TYPE_Ext
	{
		[Token(Token = "0x60009CC")]
		[Address(RVA = "0xA925EC", Offset = "0xA925EC", VA = "0xA925EC")]
		public static bool isPlus(this FOG_TYPE fogType)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000121")]
	public enum FOG_PRESET
	{
		[Token(Token = "0x40012BC")]
		Clear,
		[Token(Token = "0x40012BD")]
		Mist,
		[Token(Token = "0x40012BE")]
		WindyMist,
		[Token(Token = "0x40012BF")]
		GroundFog,
		[Token(Token = "0x40012C0")]
		Fog,
		[Token(Token = "0x40012C1")]
		HeavyFog,
		[Token(Token = "0x40012C2")]
		SandStorm,
		[Token(Token = "0x40012C3")]
		Custom
	}
	[Token(Token = "0x2000122")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7F6490", Offset = "0x7F6490")]
	public class DynamicFogBase : MonoBehaviour
	{
		[Token(Token = "0x40012C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private FOG_TYPE _effectType;

		[Token(Token = "0x40012C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private FOG_PRESET _preset;

		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DynamicFogProfile _profile;

		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool _useFogVolumes;

		[Token(Token = "0x40012C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool _enableDithering;

		[Token(Token = "0x40012C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FDE14", Offset = "0x7FDE14")]
		private float _ditherStrength;

		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FDE58", Offset = "0x7FDE58")]
		protected float _alpha;

		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FDE98", Offset = "0x7FDE98")]
		private float _noiseStrength;

		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FDED8", Offset = "0x7FDED8")]
		private float _noiseScale;

		[Token(Token = "0x40012CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FDF1C", Offset = "0x7FDF1C")]
		private float _distance;

		[Token(Token = "0x40012CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FDF60", Offset = "0x7FDF60")]
		private float _distanceFallOff;

		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FDFA4", Offset = "0x7FDFA4")]
		private float _maxDistance;

		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FDFE8", Offset = "0x7FDFE8")]
		private float _maxDistanceFallOff;

		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FE02C", Offset = "0x7FE02C")]
		private float _height;

		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FE070", Offset = "0x7FE070")]
		private float _maxHeight;

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FE0B4", Offset = "0x7FE0B4")]
		private float _heightFallOff;

		[Token(Token = "0x40012D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float _baselineHeight;

		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private bool _clipUnderBaseline;

		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FE118", Offset = "0x7FE118")]
		private float _turbulence;

		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FE158", Offset = "0x7FE158")]
		private float _speed;

		[Token(Token = "0x40012D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Vector3 _windDirection;

		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private Color _color;

		[Token(Token = "0x40012DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private Color _color2;

		[Token(Token = "0x40012DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FE1C8", Offset = "0x7FE1C8")]
		private float _skyHaze;

		[Token(Token = "0x40012DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FE20C", Offset = "0x7FE20C")]
		private float _skySpeed;

		[Token(Token = "0x40012DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FE24C", Offset = "0x7FE24C")]
		private float _skyNoiseStrength;

		[Token(Token = "0x40012DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FE28C", Offset = "0x7FE28C")]
		private float _skyAlpha;

		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private GameObject _sun;

		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private bool _fogOfWarEnabled;

		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		private Vector3 _fogOfWarCenter;

		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private Vector3 _fogOfWarSize;

		[Token(Token = "0x40012E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private int _fogOfWarTextureSize;

		[Token(Token = "0x40012E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		protected bool _useSinglePassStereoRenderingMatrix;

		[Token(Token = "0x40012E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		[SerializeField]
		private bool _useXZDistance;

		[Token(Token = "0x40012E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FE33C", Offset = "0x7FE33C")]
		private float _scattering;

		[Token(Token = "0x40012E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private Color _scatteringColor;

		[Token(Token = "0x40012E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Material fogMatAdv;

		[Token(Token = "0x40012E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Material fogMatFogSky;

		[Token(Token = "0x40012EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Material fogMatOnlyFog;

		[Token(Token = "0x40012EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Material fogMatVol;

		[Token(Token = "0x40012EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Material fogMatSimple;

		[Token(Token = "0x40012ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Material fogMatBasic;

		[Token(Token = "0x40012EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Material fogMatOrthogonal;

		[Token(Token = "0x40012EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Material fogMatDesktopPlusOrthogonal;

		[Token(Token = "0x40012F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		protected Material fogMat;

		[Token(Token = "0x40012F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private float initialFogAlpha;

		[Token(Token = "0x40012F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private float targetFogAlpha;

		[Token(Token = "0x40012F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private float initialSkyHazeAlpha;

		[Token(Token = "0x40012F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private float targetSkyHazeAlpha;

		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private bool targetFogColors;

		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private Color initialFogColor1;

		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private Color targetFogColor1;

		[Token(Token = "0x40012F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private Color initialFogColor2;

		[Token(Token = "0x40012F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private Color targetFogColor2;

		[Token(Token = "0x40012FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		private float transitionDuration;

		[Token(Token = "0x40012FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private float transitionStartTime;

		[Token(Token = "0x40012FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		private float currentFogAlpha;

		[Token(Token = "0x40012FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private float currentSkyHazeAlpha;

		[Token(Token = "0x40012FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		private bool transitionAlpha;

		[Token(Token = "0x40012FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x195")]
		private bool transitionColor;

		[Token(Token = "0x4001300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x196")]
		private bool transitionProfile;

		[Token(Token = "0x4001301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private DynamicFogProfile initialProfile;

		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private DynamicFogProfile targetProfile;

		[Token(Token = "0x4001303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private Color currentFogColor1;

		[Token(Token = "0x4001304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private Color currentFogColor2;

		[Token(Token = "0x4001305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		protected Camera currentCamera;

		[Token(Token = "0x4001306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private Texture2D fogOfWarTexture;

		[Token(Token = "0x4001307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private Color32[] fogOfWarColorBuffer;

		[Token(Token = "0x4001308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private Light sunLight;

		[Token(Token = "0x4001309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private Vector3 sunDirection;

		[Token(Token = "0x400130A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		private Color sunColor;

		[Token(Token = "0x400130B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		private float sunIntensity;

		[Token(Token = "0x400130C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static DynamicFog _fog;

		[Token(Token = "0x400130D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private List<string> shaderKeywords;

		[Token(Token = "0x400130E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		protected bool matOrtho;

		[Token(Token = "0x400130F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x211")]
		protected bool shouldUpdateMaterialProperties;

		[Token(Token = "0x1700006F")]
		public FOG_TYPE effectType
		{
			[Token(Token = "0x60009CD")]
			[Address(RVA = "0xA8EBC0", Offset = "0xA8EBC0", VA = "0xA8EBC0")]
			get
			{
				return default(FOG_TYPE);
			}
			[Token(Token = "0x60009CE")]
			[Address(RVA = "0xA8EBC8", Offset = "0xA8EBC8", VA = "0xA8EBC8")]
			set
			{
			}
		}

		[Token(Token = "0x17000070")]
		public FOG_PRESET preset
		{
			[Token(Token = "0x60009CF")]
			[Address(RVA = "0xA8EC5C", Offset = "0xA8EC5C", VA = "0xA8EC5C")]
			get
			{
				return default(FOG_PRESET);
			}
			[Token(Token = "0x60009D0")]
			[Address(RVA = "0xA8EC64", Offset = "0xA8EC64", VA = "0xA8EC64")]
			set
			{
			}
		}

		[Token(Token = "0x17000071")]
		public DynamicFogProfile profile
		{
			[Token(Token = "0x60009D1")]
			[Address(RVA = "0xA8EC7C", Offset = "0xA8EC7C", VA = "0xA8EC7C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009D2")]
			[Address(RVA = "0xA8EC84", Offset = "0xA8EC84", VA = "0xA8EC84")]
			set
			{
			}
		}

		[Token(Token = "0x17000072")]
		public bool useFogVolumes
		{
			[Token(Token = "0x60009D3")]
			[Address(RVA = "0xA8F1B4", Offset = "0xA8F1B4", VA = "0xA8F1B4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009D4")]
			[Address(RVA = "0xA8F1BC", Offset = "0xA8F1BC", VA = "0xA8F1BC")]
			set
			{
			}
		}

		[Token(Token = "0x17000073")]
		public bool enableDithering
		{
			[Token(Token = "0x60009D5")]
			[Address(RVA = "0xA8F1DC", Offset = "0xA8F1DC", VA = "0xA8F1DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009D6")]
			[Address(RVA = "0xA8F1E4", Offset = "0xA8F1E4", VA = "0xA8F1E4")]
			set
			{
			}
		}

		[Token(Token = "0x17000074")]
		public float ditherStrength
		{
			[Token(Token = "0x60009D7")]
			[Address(RVA = "0xA8F240", Offset = "0xA8F240", VA = "0xA8F240")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60009D8")]
			[Address(RVA = "0xA8F248", Offset = "0xA8F248", VA = "0xA8F248")]
			set
			{
			}
		}

		[Token(Token = "0x17000075")]
		public float alpha
		{
			[Token(Token = "0x60009D9")]
			[Address(RVA = "0xA8F298", Offset = "0xA8F298", VA = "0xA8F298")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60009DA")]
			[Address(RVA = "0xA8F2A0", Offset = "0xA8F2A0", VA = "0xA8F2A0")]
			set
			{
			}
		}

		[Token(Token = "0x17000076")]
		public float noiseStrength
		{
			[Token(Token = "0x60009DB")]
			[Address(RVA = "0xA8F2C0", Offset = "0xA8F2C0", VA = "0xA8F2C0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60009DC")]
			[Address(RVA = "0xA8F2C8", Offset = "0xA8F2C8", VA = "0xA8F2C8")]
			set
			{
			}
		}

		[Token(Token = "0x17000077")]
		public float noiseScale
		{
			[Token(Token = "0x60009DD")]
			[Address(RVA = "0xA8F2E8", Offset = "0xA8F2E8", VA = "0xA8F2E8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60009DE")]
			[Address(RVA = "0xA8F2F0", Offset = "0xA8F2F0", VA = "0xA8F2F0")]
			set
			{
			}
		}

		[Token(Token = "0x17000078")]
		public float distance
		{
			[Token(Token = "0x60009DF")]
			[Address(RVA = "0xA8F348", Offset = "0xA8F348", VA = "0xA8F348")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60009E0")]
			[Address(RVA = "0xA8F350", Offset = "0xA8F350", VA = "0xA8F350")]
			set
			{
			}
		}

		[Token(Token = "0x17000079")]
		public float distanceFallOff
		{
			[Token(Token = "0x60009E1")]
			[Address(RVA = "0xA8F370", Offset = "0xA8F370", VA = "0xA8F370")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60009E2")]
			[Address(RVA = "0xA8F378", Offset = "0xA8F378", VA = "0xA8F378")]
			set
			{
			}
		}

		[Token(Token = "0x1700007A")]
		public float maxDistance
		{
			[Token(Token = "0x60009E3")]
			[Address(RVA = "0xA8F398", Offset = "0xA8F398", VA = "0xA8F398")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60009E4")]
			[Address(RVA = "0xA8F3A0", Offset = "0xA8F3A0", VA = "0xA8F3A0")]
			set
			{
			}
		}

		[Token(Token = "0x1700007B")]
		public float maxDistanceFallOff
		{
			[Token(Token = "0x60009E5")]
			[Address(RVA = "0xA8F3C0", Offset = "0xA8F3C0", VA = "0xA8F3C0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60009E6")]
			[Address(RVA = "0xA8F3C8", Offset = "0xA8F3C8", VA = "0xA8F3C8")]
			set
			{
			}
		}

		[Token(Token = "0x1700007C")]
		public float height
		{
			[Token(Token = "0x60009E7")]
			[Address(RVA = "0xA8F3E8", Offset = "0xA8F3E8", VA = "0xA8F3E8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60009E8")]
			[Address(RVA = "0xA8F3F0", Offset = "0xA8F3F0", VA = "0xA8F3F0")]
			set
			{
			}
		}

		[Token(Token = "0x1700007D")]
		public float maxHeight
		{
			[Token(Token = "0x60009E9")]
			[Address(RVA = "0xA8F410", Offset = "0xA8F410", VA = "0xA8F410")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60009EA")]
			[Address(RVA = "0xA8F418", Offset = "0xA8F418", VA = "0xA8F418")]
			set
			{
			}
		}

		[Token(Token = "0x1700007E")]
		public float heightFallOff
		{
			[Token(Token = "0x60009EB")]
			[Address(RVA = "0xA8F470", Offset = "0xA8F470", VA = "0xA8F470")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60009EC")]
			[Address(RVA = "0xA8F478", Offset = "0xA8F478", VA = "0xA8F478")]
			set
			{
			}
		}

		[Token(Token = "0x1700007F")]
		public float baselineHeight
		{
			[Token(Token = "0x60009ED")]
			[Address(RVA = "0xA8F498", Offset = "0xA8F498", VA = "0xA8F498")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60009EE")]
			[Address(RVA = "0xA8F4A0", Offset = "0xA8F4A0", VA = "0xA8F4A0")]
			set
			{
			}
		}

		[Token(Token = "0x17000080")]
		public bool clipUnderBaseline
		{
			[Token(Token = "0x60009EF")]
			[Address(RVA = "0xA8F4F0", Offset = "0xA8F4F0", VA = "0xA8F4F0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009F0")]
			[Address(RVA = "0xA8F4F8", Offset = "0xA8F4F8", VA = "0xA8F4F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000081")]
		public float turbulence
		{
			[Token(Token = "0x60009F1")]
			[Address(RVA = "0xA8F554", Offset = "0xA8F554", VA = "0xA8F554")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60009F2")]
			[Address(RVA = "0xA8F55C", Offset = "0xA8F55C", VA = "0xA8F55C")]
			set
			{
			}
		}

		[Token(Token = "0x17000082")]
		public float speed
		{
			[Token(Token = "0x60009F3")]
			[Address(RVA = "0xA8F57C", Offset = "0xA8F57C", VA = "0xA8F57C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60009F4")]
			[Address(RVA = "0xA8F584", Offset = "0xA8F584", VA = "0xA8F584")]
			set
			{
			}
		}

		[Token(Token = "0x17000083")]
		public Vector3 windDirection
		{
			[Token(Token = "0x60009F5")]
			[Address(RVA = "0xA8F5A4", Offset = "0xA8F5A4", VA = "0xA8F5A4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60009F6")]
			[Address(RVA = "0xA8F5B0", Offset = "0xA8F5B0", VA = "0xA8F5B0")]
			set
			{
			}
		}

		[Token(Token = "0x17000084")]
		public Color color
		{
			[Token(Token = "0x60009F7")]
			[Address(RVA = "0xA8F698", Offset = "0xA8F698", VA = "0xA8F698")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60009F8")]
			[Address(RVA = "0xA8F6A4", Offset = "0xA8F6A4", VA = "0xA8F6A4")]
			set
			{
			}
		}

		[Token(Token = "0x17000085")]
		public Color color2
		{
			[Token(Token = "0x60009F9")]
			[Address(RVA = "0xA8F71C", Offset = "0xA8F71C", VA = "0xA8F71C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60009FA")]
			[Address(RVA = "0xA8F728", Offset = "0xA8F728", VA = "0xA8F728")]
			set
			{
			}
		}

		[Token(Token = "0x17000086")]
		public float skyHaze
		{
			[Token(Token = "0x60009FB")]
			[Address(RVA = "0xA8F7A0", Offset = "0xA8F7A0", VA = "0xA8F7A0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60009FC")]
			[Address(RVA = "0xA8F7A8", Offset = "0xA8F7A8", VA = "0xA8F7A8")]
			set
			{
			}
		}

		[Token(Token = "0x17000087")]
		public float skySpeed
		{
			[Token(Token = "0x60009FD")]
			[Address(RVA = "0xA8F7C8", Offset = "0xA8F7C8", VA = "0xA8F7C8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60009FE")]
			[Address(RVA = "0xA8F7D0", Offset = "0xA8F7D0", VA = "0xA8F7D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000088")]
		public float skyNoiseStrength
		{
			[Token(Token = "0x60009FF")]
			[Address(RVA = "0xA8F7F0", Offset = "0xA8F7F0", VA = "0xA8F7F0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A00")]
			[Address(RVA = "0xA8F7F8", Offset = "0xA8F7F8", VA = "0xA8F7F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000089")]
		public float skyAlpha
		{
			[Token(Token = "0x6000A01")]
			[Address(RVA = "0xA8F818", Offset = "0xA8F818", VA = "0xA8F818")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A02")]
			[Address(RVA = "0xA8F820", Offset = "0xA8F820", VA = "0xA8F820")]
			set
			{
			}
		}

		[Token(Token = "0x1700008A")]
		public GameObject sun
		{
			[Token(Token = "0x6000A03")]
			[Address(RVA = "0xA8F840", Offset = "0xA8F840", VA = "0xA8F840")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A04")]
			[Address(RVA = "0xA8F848", Offset = "0xA8F848", VA = "0xA8F848")]
			set
			{
			}
		}

		[Token(Token = "0x1700008B")]
		public bool fogOfWarEnabled
		{
			[Token(Token = "0x6000A05")]
			[Address(RVA = "0xA8F8F8", Offset = "0xA8F8F8", VA = "0xA8F8F8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A06")]
			[Address(RVA = "0xA8F900", Offset = "0xA8F900", VA = "0xA8F900")]
			set
			{
			}
		}

		[Token(Token = "0x1700008C")]
		public Vector3 fogOfWarCenter
		{
			[Token(Token = "0x6000A07")]
			[Address(RVA = "0xA8F95C", Offset = "0xA8F95C", VA = "0xA8F95C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000A08")]
			[Address(RVA = "0xA8F968", Offset = "0xA8F968", VA = "0xA8F968")]
			set
			{
			}
		}

		[Token(Token = "0x1700008D")]
		public Vector3 fogOfWarSize
		{
			[Token(Token = "0x6000A09")]
			[Address(RVA = "0xA8FA50", Offset = "0xA8FA50", VA = "0xA8FA50")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000A0A")]
			[Address(RVA = "0xA8FA5C", Offset = "0xA8FA5C", VA = "0xA8FA5C")]
			set
			{
			}
		}

		[Token(Token = "0x1700008E")]
		public int fogOfWarTextureSize
		{
			[Token(Token = "0x6000A0B")]
			[Address(RVA = "0xA8FB44", Offset = "0xA8FB44", VA = "0xA8FB44")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000A0C")]
			[Address(RVA = "0xA8FB4C", Offset = "0xA8FB4C", VA = "0xA8FB4C")]
			set
			{
			}
		}

		[Token(Token = "0x1700008F")]
		public bool useSinglePassStereoRenderingMatrix
		{
			[Token(Token = "0x6000A0D")]
			[Address(RVA = "0xA8FB9C", Offset = "0xA8FB9C", VA = "0xA8FB9C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A0E")]
			[Address(RVA = "0xA8FBA4", Offset = "0xA8FBA4", VA = "0xA8FBA4")]
			set
			{
			}
		}

		[Token(Token = "0x17000090")]
		public bool useXZDistance
		{
			[Token(Token = "0x6000A0F")]
			[Address(RVA = "0xA8FC00", Offset = "0xA8FC00", VA = "0xA8FC00")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A10")]
			[Address(RVA = "0xA8FC08", Offset = "0xA8FC08", VA = "0xA8FC08")]
			set
			{
			}
		}

		[Token(Token = "0x17000091")]
		public float scattering
		{
			[Token(Token = "0x6000A11")]
			[Address(RVA = "0xA8FC64", Offset = "0xA8FC64", VA = "0xA8FC64")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A12")]
			[Address(RVA = "0xA8FC6C", Offset = "0xA8FC6C", VA = "0xA8FC6C")]
			set
			{
			}
		}

		[Token(Token = "0x17000092")]
		public Color scatteringColor
		{
			[Token(Token = "0x6000A13")]
			[Address(RVA = "0xA8FCBC", Offset = "0xA8FCBC", VA = "0xA8FCBC")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000A14")]
			[Address(RVA = "0xA8FCC8", Offset = "0xA8FCC8", VA = "0xA8FCC8")]
			set
			{
			}
		}

		[Token(Token = "0x17000093")]
		public static DynamicFog instance
		{
			[Token(Token = "0x6000A15")]
			[Address(RVA = "0xA8FD4C", Offset = "0xA8FD4C", VA = "0xA8FD4C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000094")]
		public Camera fogCamera
		{
			[Token(Token = "0x6000A17")]
			[Address(RVA = "0xA8FF70", Offset = "0xA8FF70", VA = "0xA8FF70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A16")]
		[Address(RVA = "0xA8FE98", Offset = "0xA8FE98", VA = "0xA8FE98")]
		public string GetCurrentPresetName()
		{
			return null;
		}

		[Token(Token = "0x6000A18")]
		[Address(RVA = "0xA8FF78", Offset = "0xA8FF78", VA = "0xA8FF78")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A19")]
		[Address(RVA = "0xA9005C", Offset = "0xA9005C", VA = "0xA9005C")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0xA90060", Offset = "0xA90060", VA = "0xA90060")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0xA8FF9C", Offset = "0xA8FF9C", VA = "0xA8FF9C")]
		private void Init()
		{
		}

		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0xA90530", Offset = "0xA90530", VA = "0xA90530")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0xA91838", Offset = "0xA91838", VA = "0xA91838")]
		private void OnDidApplyAnimationProperties()
		{
		}

		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0xA91844", Offset = "0xA91844", VA = "0xA91844")]
		public void CheckPreset()
		{
		}

		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0xA92610", Offset = "0xA92610", VA = "0xA92610")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6000A20")]
		[Address(RVA = "0xA926BC", Offset = "0xA926BC", VA = "0xA926BC")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000A21")]
		[Address(RVA = "0xA8E97C", Offset = "0xA8E97C", VA = "0xA8E97C")]
		protected void ResetMaterial()
		{
		}

		[Token(Token = "0x6000A22")]
		[Address(RVA = "0xA8EC1C", Offset = "0xA8EC1C", VA = "0xA8EC1C")]
		public void UpdateMaterialProperties()
		{
		}

		[Token(Token = "0x6000A23")]
		[Address(RVA = "0xA8DFE0", Offset = "0xA8DFE0", VA = "0xA8DFE0")]
		protected void UpdateMaterialPropertiesNow()
		{
		}

		[Token(Token = "0x6000A24")]
		[Address(RVA = "0xA92A0C", Offset = "0xA92A0C", VA = "0xA92A0C")]
		private void CopyTransitionValues()
		{
		}

		[Token(Token = "0x6000A25")]
		[Address(RVA = "0xA91368", Offset = "0xA91368", VA = "0xA91368")]
		private void SetSkyData()
		{
		}

		[Token(Token = "0x6000A26")]
		[Address(RVA = "0xA913F4", Offset = "0xA913F4", VA = "0xA913F4")]
		private void UpdateFogColor()
		{
		}

		[Token(Token = "0x6000A27")]
		[Address(RVA = "0xA92A54", Offset = "0xA92A54", VA = "0xA92A54")]
		public void SetTargetProfile(DynamicFogProfile targetProfile, float duration)
		{
		}

		[Token(Token = "0x6000A28")]
		[Address(RVA = "0xA92C38", Offset = "0xA92C38", VA = "0xA92C38")]
		public void ClearTargetProfile(float duration)
		{
		}

		[Token(Token = "0x6000A29")]
		[Address(RVA = "0xA92C40", Offset = "0xA92C40", VA = "0xA92C40")]
		public void SetTargetAlpha(float newFogAlpha, float newSkyHazeAlpha, float duration)
		{
		}

		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0xA92CCC", Offset = "0xA92CCC", VA = "0xA92CCC")]
		public void ClearTargetAlpha(float duration)
		{
		}

		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0xA92CDC", Offset = "0xA92CDC", VA = "0xA92CDC")]
		public void SetTargetColors(Color color1, Color color2, float duration)
		{
		}

		[Token(Token = "0x6000A2C")]
		[Address(RVA = "0xA92DF0", Offset = "0xA92DF0", VA = "0xA92DF0")]
		public void ClearTargetColors(float duration)
		{
		}

		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0xA90430", Offset = "0xA90430", VA = "0xA90430")]
		private void UpdateFogOfWarTexture()
		{
		}

		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0xA92FD0", Offset = "0xA92FD0", VA = "0xA92FD0")]
		public void SetFogOfWarAlpha(Vector3 worldPosition, float radius, float fogNewAlpha)
		{
		}

		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0xA933DC", Offset = "0xA933DC", VA = "0xA933DC")]
		public void ResetFogOfWarAlpha(Vector3 worldPosition, float radius)
		{
		}

		[Token(Token = "0x6000A30")]
		[Address(RVA = "0xA92E54", Offset = "0xA92E54", VA = "0xA92E54")]
		public void ResetFogOfWar()
		{
		}

		[Token(Token = "0x6000A31")]
		[Address(RVA = "0xA92E28", Offset = "0xA92E28", VA = "0xA92E28")]
		private int GetScaledSize(int size, float factor)
		{
			return default(int);
		}

		[Token(Token = "0x6000A32")]
		[Address(RVA = "0xA8E9D0", Offset = "0xA8E9D0", VA = "0xA8E9D0")]
		public DynamicFogBase()
		{
		}
	}
	[Token(Token = "0x2000123")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7F64C8", Offset = "0x7F64C8")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x7F64C8", Offset = "0x7F64C8")]
	[ImageEffectAllowedInSceneView]
	public class DynamicFogExclusive : DynamicFogBase
	{
		[Token(Token = "0x4001310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private RenderTexture rt;

		[Token(Token = "0x4001311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FE39C", Offset = "0x7FE39C")]
		public float renderScale;

		[Token(Token = "0x6000A33")]
		[Address(RVA = "0xA936F4", Offset = "0xA936F4", VA = "0xA936F4")]
		private void OnPreRender()
		{
		}

		[Token(Token = "0x6000A34")]
		[Address(RVA = "0xA938FC", Offset = "0xA938FC", VA = "0xA938FC")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x6000A35")]
		[Address(RVA = "0xA93C2C", Offset = "0xA93C2C", VA = "0xA93C2C")]
		public DynamicFogExclusive()
		{
		}
	}
	[Token(Token = "0x2000124")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x7F6570", Offset = "0x7F6570")]
	public class DynamicFogManager : MonoBehaviour
	{
		[Token(Token = "0x4001312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FE3B8", Offset = "0x7FE3B8")]
		public float alpha;

		[Token(Token = "0x4001313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FE3D0", Offset = "0x7FE3D0")]
		public float noiseStrength;

		[Token(Token = "0x4001314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FE3E8", Offset = "0x7FE3E8")]
		public float distance;

		[Token(Token = "0x4001315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FE404", Offset = "0x7FE404")]
		public float distanceFallOff;

		[Token(Token = "0x4001316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FE41C", Offset = "0x7FE41C")]
		public float height;

		[Token(Token = "0x4001317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FE438", Offset = "0x7FE438")]
		public float heightFallOff;

		[Token(Token = "0x4001318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float baselineHeight;

		[Token(Token = "0x4001319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Color color;

		[Token(Token = "0x400131A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject sun;

		[Token(Token = "0x400131B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Light sunLight;

		[Token(Token = "0x400131C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 sunDirection;

		[Token(Token = "0x400131D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Color sunColor;

		[Token(Token = "0x400131E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float sunIntensity;

		[Token(Token = "0x6000A36")]
		[Address(RVA = "0xA93C38", Offset = "0xA93C38", VA = "0xA93C38")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A37")]
		[Address(RVA = "0xA93C80", Offset = "0xA93C80", VA = "0xA93C80")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000A38")]
		[Address(RVA = "0xA93CA4", Offset = "0xA93CA4", VA = "0xA93CA4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A39")]
		[Address(RVA = "0xA93C5C", Offset = "0xA93C5C", VA = "0xA93C5C")]
		public void UpdateMaterialProperties()
		{
		}

		[Token(Token = "0x6000A3A")]
		[Address(RVA = "0xA940DC", Offset = "0xA940DC", VA = "0xA940DC")]
		private void UpdateFogData()
		{
		}

		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0xA93E44", Offset = "0xA93E44", VA = "0xA93E44")]
		private void UpdateFogColor()
		{
		}

		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0xA941C4", Offset = "0xA941C4", VA = "0xA941C4")]
		public DynamicFogManager()
		{
		}
	}
	[Token(Token = "0x2000125")]
	[ExecuteInEditMode]
	public class DynamicFogOfWar : MonoBehaviour
	{
		[Token(Token = "0x400131F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int fogOfWarTextureSize;

		[Token(Token = "0x4001320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material fogMat;

		[Token(Token = "0x4001321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static DynamicFogOfWar _instance;

		[Token(Token = "0x4001322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Texture2D fogOfWarTexture;

		[Token(Token = "0x4001323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color32[] fogOfWarColorBuffer;

		[Token(Token = "0x17000095")]
		public static DynamicFogOfWar instance
		{
			[Token(Token = "0x6000A3D")]
			[Address(RVA = "0xA942B0", Offset = "0xA942B0", VA = "0xA942B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0xA9437C", Offset = "0xA9437C", VA = "0xA9437C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0xA944E4", Offset = "0xA944E4", VA = "0xA944E4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A40")]
		[Address(RVA = "0xA94590", Offset = "0xA94590", VA = "0xA94590")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A41")]
		[Address(RVA = "0xA943E8", Offset = "0xA943E8", VA = "0xA943E8")]
		private void UpdateFogOfWarTexture()
		{
		}

		[Token(Token = "0x6000A42")]
		[Address(RVA = "0xA946A8", Offset = "0xA946A8", VA = "0xA946A8")]
		private int GetScaledSize(int size, float factor)
		{
			return default(int);
		}

		[Token(Token = "0x6000A43")]
		[Address(RVA = "0xA94850", Offset = "0xA94850", VA = "0xA94850")]
		public void SetFogOfWarAlpha(Vector3 worldPosition, float radius, float fogNewAlpha)
		{
		}

		[Token(Token = "0x6000A44")]
		[Address(RVA = "0xA946D4", Offset = "0xA946D4", VA = "0xA946D4")]
		public void ResetFogOfWar()
		{
		}

		[Token(Token = "0x6000A45")]
		[Address(RVA = "0xA94CB0", Offset = "0xA94CB0", VA = "0xA94CB0")]
		public void SetFogOfWarTerrainBoundary(Terrain terrain, float borderWidth)
		{
		}

		[Token(Token = "0x6000A46")]
		[Address(RVA = "0xA94F5C", Offset = "0xA94F5C", VA = "0xA94F5C")]
		public DynamicFogOfWar()
		{
		}
	}
	[Token(Token = "0x2000126")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7F65CC", Offset = "0x7F65CC")]
	public class DynamicFogProfile : ScriptableObject
	{
		[Token(Token = "0x4001324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FOG_TYPE effectType;

		[Token(Token = "0x4001325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool enableDithering;

		[Token(Token = "0x4001326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FE450", Offset = "0x7FE450")]
		public float ditherStrength;

		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FE46C", Offset = "0x7FE46C")]
		public float alpha;

		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FE484", Offset = "0x7FE484")]
		public float noiseStrength;

		[Token(Token = "0x4001329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FE49C", Offset = "0x7FE49C")]
		public float noiseScale;

		[Token(Token = "0x400132A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FE4B8", Offset = "0x7FE4B8")]
		public float distance;

		[Token(Token = "0x400132B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FE4D4", Offset = "0x7FE4D4")]
		public float distanceFallOff;

		[Token(Token = "0x400132C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FE4F0", Offset = "0x7FE4F0")]
		public float maxDistance;

		[Token(Token = "0x400132D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FE50C", Offset = "0x7FE50C")]
		public float maxDistanceFallOff;

		[Token(Token = "0x400132E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FE528", Offset = "0x7FE528")]
		public float height;

		[Token(Token = "0x400132F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FE544", Offset = "0x7FE544")]
		public float maxHeight;

		[Token(Token = "0x4001330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FE560", Offset = "0x7FE560")]
		public float heightFallOff;

		[Token(Token = "0x4001331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float baselineHeight;

		[Token(Token = "0x4001332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool clipUnderBaseline;

		[Token(Token = "0x4001333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FE57C", Offset = "0x7FE57C")]
		public float turbulence;

		[Token(Token = "0x4001334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FE594", Offset = "0x7FE594")]
		public float speed;

		[Token(Token = "0x4001335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Vector3 windDirection;

		[Token(Token = "0x4001336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Color color;

		[Token(Token = "0x4001337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Color color2;

		[Token(Token = "0x4001338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FE5AC", Offset = "0x7FE5AC")]
		public float skyHaze;

		[Token(Token = "0x4001339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FE5C8", Offset = "0x7FE5C8")]
		public float skySpeed;

		[Token(Token = "0x400133A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FE5E0", Offset = "0x7FE5E0")]
		public float skyNoiseStrength;

		[Token(Token = "0x400133B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FE5F8", Offset = "0x7FE5F8")]
		public float skyAlpha;

		[Token(Token = "0x400133C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool useXZDistance;

		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FE610", Offset = "0x7FE610")]
		public float scattering;

		[Token(Token = "0x400133E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Color scatteringColor;

		[Token(Token = "0x6000A47")]
		[Address(RVA = "0xA8ED7C", Offset = "0xA8ED7C", VA = "0xA8ED7C")]
		public void Load(DynamicFogBase fog)
		{
		}

		[Token(Token = "0x6000A48")]
		[Address(RVA = "0xA92B10", Offset = "0xA92B10", VA = "0xA92B10")]
		public void Save(DynamicFogBase fog)
		{
		}

		[Token(Token = "0x6000A49")]
		[Address(RVA = "0xA90BD4", Offset = "0xA90BD4", VA = "0xA90BD4")]
		public static void Lerp(DynamicFogProfile profile1, DynamicFogProfile profile2, float t, DynamicFogBase fog)
		{
		}

		[Token(Token = "0x6000A4A")]
		[Address(RVA = "0xA94F6C", Offset = "0xA94F6C", VA = "0xA94F6C")]
		public DynamicFogProfile()
		{
		}
	}
	[Token(Token = "0x2000127")]
	public class FogVolume : MonoBehaviour
	{
		[Token(Token = "0x400133F")]
		private const float GRAY = 0.8901961f;

		[Token(Token = "0x4001340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FE628", Offset = "0x7FE628")]
		public bool enableProfileTransition;

		[Token(Token = "0x4001341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FE660", Offset = "0x7FE660")]
		public DynamicFogProfile targetProfile;

		[Token(Token = "0x4001342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FE698", Offset = "0x7FE698")]
		public bool enableAlphaTransition;

		[Token(Token = "0x4001343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FE6D0", Offset = "0x7FE6D0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FE6D0", Offset = "0x7FE6D0")]
		public float targetFogAlpha;

		[Token(Token = "0x4001344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FE724", Offset = "0x7FE724")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FE724", Offset = "0x7FE724")]
		public float targetSkyHazeAlpha;

		[Token(Token = "0x4001345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FE778", Offset = "0x7FE778")]
		public bool enableFogColorTransition;

		[Token(Token = "0x4001346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FE7B0", Offset = "0x7FE7B0")]
		public Color targetFogColor1;

		[Token(Token = "0x4001347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FE7E8", Offset = "0x7FE7E8")]
		public Color targetFogColor2;

		[Token(Token = "0x4001348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FE820", Offset = "0x7FE820")]
		public float transitionDuration;

		[Token(Token = "0x4001349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FE858", Offset = "0x7FE858")]
		public Collider targetCollider;

		[Token(Token = "0x400134A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FE890", Offset = "0x7FE890")]
		public bool debugMode;

		[Token(Token = "0x400134B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FE8C8", Offset = "0x7FE8C8")]
		public DynamicFog targetFog;

		[Token(Token = "0x400134C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool cameraInside;

		[Token(Token = "0x6000A4B")]
		[Address(RVA = "0xA950A8", Offset = "0xA950A8", VA = "0xA950A8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0xA95188", Offset = "0xA95188", VA = "0xA95188")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000A4D")]
		[Address(RVA = "0xA953E0", Offset = "0xA953E0", VA = "0xA953E0")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000A4E")]
		[Address(RVA = "0xA95618", Offset = "0xA95618", VA = "0xA95618")]
		public FogVolume()
		{
		}
	}
}
namespace VolumetricFogAndMist
{
	[Token(Token = "0x2000128")]
	public class DemoWalk : MonoBehaviour
	{
		[Token(Token = "0x400134D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Text status;

		[Token(Token = "0x6000A4F")]
		[Address(RVA = "0xB724F4", Offset = "0xB724F4", VA = "0xB724F4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A50")]
		[Address(RVA = "0xB725E0", Offset = "0xB725E0", VA = "0xB725E0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A51")]
		[Address(RVA = "0xB72840", Offset = "0xB72840", VA = "0xB72840")]
		public DemoWalk()
		{
		}
	}
	[Token(Token = "0x2000129")]
	public class DemoFogOfWar : MonoBehaviour
	{
		[Token(Token = "0x400134E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool fogCuttingOn;

		[Token(Token = "0x400134F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private VolumetricFog fog;

		[Token(Token = "0x4001350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Text status;

		[Token(Token = "0x6000A52")]
		[Address(RVA = "0xB71A74", Offset = "0xB71A74", VA = "0xB71A74")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A53")]
		[Address(RVA = "0xB71EF4", Offset = "0xB71EF4", VA = "0xB71EF4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A54")]
		[Address(RVA = "0xB722E8", Offset = "0xB722E8", VA = "0xB722E8")]
		private void AssignCustomTexture()
		{
		}

		[Token(Token = "0x6000A55")]
		[Address(RVA = "0xB724E4", Offset = "0xB724E4", VA = "0xB724E4")]
		public DemoFogOfWar()
		{
		}
	}
	[Token(Token = "0x200012A")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7F6620", Offset = "0x7F6620")]
	public class FogAreaCullingManager : MonoBehaviour
	{
		[Token(Token = "0x4001351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VolumetricFog fog;

		[Token(Token = "0x6000A56")]
		[Address(RVA = "0xB72848", Offset = "0xB72848", VA = "0xB72848")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A57")]
		[Address(RVA = "0xB72938", Offset = "0xB72938", VA = "0xB72938")]
		private void OnBecameVisible()
		{
		}

		[Token(Token = "0x6000A58")]
		[Address(RVA = "0xB729D0", Offset = "0xB729D0", VA = "0xB729D0")]
		private void OnBecameInvisible()
		{
		}

		[Token(Token = "0x6000A59")]
		[Address(RVA = "0xB72A68", Offset = "0xB72A68", VA = "0xB72A68")]
		public FogAreaCullingManager()
		{
		}
	}
	[Token(Token = "0x200012B")]
	[ExecuteInEditMode]
	public class FogOfWarHole : MonoBehaviour
	{
		[Token(Token = "0x20003DB")]
		public enum HoleShape
		{
			[Token(Token = "0x4002602")]
			Disc,
			[Token(Token = "0x4002603")]
			Box
		}

		[Token(Token = "0x4001352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HoleShape shape;

		[Token(Token = "0x4001353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FE900", Offset = "0x7FE900")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FE900", Offset = "0x7FE900")]
		public float alpha;

		[Token(Token = "0x4001354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FE954", Offset = "0x7FE954")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FE954", Offset = "0x7FE954")]
		public float smoothness;

		[Token(Token = "0x4001355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private HoleShape lastShape;

		[Token(Token = "0x4001356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 lastPosition;

		[Token(Token = "0x4001357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 lastScale;

		[Token(Token = "0x6000A5A")]
		[Address(RVA = "0xB72A70", Offset = "0xB72A70", VA = "0xB72A70")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A5B")]
		[Address(RVA = "0xB72D00", Offset = "0xB72D00", VA = "0xB72D00")]
		private void RestoreHole(Vector3 position, HoleShape shape, float sizeX, float sizeZ)
		{
		}

		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0xB72B14", Offset = "0xB72B14", VA = "0xB72B14")]
		private void StampHole(Vector3 position, HoleShape shape, float sizeX, float sizeZ)
		{
		}

		[Token(Token = "0x6000A5D")]
		[Address(RVA = "0xB73A24", Offset = "0xB73A24", VA = "0xB73A24")]
		public void Refresh()
		{
		}

		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0xB73AE0", Offset = "0xB73AE0", VA = "0xB73AE0")]
		public FogOfWarHole()
		{
		}
	}
	[Token(Token = "0x200012C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7F6668", Offset = "0x7F6668")]
	public class FogVolume : MonoBehaviour
	{
		[Token(Token = "0x4001358")]
		private const float GRAY = 0.8901961f;

		[Token(Token = "0x4001359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FE9A8", Offset = "0x7FE9A8")]
		public bool enableProfileTransition;

		[Token(Token = "0x400135A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FE9E0", Offset = "0x7FE9E0")]
		public VolumetricFogProfile targetProfile;

		[Token(Token = "0x400135B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FEA18", Offset = "0x7FEA18")]
		public bool enableAlphaTransition;

		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FEA50", Offset = "0x7FEA50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FEA50", Offset = "0x7FEA50")]
		public float targetFogAlpha;

		[Token(Token = "0x400135D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FEAA4", Offset = "0x7FEAA4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FEAA4", Offset = "0x7FEAA4")]
		public float targetSkyHazeAlpha;

		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FEAF8", Offset = "0x7FEAF8")]
		public bool enableFogColorTransition;

		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FEB30", Offset = "0x7FEB30")]
		public Color targetFogColor;

		[Token(Token = "0x4001360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FEB68", Offset = "0x7FEB68")]
		public bool enableFogSpecularColorTransition;

		[Token(Token = "0x4001361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FEBA0", Offset = "0x7FEBA0")]
		public Color targetFogSpecularColor;

		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FEBD8", Offset = "0x7FEBD8")]
		public bool enableLightColorTransition;

		[Token(Token = "0x4001363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FEC10", Offset = "0x7FEC10")]
		public Color targetLightColor;

		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FEC48", Offset = "0x7FEC48")]
		public float transitionDuration;

		[Token(Token = "0x4001365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FEC80", Offset = "0x7FEC80")]
		public Collider targetCollider;

		[Token(Token = "0x4001366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FECB8", Offset = "0x7FECB8")]
		public bool debugMode;

		[Token(Token = "0x4001367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7FECF0", Offset = "0x7FECF0")]
		public VolumetricFog targetFog;

		[Token(Token = "0x4001368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool cameraInside;

		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0xB73B64", Offset = "0xB73B64", VA = "0xB73B64")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A60")]
		[Address(RVA = "0xB73C70", Offset = "0xB73C70", VA = "0xB73C70")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000A61")]
		[Address(RVA = "0xB7416C", Offset = "0xB7416C", VA = "0xB7416C")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000A62")]
		[Address(RVA = "0xB74504", Offset = "0xB74504", VA = "0xB74504")]
		public FogVolume()
		{
		}
	}
	[Token(Token = "0x200012D")]
	internal interface IVolumetricFogRenderComponent
	{
		[Token(Token = "0x17000096")]
		VolumetricFog fog
		{
			[Token(Token = "0x6000A63")]
			get;
			[Token(Token = "0x6000A64")]
			set;
		}

		[Token(Token = "0x6000A65")]
		void DestroySelf();
	}
	[Token(Token = "0x200012E")]
	[ExecuteInEditMode]
	public class ShadowMapCopy : MonoBehaviour
	{
		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Light m_Light;

		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CommandBuffer cb;

		[Token(Token = "0x6000A66")]
		[Address(RVA = "0xB745CC", Offset = "0xB745CC", VA = "0xB745CC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A67")]
		[Address(RVA = "0xB74758", Offset = "0xB74758", VA = "0xB74758")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A68")]
		[Address(RVA = "0xB747F4", Offset = "0xB747F4", VA = "0xB747F4")]
		public ShadowMapCopy()
		{
		}
	}
	[Token(Token = "0x200012F")]
	public enum FOG_PRESET
	{
		[Token(Token = "0x400136C")]
		Clear = 0,
		[Token(Token = "0x400136D")]
		Mist = 10,
		[Token(Token = "0x400136E")]
		WindyMist = 11,
		[Token(Token = "0x400136F")]
		LowClouds = 20,
		[Token(Token = "0x4001370")]
		SeaClouds = 21,
		[Token(Token = "0x4001371")]
		GroundFog = 30,
		[Token(Token = "0x4001372")]
		FrostedGround = 31,
		[Token(Token = "0x4001373")]
		FoggyLake = 32,
		[Token(Token = "0x4001374")]
		Fog = 41,
		[Token(Token = "0x4001375")]
		HeavyFog = 42,
		[Token(Token = "0x4001376")]
		SandStorm1 = 50,
		[Token(Token = "0x4001377")]
		Smoke = 51,
		[Token(Token = "0x4001378")]
		ToxicSwamp = 52,
		[Token(Token = "0x4001379")]
		SandStorm2 = 53,
		[Token(Token = "0x400137A")]
		WorldEdge = 200,
		[Token(Token = "0x400137B")]
		Custom = 1000
	}
	[Token(Token = "0x2000130")]
	public enum SPSR_BEHAVIOUR
	{
		[Token(Token = "0x400137D")]
		AutoDetectInEditor,
		[Token(Token = "0x400137E")]
		ForcedOn,
		[Token(Token = "0x400137F")]
		ForcedOff
	}
	[Token(Token = "0x2000131")]
	public enum TRANSPARENT_MODE
	{
		[Token(Token = "0x4001381")]
		None,
		[Token(Token = "0x4001382")]
		Blend
	}
	[Token(Token = "0x2000132")]
	public enum COMPUTE_DEPTH_SCOPE
	{
		[Token(Token = "0x4001384")]
		OnlyTreeBillboards,
		[Token(Token = "0x4001385")]
		EverythingInLayer,
		[Token(Token = "0x4001386")]
		TreeBillboardsAndTransparentObjects
	}
	[Token(Token = "0x2000133")]
	public enum LIGHTING_MODEL
	{
		[Token(Token = "0x4001388")]
		Classic,
		[Token(Token = "0x4001389")]
		Natural,
		[Token(Token = "0x400138A")]
		SingleLight
	}
	[Token(Token = "0x2000134")]
	public enum SUN_SHADOWS_BAKE_MODE
	{
		[Token(Token = "0x400138C")]
		Realtime,
		[Token(Token = "0x400138D")]
		Discrete
	}
	[Token(Token = "0x2000135")]
	public enum FOG_VOID_TOPOLOGY
	{
		[Token(Token = "0x400138F")]
		Sphere,
		[Token(Token = "0x4001390")]
		Box
	}
	[Token(Token = "0x2000136")]
	public enum FOG_AREA_TOPOLOGY
	{
		[Token(Token = "0x4001392")]
		Sphere = 1,
		[Token(Token = "0x4001393")]
		Box
	}
	[Token(Token = "0x2000137")]
	public enum FOG_AREA_SORTING_MODE
	{
		[Token(Token = "0x4001395")]
		DistanceToCamera,
		[Token(Token = "0x4001396")]
		Altitude,
		[Token(Token = "0x4001397")]
		Fixed
	}
	[Token(Token = "0x2000138")]
	public enum FOG_AREA_FOLLOW_MODE
	{
		[Token(Token = "0x4001399")]
		FullXYZ,
		[Token(Token = "0x400139A")]
		RestrictToXZPlane
	}
	[Token(Token = "0x2000139")]
	public enum FOG_VISIBILITY_SCOPE
	{
		[Token(Token = "0x400139C")]
		Global,
		[Token(Token = "0x400139D")]
		Volume
	}
	[Token(Token = "0x200013A")]
	public struct FOG_TEMPORARY_PROPERTIES
	{
		[Token(Token = "0x400139E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Color color;

		[Token(Token = "0x400139F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float density;
	}
	[Token(Token = "0x200013B")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7F66B0", Offset = "0x7F66B0")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x7F66B0", Offset = "0x7F66B0")]
	public class VolumetricFog : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003DC")]
		public struct PointLightParams
		{
			[Token(Token = "0x4002604")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Light light;

			[Token(Token = "0x4002605")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[HideInInspector]
			public VolumetricFogLightParams lightParams;

			[Token(Token = "0x4002606")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float range;

			[Token(Token = "0x4002607")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float rangeMultiplier;

			[Token(Token = "0x4002608")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float intensity;

			[Token(Token = "0x4002609")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float intensityMultiplier;

			[Token(Token = "0x400260A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 position;

			[Token(Token = "0x400260B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Color color;
		}

		[Token(Token = "0x20003DD")]
		private struct FogOfWarTransition
		{
			[Token(Token = "0x400260C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool enabled;

			[Token(Token = "0x400260D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int x;

			[Token(Token = "0x400260E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int y;

			[Token(Token = "0x400260F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float startTime;

			[Token(Token = "0x4002610")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float startDelay;

			[Token(Token = "0x4002611")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float duration;

			[Token(Token = "0x4002612")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public byte initialAlpha;

			[Token(Token = "0x4002613")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
			public byte targetAlpha;
		}

		[Serializable]
		[Token(Token = "0x20003DE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9B78", Offset = "0x7F9B78")]
		private sealed class <>c
		{
			[Token(Token = "0x4002614")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002615")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<VolumetricFog> <>9__631_0;

			[Token(Token = "0x6001A23")]
			[Address(RVA = "0xB84C58", Offset = "0xB84C58", VA = "0xB84C58")]
			public <>c()
			{
			}

			[Token(Token = "0x6001A24")]
			[Address(RVA = "0xB84C60", Offset = "0xB84C60", VA = "0xB84C60")]
			internal int <Update>b__631_0(VolumetricFog x, VolumetricFog y)
			{
				return default(int);
			}
		}

		[Token(Token = "0x40013A0")]
		public const string SKW_FOG_DISTANCE_ON = "FOG_DISTANCE_ON";

		[Token(Token = "0x40013A1")]
		public const string SKW_LIGHT_SCATTERING = "FOG_SCATTERING_ON";

		[Token(Token = "0x40013A2")]
		public const string SKW_FOG_AREA_BOX = "FOG_AREA_BOX";

		[Token(Token = "0x40013A3")]
		public const string SKW_FOG_AREA_SPHERE = "FOG_AREA_SPHERE";

		[Token(Token = "0x40013A4")]
		public const string SKW_FOG_VOID_BOX = "FOG_VOID_BOX";

		[Token(Token = "0x40013A5")]
		public const string SKW_FOG_VOID_SPHERE = "FOG_VOID_SPHERE";

		[Token(Token = "0x40013A6")]
		public const string SKW_FOG_HAZE_ON = "FOG_HAZE_ON";

		[Token(Token = "0x40013A7")]
		public const string SKW_FOG_OF_WAR_ON = "FOG_OF_WAR_ON";

		[Token(Token = "0x40013A8")]
		public const string SKW_FOG_BLUR = "FOG_BLUR_ON";

		[Token(Token = "0x40013A9")]
		public const string SKW_SUN_SHADOWS = "FOG_SUN_SHADOWS_ON";

		[Token(Token = "0x40013AA")]
		public const string SKW_FOG_USE_XY_PLANE = "FOG_USE_XY_PLANE";

		[Token(Token = "0x40013AB")]
		public const string SKW_FOG_COMPUTE_DEPTH = "FOG_COMPUTE_DEPTH";

		[Token(Token = "0x40013AC")]
		public const string SKW_POINT_LIGHTS = "FOG_POINT_LIGHTS";

		[Token(Token = "0x40013AD")]
		private const string DEPTH_CAM_NAME = "VFMDepthCamera";

		[Token(Token = "0x40013AE")]
		private const string DEPTH_SUN_CAM_NAME = "VFMDepthSunCamera";

		[Token(Token = "0x40013AF")]
		private const string VFM_BUILD_FIRST_INSTALL = "VFMFirstInstall";

		[Token(Token = "0x40013B0")]
		private const string VFM_BUILD_HINT = "VFMBuildHint1041RC1";

		[Token(Token = "0x40013B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static VolumetricFog _fog;

		[Token(Token = "0x40013B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public bool isDirty;

		[Token(Token = "0x40013B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private FOG_PRESET _preset;

		[Token(Token = "0x40013B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private VolumetricFogProfile _profile;

		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool _profileSync;

		[Token(Token = "0x40013B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool _useFogVolumes;

		[Token(Token = "0x40013B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		[SerializeField]
		private bool _debugPass;

		[Token(Token = "0x40013B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		[SerializeField]
		private bool _showInSceneView;

		[Token(Token = "0x40013B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private TRANSPARENT_MODE _transparencyBlendMode;

		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FEDA8", Offset = "0x7FEDA8")]
		private float _transparencyBlendPower;

		[Token(Token = "0x40013BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private LayerMask _transparencyLayerMask;

		[Token(Token = "0x40013BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private FOG_VISIBILITY_SCOPE _visibilityScope;

		[Token(Token = "0x40013BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private Bounds _visibilityVolume;

		[Token(Token = "0x40013BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private LIGHTING_MODEL _lightingModel;

		[Token(Token = "0x40013BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private bool _enableMultipleCameras;

		[Token(Token = "0x40013C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		[SerializeField]
		private bool _computeDepth;

		[Token(Token = "0x40013C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private COMPUTE_DEPTH_SCOPE _computeDepthScope;

		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private float _transparencyCutOff;

		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private bool _renderBeforeTransparent;

		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _sun;

		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FEE88", Offset = "0x7FEE88")]
		private float _timeBetweenTextureUpdates;

		[Token(Token = "0x40013C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private bool _sunCopyColor;

		[Token(Token = "0x40013C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FEED8", Offset = "0x7FEED8")]
		private float _density;

		[Token(Token = "0x40013C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FEF18", Offset = "0x7FEF18")]
		private float _noiseStrength;

		[Token(Token = "0x40013C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FEF58", Offset = "0x7FEF58")]
		private float _noiseFinalMultiplier;

		[Token(Token = "0x40013CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FEF98", Offset = "0x7FEF98")]
		private float _noiseSparse;

		[Token(Token = "0x40013CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FEFDC", Offset = "0x7FEFDC")]
		private float _distance;

		[Token(Token = "0x40013CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		private float _maxFogLength;

		[Token(Token = "0x40013CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FF030", Offset = "0x7FF030")]
		private float _maxFogLengthFallOff;

		[Token(Token = "0x40013CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FF070", Offset = "0x7FF070")]
		private float _distanceFallOff;

		[Token(Token = "0x40013CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FF0B0", Offset = "0x7FF0B0")]
		private float _height;

		[Token(Token = "0x40013D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FF0F8", Offset = "0x7FF0F8")]
		private float _heightFallOff;

		[Token(Token = "0x40013D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private float _deepObscurance;

		[Token(Token = "0x40013D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		private float _baselineHeight;

		[Token(Token = "0x40013D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private bool _baselineRelativeToCamera;

		[Token(Token = "0x40013D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FF168", Offset = "0x7FF168")]
		private float _baselineRelativeToCameraDelay;

		[Token(Token = "0x40013D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private float _noiseScale;

		[Token(Token = "0x40013D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FF1B8", Offset = "0x7FF1B8")]
		private float _alpha;

		[Token(Token = "0x40013D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private Color _color;

		[Token(Token = "0x40013D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Color _specularColor;

		[Token(Token = "0x40013D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FF21C", Offset = "0x7FF21C")]
		private float _specularThreshold;

		[Token(Token = "0x40013DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FF25C", Offset = "0x7FF25C")]
		private float _specularIntensity;

		[Token(Token = "0x40013DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private Vector3 _lightDirection;

		[Token(Token = "0x40013DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		private float _lightIntensity;

		[Token(Token = "0x40013DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private Color _lightColor;

		[Token(Token = "0x40013DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FF2CC", Offset = "0x7FF2CC")]
		private int _updateTextureSpread;

		[Token(Token = "0x40013DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FF30C", Offset = "0x7FF30C")]
		private float _speed;

		[Token(Token = "0x40013E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private Vector3 _windDirection;

		[Token(Token = "0x40013E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[SerializeField]
		private bool _useRealTime;

		[Token(Token = "0x40013E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private Color _skyColor;

		[Token(Token = "0x40013E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private float _skyHaze;

		[Token(Token = "0x40013E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[SerializeField]
		private float _skyNoiseScale;

		[Token(Token = "0x40013E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FF39C", Offset = "0x7FF39C")]
		private float _skySpeed;

		[Token(Token = "0x40013E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FF3DC", Offset = "0x7FF3DC")]
		private float _skyNoiseStrength;

		[Token(Token = "0x40013E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FF41C", Offset = "0x7FF41C")]
		private float _skyAlpha;

		[Token(Token = "0x40013E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FF45C", Offset = "0x7FF45C")]
		private float _skyDepth;

		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private GameObject _character;

		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private FOG_VOID_TOPOLOGY _fogVoidTopology;

		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FF4C0", Offset = "0x7FF4C0")]
		private float _fogVoidFallOff;

		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private float _fogVoidRadius;

		[Token(Token = "0x40013ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		[SerializeField]
		private Vector3 _fogVoidPosition;

		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		private float _fogVoidDepth;

		[Token(Token = "0x40013EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		[SerializeField]
		private float _fogVoidHeight;

		[Token(Token = "0x40013F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private bool _fogVoidInverted;

		[Token(Token = "0x40013F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x169")]
		[SerializeField]
		private bool _fogAreaShowGizmos;

		[Token(Token = "0x40013F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		private GameObject _fogAreaCenter;

		[Token(Token = "0x40013F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FF570", Offset = "0x7FF570")]
		private float _fogAreaFallOff;

		[Token(Token = "0x40013F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		[SerializeField]
		private FOG_AREA_FOLLOW_MODE _fogAreaFollowMode;

		[Token(Token = "0x40013F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		private FOG_AREA_TOPOLOGY _fogAreaTopology;

		[Token(Token = "0x40013F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		[SerializeField]
		private float _fogAreaRadius;

		[Token(Token = "0x40013F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		private Vector3 _fogAreaPosition;

		[Token(Token = "0x40013F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		[SerializeField]
		private float _fogAreaDepth;

		[Token(Token = "0x40013F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		private float _fogAreaHeight;

		[Token(Token = "0x40013FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		[SerializeField]
		private FOG_AREA_SORTING_MODE _fogAreaSortingMode;

		[Token(Token = "0x40013FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[SerializeField]
		private int _fogAreaRenderOrder;

		[Token(Token = "0x40013FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public PointLightParams[] pointLightParams;

		[Token(Token = "0x40013FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[SerializeField]
		private bool pointLightDataMigrated;

		[Token(Token = "0x40013FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private Vector4[] pointLightColorBuffer;

		[Token(Token = "0x40013FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private Vector4[] pointLightPositionBuffer;

		[Token(Token = "0x4001400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[SerializeField]
		private GameObject[] _pointLights;

		[Token(Token = "0x4001401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[SerializeField]
		private float[] _pointLightRanges;

		[Token(Token = "0x4001402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[SerializeField]
		private float[] _pointLightIntensities;

		[Token(Token = "0x4001403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[SerializeField]
		private float[] _pointLightIntensitiesMultiplier;

		[Token(Token = "0x4001404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[SerializeField]
		private Vector3[] _pointLightPositions;

		[Token(Token = "0x4001405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[SerializeField]
		private Color[] _pointLightColors;

		[Token(Token = "0x4001406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[SerializeField]
		private bool _pointLightTrackingAuto;

		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		[SerializeField]
		private Transform _pointLightTrackingPivot;

		[Token(Token = "0x4001408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[SerializeField]
		private int _pointLightTrackingCount;

		[Token(Token = "0x4001409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FF6D4", Offset = "0x7FF6D4")]
		private float _pointLightTrackingCheckInterval;

		[Token(Token = "0x400140A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[SerializeField]
		private float _pointLightTrackingNewLightsCheckInterval;

		[Token(Token = "0x400140B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		[SerializeField]
		private float _pointLightInscattering;

		[Token(Token = "0x400140C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		[SerializeField]
		private float _pointLightIntensity;

		[Token(Token = "0x400140D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
		[SerializeField]
		private float _pointLightInsideAtten;

		[Token(Token = "0x400140E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FF754", Offset = "0x7FF754")]
		private int _downsampling;

		[Token(Token = "0x400140F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		[SerializeField]
		private bool _forceComposition;

		[Token(Token = "0x4001410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x225")]
		[SerializeField]
		private bool _edgeImprove;

		[Token(Token = "0x4001411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FF7B4", Offset = "0x7FF7B4")]
		private float _edgeThreshold;

		[Token(Token = "0x4001412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FF7FC", Offset = "0x7FF7FC")]
		private float _stepping;

		[Token(Token = "0x4001413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FF83C", Offset = "0x7FF83C")]
		private float _steppingNear;

		[Token(Token = "0x4001414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
		[SerializeField]
		private bool _dithering;

		[Token(Token = "0x4001415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FF890", Offset = "0x7FF890")]
		private float _ditherStrength;

		[Token(Token = "0x4001416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FF8D4", Offset = "0x7FF8D4")]
		private float _jitterStrength;

		[Token(Token = "0x4001417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		[SerializeField]
		private bool _lightScatteringEnabled;

		[Token(Token = "0x4001418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FF924", Offset = "0x7FF924")]
		private float _lightScatteringDiffusion;

		[Token(Token = "0x4001419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FF964", Offset = "0x7FF964")]
		private float _lightScatteringSpread;

		[Token(Token = "0x400141A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FF9A4", Offset = "0x7FF9A4")]
		private int _lightScatteringSamples;

		[Token(Token = "0x400141B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FF9E8", Offset = "0x7FF9E8")]
		private float _lightScatteringWeight;

		[Token(Token = "0x400141C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FFA2C", Offset = "0x7FFA2C")]
		private float _lightScatteringIllumination;

		[Token(Token = "0x400141D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FFA70", Offset = "0x7FFA70")]
		private float _lightScatteringDecay;

		[Token(Token = "0x400141E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FFAB8", Offset = "0x7FFAB8")]
		private float _lightScatteringExposure;

		[Token(Token = "0x400141F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FFAFC", Offset = "0x7FFAFC")]
		private float _lightScatteringJittering;

		[Token(Token = "0x4001420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FFB3C", Offset = "0x7FFB3C")]
		private int _lightScatteringBlurDownscale;

		[Token(Token = "0x4001421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		[SerializeField]
		private bool _fogBlur;

		[Token(Token = "0x4001422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FFB8C", Offset = "0x7FFB8C")]
		private float _fogBlurDepth;

		[Token(Token = "0x4001423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		[SerializeField]
		private bool _sunShadows;

		[Token(Token = "0x4001424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
		[SerializeField]
		private LayerMask _sunShadowsLayerMask;

		[Token(Token = "0x4001425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FFBEC", Offset = "0x7FFBEC")]
		private float _sunShadowsStrength;

		[Token(Token = "0x4001426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
		[SerializeField]
		private float _sunShadowsBias;

		[Token(Token = "0x4001427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FFC3C", Offset = "0x7FFC3C")]
		private float _sunShadowsJitterStrength;

		[Token(Token = "0x4001428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FFC7C", Offset = "0x7FFC7C")]
		private int _sunShadowsResolution;

		[Token(Token = "0x4001429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FFCBC", Offset = "0x7FFCBC")]
		private float _sunShadowsMaxDistance;

		[Token(Token = "0x400142A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
		[SerializeField]
		private SUN_SHADOWS_BAKE_MODE _sunShadowsBakeMode;

		[Token(Token = "0x400142B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		[SerializeField]
		private float _sunShadowsRefreshInterval;

		[Token(Token = "0x400142C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FFD24", Offset = "0x7FFD24")]
		private float _sunShadowsCancellation;

		[Token(Token = "0x400142D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FFD64", Offset = "0x7FFD64")]
		private float _turbulenceStrength;

		[Token(Token = "0x400142E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
		[SerializeField]
		private bool _useXYPlane;

		[Token(Token = "0x400142F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29D")]
		[SerializeField]
		private bool _useSinglePassStereoRenderingMatrix;

		[Token(Token = "0x4001430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		[SerializeField]
		private SPSR_BEHAVIOUR _spsrBehaviour;

		[Token(Token = "0x4001431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
		[SerializeField]
		private bool _reduceFlickerBigWorlds;

		[Token(Token = "0x4001432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A5")]
		[SerializeField]
		private bool _enableMask;

		[Token(Token = "0x4001433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		[SerializeField]
		private LayerMask _maskLayer;

		[Token(Token = "0x4001434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FFE04", Offset = "0x7FFE04")]
		private int _maskDownsampling;

		[Token(Token = "0x4001435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		public bool isRendering;

		[NonSerialized]
		[Token(Token = "0x4001436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B4")]
		public float distanceToCameraMin;

		[NonSerialized]
		[Token(Token = "0x4001437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		public float distanceToCameraMax;

		[NonSerialized]
		[Token(Token = "0x4001438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
		public float distanceToCamera;

		[NonSerialized]
		[Token(Token = "0x4001439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		public float distanceToCameraYAxis;

		[NonSerialized]
		[Token(Token = "0x400143A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C4")]
		public FOG_TEMPORARY_PROPERTIES temporaryProperties;

		[Token(Token = "0x400143B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		public VolumetricFog fogRenderer;

		[Token(Token = "0x400143C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		private VolumetricFog[] allFogRenderers;

		[Token(Token = "0x400143D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		private bool isPartOfScene;

		[Token(Token = "0x400143E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
		private int noiseTextureSize;

		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		private float initialFogAlpha;

		[Token(Token = "0x4001440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F4")]
		private float targetFogAlpha;

		[Token(Token = "0x4001441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		private float initialSkyHazeAlpha;

		[Token(Token = "0x4001442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2FC")]
		private float targetSkyHazeAlpha;

		[Token(Token = "0x4001443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		private bool transitionAlpha;

		[Token(Token = "0x4001444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x301")]
		private bool transitionColor;

		[Token(Token = "0x4001445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x302")]
		private bool transitionSpecularColor;

		[Token(Token = "0x4001446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x303")]
		private bool transitionLightColor;

		[Token(Token = "0x4001447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x304")]
		private bool transitionProfile;

		[Token(Token = "0x4001448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x305")]
		private bool targetColorActive;

		[Token(Token = "0x4001449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x306")]
		private bool targetSpecularColorActive;

		[Token(Token = "0x400144A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x307")]
		private bool targetLightColorActive;

		[Token(Token = "0x400144B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		private Color initialFogColor;

		[Token(Token = "0x400144C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		private Color targetFogColor;

		[Token(Token = "0x400144D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		private Color initialFogSpecularColor;

		[Token(Token = "0x400144E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		private Color targetFogSpecularColor;

		[Token(Token = "0x400144F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		private Color initialLightColor;

		[Token(Token = "0x4001450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
		private Color targetLightColor;

		[Token(Token = "0x4001451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
		private float transitionDuration;

		[Token(Token = "0x4001452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36C")]
		private float transitionStartTime;

		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
		private float currentFogAlpha;

		[Token(Token = "0x4001454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x374")]
		private float currentSkyHazeAlpha;

		[Token(Token = "0x4001455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
		private Color currentFogColor;

		[Token(Token = "0x4001456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
		private Color currentFogSpecularColor;

		[Token(Token = "0x4001457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
		private Color currentLightColor;

		[Token(Token = "0x4001458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
		private VolumetricFogProfile initialProfile;

		[Token(Token = "0x4001459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
		private VolumetricFogProfile targetProfile;

		[Token(Token = "0x400145A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
		private float oldBaselineRelativeCameraY;

		[Token(Token = "0x400145B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3BC")]
		private float currentFogAltitude;

		[Token(Token = "0x400145C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
		private float skyHazeSpeedAcum;

		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C4")]
		private Color skyHazeLightColor;

		[Token(Token = "0x400145E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D4")]
		private bool _hasCamera;

		[Token(Token = "0x400145F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D5")]
		private bool _hasCameraChecked;

		[Token(Token = "0x4001460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
		private Camera mainCamera;

		[Token(Token = "0x4001461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
		private List<string> shaderKeywords;

		[Token(Token = "0x4001462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
		private Material blurMat;

		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
		private RenderBuffer[] mrt;

		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F8")]
		private int _renderingInstancesCount;

		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3FC")]
		private bool shouldUpdateMaterialProperties;

		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
		private int lastFrameCount;

		[NonSerialized]
		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x408")]
		public Material fogMat;

		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
		private RenderTexture depthTexture;

		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x418")]
		private RenderTexture depthSunTexture;

		[Token(Token = "0x400146A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
		private RenderTexture reducedDestination;

		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x428")]
		private Light[] lastFoundLights;

		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x430")]
		private Light[] lightBuffer;

		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x438")]
		private Light[] currentLights;

		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x440")]
		private float trackPointAutoLastTime;

		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x444")]
		private float trackPointCheckNewLightsLastTime;

		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x448")]
		private Vector4 black;

		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x458")]
		private Shader depthShader;

		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x460")]
		private Shader depthShaderAndTrans;

		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x468")]
		private GameObject depthCamObj;

		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x470")]
		private Camera depthCam;

		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x478")]
		private float lastTextureUpdate;

		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x47C")]
		private Vector3 windSpeedAcum;

		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x488")]
		private Texture2D adjustedTexture;

		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x490")]
		private Color[] noiseColors;

		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x498")]
		private Color[] adjustedColors;

		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A0")]
		private float sunLightIntensity;

		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A4")]
		private bool needUpdateTexture;

		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A5")]
		private bool hasChangeAdjustedColorsAlpha;

		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A8")]
		private int updatingTextureSlice;

		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4AC")]
		private Color updatingTextureLightColor;

		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4BC")]
		private Color lastRenderSettingsAmbientLight;

		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4CC")]
		private float lastRenderSettingsAmbientIntensity;

		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D0")]
		private int lastFrameAppliedChaos;

		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D4")]
		private int lastFrameAppliedWind;

		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D8")]
		private Light sunLight;

		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E0")]
		private Vector2 oldSunPos;

		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E8")]
		private float sunFade;

		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F0")]
		private GameObject depthSunCamObj;

		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F8")]
		private Camera depthSunCam;

		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x500")]
		private Shader depthSunShader;

		[NonSerialized]
		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x508")]
		public bool needUpdateDepthSunTexture;

		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50C")]
		private float lastShadowUpdateFrame;

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x510")]
		private bool sunShadowsActive;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x514")]
		private int currentDepthSunTextureRes;

		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x518")]
		private Matrix4x4 lightMatrix;

		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x558")]
		private Texture2D adjustedChaosTexture;

		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x560")]
		private Material chaosLerpMat;

		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x568")]
		private float turbAcum;

		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x56C")]
		private float deltaTime;

		[Token(Token = "0x4001492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x570")]
		private float timeOfLastRender;

		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x578")]
		private List<VolumetricFog> fogInstances;

		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x580")]
		private List<VolumetricFog> fogRenderInstances;

		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x588")]
		private MeshRenderer mr;

		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x590")]
		private float lastTimeSortInstances;

		[Token(Token = "0x4001497")]
		private const float FOG_INSTANCES_SORT_INTERVAL = 2f;

		[Token(Token = "0x4001498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x594")]
		private Vector3 lastCamPos;

		[Token(Token = "0x4001499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A0")]
		private bool needResort;

		[Token(Token = "0x400149A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A8")]
		private CommandBuffer maskCommandBuffer;

		[Token(Token = "0x400149B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B0")]
		private RenderTextureDescriptor rtMaskDesc;

		[Token(Token = "0x400149C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5E0")]
		private Material maskMaterial;

		[Token(Token = "0x400149D")]
		private const int MAX_SIMULTANEOUS_TRANSITIONS = 10000;

		[Token(Token = "0x400149E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5E8")]
		[SerializeField]
		private bool _fogOfWarEnabled;

		[Token(Token = "0x400149F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5EC")]
		[SerializeField]
		private Vector3 _fogOfWarCenter;

		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5F8")]
		[SerializeField]
		private Vector3 _fogOfWarSize;

		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x604")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FFE74", Offset = "0x7FFE74")]
		private int _fogOfWarTextureSize;

		[Token(Token = "0x40014A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x608")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FFEBC", Offset = "0x7FFEBC")]
		private float _fogOfWarRestoreDelay;

		[Token(Token = "0x40014A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FFF00", Offset = "0x7FFF00")]
		private float _fogOfWarRestoreDuration;

		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x610")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FFF40", Offset = "0x7FFF40")]
		private float _fogOfWarSmoothness;

		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x614")]
		[SerializeField]
		private bool _maskEditorEnabled;

		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x618")]
		[SerializeField]
		private MASK_TEXTURE_BRUSH_MODE _maskBrushMode;

		[Token(Token = "0x40014A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FFFA0", Offset = "0x7FFFA0")]
		private int _maskBrushWidth;

		[Token(Token = "0x40014A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x620")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7FFFE4", Offset = "0x7FFFE4")]
		private float _maskBrushFuzziness;

		[Token(Token = "0x40014A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x624")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x800024", Offset = "0x800024")]
		private float _maskBrushOpacity;

		[Token(Token = "0x40014AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x628")]
		[SerializeField]
		private Texture2D _fogOfWarTexture;

		[Token(Token = "0x40014AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x630")]
		private Color32[] fogOfWarColorBuffer;

		[Token(Token = "0x40014AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x638")]
		private FogOfWarTransition[] fowTransitionList;

		[Token(Token = "0x40014AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x640")]
		private int lastTransitionPos;

		[Token(Token = "0x40014AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x648")]
		private Dictionary<int, int> fowTransitionIndices;

		[Token(Token = "0x40014AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x650")]
		private bool requiresTextureUpload;

		[Token(Token = "0x40014B0")]
		public const int MAX_POINT_LIGHTS = 6;

		[Token(Token = "0x40014B1")]
		public const bool LIGHT_SCATTERING_BLUR_ENABLED = false;

		[Token(Token = "0x40014B2")]
		public const bool USE_UNITY_SHADOW_MAP = true;

		[Token(Token = "0x40014B3")]
		public const bool USE_DIRECTIONAL_LIGHT_COOKIE = false;

		[Token(Token = "0x40014B4")]
		public const bool LIGHT_DIFFUSION_ENABLED = true;

		[Token(Token = "0x17000097")]
		public static VolumetricFog instance
		{
			[Token(Token = "0x6000A69")]
			[Address(RVA = "0xB71B08", Offset = "0xB71B08", VA = "0xB71B08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000098")]
		public FOG_PRESET preset
		{
			[Token(Token = "0x6000A6A")]
			[Address(RVA = "0xB747FC", Offset = "0xB747FC", VA = "0xB747FC")]
			get
			{
				return default(FOG_PRESET);
			}
			[Token(Token = "0x6000A6B")]
			[Address(RVA = "0xB721A0", Offset = "0xB721A0", VA = "0xB721A0")]
			set
			{
			}
		}

		[Token(Token = "0x17000099")]
		public VolumetricFogProfile profile
		{
			[Token(Token = "0x6000A6C")]
			[Address(RVA = "0xB75D8C", Offset = "0xB75D8C", VA = "0xB75D8C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A6D")]
			[Address(RVA = "0xB75D94", Offset = "0xB75D94", VA = "0xB75D94")]
			set
			{
			}
		}

		[Token(Token = "0x1700009A")]
		public bool profileSync
		{
			[Token(Token = "0x6000A6E")]
			[Address(RVA = "0xB766C8", Offset = "0xB766C8", VA = "0xB766C8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A6F")]
			[Address(RVA = "0xB766D0", Offset = "0xB766D0", VA = "0xB766D0")]
			set
			{
			}
		}

		[Token(Token = "0x1700009B")]
		public bool useFogVolumes
		{
			[Token(Token = "0x6000A70")]
			[Address(RVA = "0xB766F8", Offset = "0xB766F8", VA = "0xB766F8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A71")]
			[Address(RVA = "0xB73C48", Offset = "0xB73C48", VA = "0xB73C48")]
			set
			{
			}
		}

		[Token(Token = "0x1700009C")]
		public bool debugDepthPass
		{
			[Token(Token = "0x6000A72")]
			[Address(RVA = "0xB76700", Offset = "0xB76700", VA = "0xB76700")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A73")]
			[Address(RVA = "0xB76708", Offset = "0xB76708", VA = "0xB76708")]
			set
			{
			}
		}

		[Token(Token = "0x1700009D")]
		public bool showInSceneView
		{
			[Token(Token = "0x6000A74")]
			[Address(RVA = "0xB76730", Offset = "0xB76730", VA = "0xB76730")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A75")]
			[Address(RVA = "0xB76738", Offset = "0xB76738", VA = "0xB76738")]
			set
			{
			}
		}

		[Token(Token = "0x1700009E")]
		public TRANSPARENT_MODE transparencyBlendMode
		{
			[Token(Token = "0x6000A76")]
			[Address(RVA = "0xB76760", Offset = "0xB76760", VA = "0xB76760")]
			get
			{
				return default(TRANSPARENT_MODE);
			}
			[Token(Token = "0x6000A77")]
			[Address(RVA = "0xB76768", Offset = "0xB76768", VA = "0xB76768")]
			set
			{
			}
		}

		[Token(Token = "0x1700009F")]
		public float transparencyBlendPower
		{
			[Token(Token = "0x6000A78")]
			[Address(RVA = "0xB768D4", Offset = "0xB768D4", VA = "0xB768D4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A79")]
			[Address(RVA = "0xB768DC", Offset = "0xB768DC", VA = "0xB768DC")]
			set
			{
			}
		}

		[Token(Token = "0x170000A0")]
		public LayerMask transparencyLayerMask
		{
			[Token(Token = "0x6000A7A")]
			[Address(RVA = "0xB7691C", Offset = "0xB7691C", VA = "0xB7691C")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6000A7B")]
			[Address(RVA = "0xB76924", Offset = "0xB76924", VA = "0xB76924")]
			set
			{
			}
		}

		[Token(Token = "0x170000A1")]
		public FOG_VISIBILITY_SCOPE visibilityScope
		{
			[Token(Token = "0x6000A7C")]
			[Address(RVA = "0xB7697C", Offset = "0xB7697C", VA = "0xB7697C")]
			get
			{
				return default(FOG_VISIBILITY_SCOPE);
			}
			[Token(Token = "0x6000A7D")]
			[Address(RVA = "0xB76984", Offset = "0xB76984", VA = "0xB76984")]
			set
			{
			}
		}

		[Token(Token = "0x170000A2")]
		public Bounds visibilityVolume
		{
			[Token(Token = "0x6000A7E")]
			[Address(RVA = "0xB769A0", Offset = "0xB769A0", VA = "0xB769A0")]
			get
			{
				return default(Bounds);
			}
			[Token(Token = "0x6000A7F")]
			[Address(RVA = "0xB769B4", Offset = "0xB769B4", VA = "0xB769B4")]
			set
			{
			}
		}

		[Token(Token = "0x170000A3")]
		public LIGHTING_MODEL lightingModel
		{
			[Token(Token = "0x6000A80")]
			[Address(RVA = "0xB76A2C", Offset = "0xB76A2C", VA = "0xB76A2C")]
			get
			{
				return default(LIGHTING_MODEL);
			}
			[Token(Token = "0x6000A81")]
			[Address(RVA = "0xB76A34", Offset = "0xB76A34", VA = "0xB76A34")]
			set
			{
			}
		}

		[Token(Token = "0x170000A4")]
		public bool enableMultipleCameras
		{
			[Token(Token = "0x6000A82")]
			[Address(RVA = "0xB76EC8", Offset = "0xB76EC8", VA = "0xB76EC8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A83")]
			[Address(RVA = "0xB76ED0", Offset = "0xB76ED0", VA = "0xB76ED0")]
			set
			{
			}
		}

		[Token(Token = "0x170000A5")]
		public bool computeDepth
		{
			[Token(Token = "0x6000A84")]
			[Address(RVA = "0xB77070", Offset = "0xB77070", VA = "0xB77070")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A85")]
			[Address(RVA = "0xB77078", Offset = "0xB77078", VA = "0xB77078")]
			set
			{
			}
		}

		[Token(Token = "0x170000A6")]
		public COMPUTE_DEPTH_SCOPE computeDepthScope
		{
			[Token(Token = "0x6000A86")]
			[Address(RVA = "0xB770C4", Offset = "0xB770C4", VA = "0xB770C4")]
			get
			{
				return default(COMPUTE_DEPTH_SCOPE);
			}
			[Token(Token = "0x6000A87")]
			[Address(RVA = "0xB770CC", Offset = "0xB770CC", VA = "0xB770CC")]
			set
			{
			}
		}

		[Token(Token = "0x170000A7")]
		public float transparencyCutOff
		{
			[Token(Token = "0x6000A88")]
			[Address(RVA = "0xB77118", Offset = "0xB77118", VA = "0xB77118")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A89")]
			[Address(RVA = "0xB77120", Offset = "0xB77120", VA = "0xB77120")]
			set
			{
			}
		}

		[Token(Token = "0x170000A8")]
		public bool renderBeforeTransparent
		{
			[Token(Token = "0x6000A8A")]
			[Address(RVA = "0xB77160", Offset = "0xB77160", VA = "0xB77160")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A8B")]
			[Address(RVA = "0xB77168", Offset = "0xB77168", VA = "0xB77168")]
			set
			{
			}
		}

		[Token(Token = "0x170000A9")]
		public GameObject sun
		{
			[Token(Token = "0x6000A8C")]
			[Address(RVA = "0xB771C4", Offset = "0xB771C4", VA = "0xB771C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A8D")]
			[Address(RVA = "0xB771CC", Offset = "0xB771CC", VA = "0xB771CC")]
			set
			{
			}
		}

		[Token(Token = "0x170000AA")]
		public float timeBetweenTextureUpdates
		{
			[Token(Token = "0x6000A8E")]
			[Address(RVA = "0xB77358", Offset = "0xB77358", VA = "0xB77358")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A8F")]
			[Address(RVA = "0xB77360", Offset = "0xB77360", VA = "0xB77360")]
			set
			{
			}
		}

		[Token(Token = "0x170000AB")]
		public bool sunCopyColor
		{
			[Token(Token = "0x6000A90")]
			[Address(RVA = "0xB7737C", Offset = "0xB7737C", VA = "0xB7737C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A91")]
			[Address(RVA = "0xB77384", Offset = "0xB77384", VA = "0xB77384")]
			set
			{
			}
		}

		[Token(Token = "0x170000AC")]
		public float density
		{
			[Token(Token = "0x6000A92")]
			[Address(RVA = "0xB773D0", Offset = "0xB773D0", VA = "0xB773D0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A93")]
			[Address(RVA = "0xB773D8", Offset = "0xB773D8", VA = "0xB773D8")]
			set
			{
			}
		}

		[Token(Token = "0x170000AD")]
		public float noiseStrength
		{
			[Token(Token = "0x6000A94")]
			[Address(RVA = "0xB77574", Offset = "0xB77574", VA = "0xB77574")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A95")]
			[Address(RVA = "0xB7757C", Offset = "0xB7757C", VA = "0xB7757C")]
			set
			{
			}
		}

		[Token(Token = "0x170000AE")]
		public float noiseFinalMultiplier
		{
			[Token(Token = "0x6000A96")]
			[Address(RVA = "0xB775D4", Offset = "0xB775D4", VA = "0xB775D4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A97")]
			[Address(RVA = "0xB775DC", Offset = "0xB775DC", VA = "0xB775DC")]
			set
			{
			}
		}

		[Token(Token = "0x170000AF")]
		public float noiseSparse
		{
			[Token(Token = "0x6000A98")]
			[Address(RVA = "0xB77634", Offset = "0xB77634", VA = "0xB77634")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A99")]
			[Address(RVA = "0xB7763C", Offset = "0xB7763C", VA = "0xB7763C")]
			set
			{
			}
		}

		[Token(Token = "0x170000B0")]
		public float distance
		{
			[Token(Token = "0x6000A9A")]
			[Address(RVA = "0xB77694", Offset = "0xB77694", VA = "0xB77694")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A9B")]
			[Address(RVA = "0xB7769C", Offset = "0xB7769C", VA = "0xB7769C")]
			set
			{
			}
		}

		[Token(Token = "0x170000B1")]
		public float maxFogLength
		{
			[Token(Token = "0x6000A9C")]
			[Address(RVA = "0xB776E4", Offset = "0xB776E4", VA = "0xB776E4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A9D")]
			[Address(RVA = "0xB776EC", Offset = "0xB776EC", VA = "0xB776EC")]
			set
			{
			}
		}

		[Token(Token = "0x170000B2")]
		public float maxFogLengthFallOff
		{
			[Token(Token = "0x6000A9E")]
			[Address(RVA = "0xB7772C", Offset = "0xB7772C", VA = "0xB7772C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A9F")]
			[Address(RVA = "0xB77734", Offset = "0xB77734", VA = "0xB77734")]
			set
			{
			}
		}

		[Token(Token = "0x170000B3")]
		public float distanceFallOff
		{
			[Token(Token = "0x6000AA0")]
			[Address(RVA = "0xB77774", Offset = "0xB77774", VA = "0xB77774")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AA1")]
			[Address(RVA = "0xB7777C", Offset = "0xB7777C", VA = "0xB7777C")]
			set
			{
			}
		}

		[Token(Token = "0x170000B4")]
		public float height
		{
			[Token(Token = "0x6000AA2")]
			[Address(RVA = "0xB777C4", Offset = "0xB777C4", VA = "0xB777C4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AA3")]
			[Address(RVA = "0xB777CC", Offset = "0xB777CC", VA = "0xB777CC")]
			set
			{
			}
		}

		[Token(Token = "0x170000B5")]
		public float heightFallOff
		{
			[Token(Token = "0x6000AA4")]
			[Address(RVA = "0xB77878", Offset = "0xB77878", VA = "0xB77878")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AA5")]
			[Address(RVA = "0xB77880", Offset = "0xB77880", VA = "0xB77880")]
			set
			{
			}
		}

		[Token(Token = "0x170000B6")]
		public float deepObscurance
		{
			[Token(Token = "0x6000AA6")]
			[Address(RVA = "0xB77924", Offset = "0xB77924", VA = "0xB77924")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AA7")]
			[Address(RVA = "0xB7792C", Offset = "0xB7792C", VA = "0xB7792C")]
			set
			{
			}
		}

		[Token(Token = "0x170000B7")]
		public float baselineHeight
		{
			[Token(Token = "0x6000AA8")]
			[Address(RVA = "0xB779D8", Offset = "0xB779D8", VA = "0xB779D8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AA9")]
			[Address(RVA = "0xB727F8", Offset = "0xB727F8", VA = "0xB727F8")]
			set
			{
			}
		}

		[Token(Token = "0x170000B8")]
		public bool baselineRelativeToCamera
		{
			[Token(Token = "0x6000AAA")]
			[Address(RVA = "0xB779E0", Offset = "0xB779E0", VA = "0xB779E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000AAB")]
			[Address(RVA = "0xB779E8", Offset = "0xB779E8", VA = "0xB779E8")]
			set
			{
			}
		}

		[Token(Token = "0x170000B9")]
		public float baselineRelativeToCameraDelay
		{
			[Token(Token = "0x6000AAC")]
			[Address(RVA = "0xB77A3C", Offset = "0xB77A3C", VA = "0xB77A3C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AAD")]
			[Address(RVA = "0xB77A44", Offset = "0xB77A44", VA = "0xB77A44")]
			set
			{
			}
		}

		[Token(Token = "0x170000BA")]
		public float noiseScale
		{
			[Token(Token = "0x6000AAE")]
			[Address(RVA = "0xB77A84", Offset = "0xB77A84", VA = "0xB77A84")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AAF")]
			[Address(RVA = "0xB77A8C", Offset = "0xB77A8C", VA = "0xB77A8C")]
			set
			{
			}
		}

		[Token(Token = "0x170000BB")]
		public float alpha
		{
			[Token(Token = "0x6000AB0")]
			[Address(RVA = "0xB77AE4", Offset = "0xB77AE4", VA = "0xB77AE4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AB1")]
			[Address(RVA = "0xB77AEC", Offset = "0xB77AEC", VA = "0xB77AEC")]
			set
			{
			}
		}

		[Token(Token = "0x170000BC")]
		public Color color
		{
			[Token(Token = "0x6000AB2")]
			[Address(RVA = "0xB77B38", Offset = "0xB77B38", VA = "0xB77B38")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000AB3")]
			[Address(RVA = "0xB77B44", Offset = "0xB77B44", VA = "0xB77B44")]
			set
			{
			}
		}

		[Token(Token = "0x170000BD")]
		public Color specularColor
		{
			[Token(Token = "0x6000AB4")]
			[Address(RVA = "0xB77BC8", Offset = "0xB77BC8", VA = "0xB77BC8")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000AB5")]
			[Address(RVA = "0xB77BD4", Offset = "0xB77BD4", VA = "0xB77BD4")]
			set
			{
			}
		}

		[Token(Token = "0x170000BE")]
		public float specularThreshold
		{
			[Token(Token = "0x6000AB6")]
			[Address(RVA = "0xB77C60", Offset = "0xB77C60", VA = "0xB77C60")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AB7")]
			[Address(RVA = "0xB77C68", Offset = "0xB77C68", VA = "0xB77C68")]
			set
			{
			}
		}

		[Token(Token = "0x170000BF")]
		public float specularIntensity
		{
			[Token(Token = "0x6000AB8")]
			[Address(RVA = "0xB77CAC", Offset = "0xB77CAC", VA = "0xB77CAC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AB9")]
			[Address(RVA = "0xB77CB4", Offset = "0xB77CB4", VA = "0xB77CB4")]
			set
			{
			}
		}

		[Token(Token = "0x170000C0")]
		public Vector3 lightDirection
		{
			[Token(Token = "0x6000ABA")]
			[Address(RVA = "0xB77D04", Offset = "0xB77D04", VA = "0xB77D04")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000ABB")]
			[Address(RVA = "0xB77D10", Offset = "0xB77D10", VA = "0xB77D10")]
			set
			{
			}
		}

		[Token(Token = "0x170000C1")]
		public float lightIntensity
		{
			[Token(Token = "0x6000ABC")]
			[Address(RVA = "0xB77DEC", Offset = "0xB77DEC", VA = "0xB77DEC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000ABD")]
			[Address(RVA = "0xB77DF4", Offset = "0xB77DF4", VA = "0xB77DF4")]
			set
			{
			}
		}

		[Token(Token = "0x170000C2")]
		public Color lightColor
		{
			[Token(Token = "0x6000ABE")]
			[Address(RVA = "0xB77E44", Offset = "0xB77E44", VA = "0xB77E44")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000ABF")]
			[Address(RVA = "0xB77E50", Offset = "0xB77E50", VA = "0xB77E50")]
			set
			{
			}
		}

		[Token(Token = "0x170000C3")]
		public int updateTextureSpread
		{
			[Token(Token = "0x6000AC0")]
			[Address(RVA = "0xB77EDC", Offset = "0xB77EDC", VA = "0xB77EDC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000AC1")]
			[Address(RVA = "0xB77EE4", Offset = "0xB77EE4", VA = "0xB77EE4")]
			set
			{
			}
		}

		[Token(Token = "0x170000C4")]
		public float speed
		{
			[Token(Token = "0x6000AC2")]
			[Address(RVA = "0xB77F00", Offset = "0xB77F00", VA = "0xB77F00")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AC3")]
			[Address(RVA = "0xB77F08", Offset = "0xB77F08", VA = "0xB77F08")]
			set
			{
			}
		}

		[Token(Token = "0x170000C5")]
		public Vector3 windDirection
		{
			[Token(Token = "0x6000AC4")]
			[Address(RVA = "0xB781CC", Offset = "0xB781CC", VA = "0xB781CC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000AC5")]
			[Address(RVA = "0xB781DC", Offset = "0xB781DC", VA = "0xB781DC")]
			set
			{
			}
		}

		[Token(Token = "0x170000C6")]
		public bool useRealTime
		{
			[Token(Token = "0x6000AC6")]
			[Address(RVA = "0xB782DC", Offset = "0xB782DC", VA = "0xB782DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000AC7")]
			[Address(RVA = "0xB782E4", Offset = "0xB782E4", VA = "0xB782E4")]
			set
			{
			}
		}

		[Token(Token = "0x170000C7")]
		public Color skyColor
		{
			[Token(Token = "0x6000AC8")]
			[Address(RVA = "0xB7830C", Offset = "0xB7830C", VA = "0xB7830C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6000AC9")]
			[Address(RVA = "0xB78320", Offset = "0xB78320", VA = "0xB78320")]
			set
			{
			}
		}

		[Token(Token = "0x170000C8")]
		public float skyHaze
		{
			[Token(Token = "0x6000ACA")]
			[Address(RVA = "0xB783A4", Offset = "0xB783A4", VA = "0xB783A4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000ACB")]
			[Address(RVA = "0xB783AC", Offset = "0xB783AC", VA = "0xB783AC")]
			set
			{
			}
		}

		[Token(Token = "0x170000C9")]
		public float skyNoiseScale
		{
			[Token(Token = "0x6000ACC")]
			[Address(RVA = "0xB783FC", Offset = "0xB783FC", VA = "0xB783FC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000ACD")]
			[Address(RVA = "0xB78404", Offset = "0xB78404", VA = "0xB78404")]
			set
			{
			}
		}

		[Token(Token = "0x170000CA")]
		public float skySpeed
		{
			[Token(Token = "0x6000ACE")]
			[Address(RVA = "0xB78444", Offset = "0xB78444", VA = "0xB78444")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000ACF")]
			[Address(RVA = "0xB7844C", Offset = "0xB7844C", VA = "0xB7844C")]
			set
			{
			}
		}

		[Token(Token = "0x170000CB")]
		public float skyNoiseStrength
		{
			[Token(Token = "0x6000AD0")]
			[Address(RVA = "0xB78470", Offset = "0xB78470", VA = "0xB78470")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AD1")]
			[Address(RVA = "0xB78478", Offset = "0xB78478", VA = "0xB78478")]
			set
			{
			}
		}

		[Token(Token = "0x170000CC")]
		public float skyAlpha
		{
			[Token(Token = "0x6000AD2")]
			[Address(RVA = "0xB784C8", Offset = "0xB784C8", VA = "0xB784C8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AD3")]
			[Address(RVA = "0xB784D0", Offset = "0xB784D0", VA = "0xB784D0")]
			set
			{
			}
		}

		[Token(Token = "0x170000CD")]
		public float skyDepth
		{
			[Token(Token = "0x6000AD4")]
			[Address(RVA = "0xB78518", Offset = "0xB78518", VA = "0xB78518")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AD5")]
			[Address(RVA = "0xB78520", Offset = "0xB78520", VA = "0xB78520")]
			set
			{
			}
		}

		[Token(Token = "0x170000CE")]
		public GameObject character
		{
			[Token(Token = "0x6000AD6")]
			[Address(RVA = "0xB78568", Offset = "0xB78568", VA = "0xB78568")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AD7")]
			[Address(RVA = "0xB78570", Offset = "0xB78570", VA = "0xB78570")]
			set
			{
			}
		}

		[Token(Token = "0x170000CF")]
		public FOG_VOID_TOPOLOGY fogVoidTopology
		{
			[Token(Token = "0x6000AD8")]
			[Address(RVA = "0xB78600", Offset = "0xB78600", VA = "0xB78600")]
			get
			{
				return default(FOG_VOID_TOPOLOGY);
			}
			[Token(Token = "0x6000AD9")]
			[Address(RVA = "0xB78608", Offset = "0xB78608", VA = "0xB78608")]
			set
			{
			}
		}

		[Token(Token = "0x170000D0")]
		public float fogVoidFallOff
		{
			[Token(Token = "0x6000ADA")]
			[Address(RVA = "0xB78648", Offset = "0xB78648", VA = "0xB78648")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000ADB")]
			[Address(RVA = "0xB78650", Offset = "0xB78650", VA = "0xB78650")]
			set
			{
			}
		}

		[Token(Token = "0x170000D1")]
		public float fogVoidRadius
		{
			[Token(Token = "0x6000ADC")]
			[Address(RVA = "0xB78698", Offset = "0xB78698", VA = "0xB78698")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000ADD")]
			[Address(RVA = "0xB786A0", Offset = "0xB786A0", VA = "0xB786A0")]
			set
			{
			}
		}

		[Token(Token = "0x170000D2")]
		public Vector3 fogVoidPosition
		{
			[Token(Token = "0x6000ADE")]
			[Address(RVA = "0xB786E8", Offset = "0xB786E8", VA = "0xB786E8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000ADF")]
			[Address(RVA = "0xB786F8", Offset = "0xB786F8", VA = "0xB786F8")]
			set
			{
			}
		}

		[Token(Token = "0x170000D3")]
		public float fogVoidDepth
		{
			[Token(Token = "0x6000AE0")]
			[Address(RVA = "0xB787D4", Offset = "0xB787D4", VA = "0xB787D4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AE1")]
			[Address(RVA = "0xB787DC", Offset = "0xB787DC", VA = "0xB787DC")]
			set
			{
			}
		}

		[Token(Token = "0x170000D4")]
		public float fogVoidHeight
		{
			[Token(Token = "0x6000AE2")]
			[Address(RVA = "0xB78824", Offset = "0xB78824", VA = "0xB78824")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AE3")]
			[Address(RVA = "0xB7882C", Offset = "0xB7882C", VA = "0xB7882C")]
			set
			{
			}
		}

		[Token(Token = "0x170000D5")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x807278", Offset = "0x807278")]
		public bool fogVoidInverted
		{
			[Token(Token = "0x6000AE4")]
			[Address(RVA = "0xB78874", Offset = "0xB78874", VA = "0xB78874")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000AE5")]
			[Address(RVA = "0xB7887C", Offset = "0xB7887C", VA = "0xB7887C")]
			set
			{
			}
		}

		[Token(Token = "0x170000D6")]
		public bool fogAreaShowGizmos
		{
			[Token(Token = "0x6000AE6")]
			[Address(RVA = "0xB78888", Offset = "0xB78888", VA = "0xB78888")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000AE7")]
			[Address(RVA = "0xB78890", Offset = "0xB78890", VA = "0xB78890")]
			set
			{
			}
		}

		[Token(Token = "0x170000D7")]
		public GameObject fogAreaCenter
		{
			[Token(Token = "0x6000AE8")]
			[Address(RVA = "0xB788DC", Offset = "0xB788DC", VA = "0xB788DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AE9")]
			[Address(RVA = "0xB788E4", Offset = "0xB788E4", VA = "0xB788E4")]
			set
			{
			}
		}

		[Token(Token = "0x170000D8")]
		public float fogAreaFallOff
		{
			[Token(Token = "0x6000AEA")]
			[Address(RVA = "0xB78974", Offset = "0xB78974", VA = "0xB78974")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AEB")]
			[Address(RVA = "0xB7897C", Offset = "0xB7897C", VA = "0xB7897C")]
			set
			{
			}
		}

		[Token(Token = "0x170000D9")]
		public FOG_AREA_FOLLOW_MODE fogAreaFollowMode
		{
			[Token(Token = "0x6000AEC")]
			[Address(RVA = "0xB789BC", Offset = "0xB789BC", VA = "0xB789BC")]
			get
			{
				return default(FOG_AREA_FOLLOW_MODE);
			}
			[Token(Token = "0x6000AED")]
			[Address(RVA = "0xB789C4", Offset = "0xB789C4", VA = "0xB789C4")]
			set
			{
			}
		}

		[Token(Token = "0x170000DA")]
		public FOG_AREA_TOPOLOGY fogAreaTopology
		{
			[Token(Token = "0x6000AEE")]
			[Address(RVA = "0xB78A04", Offset = "0xB78A04", VA = "0xB78A04")]
			get
			{
				return default(FOG_AREA_TOPOLOGY);
			}
			[Token(Token = "0x6000AEF")]
			[Address(RVA = "0xB78A0C", Offset = "0xB78A0C", VA = "0xB78A0C")]
			set
			{
			}
		}

		[Token(Token = "0x170000DB")]
		public float fogAreaRadius
		{
			[Token(Token = "0x6000AF0")]
			[Address(RVA = "0xB78A4C", Offset = "0xB78A4C", VA = "0xB78A4C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AF1")]
			[Address(RVA = "0xB78A54", Offset = "0xB78A54", VA = "0xB78A54")]
			set
			{
			}
		}

		[Token(Token = "0x170000DC")]
		public Vector3 fogAreaPosition
		{
			[Token(Token = "0x6000AF2")]
			[Address(RVA = "0xB78A94", Offset = "0xB78A94", VA = "0xB78A94")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000AF3")]
			[Address(RVA = "0xB78AA4", Offset = "0xB78AA4", VA = "0xB78AA4")]
			set
			{
			}
		}

		[Token(Token = "0x170000DD")]
		public float fogAreaDepth
		{
			[Token(Token = "0x6000AF4")]
			[Address(RVA = "0xB78B78", Offset = "0xB78B78", VA = "0xB78B78")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AF5")]
			[Address(RVA = "0xB78B80", Offset = "0xB78B80", VA = "0xB78B80")]
			set
			{
			}
		}

		[Token(Token = "0x170000DE")]
		public float fogAreaHeight
		{
			[Token(Token = "0x6000AF6")]
			[Address(RVA = "0xB78BC0", Offset = "0xB78BC0", VA = "0xB78BC0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AF7")]
			[Address(RVA = "0xB78BC8", Offset = "0xB78BC8", VA = "0xB78BC8")]
			set
			{
			}
		}

		[Token(Token = "0x170000DF")]
		public FOG_AREA_SORTING_MODE fogAreaSortingMode
		{
			[Token(Token = "0x6000AF8")]
			[Address(RVA = "0xB78C08", Offset = "0xB78C08", VA = "0xB78C08")]
			get
			{
				return default(FOG_AREA_SORTING_MODE);
			}
			[Token(Token = "0x6000AF9")]
			[Address(RVA = "0xB78C10", Offset = "0xB78C10", VA = "0xB78C10")]
			set
			{
			}
		}

		[Token(Token = "0x170000E0")]
		public int fogAreaRenderOrder
		{
			[Token(Token = "0x6000AFA")]
			[Address(RVA = "0xB78C30", Offset = "0xB78C30", VA = "0xB78C30")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000AFB")]
			[Address(RVA = "0xB78C38", Offset = "0xB78C38", VA = "0xB78C38")]
			set
			{
			}
		}

		[Token(Token = "0x170000E1")]
		public bool pointLightTrackAuto
		{
			[Token(Token = "0x6000AFC")]
			[Address(RVA = "0xB78C58", Offset = "0xB78C58", VA = "0xB78C58")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000AFD")]
			[Address(RVA = "0xB78C60", Offset = "0xB78C60", VA = "0xB78C60")]
			set
			{
			}
		}

		[Token(Token = "0x170000E2")]
		public Transform pointLightTrackingPivot
		{
			[Token(Token = "0x6000AFE")]
			[Address(RVA = "0xB79010", Offset = "0xB79010", VA = "0xB79010")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AFF")]
			[Address(RVA = "0xB79018", Offset = "0xB79018", VA = "0xB79018")]
			set
			{
			}
		}

		[Token(Token = "0x170000E3")]
		public int pointLightTrackingCount
		{
			[Token(Token = "0x6000B00")]
			[Address(RVA = "0xB790B4", Offset = "0xB790B4", VA = "0xB790B4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000B01")]
			[Address(RVA = "0xB790BC", Offset = "0xB790BC", VA = "0xB790BC")]
			set
			{
			}
		}

		[Token(Token = "0x170000E4")]
		public float pointLightTrackingCheckInterval
		{
			[Token(Token = "0x6000B02")]
			[Address(RVA = "0xB79630", Offset = "0xB79630", VA = "0xB79630")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B03")]
			[Address(RVA = "0xB79638", Offset = "0xB79638", VA = "0xB79638")]
			set
			{
			}
		}

		[Token(Token = "0x170000E5")]
		public float pointLightTrackingNewLightsCheckInterval
		{
			[Token(Token = "0x6000B04")]
			[Address(RVA = "0xB79678", Offset = "0xB79678", VA = "0xB79678")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B05")]
			[Address(RVA = "0xB79680", Offset = "0xB79680", VA = "0xB79680")]
			set
			{
			}
		}

		[Token(Token = "0x170000E6")]
		public float pointLightInscattering
		{
			[Token(Token = "0x6000B06")]
			[Address(RVA = "0xB796C0", Offset = "0xB796C0", VA = "0xB796C0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B07")]
			[Address(RVA = "0xB796C8", Offset = "0xB796C8", VA = "0xB796C8")]
			set
			{
			}
		}

		[Token(Token = "0x170000E7")]
		public float pointLightIntensity
		{
			[Token(Token = "0x6000B08")]
			[Address(RVA = "0xB796E4", Offset = "0xB796E4", VA = "0xB796E4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B09")]
			[Address(RVA = "0xB796EC", Offset = "0xB796EC", VA = "0xB796EC")]
			set
			{
			}
		}

		[Token(Token = "0x170000E8")]
		public float pointLightInsideAtten
		{
			[Token(Token = "0x6000B0A")]
			[Address(RVA = "0xB79708", Offset = "0xB79708", VA = "0xB79708")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B0B")]
			[Address(RVA = "0xB79710", Offset = "0xB79710", VA = "0xB79710")]
			set
			{
			}
		}

		[Token(Token = "0x170000E9")]
		public int downsampling
		{
			[Token(Token = "0x6000B0C")]
			[Address(RVA = "0xB79750", Offset = "0xB79750", VA = "0xB79750")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000B0D")]
			[Address(RVA = "0xB79758", Offset = "0xB79758", VA = "0xB79758")]
			set
			{
			}
		}

		[Token(Token = "0x170000EA")]
		public bool forceComposition
		{
			[Token(Token = "0x6000B0E")]
			[Address(RVA = "0xB7977C", Offset = "0xB7977C", VA = "0xB7977C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B0F")]
			[Address(RVA = "0xB79784", Offset = "0xB79784", VA = "0xB79784")]
			set
			{
			}
		}

		[Token(Token = "0x170000EB")]
		public bool edgeImprove
		{
			[Token(Token = "0x6000B10")]
			[Address(RVA = "0xB797D8", Offset = "0xB797D8", VA = "0xB797D8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B11")]
			[Address(RVA = "0xB797E0", Offset = "0xB797E0", VA = "0xB797E0")]
			set
			{
			}
		}

		[Token(Token = "0x170000EC")]
		public float edgeThreshold
		{
			[Token(Token = "0x6000B12")]
			[Address(RVA = "0xB79834", Offset = "0xB79834", VA = "0xB79834")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B13")]
			[Address(RVA = "0xB7983C", Offset = "0xB7983C", VA = "0xB7983C")]
			set
			{
			}
		}

		[Token(Token = "0x170000ED")]
		public float stepping
		{
			[Token(Token = "0x6000B14")]
			[Address(RVA = "0xB79884", Offset = "0xB79884", VA = "0xB79884")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B15")]
			[Address(RVA = "0xB7988C", Offset = "0xB7988C", VA = "0xB7988C")]
			set
			{
			}
		}

		[Token(Token = "0x170000EE")]
		public float steppingNear
		{
			[Token(Token = "0x6000B16")]
			[Address(RVA = "0xB798D4", Offset = "0xB798D4", VA = "0xB798D4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B17")]
			[Address(RVA = "0xB798DC", Offset = "0xB798DC", VA = "0xB798DC")]
			set
			{
			}
		}

		[Token(Token = "0x170000EF")]
		public bool dithering
		{
			[Token(Token = "0x6000B18")]
			[Address(RVA = "0xB79924", Offset = "0xB79924", VA = "0xB79924")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B19")]
			[Address(RVA = "0xB7992C", Offset = "0xB7992C", VA = "0xB7992C")]
			set
			{
			}
		}

		[Token(Token = "0x170000F0")]
		public float ditherStrength
		{
			[Token(Token = "0x6000B1A")]
			[Address(RVA = "0xB79978", Offset = "0xB79978", VA = "0xB79978")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B1B")]
			[Address(RVA = "0xB79980", Offset = "0xB79980", VA = "0xB79980")]
			set
			{
			}
		}

		[Token(Token = "0x170000F1")]
		public float jitterStrength
		{
			[Token(Token = "0x6000B1C")]
			[Address(RVA = "0xB799C0", Offset = "0xB799C0", VA = "0xB799C0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B1D")]
			[Address(RVA = "0xB799C8", Offset = "0xB799C8", VA = "0xB799C8")]
			set
			{
			}
		}

		[Token(Token = "0x170000F2")]
		public bool lightScatteringEnabled
		{
			[Token(Token = "0x6000B1E")]
			[Address(RVA = "0xB79A08", Offset = "0xB79A08", VA = "0xB79A08")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B1F")]
			[Address(RVA = "0xB79A10", Offset = "0xB79A10", VA = "0xB79A10")]
			set
			{
			}
		}

		[Token(Token = "0x170000F3")]
		public float lightScatteringDiffusion
		{
			[Token(Token = "0x6000B20")]
			[Address(RVA = "0xB79A5C", Offset = "0xB79A5C", VA = "0xB79A5C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B21")]
			[Address(RVA = "0xB79A64", Offset = "0xB79A64", VA = "0xB79A64")]
			set
			{
			}
		}

		[Token(Token = "0x170000F4")]
		public float lightScatteringSpread
		{
			[Token(Token = "0x6000B22")]
			[Address(RVA = "0xB79AA4", Offset = "0xB79AA4", VA = "0xB79AA4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B23")]
			[Address(RVA = "0xB79AAC", Offset = "0xB79AAC", VA = "0xB79AAC")]
			set
			{
			}
		}

		[Token(Token = "0x170000F5")]
		public int lightScatteringSamples
		{
			[Token(Token = "0x6000B24")]
			[Address(RVA = "0xB79AEC", Offset = "0xB79AEC", VA = "0xB79AEC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000B25")]
			[Address(RVA = "0xB79AF4", Offset = "0xB79AF4", VA = "0xB79AF4")]
			set
			{
			}
		}

		[Token(Token = "0x170000F6")]
		public float lightScatteringWeight
		{
			[Token(Token = "0x6000B26")]
			[Address(RVA = "0xB79B34", Offset = "0xB79B34", VA = "0xB79B34")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B27")]
			[Address(RVA = "0xB79B3C", Offset = "0xB79B3C", VA = "0xB79B3C")]
			set
			{
			}
		}

		[Token(Token = "0x170000F7")]
		public float lightScatteringIllumination
		{
			[Token(Token = "0x6000B28")]
			[Address(RVA = "0xB79B7C", Offset = "0xB79B7C", VA = "0xB79B7C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B29")]
			[Address(RVA = "0xB79B84", Offset = "0xB79B84", VA = "0xB79B84")]
			set
			{
			}
		}

		[Token(Token = "0x170000F8")]
		public float lightScatteringDecay
		{
			[Token(Token = "0x6000B2A")]
			[Address(RVA = "0xB79BC4", Offset = "0xB79BC4", VA = "0xB79BC4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B2B")]
			[Address(RVA = "0xB79BCC", Offset = "0xB79BCC", VA = "0xB79BCC")]
			set
			{
			}
		}

		[Token(Token = "0x170000F9")]
		public float lightScatteringExposure
		{
			[Token(Token = "0x6000B2C")]
			[Address(RVA = "0xB79C0C", Offset = "0xB79C0C", VA = "0xB79C0C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B2D")]
			[Address(RVA = "0xB79C14", Offset = "0xB79C14", VA = "0xB79C14")]
			set
			{
			}
		}

		[Token(Token = "0x170000FA")]
		public float lightScatteringJittering
		{
			[Token(Token = "0x6000B2E")]
			[Address(RVA = "0xB79C54", Offset = "0xB79C54", VA = "0xB79C54")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B2F")]
			[Address(RVA = "0xB79C5C", Offset = "0xB79C5C", VA = "0xB79C5C")]
			set
			{
			}
		}

		[Token(Token = "0x170000FB")]
		public int lightScatteringBlurDownscale
		{
			[Token(Token = "0x6000B30")]
			[Address(RVA = "0xB79C9C", Offset = "0xB79C9C", VA = "0xB79C9C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000B31")]
			[Address(RVA = "0xB79CA4", Offset = "0xB79CA4", VA = "0xB79CA4")]
			set
			{
			}
		}

		[Token(Token = "0x170000FC")]
		public bool fogBlur
		{
			[Token(Token = "0x6000B32")]
			[Address(RVA = "0xB79CE4", Offset = "0xB79CE4", VA = "0xB79CE4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B33")]
			[Address(RVA = "0xB79CEC", Offset = "0xB79CEC", VA = "0xB79CEC")]
			set
			{
			}
		}

		[Token(Token = "0x170000FD")]
		public float fogBlurDepth
		{
			[Token(Token = "0x6000B34")]
			[Address(RVA = "0xB79D38", Offset = "0xB79D38", VA = "0xB79D38")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B35")]
			[Address(RVA = "0xB79D40", Offset = "0xB79D40", VA = "0xB79D40")]
			set
			{
			}
		}

		[Token(Token = "0x170000FE")]
		public bool sunShadows
		{
			[Token(Token = "0x6000B36")]
			[Address(RVA = "0xB79D80", Offset = "0xB79D80", VA = "0xB79D80")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B37")]
			[Address(RVA = "0xB79D88", Offset = "0xB79D88", VA = "0xB79D88")]
			set
			{
			}
		}

		[Token(Token = "0x170000FF")]
		public LayerMask sunShadowsLayerMask
		{
			[Token(Token = "0x6000B38")]
			[Address(RVA = "0xB79F38", Offset = "0xB79F38", VA = "0xB79F38")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6000B39")]
			[Address(RVA = "0xB79F40", Offset = "0xB79F40", VA = "0xB79F40")]
			set
			{
			}
		}

		[Token(Token = "0x17000100")]
		public float sunShadowsStrength
		{
			[Token(Token = "0x6000B3A")]
			[Address(RVA = "0xB79F98", Offset = "0xB79F98", VA = "0xB79F98")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B3B")]
			[Address(RVA = "0xB79FA0", Offset = "0xB79FA0", VA = "0xB79FA0")]
			set
			{
			}
		}

		[Token(Token = "0x17000101")]
		public float sunShadowsBias
		{
			[Token(Token = "0x6000B3C")]
			[Address(RVA = "0xB79FE0", Offset = "0xB79FE0", VA = "0xB79FE0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B3D")]
			[Address(RVA = "0xB79FE8", Offset = "0xB79FE8", VA = "0xB79FE8")]
			set
			{
			}
		}

		[Token(Token = "0x17000102")]
		public float sunShadowsJitterStrength
		{
			[Token(Token = "0x6000B3E")]
			[Address(RVA = "0xB7A02C", Offset = "0xB7A02C", VA = "0xB7A02C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B3F")]
			[Address(RVA = "0xB7A034", Offset = "0xB7A034", VA = "0xB7A034")]
			set
			{
			}
		}

		[Token(Token = "0x17000103")]
		public int sunShadowsResolution
		{
			[Token(Token = "0x6000B40")]
			[Address(RVA = "0xB7A074", Offset = "0xB7A074", VA = "0xB7A074")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000B41")]
			[Address(RVA = "0xB7A07C", Offset = "0xB7A07C", VA = "0xB7A07C")]
			set
			{
			}
		}

		[Token(Token = "0x17000104")]
		public float sunShadowsMaxDistance
		{
			[Token(Token = "0x6000B42")]
			[Address(RVA = "0xB7A0C8", Offset = "0xB7A0C8", VA = "0xB7A0C8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B43")]
			[Address(RVA = "0xB7A0D0", Offset = "0xB7A0D0", VA = "0xB7A0D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000105")]
		public SUN_SHADOWS_BAKE_MODE sunShadowsBakeMode
		{
			[Token(Token = "0x6000B44")]
			[Address(RVA = "0xB7A114", Offset = "0xB7A114", VA = "0xB7A114")]
			get
			{
				return default(SUN_SHADOWS_BAKE_MODE);
			}
			[Token(Token = "0x6000B45")]
			[Address(RVA = "0xB7A11C", Offset = "0xB7A11C", VA = "0xB7A11C")]
			set
			{
			}
		}

		[Token(Token = "0x17000106")]
		public float sunShadowsRefreshInterval
		{
			[Token(Token = "0x6000B46")]
			[Address(RVA = "0xB7A160", Offset = "0xB7A160", VA = "0xB7A160")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B47")]
			[Address(RVA = "0xB7A168", Offset = "0xB7A168", VA = "0xB7A168")]
			set
			{
			}
		}

		[Token(Token = "0x17000107")]
		public float sunShadowsCancellation
		{
			[Token(Token = "0x6000B48")]
			[Address(RVA = "0xB7A1A8", Offset = "0xB7A1A8", VA = "0xB7A1A8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B49")]
			[Address(RVA = "0xB7A1B0", Offset = "0xB7A1B0", VA = "0xB7A1B0")]
			set
			{
			}
		}

		[Token(Token = "0x17000108")]
		public float turbulenceStrength
		{
			[Token(Token = "0x6000B4A")]
			[Address(RVA = "0xB7A1F0", Offset = "0xB7A1F0", VA = "0xB7A1F0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B4B")]
			[Address(RVA = "0xB7A1F8", Offset = "0xB7A1F8", VA = "0xB7A1F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000109")]
		public bool useXYPlane
		{
			[Token(Token = "0x6000B4C")]
			[Address(RVA = "0xB7A248", Offset = "0xB7A248", VA = "0xB7A248")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B4D")]
			[Address(RVA = "0xB7A250", Offset = "0xB7A250", VA = "0xB7A250")]
			set
			{
			}
		}

		[Token(Token = "0x1700010A")]
		public bool useSinglePassStereoRenderingMatrix
		{
			[Token(Token = "0x6000B4E")]
			[Address(RVA = "0xB7A2AC", Offset = "0xB7A2AC", VA = "0xB7A2AC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B4F")]
			[Address(RVA = "0xB7A2B4", Offset = "0xB7A2B4", VA = "0xB7A2B4")]
			set
			{
			}
		}

		[Token(Token = "0x1700010B")]
		public SPSR_BEHAVIOUR spsrBehaviour
		{
			[Token(Token = "0x6000B50")]
			[Address(RVA = "0xB7A2DC", Offset = "0xB7A2DC", VA = "0xB7A2DC")]
			get
			{
				return default(SPSR_BEHAVIOUR);
			}
			[Token(Token = "0x6000B51")]
			[Address(RVA = "0xB7A2E4", Offset = "0xB7A2E4", VA = "0xB7A2E4")]
			set
			{
			}
		}

		[Token(Token = "0x1700010C")]
		public bool reduceFlickerBigWorlds
		{
			[Token(Token = "0x6000B52")]
			[Address(RVA = "0xB7A300", Offset = "0xB7A300", VA = "0xB7A300")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B53")]
			[Address(RVA = "0xB7A308", Offset = "0xB7A308", VA = "0xB7A308")]
			set
			{
			}
		}

		[Token(Token = "0x1700010D")]
		public bool enableMask
		{
			[Token(Token = "0x6000B54")]
			[Address(RVA = "0xB7A330", Offset = "0xB7A330", VA = "0xB7A330")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B55")]
			[Address(RVA = "0xB7A338", Offset = "0xB7A338", VA = "0xB7A338")]
			set
			{
			}
		}

		[Token(Token = "0x1700010E")]
		public LayerMask maskLayer
		{
			[Token(Token = "0x6000B56")]
			[Address(RVA = "0xB7A85C", Offset = "0xB7A85C", VA = "0xB7A85C")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6000B57")]
			[Address(RVA = "0xB7A864", Offset = "0xB7A864", VA = "0xB7A864")]
			set
			{
			}
		}

		[Token(Token = "0x1700010F")]
		public int maskDownsampling
		{
			[Token(Token = "0x6000B58")]
			[Address(RVA = "0xB7A8C8", Offset = "0xB7A8C8", VA = "0xB7A8C8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000B59")]
			[Address(RVA = "0xB7A8D0", Offset = "0xB7A8D0", VA = "0xB7A8D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000110")]
		public Camera fogCamera
		{
			[Token(Token = "0x6000B5A")]
			[Address(RVA = "0xB7A90C", Offset = "0xB7A90C", VA = "0xB7A90C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000111")]
		public int renderingInstancesCount
		{
			[Token(Token = "0x6000B5B")]
			[Address(RVA = "0xB7A914", Offset = "0xB7A914", VA = "0xB7A914")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000112")]
		public List<VolumetricFog> renderingInstances
		{
			[Token(Token = "0x6000B5C")]
			[Address(RVA = "0xB7A91C", Offset = "0xB7A91C", VA = "0xB7A91C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000113")]
		public List<VolumetricFog> instances
		{
			[Token(Token = "0x6000B5D")]
			[Address(RVA = "0xB7A924", Offset = "0xB7A924", VA = "0xB7A924")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000114")]
		public bool hasCamera
		{
			[Token(Token = "0x6000B5E")]
			[Address(RVA = "0xB7A92C", Offset = "0xB7A92C", VA = "0xB7A92C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000115")]
		public bool fogOfWarEnabled
		{
			[Token(Token = "0x6000BAC")]
			[Address(RVA = "0xB838B8", Offset = "0xB838B8", VA = "0xB838B8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BAD")]
			[Address(RVA = "0xB71CF0", Offset = "0xB71CF0", VA = "0xB71CF0")]
			set
			{
			}
		}

		[Token(Token = "0x17000116")]
		public Vector3 fogOfWarCenter
		{
			[Token(Token = "0x6000BAE")]
			[Address(RVA = "0xB838C0", Offset = "0xB838C0", VA = "0xB838C0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000BAF")]
			[Address(RVA = "0xB838D0", Offset = "0xB838D0", VA = "0xB838D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000117")]
		public Vector3 fogOfWarSize
		{
			[Token(Token = "0x6000BB0")]
			[Address(RVA = "0xB839A4", Offset = "0xB839A4", VA = "0xB839A4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000BB1")]
			[Address(RVA = "0xB839B4", Offset = "0xB839B4", VA = "0xB839B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000118")]
		public int fogOfWarTextureSize
		{
			[Token(Token = "0x6000BB2")]
			[Address(RVA = "0xB83A98", Offset = "0xB83A98", VA = "0xB83A98")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000BB3")]
			[Address(RVA = "0xB72380", Offset = "0xB72380", VA = "0xB72380")]
			set
			{
			}
		}

		[Token(Token = "0x17000119")]
		public float fogOfWarRestoreDelay
		{
			[Token(Token = "0x6000BB4")]
			[Address(RVA = "0xB83AA0", Offset = "0xB83AA0", VA = "0xB83AA0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BB5")]
			[Address(RVA = "0xB83AA8", Offset = "0xB83AA8", VA = "0xB83AA8")]
			set
			{
			}
		}

		[Token(Token = "0x1700011A")]
		public float fogOfWarRestoreDuration
		{
			[Token(Token = "0x6000BB6")]
			[Address(RVA = "0xB83AC4", Offset = "0xB83AC4", VA = "0xB83AC4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BB7")]
			[Address(RVA = "0xB83ACC", Offset = "0xB83ACC", VA = "0xB83ACC")]
			set
			{
			}
		}

		[Token(Token = "0x1700011B")]
		public float fogOfWarSmoothness
		{
			[Token(Token = "0x6000BB8")]
			[Address(RVA = "0xB83AE8", Offset = "0xB83AE8", VA = "0xB83AE8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BB9")]
			[Address(RVA = "0xB83AF0", Offset = "0xB83AF0", VA = "0xB83AF0")]
			set
			{
			}
		}

		[Token(Token = "0x1700011C")]
		public bool maskEditorEnabled
		{
			[Token(Token = "0x6000BBA")]
			[Address(RVA = "0xB83B0C", Offset = "0xB83B0C", VA = "0xB83B0C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BBB")]
			[Address(RVA = "0xB83B14", Offset = "0xB83B14", VA = "0xB83B14")]
			set
			{
			}
		}

		[Token(Token = "0x1700011D")]
		public MASK_TEXTURE_BRUSH_MODE maskBrushMode
		{
			[Token(Token = "0x6000BBC")]
			[Address(RVA = "0xB83B34", Offset = "0xB83B34", VA = "0xB83B34")]
			get
			{
				return default(MASK_TEXTURE_BRUSH_MODE);
			}
			[Token(Token = "0x6000BBD")]
			[Address(RVA = "0xB83B3C", Offset = "0xB83B3C", VA = "0xB83B3C")]
			set
			{
			}
		}

		[Token(Token = "0x1700011E")]
		public int maskBrushWidth
		{
			[Token(Token = "0x6000BBE")]
			[Address(RVA = "0xB83B50", Offset = "0xB83B50", VA = "0xB83B50")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000BBF")]
			[Address(RVA = "0xB83B58", Offset = "0xB83B58", VA = "0xB83B58")]
			set
			{
			}
		}

		[Token(Token = "0x1700011F")]
		public float maskBrushFuzziness
		{
			[Token(Token = "0x6000BC0")]
			[Address(RVA = "0xB83B6C", Offset = "0xB83B6C", VA = "0xB83B6C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BC1")]
			[Address(RVA = "0xB83B74", Offset = "0xB83B74", VA = "0xB83B74")]
			set
			{
			}
		}

		[Token(Token = "0x17000120")]
		public float maskBrushOpacity
		{
			[Token(Token = "0x6000BC2")]
			[Address(RVA = "0xB83B88", Offset = "0xB83B88", VA = "0xB83B88")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BC3")]
			[Address(RVA = "0xB83B90", Offset = "0xB83B90", VA = "0xB83B90")]
			set
			{
			}
		}

		[Token(Token = "0x17000121")]
		public Texture2D fogOfWarTexture
		{
			[Token(Token = "0x6000BC4")]
			[Address(RVA = "0xB83BA4", Offset = "0xB83BA4", VA = "0xB83BA4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BC5")]
			[Address(RVA = "0xB83BAC", Offset = "0xB83BAC", VA = "0xB83BAC")]
			set
			{
			}
		}

		[Token(Token = "0x17000122")]
		public Color32[] fogOfWarTextureData
		{
			[Token(Token = "0x6000BD6")]
			[Address(RVA = "0xB8423C", Offset = "0xB8423C", VA = "0xB8423C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BD7")]
			[Address(RVA = "0xB723D0", Offset = "0xB723D0", VA = "0xB723D0")]
			set
			{
			}
		}

		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0xB7A9E0", Offset = "0xB7A9E0", VA = "0xB7A9E0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0xB7B414", Offset = "0xB7B414", VA = "0xB7B414")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000B61")]
		[Address(RVA = "0xB7B5DC", Offset = "0xB7B5DC", VA = "0xB7B5DC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0xB7BAC8", Offset = "0xB7BAC8", VA = "0xB7BAC8")]
		public void DestroySelf()
		{
		}

		[Token(Token = "0x6000B63")]
		[Address(RVA = "0xB7BB58", Offset = "0xB7BB58", VA = "0xB7BB58")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B64")]
		[Address(RVA = "0xB7BBA4", Offset = "0xB7BBA4", VA = "0xB7BBA4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B65")]
		[Address(RVA = "0xB7E1C0", Offset = "0xB7E1C0", VA = "0xB7E1C0")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6000B66")]
		[Address(RVA = "0xB7EA9C", Offset = "0xB7EA9C", VA = "0xB7EA9C")]
		private void OnDidApplyAnimationProperties()
		{
		}

		[Token(Token = "0x6000B67")]
		[Address(RVA = "0xB7AE94", Offset = "0xB7AE94", VA = "0xB7AE94")]
		private void FindMainCamera()
		{
		}

		[Token(Token = "0x6000B68")]
		[Address(RVA = "0xB7AD90", Offset = "0xB7AD90", VA = "0xB7AD90")]
		private bool IsPartOfScene()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B69")]
		[Address(RVA = "0xB7AFBC", Offset = "0xB7AFBC", VA = "0xB7AFBC")]
		private void InitFogMaterial()
		{
		}

		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0xB767B0", Offset = "0xB767B0", VA = "0xB767B0")]
		private void UpdateRenderComponents()
		{
		}

		[Token(Token = "0x6000B6B")]
		private void DestroyRenderComponent<T>() where T : IVolumetricFogRenderComponent
		{
		}

		[Token(Token = "0x6000B6C")]
		private void AssignRenderComponent<T>() where T : Component, IVolumetricFogRenderComponent
		{
		}

		[Token(Token = "0x6000B6D")]
		[Address(RVA = "0xB7EC38", Offset = "0xB7EC38", VA = "0xB7EC38")]
		private void RegisterFogArea(VolumetricFog fog)
		{
		}

		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0xB7B9AC", Offset = "0xB7B9AC", VA = "0xB7B9AC")]
		private void UnregisterFogArea(VolumetricFog fog)
		{
		}

		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0xB7B1CC", Offset = "0xB7B1CC", VA = "0xB7B1CC")]
		private void RegisterWithRenderers()
		{
		}

		[Token(Token = "0x6000B70")]
		[Address(RVA = "0xB7B888", Offset = "0xB7B888", VA = "0xB7B888")]
		private void UnregisterWithRenderers()
		{
		}

		[Token(Token = "0x6000B71")]
		[Address(RVA = "0xB76F18", Offset = "0xB76F18", VA = "0xB76F18")]
		public void UpdateMultiCameraSetup()
		{
		}

		[Token(Token = "0x6000B72")]
		[Address(RVA = "0xB7ECD0", Offset = "0xB7ECD0", VA = "0xB7ECD0")]
		private void SetEnableMultipleCameras(bool state)
		{
		}

		[Token(Token = "0x6000B73")]
		[Address(RVA = "0xB7ECDC", Offset = "0xB7ECDC", VA = "0xB7ECDC")]
		internal void DoOnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000B74")]
		[Address(RVA = "0xB7FB50", Offset = "0xB7FB50", VA = "0xB7FB50")]
		internal void DoOnRenderImageInstance(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000B75")]
		[Address(RVA = "0xB8177C", Offset = "0xB8177C", VA = "0xB8177C")]
		private int GetScaledSize(int size, float factor)
		{
			return default(int);
		}

		[Token(Token = "0x6000B76")]
		[Address(RVA = "0xB7BA44", Offset = "0xB7BA44", VA = "0xB7BA44")]
		private void CleanUpDepthTexture()
		{
		}

		[Token(Token = "0x6000B77")]
		[Address(RVA = "0xB7E3E0", Offset = "0xB7E3E0", VA = "0xB7E3E0")]
		private void GetTransparentDepth()
		{
		}

		[Token(Token = "0x6000B78")]
		[Address(RVA = "0xB7E1BC", Offset = "0xB7E1BC", VA = "0xB7E1BC")]
		private void CastSunShadows()
		{
		}

		[Token(Token = "0x6000B79")]
		[Address(RVA = "0xB81A38", Offset = "0xB81A38", VA = "0xB81A38")]
		private void GetSunShadows()
		{
		}

		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0xB817A8", Offset = "0xB817A8", VA = "0xB817A8")]
		private void SetBlurTexture(RenderTexture source, RenderTextureDescriptor desc)
		{
		}

		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0xB79E88", Offset = "0xB79E88", VA = "0xB79E88")]
		private void DestroySunShadowsDependencies()
		{
		}

		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0xB79DF8", Offset = "0xB79DF8", VA = "0xB79DF8")]
		private void CleanUpTextureDepthSun()
		{
		}

		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0xB72210", Offset = "0xB72210", VA = "0xB72210")]
		public string GetCurrentPresetName()
		{
			return null;
		}

		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0xB74804", Offset = "0xB74804", VA = "0xB74804")]
		public void UpdatePreset()
		{
		}

		[Token(Token = "0x6000B7F")]
		[Address(RVA = "0xB82454", Offset = "0xB82454", VA = "0xB82454")]
		public void CheckWaterLevel(bool baseZero)
		{
		}

		[Token(Token = "0x6000B80")]
		[Address(RVA = "0xB826E0", Offset = "0xB826E0", VA = "0xB826E0")]
		public static Terrain GetActiveTerrain()
		{
			return null;
		}

		[Token(Token = "0x6000B81")]
		[Address(RVA = "0xB7D6FC", Offset = "0xB7D6FC", VA = "0xB7D6FC")]
		private void UpdateMaterialFogColor()
		{
		}

		[Token(Token = "0x6000B82")]
		[Address(RVA = "0xB7D794", Offset = "0xB7D794", VA = "0xB7D794")]
		private void UpdateMaterialHeights(Camera mainCamera)
		{
		}

		[Token(Token = "0x6000B83")]
		[Address(RVA = "0xB7688C", Offset = "0xB7688C", VA = "0xB7688C")]
		public void UpdateMaterialProperties(bool forceNow = false)
		{
		}

		[Token(Token = "0x6000B84")]
		[Address(RVA = "0xB7B1C4", Offset = "0xB7B1C4", VA = "0xB7B1C4")]
		public void UpdateMaterialPropertiesNow()
		{
		}

		[Token(Token = "0x6000B85")]
		[Address(RVA = "0xB7F1BC", Offset = "0xB7F1BC", VA = "0xB7F1BC")]
		private void UpdateMaterialPropertiesNow(Camera mainCamera)
		{
		}

		[Token(Token = "0x6000B86")]
		[Address(RVA = "0xB82B50", Offset = "0xB82B50", VA = "0xB82B50")]
		public void NotifyChangesToFogInstances()
		{
		}

		[Token(Token = "0x6000B87")]
		[Address(RVA = "0xB82268", Offset = "0xB82268", VA = "0xB82268")]
		private void UpdateSunShadowsData()
		{
		}

		[Token(Token = "0x6000B88")]
		[Address(RVA = "0xB829B0", Offset = "0xB829B0", VA = "0xB829B0")]
		private void SetupDirectionalLightCommandBuffer()
		{
		}

		[Token(Token = "0x6000B89")]
		[Address(RVA = "0xB7B4DC", Offset = "0xB7B4DC", VA = "0xB7B4DC")]
		private void RemoveDirectionalLightCommandBuffer()
		{
		}

		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0xB77F58", Offset = "0xB77F58", VA = "0xB77F58")]
		private void UpdateWindSpeedQuick()
		{
		}

		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0xB80E10", Offset = "0xB80E10", VA = "0xB80E10")]
		private void UpdateScatteringData(Camera mainCamera)
		{
		}

		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0xB77264", Offset = "0xB77264", VA = "0xB77264")]
		private void UpdateSun()
		{
		}

		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0xB7D610", Offset = "0xB7D610", VA = "0xB7D610")]
		private void UpdateSkyColor(float alpha)
		{
		}

		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0xB77430", Offset = "0xB77430", VA = "0xB77430")]
		private void UpdateTextureAlpha()
		{
		}

		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0xB76A7C", Offset = "0xB76A7C", VA = "0xB76A7C")]
		private void UpdateTexture()
		{
		}

		[Token(Token = "0x6000B90")]
		[Address(RVA = "0xB7DA7C", Offset = "0xB7DA7C", VA = "0xB7DA7C")]
		private void UpdateTextureColors(Color[] colors, bool forceUpdateEntireTexture)
		{
		}

		[Token(Token = "0x6000B91")]
		[Address(RVA = "0xB7E7EC", Offset = "0xB7E7EC", VA = "0xB7E7EC")]
		internal void ApplyChaos()
		{
		}

		[Token(Token = "0x6000B92")]
		[Address(RVA = "0xB7EBD8", Offset = "0xB7EBD8", VA = "0xB7EBD8")]
		private void CopyTransitionValues()
		{
		}

		[Token(Token = "0x6000B93")]
		[Address(RVA = "0xB73F24", Offset = "0xB73F24", VA = "0xB73F24")]
		public void SetTargetProfile(VolumetricFogProfile targetProfile, float duration)
		{
		}

		[Token(Token = "0x6000B94")]
		[Address(RVA = "0xB743FC", Offset = "0xB743FC", VA = "0xB743FC")]
		public void ClearTargetProfile(float duration)
		{
		}

		[Token(Token = "0x6000B95")]
		[Address(RVA = "0xB73FC4", Offset = "0xB73FC4", VA = "0xB73FC4")]
		public void SetTargetAlpha(float newFogAlpha, float newSkyHazeAlpha, float duration)
		{
		}

		[Token(Token = "0x6000B96")]
		[Address(RVA = "0xB74404", Offset = "0xB74404", VA = "0xB74404")]
		public void ClearTargetAlpha(float duration)
		{
		}

		[Token(Token = "0x6000B97")]
		[Address(RVA = "0xB74018", Offset = "0xB74018", VA = "0xB74018")]
		public void SetTargetColor(Color newColor, float duration)
		{
		}

		[Token(Token = "0x6000B98")]
		[Address(RVA = "0xB7445C", Offset = "0xB7445C", VA = "0xB7445C")]
		public void ClearTargetColor(float duration)
		{
		}

		[Token(Token = "0x6000B99")]
		[Address(RVA = "0xB74088", Offset = "0xB74088", VA = "0xB74088")]
		public void SetTargetSpecularColor(Color newSpecularColor, float duration)
		{
		}

		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0xB74494", Offset = "0xB74494", VA = "0xB74494")]
		public void ClearTargetSpecularColor(float duration)
		{
		}

		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0xB740F8", Offset = "0xB740F8", VA = "0xB740F8")]
		public void SetTargetLightColor(Color newLightColor, float duration)
		{
		}

		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0xB744CC", Offset = "0xB744CC", VA = "0xB744CC")]
		public void ClearTargetLightColor(float duration)
		{
		}

		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0xB79168", Offset = "0xB79168", VA = "0xB79168")]
		public void CheckPointLightData()
		{
		}

		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0xB82EE0", Offset = "0xB82EE0", VA = "0xB82EE0")]
		private void PointLightDataSetDefaults(int k)
		{
		}

		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0xB8136C", Offset = "0xB8136C", VA = "0xB8136C")]
		private void SetPointLightMaterialProperties(Camera mainCamera)
		{
		}

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0xB83004", Offset = "0xB83004", VA = "0xB83004")]
		public Light GetPointLight(int index)
		{
			return null;
		}

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0xB8305C", Offset = "0xB8305C", VA = "0xB8305C")]
		private void TrackNewLights()
		{
		}

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0xB78CAC", Offset = "0xB78CAC", VA = "0xB78CAC")]
		public void TrackPointLights(bool forceImmediateUpdate = false)
		{
		}

		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0xB830D0", Offset = "0xB830D0", VA = "0xB830D0")]
		private Light GetNearestLight(Light[] lights)
		{
			return null;
		}

		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0xB832E8", Offset = "0xB832E8", VA = "0xB832E8")]
		public static VolumetricFog CreateFogArea(Vector3 position, float radius, float height = 16f, float fallOff = 1f)
		{
			return null;
		}

		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0xB83520", Offset = "0xB83520", VA = "0xB83520")]
		public static VolumetricFog CreateFogArea(Vector3 position, Vector3 boxSize)
		{
			return null;
		}

		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0xB833AC", Offset = "0xB833AC", VA = "0xB833AC")]
		private static VolumetricFog CreateFogAreaPlaceholder(bool spherical, Vector3 position, float radius, float height, float depth)
		{
			return null;
		}

		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0xB835EC", Offset = "0xB835EC", VA = "0xB835EC")]
		public static void RemoveAllFogAreas()
		{
		}

		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0xB80A58", Offset = "0xB80A58", VA = "0xB80A58")]
		private void CheckFogAreaDimensions()
		{
		}

		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0xB7A380", Offset = "0xB7A380", VA = "0xB7A380")]
		public void UpdateVolumeMask()
		{
		}

		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0xB83744", Offset = "0xB83744", VA = "0xB83744")]
		public void TogglePreviewMask()
		{
		}

		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0xB7B438", Offset = "0xB7B438", VA = "0xB7B438")]
		private void RemoveMaskCommandBuffer()
		{
		}

		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0xB7EAA8", Offset = "0xB7EAA8", VA = "0xB7EAA8")]
		private void FogOfWarInit()
		{
		}

		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0xB83CEC", Offset = "0xB83CEC", VA = "0xB83CEC")]
		public void ReloadFogOfWarTexture()
		{
		}

		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0xB8282C", Offset = "0xB8282C", VA = "0xB8282C")]
		private void FogOfWarUpdateTexture()
		{
		}

		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0xB7DF28", Offset = "0xB7DF28", VA = "0xB7DF28")]
		public void UpdateFogOfWar(bool forceUpload = false)
		{
		}

		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0xB721DC", Offset = "0xB721DC", VA = "0xB721DC")]
		public void SetFogOfWarAlpha(Vector3 worldPosition, float radius, float fogNewAlpha)
		{
		}

		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0xB840D8", Offset = "0xB840D8", VA = "0xB840D8")]
		public void SetFogOfWarAlpha(Vector3 worldPosition, float radius, float fogNewAlpha, float duration)
		{
		}

		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0xB84108", Offset = "0xB84108", VA = "0xB84108")]
		public void SetFogOfWarAlpha(Vector3 worldPosition, float radius, float fogNewAlpha, float duration, float smoothness)
		{
		}

		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0xB7369C", Offset = "0xB7369C", VA = "0xB7369C")]
		public void SetFogOfWarAlpha(Vector3 worldPosition, float radius, float fogNewAlpha, bool blendAlpha, float duration, float smoothness, float restoreDelay, float restoreDuration)
		{
		}

		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0xB84134", Offset = "0xB84134", VA = "0xB84134")]
		public void SetFogOfWarAlpha(Bounds bounds, float fogNewAlpha, float duration)
		{
		}

		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0xB84174", Offset = "0xB84174", VA = "0xB84174")]
		public void SetFogOfWarAlpha(Bounds bounds, float fogNewAlpha, float duration, float smoothness)
		{
		}

		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0xB732A0", Offset = "0xB732A0", VA = "0xB732A0")]
		public void SetFogOfWarAlpha(Bounds bounds, float fogNewAlpha, bool blendAlpha, float duration, float smoothness, float restoreDelay, float restoreDuration)
		{
		}

		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0xB7307C", Offset = "0xB7307C", VA = "0xB7307C")]
		public void ResetFogOfWarAlpha(Vector3 worldPosition, float radius)
		{
		}

		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0xB841B0", Offset = "0xB841B0", VA = "0xB841B0")]
		public void ResetFogOfWarAlpha(Bounds bounds)
		{
		}

		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0xB8422C", Offset = "0xB8422C", VA = "0xB8422C")]
		public void ResetFogOfWarAlpha(Vector3 position, Vector3 size)
		{
		}

		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0xB72E64", Offset = "0xB72E64", VA = "0xB72E64")]
		public void ResetFogOfWarAlpha(Vector3 position, float extentsX, float extentsZ)
		{
		}

		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0xB71D44", Offset = "0xB71D44", VA = "0xB71D44")]
		public void ResetFogOfWar(byte alpha = byte.MaxValue)
		{
		}

		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0xB83DE0", Offset = "0xB83DE0", VA = "0xB83DE0")]
		private void AddFogOfWarTransitionSlot(int x, int y, byte initialAlpha, byte targetAlpha, float delay, float duration)
		{
		}

		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0xB84244", Offset = "0xB84244", VA = "0xB84244")]
		public float GetFogOfWarAlpha(Vector3 worldPosition)
		{
			return default(float);
		}

		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0xB843F4", Offset = "0xB843F4", VA = "0xB843F4")]
		private void ShowFoWGizmo()
		{
		}

		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0xB844F8", Offset = "0xB844F8", VA = "0xB844F8")]
		public VolumetricFog()
		{
		}
	}
	[Token(Token = "0x200013C")]
	[ExecuteInEditMode]
	public class VolumetricFogDayCycleManager : MonoBehaviour
	{
		[Token(Token = "0x40014B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x800074", Offset = "0x800074")]
		public float currentTime;

		[Token(Token = "0x40014B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Gradient colorOverTime;

		[Token(Token = "0x40014B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve densityOverTime;

		[Token(Token = "0x40014B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int prevTime;

		[Token(Token = "0x40014B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private VolumetricFog[] fogs;

		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0xB84DCC", Offset = "0xB84DCC", VA = "0xB84DCC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0xB84FA4", Offset = "0xB84FA4", VA = "0xB84FA4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0xB851F8", Offset = "0xB851F8", VA = "0xB851F8")]
		private float GetCurrentTime()
		{
			return default(float);
		}

		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0xB85200", Offset = "0xB85200", VA = "0xB85200")]
		public VolumetricFogDayCycleManager()
		{
		}
	}
	[Token(Token = "0x200013D")]
	public enum MASK_TEXTURE_BRUSH_MODE
	{
		[Token(Token = "0x40014BB")]
		AddFog,
		[Token(Token = "0x40014BC")]
		RemoveFog
	}
	[Token(Token = "0x200013E")]
	public class VolumetricFogLightParams : MonoBehaviour
	{
		[Token(Token = "0x40014BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float rangeMultiplier;

		[Token(Token = "0x40014BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float intensityMultiplier;

		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0xB85208", Offset = "0xB85208", VA = "0xB85208")]
		public VolumetricFogLightParams()
		{
		}
	}
	[Token(Token = "0x200013F")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7F6730", Offset = "0x7F6730")]
	public class VolumetricFogMaterialIntegration : MonoBehaviour
	{
		[Token(Token = "0x20003DF")]
		private enum PropertyType
		{
			[Token(Token = "0x4002617")]
			Float,
			[Token(Token = "0x4002618")]
			Float3,
			[Token(Token = "0x4002619")]
			Float4,
			[Token(Token = "0x400261A")]
			Color,
			[Token(Token = "0x400261B")]
			Texture2D,
			[Token(Token = "0x400261C")]
			FloatArray,
			[Token(Token = "0x400261D")]
			Float4Array,
			[Token(Token = "0x400261E")]
			ColorArray,
			[Token(Token = "0x400261F")]
			Matrix4x4
		}

		[Token(Token = "0x20003E0")]
		private struct Properties
		{
			[Token(Token = "0x4002620")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string name;

			[Token(Token = "0x4002621")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public PropertyType type;
		}

		[Token(Token = "0x40014BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Properties[] props;

		[Token(Token = "0x40014C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string[] keywords;

		[Token(Token = "0x40014C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VolumetricFog fog;

		[Token(Token = "0x40014C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Renderer[] materials;

		[Token(Token = "0x6000BE1")]
		[Address(RVA = "0xB85218", Offset = "0xB85218", VA = "0xB85218")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0xB85270", Offset = "0xB85270", VA = "0xB85270")]
		private void OnPreRender()
		{
		}

		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0xB86340", Offset = "0xB86340", VA = "0xB86340")]
		public VolumetricFogMaterialIntegration()
		{
		}
	}
	[Token(Token = "0x2000140")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7F67A4", Offset = "0x7F67A4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7F67A4", Offset = "0x7F67A4")]
	[ImageEffectAllowedInSceneView]
	public class VolumetricFogPosT : MonoBehaviour, IVolumetricFogRenderComponent
	{
		[Token(Token = "0x40014C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x80008C", Offset = "0x80008C")]
		private VolumetricFog <fog>k__BackingField;

		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material copyOpaqueMat;

		[Token(Token = "0x17000123")]
		public VolumetricFog fog
		{
			[Token(Token = "0x6000BE5")]
			[Address(RVA = "0xB86924", Offset = "0xB86924", VA = "0xB86924", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8046F0", Offset = "0x8046F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BE6")]
			[Address(RVA = "0xB8692C", Offset = "0xB8692C", VA = "0xB8692C", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x804700", Offset = "0x804700")]
			set
			{
			}
		}

		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0xB86934", Offset = "0xB86934", VA = "0xB86934")]
		public void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0xB86BA4", Offset = "0xB86BA4", VA = "0xB86BA4", Slot = "6")]
		public void DestroySelf()
		{
		}

		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0xB86C0C", Offset = "0xB86C0C", VA = "0xB86C0C")]
		public VolumetricFogPosT()
		{
		}
	}
	[Token(Token = "0x2000141")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7F684C", Offset = "0x7F684C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7F684C", Offset = "0x7F684C")]
	[ImageEffectAllowedInSceneView]
	public class VolumetricFogPreT : MonoBehaviour, IVolumetricFogRenderComponent
	{
		[Token(Token = "0x40014C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x80009C", Offset = "0x80009C")]
		private VolumetricFog <fog>k__BackingField;

		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RenderTexture opaqueFrame;

		[Token(Token = "0x17000124")]
		public VolumetricFog fog
		{
			[Token(Token = "0x6000BEA")]
			[Address(RVA = "0xB86C14", Offset = "0xB86C14", VA = "0xB86C14", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x804710", Offset = "0x804710")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BEB")]
			[Address(RVA = "0xB86C1C", Offset = "0xB86C1C", VA = "0xB86C1C", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x804720", Offset = "0x804720")]
			set
			{
			}
		}

		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0xB86C24", Offset = "0xB86C24", VA = "0xB86C24")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000BED")]
		[Address(RVA = "0xB86DDC", Offset = "0xB86DDC", VA = "0xB86DDC")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0xB86E64", Offset = "0xB86E64", VA = "0xB86E64", Slot = "6")]
		public void DestroySelf()
		{
		}

		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0xB86ECC", Offset = "0xB86ECC", VA = "0xB86ECC")]
		public VolumetricFogPreT()
		{
		}
	}
	[Token(Token = "0x2000142")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7F68F4", Offset = "0x7F68F4")]
	public class VolumetricFogProfile : ScriptableObject
	{
		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LIGHTING_MODEL lightingModel;

		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool sunCopyColor;

		[Token(Token = "0x40014C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8000AC", Offset = "0x8000AC")]
		public float density;

		[Token(Token = "0x40014CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8000C4", Offset = "0x8000C4")]
		public float noiseStrength;

		[Token(Token = "0x40014CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8000DC", Offset = "0x8000DC")]
		public float height;

		[Token(Token = "0x40014CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8000F8", Offset = "0x8000F8")]
		public float heightFallOff;

		[Token(Token = "0x40014CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float baselineHeight;

		[Token(Token = "0x40014CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x800110", Offset = "0x800110")]
		public float distance;

		[Token(Token = "0x40014CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x80012C", Offset = "0x80012C")]
		public float distanceFallOff;

		[Token(Token = "0x40014D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float maxFogLength;

		[Token(Token = "0x40014D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x800144", Offset = "0x800144")]
		public float maxFogLengthFallOff;

		[Token(Token = "0x40014D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool baselineRelativeToCamera;

		[Token(Token = "0x40014D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x80015C", Offset = "0x80015C")]
		public float baselineRelativeToCameraDelay;

		[Token(Token = "0x40014D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x800174", Offset = "0x800174")]
		public float noiseScale;

		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x800190", Offset = "0x800190")]
		public float noiseSparse;

		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8001AC", Offset = "0x8001AC")]
		public float noiseFinalMultiplier;

		[Token(Token = "0x40014D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8001C4", Offset = "0x8001C4")]
		public float alpha;

		[Token(Token = "0x40014D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Color color;

		[Token(Token = "0x40014D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8001E0", Offset = "0x8001E0")]
		public float deepObscurance;

		[Token(Token = "0x40014DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Color specularColor;

		[Token(Token = "0x40014DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8001F8", Offset = "0x8001F8")]
		public float specularThreshold;

		[Token(Token = "0x40014DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x800210", Offset = "0x800210")]
		public float specularIntensity;

		[Token(Token = "0x40014DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Vector3 lightDirection;

		[Token(Token = "0x40014DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x800228", Offset = "0x800228")]
		public float lightIntensity;

		[Token(Token = "0x40014DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Color lightColor;

		[Token(Token = "0x40014E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x800240", Offset = "0x800240")]
		public float speed;

		[Token(Token = "0x40014E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public bool useRealTime;

		[Token(Token = "0x40014E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Vector3 windDirection;

		[Token(Token = "0x40014E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x800258", Offset = "0x800258")]
		public float turbulenceStrength;

		[Token(Token = "0x40014E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public bool useXYPlane;

		[Token(Token = "0x40014E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public Color skyColor;

		[Token(Token = "0x40014E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public float skyHaze;

		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x800270", Offset = "0x800270")]
		public float skySpeed;

		[Token(Token = "0x40014E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x800288", Offset = "0x800288")]
		public float skyNoiseStrength;

		[Token(Token = "0x40014E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public float skyNoiseScale;

		[Token(Token = "0x40014EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8002A0", Offset = "0x8002A0")]
		public float skyAlpha;

		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8002B8", Offset = "0x8002B8")]
		private float skyDepth;

		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public float stepping;

		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public float steppingNear;

		[Token(Token = "0x40014EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public bool dithering;

		[Token(Token = "0x40014EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public float ditherStrength;

		[Token(Token = "0x40014F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		public bool downsamplingOverride;

		[Token(Token = "0x40014F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8002FC", Offset = "0x8002FC")]
		public int downsampling;

		[Token(Token = "0x40014F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public bool forceComposition;

		[Token(Token = "0x40014F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x105")]
		public bool edgeImprove;

		[Token(Token = "0x40014F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x800314", Offset = "0x800314")]
		public float edgeThreshold;

		[Token(Token = "0x40014F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		public bool lightScatteringOverride;

		[Token(Token = "0x40014F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10D")]
		public bool lightScatteringEnabled;

		[Token(Token = "0x40014F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x800334", Offset = "0x800334")]
		public float lightScatteringDiffusion;

		[Token(Token = "0x40014F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x80034C", Offset = "0x80034C")]
		public float lightScatteringSpread;

		[Token(Token = "0x40014F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x800364", Offset = "0x800364")]
		public int lightScatteringSamples;

		[Token(Token = "0x40014FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x800380", Offset = "0x800380")]
		public float lightScatteringWeight;

		[Token(Token = "0x40014FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x80039C", Offset = "0x80039C")]
		public float lightScatteringIllumination;

		[Token(Token = "0x40014FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8003B8", Offset = "0x8003B8")]
		public float lightScatteringDecay;

		[Token(Token = "0x40014FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8003D8", Offset = "0x8003D8")]
		public float lightScatteringExposure;

		[Token(Token = "0x40014FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8003F4", Offset = "0x8003F4")]
		public float lightScatteringJittering;

		[Token(Token = "0x40014FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x80040C", Offset = "0x80040C")]
		public int lightScatteringBlurDownscale;

		[Token(Token = "0x4001500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		public bool fogVoidOverride;

		[Token(Token = "0x4001501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public FOG_VOID_TOPOLOGY fogVoidTopology;

		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x800424", Offset = "0x800424")]
		public float fogVoidFallOff;

		[Token(Token = "0x4001503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public float fogVoidRadius;

		[Token(Token = "0x4001504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		public Vector3 fogVoidPosition;

		[Token(Token = "0x4001505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public float fogVoidDepth;

		[Token(Token = "0x4001506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		public float fogVoidHeight;

		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0xB75E6C", Offset = "0xB75E6C", VA = "0xB75E6C")]
		public void Load(VolumetricFog fog)
		{
		}

		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0xB82C70", Offset = "0xB82C70", VA = "0xB82C70")]
		public void Save(VolumetricFog fog)
		{
		}

		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0xB7C96C", Offset = "0xB7C96C", VA = "0xB7C96C")]
		public static void Lerp(VolumetricFogProfile profile1, VolumetricFogProfile profile2, float t, VolumetricFog fog)
		{
		}

		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0xB86ED4", Offset = "0xB86ED4", VA = "0xB86ED4")]
		public VolumetricFogProfile()
		{
		}
	}
}
namespace UnderwaterShaders
{
	[Token(Token = "0x2000143")]
	[ExecuteInEditMode]
	public class UnderwaterManager : MonoBehaviour
	{
		[Token(Token = "0x4001507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x800464", Offset = "0x800464")]
		public float causticsTilingX;

		[Token(Token = "0x4001508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float causticsTilingY;

		[Token(Token = "0x4001509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float causticsOffsetX;

		[Token(Token = "0x400150A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float causticsOffsetY;

		[Token(Token = "0x400150B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float causticsSpeed;

		[Token(Token = "0x400150C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float causticsBoost;

		[Token(Token = "0x400150D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float causticsIntensityA;

		[Token(Token = "0x400150E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float causticsIntensityB;

		[Token(Token = "0x400150F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float causticsPositionA;

		[Token(Token = "0x4001510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float causticsPositionB;

		[Token(Token = "0x4001511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color fogColorA;

		[Token(Token = "0x4001512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Color fogColorB;

		[Token(Token = "0x4001513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float fogIntensityA;

		[Token(Token = "0x4001514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float fogIntensityB;

		[Token(Token = "0x4001515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float fogPositionA;

		[Token(Token = "0x4001516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float fogPositionB;

		[Token(Token = "0x4001517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float fogStart;

		[Token(Token = "0x4001518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float fogEnd;

		[Token(Token = "0x4001519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Material[] materials;

		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0xA0DA3C", Offset = "0xA0DA3C", VA = "0xA0DA3C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0xA0DD64", Offset = "0xA0DD64", VA = "0xA0DD64")]
		public UnderwaterManager()
		{
		}
	}
}
namespace UnderwaterShaderExample
{
	[Token(Token = "0x2000144")]
	public class CameraMotion : MonoBehaviour
	{
		[Token(Token = "0x400151A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float drift;

		[Token(Token = "0x400151B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform target;

		[Token(Token = "0x400151C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 _targetPosition;

		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0xA0D55C", Offset = "0xA0D55C", VA = "0xA0D55C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0xA0D5B0", Offset = "0xA0D5B0", VA = "0xA0D5B0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0xA0D69C", Offset = "0xA0D69C", VA = "0xA0D69C")]
		public CameraMotion()
		{
		}
	}
	[Token(Token = "0x2000145")]
	public class Fish : MonoBehaviour
	{
		[Token(Token = "0x400151D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool reverse;

		[Token(Token = "0x400151E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Animator pathAnimator;

		[Token(Token = "0x400151F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Animator fishAnimator;

		[Token(Token = "0x4001520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool use_anim;

		[Token(Token = "0x4001521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public NewRotateScript fishrot;

		[Token(Token = "0x4001522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Animation fishanim;

		[Token(Token = "0x4001523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _rand1;

		[Token(Token = "0x4001524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float _rand2;

		[Token(Token = "0x4001525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float zalsp;

		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0xA0D6AC", Offset = "0xA0D6AC", VA = "0xA0D6AC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0xA0D720", Offset = "0xA0D720", VA = "0xA0D720")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0xA0D890", Offset = "0xA0D890", VA = "0xA0D890")]
		public Fish()
		{
		}
	}
	[Token(Token = "0x2000146")]
	public class Plant : MonoBehaviour
	{
		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0xA0D8A0", Offset = "0xA0D8A0", VA = "0xA0D8A0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0xA0DA34", Offset = "0xA0DA34", VA = "0xA0DA34")]
		public Plant()
		{
		}
	}
}
namespace SkeletonEditor
{
	[Token(Token = "0x2000147")]
	public class PlayerController : MonoBehaviour
	{
		[Token(Token = "0x4001526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float mouseRotateSpeed;

		[Token(Token = "0x4001527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator animator;

		[Token(Token = "0x4001528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Quaternion initRotation;

		[Token(Token = "0x4001529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int currentAnimation;

		[Token(Token = "0x400152A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<string> animations;

		[Token(Token = "0x400152B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool startMouseRotate;

		[Token(Token = "0x400152C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 prevMousePosition;

		[Token(Token = "0x400152D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x80049C", Offset = "0x80049C")]
		private static PlayerController <Instance>k__BackingField;

		[Token(Token = "0x17000125")]
		public static PlayerController Instance
		{
			[Token(Token = "0x6000BFE")]
			[Address(RVA = "0xA5CE30", Offset = "0xA5CE30", VA = "0xA5CE30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x804740", Offset = "0x804740")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BFF")]
			[Address(RVA = "0xA5CE80", Offset = "0xA5CE80", VA = "0xA5CE80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x804750", Offset = "0x804750")]
			private set
			{
			}
		}

		[Token(Token = "0x6000C00")]
		[Address(RVA = "0xA5CED4", Offset = "0xA5CED4", VA = "0xA5CED4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0xA5CFF0", Offset = "0xA5CFF0", VA = "0xA5CFF0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0xA5D0F8", Offset = "0xA5D0F8", VA = "0xA5D0F8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0xA5D6A8", Offset = "0xA5D6A8", VA = "0xA5D6A8")]
		public PlayerController()
		{
		}
	}
}
namespace SimpleDiskUtils
{
	[Token(Token = "0x2000148")]
	public class DiskUtils
	{
		[Token(Token = "0x6000C04")]
		[Address(RVA = "0xA55ADC", Offset = "0xA55ADC", VA = "0xA55ADC")]
		public static int CheckAvailableSpace(bool isExternalStorage = true)
		{
			return default(int);
		}

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0xA55BF0", Offset = "0xA55BF0", VA = "0xA55BF0")]
		public static int CheckTotalSpace(bool isExternalStorage = true)
		{
			return default(int);
		}

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0xA55D04", Offset = "0xA55D04", VA = "0xA55D04")]
		public static int CheckBusySpace(bool isExternalStorage = true)
		{
			return default(int);
		}

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0xA55E18", Offset = "0xA55E18", VA = "0xA55E18")]
		public static void DeleteFile(string filePath)
		{
		}

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0xA55E54", Offset = "0xA55E54", VA = "0xA55E54")]
		public static void SaveFile(object obj, string filePath)
		{
		}

		[Token(Token = "0x6000C09")]
		[Address(RVA = "0xA55F98", Offset = "0xA55F98", VA = "0xA55F98")]
		public static void SaveFile(object obj, string dirPath, string fileName)
		{
		}

		[Token(Token = "0x6000C0A")]
		public static T LoadFile<T>(string filePath)
		{
			return (T)null;
		}

		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0xA562DC", Offset = "0xA562DC", VA = "0xA562DC")]
		public static void SaveTextFile(string str, string filePath)
		{
		}

		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0xA563AC", Offset = "0xA563AC", VA = "0xA563AC")]
		public static void SaveTextFile(string str, string dirPath, string fileName)
		{
		}

		[Token(Token = "0x6000C0D")]
		public static string LoadTextFile<T>(string filePath)
		{
			return null;
		}

		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0xA560FC", Offset = "0xA560FC", VA = "0xA560FC")]
		public static byte[] ObjectToByteArray(object obj)
		{
			return null;
		}

		[Token(Token = "0x6000C0F")]
		public static T ByteArrayToObject<T>(byte[] bytes)
		{
			return (T)null;
		}

		[Token(Token = "0x6000C10")]
		[Address(RVA = "0xA564D0", Offset = "0xA564D0", VA = "0xA564D0")]
		public DiskUtils()
		{
		}
	}
}
namespace ICSharpCode.SharpZipLib
{
	[Serializable]
	[Token(Token = "0x2000149")]
	public class SharpZipBaseException : Exception
	{
		[Token(Token = "0x6000C11")]
		[Address(RVA = "0xA76CB4", Offset = "0xA76CB4", VA = "0xA76CB4")]
		public SharpZipBaseException()
		{
		}

		[Token(Token = "0x6000C12")]
		[Address(RVA = "0xA72F58", Offset = "0xA72F58", VA = "0xA72F58")]
		public SharpZipBaseException(string message)
		{
		}

		[Token(Token = "0x6000C13")]
		[Address(RVA = "0xA72FD8", Offset = "0xA72FD8", VA = "0xA72FD8")]
		public SharpZipBaseException(string message, Exception innerException)
		{
		}

		[Token(Token = "0x6000C14")]
		[Address(RVA = "0xA7305C", Offset = "0xA7305C", VA = "0xA7305C")]
		protected SharpZipBaseException(SerializationInfo info, StreamingContext context)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200014A")]
	public class StreamDecodingException : SharpZipBaseException
	{
		[Token(Token = "0x400152E")]
		private const string GenericMessage = "Input stream could not be decoded";

		[Token(Token = "0x6000C15")]
		[Address(RVA = "0xA76D1C", Offset = "0xA76D1C", VA = "0xA76D1C")]
		public StreamDecodingException()
		{
		}

		[Token(Token = "0x6000C16")]
		[Address(RVA = "0xA76D6C", Offset = "0xA76D6C", VA = "0xA76D6C")]
		public StreamDecodingException(string message)
		{
		}

		[Token(Token = "0x6000C17")]
		[Address(RVA = "0xA76D70", Offset = "0xA76D70", VA = "0xA76D70")]
		public StreamDecodingException(string message, Exception innerException)
		{
		}

		[Token(Token = "0x6000C18")]
		[Address(RVA = "0xA76D74", Offset = "0xA76D74", VA = "0xA76D74")]
		protected StreamDecodingException(SerializationInfo info, StreamingContext context)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200014B")]
	public class StreamUnsupportedException : StreamDecodingException
	{
		[Token(Token = "0x400152F")]
		private const string GenericMessage = "Input stream is in a unsupported format";

		[Token(Token = "0x6000C19")]
		[Address(RVA = "0xA76D78", Offset = "0xA76D78", VA = "0xA76D78")]
		public StreamUnsupportedException()
		{
		}

		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0xA76DC8", Offset = "0xA76DC8", VA = "0xA76DC8")]
		public StreamUnsupportedException(string message)
		{
		}

		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0xA76DCC", Offset = "0xA76DCC", VA = "0xA76DCC")]
		public StreamUnsupportedException(string message, Exception innerException)
		{
		}

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0xA76DD0", Offset = "0xA76DD0", VA = "0xA76DD0")]
		protected StreamUnsupportedException(SerializationInfo info, StreamingContext context)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200014C")]
	public class UnexpectedEndOfStreamException : StreamDecodingException
	{
		[Token(Token = "0x4001530")]
		private const string GenericMessage = "Input stream ended unexpectedly";

		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0xA76DD4", Offset = "0xA76DD4", VA = "0xA76DD4")]
		public UnexpectedEndOfStreamException()
		{
		}

		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0xA76E24", Offset = "0xA76E24", VA = "0xA76E24")]
		public UnexpectedEndOfStreamException(string message)
		{
		}

		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0xA76E28", Offset = "0xA76E28", VA = "0xA76E28")]
		public UnexpectedEndOfStreamException(string message, Exception innerException)
		{
		}

		[Token(Token = "0x6000C20")]
		[Address(RVA = "0xA76E2C", Offset = "0xA76E2C", VA = "0xA76E2C")]
		protected UnexpectedEndOfStreamException(SerializationInfo info, StreamingContext context)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200014D")]
	public class ValueOutOfRangeException : StreamDecodingException
	{
		[Token(Token = "0x6000C21")]
		[Address(RVA = "0xA76E30", Offset = "0xA76E30", VA = "0xA76E30")]
		public ValueOutOfRangeException(string nameOfValue)
		{
		}

		[Token(Token = "0x6000C22")]
		[Address(RVA = "0xA76E9C", Offset = "0xA76E9C", VA = "0xA76E9C")]
		public ValueOutOfRangeException(string nameOfValue, long value, long maxValue, long minValue = 0L)
		{
		}

		[Token(Token = "0x6000C23")]
		[Address(RVA = "0xA76F18", Offset = "0xA76F18", VA = "0xA76F18")]
		public ValueOutOfRangeException(string nameOfValue, string value, string maxValue, string minValue = "0")
		{
		}

		[Token(Token = "0x6000C24")]
		[Address(RVA = "0xA770FC", Offset = "0xA770FC", VA = "0xA770FC")]
		private ValueOutOfRangeException()
		{
		}

		[Token(Token = "0x6000C25")]
		[Address(RVA = "0xA77100", Offset = "0xA77100", VA = "0xA77100")]
		private ValueOutOfRangeException(string message, Exception innerException)
		{
		}

		[Token(Token = "0x6000C26")]
		[Address(RVA = "0xA77104", Offset = "0xA77104", VA = "0xA77104")]
		protected ValueOutOfRangeException(SerializationInfo info, StreamingContext context)
		{
		}
	}
}
namespace ICSharpCode.SharpZipLib.Zip
{
	[Token(Token = "0x200014E")]
	public class FastZipEvents
	{
		[Token(Token = "0x4001532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ProcessFileHandler ProcessFile;

		[Token(Token = "0x4001533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ProgressHandler Progress;

		[Token(Token = "0x4001534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CompletedFileHandler CompletedFile;

		[Token(Token = "0x4001535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public DirectoryFailureHandler DirectoryFailure;

		[Token(Token = "0x4001536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FileFailureHandler FileFailure;

		[Token(Token = "0x4001537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TimeSpan progressInterval_;

		[Token(Token = "0x17000126")]
		public TimeSpan ProgressInterval
		{
			[Token(Token = "0x6000C2E")]
			[Address(RVA = "0x13907AC", Offset = "0x13907AC", VA = "0x13907AC")]
			get
			{
				return default(TimeSpan);
			}
			[Token(Token = "0x6000C2F")]
			[Address(RVA = "0x13907B4", Offset = "0x13907B4", VA = "0x13907B4")]
			set
			{
			}
		}

		[Token(Token = "0x14000020")]
		public event EventHandler<DirectoryEventArgs> ProcessDirectory
		{
			[Token(Token = "0x6000C27")]
			[Address(RVA = "0x1390664", Offset = "0x1390664", VA = "0x1390664")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x804760", Offset = "0x804760")]
			add
			{
			}
			[Token(Token = "0x6000C28")]
			[Address(RVA = "0x1390708", Offset = "0x1390708", VA = "0x1390708")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x804770", Offset = "0x804770")]
			remove
			{
			}
		}

		[Token(Token = "0x6000C29")]
		[Address(RVA = "0x1390494", Offset = "0x1390494", VA = "0x1390494")]
		public bool OnDirectoryFailure(string directory, Exception e)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0x138F788", Offset = "0x138F788", VA = "0x138F788")]
		public bool OnFileFailure(string file, Exception e)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0x13900AC", Offset = "0x13900AC", VA = "0x13900AC")]
		public bool OnProcessFile(string file)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0x138F840", Offset = "0x138F840", VA = "0x138F840")]
		public bool OnCompletedFile(string file)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0x138F2C8", Offset = "0x138F2C8", VA = "0x138F2C8")]
		public bool OnProcessDirectory(string directory, bool hasMatchingFiles)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C30")]
		[Address(RVA = "0x13907BC", Offset = "0x13907BC", VA = "0x13907BC")]
		public FastZipEvents()
		{
		}
	}
	[Token(Token = "0x200014F")]
	public class FastZip
	{
		[Token(Token = "0x20003E1")]
		public enum Overwrite
		{
			[Token(Token = "0x4002623")]
			Prompt,
			[Token(Token = "0x4002624")]
			Never,
			[Token(Token = "0x4002625")]
			Always
		}

		[Token(Token = "0x20003E2")]
		public delegate bool ConfirmOverwriteDelegate(string fileName);

		[Token(Token = "0x4001538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool continueRunning_;

		[Token(Token = "0x4001539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private byte[] buffer_;

		[Token(Token = "0x400153A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ZipOutputStream outputStream_;

		[Token(Token = "0x400153B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ZipFile zipFile_;

		[Token(Token = "0x400153C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string sourceDirectory_;

		[Token(Token = "0x400153D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private NameFilter fileFilter_;

		[Token(Token = "0x400153E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private NameFilter directoryFilter_;

		[Token(Token = "0x400153F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Overwrite overwrite_;

		[Token(Token = "0x4001540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ConfirmOverwriteDelegate confirmDelegate_;

		[Token(Token = "0x4001541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool restoreDateTimeOnExtract_;

		[Token(Token = "0x4001542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool restoreAttributesOnExtract_;

		[Token(Token = "0x4001543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		private bool createEmptyDirectories_;

		[Token(Token = "0x4001544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private FastZipEvents events_;

		[Token(Token = "0x4001545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private IEntryFactory entryFactory_;

		[Token(Token = "0x4001546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private INameTransform extractNameTransform_;

		[Token(Token = "0x4001547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private UseZip64 useZip64_;

		[Token(Token = "0x4001548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Deflater.CompressionLevel compressionLevel_;

		[Token(Token = "0x4001549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private string password_;

		[Token(Token = "0x17000127")]
		public bool CreateEmptyDirectories
		{
			[Token(Token = "0x6000C33")]
			[Address(RVA = "0x138DD04", Offset = "0x138DD04", VA = "0x138DD04")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C34")]
			[Address(RVA = "0x138DD0C", Offset = "0x138DD0C", VA = "0x138DD0C")]
			set
			{
			}
		}

		[Token(Token = "0x17000128")]
		public string Password
		{
			[Token(Token = "0x6000C35")]
			[Address(RVA = "0x138DD18", Offset = "0x138DD18", VA = "0x138DD18")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C36")]
			[Address(RVA = "0x138DD20", Offset = "0x138DD20", VA = "0x138DD20")]
			set
			{
			}
		}

		[Token(Token = "0x17000129")]
		public INameTransform NameTransform
		{
			[Token(Token = "0x6000C37")]
			[Address(RVA = "0x138DD28", Offset = "0x138DD28", VA = "0x138DD28")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C38")]
			[Address(RVA = "0x138DDE0", Offset = "0x138DDE0", VA = "0x138DDE0")]
			set
			{
			}
		}

		[Token(Token = "0x1700012A")]
		public IEntryFactory EntryFactory
		{
			[Token(Token = "0x6000C39")]
			[Address(RVA = "0x138DEA8", Offset = "0x138DEA8", VA = "0x138DEA8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C3A")]
			[Address(RVA = "0x138DEB0", Offset = "0x138DEB0", VA = "0x138DEB0")]
			set
			{
			}
		}

		[Token(Token = "0x1700012B")]
		public UseZip64 UseZip64
		{
			[Token(Token = "0x6000C3B")]
			[Address(RVA = "0x138DF1C", Offset = "0x138DF1C", VA = "0x138DF1C")]
			get
			{
				return default(UseZip64);
			}
			[Token(Token = "0x6000C3C")]
			[Address(RVA = "0x138DF24", Offset = "0x138DF24", VA = "0x138DF24")]
			set
			{
			}
		}

		[Token(Token = "0x1700012C")]
		public bool RestoreDateTimeOnExtract
		{
			[Token(Token = "0x6000C3D")]
			[Address(RVA = "0x138DF2C", Offset = "0x138DF2C", VA = "0x138DF2C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C3E")]
			[Address(RVA = "0x138DF34", Offset = "0x138DF34", VA = "0x138DF34")]
			set
			{
			}
		}

		[Token(Token = "0x1700012D")]
		public bool RestoreAttributesOnExtract
		{
			[Token(Token = "0x6000C3F")]
			[Address(RVA = "0x138DF40", Offset = "0x138DF40", VA = "0x138DF40")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C40")]
			[Address(RVA = "0x138DF48", Offset = "0x138DF48", VA = "0x138DF48")]
			set
			{
			}
		}

		[Token(Token = "0x1700012E")]
		public Deflater.CompressionLevel CompressionLevel
		{
			[Token(Token = "0x6000C41")]
			[Address(RVA = "0x138DF54", Offset = "0x138DF54", VA = "0x138DF54")]
			get
			{
				return default(Deflater.CompressionLevel);
			}
			[Token(Token = "0x6000C42")]
			[Address(RVA = "0x138DF5C", Offset = "0x138DF5C", VA = "0x138DF5C")]
			set
			{
			}
		}

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0x138DB40", Offset = "0x138DB40", VA = "0x138DB40")]
		public FastZip()
		{
		}

		[Token(Token = "0x6000C32")]
		[Address(RVA = "0x138DC80", Offset = "0x138DC80", VA = "0x138DC80")]
		public FastZip(FastZipEvents events)
		{
		}

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0x138DF64", Offset = "0x138DF64", VA = "0x138DF64")]
		public void CreateZip(string zipFileName, string sourceDirectory, bool recurse, string fileFilter, string directoryFilter)
		{
		}

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0x138E350", Offset = "0x138E350", VA = "0x138E350")]
		public void CreateZip(string zipFileName, string sourceDirectory, bool recurse, string fileFilter)
		{
		}

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0x138DFC4", Offset = "0x138DFC4", VA = "0x138DFC4")]
		public void CreateZip(Stream outputStream, string sourceDirectory, bool recurse, string fileFilter, string directoryFilter)
		{
		}

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0x138E3A4", Offset = "0x138E3A4", VA = "0x138E3A4")]
		public void ExtractZip(string zipFileName, string targetDirectory, string fileFilter)
		{
		}

		[Token(Token = "0x6000C47")]
		[Address(RVA = "0x138E430", Offset = "0x138E430", VA = "0x138E430")]
		public void ExtractZip(string zipFileName, string targetDirectory, Overwrite overwrite, ConfirmOverwriteDelegate confirmDelegate, string fileFilter, string directoryFilter, bool restoreDateTime, bool allowParentTraversal = false)
		{
		}

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0x138E4E0", Offset = "0x138E4E0", VA = "0x138E4E0")]
		public void ExtractZip(Stream inputStream, string targetDirectory, Overwrite overwrite, ConfirmOverwriteDelegate confirmDelegate, string fileFilter, string directoryFilter, bool restoreDateTime, bool isStreamOwner, bool allowParentTraversal = false)
		{
		}

		[Token(Token = "0x6000C49")]
		[Address(RVA = "0x138F190", Offset = "0x138F190", VA = "0x138F190")]
		private void ProcessDirectory(object sender, DirectoryEventArgs e)
		{
		}

		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0x138F388", Offset = "0x138F388", VA = "0x138F388")]
		private void ProcessFile(object sender, ScanEventArgs e)
		{
		}

		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0x138F678", Offset = "0x138F678", VA = "0x138F678")]
		private void AddFileContents(string name, Stream stream)
		{
		}

		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0x138F8E8", Offset = "0x138F8E8", VA = "0x138F8E8")]
		private void ExtractFileEntry(ZipEntry entry, string targetName)
		{
		}

		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0x138EE04", Offset = "0x138EE04", VA = "0x138EE04")]
		private void ExtractEntry(ZipEntry entry)
		{
		}

		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0x139054C", Offset = "0x139054C", VA = "0x139054C")]
		private static int MakeExternalAttributes(FileInfo info)
		{
			return default(int);
		}

		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0x1390564", Offset = "0x1390564", VA = "0x1390564")]
		private static bool NameIsValid(string name)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000150")]
	public interface IEntryFactory
	{
		[Token(Token = "0x1700012F")]
		INameTransform NameTransform
		{
			[Token(Token = "0x6000C55")]
			get;
			[Token(Token = "0x6000C56")]
			set;
		}

		[Token(Token = "0x6000C50")]
		ZipEntry MakeFileEntry(string fileName);

		[Token(Token = "0x6000C51")]
		ZipEntry MakeFileEntry(string fileName, bool useFileSystem);

		[Token(Token = "0x6000C52")]
		ZipEntry MakeFileEntry(string fileName, string entryName, bool useFileSystem);

		[Token(Token = "0x6000C53")]
		ZipEntry MakeDirectoryEntry(string directoryName);

		[Token(Token = "0x6000C54")]
		ZipEntry MakeDirectoryEntry(string directoryName, bool useFileSystem);
	}
	[Token(Token = "0x2000151")]
	public class WindowsNameTransform : INameTransform
	{
		[Token(Token = "0x400154A")]
		private const int MaxPath = 260;

		[Token(Token = "0x400154B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string _baseDirectory;

		[Token(Token = "0x400154C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _trimIncomingPaths;

		[Token(Token = "0x400154D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		private char _replacementChar;

		[Token(Token = "0x400154E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool _allowParentTraversal;

		[Token(Token = "0x400154F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly char[] InvalidEntryChars;

		[Token(Token = "0x17000130")]
		public string BaseDirectory
		{
			[Token(Token = "0x6000C59")]
			[Address(RVA = "0x1391904", Offset = "0x1391904", VA = "0x1391904")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C5A")]
			[Address(RVA = "0x1391834", Offset = "0x1391834", VA = "0x1391834")]
			set
			{
			}
		}

		[Token(Token = "0x17000131")]
		public bool AllowParentTraversal
		{
			[Token(Token = "0x6000C5B")]
			[Address(RVA = "0x139190C", Offset = "0x139190C", VA = "0x139190C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C5C")]
			[Address(RVA = "0x1391914", Offset = "0x1391914", VA = "0x1391914")]
			set
			{
			}
		}

		[Token(Token = "0x17000132")]
		public bool TrimIncomingPaths
		{
			[Token(Token = "0x6000C5D")]
			[Address(RVA = "0x1391920", Offset = "0x1391920", VA = "0x1391920")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C5E")]
			[Address(RVA = "0x1391928", Offset = "0x1391928", VA = "0x1391928")]
			set
			{
			}
		}

		[Token(Token = "0x17000133")]
		public char Replacement
		{
			[Token(Token = "0x6000C63")]
			[Address(RVA = "0x1392098", Offset = "0x1392098", VA = "0x1392098")]
			get
			{
				return default(char);
			}
			[Token(Token = "0x6000C64")]
			[Address(RVA = "0x13920A0", Offset = "0x13920A0", VA = "0x13920A0")]
			set
			{
			}
		}

		[Token(Token = "0x6000C57")]
		[Address(RVA = "0x138E980", Offset = "0x138E980", VA = "0x138E980")]
		public WindowsNameTransform(string baseDirectory, bool allowParentTraversal = false)
		{
		}

		[Token(Token = "0x6000C58")]
		[Address(RVA = "0x13918F4", Offset = "0x13918F4", VA = "0x13918F4")]
		public WindowsNameTransform()
		{
		}

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0x1391934", Offset = "0x1391934", VA = "0x1391934", Slot = "5")]
		public string TransformDirectory(string name)
		{
			return null;
		}

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0x1391A6C", Offset = "0x1391A6C", VA = "0x1391A6C", Slot = "4")]
		public string TransformFile(string name)
		{
			return null;
		}

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0x1391FF8", Offset = "0x1391FF8", VA = "0x1391FF8")]
		public static bool IsValidName(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0x1391C04", Offset = "0x1391C04", VA = "0x1391C04")]
		public static string MakeValidName(string name, char replacement)
		{
			return null;
		}
	}
	[Token(Token = "0x2000152")]
	public enum UseZip64
	{
		[Token(Token = "0x4001551")]
		Off,
		[Token(Token = "0x4001552")]
		On,
		[Token(Token = "0x4001553")]
		Dynamic
	}
	[Token(Token = "0x2000153")]
	public enum CompressionMethod
	{
		[Token(Token = "0x4001555")]
		Stored = 0,
		[Token(Token = "0x4001556")]
		Deflated = 8,
		[Token(Token = "0x4001557")]
		Deflate64 = 9,
		[Token(Token = "0x4001558")]
		BZip2 = 12,
		[Token(Token = "0x4001559")]
		LZMA = 14,
		[Token(Token = "0x400155A")]
		PPMd = 98,
		[Token(Token = "0x400155B")]
		WinZipAES = 99
	}
	[Token(Token = "0x2000154")]
	public enum EncryptionAlgorithm
	{
		[Token(Token = "0x400155D")]
		None = 0,
		[Token(Token = "0x400155E")]
		PkzipClassic = 1,
		[Token(Token = "0x400155F")]
		Des = 26113,
		[Token(Token = "0x4001560")]
		RC2 = 26114,
		[Token(Token = "0x4001561")]
		TripleDes168 = 26115,
		[Token(Token = "0x4001562")]
		TripleDes112 = 26121,
		[Token(Token = "0x4001563")]
		Aes128 = 26126,
		[Token(Token = "0x4001564")]
		Aes192 = 26127,
		[Token(Token = "0x4001565")]
		Aes256 = 26128,
		[Token(Token = "0x4001566")]
		RC2Corrected = 26370,
		[Token(Token = "0x4001567")]
		Blowfish = 26400,
		[Token(Token = "0x4001568")]
		Twofish = 26401,
		[Token(Token = "0x4001569")]
		RC4 = 26625,
		[Token(Token = "0x400156A")]
		Unknown = 65535
	}
	[Token(Token = "0x2000155")]
	[Flags]
	public enum GeneralBitFlags
	{
		[Token(Token = "0x400156C")]
		Encrypted = 1,
		[Token(Token = "0x400156D")]
		Method = 6,
		[Token(Token = "0x400156E")]
		Descriptor = 8,
		[Token(Token = "0x400156F")]
		ReservedPKware4 = 0x10,
		[Token(Token = "0x4001570")]
		Patched = 0x20,
		[Token(Token = "0x4001571")]
		StrongEncryption = 0x40,
		[Token(Token = "0x4001572")]
		Unused7 = 0x80,
		[Token(Token = "0x4001573")]
		Unused8 = 0x100,
		[Token(Token = "0x4001574")]
		Unused9 = 0x200,
		[Token(Token = "0x4001575")]
		Unused10 = 0x400,
		[Token(Token = "0x4001576")]
		UnicodeText = 0x800,
		[Token(Token = "0x4001577")]
		EnhancedCompress = 0x1000,
		[Token(Token = "0x4001578")]
		HeaderMasked = 0x2000,
		[Token(Token = "0x4001579")]
		ReservedPkware14 = 0x4000,
		[Token(Token = "0x400157A")]
		ReservedPkware15 = 0x8000
	}
	[Token(Token = "0x2000156")]
	public static class ZipConstants
	{
		[Token(Token = "0x400157B")]
		public const int VersionMadeBy = 51;

		[Token(Token = "0x400157C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8004BC", Offset = "0x8004BC")]
		public const int VERSION_MADE_BY = 51;

		[Token(Token = "0x400157D")]
		public const int VersionStrongEncryption = 50;

		[Token(Token = "0x400157E")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8004F4", Offset = "0x8004F4")]
		public const int VERSION_STRONG_ENCRYPTION = 50;

		[Token(Token = "0x400157F")]
		public const int VERSION_AES = 51;

		[Token(Token = "0x4001580")]
		public const int VersionZip64 = 45;

		[Token(Token = "0x4001581")]
		public const int LocalHeaderBaseSize = 30;

		[Token(Token = "0x4001582")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x80052C", Offset = "0x80052C")]
		public const int LOCHDR = 30;

		[Token(Token = "0x4001583")]
		public const int Zip64DataDescriptorSize = 24;

		[Token(Token = "0x4001584")]
		public const int DataDescriptorSize = 16;

		[Token(Token = "0x4001585")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x800564", Offset = "0x800564")]
		public const int EXTHDR = 16;

		[Token(Token = "0x4001586")]
		public const int CentralHeaderBaseSize = 46;

		[Token(Token = "0x4001587")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x80059C", Offset = "0x80059C")]
		public const int CENHDR = 46;

		[Token(Token = "0x4001588")]
		public const int EndOfCentralRecordBaseSize = 22;

		[Token(Token = "0x4001589")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8005D4", Offset = "0x8005D4")]
		public const int ENDHDR = 22;

		[Token(Token = "0x400158A")]
		public const int CryptoHeaderSize = 12;

		[Token(Token = "0x400158B")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x80060C", Offset = "0x80060C")]
		public const int CRYPTO_HEADER_SIZE = 12;

		[Token(Token = "0x400158C")]
		public const int LocalHeaderSignature = 67324752;

		[Token(Token = "0x400158D")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x800644", Offset = "0x800644")]
		public const int LOCSIG = 67324752;

		[Token(Token = "0x400158E")]
		public const int SpanningSignature = 134695760;

		[Token(Token = "0x400158F")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x80067C", Offset = "0x80067C")]
		public const int SPANNINGSIG = 134695760;

		[Token(Token = "0x4001590")]
		public const int SpanningTempSignature = 808471376;

		[Token(Token = "0x4001591")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8006B4", Offset = "0x8006B4")]
		public const int SPANTEMPSIG = 808471376;

		[Token(Token = "0x4001592")]
		public const int DataDescriptorSignature = 134695760;

		[Token(Token = "0x4001593")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8006EC", Offset = "0x8006EC")]
		public const int EXTSIG = 134695760;

		[Token(Token = "0x4001594")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x800724", Offset = "0x800724")]
		public const int CENSIG = 33639248;

		[Token(Token = "0x4001595")]
		public const int CentralHeaderSignature = 33639248;

		[Token(Token = "0x4001596")]
		public const int Zip64CentralFileHeaderSignature = 101075792;

		[Token(Token = "0x4001597")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x80075C", Offset = "0x80075C")]
		public const int CENSIG64 = 101075792;

		[Token(Token = "0x4001598")]
		public const int Zip64CentralDirLocatorSignature = 117853008;

		[Token(Token = "0x4001599")]
		public const int ArchiveExtraDataSignature = 117853008;

		[Token(Token = "0x400159A")]
		public const int CentralHeaderDigitalSignature = 84233040;

		[Token(Token = "0x400159B")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x800794", Offset = "0x800794")]
		public const int CENDIGITALSIG = 84233040;

		[Token(Token = "0x400159C")]
		public const int EndOfCentralDirectorySignature = 101010256;

		[Token(Token = "0x400159D")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8007CC", Offset = "0x8007CC")]
		public const int ENDSIG = 101010256;

		[Token(Token = "0x17000134")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8072B0", Offset = "0x8072B0")]
		public static int DefaultCodePage
		{
			[Token(Token = "0x6000C66")]
			[Address(RVA = "0x13922C0", Offset = "0x13922C0", VA = "0x13922C0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C67")]
			[Address(RVA = "0x1392320", Offset = "0x1392320", VA = "0x1392320")]
			set
			{
			}
		}

		[Token(Token = "0x6000C68")]
		[Address(RVA = "0x1392388", Offset = "0x1392388", VA = "0x1392388")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x804780", Offset = "0x804780")]
		public static string ConvertToString(byte[] data, int count)
		{
			return null;
		}

		[Token(Token = "0x6000C69")]
		[Address(RVA = "0x1392400", Offset = "0x1392400", VA = "0x1392400")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8047B8", Offset = "0x8047B8")]
		public static string ConvertToString(byte[] data)
		{
			return null;
		}

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0x1392468", Offset = "0x1392468", VA = "0x1392468")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8047F0", Offset = "0x8047F0")]
		public static string ConvertToStringExt(int flags, byte[] data, int count)
		{
			return null;
		}

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0x13924E8", Offset = "0x13924E8", VA = "0x13924E8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x804828", Offset = "0x804828")]
		public static string ConvertToStringExt(int flags, byte[] data)
		{
			return null;
		}

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0x1392560", Offset = "0x1392560", VA = "0x1392560")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x804860", Offset = "0x804860")]
		public static byte[] ConvertToArray(string str)
		{
			return null;
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0x13925C8", Offset = "0x13925C8", VA = "0x13925C8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x804898", Offset = "0x804898")]
		public static byte[] ConvertToArray(int flags, string str)
		{
			return null;
		}
	}
	[Token(Token = "0x2000157")]
	public enum HostSystemID
	{
		[Token(Token = "0x400159F")]
		Msdos = 0,
		[Token(Token = "0x40015A0")]
		Amiga = 1,
		[Token(Token = "0x40015A1")]
		OpenVms = 2,
		[Token(Token = "0x40015A2")]
		Unix = 3,
		[Token(Token = "0x40015A3")]
		VMCms = 4,
		[Token(Token = "0x40015A4")]
		AtariST = 5,
		[Token(Token = "0x40015A5")]
		OS2 = 6,
		[Token(Token = "0x40015A6")]
		Macintosh = 7,
		[Token(Token = "0x40015A7")]
		ZSystem = 8,
		[Token(Token = "0x40015A8")]
		Cpm = 9,
		[Token(Token = "0x40015A9")]
		WindowsNT = 10,
		[Token(Token = "0x40015AA")]
		MVS = 11,
		[Token(Token = "0x40015AB")]
		Vse = 12,
		[Token(Token = "0x40015AC")]
		AcornRisc = 13,
		[Token(Token = "0x40015AD")]
		Vfat = 14,
		[Token(Token = "0x40015AE")]
		AlternateMvs = 15,
		[Token(Token = "0x40015AF")]
		BeOS = 16,
		[Token(Token = "0x40015B0")]
		Tandem = 17,
		[Token(Token = "0x40015B1")]
		OS400 = 18,
		[Token(Token = "0x40015B2")]
		OSX = 19,
		[Token(Token = "0x40015B3")]
		WinZipAES = 99
	}
	[Token(Token = "0x2000158")]
	public class ZipEntry
	{
		[Token(Token = "0x20003E3")]
		[Flags]
		private enum Known : byte
		{
			[Token(Token = "0x4002627")]
			None = 0,
			[Token(Token = "0x4002628")]
			Size = 1,
			[Token(Token = "0x4002629")]
			CompressedSize = 2,
			[Token(Token = "0x400262A")]
			Crc = 4,
			[Token(Token = "0x400262B")]
			Time = 8,
			[Token(Token = "0x400262C")]
			ExternalAttributes = 0x10
		}

		[Token(Token = "0x40015B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Known known;

		[Token(Token = "0x40015B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int externalFileAttributes;

		[Token(Token = "0x40015B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ushort versionMadeBy;

		[Token(Token = "0x40015B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string name;

		[Token(Token = "0x40015B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ulong size;

		[Token(Token = "0x40015B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ulong compressedSize;

		[Token(Token = "0x40015BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ushort versionToExtract;

		[Token(Token = "0x40015BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private uint crc;

		[Token(Token = "0x40015BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private uint dosTime;

		[Token(Token = "0x40015BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private CompressionMethod method;

		[Token(Token = "0x40015BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private byte[] extra;

		[Token(Token = "0x40015BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string comment;

		[Token(Token = "0x40015C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int flags;

		[Token(Token = "0x40015C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private long zipFileIndex;

		[Token(Token = "0x40015C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private long offset;

		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool forceZip64_;

		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private byte cryptoCheckValue_;

		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int _aesVer;

		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int _aesEncryptionStrength;

		[Token(Token = "0x17000135")]
		public bool HasCrc
		{
			[Token(Token = "0x6000C72")]
			[Address(RVA = "0x1392C3C", Offset = "0x1392C3C", VA = "0x1392C3C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000136")]
		public bool IsCrypted
		{
			[Token(Token = "0x6000C73")]
			[Address(RVA = "0x1392C48", Offset = "0x1392C48", VA = "0x1392C48")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C74")]
			[Address(RVA = "0x1392C54", Offset = "0x1392C54", VA = "0x1392C54")]
			set
			{
			}
		}

		[Token(Token = "0x17000137")]
		public bool IsUnicodeText
		{
			[Token(Token = "0x6000C75")]
			[Address(RVA = "0x1392C70", Offset = "0x1392C70", VA = "0x1392C70")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C76")]
			[Address(RVA = "0x1392AA0", Offset = "0x1392AA0", VA = "0x1392AA0")]
			set
			{
			}
		}

		[Token(Token = "0x17000138")]
		internal byte CryptoCheckValue
		{
			[Token(Token = "0x6000C77")]
			[Address(RVA = "0x1392C7C", Offset = "0x1392C7C", VA = "0x1392C7C")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6000C78")]
			[Address(RVA = "0x1392C84", Offset = "0x1392C84", VA = "0x1392C84")]
			set
			{
			}
		}

		[Token(Token = "0x17000139")]
		public int Flags
		{
			[Token(Token = "0x6000C79")]
			[Address(RVA = "0x1392C8C", Offset = "0x1392C8C", VA = "0x1392C8C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C7A")]
			[Address(RVA = "0x1392C94", Offset = "0x1392C94", VA = "0x1392C94")]
			set
			{
			}
		}

		[Token(Token = "0x1700013A")]
		public long ZipFileIndex
		{
			[Token(Token = "0x6000C7B")]
			[Address(RVA = "0x1392C9C", Offset = "0x1392C9C", VA = "0x1392C9C")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6000C7C")]
			[Address(RVA = "0x1392CA4", Offset = "0x1392CA4", VA = "0x1392CA4")]
			set
			{
			}
		}

		[Token(Token = "0x1700013B")]
		public long Offset
		{
			[Token(Token = "0x6000C7D")]
			[Address(RVA = "0x1392CAC", Offset = "0x1392CAC", VA = "0x1392CAC")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6000C7E")]
			[Address(RVA = "0x1392CB4", Offset = "0x1392CB4", VA = "0x1392CB4")]
			set
			{
			}
		}

		[Token(Token = "0x1700013C")]
		public int ExternalFileAttributes
		{
			[Token(Token = "0x6000C7F")]
			[Address(RVA = "0x1390468", Offset = "0x1390468", VA = "0x1390468")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C80")]
			[Address(RVA = "0x1392CBC", Offset = "0x1392CBC", VA = "0x1392CBC")]
			set
			{
			}
		}

		[Token(Token = "0x1700013D")]
		public int VersionMadeBy
		{
			[Token(Token = "0x6000C81")]
			[Address(RVA = "0x1392CD0", Offset = "0x1392CD0", VA = "0x1392CD0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700013E")]
		public bool IsDOSEntry
		{
			[Token(Token = "0x6000C82")]
			[Address(RVA = "0x1390448", Offset = "0x1390448", VA = "0x1390448")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700013F")]
		public int HostSystem
		{
			[Token(Token = "0x6000C84")]
			[Address(RVA = "0x1392CD8", Offset = "0x1392CD8", VA = "0x1392CD8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C85")]
			[Address(RVA = "0x1392D18", Offset = "0x1392D18", VA = "0x1392D18")]
			set
			{
			}
		}

		[Token(Token = "0x17000140")]
		public int Version
		{
			[Token(Token = "0x6000C86")]
			[Address(RVA = "0x1392D28", Offset = "0x1392D28", VA = "0x1392D28")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000141")]
		public bool CanDecompress
		{
			[Token(Token = "0x6000C87")]
			[Address(RVA = "0x1392E24", Offset = "0x1392E24", VA = "0x1392E24")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000142")]
		public bool LocalHeaderRequiresZip64
		{
			[Token(Token = "0x6000C8A")]
			[Address(RVA = "0x1392EC8", Offset = "0x1392EC8", VA = "0x1392EC8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000143")]
		public bool CentralHeaderRequiresZip64
		{
			[Token(Token = "0x6000C8B")]
			[Address(RVA = "0x1392DE8", Offset = "0x1392DE8", VA = "0x1392DE8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000144")]
		public long DosTime
		{
			[Token(Token = "0x6000C8C")]
			[Address(RVA = "0x1392F28", Offset = "0x1392F28", VA = "0x1392F28")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6000C8D")]
			[Address(RVA = "0x1392F40", Offset = "0x1392F40", VA = "0x1392F40")]
			set
			{
			}
		}

		[Token(Token = "0x17000145")]
		public DateTime DateTime
		{
			[Token(Token = "0x6000C8E")]
			[Address(RVA = "0x13902D8", Offset = "0x13902D8", VA = "0x13902D8")]
			get
			{
				return default(DateTime);
			}
			[Token(Token = "0x6000C8F")]
			[Address(RVA = "0x139282C", Offset = "0x139282C", VA = "0x139282C")]
			set
			{
			}
		}

		[Token(Token = "0x17000146")]
		public string Name
		{
			[Token(Token = "0x6000C90")]
			[Address(RVA = "0x1392F54", Offset = "0x1392F54", VA = "0x1392F54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000147")]
		public long Size
		{
			[Token(Token = "0x6000C91")]
			[Address(RVA = "0x13902C0", Offset = "0x13902C0", VA = "0x13902C0")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6000C92")]
			[Address(RVA = "0x1392F5C", Offset = "0x1392F5C", VA = "0x1392F5C")]
			set
			{
			}
		}

		[Token(Token = "0x17000148")]
		public long CompressedSize
		{
			[Token(Token = "0x6000C93")]
			[Address(RVA = "0x1392F70", Offset = "0x1392F70", VA = "0x1392F70")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6000C94")]
			[Address(RVA = "0x1392F88", Offset = "0x1392F88", VA = "0x1392F88")]
			set
			{
			}
		}

		[Token(Token = "0x17000149")]
		public long Crc
		{
			[Token(Token = "0x6000C95")]
			[Address(RVA = "0x1392F9C", Offset = "0x1392F9C", VA = "0x1392F9C")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6000C96")]
			[Address(RVA = "0x1392FB4", Offset = "0x1392FB4", VA = "0x1392FB4")]
			set
			{
			}
		}

		[Token(Token = "0x1700014A")]
		public CompressionMethod CompressionMethod
		{
			[Token(Token = "0x6000C97")]
			[Address(RVA = "0x1393010", Offset = "0x1393010", VA = "0x1393010")]
			get
			{
				return default(CompressionMethod);
			}
			[Token(Token = "0x6000C98")]
			[Address(RVA = "0x1393018", Offset = "0x1393018", VA = "0x1393018")]
			set
			{
			}
		}

		[Token(Token = "0x1700014B")]
		internal CompressionMethod CompressionMethodForHeader
		{
			[Token(Token = "0x6000C99")]
			[Address(RVA = "0x13930C4", Offset = "0x13930C4", VA = "0x13930C4")]
			get
			{
				return default(CompressionMethod);
			}
		}

		[Token(Token = "0x1700014C")]
		public byte[] ExtraData
		{
			[Token(Token = "0x6000C9A")]
			[Address(RVA = "0x13930F8", Offset = "0x13930F8", VA = "0x13930F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C9B")]
			[Address(RVA = "0x1393100", Offset = "0x1393100", VA = "0x1393100")]
			set
			{
			}
		}

		[Token(Token = "0x1700014D")]
		public int AESKeySize
		{
			[Token(Token = "0x6000C9C")]
			[Address(RVA = "0x138A25C", Offset = "0x138A25C", VA = "0x138A25C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C9D")]
			[Address(RVA = "0x13931E0", Offset = "0x13931E0", VA = "0x13931E0")]
			set
			{
			}
		}

		[Token(Token = "0x1700014E")]
		internal byte AESEncryptionStrength
		{
			[Token(Token = "0x6000C9E")]
			[Address(RVA = "0x13932CC", Offset = "0x13932CC", VA = "0x13932CC")]
			get
			{
				return default(byte);
			}
		}

		[Token(Token = "0x1700014F")]
		internal int AESSaltLen
		{
			[Token(Token = "0x6000C9F")]
			[Address(RVA = "0x138A238", Offset = "0x138A238", VA = "0x138A238")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000150")]
		internal int AESOverheadSize
		{
			[Token(Token = "0x6000CA0")]
			[Address(RVA = "0x13932D4", Offset = "0x13932D4", VA = "0x13932D4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000151")]
		public string Comment
		{
			[Token(Token = "0x6000CA4")]
			[Address(RVA = "0x1393A38", Offset = "0x1393A38", VA = "0x1393A38")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CA5")]
			[Address(RVA = "0x1393A40", Offset = "0x1393A40", VA = "0x1393A40")]
			set
			{
			}
		}

		[Token(Token = "0x17000152")]
		public bool IsDirectory
		{
			[Token(Token = "0x6000CA6")]
			[Address(RVA = "0x138F0F0", Offset = "0x138F0F0", VA = "0x138F0F0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000153")]
		public bool IsFile
		{
			[Token(Token = "0x6000CA7")]
			[Address(RVA = "0x138EDA8", Offset = "0x138EDA8", VA = "0x138EDA8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0x1392640", Offset = "0x1392640", VA = "0x1392640")]
		public ZipEntry(string name)
		{
		}

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0x1392820", Offset = "0x1392820", VA = "0x1392820")]
		internal ZipEntry(string name, int versionRequiredToExtract)
		{
		}

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0x1392650", Offset = "0x1392650", VA = "0x1392650")]
		internal ZipEntry(string name, int versionRequiredToExtract, int madeByInfo, CompressionMethod method)
		{
		}

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0x1392ABC", Offset = "0x1392ABC", VA = "0x1392ABC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8048D0", Offset = "0x8048D0")]
		public ZipEntry(ZipEntry entry)
		{
		}

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0x1392CE4", Offset = "0x1392CE4", VA = "0x1392CE4")]
		private bool HasDosAttributes(int attributes)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0x1392EB4", Offset = "0x1392EB4", VA = "0x1392EB4")]
		public void ForceZip64()
		{
		}

		[Token(Token = "0x6000C89")]
		[Address(RVA = "0x1392EC0", Offset = "0x1392EC0", VA = "0x1392EC0")]
		public bool IsZip64Forced()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0x13932FC", Offset = "0x13932FC", VA = "0x13932FC")]
		internal void ProcessExtraData(bool localHeader)
		{
		}

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0x1393624", Offset = "0x1393624", VA = "0x1393624")]
		private DateTime GetDateTime(ZipExtraData extraData)
		{
			return default(DateTime);
		}

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0x13937D8", Offset = "0x13937D8", VA = "0x13937D8")]
		private void ProcessAESExtraData(ZipExtraData extraData)
		{
		}

		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0x1390480", Offset = "0x1390480", VA = "0x1390480")]
		public bool IsCompressionMethodSupported()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0x1393AEC", Offset = "0x1393AEC", VA = "0x1393AEC")]
		public object Clone()
		{
			return null;
		}

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0x1393BD0", Offset = "0x1393BD0", VA = "0x1393BD0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0x13930B4", Offset = "0x13930B4", VA = "0x13930B4")]
		public static bool IsCompressionMethodSupported(CompressionMethod method)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0x1392958", Offset = "0x1392958", VA = "0x1392958")]
		public static string CleanName(string name)
		{
			return null;
		}
	}
	[Token(Token = "0x2000159")]
	public class ZipEntryFactory : IEntryFactory
	{
		[Token(Token = "0x20003E4")]
		public enum TimeSetting
		{
			[Token(Token = "0x400262E")]
			LastWriteTime,
			[Token(Token = "0x400262F")]
			LastWriteTimeUtc,
			[Token(Token = "0x4002630")]
			CreateTime,
			[Token(Token = "0x4002631")]
			CreateTimeUtc,
			[Token(Token = "0x4002632")]
			LastAccessTime,
			[Token(Token = "0x4002633")]
			LastAccessTimeUtc,
			[Token(Token = "0x4002634")]
			Fixed
		}

		[Token(Token = "0x40015C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private INameTransform nameTransform_;

		[Token(Token = "0x40015C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private DateTime fixedDateTime_;

		[Token(Token = "0x40015C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TimeSetting timeSetting_;

		[Token(Token = "0x40015CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool isUnicodeText_;

		[Token(Token = "0x40015CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int getAttributes_;

		[Token(Token = "0x40015CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int setAttributes_;

		[Token(Token = "0x17000154")]
		public INameTransform NameTransform
		{
			[Token(Token = "0x6000CB0")]
			[Address(RVA = "0x1393CE8", Offset = "0x1393CE8", VA = "0x1393CE8", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CB1")]
			[Address(RVA = "0x1393CF0", Offset = "0x1393CF0", VA = "0x1393CF0", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x17000155")]
		public TimeSetting Setting
		{
			[Token(Token = "0x6000CB2")]
			[Address(RVA = "0x1393D60", Offset = "0x1393D60", VA = "0x1393D60")]
			get
			{
				return default(TimeSetting);
			}
			[Token(Token = "0x6000CB3")]
			[Address(RVA = "0x1393D68", Offset = "0x1393D68", VA = "0x1393D68")]
			set
			{
			}
		}

		[Token(Token = "0x17000156")]
		public DateTime FixedDateTime
		{
			[Token(Token = "0x6000CB4")]
			[Address(RVA = "0x1393D70", Offset = "0x1393D70", VA = "0x1393D70")]
			get
			{
				return default(DateTime);
			}
			[Token(Token = "0x6000CB5")]
			[Address(RVA = "0x1393C34", Offset = "0x1393C34", VA = "0x1393C34")]
			set
			{
			}
		}

		[Token(Token = "0x17000157")]
		public int GetAttributes
		{
			[Token(Token = "0x6000CB6")]
			[Address(RVA = "0x1393D78", Offset = "0x1393D78", VA = "0x1393D78")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000CB7")]
			[Address(RVA = "0x1393D80", Offset = "0x1393D80", VA = "0x1393D80")]
			set
			{
			}
		}

		[Token(Token = "0x17000158")]
		public int SetAttributes
		{
			[Token(Token = "0x6000CB8")]
			[Address(RVA = "0x1393D88", Offset = "0x1393D88", VA = "0x1393D88")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000CB9")]
			[Address(RVA = "0x1393D90", Offset = "0x1393D90", VA = "0x1393D90")]
			set
			{
			}
		}

		[Token(Token = "0x17000159")]
		public bool IsUnicodeText
		{
			[Token(Token = "0x6000CBA")]
			[Address(RVA = "0x1393D98", Offset = "0x1393D98", VA = "0x1393D98")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CBB")]
			[Address(RVA = "0x1393DA0", Offset = "0x1393DA0", VA = "0x1393DA0")]
			set
			{
			}
		}

		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0x138DBB0", Offset = "0x138DBB0", VA = "0x138DBB0")]
		public ZipEntryFactory()
		{
		}

		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0x1393BD8", Offset = "0x1393BD8", VA = "0x1393BD8")]
		public ZipEntryFactory(TimeSetting timeSetting)
		{
		}

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0x1393C00", Offset = "0x1393C00", VA = "0x1393C00")]
		public ZipEntryFactory(DateTime time)
		{
		}

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0x1393DAC", Offset = "0x1393DAC", VA = "0x1393DAC", Slot = "4")]
		public ZipEntry MakeFileEntry(string fileName)
		{
			return null;
		}

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0x1394074", Offset = "0x1394074", VA = "0x1394074", Slot = "5")]
		public ZipEntry MakeFileEntry(string fileName, bool useFileSystem)
		{
			return null;
		}

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0x1393DB8", Offset = "0x1393DB8", VA = "0x1393DB8", Slot = "6")]
		public ZipEntry MakeFileEntry(string fileName, string entryName, bool useFileSystem)
		{
			return null;
		}

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0x1394080", Offset = "0x1394080", VA = "0x1394080", Slot = "7")]
		public ZipEntry MakeDirectoryEntry(string directoryName)
		{
			return null;
		}

		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0x1394088", Offset = "0x1394088", VA = "0x1394088", Slot = "8")]
		public ZipEntry MakeDirectoryEntry(string directoryName, bool useFileSystem)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200015A")]
	public class ZipException : SharpZipBaseException
	{
		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0x1394320", Offset = "0x1394320", VA = "0x1394320")]
		public ZipException()
		{
		}

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0x138B088", Offset = "0x138B088", VA = "0x138B088")]
		public ZipException(string message)
		{
		}

		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0x1394328", Offset = "0x1394328", VA = "0x1394328")]
		public ZipException(string message, Exception innerException)
		{
		}

		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0x1394330", Offset = "0x1394330", VA = "0x1394330")]
		protected ZipException(SerializationInfo info, StreamingContext context)
		{
		}
	}
	[Token(Token = "0x200015B")]
	public interface ITaggedData
	{
		[Token(Token = "0x1700015A")]
		short TagID
		{
			[Token(Token = "0x6000CC5")]
			get;
		}

		[Token(Token = "0x6000CC6")]
		void SetData(byte[] data, int offset, int count);

		[Token(Token = "0x6000CC7")]
		byte[] GetData();
	}
	[Token(Token = "0x200015C")]
	public class RawTaggedData : ITaggedData
	{
		[Token(Token = "0x40015CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private short _tag;

		[Token(Token = "0x40015CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private byte[] _data;

		[Token(Token = "0x1700015B")]
		public short TagID
		{
			[Token(Token = "0x6000CC9")]
			[Address(RVA = "0x1391660", Offset = "0x1391660", VA = "0x1391660", Slot = "4")]
			get
			{
				return default(short);
			}
			[Token(Token = "0x6000CCA")]
			[Address(RVA = "0x1391668", Offset = "0x1391668", VA = "0x1391668")]
			set
			{
			}
		}

		[Token(Token = "0x1700015C")]
		public byte[] Data
		{
			[Token(Token = "0x6000CCD")]
			[Address(RVA = "0x139174C", Offset = "0x139174C", VA = "0x139174C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CCE")]
			[Address(RVA = "0x1391754", Offset = "0x1391754", VA = "0x1391754")]
			set
			{
			}
		}

		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0x1391634", Offset = "0x1391634", VA = "0x1391634")]
		public RawTaggedData(short tag)
		{
		}

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0x1391670", Offset = "0x1391670", VA = "0x1391670", Slot = "5")]
		public void SetData(byte[] data, int offset, int count)
		{
		}

		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0x1391744", Offset = "0x1391744", VA = "0x1391744", Slot = "6")]
		public byte[] GetData()
		{
			return null;
		}
	}
	[Token(Token = "0x200015D")]
	public class ExtendedUnixData : ITaggedData
	{
		[Token(Token = "0x20003E5")]
		[Flags]
		public enum Flags : byte
		{
			[Token(Token = "0x4002636")]
			ModificationTime = 1,
			[Token(Token = "0x4002637")]
			AccessTime = 2,
			[Token(Token = "0x4002638")]
			CreateTime = 4
		}

		[Token(Token = "0x40015CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Flags _flags;

		[Token(Token = "0x40015D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private DateTime _modificationTime;

		[Token(Token = "0x40015D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private DateTime _lastAccessTime;

		[Token(Token = "0x40015D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private DateTime _createTime;

		[Token(Token = "0x1700015D")]
		public short TagID
		{
			[Token(Token = "0x6000CCF")]
			[Address(RVA = "0x138CE4C", Offset = "0x138CE4C", VA = "0x138CE4C", Slot = "4")]
			get
			{
				return default(short);
			}
		}

		[Token(Token = "0x1700015E")]
		public DateTime ModificationTime
		{
			[Token(Token = "0x6000CD3")]
			[Address(RVA = "0x138D884", Offset = "0x138D884", VA = "0x138D884")]
			get
			{
				return default(DateTime);
			}
			[Token(Token = "0x6000CD4")]
			[Address(RVA = "0x138D88C", Offset = "0x138D88C", VA = "0x138D88C")]
			set
			{
			}
		}

		[Token(Token = "0x1700015F")]
		public DateTime AccessTime
		{
			[Token(Token = "0x6000CD5")]
			[Address(RVA = "0x138D934", Offset = "0x138D934", VA = "0x138D934")]
			get
			{
				return default(DateTime);
			}
			[Token(Token = "0x6000CD6")]
			[Address(RVA = "0x138D93C", Offset = "0x138D93C", VA = "0x138D93C")]
			set
			{
			}
		}

		[Token(Token = "0x17000160")]
		public DateTime CreateTime
		{
			[Token(Token = "0x6000CD7")]
			[Address(RVA = "0x138D9E4", Offset = "0x138D9E4", VA = "0x138D9E4")]
			get
			{
				return default(DateTime);
			}
			[Token(Token = "0x6000CD8")]
			[Address(RVA = "0x138D9EC", Offset = "0x138D9EC", VA = "0x138D9EC")]
			set
			{
			}
		}

		[Token(Token = "0x17000161")]
		public Flags Include
		{
			[Token(Token = "0x6000CD9")]
			[Address(RVA = "0x138DA94", Offset = "0x138DA94", VA = "0x138DA94")]
			get
			{
				return default(Flags);
			}
			[Token(Token = "0x6000CDA")]
			[Address(RVA = "0x138DA9C", Offset = "0x138DA9C", VA = "0x138DA9C")]
			set
			{
			}
		}

		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0x138CE54", Offset = "0x138CE54", VA = "0x138CE54", Slot = "5")]
		public void SetData(byte[] data, int index, int count)
		{
		}

		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0x138D310", Offset = "0x138D310", VA = "0x138D310", Slot = "6")]
		public byte[] GetData()
		{
			return null;
		}

		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0x138D784", Offset = "0x138D784", VA = "0x138D784")]
		public static bool IsValidValue(DateTime value)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0x138DAA4", Offset = "0x138DAA4", VA = "0x138DAA4")]
		public ExtendedUnixData()
		{
		}
	}
	[Token(Token = "0x200015E")]
	public class NTTaggedData : ITaggedData
	{
		[Token(Token = "0x40015D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private DateTime _lastAccessTime;

		[Token(Token = "0x40015D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private DateTime _lastModificationTime;

		[Token(Token = "0x40015D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private DateTime _createTime;

		[Token(Token = "0x17000162")]
		public short TagID
		{
			[Token(Token = "0x6000CDC")]
			[Address(RVA = "0x1390C38", Offset = "0x1390C38", VA = "0x1390C38", Slot = "4")]
			get
			{
				return default(short);
			}
		}

		[Token(Token = "0x17000163")]
		public DateTime LastModificationTime
		{
			[Token(Token = "0x6000CE0")]
			[Address(RVA = "0x13913B0", Offset = "0x13913B0", VA = "0x13913B0")]
			get
			{
				return default(DateTime);
			}
			[Token(Token = "0x6000CE1")]
			[Address(RVA = "0x13913B8", Offset = "0x13913B8", VA = "0x13913B8")]
			set
			{
			}
		}

		[Token(Token = "0x17000164")]
		public DateTime CreateTime
		{
			[Token(Token = "0x6000CE2")]
			[Address(RVA = "0x1391454", Offset = "0x1391454", VA = "0x1391454")]
			get
			{
				return default(DateTime);
			}
			[Token(Token = "0x6000CE3")]
			[Address(RVA = "0x139145C", Offset = "0x139145C", VA = "0x139145C")]
			set
			{
			}
		}

		[Token(Token = "0x17000165")]
		public DateTime LastAccessTime
		{
			[Token(Token = "0x6000CE4")]
			[Address(RVA = "0x13914F8", Offset = "0x13914F8", VA = "0x13914F8")]
			get
			{
				return default(DateTime);
			}
			[Token(Token = "0x6000CE5")]
			[Address(RVA = "0x1391500", Offset = "0x1391500", VA = "0x1391500")]
			set
			{
			}
		}

		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0x1390C40", Offset = "0x1390C40", VA = "0x1390C40", Slot = "5")]
		public void SetData(byte[] data, int index, int count)
		{
		}

		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0x1390FDC", Offset = "0x1390FDC", VA = "0x1390FDC", Slot = "6")]
		public byte[] GetData()
		{
			return null;
		}

		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0x13912EC", Offset = "0x13912EC", VA = "0x13912EC")]
		public static bool IsValidValue(DateTime value)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0x139159C", Offset = "0x139159C", VA = "0x139159C")]
		public NTTaggedData()
		{
		}
	}
	[Token(Token = "0x200015F")]
	internal interface ITaggedDataFactory
	{
		[Token(Token = "0x6000CE7")]
		ITaggedData Create(short tag, byte[] data, int offset, int count);
	}
	[Token(Token = "0x2000160")]
	public sealed class ZipExtraData : IDisposable
	{
		[Token(Token = "0x40015D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int _index;

		[Token(Token = "0x40015D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int _readValueStart;

		[Token(Token = "0x40015D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int _readValueLength;

		[Token(Token = "0x40015D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private MemoryStream _newEntry;

		[Token(Token = "0x40015DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private byte[] _data;

		[Token(Token = "0x17000166")]
		public int Length
		{
			[Token(Token = "0x6000CEC")]
			[Address(RVA = "0x1394498", Offset = "0x1394498", VA = "0x1394498")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000167")]
		public int ValueLength
		{
			[Token(Token = "0x6000CEF")]
			[Address(RVA = "0x1394558", Offset = "0x1394558", VA = "0x1394558")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000168")]
		public int CurrentReadIndex
		{
			[Token(Token = "0x6000CF0")]
			[Address(RVA = "0x1394560", Offset = "0x1394560", VA = "0x1394560")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000169")]
		public int UnreadCount
		{
			[Token(Token = "0x6000CF1")]
			[Address(RVA = "0x1394568", Offset = "0x1394568", VA = "0x1394568")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0x1394338", Offset = "0x1394338", VA = "0x1394338")]
		public ZipExtraData()
		{
		}

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0x13934B8", Offset = "0x13934B8", VA = "0x13934B8")]
		public ZipExtraData(byte[] data)
		{
		}

		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0x13943C8", Offset = "0x13943C8", VA = "0x13943C8")]
		public byte[] GetEntryData()
		{
			return null;
		}

		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0x1394360", Offset = "0x1394360", VA = "0x1394360")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0x13944B8", Offset = "0x13944B8", VA = "0x13944B8")]
		public Stream GetStreamForTag(int tag)
		{
			return null;
		}

		[Token(Token = "0x6000CEE")]
		public T GetData<T>() where T : class, ITaggedData, new()
		{
			return null;
		}

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0x1393530", Offset = "0x1393530", VA = "0x1393530")]
		public bool Find(int headerID)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0x1394700", Offset = "0x1394700", VA = "0x1394700")]
		public void AddEntry(ITaggedData taggedData)
		{
		}

		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0x139486C", Offset = "0x139486C", VA = "0x139486C")]
		public void AddEntry(int headerID, byte[] fieldData)
		{
		}

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0x1394BC0", Offset = "0x1394BC0", VA = "0x1394BC0")]
		public void StartNewEntry()
		{
		}

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0x1394C20", Offset = "0x1394C20", VA = "0x1394C20")]
		public void AddNewEntry(int headerID)
		{
		}

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0x1394C6C", Offset = "0x1394C6C", VA = "0x1394C6C")]
		public void AddData(byte data)
		{
		}

		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0x1394C90", Offset = "0x1394C90", VA = "0x1394C90")]
		public void AddData(byte[] data)
		{
		}

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0x1394D44", Offset = "0x1394D44", VA = "0x1394D44")]
		public void AddLeShort(int toAdd)
		{
		}

		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0x1394D9C", Offset = "0x1394D9C", VA = "0x1394D9C")]
		public void AddLeInt(int toAdd)
		{
		}

		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0x1394DCC", Offset = "0x1394DCC", VA = "0x1394DCC")]
		public void AddLeLong(long toAdd)
		{
		}

		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0x1394A54", Offset = "0x1394A54", VA = "0x1394A54")]
		public bool Delete(int headerID)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0x13935E0", Offset = "0x13935E0", VA = "0x13935E0")]
		public long ReadLong()
		{
			return default(long);
		}

		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0x1394F24", Offset = "0x1394F24", VA = "0x1394F24")]
		public int ReadInt()
		{
			return default(int);
		}

		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0x139394C", Offset = "0x139394C", VA = "0x139394C")]
		public int ReadShort()
		{
			return default(int);
		}

		[Token(Token = "0x6000D00")]
		[Address(RVA = "0x13939C4", Offset = "0x13939C4", VA = "0x13939C4")]
		public int ReadByte()
		{
			return default(int);
		}

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0x1394FCC", Offset = "0x1394FCC", VA = "0x1394FCC")]
		public void Skip(int amount)
		{
		}

		[Token(Token = "0x6000D02")]
		[Address(RVA = "0x1394E14", Offset = "0x1394E14", VA = "0x1394E14")]
		private void ReadCheck(int length)
		{
		}

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0x1394620", Offset = "0x1394620", VA = "0x1394620")]
		private int ReadShortInternal()
		{
			return default(int);
		}

		[Token(Token = "0x6000D04")]
		[Address(RVA = "0x1394B44", Offset = "0x1394B44", VA = "0x1394B44")]
		private void SetShort(ref int index, int source)
		{
		}

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0x1394FFC", Offset = "0x1394FFC", VA = "0x1394FFC", Slot = "4")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x2000161")]
	public class KeysRequiredEventArgs : EventArgs
	{
		[Token(Token = "0x40015DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly string fileName;

		[Token(Token = "0x40015DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private byte[] key;

		[Token(Token = "0x1700016A")]
		public string FileName
		{
			[Token(Token = "0x6000D08")]
			[Address(RVA = "0x1390930", Offset = "0x1390930", VA = "0x1390930")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016B")]
		public byte[] Key
		{
			[Token(Token = "0x6000D09")]
			[Address(RVA = "0x1390938", Offset = "0x1390938", VA = "0x1390938")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D0A")]
			[Address(RVA = "0x1390940", Offset = "0x1390940", VA = "0x1390940")]
			set
			{
			}
		}

		[Token(Token = "0x6000D06")]
		[Address(RVA = "0x1390834", Offset = "0x1390834", VA = "0x1390834")]
		public KeysRequiredEventArgs(string name)
		{
		}

		[Token(Token = "0x6000D07")]
		[Address(RVA = "0x13908B0", Offset = "0x13908B0", VA = "0x13908B0")]
		public KeysRequiredEventArgs(string name, byte[] keyValue)
		{
		}
	}
	[Token(Token = "0x2000162")]
	public enum TestStrategy
	{
		[Token(Token = "0x40015DE")]
		FindFirstError,
		[Token(Token = "0x40015DF")]
		FindAllErrors
	}
	[Token(Token = "0x2000163")]
	public enum TestOperation
	{
		[Token(Token = "0x40015E1")]
		Initialising,
		[Token(Token = "0x40015E2")]
		EntryHeader,
		[Token(Token = "0x40015E3")]
		EntryData,
		[Token(Token = "0x40015E4")]
		EntryComplete,
		[Token(Token = "0x40015E5")]
		MiscellaneousTests,
		[Token(Token = "0x40015E6")]
		Complete
	}
	[Token(Token = "0x2000164")]
	public class TestStatus
	{
		[Token(Token = "0x40015E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ZipFile file_;

		[Token(Token = "0x40015E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ZipEntry entry_;

		[Token(Token = "0x40015E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool entryValid_;

		[Token(Token = "0x40015EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int errorCount_;

		[Token(Token = "0x40015EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private long bytesTested_;

		[Token(Token = "0x40015EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TestOperation operation_;

		[Token(Token = "0x1700016C")]
		public TestOperation Operation
		{
			[Token(Token = "0x6000D0C")]
			[Address(RVA = "0x13917CC", Offset = "0x13917CC", VA = "0x13917CC")]
			get
			{
				return default(TestOperation);
			}
		}

		[Token(Token = "0x1700016D")]
		public ZipFile File
		{
			[Token(Token = "0x6000D0D")]
			[Address(RVA = "0x13917D4", Offset = "0x13917D4", VA = "0x13917D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016E")]
		public ZipEntry Entry
		{
			[Token(Token = "0x6000D0E")]
			[Address(RVA = "0x13917DC", Offset = "0x13917DC", VA = "0x13917DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016F")]
		public int ErrorCount
		{
			[Token(Token = "0x6000D0F")]
			[Address(RVA = "0x13917E4", Offset = "0x13917E4", VA = "0x13917E4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000170")]
		public long BytesTested
		{
			[Token(Token = "0x6000D10")]
			[Address(RVA = "0x13917EC", Offset = "0x13917EC", VA = "0x13917EC")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x17000171")]
		public bool EntryValid
		{
			[Token(Token = "0x6000D11")]
			[Address(RVA = "0x13917F4", Offset = "0x13917F4", VA = "0x13917F4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0x13917A0", Offset = "0x13917A0", VA = "0x13917A0")]
		public TestStatus(ZipFile file)
		{
		}

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0x13917FC", Offset = "0x13917FC", VA = "0x13917FC")]
		internal void AddError()
		{
		}

		[Token(Token = "0x6000D13")]
		[Address(RVA = "0x1391810", Offset = "0x1391810", VA = "0x1391810")]
		internal void SetOperation(TestOperation operation)
		{
		}

		[Token(Token = "0x6000D14")]
		[Address(RVA = "0x1391818", Offset = "0x1391818", VA = "0x1391818")]
		internal void SetEntry(ZipEntry entry)
		{
		}

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0x139182C", Offset = "0x139182C", VA = "0x139182C")]
		internal void SetBytesTested(long value)
		{
		}
	}
	[Token(Token = "0x2000165")]
	public delegate void ZipTestResultHandler(TestStatus status, string message);
	[Token(Token = "0x2000166")]
	public enum FileUpdateMode
	{
		[Token(Token = "0x40015EE")]
		Safe,
		[Token(Token = "0x40015EF")]
		Direct
	}
	[Token(Token = "0x2000167")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x7F6968", Offset = "0x7F6968")]
	public class ZipFile : IEnumerable, IDisposable
	{
		[Token(Token = "0x20003E6")]
		public delegate void KeysRequiredEventHandler(object sender, KeysRequiredEventArgs e);

		[Token(Token = "0x20003E7")]
		[Flags]
		private enum HeaderTest
		{
			[Token(Token = "0x400263A")]
			Extract = 1,
			[Token(Token = "0x400263B")]
			Header = 2
		}

		[Token(Token = "0x20003E8")]
		private enum UpdateCommand
		{
			[Token(Token = "0x400263D")]
			Copy,
			[Token(Token = "0x400263E")]
			Modify,
			[Token(Token = "0x400263F")]
			Add
		}

		[Token(Token = "0x20003E9")]
		private class UpdateComparer : IComparer<ZipUpdate>
		{
			[Token(Token = "0x6001A2D")]
			[Address(RVA = "0x139F43C", Offset = "0x139F43C", VA = "0x139F43C", Slot = "4")]
			public int Compare(ZipUpdate x, ZipUpdate y)
			{
				return default(int);
			}

			[Token(Token = "0x6001A2E")]
			[Address(RVA = "0x1399334", Offset = "0x1399334", VA = "0x1399334")]
			public UpdateComparer()
			{
			}
		}

		[Token(Token = "0x20003EA")]
		private class ZipUpdate
		{
			[Token(Token = "0x4002640")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private ZipEntry entry_;

			[Token(Token = "0x4002641")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private ZipEntry outEntry_;

			[Token(Token = "0x4002642")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private readonly UpdateCommand command_;

			[Token(Token = "0x4002643")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private IStaticDataSource dataSource_;

			[Token(Token = "0x4002644")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private readonly string filename_;

			[Token(Token = "0x4002645")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private long sizePatchOffset_;

			[Token(Token = "0x4002646")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private long crcPatchOffset_;

			[Token(Token = "0x4002647")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private long _offsetBasedSize;

			[Token(Token = "0x1700035F")]
			public ZipEntry Entry
			{
				[Token(Token = "0x6001A37")]
				[Address(RVA = "0x139F8D8", Offset = "0x139F8D8", VA = "0x139F8D8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000360")]
			public ZipEntry OutEntry
			{
				[Token(Token = "0x6001A38")]
				[Address(RVA = "0x139C86C", Offset = "0x139C86C", VA = "0x139C86C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000361")]
			public UpdateCommand Command
			{
				[Token(Token = "0x6001A39")]
				[Address(RVA = "0x139F8E0", Offset = "0x139F8E0", VA = "0x139F8E0")]
				get
				{
					return default(UpdateCommand);
				}
			}

			[Token(Token = "0x17000362")]
			public string Filename
			{
				[Token(Token = "0x6001A3A")]
				[Address(RVA = "0x139F8E8", Offset = "0x139F8E8", VA = "0x139F8E8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000363")]
			public long SizePatchOffset
			{
				[Token(Token = "0x6001A3B")]
				[Address(RVA = "0x139F8F0", Offset = "0x139F8F0", VA = "0x139F8F0")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x6001A3C")]
				[Address(RVA = "0x139F8F8", Offset = "0x139F8F8", VA = "0x139F8F8")]
				set
				{
				}
			}

			[Token(Token = "0x17000364")]
			public long CrcPatchOffset
			{
				[Token(Token = "0x6001A3D")]
				[Address(RVA = "0x139F900", Offset = "0x139F900", VA = "0x139F900")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x6001A3E")]
				[Address(RVA = "0x139F908", Offset = "0x139F908", VA = "0x139F908")]
				set
				{
				}
			}

			[Token(Token = "0x17000365")]
			public long OffsetBasedSize
			{
				[Token(Token = "0x6001A3F")]
				[Address(RVA = "0x139F910", Offset = "0x139F910", VA = "0x139F910")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x6001A40")]
				[Address(RVA = "0x139F918", Offset = "0x139F918", VA = "0x139F918")]
				set
				{
				}
			}

			[Token(Token = "0x6001A2F")]
			[Address(RVA = "0x139B060", Offset = "0x139B060", VA = "0x139B060")]
			public ZipUpdate(string fileName, ZipEntry entry)
			{
			}

			[Token(Token = "0x6001A30")]
			[Address(RVA = "0x139F6BC", Offset = "0x139F6BC", VA = "0x139F6BC")]
			[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x806D68", Offset = "0x806D68")]
			public ZipUpdate(string fileName, string entryName, CompressionMethod compressionMethod)
			{
			}

			[Token(Token = "0x6001A31")]
			[Address(RVA = "0x139F780", Offset = "0x139F780", VA = "0x139F780")]
			[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x806D78", Offset = "0x806D78")]
			public ZipUpdate(string fileName, string entryName)
			{
			}

			[Token(Token = "0x6001A32")]
			[Address(RVA = "0x139F788", Offset = "0x139F788", VA = "0x139F788")]
			[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x806D88", Offset = "0x806D88")]
			public ZipUpdate(IStaticDataSource dataSource, string entryName, CompressionMethod compressionMethod)
			{
			}

			[Token(Token = "0x6001A33")]
			[Address(RVA = "0x139B6CC", Offset = "0x139B6CC", VA = "0x139B6CC")]
			public ZipUpdate(IStaticDataSource dataSource, ZipEntry entry)
			{
			}

			[Token(Token = "0x6001A34")]
			[Address(RVA = "0x139F84C", Offset = "0x139F84C", VA = "0x139F84C")]
			public ZipUpdate(ZipEntry original, ZipEntry updated)
			{
			}

			[Token(Token = "0x6001A35")]
			[Address(RVA = "0x139BB80", Offset = "0x139BB80", VA = "0x139BB80")]
			public ZipUpdate(UpdateCommand command, ZipEntry entry)
			{
			}

			[Token(Token = "0x6001A36")]
			[Address(RVA = "0x1399324", Offset = "0x1399324", VA = "0x1399324")]
			public ZipUpdate(ZipEntry entry)
			{
			}

			[Token(Token = "0x6001A41")]
			[Address(RVA = "0x139E1E8", Offset = "0x139E1E8", VA = "0x139E1E8")]
			public Stream GetSource()
			{
				return null;
			}
		}

		[Token(Token = "0x20003EB")]
		private class ZipString
		{
			[Token(Token = "0x4002648")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private string comment_;

			[Token(Token = "0x4002649")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private byte[] rawComment_;

			[Token(Token = "0x400264A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private readonly bool isSourceString_;

			[Token(Token = "0x17000366")]
			public bool IsSourceString
			{
				[Token(Token = "0x6001A44")]
				[Address(RVA = "0x139F574", Offset = "0x139F574", VA = "0x139F574")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000367")]
			public int RawLength
			{
				[Token(Token = "0x6001A45")]
				[Address(RVA = "0x139AC40", Offset = "0x139AC40", VA = "0x139AC40")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x17000368")]
			public byte[] RawComment
			{
				[Token(Token = "0x6001A46")]
				[Address(RVA = "0x139A99C", Offset = "0x139A99C", VA = "0x139A99C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A42")]
			[Address(RVA = "0x139AC0C", Offset = "0x139AC0C", VA = "0x139AC0C")]
			public ZipString(string comment)
			{
			}

			[Token(Token = "0x6001A43")]
			[Address(RVA = "0x139F548", Offset = "0x139F548", VA = "0x139F548")]
			public ZipString(byte[] rawString)
			{
			}

			[Token(Token = "0x6001A47")]
			[Address(RVA = "0x139F5F8", Offset = "0x139F5F8", VA = "0x139F5F8")]
			public void Reset()
			{
			}

			[Token(Token = "0x6001A48")]
			[Address(RVA = "0x139F610", Offset = "0x139F610", VA = "0x139F610")]
			private void MakeTextAvailable()
			{
			}

			[Token(Token = "0x6001A49")]
			[Address(RVA = "0x139F57C", Offset = "0x139F57C", VA = "0x139F57C")]
			private void MakeBytesAvailable()
			{
			}

			[Token(Token = "0x6001A4A")]
			[Address(RVA = "0x139F68C", Offset = "0x139F68C", VA = "0x139F68C")]
			public static implicit operator string(ZipString zipString)
			{
				return null;
			}
		}

		[Token(Token = "0x20003EC")]
		private class ZipEntryEnumerator : IEnumerator
		{
			[Token(Token = "0x400264B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private ZipEntry[] array;

			[Token(Token = "0x400264C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int index;

			[Token(Token = "0x17000369")]
			public object Current
			{
				[Token(Token = "0x6001A4C")]
				[Address(RVA = "0x139F4C0", Offset = "0x139F4C0", VA = "0x139F4C0", Slot = "5")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A4B")]
			[Address(RVA = "0x13966EC", Offset = "0x13966EC", VA = "0x13966EC")]
			public ZipEntryEnumerator(ZipEntry[] entries)
			{
			}

			[Token(Token = "0x6001A4D")]
			[Address(RVA = "0x139F508", Offset = "0x139F508", VA = "0x139F508", Slot = "6")]
			public void Reset()
			{
			}

			[Token(Token = "0x6001A4E")]
			[Address(RVA = "0x139F514", Offset = "0x139F514", VA = "0x139F514", Slot = "4")]
			public bool MoveNext()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20003ED")]
		private class UncompressedStream : Stream
		{
			[Token(Token = "0x400264D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private readonly Stream baseStream_;

			[Token(Token = "0x1700036A")]
			public override bool CanRead
			{
				[Token(Token = "0x6001A50")]
				[Address(RVA = "0x139F324", Offset = "0x139F324", VA = "0x139F324", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700036B")]
			public override bool CanWrite
			{
				[Token(Token = "0x6001A52")]
				[Address(RVA = "0x139F350", Offset = "0x139F350", VA = "0x139F350", Slot = "10")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700036C")]
			public override bool CanSeek
			{
				[Token(Token = "0x6001A53")]
				[Address(RVA = "0x139F370", Offset = "0x139F370", VA = "0x139F370", Slot = "8")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700036D")]
			public override long Length
			{
				[Token(Token = "0x6001A54")]
				[Address(RVA = "0x139F378", Offset = "0x139F378", VA = "0x139F378", Slot = "11")]
				get
				{
					return default(long);
				}
			}

			[Token(Token = "0x1700036E")]
			public override long Position
			{
				[Token(Token = "0x6001A55")]
				[Address(RVA = "0x139F380", Offset = "0x139F380", VA = "0x139F380", Slot = "12")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x6001A56")]
				[Address(RVA = "0x139F3A0", Offset = "0x139F3A0", VA = "0x139F3A0", Slot = "13")]
				set
				{
				}
			}

			[Token(Token = "0x6001A4F")]
			[Address(RVA = "0x139DC38", Offset = "0x139DC38", VA = "0x139DC38")]
			public UncompressedStream(Stream baseStream)
			{
			}

			[Token(Token = "0x6001A51")]
			[Address(RVA = "0x139F32C", Offset = "0x139F32C", VA = "0x139F32C", Slot = "18")]
			public override void Flush()
			{
			}

			[Token(Token = "0x6001A57")]
			[Address(RVA = "0x139F404", Offset = "0x139F404", VA = "0x139F404", Slot = "28")]
			public override int Read(byte[] buffer, int offset, int count)
			{
				return default(int);
			}

			[Token(Token = "0x6001A58")]
			[Address(RVA = "0x139F40C", Offset = "0x139F40C", VA = "0x139F40C", Slot = "26")]
			public override long Seek(long offset, SeekOrigin origin)
			{
				return default(long);
			}

			[Token(Token = "0x6001A59")]
			[Address(RVA = "0x139F414", Offset = "0x139F414", VA = "0x139F414", Slot = "27")]
			public override void SetLength(long value)
			{
			}

			[Token(Token = "0x6001A5A")]
			[Address(RVA = "0x139F418", Offset = "0x139F418", VA = "0x139F418", Slot = "30")]
			public override void Write(byte[] buffer, int offset, int count)
			{
			}
		}

		[Token(Token = "0x20003EE")]
		private class PartialInputStream : Stream
		{
			[Token(Token = "0x400264E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private ZipFile zipFile_;

			[Token(Token = "0x400264F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Stream baseStream_;

			[Token(Token = "0x4002650")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private readonly long start_;

			[Token(Token = "0x4002651")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private readonly long length_;

			[Token(Token = "0x4002652")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private long readPos_;

			[Token(Token = "0x4002653")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private readonly long end_;

			[Token(Token = "0x1700036F")]
			public override long Position
			{
				[Token(Token = "0x6001A62")]
				[Address(RVA = "0x139F1FC", Offset = "0x139F1FC", VA = "0x139F1FC", Slot = "12")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x6001A63")]
				[Address(RVA = "0x139F20C", Offset = "0x139F20C", VA = "0x139F20C", Slot = "13")]
				set
				{
				}
			}

			[Token(Token = "0x17000370")]
			public override long Length
			{
				[Token(Token = "0x6001A64")]
				[Address(RVA = "0x139F2E4", Offset = "0x139F2E4", VA = "0x139F2E4", Slot = "11")]
				get
				{
					return default(long);
				}
			}

			[Token(Token = "0x17000371")]
			public override bool CanWrite
			{
				[Token(Token = "0x6001A65")]
				[Address(RVA = "0x139F2EC", Offset = "0x139F2EC", VA = "0x139F2EC", Slot = "10")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000372")]
			public override bool CanSeek
			{
				[Token(Token = "0x6001A66")]
				[Address(RVA = "0x139F2F4", Offset = "0x139F2F4", VA = "0x139F2F4", Slot = "8")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000373")]
			public override bool CanRead
			{
				[Token(Token = "0x6001A67")]
				[Address(RVA = "0x139F2FC", Offset = "0x139F2FC", VA = "0x139F2FC", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000374")]
			public override bool CanTimeout
			{
				[Token(Token = "0x6001A68")]
				[Address(RVA = "0x139F304", Offset = "0x139F304", VA = "0x139F304", Slot = "9")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001A5B")]
			[Address(RVA = "0x1396BD8", Offset = "0x1396BD8", VA = "0x1396BD8")]
			public PartialInputStream(ZipFile zipFile, long start, long length)
			{
			}

			[Token(Token = "0x6001A5C")]
			[Address(RVA = "0x139ED90", Offset = "0x139ED90", VA = "0x139ED90", Slot = "29")]
			public override int ReadByte()
			{
				return default(int);
			}

			[Token(Token = "0x6001A5D")]
			[Address(RVA = "0x139EE9C", Offset = "0x139EE9C", VA = "0x139EE9C", Slot = "28")]
			public override int Read(byte[] buffer, int offset, int count)
			{
				return default(int);
			}

			[Token(Token = "0x6001A5E")]
			[Address(RVA = "0x139F024", Offset = "0x139F024", VA = "0x139F024", Slot = "30")]
			public override void Write(byte[] buffer, int offset, int count)
			{
			}

			[Token(Token = "0x6001A5F")]
			[Address(RVA = "0x139F088", Offset = "0x139F088", VA = "0x139F088", Slot = "27")]
			public override void SetLength(long value)
			{
			}

			[Token(Token = "0x6001A60")]
			[Address(RVA = "0x139F0EC", Offset = "0x139F0EC", VA = "0x139F0EC", Slot = "26")]
			public override long Seek(long offset, SeekOrigin origin)
			{
				return default(long);
			}

			[Token(Token = "0x6001A61")]
			[Address(RVA = "0x139F1F8", Offset = "0x139F1F8", VA = "0x139F1F8", Slot = "18")]
			public override void Flush()
			{
			}
		}

		[Token(Token = "0x40015F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public KeysRequiredEventHandler KeysRequired;

		[Token(Token = "0x40015F1")]
		private const int DefaultBufferSize = 4096;

		[Token(Token = "0x40015F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool isDisposed_;

		[Token(Token = "0x40015F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string name_;

		[Token(Token = "0x40015F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string comment_;

		[Token(Token = "0x40015F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string rawPassword_;

		[Token(Token = "0x40015F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Stream baseStream_;

		[Token(Token = "0x40015F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool isStreamOwner;

		[Token(Token = "0x40015F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private long offsetOfFirstEntry;

		[Token(Token = "0x40015F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ZipEntry[] entries_;

		[Token(Token = "0x40015FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private byte[] key;

		[Token(Token = "0x40015FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool isNewArchive_;

		[Token(Token = "0x40015FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private UseZip64 useZip64_;

		[Token(Token = "0x40015FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<ZipUpdate> updates_;

		[Token(Token = "0x40015FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private long updateCount_;

		[Token(Token = "0x40015FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Dictionary<string, int> updateIndex_;

		[Token(Token = "0x4001600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private IArchiveStorage archiveStorage_;

		[Token(Token = "0x4001601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private IDynamicDataSource updateDataSource_;

		[Token(Token = "0x4001602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool contentsEdited_;

		[Token(Token = "0x4001603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int bufferSize_;

		[Token(Token = "0x4001604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private byte[] copyBuffer_;

		[Token(Token = "0x4001605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private ZipString newComment_;

		[Token(Token = "0x4001606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool commentEdited_;

		[Token(Token = "0x4001607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private IEntryFactory updateEntryFactory_;

		[Token(Token = "0x17000172")]
		private byte[] Key
		{
			[Token(Token = "0x6000D1B")]
			[Address(RVA = "0x1395494", Offset = "0x1395494", VA = "0x1395494")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D1C")]
			[Address(RVA = "0x139549C", Offset = "0x139549C", VA = "0x139549C")]
			set
			{
			}
		}

		[Token(Token = "0x17000173")]
		public string Password
		{
			[Token(Token = "0x6000D1D")]
			[Address(RVA = "0x138EC50", Offset = "0x138EC50", VA = "0x138EC50")]
			set
			{
			}
		}

		[Token(Token = "0x17000174")]
		private bool HaveKeys
		{
			[Token(Token = "0x6000D1E")]
			[Address(RVA = "0x13954A4", Offset = "0x13954A4", VA = "0x13954A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000175")]
		public bool IsStreamOwner
		{
			[Token(Token = "0x6000D29")]
			[Address(RVA = "0x13965A8", Offset = "0x13965A8", VA = "0x13965A8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D2A")]
			[Address(RVA = "0x13965B0", Offset = "0x13965B0", VA = "0x13965B0")]
			set
			{
			}
		}

		[Token(Token = "0x17000176")]
		public bool IsEmbeddedArchive
		{
			[Token(Token = "0x6000D2B")]
			[Address(RVA = "0x13965BC", Offset = "0x13965BC", VA = "0x13965BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000177")]
		public bool IsNewArchive
		{
			[Token(Token = "0x6000D2C")]
			[Address(RVA = "0x13965CC", Offset = "0x13965CC", VA = "0x13965CC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000178")]
		public string ZipFileComment
		{
			[Token(Token = "0x6000D2D")]
			[Address(RVA = "0x13965D4", Offset = "0x13965D4", VA = "0x13965D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000179")]
		public string Name
		{
			[Token(Token = "0x6000D2E")]
			[Address(RVA = "0x13965DC", Offset = "0x13965DC", VA = "0x13965DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017A")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8072E8", Offset = "0x8072E8")]
		public int Size
		{
			[Token(Token = "0x6000D2F")]
			[Address(RVA = "0x13965E4", Offset = "0x13965E4", VA = "0x13965E4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700017B")]
		public long Count
		{
			[Token(Token = "0x6000D30")]
			[Address(RVA = "0x1396604", Offset = "0x1396604", VA = "0x1396604")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x1700017C")]
		public ZipEntry EntryByIndex
		{
			[Token(Token = "0x6000D31")]
			[Address(RVA = "0x1396624", Offset = "0x1396624", VA = "0x1396624")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017D")]
		public INameTransform NameTransform
		{
			[Token(Token = "0x6000D3A")]
			[Address(RVA = "0x1398C3C", Offset = "0x1398C3C", VA = "0x1398C3C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D3B")]
			[Address(RVA = "0x1398CF4", Offset = "0x1398CF4", VA = "0x1398CF4")]
			set
			{
			}
		}

		[Token(Token = "0x1700017E")]
		public IEntryFactory EntryFactory
		{
			[Token(Token = "0x6000D3C")]
			[Address(RVA = "0x1398DBC", Offset = "0x1398DBC", VA = "0x1398DBC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D3D")]
			[Address(RVA = "0x1398DC4", Offset = "0x1398DC4", VA = "0x1398DC4")]
			set
			{
			}
		}

		[Token(Token = "0x1700017F")]
		public int BufferSize
		{
			[Token(Token = "0x6000D3E")]
			[Address(RVA = "0x1398E30", Offset = "0x1398E30", VA = "0x1398E30")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000D3F")]
			[Address(RVA = "0x1398E38", Offset = "0x1398E38", VA = "0x1398E38")]
			set
			{
			}
		}

		[Token(Token = "0x17000180")]
		public bool IsUpdating
		{
			[Token(Token = "0x6000D40")]
			[Address(RVA = "0x1398EEC", Offset = "0x1398EEC", VA = "0x1398EEC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000181")]
		public UseZip64 UseZip64
		{
			[Token(Token = "0x6000D41")]
			[Address(RVA = "0x1398EFC", Offset = "0x1398EFC", VA = "0x1398EFC")]
			get
			{
				return default(UseZip64);
			}
			[Token(Token = "0x6000D42")]
			[Address(RVA = "0x1398F04", Offset = "0x1398F04", VA = "0x1398F04")]
			set
			{
			}
		}

		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0x1395010", Offset = "0x1395010", VA = "0x1395010")]
		private void OnKeysRequired(string fileName)
		{
		}

		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0x13954B4", Offset = "0x13954B4", VA = "0x13954B4")]
		public ZipFile(string name)
		{
		}

		[Token(Token = "0x6000D20")]
		[Address(RVA = "0x1396048", Offset = "0x1396048", VA = "0x1396048")]
		public ZipFile(FileStream file)
		{
		}

		[Token(Token = "0x6000D21")]
		[Address(RVA = "0x1396050", Offset = "0x1396050", VA = "0x1396050")]
		public ZipFile(FileStream file, bool leaveOpen)
		{
		}

		[Token(Token = "0x6000D22")]
		[Address(RVA = "0x1396218", Offset = "0x1396218", VA = "0x1396218")]
		public ZipFile(Stream stream)
		{
		}

		[Token(Token = "0x6000D23")]
		[Address(RVA = "0x138EA54", Offset = "0x138EA54", VA = "0x138EA54")]
		public ZipFile(Stream stream, bool leaveOpen)
		{
		}

		[Token(Token = "0x6000D24")]
		[Address(RVA = "0x1396220", Offset = "0x1396220", VA = "0x1396220")]
		internal ZipFile()
		{
		}

		[Token(Token = "0x6000D25")]
		[Address(RVA = "0x13962B8", Offset = "0x13962B8", VA = "0x13962B8", Slot = "1")]
		~ZipFile()
		{
		}

		[Token(Token = "0x6000D26")]
		[Address(RVA = "0x1396330", Offset = "0x1396330", VA = "0x1396330")]
		public void Close()
		{
		}

		[Token(Token = "0x6000D27")]
		[Address(RVA = "0x13963A4", Offset = "0x13963A4", VA = "0x13963A4")]
		public static ZipFile Create(string fileName)
		{
			return null;
		}

		[Token(Token = "0x6000D28")]
		[Address(RVA = "0x139647C", Offset = "0x139647C", VA = "0x139647C")]
		public static ZipFile Create(Stream outStream)
		{
			return null;
		}

		[Token(Token = "0x6000D32")]
		[Address(RVA = "0x138ECF0", Offset = "0x138ECF0", VA = "0x138ECF0", Slot = "4")]
		public IEnumerator GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000D33")]
		[Address(RVA = "0x1396720", Offset = "0x1396720", VA = "0x1396720")]
		public int FindEntry(string name, bool ignoreCase)
		{
			return default(int);
		}

		[Token(Token = "0x6000D34")]
		[Address(RVA = "0x1396830", Offset = "0x1396830", VA = "0x1396830")]
		public ZipEntry GetEntry(string name)
		{
			return null;
		}

		[Token(Token = "0x6000D35")]
		[Address(RVA = "0x1390154", Offset = "0x1390154", VA = "0x1390154")]
		public Stream GetInputStream(ZipEntry entry)
		{
			return null;
		}

		[Token(Token = "0x6000D36")]
		[Address(RVA = "0x1396958", Offset = "0x1396958", VA = "0x1396958")]
		public Stream GetInputStream(long entryIndex)
		{
			return null;
		}

		[Token(Token = "0x6000D37")]
		[Address(RVA = "0x1397100", Offset = "0x1397100", VA = "0x1397100")]
		public bool TestArchive(bool testData)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D38")]
		[Address(RVA = "0x1397110", Offset = "0x1397110", VA = "0x1397110")]
		public bool TestArchive(bool testData, TestStrategy strategy, ZipTestResultHandler resultHandler)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D39")]
		[Address(RVA = "0x1397AFC", Offset = "0x1397AFC", VA = "0x1397AFC")]
		private long TestLocalHeader(ZipEntry entry, HeaderTest tests)
		{
			return default(long);
		}

		[Token(Token = "0x6000D43")]
		[Address(RVA = "0x1398F0C", Offset = "0x1398F0C", VA = "0x1398F0C")]
		public void BeginUpdate(IArchiveStorage archiveStorage, IDynamicDataSource dataSource)
		{
		}

		[Token(Token = "0x6000D44")]
		[Address(RVA = "0x139933C", Offset = "0x139933C", VA = "0x139933C")]
		public void BeginUpdate(IArchiveStorage archiveStorage)
		{
		}

		[Token(Token = "0x6000D45")]
		[Address(RVA = "0x13993B0", Offset = "0x13993B0", VA = "0x13993B0")]
		public void BeginUpdate()
		{
		}

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0x139946C", Offset = "0x139946C", VA = "0x139946C")]
		public void CommitUpdate()
		{
		}

		[Token(Token = "0x6000D47")]
		[Address(RVA = "0x139AAEC", Offset = "0x139AAEC", VA = "0x139AAEC")]
		public void AbortUpdate()
		{
		}

		[Token(Token = "0x6000D48")]
		[Address(RVA = "0x139AAF0", Offset = "0x139AAF0", VA = "0x139AAF0")]
		public void SetComment(string comment)
		{
		}

		[Token(Token = "0x6000D49")]
		[Address(RVA = "0x139AC74", Offset = "0x139AC74", VA = "0x139AC74")]
		private void AddUpdate(ZipUpdate update)
		{
		}

		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0x139AE5C", Offset = "0x139AE5C", VA = "0x139AE5C")]
		public void Add(string fileName, CompressionMethod compressionMethod, bool useUnicodeText)
		{
		}

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0x139B0B0", Offset = "0x139B0B0", VA = "0x139B0B0")]
		public void Add(string fileName, CompressionMethod compressionMethod)
		{
		}

		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0x139B25C", Offset = "0x139B25C", VA = "0x139B25C")]
		public void Add(string fileName)
		{
		}

		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0x139B3B8", Offset = "0x139B3B8", VA = "0x139B3B8")]
		public void Add(string fileName, string entryName)
		{
		}

		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0x139B544", Offset = "0x139B544", VA = "0x139B544")]
		public void Add(IStaticDataSource dataSource, string entryName)
		{
		}

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0x139B71C", Offset = "0x139B71C", VA = "0x139B71C")]
		public void Add(IStaticDataSource dataSource, string entryName, CompressionMethod compressionMethod)
		{
		}

		[Token(Token = "0x6000D50")]
		[Address(RVA = "0x139B8BC", Offset = "0x139B8BC", VA = "0x139B8BC")]
		public void Add(IStaticDataSource dataSource, string entryName, CompressionMethod compressionMethod, bool useUnicodeText)
		{
		}

		[Token(Token = "0x6000D51")]
		[Address(RVA = "0x139BA78", Offset = "0x139BA78", VA = "0x139BA78")]
		public void Add(ZipEntry entry)
		{
		}

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0x139BC40", Offset = "0x139BC40", VA = "0x139BC40")]
		public void Add(IStaticDataSource dataSource, ZipEntry entry)
		{
		}

		[Token(Token = "0x6000D53")]
		[Address(RVA = "0x139BD3C", Offset = "0x139BD3C", VA = "0x139BD3C")]
		public void AddDirectory(string directoryName)
		{
		}

		[Token(Token = "0x6000D54")]
		[Address(RVA = "0x139BE84", Offset = "0x139BE84", VA = "0x139BE84")]
		public bool Delete(string fileName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0x139BFC8", Offset = "0x139BFC8", VA = "0x139BFC8")]
		public void Delete(ZipEntry entry)
		{
		}

		[Token(Token = "0x6000D56")]
		[Address(RVA = "0x139C1A4", Offset = "0x139C1A4", VA = "0x139C1A4")]
		private void WriteLEShort(int value)
		{
		}

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0x139C1FC", Offset = "0x139C1FC", VA = "0x139C1FC")]
		private void WriteLEUshort(ushort value)
		{
		}

		[Token(Token = "0x6000D58")]
		[Address(RVA = "0x139C254", Offset = "0x139C254", VA = "0x139C254")]
		private void WriteLEInt(int value)
		{
		}

		[Token(Token = "0x6000D59")]
		[Address(RVA = "0x139C284", Offset = "0x139C284", VA = "0x139C284")]
		private void WriteLEUint(uint value)
		{
		}

		[Token(Token = "0x6000D5A")]
		[Address(RVA = "0x139C2B0", Offset = "0x139C2B0", VA = "0x139C2B0")]
		private void WriteLeLong(long value)
		{
		}

		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0x139C2F8", Offset = "0x139C2F8", VA = "0x139C2F8")]
		private void WriteLEUlong(ulong value)
		{
		}

		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0x139C33C", Offset = "0x139C33C", VA = "0x139C33C")]
		private void WriteLocalEntryHeader(ZipUpdate update)
		{
		}

		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0x139C904", Offset = "0x139C904", VA = "0x139C904")]
		private int WriteCentralDirectoryHeader(ZipEntry entry)
		{
			return default(int);
		}

		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0x139AA28", Offset = "0x139AA28", VA = "0x139AA28")]
		private void PostUpdateCleanup()
		{
		}

		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0x139CE90", Offset = "0x139CE90", VA = "0x139CE90")]
		private string GetTransformedFileName(string name)
		{
			return null;
		}

		[Token(Token = "0x6000D60")]
		[Address(RVA = "0x139CF68", Offset = "0x139CF68", VA = "0x139CF68")]
		private string GetTransformedDirectoryName(string name)
		{
			return null;
		}

		[Token(Token = "0x6000D61")]
		[Address(RVA = "0x139D044", Offset = "0x139D044", VA = "0x139D044")]
		private byte[] GetBuffer()
		{
			return null;
		}

		[Token(Token = "0x6000D62")]
		[Address(RVA = "0x139D0A4", Offset = "0x139D0A4", VA = "0x139D0A4")]
		private void CopyDescriptorBytes(ZipUpdate update, Stream dest, Stream source)
		{
		}

		[Token(Token = "0x6000D63")]
		[Address(RVA = "0x139D24C", Offset = "0x139D24C", VA = "0x139D24C")]
		private void CopyBytes(ZipUpdate update, Stream destination, Stream source, long bytesToCopy, bool updateCrc)
		{
		}

		[Token(Token = "0x6000D64")]
		[Address(RVA = "0x139D200", Offset = "0x139D200", VA = "0x139D200")]
		private int GetDescriptorSize(ZipUpdate update)
		{
			return default(int);
		}

		[Token(Token = "0x6000D65")]
		[Address(RVA = "0x139D4F0", Offset = "0x139D4F0", VA = "0x139D4F0")]
		private void CopyDescriptorBytesDirect(ZipUpdate update, Stream stream, ref long destinationPosition, long sourcePosition)
		{
		}

		[Token(Token = "0x6000D66")]
		[Address(RVA = "0x139D65C", Offset = "0x139D65C", VA = "0x139D65C")]
		private void CopyEntryDataDirect(ZipUpdate update, Stream stream, bool updateCrc, ref long destinationPosition, ref long sourcePosition)
		{
		}

		[Token(Token = "0x6000D67")]
		[Address(RVA = "0x139C0D8", Offset = "0x139C0D8", VA = "0x139C0D8")]
		private int FindExistingUpdate(ZipEntry entry)
		{
			return default(int);
		}

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0x139ADA8", Offset = "0x139ADA8", VA = "0x139ADA8")]
		private int FindExistingUpdate(string fileName)
		{
			return default(int);
		}

		[Token(Token = "0x6000D69")]
		[Address(RVA = "0x139D920", Offset = "0x139D920", VA = "0x139D920")]
		private Stream GetOutputStream(ZipEntry entry)
		{
			return null;
		}

		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0x139DCB4", Offset = "0x139DCB4", VA = "0x139DCB4")]
		private void AddEntry(ZipFile workFile, ZipUpdate update)
		{
		}

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0x139E2A4", Offset = "0x139E2A4", VA = "0x139E2A4")]
		private void ModifyEntry(ZipFile workFile, ZipUpdate update)
		{
		}

		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0x139E54C", Offset = "0x139E54C", VA = "0x139E54C")]
		private void CopyEntryDirect(ZipFile workFile, ZipUpdate update, ref long destinationPosition)
		{
		}

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0x139E738", Offset = "0x139E738", VA = "0x139E738")]
		private void CopyEntry(ZipFile workFile, ZipUpdate update)
		{
		}

		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0x139E844", Offset = "0x139E844", VA = "0x139E844")]
		private void Reopen(Stream source)
		{
		}

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0x139E8F4", Offset = "0x139E8F4", VA = "0x139E8F4")]
		private void Reopen()
		{
		}

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0x139A3C0", Offset = "0x139A3C0", VA = "0x139A3C0")]
		private void UpdateCommentOnly()
		{
		}

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0x1399824", Offset = "0x1399824", VA = "0x1399824")]
		private void RunUpdates()
		{
		}

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0x139979C", Offset = "0x139979C", VA = "0x139979C")]
		private void CheckUpdating()
		{
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0x139E998", Offset = "0x139E998", VA = "0x139E998", Slot = "5")]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0x1395F30", Offset = "0x1395F30", VA = "0x1395F30")]
		private void DisposeInternal(bool disposing)
		{
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0x139E99C", Offset = "0x139E99C", VA = "0x139E99C", Slot = "6")]
		protected virtual void Dispose(bool disposing)
		{
		}

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0x1398B70", Offset = "0x1398B70", VA = "0x1398B70")]
		private ushort ReadLEUshort()
		{
			return default(ushort);
		}

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0x1398B3C", Offset = "0x1398B3C", VA = "0x1398B3C")]
		private uint ReadLEUint()
		{
			return default(uint);
		}

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0x139E9A4", Offset = "0x139E9A4", VA = "0x139E9A4")]
		private ulong ReadLEUlong()
		{
			return default(ulong);
		}

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0x139EA04", Offset = "0x139EA04", VA = "0x139EA04")]
		private long LocateBlockWithSignature(int signature, long endLocation, int minimumBlockSize, int maximumVariableData)
		{
			return default(long);
		}

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0x1395650", Offset = "0x1395650", VA = "0x1395650")]
		private void ReadEntries()
		{
		}

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0x1396BD0", Offset = "0x1396BD0", VA = "0x1396BD0")]
		private long LocateEntry(ZipEntry entry)
		{
			return default(long);
		}

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0x1396C84", Offset = "0x1396C84", VA = "0x1396C84")]
		private Stream CreateAndInitDecryptionStream(Stream baseStream, ZipEntry entry)
		{
			return null;
		}

		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0x139DAA0", Offset = "0x139DAA0", VA = "0x139DAA0")]
		private Stream CreateAndInitEncryptionStream(Stream baseStream, ZipEntry entry)
		{
			return null;
		}

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0x139EB6C", Offset = "0x139EB6C", VA = "0x139EB6C")]
		private static void CheckClassicPassword(CryptoStream classicCryptoStream, ZipEntry entry)
		{
		}

		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0x139EC5C", Offset = "0x139EC5C", VA = "0x139EC5C")]
		private static void WriteEncryptionHeader(Stream stream, long crcValue)
		{
		}
	}
	[Token(Token = "0x2000168")]
	public interface IStaticDataSource
	{
		[Token(Token = "0x6000D80")]
		Stream GetSource();
	}
	[Token(Token = "0x2000169")]
	public interface IDynamicDataSource
	{
		[Token(Token = "0x6000D81")]
		Stream GetSource(ZipEntry entry, string name);
	}
	[Token(Token = "0x200016A")]
	public class StaticDiskDataSource : IStaticDataSource
	{
		[Token(Token = "0x4001608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly string fileName_;

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0x139175C", Offset = "0x139175C", VA = "0x139175C")]
		public StaticDiskDataSource(string fileName)
		{
		}

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0x1391788", Offset = "0x1391788", VA = "0x1391788", Slot = "4")]
		public Stream GetSource()
		{
			return null;
		}
	}
	[Token(Token = "0x200016B")]
	public class DynamicDiskDataSource : IDynamicDataSource
	{
		[Token(Token = "0x6000D84")]
		[Address(RVA = "0x138CDE4", Offset = "0x138CDE4", VA = "0x138CDE4", Slot = "4")]
		public Stream GetSource(ZipEntry entry, string name)
		{
			return null;
		}

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0x138CE1C", Offset = "0x138CE1C", VA = "0x138CE1C")]
		public DynamicDiskDataSource()
		{
		}
	}
	[Token(Token = "0x200016C")]
	public interface IArchiveStorage
	{
		[Token(Token = "0x17000182")]
		FileUpdateMode UpdateMode
		{
			[Token(Token = "0x6000D86")]
			get;
		}

		[Token(Token = "0x6000D87")]
		Stream GetTemporaryOutput();

		[Token(Token = "0x6000D88")]
		Stream ConvertTemporaryToFinal();

		[Token(Token = "0x6000D89")]
		Stream MakeTemporaryCopy(Stream stream);

		[Token(Token = "0x6000D8A")]
		Stream OpenForDirectUpdate(Stream stream);

		[Token(Token = "0x6000D8B")]
		void Dispose();
	}
	[Token(Token = "0x200016D")]
	public abstract class BaseArchiveStorage : IArchiveStorage
	{
		[Token(Token = "0x4001609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly FileUpdateMode updateMode_;

		[Token(Token = "0x17000183")]
		public FileUpdateMode UpdateMode
		{
			[Token(Token = "0x6000D92")]
			[Address(RVA = "0xA77134", Offset = "0xA77134", VA = "0xA77134", Slot = "4")]
			get
			{
				return default(FileUpdateMode);
			}
		}

		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0xA77108", Offset = "0xA77108", VA = "0xA77108")]
		protected BaseArchiveStorage(FileUpdateMode updateMode)
		{
		}

		[Token(Token = "0x6000D8D")]
		public abstract Stream GetTemporaryOutput();

		[Token(Token = "0x6000D8E")]
		public abstract Stream ConvertTemporaryToFinal();

		[Token(Token = "0x6000D8F")]
		public abstract Stream MakeTemporaryCopy(Stream stream);

		[Token(Token = "0x6000D90")]
		public abstract Stream OpenForDirectUpdate(Stream stream);

		[Token(Token = "0x6000D91")]
		public abstract void Dispose();
	}
	[Token(Token = "0x200016E")]
	public class DiskArchiveStorage : BaseArchiveStorage
	{
		[Token(Token = "0x400160A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Stream temporaryStream_;

		[Token(Token = "0x400160B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly string fileName_;

		[Token(Token = "0x400160C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string temporaryName_;

		[Token(Token = "0x6000D93")]
		[Address(RVA = "0x138C6C0", Offset = "0x138C6C0", VA = "0x138C6C0")]
		public DiskArchiveStorage(ZipFile file, FileUpdateMode updateMode)
		{
		}

		[Token(Token = "0x6000D94")]
		[Address(RVA = "0x138C778", Offset = "0x138C778", VA = "0x138C778")]
		public DiskArchiveStorage(ZipFile file)
		{
		}

		[Token(Token = "0x6000D95")]
		[Address(RVA = "0x138C780", Offset = "0x138C780", VA = "0x138C780", Slot = "10")]
		public override Stream GetTemporaryOutput()
		{
			return null;
		}

		[Token(Token = "0x6000D96")]
		[Address(RVA = "0x138CAA8", Offset = "0x138CAA8", VA = "0x138CAA8", Slot = "11")]
		public override Stream ConvertTemporaryToFinal()
		{
			return null;
		}

		[Token(Token = "0x6000D97")]
		[Address(RVA = "0x138CC6C", Offset = "0x138CC6C", VA = "0x138CC6C", Slot = "12")]
		public override Stream MakeTemporaryCopy(Stream stream)
		{
			return null;
		}

		[Token(Token = "0x6000D98")]
		[Address(RVA = "0x138CD30", Offset = "0x138CD30", VA = "0x138CD30", Slot = "13")]
		public override Stream OpenForDirectUpdate(Stream stream)
		{
			return null;
		}

		[Token(Token = "0x6000D99")]
		[Address(RVA = "0x138CDD0", Offset = "0x138CDD0", VA = "0x138CDD0", Slot = "14")]
		public override void Dispose()
		{
		}

		[Token(Token = "0x6000D9A")]
		[Address(RVA = "0x138C818", Offset = "0x138C818", VA = "0x138C818")]
		private static string GetTempFileName(string original, bool makeTempFile)
		{
			return null;
		}
	}
	[Token(Token = "0x200016F")]
	public class MemoryArchiveStorage : BaseArchiveStorage
	{
		[Token(Token = "0x400160D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MemoryStream temporaryStream_;

		[Token(Token = "0x400160E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private MemoryStream finalStream_;

		[Token(Token = "0x17000184")]
		public MemoryStream FinalStream
		{
			[Token(Token = "0x6000D9D")]
			[Address(RVA = "0x139095C", Offset = "0x139095C", VA = "0x139095C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0x1390948", Offset = "0x1390948", VA = "0x1390948")]
		public MemoryArchiveStorage()
		{
		}

		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0x1390954", Offset = "0x1390954", VA = "0x1390954")]
		public MemoryArchiveStorage(FileUpdateMode updateMode)
		{
		}

		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0x1390964", Offset = "0x1390964", VA = "0x1390964", Slot = "10")]
		public override Stream GetTemporaryOutput()
		{
			return null;
		}

		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0x13909C8", Offset = "0x13909C8", VA = "0x13909C8", Slot = "11")]
		public override Stream ConvertTemporaryToFinal()
		{
			return null;
		}

		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0x1390A98", Offset = "0x1390A98", VA = "0x1390A98", Slot = "12")]
		public override Stream MakeTemporaryCopy(Stream stream)
		{
			return null;
		}

		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0x1390B58", Offset = "0x1390B58", VA = "0x1390B58", Slot = "13")]
		public override Stream OpenForDirectUpdate(Stream stream)
		{
			return null;
		}

		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0x1390C24", Offset = "0x1390C24", VA = "0x1390C24", Slot = "14")]
		public override void Dispose()
		{
		}
	}
	[Token(Token = "0x2000170")]
	public class DescriptorData
	{
		[Token(Token = "0x400160F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private long size;

		[Token(Token = "0x4001610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private long compressedSize;

		[Token(Token = "0x4001611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private long crc;

		[Token(Token = "0x17000185")]
		public long CompressedSize
		{
			[Token(Token = "0x6000DA3")]
			[Address(RVA = "0x138C684", Offset = "0x138C684", VA = "0x138C684")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6000DA4")]
			[Address(RVA = "0x138C68C", Offset = "0x138C68C", VA = "0x138C68C")]
			set
			{
			}
		}

		[Token(Token = "0x17000186")]
		public long Size
		{
			[Token(Token = "0x6000DA5")]
			[Address(RVA = "0x138C694", Offset = "0x138C694", VA = "0x138C694")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6000DA6")]
			[Address(RVA = "0x138C69C", Offset = "0x138C69C", VA = "0x138C69C")]
			set
			{
			}
		}

		[Token(Token = "0x17000187")]
		public long Crc
		{
			[Token(Token = "0x6000DA7")]
			[Address(RVA = "0x138C6A4", Offset = "0x138C6A4", VA = "0x138C6A4")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6000DA8")]
			[Address(RVA = "0x138C6AC", Offset = "0x138C6AC", VA = "0x138C6AC")]
			set
			{
			}
		}

		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0x138C6B8", Offset = "0x138C6B8", VA = "0x138C6B8")]
		public DescriptorData()
		{
		}
	}
	[Token(Token = "0x2000171")]
	internal class EntryPatchData
	{
		[Token(Token = "0x4001612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private long sizePatchOffset_;

		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private long crcPatchOffset_;

		[Token(Token = "0x17000188")]
		public long SizePatchOffset
		{
			[Token(Token = "0x6000DAA")]
			[Address(RVA = "0x138CE24", Offset = "0x138CE24", VA = "0x138CE24")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6000DAB")]
			[Address(RVA = "0x138CE2C", Offset = "0x138CE2C", VA = "0x138CE2C")]
			set
			{
			}
		}

		[Token(Token = "0x17000189")]
		public long CrcPatchOffset
		{
			[Token(Token = "0x6000DAC")]
			[Address(RVA = "0x138CE34", Offset = "0x138CE34", VA = "0x138CE34")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6000DAD")]
			[Address(RVA = "0x138CE3C", Offset = "0x138CE3C", VA = "0x138CE3C")]
			set
			{
			}
		}

		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0x138CE44", Offset = "0x138CE44", VA = "0x138CE44")]
		public EntryPatchData()
		{
		}
	}
	[Token(Token = "0x2000172")]
	internal class ZipHelperStream : Stream
	{
		[Token(Token = "0x4001614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool isOwner_;

		[Token(Token = "0x4001615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Stream stream_;

		[Token(Token = "0x1700018A")]
		public bool IsStreamOwner
		{
			[Token(Token = "0x6000DB1")]
			[Address(RVA = "0x9A1028", Offset = "0x9A1028", VA = "0x9A1028")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DB2")]
			[Address(RVA = "0x9A1030", Offset = "0x9A1030", VA = "0x9A1030")]
			set
			{
			}
		}

		[Token(Token = "0x1700018B")]
		public override bool CanRead
		{
			[Token(Token = "0x6000DB3")]
			[Address(RVA = "0x9A103C", Offset = "0x9A103C", VA = "0x9A103C", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700018C")]
		public override bool CanSeek
		{
			[Token(Token = "0x6000DB4")]
			[Address(RVA = "0x9A105C", Offset = "0x9A105C", VA = "0x9A105C", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700018D")]
		public override bool CanTimeout
		{
			[Token(Token = "0x6000DB5")]
			[Address(RVA = "0x9A107C", Offset = "0x9A107C", VA = "0x9A107C", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700018E")]
		public override long Length
		{
			[Token(Token = "0x6000DB6")]
			[Address(RVA = "0x9A109C", Offset = "0x9A109C", VA = "0x9A109C", Slot = "11")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x1700018F")]
		public override long Position
		{
			[Token(Token = "0x6000DB7")]
			[Address(RVA = "0x9A10BC", Offset = "0x9A10BC", VA = "0x9A10BC", Slot = "12")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6000DB8")]
			[Address(RVA = "0x9A10DC", Offset = "0x9A10DC", VA = "0x9A10DC", Slot = "13")]
			set
			{
			}
		}

		[Token(Token = "0x17000190")]
		public override bool CanWrite
		{
			[Token(Token = "0x6000DB9")]
			[Address(RVA = "0x9A1100", Offset = "0x9A1100", VA = "0x9A1100", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0x9A0F00", Offset = "0x9A0F00", VA = "0x9A0F00")]
		public ZipHelperStream(string name)
		{
		}

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0x9A0FAC", Offset = "0x9A0FAC", VA = "0x9A0FAC")]
		public ZipHelperStream(Stream stream)
		{
		}

		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0x9A1120", Offset = "0x9A1120", VA = "0x9A1120", Slot = "18")]
		public override void Flush()
		{
		}

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0x9A1144", Offset = "0x9A1144", VA = "0x9A1144", Slot = "26")]
		public override long Seek(long offset, SeekOrigin origin)
		{
			return default(long);
		}

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0x9A1168", Offset = "0x9A1168", VA = "0x9A1168", Slot = "27")]
		public override void SetLength(long value)
		{
		}

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0x9A118C", Offset = "0x9A118C", VA = "0x9A118C", Slot = "28")]
		public override int Read(byte[] buffer, int offset, int count)
		{
			return default(int);
		}

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0x9A11B0", Offset = "0x9A11B0", VA = "0x9A11B0", Slot = "30")]
		public override void Write(byte[] buffer, int offset, int count)
		{
		}

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0x9A11D4", Offset = "0x9A11D4", VA = "0x9A11D4", Slot = "17")]
		protected override void Dispose(bool disposing)
		{
		}

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0x9A11FC", Offset = "0x9A11FC", VA = "0x9A11FC")]
		private void WriteLocalHeader(ZipEntry entry, EntryPatchData patchData)
		{
		}

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0x9A16E4", Offset = "0x9A16E4", VA = "0x9A16E4")]
		public long LocateBlockWithSignature(int signature, long endLocation, int minimumBlockSize, int maximumVariableData)
		{
			return default(long);
		}

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0x9A1820", Offset = "0x9A1820", VA = "0x9A1820")]
		public void WriteZip64EndOfCentralDirectory(long noOfEntries, long sizeEntries, long centralDirOffset)
		{
		}

		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0x9A1990", Offset = "0x9A1990", VA = "0x9A1990")]
		public void WriteEndOfCentralDirectory(long noOfEntries, long sizeEntries, long startOfCentralDirectory, byte[] comment)
		{
		}

		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0x9A1C98", Offset = "0x9A1C98", VA = "0x9A1C98")]
		public int ReadLEShort()
		{
			return default(int);
		}

		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0x9A17F0", Offset = "0x9A17F0", VA = "0x9A17F0")]
		public int ReadLEInt()
		{
			return default(int);
		}

		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0x9A1D58", Offset = "0x9A1D58", VA = "0x9A1D58")]
		public long ReadLELong()
		{
			return default(long);
		}

		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0x9A15D0", Offset = "0x9A15D0", VA = "0x9A15D0")]
		public void WriteLEShort(int value)
		{
		}

		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0x9A1C14", Offset = "0x9A1C14", VA = "0x9A1C14")]
		public void WriteLEUshort(ushort value)
		{
		}

		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0x9A15A4", Offset = "0x9A15A4", VA = "0x9A15A4")]
		public void WriteLEInt(int value)
		{
		}

		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0x9A1C6C", Offset = "0x9A1C6C", VA = "0x9A1C6C")]
		public void WriteLEUint(uint value)
		{
		}

		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0x9A194C", Offset = "0x9A194C", VA = "0x9A194C")]
		public void WriteLELong(long value)
		{
		}

		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0x9A1DB0", Offset = "0x9A1DB0", VA = "0x9A1DB0")]
		public void WriteLEUlong(ulong value)
		{
		}

		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0x9A1DF4", Offset = "0x9A1DF4", VA = "0x9A1DF4")]
		public int WriteDataDescriptor(ZipEntry entry)
		{
			return default(int);
		}

		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0x9A1F68", Offset = "0x9A1F68", VA = "0x9A1F68")]
		public void ReadDataDescriptor(bool zip64, DescriptorData data)
		{
		}
	}
	[Token(Token = "0x2000173")]
	public class ZipInputStream : InflaterInputStream
	{
		[Token(Token = "0x20003EF")]
		private delegate int ReadDataHandler(byte[] b, int offset, int length);

		[Token(Token = "0x4001616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ReadDataHandler internalReader;

		[Token(Token = "0x4001617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Crc32 crc;

		[Token(Token = "0x4001618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private ZipEntry entry;

		[Token(Token = "0x4001619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private long size;

		[Token(Token = "0x400161A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int method;

		[Token(Token = "0x400161B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int flags;

		[Token(Token = "0x400161C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private string password;

		[Token(Token = "0x17000191")]
		public string Password
		{
			[Token(Token = "0x6000DD1")]
			[Address(RVA = "0x9A225C", Offset = "0x9A225C", VA = "0x9A225C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DD2")]
			[Address(RVA = "0x9A2264", Offset = "0x9A2264", VA = "0x9A2264")]
			set
			{
			}
		}

		[Token(Token = "0x17000192")]
		public bool CanDecompressEntry
		{
			[Token(Token = "0x6000DD3")]
			[Address(RVA = "0x9A226C", Offset = "0x9A226C", VA = "0x9A226C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000193")]
		public override int Available
		{
			[Token(Token = "0x6000DD8")]
			[Address(RVA = "0x9A2D5C", Offset = "0x9A2D5C", VA = "0x9A2D5C", Slot = "32")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000194")]
		public override long Length
		{
			[Token(Token = "0x6000DD9")]
			[Address(RVA = "0x9A2D6C", Offset = "0x9A2D6C", VA = "0x9A2D6C", Slot = "11")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0x9A20AC", Offset = "0x9A20AC", VA = "0x9A20AC")]
		public ZipInputStream(Stream baseInputStream)
		{
		}

		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0x9A2188", Offset = "0x9A2188", VA = "0x9A2188")]
		public ZipInputStream(Stream baseInputStream, int bufferSize)
		{
		}

		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0x9A2280", Offset = "0x9A2280", VA = "0x9A2280")]
		public ZipEntry GetNextEntry()
		{
			return null;
		}

		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0x9A2AB4", Offset = "0x9A2AB4", VA = "0x9A2AB4")]
		private void ReadDataDescriptor()
		{
		}

		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0x9A2C24", Offset = "0x9A2C24", VA = "0x9A2C24")]
		private void CompleteCloseEntry(bool testCrc)
		{
		}

		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0x9A284C", Offset = "0x9A284C", VA = "0x9A284C")]
		public void CloseEntry()
		{
		}

		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0x9A2E3C", Offset = "0x9A2E3C", VA = "0x9A2E3C", Slot = "29")]
		public override int ReadByte()
		{
			return default(int);
		}

		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0x9A2EEC", Offset = "0x9A2EEC", VA = "0x9A2EEC")]
		private int ReadingNotAvailable(byte[] destination, int offset, int count)
		{
			return default(int);
		}

		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0x9A2F5C", Offset = "0x9A2F5C", VA = "0x9A2F5C")]
		private int ReadingNotSupported(byte[] destination, int offset, int count)
		{
			return default(int);
		}

		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0x9A2FCC", Offset = "0x9A2FCC", VA = "0x9A2FCC")]
		private int InitialRead(byte[] destination, int offset, int count)
		{
			return default(int);
		}

		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0x9A3970", Offset = "0x9A3970", VA = "0x9A3970", Slot = "28")]
		public override int Read(byte[] buffer, int offset, int count)
		{
			return default(int);
		}

		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0x9A3428", Offset = "0x9A3428", VA = "0x9A3428")]
		private int BodyRead(byte[] buffer, int offset, int count)
		{
			return default(int);
		}

		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0x9A3ED0", Offset = "0x9A3ED0", VA = "0x9A3ED0", Slot = "17")]
		protected override void Dispose(bool disposing)
		{
		}
	}
	[Token(Token = "0x2000174")]
	public class ZipNameTransform : INameTransform
	{
		[Token(Token = "0x400161D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string trimPrefix_;

		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly char[] InvalidEntryChars;

		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly char[] InvalidEntryCharsRelaxed;

		[Token(Token = "0x17000195")]
		public string TrimPrefix
		{
			[Token(Token = "0x6000DE6")]
			[Address(RVA = "0x9A4740", Offset = "0x9A4740", VA = "0x9A4740")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DE7")]
			[Address(RVA = "0x9A4080", Offset = "0x9A4080", VA = "0x9A4080")]
			set
			{
			}
		}

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0x9A4038", Offset = "0x9A4038", VA = "0x9A4038")]
		public ZipNameTransform()
		{
		}

		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0x9A4040", Offset = "0x9A4040", VA = "0x9A4040")]
		public ZipNameTransform(string trimPrefix)
		{
		}

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0x9A40B4", Offset = "0x9A40B4", VA = "0x9A40B4")]
		static ZipNameTransform()
		{
		}

		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0x9A42D8", Offset = "0x9A42D8", VA = "0x9A42D8", Slot = "5")]
		public string TransformDirectory(string name)
		{
			return null;
		}

		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0x9A43C8", Offset = "0x9A43C8", VA = "0x9A43C8", Slot = "4")]
		public string TransformFile(string name)
		{
			return null;
		}

		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0x9A45B4", Offset = "0x9A45B4", VA = "0x9A45B4")]
		private static string MakeValidName(string name, char replacement)
		{
			return null;
		}

		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0x9A4748", Offset = "0x9A4748", VA = "0x9A4748")]
		public static bool IsValidName(string name, bool relaxed)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0x9A4828", Offset = "0x9A4828", VA = "0x9A4828")]
		public static bool IsValidName(string name)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000175")]
	public class ZipOutputStream : DeflaterOutputStream
	{
		[Token(Token = "0x4001620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<ZipEntry> entries;

		[Token(Token = "0x4001621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Crc32 crc;

		[Token(Token = "0x4001622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private ZipEntry curEntry;

		[Token(Token = "0x4001623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int defaultCompressionLevel;

		[Token(Token = "0x4001624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private CompressionMethod curMethod;

		[Token(Token = "0x4001625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private long size;

		[Token(Token = "0x4001626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private long offset;

		[Token(Token = "0x4001627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private byte[] zipComment;

		[Token(Token = "0x4001628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool patchEntryHeader;

		[Token(Token = "0x4001629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private long crcPatchPos;

		[Token(Token = "0x400162A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private long sizePatchPos;

		[Token(Token = "0x400162B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private UseZip64 useZip64_;

		[Token(Token = "0x17000196")]
		public bool IsFinished
		{
			[Token(Token = "0x6000DED")]
			[Address(RVA = "0x9A4B08", Offset = "0x9A4B08", VA = "0x9A4B08")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000197")]
		public UseZip64 UseZip64
		{
			[Token(Token = "0x6000DF1")]
			[Address(RVA = "0x9A4C40", Offset = "0x9A4C40", VA = "0x9A4C40")]
			get
			{
				return default(UseZip64);
			}
			[Token(Token = "0x6000DF2")]
			[Address(RVA = "0x9A4C48", Offset = "0x9A4C48", VA = "0x9A4C48")]
			set
			{
			}
		}

		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0x9A48C8", Offset = "0x9A48C8", VA = "0x9A48C8")]
		public ZipOutputStream(Stream baseOutputStream)
		{
		}

		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0x9A49E4", Offset = "0x9A49E4", VA = "0x9A49E4")]
		public ZipOutputStream(Stream baseOutputStream, int bufferSize)
		{
		}

		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0x9A4B18", Offset = "0x9A4B18", VA = "0x9A4B18")]
		public void SetComment(string comment)
		{
		}

		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0x9A4BE4", Offset = "0x9A4BE4", VA = "0x9A4BE4")]
		public void SetLevel(int level)
		{
		}

		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0x9A4C20", Offset = "0x9A4C20", VA = "0x9A4C20")]
		public int GetLevel()
		{
			return default(int);
		}

		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0x9A4C50", Offset = "0x9A4C50", VA = "0x9A4C50")]
		private void WriteLeShort(int value)
		{
		}

		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0x9A4CA8", Offset = "0x9A4CA8", VA = "0x9A4CA8")]
		private void WriteLeInt(int value)
		{
		}

		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0x9A4CD4", Offset = "0x9A4CD4", VA = "0x9A4CD4")]
		private void WriteLeLong(long value)
		{
		}

		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0x9A4D18", Offset = "0x9A4D18", VA = "0x9A4D18")]
		public void PutNextEntry(ZipEntry entry)
		{
		}

		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0x9A5548", Offset = "0x9A5548", VA = "0x9A5548")]
		public void CloseEntry()
		{
		}

		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0x9A5F40", Offset = "0x9A5F40", VA = "0x9A5F40")]
		private void WriteEncryptionHeader(long crcValue)
		{
		}

		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0x9A5E18", Offset = "0x9A5E18", VA = "0x9A5E18")]
		private static void AddExtraDataAES(ZipEntry entry, ZipExtraData extraData)
		{
		}

		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0x9A5EAC", Offset = "0x9A5EAC", VA = "0x9A5EAC")]
		private void WriteAESHeader(ZipEntry entry)
		{
		}

		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0x9A6060", Offset = "0x9A6060", VA = "0x9A6060", Slot = "30")]
		public override void Write(byte[] buffer, int offset, int count)
		{
		}

		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0x9A6294", Offset = "0x9A6294", VA = "0x9A6294")]
		private void CopyAndEncrypt(byte[] buffer, int offset, int count)
		{
		}

		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0x9A6390", Offset = "0x9A6390", VA = "0x9A6390", Slot = "32")]
		public override void Finish()
		{
		}
	}
	[Token(Token = "0x2000176")]
	public static class ZipStrings
	{
		[Token(Token = "0x400162C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int codePage;

		[Token(Token = "0x400162D")]
		private const int AutomaticCodePage = -1;

		[Token(Token = "0x400162E")]
		private const int FallbackCodePage = 437;

		[Token(Token = "0x400162F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x800804", Offset = "0x800804")]
		private static readonly int <SystemDefaultCodePage>k__BackingField;

		[Token(Token = "0x17000198")]
		public static int CodePage
		{
			[Token(Token = "0x6000DFF")]
			[Address(RVA = "0x9A6DCC", Offset = "0x9A6DCC", VA = "0x9A6DCC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000E00")]
			[Address(RVA = "0x9A6E88", Offset = "0x9A6E88", VA = "0x9A6E88")]
			set
			{
			}
		}

		[Token(Token = "0x17000199")]
		public static int SystemDefaultCodePage
		{
			[Token(Token = "0x6000E01")]
			[Address(RVA = "0x9A6F60", Offset = "0x9A6F60", VA = "0x9A6F60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x804908", Offset = "0x804908")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700019A")]
		public static bool UseUnicode
		{
			[Token(Token = "0x6000E02")]
			[Address(RVA = "0x9A6FC8", Offset = "0x9A6FC8", VA = "0x9A6FC8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E03")]
			[Address(RVA = "0x9A7058", Offset = "0x9A7058", VA = "0x9A7058")]
			set
			{
			}
		}

		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0x9A6CA0", Offset = "0x9A6CA0", VA = "0x9A6CA0")]
		static ZipStrings()
		{
		}

		[Token(Token = "0x6000E04")]
		[Address(RVA = "0x9A7160", Offset = "0x9A7160", VA = "0x9A7160")]
		public static string ConvertToString(byte[] data, int count)
		{
			return null;
		}

		[Token(Token = "0x6000E05")]
		[Address(RVA = "0x9A7220", Offset = "0x9A7220", VA = "0x9A7220")]
		public static string ConvertToString(byte[] data)
		{
			return null;
		}

		[Token(Token = "0x6000E06")]
		[Address(RVA = "0x9A7294", Offset = "0x9A7294", VA = "0x9A7294")]
		private static Encoding EncodingFromFlag(int flags)
		{
			return null;
		}

		[Token(Token = "0x6000E07")]
		[Address(RVA = "0x9A739C", Offset = "0x9A739C", VA = "0x9A739C")]
		public static string ConvertToStringExt(int flags, byte[] data, int count)
		{
			return null;
		}

		[Token(Token = "0x6000E08")]
		[Address(RVA = "0x9A2A30", Offset = "0x9A2A30", VA = "0x9A2A30")]
		public static string ConvertToStringExt(int flags, byte[] data)
		{
			return null;
		}

		[Token(Token = "0x6000E09")]
		[Address(RVA = "0x9A3384", Offset = "0x9A3384", VA = "0x9A3384")]
		public static byte[] ConvertToArray(string str)
		{
			return null;
		}

		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0x9A1628", Offset = "0x9A1628", VA = "0x9A1628")]
		public static byte[] ConvertToArray(int flags, string str)
		{
			return null;
		}
	}
}
namespace ICSharpCode.SharpZipLib.Zip.Compression
{
	[Token(Token = "0x2000177")]
	public class Deflater
	{
		[Token(Token = "0x20003F0")]
		public enum CompressionLevel
		{
			[Token(Token = "0x4002655")]
			BEST_COMPRESSION = 9,
			[Token(Token = "0x4002656")]
			BEST_SPEED = 1,
			[Token(Token = "0x4002657")]
			DEFAULT_COMPRESSION = -1,
			[Token(Token = "0x4002658")]
			NO_COMPRESSION = 0,
			[Token(Token = "0x4002659")]
			DEFLATED = 8
		}

		[Token(Token = "0x4001630")]
		public const int BEST_COMPRESSION = 9;

		[Token(Token = "0x4001631")]
		public const int BEST_SPEED = 1;

		[Token(Token = "0x4001632")]
		public const int DEFAULT_COMPRESSION = -1;

		[Token(Token = "0x4001633")]
		public const int NO_COMPRESSION = 0;

		[Token(Token = "0x4001634")]
		public const int DEFLATED = 8;

		[Token(Token = "0x4001635")]
		private const int IS_SETDICT = 1;

		[Token(Token = "0x4001636")]
		private const int IS_FLUSHING = 4;

		[Token(Token = "0x4001637")]
		private const int IS_FINISHING = 8;

		[Token(Token = "0x4001638")]
		private const int INIT_STATE = 0;

		[Token(Token = "0x4001639")]
		private const int SETDICT_STATE = 1;

		[Token(Token = "0x400163A")]
		private const int BUSY_STATE = 16;

		[Token(Token = "0x400163B")]
		private const int FLUSHING_STATE = 20;

		[Token(Token = "0x400163C")]
		private const int FINISHING_STATE = 28;

		[Token(Token = "0x400163D")]
		private const int FINISHED_STATE = 30;

		[Token(Token = "0x400163E")]
		private const int CLOSED_STATE = 127;

		[Token(Token = "0x400163F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int level;

		[Token(Token = "0x4001640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool noZlibHeaderOrFooter;

		[Token(Token = "0x4001641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int state;

		[Token(Token = "0x4001642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private long totalOut;

		[Token(Token = "0x4001643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private DeflaterPending pending;

		[Token(Token = "0x4001644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private DeflaterEngine engine;

		[Token(Token = "0x1700019B")]
		public int Adler
		{
			[Token(Token = "0x6000E0F")]
			[Address(RVA = "0xA77584", Offset = "0xA77584", VA = "0xA77584")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700019C")]
		public long TotalIn
		{
			[Token(Token = "0x6000E10")]
			[Address(RVA = "0xA775CC", Offset = "0xA775CC", VA = "0xA775CC")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x1700019D")]
		public long TotalOut
		{
			[Token(Token = "0x6000E11")]
			[Address(RVA = "0xA775EC", Offset = "0xA775EC", VA = "0xA775EC")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x1700019E")]
		public bool IsFinished
		{
			[Token(Token = "0x6000E14")]
			[Address(RVA = "0xA77614", Offset = "0xA77614", VA = "0xA77614")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700019F")]
		public bool IsNeedingInput
		{
			[Token(Token = "0x6000E15")]
			[Address(RVA = "0xA77644", Offset = "0xA77644", VA = "0xA77644")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0xA7713C", Offset = "0xA7713C", VA = "0xA7713C")]
		public Deflater()
		{
		}

		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0xA77270", Offset = "0xA77270", VA = "0xA77270")]
		public Deflater(int level)
		{
		}

		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0xA77148", Offset = "0xA77148", VA = "0xA77148")]
		public Deflater(int level, bool noZlibHeaderOrFooter)
		{
		}

		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0xA77468", Offset = "0xA77468", VA = "0xA77468")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000E12")]
		[Address(RVA = "0xA775F4", Offset = "0xA775F4", VA = "0xA775F4")]
		public void Flush()
		{
		}

		[Token(Token = "0x6000E13")]
		[Address(RVA = "0xA77604", Offset = "0xA77604", VA = "0xA77604")]
		public void Finish()
		{
		}

		[Token(Token = "0x6000E16")]
		[Address(RVA = "0xA7767C", Offset = "0xA7767C", VA = "0xA7767C")]
		public void SetInput(byte[] input)
		{
		}

		[Token(Token = "0x6000E17")]
		[Address(RVA = "0xA7769C", Offset = "0xA7769C", VA = "0xA7769C")]
		public void SetInput(byte[] input, int offset, int count)
		{
		}

		[Token(Token = "0x6000E18")]
		[Address(RVA = "0xA77398", Offset = "0xA77398", VA = "0xA77398")]
		public void SetLevel(int level)
		{
		}

		[Token(Token = "0x6000E19")]
		[Address(RVA = "0xA77B54", Offset = "0xA77B54", VA = "0xA77B54")]
		public int GetLevel()
		{
			return default(int);
		}

		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0xA77378", Offset = "0xA77378", VA = "0xA77378")]
		public void SetStrategy(DeflateStrategy strategy)
		{
		}

		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0xA77B5C", Offset = "0xA77B5C", VA = "0xA77B5C")]
		public int Deflate(byte[] output)
		{
			return default(int);
		}

		[Token(Token = "0x6000E1C")]
		[Address(RVA = "0xA77B7C", Offset = "0xA77B7C", VA = "0xA77B7C")]
		public int Deflate(byte[] output, int offset, int length)
		{
			return default(int);
		}

		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0xA77F90", Offset = "0xA77F90", VA = "0xA77F90")]
		public void SetDictionary(byte[] dictionary)
		{
		}

		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0xA77FB0", Offset = "0xA77FB0", VA = "0xA77FB0")]
		public void SetDictionary(byte[] dictionary, int index, int count)
		{
		}
	}
	[Token(Token = "0x2000178")]
	public static class DeflaterConstants
	{
		[Token(Token = "0x4001645")]
		public const bool DEBUGGING = false;

		[Token(Token = "0x4001646")]
		public const int STORED_BLOCK = 0;

		[Token(Token = "0x4001647")]
		public const int STATIC_TREES = 1;

		[Token(Token = "0x4001648")]
		public const int DYN_TREES = 2;

		[Token(Token = "0x4001649")]
		public const int PRESET_DICT = 32;

		[Token(Token = "0x400164A")]
		public const int DEFAULT_MEM_LEVEL = 8;

		[Token(Token = "0x400164B")]
		public const int MAX_MATCH = 258;

		[Token(Token = "0x400164C")]
		public const int MIN_MATCH = 3;

		[Token(Token = "0x400164D")]
		public const int MAX_WBITS = 15;

		[Token(Token = "0x400164E")]
		public const int WSIZE = 32768;

		[Token(Token = "0x400164F")]
		public const int WMASK = 32767;

		[Token(Token = "0x4001650")]
		public const int HASH_BITS = 15;

		[Token(Token = "0x4001651")]
		public const int HASH_SIZE = 32768;

		[Token(Token = "0x4001652")]
		public const int HASH_MASK = 32767;

		[Token(Token = "0x4001653")]
		public const int HASH_SHIFT = 5;

		[Token(Token = "0x4001654")]
		public const int MIN_LOOKAHEAD = 262;

		[Token(Token = "0x4001655")]
		public const int MAX_DIST = 32506;

		[Token(Token = "0x4001656")]
		public const int PENDING_BUF_SIZE = 65536;

		[Token(Token = "0x4001657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int MAX_BLOCK_SIZE;

		[Token(Token = "0x4001658")]
		public const int DEFLATE_STORED = 0;

		[Token(Token = "0x4001659")]
		public const int DEFLATE_FAST = 1;

		[Token(Token = "0x400165A")]
		public const int DEFLATE_SLOW = 2;

		[Token(Token = "0x400165B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static int[] GOOD_LENGTH;

		[Token(Token = "0x400165C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static int[] MAX_LAZY;

		[Token(Token = "0x400165D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static int[] NICE_LENGTH;

		[Token(Token = "0x400165E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static int[] MAX_CHAIN;

		[Token(Token = "0x400165F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static int[] COMPR_FUNC;
	}
	[Token(Token = "0x2000179")]
	public enum DeflateStrategy
	{
		[Token(Token = "0x4001661")]
		Default,
		[Token(Token = "0x4001662")]
		Filtered,
		[Token(Token = "0x4001663")]
		HuffmanOnly
	}
	[Token(Token = "0x200017A")]
	public class DeflaterEngine
	{
		[Token(Token = "0x4001664")]
		private const int TooFar = 4096;

		[Token(Token = "0x4001665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int ins_h;

		[Token(Token = "0x4001666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private short[] head;

		[Token(Token = "0x4001667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private short[] prev;

		[Token(Token = "0x4001668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int matchStart;

		[Token(Token = "0x4001669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int matchLen;

		[Token(Token = "0x400166A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool prevAvailable;

		[Token(Token = "0x400166B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int blockStart;

		[Token(Token = "0x400166C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int strstart;

		[Token(Token = "0x400166D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int lookahead;

		[Token(Token = "0x400166E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private byte[] window;

		[Token(Token = "0x400166F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private DeflateStrategy strategy;

		[Token(Token = "0x4001670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int max_chain;

		[Token(Token = "0x4001671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int max_lazy;

		[Token(Token = "0x4001672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int niceLength;

		[Token(Token = "0x4001673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int goodLength;

		[Token(Token = "0x4001674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int compressionFunction;

		[Token(Token = "0x4001675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private byte[] inputBuf;

		[Token(Token = "0x4001676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private long totalIn;

		[Token(Token = "0x4001677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int inputOff;

		[Token(Token = "0x4001678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int inputEnd;

		[Token(Token = "0x4001679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private DeflaterPending pending;

		[Token(Token = "0x400167A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private DeflaterHuffman huffman;

		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Adler32 adler;

		[Token(Token = "0x170001A0")]
		public int Adler
		{
			[Token(Token = "0x6000E28")]
			[Address(RVA = "0xA775B4", Offset = "0xA775B4", VA = "0xA775B4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001A1")]
		public long TotalIn
		{
			[Token(Token = "0x6000E29")]
			[Address(RVA = "0xA78D10", Offset = "0xA78D10", VA = "0xA78D10")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x170001A2")]
		public DeflateStrategy Strategy
		{
			[Token(Token = "0x6000E2A")]
			[Address(RVA = "0xA78D18", Offset = "0xA78D18", VA = "0xA78D18")]
			get
			{
				return default(DeflateStrategy);
			}
			[Token(Token = "0x6000E2B")]
			[Address(RVA = "0xA78D20", Offset = "0xA78D20", VA = "0xA78D20")]
			set
			{
			}
		}

		[Token(Token = "0x6000E20")]
		[Address(RVA = "0xA78308", Offset = "0xA78308", VA = "0xA78308")]
		public DeflaterEngine(DeflaterPending pending)
		{
		}

		[Token(Token = "0x6000E21")]
		[Address(RVA = "0xA77284", Offset = "0xA77284", VA = "0xA77284")]
		public DeflaterEngine(DeflaterPending pending, bool noAdlerCalculation)
		{
		}

		[Token(Token = "0x6000E22")]
		[Address(RVA = "0xA77E78", Offset = "0xA77E78", VA = "0xA77E78")]
		public bool Deflate(bool flush, bool finish)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E23")]
		[Address(RVA = "0xA77758", Offset = "0xA77758", VA = "0xA77758")]
		public void SetInput(byte[] buffer, int offset, int count)
		{
		}

		[Token(Token = "0x6000E24")]
		[Address(RVA = "0xA7766C", Offset = "0xA7766C", VA = "0xA7766C")]
		public bool NeedsInput()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E25")]
		[Address(RVA = "0xA78068", Offset = "0xA78068", VA = "0xA78068")]
		public void SetDictionary(byte[] buffer, int offset, int length)
		{
		}

		[Token(Token = "0x6000E26")]
		[Address(RVA = "0xA774B4", Offset = "0xA774B4", VA = "0xA774B4")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000E27")]
		[Address(RVA = "0xA77E64", Offset = "0xA77E64", VA = "0xA77E64")]
		public void ResetAdler()
		{
		}

		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0xA778A0", Offset = "0xA778A0", VA = "0xA778A0")]
		public void SetLevel(int level)
		{
		}

		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0xA78410", Offset = "0xA78410", VA = "0xA78410")]
		public void FillWindow()
		{
		}

		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0xA78BB0", Offset = "0xA78BB0", VA = "0xA78BB0")]
		private void UpdateHash()
		{
		}

		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0xA78C10", Offset = "0xA78C10", VA = "0xA78C10")]
		private int InsertString()
		{
			return default(int);
		}

		[Token(Token = "0x6000E30")]
		[Address(RVA = "0xA79230", Offset = "0xA79230", VA = "0xA79230")]
		private void SlideWindow()
		{
		}

		[Token(Token = "0x6000E31")]
		[Address(RVA = "0xA79314", Offset = "0xA79314", VA = "0xA79314")]
		private bool FindLongestMatch(int curMatch)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E32")]
		[Address(RVA = "0xA7852C", Offset = "0xA7852C", VA = "0xA7852C")]
		private bool DeflateStored(bool flush, bool finish)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0xA786AC", Offset = "0xA786AC", VA = "0xA786AC")]
		private bool DeflateFast(bool flush, bool finish)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E34")]
		[Address(RVA = "0xA78904", Offset = "0xA78904", VA = "0xA78904")]
		private bool DeflateSlow(bool flush, bool finish)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200017B")]
	public class DeflaterHuffman
	{
		[Token(Token = "0x20003F1")]
		private class Tree
		{
			[Token(Token = "0x400265A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public short[] freqs;

			[Token(Token = "0x400265B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public byte[] length;

			[Token(Token = "0x400265C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int minNumCodes;

			[Token(Token = "0x400265D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int numCodes;

			[Token(Token = "0x400265E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private short[] codes;

			[Token(Token = "0x400265F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private readonly int[] bl_counts;

			[Token(Token = "0x4002660")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private readonly int maxLength;

			[Token(Token = "0x4002661")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private DeflaterHuffman dh;

			[Token(Token = "0x6001A6D")]
			[Address(RVA = "0xA7A3F0", Offset = "0xA7A3F0", VA = "0xA7A3F0")]
			public Tree(DeflaterHuffman dh, int elems, int minCodes, int maxLength)
			{
			}

			[Token(Token = "0x6001A6E")]
			[Address(RVA = "0xA7A498", Offset = "0xA7A498", VA = "0xA7A498")]
			public void Reset()
			{
			}

			[Token(Token = "0x6001A6F")]
			[Address(RVA = "0xA7ACDC", Offset = "0xA7ACDC", VA = "0xA7ACDC")]
			public void WriteSymbol(int code)
			{
			}

			[Token(Token = "0x6001A70")]
			[Address(RVA = "0xA7B744", Offset = "0xA7B744", VA = "0xA7B744")]
			public void CheckEmpty()
			{
			}

			[Token(Token = "0x6001A71")]
			[Address(RVA = "0xA7B738", Offset = "0xA7B738", VA = "0xA7B738")]
			public void SetStaticCodes(short[] staticCodes, byte[] staticLengths)
			{
			}

			[Token(Token = "0x6001A72")]
			[Address(RVA = "0xA7A6A4", Offset = "0xA7A6A4", VA = "0xA7A6A4")]
			public void BuildCodes()
			{
			}

			[Token(Token = "0x6001A73")]
			[Address(RVA = "0xA7AD84", Offset = "0xA7AD84", VA = "0xA7AD84")]
			public void BuildTree()
			{
			}

			[Token(Token = "0x6001A74")]
			[Address(RVA = "0xA7B6AC", Offset = "0xA7B6AC", VA = "0xA7B6AC")]
			public int GetEncodedLength()
			{
				return default(int);
			}

			[Token(Token = "0x6001A75")]
			[Address(RVA = "0xA7B518", Offset = "0xA7B518", VA = "0xA7B518")]
			public void CalcBLFreq(Tree blTree)
			{
			}

			[Token(Token = "0x6001A76")]
			[Address(RVA = "0xA7A89C", Offset = "0xA7A89C", VA = "0xA7A89C")]
			public void WriteTree(Tree blTree)
			{
			}

			[Token(Token = "0x6001A77")]
			[Address(RVA = "0xA7B820", Offset = "0xA7B820", VA = "0xA7B820")]
			private void BuildLength(int[] childs)
			{
			}
		}

		[Token(Token = "0x400167C")]
		private const int BUFSIZE = 16384;

		[Token(Token = "0x400167D")]
		private const int LITERAL_NUM = 286;

		[Token(Token = "0x400167E")]
		private const int DIST_NUM = 30;

		[Token(Token = "0x400167F")]
		private const int BITLEN_NUM = 19;

		[Token(Token = "0x4001680")]
		private const int REP_3_6 = 16;

		[Token(Token = "0x4001681")]
		private const int REP_3_10 = 17;

		[Token(Token = "0x4001682")]
		private const int REP_11_138 = 18;

		[Token(Token = "0x4001683")]
		private const int EOF_SYMBOL = 256;

		[Token(Token = "0x4001684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int[] BL_ORDER;

		[Token(Token = "0x4001685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly byte[] bit4Reverse;

		[Token(Token = "0x4001686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static short[] staticLCodes;

		[Token(Token = "0x4001687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static byte[] staticLLength;

		[Token(Token = "0x4001688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static short[] staticDCodes;

		[Token(Token = "0x4001689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static byte[] staticDLength;

		[Token(Token = "0x400168A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public DeflaterPending pending;

		[Token(Token = "0x400168B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Tree literalTree;

		[Token(Token = "0x400168C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Tree distTree;

		[Token(Token = "0x400168D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Tree blTree;

		[Token(Token = "0x400168E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private short[] d_buf;

		[Token(Token = "0x400168F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private byte[] l_buf;

		[Token(Token = "0x4001690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int last_lit;

		[Token(Token = "0x4001691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int extra_bits;

		[Token(Token = "0x6000E35")]
		[Address(RVA = "0xA79F3C", Offset = "0xA79F3C", VA = "0xA79F3C")]
		static DeflaterHuffman()
		{
		}

		[Token(Token = "0x6000E36")]
		[Address(RVA = "0xA78310", Offset = "0xA78310", VA = "0xA78310")]
		public DeflaterHuffman(DeflaterPending pending)
		{
		}

		[Token(Token = "0x6000E37")]
		[Address(RVA = "0xA78CCC", Offset = "0xA78CCC", VA = "0xA78CCC")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000E38")]
		[Address(RVA = "0xA7A4F8", Offset = "0xA7A4F8", VA = "0xA7A4F8")]
		public void SendAllTrees(int blTreeCodes)
		{
		}

		[Token(Token = "0x6000E39")]
		[Address(RVA = "0xA7AA6C", Offset = "0xA7AA6C", VA = "0xA7AA6C")]
		public void CompressBlock()
		{
		}

		[Token(Token = "0x6000E3A")]
		[Address(RVA = "0xA78D28", Offset = "0xA78D28", VA = "0xA78D28")]
		public void FlushStoredBlock(byte[] stored, int storedOffset, int storedLength, bool lastBlock)
		{
		}

		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0xA78DCC", Offset = "0xA78DCC", VA = "0xA78DCC")]
		public void FlushBlock(byte[] stored, int storedOffset, int storedLength, bool lastBlock)
		{
		}

		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0xA79F2C", Offset = "0xA79F2C", VA = "0xA79F2C")]
		public bool IsFull()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0xA79188", Offset = "0xA79188", VA = "0xA79188")]
		public bool TallyLit(int literal)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0xA79D40", Offset = "0xA79D40", VA = "0xA79D40")]
		public bool TallyDist(int distance, int length)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0xA7A308", Offset = "0xA7A308", VA = "0xA7A308")]
		public static short BitReverse(int toReverse)
		{
			return default(short);
		}

		[Token(Token = "0x6000E40")]
		[Address(RVA = "0xA7ACA8", Offset = "0xA7ACA8", VA = "0xA7ACA8")]
		private static int Lcode(int length)
		{
			return default(int);
		}

		[Token(Token = "0x6000E41")]
		[Address(RVA = "0xA7AD58", Offset = "0xA7AD58", VA = "0xA7AD58")]
		private static int Dcode(int distance)
		{
			return default(int);
		}
	}
	[Token(Token = "0x200017C")]
	public class DeflaterPending : PendingBuffer
	{
		[Token(Token = "0x6000E42")]
		[Address(RVA = "0xA77278", Offset = "0xA77278", VA = "0xA77278")]
		public DeflaterPending()
		{
		}
	}
	[Token(Token = "0x200017D")]
	public class Inflater
	{
		[Token(Token = "0x4001692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int[] CPLENS;

		[Token(Token = "0x4001693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int[] CPLEXT;

		[Token(Token = "0x4001694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly int[] CPDIST;

		[Token(Token = "0x4001695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly int[] CPDEXT;

		[Token(Token = "0x4001696")]
		private const int DECODE_HEADER = 0;

		[Token(Token = "0x4001697")]
		private const int DECODE_DICT = 1;

		[Token(Token = "0x4001698")]
		private const int DECODE_BLOCKS = 2;

		[Token(Token = "0x4001699")]
		private const int DECODE_STORED_LEN1 = 3;

		[Token(Token = "0x400169A")]
		private const int DECODE_STORED_LEN2 = 4;

		[Token(Token = "0x400169B")]
		private const int DECODE_STORED = 5;

		[Token(Token = "0x400169C")]
		private const int DECODE_DYN_HEADER = 6;

		[Token(Token = "0x400169D")]
		private const int DECODE_HUFFMAN = 7;

		[Token(Token = "0x400169E")]
		private const int DECODE_HUFFMAN_LENBITS = 8;

		[Token(Token = "0x400169F")]
		private const int DECODE_HUFFMAN_DIST = 9;

		[Token(Token = "0x40016A0")]
		private const int DECODE_HUFFMAN_DISTBITS = 10;

		[Token(Token = "0x40016A1")]
		private const int DECODE_CHKSUM = 11;

		[Token(Token = "0x40016A2")]
		private const int FINISHED = 12;

		[Token(Token = "0x40016A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int mode;

		[Token(Token = "0x40016A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int readAdler;

		[Token(Token = "0x40016A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int neededBits;

		[Token(Token = "0x40016A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int repLength;

		[Token(Token = "0x40016A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int repDist;

		[Token(Token = "0x40016A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int uncomprLen;

		[Token(Token = "0x40016A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool isLastBlock;

		[Token(Token = "0x40016AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private long totalOut;

		[Token(Token = "0x40016AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private long totalIn;

		[Token(Token = "0x40016AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool noHeader;

		[Token(Token = "0x40016AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly StreamManipulator input;

		[Token(Token = "0x40016AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OutputWindow outputWindow;

		[Token(Token = "0x40016AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private InflaterDynHeader dynHeader;

		[Token(Token = "0x40016B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InflaterHuffmanTree litlenTree;

		[Token(Token = "0x40016B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private InflaterHuffmanTree distTree;

		[Token(Token = "0x40016B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Adler32 adler;

		[Token(Token = "0x170001A3")]
		public bool IsNeedingInput
		{
			[Token(Token = "0x6000E51")]
			[Address(RVA = "0xA7D054", Offset = "0xA7D054", VA = "0xA7D054")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A4")]
		public bool IsNeedingDictionary
		{
			[Token(Token = "0x6000E52")]
			[Address(RVA = "0xA7CC9C", Offset = "0xA7CC9C", VA = "0xA7CC9C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A5")]
		public bool IsFinished
		{
			[Token(Token = "0x6000E53")]
			[Address(RVA = "0xA7D018", Offset = "0xA7D018", VA = "0xA7D018")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A6")]
		public int Adler
		{
			[Token(Token = "0x6000E54")]
			[Address(RVA = "0xA7D070", Offset = "0xA7D070", VA = "0xA7D070")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001A7")]
		public long TotalOut
		{
			[Token(Token = "0x6000E55")]
			[Address(RVA = "0xA7D0A4", Offset = "0xA7D0A4", VA = "0xA7D0A4")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x170001A8")]
		public long TotalIn
		{
			[Token(Token = "0x6000E56")]
			[Address(RVA = "0xA7D0AC", Offset = "0xA7D0AC", VA = "0xA7D0AC")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x170001A9")]
		public int RemainingInput
		{
			[Token(Token = "0x6000E57")]
			[Address(RVA = "0xA7D0D0", Offset = "0xA7D0D0", VA = "0xA7D0D0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000E43")]
		[Address(RVA = "0xA7BC24", Offset = "0xA7BC24", VA = "0xA7BC24")]
		public Inflater()
		{
		}

		[Token(Token = "0x6000E44")]
		[Address(RVA = "0xA7BC2C", Offset = "0xA7BC2C", VA = "0xA7BC2C")]
		public Inflater(bool noHeader)
		{
		}

		[Token(Token = "0x6000E45")]
		[Address(RVA = "0xA7BD08", Offset = "0xA7BD08", VA = "0xA7BD08")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000E46")]
		[Address(RVA = "0xA7BD78", Offset = "0xA7BD78", VA = "0xA7BD78")]
		private bool DecodeHeader()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E47")]
		[Address(RVA = "0xA7BEB8", Offset = "0xA7BEB8", VA = "0xA7BEB8")]
		private bool DecodeDict()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E48")]
		[Address(RVA = "0xA7BF30", Offset = "0xA7BF30", VA = "0xA7BF30")]
		private bool DecodeHuffman()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E49")]
		[Address(RVA = "0xA7C3D4", Offset = "0xA7C3D4", VA = "0xA7C3D4")]
		private bool DecodeChksum()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E4A")]
		[Address(RVA = "0xA7C6A4", Offset = "0xA7C6A4", VA = "0xA7C6A4")]
		private bool Decode()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E4B")]
		[Address(RVA = "0xA7CA9C", Offset = "0xA7CA9C", VA = "0xA7CA9C")]
		public void SetDictionary(byte[] buffer)
		{
		}

		[Token(Token = "0x6000E4C")]
		[Address(RVA = "0xA7CABC", Offset = "0xA7CABC", VA = "0xA7CABC")]
		public void SetDictionary(byte[] buffer, int index, int count)
		{
		}

		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0xA7CCC0", Offset = "0xA7CCC0", VA = "0xA7CCC0")]
		public void SetInput(byte[] buffer)
		{
		}

		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0xA7CCE0", Offset = "0xA7CCE0", VA = "0xA7CCE0")]
		public void SetInput(byte[] buffer, int index, int count)
		{
		}

		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0xA7CD24", Offset = "0xA7CD24", VA = "0xA7CD24")]
		public int Inflate(byte[] buffer)
		{
			return default(int);
		}

		[Token(Token = "0x6000E50")]
		[Address(RVA = "0xA7CDC4", Offset = "0xA7CDC4", VA = "0xA7CDC4")]
		public int Inflate(byte[] buffer, int offset, int count)
		{
			return default(int);
		}
	}
	[Token(Token = "0x200017E")]
	internal class InflaterDynHeader
	{
		[Token(Token = "0x20003F2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9BB8", Offset = "0x7F9BB8")]
		private sealed class <CreateStateMachine>d__7 : IEnumerable<bool>, IEnumerable, IEnumerator<bool>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002662")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002663")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private bool <>2__current;

			[Token(Token = "0x4002664")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002665")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public InflaterDynHeader <>4__this;

			[Token(Token = "0x4002666")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <dataCodeCount>5__2;

			[Token(Token = "0x4002667")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private InflaterHuffmanTree <metaCodeTree>5__3;

			[Token(Token = "0x4002668")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <index>5__4;

			[Token(Token = "0x4002669")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int <i>5__5;

			[Token(Token = "0x400266A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private byte <codeLength>5__6;

			[Token(Token = "0x17000375")]
			private bool System.Collections.Generic.IEnumerator<System.Boolean>.Current
			{
				[Token(Token = "0x6001A7B")]
				[Address(RVA = "0x138893C", Offset = "0x138893C", VA = "0x138893C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000376")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A7D")]
				[Address(RVA = "0x13889A8", Offset = "0x13889A8", VA = "0x13889A8", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A78")]
			[Address(RVA = "0x1387E0C", Offset = "0x1387E0C", VA = "0x1387E0C")]
			[DebuggerHidden]
			public <CreateStateMachine>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6001A79")]
			[Address(RVA = "0x1387FD0", Offset = "0x1387FD0", VA = "0x1387FD0", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A7A")]
			[Address(RVA = "0x1387FD4", Offset = "0x1387FD4", VA = "0x1387FD4", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A7C")]
			[Address(RVA = "0x1388944", Offset = "0x1388944", VA = "0x1388944", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001A7E")]
			[Address(RVA = "0x1388A0C", Offset = "0x1388A0C", VA = "0x1388A0C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<bool> System.Collections.Generic.IEnumerable<System.Boolean>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001A7F")]
			[Address(RVA = "0x1388ABC", Offset = "0x1388ABC", VA = "0x1388ABC", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x40016B3")]
		private const int LITLEN_MAX = 286;

		[Token(Token = "0x40016B4")]
		private const int DIST_MAX = 30;

		[Token(Token = "0x40016B5")]
		private const int CODELEN_MAX = 316;

		[Token(Token = "0x40016B6")]
		private const int META_MAX = 19;

		[Token(Token = "0x40016B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int[] MetaCodeLengthIndex;

		[Token(Token = "0x40016B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly StreamManipulator input;

		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly IEnumerator<bool> state;

		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly IEnumerable<bool> stateMachine;

		[Token(Token = "0x40016BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private byte[] codeLengths;

		[Token(Token = "0x40016BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private InflaterHuffmanTree litLenTree;

		[Token(Token = "0x40016BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InflaterHuffmanTree distTree;

		[Token(Token = "0x40016BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int litLenCodeCount;

		[Token(Token = "0x40016BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int distanceCodeCount;

		[Token(Token = "0x40016C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int metaCodeCount;

		[Token(Token = "0x170001AA")]
		public InflaterHuffmanTree LiteralLengthTree
		{
			[Token(Token = "0x6000E5C")]
			[Address(RVA = "0x1387E44", Offset = "0x1387E44", VA = "0x1387E44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AB")]
		public InflaterHuffmanTree DistanceTree
		{
			[Token(Token = "0x6000E5D")]
			[Address(RVA = "0x1387ECC", Offset = "0x1387ECC", VA = "0x1387ECC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E59")]
		[Address(RVA = "0x1387B58", Offset = "0x1387B58", VA = "0x1387B58")]
		public bool AttemptRead()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0x1387C90", Offset = "0x1387C90", VA = "0x1387C90")]
		public InflaterDynHeader(StreamManipulator input)
		{
		}

		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0x1387D88", Offset = "0x1387D88", VA = "0x1387D88")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x804918", Offset = "0x804918")]
		private IEnumerable<bool> CreateStateMachine()
		{
			return null;
		}
	}
	[Token(Token = "0x200017F")]
	public class InflaterHuffmanTree
	{
		[Token(Token = "0x40016C1")]
		private const int MAX_BITLEN = 15;

		[Token(Token = "0x40016C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private short[] tree;

		[Token(Token = "0x40016C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static InflaterHuffmanTree defLitLenTree;

		[Token(Token = "0x40016C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static InflaterHuffmanTree defDistTree;

		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0x1388AC0", Offset = "0x1388AC0", VA = "0x1388AC0")]
		static InflaterHuffmanTree()
		{
		}

		[Token(Token = "0x6000E60")]
		[Address(RVA = "0x1388748", Offset = "0x1388748", VA = "0x1388748")]
		public InflaterHuffmanTree(IList<byte> codeLengths)
		{
		}

		[Token(Token = "0x6000E61")]
		[Address(RVA = "0x1388DD0", Offset = "0x1388DD0", VA = "0x1388DD0")]
		private void BuildTree(IList<byte> codeLengths)
		{
		}

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0x1388778", Offset = "0x1388778", VA = "0x1388778")]
		public int GetSymbol(StreamManipulator input)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000180")]
	public class PendingBuffer
	{
		[Token(Token = "0x40016C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly byte[] buffer;

		[Token(Token = "0x40016C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int start;

		[Token(Token = "0x40016C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int end;

		[Token(Token = "0x40016C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private uint bits;

		[Token(Token = "0x40016C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int bitCount;

		[Token(Token = "0x170001AC")]
		public int BitCount
		{
			[Token(Token = "0x6000E6A")]
			[Address(RVA = "0x1389690", Offset = "0x1389690", VA = "0x1389690")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001AD")]
		public bool IsFlushed
		{
			[Token(Token = "0x6000E6E")]
			[Address(RVA = "0x1389878", Offset = "0x1389878", VA = "0x1389878")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000E63")]
		[Address(RVA = "0x1389420", Offset = "0x1389420", VA = "0x1389420")]
		public PendingBuffer()
		{
		}

		[Token(Token = "0x6000E64")]
		[Address(RVA = "0x1389428", Offset = "0x1389428", VA = "0x1389428")]
		public PendingBuffer(int bufferSize)
		{
		}

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0x1389498", Offset = "0x1389498", VA = "0x1389498")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000E66")]
		[Address(RVA = "0x13894A4", Offset = "0x13894A4", VA = "0x13894A4")]
		public void WriteByte(int value)
		{
		}

		[Token(Token = "0x6000E67")]
		[Address(RVA = "0x13894F4", Offset = "0x13894F4", VA = "0x13894F4")]
		public void WriteShort(int value)
		{
		}

		[Token(Token = "0x6000E68")]
		[Address(RVA = "0x1389570", Offset = "0x1389570", VA = "0x1389570")]
		public void WriteInt(int value)
		{
		}

		[Token(Token = "0x6000E69")]
		[Address(RVA = "0x1389644", Offset = "0x1389644", VA = "0x1389644")]
		public void WriteBlock(byte[] block, int offset, int length)
		{
		}

		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0x1389698", Offset = "0x1389698", VA = "0x1389698")]
		public void AlignToByte()
		{
		}

		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0x1389748", Offset = "0x1389748", VA = "0x1389748")]
		public void WriteBits(int b, int count)
		{
		}

		[Token(Token = "0x6000E6D")]
		[Address(RVA = "0x13897FC", Offset = "0x13897FC", VA = "0x13897FC")]
		public void WriteShortMSB(int s)
		{
		}

		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0x1389888", Offset = "0x1389888", VA = "0x1389888")]
		public int Flush(byte[] output, int offset, int length)
		{
			return default(int);
		}

		[Token(Token = "0x6000E70")]
		[Address(RVA = "0x1389968", Offset = "0x1389968", VA = "0x1389968")]
		public byte[] ToByteArray()
		{
			return null;
		}
	}
}
namespace ICSharpCode.SharpZipLib.Zip.Compression.Streams
{
	[Token(Token = "0x2000181")]
	public class DeflaterOutputStream : Stream
	{
		[Token(Token = "0x40016CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x800814", Offset = "0x800814")]
		private bool <IsStreamOwner>k__BackingField;

		[Token(Token = "0x40016CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string password;

		[Token(Token = "0x40016CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ICryptoTransform cryptoTransform_;

		[Token(Token = "0x40016CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected byte[] AESAuthCode;

		[Token(Token = "0x40016CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private byte[] buffer_;

		[Token(Token = "0x40016CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Deflater deflater_;

		[Token(Token = "0x40016D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected Stream baseOutputStream_;

		[Token(Token = "0x40016D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool isClosed_;

		[Token(Token = "0x40016D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static RandomNumberGenerator _aesRnd;

		[Token(Token = "0x170001AE")]
		public bool IsStreamOwner
		{
			[Token(Token = "0x6000E75")]
			[Address(RVA = "0x1389F1C", Offset = "0x1389F1C", VA = "0x1389F1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x80497C", Offset = "0x80497C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E76")]
			[Address(RVA = "0x1389F24", Offset = "0x1389F24", VA = "0x1389F24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x80498C", Offset = "0x80498C")]
			set
			{
			}
		}

		[Token(Token = "0x170001AF")]
		public bool CanPatchEntries
		{
			[Token(Token = "0x6000E77")]
			[Address(RVA = "0x1389F30", Offset = "0x1389F30", VA = "0x1389F30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001B0")]
		public string Password
		{
			[Token(Token = "0x6000E78")]
			[Address(RVA = "0x1389F50", Offset = "0x1389F50", VA = "0x1389F50")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E79")]
			[Address(RVA = "0x1389F58", Offset = "0x1389F58", VA = "0x1389F58")]
			set
			{
			}
		}

		[Token(Token = "0x170001B1")]
		public override bool CanRead
		{
			[Token(Token = "0x6000E7F")]
			[Address(RVA = "0x138A468", Offset = "0x138A468", VA = "0x138A468", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001B2")]
		public override bool CanSeek
		{
			[Token(Token = "0x6000E80")]
			[Address(RVA = "0x138A470", Offset = "0x138A470", VA = "0x138A470", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001B3")]
		public override bool CanWrite
		{
			[Token(Token = "0x6000E81")]
			[Address(RVA = "0x138A478", Offset = "0x138A478", VA = "0x138A478", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001B4")]
		public override long Length
		{
			[Token(Token = "0x6000E82")]
			[Address(RVA = "0x138A498", Offset = "0x138A498", VA = "0x138A498", Slot = "11")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x170001B5")]
		public override long Position
		{
			[Token(Token = "0x6000E83")]
			[Address(RVA = "0x138A4B8", Offset = "0x138A4B8", VA = "0x138A4B8", Slot = "12")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6000E84")]
			[Address(RVA = "0x138A4D8", Offset = "0x138A4D8", VA = "0x138A4D8", Slot = "13")]
			set
			{
			}
		}

		[Token(Token = "0x6000E71")]
		[Address(RVA = "0x13899F8", Offset = "0x13899F8", VA = "0x13899F8")]
		public DeflaterOutputStream(Stream baseOutputStream)
		{
		}

		[Token(Token = "0x6000E72")]
		[Address(RVA = "0x1389C30", Offset = "0x1389C30", VA = "0x1389C30")]
		public DeflaterOutputStream(Stream baseOutputStream, Deflater deflater)
		{
		}

		[Token(Token = "0x6000E73")]
		[Address(RVA = "0x1389A70", Offset = "0x1389A70", VA = "0x1389A70")]
		public DeflaterOutputStream(Stream baseOutputStream, Deflater deflater, int bufferSize)
		{
		}

		[Token(Token = "0x6000E74")]
		[Address(RVA = "0x1389C38", Offset = "0x1389C38", VA = "0x1389C38", Slot = "32")]
		public virtual void Finish()
		{
		}

		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0x1389E40", Offset = "0x1389E40", VA = "0x1389E40")]
		protected void EncryptBlock(byte[] buffer, int offset, int length)
		{
		}

		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0x1389F78", Offset = "0x1389F78", VA = "0x1389F78")]
		protected void InitializePassword(string password)
		{
		}

		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0x138A040", Offset = "0x138A040", VA = "0x138A040")]
		protected void InitializeAESPassword(ZipEntry entry, string rawPassword, out byte[] salt, out byte[] pwdVerifier)
		{
		}

		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0x138A334", Offset = "0x138A334", VA = "0x138A334")]
		protected void Deflate()
		{
		}

		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0x138A33C", Offset = "0x138A33C", VA = "0x138A33C")]
		private void Deflate(bool flushing)
		{
		}

		[Token(Token = "0x6000E85")]
		[Address(RVA = "0x138A548", Offset = "0x138A548", VA = "0x138A548", Slot = "26")]
		public override long Seek(long offset, SeekOrigin origin)
		{
			return default(long);
		}

		[Token(Token = "0x6000E86")]
		[Address(RVA = "0x138A5B8", Offset = "0x138A5B8", VA = "0x138A5B8", Slot = "27")]
		public override void SetLength(long value)
		{
		}

		[Token(Token = "0x6000E87")]
		[Address(RVA = "0x138A628", Offset = "0x138A628", VA = "0x138A628", Slot = "29")]
		public override int ReadByte()
		{
			return default(int);
		}

		[Token(Token = "0x6000E88")]
		[Address(RVA = "0x138A698", Offset = "0x138A698", VA = "0x138A698", Slot = "28")]
		public override int Read(byte[] buffer, int offset, int count)
		{
			return default(int);
		}

		[Token(Token = "0x6000E89")]
		[Address(RVA = "0x138A708", Offset = "0x138A708", VA = "0x138A708", Slot = "18")]
		public override void Flush()
		{
		}

		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0x138A758", Offset = "0x138A758", VA = "0x138A758", Slot = "17")]
		protected override void Dispose(bool disposing)
		{
		}

		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0x138A8C0", Offset = "0x138A8C0", VA = "0x138A8C0")]
		protected void GetAuthCodeIfAES()
		{
		}

		[Token(Token = "0x6000E8C")]
		[Address(RVA = "0x138A948", Offset = "0x138A948", VA = "0x138A948", Slot = "31")]
		public override void WriteByte(byte value)
		{
		}

		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0x138A9EC", Offset = "0x138A9EC", VA = "0x138A9EC", Slot = "30")]
		public override void Write(byte[] buffer, int offset, int count)
		{
		}
	}
	[Token(Token = "0x2000182")]
	public class InflaterInputBuffer
	{
		[Token(Token = "0x40016D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int rawLength;

		[Token(Token = "0x40016D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private byte[] rawData;

		[Token(Token = "0x40016D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int clearTextLength;

		[Token(Token = "0x40016D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private byte[] clearText;

		[Token(Token = "0x40016D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private byte[] internalClearText;

		[Token(Token = "0x40016D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int available;

		[Token(Token = "0x40016D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ICryptoTransform cryptoTransform;

		[Token(Token = "0x40016DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Stream inputStream;

		[Token(Token = "0x170001B6")]
		public int RawLength
		{
			[Token(Token = "0x6000E91")]
			[Address(RVA = "0x138AB08", Offset = "0x138AB08", VA = "0x138AB08")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001B7")]
		public byte[] RawData
		{
			[Token(Token = "0x6000E92")]
			[Address(RVA = "0x138AB10", Offset = "0x138AB10", VA = "0x138AB10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B8")]
		public int ClearTextLength
		{
			[Token(Token = "0x6000E93")]
			[Address(RVA = "0x138AB18", Offset = "0x138AB18", VA = "0x138AB18")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001B9")]
		public byte[] ClearText
		{
			[Token(Token = "0x6000E94")]
			[Address(RVA = "0x138AB20", Offset = "0x138AB20", VA = "0x138AB20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BA")]
		public int Available
		{
			[Token(Token = "0x6000E95")]
			[Address(RVA = "0x138AB28", Offset = "0x138AB28", VA = "0x138AB28")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000E96")]
			[Address(RVA = "0x138AB30", Offset = "0x138AB30", VA = "0x138AB30")]
			set
			{
			}
		}

		[Token(Token = "0x170001BB")]
		public ICryptoTransform CryptoTransform
		{
			[Token(Token = "0x6000EA0")]
			[Address(RVA = "0x138B14C", Offset = "0x138B14C", VA = "0x138B14C")]
			set
			{
			}
		}

		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0x138AA7C", Offset = "0x138AA7C", VA = "0x138AA7C")]
		public InflaterInputBuffer(Stream stream)
		{
		}

		[Token(Token = "0x6000E90")]
		[Address(RVA = "0x138AA84", Offset = "0x138AA84", VA = "0x138AA84")]
		public InflaterInputBuffer(Stream stream, int bufferSize)
		{
		}

		[Token(Token = "0x6000E97")]
		[Address(RVA = "0x138AB38", Offset = "0x138AB38", VA = "0x138AB38")]
		public void SetInflaterInput(Inflater inflater)
		{
		}

		[Token(Token = "0x6000E98")]
		[Address(RVA = "0x138AB8C", Offset = "0x138AB8C", VA = "0x138AB8C")]
		public void Fill()
		{
		}

		[Token(Token = "0x6000E99")]
		[Address(RVA = "0x138ACE4", Offset = "0x138ACE4", VA = "0x138ACE4")]
		public int ReadRawBuffer(byte[] buffer)
		{
			return default(int);
		}

		[Token(Token = "0x6000E9A")]
		[Address(RVA = "0x138AD04", Offset = "0x138AD04", VA = "0x138AD04")]
		public int ReadRawBuffer(byte[] outBuffer, int offset, int length)
		{
			return default(int);
		}

		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0x138AE54", Offset = "0x138AE54", VA = "0x138AE54")]
		public int ReadClearTextBuffer(byte[] outBuffer, int offset, int length)
		{
			return default(int);
		}

		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0x138AFA4", Offset = "0x138AFA4", VA = "0x138AFA4")]
		public int ReadLeByte()
		{
			return default(int);
		}

		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0x138B090", Offset = "0x138B090", VA = "0x138B090")]
		public int ReadLeShort()
		{
			return default(int);
		}

		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0x138B0C0", Offset = "0x138B0C0", VA = "0x138B0C0")]
		public int ReadLeInt()
		{
			return default(int);
		}

		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0x138B114", Offset = "0x138B114", VA = "0x138B114")]
		public long ReadLeLong()
		{
			return default(long);
		}
	}
	[Token(Token = "0x2000183")]
	public class InflaterInputStream : Stream
	{
		[Token(Token = "0x40016DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x800824", Offset = "0x800824")]
		private bool <IsStreamOwner>k__BackingField;

		[Token(Token = "0x40016DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Inflater inf;

		[Token(Token = "0x40016DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected InflaterInputBuffer inputBuffer;

		[Token(Token = "0x40016DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Stream baseInputStream;

		[Token(Token = "0x40016DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected long csize;

		[Token(Token = "0x40016E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool isClosed;

		[Token(Token = "0x170001BC")]
		public bool IsStreamOwner
		{
			[Token(Token = "0x6000EA4")]
			[Address(RVA = "0x138B480", Offset = "0x138B480", VA = "0x138B480")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x80499C", Offset = "0x80499C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000EA5")]
			[Address(RVA = "0x138B488", Offset = "0x138B488", VA = "0x138B488")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8049AC", Offset = "0x8049AC")]
			set
			{
			}
		}

		[Token(Token = "0x170001BD")]
		public virtual int Available
		{
			[Token(Token = "0x6000EA8")]
			[Address(RVA = "0x138B640", Offset = "0x138B640", VA = "0x138B640", Slot = "32")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001BE")]
		public override bool CanRead
		{
			[Token(Token = "0x6000EAA")]
			[Address(RVA = "0x138B720", Offset = "0x138B720", VA = "0x138B720", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001BF")]
		public override bool CanSeek
		{
			[Token(Token = "0x6000EAB")]
			[Address(RVA = "0x138B740", Offset = "0x138B740", VA = "0x138B740", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001C0")]
		public override bool CanWrite
		{
			[Token(Token = "0x6000EAC")]
			[Address(RVA = "0x138B748", Offset = "0x138B748", VA = "0x138B748", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001C1")]
		public override long Length
		{
			[Token(Token = "0x6000EAD")]
			[Address(RVA = "0x138B750", Offset = "0x138B750", VA = "0x138B750", Slot = "11")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x170001C2")]
		public override long Position
		{
			[Token(Token = "0x6000EAE")]
			[Address(RVA = "0x138B7C0", Offset = "0x138B7C0", VA = "0x138B7C0", Slot = "12")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6000EAF")]
			[Address(RVA = "0x138B7E0", Offset = "0x138B7E0", VA = "0x138B7E0", Slot = "13")]
			set
			{
			}
		}

		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0x138B2AC", Offset = "0x138B2AC", VA = "0x138B2AC")]
		public InflaterInputStream(Stream baseInputStream)
		{
		}

		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0x138B478", Offset = "0x138B478", VA = "0x138B478")]
		public InflaterInputStream(Stream baseInputStream, Inflater inf)
		{
		}

		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0x138B324", Offset = "0x138B324", VA = "0x138B324")]
		public InflaterInputStream(Stream baseInputStream, Inflater inflater, int bufferSize)
		{
		}

		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0x138B494", Offset = "0x138B494", VA = "0x138B494")]
		public long Skip(long count)
		{
			return default(long);
		}

		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0x138B5E0", Offset = "0x138B5E0", VA = "0x138B5E0")]
		protected void StopDecrypting()
		{
		}

		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0x138B66C", Offset = "0x138B66C", VA = "0x138B66C")]
		protected void Fill()
		{
		}

		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0x138B850", Offset = "0x138B850", VA = "0x138B850", Slot = "18")]
		public override void Flush()
		{
		}

		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0x138B874", Offset = "0x138B874", VA = "0x138B874", Slot = "26")]
		public override long Seek(long offset, SeekOrigin origin)
		{
			return default(long);
		}

		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0x138B8E4", Offset = "0x138B8E4", VA = "0x138B8E4", Slot = "27")]
		public override void SetLength(long value)
		{
		}

		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0x138B954", Offset = "0x138B954", VA = "0x138B954", Slot = "30")]
		public override void Write(byte[] buffer, int offset, int count)
		{
		}

		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0x138B9C4", Offset = "0x138B9C4", VA = "0x138B9C4", Slot = "31")]
		public override void WriteByte(byte value)
		{
		}

		[Token(Token = "0x6000EB5")]
		[Address(RVA = "0x138BA34", Offset = "0x138BA34", VA = "0x138BA34", Slot = "17")]
		protected override void Dispose(bool disposing)
		{
		}

		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0x138BA6C", Offset = "0x138BA6C", VA = "0x138BA6C", Slot = "28")]
		public override int Read(byte[] buffer, int offset, int count)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000184")]
	public class OutputWindow
	{
		[Token(Token = "0x40016E1")]
		private const int WindowSize = 32768;

		[Token(Token = "0x40016E2")]
		private const int WindowMask = 32767;

		[Token(Token = "0x40016E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private byte[] window;

		[Token(Token = "0x40016E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int windowEnd;

		[Token(Token = "0x40016E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int windowFilled;

		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0x138BBB8", Offset = "0x138BBB8", VA = "0x138BBB8")]
		public void Write(int value)
		{
		}

		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0x138BCA4", Offset = "0x138BCA4", VA = "0x138BCA4")]
		private void SlowRepeat(int repStart, int length, int distance)
		{
		}

		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0x138BD2C", Offset = "0x138BD2C", VA = "0x138BD2C")]
		public void Repeat(int length, int distance)
		{
		}

		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0x138BEA4", Offset = "0x138BEA4", VA = "0x138BEA4")]
		public int CopyStored(StreamManipulator input, int length)
		{
			return default(int);
		}

		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0x138C1B0", Offset = "0x138C1B0", VA = "0x138C1B0")]
		public void CopyDict(byte[] dictionary, int offset, int length)
		{
		}

		[Token(Token = "0x6000EBC")]
		[Address(RVA = "0x138C2B0", Offset = "0x138C2B0", VA = "0x138C2B0")]
		public int GetFreeSpace()
		{
			return default(int);
		}

		[Token(Token = "0x6000EBD")]
		[Address(RVA = "0x138C2C0", Offset = "0x138C2C0", VA = "0x138C2C0")]
		public int GetAvailable()
		{
			return default(int);
		}

		[Token(Token = "0x6000EBE")]
		[Address(RVA = "0x138C2C8", Offset = "0x138C2C8", VA = "0x138C2C8")]
		public int CopyOutput(byte[] output, int offset, int len)
		{
			return default(int);
		}

		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0x138C3E0", Offset = "0x138C3E0", VA = "0x138C3E0")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0x138C3E8", Offset = "0x138C3E8", VA = "0x138C3E8")]
		public OutputWindow()
		{
		}
	}
	[Token(Token = "0x2000185")]
	public class StreamManipulator
	{
		[Token(Token = "0x40016E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private byte[] window_;

		[Token(Token = "0x40016E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int windowStart_;

		[Token(Token = "0x40016E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int windowEnd_;

		[Token(Token = "0x40016E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private uint buffer_;

		[Token(Token = "0x40016EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int bitsInBuffer_;

		[Token(Token = "0x170001C3")]
		public int AvailableBits
		{
			[Token(Token = "0x6000EC6")]
			[Address(RVA = "0x138C484", Offset = "0x138C484", VA = "0x138C484")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001C4")]
		public int AvailableBytes
		{
			[Token(Token = "0x6000EC7")]
			[Address(RVA = "0x138BFC0", Offset = "0x138BFC0", VA = "0x138BFC0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001C5")]
		public bool IsNeedingInput
		{
			[Token(Token = "0x6000EC9")]
			[Address(RVA = "0x138C4A4", Offset = "0x138C4A4", VA = "0x138C4A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0x1389344", Offset = "0x1389344", VA = "0x1389344")]
		public int PeekBits(int bitCount)
		{
			return default(int);
		}

		[Token(Token = "0x6000EC2")]
		[Address(RVA = "0x138865C", Offset = "0x138865C", VA = "0x138865C")]
		public bool TryGetBits(int bitCount, ref int output, int outputOffset = 0)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EC3")]
		[Address(RVA = "0x13886BC", Offset = "0x13886BC", VA = "0x13886BC")]
		public bool TryGetBits(int bitCount, ref byte[] array, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EC4")]
		[Address(RVA = "0x1389408", Offset = "0x1389408", VA = "0x1389408")]
		public void DropBits(int bitCount)
		{
		}

		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0x138C448", Offset = "0x138C448", VA = "0x138C448")]
		public int GetBits(int bitCount)
		{
			return default(int);
		}

		[Token(Token = "0x6000EC8")]
		[Address(RVA = "0x138C48C", Offset = "0x138C48C", VA = "0x138C48C")]
		public void SkipToByteBoundary()
		{
		}

		[Token(Token = "0x6000ECA")]
		[Address(RVA = "0x138BFD4", Offset = "0x138BFD4", VA = "0x138BFD4")]
		public int CopyBytes(byte[] output, int offset, int length)
		{
			return default(int);
		}

		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0x138C4B4", Offset = "0x138C4B4", VA = "0x138C4B4")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0x138C4BC", Offset = "0x138C4BC", VA = "0x138C4BC")]
		public void SetInput(byte[] buffer, int offset, int count)
		{
		}

		[Token(Token = "0x6000ECD")]
		[Address(RVA = "0x138C67C", Offset = "0x138C67C", VA = "0x138C67C")]
		public StreamManipulator()
		{
		}
	}
}
namespace ICSharpCode.SharpZipLib.Encryption
{
	[Token(Token = "0x2000186")]
	public abstract class PkzipClassic : SymmetricAlgorithm
	{
		[Token(Token = "0x6000ECE")]
		[Address(RVA = "0xA74EDC", Offset = "0xA74EDC", VA = "0xA74EDC")]
		public static byte[] GenerateKeys(byte[] seed)
		{
			return null;
		}

		[Token(Token = "0x6000ECF")]
		[Address(RVA = "0xA7523C", Offset = "0xA7523C", VA = "0xA7523C")]
		protected PkzipClassic()
		{
		}
	}
	[Token(Token = "0x2000187")]
	internal class PkzipClassicCryptoBase
	{
		[Token(Token = "0x40016EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private uint[] keys;

		[Token(Token = "0x6000ED0")]
		[Address(RVA = "0xA75244", Offset = "0xA75244", VA = "0xA75244")]
		protected byte TransformByte()
		{
			return default(byte);
		}

		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0xA7529C", Offset = "0xA7529C", VA = "0xA7529C")]
		protected void SetKeys(byte[] keyData)
		{
		}

		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0xA7545C", Offset = "0xA7545C", VA = "0xA7545C")]
		protected void UpdateKeys(byte ch)
		{
		}

		[Token(Token = "0x6000ED3")]
		[Address(RVA = "0xA7558C", Offset = "0xA7558C", VA = "0xA7558C")]
		protected void Reset()
		{
		}

		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0xA755F8", Offset = "0xA755F8", VA = "0xA755F8")]
		public PkzipClassicCryptoBase()
		{
		}
	}
	[Token(Token = "0x2000188")]
	internal class PkzipClassicEncryptCryptoTransform : PkzipClassicCryptoBase, ICryptoTransform, IDisposable
	{
		[Token(Token = "0x170001C6")]
		public bool CanReuseTransform
		{
			[Token(Token = "0x6000ED8")]
			[Address(RVA = "0xA75970", Offset = "0xA75970", VA = "0xA75970", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001C7")]
		public int InputBlockSize
		{
			[Token(Token = "0x6000ED9")]
			[Address(RVA = "0xA75978", Offset = "0xA75978", VA = "0xA75978", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001C8")]
		public int OutputBlockSize
		{
			[Token(Token = "0x6000EDA")]
			[Address(RVA = "0xA75980", Offset = "0xA75980", VA = "0xA75980", Slot = "5")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001C9")]
		public bool CanTransformMultipleBlocks
		{
			[Token(Token = "0x6000EDB")]
			[Address(RVA = "0xA75988", Offset = "0xA75988", VA = "0xA75988", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0xA757C8", Offset = "0xA757C8", VA = "0xA757C8")]
		internal PkzipClassicEncryptCryptoTransform(byte[] keyBlock)
		{
		}

		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0xA757F8", Offset = "0xA757F8", VA = "0xA757F8", Slot = "9")]
		public byte[] TransformFinalBlock(byte[] inputBuffer, int inputOffset, int inputCount)
		{
			return null;
		}

		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0xA7588C", Offset = "0xA7588C", VA = "0xA7588C", Slot = "8")]
		public int TransformBlock(byte[] inputBuffer, int inputOffset, int inputCount, byte[] outputBuffer, int outputOffset)
		{
			return default(int);
		}

		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0xA75990", Offset = "0xA75990", VA = "0xA75990", Slot = "10")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x2000189")]
	internal class PkzipClassicDecryptCryptoTransform : PkzipClassicCryptoBase, ICryptoTransform, IDisposable
	{
		[Token(Token = "0x170001CA")]
		public bool CanReuseTransform
		{
			[Token(Token = "0x6000EE0")]
			[Address(RVA = "0xA757A4", Offset = "0xA757A4", VA = "0xA757A4", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001CB")]
		public int InputBlockSize
		{
			[Token(Token = "0x6000EE1")]
			[Address(RVA = "0xA757AC", Offset = "0xA757AC", VA = "0xA757AC", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001CC")]
		public int OutputBlockSize
		{
			[Token(Token = "0x6000EE2")]
			[Address(RVA = "0xA757B4", Offset = "0xA757B4", VA = "0xA757B4", Slot = "5")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001CD")]
		public bool CanTransformMultipleBlocks
		{
			[Token(Token = "0x6000EE3")]
			[Address(RVA = "0xA757BC", Offset = "0xA757BC", VA = "0xA757BC", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0xA75600", Offset = "0xA75600", VA = "0xA75600")]
		internal PkzipClassicDecryptCryptoTransform(byte[] keyBlock)
		{
		}

		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0xA75630", Offset = "0xA75630", VA = "0xA75630", Slot = "9")]
		public byte[] TransformFinalBlock(byte[] inputBuffer, int inputOffset, int inputCount)
		{
			return null;
		}

		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0xA756C4", Offset = "0xA756C4", VA = "0xA756C4", Slot = "8")]
		public int TransformBlock(byte[] inputBuffer, int inputOffset, int inputCount, byte[] outputBuffer, int outputOffset)
		{
			return default(int);
		}

		[Token(Token = "0x6000EE4")]
		[Address(RVA = "0xA757C4", Offset = "0xA757C4", VA = "0xA757C4", Slot = "10")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x200018A")]
	public sealed class PkzipClassicManaged : PkzipClassic
	{
		[Token(Token = "0x40016EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private byte[] key_;

		[Token(Token = "0x170001CE")]
		public override int BlockSize
		{
			[Token(Token = "0x6000EE5")]
			[Address(RVA = "0xA75994", Offset = "0xA75994", VA = "0xA75994", Slot = "6")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000EE6")]
			[Address(RVA = "0xA7599C", Offset = "0xA7599C", VA = "0xA7599C", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170001CF")]
		public override KeySizes[] LegalKeySizes
		{
			[Token(Token = "0x6000EE7")]
			[Address(RVA = "0xA75A24", Offset = "0xA75A24", VA = "0xA75A24", Slot = "15")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D0")]
		public override KeySizes[] LegalBlockSizes
		{
			[Token(Token = "0x6000EE9")]
			[Address(RVA = "0xA75AF4", Offset = "0xA75AF4", VA = "0xA75AF4", Slot = "14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D1")]
		public override byte[] Key
		{
			[Token(Token = "0x6000EEA")]
			[Address(RVA = "0xA75BC0", Offset = "0xA75BC0", VA = "0xA75BC0", Slot = "12")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EEB")]
			[Address(RVA = "0xA75C60", Offset = "0xA75C60", VA = "0xA75C60", Slot = "13")]
			set
			{
			}
		}

		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0xA75AF0", Offset = "0xA75AF0", VA = "0xA75AF0", Slot = "27")]
		public override void GenerateIV()
		{
		}

		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0xA75D68", Offset = "0xA75D68", VA = "0xA75D68", Slot = "26")]
		public override void GenerateKey()
		{
		}

		[Token(Token = "0x6000EED")]
		[Address(RVA = "0xA75DF8", Offset = "0xA75DF8", VA = "0xA75DF8", Slot = "23")]
		public override ICryptoTransform CreateEncryptor(byte[] rgbKey, byte[] rgbIV)
		{
			return null;
		}

		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0xA75E8C", Offset = "0xA75E8C", VA = "0xA75E8C", Slot = "25")]
		public override ICryptoTransform CreateDecryptor(byte[] rgbKey, byte[] rgbIV)
		{
			return null;
		}

		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0xA75F20", Offset = "0xA75F20", VA = "0xA75F20")]
		public PkzipClassicManaged()
		{
		}
	}
	[Token(Token = "0x200018B")]
	internal class ZipAESStream : CryptoStream
	{
		[Token(Token = "0x40016ED")]
		private const int AUTH_CODE_LENGTH = 10;

		[Token(Token = "0x40016EE")]
		private const int CRYPTO_BLOCK_SIZE = 16;

		[Token(Token = "0x40016EF")]
		private const int BLOCK_AND_AUTH = 26;

		[Token(Token = "0x40016F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Stream _stream;

		[Token(Token = "0x40016F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private ZipAESTransform _transform;

		[Token(Token = "0x40016F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private byte[] _slideBuffer;

		[Token(Token = "0x40016F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int _slideBufStartPos;

		[Token(Token = "0x40016F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int _slideBufFreePos;

		[Token(Token = "0x40016F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private byte[] _transformBuffer;

		[Token(Token = "0x40016F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _transformBufferFreePos;

		[Token(Token = "0x40016F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private int _transformBufferStartPos;

		[Token(Token = "0x170001D2")]
		private bool HasBufferedData
		{
			[Token(Token = "0x6000EF1")]
			[Address(RVA = "0xA75FFC", Offset = "0xA75FFC", VA = "0xA75FFC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0xA75F28", Offset = "0xA75F28", VA = "0xA75F28")]
		public ZipAESStream(Stream stream, ZipAESTransform transform, CryptoStreamMode mode)
		{
		}

		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0xA7601C", Offset = "0xA7601C", VA = "0xA7601C", Slot = "28")]
		public override int Read(byte[] buffer, int offset, int count)
		{
			return default(int);
		}

		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0xA7618C", Offset = "0xA7618C", VA = "0xA7618C")]
		private int ReadAndTransform(byte[] buffer, int offset, int count)
		{
			return default(int);
		}

		[Token(Token = "0x6000EF4")]
		[Address(RVA = "0xA760C8", Offset = "0xA760C8", VA = "0xA760C8")]
		private int ReadBufferedData(byte[] buffer, int offset, int count)
		{
			return default(int);
		}

		[Token(Token = "0x6000EF5")]
		[Address(RVA = "0xA763E0", Offset = "0xA763E0", VA = "0xA763E0")]
		private int TransformAndBufferBlock(byte[] buffer, int offset, int count, int blockSize)
		{
			return default(int);
		}

		[Token(Token = "0x6000EF6")]
		[Address(RVA = "0xA76778", Offset = "0xA76778", VA = "0xA76778", Slot = "30")]
		public override void Write(byte[] buffer, int offset, int count)
		{
		}
	}
	[Token(Token = "0x200018C")]
	internal class ZipAESTransform : ICryptoTransform, IDisposable
	{
		[Token(Token = "0x40016F8")]
		private const int PWD_VER_LENGTH = 2;

		[Token(Token = "0x40016F9")]
		private const int KEY_ROUNDS = 1000;

		[Token(Token = "0x40016FA")]
		private const int ENCRYPT_BLOCK = 16;

		[Token(Token = "0x40016FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int _blockSize;

		[Token(Token = "0x40016FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly ICryptoTransform _encryptor;

		[Token(Token = "0x40016FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly byte[] _counterNonce;

		[Token(Token = "0x40016FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private byte[] _encryptBuffer;

		[Token(Token = "0x40016FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _encrPos;

		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private byte[] _pwdVerifier;

		[Token(Token = "0x4001701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private IncrementalHash _hmacsha1;

		[Token(Token = "0x4001702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private byte[] _authCode;

		[Token(Token = "0x4001703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _writeMode;

		[Token(Token = "0x170001D3")]
		public byte[] PwdVerifier
		{
			[Token(Token = "0x6000EF9")]
			[Address(RVA = "0xA76B40", Offset = "0xA76B40", VA = "0xA76B40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D4")]
		public int InputBlockSize
		{
			[Token(Token = "0x6000EFC")]
			[Address(RVA = "0xA76BE0", Offset = "0xA76BE0", VA = "0xA76BE0", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001D5")]
		public int OutputBlockSize
		{
			[Token(Token = "0x6000EFD")]
			[Address(RVA = "0xA76BE8", Offset = "0xA76BE8", VA = "0xA76BE8", Slot = "5")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001D6")]
		public bool CanTransformMultipleBlocks
		{
			[Token(Token = "0x6000EFE")]
			[Address(RVA = "0xA76BF0", Offset = "0xA76BF0", VA = "0xA76BF0", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001D7")]
		public bool CanReuseTransform
		{
			[Token(Token = "0x6000EFF")]
			[Address(RVA = "0xA76BF8", Offset = "0xA76BF8", VA = "0xA76BF8", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000EF7")]
		[Address(RVA = "0xA767DC", Offset = "0xA767DC", VA = "0xA767DC")]
		public ZipAESTransform(string key, byte[] saltBytes, int blockSize, bool writeMode)
		{
		}

		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0xA76510", Offset = "0xA76510", VA = "0xA76510", Slot = "8")]
		public int TransformBlock(byte[] inputBuffer, int inputOffset, int inputCount, byte[] outputBuffer, int outputOffset)
		{
			return default(int);
		}

		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0xA764D4", Offset = "0xA764D4", VA = "0xA764D4")]
		public byte[] GetAuthCode()
		{
			return null;
		}

		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0xA76B48", Offset = "0xA76B48", VA = "0xA76B48", Slot = "9")]
		public byte[] TransformFinalBlock(byte[] inputBuffer, int inputOffset, int inputCount)
		{
			return null;
		}

		[Token(Token = "0x6000F00")]
		[Address(RVA = "0xA76C00", Offset = "0xA76C00", VA = "0xA76C00", Slot = "10")]
		public void Dispose()
		{
		}
	}
}
namespace ICSharpCode.SharpZipLib.Core
{
	[Token(Token = "0x200018D")]
	public class ScanEventArgs : EventArgs
	{
		[Token(Token = "0x4001704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string name_;

		[Token(Token = "0x4001705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool continueRunning_;

		[Token(Token = "0x170001D8")]
		public string Name
		{
			[Token(Token = "0x6000F02")]
			[Address(RVA = "0xA743B8", Offset = "0xA743B8", VA = "0xA743B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D9")]
		public bool ContinueRunning
		{
			[Token(Token = "0x6000F03")]
			[Address(RVA = "0xA743C0", Offset = "0xA743C0", VA = "0xA743C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F04")]
			[Address(RVA = "0xA743C8", Offset = "0xA743C8", VA = "0xA743C8")]
			set
			{
			}
		}

		[Token(Token = "0x6000F01")]
		[Address(RVA = "0xA70EA8", Offset = "0xA70EA8", VA = "0xA70EA8")]
		public ScanEventArgs(string name)
		{
		}
	}
	[Token(Token = "0x200018E")]
	public class ProgressEventArgs : EventArgs
	{
		[Token(Token = "0x4001706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string name_;

		[Token(Token = "0x4001707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private long processed_;

		[Token(Token = "0x4001708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private long target_;

		[Token(Token = "0x4001709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool continueRunning_;

		[Token(Token = "0x170001DA")]
		public string Name
		{
			[Token(Token = "0x6000F06")]
			[Address(RVA = "0xA73F2C", Offset = "0xA73F2C", VA = "0xA73F2C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DB")]
		public bool ContinueRunning
		{
			[Token(Token = "0x6000F07")]
			[Address(RVA = "0xA73F34", Offset = "0xA73F34", VA = "0xA73F34")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F08")]
			[Address(RVA = "0xA73F3C", Offset = "0xA73F3C", VA = "0xA73F3C")]
			set
			{
			}
		}

		[Token(Token = "0x170001DC")]
		public float PercentComplete
		{
			[Token(Token = "0x6000F09")]
			[Address(RVA = "0xA73F48", Offset = "0xA73F48", VA = "0xA73F48")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001DD")]
		public long Processed
		{
			[Token(Token = "0x6000F0A")]
			[Address(RVA = "0xA73F7C", Offset = "0xA73F7C", VA = "0xA73F7C")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x170001DE")]
		public long Target
		{
			[Token(Token = "0x6000F0B")]
			[Address(RVA = "0xA73F84", Offset = "0xA73F84", VA = "0xA73F84")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x6000F05")]
		[Address(RVA = "0xA73E94", Offset = "0xA73E94", VA = "0xA73E94")]
		public ProgressEventArgs(string name, long processed, long target)
		{
		}
	}
	[Token(Token = "0x200018F")]
	public class DirectoryEventArgs : ScanEventArgs
	{
		[Token(Token = "0x400170A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private readonly bool hasMatchingFiles_;

		[Token(Token = "0x170001DF")]
		public bool HasMatchingFiles
		{
			[Token(Token = "0x6000F0D")]
			[Address(RVA = "0xA70F2C", Offset = "0xA70F2C", VA = "0xA70F2C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0xA70E7C", Offset = "0xA70E7C", VA = "0xA70E7C")]
		public DirectoryEventArgs(string name, bool hasMatchingFiles)
		{
		}
	}
	[Token(Token = "0x2000190")]
	public class ScanFailureEventArgs : EventArgs
	{
		[Token(Token = "0x400170B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string name_;

		[Token(Token = "0x400170C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Exception exception_;

		[Token(Token = "0x400170D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool continueRunning_;

		[Token(Token = "0x170001E0")]
		public string Name
		{
			[Token(Token = "0x6000F0F")]
			[Address(RVA = "0xA743D4", Offset = "0xA743D4", VA = "0xA743D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E1")]
		public Exception Exception
		{
			[Token(Token = "0x6000F10")]
			[Address(RVA = "0xA743DC", Offset = "0xA743DC", VA = "0xA743DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E2")]
		public bool ContinueRunning
		{
			[Token(Token = "0x6000F11")]
			[Address(RVA = "0xA743E4", Offset = "0xA743E4", VA = "0xA743E4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F12")]
			[Address(RVA = "0xA743EC", Offset = "0xA743EC", VA = "0xA743EC")]
			set
			{
			}
		}

		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0xA722FC", Offset = "0xA722FC", VA = "0xA722FC")]
		public ScanFailureEventArgs(string name, Exception e)
		{
		}
	}
	[Token(Token = "0x2000191")]
	public delegate void ProcessFileHandler(object sender, ScanEventArgs e);
	[Token(Token = "0x2000192")]
	public delegate void ProgressHandler(object sender, ProgressEventArgs e);
	[Token(Token = "0x2000193")]
	public delegate void CompletedFileHandler(object sender, ScanEventArgs e);
	[Token(Token = "0x2000194")]
	public delegate void DirectoryFailureHandler(object sender, ScanFailureEventArgs e);
	[Token(Token = "0x2000195")]
	public delegate void FileFailureHandler(object sender, ScanFailureEventArgs e);
	[Token(Token = "0x2000196")]
	public class FileSystemScanner
	{
		[Token(Token = "0x400170F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ProcessFileHandler ProcessFile;

		[Token(Token = "0x4001710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CompletedFileHandler CompletedFile;

		[Token(Token = "0x4001711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DirectoryFailureHandler DirectoryFailure;

		[Token(Token = "0x4001712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public FileFailureHandler FileFailure;

		[Token(Token = "0x4001713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IScanFilter fileFilter_;

		[Token(Token = "0x4001714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private IScanFilter directoryFilter_;

		[Token(Token = "0x4001715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool alive_;

		[Token(Token = "0x14000021")]
		public event EventHandler<DirectoryEventArgs> ProcessDirectory
		{
			[Token(Token = "0x6000F2B")]
			[Address(RVA = "0xA72108", Offset = "0xA72108", VA = "0xA72108")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8049BC", Offset = "0x8049BC")]
			add
			{
			}
			[Token(Token = "0x6000F2C")]
			[Address(RVA = "0xA721AC", Offset = "0xA721AC", VA = "0xA721AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8049CC", Offset = "0x8049CC")]
			remove
			{
			}
		}

		[Token(Token = "0x6000F27")]
		[Address(RVA = "0xA71F90", Offset = "0xA71F90", VA = "0xA71F90")]
		public FileSystemScanner(string filter)
		{
		}

		[Token(Token = "0x6000F28")]
		[Address(RVA = "0xA72008", Offset = "0xA72008", VA = "0xA72008")]
		public FileSystemScanner(string fileFilter, string directoryFilter)
		{
		}

		[Token(Token = "0x6000F29")]
		[Address(RVA = "0xA720A4", Offset = "0xA720A4", VA = "0xA720A4")]
		public FileSystemScanner(IScanFilter fileFilter)
		{
		}

		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0xA720D0", Offset = "0xA720D0", VA = "0xA720D0")]
		public FileSystemScanner(IScanFilter fileFilter, IScanFilter directoryFilter)
		{
		}

		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0xA72250", Offset = "0xA72250", VA = "0xA72250")]
		private bool OnDirectoryFailure(string directory, Exception e)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0xA72384", Offset = "0xA72384", VA = "0xA72384")]
		private bool OnFileFailure(string file, Exception e)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0xA72438", Offset = "0xA72438", VA = "0xA72438")]
		private void OnProcessFile(string file)
		{
		}

		[Token(Token = "0x6000F30")]
		[Address(RVA = "0xA728AC", Offset = "0xA728AC", VA = "0xA728AC")]
		private void OnCompleteFile(string file)
		{
		}

		[Token(Token = "0x6000F31")]
		[Address(RVA = "0xA72940", Offset = "0xA72940", VA = "0xA72940")]
		private void OnProcessDirectory(string directory, bool hasMatchingFiles)
		{
		}

		[Token(Token = "0x6000F32")]
		[Address(RVA = "0xA729F4", Offset = "0xA729F4", VA = "0xA729F4")]
		public void Scan(string directory, bool recurse)
		{
		}

		[Token(Token = "0x6000F33")]
		[Address(RVA = "0xA72A04", Offset = "0xA72A04", VA = "0xA72A04")]
		private void ScanDir(string directory, bool recurse)
		{
		}
	}
	[Token(Token = "0x2000197")]
	public interface INameTransform
	{
		[Token(Token = "0x6000F34")]
		string TransformFile(string name);

		[Token(Token = "0x6000F35")]
		string TransformDirectory(string name);
	}
	[Serializable]
	[Token(Token = "0x2000198")]
	public class InvalidNameException : SharpZipBaseException
	{
		[Token(Token = "0x6000F36")]
		[Address(RVA = "0xA72F08", Offset = "0xA72F08", VA = "0xA72F08")]
		public InvalidNameException()
		{
		}

		[Token(Token = "0x6000F37")]
		[Address(RVA = "0xA72FD0", Offset = "0xA72FD0", VA = "0xA72FD0")]
		public InvalidNameException(string message)
		{
		}

		[Token(Token = "0x6000F38")]
		[Address(RVA = "0xA72FD4", Offset = "0xA72FD4", VA = "0xA72FD4")]
		public InvalidNameException(string message, Exception innerException)
		{
		}

		[Token(Token = "0x6000F39")]
		[Address(RVA = "0xA73058", Offset = "0xA73058", VA = "0xA73058")]
		protected InvalidNameException(SerializationInfo info, StreamingContext context)
		{
		}
	}
	[Token(Token = "0x2000199")]
	public interface IScanFilter
	{
		[Token(Token = "0x6000F3A")]
		bool IsMatch(string name);
	}
	[Token(Token = "0x200019A")]
	public class NameFilter : IScanFilter
	{
		[Token(Token = "0x4001716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string filter_;

		[Token(Token = "0x4001717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Regex> inclusions_;

		[Token(Token = "0x4001718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Regex> exclusions_;

		[Token(Token = "0x6000F3B")]
		[Address(RVA = "0xA7333C", Offset = "0xA7333C", VA = "0xA7333C")]
		public NameFilter(string filter)
		{
		}

		[Token(Token = "0x6000F3C")]
		[Address(RVA = "0xA73598", Offset = "0xA73598", VA = "0xA73598")]
		public static bool IsValidExpression(string expression)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0xA73674", Offset = "0xA73674", VA = "0xA73674")]
		public static bool IsValidFilterExpression(string toTest)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0xA738F4", Offset = "0xA738F4", VA = "0xA738F4")]
		public static string[] SplitQuoted(string original)
		{
			return null;
		}

		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0xA73BAC", Offset = "0xA73BAC", VA = "0xA73BAC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000F40")]
		[Address(RVA = "0xA73BB4", Offset = "0xA73BB4", VA = "0xA73BB4")]
		public bool IsIncluded(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F41")]
		[Address(RVA = "0xA73CE4", Offset = "0xA73CE4", VA = "0xA73CE4")]
		public bool IsExcluded(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F42")]
		[Address(RVA = "0xA73E04", Offset = "0xA73E04", VA = "0xA73E04", Slot = "4")]
		public bool IsMatch(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F43")]
		[Address(RVA = "0xA733DC", Offset = "0xA733DC", VA = "0xA733DC")]
		private void Compile()
		{
		}
	}
	[Token(Token = "0x200019B")]
	public class PathFilter : IScanFilter
	{
		[Token(Token = "0x4001719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly NameFilter nameFilter_;

		[Token(Token = "0x6000F44")]
		[Address(RVA = "0xA71420", Offset = "0xA71420", VA = "0xA71420")]
		public PathFilter(string filter)
		{
		}

		[Token(Token = "0x6000F45")]
		[Address(RVA = "0xA71A88", Offset = "0xA71A88", VA = "0xA71A88", Slot = "5")]
		public virtual bool IsMatch(string name)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200019C")]
	public class ExtendedPathFilter : PathFilter
	{
		[Token(Token = "0x400171A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private long minSize_;

		[Token(Token = "0x400171B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private long maxSize_;

		[Token(Token = "0x400171C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private DateTime minDate_;

		[Token(Token = "0x400171D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private DateTime maxDate_;

		[Token(Token = "0x170001E3")]
		public long MinSize
		{
			[Token(Token = "0x6000F4A")]
			[Address(RVA = "0xA71B44", Offset = "0xA71B44", VA = "0xA71B44")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6000F4B")]
			[Address(RVA = "0xA71498", Offset = "0xA71498", VA = "0xA71498")]
			set
			{
			}
		}

		[Token(Token = "0x170001E4")]
		public long MaxSize
		{
			[Token(Token = "0x6000F4C")]
			[Address(RVA = "0xA71B4C", Offset = "0xA71B4C", VA = "0xA71B4C")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6000F4D")]
			[Address(RVA = "0xA71538", Offset = "0xA71538", VA = "0xA71538")]
			set
			{
			}
		}

		[Token(Token = "0x170001E5")]
		public DateTime MinDate
		{
			[Token(Token = "0x6000F4E")]
			[Address(RVA = "0xA71B54", Offset = "0xA71B54", VA = "0xA71B54")]
			get
			{
				return default(DateTime);
			}
			[Token(Token = "0x6000F4F")]
			[Address(RVA = "0xA71698", Offset = "0xA71698", VA = "0xA71698")]
			set
			{
			}
		}

		[Token(Token = "0x170001E6")]
		public DateTime MaxDate
		{
			[Token(Token = "0x6000F50")]
			[Address(RVA = "0xA71B5C", Offset = "0xA71B5C", VA = "0xA71B5C")]
			get
			{
				return default(DateTime);
			}
			[Token(Token = "0x6000F51")]
			[Address(RVA = "0xA7176C", Offset = "0xA7176C", VA = "0xA7176C")]
			set
			{
			}
		}

		[Token(Token = "0x6000F46")]
		[Address(RVA = "0xA71360", Offset = "0xA71360", VA = "0xA71360")]
		public ExtendedPathFilter(string filter, long minSize, long maxSize)
		{
		}

		[Token(Token = "0x6000F47")]
		[Address(RVA = "0xA715D8", Offset = "0xA715D8", VA = "0xA715D8")]
		public ExtendedPathFilter(string filter, DateTime minDate, DateTime maxDate)
		{
		}

		[Token(Token = "0x6000F48")]
		[Address(RVA = "0xA71840", Offset = "0xA71840", VA = "0xA71840")]
		public ExtendedPathFilter(string filter, long minSize, long maxSize, DateTime minDate, DateTime maxDate)
		{
		}

		[Token(Token = "0x6000F49")]
		[Address(RVA = "0xA71928", Offset = "0xA71928", VA = "0xA71928", Slot = "5")]
		public override bool IsMatch(string name)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200019D")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7F69A0", Offset = "0x7F69A0")]
	public class NameAndSizeFilter : PathFilter
	{
		[Token(Token = "0x400171E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private long minSize_;

		[Token(Token = "0x400171F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private long maxSize_;

		[Token(Token = "0x170001E7")]
		public long MinSize
		{
			[Token(Token = "0x6000F54")]
			[Address(RVA = "0xA7332C", Offset = "0xA7332C", VA = "0xA7332C")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6000F55")]
			[Address(RVA = "0xA73138", Offset = "0xA73138", VA = "0xA73138")]
			set
			{
			}
		}

		[Token(Token = "0x170001E8")]
		public long MaxSize
		{
			[Token(Token = "0x6000F56")]
			[Address(RVA = "0xA73334", Offset = "0xA73334", VA = "0xA73334")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6000F57")]
			[Address(RVA = "0xA731D8", Offset = "0xA731D8", VA = "0xA731D8")]
			set
			{
			}
		}

		[Token(Token = "0x6000F52")]
		[Address(RVA = "0xA730EC", Offset = "0xA730EC", VA = "0xA730EC")]
		public NameAndSizeFilter(string filter, long minSize, long maxSize)
		{
		}

		[Token(Token = "0x6000F53")]
		[Address(RVA = "0xA73278", Offset = "0xA73278", VA = "0xA73278", Slot = "5")]
		public override bool IsMatch(string name)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200019E")]
	public sealed class StreamUtils
	{
		[Token(Token = "0x6000F58")]
		[Address(RVA = "0xA743F8", Offset = "0xA743F8", VA = "0xA743F8")]
		public static void ReadFully(Stream stream, byte[] buffer)
		{
		}

		[Token(Token = "0x6000F59")]
		[Address(RVA = "0xA74418", Offset = "0xA74418", VA = "0xA74418")]
		public static void ReadFully(Stream stream, byte[] buffer, int offset, int count)
		{
		}

		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0xA745A0", Offset = "0xA745A0", VA = "0xA745A0")]
		public static int ReadRequestedBytes(Stream stream, byte[] buffer, int offset, int count)
		{
			return default(int);
		}

		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0xA7471C", Offset = "0xA7471C", VA = "0xA7471C")]
		public static void Copy(Stream source, Stream destination, byte[] buffer)
		{
		}

		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0xA748B8", Offset = "0xA748B8", VA = "0xA748B8")]
		public static void Copy(Stream source, Stream destination, byte[] buffer, ProgressHandler progressHandler, TimeSpan updateInterval, object sender, string name)
		{
		}

		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0xA748D8", Offset = "0xA748D8", VA = "0xA748D8")]
		public static void Copy(Stream source, Stream destination, byte[] buffer, ProgressHandler progressHandler, TimeSpan updateInterval, object sender, string name, long fixedTarget)
		{
		}

		[Token(Token = "0x6000F5E")]
		[Address(RVA = "0xA74CAC", Offset = "0xA74CAC", VA = "0xA74CAC")]
		private StreamUtils()
		{
		}
	}
	[Token(Token = "0x200019F")]
	public abstract class WindowsPathUtils
	{
		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0xA74CB4", Offset = "0xA74CB4", VA = "0xA74CB4")]
		internal WindowsPathUtils()
		{
		}

		[Token(Token = "0x6000F60")]
		[Address(RVA = "0xA74CBC", Offset = "0xA74CBC", VA = "0xA74CBC")]
		public static string DropPathRoot(string path)
		{
			return null;
		}
	}
}
namespace ICSharpCode.SharpZipLib.Checksum
{
	[Token(Token = "0x20001A0")]
	public sealed class Adler32 : IChecksum
	{
		[Token(Token = "0x4001720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly uint BASE;

		[Token(Token = "0x4001721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private uint checkValue;

		[Token(Token = "0x170001E9")]
		public long Value
		{
			[Token(Token = "0x6000F63")]
			[Address(RVA = "0xA6FFF8", Offset = "0xA6FFF8", VA = "0xA6FFF8", Slot = "5")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x6000F61")]
		[Address(RVA = "0xA6FFC0", Offset = "0xA6FFC0", VA = "0xA6FFC0")]
		public Adler32()
		{
		}

		[Token(Token = "0x6000F62")]
		[Address(RVA = "0xA6FFEC", Offset = "0xA6FFEC", VA = "0xA6FFEC", Slot = "4")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000F64")]
		[Address(RVA = "0xA70000", Offset = "0xA70000", VA = "0xA70000", Slot = "6")]
		public void Update(int bval)
		{
		}

		[Token(Token = "0x6000F65")]
		[Address(RVA = "0xA700AC", Offset = "0xA700AC", VA = "0xA700AC", Slot = "7")]
		public void Update(byte[] buffer)
		{
		}

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0xA70174", Offset = "0xA70174", VA = "0xA70174", Slot = "8")]
		public void Update(ArraySegment<byte> segment)
		{
		}
	}
	[Token(Token = "0x20001A1")]
	public sealed class BZip2Crc : IChecksum
	{
		[Token(Token = "0x4001722")]
		private const uint crcInit = uint.MaxValue;

		[Token(Token = "0x4001723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly uint[] crcTable;

		[Token(Token = "0x4001724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private uint checkValue;

		[Token(Token = "0x170001EA")]
		public long Value
		{
			[Token(Token = "0x6000F6A")]
			[Address(RVA = "0xA70328", Offset = "0xA70328", VA = "0xA70328", Slot = "5")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x6000F68")]
		[Address(RVA = "0xA702F0", Offset = "0xA702F0", VA = "0xA702F0")]
		public BZip2Crc()
		{
		}

		[Token(Token = "0x6000F69")]
		[Address(RVA = "0xA7031C", Offset = "0xA7031C", VA = "0xA7031C", Slot = "4")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000F6B")]
		[Address(RVA = "0xA70334", Offset = "0xA70334", VA = "0xA70334", Slot = "6")]
		public void Update(int bval)
		{
		}

		[Token(Token = "0x6000F6C")]
		[Address(RVA = "0xA703F0", Offset = "0xA703F0", VA = "0xA703F0", Slot = "7")]
		public void Update(byte[] buffer)
		{
		}

		[Token(Token = "0x6000F6D")]
		[Address(RVA = "0xA704B8", Offset = "0xA704B8", VA = "0xA704B8", Slot = "8")]
		public void Update(ArraySegment<byte> segment)
		{
		}
	}
	[Token(Token = "0x20001A2")]
	public sealed class Crc32 : IChecksum
	{
		[Token(Token = "0x4001725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly uint crcInit;

		[Token(Token = "0x4001726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly uint crcXor;

		[Token(Token = "0x4001727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly uint[] crcTable;

		[Token(Token = "0x4001728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private uint checkValue;

		[Token(Token = "0x170001EB")]
		public long Value
		{
			[Token(Token = "0x6000F72")]
			[Address(RVA = "0xA70720", Offset = "0xA70720", VA = "0xA70720", Slot = "5")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x6000F6F")]
		[Address(RVA = "0xA705D4", Offset = "0xA705D4", VA = "0xA705D4")]
		internal static uint ComputeCrc32(uint oldCrc, byte bval)
		{
			return default(uint);
		}

		[Token(Token = "0x6000F70")]
		[Address(RVA = "0xA70688", Offset = "0xA70688", VA = "0xA70688")]
		public Crc32()
		{
		}

		[Token(Token = "0x6000F71")]
		[Address(RVA = "0xA706B0", Offset = "0xA706B0", VA = "0xA706B0", Slot = "4")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000F73")]
		[Address(RVA = "0xA70794", Offset = "0xA70794", VA = "0xA70794", Slot = "6")]
		public void Update(int bval)
		{
		}

		[Token(Token = "0x6000F74")]
		[Address(RVA = "0xA70850", Offset = "0xA70850", VA = "0xA70850", Slot = "7")]
		public void Update(byte[] buffer)
		{
		}

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0xA70918", Offset = "0xA70918", VA = "0xA70918", Slot = "8")]
		public void Update(ArraySegment<byte> segment)
		{
		}
	}
	[Token(Token = "0x20001A3")]
	public interface IChecksum
	{
		[Token(Token = "0x170001EC")]
		long Value
		{
			[Token(Token = "0x6000F78")]
			get;
		}

		[Token(Token = "0x6000F77")]
		void Reset();

		[Token(Token = "0x6000F79")]
		void Update(int bval);

		[Token(Token = "0x6000F7A")]
		void Update(byte[] buffer);

		[Token(Token = "0x6000F7B")]
		void Update(ArraySegment<byte> segment);
	}
}
namespace Photo3D
{
	[Token(Token = "0x20001A4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7F69D8", Offset = "0x7F69D8")]
	public class Photo3DShooter : MonoBehaviour
	{
		[Token(Token = "0x20003F3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9BC8", Offset = "0x7F9BC8")]
		private sealed class <SaveImage>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400266B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400266C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400266D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Photo3DShooter <>4__this;

			[Token(Token = "0x400266E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DateTime nowTime;

			[Token(Token = "0x400266F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool isDepthImage;

			[Token(Token = "0x4002670")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public byte[] imageToSave;

			[Token(Token = "0x4002671")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private string <fileName>5__2;

			[Token(Token = "0x4002672")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private string <imageGalleryPath>5__3;

			[Token(Token = "0x4002673")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private string <temporaryImageName>5__4;

			[Token(Token = "0x17000377")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A83")]
				[Address(RVA = "0x9EAF68", Offset = "0x9EAF68", VA = "0x9EAF68", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000378")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A85")]
				[Address(RVA = "0x9EAFD4", Offset = "0x9EAFD4", VA = "0x9EAFD4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A80")]
			[Address(RVA = "0x9EA780", Offset = "0x9EA780", VA = "0x9EA780")]
			[DebuggerHidden]
			public <SaveImage>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001A81")]
			[Address(RVA = "0x9EA818", Offset = "0x9EA818", VA = "0x9EA818", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A82")]
			[Address(RVA = "0x9EA81C", Offset = "0x9EA81C", VA = "0x9EA81C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A84")]
			[Address(RVA = "0x9EAF70", Offset = "0x9EAF70", VA = "0x9EAF70", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x800844", Offset = "0x800844")]
		public Material PostprocessMaterial;

		[Token(Token = "0x400172A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x80087C", Offset = "0x80087C")]
		public float DepthMultiplier;

		[Token(Token = "0x400172B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8008B4", Offset = "0x8008B4")]
		public int PhotoWidth;

		[Token(Token = "0x400172C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8008EC", Offset = "0x8008EC")]
		public int PhotoHeight;

		[Token(Token = "0x400172D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x800924", Offset = "0x800924")]
		public string ProgramTag;

		[Token(Token = "0x400172E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x80095C", Offset = "0x80095C")]
		public Camera ReferenceCamera;

		[Token(Token = "0x400172F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RenderTexture m_renderTexture;

		[Token(Token = "0x4001730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Texture2D m_texture;

		[Token(Token = "0x4001731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Camera m_camera;

		[Token(Token = "0x4001732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_depthImage;

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0x9EA1C0", Offset = "0x9EA1C0", VA = "0x9EA1C0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0x9EA2F8", Offset = "0x9EA2F8", VA = "0x9EA2F8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0x9EA54C", Offset = "0x9EA54C", VA = "0x9EA54C")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0x9EA370", Offset = "0x9EA370", VA = "0x9EA370")]
		private void Capture()
		{
		}

		[Token(Token = "0x6000F80")]
		[Address(RVA = "0x9EA614", Offset = "0x9EA614", VA = "0x9EA614")]
		private void RenderAndSaveImage(bool isDepthImage, DateTime nowTime)
		{
		}

		[Token(Token = "0x6000F81")]
		[Address(RVA = "0x9EA6E4", Offset = "0x9EA6E4", VA = "0x9EA6E4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8049DC", Offset = "0x8049DC")]
		private IEnumerator SaveImage(byte[] imageToSave, bool isDepthImage, DateTime nowTime)
		{
			return null;
		}

		[Token(Token = "0x6000F82")]
		[Address(RVA = "0x9EA7AC", Offset = "0x9EA7AC", VA = "0x9EA7AC")]
		public Photo3DShooter()
		{
		}
	}
}
namespace BLINDED_AM_ME
{
	[Token(Token = "0x20001A5")]
	public class Mesh_Maker
	{
		[Token(Token = "0x20003F4")]
		public struct Triangle
		{
			[Token(Token = "0x4002674")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3[] vertices;

			[Token(Token = "0x4002675")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector2[] uvs;

			[Token(Token = "0x4002676")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3[] normals;

			[Token(Token = "0x6001A86")]
			[Address(RVA = "0x886380", Offset = "0x886380", VA = "0x886380")]
			public Triangle([Optional] Vector3[] vertices, [Optional] Vector2[] uvs, [Optional] Vector3[] normals)
			{
			}
		}

		[Token(Token = "0x4001733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector3[] _vertices;

		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int ver_count;

		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3[] _normals;

		[Token(Token = "0x4001736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector2[] _uvs;

		[Token(Token = "0x4001737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Mesh shape;

		[Token(Token = "0x4001738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<List<int>> _subIndices;

		[Token(Token = "0x170001ED")]
		public int VertCount
		{
			[Token(Token = "0x6000F83")]
			[Address(RVA = "0xA3A384", Offset = "0xA3A384", VA = "0xA3A384")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000F84")]
		[Address(RVA = "0xA36578", Offset = "0xA36578", VA = "0xA36578")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000F85")]
		[Address(RVA = "0xA365D4", Offset = "0xA365D4", VA = "0xA365D4")]
		public void AddTriangle(Triangle triangle, int submesh)
		{
		}

		[Token(Token = "0x6000F86")]
		[Address(RVA = "0xA3A38C", Offset = "0xA3A38C", VA = "0xA3A38C")]
		public void AddTriangle(Vector3[] vertices, Vector2[] uvs, Vector3[] normals, int submesh = 0)
		{
		}

		[Token(Token = "0x6000F87")]
		[Address(RVA = "0xA38A10", Offset = "0xA38A10", VA = "0xA38A10")]
		public Mesh GetMesh()
		{
			return null;
		}

		[Token(Token = "0x6000F88")]
		[Address(RVA = "0xA3A2A8", Offset = "0xA3A2A8", VA = "0xA3A2A8")]
		public Mesh_Maker()
		{
		}
	}
	[Token(Token = "0x20001A6")]
	public class MeshCut
	{
		[Token(Token = "0x4001739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Plane _blade;

		[Token(Token = "0x400173A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Mesh _victim_mesh;

		[Token(Token = "0x400173B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Mesh_Maker _leftSide;

		[Token(Token = "0x400173C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Mesh_Maker _rightSide;

		[Token(Token = "0x400173D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Mesh_Maker.Triangle _triangleCache;

		[Token(Token = "0x400173E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static List<Vector3> _newVerticesCache;

		[Token(Token = "0x400173F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static bool[] _isLeftSideCache;

		[Token(Token = "0x4001740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static int _capMatSub;

		[Token(Token = "0x4001741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private static bool isset;

		[Token(Token = "0x4001742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static Vector3[] mesh_vertices;

		[Token(Token = "0x4001743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static Vector3[] mesh_normals;

		[Token(Token = "0x4001744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private static Vector2[] mesh_uvs;

		[Token(Token = "0x4001745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private static Mesh_Maker.Triangle _leftTriangleCache;

		[Token(Token = "0x4001746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private static Mesh_Maker.Triangle _rightTriangleCache;

		[Token(Token = "0x4001747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private static Mesh_Maker.Triangle _newTriangleCache;

		[Token(Token = "0x4001748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private static List<int> _capPolygonIndicesCache;

		[Token(Token = "0x4001749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private static HashSet<int> h_capUsedIndicesCache;

		[Token(Token = "0x6000F89")]
		[Address(RVA = "0xA355D4", Offset = "0xA355D4", VA = "0xA355D4")]
		public static GameObject[] Cut(GameObject victim, Vector3 anchorPoint, Vector3 normalDirection, Material capMaterial, out int rozdiel, out int spolu)
		{
			return null;
		}

		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0xA365EC", Offset = "0xA365EC", VA = "0xA365EC")]
		private static void Cut_this_Face(ref Mesh_Maker.Triangle triangle, int submesh)
		{
		}

		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0xA38034", Offset = "0xA38034", VA = "0xA38034")]
		private static void Cap_the_Cut()
		{
		}

		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0xA38E34", Offset = "0xA38E34", VA = "0xA38E34")]
		public static void FillCap_Method1(List<int> indices)
		{
		}

		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0xA397B0", Offset = "0xA397B0", VA = "0xA397B0")]
		private static void FillCap_Method2(List<int> indices)
		{
		}

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0xA38BCC", Offset = "0xA38BCC", VA = "0xA38BCC")]
		private static void NormalCheck(ref Mesh_Maker.Triangle triangle)
		{
		}

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0xA3A028", Offset = "0xA3A028", VA = "0xA3A028")]
		public MeshCut()
		{
		}
	}
}
namespace BoundarySystem_Ext
{
	[Token(Token = "0x20001A7")]
	internal static class Pvr_BoundaryAPI
	{
		[Token(Token = "0x400174A")]
		private const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x6000F91")]
		[Address(RVA = "0xA3BC2C", Offset = "0xA3BC2C", VA = "0xA3BC2C")]
		public static extern void Pvr_StartSDKBoundary();

		[PreserveSig]
		[Token(Token = "0x6000F92")]
		[Address(RVA = "0xA3BCB8", Offset = "0xA3BCB8", VA = "0xA3BCB8")]
		public static extern void Pvr_ShutdownSDKBoundary();

		[PreserveSig]
		[Token(Token = "0x6000F93")]
		[Address(RVA = "0xA3BD44", Offset = "0xA3BD44", VA = "0xA3BD44")]
		private static extern int Pvr_GetMainSensorStateExt(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber);

		[PreserveSig]
		[Token(Token = "0x6000F94")]
		[Address(RVA = "0xA3BE40", Offset = "0xA3BE40", VA = "0xA3BE40")]
		private static extern IntPtr Pvr_GetCameraData_Ext();

		[PreserveSig]
		[Token(Token = "0x6000F95")]
		[Address(RVA = "0xA3BECC", Offset = "0xA3BECC", VA = "0xA3BECC")]
		public static extern void Pvr_ResetVrModebyForce();

		[PreserveSig]
		[Token(Token = "0x6000F96")]
		[Address(RVA = "0xA3BF58", Offset = "0xA3BF58", VA = "0xA3BF58")]
		private static extern bool Pvr_ResumeBoundaryForSTS();

		[PreserveSig]
		[Token(Token = "0x6000F97")]
		[Address(RVA = "0xA3BFEC", Offset = "0xA3BFEC", VA = "0xA3BFEC")]
		private static extern void Pvr_PauseBoundaryForSTS();

		[Token(Token = "0x6000F98")]
		[Address(RVA = "0xA3C078", Offset = "0xA3C078", VA = "0xA3C078")]
		public static int UPvr_GetMainSensorStateExt(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber)
		{
			return default(int);
		}

		[Token(Token = "0x6000F99")]
		[Address(RVA = "0xA3C084", Offset = "0xA3C084", VA = "0xA3C084")]
		public static IntPtr UPvr_GetCameraData_Ext()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0xA3C0C0", Offset = "0xA3C0C0", VA = "0xA3C0C0")]
		public static bool UPvr_ResumeBoundaryForSTS()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0xA3C0C4", Offset = "0xA3C0C4", VA = "0xA3C0C4")]
		public static void UPvr_PauseBoundaryForSTS()
		{
		}

		[Token(Token = "0x6000F9C")]
		public static IntPtr StructToIntPtr<T>(T info)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000F9D")]
		public static T IntPtrToStruct<T>(IntPtr info)
		{
			return (T)null;
		}
	}
	[Token(Token = "0x20001A8")]
	internal static class Pvr_SafeAreaAlgoAPI
	{
		[Token(Token = "0x20003F5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7F9BD8", Offset = "0x7F9BD8")]
		public delegate void SafeAreaCallback(IntPtr lineCollectionPtr, IntPtr safeAreaRectPtr);

		[Token(Token = "0x20003F6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7F9BEC", Offset = "0x7F9BEC")]
		public delegate void SafeAreaCallbackShrink(IntPtr lineCollectionPtr, IntPtr safeAreaDetailRectPtr);

		[Token(Token = "0x20003F7")]
		public struct GSAPoint3i
		{
			[Token(Token = "0x4002677")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int x;

			[Token(Token = "0x4002678")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int y;

			[Token(Token = "0x4002679")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int z;
		}

		[Token(Token = "0x20003F8")]
		public struct GSALine
		{
			[Token(Token = "0x400267A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IntPtr pointArray;

			[Token(Token = "0x400267B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int pointCount;
		}

		[Token(Token = "0x20003F9")]
		public struct GSALineCollection
		{
			[Token(Token = "0x400267C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IntPtr lineArray;

			[Token(Token = "0x400267D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int lineCount;
		}

		[Token(Token = "0x20003FA")]
		public struct GSALegalData
		{
			[Token(Token = "0x400267E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int overMaxRange;

			[Token(Token = "0x400267F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int includeBigGrap;

			[Token(Token = "0x4002680")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int bigGapNum;

			[Token(Token = "0x4002681")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int centerOut;

			[Token(Token = "0x4002682")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int removeNarrow;

			[Token(Token = "0x4002683")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int overMaxRange_more;

			[Token(Token = "0x4002684")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int validShrinkArea;
		}

		[Token(Token = "0x20003FB")]
		public struct GSARect
		{
			[Token(Token = "0x4002685")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GSAPoint3i leftup;

			[Token(Token = "0x4002686")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public GSAPoint3i leftdown;

			[Token(Token = "0x4002687")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GSAPoint3i rightup;

			[Token(Token = "0x4002688")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public GSAPoint3i rightdown;

			[Token(Token = "0x4002689")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GSAPoint3i center;

			[Token(Token = "0x400268A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public uint width;

			[Token(Token = "0x400268B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public uint height;

			[Token(Token = "0x400268C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public int isLegal;

			[Token(Token = "0x400268D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public GSALegalData legalData;
		}

		[Token(Token = "0x400174B")]
		private const string LibFileName = "SafetyArea";

		[PreserveSig]
		[Token(Token = "0x6000F9E")]
		[Address(RVA = "0xA3C364", Offset = "0xA3C364", VA = "0xA3C364")]
		private static extern int GSAInit(int width, int height);

		[PreserveSig]
		[Token(Token = "0x6000F9F")]
		[Address(RVA = "0xA3C410", Offset = "0xA3C410", VA = "0xA3C410")]
		private static extern int GSAShutDown();

		[PreserveSig]
		[Token(Token = "0x6000FA0")]
		[Address(RVA = "0xA3C49C", Offset = "0xA3C49C", VA = "0xA3C49C")]
		private static extern int GSASetCallback(SafeAreaCallback cb);

		[PreserveSig]
		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0xA3C53C", Offset = "0xA3C53C", VA = "0xA3C53C")]
		private static extern int GSASetCallbackShrink(SafeAreaCallbackShrink cb);

		[PreserveSig]
		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0xA3C5DC", Offset = "0xA3C5DC", VA = "0xA3C5DC")]
		private static extern int GSAUpDateData(IntPtr lineCollectionPtr);

		[PreserveSig]
		[Token(Token = "0x6000FA3")]
		[Address(RVA = "0xA3C678", Offset = "0xA3C678", VA = "0xA3C678")]
		private static extern int GSASetConfigFilePath(IntPtr configPath);

		[PreserveSig]
		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0xA3C714", Offset = "0xA3C714", VA = "0xA3C714")]
		private static extern bool GSAGetClosedAreaUpdateFlag();

		[PreserveSig]
		[Token(Token = "0x6000FA5")]
		[Address(RVA = "0xA3C7A8", Offset = "0xA3C7A8", VA = "0xA3C7A8")]
		private static extern int GSALoadSafetyArea(IntPtr lineCollectionPtr);

		[PreserveSig]
		[Token(Token = "0x6000FA6")]
		[Address(RVA = "0xA3C844", Offset = "0xA3C844", VA = "0xA3C844")]
		private static extern double GSABoundaryDetector(ref GSAPoint3i pointPtr);

		[PreserveSig]
		[Token(Token = "0x6000FA7")]
		[Address(RVA = "0xA3C8E0", Offset = "0xA3C8E0", VA = "0xA3C8E0")]
		private static extern int GSALoadSafetyArea2(IntPtr lineCollectionPtr, bool isPlayArea);

		[PreserveSig]
		[Token(Token = "0x6000FA8")]
		[Address(RVA = "0xA3C98C", Offset = "0xA3C98C", VA = "0xA3C98C")]
		private static extern double GSABoundaryDetector2(ref GSAPoint3i point, bool isPlayArea, ref GSAPoint3i closestPoint, ref GSAPoint3i normalDir);

		[Token(Token = "0x6000FA9")]
		[Address(RVA = "0xA3CA50", Offset = "0xA3CA50", VA = "0xA3CA50")]
		public static int Pvr_GSAInit(int width, int height)
		{
			return default(int);
		}

		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0xA3CA54", Offset = "0xA3CA54", VA = "0xA3CA54")]
		public static int Pvr_GSASetCallback(SafeAreaCallback cb)
		{
			return default(int);
		}

		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0xA3CA58", Offset = "0xA3CA58", VA = "0xA3CA58")]
		public static int Pvr_GSASetCallbackShrink(SafeAreaCallbackShrink cb)
		{
			return default(int);
		}

		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0xA3CA5C", Offset = "0xA3CA5C", VA = "0xA3CA5C")]
		public static int Pvr_GSAUpDateData(IntPtr lineCollectionPtr)
		{
			return default(int);
		}

		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0xA3CA60", Offset = "0xA3CA60", VA = "0xA3CA60")]
		public static bool Pvr_GSAGetClosedAreaUpdateFlag()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0xA3CA64", Offset = "0xA3CA64", VA = "0xA3CA64")]
		public static int Pvr_GSASetConfigFilePath(string configPath)
		{
			return default(int);
		}

		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0xA3CAEC", Offset = "0xA3CAEC", VA = "0xA3CAEC")]
		public static int Pvr_GSALoadSafetyArea(IntPtr lineCollectionPtr)
		{
			return default(int);
		}

		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0xA3CAF0", Offset = "0xA3CAF0", VA = "0xA3CAF0")]
		public static double Pvr_GSABoundaryDetector(ref GSAPoint3i point)
		{
			return default(double);
		}

		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0xA3CAF4", Offset = "0xA3CAF4", VA = "0xA3CAF4")]
		public static int Pvr_GSAShutDown()
		{
			return default(int);
		}

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0xA3CAF8", Offset = "0xA3CAF8", VA = "0xA3CAF8")]
		public static int Pvr_GSALoadSafetyArea2(IntPtr lineCollectionPtr, bool isPlayArea)
		{
			return default(int);
		}

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0xA3CB00", Offset = "0xA3CB00", VA = "0xA3CB00")]
		public static double Pvr_GSABoundaryDetector2(ref GSAPoint3i point, bool isPlayArea, ref GSAPoint3i closestPoint, ref GSAPoint3i normalDir)
		{
			return default(double);
		}
	}
	[Token(Token = "0x20001A9")]
	public class Pvr_BoundarySystem
	{
		[Token(Token = "0x400174C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Pvr_BoundarySystem instance;

		[Token(Token = "0x400174D")]
		public const int CameraImageWidth = 1280;

		[Token(Token = "0x400174E")]
		public const int CameraImageHeight = 400;

		[Token(Token = "0x400174F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr CameraFramePtr;

		[Token(Token = "0x170001EE")]
		public static Pvr_BoundarySystem Instance
		{
			[Token(Token = "0x6000FB4")]
			[Address(RVA = "0xA3C0C8", Offset = "0xA3C0C8", VA = "0xA3C0C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0xA3C190", Offset = "0xA3C190", VA = "0xA3C190")]
		public void OpenBoundary()
		{
		}

		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0xA3C194", Offset = "0xA3C194", VA = "0xA3C194")]
		public void CloseBoundary()
		{
		}

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0xA3C198", Offset = "0xA3C198", VA = "0xA3C198")]
		public void Reset6Dof()
		{
		}

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0xA3C19C", Offset = "0xA3C19C", VA = "0xA3C19C")]
		public float[] GetControllerFixedPoseData(int hand)
		{
			return null;
		}

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0xA3C144", Offset = "0xA3C144", VA = "0xA3C144")]
		public Pvr_BoundarySystem()
		{
		}
	}
	[Token(Token = "0x20001AA")]
	public class Pvr_SafeAreaAlgoModule
	{
		[Token(Token = "0x20003FC")]
		public struct ExtraInfo
		{
			[Token(Token = "0x400268E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool overMaxRange;

			[Token(Token = "0x400268F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public bool includeBigGap;

			[Token(Token = "0x4002690")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int bigGapNum;

			[Token(Token = "0x4002691")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool centerOut;

			[Token(Token = "0x4002692")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
			public bool removeNarrow;

			[Token(Token = "0x4002693")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
			public bool overMaxRange_more;

			[Token(Token = "0x4002694")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int validShrinkArea;
		}

		[Token(Token = "0x20003FD")]
		public struct BoundaryPlayerArea
		{
			[Token(Token = "0x4002695")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 lowerleft;

			[Token(Token = "0x4002696")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 upperleft;

			[Token(Token = "0x4002697")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 upperRight;

			[Token(Token = "0x4002698")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3 lowerRight;

			[Token(Token = "0x4002699")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 center;

			[Token(Token = "0x400269A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public uint width;

			[Token(Token = "0x400269B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public uint height;

			[Token(Token = "0x400269C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public bool isLegal;

			[Token(Token = "0x400269D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public ExtraInfo extraInfo;
		}

		[Token(Token = "0x20003FE")]
		public delegate void BoundarySystemCallback(BoundaryPlayerArea playAreaInfo, List<Vector3> boundaryPoints, List<List<Vector3>> unusedLines);

		[Token(Token = "0x20003FF")]
		public delegate void BoundarySystemCallbackShrink(List<Vector3> rectPoints, List<Vector3> boundaryPoints, List<List<Vector3>> unusedLines);

		[Token(Token = "0x4001750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Pvr_SafeAreaAlgoModule instance;

		[Token(Token = "0x4001751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private BoundarySystemCallback boundarySystemCallback;

		[Token(Token = "0x4001752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BoundarySystemCallbackShrink boundarySystemCallbackShrink;

		[Token(Token = "0x170001EF")]
		public static Pvr_SafeAreaAlgoModule Instance
		{
			[Token(Token = "0x6000FBA")]
			[Address(RVA = "0xA3DF1C", Offset = "0xA3DF1C", VA = "0xA3DF1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0xA3DFA4", Offset = "0xA3DFA4", VA = "0xA3DFA4")]
		public void RegisterCallBack(BoundarySystemCallback callback)
		{
		}

		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0xA3DFAC", Offset = "0xA3DFAC", VA = "0xA3DFAC")]
		public void RegisterCallBackShrink(BoundarySystemCallbackShrink callback)
		{
		}

		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0xA3DFB4", Offset = "0xA3DFB4", VA = "0xA3DFB4")]
		public bool Start()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0xA3E0D4", Offset = "0xA3E0D4", VA = "0xA3E0D4")]
		public bool CommitNewLineData(bool isFistLine, Vector3[] points)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0xA3E368", Offset = "0xA3E368", VA = "0xA3E368")]
		public bool Shutdown()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0xA3E3EC", Offset = "0xA3E3EC", VA = "0xA3E3EC")]
		public double QueryDistanceOfPoint(Vector3 point)
		{
			return default(double);
		}

		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0xA3E440", Offset = "0xA3E440", VA = "0xA3E440")]
		public double QueryDistanceOfPoint(Vector3 point, bool isPlayArea, ref Vector3 closestPoint, ref Vector3 normalDir)
		{
			return default(double);
		}

		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0xA3D138", Offset = "0xA3D138", VA = "0xA3D138")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x804A40", Offset = "0x804A40")]
		private static void _SafeAreaCallback(IntPtr lineCollectionPtr, IntPtr safeAreaRectPtr)
		{
		}

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0xA3D85C", Offset = "0xA3D85C", VA = "0xA3D85C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x804AA4", Offset = "0x804AA4")]
		private static void _SafeAreaCallbackShrink(IntPtr lineCollectionPtr, IntPtr safeAreaDetailRectPtr)
		{
		}

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0xA3DF9C", Offset = "0xA3DF9C", VA = "0xA3DF9C")]
		public Pvr_SafeAreaAlgoModule()
		{
		}
	}
}
namespace Pvr_UnitySDKAPI
{
	[Token(Token = "0x20001AB")]
	public class PvrControllerKey
	{
		[Token(Token = "0x4001753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool State;

		[Token(Token = "0x4001754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool PressedDown;

		[Token(Token = "0x4001755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool PressedUp;

		[Token(Token = "0x4001756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public bool LongPressed;

		[Token(Token = "0x4001757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool Click;

		[Token(Token = "0x4001758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool Touch;

		[Token(Token = "0x4001759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public bool TouchDown;

		[Token(Token = "0x400175A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		public bool TouchUp;

		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0xC9BA38", Offset = "0xC9BA38", VA = "0xC9BA38")]
		public PvrControllerKey()
		{
		}
	}
	[Token(Token = "0x20001AC")]
	public class ControllerHand
	{
		[Token(Token = "0x400175B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PvrControllerKey App;

		[Token(Token = "0x400175C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PvrControllerKey Touch;

		[Token(Token = "0x400175D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PvrControllerKey Home;

		[Token(Token = "0x400175E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PvrControllerKey VolumeDown;

		[Token(Token = "0x400175F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PvrControllerKey VolumeUp;

		[Token(Token = "0x4001760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PvrControllerKey Trigger;

		[Token(Token = "0x4001761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PvrControllerKey X;

		[Token(Token = "0x4001762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public PvrControllerKey Y;

		[Token(Token = "0x4001763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public PvrControllerKey A;

		[Token(Token = "0x4001764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public PvrControllerKey B;

		[Token(Token = "0x4001765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public PvrControllerKey Left;

		[Token(Token = "0x4001766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public PvrControllerKey Right;

		[Token(Token = "0x4001767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public PvrControllerKey Thumbrest;

		[Token(Token = "0x4001768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Vector2 TouchPadPosition;

		[Token(Token = "0x4001769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int TriggerNum;

		[Token(Token = "0x400176A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public int GripValue;

		[Token(Token = "0x400176B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Quaternion Rotation;

		[Token(Token = "0x400176C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Vector3 Position;

		[Token(Token = "0x400176D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public int Battery;

		[Token(Token = "0x400176E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public ControllerState ConnectState;

		[Token(Token = "0x400176F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public SwipeDirection SwipeDirection;

		[Token(Token = "0x4001770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public TouchPadClick TouchPadClick;

		[Token(Token = "0x4001771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public bool isShowBoundary;

		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0xC9B850", Offset = "0xC9B850", VA = "0xC9B850")]
		public ControllerHand()
		{
		}
	}
	[Token(Token = "0x20001AD")]
	public enum ControllerState
	{
		[Token(Token = "0x4001773")]
		Error = -1,
		[Token(Token = "0x4001774")]
		DisConnected,
		[Token(Token = "0x4001775")]
		Connected
	}
	[Token(Token = "0x20001AE")]
	public enum Pvr_KeyCode
	{
		[Token(Token = "0x4001777")]
		APP = 1,
		[Token(Token = "0x4001778")]
		TOUCHPAD,
		[Token(Token = "0x4001779")]
		HOME,
		[Token(Token = "0x400177A")]
		VOLUMEUP,
		[Token(Token = "0x400177B")]
		VOLUMEDOWN,
		[Token(Token = "0x400177C")]
		TRIGGER,
		[Token(Token = "0x400177D")]
		A,
		[Token(Token = "0x400177E")]
		B,
		[Token(Token = "0x400177F")]
		X,
		[Token(Token = "0x4001780")]
		Y,
		[Token(Token = "0x4001781")]
		Left,
		[Token(Token = "0x4001782")]
		Right,
		[Token(Token = "0x4001783")]
		Thumbrest
	}
	[Token(Token = "0x20001AF")]
	public enum SwipeDirection
	{
		[Token(Token = "0x4001785")]
		No,
		[Token(Token = "0x4001786")]
		SwipeUp,
		[Token(Token = "0x4001787")]
		SwipeDown,
		[Token(Token = "0x4001788")]
		SwipeLeft,
		[Token(Token = "0x4001789")]
		SwipeRight
	}
	[Token(Token = "0x20001B0")]
	public enum TouchPadClick
	{
		[Token(Token = "0x400178B")]
		No,
		[Token(Token = "0x400178C")]
		ClickUp,
		[Token(Token = "0x400178D")]
		ClickDown,
		[Token(Token = "0x400178E")]
		ClickLeft,
		[Token(Token = "0x400178F")]
		ClickRight
	}
	[Token(Token = "0x20001B1")]
	public struct Controller
	{
		[Token(Token = "0x4001790")]
		public const string LibFileName = "Pvr_UnitySDK";

		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0xC8A13C", Offset = "0xC8A13C", VA = "0xC8A13C")]
		public static Vector2 UPvr_GetTouchPadPosition(int hand)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0xC97D18", Offset = "0xC97D18", VA = "0xC97D18")]
		public static float UPvr_GetAxis1D(int hand, Pvr_KeyCode key)
		{
			return default(float);
		}

		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0xC97EA0", Offset = "0xC97EA0", VA = "0xC97EA0")]
		public static Vector2 UPvr_GetAxis2D(int hand)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0xC980D4", Offset = "0xC980D4", VA = "0xC980D4")]
		public static ControllerState UPvr_GetControllerState(int hand)
		{
			return default(ControllerState);
		}

		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0xC981DC", Offset = "0xC981DC", VA = "0xC981DC")]
		public static Quaternion UPvr_GetControllerQUA(int hand)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000FCC")]
		[Address(RVA = "0xC982F8", Offset = "0xC982F8", VA = "0xC982F8")]
		public static Vector3 UPvr_GetControllerPOS(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000FCD")]
		[Address(RVA = "0xC98410", Offset = "0xC98410", VA = "0xC98410")]
		public static int UPvr_GetControllerTriggerValue(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0xC984E4", Offset = "0xC984E4", VA = "0xC984E4")]
		public static int UPvr_GetControllerPower(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0xC985B8", Offset = "0xC985B8", VA = "0xC985B8")]
		public static SwipeDirection UPvr_GetSwipeDirection(int hand)
		{
			return default(SwipeDirection);
		}

		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0xC9868C", Offset = "0xC9868C", VA = "0xC9868C")]
		public static TouchPadClick UPvr_GetTouchPadClick(int hand)
		{
			return default(TouchPadClick);
		}

		[Token(Token = "0x6000FD1")]
		[Address(RVA = "0xC88EF0", Offset = "0xC88EF0", VA = "0xC88EF0")]
		public static bool UPvr_GetKey(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FD2")]
		[Address(RVA = "0xC89440", Offset = "0xC89440", VA = "0xC89440")]
		public static bool UPvr_GetKeyDown(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FD3")]
		[Address(RVA = "0xC98760", Offset = "0xC98760", VA = "0xC98760")]
		public static bool UPvr_GetKeyUp(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0xC98CB0", Offset = "0xC98CB0", VA = "0xC98CB0")]
		public static bool UPvr_GetTouch(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FD5")]
		[Address(RVA = "0xC98FF8", Offset = "0xC98FF8", VA = "0xC98FF8")]
		public static bool UPvr_GetTouchDown(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0xC99340", Offset = "0xC99340", VA = "0xC99340")]
		public static bool UPvr_GetTouchUp(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FD7")]
		[Address(RVA = "0xC99688", Offset = "0xC99688", VA = "0xC99688")]
		public static bool UPvr_GetKeyClick(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0xC99BD8", Offset = "0xC99BD8", VA = "0xC99BD8")]
		public static bool UPvr_GetKeyLongPressed(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FD9")]
		[Address(RVA = "0xC8A7EC", Offset = "0xC8A7EC", VA = "0xC8A7EC")]
		public static bool UPvr_IsTouching(int hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0xC9A128", Offset = "0xC9A128", VA = "0xC9A128")]
		public static void UPvr_SetHandNess(Pvr_Controller.UserHandNess hand)
		{
		}

		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0xC9A1E8", Offset = "0xC9A1E8", VA = "0xC9A1E8")]
		public static Pvr_Controller.UserHandNess UPvr_GetHandNess()
		{
			return default(Pvr_Controller.UserHandNess);
		}

		[Token(Token = "0x6000FDC")]
		[Address(RVA = "0xC9A260", Offset = "0xC9A260", VA = "0xC9A260")]
		public static int UPvr_GetPreferenceDevice()
		{
			return default(int);
		}

		[Token(Token = "0x6000FDD")]
		[Address(RVA = "0xC9A320", Offset = "0xC9A320", VA = "0xC9A320")]
		public static bool UPvr_IsEnbleTrigger()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FDE")]
		[Address(RVA = "0xC9A394", Offset = "0xC9A394", VA = "0xC9A394")]
		public static int UPvr_GetDeviceType()
		{
			return default(int);
		}

		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0xC88E78", Offset = "0xC88E78", VA = "0xC88E78")]
		public static int UPvr_GetMainHandNess()
		{
			return default(int);
		}

		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0xC9A40C", Offset = "0xC9A40C", VA = "0xC9A40C")]
		public static void UPvr_SetMainHandNess(int hand)
		{
		}

		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0xC9A488", Offset = "0xC9A488", VA = "0xC9A488")]
		public static int UPvr_GetControllerAbility(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0xC9A504", Offset = "0xC9A504", VA = "0xC9A504")]
		public static void UPvr_VibrateNeo2Controller(float strength, int time, int hand)
		{
		}

		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0xC9A5A0", Offset = "0xC9A5A0", VA = "0xC9A5A0")]
		public static int UPvr_GetControllerBindingState(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0xC9A61C", Offset = "0xC9A61C", VA = "0xC9A61C")]
		public static Vector3 UPvr_GetVelocity(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0xC9A698", Offset = "0xC9A698", VA = "0xC9A698")]
		public static Vector3 UPvr_GetAngularVelocity(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0xC9A714", Offset = "0xC9A714", VA = "0xC9A714")]
		public static Vector3 UPvr_GetAcceleration(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0xC9A790", Offset = "0xC9A790", VA = "0xC9A790")]
		public static void UPvr_ScanController()
		{
		}

		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0xC9A804", Offset = "0xC9A804", VA = "0xC9A804")]
		public static void UPvr_StopScanController()
		{
		}

		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0xC9A878", Offset = "0xC9A878", VA = "0xC9A878")]
		public static void UPvr_ConnectController(string mac)
		{
		}

		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0xC9A940", Offset = "0xC9A940", VA = "0xC9A940")]
		public static void UPvr_DisConnectController()
		{
		}

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0xC9A9B4", Offset = "0xC9A9B4", VA = "0xC9A9B4")]
		public static void UPvr_ResetController(int hand)
		{
		}

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0xC9AA30", Offset = "0xC9AA30", VA = "0xC9AA30")]
		public static string UPvr_GetControllerVersion()
		{
			return null;
		}

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0xC9AAA4", Offset = "0xC9AAA4", VA = "0xC9AAA4")]
		public static void UPvr_GetDeviceVersion(int deviceType)
		{
		}

		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0xC9AB20", Offset = "0xC9AB20", VA = "0xC9AB20")]
		public static void UPvr_GetControllerSnCode(int controllerSerialNum)
		{
		}

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0xC9AB9C", Offset = "0xC9AB9C", VA = "0xC9AB9C")]
		public static void UPvr_SetControllerUnbind(int controllerSerialNum)
		{
		}

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0xC9AC18", Offset = "0xC9AC18", VA = "0xC9AC18")]
		public static void UPvr_SetStationRestart()
		{
		}

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0xC9AC8C", Offset = "0xC9AC8C", VA = "0xC9AC8C")]
		public static void UPvr_StartStationOtaUpdate()
		{
		}

		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0xC9AD00", Offset = "0xC9AD00", VA = "0xC9AD00")]
		public static void UPvr_StartControllerOtaUpdate(int mode, int controllerSerialNum)
		{
		}

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0xC9AD8C", Offset = "0xC9AD8C", VA = "0xC9AD8C")]
		public static void UPvr_EnterPairMode(int controllerSerialNum)
		{
		}

		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0xC9AE08", Offset = "0xC9AE08", VA = "0xC9AE08")]
		public static void UPvr_SetControllerShutdown(int controllerSerialNum)
		{
		}

		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0xC9AE84", Offset = "0xC9AE84", VA = "0xC9AE84")]
		public static int UPvr_GetStationPairState()
		{
			return default(int);
		}

		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0xC9AEF8", Offset = "0xC9AEF8", VA = "0xC9AEF8")]
		public static int UPvr_GetStationOtaUpdateProgress()
		{
			return default(int);
		}

		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0xC9AF6C", Offset = "0xC9AF6C", VA = "0xC9AF6C")]
		public static int UPvr_GetControllerOtaUpdateProgress()
		{
			return default(int);
		}

		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0xC9AFE0", Offset = "0xC9AFE0", VA = "0xC9AFE0")]
		public static void UPvr_GetControllerVersionAndSN(int controllerSerialNum)
		{
		}

		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0xC9B05C", Offset = "0xC9B05C", VA = "0xC9B05C")]
		public static void UPvr_GetControllerUniqueID()
		{
		}

		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0x88CDC4", Offset = "0x88CDC4", VA = "0x88CDC4")]
		public void UPvr_InterruptStationPairMode()
		{
		}

		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0x88CDC8", Offset = "0x88CDC8", VA = "0x88CDC8")]
		public void UPvr_StartCV2PairingMode(int deviceType)
		{
		}

		[Token(Token = "0x6000FFC")]
		[Address(RVA = "0x88CDCC", Offset = "0x88CDCC", VA = "0x88CDCC")]
		public void UPvr_StopCV2PairingMode(int deviceType)
		{
		}

		[Token(Token = "0x6000FFD")]
		[Address(RVA = "0xC9B23C", Offset = "0xC9B23C", VA = "0xC9B23C")]
		public static void UPvr_SetArmModelParameters(int hand, int gazeType, float elbowHeight, float elbowDepth, float pointerTiltAngle)
		{
		}

		[Token(Token = "0x6000FFE")]
		[Address(RVA = "0xC9B314", Offset = "0xC9B314", VA = "0xC9B314")]
		public static void UPvr_CalcArmModelParameters(float[] headOrientation, float[] controllerOrientation, float[] controllerPrimary)
		{
		}

		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0xC9B3E4", Offset = "0xC9B3E4", VA = "0xC9B3E4")]
		public static void UPvr_GetPointerPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x6001000")]
		[Address(RVA = "0xC9B4A4", Offset = "0xC9B4A4", VA = "0xC9B4A4")]
		public static void UPvr_GetElbowPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x6001001")]
		[Address(RVA = "0xC9B560", Offset = "0xC9B560", VA = "0xC9B560")]
		public static void UPvr_GetWristPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x6001002")]
		[Address(RVA = "0xC9B61C", Offset = "0xC9B61C", VA = "0xC9B61C")]
		public static void UPvr_GetShoulderPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x6001003")]
		[Address(RVA = "0xC9B6DC", Offset = "0xC9B6DC", VA = "0xC9B6DC")]
		public static void UPvr_IsEnbleHomeKey(bool state)
		{
		}

		[Token(Token = "0x6001004")]
		[Address(RVA = "0xC9B758", Offset = "0xC9B758", VA = "0xC9B758")]
		public static void UPvr_SwitchHomeKey(bool state)
		{
		}

		[Token(Token = "0x6001005")]
		[Address(RVA = "0xC9B7D4", Offset = "0xC9B7D4", VA = "0xC9B7D4")]
		public static int UPvr_GetControllerSensorStatus(int id)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001006")]
		[Address(RVA = "0xC9B318", Offset = "0xC9B318", VA = "0xC9B318")]
		private static extern void Pvr_CalcArmModelParameters(float[] headOrientation, float[] controllerOrientation, float[] gyro);

		[PreserveSig]
		[Token(Token = "0x6001007")]
		[Address(RVA = "0xC9B3E8", Offset = "0xC9B3E8", VA = "0xC9B3E8")]
		private static extern void Pvr_GetPointerPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x6001008")]
		[Address(RVA = "0xC9B4A8", Offset = "0xC9B4A8", VA = "0xC9B4A8")]
		private static extern void Pvr_GetElbowPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x6001009")]
		[Address(RVA = "0xC9B564", Offset = "0xC9B564", VA = "0xC9B564")]
		private static extern void Pvr_GetWristPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x600100A")]
		[Address(RVA = "0xC9B620", Offset = "0xC9B620", VA = "0xC9B620")]
		private static extern void Pvr_GetShoulderPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x600100B")]
		[Address(RVA = "0xC9B240", Offset = "0xC9B240", VA = "0xC9B240")]
		private static extern void Pvr_SetArmModelParameters(int hand, int gazeType, float elbowHeight, float elbowDepth, float pointerTiltAngle);
	}
	[Token(Token = "0x20001B2")]
	public enum ControllerVariety
	{
		[Token(Token = "0x4001792")]
		Controller0,
		[Token(Token = "0x4001793")]
		Controller1
	}
	[Token(Token = "0x20001B3")]
	public enum ControllerDevice
	{
		[Token(Token = "0x4001795")]
		Goblin,
		[Token(Token = "0x4001796")]
		Neo,
		[Token(Token = "0x4001797")]
		G2,
		[Token(Token = "0x4001798")]
		Neo2,
		[Token(Token = "0x4001799")]
		Neo3,
		[Token(Token = "0x400179A")]
		NewController
	}
	[Token(Token = "0x20001B4")]
	public enum PBS_SystemInfoEnum
	{
		[Token(Token = "0x400179C")]
		ELECTRIC_QUANTITY,
		[Token(Token = "0x400179D")]
		PUI_VERSION,
		[Token(Token = "0x400179E")]
		EQUIPMENT_MODEL,
		[Token(Token = "0x400179F")]
		EQUIPMENT_SN,
		[Token(Token = "0x40017A0")]
		CUSTOMER_SN,
		[Token(Token = "0x40017A1")]
		INTERNAL_STORAGE_SPACE_OF_THE_DEVICE,
		[Token(Token = "0x40017A2")]
		DEVICE_BLUETOOTH_STATUS,
		[Token(Token = "0x40017A3")]
		BLUETOOTH_NAME_CONNECTED,
		[Token(Token = "0x40017A4")]
		BLUETOOTH_MAC_ADDRESS,
		[Token(Token = "0x40017A5")]
		DEVICE_WIFI_STATUS,
		[Token(Token = "0x40017A6")]
		WIFI_NAME_CONNECTED,
		[Token(Token = "0x40017A7")]
		WLAN_MAC_ADDRESS,
		[Token(Token = "0x40017A8")]
		DEVICE_IP
	}
	[Token(Token = "0x20001B5")]
	public enum PBS_DeviceControlEnum
	{
		[Token(Token = "0x40017AA")]
		DEVICE_CONTROL_REBOOT,
		[Token(Token = "0x40017AB")]
		DEVICE_CONTROL_SHUTDOWN
	}
	[Token(Token = "0x20001B6")]
	public enum PBS_PackageControlEnum
	{
		[Token(Token = "0x40017AD")]
		PACKAGE_SILENCE_INSTALL,
		[Token(Token = "0x40017AE")]
		PACKAGE_SILENCE_UNINSTALL
	}
	[Token(Token = "0x20001B7")]
	public enum PBS_SwitchEnum
	{
		[Token(Token = "0x40017B0")]
		S_ON,
		[Token(Token = "0x40017B1")]
		S_OFF
	}
	[Token(Token = "0x20001B8")]
	public enum PBS_HomeEventEnum
	{
		[Token(Token = "0x40017B3")]
		SINGLE_CLICK,
		[Token(Token = "0x40017B4")]
		DOUBLE_CLICK,
		[Token(Token = "0x40017B5")]
		LONG_PRESS
	}
	[Token(Token = "0x20001B9")]
	public enum PBS_HomeFunctionEnum
	{
		[Token(Token = "0x40017B7")]
		VALUE_HOME_GO_TO_SETTING,
		[Token(Token = "0x40017B8")]
		VALUE_HOME_BACK,
		[Token(Token = "0x40017B9")]
		VALUE_HOME_RECENTER,
		[Token(Token = "0x40017BA")]
		VALUE_HOME_OPEN_APP,
		[Token(Token = "0x40017BB")]
		VALUE_HOME_DISABLE,
		[Token(Token = "0x40017BC")]
		VALUE_HOME_GO_TO_HOME,
		[Token(Token = "0x40017BD")]
		VALUE_HOME_SEND_BROADCAST,
		[Token(Token = "0x40017BE")]
		VALUE_HOME_CLEAN_MEMORY
	}
	[Token(Token = "0x20001BA")]
	public enum PBS_ScreenOffDelayTimeEnum
	{
		[Token(Token = "0x40017C0")]
		THREE = 3,
		[Token(Token = "0x40017C1")]
		TEN = 10,
		[Token(Token = "0x40017C2")]
		THIRTY = 30,
		[Token(Token = "0x40017C3")]
		SIXTY = 60,
		[Token(Token = "0x40017C4")]
		THREE_HUNDRED = 300,
		[Token(Token = "0x40017C5")]
		SIX_HUNDRED = 600,
		[Token(Token = "0x40017C6")]
		NEVER = -1
	}
	[Token(Token = "0x20001BB")]
	public enum PBS_SleepDelayTimeEnum
	{
		[Token(Token = "0x40017C8")]
		FIFTEEN = 15,
		[Token(Token = "0x40017C9")]
		THIRTY = 30,
		[Token(Token = "0x40017CA")]
		SIXTY = 60,
		[Token(Token = "0x40017CB")]
		THREE_HUNDRED = 300,
		[Token(Token = "0x40017CC")]
		SIX_HUNDRED = 600,
		[Token(Token = "0x40017CD")]
		ONE_THOUSAND_AND_EIGHT_HUNDRED = 1800,
		[Token(Token = "0x40017CE")]
		NEVER = -1
	}
	[Token(Token = "0x20001BC")]
	public enum PBS_SystemFunctionSwitchEnum
	{
		[Token(Token = "0x40017D0")]
		SFS_USB,
		[Token(Token = "0x40017D1")]
		SFS_AUTOSLEEP,
		[Token(Token = "0x40017D2")]
		SFS_SCREENON_CHARGING,
		[Token(Token = "0x40017D3")]
		SFS_OTG_CHARGING,
		[Token(Token = "0x40017D4")]
		SFS_RETURN_MENU_IN_2DMODE,
		[Token(Token = "0x40017D5")]
		SFS_COMBINATION_KEY,
		[Token(Token = "0x40017D6")]
		SFS_CALIBRATION_WITH_POWER_ON,
		[Token(Token = "0x40017D7")]
		SFS_SYSTEM_UPDATE,
		[Token(Token = "0x40017D8")]
		SFS_CAST_SERVICE,
		[Token(Token = "0x40017D9")]
		SFS_EYE_PROTECTION,
		[Token(Token = "0x40017DA")]
		SFS_SECURITY_ZONE_PERMANENTLY,
		[Token(Token = "0x40017DB")]
		SFS_GLOBAL_CALIBRATION,
		[Token(Token = "0x40017DC")]
		SFS_Auto_Calibration,
		[Token(Token = "0x40017DD")]
		SFS_USB_BOOT
	}
	[Token(Token = "0x20001BD")]
	public enum PBS_USBConfigModeEnum
	{
		[Token(Token = "0x40017DF")]
		MTP,
		[Token(Token = "0x40017E0")]
		CHARGE
	}
	[Token(Token = "0x20001BE")]
	public struct ToBService
	{
		[Token(Token = "0x40017E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Action<bool> BoolCallback;

		[Token(Token = "0x40017E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<int> IntCallback;

		[Token(Token = "0x40017E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<long> LongCallback;

		[Token(Token = "0x40017E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static AndroidJavaClass unityPlayer;

		[Token(Token = "0x40017E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static AndroidJavaObject currentActivity;

		[Token(Token = "0x40017E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static AndroidJavaObject tobHelper;

		[Token(Token = "0x40017E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static AndroidJavaClass tobHelperClass;

		[Token(Token = "0x600100C")]
		[Address(RVA = "0xEC7AE0", Offset = "0xEC7AE0", VA = "0xEC7AE0")]
		public static void UPvr_InitToBService()
		{
		}

		[Token(Token = "0x600100D")]
		[Address(RVA = "0xEC7C94", Offset = "0xEC7C94", VA = "0xEC7C94")]
		public static void UPvr_SetUnityObjectName(string obj)
		{
		}

		[Token(Token = "0x600100E")]
		[Address(RVA = "0xEC7D64", Offset = "0xEC7D64", VA = "0xEC7D64")]
		public static void UPvr_BindToBService()
		{
		}

		[Token(Token = "0x600100F")]
		[Address(RVA = "0xEC7E3C", Offset = "0xEC7E3C", VA = "0xEC7E3C")]
		public static void UPvr_UnBindToBService()
		{
		}

		[Token(Token = "0x6001010")]
		[Address(RVA = "0xEC7F14", Offset = "0xEC7F14", VA = "0xEC7F14")]
		private static AndroidJavaObject GetEnumType(Enum enumType)
		{
			return null;
		}

		[Token(Token = "0x6001011")]
		[Address(RVA = "0xEC8014", Offset = "0xEC8014", VA = "0xEC8014")]
		public static string UPvr_StateGetDeviceInfo(PBS_SystemInfoEnum type)
		{
			return null;
		}

		[Token(Token = "0x6001012")]
		[Address(RVA = "0xEC8174", Offset = "0xEC8174", VA = "0xEC8174")]
		public static void UPvr_ControlSetDeviceAction(PBS_DeviceControlEnum deviceControl, Action<int> callback)
		{
		}

		[Token(Token = "0x6001013")]
		[Address(RVA = "0xEC827C", Offset = "0xEC827C", VA = "0xEC827C")]
		public static void UPvr_ControlAPPManger(PBS_PackageControlEnum packageControl, string path, Action<int> callback)
		{
		}

		[Token(Token = "0x6001014")]
		[Address(RVA = "0xEC83FC", Offset = "0xEC83FC", VA = "0xEC83FC")]
		public static void UPvr_ControlSetAutoConnectWIFI(string ssid, string pwd, Action<bool> callback)
		{
		}

		[Token(Token = "0x6001015")]
		[Address(RVA = "0xEC8564", Offset = "0xEC8564", VA = "0xEC8564")]
		public static void UPvr_ControlClearAutoConnectWIFI(Action<bool> callback)
		{
		}

		[Token(Token = "0x6001016")]
		[Address(RVA = "0xEC85E4", Offset = "0xEC85E4", VA = "0xEC85E4")]
		public static void UPvr_PropertySetHomeKey(PBS_HomeEventEnum eventEnum, PBS_HomeFunctionEnum function, Action<bool> callback)
		{
		}

		[Token(Token = "0x6001017")]
		[Address(RVA = "0xEC874C", Offset = "0xEC874C", VA = "0xEC874C")]
		public static void UPvr_PropertySetHomeKeyAll(PBS_HomeEventEnum eventEnum, PBS_HomeFunctionEnum function, int timesetup, string pkg, string className, Action<bool> callback)
		{
		}

		[Token(Token = "0x6001018")]
		[Address(RVA = "0xEC8964", Offset = "0xEC8964", VA = "0xEC8964")]
		public static void UPvr_PropertyDisablePowerKey(bool isSingleTap, bool enable, Action<int> callback)
		{
		}

		[Token(Token = "0x6001019")]
		[Address(RVA = "0xEC8AB4", Offset = "0xEC8AB4", VA = "0xEC8AB4")]
		public static void UPvr_PropertySetScreenOffDelay(PBS_ScreenOffDelayTimeEnum timeEnum, Action<int> callback)
		{
		}

		[Token(Token = "0x600101A")]
		[Address(RVA = "0xEC8BBC", Offset = "0xEC8BBC", VA = "0xEC8BBC")]
		public static void UPvr_PropertySetSleepDelay(PBS_SleepDelayTimeEnum timeEnum)
		{
		}

		[Token(Token = "0x600101B")]
		[Address(RVA = "0xEC8CB4", Offset = "0xEC8CB4", VA = "0xEC8CB4")]
		public static void UPvr_SwitchSystemFunction(PBS_SystemFunctionSwitchEnum systemFunction, PBS_SwitchEnum switchEnum)
		{
		}

		[Token(Token = "0x600101C")]
		[Address(RVA = "0xEC8E44", Offset = "0xEC8E44", VA = "0xEC8E44")]
		public static void UPvr_SwitchSetUsbConfigurationOption(PBS_USBConfigModeEnum uSBConfigModeEnum)
		{
		}

		[Token(Token = "0x600101D")]
		[Address(RVA = "0xEC8F80", Offset = "0xEC8F80", VA = "0xEC8F80")]
		public static void UPvr_ScreenOn()
		{
		}

		[Token(Token = "0x600101E")]
		[Address(RVA = "0xEC9078", Offset = "0xEC9078", VA = "0xEC9078")]
		public static void UPvr_ScreenOff()
		{
		}

		[Token(Token = "0x600101F")]
		[Address(RVA = "0xEC9170", Offset = "0xEC9170", VA = "0xEC9170")]
		public static void UPvr_AcquireWakeLock()
		{
		}

		[Token(Token = "0x6001020")]
		[Address(RVA = "0xEC9268", Offset = "0xEC9268", VA = "0xEC9268")]
		public static void UPvr_ReleaseWakeLock()
		{
		}

		[Token(Token = "0x6001021")]
		[Address(RVA = "0xEC9360", Offset = "0xEC9360", VA = "0xEC9360")]
		public static void UPvr_EnableEnterKey()
		{
		}

		[Token(Token = "0x6001022")]
		[Address(RVA = "0xEC9458", Offset = "0xEC9458", VA = "0xEC9458")]
		public static void UPvr_DisableEnterKey()
		{
		}

		[Token(Token = "0x6001023")]
		[Address(RVA = "0xEC9550", Offset = "0xEC9550", VA = "0xEC9550")]
		public static void UPvr_EnableVolumeKey()
		{
		}

		[Token(Token = "0x6001024")]
		[Address(RVA = "0xEC9648", Offset = "0xEC9648", VA = "0xEC9648")]
		public static void UPvr_DisableVolumeKey()
		{
		}

		[Token(Token = "0x6001025")]
		[Address(RVA = "0xEC9740", Offset = "0xEC9740", VA = "0xEC9740")]
		public static void UPvr_EnableBackKey()
		{
		}

		[Token(Token = "0x6001026")]
		[Address(RVA = "0xEC9838", Offset = "0xEC9838", VA = "0xEC9838")]
		public static void UPvr_DisableBackKey()
		{
		}

		[Token(Token = "0x6001027")]
		[Address(RVA = "0xEC9930", Offset = "0xEC9930", VA = "0xEC9930")]
		public static void UPvr_WriteConfigFileToDataLocal(string path, string content, Action<bool> callback)
		{
		}

		[Token(Token = "0x6001028")]
		[Address(RVA = "0xEC9A48", Offset = "0xEC9A48", VA = "0xEC9A48")]
		public static void UPvr_ResetAllKeyToDefault(Action<bool> callback)
		{
		}
	}
	[Token(Token = "0x20001BF")]
	public enum GlobalIntConfigs
	{
		[Token(Token = "0x40017E9")]
		EYE_TEXTURE_RESOLUTION0,
		[Token(Token = "0x40017EA")]
		EYE_TEXTURE_RESOLUTION1,
		[Token(Token = "0x40017EB")]
		SEENSOR_COUNT,
		[Token(Token = "0x40017EC")]
		ABILITY6DOF,
		[Token(Token = "0x40017ED")]
		PLATFORM_TYPE,
		[Token(Token = "0x40017EE")]
		TRACKING_MODE,
		[Token(Token = "0x40017EF")]
		LOG_LEVEL,
		[Token(Token = "0x40017F0")]
		ENBLE_HAND6DOF_BY_HEAD,
		[Token(Token = "0x40017F1")]
		ENBLE_6DOF_GLOBAL_TRACKING,
		[Token(Token = "0x40017F2")]
		TARGET_FRAME_RATE,
		[Token(Token = "0x40017F3")]
		iShowFPS,
		[Token(Token = "0x40017F4")]
		SensorMode,
		[Token(Token = "0x40017F5")]
		LOGICFLOW,
		[Token(Token = "0x40017F6")]
		EYE_TEXTURE_RES_HIGH,
		[Token(Token = "0x40017F7")]
		EYE_TEXTURE_RES_NORMAL,
		[Token(Token = "0x40017F8")]
		iCtrlModelLoadingPri,
		[Token(Token = "0x40017F9")]
		iPhoneHMDModeEnabled,
		[Token(Token = "0x40017FA")]
		isEnableBoundary,
		[Token(Token = "0x40017FB")]
		Enable_Activity_Rotation,
		[Token(Token = "0x40017FC")]
		GetDisplay_Orientation,
		[Token(Token = "0x40017FD")]
		GetWaitFrameNum,
		[Token(Token = "0x40017FE")]
		GetResetFrameNum,
		[Token(Token = "0x40017FF")]
		EnableFFRBYSYS,
		[Token(Token = "0x4001800")]
		RotControllerMode
	}
	[Token(Token = "0x20001C0")]
	public enum GlobalFloatConfigs
	{
		[Token(Token = "0x4001802")]
		IPD,
		[Token(Token = "0x4001803")]
		VFOV,
		[Token(Token = "0x4001804")]
		HFOV,
		[Token(Token = "0x4001805")]
		NECK_MODEL_X,
		[Token(Token = "0x4001806")]
		NECK_MODEL_Y,
		[Token(Token = "0x4001807")]
		NECK_MODEL_Z,
		[Token(Token = "0x4001808")]
		DISPLAY_REFRESH_RATE
	}
	[Token(Token = "0x20001C1")]
	public enum RenderTextureAntiAliasing
	{
		[Token(Token = "0x400180A")]
		X_1 = 1,
		[Token(Token = "0x400180B")]
		X_2 = 2,
		[Token(Token = "0x400180C")]
		X_4 = 4,
		[Token(Token = "0x400180D")]
		X_8 = 8
	}
	[Token(Token = "0x20001C2")]
	public enum PlatForm
	{
		[Token(Token = "0x400180F")]
		Android = 1,
		[Token(Token = "0x4001810")]
		IOS,
		[Token(Token = "0x4001811")]
		Win,
		[Token(Token = "0x4001812")]
		Notsupport
	}
	[Token(Token = "0x20001C3")]
	public enum RenderTextureDepth
	{
		[Token(Token = "0x4001814")]
		BD_0 = 0,
		[Token(Token = "0x4001815")]
		BD_16 = 16,
		[Token(Token = "0x4001816")]
		BD_24 = 24
	}
	[Token(Token = "0x20001C4")]
	public enum RenderTextureLevel
	{
		[Token(Token = "0x4001818")]
		Normal,
		[Token(Token = "0x4001819")]
		High
	}
	[Token(Token = "0x20001C5")]
	public enum Sensorindex
	{
		[Token(Token = "0x400181B")]
		Default,
		[Token(Token = "0x400181C")]
		FirstSensor,
		[Token(Token = "0x400181D")]
		SecondSensor
	}
	[Token(Token = "0x20001C6")]
	public enum Eye
	{
		[Token(Token = "0x400181F")]
		LeftEye,
		[Token(Token = "0x4001820")]
		RightEye,
		[Token(Token = "0x4001821")]
		BothEye
	}
	[Token(Token = "0x20001C7")]
	public enum ResUtilsType
	{
		[Token(Token = "0x4001823")]
		TYPE_TEXTSIZE,
		[Token(Token = "0x4001824")]
		TYPE_COLOR,
		[Token(Token = "0x4001825")]
		TYPE_TEXT,
		[Token(Token = "0x4001826")]
		TYPE_FONT,
		[Token(Token = "0x4001827")]
		TYPE_VALUE,
		[Token(Token = "0x4001828")]
		TYPE_DRAWABLE,
		[Token(Token = "0x4001829")]
		TYPE_OBJECT,
		[Token(Token = "0x400182A")]
		TYPR_OBJECTARRAY
	}
	[Token(Token = "0x20001C8")]
	public enum TrackingOrigin
	{
		[Token(Token = "0x400182C")]
		EyeLevel,
		[Token(Token = "0x400182D")]
		FloorLevel,
		[Token(Token = "0x400182E")]
		StageLevel
	}
	[Token(Token = "0x20001C9")]
	public enum EFoveationLevel
	{
		[Token(Token = "0x4001830")]
		Low,
		[Token(Token = "0x4001831")]
		Med,
		[Token(Token = "0x4001832")]
		High,
		[Token(Token = "0x4001833")]
		Top_High
	}
	[Token(Token = "0x20001CA")]
	public enum StereoRenderingPathPico
	{
		[Token(Token = "0x4001835")]
		MultiPass,
		[Token(Token = "0x4001836")]
		SinglePass
	}
	[Token(Token = "0x20001CB")]
	public enum pvrEyePoseStatus
	{
		[Token(Token = "0x4001838")]
		kGazePointValid = 1,
		[Token(Token = "0x4001839")]
		kGazeVectorValid = 2,
		[Token(Token = "0x400183A")]
		kEyeOpennessValid = 4,
		[Token(Token = "0x400183B")]
		kEyePupilDilationValid = 8,
		[Token(Token = "0x400183C")]
		kEyePositionGuideValid = 0x10
	}
	[Token(Token = "0x20001CC")]
	public enum TrackingMode
	{
		[Token(Token = "0x400183E")]
		PVR_TRACKING_MODE_ROTATION = 1,
		[Token(Token = "0x400183F")]
		PVR_TRACKING_MODE_POSITION = 2,
		[Token(Token = "0x4001840")]
		PVR_TRACKING_MODE_EYE = 4
	}
	[Token(Token = "0x20001CD")]
	public struct EyeTrackingData
	{
		[Token(Token = "0x4001841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int leftEyePoseStatus;

		[Token(Token = "0x4001842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int rightEyePoseStatus;

		[Token(Token = "0x4001843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int combinedEyePoseStatus;

		[Token(Token = "0x4001844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 leftEyeGazePoint;

		[Token(Token = "0x4001845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 rightEyeGazePoint;

		[Token(Token = "0x4001846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 combinedEyeGazePoint;

		[Token(Token = "0x4001847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 leftEyeGazeVector;

		[Token(Token = "0x4001848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 rightEyeGazeVector;

		[Token(Token = "0x4001849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 combinedEyeGazeVector;

		[Token(Token = "0x400184A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float leftEyeOpenness;

		[Token(Token = "0x400184B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float rightEyeOpenness;

		[Token(Token = "0x400184C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float leftEyePupilDilation;

		[Token(Token = "0x400184D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float rightEyePupilDilation;

		[Token(Token = "0x400184E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Vector3 leftEyePositionGuide;

		[Token(Token = "0x400184F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Vector3 rightEyePositionGuide;

		[Token(Token = "0x4001850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Vector3 foveatedGazeDirection;

		[Token(Token = "0x4001851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int foveatedGazeTrackingState;

		[Token(Token = "0x4001852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public byte[] reserved;
	}
	[Token(Token = "0x20001CE")]
	public struct EyeTrackingGazeRay
	{
		[Token(Token = "0x4001853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 Direction;

		[Token(Token = "0x4001854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool IsValid;

		[Token(Token = "0x4001855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Origin;
	}
	[Token(Token = "0x20001CF")]
	public struct EyeDeviceInfo
	{
		[Token(Token = "0x4001856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ViewFrustum targetFrustumLeft;

		[Token(Token = "0x4001857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ViewFrustum targetFrustumRight;
	}
	[Token(Token = "0x20001D0")]
	public struct ViewFrustum
	{
		[Token(Token = "0x4001858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float left;

		[Token(Token = "0x4001859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float right;

		[Token(Token = "0x400185A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float top;

		[Token(Token = "0x400185B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float bottom;

		[Token(Token = "0x400185C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float near;

		[Token(Token = "0x400185D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float far;
	}
	[Token(Token = "0x20001D1")]
	public struct EyeSetting
	{
		[Token(Token = "0x400185E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform eyelocalPosition;

		[Token(Token = "0x400185F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Rect eyeRect;

		[Token(Token = "0x4001860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float eyeFov;

		[Token(Token = "0x4001861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float eyeAspect;

		[Token(Token = "0x4001862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Matrix4x4 eyeProjectionMatrix;

		[Token(Token = "0x4001863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Shader eyeShader;
	}
	[Token(Token = "0x20001D2")]
	public struct Sensor
	{
		[Token(Token = "0x4001864")]
		public const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x6001029")]
		[Address(RVA = "0xC9E594", Offset = "0xC9E594", VA = "0xC9E594")]
		private static extern int Pvr_Enable6DofModule(bool enable);

		[PreserveSig]
		[Token(Token = "0x600102A")]
		[Address(RVA = "0xC9E630", Offset = "0xC9E630", VA = "0xC9E630")]
		private static extern int Pvr_OptionalResetSensor(int index, int resetRot, int resetPos);

		[PreserveSig]
		[Token(Token = "0x600102B")]
		[Address(RVA = "0xC9E6E0", Offset = "0xC9E6E0", VA = "0xC9E6E0")]
		private static extern int Pvr_Init(int index);

		[PreserveSig]
		[Token(Token = "0x600102C")]
		[Address(RVA = "0xC9E77C", Offset = "0xC9E77C", VA = "0xC9E77C")]
		private static extern int Pvr_StartSensor(int index);

		[PreserveSig]
		[Token(Token = "0x600102D")]
		[Address(RVA = "0xC9E818", Offset = "0xC9E818", VA = "0xC9E818")]
		private static extern int Pvr_StopSensor(int index);

		[PreserveSig]
		[Token(Token = "0x600102E")]
		[Address(RVA = "0xC9E8B4", Offset = "0xC9E8B4", VA = "0xC9E8B4")]
		private static extern int Pvr_ResetSensor(int index);

		[PreserveSig]
		[Token(Token = "0x600102F")]
		[Address(RVA = "0xC9E950", Offset = "0xC9E950", VA = "0xC9E950")]
		private static extern int Pvr_ResetSensorAll(int index);

		[PreserveSig]
		[Token(Token = "0x6001030")]
		[Address(RVA = "0xC9E9EC", Offset = "0xC9E9EC", VA = "0xC9E9EC")]
		private static extern int Pvr_GetSensorState(int index, ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz);

		[PreserveSig]
		[Token(Token = "0x6001031")]
		[Address(RVA = "0xC9EAE0", Offset = "0xC9EAE0", VA = "0xC9EAE0")]
		private static extern int Pvr_GetMainSensorState(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber);

		[PreserveSig]
		[Token(Token = "0x6001032")]
		[Address(RVA = "0xC9EBDC", Offset = "0xC9EBDC", VA = "0xC9EBDC")]
		private static extern int Pvr_GetPsensorState();

		[PreserveSig]
		[Token(Token = "0x6001033")]
		[Address(RVA = "0xC9EC68", Offset = "0xC9EC68", VA = "0xC9EC68")]
		private static extern int Pvr_GetHmdPSensorStatus();

		[PreserveSig]
		[Token(Token = "0x6001034")]
		[Address(RVA = "0xC9ECF4", Offset = "0xC9ECF4", VA = "0xC9ECF4")]
		private static extern int Pvr_GetSensorGyroscope(int index, ref float x, ref float y, ref float z);

		[PreserveSig]
		[Token(Token = "0x6001035")]
		[Address(RVA = "0xC9EDB8", Offset = "0xC9EDB8", VA = "0xC9EDB8")]
		private static extern int Pvr_GetSensorMagnet(int index, ref float x, ref float y, ref float z);

		[PreserveSig]
		[Token(Token = "0x6001036")]
		[Address(RVA = "0xC9EE7C", Offset = "0xC9EE7C", VA = "0xC9EE7C")]
		private static extern int Pvr_Get6DofSensorQualityStatus();

		[PreserveSig]
		[Token(Token = "0x6001037")]
		[Address(RVA = "0xC9EF08", Offset = "0xC9EF08", VA = "0xC9EF08")]
		private static extern bool Pvr_Get6DofSafePanelFlag();

		[PreserveSig]
		[Token(Token = "0x6001038")]
		[Address(RVA = "0xC9EF9C", Offset = "0xC9EF9C", VA = "0xC9EF9C")]
		private static extern void Pvr_SetReinPosition(float x, float y, float z, float w, float px, float py, float pz, int hand, bool valid, int key);

		[PreserveSig]
		[Token(Token = "0x6001039")]
		[Address(RVA = "0xC9F0A8", Offset = "0xC9F0A8", VA = "0xC9F0A8")]
		private static extern bool Pvr_SetTrackingOriginType(TrackingOrigin trackingOriginType);

		[Token(Token = "0x600103A")]
		[Address(RVA = "0xC9F14C", Offset = "0xC9F14C", VA = "0xC9F14C")]
		public static bool UPvr_Pvr_Get6DofSafePanelFlag()
		{
			return default(bool);
		}

		[Token(Token = "0x600103B")]
		[Address(RVA = "0xC9F150", Offset = "0xC9F150", VA = "0xC9F150")]
		public static int UPvr_Init(int index)
		{
			return default(int);
		}

		[Token(Token = "0x600103C")]
		[Address(RVA = "0xC9F154", Offset = "0xC9F154", VA = "0xC9F154")]
		public static void UPvr_InitPsensor()
		{
		}

		[Token(Token = "0x600103D")]
		[Address(RVA = "0xC9F350", Offset = "0xC9F350", VA = "0xC9F350")]
		public static int UPvr_GetPsensorState()
		{
			return default(int);
		}

		[Token(Token = "0x600103E")]
		[Address(RVA = "0xC9F5B4", Offset = "0xC9F5B4", VA = "0xC9F5B4")]
		public static int UPvr_GetPSensorStatus()
		{
			return default(int);
		}

		[Token(Token = "0x600103F")]
		[Address(RVA = "0xC9F5B8", Offset = "0xC9F5B8", VA = "0xC9F5B8")]
		public static void UPvr_UnregisterPsensor()
		{
		}

		[Token(Token = "0x6001040")]
		[Address(RVA = "0xC9F7B8", Offset = "0xC9F7B8", VA = "0xC9F7B8")]
		public static int UPvr_StartSensor(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6001041")]
		[Address(RVA = "0xC9F7BC", Offset = "0xC9F7BC", VA = "0xC9F7BC")]
		public static int UPvr_StopSensor(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6001042")]
		[Address(RVA = "0xC9F7C0", Offset = "0xC9F7C0", VA = "0xC9F7C0")]
		public static int UPvr_ResetSensor(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6001043")]
		[Address(RVA = "0xC9F83C", Offset = "0xC9F83C", VA = "0xC9F83C")]
		public static int UPvr_OptionalResetSensor(int index, int resetRot, int resetPos)
		{
			return default(int);
		}

		[Token(Token = "0x6001044")]
		[Address(RVA = "0xC9F840", Offset = "0xC9F840", VA = "0xC9F840")]
		public static int UPvr_GetSensorState(int index, ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz)
		{
			return default(int);
		}

		[Token(Token = "0x6001045")]
		[Address(RVA = "0xC9F844", Offset = "0xC9F844", VA = "0xC9F844")]
		public static int UPvr_GetMainSensorState(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber)
		{
			return default(int);
		}

		[Token(Token = "0x6001046")]
		[Address(RVA = "0xC9F850", Offset = "0xC9F850", VA = "0xC9F850")]
		public static int UPvr_GetSensorGyroscope(int index, ref float x, ref float y, ref float z)
		{
			return default(int);
		}

		[Token(Token = "0x6001047")]
		[Address(RVA = "0xC9F854", Offset = "0xC9F854", VA = "0xC9F854")]
		public static int UPvr_GetSensorMagnet(int index, ref float x, ref float y, ref float z)
		{
			return default(int);
		}

		[Token(Token = "0x6001048")]
		[Address(RVA = "0xC9F858", Offset = "0xC9F858", VA = "0xC9F858")]
		public static int UPvr_Get6DofSensorQualityStatus()
		{
			return default(int);
		}

		[Token(Token = "0x6001049")]
		[Address(RVA = "0xC9F85C", Offset = "0xC9F85C", VA = "0xC9F85C")]
		public static int UPvr_Enable6DofModule(bool enable)
		{
			return default(int);
		}

		[Token(Token = "0x600104A")]
		[Address(RVA = "0xC9F158", Offset = "0xC9F158", VA = "0xC9F158")]
		public static void Pvr_InitPsensor()
		{
		}

		[Token(Token = "0x600104B")]
		[Address(RVA = "0xC9FA78", Offset = "0xC9FA78", VA = "0xC9FA78")]
		public static bool Pvr_IsHead6dofReset()
		{
			return default(bool);
		}

		[Token(Token = "0x600104C")]
		[Address(RVA = "0xC9F3A4", Offset = "0xC9F3A4", VA = "0xC9F3A4")]
		public static int Pvr_GetAndroidPsensorState()
		{
			return default(int);
		}

		[Token(Token = "0x600104D")]
		[Address(RVA = "0xC9F5BC", Offset = "0xC9F5BC", VA = "0xC9F5BC")]
		public static void Pvr_UnregisterPsensor()
		{
		}

		[Token(Token = "0x600104E")]
		[Address(RVA = "0xC9FCAC", Offset = "0xC9FCAC", VA = "0xC9FCAC")]
		public static int UPvr_ResetSensorAll(int index)
		{
			return default(int);
		}

		[Token(Token = "0x600104F")]
		[Address(RVA = "0xC9FCB0", Offset = "0xC9FCB0", VA = "0xC9FCB0")]
		public static void UPvr_SetReinPosition(float x, float y, float z, float w, float px, float py, float pz, int hand, bool valid, int key)
		{
		}

		[Token(Token = "0x6001050")]
		[Address(RVA = "0xCA00BC", Offset = "0xCA00BC", VA = "0xCA00BC")]
		public static bool UPvr_SetTrackingOriginType(TrackingOrigin trackingOriginType)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001D3")]
	public struct Render
	{
		[Token(Token = "0x4001865")]
		public const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x6001051")]
		[Address(RVA = "0xC9CAE0", Offset = "0xC9CAE0", VA = "0xC9CAE0")]
		private static extern void Pvr_ChangeScreenParameters(string model, int width, int height, double xppi, double yppi, double densityDpi);

		[PreserveSig]
		[Token(Token = "0x6001052")]
		[Address(RVA = "0xC9CBCC", Offset = "0xC9CBCC", VA = "0xC9CBCC")]
		private static extern int Pvr_SetRatio(float midH, float midV);

		[PreserveSig]
		[Token(Token = "0x6001053")]
		[Address(RVA = "0xC9CC70", Offset = "0xC9CC70", VA = "0xC9CC70")]
		private static extern int Pvr_SetPupillaryPoint(bool enable);

		[PreserveSig]
		[Token(Token = "0x6001054")]
		[Address(RVA = "0xC9CD0C", Offset = "0xC9CD0C", VA = "0xC9CD0C")]
		private static extern IntPtr Pvr_GetSupportHMDTypes();

		[PreserveSig]
		[Token(Token = "0x6001055")]
		[Address(RVA = "0xC9CD98", Offset = "0xC9CD98", VA = "0xC9CD98")]
		private static extern void Pvr_SetCurrentHMDType(string type);

		[PreserveSig]
		[Token(Token = "0x6001056")]
		[Address(RVA = "0xC9CE44", Offset = "0xC9CE44", VA = "0xC9CE44")]
		private static extern int Pvr_GetIntConfig(int configsenum, ref int res);

		[PreserveSig]
		[Token(Token = "0x6001057")]
		[Address(RVA = "0xC9CEEC", Offset = "0xC9CEEC", VA = "0xC9CEEC")]
		private static extern int Pvr_GetFloatConfig(int configsenum, ref float res);

		[PreserveSig]
		[Token(Token = "0x6001058")]
		[Address(RVA = "0xC9CF94", Offset = "0xC9CF94", VA = "0xC9CF94")]
		private static extern void Pvr_SetupLayerData(int layerIndex, int sideMask, int textureId, int textureType, int layerFlags, float[] colorScaleAndOffset);

		[PreserveSig]
		[Token(Token = "0x6001059")]
		[Address(RVA = "0xC9D078", Offset = "0xC9D078", VA = "0xC9D078")]
		private static extern void Pvr_SetupLayerCoords(int layerIndex, int sideMask, float[] lowerLeft, float[] lowerRight, float[] upperLeft, float[] upperRight);

		[PreserveSig]
		[Token(Token = "0x600105A")]
		[Address(RVA = "0xC9D174", Offset = "0xC9D174", VA = "0xC9D174")]
		private static extern void Pvr_SetOverlayModelViewMatrix(int overlayType, int overlayShape, int texId, int eyeSide, int layerIndex, bool isHeadLocked, int layerFlags, float[] mvMatrix, float[] modelS, float[] modelR, float[] modelT, float[] cameraR, float[] cameraT, float[] colorScaleAndOffset);

		[PreserveSig]
		[Token(Token = "0x600105B")]
		[Address(RVA = "0xC9D2D0", Offset = "0xC9D2D0", VA = "0xC9D2D0")]
		private static extern bool Pvr_EnableFoveation(bool enable);

		[PreserveSig]
		[Token(Token = "0x600105C")]
		[Address(RVA = "0xC9D374", Offset = "0xC9D374", VA = "0xC9D374")]
		private static extern void Pvr_SetFoveationParameters(int textureId, int previousId, float focalPointX, float focalPointY, float foveationGainX, float foveationGainY, float foveationArea, float foveationMinimum);

		[PreserveSig]
		[Token(Token = "0x600105D")]
		[Address(RVA = "0xC9D468", Offset = "0xC9D468", VA = "0xC9D468")]
		private static extern void Pvr_SetFoveationResource(int textureId, int previousId, float focalPointX, float focalPointY);

		[PreserveSig]
		[Token(Token = "0x600105E")]
		[Address(RVA = "0xC9D52C", Offset = "0xC9D52C", VA = "0xC9D52C")]
		private static extern void Pvr_SetFoveationParameters2(float foveationGainX, float foveationGainY, float foveationArea, float foveationMinimum);

		[PreserveSig]
		[Token(Token = "0x600105F")]
		[Address(RVA = "0xC9D5EC", Offset = "0xC9D5EC", VA = "0xC9D5EC")]
		private static extern void Pvr_SetFoveationLevel(EFoveationLevel level);

		[PreserveSig]
		[Token(Token = "0x6001060")]
		[Address(RVA = "0xC9D688", Offset = "0xC9D688", VA = "0xC9D688")]
		private static extern EFoveationLevel Pvr_GetFoveationLevel();

		[PreserveSig]
		[Token(Token = "0x6001061")]
		[Address(RVA = "0xC9D714", Offset = "0xC9D714", VA = "0xC9D714")]
		private static extern bool Pvr_GetIntSysProc(string property, ref int res);

		[PreserveSig]
		[Token(Token = "0x6001062")]
		[Address(RVA = "0xC9D7DC", Offset = "0xC9D7DC", VA = "0xC9D7DC")]
		private static extern void Pvr_SetColorspaceType(int colorspaceType);

		[PreserveSig]
		[Token(Token = "0x6001063")]
		[Address(RVA = "0xC9D878", Offset = "0xC9D878", VA = "0xC9D878")]
		private static extern void Pvr_SetCastingColorspaceType(int colorspaceType);

		[PreserveSig]
		[Token(Token = "0x6001064")]
		[Address(RVA = "0xC9D914", Offset = "0xC9D914", VA = "0xC9D914")]
		private static extern IntPtr Pvr_CreateLayerAndroidSurface(int layerType, int layerIndex);

		[PreserveSig]
		[Token(Token = "0x6001065")]
		[Address(RVA = "0xC9D9C0", Offset = "0xC9D9C0", VA = "0xC9D9C0")]
		private static extern IntPtr Pvr_GetLayerAndroidSurface(int layerType, int layerIndex);

		[PreserveSig]
		[Token(Token = "0x6001066")]
		[Address(RVA = "0xC9DA6C", Offset = "0xC9DA6C", VA = "0xC9DA6C")]
		private static extern void Pvr_SetMonoMode(bool openMono);

		[PreserveSig]
		[Token(Token = "0x6001067")]
		[Address(RVA = "0xC9DB08", Offset = "0xC9DB08", VA = "0xC9DB08")]
		private static extern void Pvr_GetStencilMesh(int eye, ref int vertexCount, ref int triangleCount, ref IntPtr vertexData, ref IntPtr indexData);

		[Token(Token = "0x6001068")]
		[Address(RVA = "0xC9DBD4", Offset = "0xC9DBD4", VA = "0xC9DBD4")]
		public static void UPvr_ChangeScreenParameters(string model, int width, int height, double xppi, double yppi, double densityDpi)
		{
		}

		[Token(Token = "0x6001069")]
		[Address(RVA = "0xC9DBD8", Offset = "0xC9DBD8", VA = "0xC9DBD8")]
		public static int UPvr_SetRatio(float midH, float midV)
		{
			return default(int);
		}

		[Token(Token = "0x600106A")]
		[Address(RVA = "0xC9DBDC", Offset = "0xC9DBDC", VA = "0xC9DBDC")]
		public static void UPvr_EnableFoveation(bool enable)
		{
		}

		[Token(Token = "0x600106B")]
		[Address(RVA = "0xC9DC90", Offset = "0xC9DC90", VA = "0xC9DC90")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x804B08", Offset = "0x804B08")]
		public static void UPvr_SetFoveationParameters(int textureId, int previousId, float focalPointX, float focalPointY, float foveationGainX, float foveationGainY, float foveationArea, float foveationMinimum)
		{
		}

		[Token(Token = "0x600106C")]
		[Address(RVA = "0xC9DC94", Offset = "0xC9DC94", VA = "0xC9DC94")]
		public static void UPvr_SetFoveationResource(int textureId, int previousId, float focalPointX, float focalPointY)
		{
		}

		[Token(Token = "0x600106D")]
		[Address(RVA = "0xC9DC98", Offset = "0xC9DC98", VA = "0xC9DC98")]
		public static void SetFoveatedRenderingLevel(EFoveationLevel level)
		{
		}

		[Token(Token = "0x600106E")]
		[Address(RVA = "0xC9DD9C", Offset = "0xC9DD9C", VA = "0xC9DD9C")]
		public static EFoveationLevel GetFoveatedRenderingLevel()
		{
			return default(EFoveationLevel);
		}

		[Token(Token = "0x600106F")]
		[Address(RVA = "0xC9DDA0", Offset = "0xC9DDA0", VA = "0xC9DDA0")]
		public static void SetFoveatedRenderingParameters(Vector2 ffrGainValue, float ffrAreaValue, float ffrMinimumValue)
		{
		}

		[Token(Token = "0x6001070")]
		[Address(RVA = "0xC9DEDC", Offset = "0xC9DEDC", VA = "0xC9DEDC")]
		public static bool UPvr_GetIntSysProc(string property, ref int res)
		{
			return default(bool);
		}

		[Token(Token = "0x6001071")]
		[Address(RVA = "0xC9DEE0", Offset = "0xC9DEE0", VA = "0xC9DEE0")]
		public static int UPvr_GetIntConfig(int configsenum, ref int res)
		{
			return default(int);
		}

		[Token(Token = "0x6001072")]
		[Address(RVA = "0xC9DEE4", Offset = "0xC9DEE4", VA = "0xC9DEE4")]
		public static int UPvr_GetFloatConfig(int configsenum, ref float res)
		{
			return default(int);
		}

		[Token(Token = "0x6001073")]
		[Address(RVA = "0xC9DEE8", Offset = "0xC9DEE8", VA = "0xC9DEE8")]
		public static string UPvr_GetSupportHMDTypes()
		{
			return null;
		}

		[Token(Token = "0x6001074")]
		[Address(RVA = "0xC9DF74", Offset = "0xC9DF74", VA = "0xC9DF74")]
		public static void UPvr_SetCurrentHMDType(string type)
		{
		}

		[Token(Token = "0x6001075")]
		[Address(RVA = "0xC9DF78", Offset = "0xC9DF78", VA = "0xC9DF78")]
		public static void UPvr_SetupLayerData(int layerIndex, int sideMask, int textureId, int textureType, int layerFlags, Vector4 colorScale, Vector4 colorOffset)
		{
		}

		[Token(Token = "0x6001076")]
		[Address(RVA = "0xC9E0C0", Offset = "0xC9E0C0", VA = "0xC9E0C0")]
		public static void UPvr_SetupLayerCoords(int layerIndex, int sideMask, float[] lowerLeft, float[] lowerRight, float[] upperLeft, float[] upperRight)
		{
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0xC9E0C4", Offset = "0xC9E0C4", VA = "0xC9E0C4")]
		public static void UPvr_SetOverlayModelViewMatrix(int overlayType, int overlayShape, int texId, int eyeSide, int layerIndex, bool isHeadLocked, int layerFlags, Matrix4x4 mvMatrix, Vector3 modelS, Quaternion modelR, Vector3 modelT, Quaternion cameraR, Vector3 cameraT, Vector4 colorScale, Vector4 colorOffset)
		{
		}

		[Token(Token = "0x6001078")]
		[Address(RVA = "0xC9E57C", Offset = "0xC9E57C", VA = "0xC9E57C")]
		public static void UPvr_SetColorspaceType(int colorspaceType)
		{
		}

		[Token(Token = "0x6001079")]
		[Address(RVA = "0xC9E580", Offset = "0xC9E580", VA = "0xC9E580")]
		public static void UPvr_SetCastingColorspaceType(int colorspaceType)
		{
		}

		[Token(Token = "0x600107A")]
		[Address(RVA = "0xC9E584", Offset = "0xC9E584", VA = "0xC9E584")]
		public static IntPtr UPvr_CreateLayerAndroidSurface(int layerType, int layerIndex)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600107B")]
		[Address(RVA = "0xC9E588", Offset = "0xC9E588", VA = "0xC9E588")]
		public static IntPtr UPvr_GetLayerAndroidSurface(int layerType, int layerIndex)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600107C")]
		[Address(RVA = "0xC9E58C", Offset = "0xC9E58C", VA = "0xC9E58C")]
		public static void UPvr_SetMonoMode(bool openMono)
		{
		}

		[Token(Token = "0x600107D")]
		[Address(RVA = "0xC8FCEC", Offset = "0xC8FCEC", VA = "0xC8FCEC")]
		public static void UPvr_GetStencilMesh(int eye, ref int vertexCount, ref int triangleCount, ref IntPtr vertexDataPtr, ref IntPtr indexDataPtr)
		{
		}
	}
	[Token(Token = "0x20001D4")]
	public struct System
	{
		[Token(Token = "0x4001866")]
		public const string LibFileName = "Pvr_UnitySDK";

		[Token(Token = "0x4001867")]
		public const string UnitySDKVersion = "2.8.9.12";

		[PreserveSig]
		[Token(Token = "0x600107E")]
		[Address(RVA = "0xCA00C0", Offset = "0xCA00C0", VA = "0xCA00C0")]
		public static extern void Pvr_SetInitActivity(IntPtr activity, IntPtr vrActivityClass);

		[PreserveSig]
		[Token(Token = "0x600107F")]
		[Address(RVA = "0xCA016C", Offset = "0xCA016C", VA = "0xCA016C")]
		private static extern IntPtr Pvr_GetSDKVersion();

		[PreserveSig]
		[Token(Token = "0x6001080")]
		[Address(RVA = "0xCA01F8", Offset = "0xCA01F8", VA = "0xCA01F8")]
		public static extern int Pvr_GetHmdHardwareVersion();

		[PreserveSig]
		[Token(Token = "0x6001081")]
		[Address(RVA = "0xCA0284", Offset = "0xCA0284", VA = "0xCA0284")]
		public static extern IntPtr Pvr_GetHmdFirmwareVersion();

		[PreserveSig]
		[Token(Token = "0x6001082")]
		[Address(RVA = "0xCA0310", Offset = "0xCA0310", VA = "0xCA0310")]
		public static extern IntPtr Pvr_GetHmdSerialNumber();

		[PreserveSig]
		[Token(Token = "0x6001083")]
		[Address(RVA = "0xCA039C", Offset = "0xCA039C", VA = "0xCA039C")]
		public static extern int PVR_GetHmdBatteryStatus();

		[PreserveSig]
		[Token(Token = "0x6001084")]
		[Address(RVA = "0xCA0428", Offset = "0xCA0428", VA = "0xCA0428")]
		public static extern float PVR_GetHmdBatteryTemperature();

		[PreserveSig]
		[Token(Token = "0x6001085")]
		[Address(RVA = "0xCA04B4", Offset = "0xCA04B4", VA = "0xCA04B4")]
		public static extern int PVR_SetHmdAudioStatus(bool enable);

		[PreserveSig]
		[Token(Token = "0x6001086")]
		[Address(RVA = "0xCA0550", Offset = "0xCA0550", VA = "0xCA0550")]
		public static extern bool Pvr_GetEyeTrackingData(ref int leftEyePoseStatus, ref int rightEyePoseStatus, ref int combinedEyePoseStatus, ref float leftEyeGazePointX, ref float leftEyeGazePointY, ref float leftEyeGazePointZ, ref float rightEyeGazePointX, ref float rightEyeGazePointY, ref float rightEyeGazePointZ, ref float combinedEyeGazePointX, ref float combinedEyeGazePointY, ref float combinedEyeGazePointZ, ref float leftEyeGazeVectorX, ref float leftEyeGazeVectorY, ref float leftEyeGazeVectorZ, ref float rightEyeGazeVectorX, ref float rightEyeGazeVectorY, ref float rightEyeGazeVectorZ, ref float combinedEyeGazeVectorX, ref float combinedEyeGazeVectorY, ref float combinedEyeGazeVectorZ, ref float leftEyeOpenness, ref float rightEyeOpenness, ref float leftEyePupilDilation, ref float rightEyePupilDilation, ref float leftEyePositionGuideX, ref float leftEyePositionGuideY, ref float leftEyePositionGuideZ, ref float rightEyePositionGuideX, ref float rightEyePositionGuideY, ref float rightEyePositionGuideZ, ref float foveatedGazeDirectionX, ref float foveatedGazeDirectionY, ref float foveatedGazeDirectionZ, ref int foveatedGazeTrackingState);

		[PreserveSig]
		[Token(Token = "0x6001087")]
		[Address(RVA = "0xCA06A4", Offset = "0xCA06A4", VA = "0xCA06A4")]
		public static extern bool Pvr_SetTrackingMode(int trackingMode);

		[PreserveSig]
		[Token(Token = "0x6001088")]
		[Address(RVA = "0xCA0748", Offset = "0xCA0748", VA = "0xCA0748")]
		public static extern int Pvr_GetTrackingMode();

		[PreserveSig]
		[Token(Token = "0x6001089")]
		[Address(RVA = "0xCA07D4", Offset = "0xCA07D4", VA = "0xCA07D4")]
		public static extern IntPtr GetRenderEventFunc();

		[PreserveSig]
		[Token(Token = "0x600108A")]
		[Address(RVA = "0xCA0860", Offset = "0xCA0860", VA = "0xCA0860")]
		public static extern void UnityEventData(long data);

		[PreserveSig]
		[Token(Token = "0x600108B")]
		[Address(RVA = "0xCA08FC", Offset = "0xCA08FC", VA = "0xCA08FC")]
		public static extern bool Pvr_EnableSinglePass(bool enable);

		[PreserveSig]
		[Token(Token = "0x600108C")]
		[Address(RVA = "0xCA09A0", Offset = "0xCA09A0", VA = "0xCA09A0")]
		public static extern void Pvr_SetAntiAliasing(int antiAliasing);

		[PreserveSig]
		[Token(Token = "0x600108D")]
		[Address(RVA = "0xCA0A3C", Offset = "0xCA0A3C", VA = "0xCA0A3C")]
		public static extern void Pvr_SinglePassBeforeForwardOpaque();

		[PreserveSig]
		[Token(Token = "0x600108E")]
		[Address(RVA = "0xCA0AC8", Offset = "0xCA0AC8", VA = "0xCA0AC8")]
		public static extern void Pvr_SetCurrentRenderTexture(uint textureId);

		[PreserveSig]
		[Token(Token = "0x600108F")]
		[Address(RVA = "0xCA0B64", Offset = "0xCA0B64", VA = "0xCA0B64")]
		public static extern bool Pvr_SetSinglePassDepthBufferWidthHeight(int width, int height);

		[PreserveSig]
		[Token(Token = "0x6001090")]
		[Address(RVA = "0xCA0C18", Offset = "0xCA0C18", VA = "0xCA0C18")]
		public static extern int PVR_setPerformanceLevels(int cpuLevel, int gpuLevel);

		[PreserveSig]
		[Token(Token = "0x6001091")]
		[Address(RVA = "0xCA0CC4", Offset = "0xCA0CC4", VA = "0xCA0CC4")]
		public static extern bool Pvr_SetIPD(float distance);

		[PreserveSig]
		[Token(Token = "0x6001092")]
		[Address(RVA = "0xCA0D6C", Offset = "0xCA0D6C", VA = "0xCA0D6C")]
		public static extern float Pvr_GetIPD();

		[PreserveSig]
		[Token(Token = "0x6001093")]
		[Address(RVA = "0xCA0DF8", Offset = "0xCA0DF8", VA = "0xCA0DF8")]
		public static extern bool Pvr_SetTrackingIPDEnabled(bool enable);

		[PreserveSig]
		[Token(Token = "0x6001094")]
		[Address(RVA = "0xCA0E9C", Offset = "0xCA0E9C", VA = "0xCA0E9C")]
		public static extern bool Pvr_GetTrackingIPDEnabled();

		[PreserveSig]
		[Token(Token = "0x6001095")]
		[Address(RVA = "0xCA0F30", Offset = "0xCA0F30", VA = "0xCA0F30")]
		public static extern bool Pvr_GetEyeTrackingAutoIPD(ref float autoIPD);

		[PreserveSig]
		[Token(Token = "0x6001096")]
		[Address(RVA = "0xC9CA54", Offset = "0xC9CA54", VA = "0xC9CA54")]
		public static extern int PVR_GetHmdAudioStatus();

		[Token(Token = "0x6001097")]
		public static bool UPvr_CallStaticMethod<T>(ref T result, AndroidJavaClass jclass, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x6001098")]
		[Address(RVA = "0xC9F864", Offset = "0xC9F864", VA = "0xC9F864")]
		public static bool UPvr_CallStaticMethod(AndroidJavaObject jobj, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x6001099")]
		public static bool UPvr_CallMethod<T>(ref T result, AndroidJavaObject jobj, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x600109A")]
		[Address(RVA = "0xCA0FD4", Offset = "0xCA0FD4", VA = "0xCA0FD4")]
		public static bool UPvr_CallMethod(AndroidJavaObject jobj, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x600109B")]
		[Address(RVA = "0xCA11E8", Offset = "0xCA11E8", VA = "0xCA11E8")]
		public static string UPvr_GetSDKVersion()
		{
			return null;
		}

		[Token(Token = "0x600109C")]
		[Address(RVA = "0xCA127C", Offset = "0xCA127C", VA = "0xCA127C")]
		public static string UPvr_GetUnitySDKVersion()
		{
			return null;
		}

		[Token(Token = "0x600109D")]
		[Address(RVA = "0xCA12C4", Offset = "0xCA12C4", VA = "0xCA12C4")]
		public static string UPvr_GetDeviceMode()
		{
			return null;
		}

		[Token(Token = "0x600109E")]
		[Address(RVA = "0xCA12CC", Offset = "0xCA12CC", VA = "0xCA12CC")]
		public static string UPvr_GetDeviceModel()
		{
			return null;
		}

		[Token(Token = "0x600109F")]
		[Address(RVA = "0xC9BC58", Offset = "0xC9BC58", VA = "0xC9BC58")]
		public static string UPvr_GetDeviceSN()
		{
			return null;
		}

		[Token(Token = "0x60010A0")]
		[Address(RVA = "0xC9C090", Offset = "0xC9C090", VA = "0xC9C090")]
		public static AndroidJavaObject UPvr_GetCurrentActivity()
		{
			return null;
		}

		[Token(Token = "0x60010A1")]
		[Address(RVA = "0xCA12D4", Offset = "0xCA12D4", VA = "0xCA12D4")]
		public static bool UPvr_SetMonoPresentation()
		{
			return default(bool);
		}

		[Token(Token = "0x60010A2")]
		[Address(RVA = "0xCA13BC", Offset = "0xCA13BC", VA = "0xCA13BC")]
		public static bool UPvr_IsPresentationExisted()
		{
			return default(bool);
		}

		[Token(Token = "0x60010A3")]
		[Address(RVA = "0xCA14C8", Offset = "0xCA14C8", VA = "0xCA14C8")]
		public static bool UPvr_GetMainActivityPauseStatus()
		{
			return default(bool);
		}

		[Token(Token = "0x60010A4")]
		[Address(RVA = "0xCA15D4", Offset = "0xCA15D4", VA = "0xCA15D4")]
		public static void UPvr_Sleep()
		{
		}

		[Token(Token = "0x60010A5")]
		[Address(RVA = "0xCA16E0", Offset = "0xCA16E0", VA = "0xCA16E0")]
		public static bool UPvr_StartHomeKeyReceiver(string startreceivre)
		{
			return default(bool);
		}

		[Token(Token = "0x60010A6")]
		[Address(RVA = "0xCA1980", Offset = "0xCA1980", VA = "0xCA1980")]
		public static bool UPvr_StopHomeKeyReceiver()
		{
			return default(bool);
		}

		[Token(Token = "0x60010A7")]
		[Address(RVA = "0xCA1BD0", Offset = "0xCA1BD0", VA = "0xCA1BD0")]
		public static void UPvr_StartVRModel()
		{
		}

		[Token(Token = "0x60010A8")]
		[Address(RVA = "0xCA1CDC", Offset = "0xCA1CDC", VA = "0xCA1CDC")]
		public static void UPvr_RemovePlatformLogo()
		{
		}

		[Token(Token = "0x60010A9")]
		[Address(RVA = "0xCA1DE8", Offset = "0xCA1DE8", VA = "0xCA1DE8")]
		public static void UPvr_ShowPlatformLogo()
		{
		}

		[Token(Token = "0x60010AA")]
		[Address(RVA = "0xCA1EF4", Offset = "0xCA1EF4", VA = "0xCA1EF4")]
		public static bool UPvr_IsPicoActivity()
		{
			return default(bool);
		}

		[Token(Token = "0x60010AB")]
		[Address(RVA = "0xCA2004", Offset = "0xCA2004", VA = "0xCA2004")]
		public static void UPvr_StopVRModel()
		{
		}

		[Token(Token = "0x60010AC")]
		[Address(RVA = "0xCA2110", Offset = "0xCA2110", VA = "0xCA2110")]
		public static string UPvr_GetCountryCode()
		{
			return null;
		}

		[Token(Token = "0x60010AD")]
		[Address(RVA = "0xCA2224", Offset = "0xCA2224", VA = "0xCA2224")]
		public static bool UPvr_SetIPD(float distance)
		{
			return default(bool);
		}

		[Token(Token = "0x60010AE")]
		[Address(RVA = "0xCA2340", Offset = "0xCA2340", VA = "0xCA2340")]
		public static float UPvr_GetIPD()
		{
			return default(float);
		}

		[Token(Token = "0x60010AF")]
		[Address(RVA = "0xCA2400", Offset = "0xCA2400", VA = "0xCA2400")]
		public static bool UPvr_SetTrackingIPDEnabled(bool enable)
		{
			return default(bool);
		}

		[Token(Token = "0x60010B0")]
		[Address(RVA = "0xCA2408", Offset = "0xCA2408", VA = "0xCA2408")]
		public static bool UPvr_GetTrackingIPDEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x60010B1")]
		[Address(RVA = "0xCA240C", Offset = "0xCA240C", VA = "0xCA240C")]
		public static bool UPvr_GetEyeTrackingAutoIPD(ref float autoipd)
		{
			return default(bool);
		}

		[Token(Token = "0x60010B2")]
		[Address(RVA = "0xC97868", Offset = "0xC97868", VA = "0xC97868")]
		public static void UPvr_UnityEventData(long data)
		{
		}

		[Token(Token = "0x60010B3")]
		[Address(RVA = "0xCA2410", Offset = "0xCA2410", VA = "0xCA2410")]
		public static long UPvr_GetEyeBufferData(int id)
		{
			return default(long);
		}

		[Token(Token = "0x60010B4")]
		[Address(RVA = "0xCA248C", Offset = "0xCA248C", VA = "0xCA248C")]
		public static bool UPvr_checkDevice(string packagename)
		{
			return default(bool);
		}

		[Token(Token = "0x60010B5")]
		[Address(RVA = "0xCA25BC", Offset = "0xCA25BC", VA = "0xCA25BC")]
		public static int UPvr_GetHmdHardwareVersion()
		{
			return default(int);
		}

		[Token(Token = "0x60010B6")]
		[Address(RVA = "0xCA25C0", Offset = "0xCA25C0", VA = "0xCA25C0")]
		public static string UPvr_GetHmdFirmwareVersion()
		{
			return null;
		}

		[Token(Token = "0x60010B7")]
		[Address(RVA = "0xCA2654", Offset = "0xCA2654", VA = "0xCA2654")]
		public static string UPvr_GetHmdSerialNumber()
		{
			return null;
		}

		[Token(Token = "0x60010B8")]
		[Address(RVA = "0xCA26E8", Offset = "0xCA26E8", VA = "0xCA26E8")]
		public static int UPvr_GetHmdBatteryStatus()
		{
			return default(int);
		}

		[Token(Token = "0x60010B9")]
		[Address(RVA = "0xCA26EC", Offset = "0xCA26EC", VA = "0xCA26EC")]
		public static float UPvr_GetHmdBatteryTemperature()
		{
			return default(float);
		}

		[Token(Token = "0x60010BA")]
		[Address(RVA = "0xCA26F0", Offset = "0xCA26F0", VA = "0xCA26F0")]
		public static int UPvr_SetHmdAudioStatus(bool enable)
		{
			return default(int);
		}

		[Token(Token = "0x60010BB")]
		[Address(RVA = "0xCA26F8", Offset = "0xCA26F8", VA = "0xCA26F8")]
		public static int UPvr_GetTrackingMode()
		{
			return default(int);
		}

		[Token(Token = "0x60010BC")]
		[Address(RVA = "0xCA26FC", Offset = "0xCA26FC", VA = "0xCA26FC")]
		public static bool UPvr_setTrackingMode(int trackingMode)
		{
			return default(bool);
		}

		[Token(Token = "0x60010BD")]
		[Address(RVA = "0xCA2700", Offset = "0xCA2700", VA = "0xCA2700")]
		public static bool UPvr_getEyeTrackingData(ref EyeTrackingData trackingData)
		{
			return default(bool);
		}

		[Token(Token = "0x60010BE")]
		[Address(RVA = "0xCA296C", Offset = "0xCA296C", VA = "0xCA296C")]
		public static bool UPvr_getEyeTrackingGazeRay(ref EyeTrackingGazeRay gazeRay)
		{
			return default(bool);
		}

		[Token(Token = "0x60010BF")]
		[Address(RVA = "0xCA2BB4", Offset = "0xCA2BB4", VA = "0xCA2BB4")]
		public static bool UPvr_getEyeTrackingGazeRayWorld(ref EyeTrackingGazeRay gazeRay)
		{
			return default(bool);
		}

		[Token(Token = "0x60010C0")]
		[Address(RVA = "0xCA2EA8", Offset = "0xCA2EA8", VA = "0xCA2EA8")]
		public static Vector3 UPvr_getEyeTrackingPos()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010C1")]
		[Address(RVA = "0xCA2FF8", Offset = "0xCA2FF8", VA = "0xCA2FF8")]
		public static int UPvr_GetPhoneScreenBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x60010C2")]
		[Address(RVA = "0xCA3100", Offset = "0xCA3100", VA = "0xCA3100")]
		public static void UPvr_SetPhoneScreenBrightness(int level)
		{
		}

		[Token(Token = "0x60010C3")]
		[Address(RVA = "0xCA3240", Offset = "0xCA3240", VA = "0xCA3240")]
		public static bool UPvr_IsPicoDefaultActivity()
		{
			return default(bool);
		}

		[Token(Token = "0x60010C4")]
		[Address(RVA = "0xCA35A8", Offset = "0xCA35A8", VA = "0xCA35A8")]
		public static bool UPvr_EnableSinglePass(bool enable)
		{
			return default(bool);
		}

		[Token(Token = "0x60010C5")]
		[Address(RVA = "0xCA35B0", Offset = "0xCA35B0", VA = "0xCA35B0")]
		public static void UPvr_SetAntiAliasing(int antiAliasing)
		{
		}

		[Token(Token = "0x60010C6")]
		[Address(RVA = "0xCA35B4", Offset = "0xCA35B4", VA = "0xCA35B4")]
		public static void UPvr_SinglePassBeforeForwardOpaque()
		{
		}

		[Token(Token = "0x60010C7")]
		[Address(RVA = "0xCA35B8", Offset = "0xCA35B8", VA = "0xCA35B8")]
		public static void UPvr_SetCurrentRenderTexture(uint textureId)
		{
		}

		[Token(Token = "0x60010C8")]
		[Address(RVA = "0xCA35BC", Offset = "0xCA35BC", VA = "0xCA35BC")]
		public static bool UPvr_SetSinglePassDepthBufferWidthHeight(int width, int height)
		{
			return default(bool);
		}

		[Token(Token = "0x60010C9")]
		[Address(RVA = "0xCA35C0", Offset = "0xCA35C0", VA = "0xCA35C0")]
		public static int UPVR_setPerformanceLevels(int cpuLevel, int gpuLevel)
		{
			return default(int);
		}

		[Token(Token = "0x60010CA")]
		[Address(RVA = "0xCA35C4", Offset = "0xCA35C4", VA = "0xCA35C4")]
		public static int UPvr_GetColorRes(string name)
		{
			return default(int);
		}

		[Token(Token = "0x60010CB")]
		[Address(RVA = "0xCA37B8", Offset = "0xCA37B8", VA = "0xCA37B8")]
		public static int UPvr_GetConfigInt(string name)
		{
			return default(int);
		}

		[Token(Token = "0x60010CC")]
		[Address(RVA = "0xCA39AC", Offset = "0xCA39AC", VA = "0xCA39AC")]
		public static string UPvr_GetConfigString(string name)
		{
			return null;
		}

		[Token(Token = "0x60010CD")]
		[Address(RVA = "0xCA3BA8", Offset = "0xCA3BA8", VA = "0xCA3BA8")]
		public static string UPvr_GetDrawableLocation(string name)
		{
			return null;
		}

		[Token(Token = "0x60010CE")]
		[Address(RVA = "0xCA3DA4", Offset = "0xCA3DA4", VA = "0xCA3DA4")]
		public static int UPvr_GetTextSize(string name)
		{
			return default(int);
		}

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0xC885C0", Offset = "0xC885C0", VA = "0xC885C0")]
		public static string UPvr_GetLangString(string name)
		{
			return null;
		}

		[Token(Token = "0x60010D0")]
		[Address(RVA = "0xCA3F98", Offset = "0xCA3F98", VA = "0xCA3F98")]
		public static string UPvr_GetStringValue(string id, int type)
		{
			return null;
		}

		[Token(Token = "0x60010D1")]
		[Address(RVA = "0xCA420C", Offset = "0xCA420C", VA = "0xCA420C")]
		public static int UPvr_GetIntValue(string id, int type)
		{
			return default(int);
		}

		[Token(Token = "0x60010D2")]
		[Address(RVA = "0xCA4478", Offset = "0xCA4478", VA = "0xCA4478")]
		public static float UPvr_GetFloatValue(string id)
		{
			return default(float);
		}

		[Token(Token = "0x60010D3")]
		[Address(RVA = "0xCA466C", Offset = "0xCA466C", VA = "0xCA466C")]
		public static string UPvr_GetObjectOrArray(string id, int type)
		{
			return null;
		}

		[Token(Token = "0x60010D4")]
		[Address(RVA = "0xCA48E0", Offset = "0xCA48E0", VA = "0xCA48E0")]
		public static int UPvr_GetCharSpace(string id)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20001D5")]
	public struct BoundarySystem
	{
		[Token(Token = "0x2000400")]
		public enum BoundaryType
		{
			[Token(Token = "0x400269F")]
			OuterBoundary,
			[Token(Token = "0x40026A0")]
			PlayArea
		}

		[Token(Token = "0x2000401")]
		public struct BoundaryTestResult
		{
			[Token(Token = "0x40026A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool IsTriggering;

			[Token(Token = "0x40026A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float ClosestDistance;

			[Token(Token = "0x40026A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector3 ClosestPoint;

			[Token(Token = "0x40026A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 ClosestPointNormal;
		}

		[Token(Token = "0x2000402")]
		public enum BoundaryTrackingNode
		{
			[Token(Token = "0x40026A6")]
			HandLeft,
			[Token(Token = "0x40026A7")]
			HandRight,
			[Token(Token = "0x40026A8")]
			Head
		}

		[Token(Token = "0x2000403")]
		public enum BoundaryTrackingState
		{
			[Token(Token = "0x40026AA")]
			PVR_NOREASON,
			[Token(Token = "0x40026AB")]
			PVRRELOCATION_IN_PROGRESS,
			[Token(Token = "0x40026AC")]
			PVRLOW_FEATURE_COUNT_ERROR,
			[Token(Token = "0x40026AD")]
			PVRLOW_LIGHT_ERROR,
			[Token(Token = "0x40026AE")]
			PVRBRIGHT_LIGHT_ERROR,
			[Token(Token = "0x40026AF")]
			PVRSTEREO_CAMERA_CALIBRATION_ERROR
		}

		[Token(Token = "0x4001868")]
		public const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x60010D5")]
		[Address(RVA = "0xC9618C", Offset = "0xC9618C", VA = "0xC9618C")]
		private static extern float Pvr_GetFloorHeight();

		[PreserveSig]
		[Token(Token = "0x60010D6")]
		[Address(RVA = "0xC96218", Offset = "0xC96218", VA = "0xC96218")]
		private static extern int Pvr_GetSeeThroughState();

		[PreserveSig]
		[Token(Token = "0x60010D7")]
		[Address(RVA = "0xC962A4", Offset = "0xC962A4", VA = "0xC962A4")]
		private static extern void Pvr_BoundarySetSTBackground(bool value);

		[PreserveSig]
		[Token(Token = "0x60010D8")]
		[Address(RVA = "0xC96340", Offset = "0xC96340", VA = "0xC96340")]
		private static extern int Pvr_GetTrackingState();

		[PreserveSig]
		[Token(Token = "0x60010D9")]
		[Address(RVA = "0xC963CC", Offset = "0xC963CC", VA = "0xC963CC")]
		private static extern bool Pvr_GetFrameRateLimit();

		[PreserveSig]
		[Token(Token = "0x60010DA")]
		[Address(RVA = "0xC96460", Offset = "0xC96460", VA = "0xC96460")]
		private static extern bool Pvr_IsBoundaryEnable();

		[PreserveSig]
		[Token(Token = "0x60010DB")]
		[Address(RVA = "0xC964F4", Offset = "0xC964F4", VA = "0xC964F4")]
		private static extern bool Pvr_BoundaryGetConfigured();

		[PreserveSig]
		[Token(Token = "0x60010DC")]
		[Address(RVA = "0xC96588", Offset = "0xC96588", VA = "0xC96588")]
		private static extern bool Pvr_BoundaryTestNode(int node, bool isPlayArea, ref bool isTriggering, ref float closestDistance, ref float px, ref float py, ref float pz, ref float nx, ref float ny, ref float nz);

		[PreserveSig]
		[Token(Token = "0x60010DD")]
		[Address(RVA = "0xC966A4", Offset = "0xC966A4", VA = "0xC966A4")]
		private static extern bool Pvr_BoundaryTestPoint(float x, float y, float z, bool isPlayArea, ref bool isTriggering, ref float closestDistance, ref float px, ref float py, ref float pz, ref float nx, ref float ny, ref float nz);

		[PreserveSig]
		[Token(Token = "0x60010DE")]
		[Address(RVA = "0xC967E8", Offset = "0xC967E8", VA = "0xC967E8")]
		private static extern int Pvr_BoundaryGetGeometry(out IntPtr handle, bool isPlayArea);

		[PreserveSig]
		[Token(Token = "0x60010DF")]
		[Address(RVA = "0xC96890", Offset = "0xC96890", VA = "0xC96890")]
		private static extern int Pvr_BoundaryGetDimensions(ref float x, ref float y, ref float z, bool isPlayArea);

		[PreserveSig]
		[Token(Token = "0x60010E0")]
		[Address(RVA = "0xC96954", Offset = "0xC96954", VA = "0xC96954")]
		private static extern bool Pvr_BoundaryGetEnabled();

		[PreserveSig]
		[Token(Token = "0x60010E1")]
		[Address(RVA = "0xC969E8", Offset = "0xC969E8", VA = "0xC969E8")]
		private static extern void Pvr_BoundarySetVisible(bool value);

		[PreserveSig]
		[Token(Token = "0x60010E2")]
		[Address(RVA = "0xC96A84", Offset = "0xC96A84", VA = "0xC96A84")]
		private static extern bool Pvr_BoundaryGetVisible();

		[PreserveSig]
		[Token(Token = "0x60010E3")]
		[Address(RVA = "0xC96B18", Offset = "0xC96B18", VA = "0xC96B18")]
		private static extern bool Pvr_EnableLWRP(bool enable);

		[PreserveSig]
		[Token(Token = "0x60010E4")]
		[Address(RVA = "0xC96BBC", Offset = "0xC96BBC", VA = "0xC96BBC")]
		private static extern bool Pvr_SetViewportSize(int w, int h);

		[PreserveSig]
		[Token(Token = "0x60010E5")]
		[Address(RVA = "0xC96C70", Offset = "0xC96C70", VA = "0xC96C70")]
		private static extern void Pvr_BoundarySetSeeThroughVisible(bool value);

		[PreserveSig]
		[Token(Token = "0x60010E6")]
		[Address(RVA = "0xC96D0C", Offset = "0xC96D0C", VA = "0xC96D0C")]
		private static extern void PVR_SetCameraImageRect(int width, int height);

		[PreserveSig]
		[Token(Token = "0x60010E7")]
		[Address(RVA = "0xC96DB8", Offset = "0xC96DB8", VA = "0xC96DB8")]
		private static extern void Pvr_SetGuardianSystemDisable(bool value);

		[PreserveSig]
		[Token(Token = "0x60010E8")]
		[Address(RVA = "0xC96E54", Offset = "0xC96E54", VA = "0xC96E54")]
		private static extern int Pvr_GetDialogState();

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0xC96EE0", Offset = "0xC96EE0", VA = "0xC96EE0")]
		public static float UPvr_GetFloorHeight()
		{
			return default(float);
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0xC96EE4", Offset = "0xC96EE4", VA = "0xC96EE4")]
		public static int UPvr_GetSeeThroughState()
		{
			return default(int);
		}

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0xC96EE8", Offset = "0xC96EE8", VA = "0xC96EE8")]
		public static void UPvr_EnableSeeThroughManual(bool enable)
		{
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0xC96EF0", Offset = "0xC96EF0", VA = "0xC96EF0")]
		public static BoundaryTrackingState UPvr_GetTrackingState()
		{
			return default(BoundaryTrackingState);
		}

		[Token(Token = "0x60010ED")]
		[Address(RVA = "0xC96EF4", Offset = "0xC96EF4", VA = "0xC96EF4")]
		public static bool UPvr_GetFrameRateLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0xC96EF8", Offset = "0xC96EF8", VA = "0xC96EF8")]
		public static bool UPvr_IsBoundaryEnable()
		{
			return default(bool);
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0xC96EFC", Offset = "0xC96EFC", VA = "0xC96EFC")]
		public static bool UPvr_BoundaryGetConfigured()
		{
			return default(bool);
		}

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0xC96F00", Offset = "0xC96F00", VA = "0xC96F00")]
		public static BoundaryTestResult UPvr_BoundaryTestNode(BoundaryTrackingNode node, BoundaryType boundaryType)
		{
			return default(BoundaryTestResult);
		}

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0xC97044", Offset = "0xC97044", VA = "0xC97044")]
		public static BoundaryTestResult UPvr_BoundaryTestPoint(Vector3 point, BoundaryType boundaryType)
		{
			return default(BoundaryTestResult);
		}

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0xC97194", Offset = "0xC97194", VA = "0xC97194")]
		public static Vector3[] UPvr_BoundaryGetGeometry(BoundaryType boundaryType)
		{
			return null;
		}

		[Token(Token = "0x60010F3")]
		[Address(RVA = "0xC9737C", Offset = "0xC9737C", VA = "0xC9737C")]
		public static Vector3 UPvr_BoundaryGetDimensions(BoundaryType boundaryType)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010F4")]
		[Address(RVA = "0xC973D8", Offset = "0xC973D8", VA = "0xC973D8")]
		public static bool UPvr_BoundaryGetEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0xC973DC", Offset = "0xC973DC", VA = "0xC973DC")]
		public static void UPvr_BoundarySetVisible(bool value)
		{
		}

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0xC973E4", Offset = "0xC973E4", VA = "0xC973E4")]
		public static bool UPvr_BoundaryGetVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x60010F7")]
		[Address(RVA = "0xC973E8", Offset = "0xC973E8", VA = "0xC973E8")]
		public static bool UPvr_EnableLWRP(bool enable)
		{
			return default(bool);
		}

		[Token(Token = "0x60010F8")]
		[Address(RVA = "0xC973F0", Offset = "0xC973F0", VA = "0xC973F0")]
		public static bool UPvr_SetViewportSize(int width, int height)
		{
			return default(bool);
		}

		[Token(Token = "0x60010F9")]
		[Address(RVA = "0xC973F4", Offset = "0xC973F4", VA = "0xC973F4")]
		public static void UPvr_StartCameraFrame()
		{
		}

		[Token(Token = "0x60010FA")]
		[Address(RVA = "0xC9753C", Offset = "0xC9753C", VA = "0xC9753C")]
		public static void UPvr_StopCameraFrame()
		{
		}

		[Token(Token = "0x60010FB")]
		[Address(RVA = "0xC97684", Offset = "0xC97684", VA = "0xC97684")]
		public static void UPvr_BoundaryGetSeeThroughData(int cameraIndex, RenderTexture renderTexture)
		{
		}

		[Token(Token = "0x60010FC")]
		[Address(RVA = "0xC9786C", Offset = "0xC9786C", VA = "0xC9786C")]
		public static void UPvr_BoundarySetCameraImageRect(int width, int height)
		{
		}

		[Token(Token = "0x60010FD")]
		[Address(RVA = "0xC979A8", Offset = "0xC979A8", VA = "0xC979A8")]
		public static void UPvr_BoundarySetSeeThroughVisible(bool value)
		{
		}

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0xC97AD0", Offset = "0xC97AD0", VA = "0xC97AD0")]
		public static void UPvr_SetGuardianSystemDisable(bool value)
		{
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0xC97BF8", Offset = "0xC97BF8", VA = "0xC97BF8")]
		public static int UPvr_GetDialogState()
		{
			return default(int);
		}
	}
	[Token(Token = "0x20001D6")]
	public struct PlatformSettings
	{
		[Token(Token = "0x6001100")]
		[Address(RVA = "0xC9BA60", Offset = "0xC9BA60", VA = "0xC9BA60")]
		public static Pvr_UnitySDKPlatformSetting.simulationType UPvr_IsCurrentDeviceValid()
		{
			return default(Pvr_UnitySDKPlatformSetting.simulationType);
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0xC9BD8C", Offset = "0xC9BD8C", VA = "0xC9BD8C")]
		public static bool UPvr_AppEntitlementCheck(string appid)
		{
			return default(bool);
		}

		[Token(Token = "0x6001102")]
		[Address(RVA = "0xC9C11C", Offset = "0xC9C11C", VA = "0xC9C11C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x804B40", Offset = "0x804B40")]
		public static bool UPvr_KeyEntitlementCheck(string publicKey)
		{
			return default(bool);
		}

		[Token(Token = "0x6001103")]
		[Address(RVA = "0xC9C420", Offset = "0xC9C420", VA = "0xC9C420")]
		public static int UPvr_AppEntitlementCheckExtra(string appid)
		{
			return default(int);
		}

		[Token(Token = "0x6001104")]
		[Address(RVA = "0xC9C738", Offset = "0xC9C738", VA = "0xC9C738")]
		public static int UPvr_KeyEntitlementCheckExtra(string publicKey)
		{
			return default(int);
		}

		[Token(Token = "0x6001105")]
		[Address(RVA = "0xC9CA50", Offset = "0xC9CA50", VA = "0xC9CA50")]
		public static int UPvr_GetHmdAudioStatus()
		{
			return default(int);
		}
	}
	[Token(Token = "0x20001D7")]
	public enum DeviceCommand
	{
		[Token(Token = "0x400186A")]
		SET_PICO_NEO_HMD_BRIGHTNESS = 12,
		[Token(Token = "0x400186B")]
		SET_PICO_NEO_HMD_SLEEPDELAY
	}
	[Token(Token = "0x20001D8")]
	public enum BrightnessLevel
	{
		[Token(Token = "0x400186D")]
		VR_BRIGHTNESS_LEVEL_MIN = 1,
		[Token(Token = "0x400186E")]
		VR_BRIGHTNESS_LEVEL_MAX = 100,
		[Token(Token = "0x400186F")]
		VR_BRIGHTNESS_LEVEL_DOWN = 1000,
		[Token(Token = "0x4001870")]
		VR_BRIGHTNESS_LEVEL_UP = 1001,
		[Token(Token = "0x4001871")]
		VR_BRIGHTNESS_LEVEL_SCREEN_OFF = -100
	}
	[Token(Token = "0x20001D9")]
	public struct VolumePowerBrightness
	{
		[Token(Token = "0x4001872")]
		public const string LibFileName = "Pvr_UnitySDK";

		[Token(Token = "0x4001873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AndroidJavaObject activity;

		[Token(Token = "0x4001874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AndroidJavaClass javaSysActivityClass;

		[Token(Token = "0x4001875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static AndroidJavaClass batteryjavaVrActivityClass;

		[Token(Token = "0x4001876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static AndroidJavaClass volumejavaVrActivityClass;

		[PreserveSig]
		[Token(Token = "0x6001106")]
		[Address(RVA = "0xEC9AC8", Offset = "0xEC9AC8", VA = "0xEC9AC8")]
		public static extern void Pvr_SetInitActivity(IntPtr activity, IntPtr vrActivityClass);

		[PreserveSig]
		[Token(Token = "0x6001107")]
		[Address(RVA = "0xEC9B74", Offset = "0xEC9B74", VA = "0xEC9B74")]
		private static extern bool Pvr_IsHmdExist();

		[PreserveSig]
		[Token(Token = "0x6001108")]
		[Address(RVA = "0xEC9C08", Offset = "0xEC9C08", VA = "0xEC9C08")]
		private static extern int Pvr_GetHmdScreenBrightness();

		[PreserveSig]
		[Token(Token = "0x6001109")]
		[Address(RVA = "0xEC9C94", Offset = "0xEC9C94", VA = "0xEC9C94")]
		private static extern bool Pvr_SetHmdScreenBrightness(int brightness);

		[Token(Token = "0x600110A")]
		[Address(RVA = "0xEC9D38", Offset = "0xEC9D38", VA = "0xEC9D38")]
		public static bool UPvr_IsHmdExist()
		{
			return default(bool);
		}

		[Token(Token = "0x600110B")]
		[Address(RVA = "0xEC9D3C", Offset = "0xEC9D3C", VA = "0xEC9D3C")]
		public static int UPvr_GetHmdScreenBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x600110C")]
		[Address(RVA = "0xEC9D40", Offset = "0xEC9D40", VA = "0xEC9D40")]
		public static bool UPvr_SetHmdScreenBrightness(int brightness)
		{
			return default(bool);
		}

		[Token(Token = "0x600110D")]
		[Address(RVA = "0xEC9D44", Offset = "0xEC9D44", VA = "0xEC9D44")]
		public static bool UPvr_SetCommonBrightness(int brightness)
		{
			return default(bool);
		}

		[Token(Token = "0x600110E")]
		[Address(RVA = "0xEC9FE8", Offset = "0xEC9FE8", VA = "0xEC9FE8")]
		public static int UPvr_GetCommonBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x600110F")]
		[Address(RVA = "0xECA210", Offset = "0xECA210", VA = "0xECA210")]
		public static int[] UPvr_GetScreenBrightnessLevel()
		{
			return null;
		}

		[Token(Token = "0x6001110")]
		[Address(RVA = "0xECA418", Offset = "0xECA418", VA = "0xECA418")]
		public static void UPvr_SetScreenBrightnessLevel(int vrBrightness, int level)
		{
		}

		[Token(Token = "0x6001111")]
		[Address(RVA = "0xECA66C", Offset = "0xECA66C", VA = "0xECA66C")]
		public static bool UPvr_SetDevicePropForUser(DeviceCommand deviceid, string number)
		{
			return default(bool);
		}

		[Token(Token = "0x6001112")]
		[Address(RVA = "0xECA7C4", Offset = "0xECA7C4", VA = "0xECA7C4")]
		public static string UPvr_GetDevicePropForUser(DeviceCommand deviceid)
		{
			return null;
		}

		[Token(Token = "0x6001113")]
		[Address(RVA = "0xECA8F8", Offset = "0xECA8F8", VA = "0xECA8F8")]
		public static bool UPvr_InitBatteryClass()
		{
			return default(bool);
		}

		[Token(Token = "0x6001114")]
		[Address(RVA = "0xECABC0", Offset = "0xECABC0", VA = "0xECABC0")]
		public static bool UPvr_InitBatteryVolClass()
		{
			return default(bool);
		}

		[Token(Token = "0x6001115")]
		[Address(RVA = "0xECAEA0", Offset = "0xECAEA0", VA = "0xECAEA0")]
		public static bool UPvr_StartBatteryReceiver(string startreceivre)
		{
			return default(bool);
		}

		[Token(Token = "0x6001116")]
		[Address(RVA = "0xECB0EC", Offset = "0xECB0EC", VA = "0xECB0EC")]
		public static bool UPvr_StopBatteryReceiver()
		{
			return default(bool);
		}

		[Token(Token = "0x6001117")]
		[Address(RVA = "0xEC9D7C", Offset = "0xEC9D7C", VA = "0xEC9D7C")]
		public static bool UPvr_SetBrightness(int brightness)
		{
			return default(bool);
		}

		[Token(Token = "0x6001118")]
		[Address(RVA = "0xECA008", Offset = "0xECA008", VA = "0xECA008")]
		public static int UPvr_GetCurrentBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x6001119")]
		[Address(RVA = "0xECA214", Offset = "0xECA214", VA = "0xECA214")]
		public static int[] Pvr_GetScreenBrightnessLevel()
		{
			return null;
		}

		[Token(Token = "0x600111A")]
		[Address(RVA = "0xECA41C", Offset = "0xECA41C", VA = "0xECA41C")]
		public static void Pvr_SetScreenBrightnessLevel(int vrBrightness, int level)
		{
		}

		[Token(Token = "0x600111B")]
		[Address(RVA = "0xECB2E8", Offset = "0xECB2E8", VA = "0xECB2E8")]
		public static bool UPvr_StartAudioReceiver(string startreceivre)
		{
			return default(bool);
		}

		[Token(Token = "0x600111C")]
		[Address(RVA = "0xECB534", Offset = "0xECB534", VA = "0xECB534")]
		public static bool UPvr_StopAudioReceiver()
		{
			return default(bool);
		}

		[Token(Token = "0x600111D")]
		[Address(RVA = "0xECB730", Offset = "0xECB730", VA = "0xECB730")]
		public static int UPvr_GetMaxVolumeNumber()
		{
			return default(int);
		}

		[Token(Token = "0x600111E")]
		[Address(RVA = "0xECB920", Offset = "0xECB920", VA = "0xECB920")]
		public static int UPvr_GetCurrentVolumeNumber()
		{
			return default(int);
		}

		[Token(Token = "0x600111F")]
		[Address(RVA = "0xECBB10", Offset = "0xECBB10", VA = "0xECBB10")]
		public static bool UPvr_VolumeUp()
		{
			return default(bool);
		}

		[Token(Token = "0x6001120")]
		[Address(RVA = "0xECBCF4", Offset = "0xECBCF4", VA = "0xECBCF4")]
		public static bool UPvr_VolumeDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6001121")]
		[Address(RVA = "0xECBED8", Offset = "0xECBED8", VA = "0xECBED8")]
		public static bool UPvr_SetVolumeNum(int volume)
		{
			return default(bool);
		}

		[Token(Token = "0x6001122")]
		[Address(RVA = "0xECC0C0", Offset = "0xECC0C0", VA = "0xECC0C0")]
		public static bool UPvr_SetAudio(string s)
		{
			return default(bool);
		}

		[Token(Token = "0x6001123")]
		[Address(RVA = "0xECC0C8", Offset = "0xECC0C8", VA = "0xECC0C8")]
		public static bool UPvr_SetBattery(string s)
		{
			return default(bool);
		}

		[Token(Token = "0x6001124")]
		[Address(RVA = "0xECA7C8", Offset = "0xECA7C8", VA = "0xECA7C8")]
		private static string getDevicePropForUser(DeviceCommand deviceid)
		{
			return null;
		}

		[Token(Token = "0x6001125")]
		[Address(RVA = "0xECA670", Offset = "0xECA670", VA = "0xECA670")]
		private static bool setDevicePropForUser(DeviceCommand deviceid, string number)
		{
			return default(bool);
		}
	}
}
namespace Pvr_UnitySDKAPI.Achievement
{
	[Token(Token = "0x20001DA")]
	public sealed class AchievementCore
	{
		[Token(Token = "0x4001877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool IsPlatformInitialized;

		[Token(Token = "0x4001878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public static bool LogMessages;

		[Token(Token = "0x6001126")]
		[Address(RVA = "0xC8FD80", Offset = "0xC8FD80", VA = "0xC8FD80")]
		public static bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6001127")]
		[Address(RVA = "0xC8FDE8", Offset = "0xC8FDE8", VA = "0xC8FDE8")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6001128")]
		[Address(RVA = "0xC8FDEC", Offset = "0xC8FDEC", VA = "0xC8FDEC")]
		public static void RegisterNetwork()
		{
		}

		[Token(Token = "0x6001129")]
		[Address(RVA = "0xC8FF88", Offset = "0xC8FF88", VA = "0xC8FF88")]
		public static void UnRegisterNetwork()
		{
		}

		[Token(Token = "0x600112A")]
		[Address(RVA = "0xC90100", Offset = "0xC90100", VA = "0xC90100")]
		public AchievementCore()
		{
		}
	}
	[Token(Token = "0x20001DB")]
	public static class Achievements
	{
		[Token(Token = "0x600112C")]
		[Address(RVA = "0xC90168", Offset = "0xC90168", VA = "0xC90168")]
		public static Pvr_Request<Pvr_AchievementUpdate> Init()
		{
			return null;
		}

		[Token(Token = "0x600112D")]
		[Address(RVA = "0xC90724", Offset = "0xC90724", VA = "0xC90724")]
		public static Pvr_Request<Pvr_AchievementUpdate> AddCount(string name, long count)
		{
			return null;
		}

		[Token(Token = "0x600112E")]
		[Address(RVA = "0xC909C8", Offset = "0xC909C8", VA = "0xC909C8")]
		public static Pvr_Request<Pvr_AchievementUpdate> AddFields(string name, string fields)
		{
			return null;
		}

		[Token(Token = "0x600112F")]
		[Address(RVA = "0xC90C4C", Offset = "0xC90C4C", VA = "0xC90C4C")]
		public static Pvr_Request<Pvr_AchievementDefinitionList> GetAllDefinitions()
		{
			return null;
		}

		[Token(Token = "0x6001130")]
		[Address(RVA = "0xC90ED0", Offset = "0xC90ED0", VA = "0xC90ED0")]
		public static Pvr_Request<Pvr_AchievementProgressList> GetAllProgress()
		{
			return null;
		}

		[Token(Token = "0x6001131")]
		[Address(RVA = "0xC910DC", Offset = "0xC910DC", VA = "0xC910DC")]
		public static Pvr_Request<Pvr_AchievementDefinitionList> GetDefinitionsByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x6001132")]
		[Address(RVA = "0xC91368", Offset = "0xC91368", VA = "0xC91368")]
		public static Pvr_Request<Pvr_AchievementProgressList> GetProgressByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x6001133")]
		[Address(RVA = "0xC915B0", Offset = "0xC915B0", VA = "0xC915B0")]
		public static Pvr_Request<Pvr_AchievementUpdate> Unlock(string name)
		{
			return null;
		}

		[Token(Token = "0x6001134")]
		[Address(RVA = "0xC917F8", Offset = "0xC917F8", VA = "0xC917F8")]
		public static Pvr_Request<Pvr_AchievementDefinitionList> GetNextAchievementDefinitionListPage(Pvr_AchievementDefinitionList list)
		{
			return null;
		}

		[Token(Token = "0x6001135")]
		[Address(RVA = "0xC91B9C", Offset = "0xC91B9C", VA = "0xC91B9C")]
		public static Pvr_Request<Pvr_AchievementProgressList> GetNextAchievementProgressListPage(Pvr_AchievementProgressList list)
		{
			return null;
		}
	}
	[Token(Token = "0x20001DC")]
	public enum AchievementType
	{
		[Token(Token = "0x400187A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x800994", Offset = "0x800994")]
		Unknown,
		[Token(Token = "0x400187B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8009CC", Offset = "0x8009CC")]
		Simple,
		[Token(Token = "0x400187C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x800A04", Offset = "0x800A04")]
		Bitfield,
		[Token(Token = "0x400187D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x800A3C", Offset = "0x800A3C")]
		Count
	}
	[Token(Token = "0x20001DD")]
	public class Pvr_AchievementAPI
	{
		[Token(Token = "0x400187E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AndroidJavaClass achievementAPI;

		[Token(Token = "0x400187F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static AndroidJavaClass definitionArrayHandle;

		[Token(Token = "0x4001880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static AndroidJavaClass definitionHandle;

		[Token(Token = "0x4001881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static AndroidJavaClass progressArrayHandle;

		[Token(Token = "0x4001882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static AndroidJavaClass progressHandle;

		[Token(Token = "0x4001883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static AndroidJavaClass updateHandle;

		[Token(Token = "0x4001884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static AndroidJavaObject errorHandle;

		[Token(Token = "0x4001885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static AndroidJavaObject unityInterface;

		[Token(Token = "0x4001886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static string openId;

		[Token(Token = "0x4001887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static string accessToken;

		[Token(Token = "0x4001888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static string appId;

		[Token(Token = "0x6001136")]
		[Address(RVA = "0xC90270", Offset = "0xC90270", VA = "0xC90270")]
		internal static long Init()
		{
			return default(long);
		}

		[Token(Token = "0x6001137")]
		[Address(RVA = "0xC8FE48", Offset = "0xC8FE48", VA = "0xC8FE48")]
		internal static void RegisterNetwork()
		{
		}

		[Token(Token = "0x6001138")]
		[Address(RVA = "0xC8FFE4", Offset = "0xC8FFE4", VA = "0xC8FFE4")]
		internal static void UnRegisterNetwork()
		{
		}

		[Token(Token = "0x6001139")]
		[Address(RVA = "0xC92604", Offset = "0xC92604", VA = "0xC92604")]
		internal static AndroidJavaObject PopMessage()
		{
			return null;
		}

		[Token(Token = "0x600113A")]
		[Address(RVA = "0xC92728", Offset = "0xC92728", VA = "0xC92728")]
		internal static string pvr_Error_GetMessage(AndroidJavaObject popMessage)
		{
			return null;
		}

		[Token(Token = "0x600113B")]
		[Address(RVA = "0xC92824", Offset = "0xC92824", VA = "0xC92824")]
		internal static int pvr_Error_GetHttpCode(AndroidJavaObject popMessage)
		{
			return default(int);
		}

		[Token(Token = "0x600113C")]
		[Address(RVA = "0xC92920", Offset = "0xC92920", VA = "0xC92920")]
		internal static int pvr_Error_GetCode(AndroidJavaObject popMessage)
		{
			return default(int);
		}

		[Token(Token = "0x600113D")]
		[Address(RVA = "0xC90844", Offset = "0xC90844", VA = "0xC90844")]
		internal static long pvr_Achievements_AddCount(string name, long count)
		{
			return default(long);
		}

		[Token(Token = "0x600113E")]
		[Address(RVA = "0xC90AE8", Offset = "0xC90AE8", VA = "0xC90AE8")]
		internal static long pvr_Achievements_AddFields(string name, string fields)
		{
			return default(long);
		}

		[Token(Token = "0x600113F")]
		[Address(RVA = "0xC90D54", Offset = "0xC90D54", VA = "0xC90D54")]
		internal static long pvr_Achievements_GetAllDefinitions()
		{
			return default(long);
		}

		[Token(Token = "0x6001140")]
		[Address(RVA = "0xC90FD8", Offset = "0xC90FD8", VA = "0xC90FD8")]
		internal static long pvr_Achievements_GetAllProgress()
		{
			return default(long);
		}

		[Token(Token = "0x6001141")]
		[Address(RVA = "0xC911F4", Offset = "0xC911F4", VA = "0xC911F4")]
		internal static long pvr_Achievements_GetDefinitionsByName(string[] names, int v)
		{
			return default(long);
		}

		[Token(Token = "0x6001142")]
		[Address(RVA = "0xC91480", Offset = "0xC91480", VA = "0xC91480")]
		internal static long pvr_Achievements_GetProgressByName(string[] names, int v)
		{
			return default(long);
		}

		[Token(Token = "0x6001143")]
		[Address(RVA = "0xC916C8", Offset = "0xC916C8", VA = "0xC916C8")]
		internal static long pvr_Achievements_Unlock(string name)
		{
			return default(long);
		}

		[Token(Token = "0x6001144")]
		[Address(RVA = "0xC91974", Offset = "0xC91974", VA = "0xC91974")]
		internal static long pvr_HTTP_GetWithMessageType(string nextUrl, Pvr_Message.MessageType messageType)
		{
			return default(long);
		}

		[Token(Token = "0x6001145")]
		[Address(RVA = "0xC92A1C", Offset = "0xC92A1C", VA = "0xC92A1C")]
		internal static long pvr_Message_GetType(AndroidJavaObject popMessage)
		{
			return default(long);
		}

		[Token(Token = "0x6001146")]
		[Address(RVA = "0xC92BC4", Offset = "0xC92BC4", VA = "0xC92BC4")]
		internal static bool pvr_Message_IsError(AndroidJavaObject popMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6001147")]
		[Address(RVA = "0xC92CC0", Offset = "0xC92CC0", VA = "0xC92CC0")]
		internal static long pvr_Message_GetRequestID(AndroidJavaObject popMessage)
		{
			return default(long);
		}

		[Token(Token = "0x6001148")]
		[Address(RVA = "0xC92508", Offset = "0xC92508", VA = "0xC92508")]
		internal static string pvr_Message_GetString(AndroidJavaObject popMessage)
		{
			return null;
		}

		[Token(Token = "0x6001149")]
		[Address(RVA = "0xC92DBC", Offset = "0xC92DBC", VA = "0xC92DBC")]
		internal static bool pvr_AchievementUpdate_GetJustUnlocked(AndroidJavaObject popMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x600114A")]
		[Address(RVA = "0xC92EB8", Offset = "0xC92EB8", VA = "0xC92EB8")]
		internal static string pvr_AchievementUpdate_GetName(AndroidJavaObject popMessage)
		{
			return null;
		}

		[Token(Token = "0x600114B")]
		[Address(RVA = "0xC92FB4", Offset = "0xC92FB4", VA = "0xC92FB4")]
		internal static int pvr_AchievementProgressArray_GetSize(AndroidJavaObject msg)
		{
			return default(int);
		}

		[Token(Token = "0x600114C")]
		[Address(RVA = "0xC930B0", Offset = "0xC930B0", VA = "0xC930B0")]
		internal static AndroidJavaObject pvr_AchievementProgressArray_GetElement(AndroidJavaObject msg, int index)
		{
			return null;
		}

		[Token(Token = "0x600114D")]
		[Address(RVA = "0xC93200", Offset = "0xC93200", VA = "0xC93200")]
		internal static string pvr_AchievementProgressArray_GetNextUrl(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x600114E")]
		[Address(RVA = "0xC932FC", Offset = "0xC932FC", VA = "0xC932FC")]
		internal static string pvr_AchievementProgress_GetBitfield(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x600114F")]
		[Address(RVA = "0xC933F8", Offset = "0xC933F8", VA = "0xC933F8")]
		internal static long pvr_AchievementProgress_GetCount(AndroidJavaObject msg)
		{
			return default(long);
		}

		[Token(Token = "0x6001150")]
		[Address(RVA = "0xC934F4", Offset = "0xC934F4", VA = "0xC934F4")]
		internal static bool pvr_AchievementProgress_GetIsUnlocked(AndroidJavaObject msg)
		{
			return default(bool);
		}

		[Token(Token = "0x6001151")]
		[Address(RVA = "0xC935F0", Offset = "0xC935F0", VA = "0xC935F0")]
		internal static string pvr_AchievementProgress_GetName(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001152")]
		[Address(RVA = "0xC936EC", Offset = "0xC936EC", VA = "0xC936EC")]
		internal static DateTime pvr_AchievementProgress_GetUnlockTime(AndroidJavaObject msg)
		{
			return default(DateTime);
		}

		[Token(Token = "0x6001153")]
		[Address(RVA = "0xC93824", Offset = "0xC93824", VA = "0xC93824")]
		internal static DateTime DateTimeFromNative(long seconds_since_the_one_true_epoch)
		{
			return default(DateTime);
		}

		[Token(Token = "0x6001154")]
		[Address(RVA = "0xC93894", Offset = "0xC93894", VA = "0xC93894")]
		internal static int pvr_AchievementDefinitionArray_GetSize(AndroidJavaObject msg)
		{
			return default(int);
		}

		[Token(Token = "0x6001155")]
		[Address(RVA = "0xC93990", Offset = "0xC93990", VA = "0xC93990")]
		internal static AndroidJavaObject pvr_AchievementDefinitionArray_GetElement(AndroidJavaObject msg, int index)
		{
			return null;
		}

		[Token(Token = "0x6001156")]
		[Address(RVA = "0xC93AE0", Offset = "0xC93AE0", VA = "0xC93AE0")]
		internal static string pvr_AchievementDefinitionArray_GetNextUrl(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001157")]
		[Address(RVA = "0xC93BDC", Offset = "0xC93BDC", VA = "0xC93BDC")]
		internal static AchievementType pvr_AchievementDefinition_GetType(AndroidJavaObject msg)
		{
			return default(AchievementType);
		}

		[Token(Token = "0x6001158")]
		[Address(RVA = "0xC93D8C", Offset = "0xC93D8C", VA = "0xC93D8C")]
		internal static string pvr_AchievementDefinition_GetName(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001159")]
		[Address(RVA = "0xC93E88", Offset = "0xC93E88", VA = "0xC93E88")]
		internal static int pvr_AchievementDefinition_GetBitfieldLength(AndroidJavaObject msg)
		{
			return default(int);
		}

		[Token(Token = "0x600115A")]
		[Address(RVA = "0xC93F84", Offset = "0xC93F84", VA = "0xC93F84")]
		internal static long pvr_AchievementDefinition_GetTarget(AndroidJavaObject msg)
		{
			return default(long);
		}

		[Token(Token = "0x600115B")]
		[Address(RVA = "0xC94080", Offset = "0xC94080", VA = "0xC94080")]
		internal static string pvr_AchievementDefinition_GetTitle(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x600115C")]
		[Address(RVA = "0xC9417C", Offset = "0xC9417C", VA = "0xC9417C")]
		internal static string pvr_AchievementDefinition_GetUnlockedDescription(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x600115D")]
		[Address(RVA = "0xC94278", Offset = "0xC94278", VA = "0xC94278")]
		internal static string pvr_AchievementDefinition_GetLockedIcon(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x600115E")]
		[Address(RVA = "0xC94374", Offset = "0xC94374", VA = "0xC94374")]
		internal static bool pvr_AchievementDefinition_GetIsSecrect(AndroidJavaObject msg)
		{
			return default(bool);
		}

		[Token(Token = "0x600115F")]
		[Address(RVA = "0xC94470", Offset = "0xC94470", VA = "0xC94470")]
		internal static string pvr_AchievementDefinition_GetUnlockedIcon(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001160")]
		[Address(RVA = "0xC9456C", Offset = "0xC9456C", VA = "0xC9456C")]
		internal static string pvr_AchievementDefinition_GetDescription(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6001161")]
		[Address(RVA = "0xC94668", Offset = "0xC94668", VA = "0xC94668")]
		public Pvr_AchievementAPI()
		{
		}
	}
	[Token(Token = "0x20001DE")]
	public class Pvr_AchievementDefinition
	{
		[Token(Token = "0x4001889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly AchievementType Type;

		[Token(Token = "0x400188A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Name;

		[Token(Token = "0x400188B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly int BitfieldLength;

		[Token(Token = "0x400188C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly long Target;

		[Token(Token = "0x400188D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string Title;

		[Token(Token = "0x400188E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly string Description;

		[Token(Token = "0x400188F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly string UnlockedDescription;

		[Token(Token = "0x4001890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly string UnlockedIcon;

		[Token(Token = "0x4001891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public readonly string LockedIcon;

		[Token(Token = "0x4001892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public readonly bool IsSecrect;

		[Token(Token = "0x6001163")]
		[Address(RVA = "0xC9496C", Offset = "0xC9496C", VA = "0xC9496C")]
		public Pvr_AchievementDefinition(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x20001DF")]
	public class Pvr_AchievementDefinitionList : Pvr_DeserializableList<Pvr_AchievementDefinition>
	{
		[Token(Token = "0x6001164")]
		[Address(RVA = "0xC91E5C", Offset = "0xC91E5C", VA = "0xC91E5C")]
		public Pvr_AchievementDefinitionList(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x20001E0")]
	public class Pvr_AchievementProgress
	{
		[Token(Token = "0x4001893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bitfield;

		[Token(Token = "0x4001894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly long Count;

		[Token(Token = "0x4001895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly bool IsUnlocked;

		[Token(Token = "0x4001896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Name;

		[Token(Token = "0x4001897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly DateTime UnlockTime;

		[Token(Token = "0x6001165")]
		[Address(RVA = "0xC94A60", Offset = "0xC94A60", VA = "0xC94A60")]
		public Pvr_AchievementProgress(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x20001E1")]
	public class Pvr_AchievementProgressList : Pvr_DeserializableList<Pvr_AchievementProgress>
	{
		[Token(Token = "0x6001166")]
		[Address(RVA = "0xC920E4", Offset = "0xC920E4", VA = "0xC920E4")]
		public Pvr_AchievementProgressList(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x20001E2")]
	public class Pvr_AchievementUpdate
	{
		[Token(Token = "0x4001898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool JustUnlocked;

		[Token(Token = "0x4001899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Name;

		[Token(Token = "0x6001167")]
		[Address(RVA = "0xC9236C", Offset = "0xC9236C", VA = "0xC9236C")]
		public Pvr_AchievementUpdate(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x20001E3")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x7F6A3C", Offset = "0x7F6A3C")]
	public class Pvr_DeserializableList<T> : IList<T>, ICollection<T>, IEnumerable<T>, IEnumerable
	{
		[Token(Token = "0x400189A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected List<T> data;

		[Token(Token = "0x400189B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string nextUrl;

		[Token(Token = "0x400189C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string previousUrl;

		[Token(Token = "0x170001F0")]
		public int Count
		{
			[Token(Token = "0x6001168")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001F1")]
		private bool System.Collections.Generic.ICollection<T>.IsReadOnly
		{
			[Token(Token = "0x6001169")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001F2")]
		public T Item
		{
			[Token(Token = "0x600116B")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x600116C")]
			set
			{
			}
		}

		[Token(Token = "0x170001F3")]
		public bool HasNextPage
		{
			[Token(Token = "0x6001177")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001F4")]
		public bool HasPreviousPage
		{
			[Token(Token = "0x6001178")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001F5")]
		public string NextUrl
		{
			[Token(Token = "0x6001179")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F6")]
		public string PreviousUrl
		{
			[Token(Token = "0x600117A")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600116A")]
		public int IndexOf(T obj)
		{
			return default(int);
		}

		[Token(Token = "0x600116D")]
		public void Add(T item)
		{
		}

		[Token(Token = "0x600116E")]
		public void Clear()
		{
		}

		[Token(Token = "0x600116F")]
		public bool Contains(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6001170")]
		public void CopyTo(T[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x6001171")]
		public IEnumerator<T> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001172")]
		public void Insert(int index, T item)
		{
		}

		[Token(Token = "0x6001173")]
		public bool Remove(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6001174")]
		public void RemoveAt(int index)
		{
		}

		[Token(Token = "0x6001175")]
		private IEnumerator GetEnumerator1()
		{
			return null;
		}

		[Token(Token = "0x6001176")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x600117B")]
		public Pvr_DeserializableList()
		{
		}
	}
	[Token(Token = "0x20001E4")]
	public static class Pvr_Callback
	{
		[Token(Token = "0x2000404")]
		private class RequestCallback
		{
			[Token(Token = "0x40026B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Pvr_Message.Callback messageCallback;

			[Token(Token = "0x6001A97")]
			[Address(RVA = "0xC950F4", Offset = "0xC950F4", VA = "0xC950F4")]
			public RequestCallback()
			{
			}

			[Token(Token = "0x6001A98")]
			[Address(RVA = "0xC950FC", Offset = "0xC950FC", VA = "0xC950FC")]
			public RequestCallback(Pvr_Message.Callback callback)
			{
			}

			[Token(Token = "0x6001A99")]
			[Address(RVA = "0xC95128", Offset = "0xC95128", VA = "0xC95128", Slot = "4")]
			public virtual void HandleMessage(Pvr_Message msg)
			{
			}
		}

		[Token(Token = "0x2000405")]
		private sealed class RequestCallback<T> : RequestCallback
		{
			[Token(Token = "0x40026B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Pvr_Message<T>.Callback callback;

			[Token(Token = "0x6001A9A")]
			public RequestCallback(Pvr_Message<T>.Callback callback)
			{
			}

			[Token(Token = "0x6001A9B")]
			public override void HandleMessage(Pvr_Message msg)
			{
			}
		}

		[Token(Token = "0x400189D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<long, Request> requestIDsToRequests;

		[Token(Token = "0x400189E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<Pvr_Message.MessageType, RequestCallback> notificationCallbacks;

		[Token(Token = "0x600117C")]
		[Address(RVA = "0xC94B18", Offset = "0xC94B18", VA = "0xC94B18")]
		internal static void AddRequest(Request request)
		{
		}

		[Token(Token = "0x600117D")]
		[Address(RVA = "0xC94C8C", Offset = "0xC94C8C", VA = "0xC94C8C")]
		internal static void RunCallbacks()
		{
		}

		[Token(Token = "0x600117E")]
		[Address(RVA = "0xC94F1C", Offset = "0xC94F1C", VA = "0xC94F1C")]
		internal static void RunLimitedCallbacks(uint limit)
		{
		}

		[Token(Token = "0x600117F")]
		[Address(RVA = "0xC94FB4", Offset = "0xC94FB4", VA = "0xC94FB4")]
		internal static void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001180")]
		[Address(RVA = "0xC94D68", Offset = "0xC94D68", VA = "0xC94D68")]
		internal static void HandleMessage(Pvr_Message msg)
		{
		}
	}
	[Token(Token = "0x20001E5")]
	public class Pvr_CallbackRunner : MonoBehaviour
	{
		[Token(Token = "0x400189F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsPersistantBetweenSceneLoads;

		[Token(Token = "0x6001182")]
		[Address(RVA = "0xC954EC", Offset = "0xC954EC", VA = "0xC954EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001183")]
		[Address(RVA = "0xC955E8", Offset = "0xC955E8", VA = "0xC955E8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001184")]
		[Address(RVA = "0xC95674", Offset = "0xC95674", VA = "0xC95674")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001185")]
		[Address(RVA = "0xC956D0", Offset = "0xC956D0", VA = "0xC956D0")]
		public Pvr_CallbackRunner()
		{
		}
	}
	[Token(Token = "0x20001E6")]
	public abstract class Pvr_Message<T> : Pvr_Message
	{
		[Token(Token = "0x2000406")]
		public new delegate void Callback(Pvr_Message<T> message);

		[Token(Token = "0x40018A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T data;

		[Token(Token = "0x170001F7")]
		public T Data
		{
			[Token(Token = "0x6001187")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x6001186")]
		public Pvr_Message(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x6001188")]
		protected abstract T GetDataFromMessage(AndroidJavaObject msg);
	}
	[Token(Token = "0x20001E7")]
	public class Pvr_Message
	{
		[Token(Token = "0x2000407")]
		public delegate void Callback(Pvr_Message message);

		[Token(Token = "0x2000408")]
		public enum MessageType : uint
		{
			[Token(Token = "0x40026B3")]
			Unknown = 0u,
			[Token(Token = "0x40026B4")]
			Achievements_AddCount = 65495601u,
			[Token(Token = "0x40026B5")]
			Achievements_AddFields = 346693929u,
			[Token(Token = "0x40026B6")]
			Achievements_GetAllDefinitions = 64177549u,
			[Token(Token = "0x40026B7")]
			Achievements_GetAllProgress = 1335877149u,
			[Token(Token = "0x40026B8")]
			Achievements_GetDefinitionsByName = 1653670332u,
			[Token(Token = "0x40026B9")]
			Achievements_GetNextAchievementDefinitionArrayPage = 712888917u,
			[Token(Token = "0x40026BA")]
			Achievements_GetNextAchievementProgressArrayPage = 792913703u,
			[Token(Token = "0x40026BB")]
			Achievements_GetProgressByName = 354837425u,
			[Token(Token = "0x40026BC")]
			Achievements_Unlock = 1497156573u,
			[Token(Token = "0x40026BD")]
			Achievements_WriteAchievementProgress = 121027549u,
			[Token(Token = "0x40026BE")]
			Achievements_VerifyAccessToken = 53284924u
		}

		[Token(Token = "0x2000409")]
		internal delegate Pvr_Message ExtraMessageTypesHandler(AndroidJavaObject messageHandle, MessageType message_type);

		[Token(Token = "0x40018A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private MessageType type;

		[Token(Token = "0x40018A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private long requestID;

		[Token(Token = "0x40018A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Error error;

		[Token(Token = "0x40018A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x800A74", Offset = "0x800A74")]
		private static ExtraMessageTypesHandler <HandleExtraMessageTypes>k__BackingField;

		[Token(Token = "0x170001F8")]
		public MessageType Type
		{
			[Token(Token = "0x600118A")]
			[Address(RVA = "0xC958D0", Offset = "0xC958D0", VA = "0xC958D0")]
			get
			{
				return default(MessageType);
			}
		}

		[Token(Token = "0x170001F9")]
		public bool IsError
		{
			[Token(Token = "0x600118B")]
			[Address(RVA = "0xC958D8", Offset = "0xC958D8", VA = "0xC958D8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001FA")]
		public long RequestID
		{
			[Token(Token = "0x600118C")]
			[Address(RVA = "0xC958E8", Offset = "0xC958E8", VA = "0xC958E8")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x170001FB")]
		internal static ExtraMessageTypesHandler HandleExtraMessageTypes
		{
			[Token(Token = "0x6001195")]
			[Address(RVA = "0xC95B0C", Offset = "0xC95B0C", VA = "0xC95B0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x804B88", Offset = "0x804B88")]
			private get
			{
				return null;
			}
			[Token(Token = "0x6001194")]
			[Address(RVA = "0xC95AB8", Offset = "0xC95AB8", VA = "0xC95AB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x804B78", Offset = "0x804B78")]
			set
			{
			}
		}

		[Token(Token = "0x6001189")]
		[Address(RVA = "0xC956E0", Offset = "0xC956E0", VA = "0xC956E0")]
		public Pvr_Message(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x600118D")]
		[Address(RVA = "0xC958F0", Offset = "0xC958F0", VA = "0xC958F0", Slot = "4")]
		public virtual Error GetError()
		{
			return null;
		}

		[Token(Token = "0x600118E")]
		[Address(RVA = "0xC958F8", Offset = "0xC958F8", VA = "0xC958F8", Slot = "5")]
		public virtual Pvr_AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x600118F")]
		[Address(RVA = "0xC95900", Offset = "0xC95900", VA = "0xC95900", Slot = "6")]
		public virtual Pvr_AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x6001190")]
		[Address(RVA = "0xC95908", Offset = "0xC95908", VA = "0xC95908", Slot = "7")]
		public virtual Pvr_AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x6001191")]
		[Address(RVA = "0xC95910", Offset = "0xC95910", VA = "0xC95910", Slot = "8")]
		public virtual string GetString()
		{
			return null;
		}

		[Token(Token = "0x6001192")]
		[Address(RVA = "0xC95918", Offset = "0xC95918", VA = "0xC95918")]
		internal static Pvr_Message ParseMessageHandle(AndroidJavaObject messageHandle)
		{
			return null;
		}

		[Token(Token = "0x6001193")]
		[Address(RVA = "0xC94D08", Offset = "0xC94D08", VA = "0xC94D08")]
		public static Pvr_Message PopMessage()
		{
			return null;
		}
	}
	[Token(Token = "0x20001E8")]
	public class MessageWithAchievementDefinitions : Pvr_Message<Pvr_AchievementDefinitionList>
	{
		[Token(Token = "0x6001196")]
		[Address(RVA = "0xC91D58", Offset = "0xC91D58", VA = "0xC91D58")]
		public MessageWithAchievementDefinitions(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x6001197")]
		[Address(RVA = "0xC91DB8", Offset = "0xC91DB8", VA = "0xC91DB8", Slot = "5")]
		public override Pvr_AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x6001198")]
		[Address(RVA = "0xC91DFC", Offset = "0xC91DFC", VA = "0xC91DFC", Slot = "9")]
		protected override Pvr_AchievementDefinitionList GetDataFromMessage(AndroidJavaObject msg)
		{
			return null;
		}
	}
	[Token(Token = "0x20001E9")]
	public class MessageWithAchievementProgressList : Pvr_Message<Pvr_AchievementProgressList>
	{
		[Token(Token = "0x6001199")]
		[Address(RVA = "0xC91FE0", Offset = "0xC91FE0", VA = "0xC91FE0")]
		public MessageWithAchievementProgressList(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x600119A")]
		[Address(RVA = "0xC92040", Offset = "0xC92040", VA = "0xC92040", Slot = "6")]
		public override Pvr_AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x600119B")]
		[Address(RVA = "0xC92084", Offset = "0xC92084", VA = "0xC92084", Slot = "9")]
		protected override Pvr_AchievementProgressList GetDataFromMessage(AndroidJavaObject msg)
		{
			return null;
		}
	}
	[Token(Token = "0x20001EA")]
	public class MessageWithAchievementUpdate : Pvr_Message<Pvr_AchievementUpdate>
	{
		[Token(Token = "0x600119C")]
		[Address(RVA = "0xC92268", Offset = "0xC92268", VA = "0xC92268")]
		public MessageWithAchievementUpdate(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x600119D")]
		[Address(RVA = "0xC922C8", Offset = "0xC922C8", VA = "0xC922C8", Slot = "7")]
		public override Pvr_AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x600119E")]
		[Address(RVA = "0xC9230C", Offset = "0xC9230C", VA = "0xC9230C", Slot = "9")]
		protected override Pvr_AchievementUpdate GetDataFromMessage(AndroidJavaObject msg)
		{
			return null;
		}
	}
	[Token(Token = "0x20001EB")]
	public class MessageWithString : Pvr_Message<string>
	{
		[Token(Token = "0x600119F")]
		[Address(RVA = "0xC92400", Offset = "0xC92400", VA = "0xC92400")]
		public MessageWithString(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x60011A0")]
		[Address(RVA = "0xC92460", Offset = "0xC92460", VA = "0xC92460", Slot = "8")]
		public override string GetString()
		{
			return null;
		}

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0xC924A4", Offset = "0xC924A4", VA = "0xC924A4", Slot = "9")]
		protected override string GetDataFromMessage(AndroidJavaObject msg)
		{
			return null;
		}
	}
	[Token(Token = "0x20001EC")]
	public class Error
	{
		[Token(Token = "0x40018A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int Code;

		[Token(Token = "0x40018A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int HttpCode;

		[Token(Token = "0x40018A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Message;

		[Token(Token = "0x60011A2")]
		[Address(RVA = "0xC91D18", Offset = "0xC91D18", VA = "0xC91D18")]
		public Error(int code, string message, int httpCode)
		{
		}
	}
	[Token(Token = "0x20001ED")]
	public sealed class Pvr_Request<T> : Request
	{
		[Token(Token = "0x40018A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Pvr_Message<T>.Callback callback_;

		[Token(Token = "0x60011A3")]
		public Pvr_Request(long requestID)
		{
		}

		[Token(Token = "0x60011A4")]
		public Pvr_Request<T> OnComplete(Pvr_Message<T>.Callback callback)
		{
			return null;
		}

		[Token(Token = "0x60011A5")]
		public override void HandleMessage(Pvr_Message msg)
		{
		}
	}
	[Token(Token = "0x20001EE")]
	public class Request
	{
		[Token(Token = "0x40018A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Pvr_Message.Callback callback_;

		[Token(Token = "0x40018AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x800A84", Offset = "0x800A84")]
		private long <RequestID>k__BackingField;

		[Token(Token = "0x170001FC")]
		public long RequestID
		{
			[Token(Token = "0x60011A7")]
			[Address(RVA = "0xC96068", Offset = "0xC96068", VA = "0xC96068")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x804B98", Offset = "0x804B98")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x60011A8")]
			[Address(RVA = "0xC96070", Offset = "0xC96070", VA = "0xC96070")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x804BA8", Offset = "0x804BA8")]
			set
			{
			}
		}

		[Token(Token = "0x60011A6")]
		[Address(RVA = "0xC9603C", Offset = "0xC9603C", VA = "0xC9603C")]
		public Request(long requestID)
		{
		}

		[Token(Token = "0x60011A9")]
		[Address(RVA = "0xC96078", Offset = "0xC96078", VA = "0xC96078")]
		public Request OnComplete(Pvr_Message.Callback callback)
		{
			return null;
		}

		[Token(Token = "0x60011AA")]
		[Address(RVA = "0xC960F4", Offset = "0xC960F4", VA = "0xC960F4", Slot = "4")]
		public virtual void HandleMessage(Pvr_Message msg)
		{
		}

		[Token(Token = "0x60011AB")]
		[Address(RVA = "0xC955F0", Offset = "0xC955F0", VA = "0xC955F0")]
		public static void RunCallbacks(uint limit = 0u)
		{
		}
	}
}
namespace ExitGames.Demos.DemoPunVoice
{
	[Token(Token = "0x20001EF")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7F6A74", Offset = "0x7F6A74")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7F6A74", Offset = "0x7F6A74")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7F6A74", Offset = "0x7F6A74")]
	public abstract class BaseController : MonoBehaviour
	{
		[Token(Token = "0x40018AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera ControllerCamera;

		[Token(Token = "0x40018AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Rigidbody rigidBody;

		[Token(Token = "0x40018AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Animator animator;

		[Token(Token = "0x40018AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Transform camTrans;

		[Token(Token = "0x40018AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float h;

		[Token(Token = "0x40018B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float v;

		[Token(Token = "0x40018B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected float speed;

		[Token(Token = "0x40018B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float cameraDistance;

		[Token(Token = "0x60011AC")]
		[Address(RVA = "0xA95B50", Offset = "0xA95B50", VA = "0xA95B50", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60011AD")]
		[Address(RVA = "0xA95C84", Offset = "0xA95C84", VA = "0xA95C84", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0xA95DA8", Offset = "0xA95DA8", VA = "0xA95DA8", Slot = "6")]
		protected virtual void ChangePOV_CameraChanged(Camera camera)
		{
		}

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0xA95E60", Offset = "0xA95E60", VA = "0xA95E60", Slot = "7")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60011B0")]
		[Address(RVA = "0xA95EFC", Offset = "0xA95EFC", VA = "0xA95EFC", Slot = "8")]
		protected virtual void Init()
		{
		}

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0xA95F6C", Offset = "0xA95F6C", VA = "0xA95F6C", Slot = "9")]
		protected virtual void SetCamera()
		{
		}

		[Token(Token = "0x60011B2")]
		[Address(RVA = "0xA9608C", Offset = "0xA9608C", VA = "0xA9608C", Slot = "10")]
		protected virtual void UpdateAnimator(float h, float v)
		{
		}

		[Token(Token = "0x60011B3")]
		[Address(RVA = "0xA9610C", Offset = "0xA9610C", VA = "0xA9610C", Slot = "11")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x60011B4")]
		[Address(RVA = "0xA961C8", Offset = "0xA961C8", VA = "0xA961C8", Slot = "12")]
		protected virtual void ShowCamera(Camera camera)
		{
		}

		[Token(Token = "0x60011B5")]
		[Address(RVA = "0xA9626C", Offset = "0xA9626C", VA = "0xA9626C", Slot = "13")]
		protected virtual void HideCamera(Camera camera)
		{
		}

		[Token(Token = "0x60011B6")]
		protected abstract void Move(float h, float v);

		[Token(Token = "0x60011B7")]
		[Address(RVA = "0xA96310", Offset = "0xA96310", VA = "0xA96310")]
		protected BaseController()
		{
		}
	}
	[Token(Token = "0x20001F0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7F6B28", Offset = "0x7F6B28")]
	[DisallowMultipleComponent]
	public class BetterToggle : MonoBehaviour
	{
		[Token(Token = "0x200040A")]
		public delegate void OnToggle(Toggle toggle);

		[Token(Token = "0x40018B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Toggle toggle;

		[Token(Token = "0x14000022")]
		public static event OnToggle ToggleValueChanged
		{
			[Token(Token = "0x60011B8")]
			[Address(RVA = "0xA96320", Offset = "0xA96320", VA = "0xA96320")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x804BB8", Offset = "0x804BB8")]
			add
			{
			}
			[Token(Token = "0x60011B9")]
			[Address(RVA = "0xA963D4", Offset = "0xA963D4", VA = "0xA963D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x804BC8", Offset = "0x804BC8")]
			remove
			{
			}
		}

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0xA96488", Offset = "0xA96488", VA = "0xA96488")]
		private void Start()
		{
		}

		[Token(Token = "0x60011BB")]
		[Address(RVA = "0xA96548", Offset = "0xA96548", VA = "0xA96548")]
		public void OnToggleValueChanged()
		{
		}

		[Token(Token = "0x60011BC")]
		[Address(RVA = "0xA96964", Offset = "0xA96964", VA = "0xA96964")]
		public BetterToggle()
		{
		}

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0xA9696C", Offset = "0xA9696C", VA = "0xA9696C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x804BD8", Offset = "0x804BD8")]
		private void <Start>b__5_0(bool <p0>)
		{
		}
	}
	[Token(Token = "0x20001F1")]
	public class ChangePOV : MonoBehaviour, IMatchmakingCallbacks
	{
		[Token(Token = "0x200040B")]
		public delegate void OnCameraChanged(Camera newCamera);

		[Token(Token = "0x40018B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private FirstPersonController firstPersonController;

		[Token(Token = "0x40018B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ThirdPersonController thirdPersonController;

		[Token(Token = "0x40018B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OrthographicController orthographicController;

		[Token(Token = "0x40018B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 initialCameraPosition;

		[Token(Token = "0x40018B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion initialCameraRotation;

		[Token(Token = "0x40018BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Camera defaultCamera;

		[Token(Token = "0x40018BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject ButtonsHolder;

		[Token(Token = "0x40018BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Button FirstPersonCamActivator;

		[Token(Token = "0x40018BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Button ThirdPersonCamActivator;

		[Token(Token = "0x40018BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Button OrthographicCamActivator;

		[Token(Token = "0x14000023")]
		public static event OnCameraChanged CameraChanged
		{
			[Token(Token = "0x60011BE")]
			[Address(RVA = "0xA95BD0", Offset = "0xA95BD0", VA = "0xA95BD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x804BE8", Offset = "0x804BE8")]
			add
			{
			}
			[Token(Token = "0x60011BF")]
			[Address(RVA = "0xA95CF4", Offset = "0xA95CF4", VA = "0xA95CF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x804BF8", Offset = "0x804BF8")]
			remove
			{
			}
		}

		[Token(Token = "0x60011C0")]
		[Address(RVA = "0xA969B0", Offset = "0xA969B0", VA = "0xA969B0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60011C1")]
		[Address(RVA = "0xA96B08", Offset = "0xA96B08", VA = "0xA96B08")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60011C2")]
		[Address(RVA = "0xA96C50", Offset = "0xA96C50", VA = "0xA96C50")]
		private void Start()
		{
		}

		[Token(Token = "0x60011C3")]
		[Address(RVA = "0xA96EAC", Offset = "0xA96EAC", VA = "0xA96EAC")]
		private void OnCharacterInstantiated(GameObject character)
		{
		}

		[Token(Token = "0x60011C4")]
		[Address(RVA = "0xA96F80", Offset = "0xA96F80", VA = "0xA96F80")]
		private void FirstPersonMode()
		{
		}

		[Token(Token = "0x60011C5")]
		[Address(RVA = "0xA97128", Offset = "0xA97128", VA = "0xA97128")]
		private void ThirdPersonMode()
		{
		}

		[Token(Token = "0x60011C6")]
		[Address(RVA = "0xA97130", Offset = "0xA97130", VA = "0xA97130")]
		private void OrthographicMode()
		{
		}

		[Token(Token = "0x60011C7")]
		[Address(RVA = "0xA96F88", Offset = "0xA96F88", VA = "0xA96F88")]
		private void ToggleMode(BaseController controller)
		{
		}

		[Token(Token = "0x60011C8")]
		[Address(RVA = "0xA97138", Offset = "0xA97138", VA = "0xA97138")]
		private void BroadcastChange(Camera camera)
		{
		}

		[Token(Token = "0x60011C9")]
		[Address(RVA = "0xA97588", Offset = "0xA97588", VA = "0xA97588", Slot = "4")]
		public void OnFriendListUpdate(List<FriendInfo> friendList)
		{
		}

		[Token(Token = "0x60011CA")]
		[Address(RVA = "0xA9758C", Offset = "0xA9758C", VA = "0xA9758C", Slot = "5")]
		public void OnCreatedRoom()
		{
		}

		[Token(Token = "0x60011CB")]
		[Address(RVA = "0xA97590", Offset = "0xA97590", VA = "0xA97590", Slot = "6")]
		public void OnCreateRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x60011CC")]
		[Address(RVA = "0xA97594", Offset = "0xA97594", VA = "0xA97594", Slot = "7")]
		public void OnJoinedRoom()
		{
		}

		[Token(Token = "0x60011CD")]
		[Address(RVA = "0xA97598", Offset = "0xA97598", VA = "0xA97598", Slot = "8")]
		public void OnJoinRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x60011CE")]
		[Address(RVA = "0xA9759C", Offset = "0xA9759C", VA = "0xA9759C", Slot = "9")]
		public void OnJoinRandomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x60011CF")]
		[Address(RVA = "0xA975A0", Offset = "0xA975A0", VA = "0xA975A0", Slot = "10")]
		public void OnLeftRoom()
		{
		}

		[Token(Token = "0x60011D0")]
		[Address(RVA = "0xA976BC", Offset = "0xA976BC", VA = "0xA976BC")]
		public ChangePOV()
		{
		}
	}
	[Token(Token = "0x20001F2")]
	public class CharacterInstantiation : MonoBehaviourPunCallbacks, IOnEventCallback
	{
		[Token(Token = "0x200040C")]
		public enum SpawnSequence
		{
			[Token(Token = "0x40026C0")]
			Connection,
			[Token(Token = "0x40026C1")]
			Random,
			[Token(Token = "0x40026C2")]
			RoundRobin
		}

		[Token(Token = "0x200040D")]
		public delegate void OnCharacterInstantiated(GameObject character);

		[Token(Token = "0x40018C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform SpawnPosition;

		[Token(Token = "0x40018C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float PositionOffset;

		[Token(Token = "0x40018C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject[] PrefabsToInstantiate;

		[Token(Token = "0x40018C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<Transform> SpawnPoints;

		[Token(Token = "0x40018C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool AutoSpawn;

		[Token(Token = "0x40018C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool UseRandomOffset;

		[Token(Token = "0x40018C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public SpawnSequence Sequence;

		[Token(Token = "0x40018C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private byte manualInstantiationEventCode;

		[Token(Token = "0x40018C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected int lastUsedSpawnPointIndex;

		[Token(Token = "0x40018CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private bool manualInstantiation;

		[Token(Token = "0x40018CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[SerializeField]
		private bool differentPrefabs;

		[Token(Token = "0x40018CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private string localPrefabSuffix;

		[Token(Token = "0x40018CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private string remotePrefabSuffix;

		[Token(Token = "0x14000024")]
		public static event OnCharacterInstantiated CharacterInstantiated
		{
			[Token(Token = "0x60011D1")]
			[Address(RVA = "0xA96A54", Offset = "0xA96A54", VA = "0xA96A54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x804C08", Offset = "0x804C08")]
			add
			{
			}
			[Token(Token = "0x60011D2")]
			[Address(RVA = "0xA96B9C", Offset = "0xA96B9C", VA = "0xA96B9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x804C18", Offset = "0x804C18")]
			remove
			{
			}
		}

		[Token(Token = "0x60011D3")]
		[Address(RVA = "0xA976F4", Offset = "0xA976F4", VA = "0xA976F4", Slot = "41")]
		public override void OnJoinedRoom()
		{
		}

		[Token(Token = "0x60011D4")]
		[Address(RVA = "0xA9796C", Offset = "0xA9796C", VA = "0xA9796C")]
		private void ManualInstantiation(int index, Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x60011D5")]
		[Address(RVA = "0xA981CC", Offset = "0xA981CC", VA = "0xA981CC", Slot = "54")]
		public void OnEvent(EventData photonEvent)
		{
		}

		[Token(Token = "0x60011D6")]
		[Address(RVA = "0xA984FC", Offset = "0xA984FC", VA = "0xA984FC", Slot = "55")]
		protected virtual void GetSpawnPoint(out Vector3 spawnPos, out Quaternion spawnRot)
		{
		}

		[Token(Token = "0x60011D7")]
		[Address(RVA = "0xA98724", Offset = "0xA98724", VA = "0xA98724", Slot = "56")]
		protected virtual Transform GetSpawnPoint()
		{
			return null;
		}

		[Token(Token = "0x60011D8")]
		[Address(RVA = "0xA9888C", Offset = "0xA9888C", VA = "0xA9888C")]
		public CharacterInstantiation()
		{
		}
	}
	[Token(Token = "0x20001F3")]
	public class FirstPersonController : BaseController
	{
		[Token(Token = "0x40018CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private MouseLookHelper mouseLook;

		[Token(Token = "0x40018CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float oldYRotation;

		[Token(Token = "0x40018D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Quaternion velRotation;

		[Token(Token = "0x170001FD")]
		public Vector3 Velocity
		{
			[Token(Token = "0x60011D9")]
			[Address(RVA = "0xA988E4", Offset = "0xA988E4", VA = "0xA988E4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60011DA")]
		[Address(RVA = "0xA98900", Offset = "0xA98900", VA = "0xA98900", Slot = "9")]
		protected override void SetCamera()
		{
		}

		[Token(Token = "0x60011DB")]
		[Address(RVA = "0xA9894C", Offset = "0xA9894C", VA = "0xA9894C", Slot = "14")]
		protected override void Move(float h, float v)
		{
		}

		[Token(Token = "0x60011DC")]
		[Address(RVA = "0xA98A68", Offset = "0xA98A68", VA = "0xA98A68")]
		private void Update()
		{
		}

		[Token(Token = "0x60011DD")]
		[Address(RVA = "0xA98A6C", Offset = "0xA98A6C", VA = "0xA98A6C")]
		private void RotateView()
		{
		}

		[Token(Token = "0x60011DE")]
		[Address(RVA = "0xA98BF8", Offset = "0xA98BF8", VA = "0xA98BF8")]
		public FirstPersonController()
		{
		}
	}
	[Token(Token = "0x20001F4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7F6B9C", Offset = "0x7F6B9C")]
	public class Highlighter : MonoBehaviour
	{
		[Token(Token = "0x40018D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Canvas canvas;

		[Token(Token = "0x40018D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PhotonVoiceView photonVoiceView;

		[Token(Token = "0x40018D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image recorderSprite;

		[Token(Token = "0x40018D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image speakerSprite;

		[Token(Token = "0x40018D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Text bufferLagText;

		[Token(Token = "0x40018D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool showSpeakerLag;

		[Token(Token = "0x60011DF")]
		[Address(RVA = "0xA63EEC", Offset = "0xA63EEC", VA = "0xA63EEC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60011E0")]
		[Address(RVA = "0xA64050", Offset = "0xA64050", VA = "0xA64050")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60011E1")]
		[Address(RVA = "0xA641A4", Offset = "0xA641A4", VA = "0xA641A4")]
		private void VoiceDemoUI_DebugToggled(bool debugMode)
		{
		}

		[Token(Token = "0x60011E2")]
		[Address(RVA = "0xA641B0", Offset = "0xA641B0", VA = "0xA641B0")]
		private void ChangePOV_CameraChanged(Camera camera)
		{
		}

		[Token(Token = "0x60011E3")]
		[Address(RVA = "0xA641CC", Offset = "0xA641CC", VA = "0xA641CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011E4")]
		[Address(RVA = "0xA642EC", Offset = "0xA642EC", VA = "0xA642EC")]
		private void Update()
		{
		}

		[Token(Token = "0x60011E5")]
		[Address(RVA = "0xA64450", Offset = "0xA64450", VA = "0xA64450")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60011E6")]
		[Address(RVA = "0xA645BC", Offset = "0xA645BC", VA = "0xA645BC")]
		public Highlighter()
		{
		}
	}
	[Token(Token = "0x20001F5")]
	public class OrthographicController : ThirdPersonController
	{
		[Token(Token = "0x40018D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float smoothing;

		[Token(Token = "0x40018D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 offset;

		[Token(Token = "0x60011E7")]
		[Address(RVA = "0xA645C4", Offset = "0xA645C4", VA = "0xA645C4", Slot = "8")]
		protected override void Init()
		{
		}

		[Token(Token = "0x60011E8")]
		[Address(RVA = "0xA645F4", Offset = "0xA645F4", VA = "0xA645F4", Slot = "9")]
		protected override void SetCamera()
		{
		}

		[Token(Token = "0x60011E9")]
		[Address(RVA = "0xA646E4", Offset = "0xA646E4", VA = "0xA646E4", Slot = "14")]
		protected override void Move(float h, float v)
		{
		}

		[Token(Token = "0x60011EA")]
		[Address(RVA = "0xA648C0", Offset = "0xA648C0", VA = "0xA648C0")]
		private void CameraFollow()
		{
		}

		[Token(Token = "0x60011EB")]
		[Address(RVA = "0xA649FC", Offset = "0xA649FC", VA = "0xA649FC")]
		public OrthographicController()
		{
		}
	}
	[Token(Token = "0x20001F6")]
	public class ThirdPersonController : BaseController
	{
		[Token(Token = "0x40018D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float movingTurnSpeed;

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0xA64708", Offset = "0xA64708", VA = "0xA64708", Slot = "14")]
		protected override void Move(float h, float v)
		{
		}

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0xA64A10", Offset = "0xA64A10", VA = "0xA64A10")]
		public ThirdPersonController()
		{
		}
	}
	[Token(Token = "0x20001F7")]
	public class VoiceDemoUI : MonoBehaviour
	{
		[Token(Token = "0x200040E")]
		public delegate void OnDebugToggle(bool debugMode);

		[Token(Token = "0x40018DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text punState;

		[Token(Token = "0x40018DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text voiceState;

		[Token(Token = "0x40018DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PhotonVoiceNetwork punVoiceNetwork;

		[Token(Token = "0x40018DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Canvas canvas;

		[Token(Token = "0x40018DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button punSwitch;

		[Token(Token = "0x40018DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Text punSwitchText;

		[Token(Token = "0x40018E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Button voiceSwitch;

		[Token(Token = "0x40018E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Text voiceSwitchText;

		[Token(Token = "0x40018E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Button calibrateButton;

		[Token(Token = "0x40018E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Text calibrateText;

		[Token(Token = "0x40018E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Text voiceDebugText;

		[Token(Token = "0x40018E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Recorder recorder;

		[Token(Token = "0x40018E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject inGameSettings;

		[Token(Token = "0x40018E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject globalSettings;

		[Token(Token = "0x40018E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Text devicesInfoText;

		[Token(Token = "0x40018E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private GameObject debugGO;

		[Token(Token = "0x40018EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool debugMode;

		[Token(Token = "0x40018EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float volumeBeforeMute;

		[Token(Token = "0x40018EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private DebugLevel previousDebugLevel;

		[Token(Token = "0x40018EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		private int calibrationMilliSeconds;

		[Token(Token = "0x170001FE")]
		public bool DebugMode
		{
			[Token(Token = "0x60011EE")]
			[Address(RVA = "0xA64A20", Offset = "0xA64A20", VA = "0xA64A20")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011EF")]
			[Address(RVA = "0xA64A28", Offset = "0xA64A28", VA = "0xA64A28")]
			set
			{
			}
		}

		[Token(Token = "0x14000025")]
		public static event OnDebugToggle DebugToggled
		{
			[Token(Token = "0x60011F0")]
			[Address(RVA = "0xA63F9C", Offset = "0xA63F9C", VA = "0xA63F9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x804C28", Offset = "0x804C28")]
			add
			{
			}
			[Token(Token = "0x60011F1")]
			[Address(RVA = "0xA640F0", Offset = "0xA640F0", VA = "0xA640F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x804C38", Offset = "0x804C38")]
			remove
			{
			}
		}

		[Token(Token = "0x60011F2")]
		[Address(RVA = "0xA64D90", Offset = "0xA64D90", VA = "0xA64D90")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011F3")]
		[Address(RVA = "0xA64DFC", Offset = "0xA64DFC", VA = "0xA64DFC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0xA64FC0", Offset = "0xA64FC0", VA = "0xA64FC0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60011F5")]
		[Address(RVA = "0xA65184", Offset = "0xA65184", VA = "0xA65184")]
		private void CharacterInstantiation_CharacterInstantiated(GameObject character)
		{
		}

		[Token(Token = "0x60011F6")]
		[Address(RVA = "0xA65238", Offset = "0xA65238", VA = "0xA65238")]
		private void InitToggles(Toggle[] toggles)
		{
		}

		[Token(Token = "0x60011F7")]
		[Address(RVA = "0xA65598", Offset = "0xA65598", VA = "0xA65598")]
		private void BetterToggle_ToggleValueChanged(Toggle toggle)
		{
		}

		[Token(Token = "0x60011F8")]
		[Address(RVA = "0xA658D0", Offset = "0xA658D0", VA = "0xA658D0")]
		private void OnCameraChanged(Camera newCamera)
		{
		}

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0xA658EC", Offset = "0xA658EC", VA = "0xA658EC")]
		private void Start()
		{
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0xA65E54", Offset = "0xA65E54", VA = "0xA65E54")]
		private void PunSwitchOnClick()
		{
		}

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0xA65F5C", Offset = "0xA65F5C", VA = "0xA65F5C")]
		private void VoiceSwitchOnClick()
		{
		}

		[Token(Token = "0x60011FC")]
		[Address(RVA = "0xA65FF8", Offset = "0xA65FF8", VA = "0xA65FF8")]
		private void CalibrateButtonOnClick()
		{
		}

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0xA660A4", Offset = "0xA660A4", VA = "0xA660A4")]
		private void Update()
		{
		}

		[Token(Token = "0x60011FE")]
		[Address(RVA = "0xA662B8", Offset = "0xA662B8", VA = "0xA662B8")]
		private void PunClientStateChanged(ClientState fromState, ClientState toState)
		{
		}

		[Token(Token = "0x60011FF")]
		[Address(RVA = "0xA667D8", Offset = "0xA667D8", VA = "0xA667D8")]
		private void VoiceClientStateChanged(ClientState fromState, ClientState toState)
		{
		}

		[Token(Token = "0x6001200")]
		[Address(RVA = "0xA66420", Offset = "0xA66420", VA = "0xA66420")]
		private void UpdateUiBasedOnVoiceState(ClientState voiceClientState)
		{
		}

		[Token(Token = "0x6001201")]
		[Address(RVA = "0xA667E0", Offset = "0xA667E0", VA = "0xA667E0")]
		public VoiceDemoUI()
		{
		}
	}
}
namespace Photon.Voice.DemoVoiceUI
{
	[Token(Token = "0x20001F8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7F6C00", Offset = "0x7F6C00")]
	public class DemoVoiceUI : MonoBehaviour
	{
		[Token(Token = "0x40018EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text connectionStatusText;

		[Token(Token = "0x40018F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text serverStatusText;

		[Token(Token = "0x40018F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Text roomStatusText;

		[Token(Token = "0x40018F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Text inputWarningText;

		[Token(Token = "0x40018F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Text packetLossWarningText;

		[Token(Token = "0x40018F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private InputField localNicknameText;

		[Token(Token = "0x40018F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private WebRtcAudioDsp voiceAudioPreprocessor;

		[Token(Token = "0x40018F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Toggle debugEchoToggle;

		[Token(Token = "0x40018F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Toggle reliableTransmissionToggle;

		[Token(Token = "0x40018F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject webRtcDspGameObject;

		[Token(Token = "0x40018F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Toggle aecToggle;

		[Token(Token = "0x40018FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Toggle noiseSuppressionToggle;

		[Token(Token = "0x40018FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Toggle agcToggle;

		[Token(Token = "0x40018FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Toggle vadToggle;

		[Token(Token = "0x40018FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Toggle muteToggle;

		[Token(Token = "0x40018FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Toggle streamAudioClipToggle;

		[Token(Token = "0x40018FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Toggle dspToggle;

		[Token(Token = "0x4001900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Toggle photonVadToggle;

		[Token(Token = "0x4001901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Transform RemoteVoicesPanel;

		[Token(Token = "0x4001902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private VoiceConnection voiceConnection;

		[Token(Token = "0x4001903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private GameObject microphoneSetupGameObject;

		[Token(Token = "0x4001904")]
		protected internal const string MutePropKey = "mute";

		[Token(Token = "0x4001905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Color warningColor;

		[Token(Token = "0x4001906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Color okColor;

		[Token(Token = "0x6001202")]
		[Address(RVA = "0x9EBE80", Offset = "0x9EBE80", VA = "0x9EBE80")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001203")]
		[Address(RVA = "0x9EC348", Offset = "0x9EC348", VA = "0x9EC348")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001204")]
		[Address(RVA = "0x9EC480", Offset = "0x9EC480", VA = "0x9EC480")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001205")]
		[Address(RVA = "0x9EC518", Offset = "0x9EC518", VA = "0x9EC518")]
		private void OnSpeakerCreated(Speaker speaker)
		{
		}

		[Token(Token = "0x6001206")]
		[Address(RVA = "0x9EC608", Offset = "0x9EC608", VA = "0x9EC608")]
		private void OnRemoteVoiceRemove(Speaker speaker)
		{
		}

		[Token(Token = "0x6001207")]
		[Address(RVA = "0x9EC6C8", Offset = "0x9EC6C8", VA = "0x9EC6C8")]
		public void ToggleMute()
		{
		}

		[Token(Token = "0x6001208")]
		[Address(RVA = "0x9EC7E8", Offset = "0x9EC7E8", VA = "0x9EC7E8")]
		public void ToggleDebugEcho()
		{
		}

		[Token(Token = "0x6001209")]
		[Address(RVA = "0x9EC834", Offset = "0x9EC834", VA = "0x9EC834")]
		public void ToggleReliable()
		{
		}

		[Token(Token = "0x600120A")]
		[Address(RVA = "0x9EC880", Offset = "0x9EC880", VA = "0x9EC880")]
		public void ToggleAEC()
		{
		}

		[Token(Token = "0x600120B")]
		[Address(RVA = "0x9EC8B0", Offset = "0x9EC8B0", VA = "0x9EC8B0")]
		public void ToggleNoiseSuppression()
		{
		}

		[Token(Token = "0x600120C")]
		[Address(RVA = "0x9EC8E0", Offset = "0x9EC8E0", VA = "0x9EC8E0")]
		public void ToggleAGC()
		{
		}

		[Token(Token = "0x600120D")]
		[Address(RVA = "0x9EC910", Offset = "0x9EC910", VA = "0x9EC910")]
		public void ToggleVAD()
		{
		}

		[Token(Token = "0x600120E")]
		[Address(RVA = "0x9EC940", Offset = "0x9EC940", VA = "0x9EC940")]
		public void ToggleDsp()
		{
		}

		[Token(Token = "0x600120F")]
		[Address(RVA = "0x9EC9A0", Offset = "0x9EC9A0", VA = "0x9EC9A0")]
		public void ToggleAudioClipStreaming()
		{
		}

		[Token(Token = "0x6001210")]
		[Address(RVA = "0x9ECA60", Offset = "0x9ECA60", VA = "0x9ECA60")]
		public void TogglePhotonVAD()
		{
		}

		[Token(Token = "0x6001211")]
		[Address(RVA = "0x9ECAAC", Offset = "0x9ECAAC", VA = "0x9ECAAC")]
		public void UpdateSyncedNickname(string nickname)
		{
		}

		[Token(Token = "0x6001212")]
		[Address(RVA = "0x9ECB6C", Offset = "0x9ECB6C", VA = "0x9ECB6C")]
		public void JoinOrCreateRoom(string roomname)
		{
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0x9ECCE8", Offset = "0x9ECCE8", VA = "0x9ECCE8")]
		protected void Update()
		{
		}

		[Token(Token = "0x6001214")]
		[Address(RVA = "0x9EBEDC", Offset = "0x9EBEDC", VA = "0x9EBEDC")]
		private void InitToggles()
		{
		}

		[Token(Token = "0x6001215")]
		[Address(RVA = "0x9ED274", Offset = "0x9ED274", VA = "0x9ED274")]
		public DemoVoiceUI()
		{
		}
	}
	[Token(Token = "0x20001F9")]
	public struct MicRef
	{
		[Token(Token = "0x4001907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Recorder.MicType MicType;

		[Token(Token = "0x4001908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string Name;

		[Token(Token = "0x4001909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int PhotonId;

		[Token(Token = "0x6001216")]
		[Address(RVA = "0x885DC4", Offset = "0x885DC4", VA = "0x885DC4")]
		public MicRef(string name, int id)
		{
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0x885DD8", Offset = "0x885DD8", VA = "0x885DD8")]
		public MicRef(string name)
		{
		}

		[Token(Token = "0x6001218")]
		[Address(RVA = "0x885DEC", Offset = "0x885DEC", VA = "0x885DEC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20001FA")]
	public class MicrophoneDropdownFiller : MonoBehaviour
	{
		[Token(Token = "0x400190A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Recorder recorder;

		[Token(Token = "0x400190B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Dropdown micDropdown;

		[Token(Token = "0x400190C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<MicRef> micOptions;

		[Token(Token = "0x400190D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x800DC4", Offset = "0x800DC4")]
		private GameObject refreshButton;

		[Token(Token = "0x400190E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x800E10", Offset = "0x800E10")]
		private GameObject toggleButton;

		[Token(Token = "0x400190F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Toggle photonToggle;

		[Token(Token = "0x6001219")]
		[Address(RVA = "0x9ED3A8", Offset = "0x9ED3A8", VA = "0x9ED3A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600121A")]
		[Address(RVA = "0x9ED438", Offset = "0x9ED438", VA = "0x9ED438")]
		private void SetupMicDropdown()
		{
		}

		[Token(Token = "0x600121B")]
		[Address(RVA = "0x9ED644", Offset = "0x9ED644", VA = "0x9ED644")]
		private void MicDropdownValueChanged(MicRef mic)
		{
		}

		[Token(Token = "0x600121C")]
		[Address(RVA = "0x9ED6D8", Offset = "0x9ED6D8", VA = "0x9ED6D8")]
		private void SetCurrentValue()
		{
		}

		[Token(Token = "0x600121D")]
		[Address(RVA = "0x9EDA50", Offset = "0x9EDA50", VA = "0x9EDA50")]
		public void PhotonMicToggled(bool on)
		{
		}

		[Token(Token = "0x600121E")]
		[Address(RVA = "0x9ED414", Offset = "0x9ED414", VA = "0x9ED414")]
		public void RefreshMicrophones()
		{
		}

		[Token(Token = "0x600121F")]
		[Address(RVA = "0x9EDAFC", Offset = "0x9EDAFC", VA = "0x9EDAFC")]
		private void PhotonVoiceCreated()
		{
		}

		[Token(Token = "0x6001220")]
		[Address(RVA = "0x9EDB20", Offset = "0x9EDB20", VA = "0x9EDB20")]
		public MicrophoneDropdownFiller()
		{
		}

		[Token(Token = "0x6001221")]
		[Address(RVA = "0x9EDB28", Offset = "0x9EDB28", VA = "0x9EDB28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x804C48", Offset = "0x804C48")]
		private void <SetupMicDropdown>b__7_0(int <p0>)
		{
		}
	}
	[Token(Token = "0x20001FB")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7F6C64", Offset = "0x7F6C64")]
	public class RemoteSpeakerUI : MonoBehaviour
	{
		[Token(Token = "0x4001910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text nameText;

		[Token(Token = "0x4001911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image remoteIsMuting;

		[Token(Token = "0x4001912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image remoteIsTalking;

		[Token(Token = "0x6001222")]
		[Address(RVA = "0x9EDBD0", Offset = "0x9EDBD0", VA = "0x9EDBD0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001223")]
		[Address(RVA = "0x9EDC28", Offset = "0x9EDC28", VA = "0x9EDC28")]
		private void Update()
		{
		}

		[Token(Token = "0x6001224")]
		[Address(RVA = "0x9EDE84", Offset = "0x9EDE84", VA = "0x9EDE84")]
		public RemoteSpeakerUI()
		{
		}
	}
}
namespace Photon.Realtime.Demo
{
	[Token(Token = "0x20001FC")]
	public class ConnectAndJoinRandomLb : MonoBehaviour, IConnectionCallbacks, IMatchmakingCallbacks, ILobbyCallbacks
	{
		[Token(Token = "0x4001913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AppSettings appSettings;

		[Token(Token = "0x4001914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LoadBalancingClient lbc;

		[Token(Token = "0x4001915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ConnectionHandler ch;

		[Token(Token = "0x4001916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text StateUiText;

		[Token(Token = "0x6001225")]
		[Address(RVA = "0x9EB704", Offset = "0x9EB704", VA = "0x9EB704")]
		public void Start()
		{
		}

		[Token(Token = "0x6001226")]
		[Address(RVA = "0x9EB86C", Offset = "0x9EB86C", VA = "0x9EB86C")]
		public void Update()
		{
		}

		[Token(Token = "0x6001227")]
		[Address(RVA = "0x9EB9B4", Offset = "0x9EB9B4", VA = "0x9EB9B4", Slot = "4")]
		public void OnConnected()
		{
		}

		[Token(Token = "0x6001228")]
		[Address(RVA = "0x9EB9B8", Offset = "0x9EB9B8", VA = "0x9EB9B8", Slot = "5")]
		public void OnConnectedToMaster()
		{
		}

		[Token(Token = "0x6001229")]
		[Address(RVA = "0x9EBA40", Offset = "0x9EBA40", VA = "0x9EBA40", Slot = "6")]
		public void OnDisconnected(DisconnectCause cause)
		{
		}

		[Token(Token = "0x600122A")]
		[Address(RVA = "0x9EBAFC", Offset = "0x9EBAFC", VA = "0x9EBAFC", Slot = "8")]
		public void OnCustomAuthenticationResponse(Dictionary<string, object> data)
		{
		}

		[Token(Token = "0x600122B")]
		[Address(RVA = "0x9EBB00", Offset = "0x9EBB00", VA = "0x9EBB00", Slot = "9")]
		public void OnCustomAuthenticationFailed(string debugMessage)
		{
		}

		[Token(Token = "0x600122C")]
		[Address(RVA = "0x9EBB04", Offset = "0x9EBB04", VA = "0x9EBB04", Slot = "7")]
		public void OnRegionListReceived(RegionHandler regionHandler)
		{
		}

		[Token(Token = "0x600122D")]
		[Address(RVA = "0x9EBBD4", Offset = "0x9EBBD4", VA = "0x9EBBD4", Slot = "19")]
		public void OnRoomListUpdate(List<RoomInfo> roomList)
		{
		}

		[Token(Token = "0x600122E")]
		[Address(RVA = "0x9EBBD8", Offset = "0x9EBBD8", VA = "0x9EBBD8", Slot = "20")]
		public void OnLobbyStatisticsUpdate(List<TypedLobbyInfo> lobbyStatistics)
		{
		}

		[Token(Token = "0x600122F")]
		[Address(RVA = "0x9EBBDC", Offset = "0x9EBBDC", VA = "0x9EBBDC", Slot = "17")]
		public void OnJoinedLobby()
		{
		}

		[Token(Token = "0x6001230")]
		[Address(RVA = "0x9EBBE0", Offset = "0x9EBBE0", VA = "0x9EBBE0", Slot = "18")]
		public void OnLeftLobby()
		{
		}

		[Token(Token = "0x6001231")]
		[Address(RVA = "0x9EBBE4", Offset = "0x9EBBE4", VA = "0x9EBBE4", Slot = "10")]
		public void OnFriendListUpdate(List<FriendInfo> friendList)
		{
		}

		[Token(Token = "0x6001232")]
		[Address(RVA = "0x9EBBE8", Offset = "0x9EBBE8", VA = "0x9EBBE8", Slot = "11")]
		public void OnCreatedRoom()
		{
		}

		[Token(Token = "0x6001233")]
		[Address(RVA = "0x9EBBEC", Offset = "0x9EBBEC", VA = "0x9EBBEC", Slot = "12")]
		public void OnCreateRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6001234")]
		[Address(RVA = "0x9EBBF0", Offset = "0x9EBBF0", VA = "0x9EBBF0", Slot = "13")]
		public void OnJoinedRoom()
		{
		}

		[Token(Token = "0x6001235")]
		[Address(RVA = "0x9EBC5C", Offset = "0x9EBC5C", VA = "0x9EBC5C", Slot = "14")]
		public void OnJoinRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6001236")]
		[Address(RVA = "0x9EBC60", Offset = "0x9EBC60", VA = "0x9EBC60", Slot = "15")]
		public void OnJoinRandomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6001237")]
		[Address(RVA = "0x9EBD0C", Offset = "0x9EBD0C", VA = "0x9EBD0C", Slot = "16")]
		public void OnLeftRoom()
		{
		}

		[Token(Token = "0x6001238")]
		[Address(RVA = "0x9EBD10", Offset = "0x9EBD10", VA = "0x9EBD10")]
		private void OnRegionPingCompleted(RegionHandler regionHandler)
		{
		}

		[Token(Token = "0x6001239")]
		[Address(RVA = "0x9EBE18", Offset = "0x9EBE18", VA = "0x9EBE18")]
		public ConnectAndJoinRandomLb()
		{
		}
	}
}
namespace Photon.Chat.UtilityScripts
{
	[Token(Token = "0x20001FD")]
	public class EventSystemSpawner : MonoBehaviour
	{
		[Token(Token = "0x600123A")]
		[Address(RVA = "0x9EAFDC", Offset = "0x9EAFDC", VA = "0x9EAFDC")]
		private void Start()
		{
		}

		[Token(Token = "0x600123B")]
		[Address(RVA = "0x9EB0BC", Offset = "0x9EB0BC", VA = "0x9EB0BC")]
		public EventSystemSpawner()
		{
		}
	}
	[Token(Token = "0x20001FE")]
	public class OnStartDelete : MonoBehaviour
	{
		[Token(Token = "0x600123C")]
		[Address(RVA = "0x9EB0C4", Offset = "0x9EB0C4", VA = "0x9EB0C4")]
		private void Start()
		{
		}

		[Token(Token = "0x600123D")]
		[Address(RVA = "0x9EB140", Offset = "0x9EB140", VA = "0x9EB140")]
		public OnStartDelete()
		{
		}
	}
	[Token(Token = "0x20001FF")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7F6CC8", Offset = "0x7F6CC8")]
	public class TextButtonTransition : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4001917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Text _text;

		[Token(Token = "0x4001918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Selectable Selectable;

		[Token(Token = "0x4001919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color NormalColor;

		[Token(Token = "0x400191A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color HoverColor;

		[Token(Token = "0x600123E")]
		[Address(RVA = "0x9EB148", Offset = "0x9EB148", VA = "0x9EB148")]
		public void Awake()
		{
		}

		[Token(Token = "0x600123F")]
		[Address(RVA = "0x9EB1A0", Offset = "0x9EB1A0", VA = "0x9EB1A0")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001240")]
		[Address(RVA = "0x9EB1D0", Offset = "0x9EB1D0", VA = "0x9EB1D0")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001241")]
		[Address(RVA = "0x9EB200", Offset = "0x9EB200", VA = "0x9EB200", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0x9EB2C0", Offset = "0x9EB2C0", VA = "0x9EB2C0", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001243")]
		[Address(RVA = "0x9EB380", Offset = "0x9EB380", VA = "0x9EB380")]
		public TextButtonTransition()
		{
		}
	}
	[Token(Token = "0x2000200")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7F6D2C", Offset = "0x7F6D2C")]
	public class TextToggleIsOnTransition : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x400191B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle toggle;

		[Token(Token = "0x400191C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text _text;

		[Token(Token = "0x400191D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color NormalOnColor;

		[Token(Token = "0x400191E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color NormalOffColor;

		[Token(Token = "0x400191F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color HoverOnColor;

		[Token(Token = "0x4001920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Color HoverOffColor;

		[Token(Token = "0x4001921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool isHover;

		[Token(Token = "0x6001244")]
		[Address(RVA = "0x9EB3C4", Offset = "0x9EB3C4", VA = "0x9EB3C4")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0x9EB4FC", Offset = "0x9EB4FC", VA = "0x9EB4FC")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0x9EB498", Offset = "0x9EB498", VA = "0x9EB498")]
		public void OnValueChanged(bool isOn)
		{
		}

		[Token(Token = "0x6001247")]
		[Address(RVA = "0x9EB5A4", Offset = "0x9EB5A4", VA = "0x9EB5A4", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0x9EB624", Offset = "0x9EB624", VA = "0x9EB624", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001249")]
		[Address(RVA = "0x9EB6A0", Offset = "0x9EB6A0", VA = "0x9EB6A0")]
		public TextToggleIsOnTransition()
		{
		}
	}
}
namespace LIV.SDK.Unity
{
	[Token(Token = "0x2000201")]
	public static class Calibration
	{
		[Serializable]
		[Token(Token = "0x200040F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9C00", Offset = "0x7F9C00")]
		private sealed class <>c
		{
			[Token(Token = "0x40026C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x6001AB9")]
			[Address(RVA = "0x9ADEE0", Offset = "0x9ADEE0", VA = "0x9ADEE0")]
			public <>c()
			{
			}

			[Token(Token = "0x6001ABA")]
			[Address(RVA = "0x9ADEE8", Offset = "0x9ADEE8", VA = "0x9ADEE8")]
			internal void <.cctor>b__20_0(object o, FileSystemEventArgs e)
			{
			}
		}

		[Token(Token = "0x4001922")]
		private const string ConfigFileName = "externalcamera.cfg";

		[Token(Token = "0x4001924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static float X;

		[Token(Token = "0x4001925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static float Y;

		[Token(Token = "0x4001926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static float Z;

		[Token(Token = "0x4001927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static float Yaw;

		[Token(Token = "0x4001928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static float Pitch;

		[Token(Token = "0x4001929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static float Roll;

		[Token(Token = "0x400192A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static float FieldOfVision;

		[Token(Token = "0x400192B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static float NearClip;

		[Token(Token = "0x400192C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static float FarClip;

		[Token(Token = "0x400192D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public static float HMDOffset;

		[Token(Token = "0x400192E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static float NearOffset;

		[Token(Token = "0x400192F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static readonly FileSystemWatcher ConfigWatcher;

		[Token(Token = "0x170001FF")]
		public static Vector3 PositionOffset
		{
			[Token(Token = "0x600124C")]
			[Address(RVA = "0x9AD240", Offset = "0x9AD240", VA = "0x9AD240")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000200")]
		public static Quaternion RotationOffset
		{
			[Token(Token = "0x600124D")]
			[Address(RVA = "0x9AD2D0", Offset = "0x9AD2D0", VA = "0x9AD2D0")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x14000026")]
		public static event EventHandler Changed
		{
			[Token(Token = "0x600124A")]
			[Address(RVA = "0x9AD068", Offset = "0x9AD068", VA = "0x9AD068")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x804C58", Offset = "0x804C58")]
			add
			{
			}
			[Token(Token = "0x600124B")]
			[Address(RVA = "0x9AD154", Offset = "0x9AD154", VA = "0x9AD154")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x804C68", Offset = "0x804C68")]
			remove
			{
			}
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0x9AD37C", Offset = "0x9AD37C", VA = "0x9AD37C")]
		static Calibration()
		{
		}

		[Token(Token = "0x600124F")]
		[Address(RVA = "0x9ADD2C", Offset = "0x9ADD2C", VA = "0x9ADD2C")]
		private static void Reset()
		{
		}

		[Token(Token = "0x6001250")]
		[Address(RVA = "0x9AD5BC", Offset = "0x9AD5BC", VA = "0x9AD5BC")]
		public static void Read()
		{
		}

		[Token(Token = "0x6001251")]
		[Address(RVA = "0x9ADDF4", Offset = "0x9ADDF4", VA = "0x9ADDF4")]
		private static bool TryParseInvariantFloat(string number, out float result)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000202")]
	public static class Extensions
	{
		[Token(Token = "0x6001252")]
		[Address(RVA = "0x9ADF44", Offset = "0x9ADF44", VA = "0x9ADF44")]
		private static float _copysign(float sizeval, float signval)
		{
			return default(float);
		}

		[Token(Token = "0x6001253")]
		[Address(RVA = "0x9AE000", Offset = "0x9AE000", VA = "0x9AE000")]
		public static Quaternion GetRotation(this Matrix4x4 matrix)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001254")]
		[Address(RVA = "0x9AE1CC", Offset = "0x9AE1CC", VA = "0x9AE1CC")]
		public static Vector3 GetPosition(this Matrix4x4 matrix)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x2000203")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7F6DA0", Offset = "0x7F6DA0")]
	public class ExternalCamera : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000410")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9C10", Offset = "0x7F9C10")]
		private sealed class <>c
		{
			[Token(Token = "0x40026C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40026C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<TrackedDevicePose_t, int, <>f__AnonymousType0<TrackedDevicePose_t, uint>> <>9__17_0;

			[Token(Token = "0x40026C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<<>f__AnonymousType0<TrackedDevicePose_t, uint>, bool> <>9__17_1;

			[Token(Token = "0x40026C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<<>f__AnonymousType0<TrackedDevicePose_t, uint>, <>f__AnonymousType1<TrackedDevicePose_t, uint, ETrackedDeviceClass>> <>9__17_2;

			[Token(Token = "0x40026C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<<>f__AnonymousType1<TrackedDevicePose_t, uint, ETrackedDeviceClass>, bool> <>9__17_3;

			[Token(Token = "0x40026C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<<>f__AnonymousType1<TrackedDevicePose_t, uint, ETrackedDeviceClass>, <>f__AnonymousType2<TrackedDevicePose_t, uint, ETrackedDeviceClass, ETrackedControllerRole, string, string>> <>9__17_4;

			[Token(Token = "0x40026CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<<>f__AnonymousType2<TrackedDevicePose_t, uint, ETrackedDeviceClass, ETrackedControllerRole, string, string>, int> <>9__17_5;

			[Token(Token = "0x6001ABC")]
			[Address(RVA = "0x9AEE14", Offset = "0x9AEE14", VA = "0x9AEE14")]
			public <>c()
			{
			}

			[Token(Token = "0x6001ABD")]
			[Address(RVA = "0x9AEE1C", Offset = "0x9AEE1C", VA = "0x9AEE1C")]
			internal <>f__AnonymousType0<TrackedDevicePose_t, uint> <IdentifyExternalCameraDevice>b__17_0(TrackedDevicePose_t pose, int index)
			{
				return null;
			}

			[Token(Token = "0x6001ABE")]
			[Address(RVA = "0x9AEEC8", Offset = "0x9AEEC8", VA = "0x9AEEC8")]
			internal bool <IdentifyExternalCameraDevice>b__17_1(<>f__AnonymousType0<TrackedDevicePose_t, uint> candidate)
			{
				return default(bool);
			}

			[Token(Token = "0x6001ABF")]
			[Address(RVA = "0x9AEF20", Offset = "0x9AEF20", VA = "0x9AEF20")]
			internal <>f__AnonymousType1<TrackedDevicePose_t, uint, ETrackedDeviceClass> <IdentifyExternalCameraDevice>b__17_2(<>f__AnonymousType0<TrackedDevicePose_t, uint> candidate)
			{
				return null;
			}

			[Token(Token = "0x6001AC0")]
			[Address(RVA = "0x9AF01C", Offset = "0x9AF01C", VA = "0x9AF01C")]
			internal bool <IdentifyExternalCameraDevice>b__17_3(<>f__AnonymousType1<TrackedDevicePose_t, uint, ETrackedDeviceClass> candidate)
			{
				return default(bool);
			}

			[Token(Token = "0x6001AC1")]
			[Address(RVA = "0x9AF078", Offset = "0x9AF078", VA = "0x9AF078")]
			internal <>f__AnonymousType2<TrackedDevicePose_t, uint, ETrackedDeviceClass, ETrackedControllerRole, string, string> <IdentifyExternalCameraDevice>b__17_4(<>f__AnonymousType1<TrackedDevicePose_t, uint, ETrackedDeviceClass> candidate)
			{
				return null;
			}

			[Token(Token = "0x6001AC2")]
			[Address(RVA = "0x9AF1B8", Offset = "0x9AF1B8", VA = "0x9AF1B8")]
			internal int <IdentifyExternalCameraDevice>b__17_5(<>f__AnonymousType2<TrackedDevicePose_t, uint, ETrackedDeviceClass, ETrackedControllerRole, string, string> candidate)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4001930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x800EAC", Offset = "0x800EAC")]
		private uint <OpenVRTrackedDeviceId>k__BackingField;

		[Token(Token = "0x4001931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private TrackedDevicePose_t _trackedDevicePose;

		[Token(Token = "0x4001932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private TrackedDevicePose_t[] _devices;

		[Token(Token = "0x4001933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private TrackedDevicePose_t[] _gameDevices;

		[Token(Token = "0x17000201")]
		public bool IsValid
		{
			[Token(Token = "0x6001255")]
			[Address(RVA = "0x9AE208", Offset = "0x9AE208", VA = "0x9AE208")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000202")]
		public uint OpenVRTrackedDeviceId
		{
			[Token(Token = "0x6001256")]
			[Address(RVA = "0x9AE218", Offset = "0x9AE218", VA = "0x9AE218")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x804C98", Offset = "0x804C98")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6001257")]
			[Address(RVA = "0x9AE220", Offset = "0x9AE220", VA = "0x9AE220")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x804CA8", Offset = "0x804CA8")]
			protected set
			{
			}
		}

		[Token(Token = "0x6001258")]
		[Address(RVA = "0x9AE228", Offset = "0x9AE228", VA = "0x9AE228")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001259")]
		[Address(RVA = "0x9AE2B8", Offset = "0x9AE2B8", VA = "0x9AE2B8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600125A")]
		[Address(RVA = "0x9AE30C", Offset = "0x9AE30C", VA = "0x9AE30C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600125B")]
		[Address(RVA = "0x9AE394", Offset = "0x9AE394", VA = "0x9AE394")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x600125C")]
		[Address(RVA = "0x9AE310", Offset = "0x9AE310", VA = "0x9AE310")]
		private void UpdateCamera()
		{
		}

		[Token(Token = "0x600125D")]
		[Address(RVA = "0x9AE398", Offset = "0x9AE398", VA = "0x9AE398")]
		private void UpdateOpenVRPose()
		{
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0x9AE460", Offset = "0x9AE460", VA = "0x9AE460")]
		private void UpdateTransform(HmdMatrix34_t deviceToAbsolute)
		{
		}

		[Token(Token = "0x600125F")]
		[Address(RVA = "0x9AE294", Offset = "0x9AE294", VA = "0x9AE294")]
		private void UpdateOpenVRDevice()
		{
		}

		[Token(Token = "0x6001260")]
		[Address(RVA = "0x9AE6B4", Offset = "0x9AE6B4", VA = "0x9AE6B4")]
		private uint IdentifyExternalCameraDevice()
		{
			return default(uint);
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0x9AEBD8", Offset = "0x9AEBD8", VA = "0x9AEBD8")]
		private static string GetStringTrackedDeviceProperty(uint device, ETrackedDeviceProperty property)
		{
			return null;
		}

		[Token(Token = "0x6001262")]
		[Address(RVA = "0x9AED40", Offset = "0x9AED40", VA = "0x9AED40")]
		public ExternalCamera()
		{
		}
	}
	[Token(Token = "0x2000204")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x7F6DD8", Offset = "0x7F6DD8")]
	public class HelpAttribute : PropertyAttribute
	{
		[Token(Token = "0x4001934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string text;

		[Token(Token = "0x6001263")]
		[Address(RVA = "0x9AF2B4", Offset = "0x9AF2B4", VA = "0x9AF2B4")]
		public HelpAttribute(string text)
		{
		}
	}
	[Token(Token = "0x2000205")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7F6E10", Offset = "0x7F6E10")]
	public class LIV : MonoBehaviour
	{
		[Token(Token = "0x4001935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x800EBC", Offset = "0x800EBC")]
		public Transform TrackedSpaceOrigin;

		[Token(Token = "0x4001936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x800EF4", Offset = "0x800EF4")]
		public Camera HMDCamera;

		[Token(Token = "0x4001937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x800F04", Offset = "0x800F04")]
		public bool DisableStandardAssets;

		[Token(Token = "0x4001938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x800F14", Offset = "0x800F14")]
		public LayerMask SpectatorLayerMask;

		[Token(Token = "0x4001939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected bool WasActive;

		[Token(Token = "0x400193A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SharedTextureProtocol _sharedTextureProtocol;

		[Token(Token = "0x400193B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ExternalCamera _externalCamera;

		[Token(Token = "0x400193C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private MixedRealityRender _mixedRealityRender;

		[Token(Token = "0x400193D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _wasSteamVRExternalCameraActive;

		[Token(Token = "0x17000203")]
		public Transform Origin
		{
			[Token(Token = "0x6001264")]
			[Address(RVA = "0x9AF2E0", Offset = "0x9AF2E0", VA = "0x9AF2E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001265")]
		[Address(RVA = "0x9AF380", Offset = "0x9AF380", VA = "0x9AF380")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001266")]
		[Address(RVA = "0x9AF648", Offset = "0x9AF648", VA = "0x9AF648")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001267")]
		[Address(RVA = "0x9AF82C", Offset = "0x9AF82C", VA = "0x9AF82C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001268")]
		[Address(RVA = "0x9AF884", Offset = "0x9AF884", VA = "0x9AF884")]
		private void OnCompositorActivated()
		{
		}

		[Token(Token = "0x6001269")]
		[Address(RVA = "0x9AF6D4", Offset = "0x9AF6D4", VA = "0x9AF6D4")]
		private void OnCompositorDeactivated()
		{
		}

		[Token(Token = "0x600126A")]
		[Address(RVA = "0x9AFA00", Offset = "0x9AFA00", VA = "0x9AFA00")]
		private void CreateSharedTextureProtocol()
		{
		}

		[Token(Token = "0x600126B")]
		[Address(RVA = "0x9AFEE4", Offset = "0x9AFEE4", VA = "0x9AFEE4")]
		private void DestroySharedTextureProtocol()
		{
		}

		[Token(Token = "0x600126C")]
		[Address(RVA = "0x9AFA68", Offset = "0x9AFA68", VA = "0x9AFA68")]
		private void CreateExternalCamera()
		{
		}

		[Token(Token = "0x600126D")]
		[Address(RVA = "0x9B0054", Offset = "0x9B0054", VA = "0x9B0054")]
		private void DestroyExternalCamera()
		{
		}

		[Token(Token = "0x600126E")]
		[Address(RVA = "0x9AFB28", Offset = "0x9AFB28", VA = "0x9AFB28")]
		private void CreateMixedRealityRender()
		{
		}

		[Token(Token = "0x600126F")]
		[Address(RVA = "0x9AFF90", Offset = "0x9AFF90", VA = "0x9AFF90")]
		private void DestroyMixedRealityRender()
		{
		}

		[Token(Token = "0x6001270")]
		[Address(RVA = "0x9B02A8", Offset = "0x9B02A8", VA = "0x9B02A8")]
		public LIV()
		{
		}
	}
	[Token(Token = "0x2000206")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7F6E48", Offset = "0x7F6E48")]
	public class MixedRealityRender : MonoBehaviour
	{
		[Token(Token = "0x2000411")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9C20", Offset = "0x7F9C20")]
		private sealed class <RenderLoop>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40026CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40026CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40026CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MixedRealityRender <>4__this;

			[Token(Token = "0x17000379")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001AC6")]
				[Address(RVA = "0x9B1508", Offset = "0x9B1508", VA = "0x9B1508", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700037A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001AC8")]
				[Address(RVA = "0x9B1574", Offset = "0x9B1574", VA = "0x9B1574", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001AC3")]
			[Address(RVA = "0x9B13CC", Offset = "0x9B13CC", VA = "0x9B13CC")]
			[DebuggerHidden]
			public <RenderLoop>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x6001AC4")]
			[Address(RVA = "0x9B1400", Offset = "0x9B1400", VA = "0x9B1400", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001AC5")]
			[Address(RVA = "0x9B1404", Offset = "0x9B1404", VA = "0x9B1404", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001AC7")]
			[Address(RVA = "0x9B1510", Offset = "0x9B1510", VA = "0x9B1510", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400193E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _isSetup;

		[Token(Token = "0x400193F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LIV _liv;

		[Token(Token = "0x4001940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Camera _mrCamera;

		[Token(Token = "0x4001941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _hmd;

		[Token(Token = "0x4001942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject _clipQuad;

		[Token(Token = "0x4001943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _clipMaterial;

		[Token(Token = "0x4001944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _blitMaterial;

		[Token(Token = "0x4001945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RenderTexture _compositeTexture;

		[Token(Token = "0x4001946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RenderTexture _foregroundTexture;

		[Token(Token = "0x4001947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private RenderTexture _backgroundTexture;

		[Token(Token = "0x6001271")]
		[Address(RVA = "0x9B0118", Offset = "0x9B0118", VA = "0x9B0118")]
		public void Setup(LIV liv)
		{
		}

		[Token(Token = "0x6001272")]
		[Address(RVA = "0x9B02DC", Offset = "0x9B02DC", VA = "0x9B02DC")]
		private void CreateClipQuad()
		{
		}

		[Token(Token = "0x6001273")]
		[Address(RVA = "0x9B04E0", Offset = "0x9B04E0", VA = "0x9B04E0")]
		private void UpdateCamera()
		{
		}

		[Token(Token = "0x6001274")]
		[Address(RVA = "0x9B0680", Offset = "0x9B0680", VA = "0x9B0680")]
		private void UpdateTextures()
		{
		}

		[Token(Token = "0x6001275")]
		[Address(RVA = "0x9B0974", Offset = "0x9B0974", VA = "0x9B0974")]
		public float GetDistanceToHMD()
		{
			return default(float);
		}

		[Token(Token = "0x6001276")]
		[Address(RVA = "0x9B0C38", Offset = "0x9B0C38", VA = "0x9B0C38")]
		private void OrientClipQuad()
		{
		}

		[Token(Token = "0x6001277")]
		[Address(RVA = "0x9B0EBC", Offset = "0x9B0EBC", VA = "0x9B0EBC")]
		private void RenderNear()
		{
		}

		[Token(Token = "0x6001278")]
		[Address(RVA = "0x9B11AC", Offset = "0x9B11AC", VA = "0x9B11AC")]
		private void RenderFar()
		{
		}

		[Token(Token = "0x6001279")]
		[Address(RVA = "0x9B1204", Offset = "0x9B1204", VA = "0x9B1204")]
		private void Composite()
		{
		}

		[Token(Token = "0x600127A")]
		[Address(RVA = "0x9B132C", Offset = "0x9B132C", VA = "0x9B132C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600127B")]
		[Address(RVA = "0x9B1358", Offset = "0x9B1358", VA = "0x9B1358")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x804CB8", Offset = "0x804CB8")]
		private IEnumerator RenderLoop()
		{
			return null;
		}

		[Token(Token = "0x600127C")]
		[Address(RVA = "0x9B13F8", Offset = "0x9B13F8", VA = "0x9B13F8")]
		public MixedRealityRender()
		{
		}
	}
	[Token(Token = "0x2000207")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7F6E80", Offset = "0x7F6E80")]
	public class SharedTextureProtocol : MonoBehaviour
	{
		[Token(Token = "0x2000412")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7F9C30", Offset = "0x7F9C30")]
		private sealed class <CallPluginAtEndOfFrames>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40026CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40026CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40026D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SharedTextureProtocol <>4__this;

			[Token(Token = "0x1700037B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001ACC")]
				[Address(RVA = "0x9B1A1C", Offset = "0x9B1A1C", VA = "0x9B1A1C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700037C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001ACE")]
				[Address(RVA = "0x9B1A88", Offset = "0x9B1A88", VA = "0x9B1A88", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001AC9")]
			[Address(RVA = "0x9B18DC", Offset = "0x9B18DC", VA = "0x9B18DC")]
			[DebuggerHidden]
			public <CallPluginAtEndOfFrames>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001ACA")]
			[Address(RVA = "0x9B1950", Offset = "0x9B1950", VA = "0x9B1950", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001ACB")]
			[Address(RVA = "0x9B1954", Offset = "0x9B1954", VA = "0x9B1954", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001ACD")]
			[Address(RVA = "0x9B1A24", Offset = "0x9B1A24", VA = "0x9B1A24", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x17000204")]
		public static bool IsActive
		{
			[Token(Token = "0x6001282")]
			[Address(RVA = "0x9AF880", Offset = "0x9AF880", VA = "0x9AF880")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000205")]
		public static int TextureWidth
		{
			[Token(Token = "0x6001283")]
			[Address(RVA = "0x9B096C", Offset = "0x9B096C", VA = "0x9B096C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000206")]
		public static int TextureHeight
		{
			[Token(Token = "0x6001284")]
			[Address(RVA = "0x9B0970", Offset = "0x9B0970", VA = "0x9B0970")]
			get
			{
				return default(int);
			}
		}

		[PreserveSig]
		[Token(Token = "0x600127D")]
		[Address(RVA = "0x9B157C", Offset = "0x9B157C", VA = "0x9B157C")]
		private static extern IntPtr GetRenderEventFunc();

		[PreserveSig]
		[Token(Token = "0x600127E")]
		[Address(RVA = "0x9B1604", Offset = "0x9B1604", VA = "0x9B1604")]
		private static extern bool GetIsCaptureActive();

		[PreserveSig]
		[Token(Token = "0x600127F")]
		[Address(RVA = "0x9B1694", Offset = "0x9B1694", VA = "0x9B1694")]
		private static extern int GetTextureWidth();

		[PreserveSig]
		[Token(Token = "0x6001280")]
		[Address(RVA = "0x9B171C", Offset = "0x9B171C", VA = "0x9B171C")]
		private static extern int GetTextureHeight();

		[PreserveSig]
		[Token(Token = "0x6001281")]
		[Address(RVA = "0x9B17A4", Offset = "0x9B17A4", VA = "0x9B17A4")]
		private static extern void SetTexture(IntPtr texture);

		[Token(Token = "0x6001285")]
		[Address(RVA = "0x9B12E4", Offset = "0x9B12E4", VA = "0x9B12E4")]
		public static void SetOutputTexture(Texture texture)
		{
		}

		[Token(Token = "0x6001286")]
		[Address(RVA = "0x9B183C", Offset = "0x9B183C", VA = "0x9B183C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001287")]
		[Address(RVA = "0x9B1868", Offset = "0x9B1868", VA = "0x9B1868")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x804D1C", Offset = "0x804D1C")]
		private IEnumerator CallPluginAtEndOfFrames()
		{
			return null;
		}

		[Token(Token = "0x6001288")]
		[Address(RVA = "0x9B1908", Offset = "0x9B1908", VA = "0x9B1908")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001289")]
		[Address(RVA = "0x9B1948", Offset = "0x9B1948", VA = "0x9B1948")]
		public SharedTextureProtocol()
		{
		}
	}
	[Token(Token = "0x2000208")]
	internal static class SteamVRCompatibility
	{
		[Token(Token = "0x4001948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool IsAvailable;

		[Token(Token = "0x4001949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Type SteamVRCamera;

		[Token(Token = "0x400194A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Type SteamVRExternalCamera;

		[Token(Token = "0x400194B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Type SteamVRFade;

		[Token(Token = "0x600128A")]
		[Address(RVA = "0x9B1A90", Offset = "0x9B1A90", VA = "0x9B1A90")]
		static SteamVRCompatibility()
		{
		}

		[Token(Token = "0x600128B")]
		[Address(RVA = "0x9B1AE8", Offset = "0x9B1AE8", VA = "0x9B1AE8")]
		private static bool FindSteamVRAsset()
		{
			return default(bool);
		}
	}
}
namespace Valve.VR
{
	[Token(Token = "0x2000209")]
	public struct IVRSystem
	{
		[Token(Token = "0x2000413")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7F9C40", Offset = "0x7F9C40")]
		internal delegate void _GetRecommendedRenderTargetSize(ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x2000414")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7F9C54", Offset = "0x7F9C54")]
		internal delegate HmdMatrix44_t _GetProjectionMatrix(EVREye eEye, float fNearZ, float fFarZ);

		[Token(Token = "0x2000415")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7F9C68", Offset = "0x7F9C68")]
		internal delegate void _GetProjectionRaw(EVREye eEye, ref float pfLeft, ref float pfRight, ref float pfTop, ref float pfBottom);

		[Token(Token = "0x2000416")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7F9C7C", Offset = "0x7F9C7C")]
		internal delegate bool _ComputeDistortion(EVREye eEye, float fU, float fV, ref DistortionCoordinates_t pDistortionCoordinates);

		[Token(Token = "0x2000417")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7F9C90", Offset = "0x7F9C90")]
		internal delegate HmdMatrix34_t _GetEyeToHeadTransform(EVREye eEye);

		[Token(Token = "0x2000418")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7F9CA4", Offset = "0x7F9CA4")]
		internal delegate bool _GetTimeSinceLastVsync(ref float pfSecondsSinceLastVsync, ref ulong pulFrameCounter);

		[Token(Token = "0x2000419")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7F9CB8", Offset = "0x7F9CB8")]
		internal delegate int _GetD3D9AdapterIndex();

		[Token(Token = "0x200041A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7F9CCC", Offset = "0x7F9CCC")]
		internal delegate void _GetDXGIOutputInfo(ref int pnAdapterIndex);

		[Token(Token = "0x200041B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7F9CE0", Offset = "0x7F9CE0")]
		internal delegate void _GetOutputDevice(ref ulong pnDevice, ETextureType textureType, IntPtr pInstance);

		[Token(Token = "0x200041C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7F9CF4", Offset = "0x7F9CF4")]
		internal delegate bool _IsDisplayOnDesktop();

		[Token(Token = "0x200041D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7F9D08", Offset = "0x7F9D08")]
		internal delegate bool _SetDisplayVisibility(bool bIsVisibleOnDesktop);

		[Token(Token = "0x200041E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7F9D1C", Offset = "0x7F9D1C")]
		internal delegate void _GetDeviceToAbsoluteTrackingPose(ETrackingUniverseOrigin eOrigin, float fPredictedSecondsToPhotonsFromNow, [In][Out] TrackedDevicePose_t[] pTrackedDevicePoseArray, uint unTrackedDevicePoseArrayCount);

		[Token(Token = "0x200041F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7F9D30", Offset = "0x7F9D30")]
		internal delegate void _ResetSeatedZeroPose();

		[Token(Token = "0x2000420")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7F9D44", Offset = "0x7F9D44")]
		internal delegate HmdMatrix34_t _GetSeatedZeroPoseToStandingAbsoluteTrackingPose();

		[Token(Token = "0x2000421")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7F9D58", Offset = "0x7F9D58")]
		internal delegate HmdMatrix34_t _GetRawZeroPoseToStandingAbsoluteTrackingPose();

		[Token(Token = "0x2000422")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7F9D6C", Offset = "0x7F9D6C")]
		internal delegate uint _GetSortedTrackedDeviceIndicesOfClass(ETrackedDeviceClass eTrackedDeviceClass, [In][Out] uint[] punTrackedDeviceIndexArray, uint unTrackedDeviceIndexArrayCount, uint unRelativeToTrackedDeviceIndex);

		[Token(Token = "0x2000423")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7F9D80", Offset = "0x7F9D80")]
		internal delegate EDeviceActivityLevel _GetTrackedDeviceActivityLevel(uint unDeviceId);

		[Token(Token = "0x2000424")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7F9D94", Offset = "0x7F9D94")]
		internal delegate void _ApplyTransform(ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pTrackedDevicePose, ref HmdMatrix34_t pTransform);

		[Token(Token = "0x2000425")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7F9DA8", Offset = "0x7F9DA8")]
		internal delegate uint _GetTrackedDeviceIndexForControllerRole(ETrackedControllerRole unDeviceType);

		[Token(Token = "0x2000426")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7F9DBC", Offset = "0x7F9DBC")]
		internal delegate ETrackedControllerRole _GetControllerRoleForTrackedDeviceIndex(uint unDeviceIndex);

		[Token(Token = "0x2000427")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7F9DD0", Offset = "0x7F9DD0")]
		internal delegate ETrackedDeviceClass _GetTrackedDeviceClass(uint unDeviceIndex);

		[Token(Token = "0x2000428")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7F9DE4", Offset = "0x7F9DE4")]
		internal delegate bool _IsTrackedDeviceConnected(uint unDeviceIndex);

		[Token(Token = "0x2000429")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7F9DF8", Offset = "0x7F9DF8")]
		internal delegate bool _GetBoolTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x200042A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7F9E0C", Offset = "0x7F9E0C")]
		internal delegate float _GetFloatTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x200042B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7F9E20", Offset = "0x7F9E20")]
		internal delegate int _GetInt32TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x200042C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7F9E34", Offset = "0x7F9E34")]
		internal delegate ulong _GetUint64TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x200042D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7F9E48", Offset = "0x7F9E48")]
		internal delegate HmdMatrix34_t _GetMatrix34TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError);

		[Token(Token = "0x200042E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7F9E5C", Offset = "0x7F9E5C")]
		internal delegate uint _GetArrayTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, uint propType, IntPtr pBuffer, uint unBufferSize, ref ETrackedPropertyError pError);

		[Token(Token = "0x200042F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7F9E70", Offset = "0x7F9E70")]
		internal delegate uint _GetStringTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, StringBuilder pchValue, uint unBufferSize, ref ETrackedPropertyError pError);

		[Token(Token = "0x2000430")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7F9E84", Offset = "0x7F9E84")]
		internal delegate IntPtr _GetPropErrorNameFromEnum(ETrackedPropertyError error);

		[Token(Token = "0x2000431")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7F9E98", Offset = "0x7F9E98")]
		internal delegate bool _PollNextEvent(ref VREvent_t pEvent, uint uncbVREvent);

		[Token(Token = "0x2000432")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7F9EAC", Offset = "0x7F9EAC")]
		internal delegate bool _PollNextEventWithPose(ETrackingUniverseOrigin eOrigin, ref VREvent_t pEvent, uint uncbVREvent, ref TrackedDevicePose_t pTrackedDevicePose);

		[Token(Token = "0x2000433")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7F9EC0", Offset = "0x7F9EC0")]
		internal delegate IntPtr _GetEventTypeNameFromEnum(EVREventType eType);

		[Token(Token = "0x2000434")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7F9ED4", Offset = "0x7F9ED4")]
		internal delegate HiddenAreaMesh_t _GetHiddenAreaMesh(EVREye eEye, EHiddenAreaMeshType type);

		[Token(Token = "0x2000435")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7F9EE8", Offset = "0x7F9EE8")]
		internal delegate bool _GetControllerState(uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize);

		[Token(Token = "0x2000436")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7F9EFC", Offset = "0x7F9EFC")]
		internal delegate bool _GetControllerStateWithPose(ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize, ref TrackedDevicePose_t pTrackedDevicePose);

		[Token(Token = "0x2000437")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7F9F10", Offset = "0x7F9F10")]
		internal delegate void _TriggerHapticPulse(uint unControllerDeviceIndex, uint unAxisId, char usDurationMicroSec);

		[Token(Token = "0x2000438")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7F9F24", Offset = "0x7F9F24")]
		internal delegate IntPtr _GetButtonIdNameFromEnum(EVRButtonId eButtonId);

		[Token(Token = "0x2000439")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7F9F38", Offset = "0x7F9F38")]
		internal delegate IntPtr _GetControllerAxisTypeNameFromEnum(EVRControllerAxisType eAxisType);

		[Token(Token = "0x200043A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7F9F4C", Offset = "0x7F9F4C")]
		internal delegate bool _IsInputAvailable();

		[Token(Token = "0x200043B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7F9F60", Offset = "0x7F9F60")]
		internal delegate bool _IsSteamVRDrawingControllers();

		[Token(Token = "0x200043C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7F9F74", Offset = "0x7F9F74")]
		internal delegate bool _ShouldApplicationPause();

		[Token(Token = "0x200043D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7F9F88", Offset = "0x7F9F88")]
		internal delegate bool _ShouldApplicationReduceRenderingWork();

		[Token(Token = "0x200043E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7F9F9C", Offset = "0x7F9F9C")]
		internal delegate uint _DriverDebugRequest(uint unDeviceIndex, string pchRequest, StringBuilder pchResponseBuffer, uint unResponseBufferSize);

		[Token(Token = "0x200043F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7F9FB0", Offset = "0x7F9FB0")]
		internal delegate EVRFirmwareError _PerformFirmwareUpdate(uint unDeviceIndex);

		[Token(Token = "0x2000440")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7F9FC4", Offset = "0x7F9FC4")]
		internal delegate void _AcknowledgeQuit_Exiting();

		[Token(Token = "0x2000441")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7F9FD8", Offset = "0x7F9FD8")]
		internal delegate void _AcknowledgeQuit_UserPrompt();

		[Token(Token = "0x400194C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetRecommendedRenderTargetSize GetRecommendedRenderTargetSize;

		[Token(Token = "0x400194D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetProjectionMatrix GetProjectionMatrix;

		[Token(Token = "0x400194E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetProjectionRaw GetProjectionRaw;

		[Token(Token = "0x400194F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _ComputeDistortion ComputeDistortion;

		[Token(Token = "0x4001950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetEyeToHeadTransform GetEyeToHeadTransform;

		[Token(Token = "0x4001951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetTimeSinceLastVsync GetTimeSinceLastVsync;

		[Token(Token = "0x4001952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetD3D9AdapterIndex GetD3D9AdapterIndex;

		[Token(Token = "0x4001953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetDXGIOutputInfo GetDXGIOutputInfo;

		[Token(Token = "0x4001954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetOutputDevice GetOutputDevice;

		[Token(Token = "0x4001955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _IsDisplayOnDesktop IsDisplayOnDesktop;

		[Token(Token = "0x4001956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _SetDisplayVisibility SetDisplayVisibility;

		[Token(Token = "0x4001957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetDeviceToAbsoluteTrackingPose GetDeviceToAbsoluteTrackingPose;

		[Token(Token = "0x4001958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _ResetSeatedZeroPose ResetSeatedZeroPose;

		[Token(Token = "0x4001959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetSeatedZeroPoseToStandingAbsoluteTrackingPose GetSeatedZeroPoseToStandingAbsoluteTrackingPose;

		[Token(Token = "0x400195A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _GetRawZeroPoseToStandingAbsoluteTrackingPose GetRawZeroPoseToStandingAbsoluteTrackingPose;

		[Token(Token = "0x400195B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetSortedTrackedDeviceIndicesOfClass GetSortedTrackedDeviceIndicesOfClass;

		[Token(Token = "0x400195C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _GetTrackedDeviceActivityLevel GetTrackedDeviceActivityLevel;

		[Token(Token = "0x400195D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _ApplyTransform ApplyTransform;

		[Token(Token = "0x400195E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _GetTrackedDeviceIndexForControllerRole GetTrackedDeviceIndexForControllerRole;

		[Token(Token = "0x400195F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _GetControllerRoleForTrackedDeviceIndex GetControllerRoleForTrackedDeviceIndex;

		[Token(Token = "0x4001960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _GetTrackedDeviceClass GetTrackedDeviceClass;

		[Token(Token = "0x4001961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _IsTrackedDeviceConnected IsTrackedDeviceConnected;

		[Token(Token = "0x4001962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _GetBoolTrackedDeviceProperty GetBoolTrackedDeviceProperty;

		[Token(Token = "0x4001963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _GetFloatTrackedDeviceProperty GetFloatTrackedDeviceProperty;

		[Token(Token = "0x4001964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _GetInt32TrackedDeviceProperty GetInt32TrackedDeviceProperty;

		[Token(Token = "0x4001965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _GetUint64TrackedDeviceProperty GetUint64TrackedDeviceProperty;

		[Token(Token = "0x4001966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _GetMatrix34TrackedDeviceProperty GetMatrix34TrackedDeviceProperty;

		[Token(Token = "0x4001967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal _GetArrayTrackedDeviceProperty GetArrayTrackedDeviceProperty;

		[Token(Token = "0x4001968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal _GetStringTrackedDeviceProperty GetStringTrackedDeviceProperty;

		[Token(Token = "0x4001969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal _GetPropErrorNameFromEnum GetPropErrorNameFromEnum;

		[Token(Token = "0x400196A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal _PollNextEvent PollNextEvent;

		[Token(Token = "0x400196B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		internal _PollNextEventWithPose PollNextEventWithPose;

		[Token(Token = "0x400196C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		internal _GetEventTypeNameFromEnum GetEventTypeNameFromEnum;

		[Token(Token = "0x400196D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		internal _GetHiddenAreaMesh GetHiddenAreaMesh;

		[Token(Token = "0x400196E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		internal _GetControllerState GetControllerState;

		[Token(Token = "0x400196F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		internal _GetControllerStateWithPose GetControllerStateWithPose;

		[Token(Token = "0x4001970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		internal _TriggerHapticPulse TriggerHapticPulse;

		[Token(Token = "0x4001971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		internal _GetButtonIdNameFromEnum GetButtonIdNameFromEnum;

		[Token(Token = "0x4001972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		internal _GetControllerAxisTypeNameFromEnum GetControllerAxisTypeNameFromEnum;

		[Token(Token = "0x4001973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		internal _IsInputAvailable IsInputAvailable;

		[Token(Token = "0x4001974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		internal _IsSteamVRDrawingControllers IsSteamVRDrawingControllers;

		[Token(Token = "0x4001975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		internal _ShouldApplicationPause ShouldApplicationPause;

		[Token(Token = "0x4001976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		internal _ShouldApplicationReduceRenderingWork ShouldApplicationReduceRenderingWork;

		[Token(Token = "0x4001977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		internal _DriverDebugRequest DriverDebugRequest;

		[Token(Token = "0x4001978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		internal _PerformFirmwareUpdate PerformFirmwareUpdate;

		[Token(Token = "0x4001979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		internal _AcknowledgeQuit_Exiting AcknowledgeQuit_Exiting;

		[Token(Token = "0x400197A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		internal _AcknowledgeQuit_UserPrompt AcknowledgeQuit_UserPrompt;
	}
	[Token(Token = "0x200020A")]
	public struct IVRExtendedDisplay
	{
		[Token(Token = "0x2000442")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7F9FEC", Offset = "0x7F9FEC")]
		internal delegate void _GetWindowBounds(ref int pnX, ref int pnY, ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x2000443")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA000", Offset = "0x7FA000")]
		internal delegate void _GetEyeOutputViewport(EVREye eEye, ref uint pnX, ref uint pnY, ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x2000444")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA014", Offset = "0x7FA014")]
		internal delegate void _GetDXGIOutputInfo(ref int pnAdapterIndex, ref int pnAdapterOutputIndex);

		[Token(Token = "0x400197B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetWindowBounds GetWindowBounds;

		[Token(Token = "0x400197C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetEyeOutputViewport GetEyeOutputViewport;

		[Token(Token = "0x400197D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetDXGIOutputInfo GetDXGIOutputInfo;
	}
	[Token(Token = "0x200020B")]
	public struct IVRTrackedCamera
	{
		[Token(Token = "0x2000445")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA028", Offset = "0x7FA028")]
		internal delegate IntPtr _GetCameraErrorNameFromEnum(EVRTrackedCameraError eCameraError);

		[Token(Token = "0x2000446")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA03C", Offset = "0x7FA03C")]
		internal delegate EVRTrackedCameraError _HasCamera(uint nDeviceIndex, ref bool pHasCamera);

		[Token(Token = "0x2000447")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA050", Offset = "0x7FA050")]
		internal delegate EVRTrackedCameraError _GetCameraFrameSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref uint pnWidth, ref uint pnHeight, ref uint pnFrameBufferSize);

		[Token(Token = "0x2000448")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA064", Offset = "0x7FA064")]
		internal delegate EVRTrackedCameraError _GetCameraIntrinsics(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref HmdVector2_t pFocalLength, ref HmdVector2_t pCenter);

		[Token(Token = "0x2000449")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA078", Offset = "0x7FA078")]
		internal delegate EVRTrackedCameraError _GetCameraProjection(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, float flZNear, float flZFar, ref HmdMatrix44_t pProjection);

		[Token(Token = "0x200044A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA08C", Offset = "0x7FA08C")]
		internal delegate EVRTrackedCameraError _AcquireVideoStreamingService(uint nDeviceIndex, ref ulong pHandle);

		[Token(Token = "0x200044B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA0A0", Offset = "0x7FA0A0")]
		internal delegate EVRTrackedCameraError _ReleaseVideoStreamingService(ulong hTrackedCamera);

		[Token(Token = "0x200044C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA0B4", Offset = "0x7FA0B4")]
		internal delegate EVRTrackedCameraError _GetVideoStreamFrameBuffer(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pFrameBuffer, uint nFrameBufferSize, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize);

		[Token(Token = "0x200044D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA0C8", Offset = "0x7FA0C8")]
		internal delegate EVRTrackedCameraError _GetVideoStreamTextureSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref VRTextureBounds_t pTextureBounds, ref uint pnWidth, ref uint pnHeight);

		[Token(Token = "0x200044E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA0DC", Offset = "0x7FA0DC")]
		internal delegate EVRTrackedCameraError _GetVideoStreamTextureD3D11(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize);

		[Token(Token = "0x200044F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA0F0", Offset = "0x7FA0F0")]
		internal delegate EVRTrackedCameraError _GetVideoStreamTextureGL(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, ref uint pglTextureId, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize);

		[Token(Token = "0x2000450")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA104", Offset = "0x7FA104")]
		internal delegate EVRTrackedCameraError _ReleaseVideoStreamTextureGL(ulong hTrackedCamera, uint glTextureId);

		[Token(Token = "0x400197E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetCameraErrorNameFromEnum GetCameraErrorNameFromEnum;

		[Token(Token = "0x400197F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _HasCamera HasCamera;

		[Token(Token = "0x4001980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetCameraFrameSize GetCameraFrameSize;

		[Token(Token = "0x4001981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetCameraIntrinsics GetCameraIntrinsics;

		[Token(Token = "0x4001982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetCameraProjection GetCameraProjection;

		[Token(Token = "0x4001983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _AcquireVideoStreamingService AcquireVideoStreamingService;

		[Token(Token = "0x4001984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _ReleaseVideoStreamingService ReleaseVideoStreamingService;

		[Token(Token = "0x4001985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetVideoStreamFrameBuffer GetVideoStreamFrameBuffer;

		[Token(Token = "0x4001986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetVideoStreamTextureSize GetVideoStreamTextureSize;

		[Token(Token = "0x4001987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetVideoStreamTextureD3D11 GetVideoStreamTextureD3D11;

		[Token(Token = "0x4001988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _GetVideoStreamTextureGL GetVideoStreamTextureGL;

		[Token(Token = "0x4001989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _ReleaseVideoStreamTextureGL ReleaseVideoStreamTextureGL;
	}
	[Token(Token = "0x200020C")]
	public struct IVRApplications
	{
		[Token(Token = "0x2000451")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA118", Offset = "0x7FA118")]
		internal delegate EVRApplicationError _AddApplicationManifest(string pchApplicationManifestFullPath, bool bTemporary);

		[Token(Token = "0x2000452")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA12C", Offset = "0x7FA12C")]
		internal delegate EVRApplicationError _RemoveApplicationManifest(string pchApplicationManifestFullPath);

		[Token(Token = "0x2000453")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA140", Offset = "0x7FA140")]
		internal delegate bool _IsApplicationInstalled(string pchAppKey);

		[Token(Token = "0x2000454")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA154", Offset = "0x7FA154")]
		internal delegate uint _GetApplicationCount();

		[Token(Token = "0x2000455")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA168", Offset = "0x7FA168")]
		internal delegate EVRApplicationError _GetApplicationKeyByIndex(uint unApplicationIndex, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x2000456")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA17C", Offset = "0x7FA17C")]
		internal delegate EVRApplicationError _GetApplicationKeyByProcessId(uint unProcessId, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x2000457")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA190", Offset = "0x7FA190")]
		internal delegate EVRApplicationError _LaunchApplication(string pchAppKey);

		[Token(Token = "0x2000458")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA1A4", Offset = "0x7FA1A4")]
		internal delegate EVRApplicationError _LaunchTemplateApplication(string pchTemplateAppKey, string pchNewAppKey, [In][Out] AppOverrideKeys_t[] pKeys, uint unKeys);

		[Token(Token = "0x2000459")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA1B8", Offset = "0x7FA1B8")]
		internal delegate EVRApplicationError _LaunchApplicationFromMimeType(string pchMimeType, string pchArgs);

		[Token(Token = "0x200045A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA1CC", Offset = "0x7FA1CC")]
		internal delegate EVRApplicationError _LaunchDashboardOverlay(string pchAppKey);

		[Token(Token = "0x200045B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA1E0", Offset = "0x7FA1E0")]
		internal delegate bool _CancelApplicationLaunch(string pchAppKey);

		[Token(Token = "0x200045C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA1F4", Offset = "0x7FA1F4")]
		internal delegate EVRApplicationError _IdentifyApplication(uint unProcessId, string pchAppKey);

		[Token(Token = "0x200045D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA208", Offset = "0x7FA208")]
		internal delegate uint _GetApplicationProcessId(string pchAppKey);

		[Token(Token = "0x200045E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA21C", Offset = "0x7FA21C")]
		internal delegate IntPtr _GetApplicationsErrorNameFromEnum(EVRApplicationError error);

		[Token(Token = "0x200045F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA230", Offset = "0x7FA230")]
		internal delegate uint _GetApplicationPropertyString(string pchAppKey, EVRApplicationProperty eProperty, StringBuilder pchPropertyValueBuffer, uint unPropertyValueBufferLen, ref EVRApplicationError peError);

		[Token(Token = "0x2000460")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA244", Offset = "0x7FA244")]
		internal delegate bool _GetApplicationPropertyBool(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError);

		[Token(Token = "0x2000461")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA258", Offset = "0x7FA258")]
		internal delegate ulong _GetApplicationPropertyUint64(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError);

		[Token(Token = "0x2000462")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA26C", Offset = "0x7FA26C")]
		internal delegate EVRApplicationError _SetApplicationAutoLaunch(string pchAppKey, bool bAutoLaunch);

		[Token(Token = "0x2000463")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA280", Offset = "0x7FA280")]
		internal delegate bool _GetApplicationAutoLaunch(string pchAppKey);

		[Token(Token = "0x2000464")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA294", Offset = "0x7FA294")]
		internal delegate EVRApplicationError _SetDefaultApplicationForMimeType(string pchAppKey, string pchMimeType);

		[Token(Token = "0x2000465")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA2A8", Offset = "0x7FA2A8")]
		internal delegate bool _GetDefaultApplicationForMimeType(string pchMimeType, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x2000466")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA2BC", Offset = "0x7FA2BC")]
		internal delegate bool _GetApplicationSupportedMimeTypes(string pchAppKey, StringBuilder pchMimeTypesBuffer, uint unMimeTypesBuffer);

		[Token(Token = "0x2000467")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA2D0", Offset = "0x7FA2D0")]
		internal delegate uint _GetApplicationsThatSupportMimeType(string pchMimeType, StringBuilder pchAppKeysThatSupportBuffer, uint unAppKeysThatSupportBuffer);

		[Token(Token = "0x2000468")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA2E4", Offset = "0x7FA2E4")]
		internal delegate uint _GetApplicationLaunchArguments(uint unHandle, StringBuilder pchArgs, uint unArgs);

		[Token(Token = "0x2000469")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA2F8", Offset = "0x7FA2F8")]
		internal delegate EVRApplicationError _GetStartingApplication(StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x200046A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA30C", Offset = "0x7FA30C")]
		internal delegate EVRApplicationTransitionState _GetTransitionState();

		[Token(Token = "0x200046B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA320", Offset = "0x7FA320")]
		internal delegate EVRApplicationError _PerformApplicationPrelaunchCheck(string pchAppKey);

		[Token(Token = "0x200046C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA334", Offset = "0x7FA334")]
		internal delegate IntPtr _GetApplicationsTransitionStateNameFromEnum(EVRApplicationTransitionState state);

		[Token(Token = "0x200046D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA348", Offset = "0x7FA348")]
		internal delegate bool _IsQuitUserPromptRequested();

		[Token(Token = "0x200046E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA35C", Offset = "0x7FA35C")]
		internal delegate EVRApplicationError _LaunchInternalProcess(string pchBinaryPath, string pchArguments, string pchWorkingDirectory);

		[Token(Token = "0x200046F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA370", Offset = "0x7FA370")]
		internal delegate uint _GetCurrentSceneProcessId();

		[Token(Token = "0x400198A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _AddApplicationManifest AddApplicationManifest;

		[Token(Token = "0x400198B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _RemoveApplicationManifest RemoveApplicationManifest;

		[Token(Token = "0x400198C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _IsApplicationInstalled IsApplicationInstalled;

		[Token(Token = "0x400198D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetApplicationCount GetApplicationCount;

		[Token(Token = "0x400198E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetApplicationKeyByIndex GetApplicationKeyByIndex;

		[Token(Token = "0x400198F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetApplicationKeyByProcessId GetApplicationKeyByProcessId;

		[Token(Token = "0x4001990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _LaunchApplication LaunchApplication;

		[Token(Token = "0x4001991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _LaunchTemplateApplication LaunchTemplateApplication;

		[Token(Token = "0x4001992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _LaunchApplicationFromMimeType LaunchApplicationFromMimeType;

		[Token(Token = "0x4001993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _LaunchDashboardOverlay LaunchDashboardOverlay;

		[Token(Token = "0x4001994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _CancelApplicationLaunch CancelApplicationLaunch;

		[Token(Token = "0x4001995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _IdentifyApplication IdentifyApplication;

		[Token(Token = "0x4001996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _GetApplicationProcessId GetApplicationProcessId;

		[Token(Token = "0x4001997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetApplicationsErrorNameFromEnum GetApplicationsErrorNameFromEnum;

		[Token(Token = "0x4001998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _GetApplicationPropertyString GetApplicationPropertyString;

		[Token(Token = "0x4001999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetApplicationPropertyBool GetApplicationPropertyBool;

		[Token(Token = "0x400199A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _GetApplicationPropertyUint64 GetApplicationPropertyUint64;

		[Token(Token = "0x400199B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _SetApplicationAutoLaunch SetApplicationAutoLaunch;

		[Token(Token = "0x400199C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _GetApplicationAutoLaunch GetApplicationAutoLaunch;

		[Token(Token = "0x400199D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _SetDefaultApplicationForMimeType SetDefaultApplicationForMimeType;

		[Token(Token = "0x400199E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _GetDefaultApplicationForMimeType GetDefaultApplicationForMimeType;

		[Token(Token = "0x400199F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _GetApplicationSupportedMimeTypes GetApplicationSupportedMimeTypes;

		[Token(Token = "0x40019A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _GetApplicationsThatSupportMimeType GetApplicationsThatSupportMimeType;

		[Token(Token = "0x40019A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _GetApplicationLaunchArguments GetApplicationLaunchArguments;

		[Token(Token = "0x40019A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _GetStartingApplication GetStartingApplication;

		[Token(Token = "0x40019A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _GetTransitionState GetTransitionState;

		[Token(Token = "0x40019A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _PerformApplicationPrelaunchCheck PerformApplicationPrelaunchCheck;

		[Token(Token = "0x40019A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal _GetApplicationsTransitionStateNameFromEnum GetApplicationsTransitionStateNameFromEnum;

		[Token(Token = "0x40019A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal _IsQuitUserPromptRequested IsQuitUserPromptRequested;

		[Token(Token = "0x40019A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal _LaunchInternalProcess LaunchInternalProcess;

		[Token(Token = "0x40019A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal _GetCurrentSceneProcessId GetCurrentSceneProcessId;
	}
	[Token(Token = "0x200020D")]
	public struct IVRChaperone
	{
		[Token(Token = "0x2000470")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA384", Offset = "0x7FA384")]
		internal delegate ChaperoneCalibrationState _GetCalibrationState();

		[Token(Token = "0x2000471")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA398", Offset = "0x7FA398")]
		internal delegate bool _GetPlayAreaSize(ref float pSizeX, ref float pSizeZ);

		[Token(Token = "0x2000472")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA3AC", Offset = "0x7FA3AC")]
		internal delegate bool _GetPlayAreaRect(ref HmdQuad_t rect);

		[Token(Token = "0x2000473")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA3C0", Offset = "0x7FA3C0")]
		internal delegate void _ReloadInfo();

		[Token(Token = "0x2000474")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA3D4", Offset = "0x7FA3D4")]
		internal delegate void _SetSceneColor(HmdColor_t color);

		[Token(Token = "0x2000475")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA3E8", Offset = "0x7FA3E8")]
		internal delegate void _GetBoundsColor(ref HmdColor_t pOutputColorArray, int nNumOutputColors, float flCollisionBoundsFadeDistance, ref HmdColor_t pOutputCameraColor);

		[Token(Token = "0x2000476")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA3FC", Offset = "0x7FA3FC")]
		internal delegate bool _AreBoundsVisible();

		[Token(Token = "0x2000477")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA410", Offset = "0x7FA410")]
		internal delegate void _ForceBoundsVisible(bool bForce);

		[Token(Token = "0x40019A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetCalibrationState GetCalibrationState;

		[Token(Token = "0x40019AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetPlayAreaSize GetPlayAreaSize;

		[Token(Token = "0x40019AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetPlayAreaRect GetPlayAreaRect;

		[Token(Token = "0x40019AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _ReloadInfo ReloadInfo;

		[Token(Token = "0x40019AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _SetSceneColor SetSceneColor;

		[Token(Token = "0x40019AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetBoundsColor GetBoundsColor;

		[Token(Token = "0x40019AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _AreBoundsVisible AreBoundsVisible;

		[Token(Token = "0x40019B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _ForceBoundsVisible ForceBoundsVisible;
	}
	[Token(Token = "0x200020E")]
	public struct IVRChaperoneSetup
	{
		[Token(Token = "0x2000478")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA424", Offset = "0x7FA424")]
		internal delegate bool _CommitWorkingCopy(EChaperoneConfigFile configFile);

		[Token(Token = "0x2000479")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA438", Offset = "0x7FA438")]
		internal delegate void _RevertWorkingCopy();

		[Token(Token = "0x200047A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA44C", Offset = "0x7FA44C")]
		internal delegate bool _GetWorkingPlayAreaSize(ref float pSizeX, ref float pSizeZ);

		[Token(Token = "0x200047B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA460", Offset = "0x7FA460")]
		internal delegate bool _GetWorkingPlayAreaRect(ref HmdQuad_t rect);

		[Token(Token = "0x200047C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA474", Offset = "0x7FA474")]
		internal delegate bool _GetWorkingCollisionBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, ref uint punQuadsCount);

		[Token(Token = "0x200047D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA488", Offset = "0x7FA488")]
		internal delegate bool _GetLiveCollisionBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, ref uint punQuadsCount);

		[Token(Token = "0x200047E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA49C", Offset = "0x7FA49C")]
		internal delegate bool _GetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose);

		[Token(Token = "0x200047F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA4B0", Offset = "0x7FA4B0")]
		internal delegate bool _GetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatStandingZeroPoseToRawTrackingPose);

		[Token(Token = "0x2000480")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA4C4", Offset = "0x7FA4C4")]
		internal delegate void _SetWorkingPlayAreaSize(float sizeX, float sizeZ);

		[Token(Token = "0x2000481")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA4D8", Offset = "0x7FA4D8")]
		internal delegate void _SetWorkingCollisionBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, uint unQuadsCount);

		[Token(Token = "0x2000482")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA4EC", Offset = "0x7FA4EC")]
		internal delegate void _SetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatSeatedZeroPoseToRawTrackingPose);

		[Token(Token = "0x2000483")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA500", Offset = "0x7FA500")]
		internal delegate void _SetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatStandingZeroPoseToRawTrackingPose);

		[Token(Token = "0x2000484")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA514", Offset = "0x7FA514")]
		internal delegate void _ReloadFromDisk(EChaperoneConfigFile configFile);

		[Token(Token = "0x2000485")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA528", Offset = "0x7FA528")]
		internal delegate bool _GetLiveSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose);

		[Token(Token = "0x2000486")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA53C", Offset = "0x7FA53C")]
		internal delegate void _SetWorkingCollisionBoundsTagsInfo([In][Out] byte[] pTagsBuffer, uint unTagCount);

		[Token(Token = "0x2000487")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA550", Offset = "0x7FA550")]
		internal delegate bool _GetLiveCollisionBoundsTagsInfo([In][Out] byte[] pTagsBuffer, ref uint punTagCount);

		[Token(Token = "0x2000488")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA564", Offset = "0x7FA564")]
		internal delegate bool _SetWorkingPhysicalBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, uint unQuadsCount);

		[Token(Token = "0x2000489")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA578", Offset = "0x7FA578")]
		internal delegate bool _GetLivePhysicalBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, ref uint punQuadsCount);

		[Token(Token = "0x200048A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA58C", Offset = "0x7FA58C")]
		internal delegate bool _ExportLiveToBuffer(StringBuilder pBuffer, ref uint pnBufferLength);

		[Token(Token = "0x200048B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA5A0", Offset = "0x7FA5A0")]
		internal delegate bool _ImportFromBufferToWorking(string pBuffer, uint nImportFlags);

		[Token(Token = "0x40019B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _CommitWorkingCopy CommitWorkingCopy;

		[Token(Token = "0x40019B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _RevertWorkingCopy RevertWorkingCopy;

		[Token(Token = "0x40019B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetWorkingPlayAreaSize GetWorkingPlayAreaSize;

		[Token(Token = "0x40019B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetWorkingPlayAreaRect GetWorkingPlayAreaRect;

		[Token(Token = "0x40019B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetWorkingCollisionBoundsInfo GetWorkingCollisionBoundsInfo;

		[Token(Token = "0x40019B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetLiveCollisionBoundsInfo GetLiveCollisionBoundsInfo;

		[Token(Token = "0x40019B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetWorkingSeatedZeroPoseToRawTrackingPose GetWorkingSeatedZeroPoseToRawTrackingPose;

		[Token(Token = "0x40019B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetWorkingStandingZeroPoseToRawTrackingPose GetWorkingStandingZeroPoseToRawTrackingPose;

		[Token(Token = "0x40019B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _SetWorkingPlayAreaSize SetWorkingPlayAreaSize;

		[Token(Token = "0x40019BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _SetWorkingCollisionBoundsInfo SetWorkingCollisionBoundsInfo;

		[Token(Token = "0x40019BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _SetWorkingSeatedZeroPoseToRawTrackingPose SetWorkingSeatedZeroPoseToRawTrackingPose;

		[Token(Token = "0x40019BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _SetWorkingStandingZeroPoseToRawTrackingPose SetWorkingStandingZeroPoseToRawTrackingPose;

		[Token(Token = "0x40019BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _ReloadFromDisk ReloadFromDisk;

		[Token(Token = "0x40019BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetLiveSeatedZeroPoseToRawTrackingPose GetLiveSeatedZeroPoseToRawTrackingPose;

		[Token(Token = "0x40019BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _SetWorkingCollisionBoundsTagsInfo SetWorkingCollisionBoundsTagsInfo;

		[Token(Token = "0x40019C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetLiveCollisionBoundsTagsInfo GetLiveCollisionBoundsTagsInfo;

		[Token(Token = "0x40019C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _SetWorkingPhysicalBoundsInfo SetWorkingPhysicalBoundsInfo;

		[Token(Token = "0x40019C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _GetLivePhysicalBoundsInfo GetLivePhysicalBoundsInfo;

		[Token(Token = "0x40019C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _ExportLiveToBuffer ExportLiveToBuffer;

		[Token(Token = "0x40019C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _ImportFromBufferToWorking ImportFromBufferToWorking;
	}
	[Token(Token = "0x200020F")]
	public struct IVRCompositor
	{
		[Token(Token = "0x200048C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA5B4", Offset = "0x7FA5B4")]
		internal delegate void _SetTrackingSpace(ETrackingUniverseOrigin eOrigin);

		[Token(Token = "0x200048D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA5C8", Offset = "0x7FA5C8")]
		internal delegate ETrackingUniverseOrigin _GetTrackingSpace();

		[Token(Token = "0x200048E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA5DC", Offset = "0x7FA5DC")]
		internal delegate EVRCompositorError _WaitGetPoses([In][Out] TrackedDevicePose_t[] pRenderPoseArray, uint unRenderPoseArrayCount, [In][Out] TrackedDevicePose_t[] pGamePoseArray, uint unGamePoseArrayCount);

		[Token(Token = "0x200048F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA5F0", Offset = "0x7FA5F0")]
		internal delegate EVRCompositorError _GetLastPoses([In][Out] TrackedDevicePose_t[] pRenderPoseArray, uint unRenderPoseArrayCount, [In][Out] TrackedDevicePose_t[] pGamePoseArray, uint unGamePoseArrayCount);

		[Token(Token = "0x2000490")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA604", Offset = "0x7FA604")]
		internal delegate EVRCompositorError _GetLastPoseForTrackedDeviceIndex(uint unDeviceIndex, ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pOutputGamePose);

		[Token(Token = "0x2000491")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA618", Offset = "0x7FA618")]
		internal delegate EVRCompositorError _Submit(EVREye eEye, ref Texture_t pTexture, ref VRTextureBounds_t pBounds, EVRSubmitFlags nSubmitFlags);

		[Token(Token = "0x2000492")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA62C", Offset = "0x7FA62C")]
		internal delegate void _ClearLastSubmittedFrame();

		[Token(Token = "0x2000493")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA640", Offset = "0x7FA640")]
		internal delegate void _PostPresentHandoff();

		[Token(Token = "0x2000494")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA654", Offset = "0x7FA654")]
		internal delegate bool _GetFrameTiming(ref Compositor_FrameTiming pTiming, uint unFramesAgo);

		[Token(Token = "0x2000495")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA668", Offset = "0x7FA668")]
		internal delegate uint _GetFrameTimings(ref Compositor_FrameTiming pTiming, uint nFrames);

		[Token(Token = "0x2000496")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA67C", Offset = "0x7FA67C")]
		internal delegate float _GetFrameTimeRemaining();

		[Token(Token = "0x2000497")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA690", Offset = "0x7FA690")]
		internal delegate void _GetCumulativeStats(ref Compositor_CumulativeStats pStats, uint nStatsSizeInBytes);

		[Token(Token = "0x2000498")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA6A4", Offset = "0x7FA6A4")]
		internal delegate void _FadeToColor(float fSeconds, float fRed, float fGreen, float fBlue, float fAlpha, bool bBackground);

		[Token(Token = "0x2000499")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA6B8", Offset = "0x7FA6B8")]
		internal delegate HmdColor_t _GetCurrentFadeColor(bool bBackground);

		[Token(Token = "0x200049A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA6CC", Offset = "0x7FA6CC")]
		internal delegate void _FadeGrid(float fSeconds, bool bFadeIn);

		[Token(Token = "0x200049B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA6E0", Offset = "0x7FA6E0")]
		internal delegate float _GetCurrentGridAlpha();

		[Token(Token = "0x200049C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA6F4", Offset = "0x7FA6F4")]
		internal delegate EVRCompositorError _SetSkyboxOverride([In][Out] Texture_t[] pTextures, uint unTextureCount);

		[Token(Token = "0x200049D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA708", Offset = "0x7FA708")]
		internal delegate void _ClearSkyboxOverride();

		[Token(Token = "0x200049E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA71C", Offset = "0x7FA71C")]
		internal delegate void _CompositorBringToFront();

		[Token(Token = "0x200049F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA730", Offset = "0x7FA730")]
		internal delegate void _CompositorGoToBack();

		[Token(Token = "0x20004A0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA744", Offset = "0x7FA744")]
		internal delegate void _CompositorQuit();

		[Token(Token = "0x20004A1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA758", Offset = "0x7FA758")]
		internal delegate bool _IsFullscreen();

		[Token(Token = "0x20004A2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA76C", Offset = "0x7FA76C")]
		internal delegate uint _GetCurrentSceneFocusProcess();

		[Token(Token = "0x20004A3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA780", Offset = "0x7FA780")]
		internal delegate uint _GetLastFrameRenderer();

		[Token(Token = "0x20004A4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA794", Offset = "0x7FA794")]
		internal delegate bool _CanRenderScene();

		[Token(Token = "0x20004A5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA7A8", Offset = "0x7FA7A8")]
		internal delegate void _ShowMirrorWindow();

		[Token(Token = "0x20004A6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA7BC", Offset = "0x7FA7BC")]
		internal delegate void _HideMirrorWindow();

		[Token(Token = "0x20004A7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA7D0", Offset = "0x7FA7D0")]
		internal delegate bool _IsMirrorWindowVisible();

		[Token(Token = "0x20004A8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA7E4", Offset = "0x7FA7E4")]
		internal delegate void _CompositorDumpImages();

		[Token(Token = "0x20004A9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA7F8", Offset = "0x7FA7F8")]
		internal delegate bool _ShouldAppRenderWithLowResources();

		[Token(Token = "0x20004AA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA80C", Offset = "0x7FA80C")]
		internal delegate void _ForceInterleavedReprojectionOn(bool bOverride);

		[Token(Token = "0x20004AB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA820", Offset = "0x7FA820")]
		internal delegate void _ForceReconnectProcess();

		[Token(Token = "0x20004AC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA834", Offset = "0x7FA834")]
		internal delegate void _SuspendRendering(bool bSuspend);

		[Token(Token = "0x20004AD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA848", Offset = "0x7FA848")]
		internal delegate EVRCompositorError _GetMirrorTextureD3D11(EVREye eEye, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView);

		[Token(Token = "0x20004AE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA85C", Offset = "0x7FA85C")]
		internal delegate void _ReleaseMirrorTextureD3D11(IntPtr pD3D11ShaderResourceView);

		[Token(Token = "0x20004AF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA870", Offset = "0x7FA870")]
		internal delegate EVRCompositorError _GetMirrorTextureGL(EVREye eEye, ref uint pglTextureId, IntPtr pglSharedTextureHandle);

		[Token(Token = "0x20004B0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA884", Offset = "0x7FA884")]
		internal delegate bool _ReleaseSharedGLTexture(uint glTextureId, IntPtr glSharedTextureHandle);

		[Token(Token = "0x20004B1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA898", Offset = "0x7FA898")]
		internal delegate void _LockGLSharedTextureForAccess(IntPtr glSharedTextureHandle);

		[Token(Token = "0x20004B2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA8AC", Offset = "0x7FA8AC")]
		internal delegate void _UnlockGLSharedTextureForAccess(IntPtr glSharedTextureHandle);

		[Token(Token = "0x20004B3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA8C0", Offset = "0x7FA8C0")]
		internal delegate uint _GetVulkanInstanceExtensionsRequired(StringBuilder pchValue, uint unBufferSize);

		[Token(Token = "0x20004B4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA8D4", Offset = "0x7FA8D4")]
		internal delegate uint _GetVulkanDeviceExtensionsRequired(IntPtr pPhysicalDevice, StringBuilder pchValue, uint unBufferSize);

		[Token(Token = "0x20004B5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA8E8", Offset = "0x7FA8E8")]
		internal delegate void _SetExplicitTimingMode(EVRCompositorTimingMode eTimingMode);

		[Token(Token = "0x20004B6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA8FC", Offset = "0x7FA8FC")]
		internal delegate EVRCompositorError _SubmitExplicitTimingData();

		[Token(Token = "0x40019C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _SetTrackingSpace SetTrackingSpace;

		[Token(Token = "0x40019C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetTrackingSpace GetTrackingSpace;

		[Token(Token = "0x40019C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _WaitGetPoses WaitGetPoses;

		[Token(Token = "0x40019C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetLastPoses GetLastPoses;

		[Token(Token = "0x40019C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetLastPoseForTrackedDeviceIndex GetLastPoseForTrackedDeviceIndex;

		[Token(Token = "0x40019CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _Submit Submit;

		[Token(Token = "0x40019CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _ClearLastSubmittedFrame ClearLastSubmittedFrame;

		[Token(Token = "0x40019CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _PostPresentHandoff PostPresentHandoff;

		[Token(Token = "0x40019CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetFrameTiming GetFrameTiming;

		[Token(Token = "0x40019CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetFrameTimings GetFrameTimings;

		[Token(Token = "0x40019CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _GetFrameTimeRemaining GetFrameTimeRemaining;

		[Token(Token = "0x40019D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetCumulativeStats GetCumulativeStats;

		[Token(Token = "0x40019D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _FadeToColor FadeToColor;

		[Token(Token = "0x40019D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetCurrentFadeColor GetCurrentFadeColor;

		[Token(Token = "0x40019D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _FadeGrid FadeGrid;

		[Token(Token = "0x40019D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetCurrentGridAlpha GetCurrentGridAlpha;

		[Token(Token = "0x40019D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _SetSkyboxOverride SetSkyboxOverride;

		[Token(Token = "0x40019D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _ClearSkyboxOverride ClearSkyboxOverride;

		[Token(Token = "0x40019D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _CompositorBringToFront CompositorBringToFront;

		[Token(Token = "0x40019D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _CompositorGoToBack CompositorGoToBack;

		[Token(Token = "0x40019D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _CompositorQuit CompositorQuit;

		[Token(Token = "0x40019DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _IsFullscreen IsFullscreen;

		[Token(Token = "0x40019DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _GetCurrentSceneFocusProcess GetCurrentSceneFocusProcess;

		[Token(Token = "0x40019DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _GetLastFrameRenderer GetLastFrameRenderer;

		[Token(Token = "0x40019DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _CanRenderScene CanRenderScene;

		[Token(Token = "0x40019DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _ShowMirrorWindow ShowMirrorWindow;

		[Token(Token = "0x40019DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _HideMirrorWindow HideMirrorWindow;

		[Token(Token = "0x40019E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal _IsMirrorWindowVisible IsMirrorWindowVisible;

		[Token(Token = "0x40019E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal _CompositorDumpImages CompositorDumpImages;

		[Token(Token = "0x40019E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal _ShouldAppRenderWithLowResources ShouldAppRenderWithLowResources;

		[Token(Token = "0x40019E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal _ForceInterleavedReprojectionOn ForceInterleavedReprojectionOn;

		[Token(Token = "0x40019E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		internal _ForceReconnectProcess ForceReconnectProcess;

		[Token(Token = "0x40019E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		internal _SuspendRendering SuspendRendering;

		[Token(Token = "0x40019E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		internal _GetMirrorTextureD3D11 GetMirrorTextureD3D11;

		[Token(Token = "0x40019E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		internal _ReleaseMirrorTextureD3D11 ReleaseMirrorTextureD3D11;

		[Token(Token = "0x40019E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		internal _GetMirrorTextureGL GetMirrorTextureGL;

		[Token(Token = "0x40019E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		internal _ReleaseSharedGLTexture ReleaseSharedGLTexture;

		[Token(Token = "0x40019EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		internal _LockGLSharedTextureForAccess LockGLSharedTextureForAccess;

		[Token(Token = "0x40019EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		internal _UnlockGLSharedTextureForAccess UnlockGLSharedTextureForAccess;

		[Token(Token = "0x40019EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		internal _GetVulkanInstanceExtensionsRequired GetVulkanInstanceExtensionsRequired;

		[Token(Token = "0x40019ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		internal _GetVulkanDeviceExtensionsRequired GetVulkanDeviceExtensionsRequired;

		[Token(Token = "0x40019EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		internal _SetExplicitTimingMode SetExplicitTimingMode;

		[Token(Token = "0x40019EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		internal _SubmitExplicitTimingData SubmitExplicitTimingData;
	}
	[Token(Token = "0x2000210")]
	public struct IVROverlay
	{
		[Token(Token = "0x20004B7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA910", Offset = "0x7FA910")]
		internal delegate EVROverlayError _FindOverlay(string pchOverlayKey, ref ulong pOverlayHandle);

		[Token(Token = "0x20004B8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA924", Offset = "0x7FA924")]
		internal delegate EVROverlayError _CreateOverlay(string pchOverlayKey, string pchOverlayName, ref ulong pOverlayHandle);

		[Token(Token = "0x20004B9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA938", Offset = "0x7FA938")]
		internal delegate EVROverlayError _DestroyOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x20004BA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA94C", Offset = "0x7FA94C")]
		internal delegate EVROverlayError _SetHighQualityOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x20004BB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA960", Offset = "0x7FA960")]
		internal delegate ulong _GetHighQualityOverlay();

		[Token(Token = "0x20004BC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA974", Offset = "0x7FA974")]
		internal delegate uint _GetOverlayKey(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError);

		[Token(Token = "0x20004BD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA988", Offset = "0x7FA988")]
		internal delegate uint _GetOverlayName(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError);

		[Token(Token = "0x20004BE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA99C", Offset = "0x7FA99C")]
		internal delegate EVROverlayError _SetOverlayName(ulong ulOverlayHandle, string pchName);

		[Token(Token = "0x20004BF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA9B0", Offset = "0x7FA9B0")]
		internal delegate EVROverlayError _GetOverlayImageData(ulong ulOverlayHandle, IntPtr pvBuffer, uint unBufferSize, ref uint punWidth, ref uint punHeight);

		[Token(Token = "0x20004C0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA9C4", Offset = "0x7FA9C4")]
		internal delegate IntPtr _GetOverlayErrorNameFromEnum(EVROverlayError error);

		[Token(Token = "0x20004C1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA9D8", Offset = "0x7FA9D8")]
		internal delegate EVROverlayError _SetOverlayRenderingPid(ulong ulOverlayHandle, uint unPID);

		[Token(Token = "0x20004C2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FA9EC", Offset = "0x7FA9EC")]
		internal delegate uint _GetOverlayRenderingPid(ulong ulOverlayHandle);

		[Token(Token = "0x20004C3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FAA00", Offset = "0x7FAA00")]
		internal delegate EVROverlayError _SetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, bool bEnabled);

		[Token(Token = "0x20004C4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FAA14", Offset = "0x7FAA14")]
		internal delegate EVROverlayError _GetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, ref bool pbEnabled);

		[Token(Token = "0x20004C5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FAA28", Offset = "0x7FAA28")]
		internal delegate EVROverlayError _SetOverlayColor(ulong ulOverlayHandle, float fRed, float fGreen, float fBlue);

		[Token(Token = "0x20004C6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FAA3C", Offset = "0x7FAA3C")]
		internal delegate EVROverlayError _GetOverlayColor(ulong ulOverlayHandle, ref float pfRed, ref float pfGreen, ref float pfBlue);

		[Token(Token = "0x20004C7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FAA50", Offset = "0x7FAA50")]
		internal delegate EVROverlayError _SetOverlayAlpha(ulong ulOverlayHandle, float fAlpha);

		[Token(Token = "0x20004C8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FAA64", Offset = "0x7FAA64")]
		internal delegate EVROverlayError _GetOverlayAlpha(ulong ulOverlayHandle, ref float pfAlpha);

		[Token(Token = "0x20004C9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FAA78", Offset = "0x7FAA78")]
		internal delegate EVROverlayError _SetOverlayTexelAspect(ulong ulOverlayHandle, float fTexelAspect);

		[Token(Token = "0x20004CA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FAA8C", Offset = "0x7FAA8C")]
		internal delegate EVROverlayError _GetOverlayTexelAspect(ulong ulOverlayHandle, ref float pfTexelAspect);

		[Token(Token = "0x20004CB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FAAA0", Offset = "0x7FAAA0")]
		internal delegate EVROverlayError _SetOverlaySortOrder(ulong ulOverlayHandle, uint unSortOrder);

		[Token(Token = "0x20004CC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FAAB4", Offset = "0x7FAAB4")]
		internal delegate EVROverlayError _GetOverlaySortOrder(ulong ulOverlayHandle, ref uint punSortOrder);

		[Token(Token = "0x20004CD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FAAC8", Offset = "0x7FAAC8")]
		internal delegate EVROverlayError _SetOverlayWidthInMeters(ulong ulOverlayHandle, float fWidthInMeters);

		[Token(Token = "0x20004CE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FAADC", Offset = "0x7FAADC")]
		internal delegate EVROverlayError _GetOverlayWidthInMeters(ulong ulOverlayHandle, ref float pfWidthInMeters);

		[Token(Token = "0x20004CF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FAAF0", Offset = "0x7FAAF0")]
		internal delegate EVROverlayError _SetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, float fMinDistanceInMeters, float fMaxDistanceInMeters);

		[Token(Token = "0x20004D0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FAB04", Offset = "0x7FAB04")]
		internal delegate EVROverlayError _GetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, ref float pfMinDistanceInMeters, ref float pfMaxDistanceInMeters);

		[Token(Token = "0x20004D1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FAB18", Offset = "0x7FAB18")]
		internal delegate EVROverlayError _SetOverlayTextureColorSpace(ulong ulOverlayHandle, EColorSpace eTextureColorSpace);

		[Token(Token = "0x20004D2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FAB2C", Offset = "0x7FAB2C")]
		internal delegate EVROverlayError _GetOverlayTextureColorSpace(ulong ulOverlayHandle, ref EColorSpace peTextureColorSpace);

		[Token(Token = "0x20004D3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FAB40", Offset = "0x7FAB40")]
		internal delegate EVROverlayError _SetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds);

		[Token(Token = "0x20004D4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FAB54", Offset = "0x7FAB54")]
		internal delegate EVROverlayError _GetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds);

		[Token(Token = "0x20004D5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FAB68", Offset = "0x7FAB68")]
		internal delegate uint _GetOverlayRenderModel(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref HmdColor_t pColor, ref EVROverlayError pError);

		[Token(Token = "0x20004D6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FAB7C", Offset = "0x7FAB7C")]
		internal delegate EVROverlayError _SetOverlayRenderModel(ulong ulOverlayHandle, string pchRenderModel, ref HmdColor_t pColor);

		[Token(Token = "0x20004D7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FAB90", Offset = "0x7FAB90")]
		internal delegate EVROverlayError _GetOverlayTransformType(ulong ulOverlayHandle, ref VROverlayTransformType peTransformType);

		[Token(Token = "0x20004D8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FABA4", Offset = "0x7FABA4")]
		internal delegate EVROverlayError _SetOverlayTransformAbsolute(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform);

		[Token(Token = "0x20004D9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FABB8", Offset = "0x7FABB8")]
		internal delegate EVROverlayError _GetOverlayTransformAbsolute(ulong ulOverlayHandle, ref ETrackingUniverseOrigin peTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform);

		[Token(Token = "0x20004DA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FABCC", Offset = "0x7FABCC")]
		internal delegate EVROverlayError _SetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, uint unTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform);

		[Token(Token = "0x20004DB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FABE0", Offset = "0x7FABE0")]
		internal delegate EVROverlayError _GetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, ref uint punTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform);

		[Token(Token = "0x20004DC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FABF4", Offset = "0x7FABF4")]
		internal delegate EVROverlayError _SetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, uint unDeviceIndex, string pchComponentName);

		[Token(Token = "0x20004DD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FAC08", Offset = "0x7FAC08")]
		internal delegate EVROverlayError _GetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, ref uint punDeviceIndex, StringBuilder pchComponentName, uint unComponentNameSize);

		[Token(Token = "0x20004DE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FAC1C", Offset = "0x7FAC1C")]
		internal delegate EVROverlayError _GetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ref ulong ulOverlayHandleParent, ref HmdMatrix34_t pmatParentOverlayToOverlayTransform);

		[Token(Token = "0x20004DF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FAC30", Offset = "0x7FAC30")]
		internal delegate EVROverlayError _SetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ulong ulOverlayHandleParent, ref HmdMatrix34_t pmatParentOverlayToOverlayTransform);

		[Token(Token = "0x20004E0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FAC44", Offset = "0x7FAC44")]
		internal delegate EVROverlayError _ShowOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x20004E1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FAC58", Offset = "0x7FAC58")]
		internal delegate EVROverlayError _HideOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x20004E2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FAC6C", Offset = "0x7FAC6C")]
		internal delegate bool _IsOverlayVisible(ulong ulOverlayHandle);

		[Token(Token = "0x20004E3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FAC80", Offset = "0x7FAC80")]
		internal delegate EVROverlayError _GetTransformForOverlayCoordinates(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, HmdVector2_t coordinatesInOverlay, ref HmdMatrix34_t pmatTransform);

		[Token(Token = "0x20004E4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FAC94", Offset = "0x7FAC94")]
		internal delegate bool _PollNextOverlayEvent(ulong ulOverlayHandle, ref VREvent_t pEvent, uint uncbVREvent);

		[Token(Token = "0x20004E5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FACA8", Offset = "0x7FACA8")]
		internal delegate EVROverlayError _GetOverlayInputMethod(ulong ulOverlayHandle, ref VROverlayInputMethod peInputMethod);

		[Token(Token = "0x20004E6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FACBC", Offset = "0x7FACBC")]
		internal delegate EVROverlayError _SetOverlayInputMethod(ulong ulOverlayHandle, VROverlayInputMethod eInputMethod);

		[Token(Token = "0x20004E7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FACD0", Offset = "0x7FACD0")]
		internal delegate EVROverlayError _GetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale);

		[Token(Token = "0x20004E8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FACE4", Offset = "0x7FACE4")]
		internal delegate EVROverlayError _SetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale);

		[Token(Token = "0x20004E9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FACF8", Offset = "0x7FACF8")]
		internal delegate bool _ComputeOverlayIntersection(ulong ulOverlayHandle, ref VROverlayIntersectionParams_t pParams, ref VROverlayIntersectionResults_t pResults);

		[Token(Token = "0x20004EA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FAD0C", Offset = "0x7FAD0C")]
		internal delegate bool _IsHoverTargetOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x20004EB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FAD20", Offset = "0x7FAD20")]
		internal delegate ulong _GetGamepadFocusOverlay();

		[Token(Token = "0x20004EC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FAD34", Offset = "0x7FAD34")]
		internal delegate EVROverlayError _SetGamepadFocusOverlay(ulong ulNewFocusOverlay);

		[Token(Token = "0x20004ED")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FAD48", Offset = "0x7FAD48")]
		internal delegate EVROverlayError _SetOverlayNeighbor(EOverlayDirection eDirection, ulong ulFrom, ulong ulTo);

		[Token(Token = "0x20004EE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FAD5C", Offset = "0x7FAD5C")]
		internal delegate EVROverlayError _MoveGamepadFocusToNeighbor(EOverlayDirection eDirection, ulong ulFrom);

		[Token(Token = "0x20004EF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FAD70", Offset = "0x7FAD70")]
		internal delegate EVROverlayError _SetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, IntPtr vCenter, float fRadius);

		[Token(Token = "0x20004F0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FAD84", Offset = "0x7FAD84")]
		internal delegate EVROverlayError _GetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, ref HmdVector2_t pvCenter, ref float pfRadius);

		[Token(Token = "0x20004F1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FAD98", Offset = "0x7FAD98")]
		internal delegate EVROverlayError _SetOverlayTexture(ulong ulOverlayHandle, ref Texture_t pTexture);

		[Token(Token = "0x20004F2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FADAC", Offset = "0x7FADAC")]
		internal delegate EVROverlayError _ClearOverlayTexture(ulong ulOverlayHandle);

		[Token(Token = "0x20004F3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FADC0", Offset = "0x7FADC0")]
		internal delegate EVROverlayError _SetOverlayRaw(ulong ulOverlayHandle, IntPtr pvBuffer, uint unWidth, uint unHeight, uint unDepth);

		[Token(Token = "0x20004F4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FADD4", Offset = "0x7FADD4")]
		internal delegate EVROverlayError _SetOverlayFromFile(ulong ulOverlayHandle, string pchFilePath);

		[Token(Token = "0x20004F5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FADE8", Offset = "0x7FADE8")]
		internal delegate EVROverlayError _GetOverlayTexture(ulong ulOverlayHandle, ref IntPtr pNativeTextureHandle, IntPtr pNativeTextureRef, ref uint pWidth, ref uint pHeight, ref uint pNativeFormat, ref ETextureType pAPIType, ref EColorSpace pColorSpace, ref VRTextureBounds_t pTextureBounds);

		[Token(Token = "0x20004F6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FADFC", Offset = "0x7FADFC")]
		internal delegate EVROverlayError _ReleaseNativeOverlayHandle(ulong ulOverlayHandle, IntPtr pNativeTextureHandle);

		[Token(Token = "0x20004F7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FAE10", Offset = "0x7FAE10")]
		internal delegate EVROverlayError _GetOverlayTextureSize(ulong ulOverlayHandle, ref uint pWidth, ref uint pHeight);

		[Token(Token = "0x20004F8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FAE24", Offset = "0x7FAE24")]
		internal delegate EVROverlayError _CreateDashboardOverlay(string pchOverlayKey, string pchOverlayFriendlyName, ref ulong pMainHandle, ref ulong pThumbnailHandle);

		[Token(Token = "0x20004F9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FAE38", Offset = "0x7FAE38")]
		internal delegate bool _IsDashboardVisible();

		[Token(Token = "0x20004FA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FAE4C", Offset = "0x7FAE4C")]
		internal delegate bool _IsActiveDashboardOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x20004FB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FAE60", Offset = "0x7FAE60")]
		internal delegate EVROverlayError _SetDashboardOverlaySceneProcess(ulong ulOverlayHandle, uint unProcessId);

		[Token(Token = "0x20004FC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FAE74", Offset = "0x7FAE74")]
		internal delegate EVROverlayError _GetDashboardOverlaySceneProcess(ulong ulOverlayHandle, ref uint punProcessId);

		[Token(Token = "0x20004FD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FAE88", Offset = "0x7FAE88")]
		internal delegate void _ShowDashboard(string pchOverlayToShow);

		[Token(Token = "0x20004FE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FAE9C", Offset = "0x7FAE9C")]
		internal delegate uint _GetPrimaryDashboardDevice();

		[Token(Token = "0x20004FF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FAEB0", Offset = "0x7FAEB0")]
		internal delegate EVROverlayError _ShowKeyboard(int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue);

		[Token(Token = "0x2000500")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FAEC4", Offset = "0x7FAEC4")]
		internal delegate EVROverlayError _ShowKeyboardForOverlay(ulong ulOverlayHandle, int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue);

		[Token(Token = "0x2000501")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FAED8", Offset = "0x7FAED8")]
		internal delegate uint _GetKeyboardText(StringBuilder pchText, uint cchText);

		[Token(Token = "0x2000502")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FAEEC", Offset = "0x7FAEEC")]
		internal delegate void _HideKeyboard();

		[Token(Token = "0x2000503")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FAF00", Offset = "0x7FAF00")]
		internal delegate void _SetKeyboardTransformAbsolute(ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToKeyboardTransform);

		[Token(Token = "0x2000504")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FAF14", Offset = "0x7FAF14")]
		internal delegate void _SetKeyboardPositionForOverlay(ulong ulOverlayHandle, HmdRect2_t avoidRect);

		[Token(Token = "0x2000505")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FAF28", Offset = "0x7FAF28")]
		internal delegate EVROverlayError _SetOverlayIntersectionMask(ulong ulOverlayHandle, ref VROverlayIntersectionMaskPrimitive_t pMaskPrimitives, uint unNumMaskPrimitives, uint unPrimitiveSize);

		[Token(Token = "0x2000506")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FAF3C", Offset = "0x7FAF3C")]
		internal delegate EVROverlayError _GetOverlayFlags(ulong ulOverlayHandle, ref uint pFlags);

		[Token(Token = "0x2000507")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FAF50", Offset = "0x7FAF50")]
		internal delegate VRMessageOverlayResponse _ShowMessageOverlay(string pchText, string pchCaption, string pchButton0Text, string pchButton1Text, string pchButton2Text, string pchButton3Text);

		[Token(Token = "0x2000508")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FAF64", Offset = "0x7FAF64")]
		internal delegate void _CloseMessageOverlay();

		[Token(Token = "0x40019F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _FindOverlay FindOverlay;

		[Token(Token = "0x40019F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _CreateOverlay CreateOverlay;

		[Token(Token = "0x40019F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _DestroyOverlay DestroyOverlay;

		[Token(Token = "0x40019F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _SetHighQualityOverlay SetHighQualityOverlay;

		[Token(Token = "0x40019F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetHighQualityOverlay GetHighQualityOverlay;

		[Token(Token = "0x40019F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetOverlayKey GetOverlayKey;

		[Token(Token = "0x40019F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetOverlayName GetOverlayName;

		[Token(Token = "0x40019F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _SetOverlayName SetOverlayName;

		[Token(Token = "0x40019F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetOverlayImageData GetOverlayImageData;

		[Token(Token = "0x40019F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetOverlayErrorNameFromEnum GetOverlayErrorNameFromEnum;

		[Token(Token = "0x40019FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _SetOverlayRenderingPid SetOverlayRenderingPid;

		[Token(Token = "0x40019FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetOverlayRenderingPid GetOverlayRenderingPid;

		[Token(Token = "0x40019FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _SetOverlayFlag SetOverlayFlag;

		[Token(Token = "0x40019FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetOverlayFlag GetOverlayFlag;

		[Token(Token = "0x40019FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _SetOverlayColor SetOverlayColor;

		[Token(Token = "0x40019FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetOverlayColor GetOverlayColor;

		[Token(Token = "0x4001A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _SetOverlayAlpha SetOverlayAlpha;

		[Token(Token = "0x4001A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _GetOverlayAlpha GetOverlayAlpha;

		[Token(Token = "0x4001A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _SetOverlayTexelAspect SetOverlayTexelAspect;

		[Token(Token = "0x4001A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _GetOverlayTexelAspect GetOverlayTexelAspect;

		[Token(Token = "0x4001A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _SetOverlaySortOrder SetOverlaySortOrder;

		[Token(Token = "0x4001A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _GetOverlaySortOrder GetOverlaySortOrder;

		[Token(Token = "0x4001A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _SetOverlayWidthInMeters SetOverlayWidthInMeters;

		[Token(Token = "0x4001A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _GetOverlayWidthInMeters GetOverlayWidthInMeters;

		[Token(Token = "0x4001A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _SetOverlayAutoCurveDistanceRangeInMeters SetOverlayAutoCurveDistanceRangeInMeters;

		[Token(Token = "0x4001A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _GetOverlayAutoCurveDistanceRangeInMeters GetOverlayAutoCurveDistanceRangeInMeters;

		[Token(Token = "0x4001A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _SetOverlayTextureColorSpace SetOverlayTextureColorSpace;

		[Token(Token = "0x4001A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal _GetOverlayTextureColorSpace GetOverlayTextureColorSpace;

		[Token(Token = "0x4001A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal _SetOverlayTextureBounds SetOverlayTextureBounds;

		[Token(Token = "0x4001A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal _GetOverlayTextureBounds GetOverlayTextureBounds;

		[Token(Token = "0x4001A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal _GetOverlayRenderModel GetOverlayRenderModel;

		[Token(Token = "0x4001A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		internal _SetOverlayRenderModel SetOverlayRenderModel;

		[Token(Token = "0x4001A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		internal _GetOverlayTransformType GetOverlayTransformType;

		[Token(Token = "0x4001A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		internal _SetOverlayTransformAbsolute SetOverlayTransformAbsolute;

		[Token(Token = "0x4001A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		internal _GetOverlayTransformAbsolute GetOverlayTransformAbsolute;

		[Token(Token = "0x4001A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		internal _SetOverlayTransformTrackedDeviceRelative SetOverlayTransformTrackedDeviceRelative;

		[Token(Token = "0x4001A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		internal _GetOverlayTransformTrackedDeviceRelative GetOverlayTransformTrackedDeviceRelative;

		[Token(Token = "0x4001A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		internal _SetOverlayTransformTrackedDeviceComponent SetOverlayTransformTrackedDeviceComponent;

		[Token(Token = "0x4001A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		internal _GetOverlayTransformTrackedDeviceComponent GetOverlayTransformTrackedDeviceComponent;

		[Token(Token = "0x4001A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		internal _GetOverlayTransformOverlayRelative GetOverlayTransformOverlayRelative;

		[Token(Token = "0x4001A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		internal _SetOverlayTransformOverlayRelative SetOverlayTransformOverlayRelative;

		[Token(Token = "0x4001A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		internal _ShowOverlay ShowOverlay;

		[Token(Token = "0x4001A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		internal _HideOverlay HideOverlay;

		[Token(Token = "0x4001A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		internal _IsOverlayVisible IsOverlayVisible;

		[Token(Token = "0x4001A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		internal _GetTransformForOverlayCoordinates GetTransformForOverlayCoordinates;

		[Token(Token = "0x4001A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		internal _PollNextOverlayEvent PollNextOverlayEvent;

		[Token(Token = "0x4001A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		internal _GetOverlayInputMethod GetOverlayInputMethod;

		[Token(Token = "0x4001A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		internal _SetOverlayInputMethod SetOverlayInputMethod;

		[Token(Token = "0x4001A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		internal _GetOverlayMouseScale GetOverlayMouseScale;

		[Token(Token = "0x4001A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		internal _SetOverlayMouseScale SetOverlayMouseScale;

		[Token(Token = "0x4001A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		internal _ComputeOverlayIntersection ComputeOverlayIntersection;

		[Token(Token = "0x4001A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		internal _IsHoverTargetOverlay IsHoverTargetOverlay;

		[Token(Token = "0x4001A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		internal _GetGamepadFocusOverlay GetGamepadFocusOverlay;

		[Token(Token = "0x4001A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		internal _SetGamepadFocusOverlay SetGamepadFocusOverlay;

		[Token(Token = "0x4001A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		internal _SetOverlayNeighbor SetOverlayNeighbor;

		[Token(Token = "0x4001A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		internal _MoveGamepadFocusToNeighbor MoveGamepadFocusToNeighbor;

		[Token(Token = "0x4001A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		internal _SetOverlayDualAnalogTransform SetOverlayDualAnalogTransform;

		[Token(Token = "0x4001A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		internal _GetOverlayDualAnalogTransform GetOverlayDualAnalogTransform;

		[Token(Token = "0x4001A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		internal _SetOverlayTexture SetOverlayTexture;

		[Token(Token = "0x4001A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		internal _ClearOverlayTexture ClearOverlayTexture;

		[Token(Token = "0x4001A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		internal _SetOverlayRaw SetOverlayRaw;

		[Token(Token = "0x4001A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		internal _SetOverlayFromFile SetOverlayFromFile;

		[Token(Token = "0x4001A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		internal _GetOverlayTexture GetOverlayTexture;

		[Token(Token = "0x4001A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		internal _ReleaseNativeOverlayHandle ReleaseNativeOverlayHandle;

		[Token(Token = "0x4001A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		internal _GetOverlayTextureSize GetOverlayTextureSize;

		[Token(Token = "0x4001A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		internal _CreateDashboardOverlay CreateDashboardOverlay;

		[Token(Token = "0x4001A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		internal _IsDashboardVisible IsDashboardVisible;

		[Token(Token = "0x4001A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		internal _IsActiveDashboardOverlay IsActiveDashboardOverlay;

		[Token(Token = "0x4001A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		internal _SetDashboardOverlaySceneProcess SetDashboardOverlaySceneProcess;

		[Token(Token = "0x4001A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		internal _GetDashboardOverlaySceneProcess GetDashboardOverlaySceneProcess;

		[Token(Token = "0x4001A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		internal _ShowDashboard ShowDashboard;

		[Token(Token = "0x4001A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		internal _GetPrimaryDashboardDevice GetPrimaryDashboardDevice;

		[Token(Token = "0x4001A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		internal _ShowKeyboard ShowKeyboard;

		[Token(Token = "0x4001A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		internal _ShowKeyboardForOverlay ShowKeyboardForOverlay;

		[Token(Token = "0x4001A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		internal _GetKeyboardText GetKeyboardText;

		[Token(Token = "0x4001A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		internal _HideKeyboard HideKeyboard;

		[Token(Token = "0x4001A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		internal _SetKeyboardTransformAbsolute SetKeyboardTransformAbsolute;

		[Token(Token = "0x4001A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		internal _SetKeyboardPositionForOverlay SetKeyboardPositionForOverlay;

		[Token(Token = "0x4001A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		internal _SetOverlayIntersectionMask SetOverlayIntersectionMask;

		[Token(Token = "0x4001A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		internal _GetOverlayFlags GetOverlayFlags;

		[Token(Token = "0x4001A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		internal _ShowMessageOverlay ShowMessageOverlay;

		[Token(Token = "0x4001A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		internal _CloseMessageOverlay CloseMessageOverlay;
	}
	[Token(Token = "0x2000211")]
	public struct IVRRenderModels
	{
		[Token(Token = "0x2000509")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FAF78", Offset = "0x7FAF78")]
		internal delegate EVRRenderModelError _LoadRenderModel_Async(string pchRenderModelName, ref IntPtr ppRenderModel);

		[Token(Token = "0x200050A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FAF8C", Offset = "0x7FAF8C")]
		internal delegate void _FreeRenderModel(IntPtr pRenderModel);

		[Token(Token = "0x200050B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FAFA0", Offset = "0x7FAFA0")]
		internal delegate EVRRenderModelError _LoadTexture_Async(int textureId, ref IntPtr ppTexture);

		[Token(Token = "0x200050C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FAFB4", Offset = "0x7FAFB4")]
		internal delegate void _FreeTexture(IntPtr pTexture);

		[Token(Token = "0x200050D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FAFC8", Offset = "0x7FAFC8")]
		internal delegate EVRRenderModelError _LoadTextureD3D11_Async(int textureId, IntPtr pD3D11Device, ref IntPtr ppD3D11Texture2D);

		[Token(Token = "0x200050E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FAFDC", Offset = "0x7FAFDC")]
		internal delegate EVRRenderModelError _LoadIntoTextureD3D11_Async(int textureId, IntPtr pDstTexture);

		[Token(Token = "0x200050F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FAFF0", Offset = "0x7FAFF0")]
		internal delegate void _FreeTextureD3D11(IntPtr pD3D11Texture2D);

		[Token(Token = "0x2000510")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FB004", Offset = "0x7FB004")]
		internal delegate uint _GetRenderModelName(uint unRenderModelIndex, StringBuilder pchRenderModelName, uint unRenderModelNameLen);

		[Token(Token = "0x2000511")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FB018", Offset = "0x7FB018")]
		internal delegate uint _GetRenderModelCount();

		[Token(Token = "0x2000512")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FB02C", Offset = "0x7FB02C")]
		internal delegate uint _GetComponentCount(string pchRenderModelName);

		[Token(Token = "0x2000513")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FB040", Offset = "0x7FB040")]
		internal delegate uint _GetComponentName(string pchRenderModelName, uint unComponentIndex, StringBuilder pchComponentName, uint unComponentNameLen);

		[Token(Token = "0x2000514")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FB054", Offset = "0x7FB054")]
		internal delegate ulong _GetComponentButtonMask(string pchRenderModelName, string pchComponentName);

		[Token(Token = "0x2000515")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FB068", Offset = "0x7FB068")]
		internal delegate uint _GetComponentRenderModelName(string pchRenderModelName, string pchComponentName, StringBuilder pchComponentRenderModelName, uint unComponentRenderModelNameLen);

		[Token(Token = "0x2000516")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FB07C", Offset = "0x7FB07C")]
		internal delegate bool _GetComponentState(string pchRenderModelName, string pchComponentName, ref VRControllerState_t pControllerState, ref RenderModel_ControllerMode_State_t pState, ref RenderModel_ComponentState_t pComponentState);

		[Token(Token = "0x2000517")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FB090", Offset = "0x7FB090")]
		internal delegate bool _RenderModelHasComponent(string pchRenderModelName, string pchComponentName);

		[Token(Token = "0x2000518")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FB0A4", Offset = "0x7FB0A4")]
		internal delegate uint _GetRenderModelThumbnailURL(string pchRenderModelName, StringBuilder pchThumbnailURL, uint unThumbnailURLLen, ref EVRRenderModelError peError);

		[Token(Token = "0x2000519")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FB0B8", Offset = "0x7FB0B8")]
		internal delegate uint _GetRenderModelOriginalPath(string pchRenderModelName, StringBuilder pchOriginalPath, uint unOriginalPathLen, ref EVRRenderModelError peError);

		[Token(Token = "0x200051A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FB0CC", Offset = "0x7FB0CC")]
		internal delegate IntPtr _GetRenderModelErrorNameFromEnum(EVRRenderModelError error);

		[Token(Token = "0x4001A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _LoadRenderModel_Async LoadRenderModel_Async;

		[Token(Token = "0x4001A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _FreeRenderModel FreeRenderModel;

		[Token(Token = "0x4001A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _LoadTexture_Async LoadTexture_Async;

		[Token(Token = "0x4001A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _FreeTexture FreeTexture;

		[Token(Token = "0x4001A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _LoadTextureD3D11_Async LoadTextureD3D11_Async;

		[Token(Token = "0x4001A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _LoadIntoTextureD3D11_Async LoadIntoTextureD3D11_Async;

		[Token(Token = "0x4001A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _FreeTextureD3D11 FreeTextureD3D11;

		[Token(Token = "0x4001A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetRenderModelName GetRenderModelName;

		[Token(Token = "0x4001A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetRenderModelCount GetRenderModelCount;

		[Token(Token = "0x4001A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetComponentCount GetComponentCount;

		[Token(Token = "0x4001A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _GetComponentName GetComponentName;

		[Token(Token = "0x4001A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetComponentButtonMask GetComponentButtonMask;

		[Token(Token = "0x4001A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _GetComponentRenderModelName GetComponentRenderModelName;

		[Token(Token = "0x4001A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetComponentState GetComponentState;

		[Token(Token = "0x4001A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _RenderModelHasComponent RenderModelHasComponent;

		[Token(Token = "0x4001A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetRenderModelThumbnailURL GetRenderModelThumbnailURL;

		[Token(Token = "0x4001A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _GetRenderModelOriginalPath GetRenderModelOriginalPath;

		[Token(Token = "0x4001A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _GetRenderModelErrorNameFromEnum GetRenderModelErrorNameFromEnum;
	}
	[Token(Token = "0x2000212")]
	public struct IVRNotifications
	{
		[Token(Token = "0x200051B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FB0E0", Offset = "0x7FB0E0")]
		internal delegate EVRNotificationError _CreateNotification(ulong ulOverlayHandle, ulong ulUserValue, EVRNotificationType type, string pchText, EVRNotificationStyle style, ref NotificationBitmap_t pImage, ref uint pNotificationId);

		[Token(Token = "0x200051C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FB0F4", Offset = "0x7FB0F4")]
		internal delegate EVRNotificationError _RemoveNotification(uint notificationId);

		[Token(Token = "0x4001A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _CreateNotification CreateNotification;

		[Token(Token = "0x4001A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _RemoveNotification RemoveNotification;
	}
	[Token(Token = "0x2000213")]
	public struct IVRSettings
	{
		[Token(Token = "0x200051D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FB108", Offset = "0x7FB108")]
		internal delegate IntPtr _GetSettingsErrorNameFromEnum(EVRSettingsError eError);

		[Token(Token = "0x200051E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FB11C", Offset = "0x7FB11C")]
		internal delegate bool _Sync(bool bForce, ref EVRSettingsError peError);

		[Token(Token = "0x200051F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FB130", Offset = "0x7FB130")]
		internal delegate void _SetBool(string pchSection, string pchSettingsKey, bool bValue, ref EVRSettingsError peError);

		[Token(Token = "0x2000520")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FB144", Offset = "0x7FB144")]
		internal delegate void _SetInt32(string pchSection, string pchSettingsKey, int nValue, ref EVRSettingsError peError);

		[Token(Token = "0x2000521")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FB158", Offset = "0x7FB158")]
		internal delegate void _SetFloat(string pchSection, string pchSettingsKey, float flValue, ref EVRSettingsError peError);

		[Token(Token = "0x2000522")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FB16C", Offset = "0x7FB16C")]
		internal delegate void _SetString(string pchSection, string pchSettingsKey, string pchValue, ref EVRSettingsError peError);

		[Token(Token = "0x2000523")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FB180", Offset = "0x7FB180")]
		internal delegate bool _GetBool(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x2000524")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FB194", Offset = "0x7FB194")]
		internal delegate int _GetInt32(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x2000525")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FB1A8", Offset = "0x7FB1A8")]
		internal delegate float _GetFloat(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x2000526")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FB1BC", Offset = "0x7FB1BC")]
		internal delegate void _GetString(string pchSection, string pchSettingsKey, StringBuilder pchValue, uint unValueLen, ref EVRSettingsError peError);

		[Token(Token = "0x2000527")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FB1D0", Offset = "0x7FB1D0")]
		internal delegate void _RemoveSection(string pchSection, ref EVRSettingsError peError);

		[Token(Token = "0x2000528")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FB1E4", Offset = "0x7FB1E4")]
		internal delegate void _RemoveKeyInSection(string pchSection, string pchSettingsKey, ref EVRSettingsError peError);

		[Token(Token = "0x4001A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetSettingsErrorNameFromEnum GetSettingsErrorNameFromEnum;

		[Token(Token = "0x4001A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _Sync Sync;

		[Token(Token = "0x4001A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _SetBool SetBool;

		[Token(Token = "0x4001A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _SetInt32 SetInt32;

		[Token(Token = "0x4001A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _SetFloat SetFloat;

		[Token(Token = "0x4001A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _SetString SetString;

		[Token(Token = "0x4001A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetBool GetBool;

		[Token(Token = "0x4001A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetInt32 GetInt32;

		[Token(Token = "0x4001A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetFloat GetFloat;

		[Token(Token = "0x4001A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetString GetString;

		[Token(Token = "0x4001A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _RemoveSection RemoveSection;

		[Token(Token = "0x4001A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _RemoveKeyInSection RemoveKeyInSection;
	}
	[Token(Token = "0x2000214")]
	public struct IVRScreenshots
	{
		[Token(Token = "0x2000529")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FB1F8", Offset = "0x7FB1F8")]
		internal delegate EVRScreenshotError _RequestScreenshot(ref uint pOutScreenshotHandle, EVRScreenshotType type, string pchPreviewFilename, string pchVRFilename);

		[Token(Token = "0x200052A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FB20C", Offset = "0x7FB20C")]
		internal delegate EVRScreenshotError _HookScreenshot([In][Out] EVRScreenshotType[] pSupportedTypes, int numTypes);

		[Token(Token = "0x200052B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FB220", Offset = "0x7FB220")]
		internal delegate EVRScreenshotType _GetScreenshotPropertyType(uint screenshotHandle, ref EVRScreenshotError pError);

		[Token(Token = "0x200052C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FB234", Offset = "0x7FB234")]
		internal delegate uint _GetScreenshotPropertyFilename(uint screenshotHandle, EVRScreenshotPropertyFilenames filenameType, StringBuilder pchFilename, uint cchFilename, ref EVRScreenshotError pError);

		[Token(Token = "0x200052D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FB248", Offset = "0x7FB248")]
		internal delegate EVRScreenshotError _UpdateScreenshotProgress(uint screenshotHandle, float flProgress);

		[Token(Token = "0x200052E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FB25C", Offset = "0x7FB25C")]
		internal delegate EVRScreenshotError _TakeStereoScreenshot(ref uint pOutScreenshotHandle, string pchPreviewFilename, string pchVRFilename);

		[Token(Token = "0x200052F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FB270", Offset = "0x7FB270")]
		internal delegate EVRScreenshotError _SubmitScreenshot(uint screenshotHandle, EVRScreenshotType type, string pchSourcePreviewFilename, string pchSourceVRFilename);

		[Token(Token = "0x4001A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _RequestScreenshot RequestScreenshot;

		[Token(Token = "0x4001A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _HookScreenshot HookScreenshot;

		[Token(Token = "0x4001A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetScreenshotPropertyType GetScreenshotPropertyType;

		[Token(Token = "0x4001A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetScreenshotPropertyFilename GetScreenshotPropertyFilename;

		[Token(Token = "0x4001A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _UpdateScreenshotProgress UpdateScreenshotProgress;

		[Token(Token = "0x4001A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _TakeStereoScreenshot TakeStereoScreenshot;

		[Token(Token = "0x4001A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _SubmitScreenshot SubmitScreenshot;
	}
	[Token(Token = "0x2000215")]
	public struct IVRResources
	{
		[Token(Token = "0x2000530")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FB284", Offset = "0x7FB284")]
		internal delegate uint _LoadSharedResource(string pchResourceName, string pchBuffer, uint unBufferLen);

		[Token(Token = "0x2000531")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FB298", Offset = "0x7FB298")]
		internal delegate uint _GetResourceFullPath(string pchResourceName, string pchResourceTypeDirectory, StringBuilder pchPathBuffer, uint unBufferLen);

		[Token(Token = "0x4001A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _LoadSharedResource LoadSharedResource;

		[Token(Token = "0x4001A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetResourceFullPath GetResourceFullPath;
	}
	[Token(Token = "0x2000216")]
	public struct IVRDriverManager
	{
		[Token(Token = "0x2000532")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FB2AC", Offset = "0x7FB2AC")]
		internal delegate uint _GetDriverCount();

		[Token(Token = "0x2000533")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FB2C0", Offset = "0x7FB2C0")]
		internal delegate uint _GetDriverName(uint nDriver, StringBuilder pchValue, uint unBufferSize);

		[Token(Token = "0x2000534")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FB2D4", Offset = "0x7FB2D4")]
		internal delegate ulong _GetDriverHandle(string pchDriverName);

		[Token(Token = "0x4001A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetDriverCount GetDriverCount;

		[Token(Token = "0x4001A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetDriverName GetDriverName;

		[Token(Token = "0x4001A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetDriverHandle GetDriverHandle;
	}
	[Token(Token = "0x2000217")]
	public class CVRSystem
	{
		[Token(Token = "0x2000535")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FB2E8", Offset = "0x7FB2E8")]
		internal delegate bool _PollNextEventPacked(ref VREvent_t_Packed pEvent, uint uncbVREvent);

		[StructLayout(2)]
		[Token(Token = "0x2000536")]
		private struct PollNextEventUnion
		{
			[Token(Token = "0x40026D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRSystem._PollNextEvent pPollNextEvent;

			[Token(Token = "0x40026D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _PollNextEventPacked pPollNextEventPacked;
		}

		[Token(Token = "0x2000537")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FB2FC", Offset = "0x7FB2FC")]
		internal delegate bool _GetControllerStatePacked(uint unControllerDeviceIndex, ref VRControllerState_t_Packed pControllerState, uint unControllerStateSize);

		[StructLayout(2)]
		[Token(Token = "0x2000538")]
		private struct GetControllerStateUnion
		{
			[Token(Token = "0x40026D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRSystem._GetControllerState pGetControllerState;

			[Token(Token = "0x40026D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _GetControllerStatePacked pGetControllerStatePacked;
		}

		[Token(Token = "0x2000539")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FB310", Offset = "0x7FB310")]
		internal delegate bool _GetControllerStateWithPosePacked(ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, ref VRControllerState_t_Packed pControllerState, uint unControllerStateSize, ref TrackedDevicePose_t pTrackedDevicePose);

		[StructLayout(2)]
		[Token(Token = "0x200053A")]
		private struct GetControllerStateWithPoseUnion
		{
			[Token(Token = "0x40026D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRSystem._GetControllerStateWithPose pGetControllerStateWithPose;

			[Token(Token = "0x40026D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _GetControllerStateWithPosePacked pGetControllerStateWithPosePacked;
		}

		[Token(Token = "0x4001A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRSystem FnTable;

		[Token(Token = "0x600128C")]
		[Address(RVA = "0xAC7814", Offset = "0xAC7814", VA = "0xAC7814")]
		internal CVRSystem(IntPtr pInterface)
		{
		}

		[Token(Token = "0x600128D")]
		[Address(RVA = "0xAC791C", Offset = "0xAC791C", VA = "0xAC791C")]
		public void GetRecommendedRenderTargetSize(ref uint pnWidth, ref uint pnHeight)
		{
		}

		[Token(Token = "0x600128E")]
		[Address(RVA = "0xAC7940", Offset = "0xAC7940", VA = "0xAC7940")]
		public HmdMatrix44_t GetProjectionMatrix(EVREye eEye, float fNearZ, float fFarZ)
		{
			return default(HmdMatrix44_t);
		}

		[Token(Token = "0x600128F")]
		[Address(RVA = "0xAC795C", Offset = "0xAC795C", VA = "0xAC795C")]
		public void GetProjectionRaw(EVREye eEye, ref float pfLeft, ref float pfRight, ref float pfTop, ref float pfBottom)
		{
		}

		[Token(Token = "0x6001290")]
		[Address(RVA = "0xAC7988", Offset = "0xAC7988", VA = "0xAC7988")]
		public bool ComputeDistortion(EVREye eEye, float fU, float fV, ref DistortionCoordinates_t pDistortionCoordinates)
		{
			return default(bool);
		}

		[Token(Token = "0x6001291")]
		[Address(RVA = "0xAC79A4", Offset = "0xAC79A4", VA = "0xAC79A4")]
		public HmdMatrix34_t GetEyeToHeadTransform(EVREye eEye)
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x6001292")]
		[Address(RVA = "0xAC79C0", Offset = "0xAC79C0", VA = "0xAC79C0")]
		public bool GetTimeSinceLastVsync(ref float pfSecondsSinceLastVsync, ref ulong pulFrameCounter)
		{
			return default(bool);
		}

		[Token(Token = "0x6001293")]
		[Address(RVA = "0xAC79E4", Offset = "0xAC79E4", VA = "0xAC79E4")]
		public int GetD3D9AdapterIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6001294")]
		[Address(RVA = "0xAC7A00", Offset = "0xAC7A00", VA = "0xAC7A00")]
		public void GetDXGIOutputInfo(ref int pnAdapterIndex)
		{
		}

		[Token(Token = "0x6001295")]
		[Address(RVA = "0xAC7A20", Offset = "0xAC7A20", VA = "0xAC7A20")]
		public void GetOutputDevice(ref ulong pnDevice, ETextureType textureType, IntPtr pInstance)
		{
		}

		[Token(Token = "0x6001296")]
		[Address(RVA = "0xAC7A40", Offset = "0xAC7A40", VA = "0xAC7A40")]
		public bool IsDisplayOnDesktop()
		{
			return default(bool);
		}

		[Token(Token = "0x6001297")]
		[Address(RVA = "0xAC7A5C", Offset = "0xAC7A5C", VA = "0xAC7A5C")]
		public bool SetDisplayVisibility(bool bIsVisibleOnDesktop)
		{
			return default(bool);
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0xAC7A7C", Offset = "0xAC7A7C", VA = "0xAC7A7C")]
		public void GetDeviceToAbsoluteTrackingPose(ETrackingUniverseOrigin eOrigin, float fPredictedSecondsToPhotonsFromNow, TrackedDevicePose_t[] pTrackedDevicePoseArray)
		{
		}

		[Token(Token = "0x6001299")]
		[Address(RVA = "0xAC7AA8", Offset = "0xAC7AA8", VA = "0xAC7AA8")]
		public void ResetSeatedZeroPose()
		{
		}

		[Token(Token = "0x600129A")]
		[Address(RVA = "0xAC7AC4", Offset = "0xAC7AC4", VA = "0xAC7AC4")]
		public HmdMatrix34_t GetSeatedZeroPoseToStandingAbsoluteTrackingPose()
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x600129B")]
		[Address(RVA = "0xAC7AE0", Offset = "0xAC7AE0", VA = "0xAC7AE0")]
		public HmdMatrix34_t GetRawZeroPoseToStandingAbsoluteTrackingPose()
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x600129C")]
		[Address(RVA = "0xAC7AFC", Offset = "0xAC7AFC", VA = "0xAC7AFC")]
		public uint GetSortedTrackedDeviceIndicesOfClass(ETrackedDeviceClass eTrackedDeviceClass, uint[] punTrackedDeviceIndexArray, uint unRelativeToTrackedDeviceIndex)
		{
			return default(uint);
		}

		[Token(Token = "0x600129D")]
		[Address(RVA = "0xAC7B30", Offset = "0xAC7B30", VA = "0xAC7B30")]
		public EDeviceActivityLevel GetTrackedDeviceActivityLevel(uint unDeviceId)
		{
			return default(EDeviceActivityLevel);
		}

		[Token(Token = "0x600129E")]
		[Address(RVA = "0xAC7B4C", Offset = "0xAC7B4C", VA = "0xAC7B4C")]
		public void ApplyTransform(ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pTrackedDevicePose, ref HmdMatrix34_t pTransform)
		{
		}

		[Token(Token = "0x600129F")]
		[Address(RVA = "0xAC7B68", Offset = "0xAC7B68", VA = "0xAC7B68")]
		public uint GetTrackedDeviceIndexForControllerRole(ETrackedControllerRole unDeviceType)
		{
			return default(uint);
		}

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0xAC7B84", Offset = "0xAC7B84", VA = "0xAC7B84")]
		public ETrackedControllerRole GetControllerRoleForTrackedDeviceIndex(uint unDeviceIndex)
		{
			return default(ETrackedControllerRole);
		}

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0xAC7BA0", Offset = "0xAC7BA0", VA = "0xAC7BA0")]
		public ETrackedDeviceClass GetTrackedDeviceClass(uint unDeviceIndex)
		{
			return default(ETrackedDeviceClass);
		}

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0xAC7BBC", Offset = "0xAC7BBC", VA = "0xAC7BBC")]
		public bool IsTrackedDeviceConnected(uint unDeviceIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0xAC7BD8", Offset = "0xAC7BD8", VA = "0xAC7BD8")]
		public bool GetBoolTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(bool);
		}

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0xAC7BF4", Offset = "0xAC7BF4", VA = "0xAC7BF4")]
		public float GetFloatTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(float);
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0xAC7C10", Offset = "0xAC7C10", VA = "0xAC7C10")]
		public int GetInt32TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(int);
		}

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0xAC7C2C", Offset = "0xAC7C2C", VA = "0xAC7C2C")]
		public ulong GetUint64TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(ulong);
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0xAC7C48", Offset = "0xAC7C48", VA = "0xAC7C48")]
		public HmdMatrix34_t GetMatrix34TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ref ETrackedPropertyError pError)
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0xAC7C64", Offset = "0xAC7C64", VA = "0xAC7C64")]
		public uint GetArrayTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, uint propType, IntPtr pBuffer, uint unBufferSize, ref ETrackedPropertyError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0xAC7C80", Offset = "0xAC7C80", VA = "0xAC7C80")]
		public uint GetStringTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, StringBuilder pchValue, uint unBufferSize, ref ETrackedPropertyError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0xAC7C9C", Offset = "0xAC7C9C", VA = "0xAC7C9C")]
		public string GetPropErrorNameFromEnum(ETrackedPropertyError error)
		{
			return null;
		}

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0xAC7D30", Offset = "0xAC7D30", VA = "0xAC7D30")]
		public bool PollNextEvent(ref VREvent_t pEvent, uint uncbVREvent)
		{
			return default(bool);
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0xAC8108", Offset = "0xAC8108", VA = "0xAC8108")]
		public bool PollNextEventWithPose(ETrackingUniverseOrigin eOrigin, ref VREvent_t pEvent, uint uncbVREvent, ref TrackedDevicePose_t pTrackedDevicePose)
		{
			return default(bool);
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0xAC8124", Offset = "0xAC8124", VA = "0xAC8124")]
		public string GetEventTypeNameFromEnum(EVREventType eType)
		{
			return null;
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0xAC81B8", Offset = "0xAC81B8", VA = "0xAC81B8")]
		public HiddenAreaMesh_t GetHiddenAreaMesh(EVREye eEye, EHiddenAreaMeshType type)
		{
			return default(HiddenAreaMesh_t);
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0xAC81D4", Offset = "0xAC81D4", VA = "0xAC81D4")]
		public bool GetControllerState(uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize)
		{
			return default(bool);
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0xAC8604", Offset = "0xAC8604", VA = "0xAC8604")]
		public bool GetControllerStateWithPose(ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, ref VRControllerState_t pControllerState, uint unControllerStateSize, ref TrackedDevicePose_t pTrackedDevicePose)
		{
			return default(bool);
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0xAC8A84", Offset = "0xAC8A84", VA = "0xAC8A84")]
		public void TriggerHapticPulse(uint unControllerDeviceIndex, uint unAxisId, char usDurationMicroSec)
		{
		}

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0xAC8AA0", Offset = "0xAC8AA0", VA = "0xAC8AA0")]
		public string GetButtonIdNameFromEnum(EVRButtonId eButtonId)
		{
			return null;
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0xAC8B34", Offset = "0xAC8B34", VA = "0xAC8B34")]
		public string GetControllerAxisTypeNameFromEnum(EVRControllerAxisType eAxisType)
		{
			return null;
		}

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0xAC8BC8", Offset = "0xAC8BC8", VA = "0xAC8BC8")]
		public bool IsInputAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x60012B5")]
		[Address(RVA = "0xAC8BE4", Offset = "0xAC8BE4", VA = "0xAC8BE4")]
		public bool IsSteamVRDrawingControllers()
		{
			return default(bool);
		}

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0xAC8C00", Offset = "0xAC8C00", VA = "0xAC8C00")]
		public bool ShouldApplicationPause()
		{
			return default(bool);
		}

		[Token(Token = "0x60012B7")]
		[Address(RVA = "0xAC8C1C", Offset = "0xAC8C1C", VA = "0xAC8C1C")]
		public bool ShouldApplicationReduceRenderingWork()
		{
			return default(bool);
		}

		[Token(Token = "0x60012B8")]
		[Address(RVA = "0xAC8C38", Offset = "0xAC8C38", VA = "0xAC8C38")]
		public uint DriverDebugRequest(uint unDeviceIndex, string pchRequest, StringBuilder pchResponseBuffer, uint unResponseBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x60012B9")]
		[Address(RVA = "0xAC8C54", Offset = "0xAC8C54", VA = "0xAC8C54")]
		public EVRFirmwareError PerformFirmwareUpdate(uint unDeviceIndex)
		{
			return default(EVRFirmwareError);
		}

		[Token(Token = "0x60012BA")]
		[Address(RVA = "0xAC8C70", Offset = "0xAC8C70", VA = "0xAC8C70")]
		public void AcknowledgeQuit_Exiting()
		{
		}

		[Token(Token = "0x60012BB")]
		[Address(RVA = "0xAC8C8C", Offset = "0xAC8C8C", VA = "0xAC8C8C")]
		public void AcknowledgeQuit_UserPrompt()
		{
		}
	}
	[Token(Token = "0x2000218")]
	public class CVRExtendedDisplay
	{
		[Token(Token = "0x4001A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRExtendedDisplay FnTable;

		[Token(Token = "0x60012BC")]
		[Address(RVA = "0xAC5524", Offset = "0xAC5524", VA = "0xAC5524")]
		internal CVRExtendedDisplay(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60012BD")]
		[Address(RVA = "0xAC562C", Offset = "0xAC562C", VA = "0xAC562C")]
		public void GetWindowBounds(ref int pnX, ref int pnY, ref uint pnWidth, ref uint pnHeight)
		{
		}

		[Token(Token = "0x60012BE")]
		[Address(RVA = "0xAC5658", Offset = "0xAC5658", VA = "0xAC5658")]
		public void GetEyeOutputViewport(EVREye eEye, ref uint pnX, ref uint pnY, ref uint pnWidth, ref uint pnHeight)
		{
		}

		[Token(Token = "0x60012BF")]
		[Address(RVA = "0xAC5684", Offset = "0xAC5684", VA = "0xAC5684")]
		public void GetDXGIOutputInfo(ref int pnAdapterIndex, ref int pnAdapterOutputIndex)
		{
		}
	}
	[Token(Token = "0x2000219")]
	public class CVRTrackedCamera
	{
		[Token(Token = "0x4001A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRTrackedCamera FnTable;

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0xAC9008", Offset = "0xAC9008", VA = "0xAC9008")]
		internal CVRTrackedCamera(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60012C1")]
		[Address(RVA = "0xAC9110", Offset = "0xAC9110", VA = "0xAC9110")]
		public string GetCameraErrorNameFromEnum(EVRTrackedCameraError eCameraError)
		{
			return null;
		}

		[Token(Token = "0x60012C2")]
		[Address(RVA = "0xAC91A4", Offset = "0xAC91A4", VA = "0xAC91A4")]
		public EVRTrackedCameraError HasCamera(uint nDeviceIndex, ref bool pHasCamera)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0xAC91C4", Offset = "0xAC91C4", VA = "0xAC91C4")]
		public EVRTrackedCameraError GetCameraFrameSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref uint pnWidth, ref uint pnHeight, ref uint pnFrameBufferSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60012C4")]
		[Address(RVA = "0xAC91EC", Offset = "0xAC91EC", VA = "0xAC91EC")]
		public EVRTrackedCameraError GetCameraIntrinsics(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref HmdVector2_t pFocalLength, ref HmdVector2_t pCenter)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0xAC9208", Offset = "0xAC9208", VA = "0xAC9208")]
		public EVRTrackedCameraError GetCameraProjection(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, float flZNear, float flZFar, ref HmdMatrix44_t pProjection)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0xAC9224", Offset = "0xAC9224", VA = "0xAC9224")]
		public EVRTrackedCameraError AcquireVideoStreamingService(uint nDeviceIndex, ref ulong pHandle)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60012C7")]
		[Address(RVA = "0xAC9244", Offset = "0xAC9244", VA = "0xAC9244")]
		public EVRTrackedCameraError ReleaseVideoStreamingService(ulong hTrackedCamera)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60012C8")]
		[Address(RVA = "0xAC9260", Offset = "0xAC9260", VA = "0xAC9260")]
		public EVRTrackedCameraError GetVideoStreamFrameBuffer(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pFrameBuffer, uint nFrameBufferSize, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0xAC927C", Offset = "0xAC927C", VA = "0xAC927C")]
		public EVRTrackedCameraError GetVideoStreamTextureSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, ref VRTextureBounds_t pTextureBounds, ref uint pnWidth, ref uint pnHeight)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0xAC92A0", Offset = "0xAC92A0", VA = "0xAC92A0")]
		public EVRTrackedCameraError GetVideoStreamTextureD3D11(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0xAC92BC", Offset = "0xAC92BC", VA = "0xAC92BC")]
		public EVRTrackedCameraError GetVideoStreamTextureGL(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, ref uint pglTextureId, ref CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0xAC92DC", Offset = "0xAC92DC", VA = "0xAC92DC")]
		public EVRTrackedCameraError ReleaseVideoStreamTextureGL(ulong hTrackedCamera, uint glTextureId)
		{
			return default(EVRTrackedCameraError);
		}
	}
	[Token(Token = "0x200021A")]
	public class CVRApplications
	{
		[Token(Token = "0x4001A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRApplications FnTable;

		[Token(Token = "0x60012CD")]
		[Address(RVA = "0xABC7B8", Offset = "0xABC7B8", VA = "0xABC7B8")]
		internal CVRApplications(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0xABC8C0", Offset = "0xABC8C0", VA = "0xABC8C0")]
		public EVRApplicationError AddApplicationManifest(string pchApplicationManifestFullPath, bool bTemporary)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0xABCCC4", Offset = "0xABCCC4", VA = "0xABCCC4")]
		public EVRApplicationError RemoveApplicationManifest(string pchApplicationManifestFullPath)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0xABD098", Offset = "0xABD098", VA = "0xABD098")]
		public bool IsApplicationInstalled(string pchAppKey)
		{
			return default(bool);
		}

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0xABD470", Offset = "0xABD470", VA = "0xABD470")]
		public uint GetApplicationCount()
		{
			return default(uint);
		}

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0xABD6AC", Offset = "0xABD6AC", VA = "0xABD6AC")]
		public EVRApplicationError GetApplicationKeyByIndex(uint unApplicationIndex, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0xABD948", Offset = "0xABD948", VA = "0xABD948")]
		public EVRApplicationError GetApplicationKeyByProcessId(uint unProcessId, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0xABDBE4", Offset = "0xABDBE4", VA = "0xABDBE4")]
		public EVRApplicationError LaunchApplication(string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0xABDFB8", Offset = "0xABDFB8", VA = "0xABDFB8")]
		public EVRApplicationError LaunchTemplateApplication(string pchTemplateAppKey, string pchNewAppKey, AppOverrideKeys_t[] pKeys)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0xABE418", Offset = "0xABE418", VA = "0xABE418")]
		public EVRApplicationError LaunchApplicationFromMimeType(string pchMimeType, string pchArgs)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0xABE818", Offset = "0xABE818", VA = "0xABE818")]
		public EVRApplicationError LaunchDashboardOverlay(string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0xABEBEC", Offset = "0xABEBEC", VA = "0xABEBEC")]
		public bool CancelApplicationLaunch(string pchAppKey)
		{
			return default(bool);
		}

		[Token(Token = "0x60012D9")]
		[Address(RVA = "0xABEFC4", Offset = "0xABEFC4", VA = "0xABEFC4")]
		public EVRApplicationError IdentifyApplication(uint unProcessId, string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0xABF240", Offset = "0xABF240", VA = "0xABF240")]
		public uint GetApplicationProcessId(string pchAppKey)
		{
			return default(uint);
		}

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0xABF614", Offset = "0xABF614", VA = "0xABF614")]
		public string GetApplicationsErrorNameFromEnum(EVRApplicationError error)
		{
			return null;
		}

		[Token(Token = "0x60012DC")]
		[Address(RVA = "0xABF8F0", Offset = "0xABF8F0", VA = "0xABF8F0")]
		public uint GetApplicationPropertyString(string pchAppKey, EVRApplicationProperty eProperty, StringBuilder pchPropertyValueBuffer, uint unPropertyValueBufferLen, ref EVRApplicationError peError)
		{
			return default(uint);
		}

		[Token(Token = "0x60012DD")]
		[Address(RVA = "0xABFD64", Offset = "0xABFD64", VA = "0xABFD64")]
		public bool GetApplicationPropertyBool(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError)
		{
			return default(bool);
		}

		[Token(Token = "0x60012DE")]
		[Address(RVA = "0xAC0190", Offset = "0xAC0190", VA = "0xAC0190")]
		public ulong GetApplicationPropertyUint64(string pchAppKey, EVRApplicationProperty eProperty, ref EVRApplicationError peError)
		{
			return default(ulong);
		}

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0xAC05B8", Offset = "0xAC05B8", VA = "0xAC05B8")]
		public EVRApplicationError SetApplicationAutoLaunch(string pchAppKey, bool bAutoLaunch)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60012E0")]
		[Address(RVA = "0xAC09BC", Offset = "0xAC09BC", VA = "0xAC09BC")]
		public bool GetApplicationAutoLaunch(string pchAppKey)
		{
			return default(bool);
		}

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0xAC0D94", Offset = "0xAC0D94", VA = "0xAC0D94")]
		public EVRApplicationError SetDefaultApplicationForMimeType(string pchAppKey, string pchMimeType)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0xAC1194", Offset = "0xAC1194", VA = "0xAC1194")]
		public bool GetDefaultApplicationForMimeType(string pchMimeType, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(bool);
		}

		[Token(Token = "0x60012E3")]
		[Address(RVA = "0xAC15C0", Offset = "0xAC15C0", VA = "0xAC15C0")]
		public bool GetApplicationSupportedMimeTypes(string pchAppKey, StringBuilder pchMimeTypesBuffer, uint unMimeTypesBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x60012E4")]
		[Address(RVA = "0xAC19EC", Offset = "0xAC19EC", VA = "0xAC19EC")]
		public uint GetApplicationsThatSupportMimeType(string pchMimeType, StringBuilder pchAppKeysThatSupportBuffer, uint unAppKeysThatSupportBuffer)
		{
			return default(uint);
		}

		[Token(Token = "0x60012E5")]
		[Address(RVA = "0xAC1E14", Offset = "0xAC1E14", VA = "0xAC1E14")]
		public uint GetApplicationLaunchArguments(uint unHandle, StringBuilder pchArgs, uint unArgs)
		{
			return default(uint);
		}

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0xAC20B0", Offset = "0xAC20B0", VA = "0xAC20B0")]
		public EVRApplicationError GetStartingApplication(StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0xAC24B0", Offset = "0xAC24B0", VA = "0xAC24B0")]
		public EVRApplicationTransitionState GetTransitionState()
		{
			return default(EVRApplicationTransitionState);
		}

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0xAC26EC", Offset = "0xAC26EC", VA = "0xAC26EC")]
		public EVRApplicationError PerformApplicationPrelaunchCheck(string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0xAC2AC0", Offset = "0xAC2AC0", VA = "0xAC2AC0")]
		public string GetApplicationsTransitionStateNameFromEnum(EVRApplicationTransitionState state)
		{
			return null;
		}

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0xAC2D9C", Offset = "0xAC2D9C", VA = "0xAC2D9C")]
		public bool IsQuitUserPromptRequested()
		{
			return default(bool);
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0xAC2FDC", Offset = "0xAC2FDC", VA = "0xAC2FDC")]
		public EVRApplicationError LaunchInternalProcess(string pchBinaryPath, string pchArguments, string pchWorkingDirectory)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0xAC3404", Offset = "0xAC3404", VA = "0xAC3404")]
		public uint GetCurrentSceneProcessId()
		{
			return default(uint);
		}
	}
	[Token(Token = "0x200021B")]
	public class CVRChaperone
	{
		[Token(Token = "0x4001A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRChaperone FnTable;

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0xAC3640", Offset = "0xAC3640", VA = "0xAC3640")]
		internal CVRChaperone(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0xAC3748", Offset = "0xAC3748", VA = "0xAC3748")]
		public ChaperoneCalibrationState GetCalibrationState()
		{
			return default(ChaperoneCalibrationState);
		}

		[Token(Token = "0x60012EF")]
		[Address(RVA = "0xAC3984", Offset = "0xAC3984", VA = "0xAC3984")]
		public bool GetPlayAreaSize(ref float pSizeX, ref float pSizeZ)
		{
			return default(bool);
		}

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0xAC3C0C", Offset = "0xAC3C0C", VA = "0xAC3C0C")]
		public bool GetPlayAreaRect(ref HmdQuad_t rect)
		{
			return default(bool);
		}

		[Token(Token = "0x60012F1")]
		[Address(RVA = "0xAC3E74", Offset = "0xAC3E74", VA = "0xAC3E74")]
		public void ReloadInfo()
		{
		}

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0xAC40A8", Offset = "0xAC40A8", VA = "0xAC40A8")]
		public void SetSceneColor(HmdColor_t color)
		{
		}

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0xAC40C4", Offset = "0xAC40C4", VA = "0xAC40C4")]
		public void GetBoundsColor(ref HmdColor_t pOutputColorArray, int nNumOutputColors, float flCollisionBoundsFadeDistance, ref HmdColor_t pOutputCameraColor)
		{
		}

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0xAC4370", Offset = "0xAC4370", VA = "0xAC4370")]
		public bool AreBoundsVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x60012F5")]
		[Address(RVA = "0xAC45B0", Offset = "0xAC45B0", VA = "0xAC45B0")]
		public void ForceBoundsVisible(bool bForce)
		{
		}
	}
	[Token(Token = "0x200021C")]
	public class CVRChaperoneSetup
	{
		[Token(Token = "0x4001A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRChaperoneSetup FnTable;

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0xAC4810", Offset = "0xAC4810", VA = "0xAC4810")]
		internal CVRChaperoneSetup(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0xAC4918", Offset = "0xAC4918", VA = "0xAC4918")]
		public bool CommitWorkingCopy(EChaperoneConfigFile configFile)
		{
			return default(bool);
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0xAC4934", Offset = "0xAC4934", VA = "0xAC4934")]
		public void RevertWorkingCopy()
		{
		}

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0xAC4950", Offset = "0xAC4950", VA = "0xAC4950")]
		public bool GetWorkingPlayAreaSize(ref float pSizeX, ref float pSizeZ)
		{
			return default(bool);
		}

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0xAC4974", Offset = "0xAC4974", VA = "0xAC4974")]
		public bool GetWorkingPlayAreaRect(ref HmdQuad_t rect)
		{
			return default(bool);
		}

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0xAC4990", Offset = "0xAC4990", VA = "0xAC4990")]
		public bool GetWorkingCollisionBoundsInfo(out HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0xAC4A34", Offset = "0xAC4A34", VA = "0xAC4A34")]
		public bool GetLiveCollisionBoundsInfo(out HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x60012FD")]
		[Address(RVA = "0xAC4AD8", Offset = "0xAC4AD8", VA = "0xAC4AD8")]
		public bool GetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose)
		{
			return default(bool);
		}

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0xAC4AF4", Offset = "0xAC4AF4", VA = "0xAC4AF4")]
		public bool GetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatStandingZeroPoseToRawTrackingPose)
		{
			return default(bool);
		}

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0xAC4B10", Offset = "0xAC4B10", VA = "0xAC4B10")]
		public void SetWorkingPlayAreaSize(float sizeX, float sizeZ)
		{
		}

		[Token(Token = "0x6001300")]
		[Address(RVA = "0xAC4B2C", Offset = "0xAC4B2C", VA = "0xAC4B2C")]
		public void SetWorkingCollisionBoundsInfo(HmdQuad_t[] pQuadsBuffer)
		{
		}

		[Token(Token = "0x6001301")]
		[Address(RVA = "0xAC4B58", Offset = "0xAC4B58", VA = "0xAC4B58")]
		public void SetWorkingSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatSeatedZeroPoseToRawTrackingPose)
		{
		}

		[Token(Token = "0x6001302")]
		[Address(RVA = "0xAC4B74", Offset = "0xAC4B74", VA = "0xAC4B74")]
		public void SetWorkingStandingZeroPoseToRawTrackingPose(ref HmdMatrix34_t pMatStandingZeroPoseToRawTrackingPose)
		{
		}

		[Token(Token = "0x6001303")]
		[Address(RVA = "0xAC4B90", Offset = "0xAC4B90", VA = "0xAC4B90")]
		public void ReloadFromDisk(EChaperoneConfigFile configFile)
		{
		}

		[Token(Token = "0x6001304")]
		[Address(RVA = "0xAC4BAC", Offset = "0xAC4BAC", VA = "0xAC4BAC")]
		public bool GetLiveSeatedZeroPoseToRawTrackingPose(ref HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose)
		{
			return default(bool);
		}

		[Token(Token = "0x6001305")]
		[Address(RVA = "0xAC4BC8", Offset = "0xAC4BC8", VA = "0xAC4BC8")]
		public void SetWorkingCollisionBoundsTagsInfo(byte[] pTagsBuffer)
		{
		}

		[Token(Token = "0x6001306")]
		[Address(RVA = "0xAC4BF4", Offset = "0xAC4BF4", VA = "0xAC4BF4")]
		public bool GetLiveCollisionBoundsTagsInfo(out byte[] pTagsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001307")]
		[Address(RVA = "0xAC4C98", Offset = "0xAC4C98", VA = "0xAC4C98")]
		public bool SetWorkingPhysicalBoundsInfo(HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001308")]
		[Address(RVA = "0xAC4CC4", Offset = "0xAC4CC4", VA = "0xAC4CC4")]
		public bool GetLivePhysicalBoundsInfo(out HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001309")]
		[Address(RVA = "0xAC4D68", Offset = "0xAC4D68", VA = "0xAC4D68")]
		public bool ExportLiveToBuffer(StringBuilder pBuffer, ref uint pnBufferLength)
		{
			return default(bool);
		}

		[Token(Token = "0x600130A")]
		[Address(RVA = "0xAC4D88", Offset = "0xAC4D88", VA = "0xAC4D88")]
		public bool ImportFromBufferToWorking(string pBuffer, uint nImportFlags)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200021D")]
	public class CVRCompositor
	{
		[Token(Token = "0x4001A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRCompositor FnTable;

		[Token(Token = "0x600130B")]
		[Address(RVA = "0xAC4DA4", Offset = "0xAC4DA4", VA = "0xAC4DA4")]
		internal CVRCompositor(IntPtr pInterface)
		{
		}

		[Token(Token = "0x600130C")]
		[Address(RVA = "0xAC4EAC", Offset = "0xAC4EAC", VA = "0xAC4EAC")]
		public void SetTrackingSpace(ETrackingUniverseOrigin eOrigin)
		{
		}

		[Token(Token = "0x600130D")]
		[Address(RVA = "0xAC4EC8", Offset = "0xAC4EC8", VA = "0xAC4EC8")]
		public ETrackingUniverseOrigin GetTrackingSpace()
		{
			return default(ETrackingUniverseOrigin);
		}

		[Token(Token = "0x600130E")]
		[Address(RVA = "0xAC4EE4", Offset = "0xAC4EE4", VA = "0xAC4EE4")]
		public EVRCompositorError WaitGetPoses(TrackedDevicePose_t[] pRenderPoseArray, TrackedDevicePose_t[] pGamePoseArray)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x600130F")]
		[Address(RVA = "0xAC4F20", Offset = "0xAC4F20", VA = "0xAC4F20")]
		public EVRCompositorError GetLastPoses(TrackedDevicePose_t[] pRenderPoseArray, TrackedDevicePose_t[] pGamePoseArray)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6001310")]
		[Address(RVA = "0xAC4F5C", Offset = "0xAC4F5C", VA = "0xAC4F5C")]
		public EVRCompositorError GetLastPoseForTrackedDeviceIndex(uint unDeviceIndex, ref TrackedDevicePose_t pOutputPose, ref TrackedDevicePose_t pOutputGamePose)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6001311")]
		[Address(RVA = "0xAC4F78", Offset = "0xAC4F78", VA = "0xAC4F78")]
		public EVRCompositorError Submit(EVREye eEye, ref Texture_t pTexture, ref VRTextureBounds_t pBounds, EVRSubmitFlags nSubmitFlags)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6001312")]
		[Address(RVA = "0xAC4F94", Offset = "0xAC4F94", VA = "0xAC4F94")]
		public void ClearLastSubmittedFrame()
		{
		}

		[Token(Token = "0x6001313")]
		[Address(RVA = "0xAC4FB0", Offset = "0xAC4FB0", VA = "0xAC4FB0")]
		public void PostPresentHandoff()
		{
		}

		[Token(Token = "0x6001314")]
		[Address(RVA = "0xAC4FCC", Offset = "0xAC4FCC", VA = "0xAC4FCC")]
		public bool GetFrameTiming(ref Compositor_FrameTiming pTiming, uint unFramesAgo)
		{
			return default(bool);
		}

		[Token(Token = "0x6001315")]
		[Address(RVA = "0xAC4FE8", Offset = "0xAC4FE8", VA = "0xAC4FE8")]
		public uint GetFrameTimings(ref Compositor_FrameTiming pTiming, uint nFrames)
		{
			return default(uint);
		}

		[Token(Token = "0x6001316")]
		[Address(RVA = "0xAC5004", Offset = "0xAC5004", VA = "0xAC5004")]
		public float GetFrameTimeRemaining()
		{
			return default(float);
		}

		[Token(Token = "0x6001317")]
		[Address(RVA = "0xAC5020", Offset = "0xAC5020", VA = "0xAC5020")]
		public void GetCumulativeStats(ref Compositor_CumulativeStats pStats, uint nStatsSizeInBytes)
		{
		}

		[Token(Token = "0x6001318")]
		[Address(RVA = "0xAC503C", Offset = "0xAC503C", VA = "0xAC503C")]
		public void FadeToColor(float fSeconds, float fRed, float fGreen, float fBlue, float fAlpha, bool bBackground)
		{
		}

		[Token(Token = "0x6001319")]
		[Address(RVA = "0xAC505C", Offset = "0xAC505C", VA = "0xAC505C")]
		public HmdColor_t GetCurrentFadeColor(bool bBackground)
		{
			return default(HmdColor_t);
		}

		[Token(Token = "0x600131A")]
		[Address(RVA = "0xAC507C", Offset = "0xAC507C", VA = "0xAC507C")]
		public void FadeGrid(float fSeconds, bool bFadeIn)
		{
		}

		[Token(Token = "0x600131B")]
		[Address(RVA = "0xAC509C", Offset = "0xAC509C", VA = "0xAC509C")]
		public float GetCurrentGridAlpha()
		{
			return default(float);
		}

		[Token(Token = "0x600131C")]
		[Address(RVA = "0xAC50B8", Offset = "0xAC50B8", VA = "0xAC50B8")]
		public EVRCompositorError SetSkyboxOverride(Texture_t[] pTextures)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x600131D")]
		[Address(RVA = "0xAC50E4", Offset = "0xAC50E4", VA = "0xAC50E4")]
		public void ClearSkyboxOverride()
		{
		}

		[Token(Token = "0x600131E")]
		[Address(RVA = "0xAC5100", Offset = "0xAC5100", VA = "0xAC5100")]
		public void CompositorBringToFront()
		{
		}

		[Token(Token = "0x600131F")]
		[Address(RVA = "0xAC511C", Offset = "0xAC511C", VA = "0xAC511C")]
		public void CompositorGoToBack()
		{
		}

		[Token(Token = "0x6001320")]
		[Address(RVA = "0xAC5138", Offset = "0xAC5138", VA = "0xAC5138")]
		public void CompositorQuit()
		{
		}

		[Token(Token = "0x6001321")]
		[Address(RVA = "0xAC5154", Offset = "0xAC5154", VA = "0xAC5154")]
		public bool IsFullscreen()
		{
			return default(bool);
		}

		[Token(Token = "0x6001322")]
		[Address(RVA = "0xAC5170", Offset = "0xAC5170", VA = "0xAC5170")]
		public uint GetCurrentSceneFocusProcess()
		{
			return default(uint);
		}

		[Token(Token = "0x6001323")]
		[Address(RVA = "0xAC518C", Offset = "0xAC518C", VA = "0xAC518C")]
		public uint GetLastFrameRenderer()
		{
			return default(uint);
		}

		[Token(Token = "0x6001324")]
		[Address(RVA = "0xAC51A8", Offset = "0xAC51A8", VA = "0xAC51A8")]
		public bool CanRenderScene()
		{
			return default(bool);
		}

		[Token(Token = "0x6001325")]
		[Address(RVA = "0xAC51C4", Offset = "0xAC51C4", VA = "0xAC51C4")]
		public void ShowMirrorWindow()
		{
		}

		[Token(Token = "0x6001326")]
		[Address(RVA = "0xAC51E0", Offset = "0xAC51E0", VA = "0xAC51E0")]
		public void HideMirrorWindow()
		{
		}

		[Token(Token = "0x6001327")]
		[Address(RVA = "0xAC51FC", Offset = "0xAC51FC", VA = "0xAC51FC")]
		public bool IsMirrorWindowVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0xAC5218", Offset = "0xAC5218", VA = "0xAC5218")]
		public void CompositorDumpImages()
		{
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0xAC5234", Offset = "0xAC5234", VA = "0xAC5234")]
		public bool ShouldAppRenderWithLowResources()
		{
			return default(bool);
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0xAC5250", Offset = "0xAC5250", VA = "0xAC5250")]
		public void ForceInterleavedReprojectionOn(bool bOverride)
		{
		}

		[Token(Token = "0x600132B")]
		[Address(RVA = "0xAC5270", Offset = "0xAC5270", VA = "0xAC5270")]
		public void ForceReconnectProcess()
		{
		}

		[Token(Token = "0x600132C")]
		[Address(RVA = "0xAC528C", Offset = "0xAC528C", VA = "0xAC528C")]
		public void SuspendRendering(bool bSuspend)
		{
		}

		[Token(Token = "0x600132D")]
		[Address(RVA = "0xAC52AC", Offset = "0xAC52AC", VA = "0xAC52AC")]
		public EVRCompositorError GetMirrorTextureD3D11(EVREye eEye, IntPtr pD3D11DeviceOrResource, ref IntPtr ppD3D11ShaderResourceView)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x600132E")]
		[Address(RVA = "0xAC52C8", Offset = "0xAC52C8", VA = "0xAC52C8")]
		public void ReleaseMirrorTextureD3D11(IntPtr pD3D11ShaderResourceView)
		{
		}

		[Token(Token = "0x600132F")]
		[Address(RVA = "0xAC52E4", Offset = "0xAC52E4", VA = "0xAC52E4")]
		public EVRCompositorError GetMirrorTextureGL(EVREye eEye, ref uint pglTextureId, IntPtr pglSharedTextureHandle)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6001330")]
		[Address(RVA = "0xAC5304", Offset = "0xAC5304", VA = "0xAC5304")]
		public bool ReleaseSharedGLTexture(uint glTextureId, IntPtr glSharedTextureHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x6001331")]
		[Address(RVA = "0xAC5320", Offset = "0xAC5320", VA = "0xAC5320")]
		public void LockGLSharedTextureForAccess(IntPtr glSharedTextureHandle)
		{
		}

		[Token(Token = "0x6001332")]
		[Address(RVA = "0xAC533C", Offset = "0xAC533C", VA = "0xAC533C")]
		public void UnlockGLSharedTextureForAccess(IntPtr glSharedTextureHandle)
		{
		}

		[Token(Token = "0x6001333")]
		[Address(RVA = "0xAC5358", Offset = "0xAC5358", VA = "0xAC5358")]
		public uint GetVulkanInstanceExtensionsRequired(StringBuilder pchValue, uint unBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x6001334")]
		[Address(RVA = "0xAC5374", Offset = "0xAC5374", VA = "0xAC5374")]
		public uint GetVulkanDeviceExtensionsRequired(IntPtr pPhysicalDevice, StringBuilder pchValue, uint unBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x6001335")]
		[Address(RVA = "0xAC5390", Offset = "0xAC5390", VA = "0xAC5390")]
		public void SetExplicitTimingMode(EVRCompositorTimingMode eTimingMode)
		{
		}

		[Token(Token = "0x6001336")]
		[Address(RVA = "0xAC53AC", Offset = "0xAC53AC", VA = "0xAC53AC")]
		public EVRCompositorError SubmitExplicitTimingData()
		{
			return default(EVRCompositorError);
		}
	}
	[Token(Token = "0x200021E")]
	public class CVROverlay
	{
		[Token(Token = "0x200053B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FB324", Offset = "0x7FB324")]
		internal delegate bool _PollNextOverlayEventPacked(ulong ulOverlayHandle, ref VREvent_t_Packed pEvent, uint uncbVREvent);

		[StructLayout(2)]
		[Token(Token = "0x200053C")]
		private struct PollNextOverlayEventUnion
		{
			[Token(Token = "0x40026D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVROverlay._PollNextOverlayEvent pPollNextOverlayEvent;

			[Token(Token = "0x40026D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _PollNextOverlayEventPacked pPollNextOverlayEventPacked;
		}

		[Token(Token = "0x4001A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVROverlay FnTable;

		[Token(Token = "0x6001337")]
		[Address(RVA = "0xAC57E8", Offset = "0xAC57E8", VA = "0xAC57E8")]
		internal CVROverlay(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001338")]
		[Address(RVA = "0xAC58F0", Offset = "0xAC58F0", VA = "0xAC58F0")]
		public EVROverlayError FindOverlay(string pchOverlayKey, ref ulong pOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001339")]
		[Address(RVA = "0xAC5910", Offset = "0xAC5910", VA = "0xAC5910")]
		public EVROverlayError CreateOverlay(string pchOverlayKey, string pchOverlayName, ref ulong pOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600133A")]
		[Address(RVA = "0xAC5930", Offset = "0xAC5930", VA = "0xAC5930")]
		public EVROverlayError DestroyOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600133B")]
		[Address(RVA = "0xAC594C", Offset = "0xAC594C", VA = "0xAC594C")]
		public EVROverlayError SetHighQualityOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600133C")]
		[Address(RVA = "0xAC5968", Offset = "0xAC5968", VA = "0xAC5968")]
		public ulong GetHighQualityOverlay()
		{
			return default(ulong);
		}

		[Token(Token = "0x600133D")]
		[Address(RVA = "0xAC5984", Offset = "0xAC5984", VA = "0xAC5984")]
		public uint GetOverlayKey(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x600133E")]
		[Address(RVA = "0xAC59A0", Offset = "0xAC59A0", VA = "0xAC59A0")]
		public uint GetOverlayName(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref EVROverlayError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x600133F")]
		[Address(RVA = "0xAC59BC", Offset = "0xAC59BC", VA = "0xAC59BC")]
		public EVROverlayError SetOverlayName(ulong ulOverlayHandle, string pchName)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001340")]
		[Address(RVA = "0xAC59D8", Offset = "0xAC59D8", VA = "0xAC59D8")]
		public EVROverlayError GetOverlayImageData(ulong ulOverlayHandle, IntPtr pvBuffer, uint unBufferSize, ref uint punWidth, ref uint punHeight)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001341")]
		[Address(RVA = "0xAC59FC", Offset = "0xAC59FC", VA = "0xAC59FC")]
		public string GetOverlayErrorNameFromEnum(EVROverlayError error)
		{
			return null;
		}

		[Token(Token = "0x6001342")]
		[Address(RVA = "0xAC5A90", Offset = "0xAC5A90", VA = "0xAC5A90")]
		public EVROverlayError SetOverlayRenderingPid(ulong ulOverlayHandle, uint unPID)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001343")]
		[Address(RVA = "0xAC5AAC", Offset = "0xAC5AAC", VA = "0xAC5AAC")]
		public uint GetOverlayRenderingPid(ulong ulOverlayHandle)
		{
			return default(uint);
		}

		[Token(Token = "0x6001344")]
		[Address(RVA = "0xAC5AC8", Offset = "0xAC5AC8", VA = "0xAC5AC8")]
		public EVROverlayError SetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, bool bEnabled)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001345")]
		[Address(RVA = "0xAC5AE8", Offset = "0xAC5AE8", VA = "0xAC5AE8")]
		public EVROverlayError GetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, ref bool pbEnabled)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001346")]
		[Address(RVA = "0xAC5B08", Offset = "0xAC5B08", VA = "0xAC5B08")]
		public EVROverlayError SetOverlayColor(ulong ulOverlayHandle, float fRed, float fGreen, float fBlue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001347")]
		[Address(RVA = "0xAC5B24", Offset = "0xAC5B24", VA = "0xAC5B24")]
		public EVROverlayError GetOverlayColor(ulong ulOverlayHandle, ref float pfRed, ref float pfGreen, ref float pfBlue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001348")]
		[Address(RVA = "0xAC5B4C", Offset = "0xAC5B4C", VA = "0xAC5B4C")]
		public EVROverlayError SetOverlayAlpha(ulong ulOverlayHandle, float fAlpha)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001349")]
		[Address(RVA = "0xAC5B68", Offset = "0xAC5B68", VA = "0xAC5B68")]
		public EVROverlayError GetOverlayAlpha(ulong ulOverlayHandle, ref float pfAlpha)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600134A")]
		[Address(RVA = "0xAC5B88", Offset = "0xAC5B88", VA = "0xAC5B88")]
		public EVROverlayError SetOverlayTexelAspect(ulong ulOverlayHandle, float fTexelAspect)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600134B")]
		[Address(RVA = "0xAC5BA4", Offset = "0xAC5BA4", VA = "0xAC5BA4")]
		public EVROverlayError GetOverlayTexelAspect(ulong ulOverlayHandle, ref float pfTexelAspect)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600134C")]
		[Address(RVA = "0xAC5BC4", Offset = "0xAC5BC4", VA = "0xAC5BC4")]
		public EVROverlayError SetOverlaySortOrder(ulong ulOverlayHandle, uint unSortOrder)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0xAC5BE0", Offset = "0xAC5BE0", VA = "0xAC5BE0")]
		public EVROverlayError GetOverlaySortOrder(ulong ulOverlayHandle, ref uint punSortOrder)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600134E")]
		[Address(RVA = "0xAC5C00", Offset = "0xAC5C00", VA = "0xAC5C00")]
		public EVROverlayError SetOverlayWidthInMeters(ulong ulOverlayHandle, float fWidthInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600134F")]
		[Address(RVA = "0xAC5C1C", Offset = "0xAC5C1C", VA = "0xAC5C1C")]
		public EVROverlayError GetOverlayWidthInMeters(ulong ulOverlayHandle, ref float pfWidthInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001350")]
		[Address(RVA = "0xAC5C3C", Offset = "0xAC5C3C", VA = "0xAC5C3C")]
		public EVROverlayError SetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, float fMinDistanceInMeters, float fMaxDistanceInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001351")]
		[Address(RVA = "0xAC5C58", Offset = "0xAC5C58", VA = "0xAC5C58")]
		public EVROverlayError GetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, ref float pfMinDistanceInMeters, ref float pfMaxDistanceInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001352")]
		[Address(RVA = "0xAC5C7C", Offset = "0xAC5C7C", VA = "0xAC5C7C")]
		public EVROverlayError SetOverlayTextureColorSpace(ulong ulOverlayHandle, EColorSpace eTextureColorSpace)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001353")]
		[Address(RVA = "0xAC5C98", Offset = "0xAC5C98", VA = "0xAC5C98")]
		public EVROverlayError GetOverlayTextureColorSpace(ulong ulOverlayHandle, ref EColorSpace peTextureColorSpace)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001354")]
		[Address(RVA = "0xAC5CB4", Offset = "0xAC5CB4", VA = "0xAC5CB4")]
		public EVROverlayError SetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0xAC5CD0", Offset = "0xAC5CD0", VA = "0xAC5CD0")]
		public EVROverlayError GetOverlayTextureBounds(ulong ulOverlayHandle, ref VRTextureBounds_t pOverlayTextureBounds)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001356")]
		[Address(RVA = "0xAC5CEC", Offset = "0xAC5CEC", VA = "0xAC5CEC")]
		public uint GetOverlayRenderModel(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, ref HmdColor_t pColor, ref EVROverlayError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x6001357")]
		[Address(RVA = "0xAC5D08", Offset = "0xAC5D08", VA = "0xAC5D08")]
		public EVROverlayError SetOverlayRenderModel(ulong ulOverlayHandle, string pchRenderModel, ref HmdColor_t pColor)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001358")]
		[Address(RVA = "0xAC5D24", Offset = "0xAC5D24", VA = "0xAC5D24")]
		public EVROverlayError GetOverlayTransformType(ulong ulOverlayHandle, ref VROverlayTransformType peTransformType)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001359")]
		[Address(RVA = "0xAC5D40", Offset = "0xAC5D40", VA = "0xAC5D40")]
		public EVROverlayError SetOverlayTransformAbsolute(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600135A")]
		[Address(RVA = "0xAC5D5C", Offset = "0xAC5D5C", VA = "0xAC5D5C")]
		public EVROverlayError GetOverlayTransformAbsolute(ulong ulOverlayHandle, ref ETrackingUniverseOrigin peTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600135B")]
		[Address(RVA = "0xAC5D78", Offset = "0xAC5D78", VA = "0xAC5D78")]
		public EVROverlayError SetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, uint unTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600135C")]
		[Address(RVA = "0xAC5D94", Offset = "0xAC5D94", VA = "0xAC5D94")]
		public EVROverlayError GetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, ref uint punTrackedDevice, ref HmdMatrix34_t pmatTrackedDeviceToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600135D")]
		[Address(RVA = "0xAC5DB4", Offset = "0xAC5DB4", VA = "0xAC5DB4")]
		public EVROverlayError SetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, uint unDeviceIndex, string pchComponentName)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600135E")]
		[Address(RVA = "0xAC5DD0", Offset = "0xAC5DD0", VA = "0xAC5DD0")]
		public EVROverlayError GetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, ref uint punDeviceIndex, StringBuilder pchComponentName, uint unComponentNameSize)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600135F")]
		[Address(RVA = "0xAC5DF0", Offset = "0xAC5DF0", VA = "0xAC5DF0")]
		public EVROverlayError GetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ref ulong ulOverlayHandleParent, ref HmdMatrix34_t pmatParentOverlayToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0xAC5E10", Offset = "0xAC5E10", VA = "0xAC5E10")]
		public EVROverlayError SetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ulong ulOverlayHandleParent, ref HmdMatrix34_t pmatParentOverlayToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001361")]
		[Address(RVA = "0xAC5E2C", Offset = "0xAC5E2C", VA = "0xAC5E2C")]
		public EVROverlayError ShowOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001362")]
		[Address(RVA = "0xAC5E48", Offset = "0xAC5E48", VA = "0xAC5E48")]
		public EVROverlayError HideOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001363")]
		[Address(RVA = "0xAC5E64", Offset = "0xAC5E64", VA = "0xAC5E64")]
		public bool IsOverlayVisible(ulong ulOverlayHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x6001364")]
		[Address(RVA = "0xAC5E80", Offset = "0xAC5E80", VA = "0xAC5E80")]
		public EVROverlayError GetTransformForOverlayCoordinates(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, HmdVector2_t coordinatesInOverlay, ref HmdMatrix34_t pmatTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001365")]
		[Address(RVA = "0xAC5E9C", Offset = "0xAC5E9C", VA = "0xAC5E9C")]
		public bool PollNextOverlayEvent(ulong ulOverlayHandle, ref VREvent_t pEvent, uint uncbVREvent)
		{
			return default(bool);
		}

		[Token(Token = "0x6001366")]
		[Address(RVA = "0xAC62A8", Offset = "0xAC62A8", VA = "0xAC62A8")]
		public EVROverlayError GetOverlayInputMethod(ulong ulOverlayHandle, ref VROverlayInputMethod peInputMethod)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001367")]
		[Address(RVA = "0xAC62C4", Offset = "0xAC62C4", VA = "0xAC62C4")]
		public EVROverlayError SetOverlayInputMethod(ulong ulOverlayHandle, VROverlayInputMethod eInputMethod)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001368")]
		[Address(RVA = "0xAC62E0", Offset = "0xAC62E0", VA = "0xAC62E0")]
		public EVROverlayError GetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001369")]
		[Address(RVA = "0xAC62FC", Offset = "0xAC62FC", VA = "0xAC62FC")]
		public EVROverlayError SetOverlayMouseScale(ulong ulOverlayHandle, ref HmdVector2_t pvecMouseScale)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600136A")]
		[Address(RVA = "0xAC6318", Offset = "0xAC6318", VA = "0xAC6318")]
		public bool ComputeOverlayIntersection(ulong ulOverlayHandle, ref VROverlayIntersectionParams_t pParams, ref VROverlayIntersectionResults_t pResults)
		{
			return default(bool);
		}

		[Token(Token = "0x600136B")]
		[Address(RVA = "0xAC6334", Offset = "0xAC6334", VA = "0xAC6334")]
		public bool IsHoverTargetOverlay(ulong ulOverlayHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x600136C")]
		[Address(RVA = "0xAC6350", Offset = "0xAC6350", VA = "0xAC6350")]
		public ulong GetGamepadFocusOverlay()
		{
			return default(ulong);
		}

		[Token(Token = "0x600136D")]
		[Address(RVA = "0xAC636C", Offset = "0xAC636C", VA = "0xAC636C")]
		public EVROverlayError SetGamepadFocusOverlay(ulong ulNewFocusOverlay)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600136E")]
		[Address(RVA = "0xAC6388", Offset = "0xAC6388", VA = "0xAC6388")]
		public EVROverlayError SetOverlayNeighbor(EOverlayDirection eDirection, ulong ulFrom, ulong ulTo)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600136F")]
		[Address(RVA = "0xAC63A4", Offset = "0xAC63A4", VA = "0xAC63A4")]
		public EVROverlayError MoveGamepadFocusToNeighbor(EOverlayDirection eDirection, ulong ulFrom)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001370")]
		[Address(RVA = "0xAC63C0", Offset = "0xAC63C0", VA = "0xAC63C0")]
		public EVROverlayError SetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, IntPtr vCenter, float fRadius)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001371")]
		[Address(RVA = "0xAC63DC", Offset = "0xAC63DC", VA = "0xAC63DC")]
		public EVROverlayError GetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, ref HmdVector2_t pvCenter, ref float pfRadius)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001372")]
		[Address(RVA = "0xAC63FC", Offset = "0xAC63FC", VA = "0xAC63FC")]
		public EVROverlayError SetOverlayTexture(ulong ulOverlayHandle, ref Texture_t pTexture)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001373")]
		[Address(RVA = "0xAC6418", Offset = "0xAC6418", VA = "0xAC6418")]
		public EVROverlayError ClearOverlayTexture(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001374")]
		[Address(RVA = "0xAC6434", Offset = "0xAC6434", VA = "0xAC6434")]
		public EVROverlayError SetOverlayRaw(ulong ulOverlayHandle, IntPtr pvBuffer, uint unWidth, uint unHeight, uint unDepth)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001375")]
		[Address(RVA = "0xAC6450", Offset = "0xAC6450", VA = "0xAC6450")]
		public EVROverlayError SetOverlayFromFile(ulong ulOverlayHandle, string pchFilePath)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001376")]
		[Address(RVA = "0xAC646C", Offset = "0xAC646C", VA = "0xAC646C")]
		public EVROverlayError GetOverlayTexture(ulong ulOverlayHandle, ref IntPtr pNativeTextureHandle, IntPtr pNativeTextureRef, ref uint pWidth, ref uint pHeight, ref uint pNativeFormat, ref ETextureType pAPIType, ref EColorSpace pColorSpace, ref VRTextureBounds_t pTextureBounds)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001377")]
		[Address(RVA = "0xAC64A0", Offset = "0xAC64A0", VA = "0xAC64A0")]
		public EVROverlayError ReleaseNativeOverlayHandle(ulong ulOverlayHandle, IntPtr pNativeTextureHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001378")]
		[Address(RVA = "0xAC64BC", Offset = "0xAC64BC", VA = "0xAC64BC")]
		public EVROverlayError GetOverlayTextureSize(ulong ulOverlayHandle, ref uint pWidth, ref uint pHeight)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001379")]
		[Address(RVA = "0xAC64E0", Offset = "0xAC64E0", VA = "0xAC64E0")]
		public EVROverlayError CreateDashboardOverlay(string pchOverlayKey, string pchOverlayFriendlyName, ref ulong pMainHandle, ref ulong pThumbnailHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600137A")]
		[Address(RVA = "0xAC6504", Offset = "0xAC6504", VA = "0xAC6504")]
		public bool IsDashboardVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x600137B")]
		[Address(RVA = "0xAC6520", Offset = "0xAC6520", VA = "0xAC6520")]
		public bool IsActiveDashboardOverlay(ulong ulOverlayHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x600137C")]
		[Address(RVA = "0xAC653C", Offset = "0xAC653C", VA = "0xAC653C")]
		public EVROverlayError SetDashboardOverlaySceneProcess(ulong ulOverlayHandle, uint unProcessId)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600137D")]
		[Address(RVA = "0xAC6558", Offset = "0xAC6558", VA = "0xAC6558")]
		public EVROverlayError GetDashboardOverlaySceneProcess(ulong ulOverlayHandle, ref uint punProcessId)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x600137E")]
		[Address(RVA = "0xAC6578", Offset = "0xAC6578", VA = "0xAC6578")]
		public void ShowDashboard(string pchOverlayToShow)
		{
		}

		[Token(Token = "0x600137F")]
		[Address(RVA = "0xAC6594", Offset = "0xAC6594", VA = "0xAC6594")]
		public uint GetPrimaryDashboardDevice()
		{
			return default(uint);
		}

		[Token(Token = "0x6001380")]
		[Address(RVA = "0xAC65B0", Offset = "0xAC65B0", VA = "0xAC65B0")]
		public EVROverlayError ShowKeyboard(int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001381")]
		[Address(RVA = "0xAC65D4", Offset = "0xAC65D4", VA = "0xAC65D4")]
		public EVROverlayError ShowKeyboardForOverlay(ulong ulOverlayHandle, int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001382")]
		[Address(RVA = "0xAC65FC", Offset = "0xAC65FC", VA = "0xAC65FC")]
		public uint GetKeyboardText(StringBuilder pchText, uint cchText)
		{
			return default(uint);
		}

		[Token(Token = "0x6001383")]
		[Address(RVA = "0xAC6618", Offset = "0xAC6618", VA = "0xAC6618")]
		public void HideKeyboard()
		{
		}

		[Token(Token = "0x6001384")]
		[Address(RVA = "0xAC6634", Offset = "0xAC6634", VA = "0xAC6634")]
		public void SetKeyboardTransformAbsolute(ETrackingUniverseOrigin eTrackingOrigin, ref HmdMatrix34_t pmatTrackingOriginToKeyboardTransform)
		{
		}

		[Token(Token = "0x6001385")]
		[Address(RVA = "0xAC6650", Offset = "0xAC6650", VA = "0xAC6650")]
		public void SetKeyboardPositionForOverlay(ulong ulOverlayHandle, HmdRect2_t avoidRect)
		{
		}

		[Token(Token = "0x6001386")]
		[Address(RVA = "0xAC666C", Offset = "0xAC666C", VA = "0xAC666C")]
		public EVROverlayError SetOverlayIntersectionMask(ulong ulOverlayHandle, ref VROverlayIntersectionMaskPrimitive_t pMaskPrimitives, uint unNumMaskPrimitives, uint unPrimitiveSize)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001387")]
		[Address(RVA = "0xAC6688", Offset = "0xAC6688", VA = "0xAC6688")]
		public EVROverlayError GetOverlayFlags(ulong ulOverlayHandle, ref uint pFlags)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001388")]
		[Address(RVA = "0xAC66A8", Offset = "0xAC66A8", VA = "0xAC66A8")]
		public VRMessageOverlayResponse ShowMessageOverlay(string pchText, string pchCaption, string pchButton0Text, string pchButton1Text, string pchButton2Text, string pchButton3Text)
		{
			return default(VRMessageOverlayResponse);
		}

		[Token(Token = "0x6001389")]
		[Address(RVA = "0xAC66C4", Offset = "0xAC66C4", VA = "0xAC66C4")]
		public void CloseMessageOverlay()
		{
		}
	}
	[Token(Token = "0x200021F")]
	public class CVRRenderModels
	{
		[Token(Token = "0x200053D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x7FB338", Offset = "0x7FB338")]
		internal delegate bool _GetComponentStatePacked(string pchRenderModelName, string pchComponentName, ref VRControllerState_t_Packed pControllerState, ref RenderModel_ControllerMode_State_t pState, ref RenderModel_ComponentState_t pComponentState);

		[StructLayout(2)]
		[Token(Token = "0x200053E")]
		private struct GetComponentStateUnion
		{
			[Token(Token = "0x40026D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRRenderModels._GetComponentState pGetComponentState;

			[Token(Token = "0x40026DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _GetComponentStatePacked pGetComponentStatePacked;
		}

		[Token(Token = "0x4001A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRRenderModels FnTable;

		[Token(Token = "0x600138A")]
		[Address(RVA = "0xAC67FC", Offset = "0xAC67FC", VA = "0xAC67FC")]
		internal CVRRenderModels(IntPtr pInterface)
		{
		}

		[Token(Token = "0x600138B")]
		[Address(RVA = "0xAC6904", Offset = "0xAC6904", VA = "0xAC6904")]
		public EVRRenderModelError LoadRenderModel_Async(string pchRenderModelName, ref IntPtr ppRenderModel)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x600138C")]
		[Address(RVA = "0xAC6920", Offset = "0xAC6920", VA = "0xAC6920")]
		public void FreeRenderModel(IntPtr pRenderModel)
		{
		}

		[Token(Token = "0x600138D")]
		[Address(RVA = "0xAC693C", Offset = "0xAC693C", VA = "0xAC693C")]
		public EVRRenderModelError LoadTexture_Async(int textureId, ref IntPtr ppTexture)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x600138E")]
		[Address(RVA = "0xAC6958", Offset = "0xAC6958", VA = "0xAC6958")]
		public void FreeTexture(IntPtr pTexture)
		{
		}

		[Token(Token = "0x600138F")]
		[Address(RVA = "0xAC6974", Offset = "0xAC6974", VA = "0xAC6974")]
		public EVRRenderModelError LoadTextureD3D11_Async(int textureId, IntPtr pD3D11Device, ref IntPtr ppD3D11Texture2D)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x6001390")]
		[Address(RVA = "0xAC6990", Offset = "0xAC6990", VA = "0xAC6990")]
		public EVRRenderModelError LoadIntoTextureD3D11_Async(int textureId, IntPtr pDstTexture)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x6001391")]
		[Address(RVA = "0xAC69AC", Offset = "0xAC69AC", VA = "0xAC69AC")]
		public void FreeTextureD3D11(IntPtr pD3D11Texture2D)
		{
		}

		[Token(Token = "0x6001392")]
		[Address(RVA = "0xAC69C8", Offset = "0xAC69C8", VA = "0xAC69C8")]
		public uint GetRenderModelName(uint unRenderModelIndex, StringBuilder pchRenderModelName, uint unRenderModelNameLen)
		{
			return default(uint);
		}

		[Token(Token = "0x6001393")]
		[Address(RVA = "0xAC69E4", Offset = "0xAC69E4", VA = "0xAC69E4")]
		public uint GetRenderModelCount()
		{
			return default(uint);
		}

		[Token(Token = "0x6001394")]
		[Address(RVA = "0xAC6A00", Offset = "0xAC6A00", VA = "0xAC6A00")]
		public uint GetComponentCount(string pchRenderModelName)
		{
			return default(uint);
		}

		[Token(Token = "0x6001395")]
		[Address(RVA = "0xAC6A1C", Offset = "0xAC6A1C", VA = "0xAC6A1C")]
		public uint GetComponentName(string pchRenderModelName, uint unComponentIndex, StringBuilder pchComponentName, uint unComponentNameLen)
		{
			return default(uint);
		}

		[Token(Token = "0x6001396")]
		[Address(RVA = "0xAC6A38", Offset = "0xAC6A38", VA = "0xAC6A38")]
		public ulong GetComponentButtonMask(string pchRenderModelName, string pchComponentName)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001397")]
		[Address(RVA = "0xAC6A54", Offset = "0xAC6A54", VA = "0xAC6A54")]
		public uint GetComponentRenderModelName(string pchRenderModelName, string pchComponentName, StringBuilder pchComponentRenderModelName, uint unComponentRenderModelNameLen)
		{
			return default(uint);
		}

		[Token(Token = "0x6001398")]
		[Address(RVA = "0xAC6A70", Offset = "0xAC6A70", VA = "0xAC6A70")]
		public bool GetComponentState(string pchRenderModelName, string pchComponentName, ref VRControllerState_t pControllerState, ref RenderModel_ControllerMode_State_t pState, ref RenderModel_ComponentState_t pComponentState)
		{
			return default(bool);
		}

		[Token(Token = "0x6001399")]
		[Address(RVA = "0xAC6FF4", Offset = "0xAC6FF4", VA = "0xAC6FF4")]
		public bool RenderModelHasComponent(string pchRenderModelName, string pchComponentName)
		{
			return default(bool);
		}

		[Token(Token = "0x600139A")]
		[Address(RVA = "0xAC7010", Offset = "0xAC7010", VA = "0xAC7010")]
		public uint GetRenderModelThumbnailURL(string pchRenderModelName, StringBuilder pchThumbnailURL, uint unThumbnailURLLen, ref EVRRenderModelError peError)
		{
			return default(uint);
		}

		[Token(Token = "0x600139B")]
		[Address(RVA = "0xAC702C", Offset = "0xAC702C", VA = "0xAC702C")]
		public uint GetRenderModelOriginalPath(string pchRenderModelName, StringBuilder pchOriginalPath, uint unOriginalPathLen, ref EVRRenderModelError peError)
		{
			return default(uint);
		}

		[Token(Token = "0x600139C")]
		[Address(RVA = "0xAC7048", Offset = "0xAC7048", VA = "0xAC7048")]
		public string GetRenderModelErrorNameFromEnum(EVRRenderModelError error)
		{
			return null;
		}
	}
	[Token(Token = "0x2000220")]
	public class CVRNotifications
	{
		[Token(Token = "0x4001A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRNotifications FnTable;

		[Token(Token = "0x600139D")]
		[Address(RVA = "0xAC56A8", Offset = "0xAC56A8", VA = "0xAC56A8")]
		internal CVRNotifications(IntPtr pInterface)
		{
		}

		[Token(Token = "0x600139E")]
		[Address(RVA = "0xAC57A8", Offset = "0xAC57A8", VA = "0xAC57A8")]
		public EVRNotificationError CreateNotification(ulong ulOverlayHandle, ulong ulUserValue, EVRNotificationType type, string pchText, EVRNotificationStyle style, ref NotificationBitmap_t pImage, ref uint pNotificationId)
		{
			return default(EVRNotificationError);
		}

		[Token(Token = "0x600139F")]
		[Address(RVA = "0xAC57CC", Offset = "0xAC57CC", VA = "0xAC57CC")]
		public EVRNotificationError RemoveNotification(uint notificationId)
		{
			return default(EVRNotificationError);
		}
	}
	[Token(Token = "0x2000221")]
	public class CVRSettings
	{
		[Token(Token = "0x4001A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRSettings FnTable;

		[Token(Token = "0x60013A0")]
		[Address(RVA = "0xAC753C", Offset = "0xAC753C", VA = "0xAC753C")]
		internal CVRSettings(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60013A1")]
		[Address(RVA = "0xAC7644", Offset = "0xAC7644", VA = "0xAC7644")]
		public string GetSettingsErrorNameFromEnum(EVRSettingsError eError)
		{
			return null;
		}

		[Token(Token = "0x60013A2")]
		[Address(RVA = "0xAC76D8", Offset = "0xAC76D8", VA = "0xAC76D8")]
		public bool Sync(bool bForce, ref EVRSettingsError peError)
		{
			return default(bool);
		}

		[Token(Token = "0x60013A3")]
		[Address(RVA = "0xAC76F8", Offset = "0xAC76F8", VA = "0xAC76F8")]
		public void SetBool(string pchSection, string pchSettingsKey, bool bValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x60013A4")]
		[Address(RVA = "0xAC7718", Offset = "0xAC7718", VA = "0xAC7718")]
		public void SetInt32(string pchSection, string pchSettingsKey, int nValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x60013A5")]
		[Address(RVA = "0xAC7734", Offset = "0xAC7734", VA = "0xAC7734")]
		public void SetFloat(string pchSection, string pchSettingsKey, float flValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x60013A6")]
		[Address(RVA = "0xAC7750", Offset = "0xAC7750", VA = "0xAC7750")]
		public void SetString(string pchSection, string pchSettingsKey, string pchValue, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x60013A7")]
		[Address(RVA = "0xAC776C", Offset = "0xAC776C", VA = "0xAC776C")]
		public bool GetBool(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
			return default(bool);
		}

		[Token(Token = "0x60013A8")]
		[Address(RVA = "0xAC7788", Offset = "0xAC7788", VA = "0xAC7788")]
		public int GetInt32(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
			return default(int);
		}

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0xAC77A4", Offset = "0xAC77A4", VA = "0xAC77A4")]
		public float GetFloat(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
			return default(float);
		}

		[Token(Token = "0x60013AA")]
		[Address(RVA = "0xAC77C0", Offset = "0xAC77C0", VA = "0xAC77C0")]
		public void GetString(string pchSection, string pchSettingsKey, StringBuilder pchValue, uint unValueLen, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x60013AB")]
		[Address(RVA = "0xAC77DC", Offset = "0xAC77DC", VA = "0xAC77DC")]
		public void RemoveSection(string pchSection, ref EVRSettingsError peError)
		{
		}

		[Token(Token = "0x60013AC")]
		[Address(RVA = "0xAC77F8", Offset = "0xAC77F8", VA = "0xAC77F8")]
		public void RemoveKeyInSection(string pchSection, string pchSettingsKey, ref EVRSettingsError peError)
		{
		}
	}
	[Token(Token = "0x2000222")]
	public class CVRScreenshots
	{
		[Token(Token = "0x4001A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRScreenshots FnTable;

		[Token(Token = "0x60013AD")]
		[Address(RVA = "0xAC7350", Offset = "0xAC7350", VA = "0xAC7350")]
		internal CVRScreenshots(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60013AE")]
		[Address(RVA = "0xAC7460", Offset = "0xAC7460", VA = "0xAC7460")]
		public EVRScreenshotError RequestScreenshot(ref uint pOutScreenshotHandle, EVRScreenshotType type, string pchPreviewFilename, string pchVRFilename)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x60013AF")]
		[Address(RVA = "0xAC7480", Offset = "0xAC7480", VA = "0xAC7480")]
		public EVRScreenshotError HookScreenshot(EVRScreenshotType[] pSupportedTypes)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x60013B0")]
		[Address(RVA = "0xAC74AC", Offset = "0xAC74AC", VA = "0xAC74AC")]
		public EVRScreenshotType GetScreenshotPropertyType(uint screenshotHandle, ref EVRScreenshotError pError)
		{
			return default(EVRScreenshotType);
		}

		[Token(Token = "0x60013B1")]
		[Address(RVA = "0xAC74C8", Offset = "0xAC74C8", VA = "0xAC74C8")]
		public uint GetScreenshotPropertyFilename(uint screenshotHandle, EVRScreenshotPropertyFilenames filenameType, StringBuilder pchFilename, uint cchFilename, ref EVRScreenshotError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0xAC74E4", Offset = "0xAC74E4", VA = "0xAC74E4")]
		public EVRScreenshotError UpdateScreenshotProgress(uint screenshotHandle, float flProgress)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x60013B3")]
		[Address(RVA = "0xAC7500", Offset = "0xAC7500", VA = "0xAC7500")]
		public EVRScreenshotError TakeStereoScreenshot(ref uint pOutScreenshotHandle, string pchPreviewFilename, string pchVRFilename)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0xAC7520", Offset = "0xAC7520", VA = "0xAC7520")]
		public EVRScreenshotError SubmitScreenshot(uint screenshotHandle, EVRScreenshotType type, string pchSourcePreviewFilename, string pchSourceVRFilename)
		{
			return default(EVRScreenshotError);
		}
	}
	[Token(Token = "0x2000223")]
	public class CVRResources
	{
		[Token(Token = "0x4001A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRResources FnTable;

		[Token(Token = "0x60013B5")]
		[Address(RVA = "0xAC7218", Offset = "0xAC7218", VA = "0xAC7218")]
		internal CVRResources(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60013B6")]
		[Address(RVA = "0xAC7318", Offset = "0xAC7318", VA = "0xAC7318")]
		public uint LoadSharedResource(string pchResourceName, string pchBuffer, uint unBufferLen)
		{
			return default(uint);
		}

		[Token(Token = "0x60013B7")]
		[Address(RVA = "0xAC7334", Offset = "0xAC7334", VA = "0xAC7334")]
		public uint GetResourceFullPath(string pchResourceName, string pchResourceTypeDirectory, StringBuilder pchPathBuffer, uint unBufferLen)
		{
			return default(uint);
		}
	}
	[Token(Token = "0x2000224")]
	public class CVRDriverManager
	{
		[Token(Token = "0x4001A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRDriverManager FnTable;

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0xAC53C8", Offset = "0xAC53C8", VA = "0xAC53C8")]
		internal CVRDriverManager(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60013B9")]
		[Address(RVA = "0xAC54D0", Offset = "0xAC54D0", VA = "0xAC54D0")]
		public uint GetDriverCount()
		{
			return default(uint);
		}

		[Token(Token = "0x60013BA")]
		[Address(RVA = "0xAC54EC", Offset = "0xAC54EC", VA = "0xAC54EC")]
		public uint GetDriverName(uint nDriver, StringBuilder pchValue, uint unBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x60013BB")]
		[Address(RVA = "0xAC5508", Offset = "0xAC5508", VA = "0xAC5508")]
		public ulong GetDriverHandle(string pchDriverName)
		{
			return default(ulong);
		}
	}
	[Token(Token = "0x2000225")]
	public class OpenVRInterop
	{
		[PreserveSig]
		[Token(Token = "0x60013BC")]
		[Address(RVA = "0xB70D58", Offset = "0xB70D58", VA = "0xB70D58")]
		internal static extern uint InitInternal(ref EVRInitError peError, EVRApplicationType eApplicationType);

		[PreserveSig]
		[Token(Token = "0x60013BD")]
		[Address(RVA = "0xB70E04", Offset = "0xB70E04", VA = "0xB70E04")]
		internal static extern void ShutdownInternal();

		[PreserveSig]
		[Token(Token = "0x60013BE")]
		[Address(RVA = "0xB70E90", Offset = "0xB70E90", VA = "0xB70E90")]
		internal static extern bool IsHmdPresent();

		[PreserveSig]
		[Token(Token = "0x60013BF")]
		[Address(RVA = "0xB70F24", Offset = "0xB70F24", VA = "0xB70F24")]
		internal static extern bool IsRuntimeInstalled();

		[PreserveSig]
		[Token(Token = "0x60013C0")]
		[Address(RVA = "0xB70FB8", Offset = "0xB70FB8", VA = "0xB70FB8")]
		internal static extern IntPtr GetStringForHmdError(EVRInitError error);

		[PreserveSig]
		[Token(Token = "0x60013C1")]
		[Address(RVA = "0xB70514", Offset = "0xB70514", VA = "0xB70514")]
		internal static extern IntPtr GetGenericInterface([In] string pchInterfaceVersion, ref EVRInitError peError);

		[PreserveSig]
		[Token(Token = "0x60013C2")]
		[Address(RVA = "0xB71054", Offset = "0xB71054", VA = "0xB71054")]
		internal static extern bool IsInterfaceVersionValid([In] string pchInterfaceVersion);

		[PreserveSig]
		[Token(Token = "0x60013C3")]
		[Address(RVA = "0xB7110C", Offset = "0xB7110C", VA = "0xB7110C")]
		internal static extern uint GetInitToken();

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0xB71198", Offset = "0xB71198", VA = "0xB71198")]
		public OpenVRInterop()
		{
		}
	}
	[Token(Token = "0x2000226")]
	public enum EVREye
	{
		[Token(Token = "0x4001A7D")]
		Eye_Left,
		[Token(Token = "0x4001A7E")]
		Eye_Right
	}
	[Token(Token = "0x2000227")]
	public enum ETextureType
	{
		[Token(Token = "0x4001A80")]
		DirectX,
		[Token(Token = "0x4001A81")]
		OpenGL,
		[Token(Token = "0x4001A82")]
		Vulkan,
		[Token(Token = "0x4001A83")]
		IOSurface,
		[Token(Token = "0x4001A84")]
		DirectX12,
		[Token(Token = "0x4001A85")]
		DXGISharedHandle
	}
	[Token(Token = "0x2000228")]
	public enum EColorSpace
	{
		[Token(Token = "0x4001A87")]
		Auto,
		[Token(Token = "0x4001A88")]
		Gamma,
		[Token(Token = "0x4001A89")]
		Linear
	}
	[Token(Token = "0x2000229")]
	public enum ETrackingResult
	{
		[Token(Token = "0x4001A8B")]
		Uninitialized = 1,
		[Token(Token = "0x4001A8C")]
		Calibrating_InProgress = 100,
		[Token(Token = "0x4001A8D")]
		Calibrating_OutOfRange = 101,
		[Token(Token = "0x4001A8E")]
		Running_OK = 200,
		[Token(Token = "0x4001A8F")]
		Running_OutOfRange = 201
	}
	[Token(Token = "0x200022A")]
	public enum ETrackedDeviceClass
	{
		[Token(Token = "0x4001A91")]
		Invalid,
		[Token(Token = "0x4001A92")]
		HMD,
		[Token(Token = "0x4001A93")]
		Controller,
		[Token(Token = "0x4001A94")]
		GenericTracker,
		[Token(Token = "0x4001A95")]
		TrackingReference,
		[Token(Token = "0x4001A96")]
		DisplayRedirect
	}
	[Token(Token = "0x200022B")]
	public enum ETrackedControllerRole
	{
		[Token(Token = "0x4001A98")]
		Invalid,
		[Token(Token = "0x4001A99")]
		LeftHand,
		[Token(Token = "0x4001A9A")]
		RightHand,
		[Token(Token = "0x4001A9B")]
		OptOut
	}
	[Token(Token = "0x200022C")]
	public enum ETrackingUniverseOrigin
	{
		[Token(Token = "0x4001A9D")]
		TrackingUniverseSeated,
		[Token(Token = "0x4001A9E")]
		TrackingUniverseStanding,
		[Token(Token = "0x4001A9F")]
		TrackingUniverseRawAndUncalibrated
	}
	[Token(Token = "0x200022D")]
	public enum ETrackedDeviceProperty
	{
		[Token(Token = "0x4001AA1")]
		Prop_Invalid = 0,
		[Token(Token = "0x4001AA2")]
		Prop_TrackingSystemName_String = 1000,
		[Token(Token = "0x4001AA3")]
		Prop_ModelNumber_String = 1001,
		[Token(Token = "0x4001AA4")]
		Prop_SerialNumber_String = 1002,
		[Token(Token = "0x4001AA5")]
		Prop_RenderModelName_String = 1003,
		[Token(Token = "0x4001AA6")]
		Prop_WillDriftInYaw_Bool = 1004,
		[Token(Token = "0x4001AA7")]
		Prop_ManufacturerName_String = 1005,
		[Token(Token = "0x4001AA8")]
		Prop_TrackingFirmwareVersion_String = 1006,
		[Token(Token = "0x4001AA9")]
		Prop_HardwareRevision_String = 1007,
		[Token(Token = "0x4001AAA")]
		Prop_AllWirelessDongleDescriptions_String = 1008,
		[Token(Token = "0x4001AAB")]
		Prop_ConnectedWirelessDongle_String = 1009,
		[Token(Token = "0x4001AAC")]
		Prop_DeviceIsWireless_Bool = 1010,
		[Token(Token = "0x4001AAD")]
		Prop_DeviceIsCharging_Bool = 1011,
		[Token(Token = "0x4001AAE")]
		Prop_DeviceBatteryPercentage_Float = 1012,
		[Token(Token = "0x4001AAF")]
		Prop_StatusDisplayTransform_Matrix34 = 1013,
		[Token(Token = "0x4001AB0")]
		Prop_Firmware_UpdateAvailable_Bool = 1014,
		[Token(Token = "0x4001AB1")]
		Prop_Firmware_ManualUpdate_Bool = 1015,
		[Token(Token = "0x4001AB2")]
		Prop_Firmware_ManualUpdateURL_String = 1016,
		[Token(Token = "0x4001AB3")]
		Prop_HardwareRevision_Uint64 = 1017,
		[Token(Token = "0x4001AB4")]
		Prop_FirmwareVersion_Uint64 = 1018,
		[Token(Token = "0x4001AB5")]
		Prop_FPGAVersion_Uint64 = 1019,
		[Token(Token = "0x4001AB6")]
		Prop_VRCVersion_Uint64 = 1020,
		[Token(Token = "0x4001AB7")]
		Prop_RadioVersion_Uint64 = 1021,
		[Token(Token = "0x4001AB8")]
		Prop_DongleVersion_Uint64 = 1022,
		[Token(Token = "0x4001AB9")]
		Prop_BlockServerShutdown_Bool = 1023,
		[Token(Token = "0x4001ABA")]
		Prop_CanUnifyCoordinateSystemWithHmd_Bool = 1024,
		[Token(Token = "0x4001ABB")]
		Prop_ContainsProximitySensor_Bool = 1025,
		[Token(Token = "0x4001ABC")]
		Prop_DeviceProvidesBatteryStatus_Bool = 1026,
		[Token(Token = "0x4001ABD")]
		Prop_DeviceCanPowerOff_Bool = 1027,
		[Token(Token = "0x4001ABE")]
		Prop_Firmware_ProgrammingTarget_String = 1028,
		[Token(Token = "0x4001ABF")]
		Prop_DeviceClass_Int32 = 1029,
		[Token(Token = "0x4001AC0")]
		Prop_HasCamera_Bool = 1030,
		[Token(Token = "0x4001AC1")]
		Prop_DriverVersion_String = 1031,
		[Token(Token = "0x4001AC2")]
		Prop_Firmware_ForceUpdateRequired_Bool = 1032,
		[Token(Token = "0x4001AC3")]
		Prop_ViveSystemButtonFixRequired_Bool = 1033,
		[Token(Token = "0x4001AC4")]
		Prop_ParentDriver_Uint64 = 1034,
		[Token(Token = "0x4001AC5")]
		Prop_ResourceRoot_String = 1035,
		[Token(Token = "0x4001AC6")]
		Prop_RegisteredDeviceType_String = 1036,
		[Token(Token = "0x4001AC7")]
		Prop_InputProfilePath_String = 1037,
		[Token(Token = "0x4001AC8")]
		Prop_NeverTracked_Bool = 1038,
		[Token(Token = "0x4001AC9")]
		Prop_ReportsTimeSinceVSync_Bool = 2000,
		[Token(Token = "0x4001ACA")]
		Prop_SecondsFromVsyncToPhotons_Float = 2001,
		[Token(Token = "0x4001ACB")]
		Prop_DisplayFrequency_Float = 2002,
		[Token(Token = "0x4001ACC")]
		Prop_UserIpdMeters_Float = 2003,
		[Token(Token = "0x4001ACD")]
		Prop_CurrentUniverseId_Uint64 = 2004,
		[Token(Token = "0x4001ACE")]
		Prop_PreviousUniverseId_Uint64 = 2005,
		[Token(Token = "0x4001ACF")]
		Prop_DisplayFirmwareVersion_Uint64 = 2006,
		[Token(Token = "0x4001AD0")]
		Prop_IsOnDesktop_Bool = 2007,
		[Token(Token = "0x4001AD1")]
		Prop_DisplayMCType_Int32 = 2008,
		[Token(Token = "0x4001AD2")]
		Prop_DisplayMCOffset_Float = 2009,
		[Token(Token = "0x4001AD3")]
		Prop_DisplayMCScale_Float = 2010,
		[Token(Token = "0x4001AD4")]
		Prop_EdidVendorID_Int32 = 2011,
		[Token(Token = "0x4001AD5")]
		Prop_DisplayMCImageLeft_String = 2012,
		[Token(Token = "0x4001AD6")]
		Prop_DisplayMCImageRight_String = 2013,
		[Token(Token = "0x4001AD7")]
		Prop_DisplayGCBlackClamp_Float = 2014,
		[Token(Token = "0x4001AD8")]
		Prop_EdidProductID_Int32 = 2015,
		[Token(Token = "0x4001AD9")]
		Prop_CameraToHeadTransform_Matrix34 = 2016,
		[Token(Token = "0x4001ADA")]
		Prop_DisplayGCType_Int32 = 2017,
		[Token(Token = "0x4001ADB")]
		Prop_DisplayGCOffset_Float = 2018,
		[Token(Token = "0x4001ADC")]
		Prop_DisplayGCScale_Float = 2019,
		[Token(Token = "0x4001ADD")]
		Prop_DisplayGCPrescale_Float = 2020,
		[Token(Token = "0x4001ADE")]
		Prop_DisplayGCImage_String = 2021,
		[Token(Token = "0x4001ADF")]
		Prop_LensCenterLeftU_Float = 2022,
		[Token(Token = "0x4001AE0")]
		Prop_LensCenterLeftV_Float = 2023,
		[Token(Token = "0x4001AE1")]
		Prop_LensCenterRightU_Float = 2024,
		[Token(Token = "0x4001AE2")]
		Prop_LensCenterRightV_Float = 2025,
		[Token(Token = "0x4001AE3")]
		Prop_UserHeadToEyeDepthMeters_Float = 2026,
		[Token(Token = "0x4001AE4")]
		Prop_CameraFirmwareVersion_Uint64 = 2027,
		[Token(Token = "0x4001AE5")]
		Prop_CameraFirmwareDescription_String = 2028,
		[Token(Token = "0x4001AE6")]
		Prop_DisplayFPGAVersion_Uint64 = 2029,
		[Token(Token = "0x4001AE7")]
		Prop_DisplayBootloaderVersion_Uint64 = 2030,
		[Token(Token = "0x4001AE8")]
		Prop_DisplayHardwareVersion_Uint64 = 2031,
		[Token(Token = "0x4001AE9")]
		Prop_AudioFirmwareVersion_Uint64 = 2032,
		[Token(Token = "0x4001AEA")]
		Prop_CameraCompatibilityMode_Int32 = 2033,
		[Token(Token = "0x4001AEB")]
		Prop_ScreenshotHorizontalFieldOfViewDegrees_Float = 2034,
		[Token(Token = "0x4001AEC")]
		Prop_ScreenshotVerticalFieldOfViewDegrees_Float = 2035,
		[Token(Token = "0x4001AED")]
		Prop_DisplaySuppressed_Bool = 2036,
		[Token(Token = "0x4001AEE")]
		Prop_DisplayAllowNightMode_Bool = 2037,
		[Token(Token = "0x4001AEF")]
		Prop_DisplayMCImageWidth_Int32 = 2038,
		[Token(Token = "0x4001AF0")]
		Prop_DisplayMCImageHeight_Int32 = 2039,
		[Token(Token = "0x4001AF1")]
		Prop_DisplayMCImageNumChannels_Int32 = 2040,
		[Token(Token = "0x4001AF2")]
		Prop_DisplayMCImageData_Binary = 2041,
		[Token(Token = "0x4001AF3")]
		Prop_SecondsFromPhotonsToVblank_Float = 2042,
		[Token(Token = "0x4001AF4")]
		Prop_DriverDirectModeSendsVsyncEvents_Bool = 2043,
		[Token(Token = "0x4001AF5")]
		Prop_DisplayDebugMode_Bool = 2044,
		[Token(Token = "0x4001AF6")]
		Prop_GraphicsAdapterLuid_Uint64 = 2045,
		[Token(Token = "0x4001AF7")]
		Prop_DriverProvidedChaperonePath_String = 2048,
		[Token(Token = "0x4001AF8")]
		Prop_ExpectedTrackingReferenceCount_Int32 = 2049,
		[Token(Token = "0x4001AF9")]
		Prop_ExpectedControllerCount_Int32 = 2050,
		[Token(Token = "0x4001AFA")]
		Prop_NamedIconPathControllerLeftDeviceOff_String = 2051,
		[Token(Token = "0x4001AFB")]
		Prop_NamedIconPathControllerRightDeviceOff_String = 2052,
		[Token(Token = "0x4001AFC")]
		Prop_NamedIconPathTrackingReferenceDeviceOff_String = 2053,
		[Token(Token = "0x4001AFD")]
		Prop_DoNotApplyPrediction_Bool = 2054,
		[Token(Token = "0x4001AFE")]
		Prop_CameraToHeadTransforms_Matrix34_Array = 2055,
		[Token(Token = "0x4001AFF")]
		Prop_DistortionMeshResolution_Int32 = 2056,
		[Token(Token = "0x4001B00")]
		Prop_DriverIsDrawingControllers_Bool = 2057,
		[Token(Token = "0x4001B01")]
		Prop_DriverRequestsApplicationPause_Bool = 2058,
		[Token(Token = "0x4001B02")]
		Prop_DriverRequestsReducedRendering_Bool = 2059,
		[Token(Token = "0x4001B03")]
		Prop_MinimumIpdStepMeters_Float = 2060,
		[Token(Token = "0x4001B04")]
		Prop_AudioBridgeFirmwareVersion_Uint64 = 2061,
		[Token(Token = "0x4001B05")]
		Prop_ImageBridgeFirmwareVersion_Uint64 = 2062,
		[Token(Token = "0x4001B06")]
		Prop_AttachedDeviceId_String = 3000,
		[Token(Token = "0x4001B07")]
		Prop_SupportedButtons_Uint64 = 3001,
		[Token(Token = "0x4001B08")]
		Prop_Axis0Type_Int32 = 3002,
		[Token(Token = "0x4001B09")]
		Prop_Axis1Type_Int32 = 3003,
		[Token(Token = "0x4001B0A")]
		Prop_Axis2Type_Int32 = 3004,
		[Token(Token = "0x4001B0B")]
		Prop_Axis3Type_Int32 = 3005,
		[Token(Token = "0x4001B0C")]
		Prop_Axis4Type_Int32 = 3006,
		[Token(Token = "0x4001B0D")]
		Prop_ControllerRoleHint_Int32 = 3007,
		[Token(Token = "0x4001B0E")]
		Prop_FieldOfViewLeftDegrees_Float = 4000,
		[Token(Token = "0x4001B0F")]
		Prop_FieldOfViewRightDegrees_Float = 4001,
		[Token(Token = "0x4001B10")]
		Prop_FieldOfViewTopDegrees_Float = 4002,
		[Token(Token = "0x4001B11")]
		Prop_FieldOfViewBottomDegrees_Float = 4003,
		[Token(Token = "0x4001B12")]
		Prop_TrackingRangeMinimumMeters_Float = 4004,
		[Token(Token = "0x4001B13")]
		Prop_TrackingRangeMaximumMeters_Float = 4005,
		[Token(Token = "0x4001B14")]
		Prop_ModeLabel_String = 4006,
		[Token(Token = "0x4001B15")]
		Prop_IconPathName_String = 5000,
		[Token(Token = "0x4001B16")]
		Prop_NamedIconPathDeviceOff_String = 5001,
		[Token(Token = "0x4001B17")]
		Prop_NamedIconPathDeviceSearching_String = 5002,
		[Token(Token = "0x4001B18")]
		Prop_NamedIconPathDeviceSearchingAlert_String = 5003,
		[Token(Token = "0x4001B19")]
		Prop_NamedIconPathDeviceReady_String = 5004,
		[Token(Token = "0x4001B1A")]
		Prop_NamedIconPathDeviceReadyAlert_String = 5005,
		[Token(Token = "0x4001B1B")]
		Prop_NamedIconPathDeviceNotReady_String = 5006,
		[Token(Token = "0x4001B1C")]
		Prop_NamedIconPathDeviceStandby_String = 5007,
		[Token(Token = "0x4001B1D")]
		Prop_NamedIconPathDeviceAlertLow_String = 5008,
		[Token(Token = "0x4001B1E")]
		Prop_DisplayHiddenArea_Binary_Start = 5100,
		[Token(Token = "0x4001B1F")]
		Prop_DisplayHiddenArea_Binary_End = 5150,
		[Token(Token = "0x4001B20")]
		Prop_ParentContainer = 5151,
		[Token(Token = "0x4001B21")]
		Prop_UserConfigPath_String = 6000,
		[Token(Token = "0x4001B22")]
		Prop_InstallPath_String = 6001,
		[Token(Token = "0x4001B23")]
		Prop_HasDisplayComponent_Bool = 6002,
		[Token(Token = "0x4001B24")]
		Prop_HasControllerComponent_Bool = 6003,
		[Token(Token = "0x4001B25")]
		Prop_HasCameraComponent_Bool = 6004,
		[Token(Token = "0x4001B26")]
		Prop_HasDriverDirectModeComponent_Bool = 6005,
		[Token(Token = "0x4001B27")]
		Prop_HasVirtualDisplayComponent_Bool = 6006,
		[Token(Token = "0x4001B28")]
		Prop_ControllerType_String = 7000,
		[Token(Token = "0x4001B29")]
		Prop_LegacyInputProfile_String = 7001,
		[Token(Token = "0x4001B2A")]
		Prop_VendorSpecific_Reserved_Start = 10000,
		[Token(Token = "0x4001B2B")]
		Prop_VendorSpecific_Reserved_End = 10999,
		[Token(Token = "0x4001B2C")]
		Prop_TrackedDeviceProperty_Max = 1000000
	}
	[Token(Token = "0x200022E")]
	public enum ETrackedPropertyError
	{
		[Token(Token = "0x4001B2E")]
		TrackedProp_Success,
		[Token(Token = "0x4001B2F")]
		TrackedProp_WrongDataType,
		[Token(Token = "0x4001B30")]
		TrackedProp_WrongDeviceClass,
		[Token(Token = "0x4001B31")]
		TrackedProp_BufferTooSmall,
		[Token(Token = "0x4001B32")]
		TrackedProp_UnknownProperty,
		[Token(Token = "0x4001B33")]
		TrackedProp_InvalidDevice,
		[Token(Token = "0x4001B34")]
		TrackedProp_CouldNotContactServer,
		[Token(Token = "0x4001B35")]
		TrackedProp_ValueNotProvidedByDevice,
		[Token(Token = "0x4001B36")]
		TrackedProp_StringExceedsMaximumLength,
		[Token(Token = "0x4001B37")]
		TrackedProp_NotYetAvailable,
		[Token(Token = "0x4001B38")]
		TrackedProp_PermissionDenied,
		[Token(Token = "0x4001B39")]
		TrackedProp_InvalidOperation,
		[Token(Token = "0x4001B3A")]
		TrackedProp_CannotWriteToWildcards
	}
	[Token(Token = "0x200022F")]
	public enum EVRSubmitFlags
	{
		[Token(Token = "0x4001B3C")]
		Submit_Default = 0,
		[Token(Token = "0x4001B3D")]
		Submit_LensDistortionAlreadyApplied = 1,
		[Token(Token = "0x4001B3E")]
		Submit_GlRenderBuffer = 2,
		[Token(Token = "0x4001B3F")]
		Submit_Reserved = 4,
		[Token(Token = "0x4001B40")]
		Submit_TextureWithPose = 8,
		[Token(Token = "0x4001B41")]
		Submit_TextureWithDepth = 0x10
	}
	[Token(Token = "0x2000230")]
	public enum EVRState
	{
		[Token(Token = "0x4001B43")]
		Undefined = -1,
		[Token(Token = "0x4001B44")]
		Off,
		[Token(Token = "0x4001B45")]
		Searching,
		[Token(Token = "0x4001B46")]
		Searching_Alert,
		[Token(Token = "0x4001B47")]
		Ready,
		[Token(Token = "0x4001B48")]
		Ready_Alert,
		[Token(Token = "0x4001B49")]
		NotReady,
		[Token(Token = "0x4001B4A")]
		Standby,
		[Token(Token = "0x4001B4B")]
		Ready_Alert_Low
	}
	[Token(Token = "0x2000231")]
	public enum EVREventType
	{
		[Token(Token = "0x4001B4D")]
		VREvent_None = 0,
		[Token(Token = "0x4001B4E")]
		VREvent_TrackedDeviceActivated = 100,
		[Token(Token = "0x4001B4F")]
		VREvent_TrackedDeviceDeactivated = 101,
		[Token(Token = "0x4001B50")]
		VREvent_TrackedDeviceUpdated = 102,
		[Token(Token = "0x4001B51")]
		VREvent_TrackedDeviceUserInteractionStarted = 103,
		[Token(Token = "0x4001B52")]
		VREvent_TrackedDeviceUserInteractionEnded = 104,
		[Token(Token = "0x4001B53")]
		VREvent_IpdChanged = 105,
		[Token(Token = "0x4001B54")]
		VREvent_EnterStandbyMode = 106,
		[Token(Token = "0x4001B55")]
		VREvent_LeaveStandbyMode = 107,
		[Token(Token = "0x4001B56")]
		VREvent_TrackedDeviceRoleChanged = 108,
		[Token(Token = "0x4001B57")]
		VREvent_WatchdogWakeUpRequested = 109,
		[Token(Token = "0x4001B58")]
		VREvent_LensDistortionChanged = 110,
		[Token(Token = "0x4001B59")]
		VREvent_PropertyChanged = 111,
		[Token(Token = "0x4001B5A")]
		VREvent_WirelessDisconnect = 112,
		[Token(Token = "0x4001B5B")]
		VREvent_WirelessReconnect = 113,
		[Token(Token = "0x4001B5C")]
		VREvent_ButtonPress = 200,
		[Token(Token = "0x4001B5D")]
		VREvent_ButtonUnpress = 201,
		[Token(Token = "0x4001B5E")]
		VREvent_ButtonTouch = 202,
		[Token(Token = "0x4001B5F")]
		VREvent_ButtonUntouch = 203,
		[Token(Token = "0x4001B60")]
		VREvent_DualAnalog_Press = 250,
		[Token(Token = "0x4001B61")]
		VREvent_DualAnalog_Unpress = 251,
		[Token(Token = "0x4001B62")]
		VREvent_DualAnalog_Touch = 252,
		[Token(Token = "0x4001B63")]
		VREvent_DualAnalog_Untouch = 253,
		[Token(Token = "0x4001B64")]
		VREvent_DualAnalog_Move = 254,
		[Token(Token = "0x4001B65")]
		VREvent_DualAnalog_ModeSwitch1 = 255,
		[Token(Token = "0x4001B66")]
		VREvent_DualAnalog_ModeSwitch2 = 256,
		[Token(Token = "0x4001B67")]
		VREvent_DualAnalog_Cancel = 257,
		[Token(Token = "0x4001B68")]
		VREvent_MouseMove = 300,
		[Token(Token = "0x4001B69")]
		VREvent_MouseButtonDown = 301,
		[Token(Token = "0x4001B6A")]
		VREvent_MouseButtonUp = 302,
		[Token(Token = "0x4001B6B")]
		VREvent_FocusEnter = 303,
		[Token(Token = "0x4001B6C")]
		VREvent_FocusLeave = 304,
		[Token(Token = "0x4001B6D")]
		VREvent_Scroll = 305,
		[Token(Token = "0x4001B6E")]
		VREvent_TouchPadMove = 306,
		[Token(Token = "0x4001B6F")]
		VREvent_OverlayFocusChanged = 307,
		[Token(Token = "0x4001B70")]
		VREvent_InputFocusCaptured = 400,
		[Token(Token = "0x4001B71")]
		VREvent_InputFocusReleased = 401,
		[Token(Token = "0x4001B72")]
		VREvent_SceneFocusLost = 402,
		[Token(Token = "0x4001B73")]
		VREvent_SceneFocusGained = 403,
		[Token(Token = "0x4001B74")]
		VREvent_SceneApplicationChanged = 404,
		[Token(Token = "0x4001B75")]
		VREvent_SceneFocusChanged = 405,
		[Token(Token = "0x4001B76")]
		VREvent_InputFocusChanged = 406,
		[Token(Token = "0x4001B77")]
		VREvent_SceneApplicationSecondaryRenderingStarted = 407,
		[Token(Token = "0x4001B78")]
		VREvent_SceneApplicationUsingWrongGraphicsAdapter = 408,
		[Token(Token = "0x4001B79")]
		VREvent_HideRenderModels = 410,
		[Token(Token = "0x4001B7A")]
		VREvent_ShowRenderModels = 411,
		[Token(Token = "0x4001B7B")]
		VREvent_ConsoleOpened = 420,
		[Token(Token = "0x4001B7C")]
		VREvent_ConsoleClosed = 421,
		[Token(Token = "0x4001B7D")]
		VREvent_OverlayShown = 500,
		[Token(Token = "0x4001B7E")]
		VREvent_OverlayHidden = 501,
		[Token(Token = "0x4001B7F")]
		VREvent_DashboardActivated = 502,
		[Token(Token = "0x4001B80")]
		VREvent_DashboardDeactivated = 503,
		[Token(Token = "0x4001B81")]
		VREvent_DashboardThumbSelected = 504,
		[Token(Token = "0x4001B82")]
		VREvent_DashboardRequested = 505,
		[Token(Token = "0x4001B83")]
		VREvent_ResetDashboard = 506,
		[Token(Token = "0x4001B84")]
		VREvent_RenderToast = 507,
		[Token(Token = "0x4001B85")]
		VREvent_ImageLoaded = 508,
		[Token(Token = "0x4001B86")]
		VREvent_ShowKeyboard = 509,
		[Token(Token = "0x4001B87")]
		VREvent_HideKeyboard = 510,
		[Token(Token = "0x4001B88")]
		VREvent_OverlayGamepadFocusGained = 511,
		[Token(Token = "0x4001B89")]
		VREvent_OverlayGamepadFocusLost = 512,
		[Token(Token = "0x4001B8A")]
		VREvent_OverlaySharedTextureChanged = 513,
		[Token(Token = "0x4001B8B")]
		VREvent_ScreenshotTriggered = 516,
		[Token(Token = "0x4001B8C")]
		VREvent_ImageFailed = 517,
		[Token(Token = "0x4001B8D")]
		VREvent_DashboardOverlayCreated = 518,
		[Token(Token = "0x4001B8E")]
		VREvent_SwitchGamepadFocus = 519,
		[Token(Token = "0x4001B8F")]
		VREvent_RequestScreenshot = 520,
		[Token(Token = "0x4001B90")]
		VREvent_ScreenshotTaken = 521,
		[Token(Token = "0x4001B91")]
		VREvent_ScreenshotFailed = 522,
		[Token(Token = "0x4001B92")]
		VREvent_SubmitScreenshotToDashboard = 523,
		[Token(Token = "0x4001B93")]
		VREvent_ScreenshotProgressToDashboard = 524,
		[Token(Token = "0x4001B94")]
		VREvent_PrimaryDashboardDeviceChanged = 525,
		[Token(Token = "0x4001B95")]
		VREvent_RoomViewShown = 526,
		[Token(Token = "0x4001B96")]
		VREvent_RoomViewHidden = 527,
		[Token(Token = "0x4001B97")]
		VREvent_Notification_Shown = 600,
		[Token(Token = "0x4001B98")]
		VREvent_Notification_Hidden = 601,
		[Token(Token = "0x4001B99")]
		VREvent_Notification_BeginInteraction = 602,
		[Token(Token = "0x4001B9A")]
		VREvent_Notification_Destroyed = 603,
		[Token(Token = "0x4001B9B")]
		VREvent_Quit = 700,
		[Token(Token = "0x4001B9C")]
		VREvent_ProcessQuit = 701,
		[Token(Token = "0x4001B9D")]
		VREvent_QuitAborted_UserPrompt = 702,
		[Token(Token = "0x4001B9E")]
		VREvent_QuitAcknowledged = 703,
		[Token(Token = "0x4001B9F")]
		VREvent_DriverRequestedQuit = 704,
		[Token(Token = "0x4001BA0")]
		VREvent_ChaperoneDataHasChanged = 800,
		[Token(Token = "0x4001BA1")]
		VREvent_ChaperoneUniverseHasChanged = 801,
		[Token(Token = "0x4001BA2")]
		VREvent_ChaperoneTempDataHasChanged = 802,
		[Token(Token = "0x4001BA3")]
		VREvent_ChaperoneSettingsHaveChanged = 803,
		[Token(Token = "0x4001BA4")]
		VREvent_SeatedZeroPoseReset = 804,
		[Token(Token = "0x4001BA5")]
		VREvent_AudioSettingsHaveChanged = 820,
		[Token(Token = "0x4001BA6")]
		VREvent_BackgroundSettingHasChanged = 850,
		[Token(Token = "0x4001BA7")]
		VREvent_CameraSettingsHaveChanged = 851,
		[Token(Token = "0x4001BA8")]
		VREvent_ReprojectionSettingHasChanged = 852,
		[Token(Token = "0x4001BA9")]
		VREvent_ModelSkinSettingsHaveChanged = 853,
		[Token(Token = "0x4001BAA")]
		VREvent_EnvironmentSettingsHaveChanged = 854,
		[Token(Token = "0x4001BAB")]
		VREvent_PowerSettingsHaveChanged = 855,
		[Token(Token = "0x4001BAC")]
		VREvent_EnableHomeAppSettingsHaveChanged = 856,
		[Token(Token = "0x4001BAD")]
		VREvent_SteamVRSectionSettingChanged = 857,
		[Token(Token = "0x4001BAE")]
		VREvent_LighthouseSectionSettingChanged = 858,
		[Token(Token = "0x4001BAF")]
		VREvent_NullSectionSettingChanged = 859,
		[Token(Token = "0x4001BB0")]
		VREvent_UserInterfaceSectionSettingChanged = 860,
		[Token(Token = "0x4001BB1")]
		VREvent_NotificationsSectionSettingChanged = 861,
		[Token(Token = "0x4001BB2")]
		VREvent_KeyboardSectionSettingChanged = 862,
		[Token(Token = "0x4001BB3")]
		VREvent_PerfSectionSettingChanged = 863,
		[Token(Token = "0x4001BB4")]
		VREvent_DashboardSectionSettingChanged = 864,
		[Token(Token = "0x4001BB5")]
		VREvent_WebInterfaceSectionSettingChanged = 865,
		[Token(Token = "0x4001BB6")]
		VREvent_StatusUpdate = 900,
		[Token(Token = "0x4001BB7")]
		VREvent_WebInterface_InstallDriverCompleted = 950,
		[Token(Token = "0x4001BB8")]
		VREvent_MCImageUpdated = 1000,
		[Token(Token = "0x4001BB9")]
		VREvent_FirmwareUpdateStarted = 1100,
		[Token(Token = "0x4001BBA")]
		VREvent_FirmwareUpdateFinished = 1101,
		[Token(Token = "0x4001BBB")]
		VREvent_KeyboardClosed = 1200,
		[Token(Token = "0x4001BBC")]
		VREvent_KeyboardCharInput = 1201,
		[Token(Token = "0x4001BBD")]
		VREvent_KeyboardDone = 1202,
		[Token(Token = "0x4001BBE")]
		VREvent_ApplicationTransitionStarted = 1300,
		[Token(Token = "0x4001BBF")]
		VREvent_ApplicationTransitionAborted = 1301,
		[Token(Token = "0x4001BC0")]
		VREvent_ApplicationTransitionNewAppStarted = 1302,
		[Token(Token = "0x4001BC1")]
		VREvent_ApplicationListUpdated = 1303,
		[Token(Token = "0x4001BC2")]
		VREvent_ApplicationMimeTypeLoad = 1304,
		[Token(Token = "0x4001BC3")]
		VREvent_ApplicationTransitionNewAppLaunchComplete = 1305,
		[Token(Token = "0x4001BC4")]
		VREvent_ProcessConnected = 1306,
		[Token(Token = "0x4001BC5")]
		VREvent_ProcessDisconnected = 1307,
		[Token(Token = "0x4001BC6")]
		VREvent_Compositor_MirrorWindowShown = 1400,
		[Token(Token = "0x4001BC7")]
		VREvent_Compositor_MirrorWindowHidden = 1401,
		[Token(Token = "0x4001BC8")]
		VREvent_Compositor_ChaperoneBoundsShown = 1410,
		[Token(Token = "0x4001BC9")]
		VREvent_Compositor_ChaperoneBoundsHidden = 1411,
		[Token(Token = "0x4001BCA")]
		VREvent_TrackedCamera_StartVideoStream = 1500,
		[Token(Token = "0x4001BCB")]
		VREvent_TrackedCamera_StopVideoStream = 1501,
		[Token(Token = "0x4001BCC")]
		VREvent_TrackedCamera_PauseVideoStream = 1502,
		[Token(Token = "0x4001BCD")]
		VREvent_TrackedCamera_ResumeVideoStream = 1503,
		[Token(Token = "0x4001BCE")]
		VREvent_TrackedCamera_EditingSurface = 1550,
		[Token(Token = "0x4001BCF")]
		VREvent_PerformanceTest_EnableCapture = 1600,
		[Token(Token = "0x4001BD0")]
		VREvent_PerformanceTest_DisableCapture = 1601,
		[Token(Token = "0x4001BD1")]
		VREvent_PerformanceTest_FidelityLevel = 1602,
		[Token(Token = "0x4001BD2")]
		VREvent_MessageOverlay_Closed = 1650,
		[Token(Token = "0x4001BD3")]
		VREvent_MessageOverlayCloseRequested = 1651,
		[Token(Token = "0x4001BD4")]
		VREvent_Input_HapticVibration = 1700,
		[Token(Token = "0x4001BD5")]
		VREvent_VendorSpecific_Reserved_Start = 10000,
		[Token(Token = "0x4001BD6")]
		VREvent_VendorSpecific_Reserved_End = 19999
	}
	[Token(Token = "0x2000232")]
	public enum EDeviceActivityLevel
	{
		[Token(Token = "0x4001BD8")]
		k_EDeviceActivityLevel_Unknown = -1,
		[Token(Token = "0x4001BD9")]
		k_EDeviceActivityLevel_Idle,
		[Token(Token = "0x4001BDA")]
		k_EDeviceActivityLevel_UserInteraction,
		[Token(Token = "0x4001BDB")]
		k_EDeviceActivityLevel_UserInteraction_Timeout,
		[Token(Token = "0x4001BDC")]
		k_EDeviceActivityLevel_Standby
	}
	[Token(Token = "0x2000233")]
	public enum EVRButtonId
	{
		[Token(Token = "0x4001BDE")]
		k_EButton_System = 0,
		[Token(Token = "0x4001BDF")]
		k_EButton_ApplicationMenu = 1,
		[Token(Token = "0x4001BE0")]
		k_EButton_Grip = 2,
		[Token(Token = "0x4001BE1")]
		k_EButton_DPad_Left = 3,
		[Token(Token = "0x4001BE2")]
		k_EButton_DPad_Up = 4,
		[Token(Token = "0x4001BE3")]
		k_EButton_DPad_Right = 5,
		[Token(Token = "0x4001BE4")]
		k_EButton_DPad_Down = 6,
		[Token(Token = "0x4001BE5")]
		k_EButton_A = 7,
		[Token(Token = "0x4001BE6")]
		k_EButton_ProximitySensor = 31,
		[Token(Token = "0x4001BE7")]
		k_EButton_Axis0 = 32,
		[Token(Token = "0x4001BE8")]
		k_EButton_Axis1 = 33,
		[Token(Token = "0x4001BE9")]
		k_EButton_Axis2 = 34,
		[Token(Token = "0x4001BEA")]
		k_EButton_Axis3 = 35,
		[Token(Token = "0x4001BEB")]
		k_EButton_Axis4 = 36,
		[Token(Token = "0x4001BEC")]
		k_EButton_SteamVR_Touchpad = 32,
		[Token(Token = "0x4001BED")]
		k_EButton_SteamVR_Trigger = 33,
		[Token(Token = "0x4001BEE")]
		k_EButton_Dashboard_Back = 2,
		[Token(Token = "0x4001BEF")]
		k_EButton_Max = 64
	}
	[Token(Token = "0x2000234")]
	public enum EVRMouseButton
	{
		[Token(Token = "0x4001BF1")]
		Left = 1,
		[Token(Token = "0x4001BF2")]
		Right = 2,
		[Token(Token = "0x4001BF3")]
		Middle = 4
	}
	[Token(Token = "0x2000235")]
	public enum EDualAnalogWhich
	{
		[Token(Token = "0x4001BF5")]
		k_EDualAnalog_Left,
		[Token(Token = "0x4001BF6")]
		k_EDualAnalog_Right
	}
	[Token(Token = "0x2000236")]
	public enum EVRInputError
	{
		[Token(Token = "0x4001BF8")]
		None,
		[Token(Token = "0x4001BF9")]
		NameNotFound,
		[Token(Token = "0x4001BFA")]
		WrongType,
		[Token(Token = "0x4001BFB")]
		InvalidHandle,
		[Token(Token = "0x4001BFC")]
		InvalidParam,
		[Token(Token = "0x4001BFD")]
		NoSteam,
		[Token(Token = "0x4001BFE")]
		MaxCapacityReached,
		[Token(Token = "0x4001BFF")]
		IPCError,
		[Token(Token = "0x4001C00")]
		NoActiveActionSet,
		[Token(Token = "0x4001C01")]
		InvalidDevice
	}
	[Token(Token = "0x2000237")]
	public enum EHiddenAreaMeshType
	{
		[Token(Token = "0x4001C03")]
		k_eHiddenAreaMesh_Standard,
		[Token(Token = "0x4001C04")]
		k_eHiddenAreaMesh_Inverse,
		[Token(Token = "0x4001C05")]
		k_eHiddenAreaMesh_LineLoop,
		[Token(Token = "0x4001C06")]
		k_eHiddenAreaMesh_Max
	}
	[Token(Token = "0x2000238")]
	public enum EVRControllerAxisType
	{
		[Token(Token = "0x4001C08")]
		k_eControllerAxis_None,
		[Token(Token = "0x4001C09")]
		k_eControllerAxis_TrackPad,
		[Token(Token = "0x4001C0A")]
		k_eControllerAxis_Joystick,
		[Token(Token = "0x4001C0B")]
		k_eControllerAxis_Trigger
	}
	[Token(Token = "0x2000239")]
	public enum EVRControllerEventOutputType
	{
		[Token(Token = "0x4001C0D")]
		ControllerEventOutput_OSEvents,
		[Token(Token = "0x4001C0E")]
		ControllerEventOutput_VREvents
	}
	[Token(Token = "0x200023A")]
	public enum ECollisionBoundsStyle
	{
		[Token(Token = "0x4001C10")]
		COLLISION_BOUNDS_STYLE_BEGINNER,
		[Token(Token = "0x4001C11")]
		COLLISION_BOUNDS_STYLE_INTERMEDIATE,
		[Token(Token = "0x4001C12")]
		COLLISION_BOUNDS_STYLE_SQUARES,
		[Token(Token = "0x4001C13")]
		COLLISION_BOUNDS_STYLE_ADVANCED,
		[Token(Token = "0x4001C14")]
		COLLISION_BOUNDS_STYLE_NONE,
		[Token(Token = "0x4001C15")]
		COLLISION_BOUNDS_STYLE_COUNT
	}
	[Token(Token = "0x200023B")]
	public enum EVROverlayError
	{
		[Token(Token = "0x4001C17")]
		None = 0,
		[Token(Token = "0x4001C18")]
		UnknownOverlay = 10,
		[Token(Token = "0x4001C19")]
		InvalidHandle = 11,
		[Token(Token = "0x4001C1A")]
		PermissionDenied = 12,
		[Token(Token = "0x4001C1B")]
		OverlayLimitExceeded = 13,
		[Token(Token = "0x4001C1C")]
		WrongVisibilityType = 14,
		[Token(Token = "0x4001C1D")]
		KeyTooLong = 15,
		[Token(Token = "0x4001C1E")]
		NameTooLong = 16,
		[Token(Token = "0x4001C1F")]
		KeyInUse = 17,
		[Token(Token = "0x4001C20")]
		WrongTransformType = 18,
		[Token(Token = "0x4001C21")]
		InvalidTrackedDevice = 19,
		[Token(Token = "0x4001C22")]
		InvalidParameter = 20,
		[Token(Token = "0x4001C23")]
		ThumbnailCantBeDestroyed = 21,
		[Token(Token = "0x4001C24")]
		ArrayTooSmall = 22,
		[Token(Token = "0x4001C25")]
		RequestFailed = 23,
		[Token(Token = "0x4001C26")]
		InvalidTexture = 24,
		[Token(Token = "0x4001C27")]
		UnableToLoadFile = 25,
		[Token(Token = "0x4001C28")]
		KeyboardAlreadyInUse = 26,
		[Token(Token = "0x4001C29")]
		NoNeighbor = 27,
		[Token(Token = "0x4001C2A")]
		TooManyMaskPrimitives = 29,
		[Token(Token = "0x4001C2B")]
		BadMaskPrimitive = 30,
		[Token(Token = "0x4001C2C")]
		TextureAlreadyLocked = 31,
		[Token(Token = "0x4001C2D")]
		TextureLockCapacityReached = 32,
		[Token(Token = "0x4001C2E")]
		TextureNotLocked = 33
	}
	[Token(Token = "0x200023C")]
	public enum EVRApplicationType
	{
		[Token(Token = "0x4001C30")]
		VRApplication_Other,
		[Token(Token = "0x4001C31")]
		VRApplication_Scene,
		[Token(Token = "0x4001C32")]
		VRApplication_Overlay,
		[Token(Token = "0x4001C33")]
		VRApplication_Background,
		[Token(Token = "0x4001C34")]
		VRApplication_Utility,
		[Token(Token = "0x4001C35")]
		VRApplication_VRMonitor,
		[Token(Token = "0x4001C36")]
		VRApplication_SteamWatchdog,
		[Token(Token = "0x4001C37")]
		VRApplication_Bootstrapper,
		[Token(Token = "0x4001C38")]
		VRApplication_Max
	}
	[Token(Token = "0x200023D")]
	public enum EVRFirmwareError
	{
		[Token(Token = "0x4001C3A")]
		None,
		[Token(Token = "0x4001C3B")]
		Success,
		[Token(Token = "0x4001C3C")]
		Fail
	}
	[Token(Token = "0x200023E")]
	public enum EVRNotificationError
	{
		[Token(Token = "0x4001C3E")]
		OK = 0,
		[Token(Token = "0x4001C3F")]
		InvalidNotificationId = 100,
		[Token(Token = "0x4001C40")]
		NotificationQueueFull = 101,
		[Token(Token = "0x4001C41")]
		InvalidOverlayHandle = 102,
		[Token(Token = "0x4001C42")]
		SystemWithUserValueAlreadyExists = 103
	}
	[Token(Token = "0x200023F")]
	public enum EVRInitError
	{
		[Token(Token = "0x4001C44")]
		None = 0,
		[Token(Token = "0x4001C45")]
		Unknown = 1,
		[Token(Token = "0x4001C46")]
		Init_InstallationNotFound = 100,
		[Token(Token = "0x4001C47")]
		Init_InstallationCorrupt = 101,
		[Token(Token = "0x4001C48")]
		Init_VRClientDLLNotFound = 102,
		[Token(Token = "0x4001C49")]
		Init_FileNotFound = 103,
		[Token(Token = "0x4001C4A")]
		Init_FactoryNotFound = 104,
		[Token(Token = "0x4001C4B")]
		Init_InterfaceNotFound = 105,
		[Token(Token = "0x4001C4C")]
		Init_InvalidInterface = 106,
		[Token(Token = "0x4001C4D")]
		Init_UserConfigDirectoryInvalid = 107,
		[Token(Token = "0x4001C4E")]
		Init_HmdNotFound = 108,
		[Token(Token = "0x4001C4F")]
		Init_NotInitialized = 109,
		[Token(Token = "0x4001C50")]
		Init_PathRegistryNotFound = 110,
		[Token(Token = "0x4001C51")]
		Init_NoConfigPath = 111,
		[Token(Token = "0x4001C52")]
		Init_NoLogPath = 112,
		[Token(Token = "0x4001C53")]
		Init_PathRegistryNotWritable = 113,
		[Token(Token = "0x4001C54")]
		Init_AppInfoInitFailed = 114,
		[Token(Token = "0x4001C55")]
		Init_Retry = 115,
		[Token(Token = "0x4001C56")]
		Init_InitCanceledByUser = 116,
		[Token(Token = "0x4001C57")]
		Init_AnotherAppLaunching = 117,
		[Token(Token = "0x4001C58")]
		Init_SettingsInitFailed = 118,
		[Token(Token = "0x4001C59")]
		Init_ShuttingDown = 119,
		[Token(Token = "0x4001C5A")]
		Init_TooManyObjects = 120,
		[Token(Token = "0x4001C5B")]
		Init_NoServerForBackgroundApp = 121,
		[Token(Token = "0x4001C5C")]
		Init_NotSupportedWithCompositor = 122,
		[Token(Token = "0x4001C5D")]
		Init_NotAvailableToUtilityApps = 123,
		[Token(Token = "0x4001C5E")]
		Init_Internal = 124,
		[Token(Token = "0x4001C5F")]
		Init_HmdDriverIdIsNone = 125,
		[Token(Token = "0x4001C60")]
		Init_HmdNotFoundPresenceFailed = 126,
		[Token(Token = "0x4001C61")]
		Init_VRMonitorNotFound = 127,
		[Token(Token = "0x4001C62")]
		Init_VRMonitorStartupFailed = 128,
		[Token(Token = "0x4001C63")]
		Init_LowPowerWatchdogNotSupported = 129,
		[Token(Token = "0x4001C64")]
		Init_InvalidApplicationType = 130,
		[Token(Token = "0x4001C65")]
		Init_NotAvailableToWatchdogApps = 131,
		[Token(Token = "0x4001C66")]
		Init_WatchdogDisabledInSettings = 132,
		[Token(Token = "0x4001C67")]
		Init_VRDashboardNotFound = 133,
		[Token(Token = "0x4001C68")]
		Init_VRDashboardStartupFailed = 134,
		[Token(Token = "0x4001C69")]
		Init_VRHomeNotFound = 135,
		[Token(Token = "0x4001C6A")]
		Init_VRHomeStartupFailed = 136,
		[Token(Token = "0x4001C6B")]
		Init_RebootingBusy = 137,
		[Token(Token = "0x4001C6C")]
		Init_FirmwareUpdateBusy = 138,
		[Token(Token = "0x4001C6D")]
		Init_FirmwareRecoveryBusy = 139,
		[Token(Token = "0x4001C6E")]
		Init_USBServiceBusy = 140,
		[Token(Token = "0x4001C6F")]
		Init_VRWebHelperStartupFailed = 141,
		[Token(Token = "0x4001C70")]
		Driver_Failed = 200,
		[Token(Token = "0x4001C71")]
		Driver_Unknown = 201,
		[Token(Token = "0x4001C72")]
		Driver_HmdUnknown = 202,
		[Token(Token = "0x4001C73")]
		Driver_NotLoaded = 203,
		[Token(Token = "0x4001C74")]
		Driver_RuntimeOutOfDate = 204,
		[Token(Token = "0x4001C75")]
		Driver_HmdInUse = 205,
		[Token(Token = "0x4001C76")]
		Driver_NotCalibrated = 206,
		[Token(Token = "0x4001C77")]
		Driver_CalibrationInvalid = 207,
		[Token(Token = "0x4001C78")]
		Driver_HmdDisplayNotFound = 208,
		[Token(Token = "0x4001C79")]
		Driver_TrackedDeviceInterfaceUnknown = 209,
		[Token(Token = "0x4001C7A")]
		Driver_HmdDriverIdOutOfBounds = 211,
		[Token(Token = "0x4001C7B")]
		Driver_HmdDisplayMirrored = 212,
		[Token(Token = "0x4001C7C")]
		IPC_ServerInitFailed = 300,
		[Token(Token = "0x4001C7D")]
		IPC_ConnectFailed = 301,
		[Token(Token = "0x4001C7E")]
		IPC_SharedStateInitFailed = 302,
		[Token(Token = "0x4001C7F")]
		IPC_CompositorInitFailed = 303,
		[Token(Token = "0x4001C80")]
		IPC_MutexInitFailed = 304,
		[Token(Token = "0x4001C81")]
		IPC_Failed = 305,
		[Token(Token = "0x4001C82")]
		IPC_CompositorConnectFailed = 306,
		[Token(Token = "0x4001C83")]
		IPC_CompositorInvalidConnectResponse = 307,
		[Token(Token = "0x4001C84")]
		IPC_ConnectFailedAfterMultipleAttempts = 308,
		[Token(Token = "0x4001C85")]
		Compositor_Failed = 400,
		[Token(Token = "0x4001C86")]
		Compositor_D3D11HardwareRequired = 401,
		[Token(Token = "0x4001C87")]
		Compositor_FirmwareRequiresUpdate = 402,
		[Token(Token = "0x4001C88")]
		Compositor_OverlayInitFailed = 403,
		[Token(Token = "0x4001C89")]
		Compositor_ScreenshotsInitFailed = 404,
		[Token(Token = "0x4001C8A")]
		Compositor_UnableToCreateDevice = 405,
		[Token(Token = "0x4001C8B")]
		VendorSpecific_UnableToConnectToOculusRuntime = 1000,
		[Token(Token = "0x4001C8C")]
		VendorSpecific_WindowsNotInDevMode = 1001,
		[Token(Token = "0x4001C8D")]
		VendorSpecific_HmdFound_CantOpenDevice = 1101,
		[Token(Token = "0x4001C8E")]
		VendorSpecific_HmdFound_UnableToRequestConfigStart = 1102,
		[Token(Token = "0x4001C8F")]
		VendorSpecific_HmdFound_NoStoredConfig = 1103,
		[Token(Token = "0x4001C90")]
		VendorSpecific_HmdFound_ConfigTooBig = 1104,
		[Token(Token = "0x4001C91")]
		VendorSpecific_HmdFound_ConfigTooSmall = 1105,
		[Token(Token = "0x4001C92")]
		VendorSpecific_HmdFound_UnableToInitZLib = 1106,
		[Token(Token = "0x4001C93")]
		VendorSpecific_HmdFound_CantReadFirmwareVersion = 1107,
		[Token(Token = "0x4001C94")]
		VendorSpecific_HmdFound_UnableToSendUserDataStart = 1108,
		[Token(Token = "0x4001C95")]
		VendorSpecific_HmdFound_UnableToGetUserDataStart = 1109,
		[Token(Token = "0x4001C96")]
		VendorSpecific_HmdFound_UnableToGetUserDataNext = 1110,
		[Token(Token = "0x4001C97")]
		VendorSpecific_HmdFound_UserDataAddressRange = 1111,
		[Token(Token = "0x4001C98")]
		VendorSpecific_HmdFound_UserDataError = 1112,
		[Token(Token = "0x4001C99")]
		VendorSpecific_HmdFound_ConfigFailedSanityCheck = 1113,
		[Token(Token = "0x4001C9A")]
		Steam_SteamInstallationNotFound = 2000
	}
	[Token(Token = "0x2000240")]
	public enum EVRScreenshotType
	{
		[Token(Token = "0x4001C9C")]
		None,
		[Token(Token = "0x4001C9D")]
		Mono,
		[Token(Token = "0x4001C9E")]
		Stereo,
		[Token(Token = "0x4001C9F")]
		Cubemap,
		[Token(Token = "0x4001CA0")]
		MonoPanorama,
		[Token(Token = "0x4001CA1")]
		StereoPanorama
	}
	[Token(Token = "0x2000241")]
	public enum EVRScreenshotPropertyFilenames
	{
		[Token(Token = "0x4001CA3")]
		Preview,
		[Token(Token = "0x4001CA4")]
		VR
	}
	[Token(Token = "0x2000242")]
	public enum EVRTrackedCameraError
	{
		[Token(Token = "0x4001CA6")]
		None = 0,
		[Token(Token = "0x4001CA7")]
		OperationFailed = 100,
		[Token(Token = "0x4001CA8")]
		InvalidHandle = 101,
		[Token(Token = "0x4001CA9")]
		InvalidFrameHeaderVersion = 102,
		[Token(Token = "0x4001CAA")]
		OutOfHandles = 103,
		[Token(Token = "0x4001CAB")]
		IPCFailure = 104,
		[Token(Token = "0x4001CAC")]
		NotSupportedForThisDevice = 105,
		[Token(Token = "0x4001CAD")]
		SharedMemoryFailure = 106,
		[Token(Token = "0x4001CAE")]
		FrameBufferingFailure = 107,
		[Token(Token = "0x4001CAF")]
		StreamSetupFailure = 108,
		[Token(Token = "0x4001CB0")]
		InvalidGLTextureId = 109,
		[Token(Token = "0x4001CB1")]
		InvalidSharedTextureHandle = 110,
		[Token(Token = "0x4001CB2")]
		FailedToGetGLTextureId = 111,
		[Token(Token = "0x4001CB3")]
		SharedTextureFailure = 112,
		[Token(Token = "0x4001CB4")]
		NoFrameAvailable = 113,
		[Token(Token = "0x4001CB5")]
		InvalidArgument = 114,
		[Token(Token = "0x4001CB6")]
		InvalidFrameBufferSize = 115
	}
	[Token(Token = "0x2000243")]
	public enum EVRTrackedCameraFrameType
	{
		[Token(Token = "0x4001CB8")]
		Distorted,
		[Token(Token = "0x4001CB9")]
		Undistorted,
		[Token(Token = "0x4001CBA")]
		MaximumUndistorted,
		[Token(Token = "0x4001CBB")]
		MAX_CAMERA_FRAME_TYPES
	}
	[Token(Token = "0x2000244")]
	public enum EVRApplicationError
	{
		[Token(Token = "0x4001CBD")]
		None = 0,
		[Token(Token = "0x4001CBE")]
		AppKeyAlreadyExists = 100,
		[Token(Token = "0x4001CBF")]
		NoManifest = 101,
		[Token(Token = "0x4001CC0")]
		NoApplication = 102,
		[Token(Token = "0x4001CC1")]
		InvalidIndex = 103,
		[Token(Token = "0x4001CC2")]
		UnknownApplication = 104,
		[Token(Token = "0x4001CC3")]
		IPCFailed = 105,
		[Token(Token = "0x4001CC4")]
		ApplicationAlreadyRunning = 106,
		[Token(Token = "0x4001CC5")]
		InvalidManifest = 107,
		[Token(Token = "0x4001CC6")]
		InvalidApplication = 108,
		[Token(Token = "0x4001CC7")]
		LaunchFailed = 109,
		[Token(Token = "0x4001CC8")]
		ApplicationAlreadyStarting = 110,
		[Token(Token = "0x4001CC9")]
		LaunchInProgress = 111,
		[Token(Token = "0x4001CCA")]
		OldApplicationQuitting = 112,
		[Token(Token = "0x4001CCB")]
		TransitionAborted = 113,
		[Token(Token = "0x4001CCC")]
		IsTemplate = 114,
		[Token(Token = "0x4001CCD")]
		SteamVRIsExiting = 115,
		[Token(Token = "0x4001CCE")]
		BufferTooSmall = 200,
		[Token(Token = "0x4001CCF")]
		PropertyNotSet = 201,
		[Token(Token = "0x4001CD0")]
		UnknownProperty = 202,
		[Token(Token = "0x4001CD1")]
		InvalidParameter = 203
	}
	[Token(Token = "0x2000245")]
	public enum EVRApplicationProperty
	{
		[Token(Token = "0x4001CD3")]
		Name_String = 0,
		[Token(Token = "0x4001CD4")]
		LaunchType_String = 11,
		[Token(Token = "0x4001CD5")]
		WorkingDirectory_String = 12,
		[Token(Token = "0x4001CD6")]
		BinaryPath_String = 13,
		[Token(Token = "0x4001CD7")]
		Arguments_String = 14,
		[Token(Token = "0x4001CD8")]
		URL_String = 15,
		[Token(Token = "0x4001CD9")]
		Description_String = 50,
		[Token(Token = "0x4001CDA")]
		NewsURL_String = 51,
		[Token(Token = "0x4001CDB")]
		ImagePath_String = 52,
		[Token(Token = "0x4001CDC")]
		Source_String = 53,
		[Token(Token = "0x4001CDD")]
		ActionManifestURL_String = 54,
		[Token(Token = "0x4001CDE")]
		IsDashboardOverlay_Bool = 60,
		[Token(Token = "0x4001CDF")]
		IsTemplate_Bool = 61,
		[Token(Token = "0x4001CE0")]
		IsInstanced_Bool = 62,
		[Token(Token = "0x4001CE1")]
		IsInternal_Bool = 63,
		[Token(Token = "0x4001CE2")]
		WantsCompositorPauseInStandby_Bool = 64,
		[Token(Token = "0x4001CE3")]
		LastLaunchTime_Uint64 = 70
	}
	[Token(Token = "0x2000246")]
	public enum EVRApplicationTransitionState
	{
		[Token(Token = "0x4001CE5")]
		VRApplicationTransition_None = 0,
		[Token(Token = "0x4001CE6")]
		VRApplicationTransition_OldAppQuitSent = 10,
		[Token(Token = "0x4001CE7")]
		VRApplicationTransition_WaitingForExternalLaunch = 11,
		[Token(Token = "0x4001CE8")]
		VRApplicationTransition_NewAppLaunched = 20
	}
	[Token(Token = "0x2000247")]
	public enum ChaperoneCalibrationState
	{
		[Token(Token = "0x4001CEA")]
		OK = 1,
		[Token(Token = "0x4001CEB")]
		Warning = 100,
		[Token(Token = "0x4001CEC")]
		Warning_BaseStationMayHaveMoved = 101,
		[Token(Token = "0x4001CED")]
		Warning_BaseStationRemoved = 102,
		[Token(Token = "0x4001CEE")]
		Warning_SeatedBoundsInvalid = 103,
		[Token(Token = "0x4001CEF")]
		Error = 200,
		[Token(Token = "0x4001CF0")]
		Error_BaseStationUninitialized = 201,
		[Token(Token = "0x4001CF1")]
		Error_BaseStationConflict = 202,
		[Token(Token = "0x4001CF2")]
		Error_PlayAreaInvalid = 203,
		[Token(Token = "0x4001CF3")]
		Error_CollisionBoundsInvalid = 204
	}
	[Token(Token = "0x2000248")]
	public enum EChaperoneConfigFile
	{
		[Token(Token = "0x4001CF5")]
		Live = 1,
		[Token(Token = "0x4001CF6")]
		Temp
	}
	[Token(Token = "0x2000249")]
	public enum EChaperoneImportFlags
	{
		[Token(Token = "0x4001CF8")]
		EChaperoneImport_BoundsOnly = 1
	}
	[Token(Token = "0x200024A")]
	public enum EVRCompositorError
	{
		[Token(Token = "0x4001CFA")]
		None = 0,
		[Token(Token = "0x4001CFB")]
		RequestFailed = 1,
		[Token(Token = "0x4001CFC")]
		IncompatibleVersion = 100,
		[Token(Token = "0x4001CFD")]
		DoNotHaveFocus = 101,
		[Token(Token = "0x4001CFE")]
		InvalidTexture = 102,
		[Token(Token = "0x4001CFF")]
		IsNotSceneApplication = 103,
		[Token(Token = "0x4001D00")]
		TextureIsOnWrongDevice = 104,
		[Token(Token = "0x4001D01")]
		TextureUsesUnsupportedFormat = 105,
		[Token(Token = "0x4001D02")]
		SharedTexturesNotSupported = 106,
		[Token(Token = "0x4001D03")]
		IndexOutOfRange = 107,
		[Token(Token = "0x4001D04")]
		AlreadySubmitted = 108,
		[Token(Token = "0x4001D05")]
		InvalidBounds = 109
	}
	[Token(Token = "0x200024B")]
	public enum EVRCompositorTimingMode
	{
		[Token(Token = "0x4001D07")]
		Implicit,
		[Token(Token = "0x4001D08")]
		Explicit_RuntimePerformsPostPresentHandoff,
		[Token(Token = "0x4001D09")]
		Explicit_ApplicationPerformsPostPresentHandoff
	}
	[Token(Token = "0x200024C")]
	public enum VROverlayInputMethod
	{
		[Token(Token = "0x4001D0B")]
		None,
		[Token(Token = "0x4001D0C")]
		Mouse,
		[Token(Token = "0x4001D0D")]
		DualAnalog
	}
	[Token(Token = "0x200024D")]
	public enum VROverlayTransformType
	{
		[Token(Token = "0x4001D0F")]
		VROverlayTransform_Absolute,
		[Token(Token = "0x4001D10")]
		VROverlayTransform_TrackedDeviceRelative,
		[Token(Token = "0x4001D11")]
		VROverlayTransform_SystemOverlay,
		[Token(Token = "0x4001D12")]
		VROverlayTransform_TrackedComponent
	}
	[Token(Token = "0x200024E")]
	public enum VROverlayFlags
	{
		[Token(Token = "0x4001D14")]
		None,
		[Token(Token = "0x4001D15")]
		Curved,
		[Token(Token = "0x4001D16")]
		RGSS4X,
		[Token(Token = "0x4001D17")]
		NoDashboardTab,
		[Token(Token = "0x4001D18")]
		AcceptsGamepadEvents,
		[Token(Token = "0x4001D19")]
		ShowGamepadFocus,
		[Token(Token = "0x4001D1A")]
		SendVRScrollEvents,
		[Token(Token = "0x4001D1B")]
		SendVRTouchpadEvents,
		[Token(Token = "0x4001D1C")]
		ShowTouchPadScrollWheel,
		[Token(Token = "0x4001D1D")]
		TransferOwnershipToInternalProcess,
		[Token(Token = "0x4001D1E")]
		SideBySide_Parallel,
		[Token(Token = "0x4001D1F")]
		SideBySide_Crossed,
		[Token(Token = "0x4001D20")]
		Panorama,
		[Token(Token = "0x4001D21")]
		StereoPanorama,
		[Token(Token = "0x4001D22")]
		SortWithNonSceneOverlays,
		[Token(Token = "0x4001D23")]
		VisibleInDashboard
	}
	[Token(Token = "0x200024F")]
	public enum VRMessageOverlayResponse
	{
		[Token(Token = "0x4001D25")]
		ButtonPress_0,
		[Token(Token = "0x4001D26")]
		ButtonPress_1,
		[Token(Token = "0x4001D27")]
		ButtonPress_2,
		[Token(Token = "0x4001D28")]
		ButtonPress_3,
		[Token(Token = "0x4001D29")]
		CouldntFindSystemOverlay,
		[Token(Token = "0x4001D2A")]
		CouldntFindOrCreateClientOverlay,
		[Token(Token = "0x4001D2B")]
		ApplicationQuit
	}
	[Token(Token = "0x2000250")]
	public enum EGamepadTextInputMode
	{
		[Token(Token = "0x4001D2D")]
		k_EGamepadTextInputModeNormal,
		[Token(Token = "0x4001D2E")]
		k_EGamepadTextInputModePassword,
		[Token(Token = "0x4001D2F")]
		k_EGamepadTextInputModeSubmit
	}
	[Token(Token = "0x2000251")]
	public enum EGamepadTextInputLineMode
	{
		[Token(Token = "0x4001D31")]
		k_EGamepadTextInputLineModeSingleLine,
		[Token(Token = "0x4001D32")]
		k_EGamepadTextInputLineModeMultipleLines
	}
	[Token(Token = "0x2000252")]
	public enum EOverlayDirection
	{
		[Token(Token = "0x4001D34")]
		Up,
		[Token(Token = "0x4001D35")]
		Down,
		[Token(Token = "0x4001D36")]
		Left,
		[Token(Token = "0x4001D37")]
		Right,
		[Token(Token = "0x4001D38")]
		Count
	}
	[Token(Token = "0x2000253")]
	public enum EVROverlayIntersectionMaskPrimitiveType
	{
		[Token(Token = "0x4001D3A")]
		OverlayIntersectionPrimitiveType_Rectangle,
		[Token(Token = "0x4001D3B")]
		OverlayIntersectionPrimitiveType_Circle
	}
	[Token(Token = "0x2000254")]
	public enum EVRRenderModelError
	{
		[Token(Token = "0x4001D3D")]
		None = 0,
		[Token(Token = "0x4001D3E")]
		Loading = 100,
		[Token(Token = "0x4001D3F")]
		NotSupported = 200,
		[Token(Token = "0x4001D40")]
		InvalidArg = 300,
		[Token(Token = "0x4001D41")]
		InvalidModel = 301,
		[Token(Token = "0x4001D42")]
		NoShapes = 302,
		[Token(Token = "0x4001D43")]
		MultipleShapes = 303,
		[Token(Token = "0x4001D44")]
		TooManyVertices = 304,
		[Token(Token = "0x4001D45")]
		MultipleTextures = 305,
		[Token(Token = "0x4001D46")]
		BufferTooSmall = 306,
		[Token(Token = "0x4001D47")]
		NotEnoughNormals = 307,
		[Token(Token = "0x4001D48")]
		NotEnoughTexCoords = 308,
		[Token(Token = "0x4001D49")]
		InvalidTexture = 400
	}
	[Token(Token = "0x2000255")]
	public enum EVRComponentProperty
	{
		[Token(Token = "0x4001D4B")]
		IsStatic = 1,
		[Token(Token = "0x4001D4C")]
		IsVisible = 2,
		[Token(Token = "0x4001D4D")]
		IsTouched = 4,
		[Token(Token = "0x4001D4E")]
		IsPressed = 8,
		[Token(Token = "0x4001D4F")]
		IsScrolled = 0x10
	}
	[Token(Token = "0x2000256")]
	public enum EVRNotificationType
	{
		[Token(Token = "0x4001D51")]
		Transient,
		[Token(Token = "0x4001D52")]
		Persistent,
		[Token(Token = "0x4001D53")]
		Transient_SystemWithUserValue
	}
	[Token(Token = "0x2000257")]
	public enum EVRNotificationStyle
	{
		[Token(Token = "0x4001D55")]
		None = 0,
		[Token(Token = "0x4001D56")]
		Application = 100,
		[Token(Token = "0x4001D57")]
		Contact_Disabled = 200,
		[Token(Token = "0x4001D58")]
		Contact_Enabled = 201,
		[Token(Token = "0x4001D59")]
		Contact_Active = 202
	}
	[Token(Token = "0x2000258")]
	public enum EVRSettingsError
	{
		[Token(Token = "0x4001D5B")]
		None,
		[Token(Token = "0x4001D5C")]
		IPCFailed,
		[Token(Token = "0x4001D5D")]
		WriteFailed,
		[Token(Token = "0x4001D5E")]
		ReadFailed,
		[Token(Token = "0x4001D5F")]
		JsonParseFailed,
		[Token(Token = "0x4001D60")]
		UnsetSettingHasNoDefault
	}
	[Token(Token = "0x2000259")]
	public enum EVRScreenshotError
	{
		[Token(Token = "0x4001D62")]
		None = 0,
		[Token(Token = "0x4001D63")]
		RequestFailed = 1,
		[Token(Token = "0x4001D64")]
		IncompatibleVersion = 100,
		[Token(Token = "0x4001D65")]
		NotFound = 101,
		[Token(Token = "0x4001D66")]
		BufferTooSmall = 102,
		[Token(Token = "0x4001D67")]
		ScreenshotAlreadyInProgress = 108
	}
	[StructLayout(2)]
	[Token(Token = "0x200025A")]
	public struct VREvent_Data_t
	{
		[Token(Token = "0x4001D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Reserved_t reserved;

		[Token(Token = "0x4001D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Controller_t controller;

		[Token(Token = "0x4001D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Mouse_t mouse;

		[Token(Token = "0x4001D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Scroll_t scroll;

		[Token(Token = "0x4001D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Process_t process;

		[Token(Token = "0x4001D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Notification_t notification;

		[Token(Token = "0x4001D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Overlay_t overlay;

		[Token(Token = "0x4001D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Status_t status;

		[Token(Token = "0x4001D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Ipd_t ipd;

		[Token(Token = "0x4001D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Chaperone_t chaperone;

		[Token(Token = "0x4001D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_PerformanceTest_t performanceTest;

		[Token(Token = "0x4001D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_TouchPadMove_t touchPadMove;

		[Token(Token = "0x4001D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_SeatedZeroPoseReset_t seatedZeroPoseReset;

		[Token(Token = "0x4001D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Screenshot_t screenshot;

		[Token(Token = "0x4001D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_ScreenshotProgress_t screenshotProgress;

		[Token(Token = "0x4001D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_ApplicationLaunch_t applicationLaunch;

		[Token(Token = "0x4001D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_EditingCameraSurface_t cameraSurface;

		[Token(Token = "0x4001D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_MessageOverlay_t messageOverlay;

		[Token(Token = "0x4001D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Property_t property;

		[Token(Token = "0x4001D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_DualAnalog_t dualAnalog;

		[Token(Token = "0x4001D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_HapticVibration_t hapticVibration;

		[Token(Token = "0x4001D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Keyboard_t keyboard;
	}
	[StructLayout(2)]
	[Token(Token = "0x200025B")]
	public struct VROverlayIntersectionMaskPrimitive_Data_t
	{
		[Token(Token = "0x4001D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntersectionMaskRectangle_t m_Rectangle;

		[Token(Token = "0x4001D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntersectionMaskCircle_t m_Circle;
	}
	[Token(Token = "0x200025C")]
	public struct HmdMatrix34_t
	{
		[Token(Token = "0x4001D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m0;

		[Token(Token = "0x4001D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m1;

		[Token(Token = "0x4001D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m2;

		[Token(Token = "0x4001D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m3;

		[Token(Token = "0x4001D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m4;

		[Token(Token = "0x4001D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m5;

		[Token(Token = "0x4001D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m6;

		[Token(Token = "0x4001D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m7;

		[Token(Token = "0x4001D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m8;

		[Token(Token = "0x4001D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m9;

		[Token(Token = "0x4001D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m10;

		[Token(Token = "0x4001D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m11;
	}
	[Token(Token = "0x200025D")]
	public struct HmdMatrix44_t
	{
		[Token(Token = "0x4001D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m0;

		[Token(Token = "0x4001D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m1;

		[Token(Token = "0x4001D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m2;

		[Token(Token = "0x4001D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m3;

		[Token(Token = "0x4001D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m4;

		[Token(Token = "0x4001D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m5;

		[Token(Token = "0x4001D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m6;

		[Token(Token = "0x4001D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m7;

		[Token(Token = "0x4001D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m8;

		[Token(Token = "0x4001D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m9;

		[Token(Token = "0x4001D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m10;

		[Token(Token = "0x4001D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m11;

		[Token(Token = "0x4001D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m12;

		[Token(Token = "0x4001D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m13;

		[Token(Token = "0x4001D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m14;

		[Token(Token = "0x4001D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m15;
	}
	[Token(Token = "0x200025E")]
	public struct HmdVector3_t
	{
		[Token(Token = "0x4001D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float v0;

		[Token(Token = "0x4001D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float v1;

		[Token(Token = "0x4001D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float v2;
	}
	[Token(Token = "0x200025F")]
	public struct HmdVector4_t
	{
		[Token(Token = "0x4001D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float v0;

		[Token(Token = "0x4001DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float v1;

		[Token(Token = "0x4001DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float v2;

		[Token(Token = "0x4001DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float v3;
	}
	[Token(Token = "0x2000260")]
	public struct HmdVector3d_t
	{
		[Token(Token = "0x4001DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public double v0;

		[Token(Token = "0x4001DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public double v1;

		[Token(Token = "0x4001DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public double v2;
	}
	[Token(Token = "0x2000261")]
	public struct HmdVector2_t
	{
		[Token(Token = "0x4001DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float v0;

		[Token(Token = "0x4001DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float v1;
	}
	[Token(Token = "0x2000262")]
	public struct HmdQuaternion_t
	{
		[Token(Token = "0x4001DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public double w;

		[Token(Token = "0x4001DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public double x;

		[Token(Token = "0x4001DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public double y;

		[Token(Token = "0x4001DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public double z;
	}
	[Token(Token = "0x2000263")]
	public struct HmdColor_t
	{
		[Token(Token = "0x4001DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float r;

		[Token(Token = "0x4001DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float g;

		[Token(Token = "0x4001DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float b;

		[Token(Token = "0x4001DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float a;
	}
	[Token(Token = "0x2000264")]
	public struct HmdQuad_t
	{
		[Token(Token = "0x4001DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vCorners0;

		[Token(Token = "0x4001DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vCorners1;

		[Token(Token = "0x4001DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HmdVector3_t vCorners2;

		[Token(Token = "0x4001DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public HmdVector3_t vCorners3;
	}
	[Token(Token = "0x2000265")]
	public struct HmdRect2_t
	{
		[Token(Token = "0x4001DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector2_t vTopLeft;

		[Token(Token = "0x4001DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public HmdVector2_t vBottomRight;
	}
	[Token(Token = "0x2000266")]
	public struct DistortionCoordinates_t
	{
		[Token(Token = "0x4001DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float rfRed0;

		[Token(Token = "0x4001DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float rfRed1;

		[Token(Token = "0x4001DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float rfGreen0;

		[Token(Token = "0x4001DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float rfGreen1;

		[Token(Token = "0x4001DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float rfBlue0;

		[Token(Token = "0x4001DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float rfBlue1;
	}
	[Token(Token = "0x2000267")]
	public struct Texture_t
	{
		[Token(Token = "0x4001DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr handle;

		[Token(Token = "0x4001DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ETextureType eType;

		[Token(Token = "0x4001DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public EColorSpace eColorSpace;
	}
	[Token(Token = "0x2000268")]
	public struct TrackedDevicePose_t
	{
		[Token(Token = "0x4001DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdMatrix34_t mDeviceToAbsoluteTracking;

		[Token(Token = "0x4001DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HmdVector3_t vVelocity;

		[Token(Token = "0x4001DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public HmdVector3_t vAngularVelocity;

		[Token(Token = "0x4001DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ETrackingResult eTrackingResult;

		[Token(Token = "0x4001DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool bPoseIsValid;

		[Token(Token = "0x4001DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public bool bDeviceIsConnected;
	}
	[Token(Token = "0x2000269")]
	public struct VRTextureBounds_t
	{
		[Token(Token = "0x4001DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float uMin;

		[Token(Token = "0x4001DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float vMin;

		[Token(Token = "0x4001DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float uMax;

		[Token(Token = "0x4001DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float vMax;
	}
	[Token(Token = "0x200026A")]
	public struct VRTextureWithPose_t
	{
		[Token(Token = "0x4001DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdMatrix34_t mDeviceToAbsoluteTracking;
	}
	[Token(Token = "0x200026B")]
	public struct VRTextureDepthInfo_t
	{
		[Token(Token = "0x4001DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr handle;

		[Token(Token = "0x4001DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public HmdMatrix44_t mProjection;

		[Token(Token = "0x4001DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public HmdVector2_t vRange;
	}
	[Token(Token = "0x200026C")]
	public struct VRTextureWithDepth_t
	{
		[Token(Token = "0x4001DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRTextureDepthInfo_t depth;
	}
	[Token(Token = "0x200026D")]
	public struct VRTextureWithPoseAndDepth_t
	{
		[Token(Token = "0x4001DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRTextureDepthInfo_t depth;
	}
	[Token(Token = "0x200026E")]
	public struct VRVulkanTextureData_t
	{
		[Token(Token = "0x4001DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong m_nImage;

		[Token(Token = "0x4001DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr m_pDevice;

		[Token(Token = "0x4001DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr m_pPhysicalDevice;

		[Token(Token = "0x4001DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IntPtr m_pInstance;

		[Token(Token = "0x4001DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntPtr m_pQueue;

		[Token(Token = "0x4001DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public uint m_nQueueFamilyIndex;

		[Token(Token = "0x4001DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public uint m_nWidth;

		[Token(Token = "0x4001DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public uint m_nHeight;

		[Token(Token = "0x4001DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public uint m_nFormat;

		[Token(Token = "0x4001DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public uint m_nSampleCount;
	}
	[Token(Token = "0x200026F")]
	public struct D3D12TextureData_t
	{
		[Token(Token = "0x4001DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr m_pResource;

		[Token(Token = "0x4001DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr m_pCommandQueue;

		[Token(Token = "0x4001DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nNodeMask;
	}
	[Token(Token = "0x2000270")]
	public struct VREvent_Controller_t
	{
		[Token(Token = "0x4001DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint button;
	}
	[Token(Token = "0x2000271")]
	public struct VREvent_Mouse_t
	{
		[Token(Token = "0x4001DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4001DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4001DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint button;
	}
	[Token(Token = "0x2000272")]
	public struct VREvent_Scroll_t
	{
		[Token(Token = "0x4001DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float xdelta;

		[Token(Token = "0x4001DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float ydelta;

		[Token(Token = "0x4001DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint repeatCount;
	}
	[Token(Token = "0x2000273")]
	public struct VREvent_TouchPadMove_t
	{
		[Token(Token = "0x4001DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bFingerDown;

		[Token(Token = "0x4001DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float flSecondsFingerDown;

		[Token(Token = "0x4001DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float fValueXFirst;

		[Token(Token = "0x4001DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float fValueYFirst;

		[Token(Token = "0x4001DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float fValueXRaw;

		[Token(Token = "0x4001DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float fValueYRaw;
	}
	[Token(Token = "0x2000274")]
	public struct VREvent_Notification_t
	{
		[Token(Token = "0x4001DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong ulUserValue;

		[Token(Token = "0x4001DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint notificationId;
	}
	[Token(Token = "0x2000275")]
	public struct VREvent_Process_t
	{
		[Token(Token = "0x4001DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint pid;

		[Token(Token = "0x4001DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint oldPid;

		[Token(Token = "0x4001DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool bForced;
	}
	[Token(Token = "0x2000276")]
	public struct VREvent_Overlay_t
	{
		[Token(Token = "0x4001DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong overlayHandle;
	}
	[Token(Token = "0x2000277")]
	public struct VREvent_Status_t
	{
		[Token(Token = "0x4001DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint statusState;
	}
	[Token(Token = "0x2000278")]
	public struct VREvent_Keyboard_t
	{
		[Token(Token = "0x4001DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public byte cNewInput0;

		[Token(Token = "0x4001DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public byte cNewInput1;

		[Token(Token = "0x4001DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public byte cNewInput2;

		[Token(Token = "0x4001DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public byte cNewInput3;

		[Token(Token = "0x4001DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public byte cNewInput4;

		[Token(Token = "0x4001DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public byte cNewInput5;

		[Token(Token = "0x4001DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public byte cNewInput6;

		[Token(Token = "0x4001DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
		public byte cNewInput7;

		[Token(Token = "0x4001DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong uUserValue;
	}
	[Token(Token = "0x2000279")]
	public struct VREvent_Ipd_t
	{
		[Token(Token = "0x4001DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float ipdMeters;
	}
	[Token(Token = "0x200027A")]
	public struct VREvent_Chaperone_t
	{
		[Token(Token = "0x4001DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong m_nPreviousUniverse;

		[Token(Token = "0x4001DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong m_nCurrentUniverse;
	}
	[Token(Token = "0x200027B")]
	public struct VREvent_Reserved_t
	{
		[Token(Token = "0x4001DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong reserved0;

		[Token(Token = "0x4001DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong reserved1;

		[Token(Token = "0x4001DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ulong reserved2;

		[Token(Token = "0x4001DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ulong reserved3;
	}
	[Token(Token = "0x200027C")]
	public struct VREvent_PerformanceTest_t
	{
		[Token(Token = "0x4001E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nFidelityLevel;
	}
	[Token(Token = "0x200027D")]
	public struct VREvent_SeatedZeroPoseReset_t
	{
		[Token(Token = "0x4001E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bResetBySystemMenu;
	}
	[Token(Token = "0x200027E")]
	public struct VREvent_Screenshot_t
	{
		[Token(Token = "0x4001E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint handle;

		[Token(Token = "0x4001E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint type;
	}
	[Token(Token = "0x200027F")]
	public struct VREvent_ScreenshotProgress_t
	{
		[Token(Token = "0x4001E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float progress;
	}
	[Token(Token = "0x2000280")]
	public struct VREvent_ApplicationLaunch_t
	{
		[Token(Token = "0x4001E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint pid;

		[Token(Token = "0x4001E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint unArgsHandle;
	}
	[Token(Token = "0x2000281")]
	public struct VREvent_EditingCameraSurface_t
	{
		[Token(Token = "0x4001E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong overlayHandle;

		[Token(Token = "0x4001E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint nVisualMode;
	}
	[Token(Token = "0x2000282")]
	public struct VREvent_MessageOverlay_t
	{
		[Token(Token = "0x4001E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint unVRMessageOverlayResponse;
	}
	[Token(Token = "0x2000283")]
	public struct VREvent_Property_t
	{
		[Token(Token = "0x4001E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong container;

		[Token(Token = "0x4001E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ETrackedDeviceProperty prop;
	}
	[Token(Token = "0x2000284")]
	public struct VREvent_DualAnalog_t
	{
		[Token(Token = "0x4001E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4001E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4001E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float transformedX;

		[Token(Token = "0x4001E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float transformedY;

		[Token(Token = "0x4001E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EDualAnalogWhich which;
	}
	[Token(Token = "0x2000285")]
	public struct VREvent_HapticVibration_t
	{
		[Token(Token = "0x4001E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong containerHandle;

		[Token(Token = "0x4001E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong componentHandle;

		[Token(Token = "0x4001E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float fDurationSeconds;

		[Token(Token = "0x4001E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float fFrequency;

		[Token(Token = "0x4001E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float fAmplitude;
	}
	[Token(Token = "0x2000286")]
	public struct VREvent_t
	{
		[Token(Token = "0x4001E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint eventType;

		[Token(Token = "0x4001E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint trackedDeviceIndex;

		[Token(Token = "0x4001E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float eventAgeSeconds;

		[Token(Token = "0x4001E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public VREvent_Data_t data;
	}
	[Token(Token = "0x2000287")]
	public struct VREvent_t_Packed
	{
		[Token(Token = "0x4001E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint eventType;

		[Token(Token = "0x4001E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint trackedDeviceIndex;

		[Token(Token = "0x4001E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float eventAgeSeconds;

		[Token(Token = "0x4001E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public VREvent_Data_t data;

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0x888B80", Offset = "0x888B80", VA = "0x888B80")]
		public VREvent_t_Packed(VREvent_t unpacked)
		{
		}

		[Token(Token = "0x60013C6")]
		[Address(RVA = "0x888BD4", Offset = "0x888BD4", VA = "0x888BD4")]
		public void Unpack(ref VREvent_t unpacked)
		{
		}
	}
	[Token(Token = "0x2000288")]
	public struct HiddenAreaMesh_t
	{
		[Token(Token = "0x4001E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr pVertexData;

		[Token(Token = "0x4001E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint unTriangleCount;
	}
	[Token(Token = "0x2000289")]
	public struct VRControllerAxis_t
	{
		[Token(Token = "0x4001E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4001E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;
	}
	[Token(Token = "0x200028A")]
	public struct VRControllerState_t
	{
		[Token(Token = "0x4001E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint unPacketNum;

		[Token(Token = "0x4001E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong ulButtonPressed;

		[Token(Token = "0x4001E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ulong ulButtonTouched;

		[Token(Token = "0x4001E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VRControllerAxis_t rAxis0;

		[Token(Token = "0x4001E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRControllerAxis_t rAxis1;

		[Token(Token = "0x4001E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VRControllerAxis_t rAxis2;

		[Token(Token = "0x4001E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public VRControllerAxis_t rAxis3;

		[Token(Token = "0x4001E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public VRControllerAxis_t rAxis4;
	}
	[Token(Token = "0x200028B")]
	public struct VRControllerState_t_Packed
	{
		[Token(Token = "0x4001E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint unPacketNum;

		[Token(Token = "0x4001E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ulong ulButtonPressed;

		[Token(Token = "0x4001E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public ulong ulButtonTouched;

		[Token(Token = "0x4001E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public VRControllerAxis_t rAxis0;

		[Token(Token = "0x4001E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public VRControllerAxis_t rAxis1;

		[Token(Token = "0x4001E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public VRControllerAxis_t rAxis2;

		[Token(Token = "0x4001E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public VRControllerAxis_t rAxis3;

		[Token(Token = "0x4001E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public VRControllerAxis_t rAxis4;

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0x888B38", Offset = "0x888B38", VA = "0x888B38")]
		public VRControllerState_t_Packed(VRControllerState_t unpacked)
		{
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0x888B78", Offset = "0x888B78", VA = "0x888B78")]
		public void Unpack(ref VRControllerState_t unpacked)
		{
		}
	}
	[Token(Token = "0x200028C")]
	public struct Compositor_OverlaySettings
	{
		[Token(Token = "0x4001E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint size;

		[Token(Token = "0x4001E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool curved;

		[Token(Token = "0x4001E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public bool antialias;

		[Token(Token = "0x4001E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float scale;

		[Token(Token = "0x4001E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float distance;

		[Token(Token = "0x4001E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float alpha;

		[Token(Token = "0x4001E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float uOffset;

		[Token(Token = "0x4001E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float vOffset;

		[Token(Token = "0x4001E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float uScale;

		[Token(Token = "0x4001E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float vScale;

		[Token(Token = "0x4001E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float gridDivs;

		[Token(Token = "0x4001E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float gridWidth;

		[Token(Token = "0x4001E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float gridScale;

		[Token(Token = "0x4001E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HmdMatrix44_t transform;
	}
	[Token(Token = "0x200028D")]
	public struct CameraVideoStreamFrameHeader_t
	{
		[Token(Token = "0x4001E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public EVRTrackedCameraFrameType eFrameType;

		[Token(Token = "0x4001E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint nWidth;

		[Token(Token = "0x4001E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint nHeight;

		[Token(Token = "0x4001E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint nBytesPerPixel;

		[Token(Token = "0x4001E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint nFrameSequence;

		[Token(Token = "0x4001E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public TrackedDevicePose_t standingTrackedDevicePose;
	}
	[Token(Token = "0x200028E")]
	public struct DriverDirectMode_FrameTiming
	{
		[Token(Token = "0x4001E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nSize;

		[Token(Token = "0x4001E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint m_nNumFramePresents;

		[Token(Token = "0x4001E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint m_nNumMisPresented;

		[Token(Token = "0x4001E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint m_nNumDroppedFrames;

		[Token(Token = "0x4001E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nReprojectionFlags;
	}
	[Token(Token = "0x200028F")]
	public struct AppOverrideKeys_t
	{
		[Token(Token = "0x4001E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr pchKey;

		[Token(Token = "0x4001E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr pchValue;
	}
	[Token(Token = "0x2000290")]
	public struct Compositor_FrameTiming
	{
		[Token(Token = "0x4001E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nSize;

		[Token(Token = "0x4001E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint m_nFrameIndex;

		[Token(Token = "0x4001E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint m_nNumFramePresents;

		[Token(Token = "0x4001E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint m_nNumMisPresented;

		[Token(Token = "0x4001E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nNumDroppedFrames;

		[Token(Token = "0x4001E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint m_nReprojectionFlags;

		[Token(Token = "0x4001E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public double m_flSystemTimeInSeconds;

		[Token(Token = "0x4001E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_flPreSubmitGpuMs;

		[Token(Token = "0x4001E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m_flPostSubmitGpuMs;

		[Token(Token = "0x4001E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_flTotalRenderGpuMs;

		[Token(Token = "0x4001E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m_flCompositorRenderGpuMs;

		[Token(Token = "0x4001E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_flCompositorRenderCpuMs;

		[Token(Token = "0x4001E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m_flCompositorIdleCpuMs;

		[Token(Token = "0x4001E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m_flClientFrameIntervalMs;

		[Token(Token = "0x4001E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m_flPresentCallCpuMs;

		[Token(Token = "0x4001E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float m_flWaitForPresentCpuMs;

		[Token(Token = "0x4001E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float m_flSubmitFrameMs;

		[Token(Token = "0x4001E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float m_flWaitGetPosesCalledMs;

		[Token(Token = "0x4001E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float m_flNewPosesReadyMs;

		[Token(Token = "0x4001E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float m_flNewFrameReadyMs;

		[Token(Token = "0x4001E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float m_flCompositorUpdateStartMs;

		[Token(Token = "0x4001E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float m_flCompositorUpdateEndMs;

		[Token(Token = "0x4001E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float m_flCompositorRenderStartMs;

		[Token(Token = "0x4001E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TrackedDevicePose_t m_HmdPose;
	}
	[Token(Token = "0x2000291")]
	public struct Compositor_CumulativeStats
	{
		[Token(Token = "0x4001E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nPid;

		[Token(Token = "0x4001E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint m_nNumFramePresents;

		[Token(Token = "0x4001E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint m_nNumDroppedFrames;

		[Token(Token = "0x4001E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint m_nNumReprojectedFrames;

		[Token(Token = "0x4001E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nNumFramePresentsOnStartup;

		[Token(Token = "0x4001E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint m_nNumDroppedFramesOnStartup;

		[Token(Token = "0x4001E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public uint m_nNumReprojectedFramesOnStartup;

		[Token(Token = "0x4001E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public uint m_nNumLoading;

		[Token(Token = "0x4001E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public uint m_nNumFramePresentsLoading;

		[Token(Token = "0x4001E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public uint m_nNumDroppedFramesLoading;

		[Token(Token = "0x4001E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public uint m_nNumReprojectedFramesLoading;

		[Token(Token = "0x4001E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public uint m_nNumTimedOut;

		[Token(Token = "0x4001E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public uint m_nNumFramePresentsTimedOut;

		[Token(Token = "0x4001E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public uint m_nNumDroppedFramesTimedOut;

		[Token(Token = "0x4001E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public uint m_nNumReprojectedFramesTimedOut;
	}
	[Token(Token = "0x2000292")]
	public struct VROverlayIntersectionParams_t
	{
		[Token(Token = "0x4001E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vSource;

		[Token(Token = "0x4001E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vDirection;

		[Token(Token = "0x4001E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ETrackingUniverseOrigin eOrigin;
	}
	[Token(Token = "0x2000293")]
	public struct VROverlayIntersectionResults_t
	{
		[Token(Token = "0x4001E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vPoint;

		[Token(Token = "0x4001E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vNormal;

		[Token(Token = "0x4001E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HmdVector2_t vUVs;

		[Token(Token = "0x4001E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fDistance;
	}
	[Token(Token = "0x2000294")]
	public struct IntersectionMaskRectangle_t
	{
		[Token(Token = "0x4001E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m_flTopLeftX;

		[Token(Token = "0x4001E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m_flTopLeftY;

		[Token(Token = "0x4001E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m_flWidth;

		[Token(Token = "0x4001E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m_flHeight;
	}
	[Token(Token = "0x2000295")]
	public struct IntersectionMaskCircle_t
	{
		[Token(Token = "0x4001E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m_flCenterX;

		[Token(Token = "0x4001E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m_flCenterY;

		[Token(Token = "0x4001E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m_flRadius;
	}
	[Token(Token = "0x2000296")]
	public struct VROverlayIntersectionMaskPrimitive_t
	{
		[Token(Token = "0x4001E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public EVROverlayIntersectionMaskPrimitiveType m_nPrimitiveType;

		[Token(Token = "0x4001E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public VROverlayIntersectionMaskPrimitive_Data_t m_Primitive;
	}
	[Token(Token = "0x2000297")]
	public struct RenderModel_ComponentState_t
	{
		[Token(Token = "0x4001E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdMatrix34_t mTrackingToComponentRenderModel;

		[Token(Token = "0x4001E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HmdMatrix34_t mTrackingToComponentLocal;

		[Token(Token = "0x4001E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public uint uProperties;
	}
	[Token(Token = "0x2000298")]
	public struct RenderModel_Vertex_t
	{
		[Token(Token = "0x4001E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vPosition;

		[Token(Token = "0x4001E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vNormal;

		[Token(Token = "0x4001E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float rfTextureCoord0;

		[Token(Token = "0x4001E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float rfTextureCoord1;
	}
	[Token(Token = "0x2000299")]
	public struct RenderModel_TextureMap_t
	{
		[Token(Token = "0x4001E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public char unWidth;

		[Token(Token = "0x4001E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public char unHeight;

		[Token(Token = "0x4001E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr rubTextureMapData;
	}
	[Token(Token = "0x200029A")]
	public struct RenderModel_TextureMap_t_Packed
	{
		[Token(Token = "0x4001E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public char unWidth;

		[Token(Token = "0x4001E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public char unHeight;

		[Token(Token = "0x4001E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr rubTextureMapData;

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0x888AB8", Offset = "0x888AB8", VA = "0x888AB8")]
		public RenderModel_TextureMap_t_Packed(RenderModel_TextureMap_t unpacked)
		{
		}

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0x888ACC", Offset = "0x888ACC", VA = "0x888ACC")]
		public void Unpack(ref RenderModel_TextureMap_t unpacked)
		{
		}
	}
	[Token(Token = "0x200029B")]
	public struct RenderModel_t
	{
		[Token(Token = "0x4001E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr rVertexData;

		[Token(Token = "0x4001E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint unVertexCount;

		[Token(Token = "0x4001E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr rIndexData;

		[Token(Token = "0x4001E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public uint unTriangleCount;

		[Token(Token = "0x4001E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int diffuseTextureId;
	}
	[Token(Token = "0x200029C")]
	public struct RenderModel_t_Packed
	{
		[Token(Token = "0x4001E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr rVertexData;

		[Token(Token = "0x4001E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint unVertexCount;

		[Token(Token = "0x4001E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public IntPtr rIndexData;

		[Token(Token = "0x4001E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint unTriangleCount;

		[Token(Token = "0x4001E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int diffuseTextureId;

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0x888AE8", Offset = "0x888AE8", VA = "0x888AE8")]
		public RenderModel_t_Packed(RenderModel_t unpacked)
		{
		}

		[Token(Token = "0x60013CC")]
		[Address(RVA = "0x888B0C", Offset = "0x888B0C", VA = "0x888B0C")]
		public void Unpack(ref RenderModel_t unpacked)
		{
		}
	}
	[Token(Token = "0x200029D")]
	public struct RenderModel_ControllerMode_State_t
	{
		[Token(Token = "0x4001E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bScrollWheelVisible;
	}
	[Token(Token = "0x200029E")]
	public struct NotificationBitmap_t
	{
		[Token(Token = "0x4001E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr m_pImageData;

		[Token(Token = "0x4001E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int m_nWidth;

		[Token(Token = "0x4001E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int m_nHeight;

		[Token(Token = "0x4001E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int m_nBytesPerPixel;
	}
	[Token(Token = "0x200029F")]
	public struct COpenVRContext
	{
		[Token(Token = "0x4001EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr m_pVRSystem;

		[Token(Token = "0x4001EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr m_pVRChaperone;

		[Token(Token = "0x4001EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr m_pVRChaperoneSetup;

		[Token(Token = "0x4001EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IntPtr m_pVRCompositor;

		[Token(Token = "0x4001EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntPtr m_pVROverlay;

		[Token(Token = "0x4001EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IntPtr m_pVRResources;

		[Token(Token = "0x4001EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IntPtr m_pVRRenderModels;

		[Token(Token = "0x4001EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IntPtr m_pVRExtendedDisplay;

		[Token(Token = "0x4001EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IntPtr m_pVRSettings;

		[Token(Token = "0x4001EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public IntPtr m_pVRApplications;

		[Token(Token = "0x4001EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public IntPtr m_pVRTrackedCamera;

		[Token(Token = "0x4001EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public IntPtr m_pVRScreenshots;

		[Token(Token = "0x4001EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public IntPtr m_pVRDriverManager;
	}
	[Token(Token = "0x20002A0")]
	public class OpenVR
	{
		[Token(Token = "0x200053F")]
		private class COpenVRContext
		{
			[Token(Token = "0x40026DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private CVRSystem m_pVRSystem;

			[Token(Token = "0x40026DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private CVRChaperone m_pVRChaperone;

			[Token(Token = "0x40026DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private CVRChaperoneSetup m_pVRChaperoneSetup;

			[Token(Token = "0x40026DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private CVRCompositor m_pVRCompositor;

			[Token(Token = "0x40026DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private CVROverlay m_pVROverlay;

			[Token(Token = "0x40026E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private CVRRenderModels m_pVRRenderModels;

			[Token(Token = "0x40026E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private CVRExtendedDisplay m_pVRExtendedDisplay;

			[Token(Token = "0x40026E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private CVRSettings m_pVRSettings;

			[Token(Token = "0x40026E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private CVRApplications m_pVRApplications;

			[Token(Token = "0x40026E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private CVRScreenshots m_pVRScreenshots;

			[Token(Token = "0x40026E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private CVRTrackedCamera m_pVRTrackedCamera;

			[Token(Token = "0x6001F6B")]
			[Address(RVA = "0xB702C8", Offset = "0xB702C8", VA = "0xB702C8")]
			public COpenVRContext()
			{
			}

			[Token(Token = "0x6001F6C")]
			[Address(RVA = "0xB702F8", Offset = "0xB702F8", VA = "0xB702F8")]
			public void Clear()
			{
			}

			[Token(Token = "0x6001F6D")]
			[Address(RVA = "0xB70318", Offset = "0xB70318", VA = "0xB70318")]
			private void CheckClear()
			{
			}

			[Token(Token = "0x6001F6E")]
			[Address(RVA = "0xB70454", Offset = "0xB70454", VA = "0xB70454")]
			public CVRSystem VRSystem()
			{
				return null;
			}

			[Token(Token = "0x6001F6F")]
			[Address(RVA = "0xB705D8", Offset = "0xB705D8", VA = "0xB705D8")]
			public CVRChaperone VRChaperone()
			{
				return null;
			}

			[Token(Token = "0x6001F70")]
			[Address(RVA = "0xB70698", Offset = "0xB70698", VA = "0xB70698")]
			public CVRChaperoneSetup VRChaperoneSetup()
			{
				return null;
			}

			[Token(Token = "0x6001F71")]
			[Address(RVA = "0xB70758", Offset = "0xB70758", VA = "0xB70758")]
			public CVRCompositor VRCompositor()
			{
				return null;
			}

			[Token(Token = "0x6001F72")]
			[Address(RVA = "0xB70818", Offset = "0xB70818", VA = "0xB70818")]
			public CVROverlay VROverlay()
			{
				return null;
			}

			[Token(Token = "0x6001F73")]
			[Address(RVA = "0xB708D8", Offset = "0xB708D8", VA = "0xB708D8")]
			public CVRRenderModels VRRenderModels()
			{
				return null;
			}

			[Token(Token = "0x6001F74")]
			[Address(RVA = "0xB70998", Offset = "0xB70998", VA = "0xB70998")]
			public CVRExtendedDisplay VRExtendedDisplay()
			{
				return null;
			}

			[Token(Token = "0x6001F75")]
			[Address(RVA = "0xB70A58", Offset = "0xB70A58", VA = "0xB70A58")]
			public CVRSettings VRSettings()
			{
				return null;
			}

			[Token(Token = "0x6001F76")]
			[Address(RVA = "0xB70B18", Offset = "0xB70B18", VA = "0xB70B18")]
			public CVRApplications VRApplications()
			{
				return null;
			}

			[Token(Token = "0x6001F77")]
			[Address(RVA = "0xB70BD8", Offset = "0xB70BD8", VA = "0xB70BD8")]
			public CVRScreenshots VRScreenshots()
			{
				return null;
			}

			[Token(Token = "0x6001F78")]
			[Address(RVA = "0xB70C98", Offset = "0xB70C98", VA = "0xB70C98")]
			public CVRTrackedCamera VRTrackedCamera()
			{
				return null;
			}
		}

		[Token(Token = "0x4001EAD")]
		public const uint k_nDriverNone = uint.MaxValue;

		[Token(Token = "0x4001EAE")]
		public const uint k_unMaxDriverDebugResponseSize = 32768u;

		[Token(Token = "0x4001EAF")]
		public const uint k_unTrackedDeviceIndex_Hmd = 0u;

		[Token(Token = "0x4001EB0")]
		public const uint k_unMaxTrackedDeviceCount = 64u;

		[Token(Token = "0x4001EB1")]
		public const uint k_unTrackedDeviceIndexOther = 4294967294u;

		[Token(Token = "0x4001EB2")]
		public const uint k_unTrackedDeviceIndexInvalid = uint.MaxValue;

		[Token(Token = "0x4001EB3")]
		public const ulong k_ulInvalidPropertyContainer = 0uL;

		[Token(Token = "0x4001EB4")]
		public const uint k_unInvalidPropertyTag = 0u;

		[Token(Token = "0x4001EB5")]
		public const ulong k_ulInvalidDriverHandle = 0uL;

		[Token(Token = "0x4001EB6")]
		public const uint k_unFloatPropertyTag = 1u;

		[Token(Token = "0x4001EB7")]
		public const uint k_unInt32PropertyTag = 2u;

		[Token(Token = "0x4001EB8")]
		public const uint k_unUint64PropertyTag = 3u;

		[Token(Token = "0x4001EB9")]
		public const uint k_unBoolPropertyTag = 4u;

		[Token(Token = "0x4001EBA")]
		public const uint k_unStringPropertyTag = 5u;

		[Token(Token = "0x4001EBB")]
		public const uint k_unHmdMatrix34PropertyTag = 20u;

		[Token(Token = "0x4001EBC")]
		public const uint k_unHmdMatrix44PropertyTag = 21u;

		[Token(Token = "0x4001EBD")]
		public const uint k_unHmdVector3PropertyTag = 22u;

		[Token(Token = "0x4001EBE")]
		public const uint k_unHmdVector4PropertyTag = 23u;

		[Token(Token = "0x4001EBF")]
		public const uint k_unHiddenAreaPropertyTag = 30u;

		[Token(Token = "0x4001EC0")]
		public const uint k_unPathHandleInfoTag = 31u;

		[Token(Token = "0x4001EC1")]
		public const uint k_unActionPropertyTag = 32u;

		[Token(Token = "0x4001EC2")]
		public const uint k_unInputValuePropertyTag = 33u;

		[Token(Token = "0x4001EC3")]
		public const uint k_unWildcardPropertyTag = 34u;

		[Token(Token = "0x4001EC4")]
		public const uint k_unHapticVibrationPropertyTag = 35u;

		[Token(Token = "0x4001EC5")]
		public const uint k_unOpenVRInternalReserved_Start = 1000u;

		[Token(Token = "0x4001EC6")]
		public const uint k_unOpenVRInternalReserved_End = 10000u;

		[Token(Token = "0x4001EC7")]
		public const uint k_unMaxPropertyStringSize = 32768u;

		[Token(Token = "0x4001EC8")]
		public const uint k_unControllerStateAxisCount = 5u;

		[Token(Token = "0x4001EC9")]
		public const ulong k_ulOverlayHandleInvalid = 0uL;

		[Token(Token = "0x4001ECA")]
		public const uint k_unScreenshotHandleInvalid = 0u;

		[Token(Token = "0x4001ECB")]
		public const string IVRSystem_Version = "IVRSystem_019";

		[Token(Token = "0x4001ECC")]
		public const string IVRExtendedDisplay_Version = "IVRExtendedDisplay_001";

		[Token(Token = "0x4001ECD")]
		public const string IVRTrackedCamera_Version = "IVRTrackedCamera_003";

		[Token(Token = "0x4001ECE")]
		public const uint k_unMaxApplicationKeyLength = 128u;

		[Token(Token = "0x4001ECF")]
		public const string k_pch_MimeType_HomeApp = "vr/home";

		[Token(Token = "0x4001ED0")]
		public const string k_pch_MimeType_GameTheater = "vr/game_theater";

		[Token(Token = "0x4001ED1")]
		public const string IVRApplications_Version = "IVRApplications_006";

		[Token(Token = "0x4001ED2")]
		public const string IVRChaperone_Version = "IVRChaperone_003";

		[Token(Token = "0x4001ED3")]
		public const string IVRChaperoneSetup_Version = "IVRChaperoneSetup_005";

		[Token(Token = "0x4001ED4")]
		public const string IVRCompositor_Version = "IVRCompositor_022";

		[Token(Token = "0x4001ED5")]
		public const uint k_unVROverlayMaxKeyLength = 128u;

		[Token(Token = "0x4001ED6")]
		public const uint k_unVROverlayMaxNameLength = 128u;

		[Token(Token = "0x4001ED7")]
		public const uint k_unMaxOverlayCount = 64u;

		[Token(Token = "0x4001ED8")]
		public const uint k_unMaxOverlayIntersectionMaskPrimitivesCount = 32u;

		[Token(Token = "0x4001ED9")]
		public const string IVROverlay_Version = "IVROverlay_018";

		[Token(Token = "0x4001EDA")]
		public const string k_pch_Controller_Component_GDC2015 = "gdc2015";

		[Token(Token = "0x4001EDB")]
		public const string k_pch_Controller_Component_Base = "base";

		[Token(Token = "0x4001EDC")]
		public const string k_pch_Controller_Component_Tip = "tip";

		[Token(Token = "0x4001EDD")]
		public const string k_pch_Controller_Component_HandGrip = "handgrip";

		[Token(Token = "0x4001EDE")]
		public const string k_pch_Controller_Component_Status = "status";

		[Token(Token = "0x4001EDF")]
		public const string IVRRenderModels_Version = "IVRRenderModels_005";

		[Token(Token = "0x4001EE0")]
		public const uint k_unNotificationTextMaxSize = 256u;

		[Token(Token = "0x4001EE1")]
		public const string IVRNotifications_Version = "IVRNotifications_002";

		[Token(Token = "0x4001EE2")]
		public const uint k_unMaxSettingsKeyLength = 128u;

		[Token(Token = "0x4001EE3")]
		public const string IVRSettings_Version = "IVRSettings_002";

		[Token(Token = "0x4001EE4")]
		public const string k_pch_SteamVR_Section = "steamvr";

		[Token(Token = "0x4001EE5")]
		public const string k_pch_SteamVR_RequireHmd_String = "requireHmd";

		[Token(Token = "0x4001EE6")]
		public const string k_pch_SteamVR_ForcedDriverKey_String = "forcedDriver";

		[Token(Token = "0x4001EE7")]
		public const string k_pch_SteamVR_ForcedHmdKey_String = "forcedHmd";

		[Token(Token = "0x4001EE8")]
		public const string k_pch_SteamVR_DisplayDebug_Bool = "displayDebug";

		[Token(Token = "0x4001EE9")]
		public const string k_pch_SteamVR_DebugProcessPipe_String = "debugProcessPipe";

		[Token(Token = "0x4001EEA")]
		public const string k_pch_SteamVR_DisplayDebugX_Int32 = "displayDebugX";

		[Token(Token = "0x4001EEB")]
		public const string k_pch_SteamVR_DisplayDebugY_Int32 = "displayDebugY";

		[Token(Token = "0x4001EEC")]
		public const string k_pch_SteamVR_SendSystemButtonToAllApps_Bool = "sendSystemButtonToAllApps";

		[Token(Token = "0x4001EED")]
		public const string k_pch_SteamVR_LogLevel_Int32 = "loglevel";

		[Token(Token = "0x4001EEE")]
		public const string k_pch_SteamVR_IPD_Float = "ipd";

		[Token(Token = "0x4001EEF")]
		public const string k_pch_SteamVR_Background_String = "background";

		[Token(Token = "0x4001EF0")]
		public const string k_pch_SteamVR_BackgroundUseDomeProjection_Bool = "backgroundUseDomeProjection";

		[Token(Token = "0x4001EF1")]
		public const string k_pch_SteamVR_BackgroundCameraHeight_Float = "backgroundCameraHeight";

		[Token(Token = "0x4001EF2")]
		public const string k_pch_SteamVR_BackgroundDomeRadius_Float = "backgroundDomeRadius";

		[Token(Token = "0x4001EF3")]
		public const string k_pch_SteamVR_GridColor_String = "gridColor";

		[Token(Token = "0x4001EF4")]
		public const string k_pch_SteamVR_PlayAreaColor_String = "playAreaColor";

		[Token(Token = "0x4001EF5")]
		public const string k_pch_SteamVR_ShowStage_Bool = "showStage";

		[Token(Token = "0x4001EF6")]
		public const string k_pch_SteamVR_ActivateMultipleDrivers_Bool = "activateMultipleDrivers";

		[Token(Token = "0x4001EF7")]
		public const string k_pch_SteamVR_DirectMode_Bool = "directMode";

		[Token(Token = "0x4001EF8")]
		public const string k_pch_SteamVR_DirectModeEdidVid_Int32 = "directModeEdidVid";

		[Token(Token = "0x4001EF9")]
		public const string k_pch_SteamVR_DirectModeEdidPid_Int32 = "directModeEdidPid";

		[Token(Token = "0x4001EFA")]
		public const string k_pch_SteamVR_UsingSpeakers_Bool = "usingSpeakers";

		[Token(Token = "0x4001EFB")]
		public const string k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float = "speakersForwardYawOffsetDegrees";

		[Token(Token = "0x4001EFC")]
		public const string k_pch_SteamVR_BaseStationPowerManagement_Bool = "basestationPowerManagement";

		[Token(Token = "0x4001EFD")]
		public const string k_pch_SteamVR_NeverKillProcesses_Bool = "neverKillProcesses";

		[Token(Token = "0x4001EFE")]
		public const string k_pch_SteamVR_SupersampleScale_Float = "supersampleScale";

		[Token(Token = "0x4001EFF")]
		public const string k_pch_SteamVR_AllowAsyncReprojection_Bool = "allowAsyncReprojection";

		[Token(Token = "0x4001F00")]
		public const string k_pch_SteamVR_AllowReprojection_Bool = "allowInterleavedReprojection";

		[Token(Token = "0x4001F01")]
		public const string k_pch_SteamVR_ForceReprojection_Bool = "forceReprojection";

		[Token(Token = "0x4001F02")]
		public const string k_pch_SteamVR_ForceFadeOnBadTracking_Bool = "forceFadeOnBadTracking";

		[Token(Token = "0x4001F03")]
		public const string k_pch_SteamVR_DefaultMirrorView_Int32 = "defaultMirrorView";

		[Token(Token = "0x4001F04")]
		public const string k_pch_SteamVR_ShowMirrorView_Bool = "showMirrorView";

		[Token(Token = "0x4001F05")]
		public const string k_pch_SteamVR_MirrorViewGeometry_String = "mirrorViewGeometry";

		[Token(Token = "0x4001F06")]
		public const string k_pch_SteamVR_StartMonitorFromAppLaunch = "startMonitorFromAppLaunch";

		[Token(Token = "0x4001F07")]
		public const string k_pch_SteamVR_StartCompositorFromAppLaunch_Bool = "startCompositorFromAppLaunch";

		[Token(Token = "0x4001F08")]
		public const string k_pch_SteamVR_StartDashboardFromAppLaunch_Bool = "startDashboardFromAppLaunch";

		[Token(Token = "0x4001F09")]
		public const string k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool = "startOverlayAppsFromDashboard";

		[Token(Token = "0x4001F0A")]
		public const string k_pch_SteamVR_EnableHomeApp = "enableHomeApp";

		[Token(Token = "0x4001F0B")]
		public const string k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32 = "CycleBackgroundImageTimeSec";

		[Token(Token = "0x4001F0C")]
		public const string k_pch_SteamVR_RetailDemo_Bool = "retailDemo";

		[Token(Token = "0x4001F0D")]
		public const string k_pch_SteamVR_IpdOffset_Float = "ipdOffset";

		[Token(Token = "0x4001F0E")]
		public const string k_pch_SteamVR_AllowSupersampleFiltering_Bool = "allowSupersampleFiltering";

		[Token(Token = "0x4001F0F")]
		public const string k_pch_SteamVR_EnableLinuxVulkanAsync_Bool = "enableLinuxVulkanAsync";

		[Token(Token = "0x4001F10")]
		public const string k_pch_SteamVR_AllowDisplayLockedMode_Bool = "allowDisplayLockedMode";

		[Token(Token = "0x4001F11")]
		public const string k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool = "haveStartedTutorialForNativeChaperoneDriver";

		[Token(Token = "0x4001F12")]
		public const string k_pch_SteamVR_ForceWindows32bitVRMonitor = "forceWindows32BitVRMonitor";

		[Token(Token = "0x4001F13")]
		public const string k_pch_SteamVR_DebugInput = "debugInput";

		[Token(Token = "0x4001F14")]
		public const string k_pch_Lighthouse_Section = "driver_lighthouse";

		[Token(Token = "0x4001F15")]
		public const string k_pch_Lighthouse_DisableIMU_Bool = "disableimu";

		[Token(Token = "0x4001F16")]
		public const string k_pch_Lighthouse_DisableIMUExceptHMD_Bool = "disableimuexcepthmd";

		[Token(Token = "0x4001F17")]
		public const string k_pch_Lighthouse_UseDisambiguation_String = "usedisambiguation";

		[Token(Token = "0x4001F18")]
		public const string k_pch_Lighthouse_DisambiguationDebug_Int32 = "disambiguationdebug";

		[Token(Token = "0x4001F19")]
		public const string k_pch_Lighthouse_PrimaryBasestation_Int32 = "primarybasestation";

		[Token(Token = "0x4001F1A")]
		public const string k_pch_Lighthouse_DBHistory_Bool = "dbhistory";

		[Token(Token = "0x4001F1B")]
		public const string k_pch_Lighthouse_EnableBluetooth_Bool = "enableBluetooth";

		[Token(Token = "0x4001F1C")]
		public const string k_pch_Lighthouse_PowerManagedBaseStations_String = "PowerManagedBaseStations";

		[Token(Token = "0x4001F1D")]
		public const string k_pch_Null_Section = "driver_null";

		[Token(Token = "0x4001F1E")]
		public const string k_pch_Null_SerialNumber_String = "serialNumber";

		[Token(Token = "0x4001F1F")]
		public const string k_pch_Null_ModelNumber_String = "modelNumber";

		[Token(Token = "0x4001F20")]
		public const string k_pch_Null_WindowX_Int32 = "windowX";

		[Token(Token = "0x4001F21")]
		public const string k_pch_Null_WindowY_Int32 = "windowY";

		[Token(Token = "0x4001F22")]
		public const string k_pch_Null_WindowWidth_Int32 = "windowWidth";

		[Token(Token = "0x4001F23")]
		public const string k_pch_Null_WindowHeight_Int32 = "windowHeight";

		[Token(Token = "0x4001F24")]
		public const string k_pch_Null_RenderWidth_Int32 = "renderWidth";

		[Token(Token = "0x4001F25")]
		public const string k_pch_Null_RenderHeight_Int32 = "renderHeight";

		[Token(Token = "0x4001F26")]
		public const string k_pch_Null_SecondsFromVsyncToPhotons_Float = "secondsFromVsyncToPhotons";

		[Token(Token = "0x4001F27")]
		public const string k_pch_Null_DisplayFrequency_Float = "displayFrequency";

		[Token(Token = "0x4001F28")]
		public const string k_pch_UserInterface_Section = "userinterface";

		[Token(Token = "0x4001F29")]
		public const string k_pch_UserInterface_StatusAlwaysOnTop_Bool = "StatusAlwaysOnTop";

		[Token(Token = "0x4001F2A")]
		public const string k_pch_UserInterface_MinimizeToTray_Bool = "MinimizeToTray";

		[Token(Token = "0x4001F2B")]
		public const string k_pch_UserInterface_Screenshots_Bool = "screenshots";

		[Token(Token = "0x4001F2C")]
		public const string k_pch_UserInterface_ScreenshotType_Int = "screenshotType";

		[Token(Token = "0x4001F2D")]
		public const string k_pch_Notifications_Section = "notifications";

		[Token(Token = "0x4001F2E")]
		public const string k_pch_Notifications_DoNotDisturb_Bool = "DoNotDisturb";

		[Token(Token = "0x4001F2F")]
		public const string k_pch_Keyboard_Section = "keyboard";

		[Token(Token = "0x4001F30")]
		public const string k_pch_Keyboard_TutorialCompletions = "TutorialCompletions";

		[Token(Token = "0x4001F31")]
		public const string k_pch_Keyboard_ScaleX = "ScaleX";

		[Token(Token = "0x4001F32")]
		public const string k_pch_Keyboard_ScaleY = "ScaleY";

		[Token(Token = "0x4001F33")]
		public const string k_pch_Keyboard_OffsetLeftX = "OffsetLeftX";

		[Token(Token = "0x4001F34")]
		public const string k_pch_Keyboard_OffsetRightX = "OffsetRightX";

		[Token(Token = "0x4001F35")]
		public const string k_pch_Keyboard_OffsetY = "OffsetY";

		[Token(Token = "0x4001F36")]
		public const string k_pch_Keyboard_Smoothing = "Smoothing";

		[Token(Token = "0x4001F37")]
		public const string k_pch_Perf_Section = "perfcheck";

		[Token(Token = "0x4001F38")]
		public const string k_pch_Perf_HeuristicActive_Bool = "heuristicActive";

		[Token(Token = "0x4001F39")]
		public const string k_pch_Perf_NotifyInHMD_Bool = "warnInHMD";

		[Token(Token = "0x4001F3A")]
		public const string k_pch_Perf_NotifyOnlyOnce_Bool = "warnOnlyOnce";

		[Token(Token = "0x4001F3B")]
		public const string k_pch_Perf_AllowTimingStore_Bool = "allowTimingStore";

		[Token(Token = "0x4001F3C")]
		public const string k_pch_Perf_SaveTimingsOnExit_Bool = "saveTimingsOnExit";

		[Token(Token = "0x4001F3D")]
		public const string k_pch_Perf_TestData_Float = "perfTestData";

		[Token(Token = "0x4001F3E")]
		public const string k_pch_Perf_LinuxGPUProfiling_Bool = "linuxGPUProfiling";

		[Token(Token = "0x4001F3F")]
		public const string k_pch_CollisionBounds_Section = "collisionBounds";

		[Token(Token = "0x4001F40")]
		public const string k_pch_CollisionBounds_Style_Int32 = "CollisionBoundsStyle";

		[Token(Token = "0x4001F41")]
		public const string k_pch_CollisionBounds_GroundPerimeterOn_Bool = "CollisionBoundsGroundPerimeterOn";

		[Token(Token = "0x4001F42")]
		public const string k_pch_CollisionBounds_CenterMarkerOn_Bool = "CollisionBoundsCenterMarkerOn";

		[Token(Token = "0x4001F43")]
		public const string k_pch_CollisionBounds_PlaySpaceOn_Bool = "CollisionBoundsPlaySpaceOn";

		[Token(Token = "0x4001F44")]
		public const string k_pch_CollisionBounds_FadeDistance_Float = "CollisionBoundsFadeDistance";

		[Token(Token = "0x4001F45")]
		public const string k_pch_CollisionBounds_ColorGammaR_Int32 = "CollisionBoundsColorGammaR";

		[Token(Token = "0x4001F46")]
		public const string k_pch_CollisionBounds_ColorGammaG_Int32 = "CollisionBoundsColorGammaG";

		[Token(Token = "0x4001F47")]
		public const string k_pch_CollisionBounds_ColorGammaB_Int32 = "CollisionBoundsColorGammaB";

		[Token(Token = "0x4001F48")]
		public const string k_pch_CollisionBounds_ColorGammaA_Int32 = "CollisionBoundsColorGammaA";

		[Token(Token = "0x4001F49")]
		public const string k_pch_Camera_Section = "camera";

		[Token(Token = "0x4001F4A")]
		public const string k_pch_Camera_EnableCamera_Bool = "enableCamera";

		[Token(Token = "0x4001F4B")]
		public const string k_pch_Camera_EnableCameraInDashboard_Bool = "enableCameraInDashboard";

		[Token(Token = "0x4001F4C")]
		public const string k_pch_Camera_EnableCameraForCollisionBounds_Bool = "enableCameraForCollisionBounds";

		[Token(Token = "0x4001F4D")]
		public const string k_pch_Camera_EnableCameraForRoomView_Bool = "enableCameraForRoomView";

		[Token(Token = "0x4001F4E")]
		public const string k_pch_Camera_BoundsColorGammaR_Int32 = "cameraBoundsColorGammaR";

		[Token(Token = "0x4001F4F")]
		public const string k_pch_Camera_BoundsColorGammaG_Int32 = "cameraBoundsColorGammaG";

		[Token(Token = "0x4001F50")]
		public const string k_pch_Camera_BoundsColorGammaB_Int32 = "cameraBoundsColorGammaB";

		[Token(Token = "0x4001F51")]
		public const string k_pch_Camera_BoundsColorGammaA_Int32 = "cameraBoundsColorGammaA";

		[Token(Token = "0x4001F52")]
		public const string k_pch_Camera_BoundsStrength_Int32 = "cameraBoundsStrength";

		[Token(Token = "0x4001F53")]
		public const string k_pch_audio_Section = "audio";

		[Token(Token = "0x4001F54")]
		public const string k_pch_audio_OnPlaybackDevice_String = "onPlaybackDevice";

		[Token(Token = "0x4001F55")]
		public const string k_pch_audio_OnRecordDevice_String = "onRecordDevice";

		[Token(Token = "0x4001F56")]
		public const string k_pch_audio_OnPlaybackMirrorDevice_String = "onPlaybackMirrorDevice";

		[Token(Token = "0x4001F57")]
		public const string k_pch_audio_OffPlaybackDevice_String = "offPlaybackDevice";

		[Token(Token = "0x4001F58")]
		public const string k_pch_audio_OffRecordDevice_String = "offRecordDevice";

		[Token(Token = "0x4001F59")]
		public const string k_pch_audio_VIVEHDMIGain = "viveHDMIGain";

		[Token(Token = "0x4001F5A")]
		public const string k_pch_Power_Section = "power";

		[Token(Token = "0x4001F5B")]
		public const string k_pch_Power_PowerOffOnExit_Bool = "powerOffOnExit";

		[Token(Token = "0x4001F5C")]
		public const string k_pch_Power_TurnOffScreensTimeout_Float = "turnOffScreensTimeout";

		[Token(Token = "0x4001F5D")]
		public const string k_pch_Power_TurnOffControllersTimeout_Float = "turnOffControllersTimeout";

		[Token(Token = "0x4001F5E")]
		public const string k_pch_Power_ReturnToWatchdogTimeout_Float = "returnToWatchdogTimeout";

		[Token(Token = "0x4001F5F")]
		public const string k_pch_Power_AutoLaunchSteamVROnButtonPress = "autoLaunchSteamVROnButtonPress";

		[Token(Token = "0x4001F60")]
		public const string k_pch_Power_PauseCompositorOnStandby_Bool = "pauseCompositorOnStandby";

		[Token(Token = "0x4001F61")]
		public const string k_pch_Dashboard_Section = "dashboard";

		[Token(Token = "0x4001F62")]
		public const string k_pch_Dashboard_EnableDashboard_Bool = "enableDashboard";

		[Token(Token = "0x4001F63")]
		public const string k_pch_Dashboard_ArcadeMode_Bool = "arcadeMode";

		[Token(Token = "0x4001F64")]
		public const string k_pch_Dashboard_EnableWebUI = "webUI";

		[Token(Token = "0x4001F65")]
		public const string k_pch_modelskin_Section = "modelskins";

		[Token(Token = "0x4001F66")]
		public const string k_pch_Driver_Enable_Bool = "enable";

		[Token(Token = "0x4001F67")]
		public const string k_pch_WebInterface_Section = "WebInterface";

		[Token(Token = "0x4001F68")]
		public const string k_pch_WebInterface_WebPort_String = "WebPort";

		[Token(Token = "0x4001F69")]
		public const string IVRScreenshots_Version = "IVRScreenshots_001";

		[Token(Token = "0x4001F6A")]
		public const string IVRResources_Version = "IVRResources_001";

		[Token(Token = "0x4001F6B")]
		public const string IVRDriverManager_Version = "IVRDriverManager_001";

		[Token(Token = "0x4001F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x800F24", Offset = "0x800F24")]
		private static uint <VRToken>k__BackingField;

		[Token(Token = "0x4001F6D")]
		private const string FnTable_Prefix = "FnTable:";

		[Token(Token = "0x4001F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static COpenVRContext _OpenVRInternal_ModuleContext;

		[Token(Token = "0x17000207")]
		private static uint VRToken
		{
			[Token(Token = "0x60013D5")]
			[Address(RVA = "0x13EE8CC", Offset = "0x13EE8CC", VA = "0x13EE8CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x804D80", Offset = "0x804D80")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x60013D6")]
			[Address(RVA = "0x13EE934", Offset = "0x13EE934", VA = "0x13EE934")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x804D90", Offset = "0x804D90")]
			set
			{
			}
		}

		[Token(Token = "0x17000208")]
		private static COpenVRContext OpenVRInternal_ModuleContext
		{
			[Token(Token = "0x60013D7")]
			[Address(RVA = "0x13EE9A0", Offset = "0x13EE9A0", VA = "0x13EE9A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000209")]
		public static CVRSystem System
		{
			[Token(Token = "0x60013D8")]
			[Address(RVA = "0x13EEA6C", Offset = "0x13EEA6C", VA = "0x13EEA6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020A")]
		public static CVRChaperone Chaperone
		{
			[Token(Token = "0x60013D9")]
			[Address(RVA = "0x13EEAD8", Offset = "0x13EEAD8", VA = "0x13EEAD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020B")]
		public static CVRChaperoneSetup ChaperoneSetup
		{
			[Token(Token = "0x60013DA")]
			[Address(RVA = "0x13EEB44", Offset = "0x13EEB44", VA = "0x13EEB44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020C")]
		public static CVRCompositor Compositor
		{
			[Token(Token = "0x60013DB")]
			[Address(RVA = "0x13EEBB0", Offset = "0x13EEBB0", VA = "0x13EEBB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020D")]
		public static CVROverlay Overlay
		{
			[Token(Token = "0x60013DC")]
			[Address(RVA = "0x13EEC1C", Offset = "0x13EEC1C", VA = "0x13EEC1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020E")]
		public static CVRRenderModels RenderModels
		{
			[Token(Token = "0x60013DD")]
			[Address(RVA = "0x13EEC88", Offset = "0x13EEC88", VA = "0x13EEC88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020F")]
		public static CVRExtendedDisplay ExtendedDisplay
		{
			[Token(Token = "0x60013DE")]
			[Address(RVA = "0x13EECF4", Offset = "0x13EECF4", VA = "0x13EECF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000210")]
		public static CVRSettings Settings
		{
			[Token(Token = "0x60013DF")]
			[Address(RVA = "0x13EED60", Offset = "0x13EED60", VA = "0x13EED60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000211")]
		public static CVRApplications Applications
		{
			[Token(Token = "0x60013E0")]
			[Address(RVA = "0x13EEDCC", Offset = "0x13EEDCC", VA = "0x13EEDCC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000212")]
		public static CVRScreenshots Screenshots
		{
			[Token(Token = "0x60013E1")]
			[Address(RVA = "0x13EEE38", Offset = "0x13EEE38", VA = "0x13EEE38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000213")]
		public static CVRTrackedCamera TrackedCamera
		{
			[Token(Token = "0x60013E2")]
			[Address(RVA = "0x13EEEA4", Offset = "0x13EEEA4", VA = "0x13EEEA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0x13EE818", Offset = "0x13EE818", VA = "0x13EE818")]
		public static uint InitInternal(ref EVRInitError peError, EVRApplicationType eApplicationType)
		{
			return default(uint);
		}

		[Token(Token = "0x60013CE")]
		[Address(RVA = "0x13EE820", Offset = "0x13EE820", VA = "0x13EE820")]
		public static void ShutdownInternal()
		{
		}

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0x13EE828", Offset = "0x13EE828", VA = "0x13EE828")]
		public static bool IsHmdPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0x13EE830", Offset = "0x13EE830", VA = "0x13EE830")]
		public static bool IsRuntimeInstalled()
		{
			return default(bool);
		}

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0x13EE838", Offset = "0x13EE838", VA = "0x13EE838")]
		public static string GetStringForHmdError(EVRInitError error)
		{
			return null;
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0x13EE8B4", Offset = "0x13EE8B4", VA = "0x13EE8B4")]
		public static IntPtr GetGenericInterface(string pchInterfaceVersion, ref EVRInitError peError)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0x13EE8BC", Offset = "0x13EE8BC", VA = "0x13EE8BC")]
		public static bool IsInterfaceVersionValid(string pchInterfaceVersion)
		{
			return default(bool);
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0x13EE8C4", Offset = "0x13EE8C4", VA = "0x13EE8C4")]
		public static uint GetInitToken()
		{
			return default(uint);
		}

		[Token(Token = "0x60013E3")]
		[Address(RVA = "0x13EEF10", Offset = "0x13EEF10", VA = "0x13EEF10")]
		public static CVRSystem Init(ref EVRInitError peError, EVRApplicationType eApplicationType = EVRApplicationType.VRApplication_Scene)
		{
			return null;
		}

		[Token(Token = "0x60013E4")]
		[Address(RVA = "0x13EF078", Offset = "0x13EF078", VA = "0x13EF078")]
		public static void Shutdown()
		{
		}

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0x13EF0D8", Offset = "0x13EF0D8", VA = "0x13EF0D8")]
		public OpenVR()
		{
		}
	}
}
namespace YoutubeLight
{
	[Token(Token = "0x20002A1")]
	public class VideoNotAvailableException : Exception
	{
		[Token(Token = "0x60013E7")]
		[Address(RVA = "0x128A670", Offset = "0x128A670", VA = "0x128A670")]
		public VideoNotAvailableException()
		{
		}

		[Token(Token = "0x60013E8")]
		[Address(RVA = "0x128A6D8", Offset = "0x128A6D8", VA = "0x128A6D8")]
		public VideoNotAvailableException(string message)
		{
		}
	}
	[Token(Token = "0x20002A2")]
	public class YoutubeParseException : Exception
	{
		[Token(Token = "0x60013E9")]
		[Address(RVA = "0x128A750", Offset = "0x128A750", VA = "0x128A750")]
		public YoutubeParseException(string message, Exception innerException)
		{
		}
	}
	[Token(Token = "0x20002A3")]
	internal static class HTTPHelperYoutube
	{
		[Token(Token = "0x60013EA")]
		[Address(RVA = "0x12880A0", Offset = "0x12880A0", VA = "0x12880A0")]
		public static string HtmlDecode(string value)
		{
			return null;
		}

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0x12880A4", Offset = "0x12880A4", VA = "0x12880A4")]
		public static string DecodeHtmlChars(this string source)
		{
			return null;
		}

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0x1288388", Offset = "0x1288388", VA = "0x1288388")]
		public static IDictionary<string, string> ParseQueryString(string s)
		{
			return null;
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0x1288570", Offset = "0x1288570", VA = "0x1288570")]
		public static string ReplaceQueryStringParameter(string currentPageUrl, string paramToReplace, string newValue)
		{
			return null;
		}

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0x1288568", Offset = "0x1288568", VA = "0x1288568")]
		public static string UrlDecode(string url)
		{
			return null;
		}
	}
	[Token(Token = "0x20002A4")]
	internal static class MagicHands
	{
		[Token(Token = "0x60013EF")]
		[Address(RVA = "0x128897C", Offset = "0x128897C", VA = "0x128897C")]
		private static string ApplyOperation(string cipher, string op)
		{
			return null;
		}

		[Token(Token = "0x60013F0")]
		[Address(RVA = "0x1288C38", Offset = "0x1288C38", VA = "0x1288C38")]
		public static string DecipherWithOperations(string cipher, string operations)
		{
			return null;
		}

		[Token(Token = "0x60013F1")]
		[Address(RVA = "0x1288D60", Offset = "0x1288D60", VA = "0x1288D60")]
		private static string GetFunctionFromLine(string currentLine)
		{
			return null;
		}

		[Token(Token = "0x60013F2")]
		[Address(RVA = "0x1288AC4", Offset = "0x1288AC4", VA = "0x1288AC4")]
		private static int GetOpIndex(string op)
		{
			return default(int);
		}

		[Token(Token = "0x60013F3")]
		[Address(RVA = "0x1288B68", Offset = "0x1288B68", VA = "0x1288B68")]
		private static string SwapFirstChar(string cipher, int index)
		{
			return null;
		}
	}
	[Token(Token = "0x20002A5")]
	public enum AudioType
	{
		[Token(Token = "0x4001F70")]
		Aac,
		[Token(Token = "0x4001F71")]
		Mp3,
		[Token(Token = "0x4001F72")]
		Opus,
		[Token(Token = "0x4001F73")]
		Vorbis,
		[Token(Token = "0x4001F74")]
		Unknown
	}
	[Token(Token = "0x20002A6")]
	public enum VideoType
	{
		[Token(Token = "0x4001F76")]
		Mobile_3gp,
		[Token(Token = "0x4001F77")]
		Flv,
		[Token(Token = "0x4001F78")]
		Hls,
		[Token(Token = "0x4001F79")]
		Mp4,
		[Token(Token = "0x4001F7A")]
		WebM,
		[Token(Token = "0x4001F7B")]
		Unknown
	}
	[Token(Token = "0x20002A7")]
	public enum AdaptiveType
	{
		[Token(Token = "0x4001F7D")]
		None,
		[Token(Token = "0x4001F7E")]
		Audio,
		[Token(Token = "0x4001F7F")]
		Video,
		[Token(Token = "0x4001F80")]
		Audio_Video
	}
	[Token(Token = "0x20002A8")]
	public class VideoInfo
	{
		[Token(Token = "0x4001F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static IEnumerable<VideoInfo> Defaults;

		[Token(Token = "0x4001F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x800F34", Offset = "0x800F34")]
		private AdaptiveType <AdaptiveType>k__BackingField;

		[Token(Token = "0x4001F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x800F44", Offset = "0x800F44")]
		private int <AudioBitrate>k__BackingField;

		[Token(Token = "0x4001F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x800F54", Offset = "0x800F54")]
		private AudioType <AudioType>k__BackingField;

		[Token(Token = "0x4001F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x800F64", Offset = "0x800F64")]
		private string <DownloadUrl>k__BackingField;

		[Token(Token = "0x4001F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x800F74", Offset = "0x800F74")]
		private int <FormatCode>k__BackingField;

		[Token(Token = "0x4001F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x800F84", Offset = "0x800F84")]
		private bool <Is3D>k__BackingField;

		[Token(Token = "0x4001F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x800F94", Offset = "0x800F94")]
		private bool <HDR>k__BackingField;

		[Token(Token = "0x4001F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x800FA4", Offset = "0x800FA4")]
		private bool <RequiresDecryption>k__BackingField;

		[Token(Token = "0x4001F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x800FB4", Offset = "0x800FB4")]
		private int <Resolution>k__BackingField;

		[Token(Token = "0x4001F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x800FC4", Offset = "0x800FC4")]
		private string <Title>k__BackingField;

		[Token(Token = "0x4001F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x800FD4", Offset = "0x800FD4")]
		private VideoType <VideoType>k__BackingField;

		[Token(Token = "0x4001F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x800FE4", Offset = "0x800FE4")]
		private string <HtmlPlayerVersion>k__BackingField;

		[Token(Token = "0x4001F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x800FF4", Offset = "0x800FF4")]
		private string <HtmlscriptName>k__BackingField;

		[Token(Token = "0x17000214")]
		public AdaptiveType AdaptiveType
		{
			[Token(Token = "0x60013F7")]
			[Address(RVA = "0x1288F60", Offset = "0x1288F60", VA = "0x1288F60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x804DB0", Offset = "0x804DB0")]
			get
			{
				return default(AdaptiveType);
			}
			[Token(Token = "0x60013F8")]
			[Address(RVA = "0x1288F68", Offset = "0x1288F68", VA = "0x1288F68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x804DC0", Offset = "0x804DC0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000215")]
		public int AudioBitrate
		{
			[Token(Token = "0x60013F9")]
			[Address(RVA = "0x1288F70", Offset = "0x1288F70", VA = "0x1288F70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x804DD0", Offset = "0x804DD0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60013FA")]
			[Address(RVA = "0x1288F78", Offset = "0x1288F78", VA = "0x1288F78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x804DE0", Offset = "0x804DE0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000216")]
		public string AudioExtension
		{
			[Token(Token = "0x60013FB")]
			[Address(RVA = "0x1288F80", Offset = "0x1288F80", VA = "0x1288F80")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000217")]
		public AudioType AudioType
		{
			[Token(Token = "0x60013FC")]
			[Address(RVA = "0x1289018", Offset = "0x1289018", VA = "0x1289018")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x804DF0", Offset = "0x804DF0")]
			get
			{
				return default(AudioType);
			}
			[Token(Token = "0x60013FD")]
			[Address(RVA = "0x1289020", Offset = "0x1289020", VA = "0x1289020")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x804E00", Offset = "0x804E00")]
			private set
			{
			}
		}

		[Token(Token = "0x17000218")]
		public bool CanExtractAudio
		{
			[Token(Token = "0x60013FE")]
			[Address(RVA = "0x1289028", Offset = "0x1289028", VA = "0x1289028")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000219")]
		public string DownloadUrl
		{
			[Token(Token = "0x60013FF")]
			[Address(RVA = "0x1289038", Offset = "0x1289038", VA = "0x1289038")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x804E10", Offset = "0x804E10")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001400")]
			[Address(RVA = "0x1289040", Offset = "0x1289040", VA = "0x1289040")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x804E20", Offset = "0x804E20")]
			internal set
			{
			}
		}

		[Token(Token = "0x1700021A")]
		public int FormatCode
		{
			[Token(Token = "0x6001401")]
			[Address(RVA = "0x1289048", Offset = "0x1289048", VA = "0x1289048")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x804E30", Offset = "0x804E30")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001402")]
			[Address(RVA = "0x1289050", Offset = "0x1289050", VA = "0x1289050")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x804E40", Offset = "0x804E40")]
			private set
			{
			}
		}

		[Token(Token = "0x1700021B")]
		public bool Is3D
		{
			[Token(Token = "0x6001403")]
			[Address(RVA = "0x1289058", Offset = "0x1289058", VA = "0x1289058")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x804E50", Offset = "0x804E50")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001404")]
			[Address(RVA = "0x1289060", Offset = "0x1289060", VA = "0x1289060")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x804E60", Offset = "0x804E60")]
			private set
			{
			}
		}

		[Token(Token = "0x1700021C")]
		public bool HDR
		{
			[Token(Token = "0x6001405")]
			[Address(RVA = "0x128906C", Offset = "0x128906C", VA = "0x128906C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x804E70", Offset = "0x804E70")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001406")]
			[Address(RVA = "0x1289074", Offset = "0x1289074", VA = "0x1289074")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x804E80", Offset = "0x804E80")]
			private set
			{
			}
		}

		[Token(Token = "0x1700021D")]
		public bool RequiresDecryption
		{
			[Token(Token = "0x6001407")]
			[Address(RVA = "0x1289080", Offset = "0x1289080", VA = "0x1289080")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x804E90", Offset = "0x804E90")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001408")]
			[Address(RVA = "0x1289088", Offset = "0x1289088", VA = "0x1289088")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x804EA0", Offset = "0x804EA0")]
			internal set
			{
			}
		}

		[Token(Token = "0x1700021E")]
		public int Resolution
		{
			[Token(Token = "0x6001409")]
			[Address(RVA = "0x1289094", Offset = "0x1289094", VA = "0x1289094")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x804EB0", Offset = "0x804EB0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600140A")]
			[Address(RVA = "0x128909C", Offset = "0x128909C", VA = "0x128909C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x804EC0", Offset = "0x804EC0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700021F")]
		public string Title
		{
			[Token(Token = "0x600140B")]
			[Address(RVA = "0x12890A4", Offset = "0x12890A4", VA = "0x12890A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x804ED0", Offset = "0x804ED0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600140C")]
			[Address(RVA = "0x12890AC", Offset = "0x12890AC", VA = "0x12890AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x804EE0", Offset = "0x804EE0")]
			internal set
			{
			}
		}

		[Token(Token = "0x17000220")]
		public string VideoExtension
		{
			[Token(Token = "0x600140D")]
			[Address(RVA = "0x12890B4", Offset = "0x12890B4", VA = "0x12890B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000221")]
		public VideoType VideoType
		{
			[Token(Token = "0x600140E")]
			[Address(RVA = "0x1289148", Offset = "0x1289148", VA = "0x1289148")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x804EF0", Offset = "0x804EF0")]
			get
			{
				return default(VideoType);
			}
			[Token(Token = "0x600140F")]
			[Address(RVA = "0x1289150", Offset = "0x1289150", VA = "0x1289150")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x804F00", Offset = "0x804F00")]
			private set
			{
			}
		}

		[Token(Token = "0x17000222")]
		internal string HtmlPlayerVersion
		{
			[Token(Token = "0x6001410")]
			[Address(RVA = "0x1289158", Offset = "0x1289158", VA = "0x1289158")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x804F10", Offset = "0x804F10")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001411")]
			[Address(RVA = "0x1289160", Offset = "0x1289160", VA = "0x1289160")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x804F20", Offset = "0x804F20")]
			set
			{
			}
		}

		[Token(Token = "0x17000223")]
		internal string HtmlscriptName
		{
			[Token(Token = "0x6001412")]
			[Address(RVA = "0x1289168", Offset = "0x1289168", VA = "0x1289168")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x804F30", Offset = "0x804F30")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001413")]
			[Address(RVA = "0x1289170", Offset = "0x1289170", VA = "0x1289170")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x804F40", Offset = "0x804F40")]
			set
			{
			}
		}

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0x1288E14", Offset = "0x1288E14", VA = "0x1288E14")]
		internal VideoInfo(int formatCode)
		{
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0x1288EE4", Offset = "0x1288EE4", VA = "0x1288EE4")]
		internal VideoInfo(VideoInfo info)
		{
		}

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0x1288E5C", Offset = "0x1288E5C", VA = "0x1288E5C")]
		private VideoInfo(int formatCode, VideoType videoType, int resolution, bool HDR, bool is3D, AudioType audioType, int audioBitrate, AdaptiveType adaptiveType)
		{
		}

		[Token(Token = "0x6001414")]
		[Address(RVA = "0x1289178", Offset = "0x1289178", VA = "0x1289178", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20002A9")]
	public abstract class Downloader
	{
		[Token(Token = "0x4001F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x801024", Offset = "0x801024")]
		private int? <BytesToDownload>k__BackingField;

		[Token(Token = "0x4001F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x801034", Offset = "0x801034")]
		private string <SavePath>k__BackingField;

		[Token(Token = "0x4001F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x801044", Offset = "0x801044")]
		private VideoInfo <Video>k__BackingField;

		[Token(Token = "0x17000224")]
		public int? BytesToDownload
		{
			[Token(Token = "0x600141B")]
			[Address(RVA = "0x1288028", Offset = "0x1288028", VA = "0x1288028")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x804F90", Offset = "0x804F90")]
			get
			{
				return null;
			}
			[Token(Token = "0x600141C")]
			[Address(RVA = "0x1288030", Offset = "0x1288030", VA = "0x1288030")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x804FA0", Offset = "0x804FA0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000225")]
		public string SavePath
		{
			[Token(Token = "0x600141D")]
			[Address(RVA = "0x1288038", Offset = "0x1288038", VA = "0x1288038")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x804FB0", Offset = "0x804FB0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600141E")]
			[Address(RVA = "0x1288040", Offset = "0x1288040", VA = "0x1288040")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x804FC0", Offset = "0x804FC0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000226")]
		public VideoInfo Video
		{
			[Token(Token = "0x600141F")]
			[Address(RVA = "0x1288048", Offset = "0x1288048", VA = "0x1288048")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x804FD0", Offset = "0x804FD0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001420")]
			[Address(RVA = "0x1288050", Offset = "0x1288050", VA = "0x1288050")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x804FE0", Offset = "0x804FE0")]
			private set
			{
			}
		}

		[Token(Token = "0x14000027")]
		public event EventHandler DownloadFinished
		{
			[Token(Token = "0x6001417")]
			[Address(RVA = "0x1287D98", Offset = "0x1287D98", VA = "0x1287D98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x804F50", Offset = "0x804F50")]
			add
			{
			}
			[Token(Token = "0x6001418")]
			[Address(RVA = "0x1287E3C", Offset = "0x1287E3C", VA = "0x1287E3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x804F60", Offset = "0x804F60")]
			remove
			{
			}
		}

		[Token(Token = "0x14000028")]
		public event EventHandler DownloadStarted
		{
			[Token(Token = "0x6001419")]
			[Address(RVA = "0x1287EE0", Offset = "0x1287EE0", VA = "0x1287EE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x804F70", Offset = "0x804F70")]
			add
			{
			}
			[Token(Token = "0x600141A")]
			[Address(RVA = "0x1287F84", Offset = "0x1287F84", VA = "0x1287F84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x804F80", Offset = "0x804F80")]
			remove
			{
			}
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0x1287CC4", Offset = "0x1287CC4", VA = "0x1287CC4")]
		protected Downloader(VideoInfo video, string savePath, [Optional] int? bytesToDownload)
		{
		}

		[Token(Token = "0x6001421")]
		public abstract void Execute();

		[Token(Token = "0x6001422")]
		[Address(RVA = "0x1288058", Offset = "0x1288058", VA = "0x1288058")]
		protected void OnDownloadFinished(EventArgs e)
		{
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0x128807C", Offset = "0x128807C", VA = "0x128807C")]
		protected void OnDownloadStarted(EventArgs e)
		{
		}
	}
}
namespace SimpleJSON
{
	[Token(Token = "0x20002AA")]
	public enum JSONNodeType
	{
		[Token(Token = "0x4001F95")]
		Array = 1,
		[Token(Token = "0x4001F96")]
		Object,
		[Token(Token = "0x4001F97")]
		String,
		[Token(Token = "0x4001F98")]
		Number,
		[Token(Token = "0x4001F99")]
		NullValue,
		[Token(Token = "0x4001F9A")]
		Boolean,
		[Token(Token = "0x4001F9B")]
		None
	}
	[Token(Token = "0x20002AB")]
	public enum JSONTextMode
	{
		[Token(Token = "0x4001F9D")]
		Compact,
		[Token(Token = "0x4001F9E")]
		Indent
	}
	[Token(Token = "0x20002AC")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x7F6EC8", Offset = "0x7F6EC8")]
	public abstract class JSONNode
	{
		[Token(Token = "0x2000540")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7FB34C", Offset = "0x7FB34C")]
		private sealed class <get_Children>d__29 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40026E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40026E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x40026E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x1700037D")]
			private JSONNode System.Collections.Generic.IEnumerator<SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6001F7C")]
				[Address(RVA = "0xA5A97C", Offset = "0xA5A97C", VA = "0xA5A97C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700037E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F7E")]
				[Address(RVA = "0xA5A9E8", Offset = "0xA5A9E8", VA = "0xA5A9E8", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F79")]
			[Address(RVA = "0xA58AB0", Offset = "0xA58AB0", VA = "0xA58AB0")]
			[DebuggerHidden]
			public <get_Children>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x6001F7A")]
			[Address(RVA = "0xA5A960", Offset = "0xA5A960", VA = "0xA5A960", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F7B")]
			[Address(RVA = "0xA5A964", Offset = "0xA5A964", VA = "0xA5A964", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F7D")]
			[Address(RVA = "0xA5A984", Offset = "0xA5A984", VA = "0xA5A984", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001F7F")]
			[Address(RVA = "0xA5A9F0", Offset = "0xA5A9F0", VA = "0xA5A9F0", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001F80")]
			[Address(RVA = "0xA5AA88", Offset = "0xA5AA88", VA = "0xA5AA88", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000541")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7FB35C", Offset = "0x7FB35C")]
		private sealed class <get_DeepChildren>d__31 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40026E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40026EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x40026EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40026EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONNode <>4__this;

			[Token(Token = "0x40026ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IEnumerator<JSONNode> <>7__wrap1;

			[Token(Token = "0x40026EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IEnumerator<JSONNode> <>7__wrap2;

			[Token(Token = "0x1700037F")]
			private JSONNode System.Collections.Generic.IEnumerator<SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6001F86")]
				[Address(RVA = "0xA5B0A8", Offset = "0xA5B0A8", VA = "0xA5B0A8", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000380")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F88")]
				[Address(RVA = "0xA5B114", Offset = "0xA5B114", VA = "0xA5B114", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F81")]
			[Address(RVA = "0xA58B6C", Offset = "0xA58B6C", VA = "0xA58B6C")]
			[DebuggerHidden]
			public <get_DeepChildren>d__31(int <>1__state)
			{
			}

			[Token(Token = "0x6001F82")]
			[Address(RVA = "0xA5AA8C", Offset = "0xA5AA8C", VA = "0xA5AA8C", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F83")]
			[Address(RVA = "0xA5AC84", Offset = "0xA5AC84", VA = "0xA5AC84", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F84")]
			[Address(RVA = "0xA5ABC4", Offset = "0xA5ABC4", VA = "0xA5ABC4")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001F85")]
			[Address(RVA = "0xA5AB04", Offset = "0xA5AB04", VA = "0xA5AB04")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x6001F87")]
			[Address(RVA = "0xA5B0B0", Offset = "0xA5B0B0", VA = "0xA5B0B0", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001F89")]
			[Address(RVA = "0xA5B11C", Offset = "0xA5B11C", VA = "0xA5B11C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001F8A")]
			[Address(RVA = "0xA5B1CC", Offset = "0xA5B1CC", VA = "0xA5B1CC", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4001F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static StringBuilder m_EscapeBuilder;

		[Token(Token = "0x17000227")]
		public virtual JSONNode Item
		{
			[Token(Token = "0x6001424")]
			[Address(RVA = "0xA5891C", Offset = "0xA5891C", VA = "0xA5891C", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001425")]
			[Address(RVA = "0xA58924", Offset = "0xA58924", VA = "0xA58924", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000228")]
		public virtual JSONNode Item
		{
			[Token(Token = "0x6001426")]
			[Address(RVA = "0xA58928", Offset = "0xA58928", VA = "0xA58928", Slot = "6")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001427")]
			[Address(RVA = "0xA58930", Offset = "0xA58930", VA = "0xA58930", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000229")]
		public virtual string Value
		{
			[Token(Token = "0x6001428")]
			[Address(RVA = "0xA58934", Offset = "0xA58934", VA = "0xA58934", Slot = "8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001429")]
			[Address(RVA = "0xA5897C", Offset = "0xA5897C", VA = "0xA5897C", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x1700022A")]
		public virtual int Count
		{
			[Token(Token = "0x600142A")]
			[Address(RVA = "0xA58980", Offset = "0xA58980", VA = "0xA58980", Slot = "10")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700022B")]
		public virtual bool IsNumber
		{
			[Token(Token = "0x600142B")]
			[Address(RVA = "0xA58988", Offset = "0xA58988", VA = "0xA58988", Slot = "11")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700022C")]
		public virtual bool IsString
		{
			[Token(Token = "0x600142C")]
			[Address(RVA = "0xA58990", Offset = "0xA58990", VA = "0xA58990", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700022D")]
		public virtual bool IsBoolean
		{
			[Token(Token = "0x600142D")]
			[Address(RVA = "0xA58998", Offset = "0xA58998", VA = "0xA58998", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700022E")]
		public virtual bool IsNull
		{
			[Token(Token = "0x600142E")]
			[Address(RVA = "0xA589A0", Offset = "0xA589A0", VA = "0xA589A0", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700022F")]
		public virtual bool IsArray
		{
			[Token(Token = "0x600142F")]
			[Address(RVA = "0xA589A8", Offset = "0xA589A8", VA = "0xA589A8", Slot = "15")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000230")]
		public virtual bool IsObject
		{
			[Token(Token = "0x6001430")]
			[Address(RVA = "0xA589B0", Offset = "0xA589B0", VA = "0xA589B0", Slot = "16")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000231")]
		public virtual IEnumerable<JSONNode> Children
		{
			[Token(Token = "0x6001436")]
			[Address(RVA = "0xA58A40", Offset = "0xA58A40", VA = "0xA58A40", Slot = "22")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x804FF0", Offset = "0x804FF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000232")]
		public IEnumerable<JSONNode> DeepChildren
		{
			[Token(Token = "0x6001437")]
			[Address(RVA = "0xA58AE8", Offset = "0xA58AE8", VA = "0xA58AE8")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x805054", Offset = "0x805054")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000233")]
		public abstract JSONNodeType Tag
		{
			[Token(Token = "0x600143B")]
			get;
		}

		[Token(Token = "0x17000234")]
		public virtual double AsDouble
		{
			[Token(Token = "0x600143C")]
			[Address(RVA = "0xA58CE0", Offset = "0xA58CE0", VA = "0xA58CE0", Slot = "26")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x600143D")]
			[Address(RVA = "0xA58D84", Offset = "0xA58D84", VA = "0xA58D84", Slot = "27")]
			set
			{
			}
		}

		[Token(Token = "0x17000235")]
		public virtual int AsInt
		{
			[Token(Token = "0x600143E")]
			[Address(RVA = "0xA58DC4", Offset = "0xA58DC4", VA = "0xA58DC4", Slot = "28")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600143F")]
			[Address(RVA = "0xA58DE8", Offset = "0xA58DE8", VA = "0xA58DE8", Slot = "29")]
			set
			{
			}
		}

		[Token(Token = "0x17000236")]
		public virtual float AsFloat
		{
			[Token(Token = "0x6001440")]
			[Address(RVA = "0xA58E00", Offset = "0xA58E00", VA = "0xA58E00", Slot = "30")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001441")]
			[Address(RVA = "0xA58E24", Offset = "0xA58E24", VA = "0xA58E24", Slot = "31")]
			set
			{
			}
		}

		[Token(Token = "0x17000237")]
		public virtual bool AsBool
		{
			[Token(Token = "0x6001442")]
			[Address(RVA = "0xA58E38", Offset = "0xA58E38", VA = "0xA58E38", Slot = "32")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001443")]
			[Address(RVA = "0xA58F00", Offset = "0xA58F00", VA = "0xA58F00", Slot = "33")]
			set
			{
			}
		}

		[Token(Token = "0x17000238")]
		public virtual JSONArray AsArray
		{
			[Token(Token = "0x6001444")]
			[Address(RVA = "0xA58F80", Offset = "0xA58F80", VA = "0xA58F80", Slot = "34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000239")]
		public virtual JSONObject AsObject
		{
			[Token(Token = "0x6001445")]
			[Address(RVA = "0xA59000", Offset = "0xA59000", VA = "0xA59000", Slot = "35")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001431")]
		[Address(RVA = "0xA589B8", Offset = "0xA589B8", VA = "0xA589B8", Slot = "17")]
		public virtual void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6001432")]
		[Address(RVA = "0xA589BC", Offset = "0xA589BC", VA = "0xA589BC", Slot = "18")]
		public virtual void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x6001433")]
		[Address(RVA = "0xA58A28", Offset = "0xA58A28", VA = "0xA58A28", Slot = "19")]
		public virtual JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x6001434")]
		[Address(RVA = "0xA58A30", Offset = "0xA58A30", VA = "0xA58A30", Slot = "20")]
		public virtual JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x6001435")]
		[Address(RVA = "0xA58A38", Offset = "0xA58A38", VA = "0xA58A38", Slot = "21")]
		public virtual JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x6001438")]
		[Address(RVA = "0xA58BA4", Offset = "0xA58BA4", VA = "0xA58BA4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001439")]
		[Address(RVA = "0xA58C3C", Offset = "0xA58C3C", VA = "0xA58C3C", Slot = "23")]
		public virtual string ToString(int aIndent)
		{
			return null;
		}

		[Token(Token = "0x600143A")]
		internal abstract void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode);

		[Token(Token = "0x6001446")]
		[Address(RVA = "0xA59080", Offset = "0xA59080", VA = "0xA59080")]
		public static implicit operator JSONNode(string s)
		{
			return null;
		}

		[Token(Token = "0x6001447")]
		[Address(RVA = "0xA5915C", Offset = "0xA5915C", VA = "0xA5915C")]
		public static implicit operator string(JSONNode d)
		{
			return null;
		}

		[Token(Token = "0x6001448")]
		[Address(RVA = "0xA591F4", Offset = "0xA591F4", VA = "0xA591F4")]
		public static implicit operator JSONNode(double n)
		{
			return null;
		}

		[Token(Token = "0x6001449")]
		[Address(RVA = "0xA5925C", Offset = "0xA5925C", VA = "0xA5925C")]
		public static implicit operator double(JSONNode d)
		{
			return default(double);
		}

		[Token(Token = "0x600144A")]
		[Address(RVA = "0xA592F8", Offset = "0xA592F8", VA = "0xA592F8")]
		public static implicit operator JSONNode(float n)
		{
			return null;
		}

		[Token(Token = "0x600144B")]
		[Address(RVA = "0xA59360", Offset = "0xA59360", VA = "0xA59360")]
		public static implicit operator float(JSONNode d)
		{
			return default(float);
		}

		[Token(Token = "0x600144C")]
		[Address(RVA = "0xA593FC", Offset = "0xA593FC", VA = "0xA593FC")]
		public static implicit operator JSONNode(int n)
		{
			return null;
		}

		[Token(Token = "0x600144D")]
		[Address(RVA = "0xA5945C", Offset = "0xA5945C", VA = "0xA5945C")]
		public static implicit operator int(JSONNode d)
		{
			return default(int);
		}

		[Token(Token = "0x600144E")]
		[Address(RVA = "0xA594F8", Offset = "0xA594F8", VA = "0xA594F8")]
		public static implicit operator JSONNode(bool b)
		{
			return null;
		}

		[Token(Token = "0x600144F")]
		[Address(RVA = "0xA59558", Offset = "0xA59558", VA = "0xA59558")]
		public static implicit operator bool(JSONNode d)
		{
			return default(bool);
		}

		[Token(Token = "0x6001450")]
		[Address(RVA = "0xA56D38", Offset = "0xA56D38", VA = "0xA56D38")]
		public static bool operator ==(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0xA595F4", Offset = "0xA595F4", VA = "0xA595F4")]
		public static bool operator !=(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001452")]
		[Address(RVA = "0xA59674", Offset = "0xA59674", VA = "0xA59674", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001453")]
		[Address(RVA = "0xA59680", Offset = "0xA59680", VA = "0xA59680", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001454")]
		[Address(RVA = "0xA59688", Offset = "0xA59688", VA = "0xA59688")]
		internal static string Escape(string aText)
		{
			return null;
		}

		[Token(Token = "0x6001455")]
		[Address(RVA = "0xA59A48", Offset = "0xA59A48", VA = "0xA59A48")]
		private static void ParseElement(JSONNode ctx, string token, string tokenName, bool quoted)
		{
		}

		[Token(Token = "0x6001456")]
		[Address(RVA = "0xA5653C", Offset = "0xA5653C", VA = "0xA5653C")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}

		[Token(Token = "0x6001457")]
		[Address(RVA = "0xA59C38", Offset = "0xA59C38", VA = "0xA59C38", Slot = "36")]
		public virtual void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0xA59C3C", Offset = "0xA59C3C", VA = "0xA59C3C")]
		public void SaveToStream(Stream aData)
		{
		}

		[Token(Token = "0x6001459")]
		[Address(RVA = "0xA59CBC", Offset = "0xA59CBC", VA = "0xA59CBC")]
		public void SaveToCompressedStream(Stream aData)
		{
		}

		[Token(Token = "0x600145A")]
		[Address(RVA = "0xA59D2C", Offset = "0xA59D2C", VA = "0xA59D2C")]
		public void SaveToCompressedFile(string aFileName)
		{
		}

		[Token(Token = "0x600145B")]
		[Address(RVA = "0xA59D9C", Offset = "0xA59D9C", VA = "0xA59D9C")]
		public string SaveToCompressedBase64()
		{
			return null;
		}

		[Token(Token = "0x600145C")]
		[Address(RVA = "0xA59E0C", Offset = "0xA59E0C", VA = "0xA59E0C")]
		public void SaveToFile(string aFileName)
		{
		}

		[Token(Token = "0x600145D")]
		[Address(RVA = "0xA59F78", Offset = "0xA59F78", VA = "0xA59F78")]
		public string SaveToBase64()
		{
			return null;
		}

		[Token(Token = "0x600145E")]
		[Address(RVA = "0xA5A118", Offset = "0xA5A118", VA = "0xA5A118")]
		public static JSONNode Deserialize(BinaryReader aReader)
		{
			return null;
		}

		[Token(Token = "0x600145F")]
		[Address(RVA = "0xA5A434", Offset = "0xA5A434", VA = "0xA5A434")]
		public static JSONNode LoadFromCompressedFile(string aFileName)
		{
			return null;
		}

		[Token(Token = "0x6001460")]
		[Address(RVA = "0xA5A4A4", Offset = "0xA5A4A4", VA = "0xA5A4A4")]
		public static JSONNode LoadFromCompressedStream(Stream aData)
		{
			return null;
		}

		[Token(Token = "0x6001461")]
		[Address(RVA = "0xA5A514", Offset = "0xA5A514", VA = "0xA5A514")]
		public static JSONNode LoadFromCompressedBase64(string aBase64)
		{
			return null;
		}

		[Token(Token = "0x6001462")]
		[Address(RVA = "0xA5A584", Offset = "0xA5A584", VA = "0xA5A584")]
		public static JSONNode LoadFromStream(Stream aData)
		{
			return null;
		}

		[Token(Token = "0x6001463")]
		[Address(RVA = "0xA5A6D4", Offset = "0xA5A6D4", VA = "0xA5A6D4")]
		public static JSONNode LoadFromFile(string aFileName)
		{
			return null;
		}

		[Token(Token = "0x6001464")]
		[Address(RVA = "0xA5A818", Offset = "0xA5A818", VA = "0xA5A818")]
		public static JSONNode LoadFromBase64(string aBase64)
		{
			return null;
		}

		[Token(Token = "0x6001465")]
		[Address(RVA = "0xA576AC", Offset = "0xA576AC", VA = "0xA576AC")]
		protected JSONNode()
		{
		}
	}
	[Token(Token = "0x20002AD")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x7F6F00", Offset = "0x7F6F00")]
	public class JSONArray : JSONNode, IEnumerable
	{
		[Token(Token = "0x2000542")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7FB36C", Offset = "0x7FB36C")]
		private sealed class <get_Children>d__18 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40026EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40026F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x40026F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40026F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONArray <>4__this;

			[Token(Token = "0x40026F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x17000381")]
			private JSONNode System.Collections.Generic.IEnumerator<SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6001F8F")]
				[Address(RVA = "0xA57AC0", Offset = "0xA57AC0", VA = "0xA57AC0", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000382")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F91")]
				[Address(RVA = "0xA57B2C", Offset = "0xA57B2C", VA = "0xA57B2C", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F8B")]
			[Address(RVA = "0xA572E0", Offset = "0xA572E0", VA = "0xA572E0")]
			[DebuggerHidden]
			public <get_Children>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6001F8C")]
			[Address(RVA = "0xA578F4", Offset = "0xA578F4", VA = "0xA578F4", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F8D")]
			[Address(RVA = "0xA57968", Offset = "0xA57968", VA = "0xA57968", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F8E")]
			[Address(RVA = "0xA57910", Offset = "0xA57910", VA = "0xA57910")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001F90")]
			[Address(RVA = "0xA57AC8", Offset = "0xA57AC8", VA = "0xA57AC8", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001F92")]
			[Address(RVA = "0xA57B34", Offset = "0xA57B34", VA = "0xA57B34", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001F93")]
			[Address(RVA = "0xA57BE4", Offset = "0xA57BE4", VA = "0xA57BE4", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000543")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7FB37C", Offset = "0x7FB37C")]
		private sealed class <GetEnumerator>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40026F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40026F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40026F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public JSONArray <>4__this;

			[Token(Token = "0x40026F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private List<JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x17000383")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F98")]
				[Address(RVA = "0xA57880", Offset = "0xA57880", VA = "0xA57880", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000384")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F9A")]
				[Address(RVA = "0xA578EC", Offset = "0xA578EC", VA = "0xA578EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F94")]
			[Address(RVA = "0xA5738C", Offset = "0xA5738C", VA = "0xA5738C")]
			[DebuggerHidden]
			public <GetEnumerator>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6001F95")]
			[Address(RVA = "0xA576B4", Offset = "0xA576B4", VA = "0xA576B4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F96")]
			[Address(RVA = "0xA57728", Offset = "0xA57728", VA = "0xA57728", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F97")]
			[Address(RVA = "0xA576D0", Offset = "0xA576D0", VA = "0xA576D0")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001F99")]
			[Address(RVA = "0xA57888", Offset = "0xA57888", VA = "0xA57888", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<JSONNode> m_List;

		[Token(Token = "0x4001FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool inline;

		[Token(Token = "0x1700023A")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6001467")]
			[Address(RVA = "0xA56B18", Offset = "0xA56B18", VA = "0xA56B18", Slot = "25")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x1700023B")]
		public override bool IsArray
		{
			[Token(Token = "0x6001468")]
			[Address(RVA = "0xA56B20", Offset = "0xA56B20", VA = "0xA56B20", Slot = "15")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700023C")]
		public override JSONNode Item
		{
			[Token(Token = "0x6001469")]
			[Address(RVA = "0xA56B28", Offset = "0xA56B28", VA = "0xA56B28", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600146A")]
			[Address(RVA = "0xA56C4C", Offset = "0xA56C4C", VA = "0xA56C4C", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x1700023D")]
		public override JSONNode Item
		{
			[Token(Token = "0x600146B")]
			[Address(RVA = "0xA56F28", Offset = "0xA56F28", VA = "0xA56F28", Slot = "6")]
			get
			{
				return null;
			}
			[Token(Token = "0x600146C")]
			[Address(RVA = "0xA56F88", Offset = "0xA56F88", VA = "0xA56F88", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1700023E")]
		public override int Count
		{
			[Token(Token = "0x600146D")]
			[Address(RVA = "0xA57038", Offset = "0xA57038", VA = "0xA57038", Slot = "10")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700023F")]
		public override IEnumerable<JSONNode> Children
		{
			[Token(Token = "0x6001471")]
			[Address(RVA = "0xA5725C", Offset = "0xA5725C", VA = "0xA5725C", Slot = "22")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8050B8", Offset = "0x8050B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600146E")]
		[Address(RVA = "0xA5708C", Offset = "0xA5708C", VA = "0xA5708C", Slot = "17")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0xA5713C", Offset = "0xA5713C", VA = "0xA5713C", Slot = "20")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x6001470")]
		[Address(RVA = "0xA571EC", Offset = "0xA571EC", VA = "0xA571EC", Slot = "21")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x6001472")]
		[Address(RVA = "0xA57318", Offset = "0xA57318", VA = "0xA57318", Slot = "37")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x80511C", Offset = "0x80511C")]
		public IEnumerator GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001473")]
		[Address(RVA = "0xA573B8", Offset = "0xA573B8", VA = "0xA573B8", Slot = "36")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x6001474")]
		[Address(RVA = "0xA5749C", Offset = "0xA5749C", VA = "0xA5749C", Slot = "24")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x6001475")]
		[Address(RVA = "0xA5761C", Offset = "0xA5761C", VA = "0xA5761C")]
		public JSONArray()
		{
		}
	}
	[Token(Token = "0x20002AE")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x7F6F38", Offset = "0x7F6F38")]
	public class JSONObject : JSONNode, IEnumerable
	{
		[Token(Token = "0x2000544")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7FB38C", Offset = "0x7FB38C")]
		private sealed class <>c__DisplayClass17_0
		{
			[Token(Token = "0x40026F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public JSONNode aNode;

			[Token(Token = "0x6001F9B")]
			[Address(RVA = "0xA5BFDC", Offset = "0xA5BFDC", VA = "0xA5BFDC")]
			public <>c__DisplayClass17_0()
			{
			}

			[Token(Token = "0x6001F9C")]
			[Address(RVA = "0xA5C5E8", Offset = "0xA5C5E8", VA = "0xA5C5E8")]
			internal bool <Remove>b__0(KeyValuePair<string, JSONNode> k)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000545")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7FB39C", Offset = "0x7FB39C")]
		private sealed class <get_Children>d__19 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40026F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40026FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x40026FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40026FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONObject <>4__this;

			[Token(Token = "0x40026FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Dictionary<string, JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x17000385")]
			private JSONNode System.Collections.Generic.IEnumerator<SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6001FA1")]
				[Address(RVA = "0xA5CAA0", Offset = "0xA5CAA0", VA = "0xA5CAA0", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000386")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FA3")]
				[Address(RVA = "0xA5CB0C", Offset = "0xA5CB0C", VA = "0xA5CB0C", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F9D")]
			[Address(RVA = "0xA5C068", Offset = "0xA5C068", VA = "0xA5C068")]
			[DebuggerHidden]
			public <get_Children>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6001F9E")]
			[Address(RVA = "0xA5C8C8", Offset = "0xA5C8C8", VA = "0xA5C8C8", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F9F")]
			[Address(RVA = "0xA5C93C", Offset = "0xA5C93C", VA = "0xA5C93C", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FA0")]
			[Address(RVA = "0xA5C8E4", Offset = "0xA5C8E4", VA = "0xA5C8E4")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001FA2")]
			[Address(RVA = "0xA5CAA8", Offset = "0xA5CAA8", VA = "0xA5CAA8", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001FA4")]
			[Address(RVA = "0xA5CB14", Offset = "0xA5CB14", VA = "0xA5CB14", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001FA5")]
			[Address(RVA = "0xA5CBC4", Offset = "0xA5CBC4", VA = "0xA5CBC4", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000546")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7FB3AC", Offset = "0x7FB3AC")]
		private sealed class <GetEnumerator>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40026FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40026FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002700")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public JSONObject <>4__this;

			[Token(Token = "0x4002701")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Dictionary<string, JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x17000387")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FAA")]
				[Address(RVA = "0xA5C854", Offset = "0xA5C854", VA = "0xA5C854", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000388")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FAC")]
				[Address(RVA = "0xA5C8C0", Offset = "0xA5C8C0", VA = "0xA5C8C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FA6")]
			[Address(RVA = "0xA5C114", Offset = "0xA5C114", VA = "0xA5C114")]
			[DebuggerHidden]
			public <GetEnumerator>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x6001FA7")]
			[Address(RVA = "0xA5C660", Offset = "0xA5C660", VA = "0xA5C660", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FA8")]
			[Address(RVA = "0xA5C6D4", Offset = "0xA5C6D4", VA = "0xA5C6D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FA9")]
			[Address(RVA = "0xA5C67C", Offset = "0xA5C67C", VA = "0xA5C67C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001FAB")]
			[Address(RVA = "0xA5C85C", Offset = "0xA5C85C", VA = "0xA5C85C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<string, JSONNode> m_Dict;

		[Token(Token = "0x4001FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool inline;

		[Token(Token = "0x17000240")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6001476")]
			[Address(RVA = "0xA5B78C", Offset = "0xA5B78C", VA = "0xA5B78C", Slot = "25")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x17000241")]
		public override bool IsObject
		{
			[Token(Token = "0x6001477")]
			[Address(RVA = "0xA5B794", Offset = "0xA5B794", VA = "0xA5B794", Slot = "16")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000242")]
		public override JSONNode Item
		{
			[Token(Token = "0x6001478")]
			[Address(RVA = "0xA5B79C", Offset = "0xA5B79C", VA = "0xA5B79C", Slot = "6")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001479")]
			[Address(RVA = "0xA5B858", Offset = "0xA5B858", VA = "0xA5B858", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000243")]
		public override JSONNode Item
		{
			[Token(Token = "0x600147A")]
			[Address(RVA = "0xA5B964", Offset = "0xA5B964", VA = "0xA5B964", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600147B")]
			[Address(RVA = "0xA5B9FC", Offset = "0xA5B9FC", VA = "0xA5B9FC", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000244")]
		public override int Count
		{
			[Token(Token = "0x600147C")]
			[Address(RVA = "0xA5BB0C", Offset = "0xA5BB0C", VA = "0xA5BB0C", Slot = "10")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000245")]
		public override IEnumerable<JSONNode> Children
		{
			[Token(Token = "0x6001481")]
			[Address(RVA = "0xA5BFE4", Offset = "0xA5BFE4", VA = "0xA5BFE4", Slot = "22")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x805180", Offset = "0x805180")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600147D")]
		[Address(RVA = "0xA5BB64", Offset = "0xA5BB64", VA = "0xA5BB64", Slot = "17")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x600147E")]
		[Address(RVA = "0xA5BCDC", Offset = "0xA5BCDC", VA = "0xA5BCDC", Slot = "19")]
		public override JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x600147F")]
		[Address(RVA = "0xA5BDA0", Offset = "0xA5BDA0", VA = "0xA5BDA0", Slot = "20")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x6001480")]
		[Address(RVA = "0xA5BE5C", Offset = "0xA5BE5C", VA = "0xA5BE5C", Slot = "21")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x6001482")]
		[Address(RVA = "0xA5C0A0", Offset = "0xA5C0A0", VA = "0xA5C0A0", Slot = "37")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8051E4", Offset = "0x8051E4")]
		public IEnumerator GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001483")]
		[Address(RVA = "0xA5C140", Offset = "0xA5C140", VA = "0xA5C140", Slot = "36")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x6001484")]
		[Address(RVA = "0xA5C304", Offset = "0xA5C304", VA = "0xA5C304", Slot = "24")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x6001485")]
		[Address(RVA = "0xA581F8", Offset = "0xA581F8", VA = "0xA581F8")]
		public JSONObject()
		{
		}
	}
	[Token(Token = "0x20002AF")]
	public class JSONString : JSONNode
	{
		[Token(Token = "0x4001FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string m_Data;

		[Token(Token = "0x17000246")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6001486")]
			[Address(RVA = "0xA5CBC8", Offset = "0xA5CBC8", VA = "0xA5CBC8", Slot = "25")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x17000247")]
		public override bool IsString
		{
			[Token(Token = "0x6001487")]
			[Address(RVA = "0xA5CBD0", Offset = "0xA5CBD0", VA = "0xA5CBD0", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000248")]
		public override string Value
		{
			[Token(Token = "0x6001488")]
			[Address(RVA = "0xA5CBD8", Offset = "0xA5CBD8", VA = "0xA5CBD8", Slot = "8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001489")]
			[Address(RVA = "0xA5CBE0", Offset = "0xA5CBE0", VA = "0xA5CBE0", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x600148A")]
		[Address(RVA = "0xA590E0", Offset = "0xA590E0", VA = "0xA590E0")]
		public JSONString(string aData)
		{
		}

		[Token(Token = "0x600148B")]
		[Address(RVA = "0xA5CBE8", Offset = "0xA5CBE8", VA = "0xA5CBE8", Slot = "36")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x600148C")]
		[Address(RVA = "0xA5CC3C", Offset = "0xA5CC3C", VA = "0xA5CC3C", Slot = "24")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x600148D")]
		[Address(RVA = "0xA5CCF8", Offset = "0xA5CCF8", VA = "0xA5CCF8", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600148E")]
		[Address(RVA = "0xA5CE10", Offset = "0xA5CE10", VA = "0xA5CE10", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x20002B0")]
	public class JSONNumber : JSONNode
	{
		[Token(Token = "0x4001FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private double m_Data;

		[Token(Token = "0x17000249")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x600148F")]
			[Address(RVA = "0xA5B368", Offset = "0xA5B368", VA = "0xA5B368", Slot = "25")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x1700024A")]
		public override bool IsNumber
		{
			[Token(Token = "0x6001490")]
			[Address(RVA = "0xA5B370", Offset = "0xA5B370", VA = "0xA5B370", Slot = "11")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700024B")]
		public override string Value
		{
			[Token(Token = "0x6001491")]
			[Address(RVA = "0xA5B378", Offset = "0xA5B378", VA = "0xA5B378", Slot = "8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001492")]
			[Address(RVA = "0xA5B384", Offset = "0xA5B384", VA = "0xA5B384", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x1700024C")]
		public override double AsDouble
		{
			[Token(Token = "0x6001493")]
			[Address(RVA = "0xA5B410", Offset = "0xA5B410", VA = "0xA5B410", Slot = "26")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001494")]
			[Address(RVA = "0xA5B418", Offset = "0xA5B418", VA = "0xA5B418", Slot = "27")]
			set
			{
			}
		}

		[Token(Token = "0x6001495")]
		[Address(RVA = "0xA5846C", Offset = "0xA5846C", VA = "0xA5846C")]
		public JSONNumber(double aData)
		{
		}

		[Token(Token = "0x6001496")]
		[Address(RVA = "0xA5B420", Offset = "0xA5B420", VA = "0xA5B420")]
		public JSONNumber(string aData)
		{
		}

		[Token(Token = "0x6001497")]
		[Address(RVA = "0xA5B4A8", Offset = "0xA5B4A8", VA = "0xA5B4A8", Slot = "36")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x6001498")]
		[Address(RVA = "0xA5B4FC", Offset = "0xA5B4FC", VA = "0xA5B4FC", Slot = "24")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x6001499")]
		[Address(RVA = "0xA5B520", Offset = "0xA5B520", VA = "0xA5B520")]
		private static bool IsNumeric(object value)
		{
			return default(bool);
		}

		[Token(Token = "0x600149A")]
		[Address(RVA = "0xA5B650", Offset = "0xA5B650", VA = "0xA5B650", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600149B")]
		[Address(RVA = "0xA5B780", Offset = "0xA5B780", VA = "0xA5B780", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x20002B1")]
	public class JSONBool : JSONNode
	{
		[Token(Token = "0x4001FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool m_Data;

		[Token(Token = "0x1700024D")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x600149C")]
			[Address(RVA = "0xA57BE8", Offset = "0xA57BE8", VA = "0xA57BE8", Slot = "25")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x1700024E")]
		public override bool IsBoolean
		{
			[Token(Token = "0x600149D")]
			[Address(RVA = "0xA57BF0", Offset = "0xA57BF0", VA = "0xA57BF0", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700024F")]
		public override string Value
		{
			[Token(Token = "0x600149E")]
			[Address(RVA = "0xA57BF8", Offset = "0xA57BF8", VA = "0xA57BF8", Slot = "8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600149F")]
			[Address(RVA = "0xA57C04", Offset = "0xA57C04", VA = "0xA57C04", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x17000250")]
		public override bool AsBool
		{
			[Token(Token = "0x60014A0")]
			[Address(RVA = "0xA57C90", Offset = "0xA57C90", VA = "0xA57C90", Slot = "32")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014A1")]
			[Address(RVA = "0xA57C98", Offset = "0xA57C98", VA = "0xA57C98", Slot = "33")]
			set
			{
			}
		}

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0xA57CA4", Offset = "0xA57CA4", VA = "0xA57CA4")]
		public JSONBool(bool aData)
		{
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0xA57D24", Offset = "0xA57D24", VA = "0xA57D24")]
		public JSONBool(string aData)
		{
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0xA57DAC", Offset = "0xA57DAC", VA = "0xA57DAC", Slot = "36")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0xA57DFC", Offset = "0xA57DFC", VA = "0xA57DFC", Slot = "24")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0xA57E7C", Offset = "0xA57E7C", VA = "0xA57E7C", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0xA57F04", Offset = "0xA57F04", VA = "0xA57F04", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x20002B2")]
	public class JSONNull : JSONNode
	{
		[Token(Token = "0x17000251")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x60014A8")]
			[Address(RVA = "0xA5B1D0", Offset = "0xA5B1D0", VA = "0xA5B1D0", Slot = "25")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x17000252")]
		public override bool IsNull
		{
			[Token(Token = "0x60014A9")]
			[Address(RVA = "0xA5B1D8", Offset = "0xA5B1D8", VA = "0xA5B1D8", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000253")]
		public override string Value
		{
			[Token(Token = "0x60014AA")]
			[Address(RVA = "0xA5B1E0", Offset = "0xA5B1E0", VA = "0xA5B1E0", Slot = "8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014AB")]
			[Address(RVA = "0xA5B228", Offset = "0xA5B228", VA = "0xA5B228", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x17000254")]
		public override bool AsBool
		{
			[Token(Token = "0x60014AC")]
			[Address(RVA = "0xA5B22C", Offset = "0xA5B22C", VA = "0xA5B22C", Slot = "32")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014AD")]
			[Address(RVA = "0xA5B234", Offset = "0xA5B234", VA = "0xA5B234", Slot = "33")]
			set
			{
			}
		}

		[Token(Token = "0x60014AE")]
		[Address(RVA = "0xA5B238", Offset = "0xA5B238", VA = "0xA5B238", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0xA5B2D4", Offset = "0xA5B2D4", VA = "0xA5B2D4", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0xA5B2DC", Offset = "0xA5B2DC", VA = "0xA5B2DC", Slot = "36")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0xA5B308", Offset = "0xA5B308", VA = "0xA5B308", Slot = "24")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0xA56EC0", Offset = "0xA56EC0", VA = "0xA56EC0")]
		public JSONNull()
		{
		}
	}
	[Token(Token = "0x20002B3")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x7F6F70", Offset = "0x7F6F70")]
	internal class JSONLazyCreator : JSONNode
	{
		[Token(Token = "0x4001FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private JSONNode m_Node;

		[Token(Token = "0x4001FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string m_Key;

		[Token(Token = "0x17000255")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x60014B3")]
			[Address(RVA = "0xA57F10", Offset = "0xA57F10", VA = "0xA57F10", Slot = "25")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x17000256")]
		public override JSONNode Item
		{
			[Token(Token = "0x60014B7")]
			[Address(RVA = "0xA58000", Offset = "0xA58000", VA = "0xA58000", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014B8")]
			[Address(RVA = "0xA58060", Offset = "0xA58060", VA = "0xA58060", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000257")]
		public override JSONNode Item
		{
			[Token(Token = "0x60014B9")]
			[Address(RVA = "0xA580F0", Offset = "0xA580F0", VA = "0xA580F0", Slot = "6")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014BA")]
			[Address(RVA = "0xA58160", Offset = "0xA58160", VA = "0xA58160", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000258")]
		public override int AsInt
		{
			[Token(Token = "0x60014C1")]
			[Address(RVA = "0xA58400", Offset = "0xA58400", VA = "0xA58400", Slot = "28")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60014C2")]
			[Address(RVA = "0xA584E8", Offset = "0xA584E8", VA = "0xA584E8", Slot = "29")]
			set
			{
			}
		}

		[Token(Token = "0x17000259")]
		public override float AsFloat
		{
			[Token(Token = "0x60014C3")]
			[Address(RVA = "0xA58558", Offset = "0xA58558", VA = "0xA58558", Slot = "30")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60014C4")]
			[Address(RVA = "0xA585C4", Offset = "0xA585C4", VA = "0xA585C4", Slot = "31")]
			set
			{
			}
		}

		[Token(Token = "0x1700025A")]
		public override double AsDouble
		{
			[Token(Token = "0x60014C5")]
			[Address(RVA = "0xA58634", Offset = "0xA58634", VA = "0xA58634", Slot = "26")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60014C6")]
			[Address(RVA = "0xA586A0", Offset = "0xA586A0", VA = "0xA586A0", Slot = "27")]
			set
			{
			}
		}

		[Token(Token = "0x1700025B")]
		public override bool AsBool
		{
			[Token(Token = "0x60014C7")]
			[Address(RVA = "0xA58710", Offset = "0xA58710", VA = "0xA58710", Slot = "32")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014C8")]
			[Address(RVA = "0xA5877C", Offset = "0xA5877C", VA = "0xA5877C", Slot = "33")]
			set
			{
			}
		}

		[Token(Token = "0x1700025C")]
		public override JSONArray AsArray
		{
			[Token(Token = "0x60014C9")]
			[Address(RVA = "0xA587EC", Offset = "0xA587EC", VA = "0xA587EC", Slot = "34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025D")]
		public override JSONObject AsObject
		{
			[Token(Token = "0x60014CA")]
			[Address(RVA = "0xA58854", Offset = "0xA58854", VA = "0xA58854", Slot = "35")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0xA56BD0", Offset = "0xA56BD0", VA = "0xA56BD0")]
		public JSONLazyCreator(JSONNode aNode)
		{
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0xA57F18", Offset = "0xA57F18", VA = "0xA57F18")]
		public JSONLazyCreator(JSONNode aNode, string aKey)
		{
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0xA57F98", Offset = "0xA57F98", VA = "0xA57F98")]
		private void Set(JSONNode aVal)
		{
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0xA58288", Offset = "0xA58288", VA = "0xA58288", Slot = "18")]
		public override void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0xA58318", Offset = "0xA58318", VA = "0xA58318", Slot = "17")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0xA583B0", Offset = "0xA583B0", VA = "0xA583B0")]
		public static bool operator ==(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0xA583C8", Offset = "0xA583C8", VA = "0xA583C8")]
		public static bool operator !=(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0xA583E0", Offset = "0xA583E0", VA = "0xA583E0", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0xA583F8", Offset = "0xA583F8", VA = "0xA583F8", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0xA588BC", Offset = "0xA588BC", VA = "0xA588BC", Slot = "24")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}
	}
	[Token(Token = "0x20002B4")]
	public static class JSON
	{
		[Token(Token = "0x60014CC")]
		[Address(RVA = "0xA564D8", Offset = "0xA564D8", VA = "0xA564D8")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}
	}
}
namespace Spektr
{
	[Token(Token = "0x20002B5")]
	public class LightningMesh : ScriptableObject
	{
		[Token(Token = "0x4001FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int _lineCount;

		[Token(Token = "0x4001FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _vertexCount;

		[Token(Token = "0x4001FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		private Mesh _mesh;

		[Token(Token = "0x1700025E")]
		public int lineCount
		{
			[Token(Token = "0x60014CD")]
			[Address(RVA = "0x9F66F0", Offset = "0x9F66F0", VA = "0x9F66F0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700025F")]
		public int vertexCount
		{
			[Token(Token = "0x60014CE")]
			[Address(RVA = "0x9F66F8", Offset = "0x9F66F8", VA = "0x9F66F8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000260")]
		public Mesh sharedMesh
		{
			[Token(Token = "0x60014CF")]
			[Address(RVA = "0x9F6700", Offset = "0x9F6700", VA = "0x9F6700")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014D0")]
		[Address(RVA = "0x9F6708", Offset = "0x9F6708", VA = "0x9F6708")]
		public void RebuildMesh()
		{
		}

		[Token(Token = "0x60014D1")]
		[Address(RVA = "0x9F6AC4", Offset = "0x9F6AC4", VA = "0x9F6AC4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60014D2")]
		[Address(RVA = "0x9F6B88", Offset = "0x9F6B88", VA = "0x9F6B88")]
		public LightningMesh()
		{
		}
	}
	[Token(Token = "0x20002B6")]
	[ExecuteInEditMode]
	public class LightningRenderer : MonoBehaviour
	{
		[Token(Token = "0x4001FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _emitterTransform;

		[Token(Token = "0x4001FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Vector3 _emitterPosition;

		[Token(Token = "0x4001FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform _receiverTransform;

		[Token(Token = "0x4001FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Vector3 _receiverPosition;

		[Token(Token = "0x4001FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8010EC", Offset = "0x8010EC")]
		private float _throttle;

		[Token(Token = "0x4001FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float _pulseInterval;

		[Token(Token = "0x4001FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x80113C", Offset = "0x80113C")]
		private float _boltLength;

		[Token(Token = "0x4001FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x80117C", Offset = "0x80117C")]
		private float _lengthRandomness;

		[Token(Token = "0x4001FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private float _noiseAmplitude;

		[Token(Token = "0x4001FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float _noiseFrequency;

		[Token(Token = "0x4001FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private float _noiseMotion;

		[Token(Token = "0x4001FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x8011EC", Offset = "0x8011EC")]
		private Color _color;

		[Token(Token = "0x4001FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private LightningMesh _mesh;

		[Token(Token = "0x4001FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private int _randomSeed;

		[Token(Token = "0x4001FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		[HideInInspector]
		private Shader _shader;

		[Token(Token = "0x4001FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Material _material;

		[Token(Token = "0x4001FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private MaterialPropertyBlock _materialProps;

		[Token(Token = "0x17000261")]
		public Transform emitterTransform
		{
			[Token(Token = "0x60014D3")]
			[Address(RVA = "0x9F6B9C", Offset = "0x9F6B9C", VA = "0x9F6B9C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014D4")]
			[Address(RVA = "0x9F6BA4", Offset = "0x9F6BA4", VA = "0x9F6BA4")]
			set
			{
			}
		}

		[Token(Token = "0x17000262")]
		public Vector3 emitterPosition
		{
			[Token(Token = "0x60014D5")]
			[Address(RVA = "0x9F6BAC", Offset = "0x9F6BAC", VA = "0x9F6BAC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60014D6")]
			[Address(RVA = "0x9F6C44", Offset = "0x9F6C44", VA = "0x9F6C44")]
			set
			{
			}
		}

		[Token(Token = "0x17000263")]
		public Transform receiverTransform
		{
			[Token(Token = "0x60014D7")]
			[Address(RVA = "0x9F6C50", Offset = "0x9F6C50", VA = "0x9F6C50")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014D8")]
			[Address(RVA = "0x9F6C58", Offset = "0x9F6C58", VA = "0x9F6C58")]
			set
			{
			}
		}

		[Token(Token = "0x17000264")]
		public Vector3 receiverPosition
		{
			[Token(Token = "0x60014D9")]
			[Address(RVA = "0x9F6C60", Offset = "0x9F6C60", VA = "0x9F6C60")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60014DA")]
			[Address(RVA = "0x9F6CF8", Offset = "0x9F6CF8", VA = "0x9F6CF8")]
			set
			{
			}
		}

		[Token(Token = "0x17000265")]
		public float throttle
		{
			[Token(Token = "0x60014DB")]
			[Address(RVA = "0x9F6D04", Offset = "0x9F6D04", VA = "0x9F6D04")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60014DC")]
			[Address(RVA = "0x9F6D0C", Offset = "0x9F6D0C", VA = "0x9F6D0C")]
			set
			{
			}
		}

		[Token(Token = "0x17000266")]
		public float pulseInterval
		{
			[Token(Token = "0x60014DD")]
			[Address(RVA = "0x9F6D14", Offset = "0x9F6D14", VA = "0x9F6D14")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60014DE")]
			[Address(RVA = "0x9F6D1C", Offset = "0x9F6D1C", VA = "0x9F6D1C")]
			set
			{
			}
		}

		[Token(Token = "0x17000267")]
		public float boltLength
		{
			[Token(Token = "0x60014DF")]
			[Address(RVA = "0x9F6D24", Offset = "0x9F6D24", VA = "0x9F6D24")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60014E0")]
			[Address(RVA = "0x9F6D2C", Offset = "0x9F6D2C", VA = "0x9F6D2C")]
			set
			{
			}
		}

		[Token(Token = "0x17000268")]
		public float lengthRandomness
		{
			[Token(Token = "0x60014E1")]
			[Address(RVA = "0x9F6D34", Offset = "0x9F6D34", VA = "0x9F6D34")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60014E2")]
			[Address(RVA = "0x9F6D3C", Offset = "0x9F6D3C", VA = "0x9F6D3C")]
			set
			{
			}
		}

		[Token(Token = "0x17000269")]
		public float noiseAmplitude
		{
			[Token(Token = "0x60014E3")]
			[Address(RVA = "0x9F6D44", Offset = "0x9F6D44", VA = "0x9F6D44")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60014E4")]
			[Address(RVA = "0x9F6D4C", Offset = "0x9F6D4C", VA = "0x9F6D4C")]
			set
			{
			}
		}

		[Token(Token = "0x1700026A")]
		public float noiseFrequency
		{
			[Token(Token = "0x60014E5")]
			[Address(RVA = "0x9F6D54", Offset = "0x9F6D54", VA = "0x9F6D54")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60014E6")]
			[Address(RVA = "0x9F6D5C", Offset = "0x9F6D5C", VA = "0x9F6D5C")]
			set
			{
			}
		}

		[Token(Token = "0x1700026B")]
		public float noiseMotion
		{
			[Token(Token = "0x60014E7")]
			[Address(RVA = "0x9F6D64", Offset = "0x9F6D64", VA = "0x9F6D64")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60014E8")]
			[Address(RVA = "0x9F6D6C", Offset = "0x9F6D6C", VA = "0x9F6D6C")]
			set
			{
			}
		}

		[Token(Token = "0x1700026C")]
		public Color color
		{
			[Token(Token = "0x60014E9")]
			[Address(RVA = "0x9F6D74", Offset = "0x9F6D74", VA = "0x9F6D74")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60014EA")]
			[Address(RVA = "0x9F6D80", Offset = "0x9F6D80", VA = "0x9F6D80")]
			set
			{
			}
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0x9F6D8C", Offset = "0x9F6D8C", VA = "0x9F6D8C")]
		private void Update()
		{
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0x9F74C4", Offset = "0x9F74C4", VA = "0x9F74C4")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0x9F7544", Offset = "0x9F7544", VA = "0x9F7544")]
		public LightningRenderer()
		{
		}
	}
}
namespace Kino
{
	[Token(Token = "0x20002B7")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7F6FB8", Offset = "0x7F6FB8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7F6FB8", Offset = "0x7F6FB8")]
	public class Bloom : MonoBehaviour
	{
		[Token(Token = "0x4001FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x801294", Offset = "0x801294")]
		private float _radius1;

		[Token(Token = "0x4001FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8012D4", Offset = "0x8012D4")]
		private float _radius2;

		[Token(Token = "0x4001FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x801314", Offset = "0x801314")]
		private float _intensity1;

		[Token(Token = "0x4001FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x801354", Offset = "0x801354")]
		private float _intensity2;

		[Token(Token = "0x4001FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x801394", Offset = "0x801394")]
		private float _threshold;

		[Token(Token = "0x4001FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8013D4", Offset = "0x8013D4")]
		private float _temporalFiltering;

		[Token(Token = "0x4001FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Shader _shader;

		[Token(Token = "0x4001FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material _material;

		[Token(Token = "0x4001FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RenderTexture _accBuffer;

		[Token(Token = "0x1700026D")]
		public float radius1
		{
			[Token(Token = "0x60014EE")]
			[Address(RVA = "0x9AB88C", Offset = "0x9AB88C", VA = "0x9AB88C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60014EF")]
			[Address(RVA = "0x9AB894", Offset = "0x9AB894", VA = "0x9AB894")]
			set
			{
			}
		}

		[Token(Token = "0x1700026E")]
		public float radius2
		{
			[Token(Token = "0x60014F0")]
			[Address(RVA = "0x9AB89C", Offset = "0x9AB89C", VA = "0x9AB89C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60014F1")]
			[Address(RVA = "0x9AB8A4", Offset = "0x9AB8A4", VA = "0x9AB8A4")]
			set
			{
			}
		}

		[Token(Token = "0x1700026F")]
		public float intensity1
		{
			[Token(Token = "0x60014F2")]
			[Address(RVA = "0x9AB8AC", Offset = "0x9AB8AC", VA = "0x9AB8AC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60014F3")]
			[Address(RVA = "0x9AB8B4", Offset = "0x9AB8B4", VA = "0x9AB8B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000270")]
		public float intensity2
		{
			[Token(Token = "0x60014F4")]
			[Address(RVA = "0x9AB8BC", Offset = "0x9AB8BC", VA = "0x9AB8BC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60014F5")]
			[Address(RVA = "0x9AB8C4", Offset = "0x9AB8C4", VA = "0x9AB8C4")]
			set
			{
			}
		}

		[Token(Token = "0x17000271")]
		public float threshold
		{
			[Token(Token = "0x60014F6")]
			[Address(RVA = "0x9AB8CC", Offset = "0x9AB8CC", VA = "0x9AB8CC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60014F7")]
			[Address(RVA = "0x9AB8D4", Offset = "0x9AB8D4", VA = "0x9AB8D4")]
			set
			{
			}
		}

		[Token(Token = "0x17000272")]
		public float temporalFiltering
		{
			[Token(Token = "0x60014F8")]
			[Address(RVA = "0x9AB8DC", Offset = "0x9AB8DC", VA = "0x9AB8DC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60014F9")]
			[Address(RVA = "0x9AB8E4", Offset = "0x9AB8E4", VA = "0x9AB8E4")]
			set
			{
			}
		}

		[Token(Token = "0x60014FA")]
		[Address(RVA = "0x9AB8EC", Offset = "0x9AB8EC", VA = "0x9AB8EC")]
		private RenderTexture GetTempBuffer(int width, int height)
		{
			return null;
		}

		[Token(Token = "0x60014FB")]
		[Address(RVA = "0x9AB904", Offset = "0x9AB904", VA = "0x9AB904")]
		private void ReleaseTempBuffer(RenderTexture rt)
		{
		}

		[Token(Token = "0x60014FC")]
		[Address(RVA = "0x9AB910", Offset = "0x9AB910", VA = "0x9AB910")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60014FD")]
		[Address(RVA = "0x9AC190", Offset = "0x9AC190", VA = "0x9AC190")]
		public Bloom()
		{
		}
	}
	[Token(Token = "0x20002B8")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7F8050", Offset = "0x7F8050")]
	public class Bokeh : MonoBehaviour
	{
		[Token(Token = "0x2000547")]
		public enum SampleCount
		{
			[Token(Token = "0x4002703")]
			Low,
			[Token(Token = "0x4002704")]
			Medium,
			[Token(Token = "0x4002705")]
			High,
			[Token(Token = "0x4002706")]
			UltraHigh
		}

		[Token(Token = "0x4001FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _subject;

		[Token(Token = "0x4001FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _distance;

		[Token(Token = "0x4001FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float _fNumber;

		[Token(Token = "0x4001FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool _useCameraFov;

		[Token(Token = "0x4001FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float _focalLength;

		[Token(Token = "0x4001FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float _maxBlur;

		[Token(Token = "0x4001FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float _irisAngle;

		[Token(Token = "0x4001FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public SampleCount _sampleCount;

		[Token(Token = "0x4001FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private bool _foregroundBlur;

		[Token(Token = "0x4001FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		[SerializeField]
		private bool _visualize;

		[Token(Token = "0x4001FD0")]
		private const float filmWidth = 0.024f;

		[Token(Token = "0x4001FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Shader _shader;

		[Token(Token = "0x4001FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _material;

		[Token(Token = "0x17000273")]
		private Transform subject
		{
			[Token(Token = "0x60014FE")]
			[Address(RVA = "0x9AC1AC", Offset = "0x9AC1AC", VA = "0x9AC1AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014FF")]
			[Address(RVA = "0x9AC1B4", Offset = "0x9AC1B4", VA = "0x9AC1B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000274")]
		private float distance
		{
			[Token(Token = "0x6001500")]
			[Address(RVA = "0x9AC1BC", Offset = "0x9AC1BC", VA = "0x9AC1BC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001501")]
			[Address(RVA = "0x9AC1C4", Offset = "0x9AC1C4", VA = "0x9AC1C4")]
			set
			{
			}
		}

		[Token(Token = "0x17000275")]
		private float fNumber
		{
			[Token(Token = "0x6001502")]
			[Address(RVA = "0x9AC1CC", Offset = "0x9AC1CC", VA = "0x9AC1CC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001503")]
			[Address(RVA = "0x9AC1D4", Offset = "0x9AC1D4", VA = "0x9AC1D4")]
			set
			{
			}
		}

		[Token(Token = "0x17000276")]
		private bool useCameraFov
		{
			[Token(Token = "0x6001504")]
			[Address(RVA = "0x9AC1DC", Offset = "0x9AC1DC", VA = "0x9AC1DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001505")]
			[Address(RVA = "0x9AC1E4", Offset = "0x9AC1E4", VA = "0x9AC1E4")]
			set
			{
			}
		}

		[Token(Token = "0x17000277")]
		private float focalLength
		{
			[Token(Token = "0x6001506")]
			[Address(RVA = "0x9AC1F0", Offset = "0x9AC1F0", VA = "0x9AC1F0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001507")]
			[Address(RVA = "0x9AC1F8", Offset = "0x9AC1F8", VA = "0x9AC1F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000278")]
		private float maxBlur
		{
			[Token(Token = "0x6001508")]
			[Address(RVA = "0x9AC200", Offset = "0x9AC200", VA = "0x9AC200")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001509")]
			[Address(RVA = "0x9AC208", Offset = "0x9AC208", VA = "0x9AC208")]
			set
			{
			}
		}

		[Token(Token = "0x17000279")]
		private float irisAngle
		{
			[Token(Token = "0x600150A")]
			[Address(RVA = "0x9AC210", Offset = "0x9AC210", VA = "0x9AC210")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600150B")]
			[Address(RVA = "0x9AC218", Offset = "0x9AC218", VA = "0x9AC218")]
			set
			{
			}
		}

		[Token(Token = "0x1700027A")]
		private SampleCount sampleCount
		{
			[Token(Token = "0x600150C")]
			[Address(RVA = "0x9AC220", Offset = "0x9AC220", VA = "0x9AC220")]
			get
			{
				return default(SampleCount);
			}
			[Token(Token = "0x600150D")]
			[Address(RVA = "0x9AC228", Offset = "0x9AC228", VA = "0x9AC228")]
			set
			{
			}
		}

		[Token(Token = "0x1700027B")]
		private bool foregroundBlur
		{
			[Token(Token = "0x600150E")]
			[Address(RVA = "0x9AC230", Offset = "0x9AC230", VA = "0x9AC230")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600150F")]
			[Address(RVA = "0x9AC238", Offset = "0x9AC238", VA = "0x9AC238")]
			set
			{
			}
		}

		[Token(Token = "0x1700027C")]
		private int SeparableBlurSteps
		{
			[Token(Token = "0x6001510")]
			[Address(RVA = "0x9AC244", Offset = "0x9AC244", VA = "0x9AC244")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001511")]
		[Address(RVA = "0x9AC278", Offset = "0x9AC278", VA = "0x9AC278")]
		private float CalculateSubjectDistance()
		{
			return default(float);
		}

		[Token(Token = "0x6001512")]
		[Address(RVA = "0x9AC404", Offset = "0x9AC404", VA = "0x9AC404")]
		private float CalculateFocalLength()
		{
			return default(float);
		}

		[Token(Token = "0x6001513")]
		[Address(RVA = "0x9AC4C4", Offset = "0x9AC4C4", VA = "0x9AC4C4")]
		private void SetUpShaderKeywords()
		{
		}

		[Token(Token = "0x6001514")]
		[Address(RVA = "0x9AC63C", Offset = "0x9AC63C", VA = "0x9AC63C")]
		private void SetUpShaderParameters(RenderTexture source)
		{
		}

		[Token(Token = "0x6001515")]
		[Address(RVA = "0x9AC7A8", Offset = "0x9AC7A8", VA = "0x9AC7A8")]
		private void SetSeparableBlurParameter(float dx, float dy)
		{
		}

		[Token(Token = "0x6001516")]
		[Address(RVA = "0x9AC94C", Offset = "0x9AC94C", VA = "0x9AC94C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001517")]
		[Address(RVA = "0x9AC9C4", Offset = "0x9AC9C4", VA = "0x9AC9C4")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001518")]
		[Address(RVA = "0x9ACD38", Offset = "0x9ACD38", VA = "0x9ACD38")]
		public Bokeh()
		{
		}
	}
	[Token(Token = "0x20002B9")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7F80C4", Offset = "0x7F80C4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7F80C4", Offset = "0x7F80C4")]
	public class Fringe : MonoBehaviour
	{
		[Token(Token = "0x2000548")]
		public enum QualityLevel
		{
			[Token(Token = "0x4002708")]
			Low,
			[Token(Token = "0x4002709")]
			High
		}

		[Token(Token = "0x4001FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8014D4", Offset = "0x8014D4")]
		private float _lateralShift;

		[Token(Token = "0x4001FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x801514", Offset = "0x801514")]
		private float _axialStrength;

		[Token(Token = "0x4001FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x801554", Offset = "0x801554")]
		private float _axialShift;

		[Token(Token = "0x4001FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private QualityLevel _axialQuality;

		[Token(Token = "0x4001FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Shader _shader;

		[Token(Token = "0x4001FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Material _material;

		[Token(Token = "0x1700027D")]
		public float lateralShift
		{
			[Token(Token = "0x6001519")]
			[Address(RVA = "0x9ACD74", Offset = "0x9ACD74", VA = "0x9ACD74")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600151A")]
			[Address(RVA = "0x9ACD7C", Offset = "0x9ACD7C", VA = "0x9ACD7C")]
			set
			{
			}
		}

		[Token(Token = "0x1700027E")]
		public float axialStrength
		{
			[Token(Token = "0x600151B")]
			[Address(RVA = "0x9ACD84", Offset = "0x9ACD84", VA = "0x9ACD84")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600151C")]
			[Address(RVA = "0x9ACD8C", Offset = "0x9ACD8C", VA = "0x9ACD8C")]
			set
			{
			}
		}

		[Token(Token = "0x1700027F")]
		public float axialShift
		{
			[Token(Token = "0x600151D")]
			[Address(RVA = "0x9ACD94", Offset = "0x9ACD94", VA = "0x9ACD94")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600151E")]
			[Address(RVA = "0x9ACD9C", Offset = "0x9ACD9C", VA = "0x9ACD9C")]
			set
			{
			}
		}

		[Token(Token = "0x17000280")]
		public QualityLevel axialQuality
		{
			[Token(Token = "0x600151F")]
			[Address(RVA = "0x9ACDA4", Offset = "0x9ACDA4", VA = "0x9ACDA4")]
			get
			{
				return default(QualityLevel);
			}
			[Token(Token = "0x6001520")]
			[Address(RVA = "0x9ACDAC", Offset = "0x9ACDAC", VA = "0x9ACDAC")]
			set
			{
			}
		}

		[Token(Token = "0x6001521")]
		[Address(RVA = "0x9ACDB4", Offset = "0x9ACDB4", VA = "0x9ACDB4")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001522")]
		[Address(RVA = "0x9AD040", Offset = "0x9AD040", VA = "0x9AD040")]
		public Fringe()
		{
		}
	}
}
namespace UnityStandardAssets.Water
{
	[Token(Token = "0x20002BA")]
	[ExecuteInEditMode]
	public class WaterBasic : MonoBehaviour
	{
		[Token(Token = "0x6001523")]
		[Address(RVA = "0x12B1418", Offset = "0x12B1418", VA = "0x12B1418")]
		private void Update()
		{
		}

		[Token(Token = "0x6001524")]
		[Address(RVA = "0x12B1660", Offset = "0x12B1660", VA = "0x12B1660")]
		public WaterBasic()
		{
		}
	}
	[Token(Token = "0x20002BB")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7F816C", Offset = "0x7F816C")]
	public class Displace : MonoBehaviour
	{
		[Token(Token = "0x6001525")]
		[Address(RVA = "0x12AD2B8", Offset = "0x12AD2B8", VA = "0x12AD2B8")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001526")]
		[Address(RVA = "0x12AD2DC", Offset = "0x12AD2DC", VA = "0x12AD2DC")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001527")]
		[Address(RVA = "0x12AD33C", Offset = "0x12AD33C", VA = "0x12AD33C")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001528")]
		[Address(RVA = "0x12AD39C", Offset = "0x12AD39C", VA = "0x12AD39C")]
		public Displace()
		{
		}
	}
	[Token(Token = "0x20002BC")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7F81E0", Offset = "0x7F81E0")]
	public class GerstnerDisplace : Displace
	{
		[Token(Token = "0x6001529")]
		[Address(RVA = "0x12AD3A4", Offset = "0x12AD3A4", VA = "0x12AD3A4")]
		public GerstnerDisplace()
		{
		}
	}
	[Token(Token = "0x20002BD")]
	public class MeshContainer
	{
		[Token(Token = "0x4001FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh mesh;

		[Token(Token = "0x4001FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3[] vertices;

		[Token(Token = "0x4001FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3[] normals;

		[Token(Token = "0x600152A")]
		[Address(RVA = "0x12AD3AC", Offset = "0x12AD3AC", VA = "0x12AD3AC")]
		public MeshContainer(Mesh m)
		{
		}

		[Token(Token = "0x600152B")]
		[Address(RVA = "0x12AD404", Offset = "0x12AD404", VA = "0x12AD404")]
		public void Update()
		{
		}
	}
	[Token(Token = "0x20002BE")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7F8254", Offset = "0x7F8254")]
	public class PlanarReflection : MonoBehaviour
	{
		[Token(Token = "0x4001FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask reflectionMask;

		[Token(Token = "0x4001FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool reflectSkybox;

		[Token(Token = "0x4001FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color clearColor;

		[Token(Token = "0x4001FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string reflectionSampler;

		[Token(Token = "0x4001FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float clipPlaneOffset;

		[Token(Token = "0x4001FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 m_Oldpos;

		[Token(Token = "0x4001FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Camera m_ReflectionCamera;

		[Token(Token = "0x4001FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material m_SharedMaterial;

		[Token(Token = "0x4001FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Camera, bool> m_HelperCameras;

		[Token(Token = "0x600152C")]
		[Address(RVA = "0x12AD448", Offset = "0x12AD448", VA = "0x12AD448")]
		public void Start()
		{
		}

		[Token(Token = "0x600152D")]
		[Address(RVA = "0x12AD568", Offset = "0x12AD568", VA = "0x12AD568")]
		private Camera CreateReflectionCameraFor(Camera cam)
		{
			return null;
		}

		[Token(Token = "0x600152E")]
		[Address(RVA = "0x12AD87C", Offset = "0x12AD87C", VA = "0x12AD87C")]
		private void SetStandardCameraParameter(Camera cam, LayerMask mask)
		{
		}

		[Token(Token = "0x600152F")]
		[Address(RVA = "0x12AD938", Offset = "0x12AD938", VA = "0x12AD938")]
		private RenderTexture CreateTextureFor(Camera cam)
		{
			return null;
		}

		[Token(Token = "0x6001530")]
		[Address(RVA = "0x12ADA44", Offset = "0x12ADA44", VA = "0x12ADA44")]
		public void RenderHelpCameras(Camera currentCam)
		{
		}

		[Token(Token = "0x6001531")]
		[Address(RVA = "0x12AE340", Offset = "0x12AE340", VA = "0x12AE340")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x6001532")]
		[Address(RVA = "0x12AE3A0", Offset = "0x12AE3A0", VA = "0x12AE3A0")]
		public void WaterTileBeingRendered(Transform tr, Camera currentCam)
		{
		}

		[Token(Token = "0x6001533")]
		[Address(RVA = "0x12AE4A0", Offset = "0x12AE4A0", VA = "0x12AE4A0")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001534")]
		[Address(RVA = "0x12AE500", Offset = "0x12AE500", VA = "0x12AE500")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001535")]
		[Address(RVA = "0x12ADBB0", Offset = "0x12ADBB0", VA = "0x12ADBB0")]
		private void RenderReflectionFor(Camera cam, Camera reflectCamera)
		{
		}

		[Token(Token = "0x6001536")]
		[Address(RVA = "0x12AE560", Offset = "0x12AE560", VA = "0x12AE560")]
		private void SaneCameraSettings(Camera helperCam)
		{
		}

		[Token(Token = "0x6001537")]
		[Address(RVA = "0x12AEA74", Offset = "0x12AEA74", VA = "0x12AEA74")]
		private static Matrix4x4 CalculateObliqueMatrix(Matrix4x4 projection, Vector4 clipPlane)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6001538")]
		[Address(RVA = "0x12AE5C8", Offset = "0x12AE5C8", VA = "0x12AE5C8")]
		private static Matrix4x4 CalculateReflectionMatrix(Matrix4x4 reflectionMat, Vector4 plane)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6001539")]
		[Address(RVA = "0x12AECBC", Offset = "0x12AECBC", VA = "0x12AECBC")]
		private static float Sgn(float a)
		{
			return default(float);
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0x12AE88C", Offset = "0x12AE88C", VA = "0x12AE88C")]
		private Vector4 CameraSpacePlane(Camera cam, Vector3 pos, Vector3 normal, float sideSign)
		{
			return default(Vector4);
		}

		[Token(Token = "0x600153B")]
		[Address(RVA = "0x12AECDC", Offset = "0x12AECDC", VA = "0x12AECDC")]
		public PlanarReflection()
		{
		}
	}
	[Token(Token = "0x20002BF")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7F82C8", Offset = "0x7F82C8")]
	[ExecuteInEditMode]
	public class SpecularLighting : MonoBehaviour
	{
		[Token(Token = "0x4001FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform specularLight;

		[Token(Token = "0x4001FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private WaterBase m_WaterBase;

		[Token(Token = "0x600153C")]
		[Address(RVA = "0x12AED50", Offset = "0x12AED50", VA = "0x12AED50")]
		public void Start()
		{
		}

		[Token(Token = "0x600153D")]
		[Address(RVA = "0x12AEE40", Offset = "0x12AEE40", VA = "0x12AEE40")]
		public void Update()
		{
		}

		[Token(Token = "0x600153E")]
		[Address(RVA = "0x12AF070", Offset = "0x12AF070", VA = "0x12AF070")]
		public SpecularLighting()
		{
		}
	}
	[Token(Token = "0x20002C0")]
	[ExecuteInEditMode]
	public class Water : MonoBehaviour
	{
		[Token(Token = "0x2000549")]
		public enum WaterMode
		{
			[Token(Token = "0x400270B")]
			Simple,
			[Token(Token = "0x400270C")]
			Reflective,
			[Token(Token = "0x400270D")]
			Refractive
		}

		[Token(Token = "0x4001FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WaterMode waterMode;

		[Token(Token = "0x4001FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool disablePixelLights;

		[Token(Token = "0x4001FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int textureSize;

		[Token(Token = "0x4001FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float clipPlaneOffset;

		[Token(Token = "0x4001FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LayerMask reflectLayers;

		[Token(Token = "0x4001FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public LayerMask refractLayers;

		[Token(Token = "0x4001FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<Camera, Camera> m_ReflectionCameras;

		[Token(Token = "0x4001FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<Camera, Camera> m_RefractionCameras;

		[Token(Token = "0x4001FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RenderTexture m_ReflectionTexture;

		[Token(Token = "0x4001FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RenderTexture m_RefractionTexture;

		[Token(Token = "0x4001FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private WaterMode m_HardwareWaterSupport;

		[Token(Token = "0x4001FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_OldReflectionTextureSize;

		[Token(Token = "0x4001FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_OldRefractionTextureSize;

		[Token(Token = "0x4001FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool s_InsideWater;

		[Token(Token = "0x600153F")]
		[Address(RVA = "0x12AF078", Offset = "0x12AF078", VA = "0x12AF078")]
		public void OnWillRenderObject()
		{
		}

		[Token(Token = "0x6001540")]
		[Address(RVA = "0x12B0AD4", Offset = "0x12B0AD4", VA = "0x12B0AD4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001541")]
		[Address(RVA = "0x12B0DD0", Offset = "0x12B0DD0", VA = "0x12B0DD0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001542")]
		[Address(RVA = "0x12B03E8", Offset = "0x12B03E8", VA = "0x12B03E8")]
		private void UpdateCameraModes(Camera src, Camera dest)
		{
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0x12AF9DC", Offset = "0x12AF9DC", VA = "0x12AF9DC")]
		private void CreateWaterObjects(Camera currentCamera, out Camera reflectionCamera, out Camera refractionCamera)
		{
		}

		[Token(Token = "0x6001544")]
		[Address(RVA = "0x12AF9C8", Offset = "0x12AF9C8", VA = "0x12AF9C8")]
		private WaterMode GetWaterMode()
		{
			return default(WaterMode);
		}

		[Token(Token = "0x6001545")]
		[Address(RVA = "0x12AF86C", Offset = "0x12AF86C", VA = "0x12AF86C")]
		private WaterMode FindHardwareWaterSupport()
		{
			return default(WaterMode);
		}

		[Token(Token = "0x6001546")]
		[Address(RVA = "0x12B08EC", Offset = "0x12B08EC", VA = "0x12B08EC")]
		private Vector4 CameraSpacePlane(Camera cam, Vector3 pos, Vector3 normal, float sideSign)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6001547")]
		[Address(RVA = "0x12B0648", Offset = "0x12B0648", VA = "0x12B0648")]
		private static void CalculateReflectionMatrix(ref Matrix4x4 reflectionMat, Vector4 plane)
		{
		}

		[Token(Token = "0x6001548")]
		[Address(RVA = "0x12B1064", Offset = "0x12B1064", VA = "0x12B1064")]
		public Water()
		{
		}
	}
	[Token(Token = "0x20002C1")]
	public enum WaterQuality
	{
		[Token(Token = "0x4001FF6")]
		High = 2,
		[Token(Token = "0x4001FF7")]
		Medium = 1,
		[Token(Token = "0x4001FF8")]
		Low = 0
	}
	[Token(Token = "0x20002C2")]
	[ExecuteInEditMode]
	public class WaterBase : MonoBehaviour
	{
		[Token(Token = "0x4001FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material sharedMaterial;

		[Token(Token = "0x4001FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WaterQuality waterQuality;

		[Token(Token = "0x4001FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool edgeBlend;

		[Token(Token = "0x6001549")]
		[Address(RVA = "0x12B1140", Offset = "0x12B1140", VA = "0x12B1140")]
		public void UpdateShader()
		{
		}

		[Token(Token = "0x600154A")]
		[Address(RVA = "0x12B12C4", Offset = "0x12B12C4", VA = "0x12B12C4")]
		public void WaterTileBeingRendered(Transform tr, Camera currentCam)
		{
		}

		[Token(Token = "0x600154B")]
		[Address(RVA = "0x12B137C", Offset = "0x12B137C", VA = "0x12B137C")]
		public void Update()
		{
		}

		[Token(Token = "0x600154C")]
		[Address(RVA = "0x12B1400", Offset = "0x12B1400", VA = "0x12B1400")]
		public WaterBase()
		{
		}
	}
	[Token(Token = "0x20002C3")]
	[ExecuteInEditMode]
	public class WaterTile : MonoBehaviour
	{
		[Token(Token = "0x4001FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlanarReflection reflection;

		[Token(Token = "0x4001FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WaterBase waterBase;

		[Token(Token = "0x600154D")]
		[Address(RVA = "0x12B1668", Offset = "0x12B1668", VA = "0x12B1668")]
		public void Start()
		{
		}

		[Token(Token = "0x600154E")]
		[Address(RVA = "0x12B166C", Offset = "0x12B166C", VA = "0x12B166C")]
		private void AcquireComponents()
		{
		}

		[Token(Token = "0x600154F")]
		[Address(RVA = "0x12B1810", Offset = "0x12B1810", VA = "0x12B1810")]
		public void OnWillRenderObject()
		{
		}

		[Token(Token = "0x6001550")]
		[Address(RVA = "0x12B1924", Offset = "0x12B1924", VA = "0x12B1924")]
		public WaterTile()
		{
		}
	}
}
namespace UnityStandardAssets.CrossPlatformInput
{
	[Token(Token = "0x20002C4")]
	public class AxisTouchButton : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
	{
		[Token(Token = "0x4001FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string axisName;

		[Token(Token = "0x4001FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float axisValue;

		[Token(Token = "0x4002000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float responseSpeed;

		[Token(Token = "0x4002001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float returnToCentreSpeed;

		[Token(Token = "0x4002002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AxisTouchButton m_PairedWith;

		[Token(Token = "0x4002003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CrossPlatformInputManager.VirtualAxis m_Axis;

		[Token(Token = "0x6001551")]
		[Address(RVA = "0xA0DF8C", Offset = "0xA0DF8C", VA = "0xA0DF8C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001552")]
		[Address(RVA = "0xA0E228", Offset = "0xA0E228", VA = "0xA0E228")]
		private void FindPairedButton()
		{
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0xA0E3AC", Offset = "0xA0E3AC", VA = "0xA0E3AC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0xA0E42C", Offset = "0xA0E42C", VA = "0xA0E42C", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x6001555")]
		[Address(RVA = "0xA0E518", Offset = "0xA0E518", VA = "0xA0E518", Slot = "5")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x6001556")]
		[Address(RVA = "0xA0E5C4", Offset = "0xA0E5C4", VA = "0xA0E5C4")]
		public AxisTouchButton()
		{
		}
	}
	[Token(Token = "0x20002C5")]
	public class ButtonHandler : MonoBehaviour
	{
		[Token(Token = "0x4002004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Name;

		[Token(Token = "0x6001557")]
		[Address(RVA = "0xA0E62C", Offset = "0xA0E62C", VA = "0xA0E62C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001558")]
		[Address(RVA = "0xA0E630", Offset = "0xA0E630", VA = "0xA0E630")]
		public void SetDownState()
		{
		}

		[Token(Token = "0x6001559")]
		[Address(RVA = "0xA0E718", Offset = "0xA0E718", VA = "0xA0E718")]
		public void SetUpState()
		{
		}

		[Token(Token = "0x600155A")]
		[Address(RVA = "0xA0E800", Offset = "0xA0E800", VA = "0xA0E800")]
		public void SetAxisPositiveState()
		{
		}

		[Token(Token = "0x600155B")]
		[Address(RVA = "0xA0E8E8", Offset = "0xA0E8E8", VA = "0xA0E8E8")]
		public void SetAxisNeutralState()
		{
		}

		[Token(Token = "0x600155C")]
		[Address(RVA = "0xA0E9D0", Offset = "0xA0E9D0", VA = "0xA0E9D0")]
		public void SetAxisNegativeState()
		{
		}

		[Token(Token = "0x600155D")]
		[Address(RVA = "0xA0EAB8", Offset = "0xA0EAB8", VA = "0xA0EAB8")]
		public void Update()
		{
		}

		[Token(Token = "0x600155E")]
		[Address(RVA = "0xA0EABC", Offset = "0xA0EABC", VA = "0xA0EABC")]
		public ButtonHandler()
		{
		}
	}
	[Token(Token = "0x20002C6")]
	public static class CrossPlatformInputManager
	{
		[Token(Token = "0x200054A")]
		public enum ActiveInputMethod
		{
			[Token(Token = "0x400270F")]
			Hardware,
			[Token(Token = "0x4002710")]
			Touch
		}

		[Token(Token = "0x200054B")]
		public class VirtualAxis
		{
			[Token(Token = "0x4002711")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x801E10", Offset = "0x801E10")]
			private string <name>k__BackingField;

			[Token(Token = "0x4002712")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private float m_Value;

			[Token(Token = "0x4002713")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x801E20", Offset = "0x801E20")]
			private bool <matchWithInputManager>k__BackingField;

			[Token(Token = "0x17000389")]
			public string name
			{
				[Token(Token = "0x6001FAD")]
				[Address(RVA = "0xA0F3CC", Offset = "0xA0F3CC", VA = "0xA0F3CC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x807158", Offset = "0x807158")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001FAE")]
				[Address(RVA = "0xA0F3D4", Offset = "0xA0F3D4", VA = "0xA0F3D4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x807168", Offset = "0x807168")]
				private set
				{
				}
			}

			[Token(Token = "0x1700038A")]
			public bool matchWithInputManager
			{
				[Token(Token = "0x6001FAF")]
				[Address(RVA = "0xA0F3DC", Offset = "0xA0F3DC", VA = "0xA0F3DC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x807178", Offset = "0x807178")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6001FB0")]
				[Address(RVA = "0xA0F3E4", Offset = "0xA0F3E4", VA = "0xA0F3E4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x807188", Offset = "0x807188")]
				private set
				{
				}
			}

			[Token(Token = "0x1700038B")]
			public float GetValue
			{
				[Token(Token = "0x6001FB5")]
				[Address(RVA = "0xA0F438", Offset = "0xA0F438", VA = "0xA0F438")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x1700038C")]
			public float GetValueRaw
			{
				[Token(Token = "0x6001FB6")]
				[Address(RVA = "0xA0F440", Offset = "0xA0F440", VA = "0xA0F440")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x6001FB1")]
			[Address(RVA = "0xA0E0FC", Offset = "0xA0E0FC", VA = "0xA0E0FC")]
			public VirtualAxis(string name)
			{
			}

			[Token(Token = "0x6001FB2")]
			[Address(RVA = "0xA0F3F0", Offset = "0xA0F3F0", VA = "0xA0F3F0")]
			public VirtualAxis(string name, bool matchToInputSettings)
			{
			}

			[Token(Token = "0x6001FB3")]
			[Address(RVA = "0xA0E3C4", Offset = "0xA0E3C4", VA = "0xA0E3C4")]
			public void Remove()
			{
			}

			[Token(Token = "0x6001FB4")]
			[Address(RVA = "0xA0F430", Offset = "0xA0F430", VA = "0xA0F430")]
			public void Update(float value)
			{
			}
		}

		[Token(Token = "0x200054C")]
		public class VirtualButton
		{
			[Token(Token = "0x4002714")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x801E30", Offset = "0x801E30")]
			private string <name>k__BackingField;

			[Token(Token = "0x4002715")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x801E40", Offset = "0x801E40")]
			private bool <matchWithInputManager>k__BackingField;

			[Token(Token = "0x4002716")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private int m_LastPressedFrame;

			[Token(Token = "0x4002717")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int m_ReleasedFrame;

			[Token(Token = "0x4002718")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private bool m_Pressed;

			[Token(Token = "0x1700038D")]
			public string name
			{
				[Token(Token = "0x6001FB7")]
				[Address(RVA = "0xA0F448", Offset = "0xA0F448", VA = "0xA0F448")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x807198", Offset = "0x807198")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001FB8")]
				[Address(RVA = "0xA0F450", Offset = "0xA0F450", VA = "0xA0F450")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8071A8", Offset = "0x8071A8")]
				private set
				{
				}
			}

			[Token(Token = "0x1700038E")]
			public bool matchWithInputManager
			{
				[Token(Token = "0x6001FB9")]
				[Address(RVA = "0xA0F458", Offset = "0xA0F458", VA = "0xA0F458")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8071B8", Offset = "0x8071B8")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6001FBA")]
				[Address(RVA = "0xA0F460", Offset = "0xA0F460", VA = "0xA0F460")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8071C8", Offset = "0x8071C8")]
				private set
				{
				}
			}

			[Token(Token = "0x1700038F")]
			public bool GetButton
			{
				[Token(Token = "0x6001FC0")]
				[Address(RVA = "0xA0F5BC", Offset = "0xA0F5BC", VA = "0xA0F5BC")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000390")]
			public bool GetButtonDown
			{
				[Token(Token = "0x6001FC1")]
				[Address(RVA = "0xA0F5C4", Offset = "0xA0F5C4", VA = "0xA0F5C4")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000391")]
			public bool GetButtonUp
			{
				[Token(Token = "0x6001FC2")]
				[Address(RVA = "0xA0F5F4", Offset = "0xA0F5F4", VA = "0xA0F5F4")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001FBB")]
			[Address(RVA = "0xA0F46C", Offset = "0xA0F46C", VA = "0xA0F46C")]
			public VirtualButton(string name)
			{
			}

			[Token(Token = "0x6001FBC")]
			[Address(RVA = "0xA0F4A8", Offset = "0xA0F4A8", VA = "0xA0F4A8")]
			public VirtualButton(string name, bool matchToInputSettings)
			{
			}

			[Token(Token = "0x6001FBD")]
			[Address(RVA = "0xA0F4F0", Offset = "0xA0F4F0", VA = "0xA0F4F0")]
			public void Pressed()
			{
			}

			[Token(Token = "0x6001FBE")]
			[Address(RVA = "0xA0F528", Offset = "0xA0F528", VA = "0xA0F528")]
			public void Released()
			{
			}

			[Token(Token = "0x6001FBF")]
			[Address(RVA = "0xA0F554", Offset = "0xA0F554", VA = "0xA0F554")]
			public void Remove()
			{
			}
		}

		[Token(Token = "0x4002005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static VirtualInput activeInput;

		[Token(Token = "0x4002006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static VirtualInput s_TouchInput;

		[Token(Token = "0x4002007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static VirtualInput s_HardwareInput;

		[Token(Token = "0x17000281")]
		public static Vector3 mousePosition
		{
			[Token(Token = "0x6001574")]
			[Address(RVA = "0xA0F1C4", Offset = "0xA0F1C4", VA = "0xA0F1C4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x600155F")]
		[Address(RVA = "0xA0EAC4", Offset = "0xA0EAC4", VA = "0xA0EAC4")]
		static CrossPlatformInputManager()
		{
		}

		[Token(Token = "0x6001560")]
		[Address(RVA = "0xA0EB6C", Offset = "0xA0EB6C", VA = "0xA0EB6C")]
		public static void SwitchActiveInputMethod(ActiveInputMethod activeInputMethod)
		{
		}

		[Token(Token = "0x6001561")]
		[Address(RVA = "0xA0E080", Offset = "0xA0E080", VA = "0xA0E080")]
		public static bool AxisExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001562")]
		[Address(RVA = "0xA0EC1C", Offset = "0xA0EC1C", VA = "0xA0EC1C")]
		public static bool ButtonExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001563")]
		[Address(RVA = "0xA0E130", Offset = "0xA0E130", VA = "0xA0E130")]
		public static void RegisterVirtualAxis(VirtualAxis axis)
		{
		}

		[Token(Token = "0x6001564")]
		[Address(RVA = "0xA0EC98", Offset = "0xA0EC98", VA = "0xA0EC98")]
		public static void RegisterVirtualButton(VirtualButton button)
		{
		}

		[Token(Token = "0x6001565")]
		[Address(RVA = "0xA0ED14", Offset = "0xA0ED14", VA = "0xA0ED14")]
		public static void UnRegisterVirtualAxis(string name)
		{
		}

		[Token(Token = "0x6001566")]
		[Address(RVA = "0xA0EDD4", Offset = "0xA0EDD4", VA = "0xA0EDD4")]
		public static void UnRegisterVirtualButton(string name)
		{
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0xA0E1AC", Offset = "0xA0E1AC", VA = "0xA0E1AC")]
		public static VirtualAxis VirtualAxisReference(string name)
		{
			return null;
		}

		[Token(Token = "0x6001568")]
		[Address(RVA = "0xA0EE50", Offset = "0xA0EE50", VA = "0xA0EE50")]
		public static float GetAxis(string name)
		{
			return default(float);
		}

		[Token(Token = "0x6001569")]
		[Address(RVA = "0xA0EF48", Offset = "0xA0EF48", VA = "0xA0EF48")]
		public static float GetAxisRaw(string name)
		{
			return default(float);
		}

		[Token(Token = "0x600156A")]
		[Address(RVA = "0xA0EEB8", Offset = "0xA0EEB8", VA = "0xA0EEB8")]
		private static float GetAxis(string name, bool raw)
		{
			return default(float);
		}

		[Token(Token = "0x600156B")]
		[Address(RVA = "0xA0EFB0", Offset = "0xA0EFB0", VA = "0xA0EFB0")]
		public static bool GetButton(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x600156C")]
		[Address(RVA = "0xA0F030", Offset = "0xA0F030", VA = "0xA0F030")]
		public static bool GetButtonDown(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x600156D")]
		[Address(RVA = "0xA0F0B0", Offset = "0xA0F0B0", VA = "0xA0F0B0")]
		public static bool GetButtonUp(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x600156E")]
		[Address(RVA = "0xA0E698", Offset = "0xA0E698", VA = "0xA0E698")]
		public static void SetButtonDown(string name)
		{
		}

		[Token(Token = "0x600156F")]
		[Address(RVA = "0xA0E780", Offset = "0xA0E780", VA = "0xA0E780")]
		public static void SetButtonUp(string name)
		{
		}

		[Token(Token = "0x6001570")]
		[Address(RVA = "0xA0E868", Offset = "0xA0E868", VA = "0xA0E868")]
		public static void SetAxisPositive(string name)
		{
		}

		[Token(Token = "0x6001571")]
		[Address(RVA = "0xA0EA38", Offset = "0xA0EA38", VA = "0xA0EA38")]
		public static void SetAxisNegative(string name)
		{
		}

		[Token(Token = "0x6001572")]
		[Address(RVA = "0xA0E950", Offset = "0xA0E950", VA = "0xA0E950")]
		public static void SetAxisZero(string name)
		{
		}

		[Token(Token = "0x6001573")]
		[Address(RVA = "0xA0F130", Offset = "0xA0F130", VA = "0xA0F130")]
		public static void SetAxis(string name, float value)
		{
		}

		[Token(Token = "0x6001575")]
		[Address(RVA = "0xA0F240", Offset = "0xA0F240", VA = "0xA0F240")]
		public static void SetVirtualMousePositionX(float f)
		{
		}

		[Token(Token = "0x6001576")]
		[Address(RVA = "0xA0F2C4", Offset = "0xA0F2C4", VA = "0xA0F2C4")]
		public static void SetVirtualMousePositionY(float f)
		{
		}

		[Token(Token = "0x6001577")]
		[Address(RVA = "0xA0F348", Offset = "0xA0F348", VA = "0xA0F348")]
		public static void SetVirtualMousePositionZ(float f)
		{
		}
	}
	[Token(Token = "0x20002C7")]
	public class InputAxisScrollbar : MonoBehaviour
	{
		[Token(Token = "0x4002008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string axis;

		[Token(Token = "0x6001578")]
		[Address(RVA = "0xA0F624", Offset = "0xA0F624", VA = "0xA0F624")]
		private void Update()
		{
		}

		[Token(Token = "0x6001579")]
		[Address(RVA = "0xA0F628", Offset = "0xA0F628", VA = "0xA0F628")]
		public void HandleInput(float value)
		{
		}

		[Token(Token = "0x600157A")]
		[Address(RVA = "0xA0F6A8", Offset = "0xA0F6A8", VA = "0xA0F6A8")]
		public InputAxisScrollbar()
		{
		}
	}
	[Token(Token = "0x20002C8")]
	public class Joystick : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler, IDragHandler
	{
		[Token(Token = "0x200054D")]
		public enum AxisOption
		{
			[Token(Token = "0x400271A")]
			Both,
			[Token(Token = "0x400271B")]
			OnlyHorizontal,
			[Token(Token = "0x400271C")]
			OnlyVertical
		}

		[Token(Token = "0x4002009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int MovementRange;

		[Token(Token = "0x400200A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public AxisOption axesToUse;

		[Token(Token = "0x400200B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string horizontalAxisName;

		[Token(Token = "0x400200C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string verticalAxisName;

		[Token(Token = "0x400200D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 m_StartPos;

		[Token(Token = "0x400200E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool m_UseX;

		[Token(Token = "0x400200F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		private bool m_UseY;

		[Token(Token = "0x4002010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CrossPlatformInputManager.VirtualAxis m_HorizontalVirtualAxis;

		[Token(Token = "0x4002011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private CrossPlatformInputManager.VirtualAxis m_VerticalVirtualAxis;

		[Token(Token = "0x600157B")]
		[Address(RVA = "0xA0F6B0", Offset = "0xA0F6B0", VA = "0xA0F6B0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600157C")]
		[Address(RVA = "0xA0F7F4", Offset = "0xA0F7F4", VA = "0xA0F7F4")]
		private void Start()
		{
		}

		[Token(Token = "0x600157D")]
		[Address(RVA = "0xA0F830", Offset = "0xA0F830", VA = "0xA0F830")]
		private void UpdateVirtualAxes(Vector3 value)
		{
		}

		[Token(Token = "0x600157E")]
		[Address(RVA = "0xA0F6B4", Offset = "0xA0F6B4", VA = "0xA0F6B4")]
		private void CreateVirtualAxes()
		{
		}

		[Token(Token = "0x600157F")]
		[Address(RVA = "0xA0F924", Offset = "0xA0F924", VA = "0xA0F924", Slot = "6")]
		public void OnDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6001580")]
		[Address(RVA = "0xA0FAE4", Offset = "0xA0FAE4", VA = "0xA0FAE4", Slot = "5")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x6001581")]
		[Address(RVA = "0xA0FB2C", Offset = "0xA0FB2C", VA = "0xA0FB2C", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x6001582")]
		[Address(RVA = "0xA0FB30", Offset = "0xA0FB30", VA = "0xA0FB30")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001583")]
		[Address(RVA = "0xA0FB80", Offset = "0xA0FB80", VA = "0xA0FB80")]
		public Joystick()
		{
		}
	}
	[Token(Token = "0x20002C9")]
	[ExecuteInEditMode]
	public class MobileControlRig : MonoBehaviour
	{
		[Token(Token = "0x6001584")]
		[Address(RVA = "0xA0FBF0", Offset = "0xA0FBF0", VA = "0xA0FBF0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001585")]
		[Address(RVA = "0xA0FC00", Offset = "0xA0FC00", VA = "0xA0FC00")]
		private void Start()
		{
		}

		[Token(Token = "0x6001586")]
		[Address(RVA = "0xA0FBF8", Offset = "0xA0FBF8", VA = "0xA0FBF8")]
		private void CheckEnableControlRig()
		{
		}

		[Token(Token = "0x6001587")]
		[Address(RVA = "0xA0FCE0", Offset = "0xA0FCE0", VA = "0xA0FCE0")]
		private void EnableControlRig(bool enabled)
		{
		}

		[Token(Token = "0x6001588")]
		[Address(RVA = "0xA0FF8C", Offset = "0xA0FF8C", VA = "0xA0FF8C")]
		public MobileControlRig()
		{
		}
	}
	[Token(Token = "0x20002CA")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7F837C", Offset = "0x7F837C")]
	public class TouchPad : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
	{
		[Token(Token = "0x200054E")]
		public enum AxisOption
		{
			[Token(Token = "0x400271E")]
			Both,
			[Token(Token = "0x400271F")]
			OnlyHorizontal,
			[Token(Token = "0x4002720")]
			OnlyVertical
		}

		[Token(Token = "0x200054F")]
		public enum ControlStyle
		{
			[Token(Token = "0x4002722")]
			Absolute,
			[Token(Token = "0x4002723")]
			Relative,
			[Token(Token = "0x4002724")]
			Swipe
		}

		[Token(Token = "0x4002012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AxisOption axesToUse;

		[Token(Token = "0x4002013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ControlStyle controlStyle;

		[Token(Token = "0x4002014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string horizontalAxisName;

		[Token(Token = "0x4002015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string verticalAxisName;

		[Token(Token = "0x4002016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float Xsensitivity;

		[Token(Token = "0x4002017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float Ysensitivity;

		[Token(Token = "0x4002018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 m_StartPos;

		[Token(Token = "0x4002019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector2 m_PreviousDelta;

		[Token(Token = "0x400201A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 m_JoytickOutput;

		[Token(Token = "0x400201B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_UseX;

		[Token(Token = "0x400201C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool m_UseY;

		[Token(Token = "0x400201D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CrossPlatformInputManager.VirtualAxis m_HorizontalVirtualAxis;

		[Token(Token = "0x400201E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private CrossPlatformInputManager.VirtualAxis m_VerticalVirtualAxis;

		[Token(Token = "0x400201F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_Dragging;

		[Token(Token = "0x4002020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int m_Id;

		[Token(Token = "0x4002021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector2 m_PreviousTouchPos;

		[Token(Token = "0x4002022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 m_Center;

		[Token(Token = "0x4002023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Image m_Image;

		[Token(Token = "0x6001589")]
		[Address(RVA = "0x1297BB8", Offset = "0x1297BB8", VA = "0x1297BB8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0x1297CF4", Offset = "0x1297CF4", VA = "0x1297CF4")]
		private void Start()
		{
		}

		[Token(Token = "0x600158B")]
		[Address(RVA = "0x1297BBC", Offset = "0x1297BBC", VA = "0x1297BBC")]
		private void CreateVirtualAxes()
		{
		}

		[Token(Token = "0x600158C")]
		[Address(RVA = "0x1297D70", Offset = "0x1297D70", VA = "0x1297D70")]
		private void UpdateVirtualAxes(Vector3 value)
		{
		}

		[Token(Token = "0x600158D")]
		[Address(RVA = "0x1297DE0", Offset = "0x1297DE0", VA = "0x1297DE0", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x600158E")]
		[Address(RVA = "0x1297E94", Offset = "0x1297E94", VA = "0x1297E94")]
		private void Update()
		{
		}

		[Token(Token = "0x600158F")]
		[Address(RVA = "0x129806C", Offset = "0x129806C", VA = "0x129806C", Slot = "5")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x6001590")]
		[Address(RVA = "0x12980E4", Offset = "0x12980E4", VA = "0x12980E4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001591")]
		[Address(RVA = "0x12981E8", Offset = "0x12981E8", VA = "0x12981E8")]
		public TouchPad()
		{
		}
	}
	[Token(Token = "0x20002CB")]
	public abstract class VirtualInput
	{
		[Token(Token = "0x4002024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8015B4", Offset = "0x8015B4")]
		private Vector3 <virtualMousePosition>k__BackingField;

		[Token(Token = "0x4002025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Dictionary<string, CrossPlatformInputManager.VirtualAxis> m_VirtualAxes;

		[Token(Token = "0x4002026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Dictionary<string, CrossPlatformInputManager.VirtualButton> m_VirtualButtons;

		[Token(Token = "0x4002027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected List<string> m_AlwaysUseVirtual;

		[Token(Token = "0x17000282")]
		public Vector3 virtualMousePosition
		{
			[Token(Token = "0x6001592")]
			[Address(RVA = "0x129825C", Offset = "0x129825C", VA = "0x129825C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x805248", Offset = "0x805248")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001593")]
			[Address(RVA = "0x1298268", Offset = "0x1298268", VA = "0x1298268")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x805258", Offset = "0x805258")]
			private set
			{
			}
		}

		[Token(Token = "0x6001594")]
		[Address(RVA = "0x1298274", Offset = "0x1298274", VA = "0x1298274")]
		public bool AxisExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001595")]
		[Address(RVA = "0x12982DC", Offset = "0x12982DC", VA = "0x12982DC")]
		public bool ButtonExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001596")]
		[Address(RVA = "0x1298344", Offset = "0x1298344", VA = "0x1298344")]
		public void RegisterVirtualAxis(CrossPlatformInputManager.VirtualAxis axis)
		{
		}

		[Token(Token = "0x6001597")]
		[Address(RVA = "0x1298470", Offset = "0x1298470", VA = "0x1298470")]
		public void RegisterVirtualButton(CrossPlatformInputManager.VirtualButton button)
		{
		}

		[Token(Token = "0x6001598")]
		[Address(RVA = "0x129859C", Offset = "0x129859C", VA = "0x129859C")]
		public void UnRegisterVirtualAxis(string name)
		{
		}

		[Token(Token = "0x6001599")]
		[Address(RVA = "0x1298634", Offset = "0x1298634", VA = "0x1298634")]
		public void UnRegisterVirtualButton(string name)
		{
		}

		[Token(Token = "0x600159A")]
		[Address(RVA = "0x12986CC", Offset = "0x12986CC", VA = "0x12986CC")]
		public CrossPlatformInputManager.VirtualAxis VirtualAxisReference(string name)
		{
			return null;
		}

		[Token(Token = "0x600159B")]
		[Address(RVA = "0x1298760", Offset = "0x1298760", VA = "0x1298760")]
		public void SetVirtualMousePositionX(float f)
		{
		}

		[Token(Token = "0x600159C")]
		[Address(RVA = "0x12987AC", Offset = "0x12987AC", VA = "0x12987AC")]
		public void SetVirtualMousePositionY(float f)
		{
		}

		[Token(Token = "0x600159D")]
		[Address(RVA = "0x1298800", Offset = "0x1298800", VA = "0x1298800")]
		public void SetVirtualMousePositionZ(float f)
		{
		}

		[Token(Token = "0x600159E")]
		public abstract float GetAxis(string name, bool raw);

		[Token(Token = "0x600159F")]
		public abstract bool GetButton(string name);

		[Token(Token = "0x60015A0")]
		public abstract bool GetButtonDown(string name);

		[Token(Token = "0x60015A1")]
		public abstract bool GetButtonUp(string name);

		[Token(Token = "0x60015A2")]
		public abstract void SetButtonDown(string name);

		[Token(Token = "0x60015A3")]
		public abstract void SetButtonUp(string name);

		[Token(Token = "0x60015A4")]
		public abstract void SetAxisPositive(string name);

		[Token(Token = "0x60015A5")]
		public abstract void SetAxisNegative(string name);

		[Token(Token = "0x60015A6")]
		public abstract void SetAxisZero(string name);

		[Token(Token = "0x60015A7")]
		public abstract void SetAxis(string name, float value);

		[Token(Token = "0x60015A8")]
		public abstract Vector3 MousePosition();

		[Token(Token = "0x60015A9")]
		[Address(RVA = "0x1297AF8", Offset = "0x1297AF8", VA = "0x1297AF8")]
		protected VirtualInput()
		{
		}
	}
}
namespace UnityStandardAssets.CrossPlatformInput.PlatformSpecific
{
	[Token(Token = "0x20002CC")]
	public class MobileInput : VirtualInput
	{
		[Token(Token = "0x60015AA")]
		[Address(RVA = "0xA0FF94", Offset = "0xA0FF94", VA = "0xA0FF94")]
		private void AddButton(string name)
		{
		}

		[Token(Token = "0x60015AB")]
		[Address(RVA = "0xA10028", Offset = "0xA10028", VA = "0xA10028")]
		private void AddAxes(string name)
		{
		}

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0xA100B4", Offset = "0xA100B4", VA = "0xA100B4", Slot = "4")]
		public override float GetAxis(string name, bool raw)
		{
			return default(float);
		}

		[Token(Token = "0x60015AD")]
		[Address(RVA = "0xA10150", Offset = "0xA10150", VA = "0xA10150", Slot = "8")]
		public override void SetButtonDown(string name)
		{
		}

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0xA10208", Offset = "0xA10208", VA = "0xA10208", Slot = "9")]
		public override void SetButtonUp(string name)
		{
		}

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0xA102B4", Offset = "0xA102B4", VA = "0xA102B4", Slot = "10")]
		public override void SetAxisPositive(string name)
		{
		}

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0xA10354", Offset = "0xA10354", VA = "0xA10354", Slot = "11")]
		public override void SetAxisNegative(string name)
		{
		}

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0xA103F4", Offset = "0xA103F4", VA = "0xA103F4", Slot = "12")]
		public override void SetAxisZero(string name)
		{
		}

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0xA10490", Offset = "0xA10490", VA = "0xA10490", Slot = "13")]
		public override void SetAxis(string name, float value)
		{
		}

		[Token(Token = "0x60015B3")]
		[Address(RVA = "0xA10538", Offset = "0xA10538", VA = "0xA10538", Slot = "6")]
		public override bool GetButtonDown(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0xA105E8", Offset = "0xA105E8", VA = "0xA105E8", Slot = "7")]
		public override bool GetButtonUp(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60015B5")]
		[Address(RVA = "0xA10698", Offset = "0xA10698", VA = "0xA10698", Slot = "5")]
		public override bool GetButton(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60015B6")]
		[Address(RVA = "0xA10734", Offset = "0xA10734", VA = "0xA10734", Slot = "14")]
		public override Vector3 MousePosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015B7")]
		[Address(RVA = "0xA0EB64", Offset = "0xA0EB64", VA = "0xA0EB64")]
		public MobileInput()
		{
		}
	}
	[Token(Token = "0x20002CD")]
	public class StandaloneInput : VirtualInput
	{
		[Token(Token = "0x60015B8")]
		[Address(RVA = "0x1297814", Offset = "0x1297814", VA = "0x1297814", Slot = "4")]
		public override float GetAxis(string name, bool raw)
		{
			return default(float);
		}

		[Token(Token = "0x60015B9")]
		[Address(RVA = "0x1297828", Offset = "0x1297828", VA = "0x1297828", Slot = "5")]
		public override bool GetButton(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60015BA")]
		[Address(RVA = "0x1297834", Offset = "0x1297834", VA = "0x1297834", Slot = "6")]
		public override bool GetButtonDown(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60015BB")]
		[Address(RVA = "0x1297840", Offset = "0x1297840", VA = "0x1297840", Slot = "7")]
		public override bool GetButtonUp(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60015BC")]
		[Address(RVA = "0x129784C", Offset = "0x129784C", VA = "0x129784C", Slot = "8")]
		public override void SetButtonDown(string name)
		{
		}

		[Token(Token = "0x60015BD")]
		[Address(RVA = "0x12978BC", Offset = "0x12978BC", VA = "0x12978BC", Slot = "9")]
		public override void SetButtonUp(string name)
		{
		}

		[Token(Token = "0x60015BE")]
		[Address(RVA = "0x129792C", Offset = "0x129792C", VA = "0x129792C", Slot = "10")]
		public override void SetAxisPositive(string name)
		{
		}

		[Token(Token = "0x60015BF")]
		[Address(RVA = "0x129799C", Offset = "0x129799C", VA = "0x129799C", Slot = "11")]
		public override void SetAxisNegative(string name)
		{
		}

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0x1297A0C", Offset = "0x1297A0C", VA = "0x1297A0C", Slot = "12")]
		public override void SetAxisZero(string name)
		{
		}

		[Token(Token = "0x60015C1")]
		[Address(RVA = "0x1297A7C", Offset = "0x1297A7C", VA = "0x1297A7C", Slot = "13")]
		public override void SetAxis(string name, float value)
		{
		}

		[Token(Token = "0x60015C2")]
		[Address(RVA = "0x1297AEC", Offset = "0x1297AEC", VA = "0x1297AEC", Slot = "14")]
		public override Vector3 MousePosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015C3")]
		[Address(RVA = "0x1297AF4", Offset = "0x1297AF4", VA = "0x1297AF4")]
		public StandaloneInput()
		{
		}
	}
}
namespace UnityStandardAssets.ImageEffects
{
	[Token(Token = "0x20002CE")]
	public enum AAMode
	{
		[Token(Token = "0x4002029")]
		FXAA2,
		[Token(Token = "0x400202A")]
		FXAA3Console,
		[Token(Token = "0x400202B")]
		FXAA1PresetA,
		[Token(Token = "0x400202C")]
		FXAA1PresetB,
		[Token(Token = "0x400202D")]
		NFAA,
		[Token(Token = "0x400202E")]
		SSAA,
		[Token(Token = "0x400202F")]
		DLAA
	}
	[Token(Token = "0x20002CF")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7F83E0", Offset = "0x7F83E0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7F83E0", Offset = "0x7F83E0")]
	public class Antialiasing : PostEffectsBase
	{
		[Token(Token = "0x4002030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AAMode mode;

		[Token(Token = "0x4002031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool showGeneratedNormals;

		[Token(Token = "0x4002032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float offsetScale;

		[Token(Token = "0x4002033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float blurRadius;

		[Token(Token = "0x4002034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float edgeThresholdMin;

		[Token(Token = "0x4002035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float edgeThreshold;

		[Token(Token = "0x4002036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float edgeSharpness;

		[Token(Token = "0x4002037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool dlaaSharp;

		[Token(Token = "0x4002038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Shader ssaaShader;

		[Token(Token = "0x4002039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material ssaa;

		[Token(Token = "0x400203A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Shader dlaaShader;

		[Token(Token = "0x400203B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material dlaa;

		[Token(Token = "0x400203C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Shader nfaaShader;

		[Token(Token = "0x400203D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material nfaa;

		[Token(Token = "0x400203E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Shader shaderFXAAPreset2;

		[Token(Token = "0x400203F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Material materialFXAAPreset2;

		[Token(Token = "0x4002040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Shader shaderFXAAPreset3;

		[Token(Token = "0x4002041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Material materialFXAAPreset3;

		[Token(Token = "0x4002042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Shader shaderFXAAII;

		[Token(Token = "0x4002043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Material materialFXAAII;

		[Token(Token = "0x4002044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Shader shaderFXAAIII;

		[Token(Token = "0x4002045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Material materialFXAAIII;

		[Token(Token = "0x60015C4")]
		[Address(RVA = "0x1298850", Offset = "0x1298850", VA = "0x1298850")]
		public Material CurrentAAMaterial()
		{
			return null;
		}

		[Token(Token = "0x60015C5")]
		[Address(RVA = "0x12988B4", Offset = "0x12988B4", VA = "0x12988B4", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60015C6")]
		[Address(RVA = "0x1298D54", Offset = "0x1298D54", VA = "0x1298D54")]
		public void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60015C7")]
		[Address(RVA = "0x12992A4", Offset = "0x12992A4", VA = "0x12992A4")]
		public Antialiasing()
		{
		}
	}
	[Token(Token = "0x20002D0")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7F8478", Offset = "0x7F8478")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7F8478", Offset = "0x7F8478")]
	public class Bloom : PostEffectsBase
	{
		[Token(Token = "0x2000550")]
		public enum LensFlareStyle
		{
			[Token(Token = "0x4002726")]
			Ghosting,
			[Token(Token = "0x4002727")]
			Anamorphic,
			[Token(Token = "0x4002728")]
			Combined
		}

		[Token(Token = "0x2000551")]
		public enum TweakMode
		{
			[Token(Token = "0x400272A")]
			Basic,
			[Token(Token = "0x400272B")]
			Complex
		}

		[Token(Token = "0x2000552")]
		public enum HDRBloomMode
		{
			[Token(Token = "0x400272D")]
			Auto,
			[Token(Token = "0x400272E")]
			On,
			[Token(Token = "0x400272F")]
			Off
		}

		[Token(Token = "0x2000553")]
		public enum BloomScreenBlendMode
		{
			[Token(Token = "0x4002731")]
			Screen,
			[Token(Token = "0x4002732")]
			Add
		}

		[Token(Token = "0x2000554")]
		public enum BloomQuality
		{
			[Token(Token = "0x4002734")]
			Cheap,
			[Token(Token = "0x4002735")]
			High
		}

		[Token(Token = "0x4002046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TweakMode tweakMode;

		[Token(Token = "0x4002047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public BloomScreenBlendMode screenBlendMode;

		[Token(Token = "0x4002048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HDRBloomMode hdr;

		[Token(Token = "0x4002049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool doHdr;

		[Token(Token = "0x400204A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float sepBlurSpread;

		[Token(Token = "0x400204B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public BloomQuality quality;

		[Token(Token = "0x400204C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float bloomIntensity;

		[Token(Token = "0x400204D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float bloomThreshold;

		[Token(Token = "0x400204E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color bloomThresholdColor;

		[Token(Token = "0x400204F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int bloomBlurIterations;

		[Token(Token = "0x4002050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int hollywoodFlareBlurIterations;

		[Token(Token = "0x4002051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float flareRotation;

		[Token(Token = "0x4002052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public LensFlareStyle lensflareMode;

		[Token(Token = "0x4002053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float hollyStretchWidth;

		[Token(Token = "0x4002054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float lensflareIntensity;

		[Token(Token = "0x4002055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float lensflareThreshold;

		[Token(Token = "0x4002056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float lensFlareSaturation;

		[Token(Token = "0x4002057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Color flareColorA;

		[Token(Token = "0x4002058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Color flareColorB;

		[Token(Token = "0x4002059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Color flareColorC;

		[Token(Token = "0x400205A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Color flareColorD;

		[Token(Token = "0x400205B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Texture2D lensFlareVignetteMask;

		[Token(Token = "0x400205C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Shader lensFlareShader;

		[Token(Token = "0x400205D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Material lensFlareMaterial;

		[Token(Token = "0x400205E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Shader screenBlendShader;

		[Token(Token = "0x400205F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Material screenBlend;

		[Token(Token = "0x4002060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Shader blurAndFlaresShader;

		[Token(Token = "0x4002061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Material blurAndFlaresMaterial;

		[Token(Token = "0x4002062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Shader brightPassFilterShader;

		[Token(Token = "0x4002063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Material brightPassFilterMaterial;

		[Token(Token = "0x60015C8")]
		[Address(RVA = "0x1299340", Offset = "0x1299340", VA = "0x1299340", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60015C9")]
		[Address(RVA = "0x1299748", Offset = "0x1299748", VA = "0x1299748")]
		public void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60015CA")]
		[Address(RVA = "0x129AB10", Offset = "0x129AB10", VA = "0x129AB10")]
		private void AddTo(float intensity_, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x60015CB")]
		[Address(RVA = "0x129A90C", Offset = "0x129A90C", VA = "0x129A90C")]
		private void BlendFlares(RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x60015CC")]
		[Address(RVA = "0x129A608", Offset = "0x129A608", VA = "0x129A608")]
		private void BrightFilter(float thresh, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x60015CD")]
		[Address(RVA = "0x129A520", Offset = "0x129A520", VA = "0x129A520")]
		private void BrightFilter(Color threshColor, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x60015CE")]
		[Address(RVA = "0x129A6F8", Offset = "0x129A6F8", VA = "0x129A6F8")]
		private void Vignette(float amount, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x60015CF")]
		[Address(RVA = "0x129ABE0", Offset = "0x129ABE0", VA = "0x129ABE0")]
		public Bloom()
		{
		}
	}
	[Token(Token = "0x20002D1")]
	public enum LensflareStyle34
	{
		[Token(Token = "0x4002065")]
		Ghosting,
		[Token(Token = "0x4002066")]
		Anamorphic,
		[Token(Token = "0x4002067")]
		Combined
	}
	[Token(Token = "0x20002D2")]
	public enum TweakMode34
	{
		[Token(Token = "0x4002069")]
		Basic,
		[Token(Token = "0x400206A")]
		Complex
	}
	[Token(Token = "0x20002D3")]
	public enum HDRBloomMode
	{
		[Token(Token = "0x400206C")]
		Auto,
		[Token(Token = "0x400206D")]
		On,
		[Token(Token = "0x400206E")]
		Off
	}
	[Token(Token = "0x20002D4")]
	public enum BloomScreenBlendMode
	{
		[Token(Token = "0x4002070")]
		Screen,
		[Token(Token = "0x4002071")]
		Add
	}
	[Token(Token = "0x20002D5")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7F8510", Offset = "0x7F8510")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7F8510", Offset = "0x7F8510")]
	public class BloomAndFlares : PostEffectsBase
	{
		[Token(Token = "0x4002072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TweakMode34 tweakMode;

		[Token(Token = "0x4002073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public BloomScreenBlendMode screenBlendMode;

		[Token(Token = "0x4002074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HDRBloomMode hdr;

		[Token(Token = "0x4002075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool doHdr;

		[Token(Token = "0x4002076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float sepBlurSpread;

		[Token(Token = "0x4002077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float useSrcAlphaAsMask;

		[Token(Token = "0x4002078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float bloomIntensity;

		[Token(Token = "0x4002079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float bloomThreshold;

		[Token(Token = "0x400207A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int bloomBlurIterations;

		[Token(Token = "0x400207B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool lensflares;

		[Token(Token = "0x400207C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int hollywoodFlareBlurIterations;

		[Token(Token = "0x400207D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public LensflareStyle34 lensflareMode;

		[Token(Token = "0x400207E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float hollyStretchWidth;

		[Token(Token = "0x400207F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float lensflareIntensity;

		[Token(Token = "0x4002080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float lensflareThreshold;

		[Token(Token = "0x4002081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Color flareColorA;

		[Token(Token = "0x4002082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public Color flareColorB;

		[Token(Token = "0x4002083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public Color flareColorC;

		[Token(Token = "0x4002084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public Color flareColorD;

		[Token(Token = "0x4002085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Texture2D lensFlareVignetteMask;

		[Token(Token = "0x4002086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Shader lensFlareShader;

		[Token(Token = "0x4002087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Material lensFlareMaterial;

		[Token(Token = "0x4002088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Shader vignetteShader;

		[Token(Token = "0x4002089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Material vignetteMaterial;

		[Token(Token = "0x400208A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Shader separableBlurShader;

		[Token(Token = "0x400208B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Material separableBlurMaterial;

		[Token(Token = "0x400208C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Shader addBrightStuffOneOneShader;

		[Token(Token = "0x400208D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Material addBrightStuffBlendOneOneMaterial;

		[Token(Token = "0x400208E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Shader screenBlendShader;

		[Token(Token = "0x400208F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Material screenBlend;

		[Token(Token = "0x4002090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public Shader hollywoodFlaresShader;

		[Token(Token = "0x4002091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Material hollywoodFlaresMaterial;

		[Token(Token = "0x4002092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public Shader brightPassFilterShader;

		[Token(Token = "0x4002093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Material brightPassFilterMaterial;

		[Token(Token = "0x60015D0")]
		[Address(RVA = "0x129AD5C", Offset = "0x129AD5C", VA = "0x129AD5C", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60015D1")]
		[Address(RVA = "0x129AE14", Offset = "0x129AE14", VA = "0x129AE14")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60015D2")]
		[Address(RVA = "0x129BD68", Offset = "0x129BD68", VA = "0x129BD68")]
		private void AddTo(float intensity_, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x60015D3")]
		[Address(RVA = "0x129BB74", Offset = "0x129BB74", VA = "0x129BB74")]
		private void BlendFlares(RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x60015D4")]
		[Address(RVA = "0x129B8F0", Offset = "0x129B8F0", VA = "0x129B8F0")]
		private void BrightFilter(float thresh, float useAlphaAsMask, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x60015D5")]
		[Address(RVA = "0x129BA20", Offset = "0x129BA20", VA = "0x129BA20")]
		private void Vignette(float amount, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x60015D6")]
		[Address(RVA = "0x129BE1C", Offset = "0x129BE1C", VA = "0x129BE1C")]
		public BloomAndFlares()
		{
		}
	}
	[Token(Token = "0x20002D6")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7F85A8", Offset = "0x7F85A8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7F85A8", Offset = "0x7F85A8")]
	public class BloomOptimized : PostEffectsBase
	{
		[Token(Token = "0x2000555")]
		public enum Resolution
		{
			[Token(Token = "0x4002737")]
			Low,
			[Token(Token = "0x4002738")]
			High
		}

		[Token(Token = "0x2000556")]
		public enum BlurType
		{
			[Token(Token = "0x400273A")]
			Standard,
			[Token(Token = "0x400273B")]
			Sgx
		}

		[Token(Token = "0x4002094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8015C4", Offset = "0x8015C4")]
		public float threshold;

		[Token(Token = "0x4002095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8015DC", Offset = "0x8015DC")]
		public float intensity;

		[Token(Token = "0x4002096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8015F4", Offset = "0x8015F4")]
		public float blurSize;

		[Token(Token = "0x4002097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Resolution resolution;

		[Token(Token = "0x4002098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x80160C", Offset = "0x80160C")]
		public int blurIterations;

		[Token(Token = "0x4002099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public BlurType blurType;

		[Token(Token = "0x400209A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Shader fastBloomShader;

		[Token(Token = "0x400209B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material fastBloomMaterial;

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0x129BF84", Offset = "0x129BF84", VA = "0x129BF84", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60015D8")]
		[Address(RVA = "0x129BFDC", Offset = "0x129BFDC", VA = "0x129BFDC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60015D9")]
		[Address(RVA = "0x129C08C", Offset = "0x129C08C", VA = "0x129C08C")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0x129C468", Offset = "0x129C468", VA = "0x129C468")]
		public BloomOptimized()
		{
		}
	}
	[Token(Token = "0x20002D7")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7F8640", Offset = "0x7F8640")]
	public class Blur : MonoBehaviour
	{
		[Token(Token = "0x400209C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x801624", Offset = "0x801624")]
		public int iterations;

		[Token(Token = "0x400209D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x80163C", Offset = "0x80163C")]
		public float blurSpread;

		[Token(Token = "0x400209E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Shader blurShader;

		[Token(Token = "0x400209F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Material m_Material;

		[Token(Token = "0x17000283")]
		protected Material material
		{
			[Token(Token = "0x60015DB")]
			[Address(RVA = "0x129C488", Offset = "0x129C488", VA = "0x129C488")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015DC")]
		[Address(RVA = "0x129C5C0", Offset = "0x129C5C0", VA = "0x129C5C0")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0x129C6BC", Offset = "0x129C6BC", VA = "0x129C6BC")]
		protected void Start()
		{
		}

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0x129C77C", Offset = "0x129C77C", VA = "0x129C77C")]
		public void FourTapCone(RenderTexture source, RenderTexture dest, int iteration)
		{
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0x129C928", Offset = "0x129C928", VA = "0x129C928")]
		private void DownSample4x(RenderTexture source, RenderTexture dest)
		{
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0x129CAA8", Offset = "0x129CAA8", VA = "0x129CAA8")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60015E1")]
		[Address(RVA = "0x129CC18", Offset = "0x129CC18", VA = "0x129CC18")]
		public Blur()
		{
		}
	}
	[Token(Token = "0x20002D8")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7F868C", Offset = "0x7F868C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7F868C", Offset = "0x7F868C")]
	public class BlurOptimized : PostEffectsBase
	{
		[Token(Token = "0x2000557")]
		public enum BlurType
		{
			[Token(Token = "0x400273D")]
			StandardGauss,
			[Token(Token = "0x400273E")]
			SgxGauss
		}

		[Token(Token = "0x40020A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x801654", Offset = "0x801654")]
		public int downsample;

		[Token(Token = "0x40020A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x80166C", Offset = "0x80166C")]
		public float blurSize;

		[Token(Token = "0x40020A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x801684", Offset = "0x801684")]
		public int blurIterations;

		[Token(Token = "0x40020A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public BlurType blurType;

		[Token(Token = "0x40020A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Shader blurShader;

		[Token(Token = "0x40020A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material blurMaterial;

		[Token(Token = "0x60015E3")]
		[Address(RVA = "0x129CC34", Offset = "0x129CC34", VA = "0x129CC34", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60015E4")]
		[Address(RVA = "0x129CC8C", Offset = "0x129CC8C", VA = "0x129CC8C")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0x129CD3C", Offset = "0x129CD3C", VA = "0x129CD3C")]
		public void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60015E6")]
		[Address(RVA = "0x129D0FC", Offset = "0x129D0FC", VA = "0x129D0FC")]
		public BlurOptimized()
		{
		}
	}
	[Token(Token = "0x20002D9")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7F8724", Offset = "0x7F8724")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7F8724", Offset = "0x7F8724")]
	public class CameraMotionBlur : PostEffectsBase
	{
		[Token(Token = "0x2000558")]
		public enum MotionBlurFilter
		{
			[Token(Token = "0x4002740")]
			CameraMotion,
			[Token(Token = "0x4002741")]
			LocalBlur,
			[Token(Token = "0x4002742")]
			Reconstruction,
			[Token(Token = "0x4002743")]
			ReconstructionDX11,
			[Token(Token = "0x4002744")]
			ReconstructionDisc
		}

		[Token(Token = "0x40020A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float MAX_RADIUS;

		[Token(Token = "0x40020A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MotionBlurFilter filterType;

		[Token(Token = "0x40020A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool preview;

		[Token(Token = "0x40020A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 previewScale;

		[Token(Token = "0x40020AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float movementScale;

		[Token(Token = "0x40020AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float rotationScale;

		[Token(Token = "0x40020AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float maxVelocity;

		[Token(Token = "0x40020AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float minVelocity;

		[Token(Token = "0x40020AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float velocityScale;

		[Token(Token = "0x40020AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float softZDistance;

		[Token(Token = "0x40020B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int velocityDownsample;

		[Token(Token = "0x40020B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public LayerMask excludeLayers;

		[Token(Token = "0x40020B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject tmpCam;

		[Token(Token = "0x40020B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Shader shader;

		[Token(Token = "0x40020B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Shader dx11MotionBlurShader;

		[Token(Token = "0x40020B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Shader replacementClear;

		[Token(Token = "0x40020B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Material motionBlurMaterial;

		[Token(Token = "0x40020B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Material dx11MotionBlurMaterial;

		[Token(Token = "0x40020B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Texture2D noiseTexture;

		[Token(Token = "0x40020B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float jitter;

		[Token(Token = "0x40020BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public bool showVelocity;

		[Token(Token = "0x40020BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float showVelocityScale;

		[Token(Token = "0x40020BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Matrix4x4 currentViewProjMat;

		[Token(Token = "0x40020BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Matrix4x4[] currentStereoViewProjMat;

		[Token(Token = "0x40020BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Matrix4x4 prevViewProjMat;

		[Token(Token = "0x40020BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Matrix4x4[] prevStereoViewProjMat;

		[Token(Token = "0x40020C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private int prevFrameCount;

		[Token(Token = "0x40020C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private bool wasActive;

		[Token(Token = "0x40020C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private Vector3 prevFrameForward;

		[Token(Token = "0x40020C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private Vector3 prevFrameUp;

		[Token(Token = "0x40020C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Vector3 prevFramePos;

		[Token(Token = "0x40020C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private Camera _camera;

		[Token(Token = "0x60015E7")]
		[Address(RVA = "0x129D114", Offset = "0x129D114", VA = "0x129D114")]
		private void CalculateViewProjection()
		{
		}

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0x129D3E4", Offset = "0x129D3E4", VA = "0x129D3E4")]
		private new void Start()
		{
		}

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0x129D68C", Offset = "0x129D68C", VA = "0x129D68C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60015EA")]
		[Address(RVA = "0x129D750", Offset = "0x129D750", VA = "0x129D750")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60015EB")]
		[Address(RVA = "0x129D8B4", Offset = "0x129D8B4", VA = "0x129D8B4", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60015EC")]
		[Address(RVA = "0x129D998", Offset = "0x129D998", VA = "0x129D998")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60015ED")]
		[Address(RVA = "0x129D4E4", Offset = "0x129D4E4", VA = "0x129D4E4")]
		private void Remember()
		{
		}

		[Token(Token = "0x60015EE")]
		[Address(RVA = "0x129F3B0", Offset = "0x129F3B0", VA = "0x129F3B0")]
		private Camera GetTmpCam()
		{
			return null;
		}

		[Token(Token = "0x60015EF")]
		[Address(RVA = "0x129F2C4", Offset = "0x129F2C4", VA = "0x129F2C4")]
		private void StartFrame()
		{
		}

		[Token(Token = "0x60015F0")]
		[Address(RVA = "0x129F3A0", Offset = "0x129F3A0", VA = "0x129F3A0")]
		private static int divRoundUp(int x, int d)
		{
			return default(int);
		}

		[Token(Token = "0x60015F1")]
		[Address(RVA = "0x129F6F4", Offset = "0x129F6F4", VA = "0x129F6F4")]
		public CameraMotionBlur()
		{
		}
	}
	[Token(Token = "0x20002DA")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7F87BC", Offset = "0x7F87BC")]
	public class ColorCorrectionCurves : PostEffectsBase
	{
		[Token(Token = "0x2000559")]
		public enum ColorCorrectionMode
		{
			[Token(Token = "0x4002746")]
			Simple,
			[Token(Token = "0x4002747")]
			Advanced
		}

		[Token(Token = "0x40020C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve redChannel;

		[Token(Token = "0x40020C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve greenChannel;

		[Token(Token = "0x40020C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationCurve blueChannel;

		[Token(Token = "0x40020C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool useDepthCorrection;

		[Token(Token = "0x40020CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AnimationCurve zCurve;

		[Token(Token = "0x40020CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AnimationCurve depthRedChannel;

		[Token(Token = "0x40020CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AnimationCurve depthGreenChannel;

		[Token(Token = "0x40020CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AnimationCurve depthBlueChannel;

		[Token(Token = "0x40020CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Material ccMaterial;

		[Token(Token = "0x40020CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material ccDepthMaterial;

		[Token(Token = "0x40020D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Material selectiveCcMaterial;

		[Token(Token = "0x40020D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Texture2D rgbChannelTex;

		[Token(Token = "0x40020D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Texture2D rgbDepthChannelTex;

		[Token(Token = "0x40020D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Texture2D zCurveTex;

		[Token(Token = "0x40020D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float saturation;

		[Token(Token = "0x40020D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public bool selectiveCc;

		[Token(Token = "0x40020D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Color selectiveFromColor;

		[Token(Token = "0x40020D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Color selectiveToColor;

		[Token(Token = "0x40020D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public ColorCorrectionMode mode;

		[Token(Token = "0x40020D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public bool updateTextures;

		[Token(Token = "0x40020DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Shader colorCorrectionCurvesShader;

		[Token(Token = "0x40020DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Shader simpleColorCorrectionCurvesShader;

		[Token(Token = "0x40020DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Shader colorCorrectionSelectiveShader;

		[Token(Token = "0x40020DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool updateTexturesOnStartup;

		[Token(Token = "0x60015F3")]
		[Address(RVA = "0x129F840", Offset = "0x129F840", VA = "0x129F840")]
		private new void Start()
		{
		}

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0x129F87C", Offset = "0x129F87C", VA = "0x129F87C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015F5")]
		[Address(RVA = "0x129F880", Offset = "0x129F880", VA = "0x129F880", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60015F6")]
		[Address(RVA = "0x129FAE0", Offset = "0x129FAE0", VA = "0x129FAE0")]
		public void UpdateParameters()
		{
		}

		[Token(Token = "0x60015F7")]
		[Address(RVA = "0x129FEDC", Offset = "0x129FEDC", VA = "0x129FEDC")]
		private void UpdateTextures()
		{
		}

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0x129FEE0", Offset = "0x129FEE0", VA = "0x129FEE0")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60015F9")]
		[Address(RVA = "0x12A01E8", Offset = "0x12A01E8", VA = "0x12A01E8")]
		public ColorCorrectionCurves()
		{
		}
	}
	[Token(Token = "0x20002DB")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7F8808", Offset = "0x7F8808")]
	public class ColorCorrectionLookup : PostEffectsBase
	{
		[Token(Token = "0x40020DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Shader shader;

		[Token(Token = "0x40020DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Material material;

		[Token(Token = "0x40020E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Texture3D converted3DLut;

		[Token(Token = "0x40020E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string basedOnTempTex;

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0x12A0820", Offset = "0x12A0820", VA = "0x12A0820", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60015FB")]
		[Address(RVA = "0x12A0874", Offset = "0x12A0874", VA = "0x12A0874")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0x12A091C", Offset = "0x12A091C", VA = "0x12A091C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0x12A09C4", Offset = "0x12A09C4", VA = "0x12A09C4")]
		public void SetIdentityLut()
		{
		}

		[Token(Token = "0x60015FE")]
		[Address(RVA = "0x12A0BCC", Offset = "0x12A0BCC", VA = "0x12A0BCC")]
		public bool ValidDimensions(Texture2D tex2d)
		{
			return default(bool);
		}

		[Token(Token = "0x60015FF")]
		[Address(RVA = "0x12A0CC4", Offset = "0x12A0CC4", VA = "0x12A0CC4")]
		public void Convert(Texture2D temp2DTex, string path)
		{
		}

		[Token(Token = "0x6001600")]
		[Address(RVA = "0x12A0FE8", Offset = "0x12A0FE8", VA = "0x12A0FE8")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001601")]
		[Address(RVA = "0x12A11DC", Offset = "0x12A11DC", VA = "0x12A11DC")]
		public ColorCorrectionLookup()
		{
		}
	}
	[Token(Token = "0x20002DC")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7F8854", Offset = "0x7F8854")]
	public class ColorCorrectionRamp : ImageEffectBase
	{
		[Token(Token = "0x40020E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Texture textureRamp;

		[Token(Token = "0x6001602")]
		[Address(RVA = "0x12A1230", Offset = "0x12A1230", VA = "0x12A1230")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001603")]
		[Address(RVA = "0x12A13B0", Offset = "0x12A13B0", VA = "0x12A13B0")]
		public ColorCorrectionRamp()
		{
		}
	}
	[Token(Token = "0x20002DD")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7F88A0", Offset = "0x7F88A0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7F88A0", Offset = "0x7F88A0")]
	public class ContrastEnhance : PostEffectsBase
	{
		[Token(Token = "0x40020E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x80169C", Offset = "0x80169C")]
		public float intensity;

		[Token(Token = "0x40020E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8016B4", Offset = "0x8016B4")]
		public float threshold;

		[Token(Token = "0x40020E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Material separableBlurMaterial;

		[Token(Token = "0x40020E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material contrastCompositeMaterial;

		[Token(Token = "0x40020E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8016D0", Offset = "0x8016D0")]
		public float blurSpread;

		[Token(Token = "0x40020E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Shader separableBlurShader;

		[Token(Token = "0x40020E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Shader contrastCompositeShader;

		[Token(Token = "0x6001604")]
		[Address(RVA = "0x12A13C0", Offset = "0x12A13C0", VA = "0x12A13C0", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6001605")]
		[Address(RVA = "0x12A1430", Offset = "0x12A1430", VA = "0x12A1430")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001606")]
		[Address(RVA = "0x12A179C", Offset = "0x12A179C", VA = "0x12A179C")]
		public ContrastEnhance()
		{
		}
	}
	[Token(Token = "0x20002DE")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7F8938", Offset = "0x7F8938")]
	public class ContrastStretch : MonoBehaviour
	{
		[Token(Token = "0x40020EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8016E8", Offset = "0x8016E8")]
		public float adaptationSpeed;

		[Token(Token = "0x40020EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x801704", Offset = "0x801704")]
		public float limitMinimum;

		[Token(Token = "0x40020EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x80171C", Offset = "0x80171C")]
		public float limitMaximum;

		[Token(Token = "0x40020ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RenderTexture[] adaptRenderTex;

		[Token(Token = "0x40020EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int curAdaptIndex;

		[Token(Token = "0x40020EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Shader shaderLum;

		[Token(Token = "0x40020F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material m_materialLum;

		[Token(Token = "0x40020F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Shader shaderReduce;

		[Token(Token = "0x40020F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material m_materialReduce;

		[Token(Token = "0x40020F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Shader shaderAdapt;

		[Token(Token = "0x40020F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material m_materialAdapt;

		[Token(Token = "0x40020F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Shader shaderApply;

		[Token(Token = "0x40020F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material m_materialApply;

		[Token(Token = "0x17000284")]
		protected Material materialLum
		{
			[Token(Token = "0x6001607")]
			[Address(RVA = "0x12A17B0", Offset = "0x12A17B0", VA = "0x12A17B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000285")]
		protected Material materialReduce
		{
			[Token(Token = "0x6001608")]
			[Address(RVA = "0x12A1878", Offset = "0x12A1878", VA = "0x12A1878")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000286")]
		protected Material materialAdapt
		{
			[Token(Token = "0x6001609")]
			[Address(RVA = "0x12A1940", Offset = "0x12A1940", VA = "0x12A1940")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000287")]
		protected Material materialApply
		{
			[Token(Token = "0x600160A")]
			[Address(RVA = "0x12A1A08", Offset = "0x12A1A08", VA = "0x12A1A08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600160B")]
		[Address(RVA = "0x12A1AD0", Offset = "0x12A1AD0", VA = "0x12A1AD0")]
		private void Start()
		{
		}

		[Token(Token = "0x600160C")]
		[Address(RVA = "0x12A1B64", Offset = "0x12A1B64", VA = "0x12A1B64")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600160D")]
		[Address(RVA = "0x12A1CB8", Offset = "0x12A1CB8", VA = "0x12A1CB8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600160E")]
		[Address(RVA = "0x12A1EF0", Offset = "0x12A1EF0", VA = "0x12A1EF0")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600160F")]
		[Address(RVA = "0x12A2158", Offset = "0x12A2158", VA = "0x12A2158")]
		private void CalculateAdaptation(Texture curTexture)
		{
		}

		[Token(Token = "0x6001610")]
		[Address(RVA = "0x12A2374", Offset = "0x12A2374", VA = "0x12A2374")]
		public ContrastStretch()
		{
		}
	}
	[Token(Token = "0x20002DF")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7F8984", Offset = "0x7F8984")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7F8984", Offset = "0x7F8984")]
	public class CreaseShading : PostEffectsBase
	{
		[Token(Token = "0x40020F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float intensity;

		[Token(Token = "0x40020F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int softness;

		[Token(Token = "0x40020F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float spread;

		[Token(Token = "0x40020FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Shader blurShader;

		[Token(Token = "0x40020FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material blurMaterial;

		[Token(Token = "0x40020FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Shader depthFetchShader;

		[Token(Token = "0x40020FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material depthFetchMaterial;

		[Token(Token = "0x40020FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Shader creaseApplyShader;

		[Token(Token = "0x40020FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material creaseApplyMaterial;

		[Token(Token = "0x6001611")]
		[Address(RVA = "0x12A23F4", Offset = "0x12A23F4", VA = "0x12A23F4", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6001612")]
		[Address(RVA = "0x12A246C", Offset = "0x12A246C", VA = "0x12A246C")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001613")]
		[Address(RVA = "0x12A2818", Offset = "0x12A2818", VA = "0x12A2818")]
		public CreaseShading()
		{
		}
	}
	[Token(Token = "0x20002E0")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7F8A1C", Offset = "0x7F8A1C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7F8A1C", Offset = "0x7F8A1C")]
	public class DepthOfFieldDeprecated : PostEffectsBase
	{
		[Token(Token = "0x200055A")]
		public enum Dof34QualitySetting
		{
			[Token(Token = "0x4002749")]
			OnlyBackground = 1,
			[Token(Token = "0x400274A")]
			BackgroundAndForeground
		}

		[Token(Token = "0x200055B")]
		public enum DofResolution
		{
			[Token(Token = "0x400274C")]
			High = 2,
			[Token(Token = "0x400274D")]
			Medium,
			[Token(Token = "0x400274E")]
			Low
		}

		[Token(Token = "0x200055C")]
		public enum DofBlurriness
		{
			[Token(Token = "0x4002750")]
			Low = 1,
			[Token(Token = "0x4002751")]
			High = 2,
			[Token(Token = "0x4002752")]
			VeryHigh = 4
		}

		[Token(Token = "0x200055D")]
		public enum BokehDestination
		{
			[Token(Token = "0x4002754")]
			Background = 1,
			[Token(Token = "0x4002755")]
			Foreground,
			[Token(Token = "0x4002756")]
			BackgroundAndForeground
		}

		[Token(Token = "0x4002100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int SMOOTH_DOWNSAMPLE_PASS;

		[Token(Token = "0x4002101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static float BOKEH_EXTRA_BLUR;

		[Token(Token = "0x4002102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Dof34QualitySetting quality;

		[Token(Token = "0x4002103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public DofResolution resolution;

		[Token(Token = "0x4002104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool simpleTweakMode;

		[Token(Token = "0x4002105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float focalPoint;

		[Token(Token = "0x4002106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float smoothness;

		[Token(Token = "0x4002107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float focalZDistance;

		[Token(Token = "0x4002108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float focalZStartCurve;

		[Token(Token = "0x4002109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float focalZEndCurve;

		[Token(Token = "0x400210A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float focalStartCurve;

		[Token(Token = "0x400210B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float focalEndCurve;

		[Token(Token = "0x400210C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float focalDistance01;

		[Token(Token = "0x400210D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform objectFocus;

		[Token(Token = "0x400210E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float focalSize;

		[Token(Token = "0x400210F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public DofBlurriness bluriness;

		[Token(Token = "0x4002110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float maxBlurSpread;

		[Token(Token = "0x4002111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float foregroundBlurExtrude;

		[Token(Token = "0x4002112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Shader dofBlurShader;

		[Token(Token = "0x4002113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Material dofBlurMaterial;

		[Token(Token = "0x4002114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Shader dofShader;

		[Token(Token = "0x4002115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Material dofMaterial;

		[Token(Token = "0x4002116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool visualize;

		[Token(Token = "0x4002117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public BokehDestination bokehDestination;

		[Token(Token = "0x4002118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float widthOverHeight;

		[Token(Token = "0x4002119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float oneOverBaseSize;

		[Token(Token = "0x400211A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public bool bokeh;

		[Token(Token = "0x400211B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		public bool bokehSupport;

		[Token(Token = "0x400211C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Shader bokehShader;

		[Token(Token = "0x400211D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Texture2D bokehTexture;

		[Token(Token = "0x400211E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float bokehScale;

		[Token(Token = "0x400211F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float bokehIntensity;

		[Token(Token = "0x4002120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public float bokehThresholdContrast;

		[Token(Token = "0x4002121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public float bokehThresholdLuminance;

		[Token(Token = "0x4002122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public int bokehDownsample;

		[Token(Token = "0x4002123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Material bokehMaterial;

		[Token(Token = "0x4002124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Camera _camera;

		[Token(Token = "0x4002125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private RenderTexture foregroundTexture;

		[Token(Token = "0x4002126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private RenderTexture mediumRezWorkTexture;

		[Token(Token = "0x4002127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private RenderTexture finalDefocus;

		[Token(Token = "0x4002128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private RenderTexture lowRezWorkTexture;

		[Token(Token = "0x4002129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private RenderTexture bokehSource;

		[Token(Token = "0x400212A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private RenderTexture bokehSource2;

		[Token(Token = "0x6001614")]
		[Address(RVA = "0x12A2830", Offset = "0x12A2830", VA = "0x12A2830")]
		private void CreateMaterials()
		{
		}

		[Token(Token = "0x6001615")]
		[Address(RVA = "0x12A2908", Offset = "0x12A2908", VA = "0x12A2908", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6001616")]
		[Address(RVA = "0x12A2A10", Offset = "0x12A2A10", VA = "0x12A2A10")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0x12A2C50", Offset = "0x12A2C50", VA = "0x12A2C50")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001618")]
		[Address(RVA = "0x12A2CCC", Offset = "0x12A2CCC", VA = "0x12A2CCC")]
		private float FocalDistance01(float worldDist)
		{
			return default(float);
		}

		[Token(Token = "0x6001619")]
		[Address(RVA = "0x12A2E2C", Offset = "0x12A2E2C", VA = "0x12A2E2C")]
		private int GetDividerBasedOnQuality()
		{
			return default(int);
		}

		[Token(Token = "0x600161A")]
		[Address(RVA = "0x12A2E50", Offset = "0x12A2E50", VA = "0x12A2E50")]
		private int GetLowResolutionDividerBasedOnQuality(int baseDivider)
		{
			return default(int);
		}

		[Token(Token = "0x600161B")]
		[Address(RVA = "0x12A2E74", Offset = "0x12A2E74", VA = "0x12A2E74")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600161C")]
		[Address(RVA = "0x12A3C5C", Offset = "0x12A3C5C", VA = "0x12A3C5C")]
		private void Blur(RenderTexture from, RenderTexture to, DofBlurriness iterations, int blurPass, float spread)
		{
		}

		[Token(Token = "0x600161D")]
		[Address(RVA = "0x12A430C", Offset = "0x12A430C", VA = "0x12A430C")]
		private void BlurFg(RenderTexture from, RenderTexture to, DofBlurriness iterations, int blurPass, float spread)
		{
		}

		[Token(Token = "0x600161E")]
		[Address(RVA = "0x12A477C", Offset = "0x12A477C", VA = "0x12A477C")]
		private void BlurHex(RenderTexture from, RenderTexture to, int blurPass, float spread, RenderTexture tmp)
		{
		}

		[Token(Token = "0x600161F")]
		[Address(RVA = "0x12A3B0C", Offset = "0x12A3B0C", VA = "0x12A3B0C")]
		private void Downsample(RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x6001620")]
		[Address(RVA = "0x12A3EFC", Offset = "0x12A3EFC", VA = "0x12A3EFC")]
		private void AddBokeh(RenderTexture bokehInfo, RenderTexture tempTex, RenderTexture finalTarget)
		{
		}

		[Token(Token = "0x6001621")]
		[Address(RVA = "0x12A45D0", Offset = "0x12A45D0", VA = "0x12A45D0")]
		private void ReleaseTextures()
		{
		}

		[Token(Token = "0x6001622")]
		[Address(RVA = "0x12A37D4", Offset = "0x12A37D4", VA = "0x12A37D4")]
		private void AllocateTextures(bool blurForeground, RenderTexture source, int divider, int lowTexDivider)
		{
		}

		[Token(Token = "0x6001623")]
		[Address(RVA = "0x12A4C6C", Offset = "0x12A4C6C", VA = "0x12A4C6C")]
		public DepthOfFieldDeprecated()
		{
		}
	}
	[Token(Token = "0x20002E1")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7F8AB4", Offset = "0x7F8AB4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7F8AB4", Offset = "0x7F8AB4")]
	public class EdgeDetection : PostEffectsBase
	{
		[Token(Token = "0x200055E")]
		public enum EdgeDetectMode
		{
			[Token(Token = "0x4002758")]
			TriangleDepthNormals,
			[Token(Token = "0x4002759")]
			RobertsCrossDepthNormals,
			[Token(Token = "0x400275A")]
			SobelDepth,
			[Token(Token = "0x400275B")]
			SobelDepthThin,
			[Token(Token = "0x400275C")]
			TriangleLuminance
		}

		[Token(Token = "0x400212B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EdgeDetectMode mode;

		[Token(Token = "0x400212C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float sensitivityDepth;

		[Token(Token = "0x400212D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float sensitivityNormals;

		[Token(Token = "0x400212E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float lumThreshold;

		[Token(Token = "0x400212F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float edgeExp;

		[Token(Token = "0x4002130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float sampleDist;

		[Token(Token = "0x4002131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float edgesOnly;

		[Token(Token = "0x4002132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Color edgesOnlyBgColor;

		[Token(Token = "0x4002133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Shader edgeDetectShader;

		[Token(Token = "0x4002134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material edgeDetectMaterial;

		[Token(Token = "0x4002135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private EdgeDetectMode oldMode;

		[Token(Token = "0x6001625")]
		[Address(RVA = "0x12A4D48", Offset = "0x12A4D48", VA = "0x12A4D48", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6001626")]
		[Address(RVA = "0x12A4E88", Offset = "0x12A4E88", VA = "0x12A4E88")]
		private new void Start()
		{
		}

		[Token(Token = "0x6001627")]
		[Address(RVA = "0x12A4DC0", Offset = "0x12A4DC0", VA = "0x12A4DC0")]
		private void SetCameraFlag()
		{
		}

		[Token(Token = "0x6001628")]
		[Address(RVA = "0x12A4E94", Offset = "0x12A4E94", VA = "0x12A4E94")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001629")]
		[Address(RVA = "0x12A4E98", Offset = "0x12A4E98", VA = "0x12A4E98")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600162A")]
		[Address(RVA = "0x12A5088", Offset = "0x12A5088", VA = "0x12A5088")]
		public EdgeDetection()
		{
		}
	}
	[Token(Token = "0x20002E2")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7F8B4C", Offset = "0x7F8B4C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7F8B4C", Offset = "0x7F8B4C")]
	public class Fisheye : PostEffectsBase
	{
		[Token(Token = "0x4002136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x801734", Offset = "0x801734")]
		public float strengthX;

		[Token(Token = "0x4002137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x80174C", Offset = "0x80174C")]
		public float strengthY;

		[Token(Token = "0x4002138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Shader fishEyeShader;

		[Token(Token = "0x4002139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material fisheyeMaterial;

		[Token(Token = "0x600162B")]
		[Address(RVA = "0x12A50D8", Offset = "0x12A50D8", VA = "0x12A50D8", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x600162C")]
		[Address(RVA = "0x12A5130", Offset = "0x12A5130", VA = "0x12A5130")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600162D")]
		[Address(RVA = "0x12A52A4", Offset = "0x12A52A4", VA = "0x12A52A4")]
		public Fisheye()
		{
		}
	}
	[Token(Token = "0x20002E3")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7F8BE4", Offset = "0x7F8BE4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7F8BE4", Offset = "0x7F8BE4")]
	internal class GlobalFog : PostEffectsBase
	{
		[Token(Token = "0x400213A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x801764", Offset = "0x801764")]
		public bool distanceFog;

		[Token(Token = "0x400213B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x80179C", Offset = "0x80179C")]
		public bool excludeFarPixels;

		[Token(Token = "0x400213C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8017D4", Offset = "0x8017D4")]
		public bool useRadialDistance;

		[Token(Token = "0x400213D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x80180C", Offset = "0x80180C")]
		public bool heightFog;

		[Token(Token = "0x400213E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x801844", Offset = "0x801844")]
		public float height;

		[Token(Token = "0x400213F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x80187C", Offset = "0x80187C")]
		public float heightDensity;

		[Token(Token = "0x4002140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x801898", Offset = "0x801898")]
		public float startDistance;

		[Token(Token = "0x4002141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Shader fogShader;

		[Token(Token = "0x4002142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material fogMaterial;

		[Token(Token = "0x600162E")]
		[Address(RVA = "0x12A52BC", Offset = "0x12A52BC", VA = "0x12A52BC", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x600162F")]
		[Address(RVA = "0x12A5314", Offset = "0x12A5314", VA = "0x12A5314")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001630")]
		[Address(RVA = "0x12A595C", Offset = "0x12A595C", VA = "0x12A595C")]
		public GlobalFog()
		{
		}
	}
	[Token(Token = "0x20002E4")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7F8C7C", Offset = "0x7F8C7C")]
	public class Grayscale : ImageEffectBase
	{
		[Token(Token = "0x4002143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Texture textureRamp;

		[Token(Token = "0x4002144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8018D0", Offset = "0x8018D0")]
		public float rampOffset;

		[Token(Token = "0x6001631")]
		[Address(RVA = "0x12A597C", Offset = "0x12A597C", VA = "0x12A597C")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001632")]
		[Address(RVA = "0x12A5A58", Offset = "0x12A5A58", VA = "0x12A5A58")]
		public Grayscale()
		{
		}
	}
	[Token(Token = "0x20002E5")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7F8CC8", Offset = "0x7F8CC8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7F8CC8", Offset = "0x7F8CC8")]
	public class ImageEffectBase : MonoBehaviour
	{
		[Token(Token = "0x4002145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Shader shader;

		[Token(Token = "0x4002146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material m_Material;

		[Token(Token = "0x17000288")]
		protected Material material
		{
			[Token(Token = "0x6001634")]
			[Address(RVA = "0x12A12E8", Offset = "0x12A12E8", VA = "0x12A12E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001633")]
		[Address(RVA = "0x12A5A60", Offset = "0x12A5A60", VA = "0x12A5A60", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001635")]
		[Address(RVA = "0x12A5B10", Offset = "0x12A5B10", VA = "0x12A5B10", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001636")]
		[Address(RVA = "0x12A13B8", Offset = "0x12A13B8", VA = "0x12A13B8")]
		public ImageEffectBase()
		{
		}
	}
	[Token(Token = "0x20002E6")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7F8D50", Offset = "0x7F8D50")]
	public class ImageEffects
	{
		[Token(Token = "0x6001637")]
		[Address(RVA = "0x12A5BC0", Offset = "0x12A5BC0", VA = "0x12A5BC0")]
		public static void RenderDistortion(Material material, RenderTexture source, RenderTexture destination, float angle, Vector2 center, Vector2 radius)
		{
		}

		[Token(Token = "0x6001638")]
		[Address(RVA = "0x12A5E40", Offset = "0x12A5E40", VA = "0x12A5E40")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x805288", Offset = "0x805288")]
		public static void Blit(RenderTexture source, RenderTexture dest)
		{
		}

		[Token(Token = "0x6001639")]
		[Address(RVA = "0x12A5EB8", Offset = "0x12A5EB8", VA = "0x12A5EB8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8052C0", Offset = "0x8052C0")]
		public static void BlitWithMaterial(Material material, RenderTexture source, RenderTexture dest)
		{
		}

		[Token(Token = "0x600163A")]
		[Address(RVA = "0x12A5F38", Offset = "0x12A5F38", VA = "0x12A5F38")]
		public ImageEffects()
		{
		}
	}
	[Token(Token = "0x20002E7")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7F8D88", Offset = "0x7F8D88")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7F8D88", Offset = "0x7F8D88")]
	public class MotionBlur : ImageEffectBase
	{
		[Token(Token = "0x4002147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8018E8", Offset = "0x8018E8")]
		public float blurAmount;

		[Token(Token = "0x4002148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool extraBlur;

		[Token(Token = "0x4002149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RenderTexture accumTexture;

		[Token(Token = "0x600163B")]
		[Address(RVA = "0x12A5F40", Offset = "0x12A5F40", VA = "0x12A5F40", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600163C")]
		[Address(RVA = "0x12A5F44", Offset = "0x12A5F44", VA = "0x12A5F44", Slot = "5")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x600163D")]
		[Address(RVA = "0x12A5FB8", Offset = "0x12A5FB8", VA = "0x12A5FB8")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600163E")]
		[Address(RVA = "0x12A6344", Offset = "0x12A6344", VA = "0x12A6344")]
		public MotionBlur()
		{
		}
	}
	[Token(Token = "0x20002E8")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7F8E20", Offset = "0x7F8E20")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7F8E20", Offset = "0x7F8E20")]
	public class NoiseAndGrain : PostEffectsBase
	{
		[Token(Token = "0x400214A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float intensityMultiplier;

		[Token(Token = "0x400214B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float generalIntensity;

		[Token(Token = "0x400214C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float blackIntensity;

		[Token(Token = "0x400214D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float whiteIntensity;

		[Token(Token = "0x400214E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float midGrey;

		[Token(Token = "0x400214F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool dx11Grain;

		[Token(Token = "0x4002150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float softness;

		[Token(Token = "0x4002151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool monochrome;

		[Token(Token = "0x4002152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 intensities;

		[Token(Token = "0x4002153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 tiling;

		[Token(Token = "0x4002154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float monochromeTiling;

		[Token(Token = "0x4002155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public FilterMode filterMode;

		[Token(Token = "0x4002156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture2D noiseTexture;

		[Token(Token = "0x4002157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Shader noiseShader;

		[Token(Token = "0x4002158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Material noiseMaterial;

		[Token(Token = "0x4002159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Shader dx11NoiseShader;

		[Token(Token = "0x400215A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Material dx11NoiseMaterial;

		[Token(Token = "0x400215B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float TILE_AMOUNT;

		[Token(Token = "0x600163F")]
		[Address(RVA = "0x12A6358", Offset = "0x12A6358", VA = "0x12A6358", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6001640")]
		[Address(RVA = "0x12A63D0", Offset = "0x12A63D0", VA = "0x12A63D0")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001641")]
		[Address(RVA = "0x12A6CF4", Offset = "0x12A6CF4", VA = "0x12A6CF4")]
		private static void DrawNoiseQuadGrid(RenderTexture source, RenderTexture dest, Material fxMaterial, Texture2D noise, int passNr)
		{
		}

		[Token(Token = "0x6001642")]
		[Address(RVA = "0x12A7074", Offset = "0x12A7074", VA = "0x12A7074")]
		public NoiseAndGrain()
		{
		}
	}
	[Token(Token = "0x20002E9")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7F8EB8", Offset = "0x7F8EB8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7F8EB8", Offset = "0x7F8EB8")]
	public class NoiseAndScratches : MonoBehaviour
	{
		[Token(Token = "0x400215C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool monochrome;

		[Token(Token = "0x400215D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool rgbFallback;

		[Token(Token = "0x400215E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x801904", Offset = "0x801904")]
		public float grainIntensityMin;

		[Token(Token = "0x400215F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x80191C", Offset = "0x80191C")]
		public float grainIntensityMax;

		[Token(Token = "0x4002160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x801934", Offset = "0x801934")]
		public float grainSize;

		[Token(Token = "0x4002161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x801954", Offset = "0x801954")]
		public float scratchIntensityMin;

		[Token(Token = "0x4002162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x80196C", Offset = "0x80196C")]
		public float scratchIntensityMax;

		[Token(Token = "0x4002163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x801984", Offset = "0x801984")]
		public float scratchFPS;

		[Token(Token = "0x4002164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x80199C", Offset = "0x80199C")]
		public float scratchJitter;

		[Token(Token = "0x4002165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Texture grainTexture;

		[Token(Token = "0x4002166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Texture scratchTexture;

		[Token(Token = "0x4002167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Shader shaderRGB;

		[Token(Token = "0x4002168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Shader shaderYUV;

		[Token(Token = "0x4002169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Material m_MaterialRGB;

		[Token(Token = "0x400216A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material m_MaterialYUV;

		[Token(Token = "0x400216B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float scratchTimeLeft;

		[Token(Token = "0x400216C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float scratchX;

		[Token(Token = "0x400216D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float scratchY;

		[Token(Token = "0x17000289")]
		protected Material material
		{
			[Token(Token = "0x6001645")]
			[Address(RVA = "0x12A72BC", Offset = "0x12A72BC", VA = "0x12A72BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001644")]
		[Address(RVA = "0x12A717C", Offset = "0x12A717C", VA = "0x12A717C")]
		protected void Start()
		{
		}

		[Token(Token = "0x6001646")]
		[Address(RVA = "0x12A741C", Offset = "0x12A741C", VA = "0x12A741C")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x6001647")]
		[Address(RVA = "0x12A7520", Offset = "0x12A7520", VA = "0x12A7520")]
		private void SanitizeParameters()
		{
		}

		[Token(Token = "0x6001648")]
		[Address(RVA = "0x12A765C", Offset = "0x12A765C", VA = "0x12A765C")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001649")]
		[Address(RVA = "0x12A79B0", Offset = "0x12A79B0", VA = "0x12A79B0")]
		public NoiseAndScratches()
		{
		}
	}
	[Token(Token = "0x20002EA")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7F8F50", Offset = "0x7F8F50")]
	public class PostEffectsBase : MonoBehaviour
	{
		[Token(Token = "0x400216E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool supportHDRTextures;

		[Token(Token = "0x400216F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		protected bool supportDX11;

		[Token(Token = "0x4002170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		protected bool isSupported;

		[Token(Token = "0x4002171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Material> createdMaterials;

		[Token(Token = "0x600164A")]
		[Address(RVA = "0x12993C8", Offset = "0x12993C8", VA = "0x12993C8")]
		protected Material CheckShaderAndCreateMaterial(Shader s, Material m2Create)
		{
			return null;
		}

		[Token(Token = "0x600164B")]
		[Address(RVA = "0x1298AA0", Offset = "0x1298AA0", VA = "0x1298AA0")]
		protected Material CreateMaterial(Shader s, Material m2Create)
		{
			return null;
		}

		[Token(Token = "0x600164C")]
		[Address(RVA = "0x12A79E4", Offset = "0x12A79E4", VA = "0x12A79E4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600164D")]
		[Address(RVA = "0x12A79F0", Offset = "0x12A79F0", VA = "0x12A79F0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600164E")]
		[Address(RVA = "0x12A79F4", Offset = "0x12A79F4", VA = "0x12A79F4")]
		private void RemoveCreatedMaterials()
		{
		}

		[Token(Token = "0x600164F")]
		[Address(RVA = "0x12A7AA8", Offset = "0x12A7AA8", VA = "0x12A7AA8")]
		protected bool CheckSupport()
		{
			return default(bool);
		}

		[Token(Token = "0x6001650")]
		[Address(RVA = "0x12A7AB0", Offset = "0x12A7AB0", VA = "0x12A7AB0", Slot = "4")]
		public virtual bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6001651")]
		[Address(RVA = "0x129F870", Offset = "0x129F870", VA = "0x129F870")]
		protected void Start()
		{
		}

		[Token(Token = "0x6001652")]
		[Address(RVA = "0x1298994", Offset = "0x1298994", VA = "0x1298994")]
		protected bool CheckSupport(bool needDepth)
		{
			return default(bool);
		}

		[Token(Token = "0x6001653")]
		[Address(RVA = "0x129D93C", Offset = "0x129D93C", VA = "0x129D93C")]
		protected bool CheckSupport(bool needDepth, bool needHdr)
		{
			return default(bool);
		}

		[Token(Token = "0x6001654")]
		[Address(RVA = "0x12A7B60", Offset = "0x12A7B60", VA = "0x12A7B60")]
		public bool Dx11Support()
		{
			return default(bool);
		}

		[Token(Token = "0x6001655")]
		[Address(RVA = "0x1298CAC", Offset = "0x1298CAC", VA = "0x1298CAC")]
		protected void ReportAutoDisable()
		{
		}

		[Token(Token = "0x6001656")]
		[Address(RVA = "0x12A7B68", Offset = "0x12A7B68", VA = "0x12A7B68")]
		private bool CheckShader(Shader s)
		{
			return default(bool);
		}

		[Token(Token = "0x6001657")]
		[Address(RVA = "0x1298C80", Offset = "0x1298C80", VA = "0x1298C80")]
		protected void NotSupported()
		{
		}

		[Token(Token = "0x6001658")]
		[Address(RVA = "0x12A7D70", Offset = "0x12A7D70", VA = "0x12A7D70")]
		protected void DrawBorder(RenderTexture dest, Material material)
		{
		}

		[Token(Token = "0x6001659")]
		[Address(RVA = "0x12992C4", Offset = "0x12992C4", VA = "0x12992C4")]
		public PostEffectsBase()
		{
		}
	}
	[Token(Token = "0x20002EB")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7F8FC4", Offset = "0x7F8FC4")]
	internal class PostEffectsHelper : MonoBehaviour
	{
		[Token(Token = "0x600165A")]
		[Address(RVA = "0x12A80F0", Offset = "0x12A80F0", VA = "0x12A80F0")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600165B")]
		[Address(RVA = "0x12A815C", Offset = "0x12A815C", VA = "0x12A815C")]
		private static void DrawLowLevelPlaneAlignedWithCamera(float dist, RenderTexture source, RenderTexture dest, Material material, Camera cameraForProjectionMatrix)
		{
		}

		[Token(Token = "0x600165C")]
		[Address(RVA = "0x12A83D8", Offset = "0x12A83D8", VA = "0x12A83D8")]
		private static void DrawBorder(RenderTexture dest, Material material)
		{
		}

		[Token(Token = "0x600165D")]
		[Address(RVA = "0x12A8754", Offset = "0x12A8754", VA = "0x12A8754")]
		private static void DrawLowLevelQuad(float x1, float x2, float y1, float y2, RenderTexture source, RenderTexture dest, Material material)
		{
		}

		[Token(Token = "0x600165E")]
		[Address(RVA = "0x12A8904", Offset = "0x12A8904", VA = "0x12A8904")]
		public PostEffectsHelper()
		{
		}
	}
	[Token(Token = "0x20002EC")]
	internal class Quads
	{
		[Token(Token = "0x4002172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Mesh[] meshes;

		[Token(Token = "0x4002173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int currentQuads;

		[Token(Token = "0x600165F")]
		[Address(RVA = "0x12A890C", Offset = "0x12A890C", VA = "0x12A890C")]
		private static bool HasMeshes()
		{
			return default(bool);
		}

		[Token(Token = "0x6001660")]
		[Address(RVA = "0x12A2A6C", Offset = "0x12A2A6C", VA = "0x12A2A6C")]
		public static void Cleanup()
		{
		}

		[Token(Token = "0x6001661")]
		[Address(RVA = "0x12A49A8", Offset = "0x12A49A8", VA = "0x12A49A8")]
		public static Mesh[] GetMeshes(int totalWidth, int totalHeight)
		{
			return null;
		}

		[Token(Token = "0x6001662")]
		[Address(RVA = "0x12A8A2C", Offset = "0x12A8A2C", VA = "0x12A8A2C")]
		private static Mesh GetMesh(int triCount, int triOffset, int totalWidth, int totalHeight)
		{
			return null;
		}

		[Token(Token = "0x6001663")]
		[Address(RVA = "0x12A8F60", Offset = "0x12A8F60", VA = "0x12A8F60")]
		public Quads()
		{
		}
	}
	[Token(Token = "0x20002ED")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7F9038", Offset = "0x7F9038")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7F9038", Offset = "0x7F9038")]
	public class ScreenOverlay : PostEffectsBase
	{
		[Token(Token = "0x200055F")]
		public enum OverlayBlendMode
		{
			[Token(Token = "0x400275E")]
			Additive,
			[Token(Token = "0x400275F")]
			ScreenBlend,
			[Token(Token = "0x4002760")]
			Multiply,
			[Token(Token = "0x4002761")]
			Overlay,
			[Token(Token = "0x4002762")]
			AlphaBlend
		}

		[Token(Token = "0x4002174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public OverlayBlendMode blendMode;

		[Token(Token = "0x4002175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float intensity;

		[Token(Token = "0x4002176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Texture2D texture;

		[Token(Token = "0x4002177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Shader overlayShader;

		[Token(Token = "0x4002178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material overlayMaterial;

		[Token(Token = "0x6001665")]
		[Address(RVA = "0x12A8F6C", Offset = "0x12A8F6C", VA = "0x12A8F6C", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6001666")]
		[Address(RVA = "0x12A8FC4", Offset = "0x12A8FC4", VA = "0x12A8FC4")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001667")]
		[Address(RVA = "0x12A912C", Offset = "0x12A912C", VA = "0x12A912C")]
		public ScreenOverlay()
		{
		}
	}
	[Token(Token = "0x20002EE")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7F90D0", Offset = "0x7F90D0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7F90D0", Offset = "0x7F90D0")]
	internal class ScreenSpaceAmbientObscurance : PostEffectsBase
	{
		[Token(Token = "0x4002179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8019B4", Offset = "0x8019B4")]
		public float intensity;

		[Token(Token = "0x400217A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8019CC", Offset = "0x8019CC")]
		public float radius;

		[Token(Token = "0x400217B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8019E8", Offset = "0x8019E8")]
		public int blurIterations;

		[Token(Token = "0x400217C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x801A00", Offset = "0x801A00")]
		public float blurFilterDistance;

		[Token(Token = "0x400217D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x801A18", Offset = "0x801A18")]
		public int downsample;

		[Token(Token = "0x400217E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Texture2D rand;

		[Token(Token = "0x400217F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Shader aoShader;

		[Token(Token = "0x4002180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material aoMaterial;

		[Token(Token = "0x6001668")]
		[Address(RVA = "0x12A913C", Offset = "0x12A913C", VA = "0x12A913C", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6001669")]
		[Address(RVA = "0x12A9194", Offset = "0x12A9194", VA = "0x12A9194")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600166A")]
		[Address(RVA = "0x12A923C", Offset = "0x12A923C", VA = "0x12A923C")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600166B")]
		[Address(RVA = "0x12A9A60", Offset = "0x12A9A60", VA = "0x12A9A60")]
		public ScreenSpaceAmbientObscurance()
		{
		}
	}
	[Token(Token = "0x20002EF")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7F9168", Offset = "0x7F9168")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7F9168", Offset = "0x7F9168")]
	public class ScreenSpaceAmbientOcclusion : MonoBehaviour
	{
		[Token(Token = "0x2000560")]
		public enum SSAOSamples
		{
			[Token(Token = "0x4002764")]
			Low,
			[Token(Token = "0x4002765")]
			Medium,
			[Token(Token = "0x4002766")]
			High
		}

		[Token(Token = "0x4002181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x801A30", Offset = "0x801A30")]
		public float m_Radius;

		[Token(Token = "0x4002182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SSAOSamples m_SampleCount;

		[Token(Token = "0x4002183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x801A4C", Offset = "0x801A4C")]
		public float m_OcclusionIntensity;

		[Token(Token = "0x4002184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x801A64", Offset = "0x801A64")]
		public int m_Blur;

		[Token(Token = "0x4002185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x801A7C", Offset = "0x801A7C")]
		public int m_Downsampling;

		[Token(Token = "0x4002186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x801A94", Offset = "0x801A94")]
		public float m_OcclusionAttenuation;

		[Token(Token = "0x4002187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x801AB0", Offset = "0x801AB0")]
		public float m_MinZ;

		[Token(Token = "0x4002188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Shader m_SSAOShader;

		[Token(Token = "0x4002189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material m_SSAOMaterial;

		[Token(Token = "0x400218A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Texture2D m_RandomTexture;

		[Token(Token = "0x400218B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_Supported;

		[Token(Token = "0x600166C")]
		[Address(RVA = "0x12A9A7C", Offset = "0x12A9A7C", VA = "0x12A9A7C")]
		private static Material CreateMaterial(Shader shader)
		{
			return null;
		}

		[Token(Token = "0x600166D")]
		[Address(RVA = "0x12A9B30", Offset = "0x12A9B30", VA = "0x12A9B30")]
		private static void DestroyMaterial(Material mat)
		{
		}

		[Token(Token = "0x600166E")]
		[Address(RVA = "0x12A9BCC", Offset = "0x12A9BCC", VA = "0x12A9BCC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600166F")]
		[Address(RVA = "0x12A9BD4", Offset = "0x12A9BD4", VA = "0x12A9BD4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001670")]
		[Address(RVA = "0x12A9D68", Offset = "0x12A9D68", VA = "0x12A9D68")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001671")]
		[Address(RVA = "0x12A9CAC", Offset = "0x12A9CAC", VA = "0x12A9CAC")]
		private void CreateMaterials()
		{
		}

		[Token(Token = "0x6001672")]
		[Address(RVA = "0x12A9DE0", Offset = "0x12A9DE0", VA = "0x12A9DE0")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001673")]
		[Address(RVA = "0x12AA4A4", Offset = "0x12AA4A4", VA = "0x12AA4A4")]
		public ScreenSpaceAmbientOcclusion()
		{
		}
	}
	[Token(Token = "0x20002F0")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7F9200", Offset = "0x7F9200")]
	public class SepiaTone : ImageEffectBase
	{
		[Token(Token = "0x6001674")]
		[Address(RVA = "0x12AA4DC", Offset = "0x12AA4DC", VA = "0x12AA4DC")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001675")]
		[Address(RVA = "0x12AA56C", Offset = "0x12AA56C", VA = "0x12AA56C")]
		public SepiaTone()
		{
		}
	}
	[Token(Token = "0x20002F1")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7F924C", Offset = "0x7F924C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7F924C", Offset = "0x7F924C")]
	public class SunShafts : PostEffectsBase
	{
		[Token(Token = "0x2000561")]
		public enum SunShaftsResolution
		{
			[Token(Token = "0x4002768")]
			Low,
			[Token(Token = "0x4002769")]
			Normal,
			[Token(Token = "0x400276A")]
			High
		}

		[Token(Token = "0x2000562")]
		public enum ShaftsScreenBlendMode
		{
			[Token(Token = "0x400276C")]
			Screen,
			[Token(Token = "0x400276D")]
			Add
		}

		[Token(Token = "0x400218C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SunShaftsResolution resolution;

		[Token(Token = "0x400218D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public ShaftsScreenBlendMode screenBlendMode;

		[Token(Token = "0x400218E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform sunTransform;

		[Token(Token = "0x400218F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int radialBlurIterations;

		[Token(Token = "0x4002190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Color sunColor;

		[Token(Token = "0x4002191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Color sunThreshold;

		[Token(Token = "0x4002192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float sunShaftBlurRadius;

		[Token(Token = "0x4002193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float sunShaftIntensity;

		[Token(Token = "0x4002194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float maxRadius;

		[Token(Token = "0x4002195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool useDepthTexture;

		[Token(Token = "0x4002196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Shader sunShaftsShader;

		[Token(Token = "0x4002197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Material sunShaftsMaterial;

		[Token(Token = "0x4002198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Shader simpleClearShader;

		[Token(Token = "0x4002199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Material simpleClearMaterial;

		[Token(Token = "0x6001676")]
		[Address(RVA = "0x12AA574", Offset = "0x12AA574", VA = "0x12AA574", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6001677")]
		[Address(RVA = "0x12AA5DC", Offset = "0x12AA5DC", VA = "0x12AA5DC")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001678")]
		[Address(RVA = "0x12AADDC", Offset = "0x12AADDC", VA = "0x12AADDC")]
		public SunShafts()
		{
		}
	}
	[Token(Token = "0x20002F2")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7F92E4", Offset = "0x7F92E4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7F92E4", Offset = "0x7F92E4")]
	internal class TiltShift : PostEffectsBase
	{
		[Token(Token = "0x2000563")]
		public enum TiltShiftMode
		{
			[Token(Token = "0x400276F")]
			TiltShiftMode,
			[Token(Token = "0x4002770")]
			IrisMode
		}

		[Token(Token = "0x2000564")]
		public enum TiltShiftQuality
		{
			[Token(Token = "0x4002772")]
			Preview,
			[Token(Token = "0x4002773")]
			Low,
			[Token(Token = "0x4002774")]
			Normal,
			[Token(Token = "0x4002775")]
			High
		}

		[Token(Token = "0x400219A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TiltShiftMode mode;

		[Token(Token = "0x400219B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public TiltShiftQuality quality;

		[Token(Token = "0x400219C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x801ACC", Offset = "0x801ACC")]
		public float blurArea;

		[Token(Token = "0x400219D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x801AE4", Offset = "0x801AE4")]
		public float maxBlurSize;

		[Token(Token = "0x400219E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x801AFC", Offset = "0x801AFC")]
		public int downsample;

		[Token(Token = "0x400219F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Shader tiltShiftShader;

		[Token(Token = "0x40021A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material tiltShiftMaterial;

		[Token(Token = "0x6001679")]
		[Address(RVA = "0x12AAE84", Offset = "0x12AAE84", VA = "0x12AAE84", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x600167A")]
		[Address(RVA = "0x12AAEDC", Offset = "0x12AAEDC", VA = "0x12AAEDC")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600167B")]
		[Address(RVA = "0x12AB180", Offset = "0x12AB180", VA = "0x12AB180")]
		public TiltShift()
		{
		}
	}
	[Token(Token = "0x20002F3")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7F936C", Offset = "0x7F936C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7F936C", Offset = "0x7F936C")]
	public class Tonemapping : PostEffectsBase
	{
		[Token(Token = "0x2000565")]
		public enum TonemapperType
		{
			[Token(Token = "0x4002777")]
			SimpleReinhard,
			[Token(Token = "0x4002778")]
			UserCurve,
			[Token(Token = "0x4002779")]
			Hable,
			[Token(Token = "0x400277A")]
			Photographic,
			[Token(Token = "0x400277B")]
			OptimizedHejiDawson,
			[Token(Token = "0x400277C")]
			AdaptiveReinhard,
			[Token(Token = "0x400277D")]
			AdaptiveReinhardAutoWhite
		}

		[Token(Token = "0x2000566")]
		public enum AdaptiveTexSize
		{
			[Token(Token = "0x400277F")]
			Square16 = 0x10,
			[Token(Token = "0x4002780")]
			Square32 = 0x20,
			[Token(Token = "0x4002781")]
			Square64 = 0x40,
			[Token(Token = "0x4002782")]
			Square128 = 0x80,
			[Token(Token = "0x4002783")]
			Square256 = 0x100,
			[Token(Token = "0x4002784")]
			Square512 = 0x200,
			[Token(Token = "0x4002785")]
			Square1024 = 0x400
		}

		[Token(Token = "0x40021A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TonemapperType type;

		[Token(Token = "0x40021A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public AdaptiveTexSize adaptiveTextureSize;

		[Token(Token = "0x40021A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve remapCurve;

		[Token(Token = "0x40021A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Texture2D curveTex;

		[Token(Token = "0x40021A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float exposureAdjustment;

		[Token(Token = "0x40021A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float middleGrey;

		[Token(Token = "0x40021A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float white;

		[Token(Token = "0x40021A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float adaptionSpeed;

		[Token(Token = "0x40021A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Shader tonemapper;

		[Token(Token = "0x40021AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool validRenderTextureFormat;

		[Token(Token = "0x40021AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material tonemapMaterial;

		[Token(Token = "0x40021AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private RenderTexture rt;

		[Token(Token = "0x40021AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private RenderTextureFormat rtFormat;

		[Token(Token = "0x600167C")]
		[Address(RVA = "0x12AB198", Offset = "0x12AB198", VA = "0x12AB198", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x600167D")]
		[Address(RVA = "0x12AB2D8", Offset = "0x12AB2D8", VA = "0x12AB2D8")]
		public float UpdateCurve()
		{
			return default(float);
		}

		[Token(Token = "0x600167E")]
		[Address(RVA = "0x12AB58C", Offset = "0x12AB58C", VA = "0x12AB58C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600167F")]
		[Address(RVA = "0x12AB6E4", Offset = "0x12AB6E4", VA = "0x12AB6E4")]
		private bool CreateInternalRenderTexture()
		{
			return default(bool);
		}

		[Token(Token = "0x6001680")]
		[Address(RVA = "0x12AB7D8", Offset = "0x12AB7D8", VA = "0x12AB7D8")]
		[ImageEffectTransformsToLDR]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001681")]
		[Address(RVA = "0x12ABFF0", Offset = "0x12ABFF0", VA = "0x12ABFF0")]
		public Tonemapping()
		{
		}
	}
	[Token(Token = "0x20002F4")]
	internal class Triangles
	{
		[Token(Token = "0x40021AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Mesh[] meshes;

		[Token(Token = "0x40021AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int currentTris;

		[Token(Token = "0x6001682")]
		[Address(RVA = "0x12AC01C", Offset = "0x12AC01C", VA = "0x12AC01C")]
		private static bool HasMeshes()
		{
			return default(bool);
		}

		[Token(Token = "0x6001683")]
		[Address(RVA = "0x12AC160", Offset = "0x12AC160", VA = "0x12AC160")]
		private static void Cleanup()
		{
		}

		[Token(Token = "0x6001684")]
		[Address(RVA = "0x12AC344", Offset = "0x12AC344", VA = "0x12AC344")]
		private static Mesh[] GetMeshes(int totalWidth, int totalHeight)
		{
			return null;
		}

		[Token(Token = "0x6001685")]
		[Address(RVA = "0x12AC608", Offset = "0x12AC608", VA = "0x12AC608")]
		private static Mesh GetMesh(int triCount, int triOffset, int totalWidth, int totalHeight)
		{
			return null;
		}

		[Token(Token = "0x6001686")]
		[Address(RVA = "0x12ACA44", Offset = "0x12ACA44", VA = "0x12ACA44")]
		public Triangles()
		{
		}
	}
	[Token(Token = "0x20002F5")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7F9404", Offset = "0x7F9404")]
	public class Twirl : ImageEffectBase
	{
		[Token(Token = "0x40021B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 radius;

		[Token(Token = "0x40021B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x801B14", Offset = "0x801B14")]
		public float angle;

		[Token(Token = "0x40021B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector2 center;

		[Token(Token = "0x6001688")]
		[Address(RVA = "0x12ACA50", Offset = "0x12ACA50", VA = "0x12ACA50")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001689")]
		[Address(RVA = "0x12ACA94", Offset = "0x12ACA94", VA = "0x12ACA94")]
		public Twirl()
		{
		}
	}
	[Token(Token = "0x20002F6")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7F9450", Offset = "0x7F9450")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7F9450", Offset = "0x7F9450")]
	public class VignetteAndChromaticAberration : PostEffectsBase
	{
		[Token(Token = "0x2000567")]
		public enum AberrationMode
		{
			[Token(Token = "0x4002787")]
			Simple,
			[Token(Token = "0x4002788")]
			Advanced
		}

		[Token(Token = "0x40021B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AberrationMode mode;

		[Token(Token = "0x40021B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float intensity;

		[Token(Token = "0x40021B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float chromaticAberration;

		[Token(Token = "0x40021B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float axialAberration;

		[Token(Token = "0x40021B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float blur;

		[Token(Token = "0x40021B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float blurSpread;

		[Token(Token = "0x40021B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float luminanceDependency;

		[Token(Token = "0x40021BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float blurDistance;

		[Token(Token = "0x40021BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Shader vignetteShader;

		[Token(Token = "0x40021BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Shader separableBlurShader;

		[Token(Token = "0x40021BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Shader chromAberrationShader;

		[Token(Token = "0x40021BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material m_VignetteMaterial;

		[Token(Token = "0x40021BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Material m_SeparableBlurMaterial;

		[Token(Token = "0x40021C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material m_ChromAberrationMaterial;

		[Token(Token = "0x600168A")]
		[Address(RVA = "0x12ACB10", Offset = "0x12ACB10", VA = "0x12ACB10", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x600168B")]
		[Address(RVA = "0x12ACB94", Offset = "0x12ACB94", VA = "0x12ACB94")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600168C")]
		[Address(RVA = "0x12AD1C4", Offset = "0x12AD1C4", VA = "0x12AD1C4")]
		public VignetteAndChromaticAberration()
		{
		}
	}
	[Token(Token = "0x20002F7")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7F94E8", Offset = "0x7F94E8")]
	public class Vortex : ImageEffectBase
	{
		[Token(Token = "0x40021C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 radius;

		[Token(Token = "0x40021C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float angle;

		[Token(Token = "0x40021C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector2 center;

		[Token(Token = "0x600168D")]
		[Address(RVA = "0x12AD1F8", Offset = "0x12AD1F8", VA = "0x12AD1F8")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600168E")]
		[Address(RVA = "0x12AD23C", Offset = "0x12AD23C", VA = "0x12AD23C")]
		public Vortex()
		{
		}
	}
}
namespace MK.Glow
{
	[Token(Token = "0x20002F8")]
	public enum Workflow
	{
		[Token(Token = "0x40021C5")]
		Luminance,
		[Token(Token = "0x40021C6")]
		Selective
	}
	[Token(Token = "0x20002F9")]
	public enum DebugView
	{
		[Token(Token = "0x40021C8")]
		None = 0,
		[Token(Token = "0x40021C9")]
		RawBloom = 1,
		[Token(Token = "0x40021CA")]
		Bloom = 4
	}
	[Token(Token = "0x20002FA")]
	public struct RenderDimension : IDimension
	{
		[Token(Token = "0x40021CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x801B30", Offset = "0x801B30")]
		private int <width>k__BackingField;

		[Token(Token = "0x40021CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x801B40", Offset = "0x801B40")]
		private int <height>k__BackingField;

		[Token(Token = "0x1700028A")]
		public int width
		{
			[Token(Token = "0x6001690")]
			[Address(RVA = "0x885F5C", Offset = "0x885F5C", VA = "0x885F5C", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x805328", Offset = "0x805328")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001691")]
			[Address(RVA = "0x885F64", Offset = "0x885F64", VA = "0x885F64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x805338", Offset = "0x805338")]
			set
			{
			}
		}

		[Token(Token = "0x1700028B")]
		public int height
		{
			[Token(Token = "0x6001692")]
			[Address(RVA = "0x885F6C", Offset = "0x885F6C", VA = "0x885F6C", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x805348", Offset = "0x805348")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001693")]
			[Address(RVA = "0x885F74", Offset = "0x885F74", VA = "0x885F74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x805358", Offset = "0x805358")]
			set
			{
			}
		}

		[Token(Token = "0x1700028C")]
		public RenderDimension renderDimension
		{
			[Token(Token = "0x6001694")]
			[Address(RVA = "0x885F7C", Offset = "0x885F7C", VA = "0x885F7C", Slot = "6")]
			get
			{
				return default(RenderDimension);
			}
		}

		[Token(Token = "0x600168F")]
		[Address(RVA = "0x885F54", Offset = "0x885F54", VA = "0x885F54")]
		public RenderDimension(int width, int height)
		{
		}
	}
	[Token(Token = "0x20002FB")]
	public static class Compatibility
	{
		[Token(Token = "0x40021CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly bool _defaultHDRFormatSupported;

		[Token(Token = "0x6001695")]
		[Address(RVA = "0xA229D4", Offset = "0xA229D4", VA = "0xA229D4")]
		internal static RenderTextureFormat CheckSupportedRenderTextureFormat()
		{
			return default(RenderTextureFormat);
		}
	}
	[Token(Token = "0x20002FC")]
	internal sealed class Effect
	{
		[Token(Token = "0x2000568")]
		internal enum ShaderRenderPass
		{
			[Token(Token = "0x400278A")]
			Copy,
			[Token(Token = "0x400278B")]
			Presample,
			[Token(Token = "0x400278C")]
			Downsample,
			[Token(Token = "0x400278D")]
			Upsample,
			[Token(Token = "0x400278E")]
			Composite,
			[Token(Token = "0x400278F")]
			Debug
		}

		[Token(Token = "0x2000569")]
		internal enum MaterialKeywords
		{
			[Token(Token = "0x4002791")]
			DebugRawBloom,
			[Token(Token = "0x4002792")]
			DebugBloom,
			[Token(Token = "0x4002793")]
			DebugComposite
		}

		[Token(Token = "0x200056A")]
		internal struct Keyword
		{
			[Token(Token = "0x4002794")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal string name;

			[Token(Token = "0x4002795")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal bool enabled;

			[Token(Token = "0x6001FC3")]
			[Address(RVA = "0x885F3C", Offset = "0x885F3C", VA = "0x885F3C")]
			internal Keyword(string name, bool enabled)
			{
			}
		}

		[Token(Token = "0x40021CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Resources _resources;

		[Token(Token = "0x40021CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly Vector2 _selectiveWorkflowThreshold;

		[Token(Token = "0x40021D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly string _selectiveReplacementTag;

		[Token(Token = "0x40021D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly string _selectiveGlowCameraObjectName;

		[Token(Token = "0x40021D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private GameObject _selectiveGlowCameraObject;

		[Token(Token = "0x40021D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Camera _selectiveGlowCamera;

		[Token(Token = "0x40021D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RenderTexture _selectiveRenderTarget;

		[Token(Token = "0x40021D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MipBuffer _bloomDownsampleBuffer;

		[Token(Token = "0x40021D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MipBuffer _bloomUpsampleBuffer;

		[Token(Token = "0x40021D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RenderTexture _sourceFrameBuffer;

		[Token(Token = "0x40021D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Keyword[] _shaderKeywords;

		[Token(Token = "0x40021D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<RenderTexture> _renderTargetsBundle;

		[Token(Token = "0x40021DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<MaterialKeywords> _renderKeywordsBundle;

		[Token(Token = "0x40021DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int _bloomIterations;

		[Token(Token = "0x40021DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int _currentRenderIndex;

		[Token(Token = "0x40021DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float bloomUpsampleSpread;

		[Token(Token = "0x40021DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private RenderTextureFormat _renderTextureFormat;

		[Token(Token = "0x40021DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private RenderContext[] _sourceContext;

		[Token(Token = "0x40021E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private RenderContext[] _renderContext;

		[Token(Token = "0x40021E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private RenderContext _selectiveRenderContext;

		[Token(Token = "0x40021E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Camera _renderingCamera;

		[Token(Token = "0x40021E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Material _renderMaterialNoGeometry;

		[Token(Token = "0x40021E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Settings _settings;

		[Token(Token = "0x1700028D")]
		private RenderTexture sourceFrameBuffer
		{
			[Token(Token = "0x6001698")]
			[Address(RVA = "0xA22C0C", Offset = "0xA22C0C", VA = "0xA22C0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028E")]
		internal int currentRenderIndex
		{
			[Token(Token = "0x6001699")]
			[Address(RVA = "0xA22C34", Offset = "0xA22C34", VA = "0xA22C34")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700028F")]
		internal RenderTextureFormat renderTextureFormat
		{
			[Token(Token = "0x600169A")]
			[Address(RVA = "0xA22C3C", Offset = "0xA22C3C", VA = "0xA22C3C")]
			get
			{
				return default(RenderTextureFormat);
			}
		}

		[Token(Token = "0x17000290")]
		internal Material renderMaterialNoGeometry
		{
			[Token(Token = "0x600169B")]
			[Address(RVA = "0xA22C44", Offset = "0xA22C44", VA = "0xA22C44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000291")]
		private GameObject selectiveGlowCameraObject
		{
			[Token(Token = "0x60016A0")]
			[Address(RVA = "0xA23888", Offset = "0xA23888", VA = "0xA23888")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000292")]
		private Camera selectiveGlowCamera
		{
			[Token(Token = "0x60016A1")]
			[Address(RVA = "0xA2398C", Offset = "0xA2398C", VA = "0xA2398C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001697")]
		[Address(RVA = "0xA22AAC", Offset = "0xA22AAC", VA = "0xA22AAC")]
		internal Effect()
		{
		}

		[Token(Token = "0x600169C")]
		[Address(RVA = "0xA22C4C", Offset = "0xA22C4C", VA = "0xA22C4C")]
		internal void Enable()
		{
		}

		[Token(Token = "0x600169D")]
		[Address(RVA = "0xA23114", Offset = "0xA23114", VA = "0xA23114")]
		internal void Disable()
		{
		}

		[Token(Token = "0x600169E")]
		[Address(RVA = "0xA231D0", Offset = "0xA231D0", VA = "0xA231D0")]
		private void PrepareScattering(float Scattering, float scale, ref int iterations, ref float spread)
		{
		}

		[Token(Token = "0x600169F")]
		[Address(RVA = "0xA232B0", Offset = "0xA232B0", VA = "0xA232B0")]
		private void UpdateRenderBuffers()
		{
		}

		[Token(Token = "0x60016A2")]
		[Address(RVA = "0xA23A50", Offset = "0xA23A50", VA = "0xA23A50")]
		private void SetupSelectiveGlowCamera()
		{
		}

		[Token(Token = "0x60016A3")]
		[Address(RVA = "0xA23B94", Offset = "0xA23B94", VA = "0xA23B94")]
		private void CheckFeatureSupport()
		{
		}

		[Token(Token = "0x60016A4")]
		[Address(RVA = "0xA23BFC", Offset = "0xA23BFC", VA = "0xA23BFC")]
		private void BeginProfileSample(string text)
		{
		}

		[Token(Token = "0x60016A5")]
		[Address(RVA = "0xA23C00", Offset = "0xA23C00", VA = "0xA23C00")]
		private void EndProfileSample(string text)
		{
		}

		[Token(Token = "0x60016A6")]
		[Address(RVA = "0xA23C04", Offset = "0xA23C04", VA = "0xA23C04")]
		internal void Build(RenderTexture source, RenderTexture destination, Settings settings, Camera renderingCamera)
		{
		}

		[Token(Token = "0x60016A7")]
		[Address(RVA = "0xA23E3C", Offset = "0xA23E3C", VA = "0xA23E3C")]
		private void UpdateConstantBuffers()
		{
		}

		[Token(Token = "0x60016A8")]
		[Address(RVA = "0xA24864", Offset = "0xA24864", VA = "0xA24864")]
		private void SetKeyword(MaterialKeywords keyword, bool enable)
		{
		}

		[Token(Token = "0x60016A9")]
		[Address(RVA = "0xA24910", Offset = "0xA24910", VA = "0xA24910")]
		private Vector2 AngleToDirection(float angleDegree)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60016AA")]
		[Address(RVA = "0xA24718", Offset = "0xA24718", VA = "0xA24718")]
		private float ConvertGammaValue(float gammaSpacedValue)
		{
			return default(float);
		}

		[Token(Token = "0x60016AB")]
		[Address(RVA = "0xA249B4", Offset = "0xA249B4", VA = "0xA249B4")]
		private Vector4 ConvertGammaValue(Vector4 gammaSpacedVector)
		{
			return default(Vector4);
		}

		[Token(Token = "0x60016AC")]
		[Address(RVA = "0xA24A34", Offset = "0xA24A34", VA = "0xA24A34")]
		private void UpdateRenderIndex(int v)
		{
		}

		[Token(Token = "0x60016AD")]
		[Address(RVA = "0xA247AC", Offset = "0xA247AC", VA = "0xA247AC")]
		private void SetFloat(PipelineProperties.ShaderProperties.CBufferProperty property, float value)
		{
		}

		[Token(Token = "0x60016AE")]
		[Address(RVA = "0xA24A3C", Offset = "0xA24A3C", VA = "0xA24A3C")]
		private void SetVector(PipelineProperties.ShaderProperties.CBufferProperty property, Vector4 value)
		{
		}

		[Token(Token = "0x60016AF")]
		[Address(RVA = "0xA24A5C", Offset = "0xA24A5C", VA = "0xA24A5C")]
		private void SetVector(PipelineProperties.ShaderProperties.CBufferProperty property, Vector3 value)
		{
		}

		[Token(Token = "0x60016B0")]
		[Address(RVA = "0xA247CC", Offset = "0xA247CC", VA = "0xA247CC")]
		private void SetVector(PipelineProperties.ShaderProperties.CBufferProperty property, Vector2 value)
		{
		}

		[Token(Token = "0x60016B1")]
		[Address(RVA = "0xA24B04", Offset = "0xA24B04", VA = "0xA24B04")]
		private void SetTexture(PipelineProperties.ShaderProperties.DefaultProperty property, RenderTexture rt)
		{
		}

		[Token(Token = "0x60016B2")]
		[Address(RVA = "0xA24B28", Offset = "0xA24B28", VA = "0xA24B28")]
		private void SetTexture(PipelineProperties.ShaderProperties.DefaultProperty property, Texture tex)
		{
		}

		[Token(Token = "0x60016B3")]
		[Address(RVA = "0xA24B4C", Offset = "0xA24B4C", VA = "0xA24B4C")]
		private void PrepareDraw(int variant)
		{
		}

		[Token(Token = "0x60016B4")]
		[Address(RVA = "0xA24C6C", Offset = "0xA24C6C", VA = "0xA24C6C")]
		private void Draw(bool forcePixelShader = false)
		{
		}

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0xA24E44", Offset = "0xA24E44", VA = "0xA24E44")]
		private void DisableDebugKeywords()
		{
		}

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0xA23FA4", Offset = "0xA23FA4", VA = "0xA23FA4")]
		private void PreSample()
		{
		}

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0xA2411C", Offset = "0xA2411C", VA = "0xA2411C")]
		private void Downsample()
		{
		}

		[Token(Token = "0x60016B8")]
		[Address(RVA = "0xA242C0", Offset = "0xA242C0", VA = "0xA242C0")]
		private void Upsample()
		{
		}

		[Token(Token = "0x60016B9")]
		[Address(RVA = "0xA24560", Offset = "0xA24560", VA = "0xA24560")]
		private void Composite()
		{
		}

		[Token(Token = "0x60016BA")]
		[Address(RVA = "0xA24F6C", Offset = "0xA24F6C", VA = "0xA24F6C")]
		internal void AfterCompositeCleanup()
		{
		}
	}
	[Token(Token = "0x20002FD")]
	internal interface IDimension
	{
		[Token(Token = "0x17000293")]
		int width
		{
			[Token(Token = "0x60016BC")]
			get;
		}

		[Token(Token = "0x17000294")]
		int height
		{
			[Token(Token = "0x60016BD")]
			get;
		}

		[Token(Token = "0x17000295")]
		RenderDimension renderDimension
		{
			[Token(Token = "0x60016BE")]
			get;
		}
	}
	[Token(Token = "0x20002FE")]
	public sealed class MinMaxRangeAttribute : PropertyAttribute
	{
		[Token(Token = "0x40021E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minLimit;

		[Token(Token = "0x40021E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxLimit;

		[Token(Token = "0x60016BF")]
		[Address(RVA = "0xA26DF0", Offset = "0xA26DF0", VA = "0xA26DF0")]
		public MinMaxRangeAttribute(float minLimit, float maxLimit)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002FF")]
	public struct MinMaxRange
	{
		[Token(Token = "0x40021E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float minValue;

		[Token(Token = "0x40021E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float maxValue;

		[Token(Token = "0x60016C0")]
		[Address(RVA = "0x885F4C", Offset = "0x885F4C", VA = "0x885F4C")]
		public MinMaxRange(float minValue, float maxValue)
		{
		}
	}
	[Token(Token = "0x2000300")]
	internal sealed class MipBuffer
	{
		[Token(Token = "0x40021E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private RenderTexture[] _renderTargets;

		[Token(Token = "0x40021EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int[] _identifiers;

		[Token(Token = "0x17000296")]
		internal RenderTexture[] renderTargets
		{
			[Token(Token = "0x60016C1")]
			[Address(RVA = "0xA26E28", Offset = "0xA26E28", VA = "0xA26E28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000297")]
		internal int[] identifiers
		{
			[Token(Token = "0x60016C2")]
			[Address(RVA = "0xA26E30", Offset = "0xA26E30", VA = "0xA26E30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016C3")]
		[Address(RVA = "0xA22FB0", Offset = "0xA22FB0", VA = "0xA22FB0")]
		public MipBuffer(string name)
		{
		}

		[Token(Token = "0x60016C4")]
		[Address(RVA = "0xA24E88", Offset = "0xA24E88", VA = "0xA24E88")]
		internal void CreateTemporary(RenderContext[] renderContext, int level, RenderTextureFormat format)
		{
		}

		[Token(Token = "0x60016C5")]
		[Address(RVA = "0xA24F24", Offset = "0xA24F24", VA = "0xA24F24")]
		internal void ClearTemporary(int level)
		{
		}
	}
	[Token(Token = "0x2000301")]
	internal static class PipelineExtensions
	{
		[Token(Token = "0x40021EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Mesh _screenMesh;

		[Token(Token = "0x17000298")]
		private static Mesh screenMesh
		{
			[Token(Token = "0x60016C6")]
			[Address(RVA = "0xA26E7C", Offset = "0xA26E7C", VA = "0xA26E7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016C7")]
		[Address(RVA = "0xA248FC", Offset = "0xA248FC", VA = "0xA248FC")]
		internal static void SetKeyword(string keyword, bool enable)
		{
		}

		[Token(Token = "0x60016C8")]
		[Address(RVA = "0xA24CD4", Offset = "0xA24CD4", VA = "0xA24CD4")]
		internal static void Draw(List<RenderTexture> destinations, Material material, int pass)
		{
		}

		[Token(Token = "0x60016C9")]
		[Address(RVA = "0xA27348", Offset = "0xA27348", VA = "0xA27348")]
		private static int SinglePassStereoDownscale(bool cameraIsStereo, int size, int scale)
		{
			return default(int);
		}

		[Token(Token = "0x60016CA")]
		[Address(RVA = "0xA23720", Offset = "0xA23720", VA = "0xA23720")]
		internal static void UpdateMipRenderContext(this Camera camera, RenderContext[] renderContexts, RenderDimension rawDimension, int levels, RenderTextureFormat format, int depthBufferBits)
		{
		}

		[Token(Token = "0x60016CB")]
		[Address(RVA = "0xA26E38", Offset = "0xA26E38", VA = "0xA26E38")]
		internal static RenderTexture GetTemporary(RenderContext renderContext, RenderTextureFormat format)
		{
			return null;
		}
	}
	[Token(Token = "0x2000302")]
	internal static class PipelineProperties
	{
		[Token(Token = "0x200056B")]
		internal static class ShaderProperties
		{
			[Token(Token = "0x200057F")]
			internal class DefaultProperty
			{
				[Token(Token = "0x40027C0")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				protected string _name;

				[Token(Token = "0x40027C1")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				protected int _id;

				[Token(Token = "0x17000392")]
				internal string name
				{
					[Token(Token = "0x6001FC9")]
					[Address(RVA = "0xA27A44", Offset = "0xA27A44", VA = "0xA27A44")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000393")]
				internal int id
				{
					[Token(Token = "0x6001FCA")]
					[Address(RVA = "0xA27A4C", Offset = "0xA27A4C", VA = "0xA27A4C")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x6001FCB")]
				[Address(RVA = "0xA27948", Offset = "0xA27948", VA = "0xA27948")]
				internal DefaultProperty(string name)
				{
				}

				[Token(Token = "0x6001FCC")]
				[Address(RVA = "0xA279E0", Offset = "0xA279E0", VA = "0xA279E0")]
				internal DefaultProperty()
				{
				}
			}

			[Token(Token = "0x2000580")]
			internal sealed class CBufferProperty : DefaultProperty
			{
				[Token(Token = "0x40027C2")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
				private int _index;

				[Token(Token = "0x40027C3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				private int _size;

				[Token(Token = "0x17000394")]
				internal int index
				{
					[Token(Token = "0x6001FCD")]
					[Address(RVA = "0xA279D0", Offset = "0xA279D0", VA = "0xA279D0")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x17000395")]
				internal int size
				{
					[Token(Token = "0x6001FCE")]
					[Address(RVA = "0xA279D8", Offset = "0xA279D8", VA = "0xA279D8")]
					get
					{
						return default(int);
					}
				}

				[Token(Token = "0x6001FCF")]
				[Address(RVA = "0xA27984", Offset = "0xA27984", VA = "0xA27984")]
				internal CBufferProperty(string name, int index, int size)
				{
				}
			}

			[Token(Token = "0x4002796")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly DefaultProperty sourceTex;

			[Token(Token = "0x4002797")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly DefaultProperty targetTex;

			[Token(Token = "0x4002798")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly DefaultProperty bloomTex;

			[Token(Token = "0x4002799")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly DefaultProperty bloomTargetTex;

			[Token(Token = "0x400279A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly CBufferProperty bloomSpread;

			[Token(Token = "0x400279B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal static readonly CBufferProperty bloomThreshold;

			[Token(Token = "0x400279C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal static readonly CBufferProperty bloomIntensity;

			[Token(Token = "0x400279D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal static readonly DefaultProperty higherMipBloomTex;
		}

		[Token(Token = "0x200056C")]
		internal static class CommandBufferProperties
		{
			[Token(Token = "0x400279E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal static readonly string commandBufferName;

			[Token(Token = "0x400279F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal static readonly string selectiveRenderBuffer;

			[Token(Token = "0x40027A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal static readonly string bloomDownsampleBuffer;

			[Token(Token = "0x40027A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal static readonly string bloomUpsampleBuffer;

			[Token(Token = "0x40027A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal static readonly string sourceBuffer;

			[Token(Token = "0x40027A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal static readonly string sampleDownsample;

			[Token(Token = "0x40027A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal static readonly string samplePreSample;

			[Token(Token = "0x40027A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal static readonly string sampleUpsample;

			[Token(Token = "0x40027A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal static readonly string sampleComposite;

			[Token(Token = "0x40027A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal static readonly string sampleCreateBuffers;

			[Token(Token = "0x40027A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			internal static readonly string sampleClearBuffers;

			[Token(Token = "0x40027A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			internal static readonly string sampleSetup;

			[Token(Token = "0x40027AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			internal static readonly string sampleCopySource;

			[Token(Token = "0x40027AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			internal static readonly string sampleReplacement;

			[Token(Token = "0x40027AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			internal static readonly string samplePrepare;
		}

		[Token(Token = "0x40021EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly int renderBufferSize;

		[Token(Token = "0x17000299")]
		internal static bool scriptableRenderPipelineActive
		{
			[Token(Token = "0x60016CC")]
			[Address(RVA = "0xA27440", Offset = "0xA27440", VA = "0xA27440")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700029A")]
		internal static bool xrEnabled
		{
			[Token(Token = "0x60016CD")]
			[Address(RVA = "0xA26CF0", Offset = "0xA26CF0", VA = "0xA26CF0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700029B")]
		internal static bool singlePassStereoDoubleWideEnabled
		{
			[Token(Token = "0x60016CE")]
			[Address(RVA = "0xA2740C", Offset = "0xA2740C", VA = "0xA2740C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700029C")]
		internal static bool singlePassStereoInstancedEnabled
		{
			[Token(Token = "0x60016CF")]
			[Address(RVA = "0xA274B8", Offset = "0xA274B8", VA = "0xA274B8")]
			get
			{
				return default(bool);
			}
		}
	}
	[Token(Token = "0x2000303")]
	internal sealed class RenderContext : IDimension
	{
		[Token(Token = "0x40021ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private RenderTextureDescriptor _descriptor;

		[Token(Token = "0x1700029D")]
		public RenderTextureDescriptor descriptor
		{
			[Token(Token = "0x60016D1")]
			[Address(RVA = "0xA27A54", Offset = "0xA27A54", VA = "0xA27A54")]
			get
			{
				return default(RenderTextureDescriptor);
			}
		}

		[Token(Token = "0x1700029E")]
		public RenderDimension renderDimension
		{
			[Token(Token = "0x60016D2")]
			[Address(RVA = "0xA236DC", Offset = "0xA236DC", VA = "0xA236DC", Slot = "6")]
			get
			{
				return default(RenderDimension);
			}
		}

		[Token(Token = "0x1700029F")]
		public bool enableRandomWrite
		{
			[Token(Token = "0x60016D3")]
			[Address(RVA = "0xA27A70", Offset = "0xA27A70", VA = "0xA27A70")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002A0")]
		public int width
		{
			[Token(Token = "0x60016D4")]
			[Address(RVA = "0xA27A7C", Offset = "0xA27A7C", VA = "0xA27A7C", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002A1")]
		public int height
		{
			[Token(Token = "0x60016D5")]
			[Address(RVA = "0xA27A88", Offset = "0xA27A88", VA = "0xA27A88", Slot = "5")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60016D6")]
		[Address(RVA = "0xA22F10", Offset = "0xA22F10", VA = "0xA22F10")]
		internal RenderContext()
		{
		}

		[Token(Token = "0x60016D7")]
		[Address(RVA = "0xA23628", Offset = "0xA23628", VA = "0xA23628")]
		internal void SinglePassStereoAdjustWidth(bool stereoEnabled)
		{
		}

		[Token(Token = "0x60016D8")]
		[Address(RVA = "0xA23480", Offset = "0xA23480", VA = "0xA23480")]
		internal void UpdateRenderContext(Camera camera, RenderTextureFormat format, int depthBufferBits, RenderDimension dimension)
		{
		}
	}
	[Token(Token = "0x2000304")]
	internal static class RenderTargetContext
	{
		[Token(Token = "0x40021EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _renderTargetCount;

		[Token(Token = "0x40021EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static RenderTargetSetup[] _mrtBindingsLegacy;

		[Token(Token = "0x60016D9")]
		[Address(RVA = "0xA270FC", Offset = "0xA270FC", VA = "0xA270FC")]
		internal static void SetRenderTargetContext(List<RenderTexture> renderTargets)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000305")]
	public sealed class Resources : ScriptableObject
	{
		[Token(Token = "0x40021F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Shader _selectiveRenderShader;

		[Token(Token = "0x40021F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Shader _sm20Shader;

		[Token(Token = "0x40021F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Shader _sm25Shader;

		[Token(Token = "0x40021F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Shader _sm30Shader;

		[Token(Token = "0x40021F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Shader _sm35Shader;

		[Token(Token = "0x40021F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Shader _sm40Shader;

		[Token(Token = "0x170002A2")]
		internal Shader selectiveRenderShader
		{
			[Token(Token = "0x60016DD")]
			[Address(RVA = "0xA28068", Offset = "0xA28068", VA = "0xA28068")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A3")]
		internal Shader sm20Shader
		{
			[Token(Token = "0x60016DE")]
			[Address(RVA = "0xA28070", Offset = "0xA28070", VA = "0xA28070")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A4")]
		internal Shader sm25Shader
		{
			[Token(Token = "0x60016DF")]
			[Address(RVA = "0xA28078", Offset = "0xA28078", VA = "0xA28078")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A5")]
		internal Shader sm30Shader
		{
			[Token(Token = "0x60016E0")]
			[Address(RVA = "0xA28080", Offset = "0xA28080", VA = "0xA28080")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A6")]
		internal Shader sm35Shader
		{
			[Token(Token = "0x60016E1")]
			[Address(RVA = "0xA28088", Offset = "0xA28088", VA = "0xA28088")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A7")]
		internal Shader sm40Shader
		{
			[Token(Token = "0x60016E2")]
			[Address(RVA = "0xA28090", Offset = "0xA28090", VA = "0xA28090")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016DB")]
		[Address(RVA = "0xA27FFC", Offset = "0xA27FFC", VA = "0xA27FFC")]
		internal static void ResourcesNotAvailableWarning()
		{
		}

		[Token(Token = "0x60016DC")]
		[Address(RVA = "0xA22BB8", Offset = "0xA22BB8", VA = "0xA22BB8")]
		internal static Resources LoadResourcesAsset()
		{
			return null;
		}

		[Token(Token = "0x60016E3")]
		[Address(RVA = "0xA28098", Offset = "0xA28098", VA = "0xA28098")]
		public Resources()
		{
		}
	}
	[Token(Token = "0x2000306")]
	internal struct Settings
	{
		[Token(Token = "0x40021F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private DebugView _debugView;

		[Token(Token = "0x40021F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private Workflow _workflow;

		[Token(Token = "0x40021F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private LayerMask _selectiveRenderLayerMask;

		[Token(Token = "0x40021F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private MinMaxRange _bloomThreshold;

		[Token(Token = "0x40021FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float _bloomScattering;

		[Token(Token = "0x40021FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float _bloomIntensity;

		[Token(Token = "0x170002A8")]
		internal DebugView debugView
		{
			[Token(Token = "0x60016E4")]
			[Address(RVA = "0x885F84", Offset = "0x885F84", VA = "0x885F84")]
			get
			{
				return default(DebugView);
			}
			[Token(Token = "0x60016E5")]
			[Address(RVA = "0x885F8C", Offset = "0x885F8C", VA = "0x885F8C")]
			set
			{
			}
		}

		[Token(Token = "0x170002A9")]
		internal Workflow workflow
		{
			[Token(Token = "0x60016E6")]
			[Address(RVA = "0x885F94", Offset = "0x885F94", VA = "0x885F94")]
			get
			{
				return default(Workflow);
			}
			[Token(Token = "0x60016E7")]
			[Address(RVA = "0x885F9C", Offset = "0x885F9C", VA = "0x885F9C")]
			set
			{
			}
		}

		[Token(Token = "0x170002AA")]
		internal LayerMask selectiveRenderLayerMask
		{
			[Token(Token = "0x60016E8")]
			[Address(RVA = "0x885FA4", Offset = "0x885FA4", VA = "0x885FA4")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x60016E9")]
			[Address(RVA = "0x885FAC", Offset = "0x885FAC", VA = "0x885FAC")]
			set
			{
			}
		}

		[Token(Token = "0x170002AB")]
		internal MinMaxRange bloomThreshold
		{
			[Token(Token = "0x60016EA")]
			[Address(RVA = "0x885FB4", Offset = "0x885FB4", VA = "0x885FB4")]
			get
			{
				return default(MinMaxRange);
			}
			[Token(Token = "0x60016EB")]
			[Address(RVA = "0x885FBC", Offset = "0x885FBC", VA = "0x885FBC")]
			set
			{
			}
		}

		[Token(Token = "0x170002AC")]
		internal float bloomScattering
		{
			[Token(Token = "0x60016EC")]
			[Address(RVA = "0x885FC4", Offset = "0x885FC4", VA = "0x885FC4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60016ED")]
			[Address(RVA = "0x885FCC", Offset = "0x885FCC", VA = "0x885FCC")]
			set
			{
			}
		}

		[Token(Token = "0x170002AD")]
		internal float bloomIntensity
		{
			[Token(Token = "0x60016EE")]
			[Address(RVA = "0x885FD4", Offset = "0x885FD4", VA = "0x885FD4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60016EF")]
			[Address(RVA = "0x885FDC", Offset = "0x885FDC", VA = "0x885FDC")]
			set
			{
			}
		}

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0xA26CF8", Offset = "0xA26CF8", VA = "0xA26CF8")]
		public static implicit operator Settings(MKGlow input)
		{
			return default(Settings);
		}
	}
}
namespace MK.Glow.Legacy
{
	[Token(Token = "0x2000307")]
	[ExecuteAlways]
	[DisallowMultipleComponent]
	[ImageEffectAllowedInSceneView]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x7F9544", Offset = "0x7F9544")]
	public class MKGlow : MonoBehaviour
	{
		[Token(Token = "0x40021FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DebugView debugView;

		[Token(Token = "0x40021FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Workflow workflow;

		[Token(Token = "0x40021FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LayerMask selectiveRenderLayerMask;

		[Token(Token = "0x40021FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "MinMaxRangeAttribute", RVA = "0x801BB0", Offset = "0x801BB0")]
		public MinMaxRange bloomThreshold;

		[Token(Token = "0x4002200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x801BC8", Offset = "0x801BC8")]
		public float bloomScattering;

		[Token(Token = "0x4002201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float bloomIntensity;

		[Token(Token = "0x4002202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly string legacyBlitKeyword;

		[Token(Token = "0x4002203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Effect _effect;

		[Token(Token = "0x170002AE")]
		private Camera renderingCamera
		{
			[Token(Token = "0x60016F1")]
			[Address(RVA = "0xA26A88", Offset = "0xA26A88", VA = "0xA26A88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016F2")]
		[Address(RVA = "0xA26AD8", Offset = "0xA26AD8", VA = "0xA26AD8")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x60016F3")]
		[Address(RVA = "0xA26B44", Offset = "0xA26B44", VA = "0xA26B44")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x60016F4")]
		[Address(RVA = "0xA26B5C", Offset = "0xA26B5C", VA = "0xA26B5C")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60016F5")]
		[Address(RVA = "0xA26D7C", Offset = "0xA26D7C", VA = "0xA26D7C")]
		public MKGlow()
		{
		}
	}
}
namespace MK.Glow.Example
{
	[Token(Token = "0x2000308")]
	public class Asteroid : MonoBehaviour
	{
		[Token(Token = "0x4002204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Texture2D[] _emissionTextures;

		[Token(Token = "0x4002205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly MinMaxRange _minMaxVelocity;

		[Token(Token = "0x4002206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MinMaxRange _minMaxScale;

		[Token(Token = "0x4002207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MinMaxRange _emissionColorIntensity;

		[Token(Token = "0x4002208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly MinMaxRange _colorChangeTime;

		[Token(Token = "0x4002209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly MinMaxRange _colorIntensityChangeTime;

		[Token(Token = "0x400220A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _nextColorChangeTime;

		[Token(Token = "0x400220B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float _nextColorIntensityChangeTime;

		[Token(Token = "0x400220C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _nextColorIndex;

		[Token(Token = "0x400220D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float _nextColorIntensity;

		[Token(Token = "0x400220E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Color[] _colors;

		[Token(Token = "0x400220F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Color _currentColor;

		[Token(Token = "0x4002210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float _currentColorIntensity;

		[Token(Token = "0x4002211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Material _baseMaterial;

		[Token(Token = "0x4002212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Material _usedMaterial;

		[Token(Token = "0x4002213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Rigidbody _rigidBody;

		[Token(Token = "0x4002214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _emissionColorId;

		[Token(Token = "0x4002215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int _emissionTextureId;

		[Token(Token = "0x60016F6")]
		[Address(RVA = "0xA25038", Offset = "0xA25038", VA = "0xA25038")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016F7")]
		[Address(RVA = "0xA252E8", Offset = "0xA252E8", VA = "0xA252E8")]
		private void Update()
		{
		}

		[Token(Token = "0x60016F8")]
		[Address(RVA = "0xA254E4", Offset = "0xA254E4", VA = "0xA254E4")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x60016F9")]
		[Address(RVA = "0xA25640", Offset = "0xA25640", VA = "0xA25640")]
		public Asteroid()
		{
		}
	}
	[Token(Token = "0x2000309")]
	public class AsteroidSpawner : MonoBehaviour
	{
		[Token(Token = "0x4002216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly float _spawnTime;

		[Token(Token = "0x4002217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _asteroidObject;

		[Token(Token = "0x4002218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int _maxObjects;

		[Token(Token = "0x4002219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int _spawnedObjects;

		[Token(Token = "0x400221A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _time;

		[Token(Token = "0x60016FA")]
		[Address(RVA = "0xA256E8", Offset = "0xA256E8", VA = "0xA256E8")]
		private void Update()
		{
		}

		[Token(Token = "0x60016FB")]
		[Address(RVA = "0xA25868", Offset = "0xA25868", VA = "0xA25868")]
		public AsteroidSpawner()
		{
		}
	}
	[Token(Token = "0x200030A")]
	public class ChangeSettingsLegacy : MonoBehaviour
	{
		[Token(Token = "0x400221B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MKGlow _mkGlow;

		[Token(Token = "0x170002AF")]
		public int debugView
		{
			[Token(Token = "0x60016FE")]
			[Address(RVA = "0xA2591C", Offset = "0xA2591C", VA = "0xA2591C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60016FF")]
			[Address(RVA = "0xA2593C", Offset = "0xA2593C", VA = "0xA2593C")]
			set
			{
			}
		}

		[Token(Token = "0x170002B0")]
		public float bloomThreshold
		{
			[Token(Token = "0x6001700")]
			[Address(RVA = "0xA2595C", Offset = "0xA2595C", VA = "0xA2595C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001701")]
			[Address(RVA = "0xA2597C", Offset = "0xA2597C", VA = "0xA2597C")]
			set
			{
			}
		}

		[Token(Token = "0x170002B1")]
		public float bloomClamp
		{
			[Token(Token = "0x6001702")]
			[Address(RVA = "0xA2599C", Offset = "0xA2599C", VA = "0xA2599C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001703")]
			[Address(RVA = "0xA259BC", Offset = "0xA259BC", VA = "0xA259BC")]
			set
			{
			}
		}

		[Token(Token = "0x170002B2")]
		public float bloomScattering
		{
			[Token(Token = "0x6001704")]
			[Address(RVA = "0xA259DC", Offset = "0xA259DC", VA = "0xA259DC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001705")]
			[Address(RVA = "0xA259FC", Offset = "0xA259FC", VA = "0xA259FC")]
			set
			{
			}
		}

		[Token(Token = "0x170002B3")]
		public float bloomIntensity
		{
			[Token(Token = "0x6001706")]
			[Address(RVA = "0xA25A1C", Offset = "0xA25A1C", VA = "0xA25A1C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001707")]
			[Address(RVA = "0xA25A3C", Offset = "0xA25A3C", VA = "0xA25A3C")]
			set
			{
			}
		}

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0xA258C4", Offset = "0xA258C4", VA = "0xA258C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001708")]
		[Address(RVA = "0xA25A5C", Offset = "0xA25A5C", VA = "0xA25A5C")]
		public ChangeSettingsLegacy()
		{
		}
	}
	[Token(Token = "0x200030B")]
	public class Cube : MonoBehaviour
	{
		[Token(Token = "0x400221C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly MinMaxRange _minMaxSpeed;

		[Token(Token = "0x400221D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MinMaxRange _emissionColorIntensity;

		[Token(Token = "0x400221E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly MinMaxRange _colorChangeTime;

		[Token(Token = "0x400221F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly MinMaxRange _colorIntensityChangeTime;

		[Token(Token = "0x4002220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MinMaxRange _directionSwitchTime;

		[Token(Token = "0x4002221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _nextColorChangeTime;

		[Token(Token = "0x4002222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float _nextColorIntensityChangeTime;

		[Token(Token = "0x4002223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int _nextColorIndex;

		[Token(Token = "0x4002224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float _nextColorIntensity;

		[Token(Token = "0x4002225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _nextDirectionChangeTime;

		[Token(Token = "0x4002226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float _currentSpeed;

		[Token(Token = "0x4002227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Color[] _colors;

		[Token(Token = "0x4002228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Color _currentColor;

		[Token(Token = "0x4002229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float _currentColorIntensity;

		[Token(Token = "0x400222A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Material _baseMaterial;

		[Token(Token = "0x400222B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Material _usedMaterial;

		[Token(Token = "0x400222C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _emissionColorId;

		[Token(Token = "0x400222D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private int _colorId;

		[Token(Token = "0x400222E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 _startPos;

		[Token(Token = "0x400222F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		private Vector3 _endPos;

		[Token(Token = "0x4002230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool _forward;

		[Token(Token = "0x4002231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Vector3 _forwardDirection;

		[Token(Token = "0x170002B4")]
		private Vector3 _targetPosition
		{
			[Token(Token = "0x6001709")]
			[Address(RVA = "0xA25A64", Offset = "0xA25A64", VA = "0xA25A64")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x600170A")]
		[Address(RVA = "0xA25AA0", Offset = "0xA25AA0", VA = "0xA25AA0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600170B")]
		[Address(RVA = "0xA25D58", Offset = "0xA25D58", VA = "0xA25D58")]
		private void Update()
		{
		}

		[Token(Token = "0x600170C")]
		[Address(RVA = "0xA26224", Offset = "0xA26224", VA = "0xA26224")]
		public Cube()
		{
		}
	}
	[Token(Token = "0x200030C")]
	public class DestroyOpenMenuText : MonoBehaviour
	{
		[Token(Token = "0x4002232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text _text;

		[Token(Token = "0x4002233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Outline _outline;

		[Token(Token = "0x4002234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _blinkSpeed;

		[Token(Token = "0x4002235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float _alpha;

		[Token(Token = "0x4002236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color _textColor;

		[Token(Token = "0x4002237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Color _outlineColor;

		[Token(Token = "0x4002238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _forward;

		[Token(Token = "0x600170D")]
		[Address(RVA = "0xA262E8", Offset = "0xA262E8", VA = "0xA262E8")]
		private void Update()
		{
		}

		[Token(Token = "0x600170E")]
		[Address(RVA = "0xA2643C", Offset = "0xA2643C", VA = "0xA2643C")]
		public DestroyOpenMenuText()
		{
		}
	}
	[Token(Token = "0x200030D")]
	public class HandleMenu : MonoBehaviour
	{
		[Token(Token = "0x4002239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _canvas;

		[Token(Token = "0x600170F")]
		[Address(RVA = "0xA264C0", Offset = "0xA264C0", VA = "0xA264C0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001710")]
		[Address(RVA = "0xA26530", Offset = "0xA26530", VA = "0xA26530")]
		public HandleMenu()
		{
		}
	}
	[Token(Token = "0x200030E")]
	public class MoveCamera : MonoBehaviour
	{
		[Token(Token = "0x400223A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _distance;

		[Token(Token = "0x400223B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _horizontalSpeed;

		[Token(Token = "0x400223C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _verticalSpeed;

		[Token(Token = "0x400223D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _centerTransform;

		[Token(Token = "0x6001711")]
		[Address(RVA = "0xA26538", Offset = "0xA26538", VA = "0xA26538")]
		private void Update()
		{
		}

		[Token(Token = "0x6001712")]
		[Address(RVA = "0xA26710", Offset = "0xA26710", VA = "0xA26710")]
		public MoveCamera()
		{
		}
	}
	[Token(Token = "0x200030F")]
	public class RotateObject : MonoBehaviour
	{
		[Token(Token = "0x400223E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Vector3 _rotation;

		[Token(Token = "0x400223F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private readonly float _heightMovement;

		[Token(Token = "0x4002240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly float _heightMovementSpeed;

		[Token(Token = "0x4002241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 _startPosition;

		[Token(Token = "0x6001713")]
		[Address(RVA = "0xA2672C", Offset = "0xA2672C", VA = "0xA2672C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001714")]
		[Address(RVA = "0xA26768", Offset = "0xA26768", VA = "0xA26768")]
		private void Update()
		{
		}

		[Token(Token = "0x6001715")]
		[Address(RVA = "0xA268F0", Offset = "0xA268F0", VA = "0xA268F0")]
		public RotateObject()
		{
		}
	}
	[Token(Token = "0x2000310")]
	public class SpectateObjects : MonoBehaviour
	{
		[Token(Token = "0x4002242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject[] _gameObjects;

		[Token(Token = "0x4002243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _currentObject;

		[Token(Token = "0x6001716")]
		[Address(RVA = "0xA26974", Offset = "0xA26974", VA = "0xA26974")]
		public void SwitchObject()
		{
		}

		[Token(Token = "0x6001717")]
		[Address(RVA = "0xA26A28", Offset = "0xA26A28", VA = "0xA26A28")]
		public SpectateObjects()
		{
		}
	}
}
namespace MK.Glass
{
	[Token(Token = "0x2000311")]
	public static class MKGlassFreeMaterialHelper
	{
		[Token(Token = "0x200056D")]
		public static class PropertyNames
		{
			[Token(Token = "0x40027AD")]
			public const string SHOW_MAIN_BEHAVIOR = "_MKEditorShowMainBehavior";

			[Token(Token = "0x40027AE")]
			public const string SHOW_LIGHT_BEHAVIOR = "_MKEditorShowLightBehavior";

			[Token(Token = "0x40027AF")]
			public const string SHOW_RENDER_BEHAVIOR = "_MKEditorShowRenderBehavior";

			[Token(Token = "0x40027B0")]
			public const string SHOW_SPECULAR_BEHAVIOR = "_MKEditorShowSpecularBehavior";

			[Token(Token = "0x40027B1")]
			public const string SHOW_RIM_BEHAVIOR = "_MKEditorShowRimBehavior";

			[Token(Token = "0x40027B2")]
			public const string MAIN_TEXTURE = "_MainTex";

			[Token(Token = "0x40027B3")]
			public const string MAIN_COLOR = "_Color";

			[Token(Token = "0x40027B4")]
			public const string MAIN_TINT = "_MainTint";

			[Token(Token = "0x40027B5")]
			public const string BUMP_MAP = "_BumpMap";

			[Token(Token = "0x40027B6")]
			public const string DISTORTION = "_Distortion";

			[Token(Token = "0x40027B7")]
			public const string RIM_COLOR = "_RimColor";

			[Token(Token = "0x40027B8")]
			public const string RIM_SIZE = "_RimSize";

			[Token(Token = "0x40027B9")]
			public const string RIM_INTENSITY = "_RimIntensity";

			[Token(Token = "0x40027BA")]
			public const string SPECULAR_SHININESS = "_Shininess";

			[Token(Token = "0x40027BB")]
			public const string SPEC_COLOR = "_SpecColor";

			[Token(Token = "0x40027BC")]
			public const string SPECULAR_INTENSITY = "_SpecularIntensity";

			[Token(Token = "0x40027BD")]
			public const string EMISSION_COLOR = "_EmissionColor";

			[Token(Token = "0x40027BE")]
			public const string EMISSION = "_Emission";
		}

		[Token(Token = "0x6001718")]
		[Address(RVA = "0xA21F94", Offset = "0xA21F94", VA = "0xA21F94")]
		public static void SetMainTint(Material material, float tint)
		{
		}

		[Token(Token = "0x6001719")]
		[Address(RVA = "0xA22004", Offset = "0xA22004", VA = "0xA22004")]
		public static float GetMainTint(Material material)
		{
			return default(float);
		}

		[Token(Token = "0x600171A")]
		[Address(RVA = "0xA22064", Offset = "0xA22064", VA = "0xA22064")]
		public static void SetMainTexture(Material material, Texture tex)
		{
		}

		[Token(Token = "0x600171B")]
		[Address(RVA = "0xA220D4", Offset = "0xA220D4", VA = "0xA220D4")]
		public static Texture GetMainTexture(Material material)
		{
			return null;
		}

		[Token(Token = "0x600171C")]
		[Address(RVA = "0xA22134", Offset = "0xA22134", VA = "0xA22134")]
		public static void SetMainColor(Material material, Color color)
		{
		}

		[Token(Token = "0x600171D")]
		[Address(RVA = "0xA221C4", Offset = "0xA221C4", VA = "0xA221C4")]
		public static Color GetMainColor(Material material)
		{
			return default(Color);
		}

		[Token(Token = "0x600171E")]
		[Address(RVA = "0xA22224", Offset = "0xA22224", VA = "0xA22224")]
		public static void SetNormalmap(Material material, Texture tex)
		{
		}

		[Token(Token = "0x600171F")]
		[Address(RVA = "0xA22294", Offset = "0xA22294", VA = "0xA22294")]
		public static Texture GetBumpMap(Material material)
		{
			return null;
		}

		[Token(Token = "0x6001720")]
		[Address(RVA = "0xA222F4", Offset = "0xA222F4", VA = "0xA222F4")]
		public static void SetDistortion(Material material, float distortion)
		{
		}

		[Token(Token = "0x6001721")]
		[Address(RVA = "0xA22364", Offset = "0xA22364", VA = "0xA22364")]
		public static float GetDistortion(Material material)
		{
			return default(float);
		}

		[Token(Token = "0x6001722")]
		[Address(RVA = "0xA223C4", Offset = "0xA223C4", VA = "0xA223C4")]
		public static void SetRimColor(Material material, Color color)
		{
		}

		[Token(Token = "0x6001723")]
		[Address(RVA = "0xA22454", Offset = "0xA22454", VA = "0xA22454")]
		public static Color GetRimColor(Material material)
		{
			return default(Color);
		}

		[Token(Token = "0x6001724")]
		[Address(RVA = "0xA224B4", Offset = "0xA224B4", VA = "0xA224B4")]
		public static void SetRimSize(Material material, float size)
		{
		}

		[Token(Token = "0x6001725")]
		[Address(RVA = "0xA22524", Offset = "0xA22524", VA = "0xA22524")]
		public static float GetRimSize(Material material)
		{
			return default(float);
		}

		[Token(Token = "0x6001726")]
		[Address(RVA = "0xA22584", Offset = "0xA22584", VA = "0xA22584")]
		public static void SetRimIntensity(Material material, float intensity)
		{
		}

		[Token(Token = "0x6001727")]
		[Address(RVA = "0xA225F4", Offset = "0xA225F4", VA = "0xA225F4")]
		public static float GetRimIntensity(Material material)
		{
			return default(float);
		}

		[Token(Token = "0x6001728")]
		[Address(RVA = "0xA22654", Offset = "0xA22654", VA = "0xA22654")]
		public static void SetSpecularShininess(Material material, float shininess)
		{
		}

		[Token(Token = "0x6001729")]
		[Address(RVA = "0xA226C4", Offset = "0xA226C4", VA = "0xA226C4")]
		public static float GetSpecularShininess(Material material)
		{
			return default(float);
		}

		[Token(Token = "0x600172A")]
		[Address(RVA = "0xA22724", Offset = "0xA22724", VA = "0xA22724")]
		public static void SetSpecularColor(Material material, Color color)
		{
		}

		[Token(Token = "0x600172B")]
		[Address(RVA = "0xA227B4", Offset = "0xA227B4", VA = "0xA227B4")]
		public static Color GetSpecularColor(Material material)
		{
			return default(Color);
		}

		[Token(Token = "0x600172C")]
		[Address(RVA = "0xA22814", Offset = "0xA22814", VA = "0xA22814")]
		public static void SetSpecularIntensity(Material material, float intensity)
		{
		}

		[Token(Token = "0x600172D")]
		[Address(RVA = "0xA22884", Offset = "0xA22884", VA = "0xA22884")]
		public static float GetSpecularIntensity(Material material)
		{
			return default(float);
		}

		[Token(Token = "0x600172E")]
		[Address(RVA = "0xA228E4", Offset = "0xA228E4", VA = "0xA228E4")]
		public static void SetEmissionColor(Material material, Color color)
		{
		}

		[Token(Token = "0x600172F")]
		[Address(RVA = "0xA22974", Offset = "0xA22974", VA = "0xA22974")]
		public static Color GetEmissionColor(Material material)
		{
			return default(Color);
		}
	}
}
